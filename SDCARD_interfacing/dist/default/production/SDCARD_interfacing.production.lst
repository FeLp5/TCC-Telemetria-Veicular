

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jan 18 15:49:47 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           ; Version 1.45
    47                           ; Generated 16/11/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4550 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	idataBANK0
    82  0000'                    __pidataBANK0:
    83                           	opt stack 0
    84                           
    85                           ;initializer for _fileName
    86  0000' 63                 	db	99
    87  0001' 68                 	db	104
    88  0002' 65                 	db	101
    89  0003' 63                 	db	99
    90  0004' 6B                 	db	107
    91  0005' 2E                 	db	46
    92  0006' 74                 	db	116
    93  0007' 78                 	db	120
    94  0008' 74                 	db	116
    95  0009' 00                 	db	0
    96                           
    97                           ;initializer for escreve_inteiro_uart@F3956
    98  000A' 30                 	db	48
    99  000B' 30                 	db	48
   100  000C' 30                 	db	48
   101  000D' 30                 	db	48
   102  000E' 30                 	db	48
   103  000F' 30                 	db	48
   104  0010' 00                 	db	0
   105                           
   106                           	psect	smallconst
   107  0000'                    __psmallconst:
   108                           	opt stack 0
   109  0000' 00                 	db	0
   110  0001'                    leitura_chave@F3842:
   111                           	opt stack 0
   112  0001' 20                 	db	32
   113  0002' 49                 	db	73
   114  0003' 67                 	db	103
   115  0004' 6E                 	db	110
   116  0005' 20                 	db	32
   117  0006' 4F                 	db	79
   118  0007' 6E                 	db	110
   119  0008' 00                 	db	0
   120  0009' 00                 	db	0
   121  000A' 00                 	db	0
   122  000B' 00                 	db	0
   123  000C' 00                 	db	0
   124  000D' 00                 	db	0
   125  000E' 00                 	db	0
   126  000F' 00                 	db	0
   127  0010' 00                 	db	0
   128  0011' 00                 	db	0
   129  0012'                    __end_ofleitura_chave@F3842:
   130                           	opt stack 0
   131  0012'                    leitura_chave@F3840:
   132                           	opt stack 0
   133  0012' 20                 	db	32
   134  0013' 49                 	db	73
   135  0014' 67                 	db	103
   136  0015' 6E                 	db	110
   137  0016' 20                 	db	32
   138  0017' 43                 	db	67
   139  0018' 72                 	db	114
   140  0019' 61                 	db	97
   141  001A' 6E                 	db	110
   142  001B' 6B                 	db	107
   143  001C' 00                 	db	0
   144  001D' 00                 	db	0
   145  001E' 00                 	db	0
   146  001F' 00                 	db	0
   147  0020' 00                 	db	0
   148  0021' 00                 	db	0
   149  0022' 00                 	db	0
   150  0023'                    __end_ofleitura_chave@F3840:
   151                           	opt stack 0
   152  0023'                    leitura_chave@F3838:
   153                           	opt stack 0
   154  0023' 20                 	db	32
   155  0024' 49                 	db	73
   156  0025' 67                 	db	103
   157  0026' 6E                 	db	110
   158  0027' 20                 	db	32
   159  0028' 4F                 	db	79
   160  0029' 66                 	db	102
   161  002A' 66                 	db	102
   162  002B' 00                 	db	0
   163  002C' 00                 	db	0
   164  002D' 00                 	db	0
   165  002E' 00                 	db	0
   166  002F' 00                 	db	0
   167  0030' 00                 	db	0
   168  0031' 00                 	db	0
   169  0032' 00                 	db	0
   170  0033' 00                 	db	0
   171  0034'                    __end_ofleitura_chave@F3838:
   172                           	opt stack 0
   173  0034'                    mensagem_inicial@F3939:
   174                           	opt stack 0
   175  0034' 20                 	db	32
   176  0035' 31                 	db	49
   177  0036' 38                 	db	56
   178  0037' 2F                 	db	47
   179  0038' 30                 	db	48
   180  0039' 31                 	db	49
   181  003A' 2F                 	db	47
   182  003B' 32                 	db	50
   183  003C' 30                 	db	48
   184  003D' 32                 	db	50
   185  003E' 32                 	db	50
   186  003F' 20                 	db	32
   187  0040' 20                 	db	32
   188  0041' 20                 	db	32
   189  0042' 00                 	db	0
   190  0043' 00                 	db	0
   191  0044' 00                 	db	0
   192  0045'                    __end_ofmensagem_inicial@F3939:
   193                           	opt stack 0
   194  0045'                    mensagem_inicial@F3937:
   195                           	opt stack 0
   196  0045' 53                 	db	83
   197  0046' 44                 	db	68
   198  0047' 43                 	db	67
   199  0048' 61                 	db	97
   200  0049' 72                 	db	114
   201  004A' 64                 	db	100
   202  004B' 20                 	db	32
   203  004C' 49                 	db	73
   204  004D' 6E                 	db	110
   205  004E' 69                 	db	105
   206  004F' 74                 	db	116
   207  0050' 20                 	db	32
   208  0051' 20                 	db	32
   209  0052' 20                 	db	32
   210  0053' 00                 	db	0
   211  0054' 00                 	db	0
   212  0055' 00                 	db	0
   213  0056'                    __end_ofmensagem_inicial@F3937:
   214                           	opt stack 0
   215  0000                     _PORTEbits	set	3972
   216  0000                     _PORTAbits	set	3968
   217  0000                     _PORTCbits	set	3970
   218  0000                     _RCSTA	set	4011
   219  0000                     _TXSTA	set	4012
   220  0000                     _RCREG	set	4014
   221  0000                     _RCSTAbits	set	4011
   222  0000                     _TXREG	set	4013
   223  0000                     _TRISCbits	set	3988
   224  0000                     _SPBRG	set	4015
   225  0000                     _PR2	set	4043
   226  0000                     _TMR2	set	4044
   227  0000                     _T2CON	set	4042
   228  0000                     _OSCCONbits	set	4051
   229  0000                     _TRISE	set	3990
   230  0000                     _TRISC	set	3988
   231  0000                     _TRISA	set	3986
   232  0000                     _TRISD	set	3989
   233  0000                     _LATB	set	3978
   234  0000                     _TRISB	set	3987
   235  0000                     _T0CONbits	set	4053
   236  0000                     _TMR0L	set	4054
   237  0000                     _TMR0H	set	4055
   238  0000                     _PIE1	set	3997
   239  0000                     _INTCON3	set	4080
   240  0000                     _INTCON2	set	4081
   241  0000                     _INTCON	set	4082
   242  0000                     _SPPCFG	set	3939
   243  0000                     _SPPCON	set	3941
   244  0000                     _T0CON	set	4053
   245  0000                     _ADRESL	set	4035
   246  0000                     _ADRESH	set	4036
   247  0000                     _ADCON0	set	4034
   248  0000                     _ADCON0bits	set	4034
   249  0000                     _ADCON2bits	set	4032
   250  0000                     _ADCON1bits	set	4033
   251  0000                     _ADCON1	set	4033
   252  0000                     _SSPCON1	set	4038
   253  0000                     _SSPBUF	set	4041
   254  0000                     _SSPSTATbits	set	4039
   255  0000                     _SSPCON1bits	set	4038
   256  0000                     _LATBbits	set	3978
   257  0000                     _PCL	set	4089
   258  0000                     _PCLATH	set	4090
   259  0000                     _INTCONbits	set	4082
   260  0000                     _PIR1bits	set	3998
   261  0000                     _PIE1bits	set	3997
   262  0000                     _RCIF	set	31989
   263  0000                     _TRMT	set	32097
   264  0000                     _TXEN	set	32101
   265  0000                     _CREN	set	32092
   266  0000                     _SPEN	set	32095
   267  0000                     _SYNC	set	32100
   268  0000                     _BRGH	set	32098
   269  0000                     _TMR2IF	set	31985
   270  0000                     _INT0IE	set	32660
   271  0000                     _INT0IF	set	32657
   272  0000                     _T0IF	set	32658
   273  0000                     _TMR0IF	set	32658
   274  0056'                    STR_4:
   275  0056' 53                 	db	83	;'S'
   276  0057' 50                 	db	80	;'P'
   277  0058' 49                 	db	73	;'I'
   278  0059' 20                 	db	32
   279  005A' 63                 	db	99	;'c'
   280  005B' 6F                 	db	111	;'o'
   281  005C' 6E                 	db	110	;'n'
   282  005D' 66                 	db	102	;'f'
   283  005E' 69                 	db	105	;'i'
   284  005F' 67                 	db	103	;'g'
   285  0060' 75                 	db	117	;'u'
   286  0061' 72                 	db	114	;'r'
   287  0062' 61                 	db	97	;'a'
   288  0063' 64                 	db	100	;'d'
   289  0064' 61                 	db	97	;'a'
   290  0065' 21                 	db	33
   291  0066' 00                 	db	0
   292  0067'                    STR_3:
   293  0067' 6D                 	db	109	;'m'
   294  0068' 6F                 	db	111	;'o'
   295  0069' 75                 	db	117	;'u'
   296  006A' 6E                 	db	110	;'n'
   297  006B' 74                 	db	116	;'t'
   298  006C' 20                 	db	32
   299  006D' 66                 	db	102	;'f'
   300  006E' 69                 	db	105	;'i'
   301  006F' 6C                 	db	108	;'l'
   302  0070' 65                 	db	101	;'e'
   303  0071' 20                 	db	32
   304  0072' 73                 	db	115	;'s'
   305  0073' 79                 	db	121	;'y'
   306  0074' 73                 	db	115	;'s'
   307  0075' 00                 	db	0
   308  0076'                    STR_2:
   309  0076' 20                 	db	32
   310  0077' 20                 	db	32
   311  0078' 20                 	db	32
   312  0079' 20                 	db	32
   313  007A' 20                 	db	32
   314  007B' 20                 	db	32
   315  007C' 20                 	db	32
   316  007D' 20                 	db	32
   317  007E' 20                 	db	32
   318  007F' 20                 	db	32
   319  0080' 20                 	db	32
   320  0081' 20                 	db	32
   321  0082' 20                 	db	32
   322  0083' 00                 	db	0
   323  0084'                    STR_1:
   324  0084' 41                 	db	65	;'A'
   325  0085' 74                 	db	116	;'t'
   326  0086' 74                 	db	116	;'t'
   327  0087' 65                 	db	101	;'e'
   328  0088' 6D                 	db	109	;'m'
   329  0089' 70                 	db	112	;'p'
   330  008A' 74                 	db	116	;'t'
   331  008B' 69                 	db	105	;'i'
   332  008C' 6E                 	db	110	;'n'
   333  008D' 67                 	db	103	;'g'
   334  008E' 20                 	db	32
   335  008F' 74                 	db	116	;'t'
   336  0090' 6F                 	db	111	;'o'
   337  0091' 00                 	db	0
   338  0092'                    STR_5:
   339  0092' 61                 	db	97	;'a'
   340  0093' 6C                 	db	108	;'l'
   341  0094' 6C                 	db	108	;'l'
   342  0095' 20                 	db	32
   343  0096' 77                 	db	119	;'w'
   344  0097' 6F                 	db	111	;'o'
   345  0098' 72                 	db	114	;'r'
   346  0099' 6B                 	db	107	;'k'
   347  009A' 69                 	db	105	;'i'
   348  009B' 6E                 	db	110	;'n'
   349  009C' 00                 	db	0
   350  009D' 0D                 	db	13
   351  009E' 0A                 	db	10
   352  009F' 00                 	db	0
   353  00A0' 00                 	db	0	; dummy byte at the end
   354  0000                     
   355                           ; #config settings
   356                           
   357                           	psect	cinit
   358  0000'                    __pcinit:
   359                           	opt stack 0
   360  0000'                    start_initialization:
   361                           	opt stack 0
   362  0000'                    __initialization:
   363                           	opt stack 0
   364                           
   365                           ; Initialize objects allocated to BANK0 (17 bytes)
   366                           ; load TBLPTR registers with __pidataBANK0
   367  0000' 0E00'              	movlw	low __pidataBANK0
   368  0002' 6EF6               	movwf	tblptrl,c
   369  0004' 0E00'              	movlw	high __pidataBANK0
   370  0006' 6EF7               	movwf	tblptrh,c
   371  0008' 0E00'              	movlw	low (__pidataBANK0 shr (0+16))
   372  000A' 6EF8               	movwf	tblptru,c
   373  000C' EE00' F000'        	lfsr	0,__pdataBANK0
   374  0010' EE10 F011          	lfsr	1,17
   375  0014'                    copy_data0:
   376  0014' 0009               	tblrd		*+
   377  0016' CFF5 FFEE          	movff	tablat,postinc0
   378  001A' 50E5               	movf	postdec1,w,c
   379  001C' 50E1               	movf	fsr1l,w,c
   380  001E' E1FA               	bnz	copy_data0
   381                           
   382                           ; Clear objects allocated to BANK0 (48 bytes)
   383  0020' EE00' F000'        	lfsr	0,__pbssBANK0
   384  0024' 0E30               	movlw	48
   385  0026'                    clear_0:
   386  0026' 6AEE               	clrf	postinc0,c
   387  0028' 06E8               	decf	wreg,f,c
   388  002A' E1FD               	bnz	clear_0
   389                           
   390                           ; Clear objects allocated to COMRAM (30 bytes)
   391  002C' EE00' F000'        	lfsr	0,__pbssCOMRAM
   392  0030' 0E1E               	movlw	30
   393  0032'                    clear_1:
   394  0032' 6AEE               	clrf	postinc0,c
   395  0034' 06E8               	decf	wreg,f,c
   396  0036' E1FD               	bnz	clear_1
   397  0038'                    end_of_initialization:
   398                           	opt stack 0
   399  0038'                    __end_of__initialization:
   400                           	opt stack 0
   401  0038' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   402  003A' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   403  003C' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
   404  003E' 6EF8               	movwf	tblptru,c
   405  0040' 0100               	movlb	0
   406  0042' EF00' F000'        	goto	_main	;jump to C main() function
   407                           tblptru	equ	0xFF8
   408                           tblptrh	equ	0xFF7
   409                           tblptrl	equ	0xFF6
   410                           tablat	equ	0xFF5
   411                           postinc0	equ	0xFEE
   412                           wreg	equ	0xFE8
   413                           postdec1	equ	0xFE5
   414                           fsr1l	equ	0xFE1
   415                           
   416                           	psect	bssCOMRAM
   417  0000'                    __pbssCOMRAM:
   418                           	opt stack 0
   419  0000'                    _info_chaves:
   420                           	opt stack 0
   421  0000'                    	ds	7
   422  0007'                    _tempo_tarefa:
   423                           	opt stack 0
   424  0007'                    	ds	4
   425  000B'                    _tempo_backup:
   426                           	opt stack 0
   427  000B'                    	ds	4
   428  000F'                    _p_tarefas:
   429                           	opt stack 0
   430  000F'                    	ds	4
   431  0013'                    _flag:
   432                           	opt stack 0
   433  0013'                    	ds	2
   434  0015'                    _timeout_tarefa:
   435                           	opt stack 0
   436  0015'                    	ds	2
   437  0017'                    timer_dois@flag:
   438                           	opt stack 0
   439  0017'                    	ds	1
   440  0018'                    _estado:
   441                           	opt stack 0
   442  0018'                    	ds	1
   443  0019'                    _dado:
   444                           	opt stack 0
   445  0019'                    	ds	1
   446  001A'                    acende_led4@flag:
   447                           	opt stack 0
   448  001A'                    	ds	1
   449  001B'                    _tarefa_em_execucao:
   450                           	opt stack 0
   451  001B'                    	ds	1
   452  001C'                    _sinaliza_int_timer:
   453                           	opt stack 0
   454  001C'                    	ds	1
   455  001D'                    _data_uart_recebe:
   456                           	opt stack 0
   457  001D'                    	ds	1
   458                           tblptru	equ	0xFF8
   459                           tblptrh	equ	0xFF7
   460                           tblptrl	equ	0xFF6
   461                           tablat	equ	0xFF5
   462                           postinc0	equ	0xFEE
   463                           wreg	equ	0xFE8
   464                           postdec1	equ	0xFE5
   465                           fsr1l	equ	0xFE1
   466                           
   467                           	psect	bssBANK0
   468  0000'                    __pbssBANK0:
   469                           	opt stack 0
   470  0000'                    _folder:
   471                           	opt stack 0
   472  0000'                    	ds	48
   473                           tblptru	equ	0xFF8
   474                           tblptrh	equ	0xFF7
   475                           tblptrl	equ	0xFF6
   476                           tablat	equ	0xFF5
   477                           postinc0	equ	0xFEE
   478                           wreg	equ	0xFE8
   479                           postdec1	equ	0xFE5
   480                           fsr1l	equ	0xFE1
   481                           
   482                           	psect	dataBANK0
   483  0000'                    __pdataBANK0:
   484                           	opt stack 0
   485  0000'                    _fileName:
   486                           	opt stack 0
   487  0000'                    	ds	10
   488  000A'                    escreve_inteiro_uart@F3956:
   489                           	opt stack 0
   490  000A'                    	ds	7
   491                           tblptru	equ	0xFF8
   492                           tblptrh	equ	0xFF7
   493                           tblptrl	equ	0xFF6
   494                           tablat	equ	0xFF5
   495                           postinc0	equ	0xFEE
   496                           wreg	equ	0xFE8
   497                           postdec1	equ	0xFE5
   498                           fsr1l	equ	0xFE1
   499                           
   500                           	psect	cstackBANK0
   501  0000'                    __pcstackBANK0:
   502                           	opt stack 0
   503  0000'                    configura_baudrate_uart@baudrate:
   504                           	opt stack 0
   505  0000'                    mensagem_inicial@msg_linha_um:
   506                           	opt stack 0
   507                           
   508                           ; 17 bytes @ 0x0
   509  0000'                    	ds	4
   510  0004'                    ??_configura_baudrate_uart:
   511                           
   512                           ; 1 bytes @ 0x4
   513  0004'                    	ds	8
   514  000C'                    configura_baudrate_uart@x:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0xC
   518  000C'                    	ds	5
   519  0011'                    mensagem_inicial@msg_dois:
   520                           	opt stack 0
   521                           
   522                           ; 17 bytes @ 0x11
   523  0011'                    	ds	17
   524                           tblptru	equ	0xFF8
   525                           tblptrh	equ	0xFF7
   526                           tblptrl	equ	0xFF6
   527                           tablat	equ	0xFF5
   528                           postinc0	equ	0xFEE
   529                           wreg	equ	0xFE8
   530                           postdec1	equ	0xFE5
   531                           fsr1l	equ	0xFE1
   532                           
   533                           	psect	cstackCOMRAM
   534  0000'                    __pcstackCOMRAM:
   535                           	opt stack 0
   536  0000'                    _posicao_cursor_lcd$1:
   537                           	opt stack 0
   538  0000'                    _escreve_frase_ram_lcd$0:
   539                           	opt stack 0
   540  0000'                    i2write_timer_zero@timer0:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x0
   544  0000'                    	ds	2
   545  0002'                    i2write_timer_zero@timer:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x2
   549  0002'                    	ds	2
   550  0004'                    ??_isr:
   551                           
   552                           ; 1 bytes @ 0x4
   553  0004'                    	ds	20
   554  0018'                    isr@cont:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x18
   558  0018'                    	ds	1
   559  0019'                    ??_mensagem_inicial:
   560  0019'                    ??_shrc_seta_bit:
   561  0019'                    ??_shrc_apaga_bit:
   562  0019'                    ?___aldiv:
   563                           	opt stack 0
   564  0019'                    envia_dados_shrc@contador:
   565                           	opt stack 0
   566  0019'                    inicializa_SPI@SPI_mode:
   567                           	opt stack 0
   568  0019'                    WriteSPI_@TempVar:
   569                           	opt stack 0
   570  0019'                    write_timer_zero@timer0:
   571                           	opt stack 0
   572  0019'                    ___aldiv@dividend:
   573                           	opt stack 0
   574                           
   575                           ; 4 bytes @ 0x19
   576  0019'                    	ds	1
   577  001A'                    envia_dados_shrc@data_to_shrc:
   578                           	opt stack 0
   579  001A'                    WriteSPI_@dado:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0x1A
   583  001A'                    	ds	1
   584  001B'                    shrc_seta_bit@posicao_bit:
   585                           	opt stack 0
   586  001B'                    shrc_apaga_bit@posicao_bit:
   587                           	opt stack 0
   588  001B'                    write_timer_zero@timer:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x1B
   592  001B'                    	ds	1
   593  001C'                    ??_SDCard:
   594                           
   595                           ; 1 bytes @ 0x1C
   596  001C'                    	ds	1
   597  001D'                    ___aldiv@divisor:
   598                           	opt stack 0
   599                           
   600                           ; 4 bytes @ 0x1D
   601  001D'                    	ds	1
   602  001E'                    
   603                           ; 1 bytes @ 0x1E
   604  001E'                    	ds	2
   605  0020'                    escalonador@cont:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x20
   609  0020'                    	ds	1
   610  0021'                    ___aldiv@counter:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x21
   614  0021'                    	ds	1
   615  0022'                    ___aldiv@sign:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x22
   619  0022'                    	ds	1
   620  0023'                    ___aldiv@quotient:
   621                           	opt stack 0
   622                           
   623                           ; 4 bytes @ 0x23
   624  0023'                    	ds	4
   625  0027'                    tblptru	equ	0xFF8
   626                           tblptrh	equ	0xFF7
   627                           tblptrl	equ	0xFF6
   628                           tablat	equ	0xFF5
   629                           postinc0	equ	0xFEE
   630                           wreg	equ	0xFE8
   631                           postdec1	equ	0xFE5
   632                           fsr1l	equ	0xFE1
   633                           
   634                           ; 1 bytes @ 0x27
   635 ;;
   636 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   637 ;;
   638 ;; *************** function _main *****************
   639 ;; Defined at:
   640 ;;		line 242 in file "main.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, bsr, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   654 ;;      Params:         0       0       0       0       0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0       0       0       0       0
   656 ;;      Temps:          0       0       0       0       0       0       0       0       0
   657 ;;      Totals:         0       0       0       0       0       0       0       0       0
   658 ;;Total ram usage:        0 bytes
   659 ;; Hardware stack levels required when called:    6
   660 ;; This function calls:
   661 ;;		_controle_shrc
   662 ;;		_escalonador
   663 ;;		_inicializa_SPI
   664 ;;		_inicializa_shrc
   665 ;;		_inicializa_tarefas
   666 ;;		_inicializa_uart
   667 ;;		_init_hardware
   668 ;;		_init_lcd
   669 ;;		_mensagem_inicial
   670 ;; This function is called by:
   671 ;;		Startup code after reset
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           	psect	text0
   676  0000'                    __ptext0:
   677                           	opt stack 0
   678  0000'                    _main:
   679                           	opt stack 25
   680                           
   681                           ;main.c: 251: init_hardware();
   682                           
   683                           ;incstack = 0
   684  0000' EC00' F000'        	call	_init_hardware	;wreg free
   685                           
   686                           ;main.c: 252: inicializa_uart();
   687  0004' EC00' F000'        	call	_inicializa_uart	;wreg free
   688                           
   689                           ;main.c: 253: init_lcd();
   690  0008' EC00' F000'        	call	_init_lcd	;wreg free
   691                           
   692                           ;main.c: 254: inicializa_shrc();
   693  000C' EC00' F000'        	call	_inicializa_shrc	;wreg free
   694                           
   695                           ;main.c: 256: mensagem_inicial();
   696  0010' EC00' F000'        	call	_mensagem_inicial	;wreg free
   697                           
   698                           ;main.c: 257: inicializa_tarefas();
   699  0014' EC00' F000'        	call	_inicializa_tarefas	;wreg free
   700                           
   701                           ;main.c: 258: inicializa_SPI(0);
   702  0018' 0E00               	movlw	0
   703  001A' EC00' F000'        	call	_inicializa_SPI
   704  001E'                    
   705                           ;main.c: 261: {
   706                           ;main.c: 263: if ((sinaliza_int_timer == 1) && (2))
   707  001E' 041C'              	decf	_sinaliza_int_timer,w,c
   708  0020' A4D8               	btfss	status,2,c
   709  0022' D004               	goto	l102
   710                           
   711                           ;main.c: 264: {
   712                           ;main.c: 265: sinaliza_int_timer = 0;
   713  0024' 0E00               	movlw	0
   714  0026' 6E1C'              	movwf	_sinaliza_int_timer,c
   715                           
   716                           ;main.c: 266: escalonador();
   717  0028' EC00' F000'        	call	_escalonador	;wreg free
   718  002C'                    l102:
   719                           
   720                           ;main.c: 267: }
   721                           ;main.c: 269: controle_shrc();
   722  002C' EC00' F000'        	call	_controle_shrc	;wreg free
   723  0030' D7F6               	goto	l101
   724  0032'                    __end_of_main:
   725                           	opt stack 0
   726                           tblptru	equ	0xFF8
   727                           tblptrh	equ	0xFF7
   728                           tblptrl	equ	0xFF6
   729                           tablat	equ	0xFF5
   730                           postinc0	equ	0xFEE
   731                           wreg	equ	0xFE8
   732                           postdec1	equ	0xFE5
   733                           fsr1l	equ	0xFE1
   734                           status	equ	0xFD8
   735                           
   736 ;; *************** function _mensagem_inicial *****************
   737 ;; Defined at:
   738 ;;		line 282 in file "main.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;		None
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  msg_dois       17   17[BANK0 ] const unsigned char [17]
   743 ;;  msg_linha_um   17    0[BANK0 ] const unsigned char [17]
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, bsr, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   753 ;;      Params:         0       0       0       0       0       0       0       0       0
   754 ;;      Locals:         0      34       0       0       0       0       0       0       0
   755 ;;      Temps:          2       0       0       0       0       0       0       0       0
   756 ;;      Totals:         2      34       0       0       0       0       0       0       0
   757 ;;Total ram usage:       36 bytes
   758 ;; Hardware stack levels used:    1
   759 ;; Hardware stack levels required when called:    3
   760 ;; This function calls:
   761 ;;		_escreve_cmd_lcd
   762 ;;		_escreve_frase_ram_lcd
   763 ;;		_posicao_cursor_lcd
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text1
   770  0000'                    __ptext1:
   771                           	opt stack 0
   772  0000'                    _mensagem_inicial:
   773                           	opt stack 27
   774                           
   775                           ;main.c: 284: const unsigned char msg_linha_um[17] = "SDCard Init   ";
   776                           
   777                           ;incstack = 0
   778  0000' 0E00'              	movlw	low mensagem_inicial@F3937
   779  0002' 6EF6               	movwf	tblptrl,c
   780  0004'                    	if	1	;There is more than 1 active tblptr byte
   781  0004' 0E00'              	movlw	high mensagem_inicial@F3937
   782  0006' 6EF7               	movwf	tblptrh,c
   783  0008'                    	endif
   784  0008'                    	if	0	;There are less than 3 active tblptr bytes
   785  0008'                    	endif
   786  0008' EE20' F000'        	lfsr	2,mensagem_inicial@msg_linha_um
   787  000C' 0E10               	movlw	16
   788  000E'                    u1470:
   789  000E' 0009               	tblrd		*+
   790  0010' CFF5 FFDE          	movff	tablat,postinc2
   791  0014' 06E8               	decf	wreg,f,c
   792  0016' E2FB               	bc	u1470
   793                           
   794                           ;main.c: 285: const unsigned char msg_dois[17] = " 18/01/2022   ";
   795  0018' 0E00'              	movlw	low mensagem_inicial@F3939
   796  001A' 6EF6               	movwf	tblptrl,c
   797  001C'                    	if	1	;There is more than 1 active tblptr byte
   798  001C' 0E00'              	movlw	high mensagem_inicial@F3939
   799  001E' 6EF7               	movwf	tblptrh,c
   800  0020'                    	endif
   801  0020'                    	if	0	;There are less than 3 active tblptr bytes
   802  0020'                    	endif
   803  0020' EE20' F000'        	lfsr	2,mensagem_inicial@msg_dois
   804  0024' 0E10               	movlw	16
   805  0026'                    u1480:
   806  0026' 0009               	tblrd		*+
   807  0028' CFF5 FFDE          	movff	tablat,postinc2
   808  002C' 06E8               	decf	wreg,f,c
   809  002E' E2FB               	bc	u1480
   810                           
   811                           ;main.c: 287: posicao_cursor_lcd(1,0);
   812  0030' 0E00               	movlw	0
   813  0032' 6E00'              	movwf	_posicao_cursor_lcd$1,c
   814  0034' 0E01               	movlw	1
   815  0036' EC00' F000'        	call	_posicao_cursor_lcd
   816                           
   817                           ;main.c: 288: escreve_frase_ram_lcd(msg_linha_um);
   818  003A' 0E00'              	movlw	low mensagem_inicial@msg_linha_um
   819  003C' 6E00'              	movwf	_escreve_frase_ram_lcd$0,c
   820  003E' 0E00'              	movlw	high mensagem_inicial@msg_linha_um
   821  0040' 6E01'              	movwf	_escreve_frase_ram_lcd$0+1,c
   822  0042' EC00' F000'        	call	_escreve_frase_ram_lcd	;wreg free
   823                           
   824                           ;main.c: 290: posicao_cursor_lcd(2,0);
   825  0046' 0E00               	movlw	0
   826  0048' 6E00'              	movwf	_posicao_cursor_lcd$1,c
   827  004A' 0E02               	movlw	2
   828  004C' EC00' F000'        	call	_posicao_cursor_lcd
   829                           
   830                           ;main.c: 291: escreve_frase_ram_lcd(msg_dois);
   831  0050' 0E00'              	movlw	low mensagem_inicial@msg_dois
   832  0052' 6E00'              	movwf	_escreve_frase_ram_lcd$0,c
   833  0054' 0E00'              	movlw	high mensagem_inicial@msg_dois
   834  0056' 6E01'              	movwf	_escreve_frase_ram_lcd$0+1,c
   835  0058' EC00' F000'        	call	_escreve_frase_ram_lcd	;wreg free
   836                           
   837                           ;main.c: 293: _delay((unsigned long)((1000)*(20000000/4000.0)));
   838  005C' 0E1A               	movlw	26
   839  005E' 6E00'              	movwf	(??_mensagem_inicial+1)& (0+255),c
   840  0060' 0E5E               	movlw	94
   841  0062' 6E00'              	movwf	??_mensagem_inicial& (0+255),c
   842  0064' 0E6E               	movlw	110
   843  0066'                    u1507:
   844  0066' 2EE8               	decfsz	wreg,f,c
   845  0068' D7FE               	bra	u1507
   846  006A' 2E00'              	decfsz	??_mensagem_inicial& (0+255),f,c
   847  006C' D7FC               	bra	u1507
   848  006E' 2E00'              	decfsz	(??_mensagem_inicial+1)& (0+255),f,c
   849  0070' D7FA               	bra	u1507
   850  0072' D000               	nop2	
   851                           
   852                           ;main.c: 294: escreve_cmd_lcd(0b00000001);
   853  0074' 0E01               	movlw	1
   854  0076' EC00' F000'        	call	_escreve_cmd_lcd
   855  007A' 0012               	return		;funcret
   856  007C'                    __end_of_mensagem_inicial:
   857                           	opt stack 0
   858                           tblptru	equ	0xFF8
   859                           tblptrh	equ	0xFF7
   860                           tblptrl	equ	0xFF6
   861                           tablat	equ	0xFF5
   862                           postinc0	equ	0xFEE
   863                           wreg	equ	0xFE8
   864                           postdec1	equ	0xFE5
   865                           fsr1l	equ	0xFE1
   866                           postinc2	equ	0xFDE
   867                           status	equ	0xFD8
   868                           
   869 ;; *************** function _init_hardware *****************
   870 ;; Defined at:
   871 ;;		line 55 in file "bibliotecas/hardware.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;		None
   874 ;; Auto vars:     Size  Location     Type
   875 ;;		None
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, status,2, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   885 ;;      Params:         0       0       0       0       0       0       0       0       0
   886 ;;      Locals:         0       0       0       0       0       0       0       0       0
   887 ;;      Temps:          0       0       0       0       0       0       0       0       0
   888 ;;      Totals:         0       0       0       0       0       0       0       0       0
   889 ;;Total ram usage:        0 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    4
   892 ;; This function calls:
   893 ;;		_config_timer_zero
   894 ;;		_inicializa_adc
   895 ;;		_init_interrupt
   896 ;;		_init_oscilador
   897 ;;		_init_ports
   898 ;; This function is called by:
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text2
   904  0000'                    __ptext2:
   905                           	opt stack 0
   906  0000'                    _init_hardware:
   907                           	opt stack 26
   908                           
   909                           ;hardware.c: 58: init_oscilador();
   910                           
   911                           ;incstack = 0
   912  0000' EC00' F000'        	call	_init_oscilador	;wreg free
   913                           
   914                           ;hardware.c: 61: init_ports();
   915  0004' EC00' F000'        	call	_init_ports	;wreg free
   916                           
   917                           ;hardware.c: 64: config_timer_zero();
   918  0008' EC00' F000'        	call	_config_timer_zero	;wreg free
   919                           
   920                           ;hardware.c: 70: init_interrupt();
   921  000C' EC00' F000'        	call	_init_interrupt	;wreg free
   922                           
   923                           ;hardware.c: 73: inicializa_adc();
   924  0010' EC00' F000'        	call	_inicializa_adc	;wreg free
   925  0014' 0012               	return		;funcret
   926  0016'                    __end_of_init_hardware:
   927                           	opt stack 0
   928                           tblptru	equ	0xFF8
   929                           tblptrh	equ	0xFF7
   930                           tblptrl	equ	0xFF6
   931                           tablat	equ	0xFF5
   932                           postinc0	equ	0xFEE
   933                           wreg	equ	0xFE8
   934                           postdec1	equ	0xFE5
   935                           fsr1l	equ	0xFE1
   936                           postinc2	equ	0xFDE
   937                           status	equ	0xFD8
   938                           
   939 ;; *************** function _init_ports *****************
   940 ;; Defined at:
   941 ;;		line 153 in file "bibliotecas/hardware.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg, status,2
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   955 ;;      Params:         0       0       0       0       0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0       0       0       0       0
   958 ;;      Totals:         0       0       0       0       0       0       0       0       0
   959 ;;Total ram usage:        0 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; Hardware stack levels required when called:    2
   962 ;; This function calls:
   963 ;;		Nothing
   964 ;; This function is called by:
   965 ;;		_init_hardware
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text3
   970  0000'                    __ptext3:
   971                           	opt stack 0
   972  0000'                    _init_ports:
   973                           	opt stack 27
   974                           
   975                           ;hardware.c: 155: TRISB = 0b00000001;
   976                           
   977                           ;incstack = 0
   978  0000' 0E01               	movlw	1
   979  0002' 6E93               	movwf	3987,c	;volatile
   980                           
   981                           ;hardware.c: 156: LATB = 0x00;
   982  0004' 0E00               	movlw	0
   983  0006' 6E8A               	movwf	3978,c	;volatile
   984                           
   985                           ;hardware.c: 157: TRISD = 0x00;
   986  0008' 0E00               	movlw	0
   987  000A' 6E95               	movwf	3989,c	;volatile
   988                           
   989                           ;hardware.c: 158: TRISA = 0b00000111;
   990  000C' 0E07               	movlw	7
   991  000E' 6E92               	movwf	3986,c	;volatile
   992                           
   993                           ;hardware.c: 159: TRISC = 0x01111111;
   994  0010' 0E11               	movlw	17
   995  0012' 6E94               	movwf	3988,c	;volatile
   996                           
   997                           ;hardware.c: 160: TRISE = 0b00000011;
   998  0014' 0E03               	movlw	3
   999  0016' 6E96               	movwf	3990,c	;volatile
  1000  0018' 0012               	return		;funcret
  1001  001A'                    __end_of_init_ports:
  1002                           	opt stack 0
  1003                           tblptru	equ	0xFF8
  1004                           tblptrh	equ	0xFF7
  1005                           tblptrl	equ	0xFF6
  1006                           tablat	equ	0xFF5
  1007                           postinc0	equ	0xFEE
  1008                           wreg	equ	0xFE8
  1009                           postdec1	equ	0xFE5
  1010                           fsr1l	equ	0xFE1
  1011                           postinc2	equ	0xFDE
  1012                           status	equ	0xFD8
  1013                           
  1014 ;; *************** function _init_oscilador *****************
  1015 ;; Defined at:
  1016 ;;		line 170 in file "bibliotecas/hardware.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;		None
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;		None
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		None
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1030 ;;      Params:         0       0       0       0       0       0       0       0       0
  1031 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1033 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1034 ;;Total ram usage:        0 bytes
  1035 ;; Hardware stack levels used:    1
  1036 ;; Hardware stack levels required when called:    2
  1037 ;; This function calls:
  1038 ;;		Nothing
  1039 ;; This function is called by:
  1040 ;;		_init_hardware
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text4
  1045  0000'                    __ptext4:
  1046                           	opt stack 0
  1047  0000'                    _init_oscilador:
  1048                           	opt stack 27
  1049                           
  1050                           ;hardware.c: 173: OSCCONbits.IRCF0 = 1;
  1051                           
  1052                           ;incstack = 0
  1053  0000' 88D3               	bsf	4051,4,c	;volatile
  1054                           
  1055                           ;hardware.c: 174: OSCCONbits.IRCF1 = 1;
  1056  0002' 8AD3               	bsf	4051,5,c	;volatile
  1057                           
  1058                           ;hardware.c: 175: OSCCONbits.IRCF2 = 1;
  1059  0004' 8CD3               	bsf	4051,6,c	;volatile
  1060  0006' 0012               	return		;funcret
  1061  0008'                    __end_of_init_oscilador:
  1062                           	opt stack 0
  1063                           tblptru	equ	0xFF8
  1064                           tblptrh	equ	0xFF7
  1065                           tblptrl	equ	0xFF6
  1066                           tablat	equ	0xFF5
  1067                           postinc0	equ	0xFEE
  1068                           wreg	equ	0xFE8
  1069                           postdec1	equ	0xFE5
  1070                           fsr1l	equ	0xFE1
  1071                           postinc2	equ	0xFDE
  1072                           status	equ	0xFD8
  1073                           
  1074 ;; *************** function _init_interrupt *****************
  1075 ;; Defined at:
  1076 ;;		line 98 in file "bibliotecas/hardware.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, status,2
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1090 ;;      Params:         0       0       0       0       0       0       0       0       0
  1091 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1093 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1094 ;;Total ram usage:        0 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:    2
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_init_hardware
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	text5
  1105  0000'                    __ptext5:
  1106                           	opt stack 0
  1107  0000'                    _init_interrupt:
  1108                           	opt stack 27
  1109                           
  1110                           ;hardware.c: 100: INTCON = 0b11110000;
  1111                           
  1112                           ;incstack = 0
  1113  0000' 0EF0               	movlw	240
  1114  0002' 6EF2               	movwf	intcon,c	;volatile
  1115                           
  1116                           ;hardware.c: 101: INTCON2 = 0b00000000;
  1117  0004' 0E00               	movlw	0
  1118  0006' 6EF1               	movwf	intcon2,c	;volatile
  1119                           
  1120                           ;hardware.c: 102: INTCON3 = 0b00000000;
  1121  0008' 0E00               	movlw	0
  1122  000A' 6EF0               	movwf	intcon3,c	;volatile
  1123                           
  1124                           ;hardware.c: 103: PIE1 = 0b00100000;
  1125  000C' 0E20               	movlw	32
  1126  000E' 6E9D               	movwf	3997,c	;volatile
  1127  0010' 0012               	return		;funcret
  1128  0012'                    __end_of_init_interrupt:
  1129                           	opt stack 0
  1130                           tblptru	equ	0xFF8
  1131                           tblptrh	equ	0xFF7
  1132                           tblptrl	equ	0xFF6
  1133                           tablat	equ	0xFF5
  1134                           intcon	equ	0xFF2
  1135                           intcon2	equ	0xFF1
  1136                           intcon3	equ	0xFF0
  1137                           postinc0	equ	0xFEE
  1138                           wreg	equ	0xFE8
  1139                           postdec1	equ	0xFE5
  1140                           fsr1l	equ	0xFE1
  1141                           postinc2	equ	0xFDE
  1142                           status	equ	0xFD8
  1143                           
  1144 ;; *************** function _inicializa_adc *****************
  1145 ;; Defined at:
  1146 ;;		line 40 in file "bibliotecas/adc.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, status,2
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1160 ;;      Params:         0       0       0       0       0       0       0       0       0
  1161 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1163 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1164 ;;Total ram usage:        0 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    2
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_init_hardware
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           	psect	text6
  1175  0000'                    __ptext6:
  1176                           	opt stack 0
  1177  0000'                    _inicializa_adc:
  1178                           	opt stack 27
  1179                           
  1180                           ;adc.c: 43: ADCON1=0x0B;
  1181                           
  1182                           ;incstack = 0
  1183  0000' 0E0B               	movlw	11
  1184  0002' 6EC1               	movwf	4033,c	;volatile
  1185                           
  1186                           ;adc.c: 44: ADCON1bits.VCFG0 = 0;
  1187  0004' 98C1               	bcf	4033,4,c	;volatile
  1188                           
  1189                           ;adc.c: 45: ADCON1bits.VCFG1 = 0;
  1190  0006' 9AC1               	bcf	4033,5,c	;volatile
  1191                           
  1192                           ;adc.c: 47: ADCON1bits.PCFG0 = 1;
  1193  0008' 80C1               	bsf	4033,0,c	;volatile
  1194                           
  1195                           ;adc.c: 48: ADCON1bits.PCFG1 = 0;
  1196  000A' 92C1               	bcf	4033,1,c	;volatile
  1197                           
  1198                           ;adc.c: 49: ADCON1bits.PCFG2 = 1;
  1199  000C' 84C1               	bsf	4033,2,c	;volatile
  1200                           
  1201                           ;adc.c: 50: ADCON1bits.PCFG3 = 1;
  1202  000E' 86C1               	bsf	4033,3,c	;volatile
  1203                           
  1204                           ;adc.c: 52: ADCON2bits.ADFM = 1;
  1205  0010' 8EC0               	bsf	4032,7,c	;volatile
  1206                           
  1207                           ;adc.c: 53: ADCON2bits.ADCS0 = 0;
  1208  0012' 90C0               	bcf	4032,0,c	;volatile
  1209                           
  1210                           ;adc.c: 54: ADCON2bits.ADCS1 = 1;
  1211  0014' 82C0               	bsf	4032,1,c	;volatile
  1212                           
  1213                           ;adc.c: 55: ADCON2bits.ADCS2 = 1;
  1214  0016' 84C0               	bsf	4032,2,c	;volatile
  1215                           
  1216                           ;adc.c: 56: ADCON2bits.ACQT0 = 1;
  1217  0018' 86C0               	bsf	4032,3,c	;volatile
  1218                           
  1219                           ;adc.c: 57: ADCON2bits.ACQT1 = 0;
  1220  001A' 98C0               	bcf	4032,4,c	;volatile
  1221                           
  1222                           ;adc.c: 58: ADCON2bits.ACQT2 = 0;
  1223  001C' 9AC0               	bcf	4032,5,c	;volatile
  1224                           
  1225                           ;adc.c: 59: ADCON0bits.ADON = 1;
  1226  001E' 80C2               	bsf	4034,0,c	;volatile
  1227  0020' 0012               	return		;funcret
  1228  0022'                    __end_of_inicializa_adc:
  1229                           	opt stack 0
  1230                           tblptru	equ	0xFF8
  1231                           tblptrh	equ	0xFF7
  1232                           tblptrl	equ	0xFF6
  1233                           tablat	equ	0xFF5
  1234                           intcon	equ	0xFF2
  1235                           intcon2	equ	0xFF1
  1236                           intcon3	equ	0xFF0
  1237                           postinc0	equ	0xFEE
  1238                           wreg	equ	0xFE8
  1239                           postdec1	equ	0xFE5
  1240                           fsr1l	equ	0xFE1
  1241                           postinc2	equ	0xFDE
  1242                           status	equ	0xFD8
  1243                           
  1244 ;; *************** function _config_timer_zero *****************
  1245 ;; Defined at:
  1246 ;;		line 83 in file "bibliotecas/hardware.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;		None
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;		None
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      void 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2, cstack
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1260 ;;      Params:         0       0       0       0       0       0       0       0       0
  1261 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1263 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1264 ;;Total ram usage:        0 bytes
  1265 ;; Hardware stack levels used:    1
  1266 ;; Hardware stack levels required when called:    3
  1267 ;; This function calls:
  1268 ;;		_write_timer_zero
  1269 ;; This function is called by:
  1270 ;;		_init_hardware
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text7
  1275  0000'                    __ptext7:
  1276                           	opt stack 0
  1277  0000'                    _config_timer_zero:
  1278                           	opt stack 26
  1279                           
  1280                           ;hardware.c: 85: T0CON = 0b11000011;
  1281                           
  1282                           ;incstack = 0
  1283  0000' 0EC3               	movlw	195
  1284  0002' 6ED5               	movwf	4053,c	;volatile
  1285                           
  1286                           ;hardware.c: 86: SPPCON = 0b00000000;
  1287  0004' 0E00               	movlw	0
  1288  0006' 6E65               	movwf	3941,c	;volatile
  1289                           
  1290                           ;hardware.c: 87: SPPCFG = 0b00000000;
  1291  0008' 0E00               	movlw	0
  1292  000A' 6E63               	movwf	3939,c	;volatile
  1293                           
  1294                           ;hardware.c: 88: write_timer_zero(0x0083);
  1295  000C' 0E00               	movlw	0
  1296  000E' 6E1A'              	movwf	write_timer_zero@timer0+1,c
  1297  0010' 0E83               	movlw	131
  1298  0012' 6E19'              	movwf	write_timer_zero@timer0,c
  1299  0014' EC00' F000'        	call	_write_timer_zero	;wreg free
  1300  0018' 0012               	return		;funcret
  1301  001A'                    __end_of_config_timer_zero:
  1302                           	opt stack 0
  1303                           tblptru	equ	0xFF8
  1304                           tblptrh	equ	0xFF7
  1305                           tblptrl	equ	0xFF6
  1306                           tablat	equ	0xFF5
  1307                           intcon	equ	0xFF2
  1308                           intcon2	equ	0xFF1
  1309                           intcon3	equ	0xFF0
  1310                           postinc0	equ	0xFEE
  1311                           wreg	equ	0xFE8
  1312                           postdec1	equ	0xFE5
  1313                           fsr1l	equ	0xFE1
  1314                           postinc2	equ	0xFDE
  1315                           status	equ	0xFD8
  1316                           
  1317 ;; *************** function _write_timer_zero *****************
  1318 ;; Defined at:
  1319 ;;		line 137 in file "bibliotecas/hardware.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  timer0          2   25[COMRAM] unsigned int 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  timer           2   27[COMRAM] struct Timers
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		None
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1333 ;;      Params:         2       0       0       0       0       0       0       0       0
  1334 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1335 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1336 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1337 ;;Total ram usage:        4 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:    2
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_config_timer_zero
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           	psect	text8
  1348  0000'                    __ptext8:
  1349                           	opt stack 0
  1350  0000'                    _write_timer_zero:
  1351                           	opt stack 26
  1352                           
  1353                           ;hardware.c: 139: union Timers timer;
  1354                           ;hardware.c: 141: timer.lt = timer0;
  1355                           
  1356                           ;incstack = 0
  1357  0000' C019' F01B'        	movff	write_timer_zero@timer0,write_timer_zero@timer
  1358  0004' C01A' F01C'        	movff	write_timer_zero@timer0+1,write_timer_zero@timer+1
  1359                           
  1360                           ;hardware.c: 143: TMR0H = timer.bt[1];
  1361  0008' C01C' FFD7         	movff	write_timer_zero@timer+1,4055	;volatile
  1362                           
  1363                           ;hardware.c: 144: TMR0L = timer.bt[0];
  1364  000C' C01B' FFD6         	movff	write_timer_zero@timer,4054	;volatile
  1365  0010' 0012               	return		;funcret
  1366  0012'                    __end_of_write_timer_zero:
  1367                           	opt stack 0
  1368                           tblptru	equ	0xFF8
  1369                           tblptrh	equ	0xFF7
  1370                           tblptrl	equ	0xFF6
  1371                           tablat	equ	0xFF5
  1372                           intcon	equ	0xFF2
  1373                           intcon2	equ	0xFF1
  1374                           intcon3	equ	0xFF0
  1375                           postinc0	equ	0xFEE
  1376                           wreg	equ	0xFE8
  1377                           postdec1	equ	0xFE5
  1378                           fsr1l	equ	0xFE1
  1379                           postinc2	equ	0xFDE
  1380                           status	equ	0xFD8
  1381                           
  1382 ;; *************** function _inicializa_uart *****************
  1383 ;; Defined at:
  1384 ;;		line 206 in file "bibliotecas/uart.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;		None
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg, status,2, status,0, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1398 ;;      Params:         0       0       0       0       0       0       0       0       0
  1399 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1401 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1402 ;;Total ram usage:        0 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    4
  1405 ;; This function calls:
  1406 ;;		_configura_baudrate_uart
  1407 ;; This function is called by:
  1408 ;;		_main
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text9
  1413  0000'                    __ptext9:
  1414                           	opt stack 0
  1415  0000'                    _inicializa_uart:
  1416                           	opt stack 26
  1417                           
  1418                           ;uart.c: 208: TRISCbits.RC6 = 0;
  1419                           
  1420                           ;incstack = 0
  1421  0000' 9C94               	bcf	3988,6,c	;volatile
  1422                           
  1423                           ;uart.c: 209: TRISCbits.RC7 = 0;
  1424  0002' 9E94               	bcf	3988,7,c	;volatile
  1425                           
  1426                           ;uart.c: 211: (void)configura_baudrate_uart(9600);
  1427  0004' 0E80               	movlw	128
  1428  0006' 0100               	movlb	0	; () banked
  1429  0008' 6F00'              	movwf	configura_baudrate_uart@baudrate& (0+255),b
  1430  000A' 0E25               	movlw	37
  1431  000C' 6F00'              	movwf	(configura_baudrate_uart@baudrate+1)& (0+255),b
  1432  000E' 0E00               	movlw	0
  1433  0010' 6F00'              	movwf	(configura_baudrate_uart@baudrate+2)& (0+255),b
  1434  0012' 0E00               	movlw	0
  1435  0014' 6F00'              	movwf	(configura_baudrate_uart@baudrate+3)& (0+255),b
  1436  0016' EC00' F000'        	call	_configura_baudrate_uart	;wreg free
  1437                           
  1438                           ;uart.c: 213: TXSTA = 0x20;
  1439  001A' 0E20               	movlw	32
  1440  001C' 6EAC               	movwf	4012,c	;volatile
  1441                           
  1442                           ;uart.c: 214: RCSTA = 0x90;
  1443  001E' 0E90               	movlw	144
  1444  0020' 6EAB               	movwf	4011,c	;volatile
  1445  0022' 0012               	return		;funcret
  1446  0024'                    __end_of_inicializa_uart:
  1447                           	opt stack 0
  1448                           tblptru	equ	0xFF8
  1449                           tblptrh	equ	0xFF7
  1450                           tblptrl	equ	0xFF6
  1451                           tablat	equ	0xFF5
  1452                           intcon	equ	0xFF2
  1453                           intcon2	equ	0xFF1
  1454                           intcon3	equ	0xFF0
  1455                           postinc0	equ	0xFEE
  1456                           wreg	equ	0xFE8
  1457                           postdec1	equ	0xFE5
  1458                           fsr1l	equ	0xFE1
  1459                           postinc2	equ	0xFDE
  1460                           status	equ	0xFD8
  1461                           
  1462 ;; *************** function _configura_baudrate_uart *****************
  1463 ;; Defined at:
  1464 ;;		line 50 in file "bibliotecas/uart.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  baudrate        4    0[BANK0 ] const long 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  x               2   12[BANK0 ] unsigned int 
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  1    wreg      unsigned char 
  1471 ;; Registers used:
  1472 ;;		wreg, status,2, status,0, cstack
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1478 ;;      Params:         0       4       0       0       0       0       0       0       0
  1479 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1480 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1481 ;;      Totals:         0      14       0       0       0       0       0       0       0
  1482 ;;Total ram usage:       14 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; Hardware stack levels required when called:    3
  1485 ;; This function calls:
  1486 ;;		___aldiv
  1487 ;; This function is called by:
  1488 ;;		_inicializa_uart
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text10
  1493  0000'                    __ptext10:
  1494                           	opt stack 0
  1495  0000'                    _configura_baudrate_uart:
  1496                           	opt stack 26
  1497                           
  1498                           ;uart.c: 52: unsigned int x;
  1499                           ;uart.c: 54: x = (20000000 - baudrate*64)/(baudrate*64);
  1500                           
  1501                           ;incstack = 0
  1502  0000' C000' F004'        	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  1503  0004' C001' F005'        	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  1504  0008' C002' F006'        	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  1505  000C' C003' F007'        	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  1506  0010' 0E06               	movlw	6
  1507  0012'                    u1415:
  1508  0012' 90D8               	bcf	status,0,c
  1509  0014' 0100               	movlb	0	; () banked
  1510  0016' 3700'              	rlcf	??_configura_baudrate_uart& (0+255),f,b
  1511  0018' 3700'              	rlcf	(??_configura_baudrate_uart+1)& (0+255),f,b
  1512  001A' 3700'              	rlcf	(??_configura_baudrate_uart+2)& (0+255),f,b
  1513  001C' 3700'              	rlcf	(??_configura_baudrate_uart+3)& (0+255),f,b
  1514  001E' 2EE8               	decfsz	wreg,f,c
  1515  0020' D7F8               	goto	u1415
  1516  0022' 1F00'              	comf	??_configura_baudrate_uart& (0+255),f,b
  1517  0024' 1F00'              	comf	(??_configura_baudrate_uart+1)& (0+255),f,b
  1518  0026' 1F00'              	comf	(??_configura_baudrate_uart+2)& (0+255),f,b
  1519  0028' 1F00'              	comf	(??_configura_baudrate_uart+3)& (0+255),f,b
  1520  002A' 2B00'              	incf	??_configura_baudrate_uart& (0+255),f,b
  1521  002C' 0E00               	movlw	0
  1522  002E' 2300'              	addwfc	(??_configura_baudrate_uart+1)& (0+255),f,b
  1523  0030' 2300'              	addwfc	(??_configura_baudrate_uart+2)& (0+255),f,b
  1524  0032' 2300'              	addwfc	(??_configura_baudrate_uart+3)& (0+255),f,b
  1525  0034' 0E00               	movlw	0
  1526  0036' 2500'              	addwf	??_configura_baudrate_uart& (0+255),w,b
  1527  0038' 6E19'              	movwf	___aldiv@dividend,c
  1528  003A' 0E2D               	movlw	45
  1529  003C' 2100'              	addwfc	(??_configura_baudrate_uart+1)& (0+255),w,b
  1530  003E' 6E1A'              	movwf	___aldiv@dividend+1,c
  1531  0040' 0E31               	movlw	49
  1532  0042' 2100'              	addwfc	(??_configura_baudrate_uart+2)& (0+255),w,b
  1533  0044' 6E1B'              	movwf	___aldiv@dividend+2,c
  1534  0046' 0E01               	movlw	1
  1535  0048' 2100'              	addwfc	(??_configura_baudrate_uart+3)& (0+255),w,b
  1536  004A' 6E1C'              	movwf	___aldiv@dividend+3,c
  1537  004C' C000' F008'        	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  1538  0050' C001' F009'        	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  1539  0054' C002' F00A'        	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  1540  0058' C003' F00B'        	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  1541  005C' 0E06               	movlw	6
  1542  005E'                    u1425:
  1543  005E' 90D8               	bcf	status,0,c
  1544  0060' 3700'              	rlcf	(??_configura_baudrate_uart+4)& (0+255),f,b
  1545  0062' 3700'              	rlcf	(??_configura_baudrate_uart+5)& (0+255),f,b
  1546  0064' 3700'              	rlcf	(??_configura_baudrate_uart+6)& (0+255),f,b
  1547  0066' 3700'              	rlcf	(??_configura_baudrate_uart+7)& (0+255),f,b
  1548  0068' 2EE8               	decfsz	wreg,f,c
  1549  006A' D7F9               	goto	u1425
  1550  006C' C008' F01D'        	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  1551  0070' C009' F01E'        	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  1552  0074' C00A' F01F'        	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  1553  0078' C00B' F020'        	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  1554  007C' EC00' F000'        	call	___aldiv	;wreg free
  1555  0080' C019' F00C'        	movff	?___aldiv,configura_baudrate_uart@x
  1556  0084' C01A' F00D'        	movff	?___aldiv+1,configura_baudrate_uart@x+1
  1557                           
  1558                           ;uart.c: 55: if(x > 255)
  1559  0088' 0100               	movlb	0	; () banked
  1560  008A' 0500'              	decf	(configura_baudrate_uart@x+1)& (0+255),w,b
  1561  008C' A0D8               	btfss	status,0,c
  1562  008E' D044               	goto	l397
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;uart.c: 56: {
  1566                           ;uart.c: 57: x = (20000000 - baudrate*16)/(baudrate*16);
  1567  0090' C000' F004'        	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  1568  0094' C001' F005'        	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  1569  0098' C002' F006'        	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  1570  009C' C003' F007'        	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  1571  00A0' 0E04               	movlw	4
  1572  00A2'                    u1445:
  1573  00A2' 90D8               	bcf	status,0,c
  1574  00A4' 3700'              	rlcf	??_configura_baudrate_uart& (0+255),f,b
  1575  00A6' 3700'              	rlcf	(??_configura_baudrate_uart+1)& (0+255),f,b
  1576  00A8' 3700'              	rlcf	(??_configura_baudrate_uart+2)& (0+255),f,b
  1577  00AA' 3700'              	rlcf	(??_configura_baudrate_uart+3)& (0+255),f,b
  1578  00AC' 2EE8               	decfsz	wreg,f,c
  1579  00AE' D7F9               	goto	u1445
  1580  00B0' 1F00'              	comf	??_configura_baudrate_uart& (0+255),f,b
  1581  00B2' 1F00'              	comf	(??_configura_baudrate_uart+1)& (0+255),f,b
  1582  00B4' 1F00'              	comf	(??_configura_baudrate_uart+2)& (0+255),f,b
  1583  00B6' 1F00'              	comf	(??_configura_baudrate_uart+3)& (0+255),f,b
  1584  00B8' 2B00'              	incf	??_configura_baudrate_uart& (0+255),f,b
  1585  00BA' 0E00               	movlw	0
  1586  00BC' 2300'              	addwfc	(??_configura_baudrate_uart+1)& (0+255),f,b
  1587  00BE' 2300'              	addwfc	(??_configura_baudrate_uart+2)& (0+255),f,b
  1588  00C0' 2300'              	addwfc	(??_configura_baudrate_uart+3)& (0+255),f,b
  1589  00C2' 0E00               	movlw	0
  1590  00C4' 2500'              	addwf	??_configura_baudrate_uart& (0+255),w,b
  1591  00C6' 6E19'              	movwf	___aldiv@dividend,c
  1592  00C8' 0E2D               	movlw	45
  1593  00CA' 2100'              	addwfc	(??_configura_baudrate_uart+1)& (0+255),w,b
  1594  00CC' 6E1A'              	movwf	___aldiv@dividend+1,c
  1595  00CE' 0E31               	movlw	49
  1596  00D0' 2100'              	addwfc	(??_configura_baudrate_uart+2)& (0+255),w,b
  1597  00D2' 6E1B'              	movwf	___aldiv@dividend+2,c
  1598  00D4' 0E01               	movlw	1
  1599  00D6' 2100'              	addwfc	(??_configura_baudrate_uart+3)& (0+255),w,b
  1600  00D8' 6E1C'              	movwf	___aldiv@dividend+3,c
  1601  00DA' C000' F008'        	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  1602  00DE' C001' F009'        	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  1603  00E2' C002' F00A'        	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  1604  00E6' C003' F00B'        	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  1605  00EA' 0E04               	movlw	4
  1606  00EC'                    u1455:
  1607  00EC' 90D8               	bcf	status,0,c
  1608  00EE' 3700'              	rlcf	(??_configura_baudrate_uart+4)& (0+255),f,b
  1609  00F0' 3700'              	rlcf	(??_configura_baudrate_uart+5)& (0+255),f,b
  1610  00F2' 3700'              	rlcf	(??_configura_baudrate_uart+6)& (0+255),f,b
  1611  00F4' 3700'              	rlcf	(??_configura_baudrate_uart+7)& (0+255),f,b
  1612  00F6' 2EE8               	decfsz	wreg,f,c
  1613  00F8' D7F9               	goto	u1455
  1614  00FA' C008' F01D'        	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  1615  00FE' C009' F01E'        	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  1616  0102' C00A' F01F'        	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  1617  0106' C00B' F020'        	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  1618  010A' EC00' F000'        	call	___aldiv	;wreg free
  1619  010E' C019' F00C'        	movff	?___aldiv,configura_baudrate_uart@x
  1620  0112' C01A' F00D'        	movff	?___aldiv+1,configura_baudrate_uart@x+1
  1621                           
  1622                           ;uart.c: 58: BRGH = 1;
  1623  0116' 84AC               	bsf	4012,2,c	;volatile
  1624  0118'                    l397:
  1625                           
  1626                           ;uart.c: 59: }
  1627                           ;uart.c: 60: if(x < 256)
  1628  0118' 0100               	movlb	0	; () banked
  1629  011A' 0500'              	decf	(configura_baudrate_uart@x+1)& (0+255),w,b
  1630  011C' B0D8               	btfsc	status,0,c
  1631  011E' 0012               	return	
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;uart.c: 61: {
  1635                           ;uart.c: 62: SPBRG = x;
  1636  0120' C00C' FFAF         	movff	configura_baudrate_uart@x,4015	;volatile
  1637                           
  1638                           ;uart.c: 63: SYNC = 0;
  1639  0124' 98AC               	bcf	4012,4,c	;volatile
  1640                           
  1641                           ;uart.c: 64: SPEN = 1;
  1642  0126' 8EAB               	bsf	4011,7,c	;volatile
  1643                           
  1644                           ;uart.c: 65: TRISCbits.RC7 = 1;
  1645  0128' 8E94               	bsf	3988,7,c	;volatile
  1646                           
  1647                           ;uart.c: 66: TRISCbits.RC6 = 1;
  1648  012A' 8C94               	bsf	3988,6,c	;volatile
  1649                           
  1650                           ;uart.c: 67: CREN = 1;
  1651  012C' 88AB               	bsf	4011,4,c	;volatile
  1652                           
  1653                           ;uart.c: 68: TXEN = 1;
  1654  012E' 8AAC               	bsf	4012,5,c	;volatile
  1655                           
  1656                           ;uart.c: 70: return (1);
  1657                           ;	Return value of _configura_baudrate_uart is never used
  1658  0130' 0012               	return	
  1659  0132'                    __end_of_configura_baudrate_uart:
  1660                           	opt stack 0
  1661                           tblptru	equ	0xFF8
  1662                           tblptrh	equ	0xFF7
  1663                           tblptrl	equ	0xFF6
  1664                           tablat	equ	0xFF5
  1665                           intcon	equ	0xFF2
  1666                           intcon2	equ	0xFF1
  1667                           intcon3	equ	0xFF0
  1668                           postinc0	equ	0xFEE
  1669                           wreg	equ	0xFE8
  1670                           postdec1	equ	0xFE5
  1671                           fsr1l	equ	0xFE1
  1672                           postinc2	equ	0xFDE
  1673                           status	equ	0xFD8
  1674                           
  1675 ;; *************** function ___aldiv *****************
  1676 ;; Defined at:
  1677 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  dividend        4   25[COMRAM] long 
  1680 ;;  divisor         4   29[COMRAM] long 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  quotient        4   35[COMRAM] long 
  1683 ;;  sign            1   34[COMRAM] unsigned char 
  1684 ;;  counter         1   33[COMRAM] unsigned char 
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  4   25[COMRAM] long 
  1687 ;; Registers used:
  1688 ;;		wreg, status,2, status,0
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1694 ;;      Params:         8       0       0       0       0       0       0       0       0
  1695 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1696 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1697 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1698 ;;Total ram usage:       14 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; Hardware stack levels required when called:    2
  1701 ;; This function calls:
  1702 ;;		Nothing
  1703 ;; This function is called by:
  1704 ;;		_configura_baudrate_uart
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text11
  1709  0000'                    __ptext11:
  1710                           	opt stack 0
  1711  0000'                    ___aldiv:
  1712                           	opt stack 26
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;incstack = 0
  1716  0000' 0E00               	movlw	0
  1717  0002' 6E22'              	movwf	___aldiv@sign,c
  1718  0004' AE20'              	btfss	___aldiv@divisor+3,7,c
  1719  0006' D00A               	goto	l541
  1720  0008' 1E20'              	comf	___aldiv@divisor+3,f,c
  1721  000A' 1E1F'              	comf	___aldiv@divisor+2,f,c
  1722  000C' 1E1E'              	comf	___aldiv@divisor+1,f,c
  1723  000E' 6C1D'              	negf	___aldiv@divisor,c
  1724  0010' 0E00               	movlw	0
  1725  0012' 221E'              	addwfc	___aldiv@divisor+1,f,c
  1726  0014' 221F'              	addwfc	___aldiv@divisor+2,f,c
  1727  0016' 2220'              	addwfc	___aldiv@divisor+3,f,c
  1728  0018' 0E01               	movlw	1
  1729  001A' 6E22'              	movwf	___aldiv@sign,c
  1730  001C'                    l541:
  1731  001C' AE1C'              	btfss	___aldiv@dividend+3,7,c
  1732  001E' D00A               	goto	l542
  1733  0020' 1E1C'              	comf	___aldiv@dividend+3,f,c
  1734  0022' 1E1B'              	comf	___aldiv@dividend+2,f,c
  1735  0024' 1E1A'              	comf	___aldiv@dividend+1,f,c
  1736  0026' 6C19'              	negf	___aldiv@dividend,c
  1737  0028' 0E00               	movlw	0
  1738  002A' 221A'              	addwfc	___aldiv@dividend+1,f,c
  1739  002C' 221B'              	addwfc	___aldiv@dividend+2,f,c
  1740  002E' 221C'              	addwfc	___aldiv@dividend+3,f,c
  1741  0030' 0E01               	movlw	1
  1742  0032' 1A22'              	xorwf	___aldiv@sign,f,c
  1743  0034'                    l542:
  1744  0034' 0E00               	movlw	0
  1745  0036' 6E23'              	movwf	___aldiv@quotient,c
  1746  0038' 0E00               	movlw	0
  1747  003A' 6E24'              	movwf	___aldiv@quotient+1,c
  1748  003C' 0E00               	movlw	0
  1749  003E' 6E25'              	movwf	___aldiv@quotient+2,c
  1750  0040' 0E00               	movlw	0
  1751  0042' 6E26'              	movwf	___aldiv@quotient+3,c
  1752  0044' 501D'              	movf	___aldiv@divisor,w,c
  1753  0046' 101E'              	iorwf	___aldiv@divisor+1,w,c
  1754  0048' 101F'              	iorwf	___aldiv@divisor+2,w,c
  1755  004A' 1020'              	iorwf	___aldiv@divisor+3,w,c
  1756  004C' B4D8               	btfsc	status,2,c
  1757  004E' D02A               	goto	l549
  1758  0050' 0E01               	movlw	1
  1759  0052' 6E21'              	movwf	___aldiv@counter,c
  1760  0054' D006               	goto	l544
  1761  0056' 90D8               	bcf	status,0,c
  1762  0058' 361D'              	rlcf	___aldiv@divisor,f,c
  1763  005A' 361E'              	rlcf	___aldiv@divisor+1,f,c
  1764  005C' 361F'              	rlcf	___aldiv@divisor+2,f,c
  1765  005E' 3620'              	rlcf	___aldiv@divisor+3,f,c
  1766  0060' 2A21'              	incf	___aldiv@counter,f,c
  1767  0062'                    l544:
  1768  0062' AE20'              	btfss	___aldiv@divisor+3,7,c
  1769  0064' D7F8               	goto	l545
  1770  0066'                    u1380:
  1771  0066' 90D8               	bcf	status,0,c
  1772  0068' 3623'              	rlcf	___aldiv@quotient,f,c
  1773  006A' 3624'              	rlcf	___aldiv@quotient+1,f,c
  1774  006C' 3625'              	rlcf	___aldiv@quotient+2,f,c
  1775  006E' 3626'              	rlcf	___aldiv@quotient+3,f,c
  1776  0070' 501D'              	movf	___aldiv@divisor,w,c
  1777  0072' 5C19'              	subwf	___aldiv@dividend,w,c
  1778  0074' 501E'              	movf	___aldiv@divisor+1,w,c
  1779  0076' 581A'              	subwfb	___aldiv@dividend+1,w,c
  1780  0078' 501F'              	movf	___aldiv@divisor+2,w,c
  1781  007A' 581B'              	subwfb	___aldiv@dividend+2,w,c
  1782  007C' 5020'              	movf	___aldiv@divisor+3,w,c
  1783  007E' 581C'              	subwfb	___aldiv@dividend+3,w,c
  1784  0080' A0D8               	btfss	status,0,c
  1785  0082' D009               	goto	l548
  1786  0084' 501D'              	movf	___aldiv@divisor,w,c
  1787  0086' 5E19'              	subwf	___aldiv@dividend,f,c
  1788  0088' 501E'              	movf	___aldiv@divisor+1,w,c
  1789  008A' 5A1A'              	subwfb	___aldiv@dividend+1,f,c
  1790  008C' 501F'              	movf	___aldiv@divisor+2,w,c
  1791  008E' 5A1B'              	subwfb	___aldiv@dividend+2,f,c
  1792  0090' 5020'              	movf	___aldiv@divisor+3,w,c
  1793  0092' 5A1C'              	subwfb	___aldiv@dividend+3,f,c
  1794  0094' 8023'              	bsf	___aldiv@quotient,0,c
  1795  0096'                    l548:
  1796  0096' 90D8               	bcf	status,0,c
  1797  0098' 3220'              	rrcf	___aldiv@divisor+3,f,c
  1798  009A' 321F'              	rrcf	___aldiv@divisor+2,f,c
  1799  009C' 321E'              	rrcf	___aldiv@divisor+1,f,c
  1800  009E' 321D'              	rrcf	___aldiv@divisor,f,c
  1801  00A0' 2E21'              	decfsz	___aldiv@counter,f,c
  1802  00A2' D7E1               	goto	u1380
  1803  00A4'                    l549:
  1804  00A4' 5022'              	movf	___aldiv@sign,w,c
  1805  00A6' B4D8               	btfsc	status,2,c
  1806  00A8' D008               	goto	l550
  1807  00AA' 1E26'              	comf	___aldiv@quotient+3,f,c
  1808  00AC' 1E25'              	comf	___aldiv@quotient+2,f,c
  1809  00AE' 1E24'              	comf	___aldiv@quotient+1,f,c
  1810  00B0' 6C23'              	negf	___aldiv@quotient,c
  1811  00B2' 0E00               	movlw	0
  1812  00B4' 2224'              	addwfc	___aldiv@quotient+1,f,c
  1813  00B6' 2225'              	addwfc	___aldiv@quotient+2,f,c
  1814  00B8' 2226'              	addwfc	___aldiv@quotient+3,f,c
  1815  00BA'                    l550:
  1816  00BA' C023' F019'        	movff	___aldiv@quotient,?___aldiv
  1817  00BE' C024' F01A'        	movff	___aldiv@quotient+1,?___aldiv+1
  1818  00C2' C025' F01B'        	movff	___aldiv@quotient+2,?___aldiv+2
  1819  00C6' C026' F01C'        	movff	___aldiv@quotient+3,?___aldiv+3
  1820  00CA' 0012               	return	
  1821  00CC'                    __end_of___aldiv:
  1822                           	opt stack 0
  1823                           tblptru	equ	0xFF8
  1824                           tblptrh	equ	0xFF7
  1825                           tblptrl	equ	0xFF6
  1826                           tablat	equ	0xFF5
  1827                           intcon	equ	0xFF2
  1828                           intcon2	equ	0xFF1
  1829                           intcon3	equ	0xFF0
  1830                           postinc0	equ	0xFEE
  1831                           wreg	equ	0xFE8
  1832                           postdec1	equ	0xFE5
  1833                           fsr1l	equ	0xFE1
  1834                           postinc2	equ	0xFDE
  1835                           status	equ	0xFD8
  1836                           
  1837 ;; *************** function _inicializa_tarefas *****************
  1838 ;; Defined at:
  1839 ;;		line 181 in file "main.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;		None
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;		None
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg, status,2, status,0
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1853 ;;      Params:         0       0       0       0       0       0       0       0       0
  1854 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1855 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1856 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1857 ;;Total ram usage:        0 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    2
  1860 ;; This function calls:
  1861 ;;		Nothing
  1862 ;; This function is called by:
  1863 ;;		_main
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           	psect	text12
  1868  0000'                    __ptext12:
  1869                           	opt stack 0
  1870  0000'                    _inicializa_tarefas:
  1871                           	opt stack 28
  1872                           
  1873                           ;main.c: 184: p_tarefas[0] = acende_led4;
  1874                           
  1875                           ;incstack = 0
  1876  0000' 0E00'              	movlw	low _acende_led4
  1877  0002' 6E0F'              	movwf	_p_tarefas,c
  1878  0004' 0E00'              	movlw	high _acende_led4
  1879  0006' 6E10'              	movwf	_p_tarefas+1,c
  1880                           
  1881                           ;main.c: 185: p_tarefas[1] = SDCard;
  1882  0008' 0E00'              	movlw	low _SDCard
  1883  000A' 6E11'              	movwf	_p_tarefas+2,c
  1884  000C' 0E00'              	movlw	high _SDCard
  1885  000E' 6E12'              	movwf	_p_tarefas+3,c
  1886                           
  1887                           ;main.c: 191: tempo_backup[0] = 1000;
  1888  0010' 0E03               	movlw	3
  1889  0012' 6E0C'              	movwf	_tempo_backup+1,c
  1890  0014' 0EE8               	movlw	232
  1891  0016' 6E0B'              	movwf	_tempo_backup,c
  1892                           
  1893                           ;main.c: 192: tempo_backup[1] = 2000;
  1894  0018' 0E07               	movlw	7
  1895  001A' 6E0E'              	movwf	_tempo_backup+3,c
  1896  001C' 0ED0               	movlw	208
  1897  001E' 6E0D'              	movwf	_tempo_backup+2,c
  1898                           
  1899                           ;main.c: 198: tempo_tarefa[0] = 1000;
  1900  0020' 0E03               	movlw	3
  1901  0022' 6E08'              	movwf	_tempo_tarefa+1,c
  1902  0024' 0EE8               	movlw	232
  1903  0026' 6E07'              	movwf	_tempo_tarefa,c
  1904                           
  1905                           ;main.c: 199: tempo_tarefa[1] = 2000;
  1906  0028' 0E07               	movlw	7
  1907  002A' 6E0A'              	movwf	_tempo_tarefa+3,c
  1908  002C' 0ED0               	movlw	208
  1909  002E' 6E09'              	movwf	_tempo_tarefa+2,c
  1910                           
  1911                           ;main.c: 204: tarefa_em_execucao = 0;
  1912  0030' 0E00               	movlw	0
  1913  0032' 6E1B'              	movwf	_tarefa_em_execucao,c	;volatile
  1914  0034' 0012               	return		;funcret
  1915  0036'                    __end_of_inicializa_tarefas:
  1916                           	opt stack 0
  1917                           tblptru	equ	0xFF8
  1918                           tblptrh	equ	0xFF7
  1919                           tblptrl	equ	0xFF6
  1920                           tablat	equ	0xFF5
  1921                           intcon	equ	0xFF2
  1922                           intcon2	equ	0xFF1
  1923                           intcon3	equ	0xFF0
  1924                           postinc0	equ	0xFEE
  1925                           wreg	equ	0xFE8
  1926                           postdec1	equ	0xFE5
  1927                           fsr1l	equ	0xFE1
  1928                           postinc2	equ	0xFDE
  1929                           status	equ	0xFD8
  1930                           
  1931 ;; *************** function _inicializa_shrc *****************
  1932 ;; Defined at:
  1933 ;;		line 47 in file "bibliotecas/SHRC.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;		None
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;		None
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		None
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1947 ;;      Params:         0       0       0       0       0       0       0       0       0
  1948 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1949 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1950 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1951 ;;Total ram usage:        0 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    2
  1954 ;; This function calls:
  1955 ;;		Nothing
  1956 ;; This function is called by:
  1957 ;;		_main
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text13
  1962  0000'                    __ptext13:
  1963                           	opt stack 0
  1964  0000'                    _inicializa_shrc:
  1965                           	opt stack 28
  1966                           
  1967                           ;SHRC.c: 49: LATBbits.LATB5 = 0;
  1968                           
  1969                           ;incstack = 0
  1970  0000' 9A8A               	bcf	3978,5,c	;volatile
  1971                           
  1972                           ;SHRC.c: 50: LATBbits.LATB6 = 0;
  1973  0002' 9C8A               	bcf	3978,6,c	;volatile
  1974                           
  1975                           ;SHRC.c: 51: LATBbits.LATB7 = 0;
  1976  0004' 9E8A               	bcf	3978,7,c	;volatile
  1977  0006' 0012               	return		;funcret
  1978  0008'                    __end_of_inicializa_shrc:
  1979                           	opt stack 0
  1980                           tblptru	equ	0xFF8
  1981                           tblptrh	equ	0xFF7
  1982                           tblptrl	equ	0xFF6
  1983                           tablat	equ	0xFF5
  1984                           intcon	equ	0xFF2
  1985                           intcon2	equ	0xFF1
  1986                           intcon3	equ	0xFF0
  1987                           postinc0	equ	0xFEE
  1988                           wreg	equ	0xFE8
  1989                           postdec1	equ	0xFE5
  1990                           fsr1l	equ	0xFE1
  1991                           postinc2	equ	0xFDE
  1992                           status	equ	0xFD8
  1993                           
  1994 ;; *************** function _inicializa_SPI *****************
  1995 ;; Defined at:
  1996 ;;		line 48 in file "bibliotecas/SPI.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  SPI_mode        1    wreg     unsigned char 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  SPI_mode        1   25[COMRAM] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, bsr, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2010 ;;      Params:         0       0       0       0       0       0       0       0       0
  2011 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2013 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2014 ;;Total ram usage:        1 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    3
  2017 ;; This function calls:
  2018 ;;		_escreve_cmd_lcd
  2019 ;;		_escreve_frase_ram_lcd
  2020 ;;		_posicao_cursor_lcd
  2021 ;; This function is called by:
  2022 ;;		_main
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text14
  2027  0000'                    __ptext14:
  2028                           	opt stack 0
  2029  0000'                    _inicializa_SPI:
  2030                           	opt stack 27
  2031                           
  2032                           ;incstack = 0
  2033                           ;inicializa_SPI@SPI_mode stored from wreg
  2034  0000' 6E19'              	movwf	inicializa_SPI@SPI_mode,c
  2035                           
  2036                           ;SPI.c: 50: switch(SPI_mode)
  2037  0002' D00A               	goto	l204
  2038  0004'                    l207:
  2039                           
  2040                           ;SPI.c: 58: SSPCON1bits.CKP = 1;
  2041  0004' 88C6               	bsf	4038,4,c	;volatile
  2042  0006' D006               	goto	L2
  2043  0008'                    l208:
  2044                           
  2045                           ;SPI.c: 63: SSPCON1bits.CKP = 0;
  2046  0008' 98C6               	bcf	4038,4,c	;volatile
  2047                           
  2048                           ;SPI.c: 64: SSPSTATbits.CKE = 1;
  2049  000A' 8CC7               	bsf	4039,6,c	;volatile
  2050                           
  2051                           ;SPI.c: 65: break;
  2052  000C' D013               	goto	l206
  2053  000E'                    l209:
  2054                           
  2055                           ;SPI.c: 68: SSPCON1bits.CKP = 1;
  2056  000E' 88C6               	bsf	4038,4,c	;volatile
  2057                           
  2058                           ;SPI.c: 69: SSPSTATbits.CKE = 1;
  2059  0010' 8CC7               	bsf	4039,6,c	;volatile
  2060  0012'                    l210:
  2061                           
  2062                           ;SPI.c: 72: SSPCON1bits.CKP = 0;
  2063  0012' 98C6               	bcf	4038,4,c	;volatile
  2064  0014'                    L2:
  2065                           
  2066                           ;SPI.c: 73: SSPSTATbits.CKE = 0;
  2067  0014' 9CC7               	bcf	4039,6,c	;volatile
  2068                           
  2069                           ;SPI.c: 75: }
  2070                           
  2071                           ;SPI.c: 74: break;
  2072  0016' D00E               	goto	l206
  2073  0018'                    l204:
  2074  0018' 5019'              	movf	inicializa_SPI@SPI_mode,w,c
  2075                           
  2076                           ; Switch size 1, requested type "space"
  2077                           ; Number of cases is 4, Range of values is 0 to 3
  2078                           ; switch strategies available:
  2079                           ; Name         Instructions Cycles
  2080                           ; simple_byte           13     7 (average)
  2081                           ;	Chosen strategy is simple_byte
  2082  001A' 0A00               	xorlw	0	; case 0
  2083  001C' B4D8               	btfsc	status,2,c
  2084  001E' D7F9               	goto	l210
  2085  0020' 0A01               	xorlw	1	; case 1
  2086  0022' B4D8               	btfsc	status,2,c
  2087  0024' D7EF               	goto	l207
  2088  0026' 0A03               	xorlw	3	; case 2
  2089  0028' B4D8               	btfsc	status,2,c
  2090  002A' D7EE               	goto	l208
  2091  002C' 0A01               	xorlw	1	; case 3
  2092  002E' B4D8               	btfsc	status,2,c
  2093  0030' D7EE               	goto	l209
  2094  0032' D7EF               	goto	l210
  2095  0034'                    l206:
  2096                           
  2097                           ;SPI.c: 79: SSPCON1bits.WCOL = 0;
  2098  0034' 9EC6               	bcf	4038,7,c	;volatile
  2099                           
  2100                           ;SPI.c: 81: SSPCON1bits.SSPEN = 1;
  2101  0036' 8AC6               	bsf	4038,5,c	;volatile
  2102                           
  2103                           ;SPI.c: 83: SSPCON1bits.SSPM0 = 0;
  2104  0038' 90C6               	bcf	4038,0,c	;volatile
  2105                           
  2106                           ;SPI.c: 84: SSPCON1bits.SSPM1 = 0;
  2107  003A' 92C6               	bcf	4038,1,c	;volatile
  2108                           
  2109                           ;SPI.c: 85: SSPCON1bits.SSPM2 = 0;
  2110  003C' 94C6               	bcf	4038,2,c	;volatile
  2111                           
  2112                           ;SPI.c: 86: SSPCON1bits.SSPM3 = 0;
  2113  003E' 96C6               	bcf	4038,3,c	;volatile
  2114                           
  2115                           ;SPI.c: 89: SSPSTATbits.SMP = 1;
  2116  0040' 8EC7               	bsf	4039,7,c	;volatile
  2117                           
  2118                           ;SPI.c: 92: posicao_cursor_lcd(1,1);
  2119  0042' 0E01               	movlw	1
  2120  0044' 6E00'              	movwf	_posicao_cursor_lcd$1,c
  2121  0046' 0E01               	movlw	1
  2122  0048' EC00' F000'        	call	_posicao_cursor_lcd
  2123                           
  2124                           ;SPI.c: 93: escreve_frase_ram_lcd("SPI configurada!");
  2125  004C' 0E00'              	movlw	low STR_4
  2126  004E' 6E00'              	movwf	_escreve_frase_ram_lcd$0,c
  2127  0050' 0E00'              	movlw	high STR_4
  2128  0052' 6E01'              	movwf	_escreve_frase_ram_lcd$0+1,c
  2129  0054' EC00' F000'        	call	_escreve_frase_ram_lcd	;wreg free
  2130                           
  2131                           ;SPI.c: 94: escreve_cmd_lcd(0b00000001);
  2132  0058' 0E01               	movlw	1
  2133  005A' EC00' F000'        	call	_escreve_cmd_lcd
  2134  005E' 0012               	return		;funcret
  2135  0060'                    __end_of_inicializa_SPI:
  2136                           	opt stack 0
  2137                           tblptru	equ	0xFF8
  2138                           tblptrh	equ	0xFF7
  2139                           tblptrl	equ	0xFF6
  2140                           tablat	equ	0xFF5
  2141                           intcon	equ	0xFF2
  2142                           intcon2	equ	0xFF1
  2143                           intcon3	equ	0xFF0
  2144                           postinc0	equ	0xFEE
  2145                           wreg	equ	0xFE8
  2146                           postdec1	equ	0xFE5
  2147                           fsr1l	equ	0xFE1
  2148                           postinc2	equ	0xFDE
  2149                           status	equ	0xFD8
  2150                           
  2151 ;; *************** function _escalonador *****************
  2152 ;; Defined at:
  2153 ;;		line 218 in file "main.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;		None
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  cont            1   32[COMRAM] unsigned char 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  1    wreg      void 
  2160 ;; Registers used:
  2161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, bsr, cstack
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2167 ;;      Params:         0       0       0       0       0       0       0       0       0
  2168 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2169 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2170 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2171 ;;Total ram usage:        3 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    5
  2174 ;; This function calls:
  2175 ;;		_SDCard
  2176 ;;		_acende_led4
  2177 ;; This function is called by:
  2178 ;;		_main
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text15
  2183  0000'                    __ptext15:
  2184                           	opt stack 0
  2185  0000'                    _escalonador:
  2186                           	opt stack 25
  2187                           
  2188                           ;main.c: 220: unsigned char cont;
  2189                           ;main.c: 221: for(cont = 0; cont<2;cont++)
  2190                           
  2191                           ;incstack = 0
  2192  0000' 0E00               	movlw	0
  2193  0002' 6E20'              	movwf	escalonador@cont,c
  2194  0004'                    l1767:
  2195  0004' 0E01               	movlw	1
  2196  0006' 6420'              	cpfsgt	escalonador@cont,c
  2197  0008' D001               	goto	l93
  2198  000A' 0012               	return	
  2199  000C'                    l93:
  2200                           
  2201                           ;main.c: 222: {
  2202                           ;main.c: 223: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  2203  000C' 5020'              	movf	escalonador@cont,w,c
  2204  000E' 0D02               	mullw	2
  2205  0010' 0E00'              	movlw	low _p_tarefas
  2206  0012' 24F3               	addwf	prodl,w,c
  2207  0014' 6ED9               	movwf	fsr2l,c
  2208  0016' 0E00'              	movlw	high _p_tarefas
  2209  0018' 20F4               	addwfc	prodh,w,c
  2210  001A' 6EDA               	movwf	fsr2h,c
  2211  001C' 50DE               	movf	postinc2,w,c
  2212  001E' 10DE               	iorwf	postinc2,w,c
  2213  0020' B4D8               	btfsc	status,2,c
  2214  0022' D03C               	goto	l95
  2215  0024' 5020'              	movf	escalonador@cont,w,c
  2216  0026' 0D02               	mullw	2
  2217  0028' 0E00'              	movlw	low _tempo_tarefa
  2218  002A' 24F3               	addwf	prodl,w,c
  2219  002C' 6ED9               	movwf	fsr2l,c
  2220  002E' 0E00'              	movlw	high _tempo_tarefa
  2221  0030' 20F4               	addwfc	prodh,w,c
  2222  0032' 6EDA               	movwf	fsr2h,c
  2223  0034' 50DE               	movf	postinc2,w,c
  2224  0036' 10DE               	iorwf	postinc2,w,c
  2225  0038' A4D8               	btfss	status,2,c
  2226  003A' D030               	goto	l95
  2227                           
  2228                           ;main.c: 224: {
  2229                           ;main.c: 225: tarefa_em_execucao = 1;
  2230  003C' 0E01               	movlw	1
  2231  003E' 6E1B'              	movwf	_tarefa_em_execucao,c	;volatile
  2232                           
  2233                           ;main.c: 226: timeout_tarefa = 20000;
  2234  0040' 0E4E               	movlw	78
  2235  0042' 6E16'              	movwf	_timeout_tarefa+1,c
  2236  0044' 0E20               	movlw	32
  2237  0046' 6E15'              	movwf	_timeout_tarefa,c
  2238                           
  2239                           ;main.c: 227: p_tarefas[cont]();
  2240  0048' 5020'              	movf	escalonador@cont,w,c
  2241  004A' 0D02               	mullw	2
  2242  004C' 0E00'              	movlw	low _p_tarefas
  2243  004E' 24F3               	addwf	prodl,w,c
  2244  0050' 6ED9               	movwf	fsr2l,c
  2245  0052' 0E00'              	movlw	high _p_tarefas
  2246  0054' 20F4               	addwfc	prodh,w,c
  2247  0056' 6EDA               	movwf	fsr2h,c
  2248  0058' D801               	call	u958
  2249  005A' D00A               	goto	u959
  2250  005C'                    u958:
  2251  005C' 0005               	push	
  2252  005E' 6EFA               	movwf	pclath,c
  2253  0060' 50DE               	movf	postinc2,w,c
  2254  0062' 6EFD               	movwf	tosl,c
  2255  0064' 50DE               	movf	postinc2,w,c
  2256  0066' 6EFE               	movwf	tosh,c
  2257  0068' 50F8               	movf	tblptru,w,c
  2258  006A' 6EFF               	movwf	tosu,c
  2259  006C' 50FA               	movf	pclath,w,c
  2260  006E' 0012               	return		;indir
  2261  0070'                    u959:
  2262                           
  2263                           ;main.c: 228: tarefa_em_execucao = 0;
  2264  0070' 0E00               	movlw	0
  2265  0072' 6E1B'              	movwf	_tarefa_em_execucao,c	;volatile
  2266                           
  2267                           ;main.c: 229: tempo_tarefa[cont] = tempo_backup[cont];
  2268  0074' 5020'              	movf	escalonador@cont,w,c
  2269  0076' 0D02               	mullw	2
  2270  0078' 0E00'              	movlw	low _tempo_backup
  2271  007A' 24F3               	addwf	prodl,w,c
  2272  007C' 6ED9               	movwf	fsr2l,c
  2273  007E' 0E00'              	movlw	high _tempo_backup
  2274  0080' 20F4               	addwfc	prodh,w,c
  2275  0082' 6EDA               	movwf	fsr2h,c
  2276  0084' 5020'              	movf	escalonador@cont,w,c
  2277  0086' 0D02               	mullw	2
  2278  0088' 0E00'              	movlw	low _tempo_tarefa
  2279  008A' 24F3               	addwf	prodl,w,c
  2280  008C' 6EE1               	movwf	fsr1l,c
  2281  008E' 0E00'              	movlw	high _tempo_tarefa
  2282  0090' 20F4               	addwfc	prodh,w,c
  2283  0092' 6EE2               	movwf	fsr1h,c
  2284  0094' CFDE FFE6          	movff	postinc2,postinc1
  2285  0098' CFDD FFE5          	movff	postdec2,postdec1
  2286  009C'                    l95:
  2287  009C' 2A20'              	incf	escalonador@cont,f,c
  2288  009E' D7B2               	goto	l1767
  2289  00A0'                    __end_of_escalonador:
  2290                           	opt stack 0
  2291                           tosu	equ	0xFFF
  2292                           tosh	equ	0xFFE
  2293                           tosl	equ	0xFFD
  2294                           pclath	equ	0xFFA
  2295                           tblptru	equ	0xFF8
  2296                           tblptrh	equ	0xFF7
  2297                           tblptrl	equ	0xFF6
  2298                           tablat	equ	0xFF5
  2299                           prodh	equ	0xFF4
  2300                           prodl	equ	0xFF3
  2301                           intcon	equ	0xFF2
  2302                           intcon2	equ	0xFF1
  2303                           intcon3	equ	0xFF0
  2304                           postinc0	equ	0xFEE
  2305                           wreg	equ	0xFE8
  2306                           postinc1	equ	0xFE6
  2307                           postdec1	equ	0xFE5
  2308                           fsr1h	equ	0xFE2
  2309                           fsr1l	equ	0xFE1
  2310                           postinc2	equ	0xFDE
  2311                           postdec2	equ	0xFDD
  2312                           fsr2h	equ	0xFDA
  2313                           fsr2l	equ	0xFD9
  2314                           status	equ	0xFD8
  2315                           
  2316 ;; *************** function _SDCard *****************
  2317 ;; Defined at:
  2318 ;;		line 298 in file "main.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;		None
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;		None
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  1    wreg      void 
  2325 ;; Registers used:
  2326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, bsr, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2332 ;;      Params:         0       0       0       0       0       0       0       0       0
  2333 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2334 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2335 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2336 ;;Total ram usage:        2 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:    4
  2339 ;; This function calls:
  2340 ;;		_WriteSPI_
  2341 ;;		_controle_shrc
  2342 ;;		_escreve_cmd_lcd
  2343 ;;		_escreve_frase_ram_lcd
  2344 ;;		_posicao_cursor_lcd
  2345 ;;		_shrc_seta_bit
  2346 ;; This function is called by:
  2347 ;;		_inicializa_tarefas
  2348 ;;		_escalonador
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text16
  2353  0000'                    __ptext16:
  2354                           	opt stack 0
  2355  0000'                    _SDCard:
  2356                           	opt stack 25
  2357                           
  2358                           ;main.c: 311: WriteSPI_(50);
  2359                           
  2360                           ;incstack = 0
  2361  0000' 0E32               	movlw	50
  2362  0002' EC00' F000'        	call	_WriteSPI_
  2363                           
  2364                           ;main.c: 312: LATBbits.LATB4 = PIR1bits.SSPIF;
  2365  0006' A69E               	btfss	3998,3,c	;volatile
  2366  0008' D002               	bra	u835
  2367  000A' 888A               	bsf	3978,4,c	;volatile
  2368  000C' D001               	bra	u837
  2369  000E'                    u835:
  2370  000E' 988A               	bcf	3978,4,c	;volatile
  2371  0010'                    u837:
  2372                           
  2373                           ;main.c: 313: if(PIR1bits.SSPIF){
  2374  0010' A69E               	btfss	3998,3,c	;volatile
  2375  0012' D006               	goto	l115
  2376                           
  2377                           ;main.c: 314: shrc_seta_bit(2);
  2378  0014' 0E02               	movlw	2
  2379  0016' EC00' F000'        	call	_shrc_seta_bit
  2380                           
  2381                           ;main.c: 315: controle_shrc();
  2382  001A' EC00' F000'        	call	_controle_shrc	;wreg free
  2383                           
  2384                           ;main.c: 316: }
  2385  001E' D005               	goto	l116
  2386  0020'                    l115:
  2387                           
  2388                           ;main.c: 317: else{
  2389                           ;main.c: 318: shrc_seta_bit(5);
  2390  0020' 0E05               	movlw	5
  2391  0022' EC00' F000'        	call	_shrc_seta_bit
  2392                           
  2393                           ;main.c: 319: controle_shrc();
  2394  0026' EC00' F000'        	call	_controle_shrc	;wreg free
  2395  002A'                    l116:
  2396                           
  2397                           ;main.c: 320: }
  2398                           ;main.c: 321: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2399  002A' 0E1A               	movlw	26
  2400  002C' 6E00'              	movwf	(??_SDCard+1)& (0+255),c
  2401  002E' 0E5E               	movlw	94
  2402  0030' 6E00'              	movwf	??_SDCard& (0+255),c
  2403  0032' 0E6E               	movlw	110
  2404  0034'                    u1517:
  2405  0034' 2EE8               	decfsz	wreg,f,c
  2406  0036' D7FE               	bra	u1517
  2407  0038' 2E00'              	decfsz	??_SDCard& (0+255),f,c
  2408  003A' D7FC               	bra	u1517
  2409  003C' 2E00'              	decfsz	(??_SDCard+1)& (0+255),f,c
  2410  003E' D7FA               	bra	u1517
  2411  0040' D000               	nop2	
  2412                           
  2413                           ;main.c: 322: LATBbits.LATB4 = 0;
  2414  0042' 988A               	bcf	3978,4,c	;volatile
  2415                           
  2416                           ;main.c: 324: posicao_cursor_lcd(1,0);
  2417  0044' 0E00               	movlw	0
  2418  0046' 6E00'              	movwf	_posicao_cursor_lcd$1,c
  2419  0048' 0E01               	movlw	1
  2420  004A' EC00' F000'        	call	_posicao_cursor_lcd
  2421                           
  2422                           ;main.c: 325: escreve_frase_ram_lcd("Attempting to");
  2423  004E' 0E00'              	movlw	low STR_1
  2424  0050' 6E00'              	movwf	_escreve_frase_ram_lcd$0,c
  2425  0052' 0E00'              	movlw	high STR_1
  2426  0054' 6E01'              	movwf	_escreve_frase_ram_lcd$0+1,c
  2427  0056' EC00' F000'        	call	_escreve_frase_ram_lcd	;wreg free
  2428                           
  2429                           ;main.c: 326: posicao_cursor_lcd(1,0);
  2430  005A' 0E00               	movlw	0
  2431  005C' 6E00'              	movwf	_posicao_cursor_lcd$1,c
  2432  005E' 0E01               	movlw	1
  2433  0060' EC00' F000'        	call	_posicao_cursor_lcd
  2434                           
  2435                           ;main.c: 327: escreve_frase_ram_lcd("             ");
  2436  0064' 0E00'              	movlw	low STR_2
  2437  0066' 6E00'              	movwf	_escreve_frase_ram_lcd$0,c
  2438  0068' 0E00'              	movlw	high STR_2
  2439  006A' 6E01'              	movwf	_escreve_frase_ram_lcd$0+1,c
  2440  006C' EC00' F000'        	call	_escreve_frase_ram_lcd	;wreg free
  2441                           
  2442                           ;main.c: 328: posicao_cursor_lcd(1,0);
  2443  0070' 0E00               	movlw	0
  2444  0072' 6E00'              	movwf	_posicao_cursor_lcd$1,c
  2445  0074' 0E01               	movlw	1
  2446  0076' EC00' F000'        	call	_posicao_cursor_lcd
  2447                           
  2448                           ;main.c: 329: escreve_frase_ram_lcd("mount file sys");
  2449  007A' 0E00'              	movlw	low STR_3
  2450  007C' 6E00'              	movwf	_escreve_frase_ram_lcd$0,c
  2451  007E' 0E00'              	movlw	high STR_3
  2452  0080' 6E01'              	movwf	_escreve_frase_ram_lcd$0+1,c
  2453  0082' EC00' F000'        	call	_escreve_frase_ram_lcd	;wreg free
  2454                           
  2455                           ;main.c: 331: escreve_cmd_lcd(0b00000001);
  2456  0086' 0E01               	movlw	1
  2457  0088' EC00' F000'        	call	_escreve_cmd_lcd
  2458  008C' 0012               	return		;funcret
  2459  008E'                    __end_of_SDCard:
  2460                           	opt stack 0
  2461                           tosu	equ	0xFFF
  2462                           tosh	equ	0xFFE
  2463                           tosl	equ	0xFFD
  2464                           pclath	equ	0xFFA
  2465                           tblptru	equ	0xFF8
  2466                           tblptrh	equ	0xFF7
  2467                           tblptrl	equ	0xFF6
  2468                           tablat	equ	0xFF5
  2469                           prodh	equ	0xFF4
  2470                           prodl	equ	0xFF3
  2471                           intcon	equ	0xFF2
  2472                           intcon2	equ	0xFF1
  2473                           intcon3	equ	0xFF0
  2474                           postinc0	equ	0xFEE
  2475                           wreg	equ	0xFE8
  2476                           postinc1	equ	0xFE6
  2477                           postdec1	equ	0xFE5
  2478                           fsr1h	equ	0xFE2
  2479                           fsr1l	equ	0xFE1
  2480                           postinc2	equ	0xFDE
  2481                           postdec2	equ	0xFDD
  2482                           fsr2h	equ	0xFDA
  2483                           fsr2l	equ	0xFD9
  2484                           status	equ	0xFD8
  2485                           
  2486 ;; *************** function _acende_led4 *****************
  2487 ;; Defined at:
  2488 ;;		line 437 in file "main.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;		None
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		wreg, status,2, status,0, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2502 ;;      Params:         0       0       0       0       0       0       0       0       0
  2503 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2505 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2506 ;;Total ram usage:        0 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    3
  2509 ;; This function calls:
  2510 ;;		_shrc_apaga_bit
  2511 ;;		_shrc_seta_bit
  2512 ;; This function is called by:
  2513 ;;		_inicializa_tarefas
  2514 ;;		_escalonador
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text17
  2519  0000'                    __ptext17:
  2520                           	opt stack 0
  2521  0000'                    _acende_led4:
  2522                           	opt stack 26
  2523                           
  2524                           ;main.c: 438: static unsigned char flag = 0;
  2525                           ;main.c: 439: flag = !flag;
  2526                           
  2527                           ;incstack = 0
  2528  0000' 501A'              	movf	acende_led4@flag,w,c
  2529  0002' A4D8               	btfss	status,2,c
  2530  0004' D002               	goto	u160
  2531  0006' 0E01               	movlw	1
  2532  0008' D001               	goto	u170
  2533  000A'                    u160:
  2534  000A' 0E00               	movlw	0
  2535  000C'                    u170:
  2536  000C' 6E1A'              	movwf	acende_led4@flag,c
  2537                           
  2538                           ;main.c: 440: if(!flag)
  2539  000E' 501A'              	movf	acende_led4@flag,w,c
  2540  0010' A4D8               	btfss	status,2,c
  2541  0012' D004               	goto	l122
  2542                           
  2543                           ;main.c: 441: {
  2544                           ;main.c: 442: shrc_seta_bit(0);
  2545  0014' 0E00               	movlw	0
  2546  0016' EC00' F000'        	call	_shrc_seta_bit
  2547                           
  2548                           ;main.c: 443: }
  2549  001A' 0012               	return	
  2550  001C'                    l122:
  2551                           
  2552                           ;main.c: 444: else
  2553                           ;main.c: 445: {
  2554                           ;main.c: 446: shrc_apaga_bit(0);
  2555  001C' 0E00               	movlw	0
  2556  001E' EC00' F000'        	call	_shrc_apaga_bit
  2557  0022' 0012               	return	
  2558  0024'                    __end_of_acende_led4:
  2559                           	opt stack 0
  2560                           tosu	equ	0xFFF
  2561                           tosh	equ	0xFFE
  2562                           tosl	equ	0xFFD
  2563                           pclath	equ	0xFFA
  2564                           tblptru	equ	0xFF8
  2565                           tblptrh	equ	0xFF7
  2566                           tblptrl	equ	0xFF6
  2567                           tablat	equ	0xFF5
  2568                           prodh	equ	0xFF4
  2569                           prodl	equ	0xFF3
  2570                           intcon	equ	0xFF2
  2571                           intcon2	equ	0xFF1
  2572                           intcon3	equ	0xFF0
  2573                           postinc0	equ	0xFEE
  2574                           wreg	equ	0xFE8
  2575                           postinc1	equ	0xFE6
  2576                           postdec1	equ	0xFE5
  2577                           fsr1h	equ	0xFE2
  2578                           fsr1l	equ	0xFE1
  2579                           postinc2	equ	0xFDE
  2580                           postdec2	equ	0xFDD
  2581                           fsr2h	equ	0xFDA
  2582                           fsr2l	equ	0xFD9
  2583                           status	equ	0xFD8
  2584                           
  2585 ;; *************** function _shrc_apaga_bit *****************
  2586 ;; Defined at:
  2587 ;;		line 124 in file "bibliotecas/SHRC.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  posicao_bit     1    wreg     unsigned char 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  posicao_bit     1   27[COMRAM] unsigned char 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2601 ;;      Params:         0       0       0       0       0       0       0       0       0
  2602 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2603 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2604 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2605 ;;Total ram usage:        3 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    2
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_acende_led4
  2612 ;;		_timer_dois
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text18
  2617  0000'                    __ptext18:
  2618                           	opt stack 0
  2619  0000'                    _shrc_apaga_bit:
  2620                           	opt stack 26
  2621                           
  2622                           ;incstack = 0
  2623                           ;shrc_apaga_bit@posicao_bit stored from wreg
  2624  0000' 6E1B'              	movwf	shrc_apaga_bit@posicao_bit,c
  2625                           
  2626                           ;SHRC.c: 126: dado &= ~(1<<posicao_bit);
  2627  0002' C01B' F019'        	movff	shrc_apaga_bit@posicao_bit,??_shrc_apaga_bit
  2628  0006' 0E01               	movlw	1
  2629  0008' 6E00'              	movwf	(??_shrc_apaga_bit+1)& (0+255),c
  2630  000A' 2A19'              	incf	??_shrc_apaga_bit,f,c
  2631  000C' D002               	goto	u74
  2632  000E'                    u75:
  2633  000E' 90D8               	bcf	status,0,c
  2634  0010' 361A'              	rlcf	??_shrc_apaga_bit+1,f,c
  2635  0012'                    u74:
  2636  0012' 2E19'              	decfsz	??_shrc_apaga_bit,f,c
  2637  0014' D7FC               	goto	u75
  2638  0016' 501A'              	movf	??_shrc_apaga_bit+1,w,c
  2639  0018' 0AFF               	xorlw	255
  2640  001A' 1619'              	andwf	_dado,f,c
  2641  001C' 0012               	return		;funcret
  2642  001E'                    __end_of_shrc_apaga_bit:
  2643                           	opt stack 0
  2644                           tosu	equ	0xFFF
  2645                           tosh	equ	0xFFE
  2646                           tosl	equ	0xFFD
  2647                           pclath	equ	0xFFA
  2648                           tblptru	equ	0xFF8
  2649                           tblptrh	equ	0xFF7
  2650                           tblptrl	equ	0xFF6
  2651                           tablat	equ	0xFF5
  2652                           prodh	equ	0xFF4
  2653                           prodl	equ	0xFF3
  2654                           intcon	equ	0xFF2
  2655                           intcon2	equ	0xFF1
  2656                           intcon3	equ	0xFF0
  2657                           postinc0	equ	0xFEE
  2658                           wreg	equ	0xFE8
  2659                           postinc1	equ	0xFE6
  2660                           postdec1	equ	0xFE5
  2661                           fsr1h	equ	0xFE2
  2662                           fsr1l	equ	0xFE1
  2663                           postinc2	equ	0xFDE
  2664                           postdec2	equ	0xFDD
  2665                           fsr2h	equ	0xFDA
  2666                           fsr2l	equ	0xFD9
  2667                           status	equ	0xFD8
  2668                           
  2669 ;; *************** function _shrc_seta_bit *****************
  2670 ;; Defined at:
  2671 ;;		line 119 in file "bibliotecas/SHRC.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  posicao_bit     1    wreg     unsigned char 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  posicao_bit     1   27[COMRAM] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      void 
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2685 ;;      Params:         0       0       0       0       0       0       0       0       0
  2686 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2687 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2688 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2689 ;;Total ram usage:        3 bytes
  2690 ;; Hardware stack levels used:    1
  2691 ;; Hardware stack levels required when called:    2
  2692 ;; This function calls:
  2693 ;;		Nothing
  2694 ;; This function is called by:
  2695 ;;		_SDCard
  2696 ;;		_acende_led4
  2697 ;;		_timer_dois
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           	psect	text19
  2702  0000'                    __ptext19:
  2703                           	opt stack 0
  2704  0000'                    _shrc_seta_bit:
  2705                           	opt stack 26
  2706                           
  2707                           ;incstack = 0
  2708                           ;shrc_seta_bit@posicao_bit stored from wreg
  2709  0000' 6E1B'              	movwf	shrc_seta_bit@posicao_bit,c
  2710                           
  2711                           ;SHRC.c: 121: dado |= (1<<posicao_bit);
  2712  0002' C01B' F019'        	movff	shrc_seta_bit@posicao_bit,??_shrc_seta_bit
  2713  0006' 0E01               	movlw	1
  2714  0008' 6E00'              	movwf	(??_shrc_seta_bit+1)& (0+255),c
  2715  000A' 2A19'              	incf	??_shrc_seta_bit,f,c
  2716  000C' D002               	goto	u64
  2717  000E'                    u65:
  2718  000E' 90D8               	bcf	status,0,c
  2719  0010' 361A'              	rlcf	??_shrc_seta_bit+1,f,c
  2720  0012'                    u64:
  2721  0012' 2E19'              	decfsz	??_shrc_seta_bit,f,c
  2722  0014' D7FC               	goto	u65
  2723  0016' 501A'              	movf	??_shrc_seta_bit+1,w,c
  2724  0018' 1219'              	iorwf	_dado,f,c
  2725  001A' 0012               	return		;funcret
  2726  001C'                    __end_of_shrc_seta_bit:
  2727                           	opt stack 0
  2728                           tosu	equ	0xFFF
  2729                           tosh	equ	0xFFE
  2730                           tosl	equ	0xFFD
  2731                           pclath	equ	0xFFA
  2732                           tblptru	equ	0xFF8
  2733                           tblptrh	equ	0xFF7
  2734                           tblptrl	equ	0xFF6
  2735                           tablat	equ	0xFF5
  2736                           prodh	equ	0xFF4
  2737                           prodl	equ	0xFF3
  2738                           intcon	equ	0xFF2
  2739                           intcon2	equ	0xFF1
  2740                           intcon3	equ	0xFF0
  2741                           postinc0	equ	0xFEE
  2742                           wreg	equ	0xFE8
  2743                           postinc1	equ	0xFE6
  2744                           postdec1	equ	0xFE5
  2745                           fsr1h	equ	0xFE2
  2746                           fsr1l	equ	0xFE1
  2747                           postinc2	equ	0xFDE
  2748                           postdec2	equ	0xFDD
  2749                           fsr2h	equ	0xFDA
  2750                           fsr2l	equ	0xFD9
  2751                           status	equ	0xFD8
  2752                           
  2753 ;; *************** function _controle_shrc *****************
  2754 ;; Defined at:
  2755 ;;		line 112 in file "bibliotecas/SHRC.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2772 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    3
  2776 ;; This function calls:
  2777 ;;		_ativa_latch_shrc
  2778 ;;		_envia_dados_shrc
  2779 ;; This function is called by:
  2780 ;;		_main
  2781 ;;		_SDCard
  2782 ;;		_timer_dois
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text20
  2787  0000'                    __ptext20:
  2788                           	opt stack 0
  2789  0000'                    _controle_shrc:
  2790                           	opt stack 25
  2791                           
  2792                           ;SHRC.c: 115: envia_dados_shrc(dado);
  2793                           
  2794                           ;incstack = 0
  2795  0000' 5019'              	movf	_dado,w,c
  2796  0002' EC00' F000'        	call	_envia_dados_shrc
  2797                           
  2798                           ;SHRC.c: 116: ativa_latch_shrc();
  2799  0006' EC00' F000'        	call	_ativa_latch_shrc	;wreg free
  2800  000A' 0012               	return		;funcret
  2801  000C'                    __end_of_controle_shrc:
  2802                           	opt stack 0
  2803                           tosu	equ	0xFFF
  2804                           tosh	equ	0xFFE
  2805                           tosl	equ	0xFFD
  2806                           pclath	equ	0xFFA
  2807                           tblptru	equ	0xFF8
  2808                           tblptrh	equ	0xFF7
  2809                           tblptrl	equ	0xFF6
  2810                           tablat	equ	0xFF5
  2811                           prodh	equ	0xFF4
  2812                           prodl	equ	0xFF3
  2813                           intcon	equ	0xFF2
  2814                           intcon2	equ	0xFF1
  2815                           intcon3	equ	0xFF0
  2816                           postinc0	equ	0xFEE
  2817                           wreg	equ	0xFE8
  2818                           postinc1	equ	0xFE6
  2819                           postdec1	equ	0xFE5
  2820                           fsr1h	equ	0xFE2
  2821                           fsr1l	equ	0xFE1
  2822                           postinc2	equ	0xFDE
  2823                           postdec2	equ	0xFDD
  2824                           fsr2h	equ	0xFDA
  2825                           fsr2l	equ	0xFD9
  2826                           status	equ	0xFD8
  2827                           
  2828 ;; *************** function _envia_dados_shrc *****************
  2829 ;; Defined at:
  2830 ;;		line 62 in file "bibliotecas/SHRC.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  data_to_shrc    1    wreg     unsigned char 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  data_to_shrc    1   26[COMRAM] unsigned char 
  2835 ;;  contador        1   25[COMRAM] unsigned char 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2845 ;;      Params:         0       0       0       0       0       0       0       0       0
  2846 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2848 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2849 ;;Total ram usage:        2 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    2
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_controle_shrc
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text21
  2860  0000'                    __ptext21:
  2861                           	opt stack 0
  2862  0000'                    _envia_dados_shrc:
  2863                           	opt stack 25
  2864                           
  2865                           ;incstack = 0
  2866                           ;envia_dados_shrc@data_to_shrc stored from wreg
  2867  0000' 6E1A'              	movwf	envia_dados_shrc@data_to_shrc,c
  2868                           
  2869                           ;SHRC.c: 64: unsigned char contador=0;
  2870  0002' 0E00               	movlw	0
  2871  0004' 6E19'              	movwf	envia_dados_shrc@contador,c
  2872                           
  2873                           ;SHRC.c: 65: (INTCONbits.GIE = 0);
  2874  0006' 9EF2               	bcf	intcon,7,c	;volatile
  2875                           
  2876                           ;SHRC.c: 67: while(contador<=7)
  2877  0008' D018               	goto	l161
  2878  000A'                    
  2879                           ;SHRC.c: 68: {
  2880                           ;SHRC.c: 69: if((data_to_shrc & 0x80) == 0)
  2881  000A' BE1A'              	btfsc	envia_dados_shrc@data_to_shrc,7,c
  2882  000C' D002               	goto	l163
  2883                           
  2884                           ;SHRC.c: 70: {
  2885                           ;SHRC.c: 71: LATBbits.LATB7 = 0;
  2886  000E' 9E8A               	bcf	3978,7,c	;volatile
  2887                           
  2888                           ;SHRC.c: 72: }
  2889  0010' D001               	goto	l164
  2890  0012'                    l163:
  2891                           
  2892                           ;SHRC.c: 73: else
  2893                           ;SHRC.c: 74: {
  2894                           ;SHRC.c: 75: LATBbits.LATB7 = 1;
  2895  0012' 8E8A               	bsf	3978,7,c	;volatile
  2896  0014'                    l164:
  2897                           
  2898                           ;SHRC.c: 76: }
  2899                           ;SHRC.c: 77: data_to_shrc = data_to_shrc << 1;
  2900  0014' 501A'              	movf	envia_dados_shrc@data_to_shrc,w,c
  2901  0016' 241A'              	addwf	envia_dados_shrc@data_to_shrc,w,c
  2902  0018' 6E1A'              	movwf	envia_dados_shrc@data_to_shrc,c
  2903                           
  2904                           ;SHRC.c: 78: _delay((unsigned long)((30)*(20000000/4000000.0)));
  2905  001A' 0E32               	movlw	50
  2906  001C'                    u1527:
  2907  001C' 2EE8               	decfsz	wreg,f,c
  2908  001E' D7FE               	bra	u1527
  2909                           
  2910                           ;SHRC.c: 79: LATBbits.LATB6 = 1;
  2911  0020' 8C8A               	bsf	3978,6,c	;volatile
  2912                           
  2913                           ;SHRC.c: 80: _delay((unsigned long)((30)*(20000000/4000000.0)));
  2914  0022' 0E32               	movlw	50
  2915  0024'                    u1537:
  2916  0024' 2EE8               	decfsz	wreg,f,c
  2917  0026' D7FE               	bra	u1537
  2918                           
  2919                           ;SHRC.c: 81: LATBbits.LATB7 = 0;
  2920  0028' 9E8A               	bcf	3978,7,c	;volatile
  2921                           
  2922                           ;SHRC.c: 82: _delay((unsigned long)((30)*(20000000/4000000.0)));
  2923  002A' 0E32               	movlw	50
  2924  002C'                    u1547:
  2925  002C' 2EE8               	decfsz	wreg,f,c
  2926  002E' D7FE               	bra	u1547
  2927                           
  2928                           ;SHRC.c: 83: LATBbits.LATB6 = 0;
  2929  0030' 9C8A               	bcf	3978,6,c	;volatile
  2930                           
  2931                           ;SHRC.c: 84: _delay((unsigned long)((30)*(20000000/4000000.0)));
  2932  0032' 0E32               	movlw	50
  2933  0034'                    u1557:
  2934  0034' 2EE8               	decfsz	wreg,f,c
  2935  0036' D7FE               	bra	u1557
  2936                           
  2937                           ;SHRC.c: 85: contador++;
  2938  0038' 2A19'              	incf	envia_dados_shrc@contador,f,c
  2939  003A'                    l161:
  2940  003A' 0E07               	movlw	7
  2941  003C' 6419'              	cpfsgt	envia_dados_shrc@contador,c
  2942  003E' D7E5               	goto	l162
  2943                           
  2944                           ;SHRC.c: 86: }
  2945                           ;SHRC.c: 87: (INTCONbits.GIE = 1);
  2946  0040' 8EF2               	bsf	intcon,7,c	;volatile
  2947  0042' 0012               	return		;funcret
  2948  0044'                    __end_of_envia_dados_shrc:
  2949                           	opt stack 0
  2950                           tosu	equ	0xFFF
  2951                           tosh	equ	0xFFE
  2952                           tosl	equ	0xFFD
  2953                           pclath	equ	0xFFA
  2954                           tblptru	equ	0xFF8
  2955                           tblptrh	equ	0xFF7
  2956                           tblptrl	equ	0xFF6
  2957                           tablat	equ	0xFF5
  2958                           prodh	equ	0xFF4
  2959                           prodl	equ	0xFF3
  2960                           intcon	equ	0xFF2
  2961                           intcon2	equ	0xFF1
  2962                           intcon3	equ	0xFF0
  2963                           postinc0	equ	0xFEE
  2964                           wreg	equ	0xFE8
  2965                           postinc1	equ	0xFE6
  2966                           postdec1	equ	0xFE5
  2967                           fsr1h	equ	0xFE2
  2968                           fsr1l	equ	0xFE1
  2969                           postinc2	equ	0xFDE
  2970                           postdec2	equ	0xFDD
  2971                           fsr2h	equ	0xFDA
  2972                           fsr2l	equ	0xFD9
  2973                           status	equ	0xFD8
  2974                           
  2975 ;; *************** function _ativa_latch_shrc *****************
  2976 ;; Defined at:
  2977 ;;		line 96 in file "bibliotecas/SHRC.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;		None
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		wreg
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2991 ;;      Params:         0       0       0       0       0       0       0       0       0
  2992 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2993 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2994 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2995 ;;Total ram usage:        0 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:    2
  2998 ;; This function calls:
  2999 ;;		Nothing
  3000 ;; This function is called by:
  3001 ;;		_controle_shrc
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           	psect	text22
  3006  0000'                    __ptext22:
  3007                           	opt stack 0
  3008  0000'                    _ativa_latch_shrc:
  3009                           	opt stack 25
  3010                           
  3011                           ;SHRC.c: 99: LATBbits.LATB5 = 0;
  3012                           
  3013                           ;incstack = 0
  3014  0000' 9A8A               	bcf	3978,5,c	;volatile
  3015                           
  3016                           ;SHRC.c: 100: _delay((unsigned long)((30)*(20000000/4000000.0)));
  3017  0002' 0E32               	movlw	50
  3018  0004'                    u1567:
  3019  0004' 2EE8               	decfsz	wreg,f,c
  3020  0006' D7FE               	bra	u1567
  3021                           
  3022                           ;SHRC.c: 101: LATBbits.LATB5 = 1;
  3023  0008' 8A8A               	bsf	3978,5,c	;volatile
  3024                           
  3025                           ;SHRC.c: 102: _delay((unsigned long)((60)*(20000000/4000000.0)));
  3026  000A' 0E64               	movlw	100
  3027  000C'                    u1577:
  3028  000C' 2EE8               	decfsz	wreg,f,c
  3029  000E' D7FE               	bra	u1577
  3030                           
  3031                           ;SHRC.c: 103: LATBbits.LATB5 = 0;
  3032  0010' 9A8A               	bcf	3978,5,c	;volatile
  3033  0012' 0012               	return		;funcret
  3034  0014'                    __end_of_ativa_latch_shrc:
  3035                           	opt stack 0
  3036                           tosu	equ	0xFFF
  3037                           tosh	equ	0xFFE
  3038                           tosl	equ	0xFFD
  3039                           pclath	equ	0xFFA
  3040                           tblptru	equ	0xFF8
  3041                           tblptrh	equ	0xFF7
  3042                           tblptrl	equ	0xFF6
  3043                           tablat	equ	0xFF5
  3044                           prodh	equ	0xFF4
  3045                           prodl	equ	0xFF3
  3046                           intcon	equ	0xFF2
  3047                           intcon2	equ	0xFF1
  3048                           intcon3	equ	0xFF0
  3049                           postinc0	equ	0xFEE
  3050                           wreg	equ	0xFE8
  3051                           postinc1	equ	0xFE6
  3052                           postdec1	equ	0xFE5
  3053                           fsr1h	equ	0xFE2
  3054                           fsr1l	equ	0xFE1
  3055                           postinc2	equ	0xFDE
  3056                           postdec2	equ	0xFDD
  3057                           fsr2h	equ	0xFDA
  3058                           fsr2l	equ	0xFD9
  3059                           status	equ	0xFD8
  3060                           
  3061 ;; *************** function _WriteSPI_ *****************
  3062 ;; Defined at:
  3063 ;;		line 120 in file "bibliotecas/SPI.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  dado            1    wreg     unsigned char 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  dado            1   26[COMRAM] unsigned char 
  3068 ;;  TempVar         1   25[COMRAM] unsigned char 
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      unsigned char 
  3071 ;; Registers used:
  3072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, bsr, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3078 ;;      Params:         0       0       0       0       0       0       0       0       0
  3079 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3080 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3081 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3082 ;;Total ram usage:        2 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    3
  3085 ;; This function calls:
  3086 ;;		_escreve_frase_ram_lcd
  3087 ;;		_posicao_cursor_lcd
  3088 ;; This function is called by:
  3089 ;;		_SDCard
  3090 ;;		_dummy_clocks
  3091 ;;		_proceed
  3092 ;;		_command
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text23
  3097  0000'                    __ptext23:
  3098                           	opt stack 0
  3099  0000'                    _WriteSPI_:
  3100                           	opt stack 25
  3101                           
  3102                           ;incstack = 0
  3103                           ;WriteSPI_@dado stored from wreg
  3104  0000' 6E1A'              	movwf	WriteSPI_@dado,c
  3105                           
  3106                           ;SPI.c: 122: unsigned char TempVar;
  3107                           ;SPI.c: 124: TempVar = SSPBUF;
  3108  0002' CFC9 F019'         	movff	4041,WriteSPI_@TempVar	;volatile
  3109                           
  3110                           ;SPI.c: 125: PIR1bits.SSPIF = 0;
  3111  0006' 969E               	bcf	3998,3,c	;volatile
  3112                           
  3113                           ;SPI.c: 126: SSPCON1bits.WCOL = 0;
  3114  0008' 9EC6               	bcf	4038,7,c	;volatile
  3115                           
  3116                           ;SPI.c: 127: SSPBUF = dado;
  3117  000A' C01A' FFC9         	movff	WriteSPI_@dado,4041	;volatile
  3118                           
  3119                           ;SPI.c: 128: if (SSPCON1 & 0x80 )
  3120  000E' BEC6               	btfsc	4038,7,c	;volatile
  3121  0010' 0012               	return	
  3122  0012'                    
  3123                           ;SPI.c: 132: else
  3124                           ;SPI.c: 133: {
  3125                           ;SPI.c: 135: while(!PIR1bits.SSPIF && PIE1bits.SPPIE );
  3126  0012' B69E               	btfsc	3998,3,c	;volatile
  3127  0014' D002               	goto	u760
  3128  0016' BE9D               	btfsc	3997,7,c	;volatile
  3129  0018' D7FC               	goto	l220
  3130  001A'                    u760:
  3131                           
  3132                           ;SPI.c: 139: posicao_cursor_lcd(1,0);
  3133  001A' 0E00               	movlw	0
  3134  001C' 6E00'              	movwf	_posicao_cursor_lcd$1,c
  3135  001E' 0E01               	movlw	1
  3136  0020' EC00' F000'        	call	_posicao_cursor_lcd
  3137                           
  3138                           ;SPI.c: 140: escreve_frase_ram_lcd("all workin");
  3139  0024' 0E00'              	movlw	low STR_5
  3140  0026' 6E00'              	movwf	_escreve_frase_ram_lcd$0,c
  3141  0028' 0E00'              	movlw	high STR_5
  3142  002A' 6E01'              	movwf	_escreve_frase_ram_lcd$0+1,c
  3143  002C' EC00' F000'        	call	_escreve_frase_ram_lcd	;wreg free
  3144                           
  3145                           ;SPI.c: 141: return (0);
  3146                           ;	Return value of _WriteSPI_ is never used
  3147  0030' 0012               	return	
  3148  0032'                    __end_of_WriteSPI_:
  3149                           	opt stack 0
  3150                           tosu	equ	0xFFF
  3151                           tosh	equ	0xFFE
  3152                           tosl	equ	0xFFD
  3153                           pclath	equ	0xFFA
  3154                           tblptru	equ	0xFF8
  3155                           tblptrh	equ	0xFF7
  3156                           tblptrl	equ	0xFF6
  3157                           tablat	equ	0xFF5
  3158                           prodh	equ	0xFF4
  3159                           prodl	equ	0xFF3
  3160                           intcon	equ	0xFF2
  3161                           intcon2	equ	0xFF1
  3162                           intcon3	equ	0xFF0
  3163                           postinc0	equ	0xFEE
  3164                           wreg	equ	0xFE8
  3165                           postinc1	equ	0xFE6
  3166                           postdec1	equ	0xFE5
  3167                           fsr1h	equ	0xFE2
  3168                           fsr1l	equ	0xFE1
  3169                           postinc2	equ	0xFDE
  3170                           postdec2	equ	0xFDD
  3171                           fsr2h	equ	0xFDA
  3172                           fsr2l	equ	0xFD9
  3173                           status	equ	0xFD8
  3174                           
  3175 ;; *************** function _isr *****************
  3176 ;; Defined at:
  3177 ;;		line 120 in file "main.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;		None
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  cont            1   24[COMRAM] unsigned char 
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      void 
  3184 ;; Registers used:
  3185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3191 ;;      Params:         0       0       0       0       0       0       0       0       0
  3192 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3193 ;;      Temps:         20       0       0       0       0       0       0       0       0
  3194 ;;      Totals:        21       0       0       0       0       0       0       0       0
  3195 ;;Total ram usage:       21 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    1
  3198 ;; This function calls:
  3199 ;;		_recebe_dado_uart
  3200 ;;		i2_write_timer_zero
  3201 ;; This function is called by:
  3202 ;;		Interrupt level 2
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	intcode
  3207  0000'                    __pintcode:
  3208                           	opt stack 0
  3209  0000'                    _isr:
  3210                           	opt stack 25
  3211                           
  3212                           ;incstack = 0
  3213  0000' 8200'              	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3214  0002' ED00' F000'        	call	int_func,f	;refresh shadow registers
  3215                           tosu	equ	0xFFF
  3216                           tosh	equ	0xFFE
  3217                           tosl	equ	0xFFD
  3218                           pclath	equ	0xFFA
  3219                           tblptru	equ	0xFF8
  3220                           tblptrh	equ	0xFF7
  3221                           tblptrl	equ	0xFF6
  3222                           tablat	equ	0xFF5
  3223                           prodh	equ	0xFF4
  3224                           prodl	equ	0xFF3
  3225                           intcon	equ	0xFF2
  3226                           intcon2	equ	0xFF1
  3227                           intcon3	equ	0xFF0
  3228                           postinc0	equ	0xFEE
  3229                           wreg	equ	0xFE8
  3230                           postinc1	equ	0xFE6
  3231                           postdec1	equ	0xFE5
  3232                           fsr1h	equ	0xFE2
  3233                           fsr1l	equ	0xFE1
  3234                           postinc2	equ	0xFDE
  3235                           postdec2	equ	0xFDD
  3236                           fsr2h	equ	0xFDA
  3237                           fsr2l	equ	0xFD9
  3238                           status	equ	0xFD8
  3239                           
  3240                           	psect	intcode_body
  3241  0000'                    __pintcode_body:
  3242                           	opt stack 25
  3243  0000'                    int_func:
  3244                           	opt stack 25
  3245  0000' 0006               	pop		; remove dummy address from shadow register refresh
  3246  0002' CFFA F006'         	movff	pclath,??_isr+2
  3247  0006' CFFB F007'         	movff	pclatu,??_isr+3
  3248  000A' CFE9 F008'         	movff	fsr0l,??_isr+4
  3249  000E' CFEA F009'         	movff	fsr0h,??_isr+5
  3250  0012' CFE1 F00A'         	movff	fsr1l,??_isr+6
  3251  0016' CFE2 F00B'         	movff	fsr1h,??_isr+7
  3252  001A' CFD9 F00C'         	movff	fsr2l,??_isr+8
  3253  001E' CFDA F00D'         	movff	fsr2h,??_isr+9
  3254  0022' CFF3 F00E'         	movff	prodl,??_isr+10
  3255  0026' CFF4 F00F'         	movff	prodh,??_isr+11
  3256  002A' CFF6 F010'         	movff	tblptrl,??_isr+12
  3257  002E' CFF7 F011'         	movff	tblptrh,??_isr+13
  3258  0032' CFF8 F012'         	movff	tblptru,??_isr+14
  3259  0036' CFF5 F013'         	movff	tablat,??_isr+15
  3260  003A' C000' F014'        	movff	btemp,??_isr+16
  3261  003E' C001' F015'        	movff	btemp+1,??_isr+17
  3262  0042' C002' F016'        	movff	btemp+2,??_isr+18
  3263  0046' C003' F017'        	movff	btemp+3,??_isr+19
  3264                           
  3265                           ;main.c: 122: unsigned char cont;
  3266                           ;main.c: 125: if (PIE1bits.RCIE && PIR1bits.RCIF)
  3267  004A' BA9D               	btfsc	3997,5,c	;volatile
  3268  004C' AA9E               	btfss	3998,5,c	;volatile
  3269  004E' D004               	goto	i2l79
  3270                           
  3271                           ;main.c: 126: {
  3272                           ;main.c: 127: data_uart_recebe = recebe_dado_uart();
  3273  0050' EC00' F000'        	call	_recebe_dado_uart	;wreg free
  3274  0054' 6E1D'              	movwf	_data_uart_recebe,c
  3275                           
  3276                           ;main.c: 128: PIR1bits.RCIF = 0;
  3277  0056' 9A9E               	bcf	3998,5,c	;volatile
  3278  0058'                    i2l79:
  3279                           
  3280                           ;main.c: 129: }
  3281                           ;main.c: 132: unsigned char cont;
  3282                           ;main.c: 134: if (TMR0IF && T0IF)
  3283  0058' B4F2               	btfsc	intcon,2,c	;volatile
  3284  005A' A4F2               	btfss	intcon,2,c	;volatile
  3285  005C' D036               	goto	i2l80
  3286                           
  3287                           ;main.c: 135: {
  3288                           ;main.c: 136: INTCONbits.TMR0IF = 0;
  3289  005E' 94F2               	bcf	intcon,2,c	;volatile
  3290                           
  3291                           ;main.c: 137: sinaliza_int_timer = 1;
  3292  0060' 0E01               	movlw	1
  3293  0062' 6E1C'              	movwf	_sinaliza_int_timer,c
  3294                           
  3295                           ;main.c: 139: for(cont= 0; cont<2;cont++)
  3296  0064' 0E00               	movlw	0
  3297  0066' 6E18'              	movwf	isr@cont,c
  3298  0068'                    i2l1853:
  3299  0068' 0E01               	movlw	1
  3300  006A' 6418'              	cpfsgt	isr@cont,c
  3301  006C' D001               	goto	i2l81
  3302  006E' D019               	goto	i2u108_40
  3303  0070'                    i2l81:
  3304                           
  3305                           ;main.c: 140: {
  3306                           ;main.c: 141: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
  3307  0070' 5018'              	movf	isr@cont,w,c
  3308  0072' 0D02               	mullw	2
  3309  0074' 0E00'              	movlw	low _tempo_tarefa
  3310  0076' 24F3               	addwf	prodl,w,c
  3311  0078' 6ED9               	movwf	fsr2l,c
  3312  007A' 0E00'              	movlw	high _tempo_tarefa
  3313  007C' 20F4               	addwfc	prodh,w,c
  3314  007E' 6EDA               	movwf	fsr2h,c
  3315  0080' 50DE               	movf	postinc2,w,c
  3316  0082' 10DE               	iorwf	postinc2,w,c
  3317  0084' B4D8               	btfsc	status,2,c
  3318  0086' D00B               	goto	i2l83
  3319  0088' 5018'              	movf	isr@cont,w,c
  3320  008A' 0D02               	mullw	2
  3321  008C' 0E00'              	movlw	low _tempo_tarefa
  3322  008E' 24F3               	addwf	prodl,w,c
  3323  0090' 6ED9               	movwf	fsr2l,c
  3324  0092' 0E00'              	movlw	high _tempo_tarefa
  3325  0094' 20F4               	addwfc	prodh,w,c
  3326  0096' 6EDA               	movwf	fsr2h,c
  3327  0098' 06DE               	decf	postinc2,f,c
  3328  009A' 0E00               	movlw	0
  3329  009C' 5ADD               	subwfb	postdec2,f,c
  3330  009E'                    i2l83:
  3331  009E' 2A18'              	incf	isr@cont,f,c
  3332  00A0' D7E3               	goto	i2l1853
  3333  00A2'                    i2u108_40:
  3334                           
  3335                           ;main.c: 142: }
  3336                           ;main.c: 145: if(tarefa_em_execucao == 1)
  3337  00A2' 041B'              	decf	_tarefa_em_execucao,w,c	;volatile
  3338  00A4' A4D8               	btfss	status,2,c
  3339  00A6' D00B               	goto	i2l85
  3340                           
  3341                           ;main.c: 146: {
  3342                           ;main.c: 147: timeout_tarefa--;
  3343  00A8' 0615'              	decf	_timeout_tarefa,f,c
  3344  00AA' A0D8               	btfss	status,0,c
  3345  00AC' 0616'              	decf	_timeout_tarefa+1,f,c
  3346                           
  3347                           ;main.c: 148: if(!timeout_tarefa)
  3348  00AE' 5015'              	movf	_timeout_tarefa,w,c
  3349  00B0' 1016'              	iorwf	_timeout_tarefa+1,w,c
  3350  00B2' A4D8               	btfss	status,2,c
  3351  00B4' D004               	goto	i2l85
  3352                           
  3353                           ;main.c: 149: {
  3354                           ;main.c: 151: PCLATH = 0;
  3355  00B6' 0E00               	movlw	0
  3356  00B8' 6EFA               	movwf	pclath,c	;volatile
  3357                           
  3358                           ;main.c: 152: PCL = 0;
  3359  00BA' 0E00               	movlw	0
  3360  00BC' 6EF9               	movwf	pcl,c	;volatile
  3361  00BE'                    i2l85:
  3362                           
  3363                           ;main.c: 153: }
  3364                           ;main.c: 154: }
  3365                           ;main.c: 157: write_timer_zero(0x0083);
  3366  00BE' 0E00               	movlw	0
  3367  00C0' 6E01'              	movwf	i2write_timer_zero@timer0+1,c
  3368  00C2' 0E83               	movlw	131
  3369  00C4' 6E00'              	movwf	i2write_timer_zero@timer0,c
  3370  00C6' EC00' F000'        	call	i2_write_timer_zero	;wreg free
  3371  00CA'                    i2l80:
  3372                           
  3373                           ;main.c: 159: }
  3374                           ;main.c: 165: if (INT0IF && INT0IE)
  3375  00CA' B2F2               	btfsc	intcon,1,c	;volatile
  3376  00CC' A8F2               	btfss	intcon,4,c	;volatile
  3377  00CE' D001               	goto	i2l86
  3378                           
  3379                           ;main.c: 166: {
  3380                           ;main.c: 167: INT0IF = 0;
  3381  00D0' 92F2               	bcf	intcon,1,c	;volatile
  3382  00D2'                    i2l86:
  3383  00D2' C017' F003'        	movff	??_isr+19,btemp+3
  3384  00D6' C016' F002'        	movff	??_isr+18,btemp+2
  3385  00DA' C015' F001'        	movff	??_isr+17,btemp+1
  3386  00DE' C014' F000'        	movff	??_isr+16,btemp
  3387  00E2' C013' FFF5         	movff	??_isr+15,tablat
  3388  00E6' C012' FFF8         	movff	??_isr+14,tblptru
  3389  00EA' C011' FFF7         	movff	??_isr+13,tblptrh
  3390  00EE' C010' FFF6         	movff	??_isr+12,tblptrl
  3391  00F2' C00F' FFF4         	movff	??_isr+11,prodh
  3392  00F6' C00E' FFF3         	movff	??_isr+10,prodl
  3393  00FA' C00D' FFDA         	movff	??_isr+9,fsr2h
  3394  00FE' C00C' FFD9         	movff	??_isr+8,fsr2l
  3395  0102' C00B' FFE2         	movff	??_isr+7,fsr1h
  3396  0106' C00A' FFE1         	movff	??_isr+6,fsr1l
  3397  010A' C009' FFEA         	movff	??_isr+5,fsr0h
  3398  010E' C008' FFE9         	movff	??_isr+4,fsr0l
  3399  0112' C007' FFFB         	movff	??_isr+3,pclatu
  3400  0116' C006' FFFA         	movff	??_isr+2,pclath
  3401  011A' 9200'              	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3402  011C' 0011               	retfie		f
  3403  011E'                    __end_of_isr:
  3404                           	opt stack 0
  3405                           tosu	equ	0xFFF
  3406                           tosh	equ	0xFFE
  3407                           tosl	equ	0xFFD
  3408                           pclatu	equ	0xFFB
  3409                           pclath	equ	0xFFA
  3410                           pcl	equ	0xFF9
  3411                           tblptru	equ	0xFF8
  3412                           tblptrh	equ	0xFF7
  3413                           tblptrl	equ	0xFF6
  3414                           tablat	equ	0xFF5
  3415                           prodh	equ	0xFF4
  3416                           prodl	equ	0xFF3
  3417                           intcon	equ	0xFF2
  3418                           intcon2	equ	0xFF1
  3419                           intcon3	equ	0xFF0
  3420                           postinc0	equ	0xFEE
  3421                           fsr0h	equ	0xFEA
  3422                           fsr0l	equ	0xFE9
  3423                           wreg	equ	0xFE8
  3424                           postinc1	equ	0xFE6
  3425                           postdec1	equ	0xFE5
  3426                           fsr1h	equ	0xFE2
  3427                           fsr1l	equ	0xFE1
  3428                           postinc2	equ	0xFDE
  3429                           postdec2	equ	0xFDD
  3430                           fsr2h	equ	0xFDA
  3431                           fsr2l	equ	0xFD9
  3432                           status	equ	0xFD8
  3433                           
  3434 ;; *************** function i2_write_timer_zero *****************
  3435 ;; Defined at:
  3436 ;;		line 137 in file "bibliotecas/hardware.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  timer0          2    0[COMRAM] unsigned int 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  write_timer_    2    2[COMRAM] struct Timers
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      void 
  3443 ;; Registers used:
  3444 ;;		None
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3450 ;;      Params:         2       0       0       0       0       0       0       0       0
  3451 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3453 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3454 ;;Total ram usage:        4 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; This function calls:
  3457 ;;		Nothing
  3458 ;; This function is called by:
  3459 ;;		_isr
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           	psect	text25
  3464  0000'                    __ptext25:
  3465                           	opt stack 0
  3466  0000'                    i2_write_timer_zero:
  3467                           	opt stack 25
  3468                           
  3469                           ;hardware.c: 139: union Timers timer;
  3470                           ;hardware.c: 141: timer.lt = timer0;
  3471                           
  3472                           ;incstack = 0
  3473  0000' C000' F002'        	movff	i2write_timer_zero@timer0,i2write_timer_zero@timer
  3474  0004' C001' F003'        	movff	i2write_timer_zero@timer0+1,i2write_timer_zero@timer+1
  3475                           
  3476                           ;hardware.c: 143: TMR0H = timer.bt[1];
  3477  0008' C003' FFD7         	movff	i2write_timer_zero@timer+1,4055	;volatile
  3478                           
  3479                           ;hardware.c: 144: TMR0L = timer.bt[0];
  3480  000C' C002' FFD6         	movff	i2write_timer_zero@timer,4054	;volatile
  3481  0010' 0012               	return		;funcret
  3482  0012'                    __end_ofi2_write_timer_zero:
  3483                           	opt stack 0
  3484                           tosu	equ	0xFFF
  3485                           tosh	equ	0xFFE
  3486                           tosl	equ	0xFFD
  3487                           pclatu	equ	0xFFB
  3488                           pclath	equ	0xFFA
  3489                           pcl	equ	0xFF9
  3490                           tblptru	equ	0xFF8
  3491                           tblptrh	equ	0xFF7
  3492                           tblptrl	equ	0xFF6
  3493                           tablat	equ	0xFF5
  3494                           prodh	equ	0xFF4
  3495                           prodl	equ	0xFF3
  3496                           intcon	equ	0xFF2
  3497                           intcon2	equ	0xFF1
  3498                           intcon3	equ	0xFF0
  3499                           postinc0	equ	0xFEE
  3500                           fsr0h	equ	0xFEA
  3501                           fsr0l	equ	0xFE9
  3502                           wreg	equ	0xFE8
  3503                           postinc1	equ	0xFE6
  3504                           postdec1	equ	0xFE5
  3505                           fsr1h	equ	0xFE2
  3506                           fsr1l	equ	0xFE1
  3507                           postinc2	equ	0xFDE
  3508                           postdec2	equ	0xFDD
  3509                           fsr2h	equ	0xFDA
  3510                           fsr2l	equ	0xFD9
  3511                           status	equ	0xFD8
  3512                           
  3513 ;; *************** function _recebe_dado_uart *****************
  3514 ;; Defined at:
  3515 ;;		line 138 in file "bibliotecas/uart.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;		None
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;		None
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      unsigned char 
  3522 ;; Registers used:
  3523 ;;		wreg, status,2
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3529 ;;      Params:         0       0       0       0       0       0       0       0       0
  3530 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3532 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3533 ;;Total ram usage:        0 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; This function calls:
  3536 ;;		Nothing
  3537 ;; This function is called by:
  3538 ;;		_isr
  3539 ;;		_recebe_string_uart
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text26
  3544  0000'                    __ptext26:
  3545                           	opt stack 0
  3546  0000'                    _recebe_dado_uart:
  3547                           	opt stack 25
  3548                           
  3549                           ;uart.c: 140: while(RCIF==0);
  3550                           
  3551                           ;incstack = 0
  3552  0000' AA9E               	btfss	3998,5,c	;volatile
  3553  0002' D7FE               	goto	_recebe_dado_uart
  3554                           
  3555                           ;uart.c: 141: if(RCSTAbits.OERR)
  3556  0004' A2AB               	btfss	4011,1,c	;volatile
  3557  0006' D003               	goto	i2l423
  3558                           
  3559                           ;uart.c: 142: {
  3560                           ;uart.c: 143: CREN = 0;
  3561  0008' 98AB               	bcf	4011,4,c	;volatile
  3562                           
  3563                           ;uart.c: 144: __nop();
  3564  000A' F000               	nop	
  3565                           
  3566                           ;uart.c: 145: CREN=1;
  3567  000C' 88AB               	bsf	4011,4,c	;volatile
  3568  000E'                    i2l423:
  3569                           
  3570                           ;uart.c: 146: }
  3571                           ;uart.c: 147: return(RCREG);
  3572  000E' 50AE               	movf	4014,w,c	;volatile
  3573  0010' 0012               	return	
  3574  0012'                    __end_of_recebe_dado_uart:
  3575                           	opt stack 0
  3576                           tosu	equ	0xFFF
  3577                           tosh	equ	0xFFE
  3578                           tosl	equ	0xFFD
  3579                           pclatu	equ	0xFFB
  3580                           pclath	equ	0xFFA
  3581                           pcl	equ	0xFF9
  3582                           tblptru	equ	0xFF8
  3583                           tblptrh	equ	0xFF7
  3584                           tblptrl	equ	0xFF6
  3585                           tablat	equ	0xFF5
  3586                           prodh	equ	0xFF4
  3587                           prodl	equ	0xFF3
  3588                           intcon	equ	0xFF2
  3589                           intcon2	equ	0xFF1
  3590                           intcon3	equ	0xFF0
  3591                           postinc0	equ	0xFEE
  3592                           fsr0h	equ	0xFEA
  3593                           fsr0l	equ	0xFE9
  3594                           wreg	equ	0xFE8
  3595                           postinc1	equ	0xFE6
  3596                           postdec1	equ	0xFE5
  3597                           fsr1h	equ	0xFE2
  3598                           fsr1l	equ	0xFE1
  3599                           postinc2	equ	0xFDE
  3600                           postdec2	equ	0xFDD
  3601                           fsr2h	equ	0xFDA
  3602                           fsr2l	equ	0xFD9
  3603                           status	equ	0xFD8
  3604                           tosu	equ	0xFFF
  3605                           tosh	equ	0xFFE
  3606                           tosl	equ	0xFFD
  3607                           pclatu	equ	0xFFB
  3608                           pclath	equ	0xFFA
  3609                           pcl	equ	0xFF9
  3610                           tblptru	equ	0xFF8
  3611                           tblptrh	equ	0xFF7
  3612                           tblptrl	equ	0xFF6
  3613                           tablat	equ	0xFF5
  3614                           prodh	equ	0xFF4
  3615                           prodl	equ	0xFF3
  3616                           intcon	equ	0xFF2
  3617                           intcon2	equ	0xFF1
  3618                           intcon3	equ	0xFF0
  3619                           postinc0	equ	0xFEE
  3620                           fsr0h	equ	0xFEA
  3621                           fsr0l	equ	0xFE9
  3622                           wreg	equ	0xFE8
  3623                           postinc1	equ	0xFE6
  3624                           postdec1	equ	0xFE5
  3625                           fsr1h	equ	0xFE2
  3626                           fsr1l	equ	0xFE1
  3627                           postinc2	equ	0xFDE
  3628                           postdec2	equ	0xFDD
  3629                           fsr2h	equ	0xFDA
  3630                           fsr2l	equ	0xFD9
  3631                           status	equ	0xFD8
  3632                           
  3633                           	psect	text27
  3634  0000'                    __ptext27:
  3635                           	opt stack 0
  3636                           tosu	equ	0xFFF
  3637                           tosh	equ	0xFFE
  3638                           tosl	equ	0xFFD
  3639                           pclatu	equ	0xFFB
  3640                           pclath	equ	0xFFA
  3641                           pcl	equ	0xFF9
  3642                           tblptru	equ	0xFF8
  3643                           tblptrh	equ	0xFF7
  3644                           tblptrl	equ	0xFF6
  3645                           tablat	equ	0xFF5
  3646                           prodh	equ	0xFF4
  3647                           prodl	equ	0xFF3
  3648                           intcon	equ	0xFF2
  3649                           intcon2	equ	0xFF1
  3650                           intcon3	equ	0xFF0
  3651                           postinc0	equ	0xFEE
  3652                           fsr0h	equ	0xFEA
  3653                           fsr0l	equ	0xFE9
  3654                           wreg	equ	0xFE8
  3655                           postinc1	equ	0xFE6
  3656                           postdec1	equ	0xFE5
  3657                           fsr1h	equ	0xFE2
  3658                           fsr1l	equ	0xFE1
  3659                           postinc2	equ	0xFDE
  3660                           postdec2	equ	0xFDD
  3661                           fsr2h	equ	0xFDA
  3662                           fsr2l	equ	0xFD9
  3663                           status	equ	0xFD8
  3664                           
  3665                           	psect	rparam
  3666  0000                     tosu	equ	0xFFF
  3667                           tosh	equ	0xFFE
  3668                           tosl	equ	0xFFD
  3669                           pclatu	equ	0xFFB
  3670                           pclath	equ	0xFFA
  3671                           pcl	equ	0xFF9
  3672                           tblptru	equ	0xFF8
  3673                           tblptrh	equ	0xFF7
  3674                           tblptrl	equ	0xFF6
  3675                           tablat	equ	0xFF5
  3676                           prodh	equ	0xFF4
  3677                           prodl	equ	0xFF3
  3678                           intcon	equ	0xFF2
  3679                           intcon2	equ	0xFF1
  3680                           intcon3	equ	0xFF0
  3681                           postinc0	equ	0xFEE
  3682                           fsr0h	equ	0xFEA
  3683                           fsr0l	equ	0xFE9
  3684                           wreg	equ	0xFE8
  3685                           postinc1	equ	0xFE6
  3686                           postdec1	equ	0xFE5
  3687                           fsr1h	equ	0xFE2
  3688                           fsr1l	equ	0xFE1
  3689                           postinc2	equ	0xFDE
  3690                           postdec2	equ	0xFDD
  3691                           fsr2h	equ	0xFDA
  3692                           fsr2l	equ	0xFD9
  3693                           status	equ	0xFD8
  3694                           
  3695                           	psect	temp
  3696  0000'                    btemp:
  3697                           	opt stack 0
  3698  0000'                    	ds	1
  3699  0000                     int$flags	set	btemp
  3700  0000                     wtemp6	set	btemp+1
  3701                           tosu	equ	0xFFF
  3702                           tosh	equ	0xFFE
  3703                           tosl	equ	0xFFD
  3704                           pclatu	equ	0xFFB
  3705                           pclath	equ	0xFFA
  3706                           pcl	equ	0xFF9
  3707                           tblptru	equ	0xFF8
  3708                           tblptrh	equ	0xFF7
  3709                           tblptrl	equ	0xFF6
  3710                           tablat	equ	0xFF5
  3711                           prodh	equ	0xFF4
  3712                           prodl	equ	0xFF3
  3713                           intcon	equ	0xFF2
  3714                           intcon2	equ	0xFF1
  3715                           intcon3	equ	0xFF0
  3716                           postinc0	equ	0xFEE
  3717                           fsr0h	equ	0xFEA
  3718                           fsr0l	equ	0xFE9
  3719                           wreg	equ	0xFE8
  3720                           postinc1	equ	0xFE6
  3721                           postdec1	equ	0xFE5
  3722                           fsr1h	equ	0xFE2
  3723                           fsr1l	equ	0xFE1
  3724                           postinc2	equ	0xFDE
  3725                           postdec2	equ	0xFDD
  3726                           fsr2h	equ	0xFDA
  3727                           fsr2l	equ	0xFD9
  3728                           status	equ	0xFD8


Data Sizes:
    Strings     74
    Constant    85
    Data        17
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      69
    BANK0           160     34      99
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    escreve_frase_ram_lcd$0	PTR unsigned char  size(2) Largest target is 17
		 -> leitura_chave@pos_ignicao_on(COMRAM[17]), leitura_chave@pos_ignicao_crank(COMRAM[17]), leitura_chave@pos_ignicao_off(COMRAM[17]), STR_5(CODE[11]), 
		 -> STR_4(CODE[17]), STR_3(CODE[15]), STR_2(CODE[14]), STR_1(CODE[14]), 
		 -> mensagem_inicial@msg_dois(BANK0[17]), mensagem_inicial@msg_linha_um(BANK0[17]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), 

    p_tarefas	PTR FTN()void [2] size(2) Largest target is 1
		 -> SDCard(), acende_led4(), 


Critical Paths under _main in COMRAM

    _config_timer_zero->_write_timer_zero
    _configura_baudrate_uart->___aldiv
    _escalonador->_SDCard
    _acende_led4->_shrc_apaga_bit
    _acende_led4->_shrc_seta_bit
    _SDCard->_shrc_seta_bit
    _controle_shrc->_envia_dados_shrc

Critical Paths under _isr in COMRAM

    _isr->i2_write_timer_zero

Critical Paths under _main in BANK0

    _main->_mensagem_inicial
    _inicializa_uart->_configura_baudrate_uart

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2677
                      _controle_shrc
                        _escalonador
                     _inicializa_SPI
                    _inicializa_shrc
                 _inicializa_tarefas
                    _inicializa_uart
                      _init_hardware
                           _init_lcd
                   _mensagem_inicial
 ---------------------------------------------------------------------------------
 (1) _mensagem_inicial                                    36    36      0     308
                                             25 COMRAM     2     2      0
                                              0 BANK0     34    34      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     195
                  _config_timer_zero
                     _inicializa_adc
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _inicializa_adc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     195
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     4     2      2     195
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _inicializa_uart                                      0     0      0    1118
            _configura_baudrate_uart
 ---------------------------------------------------------------------------------
 (2) _configura_baudrate_uart                             14    10      4    1118
                                              0 BANK0     14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     805
                                             25 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_shrc                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_SPI                                       1     1      0     262
                                             25 COMRAM     1     1      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0     749
                                             30 COMRAM     3     3      0
                             _SDCard *
                        _acende_led4 *
 ---------------------------------------------------------------------------------
 (2) _acende_led4                                          0     0      0      30
                     _shrc_apaga_bit
                      _shrc_seta_bit
 ---------------------------------------------------------------------------------
 (3) _shrc_apaga_bit                                       3     3      0      15
                                             25 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SDCard                                               2     2      0     563
                                             28 COMRAM     2     2      0
                          _WriteSPI_
                      _controle_shrc
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                      _shrc_seta_bit
 ---------------------------------------------------------------------------------
 (3) _shrc_seta_bit                                        3     3      0      15
                                             25 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _escreve_cmd_lcd                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controle_shrc                                        0     0      0      45
                   _ativa_latch_shrc
                   _envia_dados_shrc
 ---------------------------------------------------------------------------------
 (4) _envia_dados_shrc                                     2     2      0      45
                                             25 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _ativa_latch_shrc                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WriteSPI_                                            2     2      0     263
                                             25 COMRAM     2     2      0
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (2) _posicao_cursor_lcd                                   1     0      1     120
 ---------------------------------------------------------------------------------
 (2) _escreve_frase_ram_lcd                                2     0      2     120
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                 21    21      0     183
                                              4 COMRAM    21    21      0
                   _recebe_dado_uart
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (6) i2_write_timer_zero                                   4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _recebe_dado_uart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _controle_shrc
     _ativa_latch_shrc
     _envia_dados_shrc
   _escalonador
     _SDCard *
       _WriteSPI_
         _escreve_frase_ram_lcd
         _posicao_cursor_lcd
       _controle_shrc
         _ativa_latch_shrc
         _envia_dados_shrc
       _escreve_cmd_lcd
       _escreve_frase_ram_lcd
       _posicao_cursor_lcd
       _shrc_seta_bit
     _acende_led4 *
       _shrc_apaga_bit
       _shrc_seta_bit
   _inicializa_SPI
     _escreve_cmd_lcd
     _escreve_frase_ram_lcd
     _posicao_cursor_lcd
   _inicializa_shrc
   _inicializa_tarefas
   _inicializa_uart
     _configura_baudrate_uart
       ___aldiv
   _init_hardware
     _config_timer_zero
       _write_timer_zero
     _inicializa_adc
     _init_interrupt
     _init_oscilador
     _init_ports
   _init_lcd
   _mensagem_inicial
     _escreve_cmd_lcd
     _escreve_frase_ram_lcd
     _posicao_cursor_lcd

 _isr (ROOT)
   _recebe_dado_uart
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     22      63       5       61.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      45       1       73.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A8      20        0.0%
DATA                 0      0      A8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jan 18 15:49:47 2022

        __end_of_mensagem_inicial 00007C            __size_of_controle_shrc 000000  
                     _SSPSTATbits 000FC7                  ??_init_interrupt 000019  
                              l93 00000C                                l95 00009C  
                              u64 000012                                u65 00000E  
                              u74 000012                                u75 00000E  
                    ?_escalonador 000000                  ?_inicializa_shrc 000000  
                ?_inicializa_uart 000000                               l101 00001E  
                             l102 00002C                               l122 00001C  
                             l210 000012                               l115 000020  
                             l220 000012                               l116 00002A  
                             l204 000018                               l206 000034  
                             l207 000004                               l208 000008  
                             l161 00003A                               l209 00000E  
                             l162 00000A                               l163 000012  
                             l164 000014                               l541 00001C  
                             l550 0000BA                               l542 000034  
                             l544 000062                               l545 000056  
                             l548 000096                               l549 0000A4  
                             l397 000118                               u160 00000A  
                             u170 00000C                               _PCL 000FF9  
                             _PR2 000FCB                               u760 00001A  
                             u835 00000E                               u837 000010  
                             u958 00005C                               u959 000070  
                ??_init_oscilador 000019                               _isr 000000  
                             prod 000FF3                               tosl 000FFD  
                             wreg 000FE8         __size_of_write_timer_zero 000000  
         ??_escreve_frase_ram_lcd 000000              __size_of_acende_led4 000000  
                            l1767 000004                              ?_isr 000000  
                            STR_1 000084                              STR_2 000076  
                            STR_3 000067                              STR_4 000056  
                            STR_5 000092                              STR_6 00009D  
                  timer_dois@flag 000017                              _BRGH 007D62  
                            _T0IF 007F92                              _CREN 007D5C  
                            _LATB 000F8A                              u1415 000012  
                            u1425 00005E                              u1507 000066  
                            u1380 000066                              u1517 000034  
                            u1445 0000A2                              u1470 00000E  
                            u1527 00001C                              u1455 0000EC  
                            u1480 000026                              u1537 000024  
                            u1547 00002C                              u1557 000034  
                            u1567 000004                              _PIE1 000F9D  
                            u1577 00000C                              _RCIF 007CF5  
                            i2l80 0000CA                              i2l81 000070  
                            i2l83 00009E                              i2l85 0000BE  
                            i2l86 0000D2                              i2l79 000058  
                            _TMR2 000FCC                              _SPEN 007D5F  
                            _TRMT 007D61                              _TXEN 007D65  
                            _SYNC 007D64                              _dado 000019  
                            _flag 000013                              _main 000000  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr2h 000FDA                              fsr0l 000FE9  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 000000                              prodh 000FF4  
                            prodl 000FF3                              start 000000* 
                    ___param_bank 000000                             ??_isr 000004  
__size_of_configura_baudrate_uart 000000                   __end_of___aldiv 0000CC  
                           ?_main 000000                             _T0CON 000FD5  
                           _T2CON 000FCA                             i2l423 00000E  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                           _TXREG 000FAD                             _TXSTA 000FAC  
      __size_of_config_timer_zero 000000                  _envia_dados_shrc 000000  
                   _controle_shrc 000000                             pclath 000FFA  
                           tablat 000FF5                             status 000FD8  
                           wtemp6 000001                   __initialization 000000  
                    __end_of_main 000032                _inicializa_tarefas 000000  
                 escalonador@cont 000020                            ??_main 000027  
                   __activetblptr 000002               ?_inicializa_tarefas 000000  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                  ?_controle_shrc 000000                            _ADRESH 000FC4  
                          _ADRESL 000FC3                            _INT0IE 007F94  
                          _INT0IF 007F91                            _PCLATH 000FFA  
                          i2l1853 000068                            _INTCON 000FF2  
         __size_of_inicializa_SPI 000000                            _TMR0IF 007F92  
                          _TMR2IF 007CF1                            _SDCard 000000  
        __end_of_recebe_dado_uart 000012           __size_of_inicializa_adc 000000  
                          _SPPCFG 000F63                            _SPPCON 000F65  
                          _SSPBUF 000FC9              ??_inicializa_tarefas 000019  
          __size_of_init_hardware 000000                         ??___aldiv 000021  
                          _folder 000000                            _estado 000018  
                          clear_0 000026                            clear_1 000032  
        configura_baudrate_uart@x 00000C              __size_of_escalonador 000000  
                 acende_led4@flag 00001A                      __mediumconst 000000* 
           write_timer_zero@timer 00001B                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                _write_timer_zero 000000                        __accesstop 000000* 
         __end_of__initialization 000038                __size_of_WriteSPI_ 000000  
                   ___rparam_used 000001                 ??_escreve_cmd_lcd 000000  
                  __pcstackCOMRAM 000000                 ?_ativa_latch_shrc 000000  
                    __pidataBANK0 000000                 ?_mensagem_inicial 000000  
         _configura_baudrate_uart 000000                ??_ativa_latch_shrc 000019  
              ??_mensagem_inicial 000019                _tarefa_em_execucao 00001B  
      __end_ofi2_write_timer_zero 000012   configura_baudrate_uart@baudrate 000000  
                 ??_controle_shrc 00001B                     _init_hardware 000000  
    mensagem_inicial@msg_linha_um 000000                        __pbssBANK0 000000  
                         ?_SDCard 000000         escreve_inteiro_uart@F3956 00000A  
           __end_of_shrc_seta_bit 00001C          __end_of_envia_dados_shrc 000044  
           mensagem_inicial@F3937 000045             mensagem_inicial@F3939 000034  
         __size_of_shrc_apaga_bit 000000                 __end_of_WriteSPI_ 000032  
                         _INTCON2 000FF1                           _INTCON3 000FF0  
                  ?_init_hardware 000000                     ??_acende_led4 00001C  
                         _SSPCON1 000FC6          __size_of_inicializa_shrc 000000  
        __size_of_inicializa_uart 000000                    _inicializa_SPI 000000  
                  _inicializa_adc 000000                         ?_init_lcd 000000  
                 __size_of_SDCard 000000                           __Hparam 000000  
       ??_configura_baudrate_uart 000004                           __Lparam 000000  
                         ___aldiv 000000         shrc_apaga_bit@posicao_bit 00001B  
                    __psmallconst 000000                           __pcinit 000000  
                      _init_ports 000000                           __ramtop 000000* 
                         __ptext0 000000                           __ptext1 000000  
                         __ptext2 000000                           __ptext3 000000  
                         __ptext4 000000                           __ptext5 000000  
                         __ptext6 000000                           __ptext7 000000  
                         __ptext8 000000                           __ptext9 000000  
                       _T0CONbits 000FD5           i2write_timer_zero@timer 000002  
                    __size_of_isr 000000                  ___aldiv@dividend 000019  
         __size_of_init_interrupt 000000            __end_of_inicializa_SPI 000060  
          __end_of_inicializa_adc 000022                    __pintcode_body 000000  
            end_of_initialization 000038                           isr@cont 000018  
      __end_ofleitura_chave@F3840 000023               __end_of_acende_led4 000024  
      __end_ofleitura_chave@F3842 000012        __end_ofleitura_chave@F3838 000034  
         __size_of_init_oscilador 000000                     __Lmediumconst 000000* 
                      ??_init_lcd 000000                           int_func 000000  
               ?_recebe_dado_uart 000000            write_timer_zero@timer0 000019  
              ??_recebe_dado_uart 000000          envia_dados_shrc@contador 000019  
                       _RCSTAbits 000FAB          __end_of_write_timer_zero 000012  
                ___aldiv@quotient 000023                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                       _PORTAbits 000F80                         _PORTCbits 000F82  
                       _PORTEbits 000F84                   ??_init_hardware 00001D  
              _posicao_cursor_lcd 000000*  __end_of_configura_baudrate_uart 000132  
                       _TRISCbits 000F94                   _escreve_cmd_lcd 000000* 
             ?_posicao_cursor_lcd 000000                   ?_inicializa_SPI 000000  
                WriteSPI_@TempVar 000019                   ?_inicializa_adc 000000  
               ??_inicializa_shrc 000019                 ??_inicializa_uart 000027  
     __size_of_inicializa_tarefas 000000                    __end_of_SDCard 00008E  
            ??_posicao_cursor_lcd 000000                    _shrc_apaga_bit 000000  
                   ??_escalonador 00001E                       ?_init_ports 000000  
             start_initialization 000000                     WriteSPI_@dado 00001A  
       __size_of_ativa_latch_shrc 000000                       _acende_led4 000000  
                     __end_of_isr 00011E         __size_of_mensagem_inicial 000000  
                        ??_SDCard 00001C                i2_write_timer_zero 000000  
                _data_uart_recebe 00001D            __end_of_shrc_apaga_bit 00001E  
             ?i2_write_timer_zero 000000                 ?_envia_dados_shrc 000000  
                     __pdataBANK0 000000                ??_envia_dados_shrc 000019  
                     __pbssCOMRAM 000000           _escreve_frase_ram_lcd$0 000000  
                   __pcstackBANK0 000000                    _init_interrupt 000000  
            ??i2_write_timer_zero 000002               __end_of_escalonador 0000A0  
                       _WriteSPI_ 000000             __end_of_controle_shrc 00000C  
                  _init_oscilador 000000               __size_of_init_ports 000000  
           _escreve_frase_ram_lcd 000000*                  ?_shrc_apaga_bit 000000  
                       __pintcode 000000                          ?___aldiv 000019  
              _sinaliza_int_timer 00001C                       __smallconst 000000* 
          __end_of_init_interrupt 000012                        ?_WriteSPI_ 000000  
          __end_of_init_oscilador 000008            __size_of_shrc_seta_bit 000000  
                       _p_tarefas 00000F                   ___aldiv@divisor 00001D  
                 ___aldiv@counter 000021                          _LATBbits 000F8A  
                        _PIE1bits 000F9D                          i2u108_40 0000A2  
                        _PIR1bits 000F9E                 ?_write_timer_zero 000019  
              leitura_chave@F3840 000012                leitura_chave@F3842 000001  
              leitura_chave@F3838 000023                ??_write_timer_zero 00001B  
       __size_of_recebe_dado_uart 000000                       _escalonador 000000  
                      _ADCON0bits 000FC2                        _ADCON1bits 000FC1  
                      _ADCON2bits 000FC0                  ?_escreve_cmd_lcd 000000  
                ??_inicializa_SPI 000019                   ?_init_interrupt 000000  
                ??_inicializa_adc 000019                  _ativa_latch_shrc 000000  
                 _inicializa_shrc 000000                   _inicializa_uart 000000  
                _mensagem_inicial 000000                   ?_init_oscilador 000000  
                       copy_data0 000014          ?_configura_baudrate_uart 000000  
          ?_escreve_frase_ram_lcd 000000                          __Hrparam 000000* 
                     _info_chaves 000000                          __Lrparam 000000* 
                   _shrc_seta_bit 000000                  __size_of___aldiv 000000  
                    ??_init_ports 000019            inicializa_SPI@SPI_mode 000019  
           __end_of_init_hardware 000016                      ?_acende_led4 000000  
                     ??_WriteSPI_ 000019                          _fileName 000000  
                        __ptext10 000000                          __ptext11 000000  
                        __ptext20 000000                          __ptext12 000000  
                        __ptext21 000000                          __ptext13 000000  
                        __ptext22 000000                          __ptext14 000000  
                        __ptext23 000000                          __ptext15 000000  
                        __ptext16 000000                          __ptext25 000000  
                        __ptext17 000000                          __ptext26 000000  
                        __ptext18 000000                          __ptext27 000000  
                        __ptext19 000000                    _timeout_tarefa 000015  
      __end_of_inicializa_tarefas 000036          i2write_timer_zero@timer0 000000  
                        _init_lcd 000000*                    __size_of_main 000000  
              __end_of_init_ports 00001A          shrc_seta_bit@posicao_bit 00001B  
                  ?_shrc_seta_bit 000000                          int$flags 000000  
         __end_of_inicializa_shrc 000008           __end_of_inicializa_uart 000024  
                      _INTCONbits 000FF2         __size_of_envia_dados_shrc 000000  
                    _tempo_backup 00000B                 _config_timer_zero 000000  
                        intlevel2 000000*         mensagem_inicial@msg_dois 000011  
              ?_config_timer_zero 000000                      _tempo_tarefa 000007  
    envia_dados_shrc@data_to_shrc 00001A                  ??_shrc_apaga_bit 000019  
                      _OSCCONbits 000FD3               ??_config_timer_zero 00001D  
                _recebe_dado_uart 000000              _posicao_cursor_lcd$1 000000  
                    ___aldiv@sign 000022         __end_of_config_timer_zero 00001A  
     __size_ofi2_write_timer_zero 000000                       _SSPCON1bits 000FC6  
                 ??_shrc_seta_bit 000019     __end_ofmensagem_inicial@F3937 000056  
   __end_ofmensagem_inicial@F3939 000045          __end_of_ativa_latch_shrc 000014  
