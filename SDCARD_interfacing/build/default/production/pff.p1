Version 3.2 HI-TECH Software Intermediate Code
"39 pff.h
[s S1 `uc 1 `uc 1 `uc 1 `uc 1 `us 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 ]
[n S1 . fs_type flag csize pad1 n_rootdir n_fatent fatbase dirbase database fptr fsize org_clust curr_clust dsect ]
"363 pff.c
[c E73 0 1 2 3 .. ]
[n E73 . RES_OK RES_ERROR RES_NOTRDY RES_PARERR  ]
"59 SDCard.h
[v _disk_readp `(E73 ~T0 @X0 0 ef4`*uc`ul`ui`ui ]
"60 pff.h
[s S2 `us 1 `*uc 1 `ul 1 `ul 1 `ul 1 ]
[n S2 . index fn sclust clust sect ]
"435 pff.c
[c E43 0 1 2 3 4 5 6 .. ]
[n E43 . FR_OK FR_DISK_ERR FR_NOT_READY FR_NO_FILE FR_NOT_OPENED FR_NOT_ENABLED FR_NO_FILESYSTEM  ]
"72 pff.h
[s S3 `ul 1 `us 1 `us 1 `uc 1 `uc -> 13 `i ]
[n S3 . fsize fdate ftime fattrib fname ]
"58 SDCard.h
[v _disk_initialize `(uc ~T0 @X0 0 ef ]
"60
[v _disk_writep `(E73 ~T0 @X0 0 ef2`*Cuc`ul ]
[; ;config_sd.h: 82: typedef int INT;
[; ;config_sd.h: 83: typedef unsigned int UINT;
[; ;config_sd.h: 86: typedef char CHAR;
[; ;config_sd.h: 87: typedef unsigned char UCHAR;
[; ;config_sd.h: 88: typedef unsigned char BYTE;
[; ;config_sd.h: 91: typedef short SHORT;
[; ;config_sd.h: 92: typedef unsigned short USHORT;
[; ;config_sd.h: 93: typedef unsigned short WORD;
[; ;config_sd.h: 94: typedef unsigned short WCHAR;
[; ;config_sd.h: 97: typedef long LONG;
[; ;config_sd.h: 98: typedef unsigned long ULONG;
[; ;config_sd.h: 99: typedef unsigned long DWORD;
[; ;pff.h: 39: typedef struct {
[; ;pff.h: 40: BYTE fs_type;
[; ;pff.h: 41: BYTE flag;
[; ;pff.h: 42: BYTE csize;
[; ;pff.h: 43: BYTE pad1;
[; ;pff.h: 44: WORD n_rootdir;
[; ;pff.h: 45: DWORD n_fatent;
[; ;pff.h: 46: DWORD fatbase;
[; ;pff.h: 47: DWORD dirbase;
[; ;pff.h: 48: DWORD database;
[; ;pff.h: 49: DWORD fptr;
[; ;pff.h: 50: DWORD fsize;
[; ;pff.h: 51: DWORD org_clust;
[; ;pff.h: 52: DWORD curr_clust;
[; ;pff.h: 53: DWORD dsect;
[; ;pff.h: 54: } FATFS;
[; ;pff.h: 60: typedef struct {
[; ;pff.h: 61: WORD index;
[; ;pff.h: 62: BYTE* fn;
[; ;pff.h: 63: DWORD sclust;
[; ;pff.h: 64: DWORD clust;
[; ;pff.h: 65: DWORD sect;
[; ;pff.h: 66: } DIR;
[; ;pff.h: 72: typedef struct {
[; ;pff.h: 73: DWORD fsize;
[; ;pff.h: 74: WORD fdate;
[; ;pff.h: 75: WORD ftime;
[; ;pff.h: 76: BYTE fattrib;
[; ;pff.h: 77: char fname[13];
[; ;pff.h: 78: } FILINFO;
[; ;pff.h: 84: typedef enum {
[; ;pff.h: 85: FR_OK = 0,
[; ;pff.h: 86: FR_DISK_ERR,
[; ;pff.h: 87: FR_NOT_READY,
[; ;pff.h: 88: FR_NO_FILE,
[; ;pff.h: 89: FR_NOT_OPENED,
[; ;pff.h: 90: FR_NOT_ENABLED,
[; ;pff.h: 91: FR_NO_FILESYSTEM
[; ;pff.h: 92: } FRESULT;
[; ;pff.h: 99: FRESULT pf_mount (FATFS* fs);
[; ;pff.h: 100: FRESULT pf_open (const char* path);
[; ;pff.h: 101: FRESULT pf_read (void* buff, UINT btr, UINT* br);
[; ;pff.h: 102: FRESULT pf_write (const void* buff, UINT btw, UINT* bw);
[; ;pff.h: 103: FRESULT pf_lseek (DWORD ofs);
[; ;pff.h: 104: FRESULT pf_opendir (DIR* dj, const char* path);
[; ;pff.h: 105: FRESULT pf_readdir (DIR* dj, FILINFO* fno);
[; ;SDCard.h: 44: typedef BYTE DSTATUS;
[; ;SDCard.h: 47: typedef enum {
[; ;SDCard.h: 48: RES_OK = 0,
[; ;SDCard.h: 49: RES_ERROR,
[; ;SDCard.h: 50: RES_NOTRDY,
[; ;SDCard.h: 51: RES_PARERR
[; ;SDCard.h: 52: } DRESULT;
[; ;SDCard.h: 58: DSTATUS disk_initialize (void);
[; ;SDCard.h: 59: DRESULT disk_readp (BYTE* buff, DWORD sector, UINT offset, UINT count);
[; ;SDCard.h: 60: DRESULT disk_writep (const BYTE* buff, DWORD sc);
[; ;pff.c: 316: extern void prossiga();
"319 pff.c
[v _FatFs `*S1 ~T0 @X0 1 s ]
[; ;pff.c: 318: static
[; ;pff.c: 319: FATFS *FatFs;
"324
[v _mem_set `(v ~T0 @X0 1 sf3`*v`i`i ]
{
[; ;pff.c: 323: static
[; ;pff.c: 324: void mem_set (void* dst, int val, int cnt) {
[e :U _mem_set ]
[v _dst `*v ~T0 @X0 1 r1 ]
[v _val `i ~T0 @X0 1 r2 ]
[v _cnt `i ~T0 @X0 1 r3 ]
[f ]
"325
[v _d `*uc ~T0 @X0 1 a ]
[; ;pff.c: 325: char *d = (char*)dst;
[e = _d -> _dst `*uc ]
[; ;pff.c: 326: while (cnt--) *d++ = (char)val;
"326
[e $U 5  ]
[e :U 6 ]
[e = *U ++ _d * -> -> 1 `i `x -> -> # *U _d `i `x -> _val `uc ]
[e :U 5 ]
[e $ != -- _cnt -> 1 `i -> 0 `i 6  ]
[e :U 7 ]
[; ;pff.c: 327: }
"327
[e :UE 4 ]
}
"331
[v _mem_cmp `(i ~T0 @X0 1 sf3`*Cv`*Cv`i ]
{
[; ;pff.c: 330: static
[; ;pff.c: 331: int mem_cmp (const void* dst, const void* src, int cnt) {
[e :U _mem_cmp ]
[v _dst `*Cv ~T0 @X0 1 r1 ]
[v _src `*Cv ~T0 @X0 1 r2 ]
[v _cnt `i ~T0 @X0 1 r3 ]
[f ]
"332
[v _d `*Cuc ~T0 @X0 1 a ]
[; ;pff.c: 332: const char *d = (const char *)dst, *s = (const char *)src;
[e = _d -> _dst `*Cuc ]
[v _s `*Cuc ~T0 @X0 1 a ]
[e = _s -> _src `*Cuc ]
"333
[v _r `i ~T0 @X0 1 a ]
[; ;pff.c: 333: int r = 0;
[e = _r -> 0 `i ]
[; ;pff.c: 334: while (cnt-- && (r = *d++ - *s++) == 0) ;
"334
[e $U 9  ]
[e :U 10 ]
[e :U 9 ]
[e $ && != -- _cnt -> 1 `i -> 0 `i == = _r - -> *U ++ _d * -> -> 1 `i `x -> -> # *U _d `i `x `i -> *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x `i -> 0 `i 10  ]
[e :U 11 ]
[; ;pff.c: 335: return r;
"335
[e ) _r ]
[e $UE 8  ]
[; ;pff.c: 336: }
"336
[e :UE 8 ]
}
"345
[v _get_fat `(ul ~T0 @X0 1 sf1`ul ]
"348
{
[; ;pff.c: 344: static
[; ;pff.c: 345: DWORD get_fat (
[; ;pff.c: 346: DWORD clst
[; ;pff.c: 347: )
[; ;pff.c: 348: {
[e :U _get_fat ]
"346
[v _clst `ul ~T0 @X0 1 r1 ]
"348
[f ]
"349
[v _buf `uc ~T0 @X0 -> 4 `i a ]
"350
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 349: BYTE buf[4];
[; ;pff.c: 350: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 352: if (clst < 2 || clst >= fs->n_fatent)
"352
[e $ ! || < _clst -> -> -> 2 `i `l `ul >= _clst . *U _fs 5 13  ]
[; ;pff.c: 353: return 1;
"353
[e ) -> -> -> 1 `i `l `ul ]
[e $UE 12  ]
[e :U 13 ]
[; ;pff.c: 355: switch (fs->fs_type) {
"355
[e $U 15  ]
{
[; ;pff.c: 357: case 1 : {
"357
[e :U 16 ]
{
"358
[v _wc `ui ~T0 @X0 1 a ]
[v _bc `ui ~T0 @X0 1 a ]
[v _ofs `ui ~T0 @X0 1 a ]
[; ;pff.c: 358: UINT wc, bc, ofs;
[; ;pff.c: 360: bc = (UINT)clst; bc += bc / 2;
"360
[e = _bc -> _clst `ui ]
[e =+ _bc / _bc -> -> 2 `i `ui ]
[; ;pff.c: 361: ofs = bc % 512; bc /= 512;
"361
[e = _ofs % _bc -> -> 512 `i `ui ]
[e =/ _bc -> -> 512 `us `ui ]
[; ;pff.c: 362: if (ofs != 511) {
"362
[e $ ! != _ofs -> -> 511 `i `ui 17  ]
{
[; ;pff.c: 363: if (disk_readp(buf, fs->fatbase + bc, ofs, 2)) break;
"363
[e $ ! != -> ( _disk_readp (4 , , , &U _buf + . *U _fs 6 -> _bc `ul _ofs -> -> 2 `i `ui `i -> -> -> 0 `i `E73 `i 18  ]
[e $U 14  ]
[e :U 18 ]
"364
}
[; ;pff.c: 364: } else {
[e $U 19  ]
[e :U 17 ]
{
[; ;pff.c: 365: if (disk_readp(buf, fs->fatbase + bc, 511, 1)) break;
"365
[e $ ! != -> ( _disk_readp (4 , , , &U _buf + . *U _fs 6 -> _bc `ul -> -> 511 `i `ui -> -> 1 `i `ui `i -> -> -> 0 `i `E73 `i 20  ]
[e $U 14  ]
[e :U 20 ]
[; ;pff.c: 366: if (disk_readp(buf+1, fs->fatbase + bc + 1, 0, 1)) break;
"366
[e $ ! != -> ( _disk_readp (4 , , , + &U _buf * -> -> 1 `i `x -> -> # *U &U _buf `i `x + + . *U _fs 6 -> _bc `ul -> -> -> 1 `i `l `ul -> -> 0 `i `ui -> -> 1 `i `ui `i -> -> -> 0 `i `E73 `i 21  ]
[e $U 14  ]
[e :U 21 ]
"367
}
[e :U 19 ]
[; ;pff.c: 367: }
[; ;pff.c: 368: wc = (WORD)(((WORD)*((BYTE*)(buf)+1)<<8)|(WORD)*(BYTE*)(buf));
"368
[e = _wc -> -> | << -> -> *U + &U _buf * -> -> 1 `i `x -> -> # *U &U _buf `i `x `us `ui -> 8 `i -> -> *U &U _buf `us `ui `us `ui ]
[; ;pff.c: 369: return (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
"369
[e ) -> ? != & _clst -> -> -> 1 `i `l `ul -> -> 0 `i `ul : >> _wc -> 4 `i & _wc -> -> 4095 `i `ui `ul ]
[e $UE 12  ]
"370
}
[; ;pff.c: 370: }
[; ;pff.c: 373: case 2 :
"373
[e :U 22 ]
[; ;pff.c: 374: if (disk_readp(buf, fs->fatbase + clst / 256, ((UINT)clst % 256) * 2, 2)) break;
"374
[e $ ! != -> ( _disk_readp (4 , , , &U _buf + . *U _fs 6 / _clst -> -> -> 256 `i `l `ul * % -> _clst `ui -> -> 256 `i `ui -> -> 2 `i `ui -> -> 2 `i `ui `i -> -> -> 0 `i `E73 `i 23  ]
[e $U 14  ]
[e :U 23 ]
[; ;pff.c: 375: return (WORD)(((WORD)*((BYTE*)(buf)+1)<<8)|(WORD)*(BYTE*)(buf));
"375
[e ) -> -> | << -> -> *U + &U _buf * -> -> 1 `i `x -> -> # *U &U _buf `i `x `us `ui -> 8 `i -> -> *U &U _buf `us `ui `us `ul ]
[e $UE 12  ]
[; ;pff.c: 378: case 3 :
"378
[e :U 24 ]
[; ;pff.c: 379: if (disk_readp(buf, fs->fatbase + clst / 128, ((UINT)clst % 128) * 4, 4)) break;
"379
[e $ ! != -> ( _disk_readp (4 , , , &U _buf + . *U _fs 6 / _clst -> -> -> 128 `i `l `ul * % -> _clst `ui -> -> 128 `i `ui -> -> 4 `i `ui -> -> 4 `i `ui `i -> -> -> 0 `i `E73 `i 25  ]
[e $U 14  ]
[e :U 25 ]
[; ;pff.c: 380: return (DWORD)(((DWORD)*((BYTE*)(buf)+3)<<24)|((DWORD)*((BYTE*)(buf)+2)<<16)|((WORD)*((BYTE*)(buf)+1)<<8)|*(BYTE*)(buf)) & 0x0FFFFFFF;
"380
[e ) & | | | << -> *U + &U _buf * -> -> 3 `i `x -> -> # *U &U _buf `i `x `ul -> 24 `i << -> *U + &U _buf * -> -> 2 `i `x -> -> # *U &U _buf `i `x `ul -> 16 `i -> << -> -> *U + &U _buf * -> -> 1 `i `x -> -> # *U &U _buf `i `x `us `ui -> 8 `i `ul -> *U &U _buf `ul -> -> 268435455 `l `ul ]
[e $UE 12  ]
"382
}
[; ;pff.c: 382: }
[e $U 14  ]
"355
[e :U 15 ]
[e [\ . *U _fs 0 , $ -> -> 1 `i `uc 16
 , $ -> -> 2 `i `uc 22
 , $ -> -> 3 `i `uc 24
 14 ]
"382
[e :U 14 ]
[; ;pff.c: 384: return 1;
"384
[e ) -> -> -> 1 `i `l `ul ]
[e $UE 12  ]
[; ;pff.c: 385: }
"385
[e :UE 12 ]
}
"395
[v _clust2sect `(ul ~T0 @X0 1 sf1`ul ]
"398
{
[; ;pff.c: 394: static
[; ;pff.c: 395: DWORD clust2sect (
[; ;pff.c: 396: DWORD clst
[; ;pff.c: 397: )
[; ;pff.c: 398: {
[e :U _clust2sect ]
"396
[v _clst `ul ~T0 @X0 1 r1 ]
"398
[f ]
"399
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 399: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 402: clst -= 2;
"402
[e =- _clst -> -> -> 2 `i `l `ul ]
[; ;pff.c: 403: if (clst >= (fs->n_fatent - 2)) return 0;
"403
[e $ ! >= _clst - . *U _fs 5 -> -> -> 2 `i `l `ul 27  ]
[e ) -> -> -> 0 `i `l `ul ]
[e $UE 26  ]
[e :U 27 ]
[; ;pff.c: 404: return (DWORD)clst * fs->csize + fs->database;
"404
[e ) + * _clst -> . *U _fs 2 `ul . *U _fs 8 ]
[e $UE 26  ]
[; ;pff.c: 405: }
"405
[e :UE 26 ]
}
"409
[v _get_clust `(ul ~T0 @X0 1 sf1`*uc ]
"412
{
[; ;pff.c: 408: static
[; ;pff.c: 409: DWORD get_clust (
[; ;pff.c: 410: BYTE* dir
[; ;pff.c: 411: )
[; ;pff.c: 412: {
[e :U _get_clust ]
"410
[v _dir `*uc ~T0 @X0 1 r1 ]
"412
[f ]
"413
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 413: FATFS *fs = FatFs;
[e = _fs _FatFs ]
"414
[v _clst `ul ~T0 @X0 1 a ]
[; ;pff.c: 414: DWORD clst = 0;
[e = _clst -> -> -> 0 `i `l `ul ]
[; ;pff.c: 417: if (0 || (1 && fs->fs_type == 3)) {
"417
[e $ ! || != -> 0 `i -> 0 `i && != -> 1 `i -> 0 `i == -> . *U _fs 0 `i -> 3 `i 29  ]
{
[; ;pff.c: 418: clst = (WORD)(((WORD)*((BYTE*)(dir+20)+1)<<8)|(WORD)*(BYTE*)(dir+20));
"418
[e = _clst -> -> | << -> -> *U + + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `i `x `us `ui -> 8 `i -> -> *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `us `ui `us `ul ]
[; ;pff.c: 419: clst <<= 16;
"419
[e =<< _clst -> 16 `i ]
"420
}
[e :U 29 ]
[; ;pff.c: 420: }
[; ;pff.c: 421: clst |= (WORD)(((WORD)*((BYTE*)(dir+26)+1)<<8)|(WORD)*(BYTE*)(dir+26));
"421
[e =| _clst -> -> | << -> -> *U + + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `i `x `us `ui -> 8 `i -> -> *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `us `ui `us `ul ]
[; ;pff.c: 423: return clst;
"423
[e ) _clst ]
[e $UE 28  ]
[; ;pff.c: 424: }
"424
[e :UE 28 ]
}
"432
[v _dir_rewind `(E43 ~T0 @X0 1 sf1`*S2 ]
"435
{
[; ;pff.c: 431: static
[; ;pff.c: 432: FRESULT dir_rewind (
[; ;pff.c: 433: DIR *dj
[; ;pff.c: 434: )
[; ;pff.c: 435: {
[e :U _dir_rewind ]
"433
[v _dj `*S2 ~T0 @X0 1 r1 ]
"435
[f ]
"436
[v _clst `ul ~T0 @X0 1 a ]
"437
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 436: DWORD clst;
[; ;pff.c: 437: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 440: dj->index = 0;
"440
[e = . *U _dj 0 -> -> 0 `i `us ]
[; ;pff.c: 441: clst = dj->sclust;
"441
[e = _clst . *U _dj 2 ]
[; ;pff.c: 442: if (clst == 1 || clst >= fs->n_fatent)
"442
[e $ ! || == _clst -> -> -> 1 `i `l `ul >= _clst . *U _fs 5 31  ]
[; ;pff.c: 443: return FR_DISK_ERR;
"443
[e ) . `E43 1 ]
[e $UE 30  ]
[e :U 31 ]
[; ;pff.c: 444: if (1 && !clst && (0 || fs->fs_type == 3))
"444
[e $ ! && && != -> 1 `i -> 0 `i ! != _clst -> -> 0 `i `ul || != -> 0 `i -> 0 `i == -> . *U _fs 0 `i -> 3 `i 32  ]
[; ;pff.c: 445: clst = (DWORD)fs->dirbase;
"445
[e = _clst . *U _fs 7 ]
[e :U 32 ]
[; ;pff.c: 446: dj->clust = clst;
"446
[e = . *U _dj 3 _clst ]
[; ;pff.c: 447: dj->sect = (0 || clst) ? clust2sect(clst) : fs->dirbase;
"447
[e = . *U _dj 4 ? || != -> 0 `i -> 0 `i != _clst -> -> 0 `i `ul : ( _clust2sect (1 _clst . *U _fs 7 ]
[; ;pff.c: 449: return FR_OK;
"449
[e ) . `E43 0 ]
[e $UE 30  ]
[; ;pff.c: 450: }
"450
[e :UE 30 ]
}
"460
[v _dir_next `(E43 ~T0 @X0 1 sf1`*S2 ]
"463
{
[; ;pff.c: 459: static
[; ;pff.c: 460: FRESULT dir_next (
[; ;pff.c: 461: DIR *dj
[; ;pff.c: 462: )
[; ;pff.c: 463: {
[e :U _dir_next ]
"461
[v _dj `*S2 ~T0 @X0 1 r1 ]
"463
[f ]
"464
[v _clst `ul ~T0 @X0 1 a ]
"465
[v _i `us ~T0 @X0 1 a ]
"466
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 464: DWORD clst;
[; ;pff.c: 465: WORD i;
[; ;pff.c: 466: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 469: i = dj->index + 1;
"469
[e = _i -> + -> . *U _dj 0 `ui -> -> 1 `i `ui `us ]
[; ;pff.c: 470: if (!i || !dj->sect)
"470
[e $ ! || ! != -> _i `ui -> -> -> 0 `i `us `ui ! != . *U _dj 4 -> -> 0 `i `ul 34  ]
[; ;pff.c: 471: return FR_NO_FILE;
"471
[e ) . `E43 3 ]
[e $UE 33  ]
[e :U 34 ]
[; ;pff.c: 473: if (!(i % 16)) {
"473
[e $ ! ! != % -> _i `ui -> -> 16 `i `ui -> -> 0 `i `ui 35  ]
{
[; ;pff.c: 474: dj->sect++;
"474
[e ++ . *U _dj 4 -> -> -> 1 `i `l `ul ]
[; ;pff.c: 476: if (dj->clust == 0) {
"476
[e $ ! == . *U _dj 3 -> -> -> 0 `i `l `ul 36  ]
{
[; ;pff.c: 477: if (i >= fs->n_rootdir)
"477
[e $ ! >= -> _i `ui -> . *U _fs 4 `ui 37  ]
[; ;pff.c: 478: return FR_NO_FILE;
"478
[e ) . `E43 3 ]
[e $UE 33  ]
[e :U 37 ]
"479
}
[; ;pff.c: 479: }
[e $U 38  ]
"480
[e :U 36 ]
[; ;pff.c: 480: else {
{
[; ;pff.c: 481: if (((i / 16) & (fs->csize - 1)) == 0) {
"481
[e $ ! == & / -> _i `ui -> -> 16 `i `ui -> - -> . *U _fs 2 `i -> 1 `i `ui -> -> 0 `i `ui 39  ]
{
[; ;pff.c: 482: clst = get_fat(dj->clust);
"482
[e = _clst ( _get_fat (1 . *U _dj 3 ]
[; ;pff.c: 483: if (clst <= 1) return FR_DISK_ERR;
"483
[e $ ! <= _clst -> -> -> 1 `i `l `ul 40  ]
[e ) . `E43 1 ]
[e $UE 33  ]
[e :U 40 ]
[; ;pff.c: 484: if (clst >= fs->n_fatent)
"484
[e $ ! >= _clst . *U _fs 5 41  ]
[; ;pff.c: 485: return FR_NO_FILE;
"485
[e ) . `E43 3 ]
[e $UE 33  ]
[e :U 41 ]
[; ;pff.c: 486: dj->clust = clst;
"486
[e = . *U _dj 3 _clst ]
[; ;pff.c: 487: dj->sect = clust2sect(clst);
"487
[e = . *U _dj 4 ( _clust2sect (1 _clst ]
"488
}
[e :U 39 ]
"489
}
[e :U 38 ]
"490
}
[e :U 35 ]
[; ;pff.c: 488: }
[; ;pff.c: 489: }
[; ;pff.c: 490: }
[; ;pff.c: 492: dj->index = i;
"492
[e = . *U _dj 0 _i ]
[; ;pff.c: 494: return FR_OK;
"494
[e ) . `E43 0 ]
[e $UE 33  ]
[; ;pff.c: 495: }
"495
[e :UE 33 ]
}
"505
[v _dir_find `(E43 ~T0 @X0 1 sf2`*S2`*uc ]
"509
{
[; ;pff.c: 504: static
[; ;pff.c: 505: FRESULT dir_find (
[; ;pff.c: 506: DIR *dj,
[; ;pff.c: 507: BYTE *dir
[; ;pff.c: 508: )
[; ;pff.c: 509: {
[e :U _dir_find ]
"506
[v _dj `*S2 ~T0 @X0 1 r1 ]
"507
[v _dir `*uc ~T0 @X0 1 r2 ]
"509
[f ]
"510
[v _res `E43 ~T0 @X0 1 a ]
"511
[v _c `uc ~T0 @X0 1 a ]
[; ;pff.c: 510: FRESULT res;
[; ;pff.c: 511: BYTE c;
[; ;pff.c: 514: res = dir_rewind(dj);
"514
[e = _res ( _dir_rewind (1 _dj ]
[; ;pff.c: 515: if (res != FR_OK) return res;
"515
[e $ ! != -> _res `i -> . `E43 0 `i 43  ]
[e ) _res ]
[e $UE 42  ]
[e :U 43 ]
[; ;pff.c: 517: do {
"517
[e :U 46 ]
{
[; ;pff.c: 518: res = disk_readp(dir, dj->sect, (dj->index % 16) * 32, 32)
[; ;pff.c: 519: ? FR_DISK_ERR : FR_OK;
"519
[e = _res -> ? != -> ( _disk_readp (4 , , , _dir . *U _dj 4 * % -> . *U _dj 0 `ui -> -> 16 `i `ui -> -> 32 `i `ui -> -> 32 `i `ui `i -> -> -> 0 `i `E73 `i : -> . `E43 1 `i -> . `E43 0 `i `E43 ]
[; ;pff.c: 520: if (res != FR_OK) break;
"520
[e $ ! != -> _res `i -> . `E43 0 `i 47  ]
[e $U 45  ]
[e :U 47 ]
[; ;pff.c: 521: c = dir[0];
"521
[e = _c *U + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x ]
[; ;pff.c: 522: if (c == 0) { res = FR_NO_FILE; break; }
"522
[e $ ! == -> _c `i -> 0 `i 48  ]
{
[e = _res . `E43 3 ]
[e $U 45  ]
}
[e :U 48 ]
[; ;pff.c: 523: if (!(dir[11] & 0x08) && !mem_cmp(dir, dj->fn, 11))
"523
[e $ ! && ! != & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> 8 `i -> 0 `i ! != ( _mem_cmp (3 , , -> _dir `*Cv -> . *U _dj 1 `*Cv -> 11 `i -> 0 `i 49  ]
[; ;pff.c: 524: break;
"524
[e $U 45  ]
[e :U 49 ]
[; ;pff.c: 525: res = dir_next(dj);
"525
[e = _res ( _dir_next (1 _dj ]
"526
}
[; ;pff.c: 526: } while (res == FR_OK);
[e $ == -> _res `i -> . `E43 0 `i 46  ]
[e :U 45 ]
[; ;pff.c: 528: return res;
"528
[e ) _res ]
[e $UE 42  ]
[; ;pff.c: 529: }
"529
[e :UE 42 ]
}
"539
[v _dir_read `(E43 ~T0 @X0 1 sf2`*S2`*uc ]
"543
{
[; ;pff.c: 538: static
[; ;pff.c: 539: FRESULT dir_read (
[; ;pff.c: 540: DIR *dj,
[; ;pff.c: 541: BYTE *dir
[; ;pff.c: 542: )
[; ;pff.c: 543: {
[e :U _dir_read ]
"540
[v _dj `*S2 ~T0 @X0 1 r1 ]
"541
[v _dir `*uc ~T0 @X0 1 r2 ]
"543
[f ]
"544
[v _res `E43 ~T0 @X0 1 a ]
"545
[v _a `uc ~T0 @X0 1 a ]
[v _c `uc ~T0 @X0 1 a ]
[; ;pff.c: 544: FRESULT res;
[; ;pff.c: 545: BYTE a, c;
[; ;pff.c: 548: res = FR_NO_FILE;
"548
[e = _res . `E43 3 ]
[; ;pff.c: 549: while (dj->sect) {
"549
[e $U 51  ]
[e :U 52 ]
{
[; ;pff.c: 550: res = disk_readp(dir, dj->sect, (dj->index % 16) * 32, 32)
[; ;pff.c: 551: ? FR_DISK_ERR : FR_OK;
"551
[e = _res -> ? != -> ( _disk_readp (4 , , , _dir . *U _dj 4 * % -> . *U _dj 0 `ui -> -> 16 `i `ui -> -> 32 `i `ui -> -> 32 `i `ui `i -> -> -> 0 `i `E73 `i : -> . `E43 1 `i -> . `E43 0 `i `E43 ]
[; ;pff.c: 552: if (res != FR_OK) break;
"552
[e $ ! != -> _res `i -> . `E43 0 `i 54  ]
[e $U 53  ]
[e :U 54 ]
[; ;pff.c: 553: c = dir[0];
"553
[e = _c *U + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x ]
[; ;pff.c: 554: if (c == 0) { res = FR_NO_FILE; break; }
"554
[e $ ! == -> _c `i -> 0 `i 55  ]
{
[e = _res . `E43 3 ]
[e $U 53  ]
}
[e :U 55 ]
[; ;pff.c: 555: a = dir[11] & 0x3F;
"555
[e = _a -> & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> 63 `i `uc ]
[; ;pff.c: 556: if (c != 0xE5 && c != '.' && !(a & 0x08))
"556
[e $ ! && && != -> _c `i -> 229 `i != -> _c `ui -> 46 `ui ! != & -> _a `i -> 8 `i -> 0 `i 56  ]
[; ;pff.c: 557: break;
"557
[e $U 53  ]
[e :U 56 ]
[; ;pff.c: 558: res = dir_next(dj);
"558
[e = _res ( _dir_next (1 _dj ]
[; ;pff.c: 559: if (res != FR_OK) break;
"559
[e $ ! != -> _res `i -> . `E43 0 `i 57  ]
[e $U 53  ]
[e :U 57 ]
"560
}
[e :U 51 ]
"549
[e $ != . *U _dj 4 -> -> 0 `i `ul 52  ]
[e :U 53 ]
[; ;pff.c: 560: }
[; ;pff.c: 562: if (res != FR_OK) dj->sect = 0;
"562
[e $ ! != -> _res `i -> . `E43 0 `i 58  ]
[e = . *U _dj 4 -> -> -> 0 `i `l `ul ]
[e :U 58 ]
[; ;pff.c: 564: return res;
"564
[e ) _res ]
[e $UE 50  ]
[; ;pff.c: 565: }
"565
[e :UE 50 ]
}
"576
[v _create_name `(E43 ~T0 @X0 1 sf2`*S2`**Cuc ]
"580
{
[; ;pff.c: 575: static
[; ;pff.c: 576: FRESULT create_name (
[; ;pff.c: 577: DIR *dj,
[; ;pff.c: 578: const char **path
[; ;pff.c: 579: )
[; ;pff.c: 580: {
[e :U _create_name ]
"577
[v _dj `*S2 ~T0 @X0 1 r1 ]
"578
[v _path `**Cuc ~T0 @X0 1 r2 ]
"580
[f ]
"581
[v _c `uc ~T0 @X0 1 a ]
[v _ni `uc ~T0 @X0 1 a ]
[v _si `uc ~T0 @X0 1 a ]
[v _i `uc ~T0 @X0 1 a ]
[v _sfn `*uc ~T0 @X0 1 a ]
"582
[v _p `*Cuc ~T0 @X0 1 a ]
"585
[v F183 `Cuc ~T0 @X0 -> 0 `x s cvt ]
[i F183
:U ..
-> -> 128 `i `uc
-> -> 154 `i `uc
-> -> 144 `i `uc
-> -> 65 `i `uc
-> -> 142 `i `uc
-> -> 65 `i `uc
-> -> 143 `i `uc
-> -> 128 `i `uc
-> -> 69 `i `uc
-> -> 69 `i `uc
-> -> 69 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 142 `i `uc
-> -> 143 `i `uc
-> -> 144 `i `uc
-> -> 146 `i `uc
-> -> 146 `i `uc
-> -> 79 `i `uc
-> -> 153 `i `uc
-> -> 79 `i `uc
-> -> 85 `i `uc
-> -> 85 `i `uc
-> -> 89 `i `uc
-> -> 153 `i `uc
-> -> 154 `i `uc
-> -> 155 `i `uc
-> -> 156 `i `uc
-> -> 157 `i `uc
-> -> 158 `i `uc
-> -> 159 `i `uc
-> -> 65 `i `uc
-> -> 73 `i `uc
-> -> 79 `i `uc
-> -> 85 `i `uc
-> -> 165 `i `uc
-> -> 165 `i `uc
-> -> 166 `i `uc
-> -> 167 `i `uc
-> -> 168 `i `uc
-> -> 169 `i `uc
-> -> 170 `i `uc
-> -> 171 `i `uc
-> -> 172 `i `uc
-> -> 33 `i `uc
-> -> 174 `i `uc
-> -> 175 `i `uc
-> -> 176 `i `uc
-> -> 177 `i `uc
-> -> 178 `i `uc
-> -> 179 `i `uc
-> -> 180 `i `uc
-> -> 181 `i `uc
-> -> 182 `i `uc
-> -> 183 `i `uc
-> -> 184 `i `uc
-> -> 185 `i `uc
-> -> 186 `i `uc
-> -> 187 `i `uc
-> -> 188 `i `uc
-> -> 189 `i `uc
-> -> 190 `i `uc
-> -> 191 `i `uc
-> -> 192 `i `uc
-> -> 193 `i `uc
-> -> 194 `i `uc
-> -> 195 `i `uc
-> -> 196 `i `uc
-> -> 197 `i `uc
-> -> 198 `i `uc
-> -> 199 `i `uc
-> -> 200 `i `uc
-> -> 201 `i `uc
-> -> 202 `i `uc
-> -> 203 `i `uc
-> -> 204 `i `uc
-> -> 205 `i `uc
-> -> 206 `i `uc
-> -> 207 `i `uc
-> -> 208 `i `uc
-> -> 209 `i `uc
-> -> 210 `i `uc
-> -> 211 `i `uc
-> -> 212 `i `uc
-> -> 213 `i `uc
-> -> 214 `i `uc
-> -> 215 `i `uc
-> -> 216 `i `uc
-> -> 217 `i `uc
-> -> 218 `i `uc
-> -> 219 `i `uc
-> -> 220 `i `uc
-> -> 221 `i `uc
-> -> 222 `i `uc
-> -> 223 `i `uc
-> -> 224 `i `uc
-> -> 225 `i `uc
-> -> 226 `i `uc
-> -> 227 `i `uc
-> -> 228 `i `uc
-> -> 229 `i `uc
-> -> 230 `i `uc
-> -> 231 `i `uc
-> -> 232 `i `uc
-> -> 233 `i `uc
-> -> 234 `i `uc
-> -> 235 `i `uc
-> -> 236 `i `uc
-> -> 237 `i `uc
-> -> 238 `i `uc
-> -> 239 `i `uc
-> -> 240 `i `uc
-> -> 241 `i `uc
-> -> 242 `i `uc
-> -> 243 `i `uc
-> -> 244 `i `uc
-> -> 245 `i `uc
-> -> 246 `i `uc
-> -> 247 `i `uc
-> -> 248 `i `uc
-> -> 249 `i `uc
-> -> 250 `i `uc
-> -> 251 `i `uc
-> -> 252 `i `uc
-> -> 253 `i `uc
-> -> 254 `i `uc
-> -> 255 `i `uc
..
]
[; ;pff.c: 581: BYTE c, ni, si, i, *sfn;
[; ;pff.c: 582: const char *p;
[; ;pff.c: 585: static const BYTE cvt[] = {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F,0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, 0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0x
[; ;pff.c: 590: sfn = dj->fn;
"590
[e = _sfn . *U _dj 1 ]
[; ;pff.c: 591: mem_set(sfn, ' ', 11);
"591
[e ( _mem_set (3 , , -> _sfn `*v -> -> 32 `ui `i -> 11 `i ]
[; ;pff.c: 592: si = i = 0; ni = 8;
"592
[e = _si = _i -> -> 0 `i `uc ]
[e = _ni -> -> 8 `i `uc ]
[; ;pff.c: 593: p = *path;
"593
[e = _p *U _path ]
[; ;pff.c: 594: for (;;) {
"594
{
[e :U 60 ]
{
[; ;pff.c: 595: c = p[si++];
"595
[e = _c *U + _p * -> ++ _si -> -> 1 `i `uc `ux -> -> # *U _p `ui `ux ]
[; ;pff.c: 596: if (c <= ' ' || c == '/') break;
"596
[e $ ! || <= -> _c `ui -> 32 `ui == -> _c `ui -> 47 `ui 63  ]
[e $U 61  ]
[e :U 63 ]
[; ;pff.c: 597: if (c == '.' || i >= ni) {
"597
[e $ ! || == -> _c `ui -> 46 `ui >= -> _i `i -> _ni `i 64  ]
{
[; ;pff.c: 598: if (ni != 8 || c != '.') break;
"598
[e $ ! || != -> _ni `i -> 8 `i != -> _c `ui -> 46 `ui 65  ]
[e $U 61  ]
[e :U 65 ]
[; ;pff.c: 599: i = 8; ni = 11;
"599
[e = _i -> -> 8 `i `uc ]
[e = _ni -> -> 11 `i `uc ]
[; ;pff.c: 600: continue;
"600
[e $U 62  ]
"601
}
[e :U 64 ]
[; ;pff.c: 601: }
[; ;pff.c: 604: if (c >= 0x80)
"604
[e $ ! >= -> _c `i -> 128 `i 66  ]
[; ;pff.c: 605: c = cvt[c - 0x80];
"605
[e = _c *U + &U F183 * -> -> - -> _c `i -> 128 `i `ui `ux -> -> # *U &U F183 `ui `ux ]
[e :U 66 ]
[; ;pff.c: 607: if (0 && i < ni - 1) {
"607
[e $ ! && != -> 0 `i -> 0 `i < -> _i `i - -> _ni `i -> 1 `i 67  ]
{
"608
[v _d `uc ~T0 @X0 1 a ]
[; ;pff.c: 608: BYTE d = p[si++];
[e = _d *U + _p * -> ++ _si -> -> 1 `i `uc `ux -> -> # *U _p `ui `ux ]
[; ;pff.c: 609: sfn[i++] = c;
"609
[e = *U + _sfn * -> ++ _i -> -> 1 `i `uc `ux -> -> # *U _sfn `ui `ux _c ]
[; ;pff.c: 610: sfn[i++] = d;
"610
[e = *U + _sfn * -> ++ _i -> -> 1 `i `uc `ux -> -> # *U _sfn `ui `ux _d ]
"611
}
[; ;pff.c: 611: } else
[e $U 68  ]
[e :U 67 ]
[; ;pff.c: 613: {
"613
{
[; ;pff.c: 614: if (1 && (((c)>='a')&&((c)<='z'))) c -= 0x20;
"614
[e $ ! && != -> 1 `i -> 0 `i && >= -> _c `ui -> 97 `ui <= -> _c `ui -> 122 `ui 69  ]
[e =- _c -> -> 32 `i `uc ]
[e :U 69 ]
[; ;pff.c: 615: sfn[i++] = c;
"615
[e = *U + _sfn * -> ++ _i -> -> 1 `i `uc `ux -> -> # *U _sfn `ui `ux _c ]
"616
}
[e :U 68 ]
"617
}
[e :U 62 ]
[; ;pff.c: 616: }
[; ;pff.c: 617: }
[e $U 60  ]
[e :U 61 ]
}
[; ;pff.c: 618: *path = &p[si];
"618
[e = *U _path &U *U + _p * -> _si `ux -> -> # *U _p `ui `ux ]
[; ;pff.c: 620: sfn[11] = (c <= ' ') ? 1 : 0;
"620
[e = *U + _sfn * -> -> 11 `i `x -> -> # *U _sfn `i `x -> ? <= -> _c `ui -> 32 `ui : -> 1 `i -> 0 `i `uc ]
[; ;pff.c: 622: return FR_OK;
"622
[e ) . `E43 0 ]
[e $UE 59  ]
[; ;pff.c: 623: }
"623
[e :UE 59 ]
}
"633
[v _get_fileinfo `(v ~T0 @X0 1 sf3`*S2`*uc`*S3 ]
"638
{
[; ;pff.c: 632: static
[; ;pff.c: 633: void get_fileinfo (
[; ;pff.c: 634: DIR *dj,
[; ;pff.c: 635: BYTE *dir,
[; ;pff.c: 636: FILINFO *fno
[; ;pff.c: 637: )
[; ;pff.c: 638: {
[e :U _get_fileinfo ]
"634
[v _dj `*S2 ~T0 @X0 1 r1 ]
"635
[v _dir `*uc ~T0 @X0 1 r2 ]
"636
[v _fno `*S3 ~T0 @X0 1 r3 ]
"638
[f ]
"639
[v _i `uc ~T0 @X0 1 a ]
[v _c `uc ~T0 @X0 1 a ]
"640
[v _p `*uc ~T0 @X0 1 a ]
[; ;pff.c: 639: BYTE i, c;
[; ;pff.c: 640: char *p;
[; ;pff.c: 643: p = fno->fname;
"643
[e = _p &U . *U _fno 4 ]
[; ;pff.c: 644: if (dj->sect) {
"644
[e $ ! != . *U _dj 4 -> -> 0 `i `ul 71  ]
{
[; ;pff.c: 645: for (i = 0; i < 8; i++) {
"645
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 72  ]
[e $U 73  ]
[e :U 72 ]
{
[; ;pff.c: 646: c = dir[i];
"646
[e = _c *U + _dir * -> _i `ux -> -> # *U _dir `ui `ux ]
[; ;pff.c: 647: if (c == ' ') break;
"647
[e $ ! == -> _c `ui -> 32 `ui 75  ]
[e $U 73  ]
[e :U 75 ]
[; ;pff.c: 648: if (c == 0x05) c = 0xE5;
"648
[e $ ! == -> _c `i -> 5 `i 76  ]
[e = _c -> -> 229 `i `uc ]
[e :U 76 ]
[; ;pff.c: 649: *p++ = c;
"649
[e = *U ++ _p * -> -> 1 `i `x -> -> # *U _p `i `x _c ]
"650
}
"645
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 72  ]
[e :U 73 ]
"650
}
[; ;pff.c: 650: }
[; ;pff.c: 651: if (dir[8] != ' ') {
"651
[e $ ! != -> *U + _dir * -> -> 8 `i `x -> -> # *U _dir `i `x `ui -> 32 `ui 77  ]
{
[; ;pff.c: 652: *p++ = '.';
"652
[e = *U ++ _p * -> -> 1 `i `x -> -> # *U _p `i `x -> -> 46 `ui `uc ]
[; ;pff.c: 653: for (i = 8; i < 11; i++) {
"653
{
[e = _i -> -> 8 `i `uc ]
[e $ < -> _i `i -> 11 `i 78  ]
[e $U 79  ]
[e :U 78 ]
{
[; ;pff.c: 654: c = dir[i];
"654
[e = _c *U + _dir * -> _i `ux -> -> # *U _dir `ui `ux ]
[; ;pff.c: 655: if (c == ' ') break;
"655
[e $ ! == -> _c `ui -> 32 `ui 81  ]
[e $U 79  ]
[e :U 81 ]
[; ;pff.c: 656: *p++ = c;
"656
[e = *U ++ _p * -> -> 1 `i `x -> -> # *U _p `i `x _c ]
"657
}
"653
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 11 `i 78  ]
[e :U 79 ]
"657
}
"658
}
[e :U 77 ]
[; ;pff.c: 657: }
[; ;pff.c: 658: }
[; ;pff.c: 659: fno->fattrib = dir[11];
"659
[e = . *U _fno 3 *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x ]
[; ;pff.c: 660: fno->fsize = (DWORD)(((DWORD)*((BYTE*)(dir+28)+3)<<24)|((DWORD)*((BYTE*)(dir+28)+2)<<16)|((WORD)*((BYTE*)(dir+28)+1)<<8)|*(BYTE*)(dir+28));
"660
[e = . *U _fno 0 | | | << -> *U + + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x * -> -> 3 `i `x -> -> # *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `i `x `ul -> 24 `i << -> *U + + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x * -> -> 2 `i `x -> -> # *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `i `x `ul -> 16 `i -> << -> -> *U + + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `i `x `us `ui -> 8 `i `ul -> *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `ul ]
[; ;pff.c: 661: fno->fdate = (WORD)(((WORD)*((BYTE*)(dir+24)+1)<<8)|(WORD)*(BYTE*)(dir+24));
"661
[e = . *U _fno 1 -> | << -> -> *U + + _dir * -> -> 24 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U + _dir * -> -> 24 `i `x -> -> # *U _dir `i `x `i `x `us `ui -> 8 `i -> -> *U + _dir * -> -> 24 `i `x -> -> # *U _dir `i `x `us `ui `us ]
[; ;pff.c: 662: fno->ftime = (WORD)(((WORD)*((BYTE*)(dir+22)+1)<<8)|(WORD)*(BYTE*)(dir+22));
"662
[e = . *U _fno 2 -> | << -> -> *U + + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x `i `x `us `ui -> 8 `i -> -> *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x `us `ui `us ]
"663
}
[e :U 71 ]
[; ;pff.c: 663: }
[; ;pff.c: 664: *p = 0;
"664
[e = *U _p -> -> 0 `i `uc ]
[; ;pff.c: 665: }
"665
[e :UE 70 ]
}
"675
[v _follow_path `(E43 ~T0 @X0 1 sf3`*S2`*uc`*Cuc ]
"680
{
[; ;pff.c: 674: static
[; ;pff.c: 675: FRESULT follow_path (
[; ;pff.c: 676: DIR *dj,
[; ;pff.c: 677: BYTE *dir,
[; ;pff.c: 678: const char *path
[; ;pff.c: 679: )
[; ;pff.c: 680: {
[e :U _follow_path ]
"676
[v _dj `*S2 ~T0 @X0 1 r1 ]
"677
[v _dir `*uc ~T0 @X0 1 r2 ]
"678
[v _path `*Cuc ~T0 @X0 1 r3 ]
"680
[f ]
"681
[v _res `E43 ~T0 @X0 1 a ]
[; ;pff.c: 681: FRESULT res;
[; ;pff.c: 684: while (*path == ' ') path++;
"684
[e $U 83  ]
[e :U 84 ]
[e ++ _path * -> -> 1 `i `x -> -> # *U _path `i `x ]
[e :U 83 ]
[e $ == -> *U _path `ui -> 32 `ui 84  ]
[e :U 85 ]
[; ;pff.c: 685: if (*path == '/') path++;
"685
[e $ ! == -> *U _path `ui -> 47 `ui 86  ]
[e ++ _path * -> -> 1 `i `x -> -> # *U _path `i `x ]
[e :U 86 ]
[; ;pff.c: 686: dj->sclust = 0;
"686
[e = . *U _dj 2 -> -> -> 0 `i `l `ul ]
[; ;pff.c: 688: if ((BYTE)*path < ' ') {
"688
[e $ ! < -> *U _path `ui -> 32 `ui 87  ]
{
[; ;pff.c: 689: res = dir_rewind(dj);
"689
[e = _res ( _dir_rewind (1 _dj ]
[; ;pff.c: 690: dir[0] = 0;
"690
[e = *U + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x -> -> 0 `i `uc ]
"692
}
[; ;pff.c: 692: } else {
[e $U 88  ]
[e :U 87 ]
{
[; ;pff.c: 693: for (;;) {
"693
{
[e :U 89 ]
{
[; ;pff.c: 694: res = create_name(dj, &path);
"694
[e = _res ( _create_name (2 , _dj &U _path ]
[; ;pff.c: 695: if (res != FR_OK) break;
"695
[e $ ! != -> _res `i -> . `E43 0 `i 92  ]
[e $U 90  ]
[e :U 92 ]
[; ;pff.c: 696: res = dir_find(dj, dir);
"696
[e = _res ( _dir_find (2 , _dj _dir ]
[; ;pff.c: 697: if (res != FR_OK) break;
"697
[e $ ! != -> _res `i -> . `E43 0 `i 93  ]
[e $U 90  ]
[e :U 93 ]
[; ;pff.c: 698: if (dj->fn[11]) break;
"698
[e $ ! != -> *U + . *U _dj 1 * -> -> 11 `i `x -> -> # *U . *U _dj 1 `i `x `i -> -> -> 0 `i `uc `i 94  ]
[e $U 90  ]
[e :U 94 ]
[; ;pff.c: 699: if (!(dir[11] & 0x10)) {
"699
[e $ ! ! != & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> 16 `i -> 0 `i 95  ]
{
[; ;pff.c: 700: res = FR_NO_FILE; break;
"700
[e = _res . `E43 3 ]
[e $U 90  ]
"701
}
[e :U 95 ]
[; ;pff.c: 701: }
[; ;pff.c: 702: dj->sclust = get_clust(dir);
"702
[e = . *U _dj 2 ( _get_clust (1 _dir ]
"703
}
[; ;pff.c: 703: }
[e $U 89  ]
[e :U 90 ]
}
"704
}
[e :U 88 ]
[; ;pff.c: 704: }
[; ;pff.c: 706: return res;
"706
[e ) _res ]
[e $UE 82  ]
[; ;pff.c: 707: }
"707
[e :UE 82 ]
}
"717
[v _check_fs `(uc ~T0 @X0 1 sf2`*uc`ul ]
"721
{
[; ;pff.c: 716: static
[; ;pff.c: 717: BYTE check_fs (
[; ;pff.c: 718: BYTE *buf,
[; ;pff.c: 719: DWORD sect
[; ;pff.c: 720: )
[; ;pff.c: 721: {
[e :U _check_fs ]
"718
[v _buf `*uc ~T0 @X0 1 r1 ]
"719
[v _sect `ul ~T0 @X0 1 r2 ]
"721
[f ]
[; ;pff.c: 722: if (disk_readp(buf, sect, 510, 2))
"722
[e $ ! != -> ( _disk_readp (4 , , , _buf _sect -> -> 510 `i `ui -> -> 2 `i `ui `i -> -> -> 0 `i `E73 `i 97  ]
[; ;pff.c: 723: return 3;
"723
[e ) -> -> 3 `i `uc ]
[e $UE 96  ]
[e :U 97 ]
[; ;pff.c: 724: if ( (WORD)(((WORD)*((BYTE*)(buf)+1)<<8)|(WORD)*(BYTE*)(buf)) != 0xAA55)
"724
[e $ ! != -> -> | << -> -> *U + _buf * -> -> 1 `i `x -> -> # *U _buf `i `x `us `ui -> 8 `i -> -> *U _buf `us `ui `us `ui -> 43605 `ui 98  ]
[; ;pff.c: 725: {
"725
{
[; ;pff.c: 726: return 2;
"726
[e ) -> -> 2 `i `uc ]
[e $UE 96  ]
"727
}
[e :U 98 ]
[; ;pff.c: 727: }
[; ;pff.c: 728: if (!0 && !disk_readp(buf, sect, 54 , 2) && (WORD)(((WORD)*((BYTE*)(buf)+1)<<8)|(WORD)*(BYTE*)(buf)) == 0x4146)
"728
[e $ ! && && ! != -> 0 `i -> 0 `i ! != -> ( _disk_readp (4 , , , _buf _sect -> -> 54 `i `ui -> -> 2 `i `ui `i -> -> -> 0 `i `E73 `i == -> -> | << -> -> *U + _buf * -> -> 1 `i `x -> -> # *U _buf `i `x `us `ui -> 8 `i -> -> *U _buf `us `ui `us `ui -> -> 16710 `i `ui 99  ]
[; ;pff.c: 729: return 0;
"729
[e ) -> -> 0 `i `uc ]
[e $UE 96  ]
[e :U 99 ]
[; ;pff.c: 730: if (1 && !disk_readp(buf, sect, 82 , 2) && (WORD)(((WORD)*((BYTE*)(buf)+1)<<8)|(WORD)*(BYTE*)(buf)) == 0x4146)
"730
[e $ ! && && != -> 1 `i -> 0 `i ! != -> ( _disk_readp (4 , , , _buf _sect -> -> 82 `i `ui -> -> 2 `i `ui `i -> -> -> 0 `i `E73 `i == -> -> | << -> -> *U + _buf * -> -> 1 `i `x -> -> # *U _buf `i `x `us `ui -> 8 `i -> -> *U _buf `us `ui `us `ui -> -> 16710 `i `ui 100  ]
[; ;pff.c: 731: return 0;
"731
[e ) -> -> 0 `i `uc ]
[e $UE 96  ]
[e :U 100 ]
[; ;pff.c: 732: return 1;
"732
[e ) -> -> 1 `i `uc ]
[e $UE 96  ]
[; ;pff.c: 733: }
"733
[e :UE 96 ]
}
"748
[v _pf_mount `(E43 ~T0 @X0 1 ef1`*S1 ]
"751
{
[; ;pff.c: 748: FRESULT pf_mount (
[; ;pff.c: 749: FATFS *fs
[; ;pff.c: 750: )
[; ;pff.c: 751: {
[e :U _pf_mount ]
"749
[v _fs `*S1 ~T0 @X0 1 r1 ]
"751
[f ]
"752
[v _fmt `uc ~T0 @X0 1 a ]
[v _buf `uc ~T0 @X0 -> 36 `i a ]
"753
[v _bsect `ul ~T0 @X0 1 a ]
[v _fsize `ul ~T0 @X0 1 a ]
[v _tsect `ul ~T0 @X0 1 a ]
[v _mclst `ul ~T0 @X0 1 a ]
[; ;pff.c: 752: BYTE fmt, buf[36];
[; ;pff.c: 753: DWORD bsect, fsize, tsect, mclst;
[; ;pff.c: 756: FatFs = 0;
"756
[e = _FatFs -> -> 0 `i `*S1 ]
[; ;pff.c: 757: if (disk_initialize() & 0x01)
"757
[e $ ! != & -> ( _disk_initialize ..  `i -> 1 `i -> 0 `i 102  ]
[; ;pff.c: 758: return FR_NOT_READY;
"758
[e ) . `E43 2 ]
[e $UE 101  ]
[e :U 102 ]
[; ;pff.c: 760: bsect = 0;
"760
[e = _bsect -> -> -> 0 `i `l `ul ]
[; ;pff.c: 761: fmt = check_fs(buf, bsect);
"761
[e = _fmt ( _check_fs (2 , &U _buf _bsect ]
[; ;pff.c: 762: if (fmt == 1) {
"762
[e $ ! == -> _fmt `i -> 1 `i 103  ]
{
[; ;pff.c: 764: if (disk_readp(buf, bsect, 446, 16)) {
"764
[e $ ! != -> ( _disk_readp (4 , , , &U _buf _bsect -> -> 446 `i `ui -> -> 16 `i `ui `i -> -> -> 0 `i `E73 `i 104  ]
{
[; ;pff.c: 765: fmt = 3;
"765
[e = _fmt -> -> 3 `i `uc ]
"766
}
[; ;pff.c: 766: } else {
[e $U 105  ]
[e :U 104 ]
{
[; ;pff.c: 767: if (buf[4]) {
"767
[e $ ! != -> *U + &U _buf * -> -> -> 4 `i `ui `ux -> -> # *U &U _buf `ui `ux `i -> -> -> 0 `i `uc `i 106  ]
{
[; ;pff.c: 768: bsect = (DWORD)(((DWORD)*((BYTE*)(&buf[8])+3)<<24)|((DWORD)*((BYTE*)(&buf[8])+2)<<16)|((WORD)*((BYTE*)(&buf[8])+1)<<8)|*(BYTE*)(&buf[8]));
"768
[e = _bsect | | | << -> *U + &U *U + &U _buf * -> -> -> 8 `i `ui `ux -> -> # *U &U _buf `ui `ux * -> -> 3 `i `x -> -> # *U &U *U + &U _buf * -> -> -> 8 `i `ui `ux -> -> # *U &U _buf `ui `ux `i `x `ul -> 24 `i << -> *U + &U *U + &U _buf * -> -> -> 8 `i `ui `ux -> -> # *U &U _buf `ui `ux * -> -> 2 `i `x -> -> # *U &U *U + &U _buf * -> -> -> 8 `i `ui `ux -> -> # *U &U _buf `ui `ux `i `x `ul -> 16 `i -> << -> -> *U + &U *U + &U _buf * -> -> -> 8 `i `ui `ux -> -> # *U &U _buf `ui `ux * -> -> 1 `i `x -> -> # *U &U *U + &U _buf * -> -> -> 8 `i `ui `ux -> -> # *U &U _buf `ui `ux `i `x `us `ui -> 8 `i `ul -> *U &U *U + &U _buf * -> -> -> 8 `i `ui `ux -> -> # *U &U _buf `ui `ux `ul ]
[; ;pff.c: 769: fmt = check_fs(buf, bsect);
"769
[e = _fmt ( _check_fs (2 , &U _buf _bsect ]
"770
}
[e :U 106 ]
"771
}
[e :U 105 ]
"772
}
[e :U 103 ]
[; ;pff.c: 770: }
[; ;pff.c: 771: }
[; ;pff.c: 772: }
[; ;pff.c: 773: if (fmt == 3) return FR_DISK_ERR;
"773
[e $ ! == -> _fmt `i -> 3 `i 107  ]
[e ) . `E43 1 ]
[e $UE 101  ]
[e :U 107 ]
[; ;pff.c: 774: if (fmt) return FR_NO_FILESYSTEM;
"774
[e $ ! != -> _fmt `i -> -> -> 0 `i `uc `i 108  ]
[e ) . `E43 6 ]
[e $UE 101  ]
[e :U 108 ]
[; ;pff.c: 777: if (disk_readp(buf, bsect, 13, sizeof (buf))) return FR_DISK_ERR;
"777
[e $ ! != -> ( _disk_readp (4 , , , &U _buf _bsect -> -> 13 `i `ui -> # _buf `ui `i -> -> -> 0 `i `E73 `i 109  ]
[e ) . `E43 1 ]
[e $UE 101  ]
[e :U 109 ]
[; ;pff.c: 779: fsize = (WORD)(((WORD)*((BYTE*)(buf+22-13)+1)<<8)|(WORD)*(BYTE*)(buf+22-13));
"779
[e = _fsize -> -> | << -> -> *U + - + &U _buf * -> -> 22 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 22 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 1 `i `x -> -> # *U - + &U _buf * -> -> 22 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 22 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `us `ui -> 8 `i -> -> *U - + &U _buf * -> -> 22 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 22 `i `x -> -> # *U &U _buf `i `x `i `x `us `ui `us `ul ]
[; ;pff.c: 780: if (!fsize) fsize = (DWORD)(((DWORD)*((BYTE*)(buf+36-13)+3)<<24)|((DWORD)*((BYTE*)(buf+36-13)+2)<<16)|((WORD)*((BYTE*)(buf+36-13)+1)<<8)|*(BYTE*)(buf+36-13));
"780
[e $ ! ! != _fsize -> -> 0 `i `ul 110  ]
[e = _fsize | | | << -> *U + - + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 3 `i `x -> -> # *U - + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `ul -> 24 `i << -> *U + - + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 2 `i `x -> -> # *U - + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `ul -> 16 `i -> << -> -> *U + - + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 1 `i `x -> -> # *U - + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `us `ui -> 8 `i `ul -> *U - + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x `i `x `ul ]
[e :U 110 ]
[; ;pff.c: 782: fsize *= buf[16-13];
"782
[e =* _fsize -> *U + &U _buf * -> -> - -> 16 `i -> 13 `i `ui `ux -> -> # *U &U _buf `ui `ux `ul ]
[; ;pff.c: 783: fs->fatbase = bsect + (WORD)(((WORD)*((BYTE*)(buf+14-13)+1)<<8)|(WORD)*(BYTE*)(buf+14-13));
"783
[e = . *U _fs 6 + _bsect -> -> | << -> -> *U + - + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 1 `i `x -> -> # *U - + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `us `ui -> 8 `i -> -> *U - + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x `i `x `us `ui `us `ul ]
[; ;pff.c: 784: fs->csize = buf[13-13];
"784
[e = . *U _fs 2 *U + &U _buf * -> -> - -> 13 `i -> 13 `i `ui `ux -> -> # *U &U _buf `ui `ux ]
[; ;pff.c: 785: fs->n_rootdir = (WORD)(((WORD)*((BYTE*)(buf+17-13)+1)<<8)|(WORD)*(BYTE*)(buf+17-13));
"785
[e = . *U _fs 4 -> | << -> -> *U + - + &U _buf * -> -> 17 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 17 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 1 `i `x -> -> # *U - + &U _buf * -> -> 17 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 17 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `us `ui -> 8 `i -> -> *U - + &U _buf * -> -> 17 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 17 `i `x -> -> # *U &U _buf `i `x `i `x `us `ui `us ]
[; ;pff.c: 786: tsect = (WORD)(((WORD)*((BYTE*)(buf+19-13)+1)<<8)|(WORD)*(BYTE*)(buf+19-13));
"786
[e = _tsect -> -> | << -> -> *U + - + &U _buf * -> -> 19 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 19 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 1 `i `x -> -> # *U - + &U _buf * -> -> 19 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 19 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `us `ui -> 8 `i -> -> *U - + &U _buf * -> -> 19 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 19 `i `x -> -> # *U &U _buf `i `x `i `x `us `ui `us `ul ]
[; ;pff.c: 787: if (!tsect) tsect = (DWORD)(((DWORD)*((BYTE*)(buf+32-13)+3)<<24)|((DWORD)*((BYTE*)(buf+32-13)+2)<<16)|((WORD)*((BYTE*)(buf+32-13)+1)<<8)|*(BYTE*)(buf+32-13));
"787
[e $ ! ! != _tsect -> -> 0 `i `ul 111  ]
[e = _tsect | | | << -> *U + - + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 3 `i `x -> -> # *U - + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `ul -> 24 `i << -> *U + - + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 2 `i `x -> -> # *U - + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `ul -> 16 `i -> << -> -> *U + - + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 1 `i `x -> -> # *U - + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `us `ui -> 8 `i `ul -> *U - + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x `i `x `ul ]
[e :U 111 ]
[; ;pff.c: 788: mclst = (tsect
[; ;pff.c: 789: - (WORD)(((WORD)*((BYTE*)(buf+14-13)+1)<<8)|(WORD)*(BYTE*)(buf+14-13)) - fsize - fs->n_rootdir / 16
[; ;pff.c: 790: ) / fs->csize + 2;
"790
[e = _mclst + / - - - _tsect -> -> | << -> -> *U + - + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 1 `i `x -> -> # *U - + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `us `ui -> 8 `i -> -> *U - + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x `i `x `us `ui `us `ul _fsize -> / -> . *U _fs 4 `ui -> -> 16 `i `ui `ul -> . *U _fs 2 `ul -> -> -> 2 `i `l `ul ]
[; ;pff.c: 791: fs->n_fatent = (DWORD)mclst;
"791
[e = . *U _fs 5 _mclst ]
[; ;pff.c: 793: fmt = 0;
"793
[e = _fmt -> -> 0 `i `uc ]
[; ;pff.c: 794: if (1 && mclst < 0xFF7)
"794
[e $ ! && != -> 1 `i -> 0 `i < _mclst -> -> -> 4087 `i `l `ul 112  ]
[; ;pff.c: 795: fmt = 1;
"795
[e = _fmt -> -> 1 `i `uc ]
[e :U 112 ]
[; ;pff.c: 796: if (1 && mclst >= 0xFF8 && mclst < 0xFFF7)
"796
[e $ ! && && != -> 1 `i -> 0 `i >= _mclst -> -> -> 4088 `i `l `ul < _mclst -> -> 65527 `ui `ul 113  ]
[; ;pff.c: 797: fmt = 2;
"797
[e = _fmt -> -> 2 `i `uc ]
[e :U 113 ]
[; ;pff.c: 798: if (1 && mclst >= 0xFFF7)
"798
[e $ ! && != -> 1 `i -> 0 `i >= _mclst -> -> 65527 `ui `ul 114  ]
[; ;pff.c: 799: fmt = 3;
"799
[e = _fmt -> -> 3 `i `uc ]
[e :U 114 ]
[; ;pff.c: 800: if (!fmt) return FR_NO_FILESYSTEM;
"800
[e $ ! ! != -> _fmt `i -> -> -> 0 `i `uc `i 115  ]
[e ) . `E43 6 ]
[e $UE 101  ]
[e :U 115 ]
[; ;pff.c: 801: fs->fs_type = fmt;
"801
[e = . *U _fs 0 _fmt ]
[; ;pff.c: 803: if (0 || (1 && fmt == 3))
"803
[e $ ! || != -> 0 `i -> 0 `i && != -> 1 `i -> 0 `i == -> _fmt `i -> 3 `i 116  ]
[; ;pff.c: 804: fs->dirbase = (DWORD)(((DWORD)*((BYTE*)(buf+(44-13))+3)<<24)|((DWORD)*((BYTE*)(buf+(44-13))+2)<<16)|((WORD)*((BYTE*)(buf+(44-13))+1)<<8)|*(BYTE*)(buf+(44-13)));
"804
[e = . *U _fs 7 | | | << -> *U + + &U _buf * -> - -> 44 `i -> 13 `i `x -> -> # *U &U _buf `i `x * -> -> 3 `i `x -> -> # *U + &U _buf * -> - -> 44 `i -> 13 `i `x -> -> # *U &U _buf `i `x `i `x `ul -> 24 `i << -> *U + + &U _buf * -> - -> 44 `i -> 13 `i `x -> -> # *U &U _buf `i `x * -> -> 2 `i `x -> -> # *U + &U _buf * -> - -> 44 `i -> 13 `i `x -> -> # *U &U _buf `i `x `i `x `ul -> 16 `i -> << -> -> *U + + &U _buf * -> - -> 44 `i -> 13 `i `x -> -> # *U &U _buf `i `x * -> -> 1 `i `x -> -> # *U + &U _buf * -> - -> 44 `i -> 13 `i `x -> -> # *U &U _buf `i `x `i `x `us `ui -> 8 `i `ul -> *U + &U _buf * -> - -> 44 `i -> 13 `i `x -> -> # *U &U _buf `i `x `ul ]
[e $U 117  ]
"805
[e :U 116 ]
[; ;pff.c: 805: else
[; ;pff.c: 806: fs->dirbase = fs->fatbase + fsize;
"806
[e = . *U _fs 7 + . *U _fs 6 _fsize ]
[e :U 117 ]
[; ;pff.c: 807: fs->database = fs->fatbase + fsize + fs->n_rootdir / 16;
"807
[e = . *U _fs 8 + + . *U _fs 6 _fsize -> / -> . *U _fs 4 `ui -> -> 16 `i `ui `ul ]
[; ;pff.c: 809: fs->flag = 0;
"809
[e = . *U _fs 1 -> -> 0 `i `uc ]
[; ;pff.c: 810: FatFs = fs;
"810
[e = _FatFs _fs ]
[; ;pff.c: 812: return FR_OK;
"812
[e ) . `E43 0 ]
[e $UE 101  ]
[; ;pff.c: 813: }
"813
[e :UE 101 ]
}
"822
[v _pf_open `(E43 ~T0 @X0 1 ef1`*Cuc ]
"825
{
[; ;pff.c: 822: FRESULT pf_open (
[; ;pff.c: 823: const char *path
[; ;pff.c: 824: )
[; ;pff.c: 825: {
[e :U _pf_open ]
"823
[v _path `*Cuc ~T0 @X0 1 r1 ]
"825
[f ]
"826
[v _res `E43 ~T0 @X0 1 a ]
"827
[v _dj `S2 ~T0 @X0 1 a ]
"828
[v _sp `uc ~T0 @X0 -> 12 `i a ]
[v _dir `uc ~T0 @X0 -> 32 `i a ]
"829
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 826: FRESULT res;
[; ;pff.c: 827: DIR dj;
[; ;pff.c: 828: BYTE sp[12], dir[32];
[; ;pff.c: 829: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 831: if (!fs) return FR_NOT_ENABLED;
"831
[e $ ! ! != _fs -> -> 0 `i `*S1 119  ]
[e ) . `E43 5 ]
[e $UE 118  ]
[e :U 119 ]
[; ;pff.c: 833: fs->flag = 0;
"833
[e = . *U _fs 1 -> -> 0 `i `uc ]
[; ;pff.c: 834: dj.fn = sp;
"834
[e = . _dj 1 &U _sp ]
[; ;pff.c: 835: res = follow_path(&dj, dir, "check.txt" );
"835
[e = _res ( _follow_path (3 , , &U _dj &U _dir :s 1C ]
[; ;pff.c: 836: if (res != FR_OK) return res;
"836
[e $ ! != -> _res `i -> . `E43 0 `i 120  ]
[e ) _res ]
[e $UE 118  ]
[e :U 120 ]
[; ;pff.c: 837: if (!dir[0] || (dir[11] & 0x10))
"837
[e $ ! || ! != -> *U + &U _dir * -> -> -> 0 `i `ui `ux -> -> # *U &U _dir `ui `ux `i -> -> -> 0 `i `uc `i != & -> *U + &U _dir * -> -> -> 11 `i `ui `ux -> -> # *U &U _dir `ui `ux `i -> 16 `i -> 0 `i 121  ]
[; ;pff.c: 838: return FR_NO_FILE;
"838
[e ) . `E43 3 ]
[e $UE 118  ]
[e :U 121 ]
[; ;pff.c: 840: fs->org_clust = get_clust(dir);
"840
[e = . *U _fs 11 ( _get_clust (1 &U _dir ]
[; ;pff.c: 841: fs->fsize = (DWORD)(((DWORD)*((BYTE*)(dir+28)+3)<<24)|((DWORD)*((BYTE*)(dir+28)+2)<<16)|((WORD)*((BYTE*)(dir+28)+1)<<8)|*(BYTE*)(dir+28));
"841
[e = . *U _fs 10 | | | << -> *U + + &U _dir * -> -> 28 `i `x -> -> # *U &U _dir `i `x * -> -> 3 `i `x -> -> # *U + &U _dir * -> -> 28 `i `x -> -> # *U &U _dir `i `x `i `x `ul -> 24 `i << -> *U + + &U _dir * -> -> 28 `i `x -> -> # *U &U _dir `i `x * -> -> 2 `i `x -> -> # *U + &U _dir * -> -> 28 `i `x -> -> # *U &U _dir `i `x `i `x `ul -> 16 `i -> << -> -> *U + + &U _dir * -> -> 28 `i `x -> -> # *U &U _dir `i `x * -> -> 1 `i `x -> -> # *U + &U _dir * -> -> 28 `i `x -> -> # *U &U _dir `i `x `i `x `us `ui -> 8 `i `ul -> *U + &U _dir * -> -> 28 `i `x -> -> # *U &U _dir `i `x `ul ]
[; ;pff.c: 842: fs->fptr = 0;
"842
[e = . *U _fs 9 -> -> -> 0 `i `l `ul ]
[; ;pff.c: 843: fs->flag = 0x01;
"843
[e = . *U _fs 1 -> -> 1 `i `uc ]
[; ;pff.c: 845: return FR_OK;
"845
[e ) . `E43 0 ]
[e $UE 118  ]
[; ;pff.c: 846: }
"846
[e :UE 118 ]
}
"856
[v _pf_read `(E43 ~T0 @X0 1 ef3`*v`ui`*ui ]
"861
{
[; ;pff.c: 856: FRESULT pf_read (
[; ;pff.c: 857: void* buff,
[; ;pff.c: 858: UINT btr,
[; ;pff.c: 859: UINT* br
[; ;pff.c: 860: )
[; ;pff.c: 861: {
[e :U _pf_read ]
"857
[v _buff `*v ~T0 @X0 1 r1 ]
"858
[v _btr `ui ~T0 @X0 1 r2 ]
"859
[v _br `*ui ~T0 @X0 1 r3 ]
"861
[f ]
"862
[v _dr `E73 ~T0 @X0 1 a ]
"863
[v _clst `ul ~T0 @X0 1 a ]
"864
[v _sect `ul ~T0 @X0 1 a ]
[v _remain `ul ~T0 @X0 1 a ]
"865
[v _rcnt `ui ~T0 @X0 1 a ]
"866
[v _cs `uc ~T0 @X0 1 a ]
[v _rbuff `*uc ~T0 @X0 1 a ]
[; ;pff.c: 862: DRESULT dr;
[; ;pff.c: 863: DWORD clst;
[; ;pff.c: 864: DWORD sect, remain;
[; ;pff.c: 865: UINT rcnt;
[; ;pff.c: 866: BYTE cs, *rbuff = buff;
[e = _rbuff -> _buff `*uc ]
"867
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 867: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 870: *br = 0;
"870
[e = *U _br -> -> 0 `i `ui ]
[; ;pff.c: 871: if (!fs) return FR_NOT_ENABLED;
"871
[e $ ! ! != _fs -> -> 0 `i `*S1 123  ]
[e ) . `E43 5 ]
[e $UE 122  ]
[e :U 123 ]
[; ;pff.c: 872: if (!(fs->flag & 0x01))
"872
[e $ ! ! != & -> . *U _fs 1 `i -> 1 `i -> 0 `i 124  ]
[; ;pff.c: 873: return FR_NOT_OPENED;
"873
[e ) . `E43 4 ]
[e $UE 122  ]
[e :U 124 ]
[; ;pff.c: 875: remain = fs->fsize - fs->fptr;
"875
[e = _remain - . *U _fs 10 . *U _fs 9 ]
[; ;pff.c: 876: if (btr > remain) btr = (UINT)remain;
"876
[e $ ! > -> _btr `ul _remain 125  ]
[e = _btr -> _remain `ui ]
[e :U 125 ]
[; ;pff.c: 878: while (btr) {
"878
[e $U 126  ]
[e :U 127 ]
{
[; ;pff.c: 879: if ((fs->fptr % 512) == 0) {
"879
[e $ ! == % . *U _fs 9 -> -> -> 512 `i `l `ul -> -> -> 0 `i `l `ul 129  ]
{
[; ;pff.c: 880: cs = (BYTE)(fs->fptr / 512 & (fs->csize - 1));
"880
[e = _cs -> & / . *U _fs 9 -> -> -> 512 `i `l `ul -> -> - -> . *U _fs 2 `i -> 1 `i `l `ul `uc ]
[; ;pff.c: 881: if (!cs) {
"881
[e $ ! ! != -> _cs `i -> -> -> 0 `i `uc `i 130  ]
{
[; ;pff.c: 882: if (fs->fptr == 0)
"882
[e $ ! == . *U _fs 9 -> -> -> 0 `i `l `ul 131  ]
[; ;pff.c: 883: clst = fs->org_clust;
"883
[e = _clst . *U _fs 11 ]
[e $U 132  ]
"884
[e :U 131 ]
[; ;pff.c: 884: else
[; ;pff.c: 885: clst = get_fat(fs->curr_clust);
"885
[e = _clst ( _get_fat (1 . *U _fs 12 ]
[e :U 132 ]
[; ;pff.c: 886: if (clst <= 1) {fs->flag = 0; return FR_DISK_ERR;};
"886
[e $ ! <= _clst -> -> -> 1 `i `l `ul 133  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) . `E43 1 ]
[e $UE 122  ]
}
[e :U 133 ]
[; ;pff.c: 887: fs->curr_clust = clst;
"887
[e = . *U _fs 12 _clst ]
"888
}
[e :U 130 ]
[; ;pff.c: 888: }
[; ;pff.c: 889: sect = clust2sect(fs->curr_clust);
"889
[e = _sect ( _clust2sect (1 . *U _fs 12 ]
[; ;pff.c: 890: if (!sect) {fs->flag = 0; return FR_DISK_ERR;};
"890
[e $ ! ! != _sect -> -> 0 `i `ul 134  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) . `E43 1 ]
[e $UE 122  ]
}
[e :U 134 ]
[; ;pff.c: 891: fs->dsect = sect + cs;
"891
[e = . *U _fs 13 + _sect -> _cs `ul ]
"892
}
[e :U 129 ]
[; ;pff.c: 892: }
[; ;pff.c: 893: rcnt = 512 - (UINT)fs->fptr % 512;
"893
[e = _rcnt - -> -> 512 `i `ui % -> . *U _fs 9 `ui -> -> 512 `i `ui ]
[; ;pff.c: 894: if (rcnt > btr) rcnt = btr;
"894
[e $ ! > _rcnt _btr 135  ]
[e = _rcnt _btr ]
[e :U 135 ]
[; ;pff.c: 895: dr = disk_readp(!buff ? 0 : rbuff, fs->dsect, (UINT)fs->fptr % 512, rcnt);
"895
[e = _dr ( _disk_readp (4 , , , ? ! != _buff -> -> 0 `i `*v : -> -> 0 `i `*uc _rbuff . *U _fs 13 % -> . *U _fs 9 `ui -> -> 512 `i `ui _rcnt ]
[; ;pff.c: 896: if (dr) {fs->flag = 0; return FR_DISK_ERR;};
"896
[e $ ! != -> _dr `i -> -> -> 0 `i `E73 `i 136  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) . `E43 1 ]
[e $UE 122  ]
}
[e :U 136 ]
[; ;pff.c: 897: fs->fptr += rcnt; rbuff += rcnt;
"897
[e =+ . *U _fs 9 -> _rcnt `ul ]
[e =+ _rbuff * -> _rcnt `ux -> -> # *U _rbuff `ui `ux ]
[; ;pff.c: 898: btr -= rcnt; *br += rcnt;
"898
[e =- _btr _rcnt ]
[e =+ *U _br _rcnt ]
"899
}
[e :U 126 ]
"878
[e $ != _btr -> -> 0 `i `ui 127  ]
[e :U 128 ]
[; ;pff.c: 899: }
[; ;pff.c: 901: return FR_OK;
"901
[e ) . `E43 0 ]
[e $UE 122  ]
[; ;pff.c: 902: }
"902
[e :UE 122 ]
}
"912
[v _pf_write `(E43 ~T0 @X0 1 ef3`*Cv`ui`*ui ]
"917
{
[; ;pff.c: 912: FRESULT pf_write (
[; ;pff.c: 913: const void* buff,
[; ;pff.c: 914: UINT btw,
[; ;pff.c: 915: UINT* bw
[; ;pff.c: 916: )
[; ;pff.c: 917: {
[e :U _pf_write ]
"913
[v _buff `*Cv ~T0 @X0 1 r1 ]
"914
[v _btw `ui ~T0 @X0 1 r2 ]
"915
[v _bw `*ui ~T0 @X0 1 r3 ]
"917
[f ]
"918
[v _clst `ul ~T0 @X0 1 a ]
"919
[v _sect `ul ~T0 @X0 1 a ]
[v _remain `ul ~T0 @X0 1 a ]
"920
[v _p `*Cuc ~T0 @X0 1 a ]
[; ;pff.c: 918: DWORD clst;
[; ;pff.c: 919: DWORD sect, remain;
[; ;pff.c: 920: const BYTE *p = buff;
[e = _p -> _buff `*Cuc ]
"921
[v _cs `uc ~T0 @X0 1 a ]
"922
[v _wcnt `ui ~T0 @X0 1 a ]
"923
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 921: BYTE cs;
[; ;pff.c: 922: UINT wcnt;
[; ;pff.c: 923: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 926: *bw = 0;
"926
[e = *U _bw -> -> 0 `i `ui ]
[; ;pff.c: 927: if (!fs) return FR_NOT_ENABLED;
"927
[e $ ! ! != _fs -> -> 0 `i `*S1 138  ]
[e ) . `E43 5 ]
[e $UE 137  ]
[e :U 138 ]
[; ;pff.c: 928: if (!(fs->flag & 0x01))
"928
[e $ ! ! != & -> . *U _fs 1 `i -> 1 `i -> 0 `i 139  ]
[; ;pff.c: 929: return FR_NOT_OPENED;
"929
[e ) . `E43 4 ]
[e $UE 137  ]
[e :U 139 ]
[; ;pff.c: 931: if (!btw) {
"931
[e $ ! ! != _btw -> -> 0 `i `ui 140  ]
{
[; ;pff.c: 932: if ((fs->flag & 0x40) && disk_writep(0, 0)) {fs->flag = 0; return FR_DISK_ERR;};
"932
[e $ ! && != & -> . *U _fs 1 `i -> 64 `i -> 0 `i != -> ( _disk_writep (2 , -> -> 0 `i `*Cuc -> -> -> 0 `i `l `ul `i -> -> -> 0 `i `E73 `i 141  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) . `E43 1 ]
[e $UE 137  ]
}
[e :U 141 ]
[; ;pff.c: 933: fs->flag &= ~0x40;
"933
[e =& . *U _fs 1 -> ~ -> 64 `i `uc ]
[; ;pff.c: 934: return FR_OK;
"934
[e ) . `E43 0 ]
[e $UE 137  ]
"935
}
[; ;pff.c: 935: } else {
[e $U 142  ]
[e :U 140 ]
{
[; ;pff.c: 936: if (!(fs->flag & 0x40))
"936
[e $ ! ! != & -> . *U _fs 1 `i -> 64 `i -> 0 `i 143  ]
[; ;pff.c: 937: fs->fptr &= 0xFFFFFE00;
"937
[e =& . *U _fs 9 -> -512 `ul ]
[e :U 143 ]
"938
}
[e :U 142 ]
[; ;pff.c: 938: }
[; ;pff.c: 939: remain = fs->fsize - fs->fptr;
"939
[e = _remain - . *U _fs 10 . *U _fs 9 ]
[; ;pff.c: 940: if (btw > remain) btw = (UINT)remain;
"940
[e $ ! > -> _btw `ul _remain 144  ]
[e = _btw -> _remain `ui ]
[e :U 144 ]
[; ;pff.c: 942: while (btw) {
"942
[e $U 145  ]
[e :U 146 ]
{
[; ;pff.c: 943: if ((UINT)fs->fptr % 512 == 0) {
"943
[e $ ! == % -> . *U _fs 9 `ui -> -> 512 `i `ui -> -> 0 `i `ui 148  ]
{
[; ;pff.c: 944: cs = (BYTE)(fs->fptr / 512 & (fs->csize - 1));
"944
[e = _cs -> & / . *U _fs 9 -> -> -> 512 `i `l `ul -> -> - -> . *U _fs 2 `i -> 1 `i `l `ul `uc ]
[; ;pff.c: 945: if (!cs) {
"945
[e $ ! ! != -> _cs `i -> -> -> 0 `i `uc `i 149  ]
{
[; ;pff.c: 946: if (fs->fptr == 0)
"946
[e $ ! == . *U _fs 9 -> -> -> 0 `i `l `ul 150  ]
[; ;pff.c: 947: clst = fs->org_clust;
"947
[e = _clst . *U _fs 11 ]
[e $U 151  ]
"948
[e :U 150 ]
[; ;pff.c: 948: else
[; ;pff.c: 949: clst = get_fat(fs->curr_clust);
"949
[e = _clst ( _get_fat (1 . *U _fs 12 ]
[e :U 151 ]
[; ;pff.c: 950: if (clst <= 1) {fs->flag = 0; return FR_DISK_ERR;};
"950
[e $ ! <= _clst -> -> -> 1 `i `l `ul 152  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) . `E43 1 ]
[e $UE 137  ]
}
[e :U 152 ]
[; ;pff.c: 951: fs->curr_clust = clst;
"951
[e = . *U _fs 12 _clst ]
"952
}
[e :U 149 ]
[; ;pff.c: 952: }
[; ;pff.c: 953: sect = clust2sect(fs->curr_clust);
"953
[e = _sect ( _clust2sect (1 . *U _fs 12 ]
[; ;pff.c: 954: if (!sect) {fs->flag = 0; return FR_DISK_ERR;};
"954
[e $ ! ! != _sect -> -> 0 `i `ul 153  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) . `E43 1 ]
[e $UE 137  ]
}
[e :U 153 ]
[; ;pff.c: 955: fs->dsect = sect + cs;
"955
[e = . *U _fs 13 + _sect -> _cs `ul ]
[; ;pff.c: 956: if (disk_writep(0, fs->dsect)) {fs->flag = 0; return FR_DISK_ERR;};
"956
[e $ ! != -> ( _disk_writep (2 , -> -> 0 `i `*Cuc . *U _fs 13 `i -> -> -> 0 `i `E73 `i 154  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) . `E43 1 ]
[e $UE 137  ]
}
[e :U 154 ]
[; ;pff.c: 957: fs->flag |= 0x40;
"957
[e =| . *U _fs 1 -> -> 64 `i `uc ]
"958
}
[e :U 148 ]
[; ;pff.c: 958: }
[; ;pff.c: 959: wcnt = 512 - (UINT)fs->fptr % 512;
"959
[e = _wcnt - -> -> 512 `i `ui % -> . *U _fs 9 `ui -> -> 512 `i `ui ]
[; ;pff.c: 960: if (wcnt > btw)wcnt = btw;
"960
[e $ ! > _wcnt _btw 155  ]
[e = _wcnt _btw ]
[e :U 155 ]
[; ;pff.c: 961: if (disk_writep(p, fs->dsect )) {fs->flag = 0; return FR_DISK_ERR;};
"961
[e $ ! != -> ( _disk_writep (2 , _p . *U _fs 13 `i -> -> -> 0 `i `E73 `i 156  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) . `E43 1 ]
[e $UE 137  ]
}
[e :U 156 ]
[; ;pff.c: 962: fs->fptr += wcnt; p += wcnt;
"962
[e =+ . *U _fs 9 -> _wcnt `ul ]
[e =+ _p * -> _wcnt `ux -> -> # *U _p `ui `ux ]
[; ;pff.c: 963: btw -= wcnt; *bw += wcnt;
"963
[e =- _btw _wcnt ]
[e =+ *U _bw _wcnt ]
[; ;pff.c: 964: if ((UINT)fs->fptr % 512 == 0) {
"964
[e $ ! == % -> . *U _fs 9 `ui -> -> 512 `i `ui -> -> 0 `i `ui 157  ]
{
[; ;pff.c: 965: if (disk_writep(0, 0)) {fs->flag = 0; return FR_DISK_ERR;};
"965
[e $ ! != -> ( _disk_writep (2 , -> -> 0 `i `*Cuc -> -> -> 0 `i `l `ul `i -> -> -> 0 `i `E73 `i 158  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) . `E43 1 ]
[e $UE 137  ]
}
[e :U 158 ]
[; ;pff.c: 966: fs->flag &= ~0x40;
"966
[e =& . *U _fs 1 -> ~ -> 64 `i `uc ]
"967
}
[e :U 157 ]
"968
}
[e :U 145 ]
"942
[e $ != _btw -> -> 0 `i `ui 146  ]
[e :U 147 ]
[; ;pff.c: 967: }
[; ;pff.c: 968: }
[; ;pff.c: 970: return FR_OK;
"970
[e ) . `E43 0 ]
[e $UE 137  ]
[; ;pff.c: 971: }
"971
[e :UE 137 ]
}
"981
[v _pf_lseek `(E43 ~T0 @X0 1 ef1`ul ]
"984
{
[; ;pff.c: 981: FRESULT pf_lseek (
[; ;pff.c: 982: DWORD ofs
[; ;pff.c: 983: )
[; ;pff.c: 984: {
[e :U _pf_lseek ]
"982
[v _ofs `ul ~T0 @X0 1 r1 ]
"984
[f ]
"985
[v _clst `ul ~T0 @X0 1 a ]
"986
[v _bcs `ul ~T0 @X0 1 a ]
[v _sect `ul ~T0 @X0 1 a ]
[v _ifptr `ul ~T0 @X0 1 a ]
"987
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 985: DWORD clst;
[; ;pff.c: 986: DWORD bcs, sect, ifptr;
[; ;pff.c: 987: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 990: if (!fs) return FR_NOT_ENABLED;
"990
[e $ ! ! != _fs -> -> 0 `i `*S1 160  ]
[e ) . `E43 5 ]
[e $UE 159  ]
[e :U 160 ]
[; ;pff.c: 991: if (!(fs->flag & 0x01))
"991
[e $ ! ! != & -> . *U _fs 1 `i -> 1 `i -> 0 `i 161  ]
[; ;pff.c: 992: return FR_NOT_OPENED;
"992
[e ) . `E43 4 ]
[e $UE 159  ]
[e :U 161 ]
[; ;pff.c: 994: if (ofs > fs->fsize) ofs = fs->fsize;
"994
[e $ ! > _ofs . *U _fs 10 162  ]
[e = _ofs . *U _fs 10 ]
[e :U 162 ]
[; ;pff.c: 995: ifptr = fs->fptr;
"995
[e = _ifptr . *U _fs 9 ]
[; ;pff.c: 996: fs->fptr = 0;
"996
[e = . *U _fs 9 -> -> -> 0 `i `l `ul ]
[; ;pff.c: 997: if (ofs > 0) {
"997
[e $ ! > _ofs -> -> -> 0 `i `l `ul 163  ]
{
[; ;pff.c: 998: bcs = (DWORD)fs->csize * 512;
"998
[e = _bcs * -> . *U _fs 2 `ul -> -> -> 512 `i `l `ul ]
[; ;pff.c: 999: if (ifptr > 0 &&
[; ;pff.c: 1000: (ofs - 1) / bcs >= (ifptr - 1) / bcs) {
"1000
[e $ ! && > _ifptr -> -> -> 0 `i `l `ul >= / - _ofs -> -> -> 1 `i `l `ul _bcs / - _ifptr -> -> -> 1 `i `l `ul _bcs 164  ]
{
[; ;pff.c: 1001: fs->fptr = (ifptr - 1) & ~(bcs - 1);
"1001
[e = . *U _fs 9 & - _ifptr -> -> -> 1 `i `l `ul ~ - _bcs -> -> -> 1 `i `l `ul ]
[; ;pff.c: 1002: ofs -= fs->fptr;
"1002
[e =- _ofs . *U _fs 9 ]
[; ;pff.c: 1003: clst = fs->curr_clust;
"1003
[e = _clst . *U _fs 12 ]
"1004
}
[; ;pff.c: 1004: } else {
[e $U 165  ]
[e :U 164 ]
{
[; ;pff.c: 1005: clst = fs->org_clust;
"1005
[e = _clst . *U _fs 11 ]
[; ;pff.c: 1006: fs->curr_clust = clst;
"1006
[e = . *U _fs 12 _clst ]
"1007
}
[e :U 165 ]
[; ;pff.c: 1007: }
[; ;pff.c: 1008: while (ofs > bcs) {
"1008
[e $U 166  ]
[e :U 167 ]
{
[; ;pff.c: 1009: clst = get_fat(clst);
"1009
[e = _clst ( _get_fat (1 _clst ]
[; ;pff.c: 1010: if (clst <= 1 || clst >= fs->n_fatent) {fs->flag = 0; return FR_DISK_ERR;};
"1010
[e $ ! || <= _clst -> -> -> 1 `i `l `ul >= _clst . *U _fs 5 169  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) . `E43 1 ]
[e $UE 159  ]
}
[e :U 169 ]
[; ;pff.c: 1011: fs->curr_clust = clst;
"1011
[e = . *U _fs 12 _clst ]
[; ;pff.c: 1012: fs->fptr += bcs;
"1012
[e =+ . *U _fs 9 _bcs ]
[; ;pff.c: 1013: ofs -= bcs;
"1013
[e =- _ofs _bcs ]
"1014
}
[e :U 166 ]
"1008
[e $ > _ofs _bcs 167  ]
[e :U 168 ]
[; ;pff.c: 1014: }
[; ;pff.c: 1015: fs->fptr += ofs;
"1015
[e =+ . *U _fs 9 _ofs ]
[; ;pff.c: 1016: sect = clust2sect(clst);
"1016
[e = _sect ( _clust2sect (1 _clst ]
[; ;pff.c: 1017: if (!sect) {fs->flag = 0; return FR_DISK_ERR;};
"1017
[e $ ! ! != _sect -> -> 0 `i `ul 170  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) . `E43 1 ]
[e $UE 159  ]
}
[e :U 170 ]
[; ;pff.c: 1018: fs->dsect = sect + (fs->fptr / 512 & (fs->csize - 1));
"1018
[e = . *U _fs 13 + _sect & / . *U _fs 9 -> -> -> 512 `i `l `ul -> -> - -> . *U _fs 2 `i -> 1 `i `l `ul ]
"1019
}
[e :U 163 ]
[; ;pff.c: 1019: }
[; ;pff.c: 1021: return FR_OK;
"1021
[e ) . `E43 0 ]
[e $UE 159  ]
[; ;pff.c: 1022: }
"1022
[e :UE 159 ]
}
"1032
[v _pf_opendir `(E43 ~T0 @X0 1 ef2`*S2`*Cuc ]
"1036
{
[; ;pff.c: 1032: FRESULT pf_opendir (
[; ;pff.c: 1033: DIR *dj,
[; ;pff.c: 1034: const char *path
[; ;pff.c: 1035: )
[; ;pff.c: 1036: {
[e :U _pf_opendir ]
"1033
[v _dj `*S2 ~T0 @X0 1 r1 ]
"1034
[v _path `*Cuc ~T0 @X0 1 r2 ]
"1036
[f ]
"1037
[v _res `E43 ~T0 @X0 1 a ]
"1038
[v _sp `uc ~T0 @X0 -> 12 `i a ]
[v _dir `uc ~T0 @X0 -> 32 `i a ]
"1039
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 1037: FRESULT res;
[; ;pff.c: 1038: BYTE sp[12], dir[32];
[; ;pff.c: 1039: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 1042: if (!fs) {
"1042
[e $ ! ! != _fs -> -> 0 `i `*S1 172  ]
{
[; ;pff.c: 1043: res = FR_NOT_ENABLED;
"1043
[e = _res . `E43 5 ]
"1044
}
[; ;pff.c: 1044: } else {
[e $U 173  ]
[e :U 172 ]
{
[; ;pff.c: 1045: dj->fn = sp;
"1045
[e = . *U _dj 1 &U _sp ]
[; ;pff.c: 1046: res = follow_path(dj, dir, path);
"1046
[e = _res ( _follow_path (3 , , _dj &U _dir _path ]
[; ;pff.c: 1047: if (res == FR_OK) {
"1047
[e $ ! == -> _res `i -> . `E43 0 `i 174  ]
{
[; ;pff.c: 1048: if (dir[0]) {
"1048
[e $ ! != -> *U + &U _dir * -> -> -> 0 `i `ui `ux -> -> # *U &U _dir `ui `ux `i -> -> -> 0 `i `uc `i 175  ]
{
[; ;pff.c: 1049: if (dir[11] & 0x10)
"1049
[e $ ! != & -> *U + &U _dir * -> -> -> 11 `i `ui `ux -> -> # *U &U _dir `ui `ux `i -> 16 `i -> 0 `i 176  ]
[; ;pff.c: 1050: dj->sclust = get_clust(dir);
"1050
[e = . *U _dj 2 ( _get_clust (1 &U _dir ]
[e $U 177  ]
"1051
[e :U 176 ]
[; ;pff.c: 1051: else
[; ;pff.c: 1052: res = FR_NO_FILE;
"1052
[e = _res . `E43 3 ]
[e :U 177 ]
"1053
}
[e :U 175 ]
[; ;pff.c: 1053: }
[; ;pff.c: 1054: if (res == FR_OK)
"1054
[e $ ! == -> _res `i -> . `E43 0 `i 178  ]
[; ;pff.c: 1055: res = dir_rewind(dj);
"1055
[e = _res ( _dir_rewind (1 _dj ]
[e :U 178 ]
"1056
}
[e :U 174 ]
"1057
}
[e :U 173 ]
[; ;pff.c: 1056: }
[; ;pff.c: 1057: }
[; ;pff.c: 1059: return res;
"1059
[e ) _res ]
[e $UE 171  ]
[; ;pff.c: 1060: }
"1060
[e :UE 171 ]
}
"1069
[v _pf_readdir `(E43 ~T0 @X0 1 ef2`*S2`*S3 ]
"1073
{
[; ;pff.c: 1069: FRESULT pf_readdir (
[; ;pff.c: 1070: DIR *dj,
[; ;pff.c: 1071: FILINFO *fno
[; ;pff.c: 1072: )
[; ;pff.c: 1073: {
[e :U _pf_readdir ]
"1070
[v _dj `*S2 ~T0 @X0 1 r1 ]
"1071
[v _fno `*S3 ~T0 @X0 1 r2 ]
"1073
[f ]
"1074
[v _res `E43 ~T0 @X0 1 a ]
"1075
[v _sp `uc ~T0 @X0 -> 12 `i a ]
[v _dir `uc ~T0 @X0 -> 32 `i a ]
"1076
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 1074: FRESULT res;
[; ;pff.c: 1075: BYTE sp[12], dir[32];
[; ;pff.c: 1076: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 1079: if (!fs) {
"1079
[e $ ! ! != _fs -> -> 0 `i `*S1 180  ]
{
[; ;pff.c: 1080: res = FR_NOT_ENABLED;
"1080
[e = _res . `E43 5 ]
"1081
}
[; ;pff.c: 1081: } else {
[e $U 181  ]
[e :U 180 ]
{
[; ;pff.c: 1082: dj->fn = sp;
"1082
[e = . *U _dj 1 &U _sp ]
[; ;pff.c: 1083: if (!fno) {
"1083
[e $ ! ! != _fno -> -> 0 `i `*S3 182  ]
{
[; ;pff.c: 1084: res = dir_rewind(dj);
"1084
[e = _res ( _dir_rewind (1 _dj ]
"1085
}
[; ;pff.c: 1085: } else {
[e $U 183  ]
[e :U 182 ]
{
[; ;pff.c: 1086: res = dir_read(dj, dir);
"1086
[e = _res ( _dir_read (2 , _dj &U _dir ]
[; ;pff.c: 1087: if (res == FR_NO_FILE) res = FR_OK;
"1087
[e $ ! == -> _res `i -> . `E43 3 `i 184  ]
[e = _res . `E43 0 ]
[e :U 184 ]
[; ;pff.c: 1088: if (res == FR_OK) {
"1088
[e $ ! == -> _res `i -> . `E43 0 `i 185  ]
{
[; ;pff.c: 1089: get_fileinfo(dj, dir, fno);
"1089
[e ( _get_fileinfo (3 , , _dj &U _dir _fno ]
[; ;pff.c: 1090: res = dir_next(dj);
"1090
[e = _res ( _dir_next (1 _dj ]
[; ;pff.c: 1091: if (res == FR_NO_FILE) res = FR_OK;
"1091
[e $ ! == -> _res `i -> . `E43 3 `i 186  ]
[e = _res . `E43 0 ]
[e :U 186 ]
"1092
}
[e :U 185 ]
"1093
}
[e :U 183 ]
"1094
}
[e :U 181 ]
[; ;pff.c: 1092: }
[; ;pff.c: 1093: }
[; ;pff.c: 1094: }
[; ;pff.c: 1096: return res;
"1096
[e ) _res ]
[e $UE 179  ]
[; ;pff.c: 1097: }
"1097
[e :UE 179 ]
}
[a 1C 99 104 101 99 107 46 116 120 116 0 ]

