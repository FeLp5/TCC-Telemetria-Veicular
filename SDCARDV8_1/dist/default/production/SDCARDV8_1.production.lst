

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Mar 03 14:56:09 2022

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93  0000                     
    94                           ; Version 1.41
    95                           ; Generated 25/01/2017 GMT
    96                           ; 
    97                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F4550 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128  0000                     
   129                           	psect	idataBANK1
   130  00541E                     __pidataBANK1:
   131                           	opt stack 0
   132                           
   133                           ;initializer for _fileName
   134  00541E  63                 	db	99
   135  00541F  68                 	db	104
   136  005420  65                 	db	101
   137  005421  63                 	db	99
   138  005422  6B                 	db	107
   139  005423  2E                 	db	46
   140  005424  74                 	db	116
   141  005425  78                 	db	120
   142  005426  74                 	db	116
   143  005427  00                 	db	0
   144  005428  00                 	db	0
   145  005429  00                 	db	0
   146  00542A  00                 	db	0
   147  00542B  00                 	db	0
   148  00542C  00                 	db	0
   149                           
   150                           ;initializer for escreve_inteiro_uart@F3952
   151  00542D  30                 	db	48
   152  00542E  30                 	db	48
   153  00542F  30                 	db	48
   154  005430  30                 	db	48
   155  005431  30                 	db	48
   156  005432  30                 	db	48
   157  005433  00                 	db	0
   158                           
   159                           ;initializer for escreve_inteiro_lcd@F3962
   160  005434  30                 	db	48
   161  005435  30                 	db	48
   162  005436  30                 	db	48
   163  005437  30                 	db	48
   164  005438  30                 	db	48
   165  005439  30                 	db	48
   166  00543A  00                 	db	0
   167                           
   168                           	psect	mediumconst
   169  006028                     __pmediumconst:
   170                           	opt stack 0
   171  006028  00                 	db	0
   172  006029                     _dpowers:
   173                           	opt stack 0
   174  006029  0001               	dw	1
   175  00602B  0000               	dw	0
   176  00602D  000A               	dw	10
   177  00602F  0000               	dw	0
   178  006031  0064               	dw	100
   179  006033  0000               	dw	0
   180  006035  03E8               	dw	1000
   181  006037  0000               	dw	0
   182  006039  2710               	dw	10000
   183  00603B  0000               	dw	0
   184  00603D  86A0               	dw	34464
   185  00603F  0001               	dw	1
   186  006041  4240               	dw	16960
   187  006043  000F               	dw	15
   188  006045  9680               	dw	38528
   189  006047  0098               	dw	152
   190  006049  E100               	dw	57600
   191  00604B  05F5               	dw	1525
   192  00604D  CA00               	dw	51712
   193  00604F  3B9A               	dw	15258
   194  006051                     __end_of_dpowers:
   195                           	opt stack 0
   196  006051                     __powers_:
   197                           	opt stack 0
   198  006051  00                 	db	0
   199  006052  80                 	db	128
   200  006053  3F                 	db	63
   201  006054  00                 	db	0
   202  006055  20                 	db	32
   203  006056  41                 	db	65
   204  006057  00                 	db	0
   205  006058  C8                 	db	200
   206  006059  42                 	db	66
   207  00605A  00                 	db	0
   208  00605B  7A                 	db	122
   209  00605C  44                 	db	68
   210  00605D  40                 	db	64
   211  00605E  1C                 	db	28
   212  00605F  46                 	db	70
   213  006060  50                 	db	80
   214  006061  C3                 	db	195
   215  006062  47                 	db	71
   216  006063  24                 	db	36
   217  006064  74                 	db	116
   218  006065  49                 	db	73
   219  006066  97                 	db	151
   220  006067  18                 	db	24
   221  006068  4B                 	db	75
   222  006069  BC                 	db	188
   223  00606A  BE                 	db	190
   224  00606B  4C                 	db	76
   225  00606C  6B                 	db	107
   226  00606D  6E                 	db	110
   227  00606E  4E                 	db	78
   228  00606F  03                 	db	3
   229  006070  15                 	db	21
   230  006071  50                 	db	80
   231  006072  79                 	db	121
   232  006073  AD                 	db	173
   233  006074  60                 	db	96
   234  006075  F3                 	db	243
   235  006076  49                 	db	73
   236  006077  71                 	db	113
   237  006078                     __end_of__powers_:
   238                           	opt stack 0
   239  006078                     __npowers_:
   240                           	opt stack 0
   241  006078  00                 	db	0
   242  006079  80                 	db	128
   243  00607A  3F                 	db	63
   244  00607B  CD                 	db	205
   245  00607C  CC                 	db	204
   246  00607D  3D                 	db	61
   247  00607E  D7                 	db	215
   248  00607F  23                 	db	35
   249  006080  3C                 	db	60
   250  006081  12                 	db	18
   251  006082  83                 	db	131
   252  006083  3A                 	db	58
   253  006084  B7                 	db	183
   254  006085  D1                 	db	209
   255  006086  38                 	db	56
   256  006087  C6                 	db	198
   257  006088  27                 	db	39
   258  006089  37                 	db	55
   259  00608A  38                 	db	56
   260  00608B  86                 	db	134
   261  00608C  35                 	db	53
   262  00608D  C0                 	db	192
   263  00608E  D6                 	db	214
   264  00608F  33                 	db	51
   265  006090  CC                 	db	204
   266  006091  2B                 	db	43
   267  006092  32                 	db	50
   268  006093  70                 	db	112
   269  006094  89                 	db	137
   270  006095  30                 	db	48
   271  006096  E7                 	db	231
   272  006097  DB                 	db	219
   273  006098  2E                 	db	46
   274  006099  E5                 	db	229
   275  00609A  3C                 	db	60
   276  00609B  1E                 	db	30
   277  00609C  42                 	db	66
   278  00609D  A2                 	db	162
   279  00609E  0D                 	db	13
   280  00609F                     __end_of__npowers_:
   281                           	opt stack 0
   282  00609F                     mensagem_inicial@F4101:
   283                           	opt stack 0
   284  00609F  20                 	db	32
   285  0060A0  31                 	db	49
   286  0060A1  38                 	db	56
   287  0060A2  2F                 	db	47
   288  0060A3  30                 	db	48
   289  0060A4  31                 	db	49
   290  0060A5  2F                 	db	47
   291  0060A6  32                 	db	50
   292  0060A7  30                 	db	48
   293  0060A8  32                 	db	50
   294  0060A9  32                 	db	50
   295  0060AA  20                 	db	32
   296  0060AB  20                 	db	32
   297  0060AC  20                 	db	32
   298  0060AD  00                 	db	0
   299  0060AE  00                 	db	0
   300  0060AF  00                 	db	0
   301  0060B0                     __end_ofmensagem_inicial@F4101:
   302                           	opt stack 0
   303  0060B0                     mensagem_inicial@F4099:
   304                           	opt stack 0
   305  0060B0  53                 	db	83
   306  0060B1  44                 	db	68
   307  0060B2  43                 	db	67
   308  0060B3  61                 	db	97
   309  0060B4  72                 	db	114
   310  0060B5  64                 	db	100
   311  0060B6  20                 	db	32
   312  0060B7  49                 	db	73
   313  0060B8  6E                 	db	110
   314  0060B9  69                 	db	105
   315  0060BA  74                 	db	116
   316  0060BB  20                 	db	32
   317  0060BC  20                 	db	32
   318  0060BD  20                 	db	32
   319  0060BE  00                 	db	0
   320  0060BF  00                 	db	0
   321  0060C0  00                 	db	0
   322  0060C1                     __end_ofmensagem_inicial@F4099:
   323                           	opt stack 0
   324  0000                     _ADRESL	set	4035
   325  0000                     _ADRESH	set	4036
   326  0000                     _ADCON0	set	4034
   327  0000                     _ADCON0bits	set	4034
   328  0000                     _ADCON2bits	set	4032
   329  0000                     _ADCON1bits	set	4033
   330  0000                     _ADCON1	set	4033
   331  0000                     _PCL	set	4089
   332  0000                     _PCLATH	set	4090
   333  0000                     _PIE1bits	set	3997
   334  0000                     _RCSTA	set	4011
   335  0000                     _TXSTA	set	4012
   336  0000                     _RCREG	set	4014
   337  0000                     _RCSTAbits	set	4011
   338  0000                     _TXREG	set	4013
   339  0000                     _PIR1bits	set	3998
   340  0000                     _TRISCbits	set	3988
   341  0000                     _SPBRG	set	4015
   342  0000                     _PR2	set	4043
   343  0000                     _TMR2	set	4044
   344  0000                     _T2CON	set	4042
   345  0000                     _OSCCONbits	set	4051
   346  0000                     _TRISE	set	3990
   347  0000                     _TRISC	set	3988
   348  0000                     _TRISA	set	3986
   349  0000                     _TRISD	set	3989
   350  0000                     _LATB	set	3978
   351  0000                     _TRISB	set	3987
   352  0000                     _T0CONbits	set	4053
   353  0000                     _TMR0L	set	4054
   354  0000                     _TMR0H	set	4055
   355  0000                     _PIE1	set	3997
   356  0000                     _INTCON3	set	4080
   357  0000                     _INTCON2	set	4081
   358  0000                     _INTCON	set	4082
   359  0000                     _SPPCFG	set	3939
   360  0000                     _SPPCON	set	3941
   361  0000                     _T0CON	set	4053
   362  0000                     _PORTDbits	set	3971
   363  0000                     _TRISDbits	set	3989
   364  0000                     _PORTBbits	set	3969
   365  0000                     _INTCONbits	set	4082
   366  0000                     _LATBbits	set	3978
   367  0000                     _TRISBbits	set	3987
   368  0000                     _INT0IE	set	32660
   369  0000                     _INT0IF	set	32657
   370  0000                     _T0IF	set	32658
   371  0000                     _TMR0IF	set	32658
   372  0000                     _RCIF	set	31989
   373  0000                     _TRMT	set	32097
   374  0000                     _TXEN	set	32101
   375  0000                     _CREN	set	32092
   376  0000                     _SPEN	set	32095
   377  0000                     _SYNC	set	32100
   378  0000                     _BRGH	set	32098
   379  0000                     _TMR2IF	set	31985
   380  0060C1                     STR_33:
   381  0060C1  20                 	db	32
   382  0060C2  20                 	db	32
   383  0060C3  20                 	db	32
   384  0060C4  20                 	db	32
   385  0060C5  20                 	db	32
   386  0060C6  20                 	db	32
   387  0060C7  20                 	db	32
   388  0060C8  20                 	db	32
   389  0060C9  20                 	db	32
   390  0060CA  20                 	db	32
   391  0060CB  20                 	db	32
   392  0060CC  20                 	db	32
   393  0060CD  20                 	db	32
   394  0060CE  20                 	db	32
   395  0060CF  20                 	db	32
   396  0060D0  20                 	db	32
   397  0060D1  20                 	db	32
   398  0060D2  20                 	db	32
   399  0060D3  00                 	db	0
   400  0060D4                     STR_32:
   401  0060D4  20                 	db	32
   402  0060D5  66                 	db	102	;'f'
   403  0060D6  6D                 	db	109	;'m'
   404  0060D7  74                 	db	116	;'t'
   405  0060D8  31                 	db	49	;'1'
   406  0060D9  20                 	db	32
   407  0060DA  20                 	db	32
   408  0060DB  20                 	db	32
   409  0060DC  20                 	db	32
   410  0060DD  20                 	db	32
   411  0060DE  20                 	db	32
   412  0060DF  20                 	db	32
   413  0060E0  20                 	db	32
   414  0060E1  20                 	db	32
   415  0060E2  20                 	db	32
   416  0060E3  20                 	db	32
   417  0060E4  20                 	db	32
   418  0060E5  20                 	db	32
   419  0060E6  00                 	db	0
   420  0060E7                     STR_34:
   421  0060E7  20                 	db	32
   422  0060E8  66                 	db	102	;'f'
   423  0060E9  6D                 	db	109	;'m'
   424  0060EA  74                 	db	116	;'t'
   425  0060EB  32                 	db	50	;'2'
   426  0060EC  20                 	db	32
   427  0060ED  20                 	db	32
   428  0060EE  20                 	db	32
   429  0060EF  20                 	db	32
   430  0060F0  20                 	db	32
   431  0060F1  20                 	db	32
   432  0060F2  20                 	db	32
   433  0060F3  20                 	db	32
   434  0060F4  20                 	db	32
   435  0060F5  20                 	db	32
   436  0060F6  20                 	db	32
   437  0060F7  20                 	db	32
   438  0060F8  20                 	db	32
   439  0060F9  00                 	db	0
   440  0060FA                     STR_27:
   441  0060FA  46                 	db	70	;'F'
   442  0060FB  41                 	db	65	;'A'
   443  0060FC  54                 	db	84	;'T'
   444  0060FD  33                 	db	51	;'3'
   445  0060FE  32                 	db	50	;'2'
   446  0060FF  20                 	db	32
   447  006100  3E                 	db	62	;'>'
   448  006101  20                 	db	32
   449  006102  20                 	db	32
   450  006103  20                 	db	32
   451  006104  20                 	db	32
   452  006105  20                 	db	32
   453  006106  20                 	db	32
   454  006107  20                 	db	32
   455  006108  20                 	db	32
   456  006109  20                 	db	32
   457  00610A  20                 	db	32
   458  00610B  20                 	db	32
   459  00610C  00                 	db	0
   460  00610D                     STR_22:
   461  00610D  52                 	db	82	;'R'
   462  00610E  65                 	db	101	;'e'
   463  00610F  63                 	db	99	;'c'
   464  006110  2E                 	db	46
   465  006111  20                 	db	32
   466  006112  73                 	db	115	;'s'
   467  006113  69                 	db	105	;'i'
   468  006114  67                 	db	103	;'g'
   469  006115  2E                 	db	46
   470  006116  20                 	db	32
   471  006117  20                 	db	32
   472  006118  20                 	db	32
   473  006119  20                 	db	32
   474  00611A  20                 	db	32
   475  00611B  20                 	db	32
   476  00611C  20                 	db	32
   477  00611D  20                 	db	32
   478  00611E  20                 	db	32
   479  00611F  00                 	db	0
   480  006120                     STR_16:
   481  006120  61                 	db	97	;'a'
   482  006121  67                 	db	103	;'g'
   483  006122  75                 	db	117	;'u'
   484  006123  61                 	db	97	;'a'
   485  006124  72                 	db	114	;'r'
   486  006125  64                 	db	100	;'d'
   487  006126  20                 	db	32
   488  006127  30                 	db	48	;'0'
   489  006128  78                 	db	120	;'x'
   490  006129  46                 	db	70	;'F'
   491  00612A  46                 	db	70	;'F'
   492  00612B  20                 	db	32
   493  00612C  20                 	db	32
   494  00612D  20                 	db	32
   495  00612E  20                 	db	32
   496  00612F  20                 	db	32
   497  006130  20                 	db	32
   498  006131  20                 	db	32
   499  006132  00                 	db	0
   500  006133                     STR_40:
   501  006133  41                 	db	65	;'A'
   502  006134  72                 	db	114	;'r'
   503  006135  71                 	db	113	;'q'
   504  006136  75                 	db	117	;'u'
   505  006137  69                 	db	105	;'i'
   506  006138  76                 	db	118	;'v'
   507  006139  6F                 	db	111	;'o'
   508  00613A  20                 	db	32
   509  00613B  72                 	db	114	;'r'
   510  00613C  65                 	db	101	;'e'
   511  00613D  6E                 	db	110	;'n'
   512  00613E  6F                 	db	111	;'o'
   513  00613F  6D                 	db	109	;'m'
   514  006140  65                 	db	101	;'e'
   515  006141  61                 	db	97	;'a'
   516  006142  64                 	db	100	;'d'
   517  006143  6F                 	db	111	;'o'
   518  006144  00                 	db	0
   519  006145                     STR_24:
   520  006145  46                 	db	70	;'F'
   521  006146  41                 	db	65	;'A'
   522  006147  54                 	db	84	;'T'
   523  006148  20                 	db	32
   524  006149  3E                 	db	62	;'>'
   525  00614A  20                 	db	32
   526  00614B  20                 	db	32
   527  00614C  20                 	db	32
   528  00614D  20                 	db	32
   529  00614E  20                 	db	32
   530  00614F  20                 	db	32
   531  006150  20                 	db	32
   532  006151  20                 	db	32
   533  006152  20                 	db	32
   534  006153  20                 	db	32
   535  006154  20                 	db	32
   536  006155  00                 	db	0
   537  006156                     STR_13:
   538  006156  53                 	db	83	;'S'
   539  006157  65                 	db	101	;'e'
   540  006158  74                 	db	116	;'t'
   541  006159  2E                 	db	46
   542  00615A  20                 	db	32
   543  00615B  35                 	db	53	;'5'
   544  00615C  31                 	db	49	;'1'
   545  00615D  32                 	db	50	;'2'
   546  00615E  62                 	db	98	;'b'
   547  00615F  20                 	db	32
   548  006160  20                 	db	32
   549  006161  20                 	db	32
   550  006162  20                 	db	32
   551  006163  20                 	db	32
   552  006164  20                 	db	32
   553  006165  20                 	db	32
   554  006166  00                 	db	0
   555  006167                     STR_8:
   556  006167  53                 	db	83	;'S'
   557  006168  65                 	db	101	;'e'
   558  006169  6D                 	db	109	;'m'
   559  00616A  20                 	db	32
   560  00616B  43                 	db	67	;'C'
   561  00616C  61                 	db	97	;'a'
   562  00616D  72                 	db	114	;'r'
   563  00616E  74                 	db	116	;'t'
   564  00616F  61                 	db	97	;'a'
   565  006170  6F                 	db	111	;'o'
   566  006171  20                 	db	32
   567  006172  20                 	db	32
   568  006173  20                 	db	32
   569  006174  20                 	db	32
   570  006175  20                 	db	32
   571  006176  20                 	db	32
   572  006177  00                 	db	0
   573  006178                     STR_15:
   574  006178  41                 	db	65	;'A'
   575  006179  67                 	db	103	;'g'
   576  00617A  75                 	db	117	;'u'
   577  00617B  61                 	db	97	;'a'
   578  00617C  72                 	db	114	;'r'
   579  00617D  64                 	db	100	;'d'
   580  00617E  20                 	db	32
   581  00617F  30                 	db	48	;'0'
   582  006180  58                 	db	88	;'X'
   583  006181  46                 	db	70	;'F'
   584  006182  45                 	db	69	;'E'
   585  006183  20                 	db	32
   586  006184  20                 	db	32
   587  006185  20                 	db	32
   588  006186  20                 	db	32
   589  006187  20                 	db	32
   590  006188  00                 	db	0
   591  006189                     STR_12:
   592  006189  45                 	db	69	;'E'
   593  00618A  72                 	db	114	;'r'
   594  00618B  72                 	db	114	;'r'
   595  00618C  6F                 	db	111	;'o'
   596  00618D  20                 	db	32
   597  00618E  49                 	db	73	;'I'
   598  00618F  64                 	db	100	;'d'
   599  006190  6C                 	db	108	;'l'
   600  006191  65                 	db	101	;'e'
   601  006192  20                 	db	32
   602  006193  53                 	db	83	;'S'
   603  006194  74                 	db	116	;'t'
   604  006195  20                 	db	32
   605  006196  20                 	db	32
   606  006197  20                 	db	32
   607  006198  20                 	db	32
   608  006199  00                 	db	0
   609  00619A                     STR_36:
   610  00619A  53                 	db	83	;'S'
   611  00619B  69                 	db	105	;'i'
   612  00619C  73                 	db	115	;'s'
   613  00619D  74                 	db	116	;'t'
   614  00619E  65                 	db	101	;'e'
   615  00619F  6D                 	db	109	;'m'
   616  0061A0  61                 	db	97	;'a'
   617  0061A1  20                 	db	32
   618  0061A2  4D                 	db	77	;'M'
   619  0061A3  6F                 	db	111	;'o'
   620  0061A4  6E                 	db	110	;'n'
   621  0061A5  74                 	db	116	;'t'
   622  0061A6  61                 	db	97	;'a'
   623  0061A7  64                 	db	100	;'d'
   624  0061A8  6F                 	db	111	;'o'
   625  0061A9  00                 	db	0
   626  0061AA                     STR_37:
   627  0061AA  43                 	db	67	;'C'
   628  0061AB  72                 	db	114	;'r'
   629  0061AC  69                 	db	105	;'i'
   630  0061AD  61                 	db	97	;'a'
   631  0061AE  6E                 	db	110	;'n'
   632  0061AF  64                 	db	100	;'d'
   633  0061B0  6F                 	db	111	;'o'
   634  0061B1  20                 	db	32
   635  0061B2  61                 	db	97	;'a'
   636  0061B3  72                 	db	114	;'r'
   637  0061B4  71                 	db	113	;'q'
   638  0061B5  75                 	db	117	;'u'
   639  0061B6  69                 	db	105	;'i'
   640  0061B7  76                 	db	118	;'v'
   641  0061B8  6F                 	db	111	;'o'
   642  0061B9  00                 	db	0
   643  0061BA                     STR_29:
   644  0061BA  42                 	db	66	;'B'
   645  0061BB  50                 	db	80	;'P'
   646  0061BC  42                 	db	66	;'B'
   647  0061BD  20                 	db	32
   648  0061BE  3E                 	db	62	;'>'
   649  0061BF  20                 	db	32
   650  0061C0  20                 	db	32
   651  0061C1  20                 	db	32
   652  0061C2  20                 	db	32
   653  0061C3  20                 	db	32
   654  0061C4  20                 	db	32
   655  0061C5  20                 	db	32
   656  0061C6  20                 	db	32
   657  0061C7  20                 	db	32
   658  0061C8  20                 	db	32
   659  0061C9  00                 	db	0
   660  0061CA                     STR_30:
   661  0061CA  49                 	db	73	;'I'
   662  0061CB  46                 	db	70	;'F'
   663  0061CC  20                 	db	32
   664  0061CD  20                 	db	32
   665  0061CE  20                 	db	32
   666  0061CF  20                 	db	32
   667  0061D0  3E                 	db	62	;'>'
   668  0061D1  20                 	db	32
   669  0061D2  20                 	db	32
   670  0061D3  20                 	db	32
   671  0061D4  20                 	db	32
   672  0061D5  20                 	db	32
   673  0061D6  20                 	db	32
   674  0061D7  20                 	db	32
   675  0061D8  20                 	db	32
   676  0061D9  00                 	db	0
   677  0061DA                     STR_18:
   678  0061DA  61                 	db	97	;'a'
   679  0061DB  67                 	db	103	;'g'
   680  0061DC  75                 	db	117	;'u'
   681  0061DD  61                 	db	97	;'a'
   682  0061DE  72                 	db	114	;'r'
   683  0061DF  64                 	db	100	;'d'
   684  0061E0  20                 	db	32
   685  0061E1  30                 	db	48	;'0'
   686  0061E2  78                 	db	120	;'x'
   687  0061E3  30                 	db	48	;'0'
   688  0061E4  30                 	db	48	;'0'
   689  0061E5  20                 	db	32
   690  0061E6  20                 	db	32
   691  0061E7  20                 	db	32
   692  0061E8  20                 	db	32
   693  0061E9  00                 	db	0
   694  0061EA                     STR_19:
   695  0061EA  61                 	db	97	;'a'
   696  0061EB  67                 	db	103	;'g'
   697  0061EC  75                 	db	117	;'u'
   698  0061ED  61                 	db	97	;'a'
   699  0061EE  72                 	db	114	;'r'
   700  0061EF  64                 	db	100	;'d'
   701  0061F0  20                 	db	32
   702  0061F1  30                 	db	48	;'0'
   703  0061F2  78                 	db	120	;'x'
   704  0061F3  46                 	db	70	;'F'
   705  0061F4  45                 	db	69	;'E'
   706  0061F5  20                 	db	32
   707  0061F6  20                 	db	32
   708  0061F7  20                 	db	32
   709  0061F8  20                 	db	32
   710  0061F9  00                 	db	0
   711  0061FA                     STR_14:
   712  0061FA  62                 	db	98	;'b'
   713  0061FB  75                 	db	117	;'u'
   714  0061FC  66                 	db	102	;'f'
   715  0061FD  66                 	db	102	;'f'
   716  0061FE  65                 	db	101	;'e'
   717  0061FF  72                 	db	114	;'r'
   718  006200  20                 	db	32
   719  006201  6C                 	db	108	;'l'
   720  006202  65                 	db	101	;'e'
   721  006203  69                 	db	105	;'i'
   722  006204  74                 	db	116	;'t'
   723  006205  2E                 	db	46
   724  006206  20                 	db	32
   725  006207  20                 	db	32
   726  006208  20                 	db	32
   727  006209  00                 	db	0
   728  00620A                     STR_9:
   729  00620A  49                 	db	73	;'I'
   730  00620B  6E                 	db	110	;'n'
   731  00620C  73                 	db	115	;'s'
   732  00620D  69                 	db	105	;'i'
   733  00620E  72                 	db	114	;'r'
   734  00620F  61                 	db	97	;'a'
   735  006210  20                 	db	32
   736  006211  6F                 	db	111	;'o'
   737  006212  20                 	db	32
   738  006213  43                 	db	67	;'C'
   739  006214  61                 	db	97	;'a'
   740  006215  72                 	db	114	;'r'
   741  006216  74                 	db	116	;'t'
   742  006217  61                 	db	97	;'a'
   743  006218  6F                 	db	111	;'o'
   744  006219  00                 	db	0
   745  00621A                     STR_17:
   746  00621A  00                 	db	0
   747  00621B  20                 	db	32
   748  00621C  2D                 	db	45
   749  00621D  3E                 	db	62	;'>'
   750  00621E  20                 	db	32
   751  00621F  20                 	db	32
   752  006220  20                 	db	32
   753  006221  20                 	db	32
   754  006222  20                 	db	32
   755  006223  20                 	db	32
   756  006224  20                 	db	32
   757  006225  20                 	db	32
   758  006226  20                 	db	32
   759  006227  00                 	db	0
   760  006228                     STR_21:
   761  006228  4C                 	db	76	;'L'
   762  006229  6F                 	db	111	;'o'
   763  00622A  61                 	db	97	;'a'
   764  00622B  64                 	db	100	;'d'
   765  00622C  20                 	db	32
   766  00622D  42                 	db	66	;'B'
   767  00622E  6F                 	db	111	;'o'
   768  00622F  6F                 	db	111	;'o'
   769  006230  74                 	db	116	;'t'
   770  006231  20                 	db	32
   771  006232  20                 	db	32
   772  006233  00                 	db	0
   773  006234                     STR_39:
   774  006234  52                 	db	82	;'R'
   775  006235  65                 	db	101	;'e'
   776  006236  73                 	db	115	;'s'
   777  006237  75                 	db	117	;'u'
   778  006238  6C                 	db	108	;'l'
   779  006239  74                 	db	116	;'t'
   780  00623A  61                 	db	97	;'a'
   781  00623B  64                 	db	100	;'d'
   782  00623C  6F                 	db	111	;'o'
   783  00623D  00                 	db	0
   784  00623E                     STR_38:
   785  00623E  74                 	db	116	;'t'
   786  00623F  65                 	db	101	;'e'
   787  006240  73                 	db	115	;'s'
   788  006241  74                 	db	116	;'t'
   789  006242  65                 	db	101	;'e'
   790  006243  2E                 	db	46
   791  006244  74                 	db	116	;'t'
   792  006245  78                 	db	120	;'x'
   793  006246  74                 	db	116	;'t'
   794  006247  00                 	db	0
   795  006248  25                 	db	37
   796  006249  64                 	db	100	;'d'
   797  00624A  3A                 	db	58	;':'
   798  00624B  25                 	db	37
   799  00624C  64                 	db	100	;'d'
   800  00624D  3A                 	db	58	;':'
   801  00624E  25                 	db	37
   802  00624F  64                 	db	100	;'d'
   803  006250  00                 	db	0
   804  006251                     STR_26:
   805  006251  46                 	db	70	;'F'
   806  006252  41                 	db	65	;'A'
   807  006253  54                 	db	84	;'T'
   808  006254  33                 	db	51	;'3'
   809  006255  32                 	db	50	;'2'
   810  006256  00                 	db	0
   811  006257  48                 	db	72	;'H'
   812  006258  6F                 	db	111	;'o'
   813  006259  72                 	db	114	;'r'
   814  00625A  61                 	db	97	;'a'
   815  00625B  3A                 	db	58	;':'
   816  00625C  00                 	db	0
   817  00625D  44                 	db	68	;'D'
   818  00625E  61                 	db	97	;'a'
   819  00625F  74                 	db	116	;'t'
   820  006260  61                 	db	97	;'a'
   821  006261  3A                 	db	58	;':'
   822  006262  00                 	db	0
   823  006263                     STR_3:
   824  006263  25                 	db	37
   825  006264  2E                 	db	46
   826  006265  30                 	db	48	;'0'
   827  006266  37                 	db	55	;'7'
   828  006267  66                 	db	102	;'f'
   829  006268  00                 	db	0
   830  006269                     STR_41:
   831  006269  45                 	db	69	;'E'
   832  00626A  52                 	db	82	;'R'
   833  00626B  52                 	db	82	;'R'
   834  00626C  4F                 	db	79	;'O'
   835  00626D  00                 	db	0
   836  00626E  4C                 	db	76	;'L'
   837  00626F  6F                 	db	111	;'o'
   838  006270  6E                 	db	110	;'n'
   839  006271  3A                 	db	58	;':'
   840  006272  00                 	db	0
   841  006273  4C                 	db	76	;'L'
   842  006274  61                 	db	97	;'a'
   843  006275  74                 	db	116	;'t'
   844  006276  3A                 	db	58	;':'
   845  006277  00                 	db	0
   846  006278                     STR_23:
   847  006278  46                 	db	70	;'F'
   848  006279  41                 	db	65	;'A'
   849  00627A  54                 	db	84	;'T'
   850  00627B  00                 	db	0
   851  00627C  0D                 	db	13
   852  00627D  0A                 	db	10
   853  00627E  00                 	db	0
   854  0000                     
   855                           ; #config settings
   856  00627F  00                 	db	0	; dummy byte at the end
   857  0000                     
   858                           	psect	cinit
   859  004BBE                     __pcinit:
   860                           	opt stack 0
   861  004BBE                     start_initialization:
   862                           	opt stack 0
   863  004BBE                     __initialization:
   864                           	opt stack 0
   865                           
   866                           ; Initialize objects allocated to BANK1 (29 bytes)
   867                           ; load TBLPTR registers with __pidataBANK1
   868  004BBE  0E1E               	movlw	low __pidataBANK1
   869  004BC0  6EF6               	movwf	tblptrl,c
   870  004BC2  0E54               	movlw	high __pidataBANK1
   871  004BC4  6EF7               	movwf	tblptrh,c
   872  004BC6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   873  004BC8  6EF8               	movwf	tblptru,c
   874  004BCA  EE01  F0CC         	lfsr	0,__pdataBANK1
   875  004BCE  EE10 F01D          	lfsr	1,29
   876  004BD2                     copy_data0:
   877  004BD2  0009               	tblrd		*+
   878  004BD4  CFF5 FFEE          	movff	tablat,postinc0
   879  004BD8  50E5               	movf	postdec1,w,c
   880  004BDA  50E1               	movf	fsr1l,w,c
   881  004BDC  E1FA               	bnz	copy_data0
   882                           
   883                           ; Clear objects allocated to BIGRAM (552 bytes)
   884  004BDE  EE03  F030         	lfsr	0,__pbssBIGRAM
   885  004BE2  EE12 F028          	lfsr	1,552
   886  004BE6                     clear_0:
   887  004BE6  6AEE               	clrf	postinc0,c
   888  004BE8  50E5               	movf	postdec1,w,c
   889  004BEA  50E1               	movf	fsr1l,w,c
   890  004BEC  E1FC               	bnz	clear_0
   891  004BEE  50E2               	movf	fsr1h,w,c
   892  004BF0  E1FA               	bnz	clear_0
   893                           
   894                           ; Clear objects allocated to BANK3 (48 bytes)
   895  004BF2  EE03  F000         	lfsr	0,__pbssBANK3
   896  004BF6  0E30               	movlw	48
   897  004BF8                     clear_1:
   898  004BF8  6AEE               	clrf	postinc0,c
   899  004BFA  06E8               	decf	wreg,f,c
   900  004BFC  E1FD               	bnz	clear_1
   901                           
   902                           ; Clear objects allocated to BANK2 (222 bytes)
   903  004BFE  EE02  F000         	lfsr	0,__pbssBANK2
   904  004C02  0EDE               	movlw	222
   905  004C04                     clear_2:
   906  004C04  6AEE               	clrf	postinc0,c
   907  004C06  06E8               	decf	wreg,f,c
   908  004C08  E1FD               	bnz	clear_2
   909                           
   910                           ; Clear objects allocated to BANK1 (115 bytes)
   911  004C0A  EE01  F000         	lfsr	0,__pbssBANK1
   912  004C0E  0E73               	movlw	115
   913  004C10                     clear_3:
   914  004C10  6AEE               	clrf	postinc0,c
   915  004C12  06E8               	decf	wreg,f,c
   916  004C14  E1FD               	bnz	clear_3
   917                           
   918                           ; Clear objects allocated to BANK0 (7 bytes)
   919  004C16  EE00  F0F9         	lfsr	0,__pbssBANK0
   920  004C1A  0E07               	movlw	7
   921  004C1C                     clear_4:
   922  004C1C  6AEE               	clrf	postinc0,c
   923  004C1E  06E8               	decf	wreg,f,c
   924  004C20  E1FD               	bnz	clear_4
   925                           
   926                           ; Clear objects allocated to COMRAM (20 bytes)
   927  004C22  EE00  F036         	lfsr	0,__pbssCOMRAM
   928  004C26  0E14               	movlw	20
   929  004C28                     clear_5:
   930  004C28  6AEE               	clrf	postinc0,c
   931  004C2A  06E8               	decf	wreg,f,c
   932  004C2C  E1FD               	bnz	clear_5
   933  004C2E                     end_of_initialization:
   934                           	opt stack 0
   935  004C2E                     __end_of__initialization:
   936                           	opt stack 0
   937  004C2E  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   938  004C30  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   939  004C32  0E00               	movlw	low (__Lmediumconst shr (0+16))
   940  004C34  6EF8               	movwf	tblptru,c
   941  004C36  0100               	movlb	0
   942  004C38  EFC2  F029         	goto	_main	;jump to C main() function
   943                           tblptru	equ	0xFF8
   944                           tblptrh	equ	0xFF7
   945                           tblptrl	equ	0xFF6
   946                           tablat	equ	0xFF5
   947                           postinc0	equ	0xFEE
   948                           wreg	equ	0xFE8
   949                           postdec1	equ	0xFE5
   950                           fsr1h	equ	0xFE2
   951                           fsr1l	equ	0xFE1
   952                           
   953                           	psect	bssCOMRAM
   954  000036                     __pbssCOMRAM:
   955                           	opt stack 0
   956  000036                     _gga_code:
   957                           	opt stack 0
   958  000036                     	ds	3
   959  000039                     _rmc_index:
   960                           	opt stack 0
   961  000039                     	ds	2
   962  00003B                     _gga_index:
   963                           	opt stack 0
   964  00003B                     	ds	2
   965  00003D                     _s:
   966                           	opt stack 0
   967  00003D                     	ds	1
   968  00003E                     _Result:
   969                           	opt stack 0
   970  00003E                     	ds	1
   971  00003F                     _tarefa_em_execucao:
   972                           	opt stack 0
   973  00003F                     	ds	1
   974  000040                     _sinaliza_int_timer:
   975                           	opt stack 0
   976  000040                     	ds	1
   977  000041                     _data_uart_recebe:
   978                           	opt stack 0
   979  000041                     	ds	1
   980  000042                     timer_dois@flag:
   981                           	opt stack 0
   982  000042                     	ds	1
   983  000043                     _dado:
   984                           	opt stack 0
   985  000043                     	ds	1
   986  000044                     _is_it_rmc_string:
   987                           	opt stack 0
   988  000044                     	ds	1
   989  000045                     _is_it_gga_string:
   990                           	opt stack 0
   991  000045                     	ds	1
   992  000046                     _comma_counter_rmc:
   993                           	opt stack 0
   994  000046                     	ds	1
   995  000047                     _comma_counter_gga:
   996                           	opt stack 0
   997  000047                     	ds	1
   998  000048                     _E_W:
   999                           	opt stack 0
  1000  000048                     	ds	1
  1001  000049                     _n_s:
  1002                           	opt stack 0
  1003  000049                     	ds	1
  1004                           tblptru	equ	0xFF8
  1005                           tblptrh	equ	0xFF7
  1006                           tblptrl	equ	0xFF6
  1007                           tablat	equ	0xFF5
  1008                           postinc0	equ	0xFEE
  1009                           wreg	equ	0xFE8
  1010                           postdec1	equ	0xFE5
  1011                           fsr1h	equ	0xFE2
  1012                           fsr1l	equ	0xFE1
  1013                           
  1014                           	psect	bssBANK0
  1015  0000F9                     __pbssBANK0:
  1016                           	opt stack 0
  1017  0000F9                     _rmc_code:
  1018                           	opt stack 0
  1019  0000F9                     	ds	3
  1020  0000FC                     _FatFs:
  1021                           	opt stack 0
  1022  0000FC                     	ds	2
  1023  0000FE                     _data_buff:
  1024                           	opt stack 0
  1025  0000FE                     	ds	2
  1026                           tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           postinc0	equ	0xFEE
  1031                           wreg	equ	0xFE8
  1032                           postdec1	equ	0xFE5
  1033                           fsr1h	equ	0xFE2
  1034                           fsr1l	equ	0xFE1
  1035                           
  1036                           	psect	bssBANK1
  1037  000100                     __pbssBANK1:
  1038                           	opt stack 0
  1039  000100                     _valor_leitura_adc:
  1040                           	opt stack 0
  1041  000100                     	ds	38
  1042  000126                     _gga_pointers:
  1043                           	opt stack 0
  1044  000126                     	ds	20
  1045  00013A                     _rmc_pointers:
  1046                           	opt stack 0
  1047  00013A                     	ds	12
  1048  000146                     _fileSize:
  1049                           	opt stack 0
  1050  000146                     	ds	4
  1051  00014A                     _tempo_tarefa:
  1052                           	opt stack 0
  1053  00014A                     	ds	4
  1054  00014E                     _tempo_backup:
  1055                           	opt stack 0
  1056  00014E                     	ds	4
  1057  000152                     _p_tarefas:
  1058                           	opt stack 0
  1059  000152                     	ds	4
  1060  000156                     _rd:
  1061                           	opt stack 0
  1062  000156                     	ds	2
  1063  000158                     _timeout_tarefa:
  1064                           	opt stack 0
  1065  000158                     	ds	2
  1066  00015A                     _fsid:
  1067                           	opt stack 0
  1068  00015A                     	ds	2
  1069  00015C                     SDCard@init:
  1070                           	opt stack 0
  1071  00015C                     	ds	1
  1072  00015D                     _data_buffer:
  1073                           	opt stack 0
  1074  00015D                     	ds	15
  1075  00016C                     _dado_buffer:
  1076                           	opt stack 0
  1077  00016C                     	ds	7
  1078                           tblptru	equ	0xFF8
  1079                           tblptrh	equ	0xFF7
  1080                           tblptrl	equ	0xFF6
  1081                           tablat	equ	0xFF5
  1082                           postinc0	equ	0xFEE
  1083                           wreg	equ	0xFE8
  1084                           postdec1	equ	0xFE5
  1085                           fsr1h	equ	0xFE2
  1086                           fsr1l	equ	0xFE1
  1087                           
  1088                           	psect	dataBANK1
  1089  0001CC                     __pdataBANK1:
  1090                           	opt stack 0
  1091  0001CC                     _fileName:
  1092                           	opt stack 0
  1093  0001CC                     	ds	15
  1094  0001DB                     escreve_inteiro_uart@F3952:
  1095                           	opt stack 0
  1096  0001DB                     	ds	7
  1097  0001E2                     escreve_inteiro_lcd@F3962:
  1098                           	opt stack 0
  1099  0001E2                     	ds	7
  1100                           tblptru	equ	0xFF8
  1101                           tblptrh	equ	0xFF7
  1102                           tblptrl	equ	0xFF6
  1103                           tablat	equ	0xFF5
  1104                           postinc0	equ	0xFEE
  1105                           wreg	equ	0xFE8
  1106                           postdec1	equ	0xFE5
  1107                           fsr1h	equ	0xFE2
  1108                           fsr1l	equ	0xFE1
  1109                           
  1110                           	psect	bssBANK2
  1111  000200                     __pbssBANK2:
  1112                           	opt stack 0
  1113  000200                     _gga_buffer:
  1114                           	opt stack 0
  1115  000200                     	ds	80
  1116  000250                     _rmc_buffer:
  1117                           	opt stack 0
  1118  000250                     	ds	70
  1119  000296                     _data_buffer_32:
  1120                           	opt stack 0
  1121  000296                     	ds	32
  1122  0002B6                     _txt:
  1123                           	opt stack 0
  1124  0002B6                     	ds	20
  1125  0002CA                     _buff:
  1126                           	opt stack 0
  1127  0002CA                     	ds	20
  1128                           tblptru	equ	0xFF8
  1129                           tblptrh	equ	0xFF7
  1130                           tblptrl	equ	0xFF6
  1131                           tablat	equ	0xFF5
  1132                           postinc0	equ	0xFEE
  1133                           wreg	equ	0xFE8
  1134                           postdec1	equ	0xFE5
  1135                           fsr1h	equ	0xFE2
  1136                           fsr1l	equ	0xFE1
  1137                           
  1138                           	psect	bssBANK3
  1139  000300                     __pbssBANK3:
  1140                           	opt stack 0
  1141  000300                     _folder:
  1142                           	opt stack 0
  1143  000300                     	ds	48
  1144                           tblptru	equ	0xFF8
  1145                           tblptrh	equ	0xFF7
  1146                           tblptrl	equ	0xFF6
  1147                           tablat	equ	0xFF5
  1148                           postinc0	equ	0xFEE
  1149                           wreg	equ	0xFE8
  1150                           postdec1	equ	0xFE5
  1151                           fsr1h	equ	0xFE2
  1152                           fsr1l	equ	0xFE1
  1153                           
  1154                           	psect	bssBIGRAM
  1155  000330                     __pbssBIGRAM:
  1156                           	opt stack 0
  1157  000330                     _fs:
  1158                           	opt stack 0
  1159  000330                     	ds	552
  1160                           tblptru	equ	0xFF8
  1161                           tblptrh	equ	0xFF7
  1162                           tblptrl	equ	0xFF6
  1163                           tablat	equ	0xFF5
  1164                           postinc0	equ	0xFEE
  1165                           wreg	equ	0xFE8
  1166                           postdec1	equ	0xFE5
  1167                           fsr1h	equ	0xFE2
  1168                           fsr1l	equ	0xFE1
  1169                           
  1170                           	psect	cstackBANK2
  1171  0002DE                     __pcstackBANK2:
  1172                           	opt stack 0
  1173  0002DE                     SDCard@FResult:
  1174                           	opt stack 0
  1175                           
  1176                           ; 1 bytes @ 0x0
  1177  0002DE                     	ds	1
  1178  0002DF                     SDCard@fil:
  1179                           	opt stack 0
  1180                           
  1181                           ; 32 bytes @ 0x1
  1182  0002DF                     	ds	32
  1183                           tblptru	equ	0xFF8
  1184                           tblptrh	equ	0xFF7
  1185                           tblptrl	equ	0xFF6
  1186                           tablat	equ	0xFF5
  1187                           postinc0	equ	0xFEE
  1188                           wreg	equ	0xFE8
  1189                           postdec1	equ	0xFE5
  1190                           fsr1h	equ	0xFE2
  1191                           fsr1l	equ	0xFE1
  1192                           
  1193                           	psect	cstackBANK1
  1194  000173                     __pcstackBANK1:
  1195                           	opt stack 0
  1196  000173                     _trace_path$1248:
  1197                           	opt stack 0
  1198  000173                     reserve_direntry@sector:
  1199                           	opt stack 0
  1200                           
  1201                           ; 4 bytes @ 0x0
  1202  000173                     	ds	2
  1203  000175                     _trace_path$1250:
  1204                           	opt stack 0
  1205                           
  1206                           ; 2 bytes @ 0x2
  1207  000175                     	ds	2
  1208  000177                     reserve_direntry@n:
  1209                           	opt stack 0
  1210  000177                     trace_path@fs:
  1211                           	opt stack 0
  1212                           
  1213                           ; 2 bytes @ 0x4
  1214  000177                     	ds	1
  1215  000178                     reserve_direntry@dptr:
  1216                           	opt stack 0
  1217                           
  1218                           ; 2 bytes @ 0x5
  1219  000178                     	ds	1
  1220  000179                     trace_path@ds:
  1221                           	opt stack 0
  1222                           
  1223                           ; 1 bytes @ 0x6
  1224  000179                     	ds	1
  1225  00017A                     reserve_direntry@c:
  1226                           	opt stack 0
  1227  00017A                     trace_path@clust:
  1228                           	opt stack 0
  1229                           
  1230                           ; 4 bytes @ 0x7
  1231  00017A                     	ds	1
  1232  00017B                     reserve_direntry@clust:
  1233                           	opt stack 0
  1234                           
  1235                           ; 4 bytes @ 0x8
  1236  00017B                     	ds	3
  1237  00017E                     trace_path@dptr:
  1238                           	opt stack 0
  1239                           
  1240                           ; 2 bytes @ 0xB
  1241  00017E                     	ds	1
  1242  00017F                     reserve_direntry@fs:
  1243                           	opt stack 0
  1244                           
  1245                           ; 2 bytes @ 0xC
  1246  00017F                     	ds	2
  1247  000181                     f_open@fp:
  1248                           	opt stack 0
  1249                           
  1250                           ; 2 bytes @ 0xE
  1251  000181                     	ds	2
  1252  000183                     f_open@path:
  1253                           	opt stack 0
  1254                           
  1255                           ; 2 bytes @ 0x10
  1256  000183                     	ds	2
  1257  000185                     f_open@mode:
  1258                           	opt stack 0
  1259                           
  1260                           ; 1 bytes @ 0x12
  1261  000185                     	ds	1
  1262  000186                     ??_f_open:
  1263                           
  1264                           ; 1 bytes @ 0x13
  1265  000186                     	ds	26
  1266  0001A0                     f_open@fn:
  1267                           	opt stack 0
  1268                           
  1269                           ; 12 bytes @ 0x2D
  1270  0001A0                     	ds	12
  1271  0001AC                     f_open@rs:
  1272                           	opt stack 0
  1273                           
  1274                           ; 4 bytes @ 0x39
  1275  0001AC                     	ds	4
  1276  0001B0                     f_open@dw:
  1277                           	opt stack 0
  1278                           
  1279                           ; 4 bytes @ 0x3D
  1280  0001B0                     	ds	4
  1281  0001B4                     f_open@res:
  1282                           	opt stack 0
  1283                           
  1284                           ; 1 bytes @ 0x41
  1285  0001B4                     	ds	1
  1286  0001B5                     f_open@dj:
  1287                           	opt stack 0
  1288                           
  1289                           ; 18 bytes @ 0x42
  1290  0001B5                     	ds	18
  1291  0001C7                     f_open@dir:
  1292                           	opt stack 0
  1293                           
  1294                           ; 2 bytes @ 0x54
  1295  0001C7                     	ds	2
  1296  0001C9                     
  1297                           ; 1 bytes @ 0x56
  1298  0001C9                     	ds	2
  1299  0001CB                     escalonador@cont:
  1300                           	opt stack 0
  1301                           
  1302                           ; 1 bytes @ 0x58
  1303  0001CB                     	ds	1
  1304                           tblptru	equ	0xFF8
  1305                           tblptrh	equ	0xFF7
  1306                           tblptrl	equ	0xFF6
  1307                           tablat	equ	0xFF5
  1308                           postinc0	equ	0xFEE
  1309                           wreg	equ	0xFE8
  1310                           postdec1	equ	0xFE5
  1311                           fsr1h	equ	0xFE2
  1312                           fsr1l	equ	0xFE1
  1313                           
  1314                           	psect	cstackBANK0
  1315  000060                     __pcstackBANK0:
  1316                           	opt stack 0
  1317  000060                     ??_get_fattime:
  1318  000060                     disk_write@buff:
  1319                           	opt stack 0
  1320  000060                     escreve_inteiro_lcd@texto:
  1321                           	opt stack 0
  1322  000060                     mensagem_inicial@msg_linha_um:
  1323                           	opt stack 0
  1324                           
  1325                           ; 17 bytes @ 0x0
  1326  000060                     	ds	2
  1327  000062                     disk_write@sector:
  1328                           	opt stack 0
  1329                           
  1330                           ; 4 bytes @ 0x2
  1331  000062                     	ds	4
  1332  000066                     disk_write@count:
  1333                           	opt stack 0
  1334                           
  1335                           ; 1 bytes @ 0x6
  1336  000066                     	ds	1
  1337  000067                     sdc_disk_initialize@i:
  1338                           	opt stack 0
  1339  000067                     sdc_disk_read@p_buff:
  1340                           	opt stack 0
  1341                           
  1342                           ; 2 bytes @ 0x7
  1343  000067                     	ds	2
  1344  000069                     sdc_disk_initialize@count_nosd:
  1345                           	opt stack 0
  1346  000069                     sdc_disk_read@sector:
  1347                           	opt stack 0
  1348                           
  1349                           ; 4 bytes @ 0x9
  1350  000069                     	ds	2
  1351  00006B                     sdc_disk_initialize@stat:
  1352                           	opt stack 0
  1353                           
  1354                           ; 1 bytes @ 0xB
  1355  00006B                     	ds	1
  1356  00006C                     sdc_disk_initialize@count:
  1357                           	opt stack 0
  1358                           
  1359                           ; 2 bytes @ 0xC
  1360  00006C                     	ds	1
  1361  00006D                     sdc_disk_read@count:
  1362                           	opt stack 0
  1363                           
  1364                           ; 1 bytes @ 0xD
  1365  00006D                     	ds	1
  1366  00006E                     sdc_disk_initialize@buff:
  1367                           	opt stack 0
  1368  00006E                     sdc_disk_read@ptr:
  1369                           	opt stack 0
  1370                           
  1371                           ; 1 bytes @ 0xE
  1372  00006E                     	ds	1
  1373  00006F                     sdc_disk_read@offset:
  1374                           	opt stack 0
  1375                           
  1376                           ; 2 bytes @ 0xF
  1377  00006F                     	ds	2
  1378  000071                     sdc_disk_read@start_add:
  1379                           	opt stack 0
  1380  000071                     mensagem_inicial@msg_dois:
  1381                           	opt stack 0
  1382                           
  1383                           ; 17 bytes @ 0x11
  1384  000071                     	ds	4
  1385  000075                     sdc_disk_read@length:
  1386                           	opt stack 0
  1387                           
  1388                           ; 2 bytes @ 0x15
  1389  000075                     	ds	2
  1390  000077                     sdc_disk_read@buff:
  1391                           	opt stack 0
  1392                           
  1393                           ; 1 bytes @ 0x17
  1394  000077                     	ds	1
  1395  000078                     disk_read@buff:
  1396                           	opt stack 0
  1397                           
  1398                           ; 2 bytes @ 0x18
  1399  000078                     	ds	2
  1400  00007A                     disk_read@sector:
  1401                           	opt stack 0
  1402                           
  1403                           ; 4 bytes @ 0x1A
  1404  00007A                     	ds	4
  1405  00007E                     disk_read@count:
  1406                           	opt stack 0
  1407                           
  1408                           ; 1 bytes @ 0x1E
  1409  00007E                     	ds	1
  1410  00007F                     disk_read@pdrv:
  1411                           	opt stack 0
  1412                           
  1413                           ; 1 bytes @ 0x1F
  1414  00007F                     	ds	1
  1415  000080                     disk_read@result:
  1416                           	opt stack 0
  1417                           
  1418                           ; 2 bytes @ 0x20
  1419  000080                     	ds	2
  1420  000082                     disk_read@res:
  1421                           	opt stack 0
  1422                           
  1423                           ; 1 bytes @ 0x22
  1424  000082                     	ds	1
  1425  000083                     move_window@sector:
  1426                           	opt stack 0
  1427  000083                     check_fs@sect:
  1428                           	opt stack 0
  1429                           
  1430                           ; 4 bytes @ 0x23
  1431  000083                     	ds	4
  1432  000087                     ??_move_window:
  1433  000087                     ??_check_fs:
  1434                           
  1435                           ; 1 bytes @ 0x27
  1436  000087                     	ds	4
  1437  00008B                     check_fs@temp2:
  1438                           	opt stack 0
  1439                           
  1440                           ; 4 bytes @ 0x2B
  1441  00008B                     	ds	4
  1442  00008F                     check_fs@temp3:
  1443                           	opt stack 0
  1444                           
  1445                           ; 4 bytes @ 0x2F
  1446  00008F                     	ds	4
  1447  000093                     move_window@n:
  1448                           	opt stack 0
  1449  000093                     check_fs@temp:
  1450                           	opt stack 0
  1451                           
  1452                           ; 2 bytes @ 0x33
  1453  000093                     	ds	1
  1454  000094                     move_window@wsect:
  1455                           	opt stack 0
  1456                           
  1457                           ; 4 bytes @ 0x34
  1458  000094                     	ds	1
  1459  000095                     _check_fs$1315:
  1460                           	opt stack 0
  1461                           
  1462                           ; 1 bytes @ 0x35
  1463  000095                     	ds	1
  1464  000096                     check_fs@temp4:
  1465                           	opt stack 0
  1466                           
  1467                           ; 4 bytes @ 0x36
  1468  000096                     	ds	2
  1469  000098                     move_window@fs:
  1470                           	opt stack 0
  1471                           
  1472                           ; 2 bytes @ 0x38
  1473  000098                     	ds	2
  1474  00009A                     ?_get_cluster:
  1475                           	opt stack 0
  1476  00009A                     sync@fs:
  1477                           	opt stack 0
  1478  00009A                     check_fs@fs:
  1479                           	opt stack 0
  1480  00009A                     get_cluster@clust:
  1481                           	opt stack 0
  1482  00009A                     put_cluster@clust:
  1483                           	opt stack 0
  1484                           
  1485                           ; 4 bytes @ 0x3A
  1486  00009A                     	ds	2
  1487  00009C                     auto_mount@path:
  1488                           	opt stack 0
  1489  00009C                     f_sync@fp:
  1490                           	opt stack 0
  1491                           
  1492                           ; 2 bytes @ 0x3C
  1493  00009C                     	ds	2
  1494  00009E                     ??_get_cluster:
  1495  00009E                     ??_f_sync:
  1496  00009E                     auto_mount@chk_wp:
  1497                           	opt stack 0
  1498  00009E                     put_cluster@val:
  1499                           	opt stack 0
  1500                           
  1501                           ; 4 bytes @ 0x3E
  1502  00009E                     	ds	1
  1503  00009F                     ??_auto_mount:
  1504                           
  1505                           ; 1 bytes @ 0x3F
  1506  00009F                     	ds	3
  1507  0000A2                     ??_put_cluster:
  1508  0000A2                     f_sync@res:
  1509                           	opt stack 0
  1510                           
  1511                           ; 1 bytes @ 0x42
  1512  0000A2                     	ds	1
  1513  0000A3                     f_sync@tim:
  1514                           	opt stack 0
  1515                           
  1516                           ; 4 bytes @ 0x43
  1517  0000A3                     	ds	4
  1518  0000A7                     _put_cluster$1091:
  1519                           	opt stack 0
  1520  0000A7                     f_sync@dir:
  1521                           	opt stack 0
  1522                           
  1523                           ; 2 bytes @ 0x47
  1524  0000A7                     	ds	2
  1525  0000A9                     _put_cluster$1092:
  1526                           	opt stack 0
  1527  0000A9                     f_close@fp:
  1528                           	opt stack 0
  1529                           
  1530                           ; 2 bytes @ 0x49
  1531  0000A9                     	ds	2
  1532  0000AB                     put_cluster@fatsect:
  1533                           	opt stack 0
  1534                           
  1535                           ; 4 bytes @ 0x4B
  1536  0000AB                     	ds	4
  1537  0000AF                     put_cluster@bc:
  1538                           	opt stack 0
  1539                           
  1540                           ; 2 bytes @ 0x4F
  1541  0000AF                     	ds	2
  1542  0000B1                     put_cluster@p:
  1543                           	opt stack 0
  1544                           
  1545                           ; 2 bytes @ 0x51
  1546  0000B1                     	ds	2
  1547  0000B3                     put_cluster@fs:
  1548                           	opt stack 0
  1549                           
  1550                           ; 2 bytes @ 0x53
  1551  0000B3                     	ds	6
  1552  0000B9                     auto_mount@maxclust:
  1553                           	opt stack 0
  1554                           
  1555                           ; 4 bytes @ 0x59
  1556  0000B9                     	ds	4
  1557  0000BD                     auto_mount@totalsect:
  1558                           	opt stack 0
  1559                           
  1560                           ; 4 bytes @ 0x5D
  1561  0000BD                     	ds	4
  1562  0000C1                     auto_mount@bootsect:
  1563                           	opt stack 0
  1564                           
  1565                           ; 4 bytes @ 0x61
  1566  0000C1                     	ds	4
  1567  0000C5                     auto_mount@p:
  1568                           	opt stack 0
  1569                           
  1570                           ; 2 bytes @ 0x65
  1571  0000C5                     	ds	2
  1572  0000C7                     auto_mount@stat:
  1573                           	opt stack 0
  1574                           
  1575                           ; 1 bytes @ 0x67
  1576  0000C7                     	ds	1
  1577  0000C8                     _get_cluster$1068:
  1578                           	opt stack 0
  1579  0000C8                     auto_mount@fatsize:
  1580                           	opt stack 0
  1581                           
  1582                           ; 4 bytes @ 0x68
  1583  0000C8                     	ds	2
  1584  0000CA                     get_cluster@wc:
  1585                           	opt stack 0
  1586                           
  1587                           ; 2 bytes @ 0x6A
  1588  0000CA                     	ds	2
  1589  0000CC                     auto_mount@fmt:
  1590                           	opt stack 0
  1591  0000CC                     get_cluster@fatsect:
  1592                           	opt stack 0
  1593                           
  1594                           ; 4 bytes @ 0x6C
  1595  0000CC                     	ds	1
  1596  0000CD                     auto_mount@fs:
  1597                           	opt stack 0
  1598                           
  1599                           ; 2 bytes @ 0x6D
  1600  0000CD                     	ds	3
  1601  0000D0                     get_cluster@bc:
  1602                           	opt stack 0
  1603                           
  1604                           ; 2 bytes @ 0x70
  1605  0000D0                     	ds	2
  1606  0000D2                     get_cluster@fs:
  1607                           	opt stack 0
  1608                           
  1609                           ; 2 bytes @ 0x72
  1610  0000D2                     	ds	2
  1611  0000D4                     ?_create_chain:
  1612                           	opt stack 0
  1613  0000D4                     next_dir_entry@dj:
  1614                           	opt stack 0
  1615  0000D4                     remove_chain@clust:
  1616                           	opt stack 0
  1617  0000D4                     create_chain@clust:
  1618                           	opt stack 0
  1619                           
  1620                           ; 4 bytes @ 0x74
  1621  0000D4                     	ds	2
  1622  0000D6                     ??_next_dir_entry:
  1623                           
  1624                           ; 1 bytes @ 0x76
  1625  0000D6                     	ds	2
  1626  0000D8                     
  1627                           ; 1 bytes @ 0x78
  1628  0000D8                     	ds	4
  1629  0000DC                     remove_chain@nxt:
  1630                           	opt stack 0
  1631  0000DC                     create_chain@mcl:
  1632                           	opt stack 0
  1633                           
  1634                           ; 4 bytes @ 0x7C
  1635  0000DC                     	ds	1
  1636  0000DD                     next_dir_entry@clust:
  1637                           	opt stack 0
  1638                           
  1639                           ; 4 bytes @ 0x7D
  1640  0000DD                     	ds	3
  1641  0000E0                     remove_chain@fs:
  1642                           	opt stack 0
  1643  0000E0                     create_chain@fs:
  1644                           	opt stack 0
  1645                           
  1646                           ; 2 bytes @ 0x80
  1647  0000E0                     	ds	1
  1648  0000E1                     next_dir_entry@idx:
  1649                           	opt stack 0
  1650                           
  1651                           ; 2 bytes @ 0x81
  1652  0000E1                     	ds	1
  1653  0000E2                     create_chain@cstat:
  1654                           	opt stack 0
  1655                           
  1656                           ; 4 bytes @ 0x82
  1657  0000E2                     	ds	1
  1658  0000E3                     trace_path@dj:
  1659                           	opt stack 0
  1660                           
  1661                           ; 2 bytes @ 0x83
  1662  0000E3                     	ds	2
  1663  0000E5                     trace_path@fn:
  1664                           	opt stack 0
  1665                           
  1666                           ; 2 bytes @ 0x85
  1667  0000E5                     	ds	1
  1668  0000E6                     create_chain@scl:
  1669                           	opt stack 0
  1670                           
  1671                           ; 4 bytes @ 0x86
  1672  0000E6                     	ds	1
  1673  0000E7                     trace_path@path:
  1674                           	opt stack 0
  1675                           
  1676                           ; 2 bytes @ 0x87
  1677  0000E7                     	ds	2
  1678  0000E9                     trace_path@dir:
  1679                           	opt stack 0
  1680                           
  1681                           ; 2 bytes @ 0x89
  1682  0000E9                     	ds	1
  1683  0000EA                     create_chain@ncl:
  1684                           	opt stack 0
  1685                           
  1686                           ; 4 bytes @ 0x8A
  1687  0000EA                     	ds	1
  1688  0000EB                     ??_trace_path:
  1689                           
  1690                           ; 1 bytes @ 0x8B
  1691  0000EB                     	ds	3
  1692  0000EE                     reserve_direntry@dj:
  1693                           	opt stack 0
  1694                           
  1695                           ; 2 bytes @ 0x8E
  1696  0000EE                     	ds	2
  1697  0000F0                     reserve_direntry@dir:
  1698                           	opt stack 0
  1699                           
  1700                           ; 2 bytes @ 0x90
  1701  0000F0                     	ds	2
  1702  0000F2                     ??_reserve_direntry:
  1703                           
  1704                           ; 1 bytes @ 0x92
  1705  0000F2                     	ds	5
  1706  0000F7                     ??_SDCard:
  1707                           
  1708                           ; 1 bytes @ 0x97
  1709  0000F7                     	ds	2
  1710                           tblptru	equ	0xFF8
  1711                           tblptrh	equ	0xFF7
  1712                           tblptrl	equ	0xFF6
  1713                           tablat	equ	0xFF5
  1714                           postinc0	equ	0xFEE
  1715                           wreg	equ	0xFE8
  1716                           postdec1	equ	0xFE5
  1717                           fsr1h	equ	0xFE2
  1718                           fsr1l	equ	0xFE1
  1719                           
  1720                           	psect	cstackCOMRAM
  1721  000001                     __pcstackCOMRAM:
  1722                           	opt stack 0
  1723  000001                     i2write_timer_zero@timer0:
  1724                           	opt stack 0
  1725                           
  1726                           ; 2 bytes @ 0x0
  1727  000001                     	ds	2
  1728  000003                     i2write_timer_zero@timer:
  1729                           	opt stack 0
  1730                           
  1731                           ; 2 bytes @ 0x2
  1732  000003                     	ds	2
  1733  000005                     ??_isr:
  1734                           
  1735                           ; 1 bytes @ 0x4
  1736  000005                     	ds	16
  1737  000015                     isr@cont:
  1738                           	opt stack 0
  1739                           
  1740                           ; 1 bytes @ 0x14
  1741  000015                     	ds	1
  1742  000016                     ??_recebe_dado_SPI:
  1743  000016                     ?_memcmp:
  1744                           	opt stack 0
  1745  000016                     ?___wmul:
  1746                           	opt stack 0
  1747  000016                     ?___awdiv:
  1748                           	opt stack 0
  1749  000016                     ?___lwdiv:
  1750                           	opt stack 0
  1751  000016                     ?___lwmod:
  1752                           	opt stack 0
  1753  000016                     ?_get_fattime:
  1754                           	opt stack 0
  1755  000016                     ?___lmul:
  1756                           	opt stack 0
  1757  000016                     ?___lldiv:
  1758                           	opt stack 0
  1759  000016                     escreve_dado_SPI@contador:
  1760                           	opt stack 0
  1761  000016                     disk_ioctl@cmd:
  1762                           	opt stack 0
  1763  000016                     sdc_disk_status@stat:
  1764                           	opt stack 0
  1765  000016                     delay@contador_ext:
  1766                           	opt stack 0
  1767  000016                     write_timer_zero@timer0:
  1768                           	opt stack 0
  1769  000016                     f_mount@fs:
  1770                           	opt stack 0
  1771  000016                     ___wmul@multiplier:
  1772                           	opt stack 0
  1773  000016                     ___awdiv@dividend:
  1774                           	opt stack 0
  1775  000016                     ___lwdiv@dividend:
  1776                           	opt stack 0
  1777  000016                     ___lwmod@dividend:
  1778                           	opt stack 0
  1779  000016                     memcmp@s1:
  1780                           	opt stack 0
  1781  000016                     memcpy@d1:
  1782                           	opt stack 0
  1783  000016                     memset@p1:
  1784                           	opt stack 0
  1785  000016                     ___lmul@multiplier:
  1786                           	opt stack 0
  1787  000016                     ___lldiv@dividend:
  1788                           	opt stack 0
  1789                           
  1790                           ; 4 bytes @ 0x15
  1791  000016                     	ds	1
  1792  000017                     escreve_dado_SPI@data_to_shrc:
  1793                           	opt stack 0
  1794  000017                     sdc_disk_status@pdrv:
  1795                           	opt stack 0
  1796  000017                     delay@contador_int:
  1797                           	opt stack 0
  1798  000017                     disk_ioctl@buff:
  1799                           	opt stack 0
  1800                           
  1801                           ; 2 bytes @ 0x16
  1802  000017                     	ds	1
  1803  000018                     ??_dummy_clocks:
  1804  000018                     ??_disk_status:
  1805  000018                     recebe_dado_SPI@contador:
  1806                           	opt stack 0
  1807  000018                     escreve_cmd_lcd@comando:
  1808                           	opt stack 0
  1809  000018                     endereco_cursor_lcd@endereco:
  1810                           	opt stack 0
  1811  000018                     escreve_caractere_lcd@data:
  1812                           	opt stack 0
  1813  000018                     f_mount@drv:
  1814                           	opt stack 0
  1815  000018                     write_timer_zero@timer:
  1816                           	opt stack 0
  1817  000018                     ___wmul@multiplicand:
  1818                           	opt stack 0
  1819  000018                     ___awdiv@divisor:
  1820                           	opt stack 0
  1821  000018                     ___lwdiv@divisor:
  1822                           	opt stack 0
  1823  000018                     ___lwmod@divisor:
  1824                           	opt stack 0
  1825  000018                     memcmp@s2:
  1826                           	opt stack 0
  1827  000018                     memcpy@s1:
  1828                           	opt stack 0
  1829  000018                     memset@c:
  1830                           	opt stack 0
  1831  000018                     command@arg:
  1832                           	opt stack 0
  1833                           
  1834                           ; 4 bytes @ 0x17
  1835  000018                     	ds	1
  1836  000019                     ??_init_lcd:
  1837  000019                     disk_ioctl@pdrv:
  1838                           	opt stack 0
  1839  000019                     posicao_cursor_lcd@coluna:
  1840                           	opt stack 0
  1841  000019                     response@buff:
  1842                           	opt stack 0
  1843  000019                     disk_status@result:
  1844                           	opt stack 0
  1845  000019                     escreve_frase_ram_lcd@buffer:
  1846                           	opt stack 0
  1847                           
  1848                           ; 2 bytes @ 0x18
  1849  000019                     	ds	1
  1850  00001A                     disk_ioctl@res:
  1851                           	opt stack 0
  1852  00001A                     posicao_cursor_lcd@linha:
  1853                           	opt stack 0
  1854  00001A                     dummy_clocks@n:
  1855                           	opt stack 0
  1856  00001A                     ___awdiv@counter:
  1857                           	opt stack 0
  1858  00001A                     ___lwdiv@counter:
  1859                           	opt stack 0
  1860  00001A                     ___lwmod@counter:
  1861                           	opt stack 0
  1862  00001A                     ___wmul@product:
  1863                           	opt stack 0
  1864  00001A                     memcmp@n:
  1865                           	opt stack 0
  1866  00001A                     memcpy@n:
  1867                           	opt stack 0
  1868  00001A                     memset@n:
  1869                           	opt stack 0
  1870  00001A                     ___lmul@multiplicand:
  1871                           	opt stack 0
  1872  00001A                     ___lldiv@divisor:
  1873                           	opt stack 0
  1874  00001A                     get_fattime@f_time:
  1875                           	opt stack 0
  1876                           
  1877                           ; 9 bytes @ 0x19
  1878  00001A                     	ds	1
  1879  00001B                     disk_status@pdrv:
  1880                           	opt stack 0
  1881  00001B                     posicao_cursor_lcd@endereco:
  1882                           	opt stack 0
  1883  00001B                     ___awdiv@sign:
  1884                           	opt stack 0
  1885  00001B                     dummy_clocks@i:
  1886                           	opt stack 0
  1887  00001B                     ___lwdiv@quotient:
  1888                           	opt stack 0
  1889                           
  1890                           ; 2 bytes @ 0x1A
  1891  00001B                     	ds	1
  1892  00001C                     ??_memcmp:
  1893  00001C                     ??_mensagem_inicial:
  1894  00001C                     disk_status@stat:
  1895                           	opt stack 0
  1896  00001C                     command@CRC:
  1897                           	opt stack 0
  1898  00001C                     ___awdiv@quotient:
  1899                           	opt stack 0
  1900  00001C                     memcpy@d:
  1901                           	opt stack 0
  1902  00001C                     memset@p:
  1903                           	opt stack 0
  1904                           
  1905                           ; 2 bytes @ 0x1B
  1906  00001C                     	ds	1
  1907  00001D                     command@CMD:
  1908                           	opt stack 0
  1909  00001D                     validate@fs:
  1910                           	opt stack 0
  1911  00001D                     utoa@buf:
  1912                           	opt stack 0
  1913                           
  1914                           ; 2 bytes @ 0x1C
  1915  00001D                     	ds	1
  1916  00001E                     command@argument:
  1917                           	opt stack 0
  1918  00001E                     make_dirfile@path:
  1919                           	opt stack 0
  1920  00001E                     memcpy@s:
  1921                           	opt stack 0
  1922  00001E                     ___lmul@product:
  1923                           	opt stack 0
  1924  00001E                     ___lldiv@quotient:
  1925                           	opt stack 0
  1926                           
  1927                           ; 4 bytes @ 0x1D
  1928  00001E                     	ds	1
  1929  00001F                     sdc_disk_write@p_buff:
  1930                           	opt stack 0
  1931  00001F                     validate@id:
  1932                           	opt stack 0
  1933  00001F                     utoa@val:
  1934                           	opt stack 0
  1935                           
  1936                           ; 2 bytes @ 0x1E
  1937  00001F                     	ds	1
  1938  000020                     make_dirfile@dirname:
  1939                           	opt stack 0
  1940                           
  1941                           ; 2 bytes @ 0x1F
  1942  000020                     	ds	1
  1943  000021                     ??_validate:
  1944  000021                     utoa@base:
  1945                           	opt stack 0
  1946  000021                     sdc_disk_write@sector:
  1947                           	opt stack 0
  1948                           
  1949                           ; 4 bytes @ 0x20
  1950  000021                     	ds	1
  1951  000022                     ??_make_dirfile:
  1952  000022                     ?_clust2sect:
  1953                           	opt stack 0
  1954  000022                     ___lldiv@counter:
  1955                           	opt stack 0
  1956  000022                     clust2sect@clust:
  1957                           	opt stack 0
  1958                           
  1959                           ; 4 bytes @ 0x21
  1960  000022                     	ds	1
  1961  000023                     utoa@v:
  1962                           	opt stack 0
  1963                           
  1964                           ; 2 bytes @ 0x22
  1965  000023                     	ds	1
  1966  000024                     _make_dirfile$1201:
  1967                           	opt stack 0
  1968                           
  1969                           ; 2 bytes @ 0x23
  1970  000024                     	ds	1
  1971  000025                     sdc_disk_write@count:
  1972                           	opt stack 0
  1973  000025                     utoa@c:
  1974                           	opt stack 0
  1975                           
  1976                           ; 1 bytes @ 0x24
  1977  000025                     	ds	1
  1978  000026                     ??_sdc_disk_write:
  1979  000026                     ??_clust2sect:
  1980  000026                     make_dirfile@b:
  1981                           	opt stack 0
  1982  000026                     itoa@buf:
  1983                           	opt stack 0
  1984                           
  1985                           ; 2 bytes @ 0x25
  1986  000026                     	ds	1
  1987  000027                     make_dirfile@t:
  1988                           	opt stack 0
  1989                           
  1990                           ; 1 bytes @ 0x26
  1991  000027                     	ds	1
  1992  000028                     make_dirfile@a:
  1993                           	opt stack 0
  1994  000028                     itoa@val:
  1995                           	opt stack 0
  1996                           
  1997                           ; 2 bytes @ 0x27
  1998  000028                     	ds	1
  1999  000029                     make_dirfile@n:
  2000                           	opt stack 0
  2001  000029                     sdc_disk_write@i:
  2002                           	opt stack 0
  2003                           
  2004                           ; 2 bytes @ 0x28
  2005  000029                     	ds	1
  2006  00002A                     make_dirfile@c:
  2007                           	opt stack 0
  2008  00002A                     itoa@base:
  2009                           	opt stack 0
  2010                           
  2011                           ; 2 bytes @ 0x29
  2012  00002A                     	ds	1
  2013  00002B                     sdc_disk_write@count1:
  2014                           	opt stack 0
  2015  00002B                     clust2sect@fs:
  2016                           	opt stack 0
  2017                           
  2018                           ; 2 bytes @ 0x2A
  2019  00002B                     	ds	1
  2020  00002C                     itoa@cp:
  2021                           	opt stack 0
  2022                           
  2023                           ; 2 bytes @ 0x2B
  2024  00002C                     	ds	1
  2025  00002D                     sdc_disk_write@i_551:
  2026                           	opt stack 0
  2027                           
  2028                           ; 1 bytes @ 0x2C
  2029  00002D                     	ds	1
  2030  00002E                     sdc_disk_write@res:
  2031                           	opt stack 0
  2032  00002E                     escreve_inteiro_lcd@valor:
  2033                           	opt stack 0
  2034                           
  2035                           ; 2 bytes @ 0x2D
  2036  00002E                     	ds	1
  2037  00002F                     sdc_disk_write@buff:
  2038                           	opt stack 0
  2039                           
  2040                           ; 1 bytes @ 0x2E
  2041  00002F                     	ds	1
  2042  000030                     ??_sdc_disk_initialize:
  2043  000030                     ??_sdc_disk_read:
  2044  000030                     ??_disk_write:
  2045                           
  2046                           ; 1 bytes @ 0x2F
  2047  000030                     	ds	1
  2048  000031                     disk_initialize@pdrv:
  2049                           	opt stack 0
  2050  000031                     disk_write@pdrv:
  2051                           	opt stack 0
  2052                           
  2053                           ; 1 bytes @ 0x30
  2054  000031                     	ds	1
  2055  000032                     disk_initialize@stat:
  2056                           	opt stack 0
  2057  000032                     disk_write@result:
  2058                           	opt stack 0
  2059                           
  2060                           ; 2 bytes @ 0x31
  2061  000032                     	ds	2
  2062  000034                     ??_disk_read:
  2063  000034                     disk_write@res:
  2064                           	opt stack 0
  2065                           
  2066                           ; 1 bytes @ 0x33
  2067  000034                     	ds	1
  2068  000035                     f_close@res:
  2069                           	opt stack 0
  2070                           
  2071                           ; 1 bytes @ 0x34
  2072  000035                     	ds	1
  2073  000036                     tblptru	equ	0xFF8
  2074                           tblptrh	equ	0xFF7
  2075                           tblptrl	equ	0xFF6
  2076                           tablat	equ	0xFF5
  2077                           postinc0	equ	0xFEE
  2078                           wreg	equ	0xFE8
  2079                           postdec1	equ	0xFE5
  2080                           fsr1h	equ	0xFE2
  2081                           fsr1l	equ	0xFE1
  2082                           
  2083                           ; 1 bytes @ 0x35
  2084 ;;
  2085 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2086 ;;
  2087 ;; *************** function _main *****************
  2088 ;; Defined at:
  2089 ;;		line 207 in file "main.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;		None
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2103 ;;      Params:         0       0       0       0       0       0       0       0       0
  2104 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2106 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2107 ;;Total ram usage:        0 bytes
  2108 ;; Hardware stack levels required when called:   15
  2109 ;; This function calls:
  2110 ;;		_escalonador
  2111 ;;		_inicializa_shrc
  2112 ;;		_inicializa_tarefas
  2113 ;;		_init_hardware
  2114 ;;		_init_lcd
  2115 ;;		_mensagem_inicial
  2116 ;; This function is called by:
  2117 ;;		Startup code after reset
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text0
  2122  005384                     __ptext0:
  2123                           	opt stack 0
  2124  005384                     _main:
  2125                           	opt stack 16
  2126                           
  2127                           ;main.c: 209: init_hardware();
  2128                           
  2129                           ;incstack = 0
  2130  005384  EC37  F02A         	call	_init_hardware	;wreg free
  2131                           
  2132                           ;main.c: 211: init_lcd();
  2133  005388  EC2E  F024         	call	_init_lcd	;wreg free
  2134                           
  2135                           ;main.c: 212: inicializa_shrc();
  2136  00538C  EC7D  F02A         	call	_inicializa_shrc	;wreg free
  2137                           
  2138                           ;main.c: 214: mensagem_inicial();
  2139  005390  EC5C  F026         	call	_mensagem_inicial	;wreg free
  2140                           
  2141                           ;main.c: 215: inicializa_tarefas();;
  2142  005394  EC43  F029         	call	_inicializa_tarefas	;wreg free
  2143                           
  2144                           ;main.c: 217: ADCON1 = 0X0F;
  2145  005398  0E0F               	movlw	15
  2146  00539A  6EC1               	movwf	4033,c	;volatile
  2147  00539C                     l14040:
  2148                           
  2149                           ;main.c: 219: {
  2150                           ;main.c: 221: if ((sinaliza_int_timer == 1) && (2))
  2151  00539C  0440               	decf	_sinaliza_int_timer,w,c
  2152  00539E  A4D8               	btfss	status,2,c
  2153  0053A0  D7FD               	goto	l14040
  2154                           
  2155                           ;main.c: 222: {
  2156                           ;main.c: 223: sinaliza_int_timer = 0;
  2157  0053A2  0E00               	movlw	0
  2158  0053A4  6E40               	movwf	_sinaliza_int_timer,c
  2159                           
  2160                           ;main.c: 224: escalonador();
  2161  0053A6  EC83  F023         	call	_escalonador	;wreg free
  2162  0053AA  D7F8               	goto	l14040
  2163  0053AC                     __end_of_main:
  2164                           	opt stack 0
  2165                           tblptru	equ	0xFF8
  2166                           tblptrh	equ	0xFF7
  2167                           tblptrl	equ	0xFF6
  2168                           tablat	equ	0xFF5
  2169                           postinc0	equ	0xFEE
  2170                           wreg	equ	0xFE8
  2171                           postdec1	equ	0xFE5
  2172                           fsr1h	equ	0xFE2
  2173                           fsr1l	equ	0xFE1
  2174                           status	equ	0xFD8
  2175                           
  2176 ;; *************** function _mensagem_inicial *****************
  2177 ;; Defined at:
  2178 ;;		line 237 in file "main.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  msg_dois       17   17[BANK0 ] const unsigned char [17]
  2183 ;;  msg_linha_um   17    0[BANK0 ] const unsigned char [17]
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2193 ;;      Params:         0       0       0       0       0       0       0       0       0
  2194 ;;      Locals:         0      34       0       0       0       0       0       0       0
  2195 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2196 ;;      Totals:         2      34       0       0       0       0       0       0       0
  2197 ;;Total ram usage:       36 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    5
  2200 ;; This function calls:
  2201 ;;		_escreve_cmd_lcd
  2202 ;;		_escreve_frase_ram_lcd
  2203 ;;		_posicao_cursor_lcd
  2204 ;; This function is called by:
  2205 ;;		_main
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text1
  2210  004CB8                     __ptext1:
  2211                           	opt stack 0
  2212  004CB8                     _mensagem_inicial:
  2213                           	opt stack 25
  2214                           
  2215                           ;main.c: 239: const unsigned char msg_linha_um[17] = "SDCard Init   ";
  2216                           
  2217                           ;incstack = 0
  2218  004CB8  0EB0               	movlw	low mensagem_inicial@F4099
  2219  004CBA  6EF6               	movwf	tblptrl,c
  2220  004CBC                     	if	1	;There is more than 1 active tblptr byte
  2221  004CBC  0E60               	movlw	high mensagem_inicial@F4099
  2222  004CBE  6EF7               	movwf	tblptrh,c
  2223  004CC0                     	endif
  2224  004CC0                     	if	0	;There are less than 3 active tblptr bytes
  2225  004CC0                     	endif
  2226  004CC0  EE20  F060         	lfsr	2,mensagem_inicial@msg_linha_um
  2227  004CC4  0E10               	movlw	16
  2228  004CC6                     u14430:
  2229  004CC6  0009               	tblrd		*+
  2230  004CC8  CFF5 FFDE          	movff	tablat,postinc2
  2231  004CCC  06E8               	decf	wreg,f,c
  2232  004CCE  E2FB               	bc	u14430
  2233                           
  2234                           ;main.c: 240: const unsigned char msg_dois[17] = " 18/01/2022   ";
  2235  004CD0  0E9F               	movlw	low mensagem_inicial@F4101
  2236  004CD2  6EF6               	movwf	tblptrl,c
  2237  004CD4                     	if	1	;There is more than 1 active tblptr byte
  2238  004CD4  0E60               	movlw	high mensagem_inicial@F4101
  2239  004CD6  6EF7               	movwf	tblptrh,c
  2240  004CD8                     	endif
  2241  004CD8                     	if	0	;There are less than 3 active tblptr bytes
  2242  004CD8                     	endif
  2243  004CD8  EE20  F071         	lfsr	2,mensagem_inicial@msg_dois
  2244  004CDC  0E10               	movlw	16
  2245  004CDE                     u14440:
  2246  004CDE  0009               	tblrd		*+
  2247  004CE0  CFF5 FFDE          	movff	tablat,postinc2
  2248  004CE4  06E8               	decf	wreg,f,c
  2249  004CE6  E2FB               	bc	u14440
  2250                           
  2251                           ;main.c: 242: posicao_cursor_lcd(1,0);
  2252  004CE8  0E00               	movlw	0
  2253  004CEA  6E19               	movwf	posicao_cursor_lcd@coluna,c
  2254  004CEC  0E01               	movlw	1
  2255  004CEE  ECD2  F026         	call	_posicao_cursor_lcd
  2256                           
  2257                           ;main.c: 243: escreve_frase_ram_lcd(msg_linha_um);
  2258  004CF2  0E60               	movlw	low mensagem_inicial@msg_linha_um
  2259  004CF4  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  2260  004CF6  0E00               	movlw	high mensagem_inicial@msg_linha_um
  2261  004CF8  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  2262  004CFA  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
  2263                           
  2264                           ;main.c: 245: posicao_cursor_lcd(2,0);
  2265  004CFE  0E00               	movlw	0
  2266  004D00  6E19               	movwf	posicao_cursor_lcd@coluna,c
  2267  004D02  0E02               	movlw	2
  2268  004D04  ECD2  F026         	call	_posicao_cursor_lcd
  2269                           
  2270                           ;main.c: 246: escreve_frase_ram_lcd(msg_dois);
  2271  004D08  0E71               	movlw	low mensagem_inicial@msg_dois
  2272  004D0A  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  2273  004D0C  0E00               	movlw	high mensagem_inicial@msg_dois
  2274  004D0E  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  2275  004D10  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
  2276                           
  2277                           ;main.c: 247: _delay((unsigned long)((1000)*(48000000/4000.0)));
  2278  004D14  0E3D               	movlw	61
  2279  004D16  6E1D               	movwf	(??_mensagem_inicial+1)& (0+255),c
  2280  004D18  0EE1               	movlw	225
  2281  004D1A  6E1C               	movwf	??_mensagem_inicial& (0+255),c
  2282  004D1C  0E40               	movlw	64
  2283  004D1E                     u16677:
  2284  004D1E  2EE8               	decfsz	wreg,f,c
  2285  004D20  D7FE               	bra	u16677
  2286  004D22  2E1C               	decfsz	??_mensagem_inicial& (0+255),f,c
  2287  004D24  D7FC               	bra	u16677
  2288  004D26  2E1D               	decfsz	(??_mensagem_inicial+1)& (0+255),f,c
  2289  004D28  D7FA               	bra	u16677
  2290                           
  2291                           ;main.c: 248: escreve_cmd_lcd(0b00000001);
  2292  004D2A  0E01               	movlw	1
  2293  004D2C  EC16  F025         	call	_escreve_cmd_lcd
  2294  004D30  0012               	return		;funcret
  2295  004D32                     __end_of_mensagem_inicial:
  2296                           	opt stack 0
  2297                           tblptru	equ	0xFF8
  2298                           tblptrh	equ	0xFF7
  2299                           tblptrl	equ	0xFF6
  2300                           tablat	equ	0xFF5
  2301                           postinc0	equ	0xFEE
  2302                           wreg	equ	0xFE8
  2303                           postdec1	equ	0xFE5
  2304                           fsr1h	equ	0xFE2
  2305                           fsr1l	equ	0xFE1
  2306                           postinc2	equ	0xFDE
  2307                           status	equ	0xFD8
  2308                           
  2309 ;; *************** function _init_lcd *****************
  2310 ;; Defined at:
  2311 ;;		line 71 in file "bibliotecas/display_lcd.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;		None
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;		None
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		wreg, status,2, status,0, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2325 ;;      Params:         0       0       0       0       0       0       0       0       0
  2326 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2327 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2328 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2329 ;;Total ram usage:        1 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    4
  2332 ;; This function calls:
  2333 ;;		_delay
  2334 ;;		_escreve_cmd_lcd
  2335 ;; This function is called by:
  2336 ;;		_main
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           	psect	text2
  2341  00485C                     __ptext2:
  2342                           	opt stack 0
  2343  00485C                     _init_lcd:
  2344                           	opt stack 26
  2345                           
  2346                           ;display_lcd.c: 74: TRISDbits.RD2 = 0;
  2347                           
  2348                           ;incstack = 0
  2349  00485C  9495               	bcf	3989,2,c	;volatile
  2350                           
  2351                           ;display_lcd.c: 75: TRISDbits.RD1 = 0;
  2352  00485E  9295               	bcf	3989,1,c	;volatile
  2353                           
  2354                           ;display_lcd.c: 76: TRISDbits.RD0 = 0;
  2355  004860  9095               	bcf	3989,0,c	;volatile
  2356                           
  2357                           ;display_lcd.c: 79: TRISDbits.RD4=0;
  2358  004862  9895               	bcf	3989,4,c	;volatile
  2359                           
  2360                           ;display_lcd.c: 80: TRISDbits.RD5=0;
  2361  004864  9A95               	bcf	3989,5,c	;volatile
  2362                           
  2363                           ;display_lcd.c: 81: TRISDbits.RD6=0;
  2364  004866  9C95               	bcf	3989,6,c	;volatile
  2365                           
  2366                           ;display_lcd.c: 82: TRISDbits.RD7=0;
  2367  004868  9E95               	bcf	3989,7,c	;volatile
  2368                           
  2369                           ;display_lcd.c: 89: PORTDbits.RD2 = 0;
  2370  00486A  9483               	bcf	3971,2,c	;volatile
  2371                           
  2372                           ;display_lcd.c: 90: PORTDbits.RD1 = 0;
  2373  00486C  9283               	bcf	3971,1,c	;volatile
  2374                           
  2375                           ;display_lcd.c: 91: PORTDbits.RD0 = 0;
  2376  00486E  9083               	bcf	3971,0,c	;volatile
  2377                           
  2378                           ;display_lcd.c: 95: PORTDbits.RD7=0;
  2379  004870  9E83               	bcf	3971,7,c	;volatile
  2380                           
  2381                           ;display_lcd.c: 96: PORTDbits.RD6=0;
  2382  004872  9C83               	bcf	3971,6,c	;volatile
  2383                           
  2384                           ;display_lcd.c: 97: PORTDbits.RD5=1;
  2385  004874  8A83               	bsf	3971,5,c	;volatile
  2386                           
  2387                           ;display_lcd.c: 98: PORTDbits.RD4=1;
  2388  004876  8883               	bsf	3971,4,c	;volatile
  2389                           
  2390                           ;display_lcd.c: 103: _delay((unsigned long)((15)*(48000000/4000.0)));
  2391  004878  0EEA               	movlw	234
  2392  00487A  6E19               	movwf	??_init_lcd& (0+255),c
  2393  00487C  0EC3               	movlw	195
  2394  00487E                     u16687:
  2395  00487E  2EE8               	decfsz	wreg,f,c
  2396  004880  D7FE               	bra	u16687
  2397  004882  2E19               	decfsz	??_init_lcd& (0+255),f,c
  2398  004884  D7FC               	bra	u16687
  2399  004886  F000               	nop	
  2400                           
  2401                           ;display_lcd.c: 107: PORTDbits.RD0 = 1;
  2402  004888  8083               	bsf	3971,0,c	;volatile
  2403                           
  2404                           ;display_lcd.c: 108: delay();
  2405  00488A  ECFD  F029         	call	_delay	;wreg free
  2406                           
  2407                           ;display_lcd.c: 109: PORTDbits.RD0 = 0;
  2408  00488E  9083               	bcf	3971,0,c	;volatile
  2409                           
  2410                           ;display_lcd.c: 110: delay();
  2411  004890  ECFD  F029         	call	_delay	;wreg free
  2412                           
  2413                           ;display_lcd.c: 115: _delay((unsigned long)((5)*(48000000/4000.0)));
  2414  004894  0E4E               	movlw	78
  2415  004896  6E19               	movwf	??_init_lcd& (0+255),c
  2416  004898  0EEB               	movlw	235
  2417  00489A                     u16697:
  2418  00489A  2EE8               	decfsz	wreg,f,c
  2419  00489C  D7FE               	bra	u16697
  2420  00489E  2E19               	decfsz	??_init_lcd& (0+255),f,c
  2421  0048A0  D7FC               	bra	u16697
  2422  0048A2  F000               	nop	
  2423                           
  2424                           ;display_lcd.c: 118: PORTDbits.RD0 = 1;
  2425  0048A4  8083               	bsf	3971,0,c	;volatile
  2426                           
  2427                           ;display_lcd.c: 119: delay();
  2428  0048A6  ECFD  F029         	call	_delay	;wreg free
  2429                           
  2430                           ;display_lcd.c: 120: PORTDbits.RD0 = 0;
  2431  0048AA  9083               	bcf	3971,0,c	;volatile
  2432                           
  2433                           ;display_lcd.c: 121: delay();
  2434  0048AC  ECFD  F029         	call	_delay	;wreg free
  2435                           
  2436                           ;display_lcd.c: 126: _delay((unsigned long)((5)*(48000000/4000.0)));
  2437  0048B0  0E4E               	movlw	78
  2438  0048B2  6E19               	movwf	??_init_lcd& (0+255),c
  2439  0048B4  0EEB               	movlw	235
  2440  0048B6                     u16707:
  2441  0048B6  2EE8               	decfsz	wreg,f,c
  2442  0048B8  D7FE               	bra	u16707
  2443  0048BA  2E19               	decfsz	??_init_lcd& (0+255),f,c
  2444  0048BC  D7FC               	bra	u16707
  2445  0048BE  F000               	nop	
  2446                           
  2447                           ;display_lcd.c: 129: PORTDbits.RD0 = 1;
  2448  0048C0  8083               	bsf	3971,0,c	;volatile
  2449                           
  2450                           ;display_lcd.c: 130: delay();
  2451  0048C2  ECFD  F029         	call	_delay	;wreg free
  2452                           
  2453                           ;display_lcd.c: 131: PORTDbits.RD0 = 0;
  2454  0048C6  9083               	bcf	3971,0,c	;volatile
  2455                           
  2456                           ;display_lcd.c: 132: delay();
  2457  0048C8  ECFD  F029         	call	_delay	;wreg free
  2458                           
  2459                           ;display_lcd.c: 135: PORTDbits.RD7=0;
  2460  0048CC  9E83               	bcf	3971,7,c	;volatile
  2461                           
  2462                           ;display_lcd.c: 136: PORTDbits.RD6=0;
  2463  0048CE  9C83               	bcf	3971,6,c	;volatile
  2464                           
  2465                           ;display_lcd.c: 137: PORTDbits.RD5=1;
  2466  0048D0  8A83               	bsf	3971,5,c	;volatile
  2467                           
  2468                           ;display_lcd.c: 138: PORTDbits.RD4=0;
  2469  0048D2  9883               	bcf	3971,4,c	;volatile
  2470                           
  2471                           ;display_lcd.c: 142: PORTDbits.RD0 = 1;
  2472  0048D4  8083               	bsf	3971,0,c	;volatile
  2473                           
  2474                           ;display_lcd.c: 143: delay();
  2475  0048D6  ECFD  F029         	call	_delay	;wreg free
  2476                           
  2477                           ;display_lcd.c: 144: PORTDbits.RD0 = 0;
  2478  0048DA  9083               	bcf	3971,0,c	;volatile
  2479                           
  2480                           ;display_lcd.c: 145: delay();
  2481  0048DC  ECFD  F029         	call	_delay	;wreg free
  2482                           
  2483                           ;display_lcd.c: 149: escreve_cmd_lcd(0b00101000);
  2484  0048E0  0E28               	movlw	40
  2485  0048E2  EC16  F025         	call	_escreve_cmd_lcd
  2486                           
  2487                           ;display_lcd.c: 150: escreve_cmd_lcd(0b00000110);
  2488  0048E6  0E06               	movlw	6
  2489  0048E8  EC16  F025         	call	_escreve_cmd_lcd
  2490                           
  2491                           ;display_lcd.c: 151: escreve_cmd_lcd(0b00001110);
  2492  0048EC  0E0E               	movlw	14
  2493  0048EE  EC16  F025         	call	_escreve_cmd_lcd
  2494                           
  2495                           ;display_lcd.c: 152: escreve_cmd_lcd(0b00000001);
  2496  0048F2  0E01               	movlw	1
  2497  0048F4  EC16  F025         	call	_escreve_cmd_lcd
  2498  0048F8  0012               	return		;funcret
  2499  0048FA                     __end_of_init_lcd:
  2500                           	opt stack 0
  2501                           tblptru	equ	0xFF8
  2502                           tblptrh	equ	0xFF7
  2503                           tblptrl	equ	0xFF6
  2504                           tablat	equ	0xFF5
  2505                           postinc0	equ	0xFEE
  2506                           wreg	equ	0xFE8
  2507                           postdec1	equ	0xFE5
  2508                           fsr1h	equ	0xFE2
  2509                           fsr1l	equ	0xFE1
  2510                           postinc2	equ	0xFDE
  2511                           status	equ	0xFD8
  2512                           
  2513 ;; *************** function _escreve_cmd_lcd *****************
  2514 ;; Defined at:
  2515 ;;		line 162 in file "bibliotecas/display_lcd.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  comando         1    wreg     unsigned char 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  comando         1   23[COMRAM] unsigned char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2529 ;;      Params:         0       0       0       0       0       0       0       0       0
  2530 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2532 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2533 ;;Total ram usage:        1 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; Hardware stack levels required when called:    3
  2536 ;; This function calls:
  2537 ;;		_delay
  2538 ;; This function is called by:
  2539 ;;		_init_lcd
  2540 ;;		_mensagem_inicial
  2541 ;;		_gps
  2542 ;;		_cria_caractere_lcd
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           	psect	text3
  2547  004A2C                     __ptext3:
  2548                           	opt stack 0
  2549  004A2C                     _escreve_cmd_lcd:
  2550                           	opt stack 26
  2551                           
  2552                           ;incstack = 0
  2553                           ;escreve_cmd_lcd@comando stored from wreg
  2554  004A2C  6E18               	movwf	escreve_cmd_lcd@comando,c
  2555                           
  2556                           ;display_lcd.c: 165: PORTDbits.RD2 = 0;
  2557  004A2E  9483               	bcf	3971,2,c	;volatile
  2558                           
  2559                           ;display_lcd.c: 166: PORTDbits.RD1 = 0;
  2560  004A30  9283               	bcf	3971,1,c	;volatile
  2561                           
  2562                           ;display_lcd.c: 167: PORTDbits.RD0 = 0;
  2563  004A32  9083               	bcf	3971,0,c	;volatile
  2564                           
  2565                           ;display_lcd.c: 170: if(comando&0b00010000){PORTDbits.RD4=1;}
  2566  004A34  A818               	btfss	escreve_cmd_lcd@comando,4,c
  2567  004A36  D002               	goto	l321
  2568  004A38  8883               	bsf	3971,4,c	;volatile
  2569  004A3A  D001               	goto	l12434
  2570  004A3C                     l321:
  2571                           
  2572                           ;display_lcd.c: 171: else {PORTDbits.RD4=0;}
  2573  004A3C  9883               	bcf	3971,4,c	;volatile
  2574  004A3E                     l12434:
  2575                           
  2576                           ;display_lcd.c: 172: if(comando&0b00100000){PORTDbits.RD5=1;}
  2577  004A3E  AA18               	btfss	escreve_cmd_lcd@comando,5,c
  2578  004A40  D002               	goto	l323
  2579  004A42  8A83               	bsf	3971,5,c	;volatile
  2580  004A44  D001               	goto	l12438
  2581  004A46                     l323:
  2582                           
  2583                           ;display_lcd.c: 173: else {PORTDbits.RD5=0;}
  2584  004A46  9A83               	bcf	3971,5,c	;volatile
  2585  004A48                     l12438:
  2586                           
  2587                           ;display_lcd.c: 174: if(comando&0b01000000){PORTDbits.RD6=1;}
  2588  004A48  AC18               	btfss	escreve_cmd_lcd@comando,6,c
  2589  004A4A  D002               	goto	l325
  2590  004A4C  8C83               	bsf	3971,6,c	;volatile
  2591  004A4E  D001               	goto	l12442
  2592  004A50                     l325:
  2593                           
  2594                           ;display_lcd.c: 175: else {PORTDbits.RD6=0;}
  2595  004A50  9C83               	bcf	3971,6,c	;volatile
  2596  004A52                     l12442:
  2597                           
  2598                           ;display_lcd.c: 176: if(comando&0b10000000){PORTDbits.RD7=1;}
  2599  004A52  AE18               	btfss	escreve_cmd_lcd@comando,7,c
  2600  004A54  D002               	goto	l327
  2601  004A56  8E83               	bsf	3971,7,c	;volatile
  2602  004A58  D001               	goto	l328
  2603  004A5A                     l327:
  2604                           
  2605                           ;display_lcd.c: 177: else {PORTDbits.RD7=0;}
  2606  004A5A  9E83               	bcf	3971,7,c	;volatile
  2607  004A5C                     l328:
  2608                           
  2609                           ;display_lcd.c: 180: PORTDbits.RD0 = 1;
  2610  004A5C  8083               	bsf	3971,0,c	;volatile
  2611                           
  2612                           ;display_lcd.c: 181: delay();
  2613  004A5E  ECFD  F029         	call	_delay	;wreg free
  2614                           
  2615                           ;display_lcd.c: 182: PORTDbits.RD0 = 0;
  2616  004A62  9083               	bcf	3971,0,c	;volatile
  2617                           
  2618                           ;display_lcd.c: 183: delay();
  2619  004A64  ECFD  F029         	call	_delay	;wreg free
  2620                           
  2621                           ;display_lcd.c: 186: if(comando&0b00000001){PORTDbits.RD4=1;}
  2622  004A68  A018               	btfss	escreve_cmd_lcd@comando,0,c
  2623  004A6A  D002               	goto	l329
  2624  004A6C  8883               	bsf	3971,4,c	;volatile
  2625  004A6E  D001               	goto	l330
  2626  004A70                     l329:
  2627                           
  2628                           ;display_lcd.c: 187: else {PORTDbits.RD4=0;}
  2629  004A70  9883               	bcf	3971,4,c	;volatile
  2630  004A72                     l330:
  2631                           
  2632                           ;display_lcd.c: 188: if(comando&0b00000010){PORTDbits.RD5=1;}
  2633  004A72  A218               	btfss	escreve_cmd_lcd@comando,1,c
  2634  004A74  D002               	goto	l331
  2635  004A76  8A83               	bsf	3971,5,c	;volatile
  2636  004A78  D001               	goto	l332
  2637  004A7A                     l331:
  2638                           
  2639                           ;display_lcd.c: 189: else {PORTDbits.RD5=0;}
  2640  004A7A  9A83               	bcf	3971,5,c	;volatile
  2641  004A7C                     l332:
  2642                           
  2643                           ;display_lcd.c: 190: if(comando&0b00000100){PORTDbits.RD6=1;}
  2644  004A7C  A418               	btfss	escreve_cmd_lcd@comando,2,c
  2645  004A7E  D002               	goto	l333
  2646  004A80  8C83               	bsf	3971,6,c	;volatile
  2647  004A82  D001               	goto	l334
  2648  004A84                     l333:
  2649                           
  2650                           ;display_lcd.c: 191: else {PORTDbits.RD6=0;}
  2651  004A84  9C83               	bcf	3971,6,c	;volatile
  2652  004A86                     l334:
  2653                           
  2654                           ;display_lcd.c: 192: if(comando&0b00001000){PORTDbits.RD7=1;}
  2655  004A86  A618               	btfss	escreve_cmd_lcd@comando,3,c
  2656  004A88  D002               	goto	l335
  2657  004A8A  8E83               	bsf	3971,7,c	;volatile
  2658  004A8C  D001               	goto	l336
  2659  004A8E                     l335:
  2660                           
  2661                           ;display_lcd.c: 193: else {PORTDbits.RD7=0;}
  2662  004A8E  9E83               	bcf	3971,7,c	;volatile
  2663  004A90                     l336:
  2664                           
  2665                           ;display_lcd.c: 196: PORTDbits.RD0 = 1;
  2666  004A90  8083               	bsf	3971,0,c	;volatile
  2667                           
  2668                           ;display_lcd.c: 197: delay();
  2669  004A92  ECFD  F029         	call	_delay	;wreg free
  2670                           
  2671                           ;display_lcd.c: 198: PORTDbits.RD0 = 0;
  2672  004A96  9083               	bcf	3971,0,c	;volatile
  2673                           
  2674                           ;display_lcd.c: 199: delay();
  2675  004A98  ECFD  F029         	call	_delay	;wreg free
  2676                           
  2677                           ;display_lcd.c: 204: if (comando==0x01 || comando==0x02 || comando==0x03)
  2678  004A9C  0418               	decf	escreve_cmd_lcd@comando,w,c
  2679  004A9E  B4D8               	btfsc	status,2,c
  2680  004AA0  D008               	goto	l12470
  2681  004AA2  0E02               	movlw	2
  2682  004AA4  1818               	xorwf	escreve_cmd_lcd@comando,w,c
  2683  004AA6  B4D8               	btfsc	status,2,c
  2684  004AA8  D004               	goto	l12470
  2685  004AAA  0E03               	movlw	3
  2686  004AAC  1818               	xorwf	escreve_cmd_lcd@comando,w,c
  2687  004AAE  A4D8               	btfss	status,2,c
  2688  004AB0  0012               	return	
  2689  004AB2                     l12470:
  2690                           
  2691                           ;display_lcd.c: 205: { delay(); }
  2692  004AB2  ECFD  F029         	call	_delay	;wreg free
  2693  004AB6  0012               	return	
  2694  004AB8                     __end_of_escreve_cmd_lcd:
  2695                           	opt stack 0
  2696                           tblptru	equ	0xFF8
  2697                           tblptrh	equ	0xFF7
  2698                           tblptrl	equ	0xFF6
  2699                           tablat	equ	0xFF5
  2700                           postinc0	equ	0xFEE
  2701                           wreg	equ	0xFE8
  2702                           postdec1	equ	0xFE5
  2703                           fsr1h	equ	0xFE2
  2704                           fsr1l	equ	0xFE1
  2705                           postinc2	equ	0xFDE
  2706                           status	equ	0xFD8
  2707                           
  2708 ;; *************** function _init_hardware *****************
  2709 ;; Defined at:
  2710 ;;		line 55 in file "bibliotecas/hardware.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;		None
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2724 ;;      Params:         0       0       0       0       0       0       0       0       0
  2725 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2727 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2728 ;;Total ram usage:        0 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    4
  2731 ;; This function calls:
  2732 ;;		_config_timer_dois
  2733 ;;		_config_timer_zero
  2734 ;;		_init_interrupt
  2735 ;;		_init_oscilador
  2736 ;;		_init_ports
  2737 ;; This function is called by:
  2738 ;;		_main
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           	psect	text4
  2743  00546E                     __ptext4:
  2744                           	opt stack 0
  2745  00546E                     _init_hardware:
  2746                           	opt stack 26
  2747                           
  2748                           ;hardware.c: 58: init_oscilador();
  2749                           
  2750                           ;incstack = 0
  2751  00546E  EC89  F02A         	call	_init_oscilador	;wreg free
  2752                           
  2753                           ;hardware.c: 61: init_ports();
  2754  005472  EC2B  F02A         	call	_init_ports	;wreg free
  2755                           
  2756                           ;hardware.c: 64: config_timer_zero();
  2757  005476  EC1E  F02A         	call	_config_timer_zero	;wreg free
  2758                           
  2759                           ;hardware.c: 67: config_timer_dois();
  2760  00547A  EC77  F02A         	call	_config_timer_dois	;wreg free
  2761                           
  2762                           ;hardware.c: 70: init_interrupt();
  2763  00547E  EC4C  F02A         	call	_init_interrupt	;wreg free
  2764  005482  0012               	return		;funcret
  2765  005484                     __end_of_init_hardware:
  2766                           	opt stack 0
  2767                           tblptru	equ	0xFF8
  2768                           tblptrh	equ	0xFF7
  2769                           tblptrl	equ	0xFF6
  2770                           tablat	equ	0xFF5
  2771                           postinc0	equ	0xFEE
  2772                           wreg	equ	0xFE8
  2773                           postdec1	equ	0xFE5
  2774                           fsr1h	equ	0xFE2
  2775                           fsr1l	equ	0xFE1
  2776                           postinc2	equ	0xFDE
  2777                           status	equ	0xFD8
  2778                           
  2779 ;; *************** function _init_ports *****************
  2780 ;; Defined at:
  2781 ;;		line 154 in file "bibliotecas/hardware.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;		None
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg, status,2
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2795 ;;      Params:         0       0       0       0       0       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2797 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2798 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2799 ;;Total ram usage:        0 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; Hardware stack levels required when called:    2
  2802 ;; This function calls:
  2803 ;;		Nothing
  2804 ;; This function is called by:
  2805 ;;		_init_hardware
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text5
  2810  005456                     __ptext5:
  2811                           	opt stack 0
  2812  005456                     _init_ports:
  2813                           	opt stack 27
  2814                           
  2815                           ;hardware.c: 156: TRISB = 0b00100001;
  2816                           
  2817                           ;incstack = 0
  2818  005456  0E21               	movlw	33
  2819  005458  6E93               	movwf	3987,c	;volatile
  2820                           
  2821                           ;hardware.c: 157: LATB = 0xFF;
  2822  00545A  688A               	setf	3978,c	;volatile
  2823                           
  2824                           ;hardware.c: 158: TRISD = 0x00;
  2825  00545C  0E00               	movlw	0
  2826  00545E  6E95               	movwf	3989,c	;volatile
  2827                           
  2828                           ;hardware.c: 159: TRISA = 0b00000111;
  2829  005460  0E07               	movlw	7
  2830  005462  6E92               	movwf	3986,c	;volatile
  2831                           
  2832                           ;hardware.c: 160: TRISC = 0x01111111;
  2833  005464  0E11               	movlw	17
  2834  005466  6E94               	movwf	3988,c	;volatile
  2835                           
  2836                           ;hardware.c: 161: TRISE = 0b00000011;
  2837  005468  0E03               	movlw	3
  2838  00546A  6E96               	movwf	3990,c	;volatile
  2839  00546C  0012               	return		;funcret
  2840  00546E                     __end_of_init_ports:
  2841                           	opt stack 0
  2842                           tblptru	equ	0xFF8
  2843                           tblptrh	equ	0xFF7
  2844                           tblptrl	equ	0xFF6
  2845                           tablat	equ	0xFF5
  2846                           postinc0	equ	0xFEE
  2847                           wreg	equ	0xFE8
  2848                           postdec1	equ	0xFE5
  2849                           fsr1h	equ	0xFE2
  2850                           fsr1l	equ	0xFE1
  2851                           postinc2	equ	0xFDE
  2852                           status	equ	0xFD8
  2853                           
  2854 ;; *************** function _init_oscilador *****************
  2855 ;; Defined at:
  2856 ;;		line 171 in file "bibliotecas/hardware.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;		None
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;		None
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      void 
  2863 ;; Registers used:
  2864 ;;		None
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2870 ;;      Params:         0       0       0       0       0       0       0       0       0
  2871 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2872 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2873 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2874 ;;Total ram usage:        0 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:    2
  2877 ;; This function calls:
  2878 ;;		Nothing
  2879 ;; This function is called by:
  2880 ;;		_init_hardware
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text6
  2885  005512                     __ptext6:
  2886                           	opt stack 0
  2887  005512                     _init_oscilador:
  2888                           	opt stack 27
  2889                           
  2890                           ;hardware.c: 174: OSCCONbits.IRCF0 = 1;
  2891                           
  2892                           ;incstack = 0
  2893  005512  88D3               	bsf	4051,4,c	;volatile
  2894                           
  2895                           ;hardware.c: 175: OSCCONbits.IRCF1 = 1;
  2896  005514  8AD3               	bsf	4051,5,c	;volatile
  2897                           
  2898                           ;hardware.c: 176: OSCCONbits.IRCF2 = 1;
  2899  005516  8CD3               	bsf	4051,6,c	;volatile
  2900  005518  0012               	return		;funcret
  2901  00551A                     __end_of_init_oscilador:
  2902                           	opt stack 0
  2903                           tblptru	equ	0xFF8
  2904                           tblptrh	equ	0xFF7
  2905                           tblptrl	equ	0xFF6
  2906                           tablat	equ	0xFF5
  2907                           postinc0	equ	0xFEE
  2908                           wreg	equ	0xFE8
  2909                           postdec1	equ	0xFE5
  2910                           fsr1h	equ	0xFE2
  2911                           fsr1l	equ	0xFE1
  2912                           postinc2	equ	0xFDE
  2913                           status	equ	0xFD8
  2914                           
  2915 ;; *************** function _init_interrupt *****************
  2916 ;; Defined at:
  2917 ;;		line 98 in file "bibliotecas/hardware.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;		None
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;		None
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		wreg, status,2
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2931 ;;      Params:         0       0       0       0       0       0       0       0       0
  2932 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2933 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2934 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2935 ;;Total ram usage:        0 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:    2
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_init_hardware
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           	psect	text7
  2946  005498                     __ptext7:
  2947                           	opt stack 0
  2948  005498                     _init_interrupt:
  2949                           	opt stack 27
  2950                           
  2951                           ;hardware.c: 100: INTCON = 0b11110000;
  2952                           
  2953                           ;incstack = 0
  2954  005498  0EF0               	movlw	240
  2955  00549A  6EF2               	movwf	intcon,c	;volatile
  2956                           
  2957                           ;hardware.c: 101: INTCON2 = 0b00000000;
  2958  00549C  0E00               	movlw	0
  2959  00549E  6EF1               	movwf	intcon2,c	;volatile
  2960                           
  2961                           ;hardware.c: 102: INTCON3 = 0b00000000;
  2962  0054A0  0E00               	movlw	0
  2963  0054A2  6EF0               	movwf	intcon3,c	;volatile
  2964                           
  2965                           ;hardware.c: 104: PIE1 = 0b00100000;
  2966  0054A4  0E20               	movlw	32
  2967  0054A6  6E9D               	movwf	3997,c	;volatile
  2968  0054A8  0012               	return		;funcret
  2969  0054AA                     __end_of_init_interrupt:
  2970                           	opt stack 0
  2971                           tblptru	equ	0xFF8
  2972                           tblptrh	equ	0xFF7
  2973                           tblptrl	equ	0xFF6
  2974                           tablat	equ	0xFF5
  2975                           intcon	equ	0xFF2
  2976                           intcon2	equ	0xFF1
  2977                           intcon3	equ	0xFF0
  2978                           postinc0	equ	0xFEE
  2979                           wreg	equ	0xFE8
  2980                           postdec1	equ	0xFE5
  2981                           fsr1h	equ	0xFE2
  2982                           fsr1l	equ	0xFE1
  2983                           postinc2	equ	0xFDE
  2984                           status	equ	0xFD8
  2985                           
  2986 ;; *************** function _config_timer_zero *****************
  2987 ;; Defined at:
  2988 ;;		line 83 in file "bibliotecas/hardware.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;		None
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;		None
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  1    wreg      void 
  2995 ;; Registers used:
  2996 ;;		wreg, status,2, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3002 ;;      Params:         0       0       0       0       0       0       0       0       0
  3003 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3004 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3005 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3006 ;;Total ram usage:        0 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; Hardware stack levels required when called:    3
  3009 ;; This function calls:
  3010 ;;		_write_timer_zero
  3011 ;; This function is called by:
  3012 ;;		_init_hardware
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           	psect	text8
  3017  00543C                     __ptext8:
  3018                           	opt stack 0
  3019  00543C                     _config_timer_zero:
  3020                           	opt stack 26
  3021                           
  3022                           ;hardware.c: 85: T0CON = 0b11000011;
  3023                           
  3024                           ;incstack = 0
  3025  00543C  0EC3               	movlw	195
  3026  00543E  6ED5               	movwf	4053,c	;volatile
  3027                           
  3028                           ;hardware.c: 86: SPPCON = 0b00000000;
  3029  005440  0E00               	movlw	0
  3030  005442  6E65               	movwf	3941,c	;volatile
  3031                           
  3032                           ;hardware.c: 87: SPPCFG = 0b00000000;
  3033  005444  0E00               	movlw	0
  3034  005446  6E63               	movwf	3939,c	;volatile
  3035                           
  3036                           ;hardware.c: 88: write_timer_zero(0x0083);
  3037  005448  0E00               	movlw	0
  3038  00544A  6E17               	movwf	write_timer_zero@timer0+1,c
  3039  00544C  0E83               	movlw	131
  3040  00544E  6E16               	movwf	write_timer_zero@timer0,c
  3041  005450  EC55  F02A         	call	_write_timer_zero	;wreg free
  3042  005454  0012               	return		;funcret
  3043  005456                     __end_of_config_timer_zero:
  3044                           	opt stack 0
  3045                           tblptru	equ	0xFF8
  3046                           tblptrh	equ	0xFF7
  3047                           tblptrl	equ	0xFF6
  3048                           tablat	equ	0xFF5
  3049                           intcon	equ	0xFF2
  3050                           intcon2	equ	0xFF1
  3051                           intcon3	equ	0xFF0
  3052                           postinc0	equ	0xFEE
  3053                           wreg	equ	0xFE8
  3054                           postdec1	equ	0xFE5
  3055                           fsr1h	equ	0xFE2
  3056                           fsr1l	equ	0xFE1
  3057                           postinc2	equ	0xFDE
  3058                           status	equ	0xFD8
  3059                           
  3060 ;; *************** function _write_timer_zero *****************
  3061 ;; Defined at:
  3062 ;;		line 138 in file "bibliotecas/hardware.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  timer0          2   21[COMRAM] unsigned int 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  timer           2   23[COMRAM] struct Timers
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		None
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3076 ;;      Params:         2       0       0       0       0       0       0       0       0
  3077 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3078 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3079 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3080 ;;Total ram usage:        4 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    2
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_config_timer_zero
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text9
  3091  0054AA                     __ptext9:
  3092                           	opt stack 0
  3093  0054AA                     _write_timer_zero:
  3094                           	opt stack 26
  3095                           
  3096                           ;hardware.c: 140: union Timers timer;
  3097                           ;hardware.c: 142: timer.lt = timer0;
  3098                           
  3099                           ;incstack = 0
  3100  0054AA  C016  F018         	movff	write_timer_zero@timer0,write_timer_zero@timer
  3101  0054AE  C017  F019         	movff	write_timer_zero@timer0+1,write_timer_zero@timer+1
  3102                           
  3103                           ;hardware.c: 144: TMR0H = timer.bt[1];
  3104  0054B2  C019  FFD7         	movff	write_timer_zero@timer+1,4055	;volatile
  3105                           
  3106                           ;hardware.c: 145: TMR0L = timer.bt[0];
  3107  0054B6  C018  FFD6         	movff	write_timer_zero@timer,4054	;volatile
  3108  0054BA  0012               	return		;funcret
  3109  0054BC                     __end_of_write_timer_zero:
  3110                           	opt stack 0
  3111                           tblptru	equ	0xFF8
  3112                           tblptrh	equ	0xFF7
  3113                           tblptrl	equ	0xFF6
  3114                           tablat	equ	0xFF5
  3115                           intcon	equ	0xFF2
  3116                           intcon2	equ	0xFF1
  3117                           intcon3	equ	0xFF0
  3118                           postinc0	equ	0xFEE
  3119                           wreg	equ	0xFE8
  3120                           postdec1	equ	0xFE5
  3121                           fsr1h	equ	0xFE2
  3122                           fsr1l	equ	0xFE1
  3123                           postinc2	equ	0xFDE
  3124                           status	equ	0xFD8
  3125                           
  3126 ;; *************** function _config_timer_dois *****************
  3127 ;; Defined at:
  3128 ;;		line 200 in file "bibliotecas/hardware.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;		None
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;		None
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1    wreg      void 
  3135 ;; Registers used:
  3136 ;;		wreg, status,2
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3142 ;;      Params:         0       0       0       0       0       0       0       0       0
  3143 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3144 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3145 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3146 ;;Total ram usage:        0 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    2
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_init_hardware
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text10
  3157  0054EE                     __ptext10:
  3158                           	opt stack 0
  3159  0054EE                     _config_timer_dois:
  3160                           	opt stack 27
  3161                           
  3162                           ;hardware.c: 202: T2CON = 0b00000100;
  3163                           
  3164                           ;incstack = 0
  3165  0054EE  0E04               	movlw	4
  3166  0054F0  6ECA               	movwf	4042,c	;volatile
  3167                           
  3168                           ;hardware.c: 203: TMR2 = 0;
  3169  0054F2  0E00               	movlw	0
  3170  0054F4  6ECC               	movwf	4044,c	;volatile
  3171                           
  3172                           ;hardware.c: 204: PR2 = 0xFF;
  3173  0054F6  68CB               	setf	4043,c	;volatile
  3174  0054F8  0012               	return		;funcret
  3175  0054FA                     __end_of_config_timer_dois:
  3176                           	opt stack 0
  3177                           tblptru	equ	0xFF8
  3178                           tblptrh	equ	0xFF7
  3179                           tblptrl	equ	0xFF6
  3180                           tablat	equ	0xFF5
  3181                           intcon	equ	0xFF2
  3182                           intcon2	equ	0xFF1
  3183                           intcon3	equ	0xFF0
  3184                           postinc0	equ	0xFEE
  3185                           wreg	equ	0xFE8
  3186                           postdec1	equ	0xFE5
  3187                           fsr1h	equ	0xFE2
  3188                           fsr1l	equ	0xFE1
  3189                           postinc2	equ	0xFDE
  3190                           status	equ	0xFD8
  3191                           
  3192 ;; *************** function _inicializa_tarefas *****************
  3193 ;; Defined at:
  3194 ;;		line 157 in file "main.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;		None
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;		None
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      void 
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3208 ;;      Params:         0       0       0       0       0       0       0       0       0
  3209 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3211 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3212 ;;Total ram usage:        0 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; Hardware stack levels required when called:    2
  3215 ;; This function calls:
  3216 ;;		Nothing
  3217 ;; This function is called by:
  3218 ;;		_main
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text11
  3223  005286                     __ptext11:
  3224                           	opt stack 0
  3225  005286                     _inicializa_tarefas:
  3226                           	opt stack 28
  3227                           
  3228                           ;main.c: 160: p_tarefas[0] = SDCard;
  3229                           
  3230                           ;incstack = 0
  3231  005286  0EA0               	movlw	low _SDCard
  3232  005288  0101               	movlb	1	; () banked
  3233  00528A  6F52               	movwf	_p_tarefas& (0+255),b
  3234  00528C  0E3D               	movlw	high _SDCard
  3235  00528E  0101               	movlb	1	; () banked
  3236  005290  6F53               	movwf	(_p_tarefas+1)& (0+255),b
  3237                           
  3238                           ; BSR set to: 1
  3239                           ;main.c: 164: tempo_backup[0] = 5000;
  3240  005292  0E13               	movlw	19
  3241  005294  0101               	movlb	1	; () banked
  3242  005296  6F4F               	movwf	(_tempo_backup+1)& (0+255),b
  3243  005298  0E88               	movlw	136
  3244  00529A  6F4E               	movwf	_tempo_backup& (0+255),b
  3245                           
  3246                           ; BSR set to: 1
  3247                           ;main.c: 165: tempo_backup[1] = 5000;
  3248  00529C  0E13               	movlw	19
  3249  00529E  0101               	movlb	1	; () banked
  3250  0052A0  6F51               	movwf	(_tempo_backup+3)& (0+255),b
  3251  0052A2  0E88               	movlw	136
  3252  0052A4  6F50               	movwf	(_tempo_backup+2)& (0+255),b
  3253                           
  3254                           ; BSR set to: 1
  3255                           ;main.c: 170: tempo_tarefa[0] = 5000;
  3256  0052A6  0E13               	movlw	19
  3257  0052A8  0101               	movlb	1	; () banked
  3258  0052AA  6F4B               	movwf	(_tempo_tarefa+1)& (0+255),b
  3259  0052AC  0E88               	movlw	136
  3260  0052AE  6F4A               	movwf	_tempo_tarefa& (0+255),b
  3261                           
  3262                           ; BSR set to: 1
  3263                           ;main.c: 171: tempo_tarefa[1] = 5000;
  3264  0052B0  0E13               	movlw	19
  3265  0052B2  0101               	movlb	1	; () banked
  3266  0052B4  6F4D               	movwf	(_tempo_tarefa+3)& (0+255),b
  3267  0052B6  0E88               	movlw	136
  3268  0052B8  6F4C               	movwf	(_tempo_tarefa+2)& (0+255),b
  3269                           
  3270                           ; BSR set to: 1
  3271                           ;main.c: 175: tarefa_em_execucao = 0;
  3272  0052BA  0E00               	movlw	0
  3273  0052BC  6E3F               	movwf	_tarefa_em_execucao,c	;volatile
  3274                           
  3275                           ; BSR set to: 1
  3276  0052BE  0012               	return		;funcret
  3277  0052C0                     __end_of_inicializa_tarefas:
  3278                           	opt stack 0
  3279                           tblptru	equ	0xFF8
  3280                           tblptrh	equ	0xFF7
  3281                           tblptrl	equ	0xFF6
  3282                           tablat	equ	0xFF5
  3283                           intcon	equ	0xFF2
  3284                           intcon2	equ	0xFF1
  3285                           intcon3	equ	0xFF0
  3286                           postinc0	equ	0xFEE
  3287                           wreg	equ	0xFE8
  3288                           postdec1	equ	0xFE5
  3289                           fsr1h	equ	0xFE2
  3290                           fsr1l	equ	0xFE1
  3291                           postinc2	equ	0xFDE
  3292                           status	equ	0xFD8
  3293                           
  3294 ;; *************** function _inicializa_shrc *****************
  3295 ;; Defined at:
  3296 ;;		line 48 in file "bibliotecas/SHRC.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;		None
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;		None
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  1    wreg      void 
  3303 ;; Registers used:
  3304 ;;		None
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3310 ;;      Params:         0       0       0       0       0       0       0       0       0
  3311 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3313 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3314 ;;Total ram usage:        0 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; Hardware stack levels required when called:    2
  3317 ;; This function calls:
  3318 ;;		Nothing
  3319 ;; This function is called by:
  3320 ;;		_main
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text12
  3325  0054FA                     __ptext12:
  3326                           	opt stack 0
  3327  0054FA                     _inicializa_shrc:
  3328                           	opt stack 28
  3329                           
  3330                           ;SHRC.c: 51: TRISBbits.RB6 = 0;
  3331                           
  3332                           ; BSR set to: 1
  3333                           ;incstack = 0
  3334  0054FA  9C93               	bcf	3987,6,c	;volatile
  3335                           
  3336                           ;SHRC.c: 52: TRISBbits.RB5 = 1;
  3337  0054FC  8A93               	bsf	3987,5,c	;volatile
  3338                           
  3339                           ;SHRC.c: 53: TRISBbits.RB7 = 0;
  3340  0054FE  9E93               	bcf	3987,7,c	;volatile
  3341                           
  3342                           ;SHRC.c: 56: LATBbits.LATB6 = 0;
  3343  005500  9C8A               	bcf	3978,6,c	;volatile
  3344                           
  3345                           ;SHRC.c: 57: LATBbits.LATB7 = 0;
  3346  005502  9E8A               	bcf	3978,7,c	;volatile
  3347  005504  0012               	return		;funcret
  3348  005506                     __end_of_inicializa_shrc:
  3349                           	opt stack 0
  3350                           tblptru	equ	0xFF8
  3351                           tblptrh	equ	0xFF7
  3352                           tblptrl	equ	0xFF6
  3353                           tablat	equ	0xFF5
  3354                           intcon	equ	0xFF2
  3355                           intcon2	equ	0xFF1
  3356                           intcon3	equ	0xFF0
  3357                           postinc0	equ	0xFEE
  3358                           wreg	equ	0xFE8
  3359                           postdec1	equ	0xFE5
  3360                           fsr1h	equ	0xFE2
  3361                           fsr1l	equ	0xFE1
  3362                           postinc2	equ	0xFDE
  3363                           status	equ	0xFD8
  3364                           
  3365 ;; *************** function _escalonador *****************
  3366 ;; Defined at:
  3367 ;;		line 186 in file "main.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;  cont            1   88[BANK1 ] unsigned char 
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3381 ;;      Params:         0       0       0       0       0       0       0       0       0
  3382 ;;      Locals:         0       0       1       0       0       0       0       0       0
  3383 ;;      Temps:          0       0       2       0       0       0       0       0       0
  3384 ;;      Totals:         0       0       3       0       0       0       0       0       0
  3385 ;;Total ram usage:        3 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; Hardware stack levels required when called:   14
  3388 ;; This function calls:
  3389 ;;		_SDCard
  3390 ;; This function is called by:
  3391 ;;		_main
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text13
  3396  004706                     __ptext13:
  3397                           	opt stack 0
  3398  004706                     _escalonador:
  3399                           	opt stack 16
  3400                           
  3401                           ;main.c: 188: unsigned char cont;
  3402                           ;main.c: 189: for(cont = 0; cont<2;cont++)
  3403                           
  3404                           ;incstack = 0
  3405  004706  0E00               	movlw	0
  3406  004708  0101               	movlb	1	; () banked
  3407  00470A  6FCB               	movwf	escalonador@cont& (0+255),b
  3408  00470C                     l12618:
  3409                           
  3410                           ; BSR set to: 1
  3411  00470C  0E01               	movlw	1
  3412  00470E  0101               	movlb	1	; () banked
  3413  004710  65CB               	cpfsgt	escalonador@cont& (0+255),b
  3414  004712  D001               	goto	l12622
  3415  004714  0012               	return	
  3416  004716                     l12622:
  3417                           
  3418                           ; BSR set to: 1
  3419                           ;main.c: 190: {
  3420                           ;main.c: 191: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  3421  004716  0101               	movlb	1	; () banked
  3422  004718  51CB               	movf	escalonador@cont& (0+255),w,b
  3423  00471A  0D02               	mullw	2
  3424  00471C  0E52               	movlw	low _p_tarefas
  3425  00471E  24F3               	addwf	prodl,w,c
  3426  004720  6ED9               	movwf	fsr2l,c
  3427  004722  0E01               	movlw	high _p_tarefas
  3428  004724  20F4               	addwfc	prodh,w,c
  3429  004726  6EDA               	movwf	fsr2h,c
  3430  004728  50DE               	movf	postinc2,w,c
  3431  00472A  10DE               	iorwf	postinc2,w,c
  3432  00472C  B4D8               	btfsc	status,2,c
  3433  00472E  D041               	goto	l12634
  3434                           
  3435                           ; BSR set to: 1
  3436  004730  0101               	movlb	1	; () banked
  3437  004732  51CB               	movf	escalonador@cont& (0+255),w,b
  3438  004734  0D02               	mullw	2
  3439  004736  0E4A               	movlw	low _tempo_tarefa
  3440  004738  24F3               	addwf	prodl,w,c
  3441  00473A  6ED9               	movwf	fsr2l,c
  3442  00473C  0E01               	movlw	high _tempo_tarefa
  3443  00473E  20F4               	addwfc	prodh,w,c
  3444  004740  6EDA               	movwf	fsr2h,c
  3445  004742  50DE               	movf	postinc2,w,c
  3446  004744  10DE               	iorwf	postinc2,w,c
  3447  004746  A4D8               	btfss	status,2,c
  3448  004748  D034               	goto	l12634
  3449                           
  3450                           ; BSR set to: 1
  3451                           ;main.c: 192: {
  3452                           ;main.c: 193: tarefa_em_execucao = 1;
  3453  00474A  0E01               	movlw	1
  3454  00474C  6E3F               	movwf	_tarefa_em_execucao,c	;volatile
  3455                           
  3456                           ;main.c: 194: timeout_tarefa = 65000;
  3457  00474E  0EFD               	movlw	253
  3458  004750  0101               	movlb	1	; () banked
  3459  004752  6F59               	movwf	(_timeout_tarefa+1)& (0+255),b
  3460  004754  0EE8               	movlw	232
  3461  004756  6F58               	movwf	_timeout_tarefa& (0+255),b
  3462                           
  3463                           ; BSR set to: 1
  3464                           ;main.c: 195: p_tarefas[cont]();
  3465  004758  0101               	movlb	1	; () banked
  3466  00475A  51CB               	movf	escalonador@cont& (0+255),w,b
  3467  00475C  0D02               	mullw	2
  3468  00475E  0E52               	movlw	low _p_tarefas
  3469  004760  24F3               	addwf	prodl,w,c
  3470  004762  6ED9               	movwf	fsr2l,c
  3471  004764  0E01               	movlw	high _p_tarefas
  3472  004766  20F4               	addwfc	prodh,w,c
  3473  004768  6EDA               	movwf	fsr2h,c
  3474  00476A  D801               	call	u14418
  3475  00476C  D00A               	goto	l12630
  3476  00476E                     u14418:
  3477  00476E  0005               	push	
  3478  004770  6EFA               	movwf	pclath,c
  3479  004772  50DE               	movf	postinc2,w,c
  3480  004774  6EFD               	movwf	tosl,c
  3481  004776  50DE               	movf	postinc2,w,c
  3482  004778  6EFE               	movwf	tosh,c
  3483  00477A  50F8               	movf	tblptru,w,c
  3484  00477C  6EFF               	movwf	tosu,c
  3485  00477E  50FA               	movf	pclath,w,c
  3486  004780  0012               	return		;indir
  3487  004782                     l12630:
  3488                           
  3489                           ;main.c: 196: tarefa_em_execucao = 0;
  3490  004782  0E00               	movlw	0
  3491  004784  6E3F               	movwf	_tarefa_em_execucao,c	;volatile
  3492                           
  3493                           ;main.c: 197: tempo_tarefa[cont] = tempo_backup[cont];
  3494  004786  0101               	movlb	1	; () banked
  3495  004788  51CB               	movf	escalonador@cont& (0+255),w,b
  3496  00478A  0D02               	mullw	2
  3497  00478C  0E4E               	movlw	low _tempo_backup
  3498  00478E  24F3               	addwf	prodl,w,c
  3499  004790  6ED9               	movwf	fsr2l,c
  3500  004792  0E01               	movlw	high _tempo_backup
  3501  004794  20F4               	addwfc	prodh,w,c
  3502  004796  6EDA               	movwf	fsr2h,c
  3503  004798  0101               	movlb	1	; () banked
  3504  00479A  51CB               	movf	escalonador@cont& (0+255),w,b
  3505  00479C  0D02               	mullw	2
  3506  00479E  0E4A               	movlw	low _tempo_tarefa
  3507  0047A0  24F3               	addwf	prodl,w,c
  3508  0047A2  6EE1               	movwf	fsr1l,c
  3509  0047A4  0E01               	movlw	high _tempo_tarefa
  3510  0047A6  20F4               	addwfc	prodh,w,c
  3511  0047A8  6EE2               	movwf	fsr1h,c
  3512  0047AA  CFDE FFE6          	movff	postinc2,postinc1
  3513  0047AE  CFDD FFE5          	movff	postdec2,postdec1
  3514  0047B2                     l12634:
  3515                           
  3516                           ; BSR set to: 1
  3517  0047B2  0101               	movlb	1	; () banked
  3518  0047B4  2BCB               	incf	escalonador@cont& (0+255),f,b
  3519  0047B6  D7AA               	goto	l12618
  3520  0047B8                     __end_of_escalonador:
  3521                           	opt stack 0
  3522                           tosu	equ	0xFFF
  3523                           tosh	equ	0xFFE
  3524                           tosl	equ	0xFFD
  3525                           pclath	equ	0xFFA
  3526                           tblptru	equ	0xFF8
  3527                           tblptrh	equ	0xFF7
  3528                           tblptrl	equ	0xFF6
  3529                           tablat	equ	0xFF5
  3530                           prodh	equ	0xFF4
  3531                           prodl	equ	0xFF3
  3532                           intcon	equ	0xFF2
  3533                           intcon2	equ	0xFF1
  3534                           intcon3	equ	0xFF0
  3535                           postinc0	equ	0xFEE
  3536                           wreg	equ	0xFE8
  3537                           postinc1	equ	0xFE6
  3538                           postdec1	equ	0xFE5
  3539                           fsr1h	equ	0xFE2
  3540                           fsr1l	equ	0xFE1
  3541                           postinc2	equ	0xFDE
  3542                           postdec2	equ	0xFDD
  3543                           fsr2h	equ	0xFDA
  3544                           fsr2l	equ	0xFD9
  3545                           status	equ	0xFD8
  3546                           
  3547 ;; *************** function _SDCard *****************
  3548 ;; Defined at:
  3549 ;;		line 151 in file "bibliotecas/SDCard.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;		None
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;  fil            32    1[BANK2 ] struct _FIL
  3554 ;;  br              2    0        unsigned int 
  3555 ;;  bw              2    0        unsigned short 
  3556 ;;  FResult         1    0[BANK2 ] enum E70
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      void 
  3559 ;; Registers used:
  3560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3566 ;;      Params:         0       0       0       0       0       0       0       0       0
  3567 ;;      Locals:         0       0       0      33       0       0       0       0       0
  3568 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3569 ;;      Totals:         0       2       0      33       0       0       0       0       0
  3570 ;;Total ram usage:       35 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:   13
  3573 ;; This function calls:
  3574 ;;		_escreve_frase_ram_lcd
  3575 ;;		_escreve_inteiro_lcd
  3576 ;;		_f_close
  3577 ;;		_f_mount
  3578 ;;		_f_open
  3579 ;;		_posicao_cursor_lcd
  3580 ;;		_proceed
  3581 ;; This function is called by:
  3582 ;;		_inicializa_tarefas
  3583 ;;		_escalonador
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           	psect	text14
  3588  003DA0                     __ptext14:
  3589                           	opt stack 0
  3590  003DA0                     _SDCard:
  3591                           	opt stack 16
  3592                           
  3593                           ;SDCard.c: 153: T0CONbits.TMR0ON = 0;
  3594                           
  3595                           ; BSR set to: 1
  3596                           ;incstack = 0
  3597  003DA0  9ED5               	bcf	4053,7,c	;volatile
  3598                           
  3599                           ;SDCard.c: 156: FRESULT FResult;
  3600                           ;SDCard.c: 157: FIL fil;
  3601                           ;SDCard.c: 158: WORD bw;
  3602                           ;SDCard.c: 159: UINT br;
  3603                           ;SDCard.c: 163: static char init;
  3604                           ;SDCard.c: 164: if(init !=1)
  3605  003DA2  0101               	movlb	1	; () banked
  3606  003DA4  055C               	decf	SDCard@init& (0+255),w,b
  3607  003DA6  B4D8               	btfsc	status,2,c
  3608  003DA8  0012               	return	
  3609                           
  3610                           ; BSR set to: 1
  3611                           ;SDCard.c: 165: {
  3612                           ;SDCard.c: 168: init = 1;
  3613  003DAA  0E01               	movlw	1
  3614  003DAC  0101               	movlb	1	; () banked
  3615  003DAE  6F5C               	movwf	SDCard@init& (0+255),b
  3616                           
  3617                           ; BSR set to: 1
  3618                           ;SDCard.c: 175: proceed();
  3619  003DB0  EC70  F02A         	call	_proceed	;wreg free
  3620                           
  3621                           ;SDCard.c: 177: _delay((unsigned long)((1)*(48000000/4000.0)));
  3622  003DB4  0E10               	movlw	16
  3623  003DB6  0100               	movlb	0	; () banked
  3624  003DB8  6FF7               	movwf	??_SDCard& (0+255),b
  3625  003DBA  0E94               	movlw	148
  3626  003DBC                     u16717:
  3627  003DBC  2EE8               	decfsz	wreg,f,c
  3628  003DBE  D7FE               	bra	u16717
  3629  003DC0  2FF7               	decfsz	??_SDCard& (0+255),f,b
  3630  003DC2  D7FC               	bra	u16717
  3631  003DC4  F000               	nop	
  3632                           
  3633                           ;SDCard.c: 178: FResult = f_mount(0, &fs);
  3634  003DC6  0E30               	movlw	low _fs
  3635  003DC8  6E16               	movwf	f_mount@fs,c
  3636  003DCA  0E03               	movlw	high _fs
  3637  003DCC  6E17               	movwf	f_mount@fs+1,c
  3638  003DCE  0E00               	movlw	0
  3639  003DD0  EC17  F028         	call	_f_mount
  3640  003DD4  0102               	movlb	2	; () banked
  3641  003DD6  6FDE               	movwf	SDCard@FResult& (0+255),b
  3642                           
  3643                           ; BSR set to: 2
  3644                           ;SDCard.c: 179: LATBbits.LATB4 = 1;
  3645  003DD8  888A               	bsf	3978,4,c	;volatile
  3646                           
  3647                           ; BSR set to: 2
  3648                           ;SDCard.c: 180: if(FResult == FR_OK)
  3649  003DDA  0102               	movlb	2	; () banked
  3650  003DDC  51DE               	movf	SDCard@FResult& (0+255),w,b
  3651  003DDE  0102               	movlb	2	; () banked
  3652  003DE0  A4D8               	btfss	status,2,c
  3653  003DE2  D023               	goto	l12498
  3654                           
  3655                           ; BSR set to: 2
  3656                           ;SDCard.c: 181: {
  3657                           ;SDCard.c: 182: posicao_cursor_lcd(1,0);
  3658  003DE4  0E00               	movlw	0
  3659  003DE6  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3660  003DE8  0E01               	movlw	1
  3661  003DEA  ECD2  F026         	call	_posicao_cursor_lcd
  3662                           
  3663                           ;SDCard.c: 183: escreve_frase_ram_lcd("Sistema Montado");
  3664  003DEE  0E9A               	movlw	low STR_36
  3665  003DF0  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  3666  003DF2  0E61               	movlw	high STR_36
  3667  003DF4  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  3668  003DF6  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
  3669                           
  3670                           ;SDCard.c: 184: posicao_cursor_lcd(2,14);
  3671  003DFA  0E0E               	movlw	14
  3672  003DFC  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3673  003DFE  0E02               	movlw	2
  3674  003E00  ECD2  F026         	call	_posicao_cursor_lcd
  3675                           
  3676                           ;SDCard.c: 185: escreve_inteiro_lcd(FResult);
  3677  003E04  C2DE  F02E         	movff	SDCard@FResult,escreve_inteiro_lcd@valor
  3678  003E08  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
  3679  003E0A  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
  3680                           
  3681                           ;SDCard.c: 186: _delay((unsigned long)((100)*(48000000/4000.0)));
  3682  003E0E  0E07               	movlw	7
  3683  003E10  0100               	movlb	0	; () banked
  3684  003E12  6FF8               	movwf	(??_SDCard+1)& (0+255),b
  3685  003E14  0E17               	movlw	23
  3686  003E16  0100               	movlb	0	; () banked
  3687  003E18  6FF7               	movwf	??_SDCard& (0+255),b
  3688  003E1A  0E6A               	movlw	106
  3689  003E1C                     u16727:
  3690  003E1C  2EE8               	decfsz	wreg,f,c
  3691  003E1E  D7FE               	bra	u16727
  3692  003E20  2FF7               	decfsz	??_SDCard& (0+255),f,b
  3693  003E22  D7FC               	bra	u16727
  3694  003E24  2FF8               	decfsz	(??_SDCard+1)& (0+255),f,b
  3695  003E26  D7FA               	bra	u16727
  3696  003E28  F000               	nop	
  3697  003E2A                     l12498:
  3698                           
  3699                           ;SDCard.c: 187: }
  3700                           ;SDCard.c: 190: if(FResult == FR_OK)
  3701  003E2A  0102               	movlb	2	; () banked
  3702  003E2C  51DE               	movf	SDCard@FResult& (0+255),w,b
  3703  003E2E  0102               	movlb	2	; () banked
  3704  003E30  A4D8               	btfss	status,2,c
  3705  003E32  0012               	return	
  3706                           
  3707                           ; BSR set to: 2
  3708                           ;SDCard.c: 191: {
  3709                           ;SDCard.c: 193: proceed();
  3710  003E34  EC70  F02A         	call	_proceed	;wreg free
  3711                           
  3712                           ;SDCard.c: 194: _delay((unsigned long)((1)*(48000000/4000.0)));
  3713  003E38  0E10               	movlw	16
  3714  003E3A  0100               	movlb	0	; () banked
  3715  003E3C  6FF7               	movwf	??_SDCard& (0+255),b
  3716  003E3E  0E94               	movlw	148
  3717  003E40                     u16737:
  3718  003E40  2EE8               	decfsz	wreg,f,c
  3719  003E42  D7FE               	bra	u16737
  3720  003E44  2FF7               	decfsz	??_SDCard& (0+255),f,b
  3721  003E46  D7FC               	bra	u16737
  3722  003E48  F000               	nop	
  3723                           
  3724                           ;SDCard.c: 195: posicao_cursor_lcd(1,0);
  3725  003E4A  0E00               	movlw	0
  3726  003E4C  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3727  003E4E  0E01               	movlw	1
  3728  003E50  ECD2  F026         	call	_posicao_cursor_lcd
  3729                           
  3730                           ;SDCard.c: 196: _delay((unsigned long)((2000)*(48000000/4000.0)));
  3731  003E54  0E7A               	movlw	122
  3732  003E56  0100               	movlb	0	; () banked
  3733  003E58  6FF8               	movwf	(??_SDCard+1)& (0+255),b
  3734  003E5A  0EC1               	movlw	193
  3735  003E5C  0100               	movlb	0	; () banked
  3736  003E5E  6FF7               	movwf	??_SDCard& (0+255),b
  3737  003E60  0E81               	movlw	129
  3738  003E62                     u16747:
  3739  003E62  2EE8               	decfsz	wreg,f,c
  3740  003E64  D7FE               	bra	u16747
  3741  003E66  2FF7               	decfsz	??_SDCard& (0+255),f,b
  3742  003E68  D7FC               	bra	u16747
  3743  003E6A  2FF8               	decfsz	(??_SDCard+1)& (0+255),f,b
  3744  003E6C  D7FA               	bra	u16747
  3745  003E6E  D000               	nop2	
  3746                           
  3747                           ;SDCard.c: 197: escreve_frase_ram_lcd("Criando arquivo");
  3748  003E70  0EAA               	movlw	low STR_37
  3749  003E72  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  3750  003E74  0E61               	movlw	high STR_37
  3751  003E76  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  3752  003E78  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
  3753                           
  3754                           ;SDCard.c: 198: LATBbits.LATB4 = 1;
  3755  003E7C  888A               	bsf	3978,4,c	;volatile
  3756                           
  3757                           ;SDCard.c: 201: FResult = f_open(&fil,"teste.txt", 0x00);
  3758  003E7E  0EDF               	movlw	low SDCard@fil
  3759  003E80  0101               	movlb	1	; () banked
  3760  003E82  6F81               	movwf	f_open@fp& (0+255),b
  3761  003E84  0E02               	movlw	high SDCard@fil
  3762  003E86  0101               	movlb	1	; () banked
  3763  003E88  6F82               	movwf	(f_open@fp+1)& (0+255),b
  3764  003E8A  0E3E               	movlw	low STR_38
  3765  003E8C  0101               	movlb	1	; () banked
  3766  003E8E  6F83               	movwf	f_open@path& (0+255),b
  3767  003E90  0E62               	movlw	high STR_38
  3768  003E92  0101               	movlb	1	; () banked
  3769  003E94  6F84               	movwf	(f_open@path+1)& (0+255),b
  3770  003E96  0E00               	movlw	0
  3771  003E98  0101               	movlb	1	; () banked
  3772  003E9A  6F85               	movwf	f_open@mode& (0+255),b
  3773  003E9C  EC32  F006         	call	_f_open	;wreg free
  3774  003EA0  0102               	movlb	2	; () banked
  3775  003EA2  6FDE               	movwf	SDCard@FResult& (0+255),b
  3776                           
  3777                           ; BSR set to: 2
  3778                           ;SDCard.c: 203: posicao_cursor_lcd(2,0);
  3779  003EA4  0E00               	movlw	0
  3780  003EA6  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3781  003EA8  0E02               	movlw	2
  3782  003EAA  ECD2  F026         	call	_posicao_cursor_lcd
  3783                           
  3784                           ;SDCard.c: 204: escreve_frase_ram_lcd("Resultado");
  3785  003EAE  0E34               	movlw	low STR_39
  3786  003EB0  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  3787  003EB2  0E62               	movlw	high STR_39
  3788  003EB4  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  3789  003EB6  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
  3790                           
  3791                           ;SDCard.c: 205: posicao_cursor_lcd(2,14);
  3792  003EBA  0E0E               	movlw	14
  3793  003EBC  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3794  003EBE  0E02               	movlw	2
  3795  003EC0  ECD2  F026         	call	_posicao_cursor_lcd
  3796                           
  3797                           ;SDCard.c: 206: escreve_inteiro_lcd(FResult);
  3798  003EC4  C2DE  F02E         	movff	SDCard@FResult,escreve_inteiro_lcd@valor
  3799  003EC8  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
  3800  003ECA  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
  3801                           
  3802                           ;SDCard.c: 209: if(FResult == FR_OK)
  3803  003ECE  0102               	movlb	2	; () banked
  3804  003ED0  51DE               	movf	SDCard@FResult& (0+255),w,b
  3805  003ED2  0102               	movlb	2	; () banked
  3806  003ED4  A4D8               	btfss	status,2,c
  3807  003ED6  D067               	goto	l1332
  3808                           
  3809                           ; BSR set to: 2
  3810                           ;SDCard.c: 210: {
  3811                           ;SDCard.c: 217: posicao_cursor_lcd(2,14);
  3812  003ED8  0E0E               	movlw	14
  3813  003EDA  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3814  003EDC  0E02               	movlw	2
  3815  003EDE  ECD2  F026         	call	_posicao_cursor_lcd
  3816                           
  3817                           ;SDCard.c: 218: escreve_frase_ram_lcd(FResult);
  3818  003EE2  0102               	movlb	2	; () banked
  3819  003EE4  51DE               	movf	SDCard@FResult& (0+255),w,b
  3820  003EE6  0100               	movlb	0	; () banked
  3821  003EE8  6FF7               	movwf	??_SDCard& (0+255),b
  3822  003EEA  6BF8               	clrf	(??_SDCard+1)& (0+255),b
  3823  003EEC  C0F7  F019         	movff	??_SDCard,escreve_frase_ram_lcd@buffer
  3824  003EF0  C0F8  F01A         	movff	??_SDCard+1,escreve_frase_ram_lcd@buffer+1
  3825  003EF4  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
  3826                           
  3827                           ;SDCard.c: 221: if(FResult == FR_OK)
  3828  003EF8  0102               	movlb	2	; () banked
  3829  003EFA  51DE               	movf	SDCard@FResult& (0+255),w,b
  3830  003EFC  0102               	movlb	2	; () banked
  3831  003EFE  A4D8               	btfss	status,2,c
  3832  003F00  D02D               	goto	l12540
  3833                           
  3834                           ; BSR set to: 2
  3835                           ;SDCard.c: 222: {
  3836                           ;SDCard.c: 225: posicao_cursor_lcd(2,0);
  3837  003F02  0E00               	movlw	0
  3838  003F04  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3839  003F06  0E02               	movlw	2
  3840  003F08  ECD2  F026         	call	_posicao_cursor_lcd
  3841                           
  3842                           ;SDCard.c: 226: escreve_frase_ram_lcd(buff);
  3843  003F0C  0ECA               	movlw	low _buff
  3844  003F0E  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  3845  003F10  0E02               	movlw	high _buff
  3846  003F12  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  3847  003F14  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
  3848                           
  3849                           ;SDCard.c: 227: f_close(&fil);
  3850  003F18  0EDF               	movlw	low SDCard@fil
  3851  003F1A  0100               	movlb	0	; () banked
  3852  003F1C  6FA9               	movwf	f_close@fp& (0+255),b
  3853  003F1E  0E02               	movlw	high SDCard@fil
  3854  003F20  0100               	movlb	0	; () banked
  3855  003F22  6FAA               	movwf	(f_close@fp+1)& (0+255),b
  3856  003F24  ECAC  F029         	call	_f_close	;wreg free
  3857                           
  3858                           ;SDCard.c: 229: posicao_cursor_lcd(2,0);
  3859  003F28  0E00               	movlw	0
  3860  003F2A  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3861  003F2C  0E02               	movlw	2
  3862  003F2E  ECD2  F026         	call	_posicao_cursor_lcd
  3863                           
  3864                           ;SDCard.c: 230: escreve_frase_ram_lcd("Arquivo renomeado");
  3865  003F32  0E33               	movlw	low STR_40
  3866  003F34  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  3867  003F36  0E61               	movlw	high STR_40
  3868  003F38  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  3869  003F3A  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
  3870                           
  3871                           ;SDCard.c: 231: _delay((unsigned long)((1000)*(48000000/4000.0)));
  3872  003F3E  0E3D               	movlw	61
  3873  003F40  0100               	movlb	0	; () banked
  3874  003F42  6FF8               	movwf	(??_SDCard+1)& (0+255),b
  3875  003F44  0EE1               	movlw	225
  3876  003F46  0100               	movlb	0	; () banked
  3877  003F48  6FF7               	movwf	??_SDCard& (0+255),b
  3878  003F4A  0E3F               	movlw	63
  3879  003F4C                     u16757:
  3880  003F4C  2EE8               	decfsz	wreg,f,c
  3881  003F4E  D7FE               	bra	u16757
  3882  003F50  2FF7               	decfsz	??_SDCard& (0+255),f,b
  3883  003F52  D7FC               	bra	u16757
  3884  003F54  2FF8               	decfsz	(??_SDCard+1)& (0+255),f,b
  3885  003F56  D7FA               	bra	u16757
  3886  003F58  D000               	nop2	
  3887                           
  3888                           ;SDCard.c: 232: }
  3889  003F5A  0012               	return	
  3890  003F5C                     l12540:
  3891                           
  3892                           ;SDCard.c: 233: else
  3893                           ;SDCard.c: 234: {
  3894                           ;SDCard.c: 235: posicao_cursor_lcd(2,0);
  3895  003F5C  0E00               	movlw	0
  3896  003F5E  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3897  003F60  0E02               	movlw	2
  3898  003F62  ECD2  F026         	call	_posicao_cursor_lcd
  3899                           
  3900                           ;SDCard.c: 236: escreve_frase_ram_lcd("ERRO");
  3901  003F66  0E69               	movlw	low STR_41
  3902  003F68  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  3903  003F6A  0E62               	movlw	high STR_41
  3904  003F6C  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  3905  003F6E  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
  3906                           
  3907                           ;SDCard.c: 237: posicao_cursor_lcd(1,0);
  3908  003F72  0E00               	movlw	0
  3909  003F74  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3910  003F76  0E01               	movlw	1
  3911  003F78  ECD2  F026         	call	_posicao_cursor_lcd
  3912                           
  3913                           ;SDCard.c: 238: escreve_inteiro_lcd(FResult);
  3914  003F7C  C2DE  F02E         	movff	SDCard@FResult,escreve_inteiro_lcd@valor
  3915  003F80  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
  3916  003F82  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
  3917                           
  3918                           ;SDCard.c: 239: _delay((unsigned long)((1000)*(48000000/4000.0)));
  3919  003F86  0E3D               	movlw	61
  3920  003F88  0100               	movlb	0	; () banked
  3921  003F8A  6FF8               	movwf	(??_SDCard+1)& (0+255),b
  3922  003F8C  0EE1               	movlw	225
  3923  003F8E  0100               	movlb	0	; () banked
  3924  003F90  6FF7               	movwf	??_SDCard& (0+255),b
  3925  003F92  0E3F               	movlw	63
  3926  003F94                     u16767:
  3927  003F94  2EE8               	decfsz	wreg,f,c
  3928  003F96  D7FE               	bra	u16767
  3929  003F98  2FF7               	decfsz	??_SDCard& (0+255),f,b
  3930  003F9A  D7FC               	bra	u16767
  3931  003F9C  2FF8               	decfsz	(??_SDCard+1)& (0+255),f,b
  3932  003F9E  D7FA               	bra	u16767
  3933  003FA0  D000               	nop2	
  3934                           
  3935                           ;SDCard.c: 240: T0CONbits.TMR0ON = 1;
  3936  003FA2  8ED5               	bsf	4053,7,c	;volatile
  3937                           
  3938                           ;SDCard.c: 241: }
  3939                           ;SDCard.c: 258: }
  3940  003FA4  0012               	return	
  3941  003FA6                     l1332:
  3942                           
  3943                           ; BSR set to: 2
  3944                           ;SDCard.c: 259: else{
  3945                           ;SDCard.c: 262: T0CONbits.TMR0ON = 1;
  3946  003FA6  8ED5               	bsf	4053,7,c	;volatile
  3947                           
  3948                           ; BSR set to: 2
  3949                           
  3950                           ; BSR set to: 2
  3951  003FA8  0012               	return	
  3952  003FAA                     __end_of_SDCard:
  3953                           	opt stack 0
  3954                           tosu	equ	0xFFF
  3955                           tosh	equ	0xFFE
  3956                           tosl	equ	0xFFD
  3957                           pclath	equ	0xFFA
  3958                           tblptru	equ	0xFF8
  3959                           tblptrh	equ	0xFF7
  3960                           tblptrl	equ	0xFF6
  3961                           tablat	equ	0xFF5
  3962                           prodh	equ	0xFF4
  3963                           prodl	equ	0xFF3
  3964                           intcon	equ	0xFF2
  3965                           intcon2	equ	0xFF1
  3966                           intcon3	equ	0xFF0
  3967                           postinc0	equ	0xFEE
  3968                           wreg	equ	0xFE8
  3969                           postinc1	equ	0xFE6
  3970                           postdec1	equ	0xFE5
  3971                           fsr1h	equ	0xFE2
  3972                           fsr1l	equ	0xFE1
  3973                           postinc2	equ	0xFDE
  3974                           postdec2	equ	0xFDD
  3975                           fsr2h	equ	0xFDA
  3976                           fsr2l	equ	0xFD9
  3977                           status	equ	0xFD8
  3978                           
  3979 ;; *************** function _f_open *****************
  3980 ;; Defined at:
  3981 ;;		line 884 in file "bibliotecas/tff.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  fp              2   14[BANK1 ] PTR struct _FIL
  3984 ;;		 -> SDCard@fil(32), 
  3985 ;;  path            2   16[BANK1 ] PTR const unsigned char 
  3986 ;;		 -> STR_38(10), 
  3987 ;;  mode            1   18[BANK1 ] unsigned char 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  dw              4   61[BANK1 ] unsigned long 
  3990 ;;  rs              4   57[BANK1 ] unsigned long 
  3991 ;;  dj             18   66[BANK1 ] struct _DIR
  3992 ;;  fn             12   45[BANK1 ] unsigned char [12]
  3993 ;;  dir             2   84[BANK1 ] PTR unsigned char 
  3994 ;;		 -> fs(552), NULL(0), 
  3995 ;;  res             1   65[BANK1 ] enum E155
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      enum E155
  3998 ;; Registers used:
  3999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4005 ;;      Params:         0       0       5       0       0       0       0       0       0
  4006 ;;      Locals:         0       0      41       0       0       0       0       0       0
  4007 ;;      Temps:          0       0      26       0       0       0       0       0       0
  4008 ;;      Totals:         0       0      72       0       0       0       0       0       0
  4009 ;;Total ram usage:       72 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:   12
  4012 ;; This function calls:
  4013 ;;		_auto_mount
  4014 ;;		_get_fattime
  4015 ;;		_memcpy
  4016 ;;		_memset
  4017 ;;		_move_window
  4018 ;;		_remove_chain
  4019 ;;		_reserve_direntry
  4020 ;;		_trace_path
  4021 ;; This function is called by:
  4022 ;;		_SDCard
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           	psect	text15
  4027  000C64                     __ptext15:
  4028                           	opt stack 0
  4029  000C64                     _f_open:
  4030                           	opt stack 16
  4031                           
  4032                           ;tff.c: 890: FRESULT res;
  4033                           ;tff.c: 891: DIR_ dj;
  4034                           ;tff.c: 892: BYTE *dir;
  4035                           ;tff.c: 893: char fn[8+3+1];
  4036                           ;tff.c: 896: fp->fs = (0);
  4037                           
  4038                           ;incstack = 0
  4039  000C64  0101               	movlb	1	; () banked
  4040  000C66  EE20 F004          	lfsr	2,4
  4041  000C6A  5181               	movf	f_open@fp& (0+255),w,b
  4042  000C6C  26D9               	addwf	fsr2l,f,c
  4043  000C6E  5182               	movf	(f_open@fp+1)& (0+255),w,b
  4044  000C70  22DA               	addwfc	fsr2h,f,c
  4045  000C72  0E00               	movlw	0
  4046  000C74  6EDE               	movwf	postinc2,c
  4047  000C76  0E00               	movlw	0
  4048  000C78  6EDD               	movwf	postdec2,c
  4049                           
  4050                           ; BSR set to: 1
  4051                           ;tff.c: 898: mode &= (0x01|0x02|0x08|0x10|0x04);
  4052  000C7A  0E1F               	movlw	31
  4053  000C7C  0101               	movlb	1	; () banked
  4054  000C7E  1785               	andwf	f_open@mode& (0+255),f,b
  4055                           
  4056                           ; BSR set to: 1
  4057                           ;tff.c: 899: res = auto_mount(&path, (BYTE)(mode & (0x02|0x08|0x10|0x04)));
  4058  000C80  0E83               	movlw	low f_open@path
  4059  000C82  0100               	movlb	0	; () banked
  4060  000C84  6F9C               	movwf	auto_mount@path& (0+255),b
  4061  000C86  0E01               	movlw	high f_open@path
  4062  000C88  0100               	movlb	0	; () banked
  4063  000C8A  6F9D               	movwf	(auto_mount@path+1)& (0+255),b
  4064  000C8C  0101               	movlb	1	; () banked
  4065  000C8E  5185               	movf	f_open@mode& (0+255),w,b
  4066  000C90  0B1E               	andlw	30
  4067  000C92  0100               	movlb	0	; () banked
  4068  000C94  6F9E               	movwf	auto_mount@chk_wp& (0+255),b
  4069  000C96  EC09  F000         	call	_auto_mount	;wreg free
  4070  000C9A  0101               	movlb	1	; () banked
  4071  000C9C  6FB4               	movwf	f_open@res& (0+255),b
  4072                           
  4073                           ; BSR set to: 1
  4074                           ;tff.c: 904: if (res != FR_OK) return res;
  4075  000C9E  0101               	movlb	1	; () banked
  4076  000CA0  51B4               	movf	f_open@res& (0+255),w,b
  4077  000CA2  0101               	movlb	1	; () banked
  4078  000CA4  B4D8               	btfsc	status,2,c
  4079  000CA6  D003               	goto	l12308
  4080                           
  4081                           ; BSR set to: 1
  4082  000CA8  0101               	movlb	1	; () banked
  4083  000CAA  51B4               	movf	f_open@res& (0+255),w,b
  4084                           
  4085                           ; BSR set to: 1
  4086  000CAC  0012               	return	
  4087  000CAE                     l12308:
  4088                           
  4089                           ; BSR set to: 1
  4090                           ;tff.c: 905: res = trace_path(&dj, fn, path, &dir);
  4091  000CAE  0EB5               	movlw	low f_open@dj
  4092  000CB0  0100               	movlb	0	; () banked
  4093  000CB2  6FE3               	movwf	trace_path@dj& (0+255),b
  4094  000CB4  0E01               	movlw	high f_open@dj
  4095  000CB6  0100               	movlb	0	; () banked
  4096  000CB8  6FE4               	movwf	(trace_path@dj+1)& (0+255),b
  4097  000CBA  0EA0               	movlw	low f_open@fn
  4098  000CBC  0100               	movlb	0	; () banked
  4099  000CBE  6FE5               	movwf	trace_path@fn& (0+255),b
  4100  000CC0  0E01               	movlw	high f_open@fn
  4101  000CC2  0100               	movlb	0	; () banked
  4102  000CC4  6FE6               	movwf	(trace_path@fn+1)& (0+255),b
  4103  000CC6  C183  F0E7         	movff	f_open@path,trace_path@path
  4104  000CCA  C184  F0E8         	movff	f_open@path+1,trace_path@path+1
  4105  000CCE  0EC7               	movlw	low f_open@dir
  4106  000CD0  0100               	movlb	0	; () banked
  4107  000CD2  6FE9               	movwf	trace_path@dir& (0+255),b
  4108  000CD4  0E01               	movlw	high f_open@dir
  4109  000CD6  0100               	movlb	0	; () banked
  4110  000CD8  6FEA               	movwf	(trace_path@dir+1)& (0+255),b
  4111  000CDA  EC2C  F012         	call	_trace_path	;wreg free
  4112  000CDE  0101               	movlb	1	; () banked
  4113  000CE0  6FB4               	movwf	f_open@res& (0+255),b
  4114                           
  4115                           ; BSR set to: 1
  4116                           ;tff.c: 909: if (mode & (0x08|0x10|0x04)) {
  4117  000CE2  C185  F186         	movff	f_open@mode,??_f_open
  4118  000CE6  0E1C               	movlw	28
  4119  000CE8  0101               	movlb	1	; () banked
  4120  000CEA  1786               	andwf	??_f_open& (0+255),f,b
  4121  000CEC  B4D8               	btfsc	status,2,c
  4122  000CEE  D1C5               	goto	l12378
  4123                           
  4124                           ; BSR set to: 1
  4125                           ;tff.c: 910: CLUST rs;
  4126                           ;tff.c: 911: DWORD dw;
  4127                           ;tff.c: 912: if (res != FR_OK) {
  4128  000CF0  0101               	movlb	1	; () banked
  4129  000CF2  51B4               	movf	f_open@res& (0+255),w,b
  4130  000CF4  0101               	movlb	1	; () banked
  4131  000CF6  B4D8               	btfsc	status,2,c
  4132  000CF8  D048               	goto	l830
  4133                           
  4134                           ; BSR set to: 1
  4135                           ;tff.c: 913: if (res != FR_NO_FILE) return res;
  4136  000CFA  0E02               	movlw	2
  4137  000CFC  0101               	movlb	1	; () banked
  4138  000CFE  19B4               	xorwf	f_open@res& (0+255),w,b
  4139  000D00  B4D8               	btfsc	status,2,c
  4140  000D02  D003               	goto	l12320
  4141                           
  4142                           ; BSR set to: 1
  4143  000D04  0101               	movlb	1	; () banked
  4144  000D06  51B4               	movf	f_open@res& (0+255),w,b
  4145                           
  4146                           ; BSR set to: 1
  4147  000D08  0012               	return	
  4148  000D0A                     l12320:
  4149                           
  4150                           ; BSR set to: 1
  4151                           ;tff.c: 914: res = reserve_direntry(&dj, &dir);
  4152  000D0A  0EB5               	movlw	low f_open@dj
  4153  000D0C  0100               	movlb	0	; () banked
  4154  000D0E  6FEE               	movwf	reserve_direntry@dj& (0+255),b
  4155  000D10  0E01               	movlw	high f_open@dj
  4156  000D12  0100               	movlb	0	; () banked
  4157  000D14  6FEF               	movwf	(reserve_direntry@dj+1)& (0+255),b
  4158  000D16  0EC7               	movlw	low f_open@dir
  4159  000D18  0100               	movlb	0	; () banked
  4160  000D1A  6FF0               	movwf	reserve_direntry@dir& (0+255),b
  4161  000D1C  0E01               	movlw	high f_open@dir
  4162  000D1E  0100               	movlb	0	; () banked
  4163  000D20  6FF1               	movwf	(reserve_direntry@dir+1)& (0+255),b
  4164  000D22  EC13  F018         	call	_reserve_direntry	;wreg free
  4165  000D26  0101               	movlb	1	; () banked
  4166  000D28  6FB4               	movwf	f_open@res& (0+255),b
  4167                           
  4168                           ; BSR set to: 1
  4169                           ;tff.c: 915: if (res != FR_OK) return res;
  4170  000D2A  0101               	movlb	1	; () banked
  4171  000D2C  51B4               	movf	f_open@res& (0+255),w,b
  4172  000D2E  0101               	movlb	1	; () banked
  4173  000D30  B4D8               	btfsc	status,2,c
  4174  000D32  D003               	goto	l12328
  4175                           
  4176                           ; BSR set to: 1
  4177  000D34  0101               	movlb	1	; () banked
  4178  000D36  51B4               	movf	f_open@res& (0+255),w,b
  4179                           
  4180                           ; BSR set to: 1
  4181  000D38  0012               	return	
  4182  000D3A                     l12328:
  4183                           
  4184                           ; BSR set to: 1
  4185                           ;tff.c: 916: memset(dir, 0, 32);
  4186  000D3A  C1C7  F016         	movff	f_open@dir,memset@p1
  4187  000D3E  C1C8  F017         	movff	f_open@dir+1,memset@p1+1
  4188  000D42  0E00               	movlw	0
  4189  000D44  6E19               	movwf	memset@c+1,c
  4190  000D46  0E00               	movlw	0
  4191  000D48  6E18               	movwf	memset@c,c
  4192  000D4A  0E00               	movlw	0
  4193  000D4C  6E1B               	movwf	memset@n+1,c
  4194  000D4E  0E20               	movlw	32
  4195  000D50  6E1A               	movwf	memset@n,c
  4196  000D52  EC96  F029         	call	_memset	;wreg free
  4197                           
  4198                           ;tff.c: 917: memcpy(&dir[0], fn, 8+3);
  4199  000D56  C1C7  F016         	movff	f_open@dir,memcpy@d1
  4200  000D5A  C1C8  F017         	movff	f_open@dir+1,memcpy@d1+1
  4201  000D5E  0EA0               	movlw	low f_open@fn
  4202  000D60  6E18               	movwf	memcpy@s1,c
  4203  000D62  0E01               	movlw	high f_open@fn
  4204  000D64  6E19               	movwf	memcpy@s1+1,c
  4205  000D66  0E00               	movlw	0
  4206  000D68  6E1B               	movwf	memcpy@n+1,c
  4207  000D6A  0E0B               	movlw	11
  4208  000D6C  6E1A               	movwf	memcpy@n,c
  4209  000D6E  ECC7  F028         	call	_memcpy	;wreg free
  4210                           
  4211                           ;tff.c: 918: dir[12] = fn[11];
  4212  000D72  0101               	movlb	1	; () banked
  4213  000D74  EE20 F00C          	lfsr	2,12
  4214  000D78  51C7               	movf	f_open@dir& (0+255),w,b
  4215  000D7A  26D9               	addwf	fsr2l,f,c
  4216  000D7C  51C8               	movf	(f_open@dir+1)& (0+255),w,b
  4217  000D7E  22DA               	addwfc	fsr2h,f,c
  4218  000D80  C1AB  FFDF         	movff	f_open@fn+11,indf2
  4219                           
  4220                           ; BSR set to: 1
  4221                           ;tff.c: 919: mode |= 0x08;
  4222  000D84  0101               	movlb	1	; () banked
  4223  000D86  8785               	bsf	f_open@mode& (0+255),3,b
  4224                           
  4225                           ;tff.c: 920: }
  4226  000D88  D12D               	goto	l12360
  4227  000D8A                     l830:
  4228                           
  4229                           ; BSR set to: 1
  4230                           ;tff.c: 921: else {
  4231                           ;tff.c: 922: if (mode & 0x04)
  4232  000D8A  0101               	movlb	1	; () banked
  4233  000D8C  A585               	btfss	f_open@mode& (0+255),2,b
  4234  000D8E  D002               	goto	l12340
  4235                           
  4236                           ; BSR set to: 1
  4237                           ;tff.c: 923: return FR_EXIST;
  4238  000D90  0E07               	movlw	7
  4239                           
  4240                           ; BSR set to: 1
  4241  000D92  0012               	return	
  4242  000D94                     l12340:
  4243                           
  4244                           ; BSR set to: 1
  4245                           ;tff.c: 924: if (!dir || (dir[11] & (0x01|0x10)))
  4246  000D94  0101               	movlb	1	; () banked
  4247  000D96  51C7               	movf	f_open@dir& (0+255),w,b
  4248  000D98  0101               	movlb	1	; () banked
  4249  000D9A  11C8               	iorwf	(f_open@dir+1)& (0+255),w,b
  4250  000D9C  B4D8               	btfsc	status,2,c
  4251  000D9E  D00F               	goto	l12344
  4252                           
  4253                           ; BSR set to: 1
  4254  000DA0  0101               	movlb	1	; () banked
  4255  000DA2  EE20 F00B          	lfsr	2,11
  4256  000DA6  51C7               	movf	f_open@dir& (0+255),w,b
  4257  000DA8  26D9               	addwf	fsr2l,f,c
  4258  000DAA  51C8               	movf	(f_open@dir+1)& (0+255),w,b
  4259  000DAC  22DA               	addwfc	fsr2h,f,c
  4260  000DAE  50DF               	movf	indf2,w,c
  4261  000DB0  0101               	movlb	1	; () banked
  4262  000DB2  6F86               	movwf	??_f_open& (0+255),b
  4263  000DB4  0E11               	movlw	17
  4264  000DB6  0101               	movlb	1	; () banked
  4265  000DB8  1786               	andwf	??_f_open& (0+255),f,b
  4266  000DBA  B4D8               	btfsc	status,2,c
  4267  000DBC  D002               	goto	l835
  4268  000DBE                     l12344:
  4269                           
  4270                           ; BSR set to: 1
  4271                           ;tff.c: 925: return FR_DENIED;
  4272  000DBE  0E06               	movlw	6
  4273                           
  4274                           ; BSR set to: 1
  4275  000DC0  0012               	return	
  4276  000DC2                     l835:
  4277                           
  4278                           ; BSR set to: 1
  4279                           ;tff.c: 926: if (mode & 0x08) {
  4280  000DC2  0101               	movlb	1	; () banked
  4281  000DC4  A785               	btfss	f_open@mode& (0+255),3,b
  4282  000DC6  D10E               	goto	l12360
  4283                           
  4284                           ; BSR set to: 1
  4285                           ;tff.c: 928: rs = ((DWORD)(WORD)(((WORD)*(volatile BYTE*)((&dir[20])+1)<<8)|(WORD)*(vola
      +                          tile BYTE*)(&dir[20])) << 16) | (WORD)(((WORD)*(volatile BYTE*)((&dir[26])+1)<<8)|(WORD)
      +                          *(volatile BYTE*)(&dir[26]));
  4286  000DC8  0E1B               	movlw	27
  4287  000DCA  0101               	movlb	1	; () banked
  4288  000DCC  25C7               	addwf	f_open@dir& (0+255),w,b
  4289  000DCE  6ED9               	movwf	fsr2l,c
  4290  000DD0  0E00               	movlw	0
  4291  000DD2  0101               	movlb	1	; () banked
  4292  000DD4  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4293  000DD6  6EDA               	movwf	fsr2h,c
  4294  000DD8  50DF               	movf	indf2,w,c
  4295  000DDA  0101               	movlb	1	; () banked
  4296  000DDC  6F86               	movwf	??_f_open& (0+255),b
  4297  000DDE  0101               	movlb	1	; () banked
  4298  000DE0  5186               	movf	??_f_open& (0+255),w,b
  4299  000DE2  0101               	movlb	1	; () banked
  4300  000DE4  6F88               	movwf	(??_f_open+2)& (0+255),b
  4301  000DE6  6B87               	clrf	(??_f_open+1)& (0+255),b
  4302  000DE8  0E1A               	movlw	26
  4303  000DEA  0101               	movlb	1	; () banked
  4304  000DEC  25C7               	addwf	f_open@dir& (0+255),w,b
  4305  000DEE  6ED9               	movwf	fsr2l,c
  4306  000DF0  0E00               	movlw	0
  4307  000DF2  0101               	movlb	1	; () banked
  4308  000DF4  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4309  000DF6  6EDA               	movwf	fsr2h,c
  4310  000DF8  50DF               	movf	indf2,w,c
  4311  000DFA  0101               	movlb	1	; () banked
  4312  000DFC  6F89               	movwf	(??_f_open+3)& (0+255),b
  4313  000DFE  0101               	movlb	1	; () banked
  4314  000E00  5189               	movf	(??_f_open+3)& (0+255),w,b
  4315  000E02  0101               	movlb	1	; () banked
  4316  000E04  1387               	iorwf	(??_f_open+1)& (0+255),f,b
  4317  000E06  0E00               	movlw	0
  4318  000E08  1388               	iorwf	(??_f_open+2)& (0+255),f,b
  4319  000E0A  0E15               	movlw	21
  4320  000E0C  0101               	movlb	1	; () banked
  4321  000E0E  25C7               	addwf	f_open@dir& (0+255),w,b
  4322  000E10  6ED9               	movwf	fsr2l,c
  4323  000E12  0E00               	movlw	0
  4324  000E14  0101               	movlb	1	; () banked
  4325  000E16  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4326  000E18  6EDA               	movwf	fsr2h,c
  4327  000E1A  50DF               	movf	indf2,w,c
  4328  000E1C  0101               	movlb	1	; () banked
  4329  000E1E  6F8A               	movwf	(??_f_open+4)& (0+255),b
  4330  000E20  0101               	movlb	1	; () banked
  4331  000E22  518A               	movf	(??_f_open+4)& (0+255),w,b
  4332  000E24  0101               	movlb	1	; () banked
  4333  000E26  6F8C               	movwf	(??_f_open+6)& (0+255),b
  4334  000E28  6B8B               	clrf	(??_f_open+5)& (0+255),b
  4335  000E2A  0E14               	movlw	20
  4336  000E2C  0101               	movlb	1	; () banked
  4337  000E2E  25C7               	addwf	f_open@dir& (0+255),w,b
  4338  000E30  6ED9               	movwf	fsr2l,c
  4339  000E32  0E00               	movlw	0
  4340  000E34  0101               	movlb	1	; () banked
  4341  000E36  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4342  000E38  6EDA               	movwf	fsr2h,c
  4343  000E3A  50DF               	movf	indf2,w,c
  4344  000E3C  0101               	movlb	1	; () banked
  4345  000E3E  6F8D               	movwf	(??_f_open+7)& (0+255),b
  4346  000E40  0101               	movlb	1	; () banked
  4347  000E42  518D               	movf	(??_f_open+7)& (0+255),w,b
  4348  000E44  0101               	movlb	1	; () banked
  4349  000E46  118B               	iorwf	(??_f_open+5)& (0+255),w,b
  4350  000E48  0101               	movlb	1	; () banked
  4351  000E4A  6F8E               	movwf	(??_f_open+8)& (0+255),b
  4352  000E4C  0101               	movlb	1	; () banked
  4353  000E4E  518C               	movf	(??_f_open+6)& (0+255),w,b
  4354  000E50  0101               	movlb	1	; () banked
  4355  000E52  6F8F               	movwf	(??_f_open+9)& (0+255),b
  4356  000E54  0101               	movlb	1	; () banked
  4357  000E56  6B90               	clrf	(??_f_open+10)& (0+255),b
  4358  000E58  0101               	movlb	1	; () banked
  4359  000E5A  6B91               	clrf	(??_f_open+11)& (0+255),b
  4360  000E5C  C18F  F191         	movff	??_f_open+9,??_f_open+11
  4361  000E60  C18E  F190         	movff	??_f_open+8,??_f_open+10
  4362  000E64  0101               	movlb	1	; () banked
  4363  000E66  6B8F               	clrf	(??_f_open+9)& (0+255),b
  4364  000E68  6B8E               	clrf	(??_f_open+8)& (0+255),b
  4365  000E6A  0101               	movlb	1	; () banked
  4366  000E6C  5187               	movf	(??_f_open+1)& (0+255),w,b
  4367  000E6E  0101               	movlb	1	; () banked
  4368  000E70  118E               	iorwf	(??_f_open+8)& (0+255),w,b
  4369  000E72  0101               	movlb	1	; () banked
  4370  000E74  6FAC               	movwf	f_open@rs& (0+255),b
  4371  000E76  0101               	movlb	1	; () banked
  4372  000E78  5188               	movf	(??_f_open+2)& (0+255),w,b
  4373  000E7A  0101               	movlb	1	; () banked
  4374  000E7C  118F               	iorwf	(??_f_open+9)& (0+255),w,b
  4375  000E7E  0101               	movlb	1	; () banked
  4376  000E80  6FAD               	movwf	(f_open@rs+1)& (0+255),b
  4377  000E82  0E00               	movlw	0
  4378  000E84  0101               	movlb	1	; () banked
  4379  000E86  1190               	iorwf	(??_f_open+10)& (0+255),w,b
  4380  000E88  0101               	movlb	1	; () banked
  4381  000E8A  6FAE               	movwf	(f_open@rs+2)& (0+255),b
  4382  000E8C  0E00               	movlw	0
  4383  000E8E  0101               	movlb	1	; () banked
  4384  000E90  1191               	iorwf	(??_f_open+11)& (0+255),w,b
  4385  000E92  0101               	movlb	1	; () banked
  4386  000E94  6FAF               	movwf	(f_open@rs+3)& (0+255),b
  4387                           
  4388                           ;tff.c: 929: *(volatile BYTE*)(&dir[20])=(BYTE)(0); *(volatile BYTE*)((&dir[20])+1)=(BYT
      +                          E)((WORD)(0)>>8);
  4389  000E96  0E14               	movlw	20
  4390  000E98  0101               	movlb	1	; () banked
  4391  000E9A  25C7               	addwf	f_open@dir& (0+255),w,b
  4392  000E9C  6ED9               	movwf	fsr2l,c
  4393  000E9E  0E00               	movlw	0
  4394  000EA0  0101               	movlb	1	; () banked
  4395  000EA2  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4396  000EA4  6EDA               	movwf	fsr2h,c
  4397  000EA6  0E00               	movlw	0
  4398  000EA8  6EDF               	movwf	indf2,c
  4399  000EAA  0E15               	movlw	21
  4400  000EAC  0101               	movlb	1	; () banked
  4401  000EAE  25C7               	addwf	f_open@dir& (0+255),w,b
  4402  000EB0  6ED9               	movwf	fsr2l,c
  4403  000EB2  0E00               	movlw	0
  4404  000EB4  0101               	movlb	1	; () banked
  4405  000EB6  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4406  000EB8  6EDA               	movwf	fsr2h,c
  4407  000EBA  0E00               	movlw	0
  4408  000EBC  6EDF               	movwf	indf2,c
  4409                           
  4410                           ;tff.c: 933: *(volatile BYTE*)(&dir[26])=(BYTE)(0); *(volatile BYTE*)((&dir[26])+1)=(BYT
      +                          E)((WORD)(0)>>8);
  4411  000EBE  0E1A               	movlw	26
  4412  000EC0  0101               	movlb	1	; () banked
  4413  000EC2  25C7               	addwf	f_open@dir& (0+255),w,b
  4414  000EC4  6ED9               	movwf	fsr2l,c
  4415  000EC6  0E00               	movlw	0
  4416  000EC8  0101               	movlb	1	; () banked
  4417  000ECA  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4418  000ECC  6EDA               	movwf	fsr2h,c
  4419  000ECE  0E00               	movlw	0
  4420  000ED0  6EDF               	movwf	indf2,c
  4421  000ED2  0E1B               	movlw	27
  4422  000ED4  0101               	movlb	1	; () banked
  4423  000ED6  25C7               	addwf	f_open@dir& (0+255),w,b
  4424  000ED8  6ED9               	movwf	fsr2l,c
  4425  000EDA  0E00               	movlw	0
  4426  000EDC  0101               	movlb	1	; () banked
  4427  000EDE  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4428  000EE0  6EDA               	movwf	fsr2h,c
  4429  000EE2  0E00               	movlw	0
  4430  000EE4  6EDF               	movwf	indf2,c
  4431                           
  4432                           ;tff.c: 934: *(volatile BYTE*)(&dir[28])=(BYTE)(0); *(volatile BYTE*)((&dir[28])+1)=(BYT
      +                          E)((WORD)(0)>>8); *(volatile BYTE*)((&dir[28])+2)=(BYTE)((DWORD)(0)>>16); *(volatile BYT
      +                          E*)((&dir[28])+3)=(BYTE)((DWORD)(0)>>24);
  4433  000EE6  0E1C               	movlw	28
  4434  000EE8  0101               	movlb	1	; () banked
  4435  000EEA  25C7               	addwf	f_open@dir& (0+255),w,b
  4436  000EEC  6ED9               	movwf	fsr2l,c
  4437  000EEE  0E00               	movlw	0
  4438  000EF0  0101               	movlb	1	; () banked
  4439  000EF2  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4440  000EF4  6EDA               	movwf	fsr2h,c
  4441  000EF6  0E00               	movlw	0
  4442  000EF8  6EDF               	movwf	indf2,c
  4443  000EFA  0E1D               	movlw	29
  4444  000EFC  0101               	movlb	1	; () banked
  4445  000EFE  25C7               	addwf	f_open@dir& (0+255),w,b
  4446  000F00  6ED9               	movwf	fsr2l,c
  4447  000F02  0E00               	movlw	0
  4448  000F04  0101               	movlb	1	; () banked
  4449  000F06  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4450  000F08  6EDA               	movwf	fsr2h,c
  4451  000F0A  0E00               	movlw	0
  4452  000F0C  6EDF               	movwf	indf2,c
  4453  000F0E  0E1E               	movlw	30
  4454  000F10  0101               	movlb	1	; () banked
  4455  000F12  25C7               	addwf	f_open@dir& (0+255),w,b
  4456  000F14  6ED9               	movwf	fsr2l,c
  4457  000F16  0E00               	movlw	0
  4458  000F18  0101               	movlb	1	; () banked
  4459  000F1A  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4460  000F1C  6EDA               	movwf	fsr2h,c
  4461  000F1E  0E00               	movlw	0
  4462  000F20  6EDF               	movwf	indf2,c
  4463  000F22  0E1F               	movlw	31
  4464  000F24  0101               	movlb	1	; () banked
  4465  000F26  25C7               	addwf	f_open@dir& (0+255),w,b
  4466  000F28  6ED9               	movwf	fsr2l,c
  4467  000F2A  0E00               	movlw	0
  4468  000F2C  0101               	movlb	1	; () banked
  4469  000F2E  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4470  000F30  6EDA               	movwf	fsr2h,c
  4471  000F32  0E00               	movlw	0
  4472  000F34  6EDF               	movwf	indf2,c
  4473                           
  4474                           ;tff.c: 935: dj.fs->winflag = 1;
  4475  000F36  0101               	movlb	1	; () banked
  4476  000F38  EE20 F027          	lfsr	2,39
  4477  000F3C  51B9               	movf	(f_open@dj+4)& (0+255),w,b
  4478  000F3E  26D9               	addwf	fsr2l,f,c
  4479  000F40  51BA               	movf	(f_open@dj+5)& (0+255),w,b
  4480  000F42  22DA               	addwfc	fsr2h,f,c
  4481  000F44  0E01               	movlw	1
  4482  000F46  6EDF               	movwf	indf2,c
  4483                           
  4484                           ;tff.c: 936: dw = dj.fs->winsect;
  4485  000F48  0101               	movlb	1	; () banked
  4486  000F4A  EE20 F004          	lfsr	2,4
  4487  000F4E  51B9               	movf	(f_open@dj+4)& (0+255),w,b
  4488  000F50  26D9               	addwf	fsr2l,f,c
  4489  000F52  51BA               	movf	(f_open@dj+5)& (0+255),w,b
  4490  000F54  22DA               	addwfc	fsr2h,f,c
  4491  000F56  CFDE F1B0          	movff	postinc2,f_open@dw
  4492  000F5A  CFDE F1B1          	movff	postinc2,f_open@dw+1
  4493  000F5E  CFDE F1B2          	movff	postinc2,f_open@dw+2
  4494  000F62  CFDE F1B3          	movff	postinc2,f_open@dw+3
  4495                           
  4496                           ; BSR set to: 1
  4497                           ;tff.c: 937: if (!remove_chain(rs) || !move_window(dw))
  4498  000F66  C1AC  F0D4         	movff	f_open@rs,remove_chain@clust
  4499  000F6A  C1AD  F0D5         	movff	f_open@rs+1,remove_chain@clust+1
  4500  000F6E  C1AE  F0D6         	movff	f_open@rs+2,remove_chain@clust+2
  4501  000F72  C1AF  F0D7         	movff	f_open@rs+3,remove_chain@clust+3
  4502  000F76  EC1E  F022         	call	_remove_chain	;wreg free
  4503  000F7A  0900               	iorlw	0
  4504  000F7C  B4D8               	btfsc	status,2,c
  4505  000F7E  D00D               	goto	l12354
  4506  000F80  C1B0  F083         	movff	f_open@dw,move_window@sector
  4507  000F84  C1B1  F084         	movff	f_open@dw+1,move_window@sector+1
  4508  000F88  C1B2  F085         	movff	f_open@dw+2,move_window@sector+2
  4509  000F8C  C1B3  F086         	movff	f_open@dw+3,move_window@sector+3
  4510  000F90  ECB4  F01C         	call	_move_window	;wreg free
  4511  000F94  0900               	iorlw	0
  4512  000F96  A4D8               	btfss	status,2,c
  4513  000F98  D002               	goto	l12358
  4514  000F9A                     l12354:
  4515                           
  4516                           ;tff.c: 938: return FR_RW_ERROR;
  4517  000F9A  0E08               	movlw	8
  4518  000F9C  0012               	return	
  4519  000F9E                     l12358:
  4520                           
  4521                           ;tff.c: 939: dj.fs->last_clust = rs - 1;
  4522  000F9E  0EFF               	movlw	255
  4523  000FA0  0101               	movlb	1	; () banked
  4524  000FA2  25AC               	addwf	f_open@rs& (0+255),w,b
  4525  000FA4  0101               	movlb	1	; () banked
  4526  000FA6  6F86               	movwf	??_f_open& (0+255),b
  4527  000FA8  0EFF               	movlw	255
  4528  000FAA  0101               	movlb	1	; () banked
  4529  000FAC  21AD               	addwfc	(f_open@rs+1)& (0+255),w,b
  4530  000FAE  0101               	movlb	1	; () banked
  4531  000FB0  6F87               	movwf	(??_f_open+1)& (0+255),b
  4532  000FB2  0EFF               	movlw	255
  4533  000FB4  0101               	movlb	1	; () banked
  4534  000FB6  21AE               	addwfc	(f_open@rs+2)& (0+255),w,b
  4535  000FB8  0101               	movlb	1	; () banked
  4536  000FBA  6F88               	movwf	(??_f_open+2)& (0+255),b
  4537  000FBC  0EFF               	movlw	255
  4538  000FBE  0101               	movlb	1	; () banked
  4539  000FC0  21AF               	addwfc	(f_open@rs+3)& (0+255),w,b
  4540  000FC2  0101               	movlb	1	; () banked
  4541  000FC4  6F89               	movwf	(??_f_open+3)& (0+255),b
  4542  000FC6  0101               	movlb	1	; () banked
  4543  000FC8  EE20 F01C          	lfsr	2,28
  4544  000FCC  51B9               	movf	(f_open@dj+4)& (0+255),w,b
  4545  000FCE  26D9               	addwf	fsr2l,f,c
  4546  000FD0  51BA               	movf	(f_open@dj+5)& (0+255),w,b
  4547  000FD2  22DA               	addwfc	fsr2h,f,c
  4548  000FD4  C186  FFDE         	movff	??_f_open,postinc2
  4549  000FD8  C187  FFDE         	movff	??_f_open+1,postinc2
  4550  000FDC  C188  FFDE         	movff	??_f_open+2,postinc2
  4551  000FE0  C189  FFDE         	movff	??_f_open+3,postinc2
  4552  000FE4                     l12360:
  4553                           
  4554                           ; BSR set to: 1
  4555                           ;tff.c: 940: }
  4556                           ;tff.c: 941: }
  4557                           ;tff.c: 942: if (mode & 0x08) {
  4558  000FE4  0101               	movlb	1	; () banked
  4559  000FE6  A785               	btfss	f_open@mode& (0+255),3,b
  4560  000FE8  D071               	goto	l12398
  4561                           
  4562                           ; BSR set to: 1
  4563                           ;tff.c: 943: dir[11] = 0;
  4564  000FEA  0101               	movlb	1	; () banked
  4565  000FEC  EE20 F00B          	lfsr	2,11
  4566  000FF0  51C7               	movf	f_open@dir& (0+255),w,b
  4567  000FF2  26D9               	addwf	fsr2l,f,c
  4568  000FF4  51C8               	movf	(f_open@dir+1)& (0+255),w,b
  4569  000FF6  22DA               	addwfc	fsr2h,f,c
  4570  000FF8  0E00               	movlw	0
  4571  000FFA  6EDF               	movwf	indf2,c
  4572                           
  4573                           ; BSR set to: 1
  4574                           ;tff.c: 944: dw = get_fattime();
  4575  000FFC  ECD5  F01F         	call	_get_fattime	;wreg free
  4576  001000  C016  F1B0         	movff	?_get_fattime,f_open@dw
  4577  001004  C017  F1B1         	movff	?_get_fattime+1,f_open@dw+1
  4578  001008  C018  F1B2         	movff	?_get_fattime+2,f_open@dw+2
  4579  00100C  C019  F1B3         	movff	?_get_fattime+3,f_open@dw+3
  4580                           
  4581                           ;tff.c: 945: *(volatile BYTE*)(&dir[14])=(BYTE)(dw); *(volatile BYTE*)((&dir[14])+1)=(BY
      +                          TE)((WORD)(dw)>>8); *(volatile BYTE*)((&dir[14])+2)=(BYTE)((DWORD)(dw)>>16); *(volatile 
      +                          BYTE*)((&dir[14])+3)=(BYTE)((DWORD)(dw)>>24);
  4582  001010  0E0E               	movlw	14
  4583  001012  0101               	movlb	1	; () banked
  4584  001014  25C7               	addwf	f_open@dir& (0+255),w,b
  4585  001016  6ED9               	movwf	fsr2l,c
  4586  001018  0E00               	movlw	0
  4587  00101A  0101               	movlb	1	; () banked
  4588  00101C  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4589  00101E  6EDA               	movwf	fsr2h,c
  4590  001020  C1B0  FFDF         	movff	f_open@dw,indf2
  4591                           
  4592                           ; BSR set to: 1
  4593  001024  0E0F               	movlw	15
  4594  001026  0101               	movlb	1	; () banked
  4595  001028  25C7               	addwf	f_open@dir& (0+255),w,b
  4596  00102A  6ED9               	movwf	fsr2l,c
  4597  00102C  0E00               	movlw	0
  4598  00102E  0101               	movlb	1	; () banked
  4599  001030  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4600  001032  6EDA               	movwf	fsr2h,c
  4601  001034  0101               	movlb	1	; () banked
  4602  001036  51B1               	movf	(f_open@dw+1)& (0+255),w,b
  4603  001038  6EDF               	movwf	indf2,c
  4604                           
  4605                           ; BSR set to: 1
  4606  00103A  0E10               	movlw	16
  4607  00103C  0101               	movlb	1	; () banked
  4608  00103E  25C7               	addwf	f_open@dir& (0+255),w,b
  4609  001040  6ED9               	movwf	fsr2l,c
  4610  001042  0E00               	movlw	0
  4611  001044  0101               	movlb	1	; () banked
  4612  001046  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4613  001048  6EDA               	movwf	fsr2h,c
  4614  00104A  C1B2  FFDF         	movff	f_open@dw+2,indf2
  4615                           
  4616                           ; BSR set to: 1
  4617  00104E  0E11               	movlw	17
  4618  001050  0101               	movlb	1	; () banked
  4619  001052  25C7               	addwf	f_open@dir& (0+255),w,b
  4620  001054  6ED9               	movwf	fsr2l,c
  4621  001056  0E00               	movlw	0
  4622  001058  0101               	movlb	1	; () banked
  4623  00105A  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4624  00105C  6EDA               	movwf	fsr2h,c
  4625  00105E  C1B3  FFDF         	movff	f_open@dw+3,indf2
  4626                           
  4627                           ; BSR set to: 1
  4628                           ;tff.c: 946: dj.fs->winflag = 1;
  4629  001062  0101               	movlb	1	; () banked
  4630  001064  EE20 F027          	lfsr	2,39
  4631  001068  51B9               	movf	(f_open@dj+4)& (0+255),w,b
  4632  00106A  26D9               	addwf	fsr2l,f,c
  4633  00106C  51BA               	movf	(f_open@dj+5)& (0+255),w,b
  4634  00106E  22DA               	addwfc	fsr2h,f,c
  4635  001070  0E01               	movlw	1
  4636  001072  6EDF               	movwf	indf2,c
  4637                           
  4638                           ; BSR set to: 1
  4639                           ;tff.c: 947: mode |= 0x20;
  4640  001074  0101               	movlb	1	; () banked
  4641  001076  8B85               	bsf	f_open@mode& (0+255),5,b
  4642                           
  4643                           ; BSR set to: 1
  4644                           ;tff.c: 948: }
  4645                           ;tff.c: 949: }
  4646  001078  D029               	goto	l12398
  4647  00107A                     l12378:
  4648                           
  4649                           ; BSR set to: 1
  4650                           ;tff.c: 951: else {
  4651                           ;tff.c: 953: if (res != FR_OK) return res;
  4652  00107A  0101               	movlb	1	; () banked
  4653  00107C  51B4               	movf	f_open@res& (0+255),w,b
  4654  00107E  0101               	movlb	1	; () banked
  4655  001080  B4D8               	btfsc	status,2,c
  4656  001082  D003               	goto	l12384
  4657                           
  4658                           ; BSR set to: 1
  4659  001084  0101               	movlb	1	; () banked
  4660  001086  51B4               	movf	f_open@res& (0+255),w,b
  4661                           
  4662                           ; BSR set to: 1
  4663  001088  0012               	return	
  4664  00108A                     l12384:
  4665                           
  4666                           ; BSR set to: 1
  4667                           ;tff.c: 954: if (!dir || (dir[11] & 0x10))
  4668  00108A  0101               	movlb	1	; () banked
  4669  00108C  51C7               	movf	f_open@dir& (0+255),w,b
  4670  00108E  0101               	movlb	1	; () banked
  4671  001090  11C8               	iorwf	(f_open@dir+1)& (0+255),w,b
  4672  001092  B4D8               	btfsc	status,2,c
  4673  001094  D00A               	goto	l12388
  4674                           
  4675                           ; BSR set to: 1
  4676  001096  0101               	movlb	1	; () banked
  4677  001098  EE20 F00B          	lfsr	2,11
  4678  00109C  51C7               	movf	f_open@dir& (0+255),w,b
  4679  00109E  26D9               	addwf	fsr2l,f,c
  4680  0010A0  51C8               	movf	(f_open@dir+1)& (0+255),w,b
  4681  0010A2  22DA               	addwfc	fsr2h,f,c
  4682  0010A4  0101               	movlb	1	; () banked
  4683  0010A6  A8DF               	btfss	indf2,4,c
  4684  0010A8  D002               	goto	l845
  4685  0010AA                     l12388:
  4686                           
  4687                           ; BSR set to: 1
  4688                           ;tff.c: 955: return FR_NO_FILE;
  4689  0010AA  0E02               	movlw	2
  4690                           
  4691                           ; BSR set to: 1
  4692  0010AC  0012               	return	
  4693  0010AE                     l845:
  4694                           
  4695                           ; BSR set to: 1
  4696                           ;tff.c: 957: if ((mode & 0x02) && (dir[11] & 0x01))
  4697  0010AE  0101               	movlb	1	; () banked
  4698  0010B0  A385               	btfss	f_open@mode& (0+255),1,b
  4699  0010B2  D00C               	goto	l12398
  4700                           
  4701                           ; BSR set to: 1
  4702  0010B4  0101               	movlb	1	; () banked
  4703  0010B6  EE20 F00B          	lfsr	2,11
  4704  0010BA  51C7               	movf	f_open@dir& (0+255),w,b
  4705  0010BC  26D9               	addwf	fsr2l,f,c
  4706  0010BE  51C8               	movf	(f_open@dir+1)& (0+255),w,b
  4707  0010C0  22DA               	addwfc	fsr2h,f,c
  4708  0010C2  0101               	movlb	1	; () banked
  4709  0010C4  A0DF               	btfss	indf2,0,c
  4710  0010C6  D002               	goto	l12398
  4711                           
  4712                           ; BSR set to: 1
  4713                           ;tff.c: 958: return FR_DENIED;
  4714  0010C8  0E06               	movlw	6
  4715                           
  4716                           ; BSR set to: 1
  4717  0010CA  0012               	return	
  4718  0010CC                     l12398:
  4719                           
  4720                           ; BSR set to: 1
  4721                           ;tff.c: 959: }
  4722                           ;tff.c: 960: fp->dir_sect = dj.fs->winsect;
  4723  0010CC  0101               	movlb	1	; () banked
  4724  0010CE  EE20 F004          	lfsr	2,4
  4725  0010D2  51B9               	movf	(f_open@dj+4)& (0+255),w,b
  4726  0010D4  26D9               	addwf	fsr2l,f,c
  4727  0010D6  51BA               	movf	(f_open@dj+5)& (0+255),w,b
  4728  0010D8  22DA               	addwfc	fsr2h,f,c
  4729  0010DA  0101               	movlb	1	; () banked
  4730  0010DC  EE10 F01A          	lfsr	1,26
  4731  0010E0  5181               	movf	f_open@fp& (0+255),w,b
  4732  0010E2  26E1               	addwf	fsr1l,f,c
  4733  0010E4  5182               	movf	(f_open@fp+1)& (0+255),w,b
  4734  0010E6  22E2               	addwfc	fsr1h,f,c
  4735  0010E8  CFDE FFE6          	movff	postinc2,postinc1
  4736  0010EC  CFDE FFE6          	movff	postinc2,postinc1
  4737  0010F0  CFDE FFE6          	movff	postinc2,postinc1
  4738  0010F4  CFDE FFE6          	movff	postinc2,postinc1
  4739                           
  4740                           ; BSR set to: 1
  4741                           ;tff.c: 961: fp->dir_ptr = dir;
  4742  0010F8  0101               	movlb	1	; () banked
  4743  0010FA  EE20 F01E          	lfsr	2,30
  4744  0010FE  5181               	movf	f_open@fp& (0+255),w,b
  4745  001100  26D9               	addwf	fsr2l,f,c
  4746  001102  5182               	movf	(f_open@fp+1)& (0+255),w,b
  4747  001104  22DA               	addwfc	fsr2h,f,c
  4748  001106  C1C7  FFDE         	movff	f_open@dir,postinc2
  4749  00110A  C1C8  FFDD         	movff	f_open@dir+1,postdec2
  4750                           
  4751                           ; BSR set to: 1
  4752                           ;tff.c: 963: fp->flag = mode;
  4753  00110E  0101               	movlb	1	; () banked
  4754  001110  EE20 F002          	lfsr	2,2
  4755  001114  5181               	movf	f_open@fp& (0+255),w,b
  4756  001116  26D9               	addwf	fsr2l,f,c
  4757  001118  5182               	movf	(f_open@fp+1)& (0+255),w,b
  4758  00111A  22DA               	addwfc	fsr2h,f,c
  4759  00111C  C185  FFDF         	movff	f_open@mode,indf2
  4760                           
  4761                           ; BSR set to: 1
  4762                           ;tff.c: 964: fp->org_clust =
  4763                           ;tff.c: 966: ((DWORD)(WORD)(((WORD)*(volatile BYTE*)((&dir[20])+1)<<8)|(WORD)*(volatile 
      +                          BYTE*)(&dir[20])) << 16) |
  4764                           ;tff.c: 968: (WORD)(((WORD)*(volatile BYTE*)((&dir[26])+1)<<8)|(WORD)*(volatile BYTE*)(&
      +                          dir[26]));
  4765  001120  0E1B               	movlw	27
  4766  001122  0101               	movlb	1	; () banked
  4767  001124  25C7               	addwf	f_open@dir& (0+255),w,b
  4768  001126  6ED9               	movwf	fsr2l,c
  4769  001128  0E00               	movlw	0
  4770  00112A  0101               	movlb	1	; () banked
  4771  00112C  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4772  00112E  6EDA               	movwf	fsr2h,c
  4773  001130  50DF               	movf	indf2,w,c
  4774  001132  0101               	movlb	1	; () banked
  4775  001134  6F86               	movwf	??_f_open& (0+255),b
  4776  001136  0101               	movlb	1	; () banked
  4777  001138  5186               	movf	??_f_open& (0+255),w,b
  4778  00113A  0101               	movlb	1	; () banked
  4779  00113C  6F88               	movwf	(??_f_open+2)& (0+255),b
  4780  00113E  6B87               	clrf	(??_f_open+1)& (0+255),b
  4781  001140  0E1A               	movlw	26
  4782  001142  0101               	movlb	1	; () banked
  4783  001144  25C7               	addwf	f_open@dir& (0+255),w,b
  4784  001146  6ED9               	movwf	fsr2l,c
  4785  001148  0E00               	movlw	0
  4786  00114A  0101               	movlb	1	; () banked
  4787  00114C  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4788  00114E  6EDA               	movwf	fsr2h,c
  4789  001150  50DF               	movf	indf2,w,c
  4790  001152  0101               	movlb	1	; () banked
  4791  001154  6F89               	movwf	(??_f_open+3)& (0+255),b
  4792  001156  0101               	movlb	1	; () banked
  4793  001158  5189               	movf	(??_f_open+3)& (0+255),w,b
  4794  00115A  0101               	movlb	1	; () banked
  4795  00115C  1387               	iorwf	(??_f_open+1)& (0+255),f,b
  4796  00115E  0E00               	movlw	0
  4797  001160  1388               	iorwf	(??_f_open+2)& (0+255),f,b
  4798  001162  0E15               	movlw	21
  4799  001164  0101               	movlb	1	; () banked
  4800  001166  25C7               	addwf	f_open@dir& (0+255),w,b
  4801  001168  6ED9               	movwf	fsr2l,c
  4802  00116A  0E00               	movlw	0
  4803  00116C  0101               	movlb	1	; () banked
  4804  00116E  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4805  001170  6EDA               	movwf	fsr2h,c
  4806  001172  50DF               	movf	indf2,w,c
  4807  001174  0101               	movlb	1	; () banked
  4808  001176  6F8A               	movwf	(??_f_open+4)& (0+255),b
  4809  001178  0101               	movlb	1	; () banked
  4810  00117A  518A               	movf	(??_f_open+4)& (0+255),w,b
  4811  00117C  0101               	movlb	1	; () banked
  4812  00117E  6F8C               	movwf	(??_f_open+6)& (0+255),b
  4813  001180  6B8B               	clrf	(??_f_open+5)& (0+255),b
  4814  001182  0E14               	movlw	20
  4815  001184  0101               	movlb	1	; () banked
  4816  001186  25C7               	addwf	f_open@dir& (0+255),w,b
  4817  001188  6ED9               	movwf	fsr2l,c
  4818  00118A  0E00               	movlw	0
  4819  00118C  0101               	movlb	1	; () banked
  4820  00118E  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4821  001190  6EDA               	movwf	fsr2h,c
  4822  001192  50DF               	movf	indf2,w,c
  4823  001194  0101               	movlb	1	; () banked
  4824  001196  6F8D               	movwf	(??_f_open+7)& (0+255),b
  4825  001198  0101               	movlb	1	; () banked
  4826  00119A  518D               	movf	(??_f_open+7)& (0+255),w,b
  4827  00119C  0101               	movlb	1	; () banked
  4828  00119E  118B               	iorwf	(??_f_open+5)& (0+255),w,b
  4829  0011A0  0101               	movlb	1	; () banked
  4830  0011A2  6F8E               	movwf	(??_f_open+8)& (0+255),b
  4831  0011A4  0101               	movlb	1	; () banked
  4832  0011A6  518C               	movf	(??_f_open+6)& (0+255),w,b
  4833  0011A8  0101               	movlb	1	; () banked
  4834  0011AA  6F8F               	movwf	(??_f_open+9)& (0+255),b
  4835  0011AC  0101               	movlb	1	; () banked
  4836  0011AE  6B90               	clrf	(??_f_open+10)& (0+255),b
  4837  0011B0  0101               	movlb	1	; () banked
  4838  0011B2  6B91               	clrf	(??_f_open+11)& (0+255),b
  4839  0011B4  C18F  F191         	movff	??_f_open+9,??_f_open+11
  4840  0011B8  C18E  F190         	movff	??_f_open+8,??_f_open+10
  4841  0011BC  0101               	movlb	1	; () banked
  4842  0011BE  6B8F               	clrf	(??_f_open+9)& (0+255),b
  4843  0011C0  6B8E               	clrf	(??_f_open+8)& (0+255),b
  4844  0011C2  0101               	movlb	1	; () banked
  4845  0011C4  5187               	movf	(??_f_open+1)& (0+255),w,b
  4846  0011C6  0101               	movlb	1	; () banked
  4847  0011C8  118E               	iorwf	(??_f_open+8)& (0+255),w,b
  4848  0011CA  0101               	movlb	1	; () banked
  4849  0011CC  6F92               	movwf	(??_f_open+12)& (0+255),b
  4850  0011CE  0101               	movlb	1	; () banked
  4851  0011D0  5188               	movf	(??_f_open+2)& (0+255),w,b
  4852  0011D2  0101               	movlb	1	; () banked
  4853  0011D4  118F               	iorwf	(??_f_open+9)& (0+255),w,b
  4854  0011D6  0101               	movlb	1	; () banked
  4855  0011D8  6F93               	movwf	(??_f_open+13)& (0+255),b
  4856  0011DA  0E00               	movlw	0
  4857  0011DC  0101               	movlb	1	; () banked
  4858  0011DE  1190               	iorwf	(??_f_open+10)& (0+255),w,b
  4859  0011E0  0101               	movlb	1	; () banked
  4860  0011E2  6F94               	movwf	(??_f_open+14)& (0+255),b
  4861  0011E4  0E00               	movlw	0
  4862  0011E6  0101               	movlb	1	; () banked
  4863  0011E8  1191               	iorwf	(??_f_open+11)& (0+255),w,b
  4864  0011EA  0101               	movlb	1	; () banked
  4865  0011EC  6F95               	movwf	(??_f_open+15)& (0+255),b
  4866  0011EE  0101               	movlb	1	; () banked
  4867  0011F0  EE20 F00E          	lfsr	2,14
  4868  0011F4  5181               	movf	f_open@fp& (0+255),w,b
  4869  0011F6  26D9               	addwf	fsr2l,f,c
  4870  0011F8  5182               	movf	(f_open@fp+1)& (0+255),w,b
  4871  0011FA  22DA               	addwfc	fsr2h,f,c
  4872  0011FC  C192  FFDE         	movff	??_f_open+12,postinc2
  4873  001200  C193  FFDE         	movff	??_f_open+13,postinc2
  4874  001204  C194  FFDE         	movff	??_f_open+14,postinc2
  4875  001208  C195  FFDE         	movff	??_f_open+15,postinc2
  4876                           
  4877                           ; BSR set to: 1
  4878                           ;tff.c: 969: fp->fsize = (DWORD)(((DWORD)*(volatile BYTE*)((&dir[28])+3)<<24)|((DWORD)*(
      +                          volatile BYTE*)((&dir[28])+2)<<16)|((WORD)*(volatile BYTE*)((&dir[28])+1)<<8)|*(volatile
      +                           BYTE*)(&dir[28]));
  4879  00120C  0E1D               	movlw	29
  4880  00120E  0101               	movlb	1	; () banked
  4881  001210  25C7               	addwf	f_open@dir& (0+255),w,b
  4882  001212  6ED9               	movwf	fsr2l,c
  4883  001214  0E00               	movlw	0
  4884  001216  0101               	movlb	1	; () banked
  4885  001218  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4886  00121A  6EDA               	movwf	fsr2h,c
  4887  00121C  50DF               	movf	indf2,w,c
  4888  00121E  0101               	movlb	1	; () banked
  4889  001220  6F86               	movwf	??_f_open& (0+255),b
  4890  001222  0101               	movlb	1	; () banked
  4891  001224  5186               	movf	??_f_open& (0+255),w,b
  4892  001226  0101               	movlb	1	; () banked
  4893  001228  6F88               	movwf	(??_f_open+2)& (0+255),b
  4894  00122A  6B87               	clrf	(??_f_open+1)& (0+255),b
  4895  00122C  0E1E               	movlw	30
  4896  00122E  0101               	movlb	1	; () banked
  4897  001230  25C7               	addwf	f_open@dir& (0+255),w,b
  4898  001232  6ED9               	movwf	fsr2l,c
  4899  001234  0E00               	movlw	0
  4900  001236  0101               	movlb	1	; () banked
  4901  001238  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4902  00123A  6EDA               	movwf	fsr2h,c
  4903  00123C  50DF               	movf	indf2,w,c
  4904  00123E  0101               	movlb	1	; () banked
  4905  001240  6F89               	movwf	(??_f_open+3)& (0+255),b
  4906  001242  C189  F18A         	movff	??_f_open+3,??_f_open+4
  4907  001246  0101               	movlb	1	; () banked
  4908  001248  6B8B               	clrf	(??_f_open+5)& (0+255),b
  4909  00124A  6B8C               	clrf	(??_f_open+6)& (0+255),b
  4910  00124C  6B8D               	clrf	(??_f_open+7)& (0+255),b
  4911  00124E  C18B  F18D         	movff	??_f_open+5,??_f_open+7
  4912  001252  C18A  F18C         	movff	??_f_open+4,??_f_open+6
  4913  001256  0101               	movlb	1	; () banked
  4914  001258  6B8B               	clrf	(??_f_open+5)& (0+255),b
  4915  00125A  6B8A               	clrf	(??_f_open+4)& (0+255),b
  4916  00125C  0E1F               	movlw	31
  4917  00125E  0101               	movlb	1	; () banked
  4918  001260  25C7               	addwf	f_open@dir& (0+255),w,b
  4919  001262  6ED9               	movwf	fsr2l,c
  4920  001264  0E00               	movlw	0
  4921  001266  0101               	movlb	1	; () banked
  4922  001268  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4923  00126A  6EDA               	movwf	fsr2h,c
  4924  00126C  50DF               	movf	indf2,w,c
  4925  00126E  0101               	movlb	1	; () banked
  4926  001270  6F8E               	movwf	(??_f_open+8)& (0+255),b
  4927  001272  C18E  F18F         	movff	??_f_open+8,??_f_open+9
  4928  001276  0101               	movlb	1	; () banked
  4929  001278  6B90               	clrf	(??_f_open+10)& (0+255),b
  4930  00127A  6B91               	clrf	(??_f_open+11)& (0+255),b
  4931  00127C  6B92               	clrf	(??_f_open+12)& (0+255),b
  4932  00127E  C18F  F192         	movff	??_f_open+9,??_f_open+12
  4933  001282  0101               	movlb	1	; () banked
  4934  001284  6B91               	clrf	(??_f_open+11)& (0+255),b
  4935  001286  6B90               	clrf	(??_f_open+10)& (0+255),b
  4936  001288  6B8F               	clrf	(??_f_open+9)& (0+255),b
  4937  00128A  0101               	movlb	1	; () banked
  4938  00128C  518A               	movf	(??_f_open+4)& (0+255),w,b
  4939  00128E  0101               	movlb	1	; () banked
  4940  001290  118F               	iorwf	(??_f_open+9)& (0+255),w,b
  4941  001292  0101               	movlb	1	; () banked
  4942  001294  6F93               	movwf	(??_f_open+13)& (0+255),b
  4943  001296  0101               	movlb	1	; () banked
  4944  001298  518B               	movf	(??_f_open+5)& (0+255),w,b
  4945  00129A  0101               	movlb	1	; () banked
  4946  00129C  1190               	iorwf	(??_f_open+10)& (0+255),w,b
  4947  00129E  0101               	movlb	1	; () banked
  4948  0012A0  6F94               	movwf	(??_f_open+14)& (0+255),b
  4949  0012A2  0101               	movlb	1	; () banked
  4950  0012A4  518C               	movf	(??_f_open+6)& (0+255),w,b
  4951  0012A6  0101               	movlb	1	; () banked
  4952  0012A8  1191               	iorwf	(??_f_open+11)& (0+255),w,b
  4953  0012AA  0101               	movlb	1	; () banked
  4954  0012AC  6F95               	movwf	(??_f_open+15)& (0+255),b
  4955  0012AE  0101               	movlb	1	; () banked
  4956  0012B0  518D               	movf	(??_f_open+7)& (0+255),w,b
  4957  0012B2  0101               	movlb	1	; () banked
  4958  0012B4  1192               	iorwf	(??_f_open+12)& (0+255),w,b
  4959  0012B6  0101               	movlb	1	; () banked
  4960  0012B8  6F96               	movwf	(??_f_open+16)& (0+255),b
  4961  0012BA  0101               	movlb	1	; () banked
  4962  0012BC  5187               	movf	(??_f_open+1)& (0+255),w,b
  4963  0012BE  0101               	movlb	1	; () banked
  4964  0012C0  1193               	iorwf	(??_f_open+13)& (0+255),w,b
  4965  0012C2  0101               	movlb	1	; () banked
  4966  0012C4  6F97               	movwf	(??_f_open+17)& (0+255),b
  4967  0012C6  0101               	movlb	1	; () banked
  4968  0012C8  5188               	movf	(??_f_open+2)& (0+255),w,b
  4969  0012CA  0101               	movlb	1	; () banked
  4970  0012CC  1194               	iorwf	(??_f_open+14)& (0+255),w,b
  4971  0012CE  0101               	movlb	1	; () banked
  4972  0012D0  6F98               	movwf	(??_f_open+18)& (0+255),b
  4973  0012D2  0E00               	movlw	0
  4974  0012D4  0101               	movlb	1	; () banked
  4975  0012D6  1195               	iorwf	(??_f_open+15)& (0+255),w,b
  4976  0012D8  0101               	movlb	1	; () banked
  4977  0012DA  6F99               	movwf	(??_f_open+19)& (0+255),b
  4978  0012DC  0E00               	movlw	0
  4979  0012DE  0101               	movlb	1	; () banked
  4980  0012E0  1196               	iorwf	(??_f_open+16)& (0+255),w,b
  4981  0012E2  0101               	movlb	1	; () banked
  4982  0012E4  6F9A               	movwf	(??_f_open+20)& (0+255),b
  4983  0012E6  0E1C               	movlw	28
  4984  0012E8  0101               	movlb	1	; () banked
  4985  0012EA  25C7               	addwf	f_open@dir& (0+255),w,b
  4986  0012EC  6ED9               	movwf	fsr2l,c
  4987  0012EE  0E00               	movlw	0
  4988  0012F0  0101               	movlb	1	; () banked
  4989  0012F2  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4990  0012F4  6EDA               	movwf	fsr2h,c
  4991  0012F6  50DF               	movf	indf2,w,c
  4992  0012F8  0101               	movlb	1	; () banked
  4993  0012FA  6F9B               	movwf	(??_f_open+21)& (0+255),b
  4994  0012FC  0101               	movlb	1	; () banked
  4995  0012FE  519B               	movf	(??_f_open+21)& (0+255),w,b
  4996  001300  0101               	movlb	1	; () banked
  4997  001302  1197               	iorwf	(??_f_open+17)& (0+255),w,b
  4998  001304  0101               	movlb	1	; () banked
  4999  001306  6F9C               	movwf	(??_f_open+22)& (0+255),b
  5000  001308  0101               	movlb	1	; () banked
  5001  00130A  5198               	movf	(??_f_open+18)& (0+255),w,b
  5002  00130C  0101               	movlb	1	; () banked
  5003  00130E  6F9D               	movwf	(??_f_open+23)& (0+255),b
  5004  001310  0101               	movlb	1	; () banked
  5005  001312  5199               	movf	(??_f_open+19)& (0+255),w,b
  5006  001314  0101               	movlb	1	; () banked
  5007  001316  6F9E               	movwf	(??_f_open+24)& (0+255),b
  5008  001318  0101               	movlb	1	; () banked
  5009  00131A  519A               	movf	(??_f_open+20)& (0+255),w,b
  5010  00131C  0101               	movlb	1	; () banked
  5011  00131E  6F9F               	movwf	(??_f_open+25)& (0+255),b
  5012  001320  0101               	movlb	1	; () banked
  5013  001322  EE20 F00A          	lfsr	2,10
  5014  001326  5181               	movf	f_open@fp& (0+255),w,b
  5015  001328  26D9               	addwf	fsr2l,f,c
  5016  00132A  5182               	movf	(f_open@fp+1)& (0+255),w,b
  5017  00132C  22DA               	addwfc	fsr2h,f,c
  5018  00132E  C19C  FFDE         	movff	??_f_open+22,postinc2
  5019  001332  C19D  FFDE         	movff	??_f_open+23,postinc2
  5020  001336  C19E  FFDE         	movff	??_f_open+24,postinc2
  5021  00133A  C19F  FFDE         	movff	??_f_open+25,postinc2
  5022                           
  5023                           ; BSR set to: 1
  5024                           ;tff.c: 970: fp->fptr = 0; fp->csect = 255;
  5025  00133E  0101               	movlb	1	; () banked
  5026  001340  EE20 F006          	lfsr	2,6
  5027  001344  5181               	movf	f_open@fp& (0+255),w,b
  5028  001346  26D9               	addwf	fsr2l,f,c
  5029  001348  5182               	movf	(f_open@fp+1)& (0+255),w,b
  5030  00134A  22DA               	addwfc	fsr2h,f,c
  5031  00134C  6ADE               	clrf	postinc2,c
  5032  00134E  6ADE               	clrf	postinc2,c
  5033  001350  6ADE               	clrf	postinc2,c
  5034  001352  6ADD               	clrf	postdec2,c
  5035                           
  5036                           ; BSR set to: 1
  5037  001354  0101               	movlb	1	; () banked
  5038  001356  EE20 F003          	lfsr	2,3
  5039  00135A  5181               	movf	f_open@fp& (0+255),w,b
  5040  00135C  26D9               	addwf	fsr2l,f,c
  5041  00135E  5182               	movf	(f_open@fp+1)& (0+255),w,b
  5042  001360  22DA               	addwfc	fsr2h,f,c
  5043  001362  0EFF               	movlw	255
  5044  001364  6EDF               	movwf	indf2,c
  5045                           
  5046                           ; BSR set to: 1
  5047                           ;tff.c: 971: fp->fs = dj.fs; fp->id = dj.fs->id;
  5048  001366  0101               	movlb	1	; () banked
  5049  001368  EE20 F004          	lfsr	2,4
  5050  00136C  5181               	movf	f_open@fp& (0+255),w,b
  5051  00136E  26D9               	addwf	fsr2l,f,c
  5052  001370  5182               	movf	(f_open@fp+1)& (0+255),w,b
  5053  001372  22DA               	addwfc	fsr2h,f,c
  5054  001374  C1B9  FFDE         	movff	f_open@dj+4,postinc2
  5055  001378  C1BA  FFDD         	movff	f_open@dj+5,postdec2
  5056                           
  5057                           ; BSR set to: 1
  5058  00137C  C1B9  FFD9         	movff	f_open@dj+4,fsr2l
  5059  001380  C1BA  FFDA         	movff	f_open@dj+5,fsr2h
  5060  001384  C181  FFE1         	movff	f_open@fp,fsr1l
  5061  001388  C182  FFE2         	movff	f_open@fp+1,fsr1h
  5062  00138C  CFDE FFE6          	movff	postinc2,postinc1
  5063  001390  CFDD FFE5          	movff	postdec2,postdec1
  5064                           
  5065                           ; BSR set to: 1
  5066                           ;tff.c: 973: return FR_OK;
  5067  001394  0E00               	movlw	0
  5068  001396  0012               	return	
  5069  001398                     __end_of_f_open:
  5070                           	opt stack 0
  5071                           tosu	equ	0xFFF
  5072                           tosh	equ	0xFFE
  5073                           tosl	equ	0xFFD
  5074                           pclath	equ	0xFFA
  5075                           tblptru	equ	0xFF8
  5076                           tblptrh	equ	0xFF7
  5077                           tblptrl	equ	0xFF6
  5078                           tablat	equ	0xFF5
  5079                           prodh	equ	0xFF4
  5080                           prodl	equ	0xFF3
  5081                           intcon	equ	0xFF2
  5082                           intcon2	equ	0xFF1
  5083                           intcon3	equ	0xFF0
  5084                           postinc0	equ	0xFEE
  5085                           wreg	equ	0xFE8
  5086                           postinc1	equ	0xFE6
  5087                           postdec1	equ	0xFE5
  5088                           fsr1h	equ	0xFE2
  5089                           fsr1l	equ	0xFE1
  5090                           indf2	equ	0xFDF
  5091                           postinc2	equ	0xFDE
  5092                           postdec2	equ	0xFDD
  5093                           fsr2h	equ	0xFDA
  5094                           fsr2l	equ	0xFD9
  5095                           status	equ	0xFD8
  5096                           
  5097 ;; *************** function _trace_path *****************
  5098 ;; Defined at:
  5099 ;;		line 501 in file "bibliotecas/tff.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;  dj              2  131[BANK0 ] PTR struct _DIR
  5102 ;;		 -> f_rename@dj(18), f_utime@dj(18), f_chmod@dj(18), f_mkdir@dj(18), 
  5103 ;;		 -> f_unlink@dj(18), f_stat@dj(18), f_open@dj(18), 
  5104 ;;  fn              2  133[BANK0 ] PTR unsigned char 
  5105 ;;		 -> f_rename@fn(12), f_utime@fn(12), f_chmod@fn(12), f_mkdir@fn(12), 
  5106 ;;		 -> f_unlink@fn(12), f_stat@fn(12), f_opendir@fn(12), f_open@fn(12), 
  5107 ;;  path            2  135[BANK0 ] PTR const unsigned char 
  5108 ;;		 -> STR_38(10), 
  5109 ;;  dir             2  137[BANK0 ] PTR PTR unsigned char 
  5110 ;;		 -> f_rename@dir_new(2), f_rename@dir_old(2), f_utime@dir(2), f_chmod@dir(2), 
  5111 ;;		 -> f_mkdir@dir(2), f_unlink@dir(2), f_stat@dir(2), f_opendir@dir(2), 
  5112 ;;		 -> f_open@dir(2), 
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;  clust           4    7[BANK1 ] unsigned long 
  5115 ;;  dptr            2   11[BANK1 ] PTR unsigned char 
  5116 ;;		 -> fs.win(512), fs(552), NULL(0), 
  5117 ;;  fs              2    4[BANK1 ] PTR struct _FATFS
  5118 ;;		 -> fs(552), NULL(0), 
  5119 ;;  ds              1    6[BANK1 ] unsigned char 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  1    wreg      enum E155
  5122 ;; Registers used:
  5123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5129 ;;      Params:         0       8       0       0       0       0       0       0       0
  5130 ;;      Locals:         0       0      13       0       0       0       0       0       0
  5131 ;;      Temps:          0      12       0       0       0       0       0       0       0
  5132 ;;      Totals:         0      20      13       0       0       0       0       0       0
  5133 ;;Total ram usage:       33 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:   11
  5136 ;; This function calls:
  5137 ;;		_clust2sect
  5138 ;;		_make_dirfile
  5139 ;;		_memcmp
  5140 ;;		_move_window
  5141 ;;		_next_dir_entry
  5142 ;; This function is called by:
  5143 ;;		_f_open
  5144 ;;		_f_opendir
  5145 ;;		_f_stat
  5146 ;;		_f_unlink
  5147 ;;		_f_mkdir
  5148 ;;		_f_chmod
  5149 ;;		_f_utime
  5150 ;;		_f_rename
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text16
  5155  002458                     __ptext16:
  5156                           	opt stack 0
  5157  002458                     _trace_path:
  5158                           	opt stack 16
  5159                           
  5160                           ;tff.c: 508: CLUST clust;
  5161                           ;tff.c: 509: char ds;
  5162                           ;tff.c: 510: BYTE *dptr = (0);
  5163                           
  5164                           ;incstack = 0
  5165  002458  0E00               	movlw	0
  5166  00245A  0101               	movlb	1	; () banked
  5167  00245C  6F7E               	movwf	trace_path@dptr& (0+255),b
  5168  00245E  0E00               	movlw	0
  5169  002460  0101               	movlb	1	; () banked
  5170  002462  6F7F               	movwf	(trace_path@dptr+1)& (0+255),b
  5171                           
  5172                           ;tff.c: 511: FATFS *fs = FatFs;
  5173  002464  C0FC  F177         	movff	_FatFs,trace_path@fs
  5174  002468  C0FD  F178         	movff	_FatFs+1,trace_path@fs+1
  5175                           
  5176                           ; BSR set to: 1
  5177                           ;tff.c: 514: dj->fs = fs;
  5178  00246C  0100               	movlb	0	; () banked
  5179  00246E  EE20 F004          	lfsr	2,4
  5180  002472  51E3               	movf	trace_path@dj& (0+255),w,b
  5181  002474  26D9               	addwf	fsr2l,f,c
  5182  002476  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5183  002478  22DA               	addwfc	fsr2h,f,c
  5184  00247A  C177  FFDE         	movff	trace_path@fs,postinc2
  5185  00247E  C178  FFDD         	movff	trace_path@fs+1,postdec2
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;tff.c: 515: clust = fs->dirbase;
  5189  002482  0101               	movlb	1	; () banked
  5190  002484  EE20 F00C          	lfsr	2,12
  5191  002488  5177               	movf	trace_path@fs& (0+255),w,b
  5192  00248A  26D9               	addwf	fsr2l,f,c
  5193  00248C  5178               	movf	(trace_path@fs+1)& (0+255),w,b
  5194  00248E  22DA               	addwfc	fsr2h,f,c
  5195  002490  CFDE F17A          	movff	postinc2,trace_path@clust
  5196  002494  CFDE F17B          	movff	postinc2,trace_path@clust+1
  5197  002498  CFDE F17C          	movff	postinc2,trace_path@clust+2
  5198  00249C  CFDE F17D          	movff	postinc2,trace_path@clust+3
  5199                           
  5200                           ; BSR set to: 1
  5201                           ;tff.c: 517: if (fs->fs_type == 3) {
  5202  0024A0  0101               	movlb	1	; () banked
  5203  0024A2  EE20 F024          	lfsr	2,36
  5204  0024A6  5177               	movf	trace_path@fs& (0+255),w,b
  5205  0024A8  26D9               	addwf	fsr2l,f,c
  5206  0024AA  5178               	movf	(trace_path@fs+1)& (0+255),w,b
  5207  0024AC  22DA               	addwfc	fsr2h,f,c
  5208  0024AE  0E03               	movlw	3
  5209  0024B0  18DE               	xorwf	postinc2,w,c
  5210  0024B2  A4D8               	btfss	status,2,c
  5211  0024B4  D03A               	goto	l11922
  5212                           
  5213                           ; BSR set to: 1
  5214                           ;tff.c: 518: dj->clust = dj->sclust = clust;
  5215  0024B6  0100               	movlb	0	; () banked
  5216  0024B8  EE20 F006          	lfsr	2,6
  5217  0024BC  51E3               	movf	trace_path@dj& (0+255),w,b
  5218  0024BE  26D9               	addwf	fsr2l,f,c
  5219  0024C0  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5220  0024C2  22DA               	addwfc	fsr2h,f,c
  5221  0024C4  C17A  FFDE         	movff	trace_path@clust,postinc2
  5222  0024C8  C17B  FFDE         	movff	trace_path@clust+1,postinc2
  5223  0024CC  C17C  FFDE         	movff	trace_path@clust+2,postinc2
  5224  0024D0  C17D  FFDD         	movff	trace_path@clust+3,postdec2
  5225  0024D4  52DD               	movf	postdec2,f,c
  5226  0024D6  52DD               	movf	postdec2,f,c
  5227  0024D8  0100               	movlb	0	; () banked
  5228  0024DA  EE10 F00A          	lfsr	1,10
  5229  0024DE  51E3               	movf	trace_path@dj& (0+255),w,b
  5230  0024E0  26E1               	addwf	fsr1l,f,c
  5231  0024E2  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5232  0024E4  22E2               	addwfc	fsr1h,f,c
  5233  0024E6  CFDE FFE6          	movff	postinc2,postinc1
  5234  0024EA  CFDE FFE6          	movff	postinc2,postinc1
  5235  0024EE  CFDE FFE6          	movff	postinc2,postinc1
  5236  0024F2  CFDE FFE6          	movff	postinc2,postinc1
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;tff.c: 519: dj->sect = clust2sect(clust);
  5240  0024F6  C17A  F022         	movff	trace_path@clust,clust2sect@clust
  5241  0024FA  C17B  F023         	movff	trace_path@clust+1,clust2sect@clust+1
  5242  0024FE  C17C  F024         	movff	trace_path@clust+2,clust2sect@clust+2
  5243  002502  C17D  F025         	movff	trace_path@clust+3,clust2sect@clust+3
  5244  002506  EC22  F023         	call	_clust2sect	;wreg free
  5245  00250A  0100               	movlb	0	; () banked
  5246  00250C  EE20 F00E          	lfsr	2,14
  5247  002510  51E3               	movf	trace_path@dj& (0+255),w,b
  5248  002512  26D9               	addwf	fsr2l,f,c
  5249  002514  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5250  002516  22DA               	addwfc	fsr2h,f,c
  5251  002518  C022  FFDE         	movff	?_clust2sect,postinc2
  5252  00251C  C023  FFDE         	movff	?_clust2sect+1,postinc2
  5253  002520  C024  FFDE         	movff	?_clust2sect+2,postinc2
  5254  002524  C025  FFDE         	movff	?_clust2sect+3,postinc2
  5255                           
  5256                           ;tff.c: 520: } else
  5257  002528  D02B               	goto	l11926
  5258  00252A                     l11922:
  5259                           
  5260                           ;tff.c: 522: {
  5261                           ;tff.c: 523: dj->clust = dj->sclust = 0;
  5262  00252A  0100               	movlb	0	; () banked
  5263  00252C  EE20 F006          	lfsr	2,6
  5264  002530  51E3               	movf	trace_path@dj& (0+255),w,b
  5265  002532  26D9               	addwf	fsr2l,f,c
  5266  002534  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5267  002536  22DA               	addwfc	fsr2h,f,c
  5268  002538  6ADE               	clrf	postinc2,c
  5269  00253A  6ADE               	clrf	postinc2,c
  5270  00253C  6ADE               	clrf	postinc2,c
  5271  00253E  6ADD               	clrf	postdec2,c
  5272  002540  52DD               	movf	postdec2,f,c
  5273  002542  52DD               	movf	postdec2,f,c
  5274  002544  0100               	movlb	0	; () banked
  5275  002546  EE10 F00A          	lfsr	1,10
  5276  00254A  51E3               	movf	trace_path@dj& (0+255),w,b
  5277  00254C  26E1               	addwf	fsr1l,f,c
  5278  00254E  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5279  002550  22E2               	addwfc	fsr1h,f,c
  5280  002552  CFDE FFE6          	movff	postinc2,postinc1
  5281  002556  CFDE FFE6          	movff	postinc2,postinc1
  5282  00255A  CFDE FFE6          	movff	postinc2,postinc1
  5283  00255E  CFDE FFE6          	movff	postinc2,postinc1
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;tff.c: 524: dj->sect = clust;
  5287  002562  0100               	movlb	0	; () banked
  5288  002564  EE20 F00E          	lfsr	2,14
  5289  002568  51E3               	movf	trace_path@dj& (0+255),w,b
  5290  00256A  26D9               	addwf	fsr2l,f,c
  5291  00256C  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5292  00256E  22DA               	addwfc	fsr2h,f,c
  5293  002570  C17A  FFDE         	movff	trace_path@clust,postinc2
  5294  002574  C17B  FFDE         	movff	trace_path@clust+1,postinc2
  5295  002578  C17C  FFDE         	movff	trace_path@clust+2,postinc2
  5296  00257C  C17D  FFDE         	movff	trace_path@clust+3,postinc2
  5297  002580                     l11926:
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;tff.c: 525: }
  5301                           ;tff.c: 526: dj->index = 0;
  5302  002580  0100               	movlb	0	; () banked
  5303  002582  EE20 F002          	lfsr	2,2
  5304  002586  51E3               	movf	trace_path@dj& (0+255),w,b
  5305  002588  26D9               	addwf	fsr2l,f,c
  5306  00258A  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5307  00258C  22DA               	addwfc	fsr2h,f,c
  5308  00258E  0E00               	movlw	0
  5309  002590  6EDE               	movwf	postinc2,c
  5310  002592  0E00               	movlw	0
  5311  002594  6EDD               	movwf	postdec2,c
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;tff.c: 528: if (*path == '\0') {
  5315  002596  C0E7  FFF6         	movff	trace_path@path,tblptrl
  5316  00259A  C0E8  FFF7         	movff	trace_path@path+1,tblptrh
  5317  00259E                     	if	0	;tblptru may be non-zero
  5318  00259E                     	endif
  5319  00259E                     	if	0	;tblptru may be non-zero
  5320  00259E                     	endif
  5321  00259E  0008               	tblrd		*
  5322  0025A0  50F5               	movf	tablat,w,c
  5323  0025A2  0900               	iorlw	0
  5324  0025A4  A4D8               	btfss	status,2,c
  5325  0025A6  D00A               	goto	l11936
  5326                           
  5327                           ; BSR set to: 0
  5328                           ;tff.c: 529: *dir = (0); return FR_OK;
  5329  0025A8  C0E9  FFD9         	movff	trace_path@dir,fsr2l
  5330  0025AC  C0EA  FFDA         	movff	trace_path@dir+1,fsr2h
  5331  0025B0  0E00               	movlw	0
  5332  0025B2  6EDE               	movwf	postinc2,c
  5333  0025B4  0E00               	movlw	0
  5334  0025B6  6EDD               	movwf	postdec2,c
  5335                           
  5336                           ; BSR set to: 0
  5337  0025B8  0E00               	movlw	0
  5338                           
  5339                           ; BSR set to: 0
  5340  0025BA  0012               	return	
  5341  0025BC                     l11936:
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;tff.c: 533: ds = make_dirfile(&path, fn);
  5345  0025BC  0EE7               	movlw	low trace_path@path
  5346  0025BE  6E1E               	movwf	make_dirfile@path,c
  5347  0025C0  0E00               	movlw	high trace_path@path
  5348  0025C2  6E1F               	movwf	make_dirfile@path+1,c
  5349  0025C4  C0E5  F020         	movff	trace_path@fn,make_dirfile@dirname
  5350  0025C8  C0E6  F021         	movff	trace_path@fn+1,make_dirfile@dirname+1
  5351  0025CC  ECA0  F020         	call	_make_dirfile	;wreg free
  5352  0025D0  0101               	movlb	1	; () banked
  5353  0025D2  6F79               	movwf	trace_path@ds& (0+255),b
  5354                           
  5355                           ; BSR set to: 1
  5356                           ;tff.c: 534: if (ds == 1) return FR_INVALID_NAME;
  5357  0025D4  0101               	movlb	1	; () banked
  5358  0025D6  0579               	decf	trace_path@ds& (0+255),w,b
  5359  0025D8  A4D8               	btfss	status,2,c
  5360  0025DA  D002               	goto	l11944
  5361                           
  5362                           ; BSR set to: 1
  5363  0025DC  0E04               	movlw	4
  5364                           
  5365                           ; BSR set to: 1
  5366  0025DE  0012               	return	
  5367  0025E0                     l11944:
  5368                           
  5369                           ;tff.c: 536: if (!move_window(dj->sect)) return FR_RW_ERROR;
  5370  0025E0  0100               	movlb	0	; () banked
  5371  0025E2  EE20 F00E          	lfsr	2,14
  5372  0025E6  51E3               	movf	trace_path@dj& (0+255),w,b
  5373  0025E8  26D9               	addwf	fsr2l,f,c
  5374  0025EA  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5375  0025EC  22DA               	addwfc	fsr2h,f,c
  5376  0025EE  CFDE F083          	movff	postinc2,move_window@sector
  5377  0025F2  CFDE F084          	movff	postinc2,move_window@sector+1
  5378  0025F6  CFDE F085          	movff	postinc2,move_window@sector+2
  5379  0025FA  CFDE F086          	movff	postinc2,move_window@sector+3
  5380  0025FE  ECB4  F01C         	call	_move_window	;wreg free
  5381  002602  0900               	iorlw	0
  5382  002604  A4D8               	btfss	status,2,c
  5383  002606  D002               	goto	l11950
  5384  002608  0E08               	movlw	8
  5385  00260A  0012               	return	
  5386  00260C                     l11950:
  5387                           
  5388                           ;tff.c: 537: dptr = &fs->win[(dj->index & 15) * 32];
  5389  00260C  0100               	movlb	0	; () banked
  5390  00260E  EE20 F002          	lfsr	2,2
  5391  002612  51E3               	movf	trace_path@dj& (0+255),w,b
  5392  002614  26D9               	addwf	fsr2l,f,c
  5393  002616  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5394  002618  22DA               	addwfc	fsr2h,f,c
  5395  00261A  CFDE F0EB          	movff	postinc2,??_trace_path
  5396  00261E  CFDD F0EC          	movff	postdec2,??_trace_path+1
  5397  002622  0E0F               	movlw	15
  5398  002624  0100               	movlb	0	; () banked
  5399  002626  17EB               	andwf	??_trace_path& (0+255),f,b
  5400  002628  0E00               	movlw	0
  5401  00262A  17EC               	andwf	(??_trace_path+1)& (0+255),f,b
  5402  00262C  0E05               	movlw	5
  5403  00262E                     u13505:
  5404  00262E  90D8               	bcf	status,0,c
  5405  002630  0100               	movlb	0	; () banked
  5406  002632  37EB               	rlcf	??_trace_path& (0+255),f,b
  5407  002634  37EC               	rlcf	(??_trace_path+1)& (0+255),f,b
  5408  002636  2EE8               	decfsz	wreg,f,c
  5409  002638  D7FA               	goto	u13505
  5410  00263A  0E28               	movlw	40
  5411  00263C  0100               	movlb	0	; () banked
  5412  00263E  27EB               	addwf	??_trace_path& (0+255),f,b
  5413  002640  0E00               	movlw	0
  5414  002642  23EC               	addwfc	(??_trace_path+1)& (0+255),f,b
  5415  002644  0100               	movlb	0	; () banked
  5416  002646  51EB               	movf	??_trace_path& (0+255),w,b
  5417  002648  0101               	movlb	1	; () banked
  5418  00264A  2577               	addwf	trace_path@fs& (0+255),w,b
  5419  00264C  0101               	movlb	1	; () banked
  5420  00264E  6F7E               	movwf	trace_path@dptr& (0+255),b
  5421  002650  0100               	movlb	0	; () banked
  5422  002652  51EC               	movf	(??_trace_path+1)& (0+255),w,b
  5423  002654  0101               	movlb	1	; () banked
  5424  002656  2178               	addwfc	(trace_path@fs+1)& (0+255),w,b
  5425  002658  0101               	movlb	1	; () banked
  5426  00265A  6F7F               	movwf	(trace_path@dptr+1)& (0+255),b
  5427                           
  5428                           ; BSR set to: 1
  5429                           ;tff.c: 538: if (dptr[0] == 0)
  5430  00265C  C17E  FFD9         	movff	trace_path@dptr,fsr2l
  5431  002660  C17F  FFDA         	movff	trace_path@dptr+1,fsr2h
  5432  002664  50DF               	movf	indf2,w,c
  5433  002666  A4D8               	btfss	status,2,c
  5434  002668  D012               	goto	l11962
  5435                           
  5436                           ; BSR set to: 1
  5437                           ;tff.c: 539: return !ds ? FR_NO_FILE : FR_NO_PATH;
  5438  00266A  0101               	movlb	1	; () banked
  5439  00266C  5179               	movf	trace_path@ds& (0+255),w,b
  5440  00266E  0101               	movlb	1	; () banked
  5441  002670  B4D8               	btfsc	status,2,c
  5442  002672  D005               	goto	l11958
  5443                           
  5444                           ; BSR set to: 1
  5445  002674  0E00               	movlw	0
  5446  002676  0101               	movlb	1	; () banked
  5447  002678  6F74               	movwf	(_trace_path$1248+1)& (0+255),b
  5448  00267A  0E03               	movlw	3
  5449  00267C  D004               	goto	L1
  5450  00267E                     l11958:
  5451                           
  5452                           ; BSR set to: 1
  5453  00267E  0E00               	movlw	0
  5454  002680  0101               	movlb	1	; () banked
  5455  002682  6F74               	movwf	(_trace_path$1248+1)& (0+255),b
  5456  002684  0E02               	movlw	2
  5457  002686                     L1:
  5458  002686  6F73               	movwf	_trace_path$1248& (0+255),b
  5459                           
  5460                           ; BSR set to: 1
  5461  002688  0101               	movlb	1	; () banked
  5462  00268A  5173               	movf	_trace_path$1248& (0+255),w,b
  5463                           
  5464                           ; BSR set to: 1
  5465  00268C  0012               	return	
  5466  00268E                     l11962:
  5467                           
  5468                           ; BSR set to: 1
  5469                           ;tff.c: 540: if (dptr[0] != 0xE5
  5470                           ;tff.c: 541: && !(dptr[11] & 0x08)
  5471                           ;tff.c: 542: && !memcmp(&dptr[0], fn, 8+3) ) break;
  5472  00268E  C17E  FFD9         	movff	trace_path@dptr,fsr2l
  5473  002692  C17F  FFDA         	movff	trace_path@dptr+1,fsr2h
  5474  002696  0EE5               	movlw	229
  5475  002698  18DE               	xorwf	postinc2,w,c
  5476  00269A  B4D8               	btfsc	status,2,c
  5477  00269C  D01C               	goto	l11970
  5478                           
  5479                           ; BSR set to: 1
  5480  00269E  0101               	movlb	1	; () banked
  5481  0026A0  EE20 F00B          	lfsr	2,11
  5482  0026A4  517E               	movf	trace_path@dptr& (0+255),w,b
  5483  0026A6  26D9               	addwf	fsr2l,f,c
  5484  0026A8  517F               	movf	(trace_path@dptr+1)& (0+255),w,b
  5485  0026AA  22DA               	addwfc	fsr2h,f,c
  5486  0026AC  0101               	movlb	1	; () banked
  5487  0026AE  B6DF               	btfsc	indf2,3,c
  5488  0026B0  D012               	goto	l11970
  5489                           
  5490                           ; BSR set to: 1
  5491  0026B2  C17E  F016         	movff	trace_path@dptr,memcmp@s1
  5492  0026B6  C17F  F017         	movff	trace_path@dptr+1,memcmp@s1+1
  5493  0026BA  C0E5  F018         	movff	trace_path@fn,memcmp@s2
  5494  0026BE  C0E6  F019         	movff	trace_path@fn+1,memcmp@s2+1
  5495  0026C2  0E00               	movlw	0
  5496  0026C4  6E1B               	movwf	memcmp@n+1,c
  5497  0026C6  0E0B               	movlw	11
  5498  0026C8  6E1A               	movwf	memcmp@n,c
  5499  0026CA  EC7D  F024         	call	_memcmp	;wreg free
  5500  0026CE  5016               	movf	?_memcmp,w,c
  5501  0026D0  1017               	iorwf	?_memcmp+1,w,c
  5502  0026D2  B4D8               	btfsc	status,2,c
  5503  0026D4  D01B               	goto	l11980
  5504  0026D6                     l11970:
  5505                           
  5506                           ;tff.c: 543: if (!next_dir_entry(dj))
  5507  0026D6  C0E3  F0D4         	movff	trace_path@dj,next_dir_entry@dj
  5508  0026DA  C0E4  F0D5         	movff	trace_path@dj+1,next_dir_entry@dj+1
  5509  0026DE  ECC9  F01D         	call	_next_dir_entry	;wreg free
  5510  0026E2  0900               	iorlw	0
  5511  0026E4  A4D8               	btfss	status,2,c
  5512  0026E6  D77C               	goto	l11944
  5513                           
  5514                           ;tff.c: 544: return !ds ? FR_NO_FILE : FR_NO_PATH;
  5515  0026E8  0101               	movlb	1	; () banked
  5516  0026EA  5179               	movf	trace_path@ds& (0+255),w,b
  5517  0026EC  0101               	movlb	1	; () banked
  5518  0026EE  B4D8               	btfsc	status,2,c
  5519  0026F0  D005               	goto	l11976
  5520                           
  5521                           ; BSR set to: 1
  5522  0026F2  0E00               	movlw	0
  5523  0026F4  0101               	movlb	1	; () banked
  5524  0026F6  6F76               	movwf	(_trace_path$1250+1)& (0+255),b
  5525  0026F8  0E03               	movlw	3
  5526  0026FA  D004               	goto	L2
  5527  0026FC                     l11976:
  5528                           
  5529                           ; BSR set to: 1
  5530  0026FC  0E00               	movlw	0
  5531  0026FE  0101               	movlb	1	; () banked
  5532  002700  6F76               	movwf	(_trace_path$1250+1)& (0+255),b
  5533  002702  0E02               	movlw	2
  5534  002704                     L2:
  5535  002704  6F75               	movwf	_trace_path$1250& (0+255),b
  5536                           
  5537                           ; BSR set to: 1
  5538  002706  0101               	movlb	1	; () banked
  5539  002708  5175               	movf	_trace_path$1250& (0+255),w,b
  5540                           
  5541                           ; BSR set to: 1
  5542  00270A  0012               	return	
  5543  00270C                     l11980:
  5544                           
  5545                           ;tff.c: 546: if (!ds) { *dir = dptr; return FR_OK; }
  5546  00270C  0101               	movlb	1	; () banked
  5547  00270E  5179               	movf	trace_path@ds& (0+255),w,b
  5548  002710  0101               	movlb	1	; () banked
  5549  002712  A4D8               	btfss	status,2,c
  5550  002714  D00A               	goto	l11988
  5551                           
  5552                           ; BSR set to: 1
  5553  002716  C0E9  FFD9         	movff	trace_path@dir,fsr2l
  5554  00271A  C0EA  FFDA         	movff	trace_path@dir+1,fsr2h
  5555  00271E  C17E  FFDE         	movff	trace_path@dptr,postinc2
  5556  002722  C17F  FFDD         	movff	trace_path@dptr+1,postdec2
  5557                           
  5558                           ; BSR set to: 1
  5559  002726  0E00               	movlw	0
  5560                           
  5561                           ; BSR set to: 1
  5562  002728  0012               	return	
  5563  00272A                     l11988:
  5564                           
  5565                           ; BSR set to: 1
  5566                           ;tff.c: 547: if (!(dptr[11] & 0x10)) return FR_NO_PATH;
  5567  00272A  0101               	movlb	1	; () banked
  5568  00272C  EE20 F00B          	lfsr	2,11
  5569  002730  517E               	movf	trace_path@dptr& (0+255),w,b
  5570  002732  26D9               	addwf	fsr2l,f,c
  5571  002734  517F               	movf	(trace_path@dptr+1)& (0+255),w,b
  5572  002736  22DA               	addwfc	fsr2h,f,c
  5573  002738  0101               	movlb	1	; () banked
  5574  00273A  B8DF               	btfsc	indf2,4,c
  5575  00273C  D002               	goto	l11994
  5576                           
  5577                           ; BSR set to: 1
  5578  00273E  0E03               	movlw	3
  5579                           
  5580                           ; BSR set to: 1
  5581  002740  0012               	return	
  5582  002742                     l11994:
  5583                           
  5584                           ; BSR set to: 1
  5585                           ;tff.c: 548: clust =
  5586                           ;tff.c: 550: ((DWORD)(WORD)(((WORD)*(volatile BYTE*)((&dptr[20])+1)<<8)|(WORD)*(volatile
      +                           BYTE*)(&dptr[20])) << 16) |
  5587                           ;tff.c: 552: (WORD)(((WORD)*(volatile BYTE*)((&dptr[26])+1)<<8)|(WORD)*(volatile BYTE*)(
      +                          &dptr[26]));
  5588  002742  0E1B               	movlw	27
  5589  002744  0101               	movlb	1	; () banked
  5590  002746  257E               	addwf	trace_path@dptr& (0+255),w,b
  5591  002748  6ED9               	movwf	fsr2l,c
  5592  00274A  0E00               	movlw	0
  5593  00274C  0101               	movlb	1	; () banked
  5594  00274E  217F               	addwfc	(trace_path@dptr+1)& (0+255),w,b
  5595  002750  6EDA               	movwf	fsr2h,c
  5596  002752  50DF               	movf	indf2,w,c
  5597  002754  0100               	movlb	0	; () banked
  5598  002756  6FEB               	movwf	??_trace_path& (0+255),b
  5599  002758  0100               	movlb	0	; () banked
  5600  00275A  51EB               	movf	??_trace_path& (0+255),w,b
  5601  00275C  0100               	movlb	0	; () banked
  5602  00275E  6FED               	movwf	(??_trace_path+2)& (0+255),b
  5603  002760  6BEC               	clrf	(??_trace_path+1)& (0+255),b
  5604  002762  0E1A               	movlw	26
  5605  002764  0101               	movlb	1	; () banked
  5606  002766  257E               	addwf	trace_path@dptr& (0+255),w,b
  5607  002768  6ED9               	movwf	fsr2l,c
  5608  00276A  0E00               	movlw	0
  5609  00276C  0101               	movlb	1	; () banked
  5610  00276E  217F               	addwfc	(trace_path@dptr+1)& (0+255),w,b
  5611  002770  6EDA               	movwf	fsr2h,c
  5612  002772  50DF               	movf	indf2,w,c
  5613  002774  0100               	movlb	0	; () banked
  5614  002776  6FEE               	movwf	(??_trace_path+3)& (0+255),b
  5615  002778  0100               	movlb	0	; () banked
  5616  00277A  51EE               	movf	(??_trace_path+3)& (0+255),w,b
  5617  00277C  0100               	movlb	0	; () banked
  5618  00277E  13EC               	iorwf	(??_trace_path+1)& (0+255),f,b
  5619  002780  0E00               	movlw	0
  5620  002782  13ED               	iorwf	(??_trace_path+2)& (0+255),f,b
  5621  002784  0E15               	movlw	21
  5622  002786  0101               	movlb	1	; () banked
  5623  002788  257E               	addwf	trace_path@dptr& (0+255),w,b
  5624  00278A  6ED9               	movwf	fsr2l,c
  5625  00278C  0E00               	movlw	0
  5626  00278E  0101               	movlb	1	; () banked
  5627  002790  217F               	addwfc	(trace_path@dptr+1)& (0+255),w,b
  5628  002792  6EDA               	movwf	fsr2h,c
  5629  002794  50DF               	movf	indf2,w,c
  5630  002796  0100               	movlb	0	; () banked
  5631  002798  6FEF               	movwf	(??_trace_path+4)& (0+255),b
  5632  00279A  0100               	movlb	0	; () banked
  5633  00279C  51EF               	movf	(??_trace_path+4)& (0+255),w,b
  5634  00279E  0100               	movlb	0	; () banked
  5635  0027A0  6FF1               	movwf	(??_trace_path+6)& (0+255),b
  5636  0027A2  6BF0               	clrf	(??_trace_path+5)& (0+255),b
  5637  0027A4  0E14               	movlw	20
  5638  0027A6  0101               	movlb	1	; () banked
  5639  0027A8  257E               	addwf	trace_path@dptr& (0+255),w,b
  5640  0027AA  6ED9               	movwf	fsr2l,c
  5641  0027AC  0E00               	movlw	0
  5642  0027AE  0101               	movlb	1	; () banked
  5643  0027B0  217F               	addwfc	(trace_path@dptr+1)& (0+255),w,b
  5644  0027B2  6EDA               	movwf	fsr2h,c
  5645  0027B4  50DF               	movf	indf2,w,c
  5646  0027B6  0100               	movlb	0	; () banked
  5647  0027B8  6FF2               	movwf	(??_trace_path+7)& (0+255),b
  5648  0027BA  0100               	movlb	0	; () banked
  5649  0027BC  51F2               	movf	(??_trace_path+7)& (0+255),w,b
  5650  0027BE  0100               	movlb	0	; () banked
  5651  0027C0  11F0               	iorwf	(??_trace_path+5)& (0+255),w,b
  5652  0027C2  0100               	movlb	0	; () banked
  5653  0027C4  6FF3               	movwf	(??_trace_path+8)& (0+255),b
  5654  0027C6  0100               	movlb	0	; () banked
  5655  0027C8  51F1               	movf	(??_trace_path+6)& (0+255),w,b
  5656  0027CA  0100               	movlb	0	; () banked
  5657  0027CC  6FF4               	movwf	(??_trace_path+9)& (0+255),b
  5658  0027CE  0100               	movlb	0	; () banked
  5659  0027D0  6BF5               	clrf	(??_trace_path+10)& (0+255),b
  5660  0027D2  0100               	movlb	0	; () banked
  5661  0027D4  6BF6               	clrf	(??_trace_path+11)& (0+255),b
  5662  0027D6  C0F4  F0F6         	movff	??_trace_path+9,??_trace_path+11
  5663  0027DA  C0F3  F0F5         	movff	??_trace_path+8,??_trace_path+10
  5664  0027DE  0100               	movlb	0	; () banked
  5665  0027E0  6BF4               	clrf	(??_trace_path+9)& (0+255),b
  5666  0027E2  6BF3               	clrf	(??_trace_path+8)& (0+255),b
  5667  0027E4  0100               	movlb	0	; () banked
  5668  0027E6  51EC               	movf	(??_trace_path+1)& (0+255),w,b
  5669  0027E8  0100               	movlb	0	; () banked
  5670  0027EA  11F3               	iorwf	(??_trace_path+8)& (0+255),w,b
  5671  0027EC  0101               	movlb	1	; () banked
  5672  0027EE  6F7A               	movwf	trace_path@clust& (0+255),b
  5673  0027F0  0100               	movlb	0	; () banked
  5674  0027F2  51ED               	movf	(??_trace_path+2)& (0+255),w,b
  5675  0027F4  0100               	movlb	0	; () banked
  5676  0027F6  11F4               	iorwf	(??_trace_path+9)& (0+255),w,b
  5677  0027F8  0101               	movlb	1	; () banked
  5678  0027FA  6F7B               	movwf	(trace_path@clust+1)& (0+255),b
  5679  0027FC  0E00               	movlw	0
  5680  0027FE  0100               	movlb	0	; () banked
  5681  002800  11F5               	iorwf	(??_trace_path+10)& (0+255),w,b
  5682  002802  0101               	movlb	1	; () banked
  5683  002804  6F7C               	movwf	(trace_path@clust+2)& (0+255),b
  5684  002806  0E00               	movlw	0
  5685  002808  0100               	movlb	0	; () banked
  5686  00280A  11F6               	iorwf	(??_trace_path+11)& (0+255),w,b
  5687  00280C  0101               	movlb	1	; () banked
  5688  00280E  6F7D               	movwf	(trace_path@clust+3)& (0+255),b
  5689                           
  5690                           ; BSR set to: 1
  5691                           ;tff.c: 553: dj->clust = dj->sclust = clust;
  5692  002810  0100               	movlb	0	; () banked
  5693  002812  EE20 F006          	lfsr	2,6
  5694  002816  51E3               	movf	trace_path@dj& (0+255),w,b
  5695  002818  26D9               	addwf	fsr2l,f,c
  5696  00281A  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5697  00281C  22DA               	addwfc	fsr2h,f,c
  5698  00281E  C17A  FFDE         	movff	trace_path@clust,postinc2
  5699  002822  C17B  FFDE         	movff	trace_path@clust+1,postinc2
  5700  002826  C17C  FFDE         	movff	trace_path@clust+2,postinc2
  5701  00282A  C17D  FFDD         	movff	trace_path@clust+3,postdec2
  5702  00282E  52DD               	movf	postdec2,f,c
  5703  002830  52DD               	movf	postdec2,f,c
  5704  002832  0100               	movlb	0	; () banked
  5705  002834  EE10 F00A          	lfsr	1,10
  5706  002838  51E3               	movf	trace_path@dj& (0+255),w,b
  5707  00283A  26E1               	addwf	fsr1l,f,c
  5708  00283C  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5709  00283E  22E2               	addwfc	fsr1h,f,c
  5710  002840  CFDE FFE6          	movff	postinc2,postinc1
  5711  002844  CFDE FFE6          	movff	postinc2,postinc1
  5712  002848  CFDE FFE6          	movff	postinc2,postinc1
  5713  00284C  CFDE FFE6          	movff	postinc2,postinc1
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;tff.c: 554: dj->sect = clust2sect(clust);
  5717  002850  C17A  F022         	movff	trace_path@clust,clust2sect@clust
  5718  002854  C17B  F023         	movff	trace_path@clust+1,clust2sect@clust+1
  5719  002858  C17C  F024         	movff	trace_path@clust+2,clust2sect@clust+2
  5720  00285C  C17D  F025         	movff	trace_path@clust+3,clust2sect@clust+3
  5721  002860  EC22  F023         	call	_clust2sect	;wreg free
  5722  002864  0100               	movlb	0	; () banked
  5723  002866  EE20 F00E          	lfsr	2,14
  5724  00286A  51E3               	movf	trace_path@dj& (0+255),w,b
  5725  00286C  26D9               	addwf	fsr2l,f,c
  5726  00286E  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5727  002870  22DA               	addwfc	fsr2h,f,c
  5728  002872  C022  FFDE         	movff	?_clust2sect,postinc2
  5729  002876  C023  FFDE         	movff	?_clust2sect+1,postinc2
  5730  00287A  C024  FFDE         	movff	?_clust2sect+2,postinc2
  5731  00287E  C025  FFDE         	movff	?_clust2sect+3,postinc2
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;tff.c: 555: dj->index = 2;
  5735  002882  0100               	movlb	0	; () banked
  5736  002884  EE20 F002          	lfsr	2,2
  5737  002888  51E3               	movf	trace_path@dj& (0+255),w,b
  5738  00288A  26D9               	addwf	fsr2l,f,c
  5739  00288C  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5740  00288E  22DA               	addwfc	fsr2h,f,c
  5741  002890  0E02               	movlw	2
  5742  002892  6EDE               	movwf	postinc2,c
  5743  002894  0E00               	movlw	0
  5744  002896  6EDD               	movwf	postdec2,c
  5745                           
  5746                           ;tff.c: 556: }
  5747  002898  D691               	goto	l11936
  5748  00289A                     __end_of_trace_path:
  5749                           	opt stack 0
  5750                           tosu	equ	0xFFF
  5751                           tosh	equ	0xFFE
  5752                           tosl	equ	0xFFD
  5753                           pclath	equ	0xFFA
  5754                           tblptru	equ	0xFF8
  5755                           tblptrh	equ	0xFF7
  5756                           tblptrl	equ	0xFF6
  5757                           tablat	equ	0xFF5
  5758                           prodh	equ	0xFF4
  5759                           prodl	equ	0xFF3
  5760                           intcon	equ	0xFF2
  5761                           intcon2	equ	0xFF1
  5762                           intcon3	equ	0xFF0
  5763                           postinc0	equ	0xFEE
  5764                           wreg	equ	0xFE8
  5765                           postinc1	equ	0xFE6
  5766                           postdec1	equ	0xFE5
  5767                           fsr1h	equ	0xFE2
  5768                           fsr1l	equ	0xFE1
  5769                           indf2	equ	0xFDF
  5770                           postinc2	equ	0xFDE
  5771                           postdec2	equ	0xFDD
  5772                           fsr2h	equ	0xFDA
  5773                           fsr2l	equ	0xFD9
  5774                           status	equ	0xFD8
  5775                           
  5776 ;; *************** function _make_dirfile *****************
  5777 ;; Defined at:
  5778 ;;		line 438 in file "bibliotecas/tff.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;  path            2   29[COMRAM] PTR PTR const unsigned c
  5781 ;;		 -> trace_path@path(2), 
  5782 ;;  dirname         2   31[COMRAM] PTR unsigned char 
  5783 ;;		 -> f_rename@fn(12), f_utime@fn(12), f_chmod@fn(12), f_mkdir@fn(12), 
  5784 ;;		 -> f_unlink@fn(12), f_stat@fn(12), f_opendir@fn(12), f_open@fn(12), 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  c               1   41[COMRAM] unsigned char 
  5787 ;;  n               1   40[COMRAM] unsigned char 
  5788 ;;  a               1   39[COMRAM] unsigned char 
  5789 ;;  t               1   38[COMRAM] unsigned char 
  5790 ;;  b               1   37[COMRAM] unsigned char 
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      unsigned char 
  5793 ;; Registers used:
  5794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5800 ;;      Params:         4       0       0       0       0       0       0       0       0
  5801 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5802 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5803 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5804 ;;Total ram usage:       13 bytes
  5805 ;; Hardware stack levels used:    1
  5806 ;; Hardware stack levels required when called:    3
  5807 ;; This function calls:
  5808 ;;		_memset
  5809 ;; This function is called by:
  5810 ;;		_trace_path
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text17
  5815  004140                     __ptext17:
  5816                           	opt stack 0
  5817  004140                     _make_dirfile:
  5818                           	opt stack 23
  5819                           
  5820                           ;tff.c: 443: BYTE n, t, c, a, b;
  5821                           ;tff.c: 446: memset(dirname, ' ', 8+3);
  5822                           
  5823                           ;incstack = 0
  5824  004140  C020  F016         	movff	make_dirfile@dirname,memset@p1
  5825  004144  C021  F017         	movff	make_dirfile@dirname+1,memset@p1+1
  5826  004148  0E00               	movlw	0
  5827  00414A  6E19               	movwf	memset@c+1,c
  5828  00414C  0E20               	movlw	32
  5829  00414E  6E18               	movwf	memset@c,c
  5830  004150  0E00               	movlw	0
  5831  004152  6E1B               	movwf	memset@n+1,c
  5832  004154  0E0B               	movlw	11
  5833  004156  6E1A               	movwf	memset@n,c
  5834  004158  EC96  F029         	call	_memset	;wreg free
  5835                           
  5836                           ;tff.c: 447: a = 0; b = 0x18;
  5837  00415C  0E00               	movlw	0
  5838  00415E  6E28               	movwf	make_dirfile@a,c
  5839  004160  0E18               	movlw	24
  5840  004162  6E26               	movwf	make_dirfile@b,c
  5841                           
  5842                           ;tff.c: 448: n = 0; t = 8;
  5843  004164  0E00               	movlw	0
  5844  004166  6E29               	movwf	make_dirfile@n,c
  5845  004168  0E08               	movlw	8
  5846  00416A  D043               	goto	L3
  5847  00416C                     l11614:
  5848                           
  5849                           ;tff.c: 450: c = *(*path)++;
  5850  00416C  C01E  FFD9         	movff	make_dirfile@path,fsr2l
  5851  004170  C01F  FFDA         	movff	make_dirfile@path+1,fsr2h
  5852  004174  CFDF F022          	movff	indf2,??_make_dirfile
  5853  004178  0E01               	movlw	1
  5854  00417A  26DE               	addwf	postinc2,f,c
  5855  00417C  CFDF F023          	movff	indf2,??_make_dirfile+1
  5856  004180  0E00               	movlw	0
  5857  004182  22DD               	addwfc	postdec2,f,c
  5858  004184  C022  FFF6         	movff	??_make_dirfile,tblptrl
  5859  004188  C023  FFF7         	movff	??_make_dirfile+1,tblptrh
  5860  00418C                     	if	0	;tblptru may be non-zero
  5861  00418C                     	endif
  5862  00418C                     	if	0	;tblptru may be non-zero
  5863  00418C                     	endif
  5864  00418C  0008               	tblrd		*
  5865  00418E  CFF5 F02A          	movff	tablat,make_dirfile@c
  5866                           
  5867                           ;tff.c: 451: if (c == '\0' || c == '/') {
  5868  004192  502A               	movf	make_dirfile@c,w,c
  5869  004194  B4D8               	btfsc	status,2,c
  5870  004196  D004               	goto	l11620
  5871  004198  0E2F               	movlw	47
  5872  00419A  182A               	xorwf	make_dirfile@c,w,c
  5873  00419C  A4D8               	btfss	status,2,c
  5874  00419E  D013               	goto	l11634
  5875  0041A0                     l11620:
  5876                           
  5877                           ;tff.c: 452: if (n == 0) break;
  5878  0041A0  5029               	movf	make_dirfile@n,w,c
  5879  0041A2  B4D8               	btfsc	status,2,c
  5880  0041A4  D08E               	goto	l11722
  5881                           
  5882                           ;tff.c: 453: dirname[11] = 1 ? (a & b) : 0;
  5883  0041A6  5028               	movf	make_dirfile@a,w,c
  5884  0041A8  1426               	andwf	make_dirfile@b,w,c
  5885  0041AA  6E22               	movwf	??_make_dirfile& (0+255),c
  5886  0041AC  5022               	movf	??_make_dirfile,w,c
  5887  0041AE  6E24               	movwf	_make_dirfile$1201,c
  5888  0041B0  6A25               	clrf	_make_dirfile$1201+1,c
  5889  0041B2  EE20 F00B          	lfsr	2,11
  5890  0041B6  5020               	movf	make_dirfile@dirname,w,c
  5891  0041B8  26D9               	addwf	fsr2l,f,c
  5892  0041BA  5021               	movf	make_dirfile@dirname+1,w,c
  5893  0041BC  22DA               	addwfc	fsr2h,f,c
  5894  0041BE  C024  FFDF         	movff	_make_dirfile$1201,indf2
  5895                           
  5896                           ;tff.c: 454: return c;
  5897  0041C2  502A               	movf	make_dirfile@c,w,c
  5898  0041C4  0012               	return	
  5899  0041C6                     l11634:
  5900                           
  5901                           ;tff.c: 455: }
  5902                           ;tff.c: 456: if (c <= ' ' || c == 0x7F) break;
  5903  0041C6  0E20               	movlw	32
  5904  0041C8  642A               	cpfsgt	make_dirfile@c,c
  5905  0041CA  D07B               	goto	l11722
  5906  0041CC  0E7F               	movlw	127
  5907  0041CE  182A               	xorwf	make_dirfile@c,w,c
  5908  0041D0  B4D8               	btfsc	status,2,c
  5909  0041D2  D077               	goto	l11722
  5910                           
  5911                           ;tff.c: 457: if (c == '.') {
  5912  0041D4  0E2E               	movlw	46
  5913  0041D6  182A               	xorwf	make_dirfile@c,w,c
  5914  0041D8  A4D8               	btfss	status,2,c
  5915  0041DA  D00D               	goto	l11648
  5916                           
  5917                           ;tff.c: 458: if (!(a & 1) && n >= 1 && n <= 8) {
  5918  0041DC  B028               	btfsc	make_dirfile@a,0,c
  5919  0041DE  D071               	goto	l11722
  5920  0041E0  5029               	movf	make_dirfile@n,w,c
  5921  0041E2  B4D8               	btfsc	status,2,c
  5922  0041E4  D06E               	goto	l11722
  5923  0041E6  0E09               	movlw	9
  5924  0041E8  6029               	cpfslt	make_dirfile@n,c
  5925  0041EA  D06B               	goto	l11722
  5926                           
  5927                           ;tff.c: 459: n = 8; t = 11; continue;
  5928  0041EC  0E08               	movlw	8
  5929  0041EE  6E29               	movwf	make_dirfile@n,c
  5930  0041F0  0E0B               	movlw	11
  5931  0041F2                     L3:
  5932  0041F2  6E27               	movwf	make_dirfile@t,c
  5933  0041F4  D7BB               	goto	l11614
  5934  0041F6                     l11648:
  5935  0041F6  0E80               	movlw	128
  5936  0041F8  642A               	cpfsgt	make_dirfile@c,c
  5937  0041FA  D003               	goto	l11652
  5938  0041FC  0E9F               	movlw	159
  5939  0041FE  642A               	cpfsgt	make_dirfile@c,c
  5940  004200  D006               	goto	l11656
  5941  004202                     l11652:
  5942  004202  0EDF               	movlw	223
  5943  004204  642A               	cpfsgt	make_dirfile@c,c
  5944  004206  D00F               	goto	l11664
  5945  004208  0EFD               	movlw	253
  5946  00420A  602A               	cpfslt	make_dirfile@c,c
  5947  00420C  D00C               	goto	l11664
  5948  00420E                     l11656:
  5949                           
  5950                           ;tff.c: 466: if (n == 0 && c == 0xE5)
  5951  00420E  5029               	movf	make_dirfile@n,w,c
  5952  004210  A4D8               	btfss	status,2,c
  5953  004212  D006               	goto	l11662
  5954  004214  0EE5               	movlw	229
  5955  004216  182A               	xorwf	make_dirfile@c,w,c
  5956  004218  A4D8               	btfss	status,2,c
  5957  00421A  D002               	goto	l11662
  5958                           
  5959                           ;tff.c: 467: c = 0x05;
  5960  00421C  0E05               	movlw	5
  5961  00421E  6E2A               	movwf	make_dirfile@c,c
  5962  004220                     l11662:
  5963                           
  5964                           ;tff.c: 468: a ^= 1; goto md_l2;
  5965  004220  0E01               	movlw	1
  5966  004222  1A28               	xorwf	make_dirfile@a,f,c
  5967  004224  D03E               	goto	l11714
  5968  004226                     l11664:
  5969                           
  5970                           ;tff.c: 469: }
  5971                           ;tff.c: 470: if (c == '"') break;
  5972  004226  0E22               	movlw	34
  5973  004228  182A               	xorwf	make_dirfile@c,w,c
  5974  00422A  B4D8               	btfsc	status,2,c
  5975  00422C  D04A               	goto	l11722
  5976                           
  5977                           ;tff.c: 471: if (c <= ')') goto md_l1;
  5978  00422E  0E2A               	movlw	42
  5979  004230  602A               	cpfslt	make_dirfile@c,c
  5980  004232  D001               	goto	l11672
  5981  004234  D035               	goto	l711
  5982  004236                     l11672:
  5983                           
  5984                           ;tff.c: 472: if (c <= ',') break;
  5985  004236  0E2D               	movlw	45
  5986  004238  602A               	cpfslt	make_dirfile@c,c
  5987  00423A  D001               	goto	l11676
  5988  00423C  D042               	goto	l11722
  5989  00423E                     l11676:
  5990                           
  5991                           ;tff.c: 473: if (c <= '9') goto md_l1;
  5992  00423E  0E3A               	movlw	58
  5993  004240  602A               	cpfslt	make_dirfile@c,c
  5994  004242  D001               	goto	l11680
  5995  004244  D02D               	goto	l711
  5996  004246                     l11680:
  5997                           
  5998                           ;tff.c: 474: if (c <= '?') break;
  5999  004246  0E40               	movlw	64
  6000  004248  602A               	cpfslt	make_dirfile@c,c
  6001  00424A  D001               	goto	l714
  6002  00424C  D03A               	goto	l11722
  6003  00424E                     l714:
  6004                           
  6005                           ;tff.c: 475: if (!(a & 1)) {
  6006  00424E  B028               	btfsc	make_dirfile@a,0,c
  6007  004250  D027               	goto	l711
  6008                           
  6009                           ;tff.c: 476: if (c == '|') break;
  6010  004252  0E7C               	movlw	124
  6011  004254  182A               	xorwf	make_dirfile@c,w,c
  6012  004256  B4D8               	btfsc	status,2,c
  6013  004258  D034               	goto	l11722
  6014                           
  6015                           ;tff.c: 477: if (c >= '[' && c <= ']') break;
  6016  00425A  0E5A               	movlw	90
  6017  00425C  642A               	cpfsgt	make_dirfile@c,c
  6018  00425E  D004               	goto	l11694
  6019  004260  0E5E               	movlw	94
  6020  004262  602A               	cpfslt	make_dirfile@c,c
  6021  004264  D001               	goto	l11694
  6022  004266  D02D               	goto	l11722
  6023  004268                     l11694:
  6024  004268  0E40               	movlw	64
  6025  00426A  642A               	cpfsgt	make_dirfile@c,c
  6026  00426C  D00A               	goto	l11704
  6027  00426E  0E5B               	movlw	91
  6028  004270  602A               	cpfslt	make_dirfile@c,c
  6029  004272  D007               	goto	l11704
  6030                           
  6031                           ;tff.c: 479: (t == 8) ? (b &= 0xF7) : (b &= 0xEF);
  6032  004274  0E08               	movlw	8
  6033  004276  1827               	xorwf	make_dirfile@t,w,c
  6034  004278  A4D8               	btfss	status,2,c
  6035  00427A  D002               	goto	l11702
  6036  00427C  9626               	bcf	make_dirfile@b,3,c
  6037  00427E  D001               	goto	l11704
  6038  004280                     l11702:
  6039  004280  9826               	bcf	make_dirfile@b,4,c
  6040  004282                     l11704:
  6041                           
  6042                           ;tff.c: 480: if (c >= 'a' && c <= 'z') {
  6043  004282  0E60               	movlw	96
  6044  004284  642A               	cpfsgt	make_dirfile@c,c
  6045  004286  D00C               	goto	l711
  6046  004288  0E7B               	movlw	123
  6047  00428A  602A               	cpfslt	make_dirfile@c,c
  6048  00428C  D009               	goto	l711
  6049                           
  6050                           ;tff.c: 482: if (1) (t == 8) ? (a |= 0x08) : (a |= 0x10);
  6051  00428E  0E20               	movlw	32
  6052  004290  5E2A               	subwf	make_dirfile@c,f,c
  6053  004292  0E08               	movlw	8
  6054  004294  1827               	xorwf	make_dirfile@t,w,c
  6055  004296  A4D8               	btfss	status,2,c
  6056  004298  D002               	goto	l11712
  6057  00429A  8628               	bsf	make_dirfile@a,3,c
  6058  00429C  D001               	goto	l711
  6059  00429E                     l11712:
  6060  00429E  8828               	bsf	make_dirfile@a,4,c
  6061  0042A0                     l711:
  6062                           
  6063                           ;tff.c: 486: a &= 0xFE;
  6064  0042A0  9028               	bcf	make_dirfile@a,0,c
  6065  0042A2                     l11714:
  6066                           
  6067                           ;tff.c: 488: if (n >= t) break;
  6068  0042A2  5027               	movf	make_dirfile@t,w,c
  6069  0042A4  5C29               	subwf	make_dirfile@n,w,c
  6070  0042A6  B0D8               	btfsc	status,0,c
  6071  0042A8  D00C               	goto	l11722
  6072                           
  6073                           ;tff.c: 489: dirname[n++] = c;
  6074  0042AA  5029               	movf	make_dirfile@n,w,c
  6075  0042AC  0D01               	mullw	1
  6076  0042AE  50F3               	movf	prodl,w,c
  6077  0042B0  2420               	addwf	make_dirfile@dirname,w,c
  6078  0042B2  6ED9               	movwf	fsr2l,c
  6079  0042B4  50F4               	movf	prodh,w,c
  6080  0042B6  2021               	addwfc	make_dirfile@dirname+1,w,c
  6081  0042B8  6EDA               	movwf	fsr2h,c
  6082  0042BA  C02A  FFDF         	movff	make_dirfile@c,indf2
  6083  0042BE  2A29               	incf	make_dirfile@n,f,c
  6084                           
  6085                           ;tff.c: 490: }
  6086  0042C0  D755               	goto	l11614
  6087  0042C2                     l11722:
  6088                           
  6089                           ;tff.c: 491: return 1;
  6090  0042C2  0E01               	movlw	1
  6091  0042C4  0012               	return	
  6092  0042C6                     __end_of_make_dirfile:
  6093                           	opt stack 0
  6094                           tosu	equ	0xFFF
  6095                           tosh	equ	0xFFE
  6096                           tosl	equ	0xFFD
  6097                           pclath	equ	0xFFA
  6098                           tblptru	equ	0xFF8
  6099                           tblptrh	equ	0xFF7
  6100                           tblptrl	equ	0xFF6
  6101                           tablat	equ	0xFF5
  6102                           prodh	equ	0xFF4
  6103                           prodl	equ	0xFF3
  6104                           intcon	equ	0xFF2
  6105                           intcon2	equ	0xFF1
  6106                           intcon3	equ	0xFF0
  6107                           postinc0	equ	0xFEE
  6108                           wreg	equ	0xFE8
  6109                           postinc1	equ	0xFE6
  6110                           postdec1	equ	0xFE5
  6111                           fsr1h	equ	0xFE2
  6112                           fsr1l	equ	0xFE1
  6113                           indf2	equ	0xFDF
  6114                           postinc2	equ	0xFDE
  6115                           postdec2	equ	0xFDD
  6116                           fsr2h	equ	0xFDA
  6117                           fsr2l	equ	0xFD9
  6118                           status	equ	0xFD8
  6119                           
  6120 ;; *************** function _reserve_direntry *****************
  6121 ;; Defined at:
  6122 ;;		line 567 in file "bibliotecas/tff.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  dj              2  142[BANK0 ] PTR struct _DIR
  6125 ;;		 -> f_rename@dj(18), f_mkdir@dj(18), f_open@dj(18), 
  6126 ;;  dir             2  144[BANK0 ] PTR PTR unsigned char 
  6127 ;;		 -> f_rename@dir_new(2), f_mkdir@dir(2), f_open@dir(2), 
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;  clust           4    8[BANK1 ] unsigned long 
  6130 ;;  sector          4    0[BANK1 ] unsigned long 
  6131 ;;  fs              2   12[BANK1 ] PTR struct _FATFS
  6132 ;;		 -> fs(552), NULL(0), 
  6133 ;;  dptr            2    5[BANK1 ] PTR unsigned char 
  6134 ;;		 -> fs.win(512), fs(552), NULL(0), 
  6135 ;;  c               1    7[BANK1 ] unsigned char 
  6136 ;;  n               1    4[BANK1 ] unsigned char 
  6137 ;; Return value:  Size  Location     Type
  6138 ;;                  1    wreg      enum E155
  6139 ;; Registers used:
  6140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6146 ;;      Params:         0       4       0       0       0       0       0       0       0
  6147 ;;      Locals:         0       0      14       0       0       0       0       0       0
  6148 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6149 ;;      Totals:         0       6      14       0       0       0       0       0       0
  6150 ;;Total ram usage:       20 bytes
  6151 ;; Hardware stack levels used:    1
  6152 ;; Hardware stack levels required when called:   11
  6153 ;; This function calls:
  6154 ;;		_clust2sect
  6155 ;;		_create_chain
  6156 ;;		_disk_write
  6157 ;;		_memset
  6158 ;;		_move_window
  6159 ;;		_next_dir_entry
  6160 ;; This function is called by:
  6161 ;;		_f_open
  6162 ;;		_f_mkdir
  6163 ;;		_f_rename
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           	psect	text18
  6168  003026                     __ptext18:
  6169                           	opt stack 0
  6170  003026                     _reserve_direntry:
  6171                           	opt stack 16
  6172                           
  6173                           ;tff.c: 572: CLUST clust;
  6174                           ;tff.c: 573: DWORD sector;
  6175                           ;tff.c: 574: BYTE c, n, *dptr;
  6176                           ;tff.c: 575: FATFS *fs = dj->fs;
  6177                           
  6178                           ;incstack = 0
  6179  003026  0100               	movlb	0	; () banked
  6180  003028  EE20 F004          	lfsr	2,4
  6181  00302C  51EE               	movf	reserve_direntry@dj& (0+255),w,b
  6182  00302E  26D9               	addwf	fsr2l,f,c
  6183  003030  51EF               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6184  003032  22DA               	addwfc	fsr2h,f,c
  6185  003034  CFDE F17F          	movff	postinc2,reserve_direntry@fs
  6186  003038  CFDD F180          	movff	postdec2,reserve_direntry@fs+1
  6187                           
  6188                           ;tff.c: 579: clust = dj->sclust;
  6189  00303C  0100               	movlb	0	; () banked
  6190  00303E  EE20 F006          	lfsr	2,6
  6191  003042  51EE               	movf	reserve_direntry@dj& (0+255),w,b
  6192  003044  26D9               	addwf	fsr2l,f,c
  6193  003046  51EF               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6194  003048  22DA               	addwfc	fsr2h,f,c
  6195  00304A  CFDE F17B          	movff	postinc2,reserve_direntry@clust
  6196  00304E  CFDE F17C          	movff	postinc2,reserve_direntry@clust+1
  6197  003052  CFDE F17D          	movff	postinc2,reserve_direntry@clust+2
  6198  003056  CFDE F17E          	movff	postinc2,reserve_direntry@clust+3
  6199                           
  6200                           ; BSR set to: 0
  6201                           ;tff.c: 580: if (clust != 0) {
  6202  00305A  0101               	movlb	1	; () banked
  6203  00305C  517B               	movf	reserve_direntry@clust& (0+255),w,b
  6204  00305E  0101               	movlb	1	; () banked
  6205  003060  117C               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
  6206  003062  0101               	movlb	1	; () banked
  6207  003064  117D               	iorwf	(reserve_direntry@clust+2)& (0+255),w,b
  6208  003066  0101               	movlb	1	; () banked
  6209  003068  117E               	iorwf	(reserve_direntry@clust+3)& (0+255),w,b
  6210  00306A  B4D8               	btfsc	status,2,c
  6211  00306C  D029               	goto	l12010
  6212                           
  6213                           ; BSR set to: 1
  6214                           ;tff.c: 581: dj->clust = clust;
  6215  00306E  0100               	movlb	0	; () banked
  6216  003070  EE20 F00A          	lfsr	2,10
  6217  003074  51EE               	movf	reserve_direntry@dj& (0+255),w,b
  6218  003076  26D9               	addwf	fsr2l,f,c
  6219  003078  51EF               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6220  00307A  22DA               	addwfc	fsr2h,f,c
  6221  00307C  C17B  FFDE         	movff	reserve_direntry@clust,postinc2
  6222  003080  C17C  FFDE         	movff	reserve_direntry@clust+1,postinc2
  6223  003084  C17D  FFDE         	movff	reserve_direntry@clust+2,postinc2
  6224  003088  C17E  FFDE         	movff	reserve_direntry@clust+3,postinc2
  6225                           
  6226                           ; BSR set to: 0
  6227                           ;tff.c: 582: dj->sect = clust2sect(clust);
  6228  00308C  C17B  F022         	movff	reserve_direntry@clust,clust2sect@clust
  6229  003090  C17C  F023         	movff	reserve_direntry@clust+1,clust2sect@clust+1
  6230  003094  C17D  F024         	movff	reserve_direntry@clust+2,clust2sect@clust+2
  6231  003098  C17E  F025         	movff	reserve_direntry@clust+3,clust2sect@clust+3
  6232  00309C  EC22  F023         	call	_clust2sect	;wreg free
  6233  0030A0  0100               	movlb	0	; () banked
  6234  0030A2  EE20 F00E          	lfsr	2,14
  6235  0030A6  51EE               	movf	reserve_direntry@dj& (0+255),w,b
  6236  0030A8  26D9               	addwf	fsr2l,f,c
  6237  0030AA  51EF               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6238  0030AC  22DA               	addwfc	fsr2h,f,c
  6239  0030AE  C022  FFDE         	movff	?_clust2sect,postinc2
  6240  0030B2  C023  FFDE         	movff	?_clust2sect+1,postinc2
  6241  0030B6  C024  FFDE         	movff	?_clust2sect+2,postinc2
  6242  0030BA  C025  FFDE         	movff	?_clust2sect+3,postinc2
  6243                           
  6244                           ;tff.c: 583: } else {
  6245  0030BE  D016               	goto	l12012
  6246  0030C0                     l12010:
  6247                           
  6248                           ;tff.c: 584: dj->sect = fs->dirbase;
  6249  0030C0  0101               	movlb	1	; () banked
  6250  0030C2  EE20 F00C          	lfsr	2,12
  6251  0030C6  517F               	movf	reserve_direntry@fs& (0+255),w,b
  6252  0030C8  26D9               	addwf	fsr2l,f,c
  6253  0030CA  5180               	movf	(reserve_direntry@fs+1)& (0+255),w,b
  6254  0030CC  22DA               	addwfc	fsr2h,f,c
  6255  0030CE  0100               	movlb	0	; () banked
  6256  0030D0  EE10 F00E          	lfsr	1,14
  6257  0030D4  51EE               	movf	reserve_direntry@dj& (0+255),w,b
  6258  0030D6  26E1               	addwf	fsr1l,f,c
  6259  0030D8  51EF               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6260  0030DA  22E2               	addwfc	fsr1h,f,c
  6261  0030DC  CFDE FFE6          	movff	postinc2,postinc1
  6262  0030E0  CFDE FFE6          	movff	postinc2,postinc1
  6263  0030E4  CFDE FFE6          	movff	postinc2,postinc1
  6264  0030E8  CFDE FFE6          	movff	postinc2,postinc1
  6265  0030EC                     l12012:
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;tff.c: 585: }
  6269                           ;tff.c: 586: dj->index = 0;
  6270  0030EC  0100               	movlb	0	; () banked
  6271  0030EE  EE20 F002          	lfsr	2,2
  6272  0030F2  51EE               	movf	reserve_direntry@dj& (0+255),w,b
  6273  0030F4  26D9               	addwf	fsr2l,f,c
  6274  0030F6  51EF               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6275  0030F8  22DA               	addwfc	fsr2h,f,c
  6276  0030FA  0E00               	movlw	0
  6277  0030FC  6EDE               	movwf	postinc2,c
  6278  0030FE  0E00               	movlw	0
  6279  003100  6EDD               	movwf	postdec2,c
  6280  003102                     l12014:
  6281                           
  6282                           ;tff.c: 589: if (!move_window(dj->sect)) return FR_RW_ERROR;
  6283  003102  0100               	movlb	0	; () banked
  6284  003104  EE20 F00E          	lfsr	2,14
  6285  003108  51EE               	movf	reserve_direntry@dj& (0+255),w,b
  6286  00310A  26D9               	addwf	fsr2l,f,c
  6287  00310C  51EF               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6288  00310E  22DA               	addwfc	fsr2h,f,c
  6289  003110  CFDE F083          	movff	postinc2,move_window@sector
  6290  003114  CFDE F084          	movff	postinc2,move_window@sector+1
  6291  003118  CFDE F085          	movff	postinc2,move_window@sector+2
  6292  00311C  CFDE F086          	movff	postinc2,move_window@sector+3
  6293  003120  ECB4  F01C         	call	_move_window	;wreg free
  6294  003124  0900               	iorlw	0
  6295  003126  A4D8               	btfss	status,2,c
  6296  003128  D002               	goto	l12020
  6297  00312A  0E08               	movlw	8
  6298  00312C  0012               	return	
  6299  00312E                     l12020:
  6300                           
  6301                           ;tff.c: 590: dptr = &fs->win[(dj->index & 15) * 32];
  6302  00312E  0100               	movlb	0	; () banked
  6303  003130  EE20 F002          	lfsr	2,2
  6304  003134  51EE               	movf	reserve_direntry@dj& (0+255),w,b
  6305  003136  26D9               	addwf	fsr2l,f,c
  6306  003138  51EF               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6307  00313A  22DA               	addwfc	fsr2h,f,c
  6308  00313C  CFDE F0F2          	movff	postinc2,??_reserve_direntry
  6309  003140  CFDD F0F3          	movff	postdec2,??_reserve_direntry+1
  6310  003144  0E0F               	movlw	15
  6311  003146  0100               	movlb	0	; () banked
  6312  003148  17F2               	andwf	??_reserve_direntry& (0+255),f,b
  6313  00314A  0E00               	movlw	0
  6314  00314C  17F3               	andwf	(??_reserve_direntry+1)& (0+255),f,b
  6315  00314E  0E05               	movlw	5
  6316  003150                     u13625:
  6317  003150  90D8               	bcf	status,0,c
  6318  003152  0100               	movlb	0	; () banked
  6319  003154  37F2               	rlcf	??_reserve_direntry& (0+255),f,b
  6320  003156  37F3               	rlcf	(??_reserve_direntry+1)& (0+255),f,b
  6321  003158  2EE8               	decfsz	wreg,f,c
  6322  00315A  D7FA               	goto	u13625
  6323  00315C  0E28               	movlw	40
  6324  00315E  0100               	movlb	0	; () banked
  6325  003160  27F2               	addwf	??_reserve_direntry& (0+255),f,b
  6326  003162  0E00               	movlw	0
  6327  003164  23F3               	addwfc	(??_reserve_direntry+1)& (0+255),f,b
  6328  003166  0100               	movlb	0	; () banked
  6329  003168  51F2               	movf	??_reserve_direntry& (0+255),w,b
  6330  00316A  0101               	movlb	1	; () banked
  6331  00316C  257F               	addwf	reserve_direntry@fs& (0+255),w,b
  6332  00316E  0101               	movlb	1	; () banked
  6333  003170  6F78               	movwf	reserve_direntry@dptr& (0+255),b
  6334  003172  0100               	movlb	0	; () banked
  6335  003174  51F3               	movf	(??_reserve_direntry+1)& (0+255),w,b
  6336  003176  0101               	movlb	1	; () banked
  6337  003178  2180               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
  6338  00317A  0101               	movlb	1	; () banked
  6339  00317C  6F79               	movwf	(reserve_direntry@dptr+1)& (0+255),b
  6340                           
  6341                           ; BSR set to: 1
  6342                           ;tff.c: 591: c = dptr[0];
  6343  00317E  C178  FFD9         	movff	reserve_direntry@dptr,fsr2l
  6344  003182  C179  FFDA         	movff	reserve_direntry@dptr+1,fsr2h
  6345  003186  50DF               	movf	indf2,w,c
  6346  003188  0101               	movlb	1	; () banked
  6347  00318A  6F7A               	movwf	reserve_direntry@c& (0+255),b
  6348                           
  6349                           ; BSR set to: 1
  6350                           ;tff.c: 592: if (c == 0 || c == 0xE5) {
  6351  00318C  0101               	movlb	1	; () banked
  6352  00318E  517A               	movf	reserve_direntry@c& (0+255),w,b
  6353  003190  0101               	movlb	1	; () banked
  6354  003192  B4D8               	btfsc	status,2,c
  6355  003194  D005               	goto	l12028
  6356                           
  6357                           ; BSR set to: 1
  6358  003196  0EE5               	movlw	229
  6359  003198  0101               	movlb	1	; () banked
  6360  00319A  197A               	xorwf	reserve_direntry@c& (0+255),w,b
  6361  00319C  A4D8               	btfss	status,2,c
  6362  00319E  D00A               	goto	l12034
  6363  0031A0                     l12028:
  6364                           
  6365                           ; BSR set to: 1
  6366                           ;tff.c: 593: *dir = dptr; return FR_OK;
  6367  0031A0  C0F0  FFD9         	movff	reserve_direntry@dir,fsr2l
  6368  0031A4  C0F1  FFDA         	movff	reserve_direntry@dir+1,fsr2h
  6369  0031A8  C178  FFDE         	movff	reserve_direntry@dptr,postinc2
  6370  0031AC  C179  FFDD         	movff	reserve_direntry@dptr+1,postdec2
  6371                           
  6372                           ; BSR set to: 1
  6373  0031B0  0E00               	movlw	0
  6374                           
  6375                           ; BSR set to: 1
  6376  0031B2  0012               	return	
  6377  0031B4                     l12034:
  6378                           
  6379                           ; BSR set to: 1
  6380                           ;tff.c: 594: }
  6381                           ;tff.c: 595: } while (next_dir_entry(dj));
  6382  0031B4  C0EE  F0D4         	movff	reserve_direntry@dj,next_dir_entry@dj
  6383  0031B8  C0EF  F0D5         	movff	reserve_direntry@dj+1,next_dir_entry@dj+1
  6384  0031BC  ECC9  F01D         	call	_next_dir_entry	;wreg free
  6385  0031C0  0900               	iorlw	0
  6386  0031C2  A4D8               	btfss	status,2,c
  6387  0031C4  D79E               	goto	l12014
  6388                           
  6389                           ;tff.c: 599: if (clust == 0 || !(clust = create_chain(dj->clust))) return FR_DENIED;
  6390  0031C6  0101               	movlb	1	; () banked
  6391  0031C8  517B               	movf	reserve_direntry@clust& (0+255),w,b
  6392  0031CA  0101               	movlb	1	; () banked
  6393  0031CC  117C               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
  6394  0031CE  0101               	movlb	1	; () banked
  6395  0031D0  117D               	iorwf	(reserve_direntry@clust+2)& (0+255),w,b
  6396  0031D2  0101               	movlb	1	; () banked
  6397  0031D4  117E               	iorwf	(reserve_direntry@clust+3)& (0+255),w,b
  6398  0031D6  B4D8               	btfsc	status,2,c
  6399  0031D8  D023               	goto	l12040
  6400                           
  6401                           ; BSR set to: 1
  6402  0031DA  0100               	movlb	0	; () banked
  6403  0031DC  EE20 F00A          	lfsr	2,10
  6404  0031E0  51EE               	movf	reserve_direntry@dj& (0+255),w,b
  6405  0031E2  26D9               	addwf	fsr2l,f,c
  6406  0031E4  51EF               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6407  0031E6  22DA               	addwfc	fsr2h,f,c
  6408  0031E8  CFDE F0D4          	movff	postinc2,create_chain@clust
  6409  0031EC  CFDE F0D5          	movff	postinc2,create_chain@clust+1
  6410  0031F0  CFDE F0D6          	movff	postinc2,create_chain@clust+2
  6411  0031F4  CFDE F0D7          	movff	postinc2,create_chain@clust+3
  6412  0031F8  EC62  F016         	call	_create_chain	;wreg free
  6413  0031FC  C0D4  F17B         	movff	?_create_chain,reserve_direntry@clust
  6414  003200  C0D5  F17C         	movff	?_create_chain+1,reserve_direntry@clust+1
  6415  003204  C0D6  F17D         	movff	?_create_chain+2,reserve_direntry@clust+2
  6416  003208  C0D7  F17E         	movff	?_create_chain+3,reserve_direntry@clust+3
  6417  00320C  0101               	movlb	1	; () banked
  6418  00320E  517B               	movf	reserve_direntry@clust& (0+255),w,b
  6419  003210  0101               	movlb	1	; () banked
  6420  003212  117C               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
  6421  003214  0101               	movlb	1	; () banked
  6422  003216  117D               	iorwf	(reserve_direntry@clust+2)& (0+255),w,b
  6423  003218  0101               	movlb	1	; () banked
  6424  00321A  117E               	iorwf	(reserve_direntry@clust+3)& (0+255),w,b
  6425  00321C  A4D8               	btfss	status,2,c
  6426  00321E  D002               	goto	l12044
  6427  003220                     l12040:
  6428                           
  6429                           ; BSR set to: 1
  6430  003220  0E06               	movlw	6
  6431                           
  6432                           ; BSR set to: 1
  6433  003222  0012               	return	
  6434  003224                     l12044:
  6435                           
  6436                           ; BSR set to: 1
  6437                           ;tff.c: 600: if (clust == 1 || !move_window(0)) return FR_RW_ERROR;
  6438  003224  0101               	movlb	1	; () banked
  6439  003226  057B               	decf	reserve_direntry@clust& (0+255),w,b
  6440  003228  0101               	movlb	1	; () banked
  6441  00322A  117C               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
  6442  00322C  0101               	movlb	1	; () banked
  6443  00322E  117D               	iorwf	(reserve_direntry@clust+2)& (0+255),w,b
  6444  003230  0101               	movlb	1	; () banked
  6445  003232  117E               	iorwf	(reserve_direntry@clust+3)& (0+255),w,b
  6446  003234  B4D8               	btfsc	status,2,c
  6447  003236  D00E               	goto	l12048
  6448                           
  6449                           ; BSR set to: 1
  6450  003238  0E00               	movlw	0
  6451  00323A  0100               	movlb	0	; () banked
  6452  00323C  6F83               	movwf	move_window@sector& (0+255),b
  6453  00323E  0E00               	movlw	0
  6454  003240  6F84               	movwf	(move_window@sector+1)& (0+255),b
  6455  003242  0E00               	movlw	0
  6456  003244  6F85               	movwf	(move_window@sector+2)& (0+255),b
  6457  003246  0E00               	movlw	0
  6458  003248  6F86               	movwf	(move_window@sector+3)& (0+255),b
  6459  00324A  ECB4  F01C         	call	_move_window	;wreg free
  6460  00324E  0900               	iorlw	0
  6461  003250  A4D8               	btfss	status,2,c
  6462  003252  D002               	goto	l12052
  6463  003254                     l12048:
  6464  003254  0E08               	movlw	8
  6465  003256  0012               	return	
  6466  003258                     l12052:
  6467                           
  6468                           ;tff.c: 602: fs->winsect = sector = clust2sect(clust);
  6469  003258  C17B  F022         	movff	reserve_direntry@clust,clust2sect@clust
  6470  00325C  C17C  F023         	movff	reserve_direntry@clust+1,clust2sect@clust+1
  6471  003260  C17D  F024         	movff	reserve_direntry@clust+2,clust2sect@clust+2
  6472  003264  C17E  F025         	movff	reserve_direntry@clust+3,clust2sect@clust+3
  6473  003268  EC22  F023         	call	_clust2sect	;wreg free
  6474  00326C  C022  F173         	movff	?_clust2sect,reserve_direntry@sector
  6475  003270  C023  F174         	movff	?_clust2sect+1,reserve_direntry@sector+1
  6476  003274  C024  F175         	movff	?_clust2sect+2,reserve_direntry@sector+2
  6477  003278  C025  F176         	movff	?_clust2sect+3,reserve_direntry@sector+3
  6478  00327C  0101               	movlb	1	; () banked
  6479  00327E  EE20 F004          	lfsr	2,4
  6480  003282  517F               	movf	reserve_direntry@fs& (0+255),w,b
  6481  003284  26D9               	addwf	fsr2l,f,c
  6482  003286  5180               	movf	(reserve_direntry@fs+1)& (0+255),w,b
  6483  003288  22DA               	addwfc	fsr2h,f,c
  6484  00328A  C173  FFDE         	movff	reserve_direntry@sector,postinc2
  6485  00328E  C174  FFDE         	movff	reserve_direntry@sector+1,postinc2
  6486  003292  C175  FFDE         	movff	reserve_direntry@sector+2,postinc2
  6487  003296  C176  FFDE         	movff	reserve_direntry@sector+3,postinc2
  6488                           
  6489                           ;tff.c: 603: memset(fs->win, 0, 512U);
  6490  00329A  0E28               	movlw	40
  6491  00329C  0101               	movlb	1	; () banked
  6492  00329E  257F               	addwf	reserve_direntry@fs& (0+255),w,b
  6493  0032A0  6E16               	movwf	memset@p1,c
  6494  0032A2  0E00               	movlw	0
  6495  0032A4  0101               	movlb	1	; () banked
  6496  0032A6  2180               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
  6497  0032A8  6E17               	movwf	memset@p1+1,c
  6498  0032AA  0E00               	movlw	0
  6499  0032AC  6E19               	movwf	memset@c+1,c
  6500  0032AE  0E00               	movlw	0
  6501  0032B0  6E18               	movwf	memset@c,c
  6502  0032B2  0E02               	movlw	2
  6503  0032B4  6E1B               	movwf	memset@n+1,c
  6504  0032B6  0E00               	movlw	0
  6505  0032B8  6E1A               	movwf	memset@n,c
  6506  0032BA  EC96  F029         	call	_memset	;wreg free
  6507                           
  6508                           ;tff.c: 604: for (n = fs->csize; n; n--) {
  6509  0032BE  0101               	movlb	1	; () banked
  6510  0032C0  EE20 F025          	lfsr	2,37
  6511  0032C4  517F               	movf	reserve_direntry@fs& (0+255),w,b
  6512  0032C6  26D9               	addwf	fsr2l,f,c
  6513  0032C8  5180               	movf	(reserve_direntry@fs+1)& (0+255),w,b
  6514  0032CA  22DA               	addwfc	fsr2h,f,c
  6515  0032CC  50DF               	movf	indf2,w,c
  6516  0032CE  0101               	movlb	1	; () banked
  6517  0032D0  6F77               	movwf	reserve_direntry@n& (0+255),b
  6518  0032D2  D026               	goto	l12066
  6519  0032D4                     l12056:
  6520                           
  6521                           ; BSR set to: 1
  6522                           ;tff.c: 605: if (disk_write(0, fs->win, sector, 1) != RES_OK)
  6523  0032D4  0E28               	movlw	40
  6524  0032D6  0101               	movlb	1	; () banked
  6525  0032D8  257F               	addwf	reserve_direntry@fs& (0+255),w,b
  6526  0032DA  0100               	movlb	0	; () banked
  6527  0032DC  6F60               	movwf	disk_write@buff& (0+255),b
  6528  0032DE  0E00               	movlw	0
  6529  0032E0  0101               	movlb	1	; () banked
  6530  0032E2  2180               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
  6531  0032E4  0100               	movlb	0	; () banked
  6532  0032E6  6F61               	movwf	(disk_write@buff+1)& (0+255),b
  6533  0032E8  C173  F062         	movff	reserve_direntry@sector,disk_write@sector
  6534  0032EC  C174  F063         	movff	reserve_direntry@sector+1,disk_write@sector+1
  6535  0032F0  C175  F064         	movff	reserve_direntry@sector+2,disk_write@sector+2
  6536  0032F4  C176  F065         	movff	reserve_direntry@sector+3,disk_write@sector+3
  6537  0032F8  0E01               	movlw	1
  6538  0032FA  0100               	movlb	0	; () banked
  6539  0032FC  6F66               	movwf	disk_write@count& (0+255),b
  6540  0032FE  0E00               	movlw	0
  6541  003300  EC1E  F026         	call	_disk_write
  6542  003304  0900               	iorlw	0
  6543  003306  B4D8               	btfsc	status,2,c
  6544  003308  D002               	goto	l12062
  6545                           
  6546                           ;tff.c: 606: return FR_RW_ERROR;
  6547  00330A  0E08               	movlw	8
  6548  00330C  0012               	return	
  6549  00330E                     l12062:
  6550                           
  6551                           ;tff.c: 607: sector++;
  6552  00330E  0E01               	movlw	1
  6553  003310  0101               	movlb	1	; () banked
  6554  003312  2773               	addwf	reserve_direntry@sector& (0+255),f,b
  6555  003314  0E00               	movlw	0
  6556  003316  2374               	addwfc	(reserve_direntry@sector+1)& (0+255),f,b
  6557  003318  2375               	addwfc	(reserve_direntry@sector+2)& (0+255),f,b
  6558  00331A  2376               	addwfc	(reserve_direntry@sector+3)& (0+255),f,b
  6559                           
  6560                           ; BSR set to: 1
  6561  00331C  0101               	movlb	1	; () banked
  6562  00331E  0777               	decf	reserve_direntry@n& (0+255),f,b
  6563  003320                     l12066:
  6564                           
  6565                           ; BSR set to: 1
  6566  003320  0101               	movlb	1	; () banked
  6567  003322  5177               	movf	reserve_direntry@n& (0+255),w,b
  6568  003324  0101               	movlb	1	; () banked
  6569  003326  A4D8               	btfss	status,2,c
  6570  003328  D7D5               	goto	l12056
  6571                           
  6572                           ; BSR set to: 1
  6573                           ;tff.c: 608: }
  6574                           ;tff.c: 609: fs->winflag = 1;
  6575                           
  6576                           ; BSR set to: 1
  6577  00332A  0101               	movlb	1	; () banked
  6578  00332C  EE20 F027          	lfsr	2,39
  6579  003330  517F               	movf	reserve_direntry@fs& (0+255),w,b
  6580  003332  26D9               	addwf	fsr2l,f,c
  6581  003334  5180               	movf	(reserve_direntry@fs+1)& (0+255),w,b
  6582  003336  22DA               	addwfc	fsr2h,f,c
  6583  003338  0E01               	movlw	1
  6584  00333A  6EDF               	movwf	indf2,c
  6585                           
  6586                           ;tff.c: 610: *dir = fs->win;
  6587  00333C  0E28               	movlw	40
  6588  00333E  0101               	movlb	1	; () banked
  6589  003340  257F               	addwf	reserve_direntry@fs& (0+255),w,b
  6590  003342  0100               	movlb	0	; () banked
  6591  003344  6FF2               	movwf	??_reserve_direntry& (0+255),b
  6592  003346  0E00               	movlw	0
  6593  003348  0101               	movlb	1	; () banked
  6594  00334A  2180               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
  6595  00334C  0100               	movlb	0	; () banked
  6596  00334E  6FF3               	movwf	(??_reserve_direntry+1)& (0+255),b
  6597  003350  C0F0  FFD9         	movff	reserve_direntry@dir,fsr2l
  6598  003354  C0F1  FFDA         	movff	reserve_direntry@dir+1,fsr2h
  6599  003358  C0F2  FFDE         	movff	??_reserve_direntry,postinc2
  6600  00335C  C0F3  FFDD         	movff	??_reserve_direntry+1,postdec2
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;tff.c: 611: return FR_OK;
  6604  003360  0E00               	movlw	0
  6605  003362  0012               	return	
  6606  003364                     __end_of_reserve_direntry:
  6607                           	opt stack 0
  6608                           tosu	equ	0xFFF
  6609                           tosh	equ	0xFFE
  6610                           tosl	equ	0xFFD
  6611                           pclath	equ	0xFFA
  6612                           tblptru	equ	0xFF8
  6613                           tblptrh	equ	0xFF7
  6614                           tblptrl	equ	0xFF6
  6615                           tablat	equ	0xFF5
  6616                           prodh	equ	0xFF4
  6617                           prodl	equ	0xFF3
  6618                           intcon	equ	0xFF2
  6619                           intcon2	equ	0xFF1
  6620                           intcon3	equ	0xFF0
  6621                           postinc0	equ	0xFEE
  6622                           wreg	equ	0xFE8
  6623                           postinc1	equ	0xFE6
  6624                           postdec1	equ	0xFE5
  6625                           fsr1h	equ	0xFE2
  6626                           fsr1l	equ	0xFE1
  6627                           indf2	equ	0xFDF
  6628                           postinc2	equ	0xFDE
  6629                           postdec2	equ	0xFDD
  6630                           fsr2h	equ	0xFDA
  6631                           fsr2l	equ	0xFD9
  6632                           status	equ	0xFD8
  6633                           
  6634 ;; *************** function _next_dir_entry *****************
  6635 ;; Defined at:
  6636 ;;		line 358 in file "bibliotecas/tff.c"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;  dj              2  116[BANK0 ] PTR struct _DIR
  6639 ;;		 -> f_rename@dj(18), f_utime@dj(18), f_chmod@dj(18), f_mkdir@dj(18), 
  6640 ;;		 -> f_unlink@dj(18), f_stat@dj(18), f_open@dj(18), 
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;  clust           4  125[BANK0 ] unsigned long 
  6643 ;;  idx             2  129[BANK0 ] unsigned short 
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  1    wreg      enum E105
  6646 ;; Registers used:
  6647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6653 ;;      Params:         0       2       0       0       0       0       0       0       0
  6654 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6655 ;;      Temps:          0       7       0       0       0       0       0       0       0
  6656 ;;      Totals:         0      15       0       0       0       0       0       0       0
  6657 ;;Total ram usage:       15 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; Hardware stack levels required when called:   10
  6660 ;; This function calls:
  6661 ;;		_clust2sect
  6662 ;;		_get_cluster
  6663 ;; This function is called by:
  6664 ;;		_trace_path
  6665 ;;		_reserve_direntry
  6666 ;;		_f_readdir
  6667 ;;		_f_unlink
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           	psect	text19
  6672  003B92                     __ptext19:
  6673                           	opt stack 0
  6674  003B92                     _next_dir_entry:
  6675                           	opt stack 16
  6676                           
  6677                           ;tff.c: 362: CLUST clust;
  6678                           ;tff.c: 363: WORD idx;
  6679                           ;tff.c: 366: idx = dj->index + 1;
  6680                           
  6681                           ;incstack = 0
  6682  003B92  0100               	movlb	0	; () banked
  6683  003B94  EE20 F002          	lfsr	2,2
  6684  003B98  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6685  003B9A  26D9               	addwf	fsr2l,f,c
  6686  003B9C  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6687  003B9E  22DA               	addwfc	fsr2h,f,c
  6688  003BA0  CFDE F0D6          	movff	postinc2,??_next_dir_entry
  6689  003BA4  CFDD F0D7          	movff	postdec2,??_next_dir_entry+1
  6690  003BA8  0E01               	movlw	1
  6691  003BAA  0100               	movlb	0	; () banked
  6692  003BAC  25D6               	addwf	??_next_dir_entry& (0+255),w,b
  6693  003BAE  0100               	movlb	0	; () banked
  6694  003BB0  6FE1               	movwf	next_dir_entry@idx& (0+255),b
  6695  003BB2  0E00               	movlw	0
  6696  003BB4  0100               	movlb	0	; () banked
  6697  003BB6  21D7               	addwfc	(??_next_dir_entry+1)& (0+255),w,b
  6698  003BB8  0100               	movlb	0	; () banked
  6699  003BBA  6FE2               	movwf	(next_dir_entry@idx+1)& (0+255),b
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;tff.c: 367: if ((idx & 15) == 0) {
  6703  003BBC  0E0F               	movlw	15
  6704  003BBE  0100               	movlb	0	; () banked
  6705  003BC0  15E1               	andwf	next_dir_entry@idx& (0+255),w,b
  6706  003BC2  0100               	movlb	0	; () banked
  6707  003BC4  6FD6               	movwf	??_next_dir_entry& (0+255),b
  6708  003BC6  0E00               	movlw	0
  6709  003BC8  0100               	movlb	0	; () banked
  6710  003BCA  15E2               	andwf	(next_dir_entry@idx+1)& (0+255),w,b
  6711  003BCC  0100               	movlb	0	; () banked
  6712  003BCE  6FD7               	movwf	(??_next_dir_entry+1)& (0+255),b
  6713  003BD0  0100               	movlb	0	; () banked
  6714  003BD2  51D6               	movf	??_next_dir_entry& (0+255),w,b
  6715  003BD4  0100               	movlb	0	; () banked
  6716  003BD6  11D7               	iorwf	(??_next_dir_entry+1)& (0+255),w,b
  6717  003BD8  A4D8               	btfss	status,2,c
  6718  003BDA  D0D5               	goto	l11598
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;tff.c: 368: dj->sect++;
  6722  003BDC  0100               	movlb	0	; () banked
  6723  003BDE  EE20 F00E          	lfsr	2,14
  6724  003BE2  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6725  003BE4  26D9               	addwf	fsr2l,f,c
  6726  003BE6  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6727  003BE8  22DA               	addwfc	fsr2h,f,c
  6728  003BEA  2ADE               	incf	postinc2,f,c
  6729  003BEC  0E00               	movlw	0
  6730  003BEE  22DE               	addwfc	postinc2,f,c
  6731  003BF0  22DE               	addwfc	postinc2,f,c
  6732  003BF2  22DE               	addwfc	postinc2,f,c
  6733                           
  6734                           ;tff.c: 369: if (dj->clust == 0) {
  6735  003BF4  0100               	movlb	0	; () banked
  6736  003BF6  EE20 F00A          	lfsr	2,10
  6737  003BFA  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6738  003BFC  26D9               	addwf	fsr2l,f,c
  6739  003BFE  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6740  003C00  22DA               	addwfc	fsr2h,f,c
  6741  003C02  50DE               	movf	postinc2,w,c
  6742  003C04  10DE               	iorwf	postinc2,w,c
  6743  003C06  10DE               	iorwf	postinc2,w,c
  6744  003C08  10DE               	iorwf	postinc2,w,c
  6745  003C0A  A4D8               	btfss	status,2,c
  6746  003C0C  D017               	goto	l11582
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;tff.c: 370: if (idx >= dj->fs->n_rootdir) return FALSE;
  6750  003C0E  0100               	movlb	0	; () banked
  6751  003C10  EE20 F004          	lfsr	2,4
  6752  003C14  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6753  003C16  26D9               	addwf	fsr2l,f,c
  6754  003C18  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6755  003C1A  22DA               	addwfc	fsr2h,f,c
  6756  003C1C  EE10 F002          	lfsr	1,2
  6757  003C20  50DE               	movf	postinc2,w,c
  6758  003C22  26E1               	addwf	fsr1l,f,c
  6759  003C24  50DD               	movf	postdec2,w,c
  6760  003C26  22E2               	addwfc	fsr1h,f,c
  6761  003C28  50E6               	movf	postinc1,w,c
  6762  003C2A  0100               	movlb	0	; () banked
  6763  003C2C  5DE1               	subwf	next_dir_entry@idx& (0+255),w,b
  6764  003C2E  50E6               	movf	postinc1,w,c
  6765  003C30  0100               	movlb	0	; () banked
  6766  003C32  59E2               	subwfb	(next_dir_entry@idx+1)& (0+255),w,b
  6767  003C34  A0D8               	btfss	status,0,c
  6768  003C36  D0A7               	goto	l11598
  6769                           
  6770                           ; BSR set to: 0
  6771  003C38  0E00               	movlw	0
  6772                           
  6773                           ; BSR set to: 0
  6774  003C3A  0012               	return	
  6775  003C3C                     l11582:
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;tff.c: 372: if (((idx / 16) & (dj->fs->csize - 1)) == 0) {
  6779  003C3C  C0E1  F0D6         	movff	next_dir_entry@idx,??_next_dir_entry
  6780  003C40  C0E2  F0D7         	movff	next_dir_entry@idx+1,??_next_dir_entry+1
  6781  003C44  0E04               	movlw	4
  6782  003C46  0100               	movlb	0	; () banked
  6783  003C48  6FD8               	movwf	(??_next_dir_entry+2)& (0+255),b
  6784  003C4A                     u12825:
  6785  003C4A  0100               	movlb	0	; () banked
  6786  003C4C  90D8               	bcf	status,0,c
  6787  003C4E  33D7               	rrcf	(??_next_dir_entry+1)& (0+255),f,b
  6788  003C50  33D6               	rrcf	??_next_dir_entry& (0+255),f,b
  6789  003C52  0100               	movlb	0	; () banked
  6790  003C54  2FD8               	decfsz	(??_next_dir_entry+2)& (0+255),f,b
  6791  003C56  D7F9               	goto	u12825
  6792  003C58  0EFF               	movlw	255
  6793  003C5A  0100               	movlb	0	; () banked
  6794  003C5C  6FD9               	movwf	(??_next_dir_entry+3)& (0+255),b
  6795  003C5E  0EFF               	movlw	255
  6796  003C60  0100               	movlb	0	; () banked
  6797  003C62  6FDA               	movwf	(??_next_dir_entry+4)& (0+255),b
  6798  003C64  0100               	movlb	0	; () banked
  6799  003C66  EE20 F004          	lfsr	2,4
  6800  003C6A  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6801  003C6C  26D9               	addwf	fsr2l,f,c
  6802  003C6E  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6803  003C70  22DA               	addwfc	fsr2h,f,c
  6804  003C72  EE10 F025          	lfsr	1,37
  6805  003C76  50DE               	movf	postinc2,w,c
  6806  003C78  26E1               	addwf	fsr1l,f,c
  6807  003C7A  50DD               	movf	postdec2,w,c
  6808  003C7C  22E2               	addwfc	fsr1h,f,c
  6809  003C7E  50E7               	movf	indf1,w,c
  6810  003C80  0100               	movlb	0	; () banked
  6811  003C82  6FDB               	movwf	(??_next_dir_entry+5)& (0+255),b
  6812  003C84  6BDC               	clrf	(??_next_dir_entry+6)& (0+255),b
  6813  003C86  0100               	movlb	0	; () banked
  6814  003C88  51D9               	movf	(??_next_dir_entry+3)& (0+255),w,b
  6815  003C8A  0100               	movlb	0	; () banked
  6816  003C8C  27DB               	addwf	(??_next_dir_entry+5)& (0+255),f,b
  6817  003C8E  0100               	movlb	0	; () banked
  6818  003C90  51DA               	movf	(??_next_dir_entry+4)& (0+255),w,b
  6819  003C92  0100               	movlb	0	; () banked
  6820  003C94  23DC               	addwfc	(??_next_dir_entry+6)& (0+255),f,b
  6821  003C96  0100               	movlb	0	; () banked
  6822  003C98  51D6               	movf	??_next_dir_entry& (0+255),w,b
  6823  003C9A  0100               	movlb	0	; () banked
  6824  003C9C  17DB               	andwf	(??_next_dir_entry+5)& (0+255),f,b
  6825  003C9E  0100               	movlb	0	; () banked
  6826  003CA0  51D7               	movf	(??_next_dir_entry+1)& (0+255),w,b
  6827  003CA2  0100               	movlb	0	; () banked
  6828  003CA4  17DC               	andwf	(??_next_dir_entry+6)& (0+255),f,b
  6829  003CA6  0100               	movlb	0	; () banked
  6830  003CA8  51DB               	movf	(??_next_dir_entry+5)& (0+255),w,b
  6831  003CAA  0100               	movlb	0	; () banked
  6832  003CAC  11DC               	iorwf	(??_next_dir_entry+6)& (0+255),w,b
  6833  003CAE  A4D8               	btfss	status,2,c
  6834  003CB0  D06A               	goto	l11598
  6835                           
  6836                           ; BSR set to: 0
  6837                           ;tff.c: 373: clust = get_cluster(dj->clust);
  6838  003CB2  0100               	movlb	0	; () banked
  6839  003CB4  EE20 F00A          	lfsr	2,10
  6840  003CB8  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6841  003CBA  26D9               	addwf	fsr2l,f,c
  6842  003CBC  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6843  003CBE  22DA               	addwfc	fsr2h,f,c
  6844  003CC0  CFDE F09A          	movff	postinc2,get_cluster@clust
  6845  003CC4  CFDE F09B          	movff	postinc2,get_cluster@clust+1
  6846  003CC8  CFDE F09C          	movff	postinc2,get_cluster@clust+2
  6847  003CCC  CFDE F09D          	movff	postinc2,get_cluster@clust+3
  6848  003CD0  ECCC  F009         	call	_get_cluster	;wreg free
  6849  003CD4  C09A  F0DD         	movff	?_get_cluster,next_dir_entry@clust
  6850  003CD8  C09B  F0DE         	movff	?_get_cluster+1,next_dir_entry@clust+1
  6851  003CDC  C09C  F0DF         	movff	?_get_cluster+2,next_dir_entry@clust+2
  6852  003CE0  C09D  F0E0         	movff	?_get_cluster+3,next_dir_entry@clust+3
  6853                           
  6854                           ;tff.c: 374: if (clust < 2 || clust >= dj->fs->max_clust)
  6855  003CE4  0100               	movlb	0	; () banked
  6856  003CE6  51E0               	movf	(next_dir_entry@clust+3)& (0+255),w,b
  6857  003CE8  0100               	movlb	0	; () banked
  6858  003CEA  11DF               	iorwf	(next_dir_entry@clust+2)& (0+255),w,b
  6859  003CEC  0100               	movlb	0	; () banked
  6860  003CEE  11DE               	iorwf	(next_dir_entry@clust+1)& (0+255),w,b
  6861  003CF0  E105               	bnz	u12840
  6862  003CF2  0E02               	movlw	2
  6863  003CF4  0100               	movlb	0	; () banked
  6864  003CF6  5DDD               	subwf	next_dir_entry@clust& (0+255),w,b
  6865  003CF8  A0D8               	btfss	status,0,c
  6866  003CFA  D01B               	goto	l11590
  6867  003CFC                     u12840:
  6868                           
  6869                           ; BSR set to: 0
  6870  003CFC  0100               	movlb	0	; () banked
  6871  003CFE  EE20 F004          	lfsr	2,4
  6872  003D02  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6873  003D04  26D9               	addwf	fsr2l,f,c
  6874  003D06  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6875  003D08  22DA               	addwfc	fsr2h,f,c
  6876  003D0A  EE10 F018          	lfsr	1,24
  6877  003D0E  50DE               	movf	postinc2,w,c
  6878  003D10  26E1               	addwf	fsr1l,f,c
  6879  003D12  50DD               	movf	postdec2,w,c
  6880  003D14  22E2               	addwfc	fsr1h,f,c
  6881  003D16  50E6               	movf	postinc1,w,c
  6882  003D18  0100               	movlb	0	; () banked
  6883  003D1A  5DDD               	subwf	next_dir_entry@clust& (0+255),w,b
  6884  003D1C  50E6               	movf	postinc1,w,c
  6885  003D1E  0100               	movlb	0	; () banked
  6886  003D20  59DE               	subwfb	(next_dir_entry@clust+1)& (0+255),w,b
  6887  003D22  50E6               	movf	postinc1,w,c
  6888  003D24  0100               	movlb	0	; () banked
  6889  003D26  59DF               	subwfb	(next_dir_entry@clust+2)& (0+255),w,b
  6890  003D28  50E6               	movf	postinc1,w,c
  6891  003D2A  0100               	movlb	0	; () banked
  6892  003D2C  59E0               	subwfb	(next_dir_entry@clust+3)& (0+255),w,b
  6893  003D2E  A0D8               	btfss	status,0,c
  6894  003D30  D002               	goto	l11594
  6895  003D32                     l11590:
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;tff.c: 375: return FALSE;
  6899  003D32  0E00               	movlw	0
  6900                           
  6901                           ; BSR set to: 0
  6902  003D34  0012               	return	
  6903  003D36                     l11594:
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;tff.c: 376: dj->clust = clust;
  6907  003D36  0100               	movlb	0	; () banked
  6908  003D38  EE20 F00A          	lfsr	2,10
  6909  003D3C  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6910  003D3E  26D9               	addwf	fsr2l,f,c
  6911  003D40  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6912  003D42  22DA               	addwfc	fsr2h,f,c
  6913  003D44  C0DD  FFDE         	movff	next_dir_entry@clust,postinc2
  6914  003D48  C0DE  FFDE         	movff	next_dir_entry@clust+1,postinc2
  6915  003D4C  C0DF  FFDE         	movff	next_dir_entry@clust+2,postinc2
  6916  003D50  C0E0  FFDE         	movff	next_dir_entry@clust+3,postinc2
  6917                           
  6918                           ; BSR set to: 0
  6919                           ;tff.c: 377: dj->sect = clust2sect(clust);
  6920  003D54  C0DD  F022         	movff	next_dir_entry@clust,clust2sect@clust
  6921  003D58  C0DE  F023         	movff	next_dir_entry@clust+1,clust2sect@clust+1
  6922  003D5C  C0DF  F024         	movff	next_dir_entry@clust+2,clust2sect@clust+2
  6923  003D60  C0E0  F025         	movff	next_dir_entry@clust+3,clust2sect@clust+3
  6924  003D64  EC22  F023         	call	_clust2sect	;wreg free
  6925  003D68  0100               	movlb	0	; () banked
  6926  003D6A  EE20 F00E          	lfsr	2,14
  6927  003D6E  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6928  003D70  26D9               	addwf	fsr2l,f,c
  6929  003D72  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6930  003D74  22DA               	addwfc	fsr2h,f,c
  6931  003D76  C022  FFDE         	movff	?_clust2sect,postinc2
  6932  003D7A  C023  FFDE         	movff	?_clust2sect+1,postinc2
  6933  003D7E  C024  FFDE         	movff	?_clust2sect+2,postinc2
  6934  003D82  C025  FFDE         	movff	?_clust2sect+3,postinc2
  6935  003D86                     l11598:
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;tff.c: 378: }
  6939                           ;tff.c: 379: }
  6940                           ;tff.c: 380: }
  6941                           ;tff.c: 381: dj->index = idx;
  6942  003D86  0100               	movlb	0	; () banked
  6943  003D88  EE20 F002          	lfsr	2,2
  6944  003D8C  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6945  003D8E  26D9               	addwf	fsr2l,f,c
  6946  003D90  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6947  003D92  22DA               	addwfc	fsr2h,f,c
  6948  003D94  C0E1  FFDE         	movff	next_dir_entry@idx,postinc2
  6949  003D98  C0E2  FFDD         	movff	next_dir_entry@idx+1,postdec2
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;tff.c: 382: return TRUE;
  6953  003D9C  0E01               	movlw	1
  6954  003D9E  0012               	return	
  6955  003DA0                     __end_of_next_dir_entry:
  6956                           	opt stack 0
  6957                           tosu	equ	0xFFF
  6958                           tosh	equ	0xFFE
  6959                           tosl	equ	0xFFD
  6960                           pclath	equ	0xFFA
  6961                           tblptru	equ	0xFF8
  6962                           tblptrh	equ	0xFF7
  6963                           tblptrl	equ	0xFF6
  6964                           tablat	equ	0xFF5
  6965                           prodh	equ	0xFF4
  6966                           prodl	equ	0xFF3
  6967                           intcon	equ	0xFF2
  6968                           intcon2	equ	0xFF1
  6969                           intcon3	equ	0xFF0
  6970                           postinc0	equ	0xFEE
  6971                           wreg	equ	0xFE8
  6972                           indf1	equ	0xFE7
  6973                           postinc1	equ	0xFE6
  6974                           postdec1	equ	0xFE5
  6975                           fsr1h	equ	0xFE2
  6976                           fsr1l	equ	0xFE1
  6977                           indf2	equ	0xFDF
  6978                           postinc2	equ	0xFDE
  6979                           postdec2	equ	0xFDD
  6980                           fsr2h	equ	0xFDA
  6981                           fsr2l	equ	0xFD9
  6982                           status	equ	0xFD8
  6983                           
  6984 ;; *************** function _clust2sect *****************
  6985 ;; Defined at:
  6986 ;;		line 338 in file "bibliotecas/tff.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;  clust           4   33[COMRAM] unsigned long 
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;  fs              2   42[COMRAM] PTR struct _FATFS
  6991 ;;		 -> fs(552), NULL(0), 
  6992 ;; Return value:  Size  Location     Type
  6993 ;;                  4   33[COMRAM] unsigned long 
  6994 ;; Registers used:
  6995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6996 ;; Tracked objects:
  6997 ;;		On entry : 0/0
  6998 ;;		On exit  : 0/0
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7001 ;;      Params:         4       0       0       0       0       0       0       0       0
  7002 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7003 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7004 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7005 ;;Total ram usage:       11 bytes
  7006 ;; Hardware stack levels used:    1
  7007 ;; Hardware stack levels required when called:    3
  7008 ;; This function calls:
  7009 ;;		___lmul
  7010 ;; This function is called by:
  7011 ;;		_next_dir_entry
  7012 ;;		_trace_path
  7013 ;;		_reserve_direntry
  7014 ;;		_f_read
  7015 ;;		_f_write
  7016 ;;		_f_opendir
  7017 ;;		_f_unlink
  7018 ;;		_f_mkdir
  7019 ;; This function uses a non-reentrant model
  7020 ;;
  7021                           
  7022                           	psect	text20
  7023  004644                     __ptext20:
  7024                           	opt stack 0
  7025  004644                     _clust2sect:
  7026                           	opt stack 22
  7027                           
  7028                           ;tff.c: 342: FATFS *fs = FatFs;
  7029                           
  7030                           ; BSR set to: 0
  7031                           ;incstack = 0
  7032  004644  C0FC  F02B         	movff	_FatFs,clust2sect@fs
  7033  004648  C0FD  F02C         	movff	_FatFs+1,clust2sect@fs+1
  7034                           
  7035                           ;tff.c: 345: clust -= 2;
  7036  00464C  0E02               	movlw	2
  7037  00464E  5E22               	subwf	clust2sect@clust,f,c
  7038  004650  0E00               	movlw	0
  7039  004652  5A23               	subwfb	clust2sect@clust+1,f,c
  7040  004654  5A24               	subwfb	clust2sect@clust+2,f,c
  7041  004656  5A25               	subwfb	clust2sect@clust+3,f,c
  7042                           
  7043                           ;tff.c: 346: if (clust >= (fs->max_clust - 2)) return 0;
  7044  004658  EE20 F018          	lfsr	2,24
  7045  00465C  502B               	movf	clust2sect@fs,w,c
  7046  00465E  26D9               	addwf	fsr2l,f,c
  7047  004660  502C               	movf	clust2sect@fs+1,w,c
  7048  004662  22DA               	addwfc	fsr2h,f,c
  7049  004664  0EFE               	movlw	254
  7050  004666  24DE               	addwf	postinc2,w,c
  7051  004668  6E26               	movwf	??_clust2sect& (0+255),c
  7052  00466A  0EFF               	movlw	255
  7053  00466C  20DE               	addwfc	postinc2,w,c
  7054  00466E  6E27               	movwf	(??_clust2sect+1)& (0+255),c
  7055  004670  0EFF               	movlw	255
  7056  004672  20DE               	addwfc	postinc2,w,c
  7057  004674  6E28               	movwf	(??_clust2sect+2)& (0+255),c
  7058  004676  0EFF               	movlw	255
  7059  004678  20DE               	addwfc	postinc2,w,c
  7060  00467A  6E29               	movwf	(??_clust2sect+3)& (0+255),c
  7061  00467C  5026               	movf	??_clust2sect,w,c
  7062  00467E  5C22               	subwf	clust2sect@clust,w,c
  7063  004680  5027               	movf	??_clust2sect+1,w,c
  7064  004682  5823               	subwfb	clust2sect@clust+1,w,c
  7065  004684  5028               	movf	??_clust2sect+2,w,c
  7066  004686  5824               	subwfb	clust2sect@clust+2,w,c
  7067  004688  5029               	movf	??_clust2sect+3,w,c
  7068  00468A  5825               	subwfb	clust2sect@clust+3,w,c
  7069  00468C  A0D8               	btfss	status,0,c
  7070  00468E  D009               	goto	l11428
  7071  004690  0E00               	movlw	0
  7072  004692  6E22               	movwf	?_clust2sect,c
  7073  004694  0E00               	movlw	0
  7074  004696  6E23               	movwf	?_clust2sect+1,c
  7075  004698  0E00               	movlw	0
  7076  00469A  6E24               	movwf	?_clust2sect+2,c
  7077  00469C  0E00               	movlw	0
  7078  00469E  6E25               	movwf	?_clust2sect+3,c
  7079  0046A0  0012               	return	
  7080  0046A2                     l11428:
  7081                           
  7082                           ;tff.c: 347: return (DWORD)clust * fs->csize + fs->database;
  7083  0046A2  EE20 F010          	lfsr	2,16
  7084  0046A6  502B               	movf	clust2sect@fs,w,c
  7085  0046A8  26D9               	addwf	fsr2l,f,c
  7086  0046AA  502C               	movf	clust2sect@fs+1,w,c
  7087  0046AC  22DA               	addwfc	fsr2h,f,c
  7088  0046AE  CFDE F026          	movff	postinc2,??_clust2sect
  7089  0046B2  CFDE F027          	movff	postinc2,??_clust2sect+1
  7090  0046B6  CFDE F028          	movff	postinc2,??_clust2sect+2
  7091  0046BA  CFDE F029          	movff	postinc2,??_clust2sect+3
  7092  0046BE  EE20 F025          	lfsr	2,37
  7093  0046C2  502B               	movf	clust2sect@fs,w,c
  7094  0046C4  26D9               	addwf	fsr2l,f,c
  7095  0046C6  502C               	movf	clust2sect@fs+1,w,c
  7096  0046C8  22DA               	addwfc	fsr2h,f,c
  7097  0046CA  50DF               	movf	indf2,w,c
  7098  0046CC  6E2A               	movwf	(??_clust2sect+4)& (0+255),c
  7099  0046CE  502A               	movf	??_clust2sect+4,w,c
  7100  0046D0  6E16               	movwf	___lmul@multiplier,c
  7101  0046D2  6A17               	clrf	___lmul@multiplier+1,c
  7102  0046D4  6A18               	clrf	___lmul@multiplier+2,c
  7103  0046D6  6A19               	clrf	___lmul@multiplier+3,c
  7104  0046D8  C022  F01A         	movff	clust2sect@clust,___lmul@multiplicand
  7105  0046DC  C023  F01B         	movff	clust2sect@clust+1,___lmul@multiplicand+1
  7106  0046E0  C024  F01C         	movff	clust2sect@clust+2,___lmul@multiplicand+2
  7107  0046E4  C025  F01D         	movff	clust2sect@clust+3,___lmul@multiplicand+3
  7108  0046E8  EC9A  F027         	call	___lmul	;wreg free
  7109  0046EC  5026               	movf	??_clust2sect,w,c
  7110  0046EE  2416               	addwf	?___lmul,w,c
  7111  0046F0  6E22               	movwf	?_clust2sect,c
  7112  0046F2  5027               	movf	??_clust2sect+1,w,c
  7113  0046F4  2017               	addwfc	?___lmul+1,w,c
  7114  0046F6  6E23               	movwf	?_clust2sect+1,c
  7115  0046F8  5028               	movf	??_clust2sect+2,w,c
  7116  0046FA  2018               	addwfc	?___lmul+2,w,c
  7117  0046FC  6E24               	movwf	?_clust2sect+2,c
  7118  0046FE  5029               	movf	??_clust2sect+3,w,c
  7119  004700  2019               	addwfc	?___lmul+3,w,c
  7120  004702  6E25               	movwf	?_clust2sect+3,c
  7121  004704  0012               	return	
  7122  004706                     __end_of_clust2sect:
  7123                           	opt stack 0
  7124                           tosu	equ	0xFFF
  7125                           tosh	equ	0xFFE
  7126                           tosl	equ	0xFFD
  7127                           pclath	equ	0xFFA
  7128                           tblptru	equ	0xFF8
  7129                           tblptrh	equ	0xFF7
  7130                           tblptrl	equ	0xFF6
  7131                           tablat	equ	0xFF5
  7132                           prodh	equ	0xFF4
  7133                           prodl	equ	0xFF3
  7134                           intcon	equ	0xFF2
  7135                           intcon2	equ	0xFF1
  7136                           intcon3	equ	0xFF0
  7137                           postinc0	equ	0xFEE
  7138                           wreg	equ	0xFE8
  7139                           indf1	equ	0xFE7
  7140                           postinc1	equ	0xFE6
  7141                           postdec1	equ	0xFE5
  7142                           fsr1h	equ	0xFE2
  7143                           fsr1l	equ	0xFE1
  7144                           indf2	equ	0xFDF
  7145                           postinc2	equ	0xFDE
  7146                           postdec2	equ	0xFDD
  7147                           fsr2h	equ	0xFDA
  7148                           fsr2l	equ	0xFD9
  7149                           status	equ	0xFD8
  7150                           
  7151 ;; *************** function _create_chain *****************
  7152 ;; Defined at:
  7153 ;;		line 282 in file "bibliotecas/tff.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;  clust           4  116[BANK0 ] unsigned long 
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;  ncl             4  138[BANK0 ] unsigned long 
  7158 ;;  scl             4  134[BANK0 ] unsigned long 
  7159 ;;  cstat           4  130[BANK0 ] unsigned long 
  7160 ;;  mcl             4  124[BANK0 ] unsigned long 
  7161 ;;  fs              2  128[BANK0 ] PTR struct _FATFS
  7162 ;;		 -> fs(552), NULL(0), 
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  4  116[BANK0 ] unsigned long 
  7165 ;; Registers used:
  7166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7172 ;;      Params:         0       4       0       0       0       0       0       0       0
  7173 ;;      Locals:         0      18       0       0       0       0       0       0       0
  7174 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7175 ;;      Totals:         0      26       0       0       0       0       0       0       0
  7176 ;;Total ram usage:       26 bytes
  7177 ;; Hardware stack levels used:    1
  7178 ;; Hardware stack levels required when called:   10
  7179 ;; This function calls:
  7180 ;;		_get_cluster
  7181 ;;		_put_cluster
  7182 ;; This function is called by:
  7183 ;;		_reserve_direntry
  7184 ;;		_f_write
  7185 ;;		_f_lseek
  7186 ;;		_f_mkdir
  7187 ;; This function uses a non-reentrant model
  7188 ;;
  7189                           
  7190                           	psect	text21
  7191  002CC4                     __ptext21:
  7192                           	opt stack 0
  7193  002CC4                     _create_chain:
  7194                           	opt stack 16
  7195                           
  7196                           ;tff.c: 286: CLUST cstat, ncl, scl, mcl;
  7197                           ;tff.c: 287: FATFS *fs = FatFs;
  7198                           
  7199                           ;incstack = 0
  7200  002CC4  C0FC  F0E0         	movff	_FatFs,create_chain@fs
  7201  002CC8  C0FD  F0E1         	movff	_FatFs+1,create_chain@fs+1
  7202                           
  7203                           ;tff.c: 290: mcl = fs->max_clust;
  7204  002CCC  0100               	movlb	0	; () banked
  7205  002CCE  EE20 F018          	lfsr	2,24
  7206  002CD2  51E0               	movf	create_chain@fs& (0+255),w,b
  7207  002CD4  26D9               	addwf	fsr2l,f,c
  7208  002CD6  51E1               	movf	(create_chain@fs+1)& (0+255),w,b
  7209  002CD8  22DA               	addwfc	fsr2h,f,c
  7210  002CDA  CFDE F0DC          	movff	postinc2,create_chain@mcl
  7211  002CDE  CFDE F0DD          	movff	postinc2,create_chain@mcl+1
  7212  002CE2  CFDE F0DE          	movff	postinc2,create_chain@mcl+2
  7213  002CE6  CFDE F0DF          	movff	postinc2,create_chain@mcl+3
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;tff.c: 291: if (clust == 0) {
  7217  002CEA  0100               	movlb	0	; () banked
  7218  002CEC  51D4               	movf	create_chain@clust& (0+255),w,b
  7219  002CEE  0100               	movlb	0	; () banked
  7220  002CF0  11D5               	iorwf	(create_chain@clust+1)& (0+255),w,b
  7221  002CF2  0100               	movlb	0	; () banked
  7222  002CF4  11D6               	iorwf	(create_chain@clust+2)& (0+255),w,b
  7223  002CF6  0100               	movlb	0	; () banked
  7224  002CF8  11D7               	iorwf	(create_chain@clust+3)& (0+255),w,b
  7225  002CFA  A4D8               	btfss	status,2,c
  7226  002CFC  D037               	goto	l11508
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;tff.c: 292: scl = fs->last_clust;
  7230  002CFE  0100               	movlb	0	; () banked
  7231  002D00  EE20 F01C          	lfsr	2,28
  7232  002D04  51E0               	movf	create_chain@fs& (0+255),w,b
  7233  002D06  26D9               	addwf	fsr2l,f,c
  7234  002D08  51E1               	movf	(create_chain@fs+1)& (0+255),w,b
  7235  002D0A  22DA               	addwfc	fsr2h,f,c
  7236  002D0C  CFDE F0E6          	movff	postinc2,create_chain@scl
  7237  002D10  CFDE F0E7          	movff	postinc2,create_chain@scl+1
  7238  002D14  CFDE F0E8          	movff	postinc2,create_chain@scl+2
  7239  002D18  CFDE F0E9          	movff	postinc2,create_chain@scl+3
  7240                           
  7241                           ; BSR set to: 0
  7242                           ;tff.c: 293: if (scl < 2 || scl >= mcl) scl = 1;
  7243  002D1C  0100               	movlb	0	; () banked
  7244  002D1E  51E9               	movf	(create_chain@scl+3)& (0+255),w,b
  7245  002D20  0100               	movlb	0	; () banked
  7246  002D22  11E8               	iorwf	(create_chain@scl+2)& (0+255),w,b
  7247  002D24  0100               	movlb	0	; () banked
  7248  002D26  11E7               	iorwf	(create_chain@scl+1)& (0+255),w,b
  7249  002D28  E105               	bnz	u12660
  7250  002D2A  0E02               	movlw	2
  7251  002D2C  0100               	movlb	0	; () banked
  7252  002D2E  5DE6               	subwf	create_chain@scl& (0+255),w,b
  7253  002D30  A0D8               	btfss	status,0,c
  7254  002D32  D012               	goto	l11506
  7255  002D34                     u12660:
  7256                           
  7257                           ; BSR set to: 0
  7258  002D34  0100               	movlb	0	; () banked
  7259  002D36  51DC               	movf	create_chain@mcl& (0+255),w,b
  7260  002D38  0100               	movlb	0	; () banked
  7261  002D3A  5DE6               	subwf	create_chain@scl& (0+255),w,b
  7262  002D3C  0100               	movlb	0	; () banked
  7263  002D3E  51DD               	movf	(create_chain@mcl+1)& (0+255),w,b
  7264  002D40  0100               	movlb	0	; () banked
  7265  002D42  59E7               	subwfb	(create_chain@scl+1)& (0+255),w,b
  7266  002D44  0100               	movlb	0	; () banked
  7267  002D46  51DE               	movf	(create_chain@mcl+2)& (0+255),w,b
  7268  002D48  0100               	movlb	0	; () banked
  7269  002D4A  59E8               	subwfb	(create_chain@scl+2)& (0+255),w,b
  7270  002D4C  0100               	movlb	0	; () banked
  7271  002D4E  51DF               	movf	(create_chain@mcl+3)& (0+255),w,b
  7272  002D50  0100               	movlb	0	; () banked
  7273  002D52  59E9               	subwfb	(create_chain@scl+3)& (0+255),w,b
  7274  002D54  A0D8               	btfss	status,0,c
  7275  002D56  D055               	goto	l637
  7276  002D58                     l11506:
  7277                           
  7278                           ; BSR set to: 0
  7279  002D58  0E01               	movlw	1
  7280  002D5A  0100               	movlb	0	; () banked
  7281  002D5C  6FE6               	movwf	create_chain@scl& (0+255),b
  7282  002D5E  0E00               	movlw	0
  7283  002D60  6FE7               	movwf	(create_chain@scl+1)& (0+255),b
  7284  002D62  0E00               	movlw	0
  7285  002D64  6FE8               	movwf	(create_chain@scl+2)& (0+255),b
  7286  002D66  0E00               	movlw	0
  7287  002D68  6FE9               	movwf	(create_chain@scl+3)& (0+255),b
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;tff.c: 294: }
  7291  002D6A  D04B               	goto	l637
  7292  002D6C                     l11508:
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;tff.c: 295: else {
  7296                           ;tff.c: 296: cstat = get_cluster(clust);
  7297  002D6C  C0D4  F09A         	movff	create_chain@clust,get_cluster@clust
  7298  002D70  C0D5  F09B         	movff	create_chain@clust+1,get_cluster@clust+1
  7299  002D74  C0D6  F09C         	movff	create_chain@clust+2,get_cluster@clust+2
  7300  002D78  C0D7  F09D         	movff	create_chain@clust+3,get_cluster@clust+3
  7301  002D7C  ECCC  F009         	call	_get_cluster	;wreg free
  7302  002D80  C09A  F0E2         	movff	?_get_cluster,create_chain@cstat
  7303  002D84  C09B  F0E3         	movff	?_get_cluster+1,create_chain@cstat+1
  7304  002D88  C09C  F0E4         	movff	?_get_cluster+2,create_chain@cstat+2
  7305  002D8C  C09D  F0E5         	movff	?_get_cluster+3,create_chain@cstat+3
  7306                           
  7307                           ;tff.c: 297: if (cstat < 2) return 1;
  7308  002D90  0100               	movlb	0	; () banked
  7309  002D92  51E5               	movf	(create_chain@cstat+3)& (0+255),w,b
  7310  002D94  0100               	movlb	0	; () banked
  7311  002D96  11E4               	iorwf	(create_chain@cstat+2)& (0+255),w,b
  7312  002D98  0100               	movlb	0	; () banked
  7313  002D9A  11E3               	iorwf	(create_chain@cstat+1)& (0+255),w,b
  7314  002D9C  E10F               	bnz	l11516
  7315  002D9E  0E02               	movlw	2
  7316  002DA0  0100               	movlb	0	; () banked
  7317  002DA2  5DE2               	subwf	create_chain@cstat& (0+255),w,b
  7318  002DA4  B0D8               	btfsc	status,0,c
  7319  002DA6  D00A               	goto	l11516
  7320                           
  7321                           ; BSR set to: 0
  7322  002DA8  0E01               	movlw	1
  7323  002DAA  0100               	movlb	0	; () banked
  7324  002DAC  6FD4               	movwf	?_create_chain& (0+255),b
  7325  002DAE  0E00               	movlw	0
  7326  002DB0  6FD5               	movwf	(?_create_chain+1)& (0+255),b
  7327  002DB2  0E00               	movlw	0
  7328  002DB4  6FD6               	movwf	(?_create_chain+2)& (0+255),b
  7329  002DB6  0E00               	movlw	0
  7330  002DB8  6FD7               	movwf	(?_create_chain+3)& (0+255),b
  7331                           
  7332                           ; BSR set to: 0
  7333  002DBA  0012               	return	
  7334  002DBC                     l11516:
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;tff.c: 298: if (cstat < mcl) return cstat;
  7338  002DBC  0100               	movlb	0	; () banked
  7339  002DBE  51DC               	movf	create_chain@mcl& (0+255),w,b
  7340  002DC0  0100               	movlb	0	; () banked
  7341  002DC2  5DE2               	subwf	create_chain@cstat& (0+255),w,b
  7342  002DC4  0100               	movlb	0	; () banked
  7343  002DC6  51DD               	movf	(create_chain@mcl+1)& (0+255),w,b
  7344  002DC8  0100               	movlb	0	; () banked
  7345  002DCA  59E3               	subwfb	(create_chain@cstat+1)& (0+255),w,b
  7346  002DCC  0100               	movlb	0	; () banked
  7347  002DCE  51DE               	movf	(create_chain@mcl+2)& (0+255),w,b
  7348  002DD0  0100               	movlb	0	; () banked
  7349  002DD2  59E4               	subwfb	(create_chain@cstat+2)& (0+255),w,b
  7350  002DD4  0100               	movlb	0	; () banked
  7351  002DD6  51DF               	movf	(create_chain@mcl+3)& (0+255),w,b
  7352  002DD8  0100               	movlb	0	; () banked
  7353  002DDA  59E5               	subwfb	(create_chain@cstat+3)& (0+255),w,b
  7354  002DDC  B0D8               	btfsc	status,0,c
  7355  002DDE  D009               	goto	l640
  7356                           
  7357                           ; BSR set to: 0
  7358  002DE0  C0E2  F0D4         	movff	create_chain@cstat,?_create_chain
  7359  002DE4  C0E3  F0D5         	movff	create_chain@cstat+1,?_create_chain+1
  7360  002DE8  C0E4  F0D6         	movff	create_chain@cstat+2,?_create_chain+2
  7361  002DEC  C0E5  F0D7         	movff	create_chain@cstat+3,?_create_chain+3
  7362  002DF0  0012               	return	
  7363  002DF2                     l640:
  7364                           
  7365                           ; BSR set to: 0
  7366                           ;tff.c: 299: scl = clust;
  7367  002DF2  C0D4  F0E6         	movff	create_chain@clust,create_chain@scl
  7368  002DF6  C0D5  F0E7         	movff	create_chain@clust+1,create_chain@scl+1
  7369  002DFA  C0D6  F0E8         	movff	create_chain@clust+2,create_chain@scl+2
  7370  002DFE  C0D7  F0E9         	movff	create_chain@clust+3,create_chain@scl+3
  7371  002E02                     l637:
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;tff.c: 300: }
  7375                           ;tff.c: 302: ncl = scl;
  7376  002E02  C0E6  F0EA         	movff	create_chain@scl,create_chain@ncl
  7377  002E06  C0E7  F0EB         	movff	create_chain@scl+1,create_chain@ncl+1
  7378  002E0A  C0E8  F0EC         	movff	create_chain@scl+2,create_chain@ncl+2
  7379  002E0E  C0E9  F0ED         	movff	create_chain@scl+3,create_chain@ncl+3
  7380  002E12                     l11520:
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;tff.c: 304: ncl++;
  7384  002E12  0E01               	movlw	1
  7385  002E14  0100               	movlb	0	; () banked
  7386  002E16  27EA               	addwf	create_chain@ncl& (0+255),f,b
  7387  002E18  0E00               	movlw	0
  7388  002E1A  23EB               	addwfc	(create_chain@ncl+1)& (0+255),f,b
  7389  002E1C  23EC               	addwfc	(create_chain@ncl+2)& (0+255),f,b
  7390  002E1E  23ED               	addwfc	(create_chain@ncl+3)& (0+255),f,b
  7391                           
  7392                           ;tff.c: 305: if (ncl >= mcl) {
  7393  002E20  0100               	movlb	0	; () banked
  7394  002E22  51DC               	movf	create_chain@mcl& (0+255),w,b
  7395  002E24  0100               	movlb	0	; () banked
  7396  002E26  5DEA               	subwf	create_chain@ncl& (0+255),w,b
  7397  002E28  0100               	movlb	0	; () banked
  7398  002E2A  51DD               	movf	(create_chain@mcl+1)& (0+255),w,b
  7399  002E2C  0100               	movlb	0	; () banked
  7400  002E2E  59EB               	subwfb	(create_chain@ncl+1)& (0+255),w,b
  7401  002E30  0100               	movlb	0	; () banked
  7402  002E32  51DE               	movf	(create_chain@mcl+2)& (0+255),w,b
  7403  002E34  0100               	movlb	0	; () banked
  7404  002E36  59EC               	subwfb	(create_chain@ncl+2)& (0+255),w,b
  7405  002E38  0100               	movlb	0	; () banked
  7406  002E3A  51DF               	movf	(create_chain@mcl+3)& (0+255),w,b
  7407  002E3C  0100               	movlb	0	; () banked
  7408  002E3E  59ED               	subwfb	(create_chain@ncl+3)& (0+255),w,b
  7409  002E40  A0D8               	btfss	status,0,c
  7410  002E42  D025               	goto	l11530
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;tff.c: 306: ncl = 2;
  7414  002E44  0E02               	movlw	2
  7415  002E46  0100               	movlb	0	; () banked
  7416  002E48  6FEA               	movwf	create_chain@ncl& (0+255),b
  7417  002E4A  0E00               	movlw	0
  7418  002E4C  6FEB               	movwf	(create_chain@ncl+1)& (0+255),b
  7419  002E4E  0E00               	movlw	0
  7420  002E50  6FEC               	movwf	(create_chain@ncl+2)& (0+255),b
  7421  002E52  0E00               	movlw	0
  7422  002E54  6FED               	movwf	(create_chain@ncl+3)& (0+255),b
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;tff.c: 307: if (ncl > scl) return 0;
  7426  002E56  0100               	movlb	0	; () banked
  7427  002E58  51EA               	movf	create_chain@ncl& (0+255),w,b
  7428  002E5A  0100               	movlb	0	; () banked
  7429  002E5C  5DE6               	subwf	create_chain@scl& (0+255),w,b
  7430  002E5E  0100               	movlb	0	; () banked
  7431  002E60  51EB               	movf	(create_chain@ncl+1)& (0+255),w,b
  7432  002E62  0100               	movlb	0	; () banked
  7433  002E64  59E7               	subwfb	(create_chain@scl+1)& (0+255),w,b
  7434  002E66  0100               	movlb	0	; () banked
  7435  002E68  51EC               	movf	(create_chain@ncl+2)& (0+255),w,b
  7436  002E6A  0100               	movlb	0	; () banked
  7437  002E6C  59E8               	subwfb	(create_chain@scl+2)& (0+255),w,b
  7438  002E6E  0100               	movlb	0	; () banked
  7439  002E70  51ED               	movf	(create_chain@ncl+3)& (0+255),w,b
  7440  002E72  0100               	movlb	0	; () banked
  7441  002E74  59E9               	subwfb	(create_chain@scl+3)& (0+255),w,b
  7442  002E76  B0D8               	btfsc	status,0,c
  7443  002E78  D00A               	goto	l11530
  7444                           
  7445                           ; BSR set to: 0
  7446  002E7A  0E00               	movlw	0
  7447  002E7C  0100               	movlb	0	; () banked
  7448  002E7E  6FD4               	movwf	?_create_chain& (0+255),b
  7449  002E80  0E00               	movlw	0
  7450  002E82  6FD5               	movwf	(?_create_chain+1)& (0+255),b
  7451  002E84  0E00               	movlw	0
  7452  002E86  6FD6               	movwf	(?_create_chain+2)& (0+255),b
  7453  002E88  0E00               	movlw	0
  7454  002E8A  6FD7               	movwf	(?_create_chain+3)& (0+255),b
  7455                           
  7456                           ; BSR set to: 0
  7457  002E8C  0012               	return	
  7458  002E8E                     l11530:
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;tff.c: 308: }
  7462                           ;tff.c: 309: cstat = get_cluster(ncl);
  7463  002E8E  C0EA  F09A         	movff	create_chain@ncl,get_cluster@clust
  7464  002E92  C0EB  F09B         	movff	create_chain@ncl+1,get_cluster@clust+1
  7465  002E96  C0EC  F09C         	movff	create_chain@ncl+2,get_cluster@clust+2
  7466  002E9A  C0ED  F09D         	movff	create_chain@ncl+3,get_cluster@clust+3
  7467  002E9E  ECCC  F009         	call	_get_cluster	;wreg free
  7468  002EA2  C09A  F0E2         	movff	?_get_cluster,create_chain@cstat
  7469  002EA6  C09B  F0E3         	movff	?_get_cluster+1,create_chain@cstat+1
  7470  002EAA  C09C  F0E4         	movff	?_get_cluster+2,create_chain@cstat+2
  7471  002EAE  C09D  F0E5         	movff	?_get_cluster+3,create_chain@cstat+3
  7472                           
  7473                           ;tff.c: 310: if (cstat == 0) break;
  7474  002EB2  0100               	movlb	0	; () banked
  7475  002EB4  51E2               	movf	create_chain@cstat& (0+255),w,b
  7476  002EB6  0100               	movlb	0	; () banked
  7477  002EB8  11E3               	iorwf	(create_chain@cstat+1)& (0+255),w,b
  7478  002EBA  0100               	movlb	0	; () banked
  7479  002EBC  11E4               	iorwf	(create_chain@cstat+2)& (0+255),w,b
  7480  002EBE  0100               	movlb	0	; () banked
  7481  002EC0  11E5               	iorwf	(create_chain@cstat+3)& (0+255),w,b
  7482  002EC2  B4D8               	btfsc	status,2,c
  7483  002EC4  D033               	goto	l11548
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;tff.c: 311: if (cstat == 1) return 1;
  7487                           
  7488                           ; BSR set to: 0
  7489                           
  7490                           ; BSR set to: 0
  7491  002EC6  0100               	movlb	0	; () banked
  7492  002EC8  05E2               	decf	create_chain@cstat& (0+255),w,b
  7493  002ECA  0100               	movlb	0	; () banked
  7494  002ECC  11E3               	iorwf	(create_chain@cstat+1)& (0+255),w,b
  7495  002ECE  0100               	movlb	0	; () banked
  7496  002ED0  11E4               	iorwf	(create_chain@cstat+2)& (0+255),w,b
  7497  002ED2  0100               	movlb	0	; () banked
  7498  002ED4  11E5               	iorwf	(create_chain@cstat+3)& (0+255),w,b
  7499  002ED6  A4D8               	btfss	status,2,c
  7500  002ED8  D00A               	goto	l11542
  7501                           
  7502                           ; BSR set to: 0
  7503  002EDA  0E01               	movlw	1
  7504  002EDC  0100               	movlb	0	; () banked
  7505  002EDE  6FD4               	movwf	?_create_chain& (0+255),b
  7506  002EE0  0E00               	movlw	0
  7507  002EE2  6FD5               	movwf	(?_create_chain+1)& (0+255),b
  7508  002EE4  0E00               	movlw	0
  7509  002EE6  6FD6               	movwf	(?_create_chain+2)& (0+255),b
  7510  002EE8  0E00               	movlw	0
  7511  002EEA  6FD7               	movwf	(?_create_chain+3)& (0+255),b
  7512                           
  7513                           ; BSR set to: 0
  7514  002EEC  0012               	return	
  7515  002EEE                     l11542:
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;tff.c: 312: if (ncl == scl) return 0;
  7519  002EEE  0100               	movlb	0	; () banked
  7520  002EF0  51E6               	movf	create_chain@scl& (0+255),w,b
  7521  002EF2  0100               	movlb	0	; () banked
  7522  002EF4  19EA               	xorwf	create_chain@ncl& (0+255),w,b
  7523  002EF6  E18D               	bnz	l11520
  7524  002EF8  0100               	movlb	0	; () banked
  7525  002EFA  51E7               	movf	(create_chain@scl+1)& (0+255),w,b
  7526  002EFC  0100               	movlb	0	; () banked
  7527  002EFE  19EB               	xorwf	(create_chain@ncl+1)& (0+255),w,b
  7528  002F00  E188               	bnz	l11520
  7529  002F02  0100               	movlb	0	; () banked
  7530  002F04  51E8               	movf	(create_chain@scl+2)& (0+255),w,b
  7531  002F06  0100               	movlb	0	; () banked
  7532  002F08  19EC               	xorwf	(create_chain@ncl+2)& (0+255),w,b
  7533  002F0A  E183               	bnz	l11520
  7534  002F0C  0100               	movlb	0	; () banked
  7535  002F0E  51E9               	movf	(create_chain@scl+3)& (0+255),w,b
  7536  002F10  0100               	movlb	0	; () banked
  7537  002F12  19ED               	xorwf	(create_chain@ncl+3)& (0+255),w,b
  7538  002F14  A4D8               	btfss	status,2,c
  7539  002F16  D77D               	goto	l11520
  7540                           
  7541                           ; BSR set to: 0
  7542  002F18  0E00               	movlw	0
  7543  002F1A  0100               	movlb	0	; () banked
  7544  002F1C  6FD4               	movwf	?_create_chain& (0+255),b
  7545  002F1E  0E00               	movlw	0
  7546  002F20  6FD5               	movwf	(?_create_chain+1)& (0+255),b
  7547  002F22  0E00               	movlw	0
  7548  002F24  6FD6               	movwf	(?_create_chain+2)& (0+255),b
  7549  002F26  0E00               	movlw	0
  7550  002F28  6FD7               	movwf	(?_create_chain+3)& (0+255),b
  7551                           
  7552                           ; BSR set to: 0
  7553  002F2A  0012               	return	
  7554  002F2C                     l11548:
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;tff.c: 315: if (!put_cluster(ncl, (CLUST)0x0FFFFFFF)) return 1;
  7558  002F2C  C0EA  F09A         	movff	create_chain@ncl,put_cluster@clust
  7559  002F30  C0EB  F09B         	movff	create_chain@ncl+1,put_cluster@clust+1
  7560  002F34  C0EC  F09C         	movff	create_chain@ncl+2,put_cluster@clust+2
  7561  002F38  C0ED  F09D         	movff	create_chain@ncl+3,put_cluster@clust+3
  7562  002F3C  0EFF               	movlw	255
  7563  002F3E  0100               	movlb	0	; () banked
  7564  002F40  6F9E               	movwf	put_cluster@val& (0+255),b
  7565  002F42  0EFF               	movlw	255
  7566  002F44  6F9F               	movwf	(put_cluster@val+1)& (0+255),b
  7567  002F46  0EFF               	movlw	255
  7568  002F48  6FA0               	movwf	(put_cluster@val+2)& (0+255),b
  7569  002F4A  0E0F               	movlw	15
  7570  002F4C  6FA1               	movwf	(put_cluster@val+3)& (0+255),b
  7571  002F4E  ECE8  F00C         	call	_put_cluster	;wreg free
  7572  002F52  0900               	iorlw	0
  7573  002F54  A4D8               	btfss	status,2,c
  7574  002F56  D00A               	goto	l11554
  7575  002F58  0E01               	movlw	1
  7576  002F5A  0100               	movlb	0	; () banked
  7577  002F5C  6FD4               	movwf	?_create_chain& (0+255),b
  7578  002F5E  0E00               	movlw	0
  7579  002F60  6FD5               	movwf	(?_create_chain+1)& (0+255),b
  7580  002F62  0E00               	movlw	0
  7581  002F64  6FD6               	movwf	(?_create_chain+2)& (0+255),b
  7582  002F66  0E00               	movlw	0
  7583  002F68  6FD7               	movwf	(?_create_chain+3)& (0+255),b
  7584                           
  7585                           ; BSR set to: 0
  7586  002F6A  0012               	return	
  7587  002F6C                     l11554:
  7588                           
  7589                           ;tff.c: 316: if (clust != 0 && !put_cluster(clust, ncl)) return 1;
  7590  002F6C  0100               	movlb	0	; () banked
  7591  002F6E  51D4               	movf	create_chain@clust& (0+255),w,b
  7592  002F70  0100               	movlb	0	; () banked
  7593  002F72  11D5               	iorwf	(create_chain@clust+1)& (0+255),w,b
  7594  002F74  0100               	movlb	0	; () banked
  7595  002F76  11D6               	iorwf	(create_chain@clust+2)& (0+255),w,b
  7596  002F78  0100               	movlb	0	; () banked
  7597  002F7A  11D7               	iorwf	(create_chain@clust+3)& (0+255),w,b
  7598  002F7C  B4D8               	btfsc	status,2,c
  7599  002F7E  D01F               	goto	l11562
  7600                           
  7601                           ; BSR set to: 0
  7602  002F80  C0D4  F09A         	movff	create_chain@clust,put_cluster@clust
  7603  002F84  C0D5  F09B         	movff	create_chain@clust+1,put_cluster@clust+1
  7604  002F88  C0D6  F09C         	movff	create_chain@clust+2,put_cluster@clust+2
  7605  002F8C  C0D7  F09D         	movff	create_chain@clust+3,put_cluster@clust+3
  7606  002F90  C0EA  F09E         	movff	create_chain@ncl,put_cluster@val
  7607  002F94  C0EB  F09F         	movff	create_chain@ncl+1,put_cluster@val+1
  7608  002F98  C0EC  F0A0         	movff	create_chain@ncl+2,put_cluster@val+2
  7609  002F9C  C0ED  F0A1         	movff	create_chain@ncl+3,put_cluster@val+3
  7610  002FA0  ECE8  F00C         	call	_put_cluster	;wreg free
  7611  002FA4  0900               	iorlw	0
  7612  002FA6  A4D8               	btfss	status,2,c
  7613  002FA8  D00A               	goto	l11562
  7614  002FAA  0E01               	movlw	1
  7615  002FAC  0100               	movlb	0	; () banked
  7616  002FAE  6FD4               	movwf	?_create_chain& (0+255),b
  7617  002FB0  0E00               	movlw	0
  7618  002FB2  6FD5               	movwf	(?_create_chain+1)& (0+255),b
  7619  002FB4  0E00               	movlw	0
  7620  002FB6  6FD6               	movwf	(?_create_chain+2)& (0+255),b
  7621  002FB8  0E00               	movlw	0
  7622  002FBA  6FD7               	movwf	(?_create_chain+3)& (0+255),b
  7623                           
  7624                           ; BSR set to: 0
  7625  002FBC  0012               	return	
  7626  002FBE                     l11562:
  7627                           
  7628                           ;tff.c: 318: fs->last_clust = ncl;
  7629  002FBE  0100               	movlb	0	; () banked
  7630  002FC0  EE20 F01C          	lfsr	2,28
  7631  002FC4  51E0               	movf	create_chain@fs& (0+255),w,b
  7632  002FC6  26D9               	addwf	fsr2l,f,c
  7633  002FC8  51E1               	movf	(create_chain@fs+1)& (0+255),w,b
  7634  002FCA  22DA               	addwfc	fsr2h,f,c
  7635  002FCC  C0EA  FFDE         	movff	create_chain@ncl,postinc2
  7636  002FD0  C0EB  FFDE         	movff	create_chain@ncl+1,postinc2
  7637  002FD4  C0EC  FFDE         	movff	create_chain@ncl+2,postinc2
  7638  002FD8  C0ED  FFDE         	movff	create_chain@ncl+3,postinc2
  7639                           
  7640                           ;tff.c: 319: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
  7641  002FDC  0100               	movlb	0	; () banked
  7642  002FDE  EE20 F020          	lfsr	2,32
  7643  002FE2  51E0               	movf	create_chain@fs& (0+255),w,b
  7644  002FE4  26D9               	addwf	fsr2l,f,c
  7645  002FE6  51E1               	movf	(create_chain@fs+1)& (0+255),w,b
  7646  002FE8  22DA               	addwfc	fsr2h,f,c
  7647  002FEA  28DE               	incf	postinc2,w,c
  7648  002FEC  E107               	bnz	u12780
  7649  002FEE  28DE               	incf	postinc2,w,c
  7650  002FF0  E105               	bnz	u12780
  7651  002FF2  28DE               	incf	postinc2,w,c
  7652  002FF4  E103               	bnz	u12780
  7653  002FF6  28DE               	incf	postinc2,w,c
  7654  002FF8  B4D8               	btfsc	status,2,c
  7655  002FFA  D00C               	goto	l11566
  7656  002FFC                     u12780:
  7657                           
  7658                           ; BSR set to: 0
  7659                           ;tff.c: 320: fs->free_clust--;
  7660  002FFC  0100               	movlb	0	; () banked
  7661  002FFE  EE20 F020          	lfsr	2,32
  7662  003002  51E0               	movf	create_chain@fs& (0+255),w,b
  7663  003004  26D9               	addwf	fsr2l,f,c
  7664  003006  51E1               	movf	(create_chain@fs+1)& (0+255),w,b
  7665  003008  22DA               	addwfc	fsr2h,f,c
  7666  00300A  06DE               	decf	postinc2,f,c
  7667  00300C  0E00               	movlw	0
  7668  00300E  5ADE               	subwfb	postinc2,f,c
  7669  003010  5ADE               	subwfb	postinc2,f,c
  7670  003012  5ADE               	subwfb	postinc2,f,c
  7671  003014                     l11566:
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;tff.c: 324: }
  7675                           ;tff.c: 326: return ncl;
  7676  003014  C0EA  F0D4         	movff	create_chain@ncl,?_create_chain
  7677  003018  C0EB  F0D5         	movff	create_chain@ncl+1,?_create_chain+1
  7678  00301C  C0EC  F0D6         	movff	create_chain@ncl+2,?_create_chain+2
  7679  003020  C0ED  F0D7         	movff	create_chain@ncl+3,?_create_chain+3
  7680  003024  0012               	return	
  7681  003026                     __end_of_create_chain:
  7682                           	opt stack 0
  7683                           tosu	equ	0xFFF
  7684                           tosh	equ	0xFFE
  7685                           tosl	equ	0xFFD
  7686                           pclath	equ	0xFFA
  7687                           tblptru	equ	0xFF8
  7688                           tblptrh	equ	0xFF7
  7689                           tblptrl	equ	0xFF6
  7690                           tablat	equ	0xFF5
  7691                           prodh	equ	0xFF4
  7692                           prodl	equ	0xFF3
  7693                           intcon	equ	0xFF2
  7694                           intcon2	equ	0xFF1
  7695                           intcon3	equ	0xFF0
  7696                           postinc0	equ	0xFEE
  7697                           wreg	equ	0xFE8
  7698                           indf1	equ	0xFE7
  7699                           postinc1	equ	0xFE6
  7700                           postdec1	equ	0xFE5
  7701                           fsr1h	equ	0xFE2
  7702                           fsr1l	equ	0xFE1
  7703                           indf2	equ	0xFDF
  7704                           postinc2	equ	0xFDE
  7705                           postdec2	equ	0xFDD
  7706                           fsr2h	equ	0xFDA
  7707                           fsr2l	equ	0xFD9
  7708                           status	equ	0xFD8
  7709                           
  7710 ;; *************** function _remove_chain *****************
  7711 ;; Defined at:
  7712 ;;		line 249 in file "bibliotecas/tff.c"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;  clust           4  116[BANK0 ] unsigned long 
  7715 ;; Auto vars:     Size  Location     Type
  7716 ;;  nxt             4  124[BANK0 ] unsigned long 
  7717 ;;  fs              2  128[BANK0 ] PTR struct _FATFS
  7718 ;;		 -> fs(552), NULL(0), 
  7719 ;; Return value:  Size  Location     Type
  7720 ;;                  1    wreg      enum E105
  7721 ;; Registers used:
  7722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7723 ;; Tracked objects:
  7724 ;;		On entry : 0/0
  7725 ;;		On exit  : 0/0
  7726 ;;		Unchanged: 0/0
  7727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7728 ;;      Params:         0       4       0       0       0       0       0       0       0
  7729 ;;      Locals:         0       6       0       0       0       0       0       0       0
  7730 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7731 ;;      Totals:         0      14       0       0       0       0       0       0       0
  7732 ;;Total ram usage:       14 bytes
  7733 ;; Hardware stack levels used:    1
  7734 ;; Hardware stack levels required when called:   10
  7735 ;; This function calls:
  7736 ;;		_get_cluster
  7737 ;;		_put_cluster
  7738 ;; This function is called by:
  7739 ;;		_f_open
  7740 ;;		_f_truncate
  7741 ;;		_f_unlink
  7742 ;; This function uses a non-reentrant model
  7743 ;;
  7744                           
  7745                           	psect	text22
  7746  00443C                     __ptext22:
  7747                           	opt stack 0
  7748  00443C                     _remove_chain:
  7749                           	opt stack 17
  7750                           
  7751                           ;tff.c: 253: CLUST nxt;
  7752                           ;tff.c: 254: FATFS *fs = FatFs;
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;incstack = 0
  7756  00443C  C0FC  F0E0         	movff	_FatFs,remove_chain@fs
  7757  004440  C0FD  F0E1         	movff	_FatFs+1,remove_chain@fs+1
  7758                           
  7759                           ;tff.c: 257: while (clust >= 2 && clust < fs->max_clust) {
  7760  004444  D05A               	goto	l11902
  7761  004446                     l11882:
  7762                           
  7763                           ;tff.c: 258: nxt = get_cluster(clust);
  7764  004446  C0D4  F09A         	movff	remove_chain@clust,get_cluster@clust
  7765  00444A  C0D5  F09B         	movff	remove_chain@clust+1,get_cluster@clust+1
  7766  00444E  C0D6  F09C         	movff	remove_chain@clust+2,get_cluster@clust+2
  7767  004452  C0D7  F09D         	movff	remove_chain@clust+3,get_cluster@clust+3
  7768  004456  ECCC  F009         	call	_get_cluster	;wreg free
  7769  00445A  C09A  F0DC         	movff	?_get_cluster,remove_chain@nxt
  7770  00445E  C09B  F0DD         	movff	?_get_cluster+1,remove_chain@nxt+1
  7771  004462  C09C  F0DE         	movff	?_get_cluster+2,remove_chain@nxt+2
  7772  004466  C09D  F0DF         	movff	?_get_cluster+3,remove_chain@nxt+3
  7773                           
  7774                           ;tff.c: 259: if (nxt == 1) return FALSE;
  7775  00446A  0100               	movlb	0	; () banked
  7776  00446C  05DC               	decf	remove_chain@nxt& (0+255),w,b
  7777  00446E  0100               	movlb	0	; () banked
  7778  004470  11DD               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  7779  004472  0100               	movlb	0	; () banked
  7780  004474  11DE               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  7781  004476  0100               	movlb	0	; () banked
  7782  004478  11DF               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  7783  00447A  A4D8               	btfss	status,2,c
  7784  00447C  D002               	goto	l11890
  7785                           
  7786                           ; BSR set to: 0
  7787  00447E  0E00               	movlw	0
  7788                           
  7789                           ; BSR set to: 0
  7790  004480  0012               	return	
  7791  004482                     l11890:
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;tff.c: 260: if (!put_cluster(clust, 0)) return FALSE;
  7795  004482  C0D4  F09A         	movff	remove_chain@clust,put_cluster@clust
  7796  004486  C0D5  F09B         	movff	remove_chain@clust+1,put_cluster@clust+1
  7797  00448A  C0D6  F09C         	movff	remove_chain@clust+2,put_cluster@clust+2
  7798  00448E  C0D7  F09D         	movff	remove_chain@clust+3,put_cluster@clust+3
  7799  004492  0E00               	movlw	0
  7800  004494  0100               	movlb	0	; () banked
  7801  004496  6F9E               	movwf	put_cluster@val& (0+255),b
  7802  004498  0E00               	movlw	0
  7803  00449A  6F9F               	movwf	(put_cluster@val+1)& (0+255),b
  7804  00449C  0E00               	movlw	0
  7805  00449E  6FA0               	movwf	(put_cluster@val+2)& (0+255),b
  7806  0044A0  0E00               	movlw	0
  7807  0044A2  6FA1               	movwf	(put_cluster@val+3)& (0+255),b
  7808  0044A4  ECE8  F00C         	call	_put_cluster	;wreg free
  7809  0044A8  0900               	iorlw	0
  7810  0044AA  A4D8               	btfss	status,2,c
  7811  0044AC  D002               	goto	l11896
  7812  0044AE  0E00               	movlw	0
  7813  0044B0  0012               	return	
  7814  0044B2                     l11896:
  7815                           
  7816                           ;tff.c: 261: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
  7817  0044B2  0100               	movlb	0	; () banked
  7818  0044B4  EE20 F020          	lfsr	2,32
  7819  0044B8  51E0               	movf	remove_chain@fs& (0+255),w,b
  7820  0044BA  26D9               	addwf	fsr2l,f,c
  7821  0044BC  51E1               	movf	(remove_chain@fs+1)& (0+255),w,b
  7822  0044BE  22DA               	addwfc	fsr2h,f,c
  7823  0044C0  28DE               	incf	postinc2,w,c
  7824  0044C2  E107               	bnz	u13430
  7825  0044C4  28DE               	incf	postinc2,w,c
  7826  0044C6  E105               	bnz	u13430
  7827  0044C8  28DE               	incf	postinc2,w,c
  7828  0044CA  E103               	bnz	u13430
  7829  0044CC  28DE               	incf	postinc2,w,c
  7830  0044CE  B4D8               	btfsc	status,2,c
  7831  0044D0  D00C               	goto	l11900
  7832  0044D2                     u13430:
  7833                           
  7834                           ; BSR set to: 0
  7835                           ;tff.c: 262: fs->free_clust++;
  7836  0044D2  0100               	movlb	0	; () banked
  7837  0044D4  EE20 F020          	lfsr	2,32
  7838  0044D8  51E0               	movf	remove_chain@fs& (0+255),w,b
  7839  0044DA  26D9               	addwf	fsr2l,f,c
  7840  0044DC  51E1               	movf	(remove_chain@fs+1)& (0+255),w,b
  7841  0044DE  22DA               	addwfc	fsr2h,f,c
  7842  0044E0  2ADE               	incf	postinc2,f,c
  7843  0044E2  0E00               	movlw	0
  7844  0044E4  22DE               	addwfc	postinc2,f,c
  7845  0044E6  22DE               	addwfc	postinc2,f,c
  7846  0044E8  22DE               	addwfc	postinc2,f,c
  7847  0044EA                     l11900:
  7848                           
  7849                           ; BSR set to: 0
  7850                           ;tff.c: 266: }
  7851                           ;tff.c: 267: clust = nxt;
  7852  0044EA  C0DC  F0D4         	movff	remove_chain@nxt,remove_chain@clust
  7853  0044EE  C0DD  F0D5         	movff	remove_chain@nxt+1,remove_chain@clust+1
  7854  0044F2  C0DE  F0D6         	movff	remove_chain@nxt+2,remove_chain@clust+2
  7855  0044F6  C0DF  F0D7         	movff	remove_chain@nxt+3,remove_chain@clust+3
  7856  0044FA                     l11902:
  7857  0044FA  0100               	movlb	0	; () banked
  7858  0044FC  51D7               	movf	(remove_chain@clust+3)& (0+255),w,b
  7859  0044FE  0100               	movlb	0	; () banked
  7860  004500  11D6               	iorwf	(remove_chain@clust+2)& (0+255),w,b
  7861  004502  0100               	movlb	0	; () banked
  7862  004504  11D5               	iorwf	(remove_chain@clust+1)& (0+255),w,b
  7863  004506  E105               	bnz	u13440
  7864  004508  0E02               	movlw	2
  7865  00450A  0100               	movlb	0	; () banked
  7866  00450C  5DD4               	subwf	remove_chain@clust& (0+255),w,b
  7867  00450E  A0D8               	btfss	status,0,c
  7868  004510  D015               	goto	l11906
  7869  004512                     u13440:
  7870                           
  7871                           ; BSR set to: 0
  7872  004512  0100               	movlb	0	; () banked
  7873  004514  EE20 F018          	lfsr	2,24
  7874  004518  51E0               	movf	remove_chain@fs& (0+255),w,b
  7875  00451A  26D9               	addwf	fsr2l,f,c
  7876  00451C  51E1               	movf	(remove_chain@fs+1)& (0+255),w,b
  7877  00451E  22DA               	addwfc	fsr2h,f,c
  7878  004520  50DE               	movf	postinc2,w,c
  7879  004522  0100               	movlb	0	; () banked
  7880  004524  5DD4               	subwf	remove_chain@clust& (0+255),w,b
  7881  004526  50DE               	movf	postinc2,w,c
  7882  004528  0100               	movlb	0	; () banked
  7883  00452A  59D5               	subwfb	(remove_chain@clust+1)& (0+255),w,b
  7884  00452C  50DE               	movf	postinc2,w,c
  7885  00452E  0100               	movlb	0	; () banked
  7886  004530  59D6               	subwfb	(remove_chain@clust+2)& (0+255),w,b
  7887  004532  50DE               	movf	postinc2,w,c
  7888  004534  0100               	movlb	0	; () banked
  7889  004536  59D7               	subwfb	(remove_chain@clust+3)& (0+255),w,b
  7890  004538  A0D8               	btfss	status,0,c
  7891  00453A  D785               	goto	l11882
  7892  00453C                     l11906:
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;tff.c: 268: }
  7896                           ;tff.c: 269: return TRUE;
  7897  00453C  0E01               	movlw	1
  7898  00453E  0012               	return	
  7899  004540                     __end_of_remove_chain:
  7900                           	opt stack 0
  7901                           tosu	equ	0xFFF
  7902                           tosh	equ	0xFFE
  7903                           tosl	equ	0xFFD
  7904                           pclath	equ	0xFFA
  7905                           tblptru	equ	0xFF8
  7906                           tblptrh	equ	0xFF7
  7907                           tblptrl	equ	0xFF6
  7908                           tablat	equ	0xFF5
  7909                           prodh	equ	0xFF4
  7910                           prodl	equ	0xFF3
  7911                           intcon	equ	0xFF2
  7912                           intcon2	equ	0xFF1
  7913                           intcon3	equ	0xFF0
  7914                           postinc0	equ	0xFEE
  7915                           wreg	equ	0xFE8
  7916                           indf1	equ	0xFE7
  7917                           postinc1	equ	0xFE6
  7918                           postdec1	equ	0xFE5
  7919                           fsr1h	equ	0xFE2
  7920                           fsr1l	equ	0xFE1
  7921                           indf2	equ	0xFDF
  7922                           postinc2	equ	0xFDE
  7923                           postdec2	equ	0xFDD
  7924                           fsr2h	equ	0xFDA
  7925                           fsr2l	equ	0xFD9
  7926                           status	equ	0xFD8
  7927                           
  7928 ;; *************** function _put_cluster *****************
  7929 ;; Defined at:
  7930 ;;		line 197 in file "bibliotecas/tff.c"
  7931 ;; Parameters:    Size  Location     Type
  7932 ;;  clust           4   58[BANK0 ] unsigned long 
  7933 ;;  val             4   62[BANK0 ] unsigned long 
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;  fatsect         4   75[BANK0 ] unsigned long 
  7936 ;;  fs              2   83[BANK0 ] PTR struct _FATFS
  7937 ;;		 -> fs(552), NULL(0), 
  7938 ;;  p               2   81[BANK0 ] PTR unsigned char 
  7939 ;;		 -> fs.win(512), fs(552), NULL(0), 
  7940 ;;  bc              2   79[BANK0 ] unsigned short 
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  1    wreg      enum E105
  7943 ;; Registers used:
  7944 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7950 ;;      Params:         0       8       0       0       0       0       0       0       0
  7951 ;;      Locals:         0      14       0       0       0       0       0       0       0
  7952 ;;      Temps:          0       5       0       0       0       0       0       0       0
  7953 ;;      Totals:         0      27       0       0       0       0       0       0       0
  7954 ;;Total ram usage:       27 bytes
  7955 ;; Hardware stack levels used:    1
  7956 ;; Hardware stack levels required when called:    9
  7957 ;; This function calls:
  7958 ;;		___wmul
  7959 ;;		_move_window
  7960 ;; This function is called by:
  7961 ;;		_remove_chain
  7962 ;;		_create_chain
  7963 ;;		_f_truncate
  7964 ;; This function uses a non-reentrant model
  7965 ;;
  7966                           
  7967                           	psect	text23
  7968  0019D0                     __ptext23:
  7969                           	opt stack 0
  7970  0019D0                     _put_cluster:
  7971                           	opt stack 16
  7972                           
  7973                           ;tff.c: 202: WORD bc;
  7974                           ;tff.c: 203: BYTE *p;
  7975                           ;tff.c: 204: DWORD fatsect;
  7976                           ;tff.c: 205: FATFS *fs = FatFs;
  7977                           
  7978                           ;incstack = 0
  7979  0019D0  C0FC  F0B3         	movff	_FatFs,put_cluster@fs
  7980  0019D4  C0FD  F0B4         	movff	_FatFs+1,put_cluster@fs+1
  7981                           
  7982                           ;tff.c: 208: fatsect = fs->fatbase;
  7983  0019D8  0100               	movlb	0	; () banked
  7984  0019DA  EE20 F008          	lfsr	2,8
  7985  0019DE  51B3               	movf	put_cluster@fs& (0+255),w,b
  7986  0019E0  26D9               	addwf	fsr2l,f,c
  7987  0019E2  51B4               	movf	(put_cluster@fs+1)& (0+255),w,b
  7988  0019E4  22DA               	addwfc	fsr2h,f,c
  7989  0019E6  CFDE F0AB          	movff	postinc2,put_cluster@fatsect
  7990  0019EA  CFDE F0AC          	movff	postinc2,put_cluster@fatsect+1
  7991  0019EE  CFDE F0AD          	movff	postinc2,put_cluster@fatsect+2
  7992  0019F2  CFDE F0AE          	movff	postinc2,put_cluster@fatsect+3
  7993                           
  7994                           ;tff.c: 209: switch (fs->fs_type) {
  7995  0019F6  D28E               	goto	l11412
  7996  0019F8                     l11352:
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;tff.c: 211: bc = (WORD)clust * 3 / 2;
  8000  0019F8  C09A  F016         	movff	put_cluster@clust,___wmul@multiplier
  8001  0019FC  C09B  F017         	movff	put_cluster@clust+1,___wmul@multiplier+1
  8002  001A00  0E00               	movlw	0
  8003  001A02  6E19               	movwf	___wmul@multiplicand+1,c
  8004  001A04  0E03               	movlw	3
  8005  001A06  6E18               	movwf	___wmul@multiplicand,c
  8006  001A08  ECEA  F029         	call	___wmul	;wreg free
  8007  001A0C  90D8               	bcf	status,0,c
  8008  001A0E  3017               	rrcf	?___wmul+1,w,c
  8009  001A10  0100               	movlb	0	; () banked
  8010  001A12  6FA2               	movwf	??_put_cluster& (0+255),b
  8011  001A14  3016               	rrcf	?___wmul,w,c
  8012  001A16  0100               	movlb	0	; () banked
  8013  001A18  6FAF               	movwf	put_cluster@bc& (0+255),b
  8014  001A1A  C0A2  F0B0         	movff	??_put_cluster,put_cluster@bc+1
  8015                           
  8016                           ; BSR set to: 0
  8017                           ;tff.c: 212: if (!move_window(fatsect + bc / 512U)) return FALSE;
  8018  001A1E  C0AF  F0A2         	movff	put_cluster@bc,??_put_cluster
  8019  001A22  C0B0  F0A3         	movff	put_cluster@bc+1,??_put_cluster+1
  8020  001A26  0E09               	movlw	9
  8021  001A28  0100               	movlb	0	; () banked
  8022  001A2A  6FA4               	movwf	(??_put_cluster+2)& (0+255),b
  8023  001A2C                     u12485:
  8024  001A2C  0100               	movlb	0	; () banked
  8025  001A2E  90D8               	bcf	status,0,c
  8026  001A30  33A3               	rrcf	(??_put_cluster+1)& (0+255),f,b
  8027  001A32  33A2               	rrcf	??_put_cluster& (0+255),f,b
  8028  001A34  0100               	movlb	0	; () banked
  8029  001A36  2FA4               	decfsz	(??_put_cluster+2)& (0+255),f,b
  8030  001A38  D7F9               	goto	u12485
  8031  001A3A  0100               	movlb	0	; () banked
  8032  001A3C  51A2               	movf	??_put_cluster& (0+255),w,b
  8033  001A3E  0100               	movlb	0	; () banked
  8034  001A40  25AB               	addwf	put_cluster@fatsect& (0+255),w,b
  8035  001A42  0100               	movlb	0	; () banked
  8036  001A44  6F83               	movwf	move_window@sector& (0+255),b
  8037  001A46  0100               	movlb	0	; () banked
  8038  001A48  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8039  001A4A  0100               	movlb	0	; () banked
  8040  001A4C  21AC               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
  8041  001A4E  0100               	movlb	0	; () banked
  8042  001A50  6F84               	movwf	(move_window@sector+1)& (0+255),b
  8043  001A52  0E00               	movlw	0
  8044  001A54  0100               	movlb	0	; () banked
  8045  001A56  21AD               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
  8046  001A58  0100               	movlb	0	; () banked
  8047  001A5A  6F85               	movwf	(move_window@sector+2)& (0+255),b
  8048  001A5C  0E00               	movlw	0
  8049  001A5E  0100               	movlb	0	; () banked
  8050  001A60  21AE               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
  8051  001A62  0100               	movlb	0	; () banked
  8052  001A64  6F86               	movwf	(move_window@sector+3)& (0+255),b
  8053  001A66  ECB4  F01C         	call	_move_window	;wreg free
  8054  001A6A  0900               	iorlw	0
  8055  001A6C  A4D8               	btfss	status,2,c
  8056  001A6E  D002               	goto	l11360
  8057  001A70  0E00               	movlw	0
  8058  001A72  0012               	return	
  8059  001A74                     l11360:
  8060                           
  8061                           ;tff.c: 213: p = &fs->win[bc % 512U];
  8062  001A74  0EFF               	movlw	255
  8063  001A76  0100               	movlb	0	; () banked
  8064  001A78  6FA2               	movwf	??_put_cluster& (0+255),b
  8065  001A7A  0E01               	movlw	1
  8066  001A7C  0100               	movlb	0	; () banked
  8067  001A7E  6FA3               	movwf	(??_put_cluster+1)& (0+255),b
  8068  001A80  C0AF  F0A4         	movff	put_cluster@bc,??_put_cluster+2
  8069  001A84  C0B0  F0A5         	movff	put_cluster@bc+1,??_put_cluster+3
  8070  001A88  0100               	movlb	0	; () banked
  8071  001A8A  51A2               	movf	??_put_cluster& (0+255),w,b
  8072  001A8C  0100               	movlb	0	; () banked
  8073  001A8E  17A4               	andwf	(??_put_cluster+2)& (0+255),f,b
  8074  001A90  0100               	movlb	0	; () banked
  8075  001A92  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8076  001A94  0100               	movlb	0	; () banked
  8077  001A96  17A5               	andwf	(??_put_cluster+3)& (0+255),f,b
  8078  001A98  0E28               	movlw	40
  8079  001A9A  0100               	movlb	0	; () banked
  8080  001A9C  27A4               	addwf	(??_put_cluster+2)& (0+255),f,b
  8081  001A9E  0E00               	movlw	0
  8082  001AA0  23A5               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8083  001AA2  0100               	movlb	0	; () banked
  8084  001AA4  51A4               	movf	(??_put_cluster+2)& (0+255),w,b
  8085  001AA6  0100               	movlb	0	; () banked
  8086  001AA8  25B3               	addwf	put_cluster@fs& (0+255),w,b
  8087  001AAA  0100               	movlb	0	; () banked
  8088  001AAC  6FB1               	movwf	put_cluster@p& (0+255),b
  8089  001AAE  0100               	movlb	0	; () banked
  8090  001AB0  51A5               	movf	(??_put_cluster+3)& (0+255),w,b
  8091  001AB2  0100               	movlb	0	; () banked
  8092  001AB4  21B4               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8093  001AB6  0100               	movlb	0	; () banked
  8094  001AB8  6FB2               	movwf	(put_cluster@p+1)& (0+255),b
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;tff.c: 214: *p = (clust & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
  8098  001ABA  0100               	movlb	0	; () banked
  8099  001ABC  B19A               	btfsc	put_cluster@clust& (0+255),0,b
  8100  001ABE  D005               	goto	l11366
  8101                           
  8102                           ; BSR set to: 0
  8103  001AC0  C09E  F0A7         	movff	put_cluster@val,_put_cluster$1091
  8104  001AC4  0100               	movlb	0	; () banked
  8105  001AC6  6BA8               	clrf	(_put_cluster$1091+1)& (0+255),b
  8106  001AC8  D024               	goto	l11368
  8107  001ACA                     l11366:
  8108                           
  8109                           ; BSR set to: 0
  8110  001ACA  0100               	movlb	0	; () banked
  8111  001ACC  519E               	movf	put_cluster@val& (0+255),w,b
  8112  001ACE  0100               	movlb	0	; () banked
  8113  001AD0  6FA2               	movwf	??_put_cluster& (0+255),b
  8114  001AD2  6BA3               	clrf	(??_put_cluster+1)& (0+255),b
  8115  001AD4  0100               	movlb	0	; () banked
  8116  001AD6  3BA2               	swapf	??_put_cluster& (0+255),f,b
  8117  001AD8  3BA3               	swapf	(??_put_cluster+1)& (0+255),f,b
  8118  001ADA  0EF0               	movlw	240
  8119  001ADC  17A3               	andwf	(??_put_cluster+1)& (0+255),f,b
  8120  001ADE  51A2               	movf	??_put_cluster& (0+255),w,b
  8121  001AE0  0B0F               	andlw	15
  8122  001AE2  13A3               	iorwf	(??_put_cluster+1)& (0+255),f,b
  8123  001AE4  0EF0               	movlw	240
  8124  001AE6  17A2               	andwf	??_put_cluster& (0+255),f,b
  8125  001AE8  C0B1  FFD9         	movff	put_cluster@p,fsr2l
  8126  001AEC  C0B2  FFDA         	movff	put_cluster@p+1,fsr2h
  8127  001AF0  50DF               	movf	indf2,w,c
  8128  001AF2  0B0F               	andlw	15
  8129  001AF4  0100               	movlb	0	; () banked
  8130  001AF6  6FA4               	movwf	(??_put_cluster+2)& (0+255),b
  8131  001AF8  6BA5               	clrf	(??_put_cluster+3)& (0+255),b
  8132  001AFA  0100               	movlb	0	; () banked
  8133  001AFC  51A2               	movf	??_put_cluster& (0+255),w,b
  8134  001AFE  0100               	movlb	0	; () banked
  8135  001B00  11A4               	iorwf	(??_put_cluster+2)& (0+255),w,b
  8136  001B02  0100               	movlb	0	; () banked
  8137  001B04  6FA7               	movwf	_put_cluster$1091& (0+255),b
  8138  001B06  0100               	movlb	0	; () banked
  8139  001B08  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8140  001B0A  0100               	movlb	0	; () banked
  8141  001B0C  11A5               	iorwf	(??_put_cluster+3)& (0+255),w,b
  8142  001B0E  0100               	movlb	0	; () banked
  8143  001B10  6FA8               	movwf	(_put_cluster$1091+1)& (0+255),b
  8144  001B12                     l11368:
  8145                           
  8146                           ; BSR set to: 0
  8147  001B12  C0B1  FFD9         	movff	put_cluster@p,fsr2l
  8148  001B16  C0B2  FFDA         	movff	put_cluster@p+1,fsr2h
  8149  001B1A  C0A7  FFDF         	movff	_put_cluster$1091,indf2
  8150                           
  8151                           ; BSR set to: 0
  8152                           ;tff.c: 215: bc++;
  8153  001B1E  0100               	movlb	0	; () banked
  8154  001B20  4BAF               	infsnz	put_cluster@bc& (0+255),f,b
  8155  001B22  2BB0               	incf	(put_cluster@bc+1)& (0+255),f,b
  8156                           
  8157                           ; BSR set to: 0
  8158                           ;tff.c: 216: fs->winflag = 1;
  8159  001B24  0100               	movlb	0	; () banked
  8160  001B26  EE20 F027          	lfsr	2,39
  8161  001B2A  51B3               	movf	put_cluster@fs& (0+255),w,b
  8162  001B2C  26D9               	addwf	fsr2l,f,c
  8163  001B2E  51B4               	movf	(put_cluster@fs+1)& (0+255),w,b
  8164  001B30  22DA               	addwfc	fsr2h,f,c
  8165  001B32  0E01               	movlw	1
  8166  001B34  6EDF               	movwf	indf2,c
  8167                           
  8168                           ; BSR set to: 0
  8169                           ;tff.c: 217: if (!move_window(fatsect + bc / 512U)) return FALSE;
  8170  001B36  C0AF  F0A2         	movff	put_cluster@bc,??_put_cluster
  8171  001B3A  C0B0  F0A3         	movff	put_cluster@bc+1,??_put_cluster+1
  8172  001B3E  0E09               	movlw	9
  8173  001B40  0100               	movlb	0	; () banked
  8174  001B42  6FA4               	movwf	(??_put_cluster+2)& (0+255),b
  8175  001B44                     u12515:
  8176  001B44  0100               	movlb	0	; () banked
  8177  001B46  90D8               	bcf	status,0,c
  8178  001B48  33A3               	rrcf	(??_put_cluster+1)& (0+255),f,b
  8179  001B4A  33A2               	rrcf	??_put_cluster& (0+255),f,b
  8180  001B4C  0100               	movlb	0	; () banked
  8181  001B4E  2FA4               	decfsz	(??_put_cluster+2)& (0+255),f,b
  8182  001B50  D7F9               	goto	u12515
  8183  001B52  0100               	movlb	0	; () banked
  8184  001B54  51A2               	movf	??_put_cluster& (0+255),w,b
  8185  001B56  0100               	movlb	0	; () banked
  8186  001B58  25AB               	addwf	put_cluster@fatsect& (0+255),w,b
  8187  001B5A  0100               	movlb	0	; () banked
  8188  001B5C  6F83               	movwf	move_window@sector& (0+255),b
  8189  001B5E  0100               	movlb	0	; () banked
  8190  001B60  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8191  001B62  0100               	movlb	0	; () banked
  8192  001B64  21AC               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
  8193  001B66  0100               	movlb	0	; () banked
  8194  001B68  6F84               	movwf	(move_window@sector+1)& (0+255),b
  8195  001B6A  0E00               	movlw	0
  8196  001B6C  0100               	movlb	0	; () banked
  8197  001B6E  21AD               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
  8198  001B70  0100               	movlb	0	; () banked
  8199  001B72  6F85               	movwf	(move_window@sector+2)& (0+255),b
  8200  001B74  0E00               	movlw	0
  8201  001B76  0100               	movlb	0	; () banked
  8202  001B78  21AE               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
  8203  001B7A  0100               	movlb	0	; () banked
  8204  001B7C  6F86               	movwf	(move_window@sector+3)& (0+255),b
  8205  001B7E  ECB4  F01C         	call	_move_window	;wreg free
  8206  001B82  0900               	iorlw	0
  8207  001B84  A4D8               	btfss	status,2,c
  8208  001B86  D002               	goto	l11380
  8209  001B88  0E00               	movlw	0
  8210  001B8A  0012               	return	
  8211  001B8C                     l11380:
  8212                           
  8213                           ;tff.c: 218: p = &fs->win[bc % 512U];
  8214  001B8C  0EFF               	movlw	255
  8215  001B8E  0100               	movlb	0	; () banked
  8216  001B90  6FA2               	movwf	??_put_cluster& (0+255),b
  8217  001B92  0E01               	movlw	1
  8218  001B94  0100               	movlb	0	; () banked
  8219  001B96  6FA3               	movwf	(??_put_cluster+1)& (0+255),b
  8220  001B98  C0AF  F0A4         	movff	put_cluster@bc,??_put_cluster+2
  8221  001B9C  C0B0  F0A5         	movff	put_cluster@bc+1,??_put_cluster+3
  8222  001BA0  0100               	movlb	0	; () banked
  8223  001BA2  51A2               	movf	??_put_cluster& (0+255),w,b
  8224  001BA4  0100               	movlb	0	; () banked
  8225  001BA6  17A4               	andwf	(??_put_cluster+2)& (0+255),f,b
  8226  001BA8  0100               	movlb	0	; () banked
  8227  001BAA  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8228  001BAC  0100               	movlb	0	; () banked
  8229  001BAE  17A5               	andwf	(??_put_cluster+3)& (0+255),f,b
  8230  001BB0  0E28               	movlw	40
  8231  001BB2  0100               	movlb	0	; () banked
  8232  001BB4  27A4               	addwf	(??_put_cluster+2)& (0+255),f,b
  8233  001BB6  0E00               	movlw	0
  8234  001BB8  23A5               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8235  001BBA  0100               	movlb	0	; () banked
  8236  001BBC  51A4               	movf	(??_put_cluster+2)& (0+255),w,b
  8237  001BBE  0100               	movlb	0	; () banked
  8238  001BC0  25B3               	addwf	put_cluster@fs& (0+255),w,b
  8239  001BC2  0100               	movlb	0	; () banked
  8240  001BC4  6FB1               	movwf	put_cluster@p& (0+255),b
  8241  001BC6  0100               	movlb	0	; () banked
  8242  001BC8  51A5               	movf	(??_put_cluster+3)& (0+255),w,b
  8243  001BCA  0100               	movlb	0	; () banked
  8244  001BCC  21B4               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8245  001BCE  0100               	movlb	0	; () banked
  8246  001BD0  6FB2               	movwf	(put_cluster@p+1)& (0+255),b
  8247                           
  8248                           ; BSR set to: 0
  8249                           ;tff.c: 219: *p = (clust & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x
      +                          0F));
  8250  001BD2  0100               	movlb	0	; () banked
  8251  001BD4  B19A               	btfsc	put_cluster@clust& (0+255),0,b
  8252  001BD6  D020               	goto	l11386
  8253                           
  8254                           ; BSR set to: 0
  8255  001BD8  C09E  F0A2         	movff	put_cluster@val,??_put_cluster
  8256  001BDC  C09F  F0A3         	movff	put_cluster@val+1,??_put_cluster+1
  8257  001BE0  C0A0  F0A4         	movff	put_cluster@val+2,??_put_cluster+2
  8258  001BE4  C0A1  F0A5         	movff	put_cluster@val+3,??_put_cluster+3
  8259  001BE8  C0A3  F0A2         	movff	??_put_cluster+1,??_put_cluster
  8260  001BEC  C0A4  F0A3         	movff	??_put_cluster+2,??_put_cluster+1
  8261  001BF0  C0A5  F0A4         	movff	??_put_cluster+3,??_put_cluster+2
  8262  001BF4  0100               	movlb	0	; () banked
  8263  001BF6  6BA5               	clrf	(??_put_cluster+3)& (0+255),b
  8264  001BF8  0E0F               	movlw	15
  8265  001BFA  0100               	movlb	0	; () banked
  8266  001BFC  17A2               	andwf	??_put_cluster& (0+255),f,b
  8267  001BFE  C0B1  FFD9         	movff	put_cluster@p,fsr2l
  8268  001C02  C0B2  FFDA         	movff	put_cluster@p+1,fsr2h
  8269  001C06  50DF               	movf	indf2,w,c
  8270  001C08  0BF0               	andlw	240
  8271  001C0A  0100               	movlb	0	; () banked
  8272  001C0C  11A2               	iorwf	??_put_cluster& (0+255),w,b
  8273  001C0E  0100               	movlb	0	; () banked
  8274  001C10  6FA6               	movwf	(??_put_cluster+4)& (0+255),b
  8275  001C12  0100               	movlb	0	; () banked
  8276  001C14  51A6               	movf	(??_put_cluster+4)& (0+255),w,b
  8277  001C16  D014               	goto	L4
  8278  001C18                     l11386:
  8279                           
  8280                           ; BSR set to: 0
  8281  001C18  C09E  F0A2         	movff	put_cluster@val,??_put_cluster
  8282  001C1C  C09F  F0A3         	movff	put_cluster@val+1,??_put_cluster+1
  8283  001C20  C0A0  F0A4         	movff	put_cluster@val+2,??_put_cluster+2
  8284  001C24  C0A1  F0A5         	movff	put_cluster@val+3,??_put_cluster+3
  8285  001C28  0E05               	movlw	5
  8286  001C2A  D006               	goto	u12540
  8287  001C2C                     u12545:
  8288  001C2C  0100               	movlb	0	; () banked
  8289  001C2E  90D8               	bcf	status,0,c
  8290  001C30  33A5               	rrcf	(??_put_cluster+3)& (0+255),f,b
  8291  001C32  33A4               	rrcf	(??_put_cluster+2)& (0+255),f,b
  8292  001C34  33A3               	rrcf	(??_put_cluster+1)& (0+255),f,b
  8293  001C36  33A2               	rrcf	??_put_cluster& (0+255),f,b
  8294  001C38                     u12540:
  8295  001C38  2EE8               	decfsz	wreg,f,c
  8296  001C3A  D7F8               	goto	u12545
  8297  001C3C  0100               	movlb	0	; () banked
  8298  001C3E  51A2               	movf	??_put_cluster& (0+255),w,b
  8299  001C40                     L4:
  8300  001C40  0100               	movlb	0	; () banked
  8301  001C42  6FA9               	movwf	_put_cluster$1092& (0+255),b
  8302  001C44  6BAA               	clrf	(_put_cluster$1092+1)& (0+255),b
  8303                           
  8304                           ; BSR set to: 0
  8305                           
  8306                           ; BSR set to: 0
  8307  001C46  C0B1  FFD9         	movff	put_cluster@p,fsr2l
  8308  001C4A  C0B2  FFDA         	movff	put_cluster@p+1,fsr2h
  8309  001C4E  C0A9  FFDF         	movff	_put_cluster$1092,indf2
  8310                           
  8311                           ;tff.c: 220: break;
  8312  001C52  D172               	goto	l11414
  8313  001C54                     l11390:
  8314                           
  8315                           ; BSR set to: 0
  8316                           ;tff.c: 223: if (!move_window(fatsect + clust / 256)) return FALSE;
  8317  001C54  C09A  F0A2         	movff	put_cluster@clust,??_put_cluster
  8318  001C58  C09B  F0A3         	movff	put_cluster@clust+1,??_put_cluster+1
  8319  001C5C  C09C  F0A4         	movff	put_cluster@clust+2,??_put_cluster+2
  8320  001C60  C09D  F0A5         	movff	put_cluster@clust+3,??_put_cluster+3
  8321  001C64  C0A3  F0A2         	movff	??_put_cluster+1,??_put_cluster
  8322  001C68  C0A4  F0A3         	movff	??_put_cluster+2,??_put_cluster+1
  8323  001C6C  C0A5  F0A4         	movff	??_put_cluster+3,??_put_cluster+2
  8324  001C70  0100               	movlb	0	; () banked
  8325  001C72  6BA5               	clrf	(??_put_cluster+3)& (0+255),b
  8326  001C74  0100               	movlb	0	; () banked
  8327  001C76  51AB               	movf	put_cluster@fatsect& (0+255),w,b
  8328  001C78  0100               	movlb	0	; () banked
  8329  001C7A  25A2               	addwf	??_put_cluster& (0+255),w,b
  8330  001C7C  0100               	movlb	0	; () banked
  8331  001C7E  6F83               	movwf	move_window@sector& (0+255),b
  8332  001C80  0100               	movlb	0	; () banked
  8333  001C82  51AC               	movf	(put_cluster@fatsect+1)& (0+255),w,b
  8334  001C84  0100               	movlb	0	; () banked
  8335  001C86  21A3               	addwfc	(??_put_cluster+1)& (0+255),w,b
  8336  001C88  0100               	movlb	0	; () banked
  8337  001C8A  6F84               	movwf	(move_window@sector+1)& (0+255),b
  8338  001C8C  0100               	movlb	0	; () banked
  8339  001C8E  51AD               	movf	(put_cluster@fatsect+2)& (0+255),w,b
  8340  001C90  0100               	movlb	0	; () banked
  8341  001C92  21A4               	addwfc	(??_put_cluster+2)& (0+255),w,b
  8342  001C94  0100               	movlb	0	; () banked
  8343  001C96  6F85               	movwf	(move_window@sector+2)& (0+255),b
  8344  001C98  0100               	movlb	0	; () banked
  8345  001C9A  51AE               	movf	(put_cluster@fatsect+3)& (0+255),w,b
  8346  001C9C  0100               	movlb	0	; () banked
  8347  001C9E  21A5               	addwfc	(??_put_cluster+3)& (0+255),w,b
  8348  001CA0  0100               	movlb	0	; () banked
  8349  001CA2  6F86               	movwf	(move_window@sector+3)& (0+255),b
  8350  001CA4  ECB4  F01C         	call	_move_window	;wreg free
  8351  001CA8  0900               	iorlw	0
  8352  001CAA  A4D8               	btfss	status,2,c
  8353  001CAC  D002               	goto	l11396
  8354  001CAE  0E00               	movlw	0
  8355  001CB0  0012               	return	
  8356  001CB2                     l11396:
  8357                           
  8358                           ;tff.c: 224: *(volatile BYTE*)(&fs->win[((WORD)clust * 2) % 512U])=(BYTE)((WORD)val); *(
      +                          volatile BYTE*)((&fs->win[((WORD)clust * 2) % 512U])+1)=(BYTE)((WORD)((WORD)val)>>8);
  8359  001CB2  0EFF               	movlw	255
  8360  001CB4  0100               	movlb	0	; () banked
  8361  001CB6  6FA2               	movwf	??_put_cluster& (0+255),b
  8362  001CB8  0E01               	movlw	1
  8363  001CBA  0100               	movlb	0	; () banked
  8364  001CBC  6FA3               	movwf	(??_put_cluster+1)& (0+255),b
  8365  001CBE  C09A  F0A4         	movff	put_cluster@clust,??_put_cluster+2
  8366  001CC2  C09B  F0A5         	movff	put_cluster@clust+1,??_put_cluster+3
  8367  001CC6  90D8               	bcf	status,0,c
  8368  001CC8  0100               	movlb	0	; () banked
  8369  001CCA  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8370  001CCC  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8371  001CCE  0100               	movlb	0	; () banked
  8372  001CD0  51A2               	movf	??_put_cluster& (0+255),w,b
  8373  001CD2  0100               	movlb	0	; () banked
  8374  001CD4  17A4               	andwf	(??_put_cluster+2)& (0+255),f,b
  8375  001CD6  0100               	movlb	0	; () banked
  8376  001CD8  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8377  001CDA  0100               	movlb	0	; () banked
  8378  001CDC  17A5               	andwf	(??_put_cluster+3)& (0+255),f,b
  8379  001CDE  0E28               	movlw	40
  8380  001CE0  0100               	movlb	0	; () banked
  8381  001CE2  27A4               	addwf	(??_put_cluster+2)& (0+255),f,b
  8382  001CE4  0E00               	movlw	0
  8383  001CE6  23A5               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8384  001CE8  0100               	movlb	0	; () banked
  8385  001CEA  51A4               	movf	(??_put_cluster+2)& (0+255),w,b
  8386  001CEC  0100               	movlb	0	; () banked
  8387  001CEE  25B3               	addwf	put_cluster@fs& (0+255),w,b
  8388  001CF0  6ED9               	movwf	fsr2l,c
  8389  001CF2  0100               	movlb	0	; () banked
  8390  001CF4  51A5               	movf	(??_put_cluster+3)& (0+255),w,b
  8391  001CF6  0100               	movlb	0	; () banked
  8392  001CF8  21B4               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8393  001CFA  6EDA               	movwf	fsr2h,c
  8394  001CFC  C09E  FFDF         	movff	put_cluster@val,indf2
  8395  001D00  0EFF               	movlw	255
  8396  001D02  0100               	movlb	0	; () banked
  8397  001D04  6FA2               	movwf	??_put_cluster& (0+255),b
  8398  001D06  0E01               	movlw	1
  8399  001D08  0100               	movlb	0	; () banked
  8400  001D0A  6FA3               	movwf	(??_put_cluster+1)& (0+255),b
  8401  001D0C  C09A  F0A4         	movff	put_cluster@clust,??_put_cluster+2
  8402  001D10  C09B  F0A5         	movff	put_cluster@clust+1,??_put_cluster+3
  8403  001D14  90D8               	bcf	status,0,c
  8404  001D16  0100               	movlb	0	; () banked
  8405  001D18  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8406  001D1A  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8407  001D1C  0100               	movlb	0	; () banked
  8408  001D1E  51A2               	movf	??_put_cluster& (0+255),w,b
  8409  001D20  0100               	movlb	0	; () banked
  8410  001D22  17A4               	andwf	(??_put_cluster+2)& (0+255),f,b
  8411  001D24  0100               	movlb	0	; () banked
  8412  001D26  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8413  001D28  0100               	movlb	0	; () banked
  8414  001D2A  17A5               	andwf	(??_put_cluster+3)& (0+255),f,b
  8415  001D2C  0E29               	movlw	41
  8416  001D2E  0100               	movlb	0	; () banked
  8417  001D30  27A4               	addwf	(??_put_cluster+2)& (0+255),f,b
  8418  001D32  0E00               	movlw	0
  8419  001D34  23A5               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8420  001D36  0100               	movlb	0	; () banked
  8421  001D38  51A4               	movf	(??_put_cluster+2)& (0+255),w,b
  8422  001D3A  0100               	movlb	0	; () banked
  8423  001D3C  25B3               	addwf	put_cluster@fs& (0+255),w,b
  8424  001D3E  6ED9               	movwf	fsr2l,c
  8425  001D40  0100               	movlb	0	; () banked
  8426  001D42  51A5               	movf	(??_put_cluster+3)& (0+255),w,b
  8427  001D44  0100               	movlb	0	; () banked
  8428  001D46  21B4               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8429  001D48  6EDA               	movwf	fsr2h,c
  8430  001D4A  0100               	movlb	0	; () banked
  8431  001D4C  519F               	movf	(put_cluster@val+1)& (0+255),w,b
  8432  001D4E  6EDF               	movwf	indf2,c
  8433                           
  8434                           ;tff.c: 225: break;
  8435  001D50  D0F3               	goto	l11414
  8436  001D52                     l11398:
  8437                           
  8438                           ; BSR set to: 0
  8439                           ;tff.c: 228: if (!move_window(fatsect + clust / 128)) return FALSE;
  8440  001D52  C09A  F0A2         	movff	put_cluster@clust,??_put_cluster
  8441  001D56  C09B  F0A3         	movff	put_cluster@clust+1,??_put_cluster+1
  8442  001D5A  C09C  F0A4         	movff	put_cluster@clust+2,??_put_cluster+2
  8443  001D5E  C09D  F0A5         	movff	put_cluster@clust+3,??_put_cluster+3
  8444  001D62  0E08               	movlw	8
  8445  001D64  D006               	goto	u12560
  8446  001D66                     u12565:
  8447  001D66  0100               	movlb	0	; () banked
  8448  001D68  90D8               	bcf	status,0,c
  8449  001D6A  33A5               	rrcf	(??_put_cluster+3)& (0+255),f,b
  8450  001D6C  33A4               	rrcf	(??_put_cluster+2)& (0+255),f,b
  8451  001D6E  33A3               	rrcf	(??_put_cluster+1)& (0+255),f,b
  8452  001D70  33A2               	rrcf	??_put_cluster& (0+255),f,b
  8453  001D72                     u12560:
  8454  001D72  2EE8               	decfsz	wreg,f,c
  8455  001D74  D7F8               	goto	u12565
  8456  001D76  0100               	movlb	0	; () banked
  8457  001D78  51AB               	movf	put_cluster@fatsect& (0+255),w,b
  8458  001D7A  0100               	movlb	0	; () banked
  8459  001D7C  25A2               	addwf	??_put_cluster& (0+255),w,b
  8460  001D7E  0100               	movlb	0	; () banked
  8461  001D80  6F83               	movwf	move_window@sector& (0+255),b
  8462  001D82  0100               	movlb	0	; () banked
  8463  001D84  51AC               	movf	(put_cluster@fatsect+1)& (0+255),w,b
  8464  001D86  0100               	movlb	0	; () banked
  8465  001D88  21A3               	addwfc	(??_put_cluster+1)& (0+255),w,b
  8466  001D8A  0100               	movlb	0	; () banked
  8467  001D8C  6F84               	movwf	(move_window@sector+1)& (0+255),b
  8468  001D8E  0100               	movlb	0	; () banked
  8469  001D90  51AD               	movf	(put_cluster@fatsect+2)& (0+255),w,b
  8470  001D92  0100               	movlb	0	; () banked
  8471  001D94  21A4               	addwfc	(??_put_cluster+2)& (0+255),w,b
  8472  001D96  0100               	movlb	0	; () banked
  8473  001D98  6F85               	movwf	(move_window@sector+2)& (0+255),b
  8474  001D9A  0100               	movlb	0	; () banked
  8475  001D9C  51AE               	movf	(put_cluster@fatsect+3)& (0+255),w,b
  8476  001D9E  0100               	movlb	0	; () banked
  8477  001DA0  21A5               	addwfc	(??_put_cluster+3)& (0+255),w,b
  8478  001DA2  0100               	movlb	0	; () banked
  8479  001DA4  6F86               	movwf	(move_window@sector+3)& (0+255),b
  8480  001DA6  ECB4  F01C         	call	_move_window	;wreg free
  8481  001DAA  0900               	iorlw	0
  8482  001DAC  A4D8               	btfss	status,2,c
  8483  001DAE  D002               	goto	l11404
  8484  001DB0  0E00               	movlw	0
  8485  001DB2  0012               	return	
  8486  001DB4                     l11404:
  8487                           
  8488                           ;tff.c: 229: *(volatile BYTE*)(&fs->win[((WORD)clust * 4) % 512U])=(BYTE)(val); *(volati
      +                          le BYTE*)((&fs->win[((WORD)clust * 4) % 512U])+1)=(BYTE)((WORD)(val)>>8); *(volatile BYT
      +                          E*)((&fs->win[((WORD)clust * 4) % 512U])+2)=(BYTE)((DWORD)(val)>>16); *(volatile BYTE*)
  8489  001DB4  0EFF               	movlw	255
  8490  001DB6  0100               	movlb	0	; () banked
  8491  001DB8  6FA2               	movwf	??_put_cluster& (0+255),b
  8492  001DBA  0E01               	movlw	1
  8493  001DBC  0100               	movlb	0	; () banked
  8494  001DBE  6FA3               	movwf	(??_put_cluster+1)& (0+255),b
  8495  001DC0  C09A  F0A4         	movff	put_cluster@clust,??_put_cluster+2
  8496  001DC4  C09B  F0A5         	movff	put_cluster@clust+1,??_put_cluster+3
  8497  001DC8  0100               	movlb	0	; () banked
  8498  001DCA  90D8               	bcf	status,0,c
  8499  001DCC  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8500  001DCE  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8501  001DD0  0100               	movlb	0	; () banked
  8502  001DD2  90D8               	bcf	status,0,c
  8503  001DD4  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8504  001DD6  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8505  001DD8  0100               	movlb	0	; () banked
  8506  001DDA  51A2               	movf	??_put_cluster& (0+255),w,b
  8507  001DDC  0100               	movlb	0	; () banked
  8508  001DDE  17A4               	andwf	(??_put_cluster+2)& (0+255),f,b
  8509  001DE0  0100               	movlb	0	; () banked
  8510  001DE2  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8511  001DE4  0100               	movlb	0	; () banked
  8512  001DE6  17A5               	andwf	(??_put_cluster+3)& (0+255),f,b
  8513  001DE8  0E28               	movlw	40
  8514  001DEA  0100               	movlb	0	; () banked
  8515  001DEC  27A4               	addwf	(??_put_cluster+2)& (0+255),f,b
  8516  001DEE  0E00               	movlw	0
  8517  001DF0  23A5               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8518  001DF2  0100               	movlb	0	; () banked
  8519  001DF4  51A4               	movf	(??_put_cluster+2)& (0+255),w,b
  8520  001DF6  0100               	movlb	0	; () banked
  8521  001DF8  25B3               	addwf	put_cluster@fs& (0+255),w,b
  8522  001DFA  6ED9               	movwf	fsr2l,c
  8523  001DFC  0100               	movlb	0	; () banked
  8524  001DFE  51A5               	movf	(??_put_cluster+3)& (0+255),w,b
  8525  001E00  0100               	movlb	0	; () banked
  8526  001E02  21B4               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8527  001E04  6EDA               	movwf	fsr2h,c
  8528  001E06  C09E  FFDF         	movff	put_cluster@val,indf2
  8529  001E0A  0EFF               	movlw	255
  8530  001E0C  0100               	movlb	0	; () banked
  8531  001E0E  6FA2               	movwf	??_put_cluster& (0+255),b
  8532  001E10  0E01               	movlw	1
  8533  001E12  0100               	movlb	0	; () banked
  8534  001E14  6FA3               	movwf	(??_put_cluster+1)& (0+255),b
  8535  001E16  C09A  F0A4         	movff	put_cluster@clust,??_put_cluster+2
  8536  001E1A  C09B  F0A5         	movff	put_cluster@clust+1,??_put_cluster+3
  8537  001E1E  0100               	movlb	0	; () banked
  8538  001E20  90D8               	bcf	status,0,c
  8539  001E22  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8540  001E24  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8541  001E26  0100               	movlb	0	; () banked
  8542  001E28  90D8               	bcf	status,0,c
  8543  001E2A  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8544  001E2C  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8545  001E2E  0100               	movlb	0	; () banked
  8546  001E30  51A2               	movf	??_put_cluster& (0+255),w,b
  8547  001E32  0100               	movlb	0	; () banked
  8548  001E34  17A4               	andwf	(??_put_cluster+2)& (0+255),f,b
  8549  001E36  0100               	movlb	0	; () banked
  8550  001E38  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8551  001E3A  0100               	movlb	0	; () banked
  8552  001E3C  17A5               	andwf	(??_put_cluster+3)& (0+255),f,b
  8553  001E3E  0E29               	movlw	41
  8554  001E40  0100               	movlb	0	; () banked
  8555  001E42  27A4               	addwf	(??_put_cluster+2)& (0+255),f,b
  8556  001E44  0E00               	movlw	0
  8557  001E46  23A5               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8558  001E48  0100               	movlb	0	; () banked
  8559  001E4A  51A4               	movf	(??_put_cluster+2)& (0+255),w,b
  8560  001E4C  0100               	movlb	0	; () banked
  8561  001E4E  25B3               	addwf	put_cluster@fs& (0+255),w,b
  8562  001E50  6ED9               	movwf	fsr2l,c
  8563  001E52  0100               	movlb	0	; () banked
  8564  001E54  51A5               	movf	(??_put_cluster+3)& (0+255),w,b
  8565  001E56  0100               	movlb	0	; () banked
  8566  001E58  21B4               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8567  001E5A  6EDA               	movwf	fsr2h,c
  8568  001E5C  0100               	movlb	0	; () banked
  8569  001E5E  519F               	movf	(put_cluster@val+1)& (0+255),w,b
  8570  001E60  6EDF               	movwf	indf2,c
  8571  001E62  0EFF               	movlw	255
  8572  001E64  0100               	movlb	0	; () banked
  8573  001E66  6FA2               	movwf	??_put_cluster& (0+255),b
  8574  001E68  0E01               	movlw	1
  8575  001E6A  0100               	movlb	0	; () banked
  8576  001E6C  6FA3               	movwf	(??_put_cluster+1)& (0+255),b
  8577  001E6E  C09A  F0A4         	movff	put_cluster@clust,??_put_cluster+2
  8578  001E72  C09B  F0A5         	movff	put_cluster@clust+1,??_put_cluster+3
  8579  001E76  0100               	movlb	0	; () banked
  8580  001E78  90D8               	bcf	status,0,c
  8581  001E7A  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8582  001E7C  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8583  001E7E  0100               	movlb	0	; () banked
  8584  001E80  90D8               	bcf	status,0,c
  8585  001E82  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8586  001E84  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8587  001E86  0100               	movlb	0	; () banked
  8588  001E88  51A2               	movf	??_put_cluster& (0+255),w,b
  8589  001E8A  0100               	movlb	0	; () banked
  8590  001E8C  17A4               	andwf	(??_put_cluster+2)& (0+255),f,b
  8591  001E8E  0100               	movlb	0	; () banked
  8592  001E90  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8593  001E92  0100               	movlb	0	; () banked
  8594  001E94  17A5               	andwf	(??_put_cluster+3)& (0+255),f,b
  8595  001E96  0E2A               	movlw	42
  8596  001E98  0100               	movlb	0	; () banked
  8597  001E9A  27A4               	addwf	(??_put_cluster+2)& (0+255),f,b
  8598  001E9C  0E00               	movlw	0
  8599  001E9E  23A5               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8600  001EA0  0100               	movlb	0	; () banked
  8601  001EA2  51A4               	movf	(??_put_cluster+2)& (0+255),w,b
  8602  001EA4  0100               	movlb	0	; () banked
  8603  001EA6  25B3               	addwf	put_cluster@fs& (0+255),w,b
  8604  001EA8  6ED9               	movwf	fsr2l,c
  8605  001EAA  0100               	movlb	0	; () banked
  8606  001EAC  51A5               	movf	(??_put_cluster+3)& (0+255),w,b
  8607  001EAE  0100               	movlb	0	; () banked
  8608  001EB0  21B4               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8609  001EB2  6EDA               	movwf	fsr2h,c
  8610  001EB4  C0A0  FFDF         	movff	put_cluster@val+2,indf2
  8611  001EB8  0EFF               	movlw	255
  8612  001EBA  0100               	movlb	0	; () banked
  8613  001EBC  6FA2               	movwf	??_put_cluster& (0+255),b
  8614  001EBE  0E01               	movlw	1
  8615  001EC0  0100               	movlb	0	; () banked
  8616  001EC2  6FA3               	movwf	(??_put_cluster+1)& (0+255),b
  8617  001EC4  C09A  F0A4         	movff	put_cluster@clust,??_put_cluster+2
  8618  001EC8  C09B  F0A5         	movff	put_cluster@clust+1,??_put_cluster+3
  8619  001ECC  0100               	movlb	0	; () banked
  8620  001ECE  90D8               	bcf	status,0,c
  8621  001ED0  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8622  001ED2  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8623  001ED4  0100               	movlb	0	; () banked
  8624  001ED6  90D8               	bcf	status,0,c
  8625  001ED8  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8626  001EDA  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8627  001EDC  0100               	movlb	0	; () banked
  8628  001EDE  51A2               	movf	??_put_cluster& (0+255),w,b
  8629  001EE0  0100               	movlb	0	; () banked
  8630  001EE2  17A4               	andwf	(??_put_cluster+2)& (0+255),f,b
  8631  001EE4  0100               	movlb	0	; () banked
  8632  001EE6  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8633  001EE8  0100               	movlb	0	; () banked
  8634  001EEA  17A5               	andwf	(??_put_cluster+3)& (0+255),f,b
  8635  001EEC  0E2B               	movlw	43
  8636  001EEE  0100               	movlb	0	; () banked
  8637  001EF0  27A4               	addwf	(??_put_cluster+2)& (0+255),f,b
  8638  001EF2  0E00               	movlw	0
  8639  001EF4  23A5               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8640  001EF6  0100               	movlb	0	; () banked
  8641  001EF8  51A4               	movf	(??_put_cluster+2)& (0+255),w,b
  8642  001EFA  0100               	movlb	0	; () banked
  8643  001EFC  25B3               	addwf	put_cluster@fs& (0+255),w,b
  8644  001EFE  6ED9               	movwf	fsr2l,c
  8645  001F00  0100               	movlb	0	; () banked
  8646  001F02  51A5               	movf	(??_put_cluster+3)& (0+255),w,b
  8647  001F04  0100               	movlb	0	; () banked
  8648  001F06  21B4               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8649  001F08  6EDA               	movwf	fsr2h,c
  8650  001F0A  C0A1  FFDF         	movff	put_cluster@val+3,indf2
  8651                           
  8652                           ;tff.c: 230: break;
  8653  001F0E  D014               	goto	l11414
  8654  001F10                     l11406:
  8655                           
  8656                           ; BSR set to: 0
  8657                           ;tff.c: 233: return FALSE;
  8658  001F10  0E00               	movlw	0
  8659                           
  8660                           ; BSR set to: 0
  8661  001F12  0012               	return	
  8662  001F14                     l11412:
  8663                           
  8664                           ; BSR set to: 0
  8665  001F14  0100               	movlb	0	; () banked
  8666  001F16  EE20 F024          	lfsr	2,36
  8667  001F1A  51B3               	movf	put_cluster@fs& (0+255),w,b
  8668  001F1C  26D9               	addwf	fsr2l,f,c
  8669  001F1E  51B4               	movf	(put_cluster@fs+1)& (0+255),w,b
  8670  001F20  22DA               	addwfc	fsr2h,f,c
  8671  001F22  50DF               	movf	indf2,w,c
  8672                           
  8673                           ; Switch size 1, requested type "space"
  8674                           ; Number of cases is 3, Range of values is 1 to 3
  8675                           ; switch strategies available:
  8676                           ; Name         Instructions Cycles
  8677                           ; simple_byte           10     6 (average)
  8678                           ;	Chosen strategy is simple_byte
  8679  001F24  0A01               	xorlw	1	; case 1
  8680  001F26  B4D8               	btfsc	status,2,c
  8681  001F28  D567               	goto	l11352
  8682  001F2A  0A03               	xorlw	3	; case 2
  8683  001F2C  B4D8               	btfsc	status,2,c
  8684  001F2E  D692               	goto	l11390
  8685  001F30  0A01               	xorlw	1	; case 3
  8686  001F32  B4D8               	btfsc	status,2,c
  8687  001F34  D70E               	goto	l11398
  8688  001F36  D7EC               	goto	l11406
  8689  001F38                     l11414:
  8690                           
  8691                           ; BSR set to: 0
  8692                           ;tff.c: 235: fs->winflag = 1;
  8693  001F38  0100               	movlb	0	; () banked
  8694  001F3A  EE20 F027          	lfsr	2,39
  8695  001F3E  51B3               	movf	put_cluster@fs& (0+255),w,b
  8696  001F40  26D9               	addwf	fsr2l,f,c
  8697  001F42  51B4               	movf	(put_cluster@fs+1)& (0+255),w,b
  8698  001F44  22DA               	addwfc	fsr2h,f,c
  8699  001F46  0E01               	movlw	1
  8700  001F48  6EDF               	movwf	indf2,c
  8701                           
  8702                           ; BSR set to: 0
  8703                           ;tff.c: 236: return TRUE;
  8704  001F4A  0E01               	movlw	1
  8705  001F4C  0012               	return	
  8706  001F4E                     __end_of_put_cluster:
  8707                           	opt stack 0
  8708                           tosu	equ	0xFFF
  8709                           tosh	equ	0xFFE
  8710                           tosl	equ	0xFFD
  8711                           pclath	equ	0xFFA
  8712                           tblptru	equ	0xFF8
  8713                           tblptrh	equ	0xFF7
  8714                           tblptrl	equ	0xFF6
  8715                           tablat	equ	0xFF5
  8716                           prodh	equ	0xFF4
  8717                           prodl	equ	0xFF3
  8718                           intcon	equ	0xFF2
  8719                           intcon2	equ	0xFF1
  8720                           intcon3	equ	0xFF0
  8721                           postinc0	equ	0xFEE
  8722                           wreg	equ	0xFE8
  8723                           indf1	equ	0xFE7
  8724                           postinc1	equ	0xFE6
  8725                           postdec1	equ	0xFE5
  8726                           fsr1h	equ	0xFE2
  8727                           fsr1l	equ	0xFE1
  8728                           indf2	equ	0xFDF
  8729                           postinc2	equ	0xFDE
  8730                           postdec2	equ	0xFDD
  8731                           fsr2h	equ	0xFDA
  8732                           fsr2l	equ	0xFD9
  8733                           status	equ	0xFD8
  8734                           
  8735 ;; *************** function _get_cluster *****************
  8736 ;; Defined at:
  8737 ;;		line 154 in file "bibliotecas/tff.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;  clust           4   58[BANK0 ] unsigned long 
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;  fatsect         4  108[BANK0 ] unsigned long 
  8742 ;;  fs              2  114[BANK0 ] PTR struct _FATFS
  8743 ;;		 -> fs(552), NULL(0), 
  8744 ;;  bc              2  112[BANK0 ] unsigned short 
  8745 ;;  wc              2  106[BANK0 ] unsigned short 
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  4   58[BANK0 ] unsigned long 
  8748 ;; Registers used:
  8749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8755 ;;      Params:         0       4       0       0       0       0       0       0       0
  8756 ;;      Locals:         0      12       0       0       0       0       0       0       0
  8757 ;;      Temps:          0      42       0       0       0       0       0       0       0
  8758 ;;      Totals:         0      58       0       0       0       0       0       0       0
  8759 ;;Total ram usage:       58 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; Hardware stack levels required when called:    9
  8762 ;; This function calls:
  8763 ;;		___wmul
  8764 ;;		_move_window
  8765 ;; This function is called by:
  8766 ;;		_remove_chain
  8767 ;;		_create_chain
  8768 ;;		_next_dir_entry
  8769 ;;		_f_read
  8770 ;;		_f_lseek
  8771 ;;		_f_truncate
  8772 ;;		_f_getfree
  8773 ;; This function uses a non-reentrant model
  8774 ;;
  8775                           
  8776                           	psect	text24
  8777  001398                     __ptext24:
  8778                           	opt stack 0
  8779  001398                     _get_cluster:
  8780                           	opt stack 16
  8781                           
  8782                           ;tff.c: 158: WORD wc, bc;
  8783                           ;tff.c: 159: DWORD fatsect;
  8784                           ;tff.c: 160: FATFS *fs = FatFs;
  8785                           
  8786                           ;incstack = 0
  8787  001398  C0FC  F0D2         	movff	_FatFs,get_cluster@fs
  8788  00139C  C0FD  F0D3         	movff	_FatFs+1,get_cluster@fs+1
  8789                           
  8790                           ;tff.c: 163: if (clust >= 2 && clust < fs->max_clust) {
  8791  0013A0  0100               	movlb	0	; () banked
  8792  0013A2  519D               	movf	(get_cluster@clust+3)& (0+255),w,b
  8793  0013A4  0100               	movlb	0	; () banked
  8794  0013A6  119C               	iorwf	(get_cluster@clust+2)& (0+255),w,b
  8795  0013A8  0100               	movlb	0	; () banked
  8796  0013AA  119B               	iorwf	(get_cluster@clust+1)& (0+255),w,b
  8797  0013AC  E105               	bnz	u12370
  8798  0013AE  0E02               	movlw	2
  8799  0013B0  0100               	movlb	0	; () banked
  8800  0013B2  5D9A               	subwf	get_cluster@clust& (0+255),w,b
  8801  0013B4  A0D8               	btfss	status,0,c
  8802  0013B6  D302               	goto	l11344
  8803  0013B8                     u12370:
  8804                           
  8805                           ; BSR set to: 0
  8806  0013B8  0100               	movlb	0	; () banked
  8807  0013BA  EE20 F018          	lfsr	2,24
  8808  0013BE  51D2               	movf	get_cluster@fs& (0+255),w,b
  8809  0013C0  26D9               	addwf	fsr2l,f,c
  8810  0013C2  51D3               	movf	(get_cluster@fs+1)& (0+255),w,b
  8811  0013C4  22DA               	addwfc	fsr2h,f,c
  8812  0013C6  50DE               	movf	postinc2,w,c
  8813  0013C8  0100               	movlb	0	; () banked
  8814  0013CA  5D9A               	subwf	get_cluster@clust& (0+255),w,b
  8815  0013CC  50DE               	movf	postinc2,w,c
  8816  0013CE  0100               	movlb	0	; () banked
  8817  0013D0  599B               	subwfb	(get_cluster@clust+1)& (0+255),w,b
  8818  0013D2  50DE               	movf	postinc2,w,c
  8819  0013D4  0100               	movlb	0	; () banked
  8820  0013D6  599C               	subwfb	(get_cluster@clust+2)& (0+255),w,b
  8821  0013D8  50DE               	movf	postinc2,w,c
  8822  0013DA  0100               	movlb	0	; () banked
  8823  0013DC  599D               	subwfb	(get_cluster@clust+3)& (0+255),w,b
  8824  0013DE  B0D8               	btfsc	status,0,c
  8825  0013E0  D2ED               	goto	l11344
  8826                           
  8827                           ; BSR set to: 0
  8828                           ;tff.c: 164: fatsect = fs->fatbase;
  8829  0013E2  0100               	movlb	0	; () banked
  8830  0013E4  EE20 F008          	lfsr	2,8
  8831  0013E8  51D2               	movf	get_cluster@fs& (0+255),w,b
  8832  0013EA  26D9               	addwf	fsr2l,f,c
  8833  0013EC  51D3               	movf	(get_cluster@fs+1)& (0+255),w,b
  8834  0013EE  22DA               	addwfc	fsr2h,f,c
  8835  0013F0  CFDE F0CC          	movff	postinc2,get_cluster@fatsect
  8836  0013F4  CFDE F0CD          	movff	postinc2,get_cluster@fatsect+1
  8837  0013F8  CFDE F0CE          	movff	postinc2,get_cluster@fatsect+2
  8838  0013FC  CFDE F0CF          	movff	postinc2,get_cluster@fatsect+3
  8839                           
  8840                           ;tff.c: 165: switch (fs->fs_type) {
  8841  001400  D2CC               	goto	l11342
  8842  001402                     l11298:
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;tff.c: 167: bc = (WORD)clust * 3 / 2;
  8846  001402  C09A  F016         	movff	get_cluster@clust,___wmul@multiplier
  8847  001406  C09B  F017         	movff	get_cluster@clust+1,___wmul@multiplier+1
  8848  00140A  0E00               	movlw	0
  8849  00140C  6E19               	movwf	___wmul@multiplicand+1,c
  8850  00140E  0E03               	movlw	3
  8851  001410  6E18               	movwf	___wmul@multiplicand,c
  8852  001412  ECEA  F029         	call	___wmul	;wreg free
  8853  001416  90D8               	bcf	status,0,c
  8854  001418  3017               	rrcf	?___wmul+1,w,c
  8855  00141A  0100               	movlb	0	; () banked
  8856  00141C  6F9E               	movwf	??_get_cluster& (0+255),b
  8857  00141E  3016               	rrcf	?___wmul,w,c
  8858  001420  0100               	movlb	0	; () banked
  8859  001422  6FD0               	movwf	get_cluster@bc& (0+255),b
  8860  001424  C09E  F0D1         	movff	??_get_cluster,get_cluster@bc+1
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;tff.c: 168: if (!move_window(fatsect + bc / 512U)) break;
  8864  001428  C0D0  F09E         	movff	get_cluster@bc,??_get_cluster
  8865  00142C  C0D1  F09F         	movff	get_cluster@bc+1,??_get_cluster+1
  8866  001430  0E09               	movlw	9
  8867  001432  0100               	movlb	0	; () banked
  8868  001434  6FA0               	movwf	(??_get_cluster+2)& (0+255),b
  8869  001436                     u12395:
  8870  001436  0100               	movlb	0	; () banked
  8871  001438  90D8               	bcf	status,0,c
  8872  00143A  339F               	rrcf	(??_get_cluster+1)& (0+255),f,b
  8873  00143C  339E               	rrcf	??_get_cluster& (0+255),f,b
  8874  00143E  0100               	movlb	0	; () banked
  8875  001440  2FA0               	decfsz	(??_get_cluster+2)& (0+255),f,b
  8876  001442  D7F9               	goto	u12395
  8877  001444  0100               	movlb	0	; () banked
  8878  001446  519E               	movf	??_get_cluster& (0+255),w,b
  8879  001448  0100               	movlb	0	; () banked
  8880  00144A  25CC               	addwf	get_cluster@fatsect& (0+255),w,b
  8881  00144C  0100               	movlb	0	; () banked
  8882  00144E  6F83               	movwf	move_window@sector& (0+255),b
  8883  001450  0100               	movlb	0	; () banked
  8884  001452  519F               	movf	(??_get_cluster+1)& (0+255),w,b
  8885  001454  0100               	movlb	0	; () banked
  8886  001456  21CD               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
  8887  001458  0100               	movlb	0	; () banked
  8888  00145A  6F84               	movwf	(move_window@sector+1)& (0+255),b
  8889  00145C  0E00               	movlw	0
  8890  00145E  0100               	movlb	0	; () banked
  8891  001460  21CE               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
  8892  001462  0100               	movlb	0	; () banked
  8893  001464  6F85               	movwf	(move_window@sector+2)& (0+255),b
  8894  001466  0E00               	movlw	0
  8895  001468  0100               	movlb	0	; () banked
  8896  00146A  21CF               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
  8897  00146C  0100               	movlb	0	; () banked
  8898  00146E  6F86               	movwf	(move_window@sector+3)& (0+255),b
  8899  001470  ECB4  F01C         	call	_move_window	;wreg free
  8900  001474  0900               	iorlw	0
  8901  001476  B4D8               	btfsc	status,2,c
  8902  001478  D2A1               	goto	l11344
  8903                           
  8904                           ;tff.c: 169: wc = fs->win[bc % 512U]; bc++;
  8905  00147A  0EFF               	movlw	255
  8906  00147C  0100               	movlb	0	; () banked
  8907  00147E  6F9E               	movwf	??_get_cluster& (0+255),b
  8908  001480  0E01               	movlw	1
  8909  001482  0100               	movlb	0	; () banked
  8910  001484  6F9F               	movwf	(??_get_cluster+1)& (0+255),b
  8911  001486  C0D0  F0A0         	movff	get_cluster@bc,??_get_cluster+2
  8912  00148A  C0D1  F0A1         	movff	get_cluster@bc+1,??_get_cluster+3
  8913  00148E  0100               	movlb	0	; () banked
  8914  001490  519E               	movf	??_get_cluster& (0+255),w,b
  8915  001492  0100               	movlb	0	; () banked
  8916  001494  17A0               	andwf	(??_get_cluster+2)& (0+255),f,b
  8917  001496  0100               	movlb	0	; () banked
  8918  001498  519F               	movf	(??_get_cluster+1)& (0+255),w,b
  8919  00149A  0100               	movlb	0	; () banked
  8920  00149C  17A1               	andwf	(??_get_cluster+3)& (0+255),f,b
  8921  00149E  0E28               	movlw	40
  8922  0014A0  0100               	movlb	0	; () banked
  8923  0014A2  27A0               	addwf	(??_get_cluster+2)& (0+255),f,b
  8924  0014A4  0E00               	movlw	0
  8925  0014A6  23A1               	addwfc	(??_get_cluster+3)& (0+255),f,b
  8926  0014A8  0100               	movlb	0	; () banked
  8927  0014AA  51A0               	movf	(??_get_cluster+2)& (0+255),w,b
  8928  0014AC  0100               	movlb	0	; () banked
  8929  0014AE  25D2               	addwf	get_cluster@fs& (0+255),w,b
  8930  0014B0  6ED9               	movwf	fsr2l,c
  8931  0014B2  0100               	movlb	0	; () banked
  8932  0014B4  51A1               	movf	(??_get_cluster+3)& (0+255),w,b
  8933  0014B6  0100               	movlb	0	; () banked
  8934  0014B8  21D3               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  8935  0014BA  6EDA               	movwf	fsr2h,c
  8936  0014BC  50DF               	movf	indf2,w,c
  8937  0014BE  0100               	movlb	0	; () banked
  8938  0014C0  6FA2               	movwf	(??_get_cluster+4)& (0+255),b
  8939  0014C2  0100               	movlb	0	; () banked
  8940  0014C4  51A2               	movf	(??_get_cluster+4)& (0+255),w,b
  8941  0014C6  0100               	movlb	0	; () banked
  8942  0014C8  6FCA               	movwf	get_cluster@wc& (0+255),b
  8943  0014CA  6BCB               	clrf	(get_cluster@wc+1)& (0+255),b
  8944                           
  8945                           ; BSR set to: 0
  8946  0014CC  0100               	movlb	0	; () banked
  8947  0014CE  4BD0               	infsnz	get_cluster@bc& (0+255),f,b
  8948  0014D0  2BD1               	incf	(get_cluster@bc+1)& (0+255),f,b
  8949                           
  8950                           ; BSR set to: 0
  8951                           ;tff.c: 170: if (!move_window(fatsect + bc / 512U)) break;
  8952  0014D2  C0D0  F09E         	movff	get_cluster@bc,??_get_cluster
  8953  0014D6  C0D1  F09F         	movff	get_cluster@bc+1,??_get_cluster+1
  8954  0014DA  0E09               	movlw	9
  8955  0014DC  0100               	movlb	0	; () banked
  8956  0014DE  6FA0               	movwf	(??_get_cluster+2)& (0+255),b
  8957  0014E0                     u12415:
  8958  0014E0  0100               	movlb	0	; () banked
  8959  0014E2  90D8               	bcf	status,0,c
  8960  0014E4  339F               	rrcf	(??_get_cluster+1)& (0+255),f,b
  8961  0014E6  339E               	rrcf	??_get_cluster& (0+255),f,b
  8962  0014E8  0100               	movlb	0	; () banked
  8963  0014EA  2FA0               	decfsz	(??_get_cluster+2)& (0+255),f,b
  8964  0014EC  D7F9               	goto	u12415
  8965  0014EE  0100               	movlb	0	; () banked
  8966  0014F0  519E               	movf	??_get_cluster& (0+255),w,b
  8967  0014F2  0100               	movlb	0	; () banked
  8968  0014F4  25CC               	addwf	get_cluster@fatsect& (0+255),w,b
  8969  0014F6  0100               	movlb	0	; () banked
  8970  0014F8  6F83               	movwf	move_window@sector& (0+255),b
  8971  0014FA  0100               	movlb	0	; () banked
  8972  0014FC  519F               	movf	(??_get_cluster+1)& (0+255),w,b
  8973  0014FE  0100               	movlb	0	; () banked
  8974  001500  21CD               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
  8975  001502  0100               	movlb	0	; () banked
  8976  001504  6F84               	movwf	(move_window@sector+1)& (0+255),b
  8977  001506  0E00               	movlw	0
  8978  001508  0100               	movlb	0	; () banked
  8979  00150A  21CE               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
  8980  00150C  0100               	movlb	0	; () banked
  8981  00150E  6F85               	movwf	(move_window@sector+2)& (0+255),b
  8982  001510  0E00               	movlw	0
  8983  001512  0100               	movlb	0	; () banked
  8984  001514  21CF               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
  8985  001516  0100               	movlb	0	; () banked
  8986  001518  6F86               	movwf	(move_window@sector+3)& (0+255),b
  8987  00151A  ECB4  F01C         	call	_move_window	;wreg free
  8988  00151E  0900               	iorlw	0
  8989  001520  B4D8               	btfsc	status,2,c
  8990  001522  D24C               	goto	l11344
  8991                           
  8992                           ;tff.c: 171: wc |= (WORD)fs->win[bc % 512U] << 8;
  8993  001524  0EFF               	movlw	255
  8994  001526  0100               	movlb	0	; () banked
  8995  001528  6F9E               	movwf	??_get_cluster& (0+255),b
  8996  00152A  0E01               	movlw	1
  8997  00152C  0100               	movlb	0	; () banked
  8998  00152E  6F9F               	movwf	(??_get_cluster+1)& (0+255),b
  8999  001530  C0D0  F0A0         	movff	get_cluster@bc,??_get_cluster+2
  9000  001534  C0D1  F0A1         	movff	get_cluster@bc+1,??_get_cluster+3
  9001  001538  0100               	movlb	0	; () banked
  9002  00153A  519E               	movf	??_get_cluster& (0+255),w,b
  9003  00153C  0100               	movlb	0	; () banked
  9004  00153E  17A0               	andwf	(??_get_cluster+2)& (0+255),f,b
  9005  001540  0100               	movlb	0	; () banked
  9006  001542  519F               	movf	(??_get_cluster+1)& (0+255),w,b
  9007  001544  0100               	movlb	0	; () banked
  9008  001546  17A1               	andwf	(??_get_cluster+3)& (0+255),f,b
  9009  001548  0E28               	movlw	40
  9010  00154A  0100               	movlb	0	; () banked
  9011  00154C  27A0               	addwf	(??_get_cluster+2)& (0+255),f,b
  9012  00154E  0E00               	movlw	0
  9013  001550  23A1               	addwfc	(??_get_cluster+3)& (0+255),f,b
  9014  001552  0100               	movlb	0	; () banked
  9015  001554  51A0               	movf	(??_get_cluster+2)& (0+255),w,b
  9016  001556  0100               	movlb	0	; () banked
  9017  001558  25D2               	addwf	get_cluster@fs& (0+255),w,b
  9018  00155A  6ED9               	movwf	fsr2l,c
  9019  00155C  0100               	movlb	0	; () banked
  9020  00155E  51A1               	movf	(??_get_cluster+3)& (0+255),w,b
  9021  001560  0100               	movlb	0	; () banked
  9022  001562  21D3               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9023  001564  6EDA               	movwf	fsr2h,c
  9024  001566  50DF               	movf	indf2,w,c
  9025  001568  0100               	movlb	0	; () banked
  9026  00156A  6FA2               	movwf	(??_get_cluster+4)& (0+255),b
  9027  00156C  0100               	movlb	0	; () banked
  9028  00156E  51A2               	movf	(??_get_cluster+4)& (0+255),w,b
  9029  001570  0100               	movlb	0	; () banked
  9030  001572  6FA4               	movwf	(??_get_cluster+6)& (0+255),b
  9031  001574  6BA3               	clrf	(??_get_cluster+5)& (0+255),b
  9032  001576  0100               	movlb	0	; () banked
  9033  001578  51A3               	movf	(??_get_cluster+5)& (0+255),w,b
  9034  00157A  0100               	movlb	0	; () banked
  9035  00157C  13CA               	iorwf	get_cluster@wc& (0+255),f,b
  9036  00157E  0100               	movlb	0	; () banked
  9037  001580  51A4               	movf	(??_get_cluster+6)& (0+255),w,b
  9038  001582  0100               	movlb	0	; () banked
  9039  001584  13CB               	iorwf	(get_cluster@wc+1)& (0+255),f,b
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;tff.c: 172: return (clust & 1) ? (wc >> 4) : (wc & 0xFFF);
  9043  001586  0100               	movlb	0	; () banked
  9044  001588  B19A               	btfsc	get_cluster@clust& (0+255),0,b
  9045  00158A  D00B               	goto	l11318
  9046                           
  9047                           ; BSR set to: 0
  9048  00158C  0EFF               	movlw	255
  9049  00158E  0100               	movlb	0	; () banked
  9050  001590  15CA               	andwf	get_cluster@wc& (0+255),w,b
  9051  001592  0100               	movlb	0	; () banked
  9052  001594  6FC8               	movwf	_get_cluster$1068& (0+255),b
  9053  001596  0E0F               	movlw	15
  9054  001598  0100               	movlb	0	; () banked
  9055  00159A  15CB               	andwf	(get_cluster@wc+1)& (0+255),w,b
  9056  00159C  0100               	movlb	0	; () banked
  9057  00159E  6FC9               	movwf	(_get_cluster$1068+1)& (0+255),b
  9058  0015A0  D012               	goto	l11320
  9059  0015A2                     l11318:
  9060                           
  9061                           ; BSR set to: 0
  9062  0015A2  C0CA  F09E         	movff	get_cluster@wc,??_get_cluster
  9063  0015A6  C0CB  F09F         	movff	get_cluster@wc+1,??_get_cluster+1
  9064  0015AA  0E04               	movlw	4
  9065  0015AC  0100               	movlb	0	; () banked
  9066  0015AE  6FA0               	movwf	(??_get_cluster+2)& (0+255),b
  9067  0015B0                     u12445:
  9068  0015B0  0100               	movlb	0	; () banked
  9069  0015B2  90D8               	bcf	status,0,c
  9070  0015B4  339F               	rrcf	(??_get_cluster+1)& (0+255),f,b
  9071  0015B6  339E               	rrcf	??_get_cluster& (0+255),f,b
  9072  0015B8  0100               	movlb	0	; () banked
  9073  0015BA  2FA0               	decfsz	(??_get_cluster+2)& (0+255),f,b
  9074  0015BC  D7F9               	goto	u12445
  9075  0015BE  C09E  F0C8         	movff	??_get_cluster,_get_cluster$1068
  9076  0015C2  C09F  F0C9         	movff	??_get_cluster+1,_get_cluster$1068+1
  9077  0015C6                     l11320:
  9078                           
  9079                           ; BSR set to: 0
  9080  0015C6  C0C8  F09A         	movff	_get_cluster$1068,?_get_cluster
  9081  0015CA  C0C9  F09B         	movff	_get_cluster$1068+1,?_get_cluster+1
  9082  0015CE  0100               	movlb	0	; () banked
  9083  0015D0  6B9C               	clrf	(?_get_cluster+2)& (0+255),b
  9084  0015D2  6B9D               	clrf	(?_get_cluster+3)& (0+255),b
  9085                           
  9086                           ; BSR set to: 0
  9087  0015D4  0012               	return	
  9088  0015D6                     l11324:
  9089                           
  9090                           ; BSR set to: 0
  9091                           ;tff.c: 175: if (!move_window(fatsect + clust / 256)) break;
  9092  0015D6  C09A  F09E         	movff	get_cluster@clust,??_get_cluster
  9093  0015DA  C09B  F09F         	movff	get_cluster@clust+1,??_get_cluster+1
  9094  0015DE  C09C  F0A0         	movff	get_cluster@clust+2,??_get_cluster+2
  9095  0015E2  C09D  F0A1         	movff	get_cluster@clust+3,??_get_cluster+3
  9096  0015E6  C09F  F09E         	movff	??_get_cluster+1,??_get_cluster
  9097  0015EA  C0A0  F09F         	movff	??_get_cluster+2,??_get_cluster+1
  9098  0015EE  C0A1  F0A0         	movff	??_get_cluster+3,??_get_cluster+2
  9099  0015F2  0100               	movlb	0	; () banked
  9100  0015F4  6BA1               	clrf	(??_get_cluster+3)& (0+255),b
  9101  0015F6  0100               	movlb	0	; () banked
  9102  0015F8  51CC               	movf	get_cluster@fatsect& (0+255),w,b
  9103  0015FA  0100               	movlb	0	; () banked
  9104  0015FC  259E               	addwf	??_get_cluster& (0+255),w,b
  9105  0015FE  0100               	movlb	0	; () banked
  9106  001600  6F83               	movwf	move_window@sector& (0+255),b
  9107  001602  0100               	movlb	0	; () banked
  9108  001604  51CD               	movf	(get_cluster@fatsect+1)& (0+255),w,b
  9109  001606  0100               	movlb	0	; () banked
  9110  001608  219F               	addwfc	(??_get_cluster+1)& (0+255),w,b
  9111  00160A  0100               	movlb	0	; () banked
  9112  00160C  6F84               	movwf	(move_window@sector+1)& (0+255),b
  9113  00160E  0100               	movlb	0	; () banked
  9114  001610  51CE               	movf	(get_cluster@fatsect+2)& (0+255),w,b
  9115  001612  0100               	movlb	0	; () banked
  9116  001614  21A0               	addwfc	(??_get_cluster+2)& (0+255),w,b
  9117  001616  0100               	movlb	0	; () banked
  9118  001618  6F85               	movwf	(move_window@sector+2)& (0+255),b
  9119  00161A  0100               	movlb	0	; () banked
  9120  00161C  51CF               	movf	(get_cluster@fatsect+3)& (0+255),w,b
  9121  00161E  0100               	movlb	0	; () banked
  9122  001620  21A1               	addwfc	(??_get_cluster+3)& (0+255),w,b
  9123  001622  0100               	movlb	0	; () banked
  9124  001624  6F86               	movwf	(move_window@sector+3)& (0+255),b
  9125  001626  ECB4  F01C         	call	_move_window	;wreg free
  9126  00162A  0900               	iorlw	0
  9127  00162C  B4D8               	btfsc	status,2,c
  9128  00162E  D1C6               	goto	l11344
  9129                           
  9130                           ;tff.c: 176: return (WORD)(((WORD)*(volatile BYTE*)((&fs->win[((WORD)clust * 2) % 512U])
      +                          +1)<<8)|(WORD)*(volatile BYTE*)(&fs->win[((WORD)clust * 2) % 512U]));
  9131  001630  0EFF               	movlw	255
  9132  001632  0100               	movlb	0	; () banked
  9133  001634  6F9E               	movwf	??_get_cluster& (0+255),b
  9134  001636  0E01               	movlw	1
  9135  001638  0100               	movlb	0	; () banked
  9136  00163A  6F9F               	movwf	(??_get_cluster+1)& (0+255),b
  9137  00163C  C09A  F0A0         	movff	get_cluster@clust,??_get_cluster+2
  9138  001640  C09B  F0A1         	movff	get_cluster@clust+1,??_get_cluster+3
  9139  001644  90D8               	bcf	status,0,c
  9140  001646  0100               	movlb	0	; () banked
  9141  001648  37A0               	rlcf	(??_get_cluster+2)& (0+255),f,b
  9142  00164A  37A1               	rlcf	(??_get_cluster+3)& (0+255),f,b
  9143  00164C  0100               	movlb	0	; () banked
  9144  00164E  519E               	movf	??_get_cluster& (0+255),w,b
  9145  001650  0100               	movlb	0	; () banked
  9146  001652  17A0               	andwf	(??_get_cluster+2)& (0+255),f,b
  9147  001654  0100               	movlb	0	; () banked
  9148  001656  519F               	movf	(??_get_cluster+1)& (0+255),w,b
  9149  001658  0100               	movlb	0	; () banked
  9150  00165A  17A1               	andwf	(??_get_cluster+3)& (0+255),f,b
  9151  00165C  0E29               	movlw	41
  9152  00165E  0100               	movlb	0	; () banked
  9153  001660  27A0               	addwf	(??_get_cluster+2)& (0+255),f,b
  9154  001662  0E00               	movlw	0
  9155  001664  23A1               	addwfc	(??_get_cluster+3)& (0+255),f,b
  9156  001666  0100               	movlb	0	; () banked
  9157  001668  51A0               	movf	(??_get_cluster+2)& (0+255),w,b
  9158  00166A  0100               	movlb	0	; () banked
  9159  00166C  25D2               	addwf	get_cluster@fs& (0+255),w,b
  9160  00166E  6ED9               	movwf	fsr2l,c
  9161  001670  0100               	movlb	0	; () banked
  9162  001672  51A1               	movf	(??_get_cluster+3)& (0+255),w,b
  9163  001674  0100               	movlb	0	; () banked
  9164  001676  21D3               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9165  001678  6EDA               	movwf	fsr2h,c
  9166  00167A  50DF               	movf	indf2,w,c
  9167  00167C  0100               	movlb	0	; () banked
  9168  00167E  6FA2               	movwf	(??_get_cluster+4)& (0+255),b
  9169  001680  0100               	movlb	0	; () banked
  9170  001682  51A2               	movf	(??_get_cluster+4)& (0+255),w,b
  9171  001684  0100               	movlb	0	; () banked
  9172  001686  6FA4               	movwf	(??_get_cluster+6)& (0+255),b
  9173  001688  6BA3               	clrf	(??_get_cluster+5)& (0+255),b
  9174  00168A  0EFF               	movlw	255
  9175  00168C  0100               	movlb	0	; () banked
  9176  00168E  6FA5               	movwf	(??_get_cluster+7)& (0+255),b
  9177  001690  0E01               	movlw	1
  9178  001692  0100               	movlb	0	; () banked
  9179  001694  6FA6               	movwf	(??_get_cluster+8)& (0+255),b
  9180  001696  C09A  F0A7         	movff	get_cluster@clust,??_get_cluster+9
  9181  00169A  C09B  F0A8         	movff	get_cluster@clust+1,??_get_cluster+10
  9182  00169E  90D8               	bcf	status,0,c
  9183  0016A0  0100               	movlb	0	; () banked
  9184  0016A2  37A7               	rlcf	(??_get_cluster+9)& (0+255),f,b
  9185  0016A4  37A8               	rlcf	(??_get_cluster+10)& (0+255),f,b
  9186  0016A6  0100               	movlb	0	; () banked
  9187  0016A8  51A5               	movf	(??_get_cluster+7)& (0+255),w,b
  9188  0016AA  0100               	movlb	0	; () banked
  9189  0016AC  17A7               	andwf	(??_get_cluster+9)& (0+255),f,b
  9190  0016AE  0100               	movlb	0	; () banked
  9191  0016B0  51A6               	movf	(??_get_cluster+8)& (0+255),w,b
  9192  0016B2  0100               	movlb	0	; () banked
  9193  0016B4  17A8               	andwf	(??_get_cluster+10)& (0+255),f,b
  9194  0016B6  0E28               	movlw	40
  9195  0016B8  0100               	movlb	0	; () banked
  9196  0016BA  27A7               	addwf	(??_get_cluster+9)& (0+255),f,b
  9197  0016BC  0E00               	movlw	0
  9198  0016BE  23A8               	addwfc	(??_get_cluster+10)& (0+255),f,b
  9199  0016C0  0100               	movlb	0	; () banked
  9200  0016C2  51A7               	movf	(??_get_cluster+9)& (0+255),w,b
  9201  0016C4  0100               	movlb	0	; () banked
  9202  0016C6  25D2               	addwf	get_cluster@fs& (0+255),w,b
  9203  0016C8  6ED9               	movwf	fsr2l,c
  9204  0016CA  0100               	movlb	0	; () banked
  9205  0016CC  51A8               	movf	(??_get_cluster+10)& (0+255),w,b
  9206  0016CE  0100               	movlb	0	; () banked
  9207  0016D0  21D3               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9208  0016D2  6EDA               	movwf	fsr2h,c
  9209  0016D4  50DF               	movf	indf2,w,c
  9210  0016D6  0100               	movlb	0	; () banked
  9211  0016D8  6FA9               	movwf	(??_get_cluster+11)& (0+255),b
  9212  0016DA  0100               	movlb	0	; () banked
  9213  0016DC  51A9               	movf	(??_get_cluster+11)& (0+255),w,b
  9214  0016DE  0100               	movlb	0	; () banked
  9215  0016E0  13A3               	iorwf	(??_get_cluster+5)& (0+255),f,b
  9216  0016E2  0E00               	movlw	0
  9217  0016E4  13A4               	iorwf	(??_get_cluster+6)& (0+255),f,b
  9218  0016E6  C0A3  F09A         	movff	??_get_cluster+5,?_get_cluster
  9219  0016EA  C0A4  F09B         	movff	??_get_cluster+6,?_get_cluster+1
  9220  0016EE  0100               	movlb	0	; () banked
  9221  0016F0  6B9C               	clrf	(?_get_cluster+2)& (0+255),b
  9222  0016F2  6B9D               	clrf	(?_get_cluster+3)& (0+255),b
  9223                           
  9224                           ; BSR set to: 0
  9225  0016F4  0012               	return	
  9226  0016F6                     l11332:
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;tff.c: 179: if (!move_window(fatsect + clust / 128)) break;
  9230  0016F6  C09A  F09E         	movff	get_cluster@clust,??_get_cluster
  9231  0016FA  C09B  F09F         	movff	get_cluster@clust+1,??_get_cluster+1
  9232  0016FE  C09C  F0A0         	movff	get_cluster@clust+2,??_get_cluster+2
  9233  001702  C09D  F0A1         	movff	get_cluster@clust+3,??_get_cluster+3
  9234  001706  0E08               	movlw	8
  9235  001708  D006               	goto	u12460
  9236  00170A                     u12465:
  9237  00170A  0100               	movlb	0	; () banked
  9238  00170C  90D8               	bcf	status,0,c
  9239  00170E  33A1               	rrcf	(??_get_cluster+3)& (0+255),f,b
  9240  001710  33A0               	rrcf	(??_get_cluster+2)& (0+255),f,b
  9241  001712  339F               	rrcf	(??_get_cluster+1)& (0+255),f,b
  9242  001714  339E               	rrcf	??_get_cluster& (0+255),f,b
  9243  001716                     u12460:
  9244  001716  2EE8               	decfsz	wreg,f,c
  9245  001718  D7F8               	goto	u12465
  9246  00171A  0100               	movlb	0	; () banked
  9247  00171C  51CC               	movf	get_cluster@fatsect& (0+255),w,b
  9248  00171E  0100               	movlb	0	; () banked
  9249  001720  259E               	addwf	??_get_cluster& (0+255),w,b
  9250  001722  0100               	movlb	0	; () banked
  9251  001724  6F83               	movwf	move_window@sector& (0+255),b
  9252  001726  0100               	movlb	0	; () banked
  9253  001728  51CD               	movf	(get_cluster@fatsect+1)& (0+255),w,b
  9254  00172A  0100               	movlb	0	; () banked
  9255  00172C  219F               	addwfc	(??_get_cluster+1)& (0+255),w,b
  9256  00172E  0100               	movlb	0	; () banked
  9257  001730  6F84               	movwf	(move_window@sector+1)& (0+255),b
  9258  001732  0100               	movlb	0	; () banked
  9259  001734  51CE               	movf	(get_cluster@fatsect+2)& (0+255),w,b
  9260  001736  0100               	movlb	0	; () banked
  9261  001738  21A0               	addwfc	(??_get_cluster+2)& (0+255),w,b
  9262  00173A  0100               	movlb	0	; () banked
  9263  00173C  6F85               	movwf	(move_window@sector+2)& (0+255),b
  9264  00173E  0100               	movlb	0	; () banked
  9265  001740  51CF               	movf	(get_cluster@fatsect+3)& (0+255),w,b
  9266  001742  0100               	movlb	0	; () banked
  9267  001744  21A1               	addwfc	(??_get_cluster+3)& (0+255),w,b
  9268  001746  0100               	movlb	0	; () banked
  9269  001748  6F86               	movwf	(move_window@sector+3)& (0+255),b
  9270  00174A  ECB4  F01C         	call	_move_window	;wreg free
  9271  00174E  0900               	iorlw	0
  9272  001750  B4D8               	btfsc	status,2,c
  9273  001752  D134               	goto	l11344
  9274                           
  9275                           ;tff.c: 180: return (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[((WORD)clust * 4) % 512U
      +                          ])+3)<<24)|((DWORD)*(volatile BYTE*)((&fs->win[((WORD)clust * 4) % 512U])+2)<<16)|((WORD
      +                          )*(volatile BYTE*)((&fs->win[((WORD)clust * 4) % 512U])+1)<<8)|*(volatile BYTE*)(&fs->w
  9276  001754  0EFF               	movlw	255
  9277  001756  0100               	movlb	0	; () banked
  9278  001758  6F9E               	movwf	??_get_cluster& (0+255),b
  9279  00175A  0E01               	movlw	1
  9280  00175C  0100               	movlb	0	; () banked
  9281  00175E  6F9F               	movwf	(??_get_cluster+1)& (0+255),b
  9282  001760  C09A  F0A0         	movff	get_cluster@clust,??_get_cluster+2
  9283  001764  C09B  F0A1         	movff	get_cluster@clust+1,??_get_cluster+3
  9284  001768  0100               	movlb	0	; () banked
  9285  00176A  90D8               	bcf	status,0,c
  9286  00176C  37A0               	rlcf	(??_get_cluster+2)& (0+255),f,b
  9287  00176E  37A1               	rlcf	(??_get_cluster+3)& (0+255),f,b
  9288  001770  0100               	movlb	0	; () banked
  9289  001772  90D8               	bcf	status,0,c
  9290  001774  37A0               	rlcf	(??_get_cluster+2)& (0+255),f,b
  9291  001776  37A1               	rlcf	(??_get_cluster+3)& (0+255),f,b
  9292  001778  0100               	movlb	0	; () banked
  9293  00177A  519E               	movf	??_get_cluster& (0+255),w,b
  9294  00177C  0100               	movlb	0	; () banked
  9295  00177E  17A0               	andwf	(??_get_cluster+2)& (0+255),f,b
  9296  001780  0100               	movlb	0	; () banked
  9297  001782  519F               	movf	(??_get_cluster+1)& (0+255),w,b
  9298  001784  0100               	movlb	0	; () banked
  9299  001786  17A1               	andwf	(??_get_cluster+3)& (0+255),f,b
  9300  001788  0E29               	movlw	41
  9301  00178A  0100               	movlb	0	; () banked
  9302  00178C  27A0               	addwf	(??_get_cluster+2)& (0+255),f,b
  9303  00178E  0E00               	movlw	0
  9304  001790  23A1               	addwfc	(??_get_cluster+3)& (0+255),f,b
  9305  001792  0100               	movlb	0	; () banked
  9306  001794  51A0               	movf	(??_get_cluster+2)& (0+255),w,b
  9307  001796  0100               	movlb	0	; () banked
  9308  001798  25D2               	addwf	get_cluster@fs& (0+255),w,b
  9309  00179A  6ED9               	movwf	fsr2l,c
  9310  00179C  0100               	movlb	0	; () banked
  9311  00179E  51A1               	movf	(??_get_cluster+3)& (0+255),w,b
  9312  0017A0  0100               	movlb	0	; () banked
  9313  0017A2  21D3               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9314  0017A4  6EDA               	movwf	fsr2h,c
  9315  0017A6  50DF               	movf	indf2,w,c
  9316  0017A8  0100               	movlb	0	; () banked
  9317  0017AA  6FA2               	movwf	(??_get_cluster+4)& (0+255),b
  9318  0017AC  0100               	movlb	0	; () banked
  9319  0017AE  51A2               	movf	(??_get_cluster+4)& (0+255),w,b
  9320  0017B0  0100               	movlb	0	; () banked
  9321  0017B2  6FA4               	movwf	(??_get_cluster+6)& (0+255),b
  9322  0017B4  6BA3               	clrf	(??_get_cluster+5)& (0+255),b
  9323  0017B6  0EFF               	movlw	255
  9324  0017B8  0100               	movlb	0	; () banked
  9325  0017BA  6FA5               	movwf	(??_get_cluster+7)& (0+255),b
  9326  0017BC  0E01               	movlw	1
  9327  0017BE  0100               	movlb	0	; () banked
  9328  0017C0  6FA6               	movwf	(??_get_cluster+8)& (0+255),b
  9329  0017C2  C09A  F0A7         	movff	get_cluster@clust,??_get_cluster+9
  9330  0017C6  C09B  F0A8         	movff	get_cluster@clust+1,??_get_cluster+10
  9331  0017CA  0100               	movlb	0	; () banked
  9332  0017CC  90D8               	bcf	status,0,c
  9333  0017CE  37A7               	rlcf	(??_get_cluster+9)& (0+255),f,b
  9334  0017D0  37A8               	rlcf	(??_get_cluster+10)& (0+255),f,b
  9335  0017D2  0100               	movlb	0	; () banked
  9336  0017D4  90D8               	bcf	status,0,c
  9337  0017D6  37A7               	rlcf	(??_get_cluster+9)& (0+255),f,b
  9338  0017D8  37A8               	rlcf	(??_get_cluster+10)& (0+255),f,b
  9339  0017DA  0100               	movlb	0	; () banked
  9340  0017DC  51A5               	movf	(??_get_cluster+7)& (0+255),w,b
  9341  0017DE  0100               	movlb	0	; () banked
  9342  0017E0  17A7               	andwf	(??_get_cluster+9)& (0+255),f,b
  9343  0017E2  0100               	movlb	0	; () banked
  9344  0017E4  51A6               	movf	(??_get_cluster+8)& (0+255),w,b
  9345  0017E6  0100               	movlb	0	; () banked
  9346  0017E8  17A8               	andwf	(??_get_cluster+10)& (0+255),f,b
  9347  0017EA  0E2A               	movlw	42
  9348  0017EC  0100               	movlb	0	; () banked
  9349  0017EE  27A7               	addwf	(??_get_cluster+9)& (0+255),f,b
  9350  0017F0  0E00               	movlw	0
  9351  0017F2  23A8               	addwfc	(??_get_cluster+10)& (0+255),f,b
  9352  0017F4  0100               	movlb	0	; () banked
  9353  0017F6  51A7               	movf	(??_get_cluster+9)& (0+255),w,b
  9354  0017F8  0100               	movlb	0	; () banked
  9355  0017FA  25D2               	addwf	get_cluster@fs& (0+255),w,b
  9356  0017FC  6ED9               	movwf	fsr2l,c
  9357  0017FE  0100               	movlb	0	; () banked
  9358  001800  51A8               	movf	(??_get_cluster+10)& (0+255),w,b
  9359  001802  0100               	movlb	0	; () banked
  9360  001804  21D3               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9361  001806  6EDA               	movwf	fsr2h,c
  9362  001808  50DF               	movf	indf2,w,c
  9363  00180A  0100               	movlb	0	; () banked
  9364  00180C  6FA9               	movwf	(??_get_cluster+11)& (0+255),b
  9365  00180E  C0A9  F0AA         	movff	??_get_cluster+11,??_get_cluster+12
  9366  001812  0100               	movlb	0	; () banked
  9367  001814  6BAB               	clrf	(??_get_cluster+13)& (0+255),b
  9368  001816  6BAC               	clrf	(??_get_cluster+14)& (0+255),b
  9369  001818  6BAD               	clrf	(??_get_cluster+15)& (0+255),b
  9370  00181A  C0AB  F0AD         	movff	??_get_cluster+13,??_get_cluster+15
  9371  00181E  C0AA  F0AC         	movff	??_get_cluster+12,??_get_cluster+14
  9372  001822  0100               	movlb	0	; () banked
  9373  001824  6BAB               	clrf	(??_get_cluster+13)& (0+255),b
  9374  001826  6BAA               	clrf	(??_get_cluster+12)& (0+255),b
  9375  001828  0EFF               	movlw	255
  9376  00182A  0100               	movlb	0	; () banked
  9377  00182C  6FAE               	movwf	(??_get_cluster+16)& (0+255),b
  9378  00182E  0E01               	movlw	1
  9379  001830  0100               	movlb	0	; () banked
  9380  001832  6FAF               	movwf	(??_get_cluster+17)& (0+255),b
  9381  001834  C09A  F0B0         	movff	get_cluster@clust,??_get_cluster+18
  9382  001838  C09B  F0B1         	movff	get_cluster@clust+1,??_get_cluster+19
  9383  00183C  0100               	movlb	0	; () banked
  9384  00183E  90D8               	bcf	status,0,c
  9385  001840  37B0               	rlcf	(??_get_cluster+18)& (0+255),f,b
  9386  001842  37B1               	rlcf	(??_get_cluster+19)& (0+255),f,b
  9387  001844  0100               	movlb	0	; () banked
  9388  001846  90D8               	bcf	status,0,c
  9389  001848  37B0               	rlcf	(??_get_cluster+18)& (0+255),f,b
  9390  00184A  37B1               	rlcf	(??_get_cluster+19)& (0+255),f,b
  9391  00184C  0100               	movlb	0	; () banked
  9392  00184E  51AE               	movf	(??_get_cluster+16)& (0+255),w,b
  9393  001850  0100               	movlb	0	; () banked
  9394  001852  17B0               	andwf	(??_get_cluster+18)& (0+255),f,b
  9395  001854  0100               	movlb	0	; () banked
  9396  001856  51AF               	movf	(??_get_cluster+17)& (0+255),w,b
  9397  001858  0100               	movlb	0	; () banked
  9398  00185A  17B1               	andwf	(??_get_cluster+19)& (0+255),f,b
  9399  00185C  0E2B               	movlw	43
  9400  00185E  0100               	movlb	0	; () banked
  9401  001860  27B0               	addwf	(??_get_cluster+18)& (0+255),f,b
  9402  001862  0E00               	movlw	0
  9403  001864  23B1               	addwfc	(??_get_cluster+19)& (0+255),f,b
  9404  001866  0100               	movlb	0	; () banked
  9405  001868  51B0               	movf	(??_get_cluster+18)& (0+255),w,b
  9406  00186A  0100               	movlb	0	; () banked
  9407  00186C  25D2               	addwf	get_cluster@fs& (0+255),w,b
  9408  00186E  6ED9               	movwf	fsr2l,c
  9409  001870  0100               	movlb	0	; () banked
  9410  001872  51B1               	movf	(??_get_cluster+19)& (0+255),w,b
  9411  001874  0100               	movlb	0	; () banked
  9412  001876  21D3               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9413  001878  6EDA               	movwf	fsr2h,c
  9414  00187A  50DF               	movf	indf2,w,c
  9415  00187C  0100               	movlb	0	; () banked
  9416  00187E  6FB2               	movwf	(??_get_cluster+20)& (0+255),b
  9417  001880  C0B2  F0B3         	movff	??_get_cluster+20,??_get_cluster+21
  9418  001884  0100               	movlb	0	; () banked
  9419  001886  6BB4               	clrf	(??_get_cluster+22)& (0+255),b
  9420  001888  6BB5               	clrf	(??_get_cluster+23)& (0+255),b
  9421  00188A  6BB6               	clrf	(??_get_cluster+24)& (0+255),b
  9422  00188C  C0B3  F0B6         	movff	??_get_cluster+21,??_get_cluster+24
  9423  001890  0100               	movlb	0	; () banked
  9424  001892  6BB5               	clrf	(??_get_cluster+23)& (0+255),b
  9425  001894  6BB4               	clrf	(??_get_cluster+22)& (0+255),b
  9426  001896  6BB3               	clrf	(??_get_cluster+21)& (0+255),b
  9427  001898  0100               	movlb	0	; () banked
  9428  00189A  51AA               	movf	(??_get_cluster+12)& (0+255),w,b
  9429  00189C  0100               	movlb	0	; () banked
  9430  00189E  11B3               	iorwf	(??_get_cluster+21)& (0+255),w,b
  9431  0018A0  0100               	movlb	0	; () banked
  9432  0018A2  6FB7               	movwf	(??_get_cluster+25)& (0+255),b
  9433  0018A4  0100               	movlb	0	; () banked
  9434  0018A6  51AB               	movf	(??_get_cluster+13)& (0+255),w,b
  9435  0018A8  0100               	movlb	0	; () banked
  9436  0018AA  11B4               	iorwf	(??_get_cluster+22)& (0+255),w,b
  9437  0018AC  0100               	movlb	0	; () banked
  9438  0018AE  6FB8               	movwf	(??_get_cluster+26)& (0+255),b
  9439  0018B0  0100               	movlb	0	; () banked
  9440  0018B2  51AC               	movf	(??_get_cluster+14)& (0+255),w,b
  9441  0018B4  0100               	movlb	0	; () banked
  9442  0018B6  11B5               	iorwf	(??_get_cluster+23)& (0+255),w,b
  9443  0018B8  0100               	movlb	0	; () banked
  9444  0018BA  6FB9               	movwf	(??_get_cluster+27)& (0+255),b
  9445  0018BC  0100               	movlb	0	; () banked
  9446  0018BE  51AD               	movf	(??_get_cluster+15)& (0+255),w,b
  9447  0018C0  0100               	movlb	0	; () banked
  9448  0018C2  11B6               	iorwf	(??_get_cluster+24)& (0+255),w,b
  9449  0018C4  0100               	movlb	0	; () banked
  9450  0018C6  6FBA               	movwf	(??_get_cluster+28)& (0+255),b
  9451  0018C8  0100               	movlb	0	; () banked
  9452  0018CA  51A3               	movf	(??_get_cluster+5)& (0+255),w,b
  9453  0018CC  0100               	movlb	0	; () banked
  9454  0018CE  11B7               	iorwf	(??_get_cluster+25)& (0+255),w,b
  9455  0018D0  0100               	movlb	0	; () banked
  9456  0018D2  6FBB               	movwf	(??_get_cluster+29)& (0+255),b
  9457  0018D4  0100               	movlb	0	; () banked
  9458  0018D6  51A4               	movf	(??_get_cluster+6)& (0+255),w,b
  9459  0018D8  0100               	movlb	0	; () banked
  9460  0018DA  11B8               	iorwf	(??_get_cluster+26)& (0+255),w,b
  9461  0018DC  0100               	movlb	0	; () banked
  9462  0018DE  6FBC               	movwf	(??_get_cluster+30)& (0+255),b
  9463  0018E0  0E00               	movlw	0
  9464  0018E2  0100               	movlb	0	; () banked
  9465  0018E4  11B9               	iorwf	(??_get_cluster+27)& (0+255),w,b
  9466  0018E6  0100               	movlb	0	; () banked
  9467  0018E8  6FBD               	movwf	(??_get_cluster+31)& (0+255),b
  9468  0018EA  0E00               	movlw	0
  9469  0018EC  0100               	movlb	0	; () banked
  9470  0018EE  11BA               	iorwf	(??_get_cluster+28)& (0+255),w,b
  9471  0018F0  0100               	movlb	0	; () banked
  9472  0018F2  6FBE               	movwf	(??_get_cluster+32)& (0+255),b
  9473  0018F4  0EFF               	movlw	255
  9474  0018F6  0100               	movlb	0	; () banked
  9475  0018F8  6FBF               	movwf	(??_get_cluster+33)& (0+255),b
  9476  0018FA  0E01               	movlw	1
  9477  0018FC  0100               	movlb	0	; () banked
  9478  0018FE  6FC0               	movwf	(??_get_cluster+34)& (0+255),b
  9479  001900  C09A  F0C1         	movff	get_cluster@clust,??_get_cluster+35
  9480  001904  C09B  F0C2         	movff	get_cluster@clust+1,??_get_cluster+36
  9481  001908  0100               	movlb	0	; () banked
  9482  00190A  90D8               	bcf	status,0,c
  9483  00190C  37C1               	rlcf	(??_get_cluster+35)& (0+255),f,b
  9484  00190E  37C2               	rlcf	(??_get_cluster+36)& (0+255),f,b
  9485  001910  0100               	movlb	0	; () banked
  9486  001912  90D8               	bcf	status,0,c
  9487  001914  37C1               	rlcf	(??_get_cluster+35)& (0+255),f,b
  9488  001916  37C2               	rlcf	(??_get_cluster+36)& (0+255),f,b
  9489  001918  0100               	movlb	0	; () banked
  9490  00191A  51BF               	movf	(??_get_cluster+33)& (0+255),w,b
  9491  00191C  0100               	movlb	0	; () banked
  9492  00191E  17C1               	andwf	(??_get_cluster+35)& (0+255),f,b
  9493  001920  0100               	movlb	0	; () banked
  9494  001922  51C0               	movf	(??_get_cluster+34)& (0+255),w,b
  9495  001924  0100               	movlb	0	; () banked
  9496  001926  17C2               	andwf	(??_get_cluster+36)& (0+255),f,b
  9497  001928  0E28               	movlw	40
  9498  00192A  0100               	movlb	0	; () banked
  9499  00192C  27C1               	addwf	(??_get_cluster+35)& (0+255),f,b
  9500  00192E  0E00               	movlw	0
  9501  001930  23C2               	addwfc	(??_get_cluster+36)& (0+255),f,b
  9502  001932  0100               	movlb	0	; () banked
  9503  001934  51C1               	movf	(??_get_cluster+35)& (0+255),w,b
  9504  001936  0100               	movlb	0	; () banked
  9505  001938  25D2               	addwf	get_cluster@fs& (0+255),w,b
  9506  00193A  6ED9               	movwf	fsr2l,c
  9507  00193C  0100               	movlb	0	; () banked
  9508  00193E  51C2               	movf	(??_get_cluster+36)& (0+255),w,b
  9509  001940  0100               	movlb	0	; () banked
  9510  001942  21D3               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9511  001944  6EDA               	movwf	fsr2h,c
  9512  001946  50DF               	movf	indf2,w,c
  9513  001948  0100               	movlb	0	; () banked
  9514  00194A  6FC3               	movwf	(??_get_cluster+37)& (0+255),b
  9515  00194C  0100               	movlb	0	; () banked
  9516  00194E  51C3               	movf	(??_get_cluster+37)& (0+255),w,b
  9517  001950  0100               	movlb	0	; () banked
  9518  001952  11BB               	iorwf	(??_get_cluster+29)& (0+255),w,b
  9519  001954  0100               	movlb	0	; () banked
  9520  001956  6FC4               	movwf	(??_get_cluster+38)& (0+255),b
  9521  001958  0100               	movlb	0	; () banked
  9522  00195A  51BC               	movf	(??_get_cluster+30)& (0+255),w,b
  9523  00195C  0100               	movlb	0	; () banked
  9524  00195E  6FC5               	movwf	(??_get_cluster+39)& (0+255),b
  9525  001960  0100               	movlb	0	; () banked
  9526  001962  51BD               	movf	(??_get_cluster+31)& (0+255),w,b
  9527  001964  0100               	movlb	0	; () banked
  9528  001966  6FC6               	movwf	(??_get_cluster+40)& (0+255),b
  9529  001968  0100               	movlb	0	; () banked
  9530  00196A  51BE               	movf	(??_get_cluster+32)& (0+255),w,b
  9531  00196C  0100               	movlb	0	; () banked
  9532  00196E  6FC7               	movwf	(??_get_cluster+41)& (0+255),b
  9533  001970  0EFF               	movlw	255
  9534  001972  0100               	movlb	0	; () banked
  9535  001974  15C4               	andwf	(??_get_cluster+38)& (0+255),w,b
  9536  001976  0100               	movlb	0	; () banked
  9537  001978  6F9A               	movwf	?_get_cluster& (0+255),b
  9538  00197A  0EFF               	movlw	255
  9539  00197C  0100               	movlb	0	; () banked
  9540  00197E  15C5               	andwf	(??_get_cluster+39)& (0+255),w,b
  9541  001980  0100               	movlb	0	; () banked
  9542  001982  6F9B               	movwf	(?_get_cluster+1)& (0+255),b
  9543  001984  0EFF               	movlw	255
  9544  001986  0100               	movlb	0	; () banked
  9545  001988  15C6               	andwf	(??_get_cluster+40)& (0+255),w,b
  9546  00198A  0100               	movlb	0	; () banked
  9547  00198C  6F9C               	movwf	(?_get_cluster+2)& (0+255),b
  9548  00198E  0E0F               	movlw	15
  9549  001990  0100               	movlb	0	; () banked
  9550  001992  15C7               	andwf	(??_get_cluster+41)& (0+255),w,b
  9551  001994  0100               	movlb	0	; () banked
  9552  001996  6F9D               	movwf	(?_get_cluster+3)& (0+255),b
  9553                           
  9554                           ; BSR set to: 0
  9555  001998  0012               	return	
  9556  00199A                     l11342:
  9557                           
  9558                           ; BSR set to: 0
  9559  00199A  0100               	movlb	0	; () banked
  9560  00199C  EE20 F024          	lfsr	2,36
  9561  0019A0  51D2               	movf	get_cluster@fs& (0+255),w,b
  9562  0019A2  26D9               	addwf	fsr2l,f,c
  9563  0019A4  51D3               	movf	(get_cluster@fs+1)& (0+255),w,b
  9564  0019A6  22DA               	addwfc	fsr2h,f,c
  9565  0019A8  50DF               	movf	indf2,w,c
  9566                           
  9567                           ; Switch size 1, requested type "space"
  9568                           ; Number of cases is 3, Range of values is 1 to 3
  9569                           ; switch strategies available:
  9570                           ; Name         Instructions Cycles
  9571                           ; simple_byte           10     6 (average)
  9572                           ;	Chosen strategy is simple_byte
  9573  0019AA  0A01               	xorlw	1	; case 1
  9574  0019AC  B4D8               	btfsc	status,2,c
  9575  0019AE  D529               	goto	l11298
  9576  0019B0  0A03               	xorlw	3	; case 2
  9577  0019B2  B4D8               	btfsc	status,2,c
  9578  0019B4  D610               	goto	l11324
  9579  0019B6  0A01               	xorlw	1	; case 3
  9580  0019B8  B4D8               	btfsc	status,2,c
  9581  0019BA  D69D               	goto	l11332
  9582  0019BC                     l11344:
  9583                           
  9584                           ;tff.c: 183: }
  9585                           ;tff.c: 185: return 1;
  9586  0019BC  0E01               	movlw	1
  9587  0019BE  0100               	movlb	0	; () banked
  9588  0019C0  6F9A               	movwf	?_get_cluster& (0+255),b
  9589  0019C2  0E00               	movlw	0
  9590  0019C4  6F9B               	movwf	(?_get_cluster+1)& (0+255),b
  9591  0019C6  0E00               	movlw	0
  9592  0019C8  6F9C               	movwf	(?_get_cluster+2)& (0+255),b
  9593  0019CA  0E00               	movlw	0
  9594  0019CC  6F9D               	movwf	(?_get_cluster+3)& (0+255),b
  9595  0019CE  0012               	return	
  9596  0019D0                     __end_of_get_cluster:
  9597                           	opt stack 0
  9598                           tosu	equ	0xFFF
  9599                           tosh	equ	0xFFE
  9600                           tosl	equ	0xFFD
  9601                           pclath	equ	0xFFA
  9602                           tblptru	equ	0xFF8
  9603                           tblptrh	equ	0xFF7
  9604                           tblptrl	equ	0xFF6
  9605                           tablat	equ	0xFF5
  9606                           prodh	equ	0xFF4
  9607                           prodl	equ	0xFF3
  9608                           intcon	equ	0xFF2
  9609                           intcon2	equ	0xFF1
  9610                           intcon3	equ	0xFF0
  9611                           postinc0	equ	0xFEE
  9612                           wreg	equ	0xFE8
  9613                           indf1	equ	0xFE7
  9614                           postinc1	equ	0xFE6
  9615                           postdec1	equ	0xFE5
  9616                           fsr1h	equ	0xFE2
  9617                           fsr1l	equ	0xFE1
  9618                           indf2	equ	0xFDF
  9619                           postinc2	equ	0xFDE
  9620                           postdec2	equ	0xFDD
  9621                           fsr2h	equ	0xFDA
  9622                           fsr2l	equ	0xFD9
  9623                           status	equ	0xFD8
  9624                           
  9625 ;; *************** function ___wmul *****************
  9626 ;; Defined at:
  9627 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  9628 ;; Parameters:    Size  Location     Type
  9629 ;;  multiplier      2   21[COMRAM] unsigned int 
  9630 ;;  multiplicand    2   23[COMRAM] unsigned int 
  9631 ;; Auto vars:     Size  Location     Type
  9632 ;;  product         2   25[COMRAM] unsigned int 
  9633 ;; Return value:  Size  Location     Type
  9634 ;;                  2   21[COMRAM] unsigned int 
  9635 ;; Registers used:
  9636 ;;		wreg, status,2, status,0, prodl, prodh
  9637 ;; Tracked objects:
  9638 ;;		On entry : 0/0
  9639 ;;		On exit  : 0/0
  9640 ;;		Unchanged: 0/0
  9641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9642 ;;      Params:         4       0       0       0       0       0       0       0       0
  9643 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9644 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9645 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9646 ;;Total ram usage:        6 bytes
  9647 ;; Hardware stack levels used:    1
  9648 ;; Hardware stack levels required when called:    2
  9649 ;; This function calls:
  9650 ;;		Nothing
  9651 ;; This function is called by:
  9652 ;;		_get_cluster
  9653 ;;		_put_cluster
  9654 ;;		_sprintf
  9655 ;;		_scale
  9656 ;;		_fround
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           
  9660                           	psect	text25
  9661  0053D4                     __ptext25:
  9662                           	opt stack 0
  9663  0053D4                     ___wmul:
  9664                           	opt stack 22
  9665                           
  9666                           ; BSR set to: 0
  9667                           ;incstack = 0
  9668  0053D4  5016               	movf	___wmul@multiplier,w,c
  9669  0053D6  0218               	mulwf	___wmul@multiplicand,c
  9670  0053D8  CFF3 F01A          	movff	prodl,___wmul@product
  9671  0053DC  CFF4 F01B          	movff	prodh,___wmul@product+1
  9672  0053E0  5016               	movf	___wmul@multiplier,w,c
  9673  0053E2  0219               	mulwf	___wmul@multiplicand+1,c
  9674  0053E4  50F3               	movf	prodl,w,c
  9675  0053E6  261B               	addwf	___wmul@product+1,f,c
  9676  0053E8  5017               	movf	___wmul@multiplier+1,w,c
  9677  0053EA  0218               	mulwf	___wmul@multiplicand,c
  9678  0053EC  50F3               	movf	prodl,w,c
  9679  0053EE  261B               	addwf	___wmul@product+1,f,c
  9680  0053F0  C01A  F016         	movff	___wmul@product,?___wmul
  9681  0053F4  C01B  F017         	movff	___wmul@product+1,?___wmul+1
  9682  0053F8  0012               	return	
  9683  0053FA                     __end_of___wmul:
  9684                           	opt stack 0
  9685                           tosu	equ	0xFFF
  9686                           tosh	equ	0xFFE
  9687                           tosl	equ	0xFFD
  9688                           pclath	equ	0xFFA
  9689                           tblptru	equ	0xFF8
  9690                           tblptrh	equ	0xFF7
  9691                           tblptrl	equ	0xFF6
  9692                           tablat	equ	0xFF5
  9693                           prodh	equ	0xFF4
  9694                           prodl	equ	0xFF3
  9695                           intcon	equ	0xFF2
  9696                           intcon2	equ	0xFF1
  9697                           intcon3	equ	0xFF0
  9698                           postinc0	equ	0xFEE
  9699                           wreg	equ	0xFE8
  9700                           indf1	equ	0xFE7
  9701                           postinc1	equ	0xFE6
  9702                           postdec1	equ	0xFE5
  9703                           fsr1h	equ	0xFE2
  9704                           fsr1l	equ	0xFE1
  9705                           indf2	equ	0xFDF
  9706                           postinc2	equ	0xFDE
  9707                           postdec2	equ	0xFDD
  9708                           fsr2h	equ	0xFDA
  9709                           fsr2l	equ	0xFD9
  9710                           status	equ	0xFD8
  9711                           
  9712 ;; *************** function _memcpy *****************
  9713 ;; Defined at:
  9714 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memcpy.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;  d1              2   21[COMRAM] PTR void 
  9717 ;;		 -> fs.win(512), fs(552), f_rename@direntry(21), NULL(0), 
  9718 ;;  s1              2   23[COMRAM] PTR const void 
  9719 ;;		 -> fs.win(512), fs(552), f_rename@direntry(21), f_rename@fn(12), 
  9720 ;;		 -> f_mkdir@fn(12), f_open@fn(12), NULL(0), 
  9721 ;;  n               2   25[COMRAM] unsigned int 
  9722 ;; Auto vars:     Size  Location     Type
  9723 ;;  s               2   29[COMRAM] PTR const unsigned char 
  9724 ;;		 -> fs.win(512), fs(552), f_rename@direntry(21), f_rename@fn(12), 
  9725 ;;		 -> f_mkdir@fn(12), f_open@fn(12), NULL(0), 
  9726 ;;  d               2   27[COMRAM] PTR unsigned char 
  9727 ;;		 -> fs.win(512), fs(552), f_rename@direntry(21), NULL(0), 
  9728 ;; Return value:  Size  Location     Type
  9729 ;;                  2   21[COMRAM] PTR void 
  9730 ;; Registers used:
  9731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9732 ;; Tracked objects:
  9733 ;;		On entry : 0/0
  9734 ;;		On exit  : 0/0
  9735 ;;		Unchanged: 0/0
  9736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9737 ;;      Params:         6       0       0       0       0       0       0       0       0
  9738 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9740 ;;      Totals:        10       0       0       0       0       0       0       0       0
  9741 ;;Total ram usage:       10 bytes
  9742 ;; Hardware stack levels used:    1
  9743 ;; Hardware stack levels required when called:    2
  9744 ;; This function calls:
  9745 ;;		Nothing
  9746 ;; This function is called by:
  9747 ;;		_f_open
  9748 ;;		_f_read
  9749 ;;		_f_write
  9750 ;;		_f_mkdir
  9751 ;;		_f_rename
  9752 ;; This function uses a non-reentrant model
  9753 ;;
  9754                           
  9755                           	psect	text26
  9756  00518E                     __ptext26:
  9757                           	opt stack 0
  9758  00518E                     _memcpy:
  9759                           	opt stack 25
  9760                           
  9761                           ;incstack = 0
  9762  00518E  C018  F01E         	movff	memcpy@s1,memcpy@s
  9763  005192  C019  F01F         	movff	memcpy@s1+1,memcpy@s+1
  9764  005196  C016  F01C         	movff	memcpy@d1,memcpy@d
  9765  00519A  C017  F01D         	movff	memcpy@d1+1,memcpy@d+1
  9766  00519E  D00E               	goto	l12226
  9767  0051A0                     l12220:
  9768  0051A0  C01E  FFD9         	movff	memcpy@s,fsr2l
  9769  0051A4  C01F  FFDA         	movff	memcpy@s+1,fsr2h
  9770  0051A8  C01C  FFE1         	movff	memcpy@d,fsr1l
  9771  0051AC  C01D  FFE2         	movff	memcpy@d+1,fsr1h
  9772  0051B0  CFDF FFE7          	movff	indf2,indf1
  9773  0051B4  4A1E               	infsnz	memcpy@s,f,c
  9774  0051B6  2A1F               	incf	memcpy@s+1,f,c
  9775  0051B8  4A1C               	infsnz	memcpy@d,f,c
  9776  0051BA  2A1D               	incf	memcpy@d+1,f,c
  9777  0051BC                     l12226:
  9778  0051BC  061A               	decf	memcpy@n,f,c
  9779  0051BE  A0D8               	btfss	status,0,c
  9780  0051C0  061B               	decf	memcpy@n+1,f,c
  9781  0051C2  281A               	incf	memcpy@n,w,c
  9782  0051C4  E1ED               	bnz	l12220
  9783  0051C6  281B               	incf	memcpy@n+1,w,c
  9784  0051C8  B4D8               	btfsc	status,2,c
  9785  0051CA  0012               	return	
  9786  0051CC  D7E9               	goto	l12220
  9787  0051CE                     __end_of_memcpy:
  9788                           	opt stack 0
  9789                           tosu	equ	0xFFF
  9790                           tosh	equ	0xFFE
  9791                           tosl	equ	0xFFD
  9792                           pclath	equ	0xFFA
  9793                           tblptru	equ	0xFF8
  9794                           tblptrh	equ	0xFF7
  9795                           tblptrl	equ	0xFF6
  9796                           tablat	equ	0xFF5
  9797                           prodh	equ	0xFF4
  9798                           prodl	equ	0xFF3
  9799                           intcon	equ	0xFF2
  9800                           intcon2	equ	0xFF1
  9801                           intcon3	equ	0xFF0
  9802                           postinc0	equ	0xFEE
  9803                           wreg	equ	0xFE8
  9804                           indf1	equ	0xFE7
  9805                           postinc1	equ	0xFE6
  9806                           postdec1	equ	0xFE5
  9807                           fsr1h	equ	0xFE2
  9808                           fsr1l	equ	0xFE1
  9809                           indf2	equ	0xFDF
  9810                           postinc2	equ	0xFDE
  9811                           postdec2	equ	0xFDD
  9812                           fsr2h	equ	0xFDA
  9813                           fsr2l	equ	0xFD9
  9814                           status	equ	0xFD8
  9815                           
  9816 ;; *************** function _auto_mount *****************
  9817 ;; Defined at:
  9818 ;;		line 692 in file "bibliotecas/tff.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;  path            2   60[BANK0 ] PTR PTR const unsigned c
  9821 ;;		 -> f_rename@path_old(2), f_utime@path(2), f_chmod@path(2), f_mkdir@path(2), 
  9822 ;;		 -> f_unlink@path(2), f_getfree@drv(2), f_stat@path(2), f_opendir@path(2), 
  9823 ;;		 -> f_open@path(2), 
  9824 ;;  chk_wp          1   62[BANK0 ] unsigned char 
  9825 ;; Auto vars:     Size  Location     Type
  9826 ;;  fatsize         4  104[BANK0 ] unsigned long 
  9827 ;;  bootsect        4   97[BANK0 ] unsigned long 
  9828 ;;  totalsect       4   93[BANK0 ] unsigned long 
  9829 ;;  maxclust        4   89[BANK0 ] unsigned long 
  9830 ;;  fs              2  109[BANK0 ] PTR struct _FATFS
  9831 ;;		 -> fs(552), NULL(0), 
  9832 ;;  p               2  101[BANK0 ] PTR const unsigned char 
  9833 ;;		 -> STR_38(10), 
  9834 ;;  fmt             1  108[BANK0 ] unsigned char 
  9835 ;;  stat            1  103[BANK0 ] unsigned char 
  9836 ;; Return value:  Size  Location     Type
  9837 ;;                  1    wreg      enum E155
  9838 ;; Registers used:
  9839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9840 ;; Tracked objects:
  9841 ;;		On entry : 0/0
  9842 ;;		On exit  : 0/0
  9843 ;;		Unchanged: 0/0
  9844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9845 ;;      Params:         0       3       0       0       0       0       0       0       0
  9846 ;;      Locals:         0      22       0       0       0       0       0       0       0
  9847 ;;      Temps:          0      26       0       0       0       0       0       0       0
  9848 ;;      Totals:         0      51       0       0       0       0       0       0       0
  9849 ;;Total ram usage:       51 bytes
  9850 ;; Hardware stack levels used:    1
  9851 ;; Hardware stack levels required when called:    9
  9852 ;; This function calls:
  9853 ;;		___lldiv
  9854 ;;		___lmul
  9855 ;;		_check_fs
  9856 ;;		_disk_initialize
  9857 ;;		_escreve_frase_ram_lcd
  9858 ;;		_escreve_inteiro_lcd
  9859 ;;		_memset
  9860 ;;		_posicao_cursor_lcd
  9861 ;; This function is called by:
  9862 ;;		_f_open
  9863 ;;		_f_opendir
  9864 ;;		_f_stat
  9865 ;;		_f_getfree
  9866 ;;		_f_unlink
  9867 ;;		_f_mkdir
  9868 ;;		_f_chmod
  9869 ;;		_f_utime
  9870 ;;		_f_rename
  9871 ;; This function uses a non-reentrant model
  9872 ;;
  9873                           
  9874                           	psect	text27
  9875  000012                     __ptext27:
  9876                           	opt stack 0
  9877  000012                     _auto_mount:
  9878                           	opt stack 18
  9879                           
  9880                           ;tff.c: 697: BYTE fmt;
  9881                           ;tff.c: 698: DSTATUS stat;
  9882                           ;tff.c: 699: DWORD bootsect, fatsize, totalsect, maxclust;
  9883                           ;tff.c: 700: const char *p = *path;
  9884                           
  9885                           ;incstack = 0
  9886  000012  C09C  FFD9         	movff	auto_mount@path,fsr2l
  9887  000016  C09D  FFDA         	movff	auto_mount@path+1,fsr2h
  9888  00001A  CFDE F0C5          	movff	postinc2,auto_mount@p
  9889  00001E  CFDD F0C6          	movff	postdec2,auto_mount@p+1
  9890                           
  9891                           ;tff.c: 701: FATFS *fs;
  9892                           ;tff.c: 704: while (*p == ' ') p++;
  9893  000022  D003               	goto	l12078
  9894  000024                     l12076:
  9895  000024  0100               	movlb	0	; () banked
  9896  000026  4BC5               	infsnz	auto_mount@p& (0+255),f,b
  9897  000028  2BC6               	incf	(auto_mount@p+1)& (0+255),f,b
  9898  00002A                     l12078:
  9899  00002A  C0C5  FFF6         	movff	auto_mount@p,tblptrl
  9900  00002E  C0C6  FFF7         	movff	auto_mount@p+1,tblptrh
  9901  000032                     	if	0	;tblptru may be non-zero
  9902  000032                     	endif
  9903  000032                     	if	0	;tblptru may be non-zero
  9904  000032                     	endif
  9905  000032  0008               	tblrd		*
  9906  000034  50F5               	movf	tablat,w,c
  9907  000036  0A20               	xorlw	32
  9908  000038  B4D8               	btfsc	status,2,c
  9909  00003A  D7F4               	goto	l12076
  9910                           
  9911                           ;tff.c: 705: if (*p == '/') p++;
  9912  00003C  C0C5  FFF6         	movff	auto_mount@p,tblptrl
  9913  000040  C0C6  FFF7         	movff	auto_mount@p+1,tblptrh
  9914  000044                     	if	0	;tblptru may be non-zero
  9915  000044                     	endif
  9916  000044                     	if	0	;tblptru may be non-zero
  9917  000044                     	endif
  9918  000044  0008               	tblrd		*
  9919  000046  50F5               	movf	tablat,w,c
  9920  000048  0A2F               	xorlw	47
  9921  00004A  A4D8               	btfss	status,2,c
  9922  00004C  D003               	goto	l12084
  9923  00004E  0100               	movlb	0	; () banked
  9924  000050  4BC5               	infsnz	auto_mount@p& (0+255),f,b
  9925  000052  2BC6               	incf	(auto_mount@p+1)& (0+255),f,b
  9926  000054                     l12084:
  9927                           
  9928                           ;tff.c: 706: *path = p;
  9929  000054  C09C  FFD9         	movff	auto_mount@path,fsr2l
  9930  000058  C09D  FFDA         	movff	auto_mount@path+1,fsr2h
  9931  00005C  C0C5  FFDE         	movff	auto_mount@p,postinc2
  9932  000060  C0C6  FFDD         	movff	auto_mount@p+1,postdec2
  9933                           
  9934                           ;tff.c: 709: fs = FatFs;
  9935  000064  C0FC  F0CD         	movff	_FatFs,auto_mount@fs
  9936  000068  C0FD  F0CE         	movff	_FatFs+1,auto_mount@fs+1
  9937                           
  9938                           ;tff.c: 710: if (!fs) return FR_NOT_ENABLED;
  9939  00006C  0100               	movlb	0	; () banked
  9940  00006E  51CD               	movf	auto_mount@fs& (0+255),w,b
  9941  000070  0100               	movlb	0	; () banked
  9942  000072  11CE               	iorwf	(auto_mount@fs+1)& (0+255),w,b
  9943  000074  A4D8               	btfss	status,2,c
  9944  000076  D002               	goto	l12094
  9945                           
  9946                           ; BSR set to: 0
  9947  000078  0E0A               	movlw	10
  9948                           
  9949                           ; BSR set to: 0
  9950  00007A  0012               	return	
  9951  00007C                     l12094:
  9952                           
  9953                           ; BSR set to: 0
  9954                           ;tff.c: 712: if (fs->fs_type) {
  9955  00007C  0100               	movlb	0	; () banked
  9956  00007E  EE20 F024          	lfsr	2,36
  9957  000082  51CD               	movf	auto_mount@fs& (0+255),w,b
  9958  000084  26D9               	addwf	fsr2l,f,c
  9959  000086  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
  9960  000088  22DA               	addwfc	fsr2h,f,c
  9961  00008A  50DF               	movf	indf2,w,c
  9962  00008C  B4D8               	btfsc	status,2,c
  9963  00008E  D012               	goto	l12112
  9964                           
  9965                           ; BSR set to: 0
  9966                           ;tff.c: 714: stat = 0;
  9967  000090  0E00               	movlw	0
  9968  000092  0100               	movlb	0	; () banked
  9969  000094  6FC7               	movwf	auto_mount@stat& (0+255),b
  9970                           
  9971                           ; BSR set to: 0
  9972                           ;tff.c: 715: if (!(stat & 0x01)) {
  9973  000096  0100               	movlb	0	; () banked
  9974  000098  B1C7               	btfsc	auto_mount@stat& (0+255),0,b
  9975  00009A  D00C               	goto	l12112
  9976                           
  9977                           ; BSR set to: 0
  9978                           ;tff.c: 717: if (chk_wp && (stat & 0x04))
  9979  00009C  0100               	movlb	0	; () banked
  9980  00009E  519E               	movf	auto_mount@chk_wp& (0+255),w,b
  9981  0000A0  0100               	movlb	0	; () banked
  9982  0000A2  B4D8               	btfsc	status,2,c
  9983  0000A4  D005               	goto	l12108
  9984                           
  9985                           ; BSR set to: 0
  9986  0000A6  0100               	movlb	0	; () banked
  9987  0000A8  A5C7               	btfss	auto_mount@stat& (0+255),2,b
  9988  0000AA  D002               	goto	l12108
  9989                           
  9990                           ; BSR set to: 0
  9991                           ;tff.c: 718: return FR_WRITE_PROTECTED;
  9992  0000AC  0E09               	movlw	9
  9993                           
  9994                           ; BSR set to: 0
  9995  0000AE  0012               	return	
  9996  0000B0                     l12108:
  9997                           
  9998                           ; BSR set to: 0
  9999                           ;tff.c: 720: return FR_OK;
 10000  0000B0  0E00               	movlw	0
 10001                           
 10002                           ; BSR set to: 0
 10003  0000B2  0012               	return	
 10004  0000B4                     l12112:
 10005                           
 10006                           ; BSR set to: 0
 10007                           ;tff.c: 721: }
 10008                           ;tff.c: 722: }
 10009                           ;tff.c: 726: memset(fs, 0, sizeof(FATFS));
 10010  0000B4  C0CD  F016         	movff	auto_mount@fs,memset@p1
 10011  0000B8  C0CE  F017         	movff	auto_mount@fs+1,memset@p1+1
 10012  0000BC  0E00               	movlw	0
 10013  0000BE  6E19               	movwf	memset@c+1,c
 10014  0000C0  0E00               	movlw	0
 10015  0000C2  6E18               	movwf	memset@c,c
 10016  0000C4  0E02               	movlw	2
 10017  0000C6  6E1B               	movwf	memset@n+1,c
 10018  0000C8  0E28               	movlw	40
 10019  0000CA  6E1A               	movwf	memset@n,c
 10020  0000CC  EC96  F029         	call	_memset	;wreg free
 10021                           
 10022                           ;tff.c: 727: stat = disk_initialize(0);
 10023  0000D0  0E00               	movlw	0
 10024  0000D2  EC7C  F029         	call	_disk_initialize
 10025  0000D6  0100               	movlb	0	; () banked
 10026  0000D8  6FC7               	movwf	auto_mount@stat& (0+255),b
 10027                           
 10028                           ; BSR set to: 0
 10029                           ;tff.c: 729: if (stat & 0x01)
 10030  0000DA  0100               	movlb	0	; () banked
 10031  0000DC  A1C7               	btfss	auto_mount@stat& (0+255),0,b
 10032  0000DE  D002               	goto	l12122
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;tff.c: 730: return FR_NOT_READY;
 10036  0000E0  0E01               	movlw	1
 10037                           
 10038                           ; BSR set to: 0
 10039  0000E2  0012               	return	
 10040  0000E4                     l12122:
 10041                           
 10042                           ; BSR set to: 0
 10043                           ;tff.c: 732: if (chk_wp && (stat & 0x04))
 10044  0000E4  0100               	movlb	0	; () banked
 10045  0000E6  519E               	movf	auto_mount@chk_wp& (0+255),w,b
 10046  0000E8  0100               	movlb	0	; () banked
 10047  0000EA  B4D8               	btfsc	status,2,c
 10048  0000EC  D005               	goto	l12130
 10049                           
 10050                           ; BSR set to: 0
 10051  0000EE  0100               	movlb	0	; () banked
 10052  0000F0  A5C7               	btfss	auto_mount@stat& (0+255),2,b
 10053  0000F2  D002               	goto	l12130
 10054                           
 10055                           ; BSR set to: 0
 10056                           ;tff.c: 733: return FR_WRITE_PROTECTED;
 10057  0000F4  0E09               	movlw	9
 10058                           
 10059                           ; BSR set to: 0
 10060  0000F6  0012               	return	
 10061  0000F8                     l12130:
 10062                           
 10063                           ; BSR set to: 0
 10064                           ;tff.c: 737: fmt = check_fs(bootsect = 0);
 10065  0000F8  0E00               	movlw	0
 10066  0000FA  0100               	movlb	0	; () banked
 10067  0000FC  6FC1               	movwf	auto_mount@bootsect& (0+255),b
 10068  0000FE  0E00               	movlw	0
 10069  000100  6FC2               	movwf	(auto_mount@bootsect+1)& (0+255),b
 10070  000102  0E00               	movlw	0
 10071  000104  6FC3               	movwf	(auto_mount@bootsect+2)& (0+255),b
 10072  000106  0E00               	movlw	0
 10073  000108  6FC4               	movwf	(auto_mount@bootsect+3)& (0+255),b
 10074  00010A  C0C1  F083         	movff	auto_mount@bootsect,check_fs@sect
 10075  00010E  C0C2  F084         	movff	auto_mount@bootsect+1,check_fs@sect+1
 10076  000112  C0C3  F085         	movff	auto_mount@bootsect+2,check_fs@sect+2
 10077  000116  C0C4  F086         	movff	auto_mount@bootsect+3,check_fs@sect+3
 10078  00011A  EC4D  F014         	call	_check_fs	;wreg free
 10079  00011E  0100               	movlb	0	; () banked
 10080  000120  6FCC               	movwf	auto_mount@fmt& (0+255),b
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;tff.c: 738: posicao_cursor_lcd(1,0);
 10084  000122  0E00               	movlw	0
 10085  000124  6E19               	movwf	posicao_cursor_lcd@coluna,c
 10086  000126  0E01               	movlw	1
 10087  000128  ECD2  F026         	call	_posicao_cursor_lcd
 10088                           
 10089                           ;tff.c: 739: escreve_frase_ram_lcd(" fmt1             ");
 10090  00012C  0ED4               	movlw	low STR_32
 10091  00012E  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 10092  000130  0E60               	movlw	high STR_32
 10093  000132  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 10094  000134  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 10095                           
 10096                           ;tff.c: 740: posicao_cursor_lcd(2,0);
 10097  000138  0E00               	movlw	0
 10098  00013A  6E19               	movwf	posicao_cursor_lcd@coluna,c
 10099  00013C  0E02               	movlw	2
 10100  00013E  ECD2  F026         	call	_posicao_cursor_lcd
 10101                           
 10102                           ;tff.c: 741: escreve_frase_ram_lcd("                  ");
 10103  000142  0EC1               	movlw	low STR_33
 10104  000144  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 10105  000146  0E60               	movlw	high STR_33
 10106  000148  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 10107  00014A  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 10108                           
 10109                           ;tff.c: 742: posicao_cursor_lcd(1,12);
 10110  00014E  0E0C               	movlw	12
 10111  000150  6E19               	movwf	posicao_cursor_lcd@coluna,c
 10112  000152  0E01               	movlw	1
 10113  000154  ECD2  F026         	call	_posicao_cursor_lcd
 10114                           
 10115                           ;tff.c: 743: escreve_inteiro_lcd(fmt);
 10116  000158  C0CC  F02E         	movff	auto_mount@fmt,escreve_inteiro_lcd@valor
 10117  00015C  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 10118  00015E  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 10119                           
 10120                           ;tff.c: 744: _delay((unsigned long)((2000)*(48000000/4000.0)));
 10121  000162  0E7A               	movlw	122
 10122  000164  0100               	movlb	0	; () banked
 10123  000166  6FA0               	movwf	(??_auto_mount+1)& (0+255),b
 10124  000168  0EC1               	movlw	193
 10125  00016A  0100               	movlb	0	; () banked
 10126  00016C  6F9F               	movwf	??_auto_mount& (0+255),b
 10127  00016E  0E81               	movlw	129
 10128  000170                     u16777:
 10129  000170  2EE8               	decfsz	wreg,f,c
 10130  000172  D7FE               	bra	u16777
 10131  000174  2F9F               	decfsz	??_auto_mount& (0+255),f,b
 10132  000176  D7FC               	bra	u16777
 10133  000178  2FA0               	decfsz	(??_auto_mount+1)& (0+255),f,b
 10134  00017A  D7FA               	bra	u16777
 10135  00017C  D000               	nop2	
 10136                           
 10137                           ;tff.c: 745: if (fmt == 1) {
 10138  00017E  0100               	movlb	0	; () banked
 10139  000180  05CC               	decf	auto_mount@fmt& (0+255),w,b
 10140  000182  A4D8               	btfss	status,2,c
 10141  000184  D0D8               	goto	l12166
 10142                           
 10143                           ; BSR set to: 0
 10144                           ;tff.c: 747: if (fs->win[446+4]) {
 10145  000186  0100               	movlb	0	; () banked
 10146  000188  EE21 F0EA          	lfsr	2,490
 10147  00018C  51CD               	movf	auto_mount@fs& (0+255),w,b
 10148  00018E  26D9               	addwf	fsr2l,f,c
 10149  000190  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 10150  000192  22DA               	addwfc	fsr2h,f,c
 10151  000194  50DF               	movf	indf2,w,c
 10152  000196  B4D8               	btfsc	status,2,c
 10153  000198  D0CE               	goto	l12166
 10154                           
 10155                           ; BSR set to: 0
 10156                           ;tff.c: 748: bootsect = (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[446+8])+3)<<24)|((DW
      +                          ORD)*(volatile BYTE*)((&fs->win[446+8])+2)<<16)|((WORD)*(volatile BYTE*)((&fs->win[446+8
      +                          ])+1)<<8)|*(volatile BYTE*)(&fs->win[446+8]));
 10157  00019A  0EEF               	movlw	239
 10158  00019C  0100               	movlb	0	; () banked
 10159  00019E  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10160  0001A0  6ED9               	movwf	fsr2l,c
 10161  0001A2  0E01               	movlw	1
 10162  0001A4  0100               	movlb	0	; () banked
 10163  0001A6  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10164  0001A8  6EDA               	movwf	fsr2h,c
 10165  0001AA  50DF               	movf	indf2,w,c
 10166  0001AC  0100               	movlb	0	; () banked
 10167  0001AE  6F9F               	movwf	??_auto_mount& (0+255),b
 10168  0001B0  0100               	movlb	0	; () banked
 10169  0001B2  519F               	movf	??_auto_mount& (0+255),w,b
 10170  0001B4  0100               	movlb	0	; () banked
 10171  0001B6  6FA1               	movwf	(??_auto_mount+2)& (0+255),b
 10172  0001B8  6BA0               	clrf	(??_auto_mount+1)& (0+255),b
 10173  0001BA  0EF0               	movlw	240
 10174  0001BC  0100               	movlb	0	; () banked
 10175  0001BE  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10176  0001C0  6ED9               	movwf	fsr2l,c
 10177  0001C2  0E01               	movlw	1
 10178  0001C4  0100               	movlb	0	; () banked
 10179  0001C6  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10180  0001C8  6EDA               	movwf	fsr2h,c
 10181  0001CA  50DF               	movf	indf2,w,c
 10182  0001CC  0100               	movlb	0	; () banked
 10183  0001CE  6FA2               	movwf	(??_auto_mount+3)& (0+255),b
 10184  0001D0  C0A2  F0A3         	movff	??_auto_mount+3,??_auto_mount+4
 10185  0001D4  0100               	movlb	0	; () banked
 10186  0001D6  6BA4               	clrf	(??_auto_mount+5)& (0+255),b
 10187  0001D8  6BA5               	clrf	(??_auto_mount+6)& (0+255),b
 10188  0001DA  6BA6               	clrf	(??_auto_mount+7)& (0+255),b
 10189  0001DC  C0A4  F0A6         	movff	??_auto_mount+5,??_auto_mount+7
 10190  0001E0  C0A3  F0A5         	movff	??_auto_mount+4,??_auto_mount+6
 10191  0001E4  0100               	movlb	0	; () banked
 10192  0001E6  6BA4               	clrf	(??_auto_mount+5)& (0+255),b
 10193  0001E8  6BA3               	clrf	(??_auto_mount+4)& (0+255),b
 10194  0001EA  0EF1               	movlw	241
 10195  0001EC  0100               	movlb	0	; () banked
 10196  0001EE  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10197  0001F0  6ED9               	movwf	fsr2l,c
 10198  0001F2  0E01               	movlw	1
 10199  0001F4  0100               	movlb	0	; () banked
 10200  0001F6  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10201  0001F8  6EDA               	movwf	fsr2h,c
 10202  0001FA  50DF               	movf	indf2,w,c
 10203  0001FC  0100               	movlb	0	; () banked
 10204  0001FE  6FA7               	movwf	(??_auto_mount+8)& (0+255),b
 10205  000200  C0A7  F0A8         	movff	??_auto_mount+8,??_auto_mount+9
 10206  000204  0100               	movlb	0	; () banked
 10207  000206  6BA9               	clrf	(??_auto_mount+10)& (0+255),b
 10208  000208  6BAA               	clrf	(??_auto_mount+11)& (0+255),b
 10209  00020A  6BAB               	clrf	(??_auto_mount+12)& (0+255),b
 10210  00020C  C0A8  F0AB         	movff	??_auto_mount+9,??_auto_mount+12
 10211  000210  0100               	movlb	0	; () banked
 10212  000212  6BAA               	clrf	(??_auto_mount+11)& (0+255),b
 10213  000214  6BA9               	clrf	(??_auto_mount+10)& (0+255),b
 10214  000216  6BA8               	clrf	(??_auto_mount+9)& (0+255),b
 10215  000218  0100               	movlb	0	; () banked
 10216  00021A  51A3               	movf	(??_auto_mount+4)& (0+255),w,b
 10217  00021C  0100               	movlb	0	; () banked
 10218  00021E  11A8               	iorwf	(??_auto_mount+9)& (0+255),w,b
 10219  000220  0100               	movlb	0	; () banked
 10220  000222  6FAC               	movwf	(??_auto_mount+13)& (0+255),b
 10221  000224  0100               	movlb	0	; () banked
 10222  000226  51A4               	movf	(??_auto_mount+5)& (0+255),w,b
 10223  000228  0100               	movlb	0	; () banked
 10224  00022A  11A9               	iorwf	(??_auto_mount+10)& (0+255),w,b
 10225  00022C  0100               	movlb	0	; () banked
 10226  00022E  6FAD               	movwf	(??_auto_mount+14)& (0+255),b
 10227  000230  0100               	movlb	0	; () banked
 10228  000232  51A5               	movf	(??_auto_mount+6)& (0+255),w,b
 10229  000234  0100               	movlb	0	; () banked
 10230  000236  11AA               	iorwf	(??_auto_mount+11)& (0+255),w,b
 10231  000238  0100               	movlb	0	; () banked
 10232  00023A  6FAE               	movwf	(??_auto_mount+15)& (0+255),b
 10233  00023C  0100               	movlb	0	; () banked
 10234  00023E  51A6               	movf	(??_auto_mount+7)& (0+255),w,b
 10235  000240  0100               	movlb	0	; () banked
 10236  000242  11AB               	iorwf	(??_auto_mount+12)& (0+255),w,b
 10237  000244  0100               	movlb	0	; () banked
 10238  000246  6FAF               	movwf	(??_auto_mount+16)& (0+255),b
 10239  000248  0100               	movlb	0	; () banked
 10240  00024A  51A0               	movf	(??_auto_mount+1)& (0+255),w,b
 10241  00024C  0100               	movlb	0	; () banked
 10242  00024E  11AC               	iorwf	(??_auto_mount+13)& (0+255),w,b
 10243  000250  0100               	movlb	0	; () banked
 10244  000252  6FB0               	movwf	(??_auto_mount+17)& (0+255),b
 10245  000254  0100               	movlb	0	; () banked
 10246  000256  51A1               	movf	(??_auto_mount+2)& (0+255),w,b
 10247  000258  0100               	movlb	0	; () banked
 10248  00025A  11AD               	iorwf	(??_auto_mount+14)& (0+255),w,b
 10249  00025C  0100               	movlb	0	; () banked
 10250  00025E  6FB1               	movwf	(??_auto_mount+18)& (0+255),b
 10251  000260  0E00               	movlw	0
 10252  000262  0100               	movlb	0	; () banked
 10253  000264  11AE               	iorwf	(??_auto_mount+15)& (0+255),w,b
 10254  000266  0100               	movlb	0	; () banked
 10255  000268  6FB2               	movwf	(??_auto_mount+19)& (0+255),b
 10256  00026A  0E00               	movlw	0
 10257  00026C  0100               	movlb	0	; () banked
 10258  00026E  11AF               	iorwf	(??_auto_mount+16)& (0+255),w,b
 10259  000270  0100               	movlb	0	; () banked
 10260  000272  6FB3               	movwf	(??_auto_mount+20)& (0+255),b
 10261  000274  0EEE               	movlw	238
 10262  000276  0100               	movlb	0	; () banked
 10263  000278  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10264  00027A  6ED9               	movwf	fsr2l,c
 10265  00027C  0E01               	movlw	1
 10266  00027E  0100               	movlb	0	; () banked
 10267  000280  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10268  000282  6EDA               	movwf	fsr2h,c
 10269  000284  50DF               	movf	indf2,w,c
 10270  000286  0100               	movlb	0	; () banked
 10271  000288  6FB4               	movwf	(??_auto_mount+21)& (0+255),b
 10272  00028A  0100               	movlb	0	; () banked
 10273  00028C  51B4               	movf	(??_auto_mount+21)& (0+255),w,b
 10274  00028E  0100               	movlb	0	; () banked
 10275  000290  11B0               	iorwf	(??_auto_mount+17)& (0+255),w,b
 10276  000292  0100               	movlb	0	; () banked
 10277  000294  6FC1               	movwf	auto_mount@bootsect& (0+255),b
 10278  000296  0100               	movlb	0	; () banked
 10279  000298  51B1               	movf	(??_auto_mount+18)& (0+255),w,b
 10280  00029A  0100               	movlb	0	; () banked
 10281  00029C  6FC2               	movwf	(auto_mount@bootsect+1)& (0+255),b
 10282  00029E  0100               	movlb	0	; () banked
 10283  0002A0  51B2               	movf	(??_auto_mount+19)& (0+255),w,b
 10284  0002A2  0100               	movlb	0	; () banked
 10285  0002A4  6FC3               	movwf	(auto_mount@bootsect+2)& (0+255),b
 10286  0002A6  0100               	movlb	0	; () banked
 10287  0002A8  51B3               	movf	(??_auto_mount+20)& (0+255),w,b
 10288  0002AA  0100               	movlb	0	; () banked
 10289  0002AC  6FC4               	movwf	(auto_mount@bootsect+3)& (0+255),b
 10290                           
 10291                           ; BSR set to: 0
 10292                           ;tff.c: 749: fmt = check_fs(bootsect);
 10293  0002AE  C0C1  F083         	movff	auto_mount@bootsect,check_fs@sect
 10294  0002B2  C0C2  F084         	movff	auto_mount@bootsect+1,check_fs@sect+1
 10295  0002B6  C0C3  F085         	movff	auto_mount@bootsect+2,check_fs@sect+2
 10296  0002BA  C0C4  F086         	movff	auto_mount@bootsect+3,check_fs@sect+3
 10297  0002BE  EC4D  F014         	call	_check_fs	;wreg free
 10298  0002C2  0100               	movlb	0	; () banked
 10299  0002C4  6FCC               	movwf	auto_mount@fmt& (0+255),b
 10300                           
 10301                           ; BSR set to: 0
 10302                           ;tff.c: 751: fmt = check_fs(bootsect = 0);
 10303  0002C6  0E00               	movlw	0
 10304  0002C8  0100               	movlb	0	; () banked
 10305  0002CA  6FC1               	movwf	auto_mount@bootsect& (0+255),b
 10306  0002CC  0E00               	movlw	0
 10307  0002CE  6FC2               	movwf	(auto_mount@bootsect+1)& (0+255),b
 10308  0002D0  0E00               	movlw	0
 10309  0002D2  6FC3               	movwf	(auto_mount@bootsect+2)& (0+255),b
 10310  0002D4  0E00               	movlw	0
 10311  0002D6  6FC4               	movwf	(auto_mount@bootsect+3)& (0+255),b
 10312  0002D8  C0C1  F083         	movff	auto_mount@bootsect,check_fs@sect
 10313  0002DC  C0C2  F084         	movff	auto_mount@bootsect+1,check_fs@sect+1
 10314  0002E0  C0C3  F085         	movff	auto_mount@bootsect+2,check_fs@sect+2
 10315  0002E4  C0C4  F086         	movff	auto_mount@bootsect+3,check_fs@sect+3
 10316  0002E8  EC4D  F014         	call	_check_fs	;wreg free
 10317  0002EC  0100               	movlb	0	; () banked
 10318  0002EE  6FCC               	movwf	auto_mount@fmt& (0+255),b
 10319                           
 10320                           ; BSR set to: 0
 10321                           ;tff.c: 752: posicao_cursor_lcd(2,0);
 10322  0002F0  0E00               	movlw	0
 10323  0002F2  6E19               	movwf	posicao_cursor_lcd@coluna,c
 10324  0002F4  0E02               	movlw	2
 10325  0002F6  ECD2  F026         	call	_posicao_cursor_lcd
 10326                           
 10327                           ;tff.c: 753: escreve_frase_ram_lcd(" fmt2             ");
 10328  0002FA  0EE7               	movlw	low STR_34
 10329  0002FC  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 10330  0002FE  0E60               	movlw	high STR_34
 10331  000300  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 10332  000302  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 10333                           
 10334                           ;tff.c: 754: posicao_cursor_lcd(2,12);
 10335  000306  0E0C               	movlw	12
 10336  000308  6E19               	movwf	posicao_cursor_lcd@coluna,c
 10337  00030A  0E02               	movlw	2
 10338  00030C  ECD2  F026         	call	_posicao_cursor_lcd
 10339                           
 10340                           ;tff.c: 755: escreve_inteiro_lcd(fmt);
 10341  000310  C0CC  F02E         	movff	auto_mount@fmt,escreve_inteiro_lcd@valor
 10342  000314  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 10343  000316  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 10344                           
 10345                           ;tff.c: 756: _delay((unsigned long)((1000)*(48000000/4000.0)));
 10346  00031A  0E3D               	movlw	61
 10347  00031C  0100               	movlb	0	; () banked
 10348  00031E  6FA0               	movwf	(??_auto_mount+1)& (0+255),b
 10349  000320  0EE1               	movlw	225
 10350  000322  0100               	movlb	0	; () banked
 10351  000324  6F9F               	movwf	??_auto_mount& (0+255),b
 10352  000326  0E3F               	movlw	63
 10353  000328                     u16787:
 10354  000328  2EE8               	decfsz	wreg,f,c
 10355  00032A  D7FE               	bra	u16787
 10356  00032C  2F9F               	decfsz	??_auto_mount& (0+255),f,b
 10357  00032E  D7FC               	bra	u16787
 10358  000330  2FA0               	decfsz	(??_auto_mount+1)& (0+255),f,b
 10359  000332  D7FA               	bra	u16787
 10360  000334  D000               	nop2	
 10361  000336                     l12166:
 10362                           
 10363                           ;tff.c: 758: }
 10364                           ;tff.c: 759: }
 10365                           ;tff.c: 760: if (fmt || (WORD)(((WORD)*(volatile BYTE*)((&fs->win[11])+1)<<8)|(WORD)*(vo
      +                          latile BYTE*)(&fs->win[11])) != 512)
 10366  000336  0100               	movlb	0	; () banked
 10367  000338  51CC               	movf	auto_mount@fmt& (0+255),w,b
 10368  00033A  0100               	movlb	0	; () banked
 10369  00033C  A4D8               	btfss	status,2,c
 10370  00033E  D028               	goto	l12170
 10371                           
 10372                           ; BSR set to: 0
 10373  000340  0E34               	movlw	52
 10374  000342  0100               	movlb	0	; () banked
 10375  000344  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10376  000346  6ED9               	movwf	fsr2l,c
 10377  000348  0E00               	movlw	0
 10378  00034A  0100               	movlb	0	; () banked
 10379  00034C  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10380  00034E  6EDA               	movwf	fsr2h,c
 10381  000350  50DF               	movf	indf2,w,c
 10382  000352  0100               	movlb	0	; () banked
 10383  000354  6F9F               	movwf	??_auto_mount& (0+255),b
 10384  000356  0100               	movlb	0	; () banked
 10385  000358  519F               	movf	??_auto_mount& (0+255),w,b
 10386  00035A  0100               	movlb	0	; () banked
 10387  00035C  6FA1               	movwf	(??_auto_mount+2)& (0+255),b
 10388  00035E  6BA0               	clrf	(??_auto_mount+1)& (0+255),b
 10389  000360  0E33               	movlw	51
 10390  000362  0100               	movlb	0	; () banked
 10391  000364  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10392  000366  6ED9               	movwf	fsr2l,c
 10393  000368  0E00               	movlw	0
 10394  00036A  0100               	movlb	0	; () banked
 10395  00036C  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10396  00036E  6EDA               	movwf	fsr2h,c
 10397  000370  50DF               	movf	indf2,w,c
 10398  000372  0100               	movlb	0	; () banked
 10399  000374  6FA2               	movwf	(??_auto_mount+3)& (0+255),b
 10400  000376  0100               	movlb	0	; () banked
 10401  000378  51A2               	movf	(??_auto_mount+3)& (0+255),w,b
 10402  00037A  0100               	movlb	0	; () banked
 10403  00037C  13A0               	iorwf	(??_auto_mount+1)& (0+255),f,b
 10404  00037E  0E00               	movlw	0
 10405  000380  13A1               	iorwf	(??_auto_mount+2)& (0+255),f,b
 10406  000382  0E02               	movlw	2
 10407  000384  0100               	movlb	0	; () banked
 10408  000386  19A1               	xorwf	(??_auto_mount+2)& (0+255),w,b
 10409  000388  0100               	movlb	0	; () banked
 10410  00038A  11A0               	iorwf	(??_auto_mount+1)& (0+255),w,b
 10411  00038C  B4D8               	btfsc	status,2,c
 10412  00038E  D002               	goto	l12174
 10413  000390                     l12170:
 10414                           
 10415                           ; BSR set to: 0
 10416                           ;tff.c: 761: return FR_NO_FILESYSTEM;
 10417  000390  0E0B               	movlw	11
 10418                           
 10419                           ; BSR set to: 0
 10420  000392  0012               	return	
 10421  000394                     l12174:
 10422                           
 10423                           ; BSR set to: 0
 10424                           ;tff.c: 764: fatsize = (WORD)(((WORD)*(volatile BYTE*)((&fs->win[22])+1)<<8)|(WORD)*(vol
      +                          atile BYTE*)(&fs->win[22]));
 10425  000394  0E3F               	movlw	63
 10426  000396  0100               	movlb	0	; () banked
 10427  000398  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10428  00039A  6ED9               	movwf	fsr2l,c
 10429  00039C  0E00               	movlw	0
 10430  00039E  0100               	movlb	0	; () banked
 10431  0003A0  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10432  0003A2  6EDA               	movwf	fsr2h,c
 10433  0003A4  50DF               	movf	indf2,w,c
 10434  0003A6  0100               	movlb	0	; () banked
 10435  0003A8  6F9F               	movwf	??_auto_mount& (0+255),b
 10436  0003AA  0100               	movlb	0	; () banked
 10437  0003AC  519F               	movf	??_auto_mount& (0+255),w,b
 10438  0003AE  0100               	movlb	0	; () banked
 10439  0003B0  6FA1               	movwf	(??_auto_mount+2)& (0+255),b
 10440  0003B2  6BA0               	clrf	(??_auto_mount+1)& (0+255),b
 10441  0003B4  0E3E               	movlw	62
 10442  0003B6  0100               	movlb	0	; () banked
 10443  0003B8  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10444  0003BA  6ED9               	movwf	fsr2l,c
 10445  0003BC  0E00               	movlw	0
 10446  0003BE  0100               	movlb	0	; () banked
 10447  0003C0  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10448  0003C2  6EDA               	movwf	fsr2h,c
 10449  0003C4  50DF               	movf	indf2,w,c
 10450  0003C6  0100               	movlb	0	; () banked
 10451  0003C8  6FA2               	movwf	(??_auto_mount+3)& (0+255),b
 10452  0003CA  0100               	movlb	0	; () banked
 10453  0003CC  51A2               	movf	(??_auto_mount+3)& (0+255),w,b
 10454  0003CE  0100               	movlb	0	; () banked
 10455  0003D0  13A0               	iorwf	(??_auto_mount+1)& (0+255),f,b
 10456  0003D2  0E00               	movlw	0
 10457  0003D4  13A1               	iorwf	(??_auto_mount+2)& (0+255),f,b
 10458  0003D6  C0A0  F0C8         	movff	??_auto_mount+1,auto_mount@fatsize
 10459  0003DA  C0A1  F0C9         	movff	??_auto_mount+2,auto_mount@fatsize+1
 10460  0003DE  0100               	movlb	0	; () banked
 10461  0003E0  6BCA               	clrf	(auto_mount@fatsize+2)& (0+255),b
 10462  0003E2  6BCB               	clrf	(auto_mount@fatsize+3)& (0+255),b
 10463                           
 10464                           ; BSR set to: 0
 10465                           ;tff.c: 765: if (!fatsize) fatsize = (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[36])+3)
      +                          <<24)|((DWORD)*(volatile BYTE*)((&fs->win[36])+2)<<16)|((WORD)*(volatile BYTE*)((&fs->wi
      +                          n[36])+1)<<8)|*(volatile BYTE*)(&fs->win[36]));
 10466  0003E4  0100               	movlb	0	; () banked
 10467  0003E6  51C8               	movf	auto_mount@fatsize& (0+255),w,b
 10468  0003E8  0100               	movlb	0	; () banked
 10469  0003EA  11C9               	iorwf	(auto_mount@fatsize+1)& (0+255),w,b
 10470  0003EC  0100               	movlb	0	; () banked
 10471  0003EE  11CA               	iorwf	(auto_mount@fatsize+2)& (0+255),w,b
 10472  0003F0  0100               	movlb	0	; () banked
 10473  0003F2  11CB               	iorwf	(auto_mount@fatsize+3)& (0+255),w,b
 10474  0003F4  A4D8               	btfss	status,2,c
 10475  0003F6  D08A               	goto	l803
 10476                           
 10477                           ; BSR set to: 0
 10478  0003F8  0E4D               	movlw	77
 10479  0003FA  0100               	movlb	0	; () banked
 10480  0003FC  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10481  0003FE  6ED9               	movwf	fsr2l,c
 10482  000400  0E00               	movlw	0
 10483  000402  0100               	movlb	0	; () banked
 10484  000404  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10485  000406  6EDA               	movwf	fsr2h,c
 10486  000408  50DF               	movf	indf2,w,c
 10487  00040A  0100               	movlb	0	; () banked
 10488  00040C  6F9F               	movwf	??_auto_mount& (0+255),b
 10489  00040E  0100               	movlb	0	; () banked
 10490  000410  519F               	movf	??_auto_mount& (0+255),w,b
 10491  000412  0100               	movlb	0	; () banked
 10492  000414  6FA1               	movwf	(??_auto_mount+2)& (0+255),b
 10493  000416  6BA0               	clrf	(??_auto_mount+1)& (0+255),b
 10494  000418  0E4E               	movlw	78
 10495  00041A  0100               	movlb	0	; () banked
 10496  00041C  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10497  00041E  6ED9               	movwf	fsr2l,c
 10498  000420  0E00               	movlw	0
 10499  000422  0100               	movlb	0	; () banked
 10500  000424  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10501  000426  6EDA               	movwf	fsr2h,c
 10502  000428  50DF               	movf	indf2,w,c
 10503  00042A  0100               	movlb	0	; () banked
 10504  00042C  6FA2               	movwf	(??_auto_mount+3)& (0+255),b
 10505  00042E  C0A2  F0A3         	movff	??_auto_mount+3,??_auto_mount+4
 10506  000432  0100               	movlb	0	; () banked
 10507  000434  6BA4               	clrf	(??_auto_mount+5)& (0+255),b
 10508  000436  6BA5               	clrf	(??_auto_mount+6)& (0+255),b
 10509  000438  6BA6               	clrf	(??_auto_mount+7)& (0+255),b
 10510  00043A  C0A4  F0A6         	movff	??_auto_mount+5,??_auto_mount+7
 10511  00043E  C0A3  F0A5         	movff	??_auto_mount+4,??_auto_mount+6
 10512  000442  0100               	movlb	0	; () banked
 10513  000444  6BA4               	clrf	(??_auto_mount+5)& (0+255),b
 10514  000446  6BA3               	clrf	(??_auto_mount+4)& (0+255),b
 10515  000448  0E4F               	movlw	79
 10516  00044A  0100               	movlb	0	; () banked
 10517  00044C  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10518  00044E  6ED9               	movwf	fsr2l,c
 10519  000450  0E00               	movlw	0
 10520  000452  0100               	movlb	0	; () banked
 10521  000454  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10522  000456  6EDA               	movwf	fsr2h,c
 10523  000458  50DF               	movf	indf2,w,c
 10524  00045A  0100               	movlb	0	; () banked
 10525  00045C  6FA7               	movwf	(??_auto_mount+8)& (0+255),b
 10526  00045E  C0A7  F0A8         	movff	??_auto_mount+8,??_auto_mount+9
 10527  000462  0100               	movlb	0	; () banked
 10528  000464  6BA9               	clrf	(??_auto_mount+10)& (0+255),b
 10529  000466  6BAA               	clrf	(??_auto_mount+11)& (0+255),b
 10530  000468  6BAB               	clrf	(??_auto_mount+12)& (0+255),b
 10531  00046A  C0A8  F0AB         	movff	??_auto_mount+9,??_auto_mount+12
 10532  00046E  0100               	movlb	0	; () banked
 10533  000470  6BAA               	clrf	(??_auto_mount+11)& (0+255),b
 10534  000472  6BA9               	clrf	(??_auto_mount+10)& (0+255),b
 10535  000474  6BA8               	clrf	(??_auto_mount+9)& (0+255),b
 10536  000476  0100               	movlb	0	; () banked
 10537  000478  51A3               	movf	(??_auto_mount+4)& (0+255),w,b
 10538  00047A  0100               	movlb	0	; () banked
 10539  00047C  11A8               	iorwf	(??_auto_mount+9)& (0+255),w,b
 10540  00047E  0100               	movlb	0	; () banked
 10541  000480  6FAC               	movwf	(??_auto_mount+13)& (0+255),b
 10542  000482  0100               	movlb	0	; () banked
 10543  000484  51A4               	movf	(??_auto_mount+5)& (0+255),w,b
 10544  000486  0100               	movlb	0	; () banked
 10545  000488  11A9               	iorwf	(??_auto_mount+10)& (0+255),w,b
 10546  00048A  0100               	movlb	0	; () banked
 10547  00048C  6FAD               	movwf	(??_auto_mount+14)& (0+255),b
 10548  00048E  0100               	movlb	0	; () banked
 10549  000490  51A5               	movf	(??_auto_mount+6)& (0+255),w,b
 10550  000492  0100               	movlb	0	; () banked
 10551  000494  11AA               	iorwf	(??_auto_mount+11)& (0+255),w,b
 10552  000496  0100               	movlb	0	; () banked
 10553  000498  6FAE               	movwf	(??_auto_mount+15)& (0+255),b
 10554  00049A  0100               	movlb	0	; () banked
 10555  00049C  51A6               	movf	(??_auto_mount+7)& (0+255),w,b
 10556  00049E  0100               	movlb	0	; () banked
 10557  0004A0  11AB               	iorwf	(??_auto_mount+12)& (0+255),w,b
 10558  0004A2  0100               	movlb	0	; () banked
 10559  0004A4  6FAF               	movwf	(??_auto_mount+16)& (0+255),b
 10560  0004A6  0100               	movlb	0	; () banked
 10561  0004A8  51A0               	movf	(??_auto_mount+1)& (0+255),w,b
 10562  0004AA  0100               	movlb	0	; () banked
 10563  0004AC  11AC               	iorwf	(??_auto_mount+13)& (0+255),w,b
 10564  0004AE  0100               	movlb	0	; () banked
 10565  0004B0  6FB0               	movwf	(??_auto_mount+17)& (0+255),b
 10566  0004B2  0100               	movlb	0	; () banked
 10567  0004B4  51A1               	movf	(??_auto_mount+2)& (0+255),w,b
 10568  0004B6  0100               	movlb	0	; () banked
 10569  0004B8  11AD               	iorwf	(??_auto_mount+14)& (0+255),w,b
 10570  0004BA  0100               	movlb	0	; () banked
 10571  0004BC  6FB1               	movwf	(??_auto_mount+18)& (0+255),b
 10572  0004BE  0E00               	movlw	0
 10573  0004C0  0100               	movlb	0	; () banked
 10574  0004C2  11AE               	iorwf	(??_auto_mount+15)& (0+255),w,b
 10575  0004C4  0100               	movlb	0	; () banked
 10576  0004C6  6FB2               	movwf	(??_auto_mount+19)& (0+255),b
 10577  0004C8  0E00               	movlw	0
 10578  0004CA  0100               	movlb	0	; () banked
 10579  0004CC  11AF               	iorwf	(??_auto_mount+16)& (0+255),w,b
 10580  0004CE  0100               	movlb	0	; () banked
 10581  0004D0  6FB3               	movwf	(??_auto_mount+20)& (0+255),b
 10582  0004D2  0E4C               	movlw	76
 10583  0004D4  0100               	movlb	0	; () banked
 10584  0004D6  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10585  0004D8  6ED9               	movwf	fsr2l,c
 10586  0004DA  0E00               	movlw	0
 10587  0004DC  0100               	movlb	0	; () banked
 10588  0004DE  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10589  0004E0  6EDA               	movwf	fsr2h,c
 10590  0004E2  50DF               	movf	indf2,w,c
 10591  0004E4  0100               	movlb	0	; () banked
 10592  0004E6  6FB4               	movwf	(??_auto_mount+21)& (0+255),b
 10593  0004E8  0100               	movlb	0	; () banked
 10594  0004EA  51B4               	movf	(??_auto_mount+21)& (0+255),w,b
 10595  0004EC  0100               	movlb	0	; () banked
 10596  0004EE  11B0               	iorwf	(??_auto_mount+17)& (0+255),w,b
 10597  0004F0  0100               	movlb	0	; () banked
 10598  0004F2  6FC8               	movwf	auto_mount@fatsize& (0+255),b
 10599  0004F4  0100               	movlb	0	; () banked
 10600  0004F6  51B1               	movf	(??_auto_mount+18)& (0+255),w,b
 10601  0004F8  0100               	movlb	0	; () banked
 10602  0004FA  6FC9               	movwf	(auto_mount@fatsize+1)& (0+255),b
 10603  0004FC  0100               	movlb	0	; () banked
 10604  0004FE  51B2               	movf	(??_auto_mount+19)& (0+255),w,b
 10605  000500  0100               	movlb	0	; () banked
 10606  000502  6FCA               	movwf	(auto_mount@fatsize+2)& (0+255),b
 10607  000504  0100               	movlb	0	; () banked
 10608  000506  51B3               	movf	(??_auto_mount+20)& (0+255),w,b
 10609  000508  0100               	movlb	0	; () banked
 10610  00050A  6FCB               	movwf	(auto_mount@fatsize+3)& (0+255),b
 10611  00050C                     l803:
 10612                           
 10613                           ; BSR set to: 0
 10614                           ;tff.c: 766: fs->sects_fat = (CLUST)fatsize;
 10615  00050C  0100               	movlb	0	; () banked
 10616  00050E  EE20 F014          	lfsr	2,20
 10617  000512  51CD               	movf	auto_mount@fs& (0+255),w,b
 10618  000514  26D9               	addwf	fsr2l,f,c
 10619  000516  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 10620  000518  22DA               	addwfc	fsr2h,f,c
 10621  00051A  C0C8  FFDE         	movff	auto_mount@fatsize,postinc2
 10622  00051E  C0C9  FFDE         	movff	auto_mount@fatsize+1,postinc2
 10623  000522  C0CA  FFDE         	movff	auto_mount@fatsize+2,postinc2
 10624  000526  C0CB  FFDE         	movff	auto_mount@fatsize+3,postinc2
 10625                           
 10626                           ; BSR set to: 0
 10627                           ;tff.c: 767: fs->n_fats = fs->win[16];
 10628  00052A  0100               	movlb	0	; () banked
 10629  00052C  EE20 F038          	lfsr	2,56
 10630  000530  51CD               	movf	auto_mount@fs& (0+255),w,b
 10631  000532  26D9               	addwf	fsr2l,f,c
 10632  000534  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 10633  000536  22DA               	addwfc	fsr2h,f,c
 10634  000538  0100               	movlb	0	; () banked
 10635  00053A  EE10 F026          	lfsr	1,38
 10636  00053E  51CD               	movf	auto_mount@fs& (0+255),w,b
 10637  000540  26E1               	addwf	fsr1l,f,c
 10638  000542  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 10639  000544  22E2               	addwfc	fsr1h,f,c
 10640  000546  CFDF FFE7          	movff	indf2,indf1
 10641                           
 10642                           ; BSR set to: 0
 10643                           ;tff.c: 768: fatsize *= fs->n_fats;
 10644  00054A  C0C8  F016         	movff	auto_mount@fatsize,___lmul@multiplier
 10645  00054E  C0C9  F017         	movff	auto_mount@fatsize+1,___lmul@multiplier+1
 10646  000552  C0CA  F018         	movff	auto_mount@fatsize+2,___lmul@multiplier+2
 10647  000556  C0CB  F019         	movff	auto_mount@fatsize+3,___lmul@multiplier+3
 10648  00055A  0100               	movlb	0	; () banked
 10649  00055C  EE20 F026          	lfsr	2,38
 10650  000560  51CD               	movf	auto_mount@fs& (0+255),w,b
 10651  000562  26D9               	addwf	fsr2l,f,c
 10652  000564  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 10653  000566  22DA               	addwfc	fsr2h,f,c
 10654  000568  50DF               	movf	indf2,w,c
 10655  00056A  0100               	movlb	0	; () banked
 10656  00056C  6F9F               	movwf	??_auto_mount& (0+255),b
 10657  00056E  0100               	movlb	0	; () banked
 10658  000570  519F               	movf	??_auto_mount& (0+255),w,b
 10659  000572  6E1A               	movwf	___lmul@multiplicand,c
 10660  000574  6A1B               	clrf	___lmul@multiplicand+1,c
 10661  000576  6A1C               	clrf	___lmul@multiplicand+2,c
 10662  000578  6A1D               	clrf	___lmul@multiplicand+3,c
 10663  00057A  EC9A  F027         	call	___lmul	;wreg free
 10664  00057E  C016  F0C8         	movff	?___lmul,auto_mount@fatsize
 10665  000582  C017  F0C9         	movff	?___lmul+1,auto_mount@fatsize+1
 10666  000586  C018  F0CA         	movff	?___lmul+2,auto_mount@fatsize+2
 10667  00058A  C019  F0CB         	movff	?___lmul+3,auto_mount@fatsize+3
 10668                           
 10669                           ;tff.c: 769: fs->fatbase = bootsect + (WORD)(((WORD)*(volatile BYTE*)((&fs->win[14])+1)<
      +                          <8)|(WORD)*(volatile BYTE*)(&fs->win[14]));
 10670  00058E  0E37               	movlw	55
 10671  000590  0100               	movlb	0	; () banked
 10672  000592  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10673  000594  6ED9               	movwf	fsr2l,c
 10674  000596  0E00               	movlw	0
 10675  000598  0100               	movlb	0	; () banked
 10676  00059A  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10677  00059C  6EDA               	movwf	fsr2h,c
 10678  00059E  50DF               	movf	indf2,w,c
 10679  0005A0  0100               	movlb	0	; () banked
 10680  0005A2  6F9F               	movwf	??_auto_mount& (0+255),b
 10681  0005A4  0100               	movlb	0	; () banked
 10682  0005A6  519F               	movf	??_auto_mount& (0+255),w,b
 10683  0005A8  0100               	movlb	0	; () banked
 10684  0005AA  6FA1               	movwf	(??_auto_mount+2)& (0+255),b
 10685  0005AC  6BA0               	clrf	(??_auto_mount+1)& (0+255),b
 10686  0005AE  0E36               	movlw	54
 10687  0005B0  0100               	movlb	0	; () banked
 10688  0005B2  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10689  0005B4  6ED9               	movwf	fsr2l,c
 10690  0005B6  0E00               	movlw	0
 10691  0005B8  0100               	movlb	0	; () banked
 10692  0005BA  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10693  0005BC  6EDA               	movwf	fsr2h,c
 10694  0005BE  50DF               	movf	indf2,w,c
 10695  0005C0  0100               	movlb	0	; () banked
 10696  0005C2  6FA2               	movwf	(??_auto_mount+3)& (0+255),b
 10697  0005C4  0100               	movlb	0	; () banked
 10698  0005C6  51A2               	movf	(??_auto_mount+3)& (0+255),w,b
 10699  0005C8  0100               	movlb	0	; () banked
 10700  0005CA  13A0               	iorwf	(??_auto_mount+1)& (0+255),f,b
 10701  0005CC  0E00               	movlw	0
 10702  0005CE  13A1               	iorwf	(??_auto_mount+2)& (0+255),f,b
 10703  0005D0  0100               	movlb	0	; () banked
 10704  0005D2  51A0               	movf	(??_auto_mount+1)& (0+255),w,b
 10705  0005D4  0100               	movlb	0	; () banked
 10706  0005D6  25C1               	addwf	auto_mount@bootsect& (0+255),w,b
 10707  0005D8  0100               	movlb	0	; () banked
 10708  0005DA  6FA3               	movwf	(??_auto_mount+4)& (0+255),b
 10709  0005DC  0100               	movlb	0	; () banked
 10710  0005DE  51A1               	movf	(??_auto_mount+2)& (0+255),w,b
 10711  0005E0  0100               	movlb	0	; () banked
 10712  0005E2  21C2               	addwfc	(auto_mount@bootsect+1)& (0+255),w,b
 10713  0005E4  0100               	movlb	0	; () banked
 10714  0005E6  6FA4               	movwf	(??_auto_mount+5)& (0+255),b
 10715  0005E8  0E00               	movlw	0
 10716  0005EA  0100               	movlb	0	; () banked
 10717  0005EC  21C3               	addwfc	(auto_mount@bootsect+2)& (0+255),w,b
 10718  0005EE  0100               	movlb	0	; () banked
 10719  0005F0  6FA5               	movwf	(??_auto_mount+6)& (0+255),b
 10720  0005F2  0E00               	movlw	0
 10721  0005F4  0100               	movlb	0	; () banked
 10722  0005F6  21C4               	addwfc	(auto_mount@bootsect+3)& (0+255),w,b
 10723  0005F8  0100               	movlb	0	; () banked
 10724  0005FA  6FA6               	movwf	(??_auto_mount+7)& (0+255),b
 10725  0005FC  0100               	movlb	0	; () banked
 10726  0005FE  EE20 F008          	lfsr	2,8
 10727  000602  51CD               	movf	auto_mount@fs& (0+255),w,b
 10728  000604  26D9               	addwf	fsr2l,f,c
 10729  000606  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 10730  000608  22DA               	addwfc	fsr2h,f,c
 10731  00060A  C0A3  FFDE         	movff	??_auto_mount+4,postinc2
 10732  00060E  C0A4  FFDE         	movff	??_auto_mount+5,postinc2
 10733  000612  C0A5  FFDE         	movff	??_auto_mount+6,postinc2
 10734  000616  C0A6  FFDE         	movff	??_auto_mount+7,postinc2
 10735                           
 10736                           ; BSR set to: 0
 10737                           ;tff.c: 770: fs->csize = fs->win[13];
 10738  00061A  0100               	movlb	0	; () banked
 10739  00061C  EE20 F035          	lfsr	2,53
 10740  000620  51CD               	movf	auto_mount@fs& (0+255),w,b
 10741  000622  26D9               	addwf	fsr2l,f,c
 10742  000624  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 10743  000626  22DA               	addwfc	fsr2h,f,c
 10744  000628  0100               	movlb	0	; () banked
 10745  00062A  EE10 F025          	lfsr	1,37
 10746  00062E  51CD               	movf	auto_mount@fs& (0+255),w,b
 10747  000630  26E1               	addwf	fsr1l,f,c
 10748  000632  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 10749  000634  22E2               	addwfc	fsr1h,f,c
 10750  000636  CFDF FFE7          	movff	indf2,indf1
 10751                           
 10752                           ; BSR set to: 0
 10753                           ;tff.c: 771: fs->n_rootdir = (WORD)(((WORD)*(volatile BYTE*)((&fs->win[17])+1)<<8)|(WORD
      +                          )*(volatile BYTE*)(&fs->win[17]));
 10754  00063A  0E3A               	movlw	58
 10755  00063C  0100               	movlb	0	; () banked
 10756  00063E  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10757  000640  6ED9               	movwf	fsr2l,c
 10758  000642  0E00               	movlw	0
 10759  000644  0100               	movlb	0	; () banked
 10760  000646  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10761  000648  6EDA               	movwf	fsr2h,c
 10762  00064A  50DF               	movf	indf2,w,c
 10763  00064C  0100               	movlb	0	; () banked
 10764  00064E  6F9F               	movwf	??_auto_mount& (0+255),b
 10765  000650  0100               	movlb	0	; () banked
 10766  000652  519F               	movf	??_auto_mount& (0+255),w,b
 10767  000654  0100               	movlb	0	; () banked
 10768  000656  6FA1               	movwf	(??_auto_mount+2)& (0+255),b
 10769  000658  6BA0               	clrf	(??_auto_mount+1)& (0+255),b
 10770  00065A  0E39               	movlw	57
 10771  00065C  0100               	movlb	0	; () banked
 10772  00065E  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10773  000660  6ED9               	movwf	fsr2l,c
 10774  000662  0E00               	movlw	0
 10775  000664  0100               	movlb	0	; () banked
 10776  000666  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10777  000668  6EDA               	movwf	fsr2h,c
 10778  00066A  50DF               	movf	indf2,w,c
 10779  00066C  0100               	movlb	0	; () banked
 10780  00066E  6FA2               	movwf	(??_auto_mount+3)& (0+255),b
 10781  000670  0100               	movlb	0	; () banked
 10782  000672  51A2               	movf	(??_auto_mount+3)& (0+255),w,b
 10783  000674  0100               	movlb	0	; () banked
 10784  000676  13A0               	iorwf	(??_auto_mount+1)& (0+255),f,b
 10785  000678  0E00               	movlw	0
 10786  00067A  13A1               	iorwf	(??_auto_mount+2)& (0+255),f,b
 10787  00067C  0100               	movlb	0	; () banked
 10788  00067E  EE20 F002          	lfsr	2,2
 10789  000682  51CD               	movf	auto_mount@fs& (0+255),w,b
 10790  000684  26D9               	addwf	fsr2l,f,c
 10791  000686  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 10792  000688  22DA               	addwfc	fsr2h,f,c
 10793  00068A  C0A0  FFDE         	movff	??_auto_mount+1,postinc2
 10794  00068E  C0A1  FFDD         	movff	??_auto_mount+2,postdec2
 10795                           
 10796                           ; BSR set to: 0
 10797                           ;tff.c: 772: totalsect = (WORD)(((WORD)*(volatile BYTE*)((&fs->win[19])+1)<<8)|(WORD)*(v
      +                          olatile BYTE*)(&fs->win[19]));
 10798  000692  0E3C               	movlw	60
 10799  000694  0100               	movlb	0	; () banked
 10800  000696  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10801  000698  6ED9               	movwf	fsr2l,c
 10802  00069A  0E00               	movlw	0
 10803  00069C  0100               	movlb	0	; () banked
 10804  00069E  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10805  0006A0  6EDA               	movwf	fsr2h,c
 10806  0006A2  50DF               	movf	indf2,w,c
 10807  0006A4  0100               	movlb	0	; () banked
 10808  0006A6  6F9F               	movwf	??_auto_mount& (0+255),b
 10809  0006A8  0100               	movlb	0	; () banked
 10810  0006AA  519F               	movf	??_auto_mount& (0+255),w,b
 10811  0006AC  0100               	movlb	0	; () banked
 10812  0006AE  6FA1               	movwf	(??_auto_mount+2)& (0+255),b
 10813  0006B0  6BA0               	clrf	(??_auto_mount+1)& (0+255),b
 10814  0006B2  0E3B               	movlw	59
 10815  0006B4  0100               	movlb	0	; () banked
 10816  0006B6  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10817  0006B8  6ED9               	movwf	fsr2l,c
 10818  0006BA  0E00               	movlw	0
 10819  0006BC  0100               	movlb	0	; () banked
 10820  0006BE  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10821  0006C0  6EDA               	movwf	fsr2h,c
 10822  0006C2  50DF               	movf	indf2,w,c
 10823  0006C4  0100               	movlb	0	; () banked
 10824  0006C6  6FA2               	movwf	(??_auto_mount+3)& (0+255),b
 10825  0006C8  0100               	movlb	0	; () banked
 10826  0006CA  51A2               	movf	(??_auto_mount+3)& (0+255),w,b
 10827  0006CC  0100               	movlb	0	; () banked
 10828  0006CE  13A0               	iorwf	(??_auto_mount+1)& (0+255),f,b
 10829  0006D0  0E00               	movlw	0
 10830  0006D2  13A1               	iorwf	(??_auto_mount+2)& (0+255),f,b
 10831  0006D4  C0A0  F0BD         	movff	??_auto_mount+1,auto_mount@totalsect
 10832  0006D8  C0A1  F0BE         	movff	??_auto_mount+2,auto_mount@totalsect+1
 10833  0006DC  0100               	movlb	0	; () banked
 10834  0006DE  6BBF               	clrf	(auto_mount@totalsect+2)& (0+255),b
 10835  0006E0  6BC0               	clrf	(auto_mount@totalsect+3)& (0+255),b
 10836                           
 10837                           ; BSR set to: 0
 10838                           ;tff.c: 773: if (!totalsect) totalsect = (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[32]
      +                          )+3)<<24)|((DWORD)*(volatile BYTE*)((&fs->win[32])+2)<<16)|((WORD)*(volatile BYTE*)((&fs
      +                          ->win[32])+1)<<8)|*(volatile BYTE*)(&fs->win[32]));
 10839  0006E2  0100               	movlb	0	; () banked
 10840  0006E4  51BD               	movf	auto_mount@totalsect& (0+255),w,b
 10841  0006E6  0100               	movlb	0	; () banked
 10842  0006E8  11BE               	iorwf	(auto_mount@totalsect+1)& (0+255),w,b
 10843  0006EA  0100               	movlb	0	; () banked
 10844  0006EC  11BF               	iorwf	(auto_mount@totalsect+2)& (0+255),w,b
 10845  0006EE  0100               	movlb	0	; () banked
 10846  0006F0  11C0               	iorwf	(auto_mount@totalsect+3)& (0+255),w,b
 10847  0006F2  A4D8               	btfss	status,2,c
 10848  0006F4  D08A               	goto	l12196
 10849                           
 10850                           ; BSR set to: 0
 10851  0006F6  0E49               	movlw	73
 10852  0006F8  0100               	movlb	0	; () banked
 10853  0006FA  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10854  0006FC  6ED9               	movwf	fsr2l,c
 10855  0006FE  0E00               	movlw	0
 10856  000700  0100               	movlb	0	; () banked
 10857  000702  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10858  000704  6EDA               	movwf	fsr2h,c
 10859  000706  50DF               	movf	indf2,w,c
 10860  000708  0100               	movlb	0	; () banked
 10861  00070A  6F9F               	movwf	??_auto_mount& (0+255),b
 10862  00070C  0100               	movlb	0	; () banked
 10863  00070E  519F               	movf	??_auto_mount& (0+255),w,b
 10864  000710  0100               	movlb	0	; () banked
 10865  000712  6FA1               	movwf	(??_auto_mount+2)& (0+255),b
 10866  000714  6BA0               	clrf	(??_auto_mount+1)& (0+255),b
 10867  000716  0E4A               	movlw	74
 10868  000718  0100               	movlb	0	; () banked
 10869  00071A  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10870  00071C  6ED9               	movwf	fsr2l,c
 10871  00071E  0E00               	movlw	0
 10872  000720  0100               	movlb	0	; () banked
 10873  000722  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10874  000724  6EDA               	movwf	fsr2h,c
 10875  000726  50DF               	movf	indf2,w,c
 10876  000728  0100               	movlb	0	; () banked
 10877  00072A  6FA2               	movwf	(??_auto_mount+3)& (0+255),b
 10878  00072C  C0A2  F0A3         	movff	??_auto_mount+3,??_auto_mount+4
 10879  000730  0100               	movlb	0	; () banked
 10880  000732  6BA4               	clrf	(??_auto_mount+5)& (0+255),b
 10881  000734  6BA5               	clrf	(??_auto_mount+6)& (0+255),b
 10882  000736  6BA6               	clrf	(??_auto_mount+7)& (0+255),b
 10883  000738  C0A4  F0A6         	movff	??_auto_mount+5,??_auto_mount+7
 10884  00073C  C0A3  F0A5         	movff	??_auto_mount+4,??_auto_mount+6
 10885  000740  0100               	movlb	0	; () banked
 10886  000742  6BA4               	clrf	(??_auto_mount+5)& (0+255),b
 10887  000744  6BA3               	clrf	(??_auto_mount+4)& (0+255),b
 10888  000746  0E4B               	movlw	75
 10889  000748  0100               	movlb	0	; () banked
 10890  00074A  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10891  00074C  6ED9               	movwf	fsr2l,c
 10892  00074E  0E00               	movlw	0
 10893  000750  0100               	movlb	0	; () banked
 10894  000752  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10895  000754  6EDA               	movwf	fsr2h,c
 10896  000756  50DF               	movf	indf2,w,c
 10897  000758  0100               	movlb	0	; () banked
 10898  00075A  6FA7               	movwf	(??_auto_mount+8)& (0+255),b
 10899  00075C  C0A7  F0A8         	movff	??_auto_mount+8,??_auto_mount+9
 10900  000760  0100               	movlb	0	; () banked
 10901  000762  6BA9               	clrf	(??_auto_mount+10)& (0+255),b
 10902  000764  6BAA               	clrf	(??_auto_mount+11)& (0+255),b
 10903  000766  6BAB               	clrf	(??_auto_mount+12)& (0+255),b
 10904  000768  C0A8  F0AB         	movff	??_auto_mount+9,??_auto_mount+12
 10905  00076C  0100               	movlb	0	; () banked
 10906  00076E  6BAA               	clrf	(??_auto_mount+11)& (0+255),b
 10907  000770  6BA9               	clrf	(??_auto_mount+10)& (0+255),b
 10908  000772  6BA8               	clrf	(??_auto_mount+9)& (0+255),b
 10909  000774  0100               	movlb	0	; () banked
 10910  000776  51A3               	movf	(??_auto_mount+4)& (0+255),w,b
 10911  000778  0100               	movlb	0	; () banked
 10912  00077A  11A8               	iorwf	(??_auto_mount+9)& (0+255),w,b
 10913  00077C  0100               	movlb	0	; () banked
 10914  00077E  6FAC               	movwf	(??_auto_mount+13)& (0+255),b
 10915  000780  0100               	movlb	0	; () banked
 10916  000782  51A4               	movf	(??_auto_mount+5)& (0+255),w,b
 10917  000784  0100               	movlb	0	; () banked
 10918  000786  11A9               	iorwf	(??_auto_mount+10)& (0+255),w,b
 10919  000788  0100               	movlb	0	; () banked
 10920  00078A  6FAD               	movwf	(??_auto_mount+14)& (0+255),b
 10921  00078C  0100               	movlb	0	; () banked
 10922  00078E  51A5               	movf	(??_auto_mount+6)& (0+255),w,b
 10923  000790  0100               	movlb	0	; () banked
 10924  000792  11AA               	iorwf	(??_auto_mount+11)& (0+255),w,b
 10925  000794  0100               	movlb	0	; () banked
 10926  000796  6FAE               	movwf	(??_auto_mount+15)& (0+255),b
 10927  000798  0100               	movlb	0	; () banked
 10928  00079A  51A6               	movf	(??_auto_mount+7)& (0+255),w,b
 10929  00079C  0100               	movlb	0	; () banked
 10930  00079E  11AB               	iorwf	(??_auto_mount+12)& (0+255),w,b
 10931  0007A0  0100               	movlb	0	; () banked
 10932  0007A2  6FAF               	movwf	(??_auto_mount+16)& (0+255),b
 10933  0007A4  0100               	movlb	0	; () banked
 10934  0007A6  51A0               	movf	(??_auto_mount+1)& (0+255),w,b
 10935  0007A8  0100               	movlb	0	; () banked
 10936  0007AA  11AC               	iorwf	(??_auto_mount+13)& (0+255),w,b
 10937  0007AC  0100               	movlb	0	; () banked
 10938  0007AE  6FB0               	movwf	(??_auto_mount+17)& (0+255),b
 10939  0007B0  0100               	movlb	0	; () banked
 10940  0007B2  51A1               	movf	(??_auto_mount+2)& (0+255),w,b
 10941  0007B4  0100               	movlb	0	; () banked
 10942  0007B6  11AD               	iorwf	(??_auto_mount+14)& (0+255),w,b
 10943  0007B8  0100               	movlb	0	; () banked
 10944  0007BA  6FB1               	movwf	(??_auto_mount+18)& (0+255),b
 10945  0007BC  0E00               	movlw	0
 10946  0007BE  0100               	movlb	0	; () banked
 10947  0007C0  11AE               	iorwf	(??_auto_mount+15)& (0+255),w,b
 10948  0007C2  0100               	movlb	0	; () banked
 10949  0007C4  6FB2               	movwf	(??_auto_mount+19)& (0+255),b
 10950  0007C6  0E00               	movlw	0
 10951  0007C8  0100               	movlb	0	; () banked
 10952  0007CA  11AF               	iorwf	(??_auto_mount+16)& (0+255),w,b
 10953  0007CC  0100               	movlb	0	; () banked
 10954  0007CE  6FB3               	movwf	(??_auto_mount+20)& (0+255),b
 10955  0007D0  0E48               	movlw	72
 10956  0007D2  0100               	movlb	0	; () banked
 10957  0007D4  25CD               	addwf	auto_mount@fs& (0+255),w,b
 10958  0007D6  6ED9               	movwf	fsr2l,c
 10959  0007D8  0E00               	movlw	0
 10960  0007DA  0100               	movlb	0	; () banked
 10961  0007DC  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10962  0007DE  6EDA               	movwf	fsr2h,c
 10963  0007E0  50DF               	movf	indf2,w,c
 10964  0007E2  0100               	movlb	0	; () banked
 10965  0007E4  6FB4               	movwf	(??_auto_mount+21)& (0+255),b
 10966  0007E6  0100               	movlb	0	; () banked
 10967  0007E8  51B4               	movf	(??_auto_mount+21)& (0+255),w,b
 10968  0007EA  0100               	movlb	0	; () banked
 10969  0007EC  11B0               	iorwf	(??_auto_mount+17)& (0+255),w,b
 10970  0007EE  0100               	movlb	0	; () banked
 10971  0007F0  6FBD               	movwf	auto_mount@totalsect& (0+255),b
 10972  0007F2  0100               	movlb	0	; () banked
 10973  0007F4  51B1               	movf	(??_auto_mount+18)& (0+255),w,b
 10974  0007F6  0100               	movlb	0	; () banked
 10975  0007F8  6FBE               	movwf	(auto_mount@totalsect+1)& (0+255),b
 10976  0007FA  0100               	movlb	0	; () banked
 10977  0007FC  51B2               	movf	(??_auto_mount+19)& (0+255),w,b
 10978  0007FE  0100               	movlb	0	; () banked
 10979  000800  6FBF               	movwf	(auto_mount@totalsect+2)& (0+255),b
 10980  000802  0100               	movlb	0	; () banked
 10981  000804  51B3               	movf	(??_auto_mount+20)& (0+255),w,b
 10982  000806  0100               	movlb	0	; () banked
 10983  000808  6FC0               	movwf	(auto_mount@totalsect+3)& (0+255),b
 10984  00080A                     l12196:
 10985                           
 10986                           ; BSR set to: 0
 10987                           ;tff.c: 774: fs->max_clust = maxclust = (totalsect
 10988                           ;tff.c: 775: - (WORD)(((WORD)*(volatile BYTE*)((&fs->win[14])+1)<<8)|(WORD)*(volatile BY
      +                          TE*)(&fs->win[14])) - fatsize - fs->n_rootdir / 16
 10989                           ;tff.c: 776: ) / fs->csize + 2;
 10990  00080A  0100               	movlb	0	; () banked
 10991  00080C  EE20 F002          	lfsr	2,2
 10992  000810  51CD               	movf	auto_mount@fs& (0+255),w,b
 10993  000812  26D9               	addwf	fsr2l,f,c
 10994  000814  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 10995  000816  22DA               	addwfc	fsr2h,f,c
 10996  000818  CFDE F09F          	movff	postinc2,??_auto_mount
 10997  00081C  CFDD F0A0          	movff	postdec2,??_auto_mount+1
 10998  000820  0E04               	movlw	4
 10999  000822  0100               	movlb	0	; () banked
 11000  000824  6FA1               	movwf	(??_auto_mount+2)& (0+255),b
 11001  000826                     u13885:
 11002  000826  0100               	movlb	0	; () banked
 11003  000828  90D8               	bcf	status,0,c
 11004  00082A  33A0               	rrcf	(??_auto_mount+1)& (0+255),f,b
 11005  00082C  339F               	rrcf	??_auto_mount& (0+255),f,b
 11006  00082E  0100               	movlb	0	; () banked
 11007  000830  2FA1               	decfsz	(??_auto_mount+2)& (0+255),f,b
 11008  000832  D7F9               	goto	u13885
 11009  000834  0E37               	movlw	55
 11010  000836  0100               	movlb	0	; () banked
 11011  000838  25CD               	addwf	auto_mount@fs& (0+255),w,b
 11012  00083A  6ED9               	movwf	fsr2l,c
 11013  00083C  0E00               	movlw	0
 11014  00083E  0100               	movlb	0	; () banked
 11015  000840  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11016  000842  6EDA               	movwf	fsr2h,c
 11017  000844  50DF               	movf	indf2,w,c
 11018  000846  0100               	movlb	0	; () banked
 11019  000848  6FA2               	movwf	(??_auto_mount+3)& (0+255),b
 11020  00084A  0100               	movlb	0	; () banked
 11021  00084C  51A2               	movf	(??_auto_mount+3)& (0+255),w,b
 11022  00084E  0100               	movlb	0	; () banked
 11023  000850  6FA4               	movwf	(??_auto_mount+5)& (0+255),b
 11024  000852  6BA3               	clrf	(??_auto_mount+4)& (0+255),b
 11025  000854  0E36               	movlw	54
 11026  000856  0100               	movlb	0	; () banked
 11027  000858  25CD               	addwf	auto_mount@fs& (0+255),w,b
 11028  00085A  6ED9               	movwf	fsr2l,c
 11029  00085C  0E00               	movlw	0
 11030  00085E  0100               	movlb	0	; () banked
 11031  000860  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11032  000862  6EDA               	movwf	fsr2h,c
 11033  000864  50DF               	movf	indf2,w,c
 11034  000866  0100               	movlb	0	; () banked
 11035  000868  6FA5               	movwf	(??_auto_mount+6)& (0+255),b
 11036  00086A  0100               	movlb	0	; () banked
 11037  00086C  51A5               	movf	(??_auto_mount+6)& (0+255),w,b
 11038  00086E  0100               	movlb	0	; () banked
 11039  000870  13A3               	iorwf	(??_auto_mount+4)& (0+255),f,b
 11040  000872  0E00               	movlw	0
 11041  000874  13A4               	iorwf	(??_auto_mount+5)& (0+255),f,b
 11042  000876  0100               	movlb	0	; () banked
 11043  000878  51A3               	movf	(??_auto_mount+4)& (0+255),w,b
 11044  00087A  0100               	movlb	0	; () banked
 11045  00087C  259F               	addwf	??_auto_mount& (0+255),w,b
 11046  00087E  0100               	movlb	0	; () banked
 11047  000880  6FA6               	movwf	(??_auto_mount+7)& (0+255),b
 11048  000882  0100               	movlb	0	; () banked
 11049  000884  51A4               	movf	(??_auto_mount+5)& (0+255),w,b
 11050  000886  0100               	movlb	0	; () banked
 11051  000888  21A0               	addwfc	(??_auto_mount+1)& (0+255),w,b
 11052  00088A  0100               	movlb	0	; () banked
 11053  00088C  6FA7               	movwf	(??_auto_mount+8)& (0+255),b
 11054  00088E  0100               	movlb	0	; () banked
 11055  000890  6BA8               	clrf	(??_auto_mount+9)& (0+255),b
 11056  000892  B0D8               	btfsc	status,0,c
 11057  000894  2BA8               	incf	(??_auto_mount+9)& (0+255),f,b
 11058  000896  0100               	movlb	0	; () banked
 11059  000898  6BA9               	clrf	(??_auto_mount+10)& (0+255),b
 11060  00089A  0100               	movlb	0	; () banked
 11061  00089C  51C8               	movf	auto_mount@fatsize& (0+255),w,b
 11062  00089E  0100               	movlb	0	; () banked
 11063  0008A0  25A6               	addwf	(??_auto_mount+7)& (0+255),w,b
 11064  0008A2  0100               	movlb	0	; () banked
 11065  0008A4  6FAA               	movwf	(??_auto_mount+11)& (0+255),b
 11066  0008A6  0100               	movlb	0	; () banked
 11067  0008A8  51C9               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 11068  0008AA  0100               	movlb	0	; () banked
 11069  0008AC  21A7               	addwfc	(??_auto_mount+8)& (0+255),w,b
 11070  0008AE  0100               	movlb	0	; () banked
 11071  0008B0  6FAB               	movwf	(??_auto_mount+12)& (0+255),b
 11072  0008B2  0100               	movlb	0	; () banked
 11073  0008B4  51CA               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 11074  0008B6  0100               	movlb	0	; () banked
 11075  0008B8  21A8               	addwfc	(??_auto_mount+9)& (0+255),w,b
 11076  0008BA  0100               	movlb	0	; () banked
 11077  0008BC  6FAC               	movwf	(??_auto_mount+13)& (0+255),b
 11078  0008BE  0100               	movlb	0	; () banked
 11079  0008C0  51CB               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 11080  0008C2  0100               	movlb	0	; () banked
 11081  0008C4  21A9               	addwfc	(??_auto_mount+10)& (0+255),w,b
 11082  0008C6  0100               	movlb	0	; () banked
 11083  0008C8  6FAD               	movwf	(??_auto_mount+14)& (0+255),b
 11084  0008CA  0100               	movlb	0	; () banked
 11085  0008CC  1FAA               	comf	(??_auto_mount+11)& (0+255),f,b
 11086  0008CE  1FAB               	comf	(??_auto_mount+12)& (0+255),f,b
 11087  0008D0  1FAC               	comf	(??_auto_mount+13)& (0+255),f,b
 11088  0008D2  1FAD               	comf	(??_auto_mount+14)& (0+255),f,b
 11089  0008D4  2BAA               	incf	(??_auto_mount+11)& (0+255),f,b
 11090  0008D6  0E00               	movlw	0
 11091  0008D8  23AB               	addwfc	(??_auto_mount+12)& (0+255),f,b
 11092  0008DA  23AC               	addwfc	(??_auto_mount+13)& (0+255),f,b
 11093  0008DC  23AD               	addwfc	(??_auto_mount+14)& (0+255),f,b
 11094  0008DE  0100               	movlb	0	; () banked
 11095  0008E0  51BD               	movf	auto_mount@totalsect& (0+255),w,b
 11096  0008E2  0100               	movlb	0	; () banked
 11097  0008E4  25AA               	addwf	(??_auto_mount+11)& (0+255),w,b
 11098  0008E6  6E16               	movwf	___lldiv@dividend,c
 11099  0008E8  0100               	movlb	0	; () banked
 11100  0008EA  51BE               	movf	(auto_mount@totalsect+1)& (0+255),w,b
 11101  0008EC  0100               	movlb	0	; () banked
 11102  0008EE  21AB               	addwfc	(??_auto_mount+12)& (0+255),w,b
 11103  0008F0  6E17               	movwf	___lldiv@dividend+1,c
 11104  0008F2  0100               	movlb	0	; () banked
 11105  0008F4  51BF               	movf	(auto_mount@totalsect+2)& (0+255),w,b
 11106  0008F6  0100               	movlb	0	; () banked
 11107  0008F8  21AC               	addwfc	(??_auto_mount+13)& (0+255),w,b
 11108  0008FA  6E18               	movwf	___lldiv@dividend+2,c
 11109  0008FC  0100               	movlb	0	; () banked
 11110  0008FE  51C0               	movf	(auto_mount@totalsect+3)& (0+255),w,b
 11111  000900  0100               	movlb	0	; () banked
 11112  000902  21AD               	addwfc	(??_auto_mount+14)& (0+255),w,b
 11113  000904  6E19               	movwf	___lldiv@dividend+3,c
 11114  000906  0100               	movlb	0	; () banked
 11115  000908  EE20 F025          	lfsr	2,37
 11116  00090C  51CD               	movf	auto_mount@fs& (0+255),w,b
 11117  00090E  26D9               	addwf	fsr2l,f,c
 11118  000910  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11119  000912  22DA               	addwfc	fsr2h,f,c
 11120  000914  50DF               	movf	indf2,w,c
 11121  000916  0100               	movlb	0	; () banked
 11122  000918  6FAE               	movwf	(??_auto_mount+15)& (0+255),b
 11123  00091A  0100               	movlb	0	; () banked
 11124  00091C  51AE               	movf	(??_auto_mount+15)& (0+255),w,b
 11125  00091E  6E1A               	movwf	___lldiv@divisor,c
 11126  000920  6A1B               	clrf	___lldiv@divisor+1,c
 11127  000922  6A1C               	clrf	___lldiv@divisor+2,c
 11128  000924  6A1D               	clrf	___lldiv@divisor+3,c
 11129  000926  EC9E  F025         	call	___lldiv	;wreg free
 11130  00092A  0E02               	movlw	2
 11131  00092C  2416               	addwf	?___lldiv,w,c
 11132  00092E  0100               	movlb	0	; () banked
 11133  000930  6FB9               	movwf	auto_mount@maxclust& (0+255),b
 11134  000932  0E00               	movlw	0
 11135  000934  2017               	addwfc	?___lldiv+1,w,c
 11136  000936  0100               	movlb	0	; () banked
 11137  000938  6FBA               	movwf	(auto_mount@maxclust+1)& (0+255),b
 11138  00093A  0E00               	movlw	0
 11139  00093C  2018               	addwfc	?___lldiv+2,w,c
 11140  00093E  0100               	movlb	0	; () banked
 11141  000940  6FBB               	movwf	(auto_mount@maxclust+2)& (0+255),b
 11142  000942  0E00               	movlw	0
 11143  000944  2019               	addwfc	?___lldiv+3,w,c
 11144  000946  0100               	movlb	0	; () banked
 11145  000948  6FBC               	movwf	(auto_mount@maxclust+3)& (0+255),b
 11146  00094A  0100               	movlb	0	; () banked
 11147  00094C  EE20 F018          	lfsr	2,24
 11148  000950  51CD               	movf	auto_mount@fs& (0+255),w,b
 11149  000952  26D9               	addwf	fsr2l,f,c
 11150  000954  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11151  000956  22DA               	addwfc	fsr2h,f,c
 11152  000958  C0B9  FFDE         	movff	auto_mount@maxclust,postinc2
 11153  00095C  C0BA  FFDE         	movff	auto_mount@maxclust+1,postinc2
 11154  000960  C0BB  FFDE         	movff	auto_mount@maxclust+2,postinc2
 11155  000964  C0BC  FFDE         	movff	auto_mount@maxclust+3,postinc2
 11156                           
 11157                           ; BSR set to: 0
 11158                           ;tff.c: 778: fmt = 1;
 11159  000968  0E01               	movlw	1
 11160  00096A  0100               	movlb	0	; () banked
 11161  00096C  6FCC               	movwf	auto_mount@fmt& (0+255),b
 11162                           
 11163                           ; BSR set to: 0
 11164                           ;tff.c: 779: if (maxclust >= 0xFF7) fmt = 2;
 11165  00096E  0100               	movlb	0	; () banked
 11166  000970  51BC               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 11167  000972  0100               	movlb	0	; () banked
 11168  000974  11BB               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 11169  000976  E108               	bnz	u13890
 11170  000978  0EF7               	movlw	247
 11171  00097A  0100               	movlb	0	; () banked
 11172  00097C  5DB9               	subwf	auto_mount@maxclust& (0+255),w,b
 11173  00097E  0E0F               	movlw	15
 11174  000980  0100               	movlb	0	; () banked
 11175  000982  59BA               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 11176  000984  A0D8               	btfss	status,0,c
 11177  000986  D003               	goto	l12204
 11178  000988                     u13890:
 11179                           
 11180                           ; BSR set to: 0
 11181  000988  0E02               	movlw	2
 11182  00098A  0100               	movlb	0	; () banked
 11183  00098C  6FCC               	movwf	auto_mount@fmt& (0+255),b
 11184  00098E                     l12204:
 11185                           
 11186                           ; BSR set to: 0
 11187                           ;tff.c: 780: if (maxclust >= 0xFFF7)
 11188  00098E  0100               	movlb	0	; () banked
 11189  000990  51BC               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 11190  000992  0100               	movlb	0	; () banked
 11191  000994  11BB               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 11192  000996  E108               	bnz	u13900
 11193  000998  0EF7               	movlw	247
 11194  00099A  0100               	movlb	0	; () banked
 11195  00099C  5DB9               	subwf	auto_mount@maxclust& (0+255),w,b
 11196  00099E  0EFF               	movlw	255
 11197  0009A0  0100               	movlb	0	; () banked
 11198  0009A2  59BA               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 11199  0009A4  A0D8               	btfss	status,0,c
 11200  0009A6  D003               	goto	l12208
 11201  0009A8                     u13900:
 11202                           
 11203                           ; BSR set to: 0
 11204                           ;tff.c: 784: fmt = 3;
 11205  0009A8  0E03               	movlw	3
 11206  0009AA  0100               	movlb	0	; () banked
 11207  0009AC  6FCC               	movwf	auto_mount@fmt& (0+255),b
 11208  0009AE                     l12208:
 11209                           
 11210                           ; BSR set to: 0
 11211                           ;tff.c: 785: if (fmt == 3)
 11212  0009AE  0E03               	movlw	3
 11213  0009B0  0100               	movlb	0	; () banked
 11214  0009B2  19CC               	xorwf	auto_mount@fmt& (0+255),w,b
 11215  0009B4  A4D8               	btfss	status,2,c
 11216  0009B6  D09A               	goto	l12212
 11217                           
 11218                           ; BSR set to: 0
 11219                           ;tff.c: 786: fs->dirbase = (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[44])+3)<<24)|((DW
      +                          ORD)*(volatile BYTE*)((&fs->win[44])+2)<<16)|((WORD)*(volatile BYTE*)((&fs->win[44])+1)<
      +                          <8)|*(volatile BYTE*)(&fs->win[44]));
 11220  0009B8  0E55               	movlw	85
 11221  0009BA  0100               	movlb	0	; () banked
 11222  0009BC  25CD               	addwf	auto_mount@fs& (0+255),w,b
 11223  0009BE  6ED9               	movwf	fsr2l,c
 11224  0009C0  0E00               	movlw	0
 11225  0009C2  0100               	movlb	0	; () banked
 11226  0009C4  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11227  0009C6  6EDA               	movwf	fsr2h,c
 11228  0009C8  50DF               	movf	indf2,w,c
 11229  0009CA  0100               	movlb	0	; () banked
 11230  0009CC  6F9F               	movwf	??_auto_mount& (0+255),b
 11231  0009CE  0100               	movlb	0	; () banked
 11232  0009D0  519F               	movf	??_auto_mount& (0+255),w,b
 11233  0009D2  0100               	movlb	0	; () banked
 11234  0009D4  6FA1               	movwf	(??_auto_mount+2)& (0+255),b
 11235  0009D6  6BA0               	clrf	(??_auto_mount+1)& (0+255),b
 11236  0009D8  0E56               	movlw	86
 11237  0009DA  0100               	movlb	0	; () banked
 11238  0009DC  25CD               	addwf	auto_mount@fs& (0+255),w,b
 11239  0009DE  6ED9               	movwf	fsr2l,c
 11240  0009E0  0E00               	movlw	0
 11241  0009E2  0100               	movlb	0	; () banked
 11242  0009E4  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11243  0009E6  6EDA               	movwf	fsr2h,c
 11244  0009E8  50DF               	movf	indf2,w,c
 11245  0009EA  0100               	movlb	0	; () banked
 11246  0009EC  6FA2               	movwf	(??_auto_mount+3)& (0+255),b
 11247  0009EE  C0A2  F0A3         	movff	??_auto_mount+3,??_auto_mount+4
 11248  0009F2  0100               	movlb	0	; () banked
 11249  0009F4  6BA4               	clrf	(??_auto_mount+5)& (0+255),b
 11250  0009F6  6BA5               	clrf	(??_auto_mount+6)& (0+255),b
 11251  0009F8  6BA6               	clrf	(??_auto_mount+7)& (0+255),b
 11252  0009FA  C0A4  F0A6         	movff	??_auto_mount+5,??_auto_mount+7
 11253  0009FE  C0A3  F0A5         	movff	??_auto_mount+4,??_auto_mount+6
 11254  000A02  0100               	movlb	0	; () banked
 11255  000A04  6BA4               	clrf	(??_auto_mount+5)& (0+255),b
 11256  000A06  6BA3               	clrf	(??_auto_mount+4)& (0+255),b
 11257  000A08  0E57               	movlw	87
 11258  000A0A  0100               	movlb	0	; () banked
 11259  000A0C  25CD               	addwf	auto_mount@fs& (0+255),w,b
 11260  000A0E  6ED9               	movwf	fsr2l,c
 11261  000A10  0E00               	movlw	0
 11262  000A12  0100               	movlb	0	; () banked
 11263  000A14  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11264  000A16  6EDA               	movwf	fsr2h,c
 11265  000A18  50DF               	movf	indf2,w,c
 11266  000A1A  0100               	movlb	0	; () banked
 11267  000A1C  6FA7               	movwf	(??_auto_mount+8)& (0+255),b
 11268  000A1E  C0A7  F0A8         	movff	??_auto_mount+8,??_auto_mount+9
 11269  000A22  0100               	movlb	0	; () banked
 11270  000A24  6BA9               	clrf	(??_auto_mount+10)& (0+255),b
 11271  000A26  6BAA               	clrf	(??_auto_mount+11)& (0+255),b
 11272  000A28  6BAB               	clrf	(??_auto_mount+12)& (0+255),b
 11273  000A2A  C0A8  F0AB         	movff	??_auto_mount+9,??_auto_mount+12
 11274  000A2E  0100               	movlb	0	; () banked
 11275  000A30  6BAA               	clrf	(??_auto_mount+11)& (0+255),b
 11276  000A32  6BA9               	clrf	(??_auto_mount+10)& (0+255),b
 11277  000A34  6BA8               	clrf	(??_auto_mount+9)& (0+255),b
 11278  000A36  0100               	movlb	0	; () banked
 11279  000A38  51A3               	movf	(??_auto_mount+4)& (0+255),w,b
 11280  000A3A  0100               	movlb	0	; () banked
 11281  000A3C  11A8               	iorwf	(??_auto_mount+9)& (0+255),w,b
 11282  000A3E  0100               	movlb	0	; () banked
 11283  000A40  6FAC               	movwf	(??_auto_mount+13)& (0+255),b
 11284  000A42  0100               	movlb	0	; () banked
 11285  000A44  51A4               	movf	(??_auto_mount+5)& (0+255),w,b
 11286  000A46  0100               	movlb	0	; () banked
 11287  000A48  11A9               	iorwf	(??_auto_mount+10)& (0+255),w,b
 11288  000A4A  0100               	movlb	0	; () banked
 11289  000A4C  6FAD               	movwf	(??_auto_mount+14)& (0+255),b
 11290  000A4E  0100               	movlb	0	; () banked
 11291  000A50  51A5               	movf	(??_auto_mount+6)& (0+255),w,b
 11292  000A52  0100               	movlb	0	; () banked
 11293  000A54  11AA               	iorwf	(??_auto_mount+11)& (0+255),w,b
 11294  000A56  0100               	movlb	0	; () banked
 11295  000A58  6FAE               	movwf	(??_auto_mount+15)& (0+255),b
 11296  000A5A  0100               	movlb	0	; () banked
 11297  000A5C  51A6               	movf	(??_auto_mount+7)& (0+255),w,b
 11298  000A5E  0100               	movlb	0	; () banked
 11299  000A60  11AB               	iorwf	(??_auto_mount+12)& (0+255),w,b
 11300  000A62  0100               	movlb	0	; () banked
 11301  000A64  6FAF               	movwf	(??_auto_mount+16)& (0+255),b
 11302  000A66  0100               	movlb	0	; () banked
 11303  000A68  51A0               	movf	(??_auto_mount+1)& (0+255),w,b
 11304  000A6A  0100               	movlb	0	; () banked
 11305  000A6C  11AC               	iorwf	(??_auto_mount+13)& (0+255),w,b
 11306  000A6E  0100               	movlb	0	; () banked
 11307  000A70  6FB0               	movwf	(??_auto_mount+17)& (0+255),b
 11308  000A72  0100               	movlb	0	; () banked
 11309  000A74  51A1               	movf	(??_auto_mount+2)& (0+255),w,b
 11310  000A76  0100               	movlb	0	; () banked
 11311  000A78  11AD               	iorwf	(??_auto_mount+14)& (0+255),w,b
 11312  000A7A  0100               	movlb	0	; () banked
 11313  000A7C  6FB1               	movwf	(??_auto_mount+18)& (0+255),b
 11314  000A7E  0E00               	movlw	0
 11315  000A80  0100               	movlb	0	; () banked
 11316  000A82  11AE               	iorwf	(??_auto_mount+15)& (0+255),w,b
 11317  000A84  0100               	movlb	0	; () banked
 11318  000A86  6FB2               	movwf	(??_auto_mount+19)& (0+255),b
 11319  000A88  0E00               	movlw	0
 11320  000A8A  0100               	movlb	0	; () banked
 11321  000A8C  11AF               	iorwf	(??_auto_mount+16)& (0+255),w,b
 11322  000A8E  0100               	movlb	0	; () banked
 11323  000A90  6FB3               	movwf	(??_auto_mount+20)& (0+255),b
 11324  000A92  0E54               	movlw	84
 11325  000A94  0100               	movlb	0	; () banked
 11326  000A96  25CD               	addwf	auto_mount@fs& (0+255),w,b
 11327  000A98  6ED9               	movwf	fsr2l,c
 11328  000A9A  0E00               	movlw	0
 11329  000A9C  0100               	movlb	0	; () banked
 11330  000A9E  21CE               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11331  000AA0  6EDA               	movwf	fsr2h,c
 11332  000AA2  50DF               	movf	indf2,w,c
 11333  000AA4  0100               	movlb	0	; () banked
 11334  000AA6  6FB4               	movwf	(??_auto_mount+21)& (0+255),b
 11335  000AA8  0100               	movlb	0	; () banked
 11336  000AAA  51B4               	movf	(??_auto_mount+21)& (0+255),w,b
 11337  000AAC  0100               	movlb	0	; () banked
 11338  000AAE  11B0               	iorwf	(??_auto_mount+17)& (0+255),w,b
 11339  000AB0  0100               	movlb	0	; () banked
 11340  000AB2  6FB5               	movwf	(??_auto_mount+22)& (0+255),b
 11341  000AB4  0100               	movlb	0	; () banked
 11342  000AB6  51B1               	movf	(??_auto_mount+18)& (0+255),w,b
 11343  000AB8  0100               	movlb	0	; () banked
 11344  000ABA  6FB6               	movwf	(??_auto_mount+23)& (0+255),b
 11345  000ABC  0100               	movlb	0	; () banked
 11346  000ABE  51B2               	movf	(??_auto_mount+19)& (0+255),w,b
 11347  000AC0  0100               	movlb	0	; () banked
 11348  000AC2  6FB7               	movwf	(??_auto_mount+24)& (0+255),b
 11349  000AC4  0100               	movlb	0	; () banked
 11350  000AC6  51B3               	movf	(??_auto_mount+20)& (0+255),w,b
 11351  000AC8  0100               	movlb	0	; () banked
 11352  000ACA  6FB8               	movwf	(??_auto_mount+25)& (0+255),b
 11353  000ACC  0100               	movlb	0	; () banked
 11354  000ACE  EE20 F00C          	lfsr	2,12
 11355  000AD2  51CD               	movf	auto_mount@fs& (0+255),w,b
 11356  000AD4  26D9               	addwf	fsr2l,f,c
 11357  000AD6  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11358  000AD8  22DA               	addwfc	fsr2h,f,c
 11359  000ADA  C0B5  FFDE         	movff	??_auto_mount+22,postinc2
 11360  000ADE  C0B6  FFDE         	movff	??_auto_mount+23,postinc2
 11361  000AE2  C0B7  FFDE         	movff	??_auto_mount+24,postinc2
 11362  000AE6  C0B8  FFDE         	movff	??_auto_mount+25,postinc2
 11363  000AEA  D036               	goto	l808
 11364  000AEC                     l12212:
 11365                           
 11366                           ; BSR set to: 0
 11367                           ;tff.c: 787: else
 11368                           ;tff.c: 789: fs->dirbase = fs->fatbase + fatsize;
 11369  000AEC  0100               	movlb	0	; () banked
 11370  000AEE  EE20 F008          	lfsr	2,8
 11371  000AF2  51CD               	movf	auto_mount@fs& (0+255),w,b
 11372  000AF4  26D9               	addwf	fsr2l,f,c
 11373  000AF6  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11374  000AF8  22DA               	addwfc	fsr2h,f,c
 11375  000AFA  CFDE F09F          	movff	postinc2,??_auto_mount
 11376  000AFE  CFDE F0A0          	movff	postinc2,??_auto_mount+1
 11377  000B02  CFDE F0A1          	movff	postinc2,??_auto_mount+2
 11378  000B06  CFDE F0A2          	movff	postinc2,??_auto_mount+3
 11379  000B0A  0100               	movlb	0	; () banked
 11380  000B0C  51C8               	movf	auto_mount@fatsize& (0+255),w,b
 11381  000B0E  0100               	movlb	0	; () banked
 11382  000B10  259F               	addwf	??_auto_mount& (0+255),w,b
 11383  000B12  0100               	movlb	0	; () banked
 11384  000B14  6FA3               	movwf	(??_auto_mount+4)& (0+255),b
 11385  000B16  0100               	movlb	0	; () banked
 11386  000B18  51C9               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 11387  000B1A  0100               	movlb	0	; () banked
 11388  000B1C  21A0               	addwfc	(??_auto_mount+1)& (0+255),w,b
 11389  000B1E  0100               	movlb	0	; () banked
 11390  000B20  6FA4               	movwf	(??_auto_mount+5)& (0+255),b
 11391  000B22  0100               	movlb	0	; () banked
 11392  000B24  51CA               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 11393  000B26  0100               	movlb	0	; () banked
 11394  000B28  21A1               	addwfc	(??_auto_mount+2)& (0+255),w,b
 11395  000B2A  0100               	movlb	0	; () banked
 11396  000B2C  6FA5               	movwf	(??_auto_mount+6)& (0+255),b
 11397  000B2E  0100               	movlb	0	; () banked
 11398  000B30  51CB               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 11399  000B32  0100               	movlb	0	; () banked
 11400  000B34  21A2               	addwfc	(??_auto_mount+3)& (0+255),w,b
 11401  000B36  0100               	movlb	0	; () banked
 11402  000B38  6FA6               	movwf	(??_auto_mount+7)& (0+255),b
 11403  000B3A  0100               	movlb	0	; () banked
 11404  000B3C  EE20 F00C          	lfsr	2,12
 11405  000B40  51CD               	movf	auto_mount@fs& (0+255),w,b
 11406  000B42  26D9               	addwf	fsr2l,f,c
 11407  000B44  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11408  000B46  22DA               	addwfc	fsr2h,f,c
 11409  000B48  C0A3  FFDE         	movff	??_auto_mount+4,postinc2
 11410  000B4C  C0A4  FFDE         	movff	??_auto_mount+5,postinc2
 11411  000B50  C0A5  FFDE         	movff	??_auto_mount+6,postinc2
 11412  000B54  C0A6  FFDE         	movff	??_auto_mount+7,postinc2
 11413  000B58                     l808:
 11414                           
 11415                           ; BSR set to: 0
 11416                           ;tff.c: 790: fs->database = fs->fatbase + fatsize + fs->n_rootdir / 16;
 11417  000B58  0100               	movlb	0	; () banked
 11418  000B5A  EE20 F008          	lfsr	2,8
 11419  000B5E  51CD               	movf	auto_mount@fs& (0+255),w,b
 11420  000B60  26D9               	addwf	fsr2l,f,c
 11421  000B62  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11422  000B64  22DA               	addwfc	fsr2h,f,c
 11423  000B66  CFDE F09F          	movff	postinc2,??_auto_mount
 11424  000B6A  CFDE F0A0          	movff	postinc2,??_auto_mount+1
 11425  000B6E  CFDE F0A1          	movff	postinc2,??_auto_mount+2
 11426  000B72  CFDE F0A2          	movff	postinc2,??_auto_mount+3
 11427  000B76  0100               	movlb	0	; () banked
 11428  000B78  EE20 F002          	lfsr	2,2
 11429  000B7C  51CD               	movf	auto_mount@fs& (0+255),w,b
 11430  000B7E  26D9               	addwf	fsr2l,f,c
 11431  000B80  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11432  000B82  22DA               	addwfc	fsr2h,f,c
 11433  000B84  CFDE F0A3          	movff	postinc2,??_auto_mount+4
 11434  000B88  CFDD F0A4          	movff	postdec2,??_auto_mount+5
 11435  000B8C  0E04               	movlw	4
 11436  000B8E  0100               	movlb	0	; () banked
 11437  000B90  6FA5               	movwf	(??_auto_mount+6)& (0+255),b
 11438  000B92                     u13925:
 11439  000B92  0100               	movlb	0	; () banked
 11440  000B94  90D8               	bcf	status,0,c
 11441  000B96  33A4               	rrcf	(??_auto_mount+5)& (0+255),f,b
 11442  000B98  33A3               	rrcf	(??_auto_mount+4)& (0+255),f,b
 11443  000B9A  0100               	movlb	0	; () banked
 11444  000B9C  2FA5               	decfsz	(??_auto_mount+6)& (0+255),f,b
 11445  000B9E  D7F9               	goto	u13925
 11446  000BA0  0100               	movlb	0	; () banked
 11447  000BA2  51A3               	movf	(??_auto_mount+4)& (0+255),w,b
 11448  000BA4  0100               	movlb	0	; () banked
 11449  000BA6  259F               	addwf	??_auto_mount& (0+255),w,b
 11450  000BA8  0100               	movlb	0	; () banked
 11451  000BAA  6FA6               	movwf	(??_auto_mount+7)& (0+255),b
 11452  000BAC  0100               	movlb	0	; () banked
 11453  000BAE  51A4               	movf	(??_auto_mount+5)& (0+255),w,b
 11454  000BB0  0100               	movlb	0	; () banked
 11455  000BB2  21A0               	addwfc	(??_auto_mount+1)& (0+255),w,b
 11456  000BB4  0100               	movlb	0	; () banked
 11457  000BB6  6FA7               	movwf	(??_auto_mount+8)& (0+255),b
 11458  000BB8  0E00               	movlw	0
 11459  000BBA  0100               	movlb	0	; () banked
 11460  000BBC  21A1               	addwfc	(??_auto_mount+2)& (0+255),w,b
 11461  000BBE  0100               	movlb	0	; () banked
 11462  000BC0  6FA8               	movwf	(??_auto_mount+9)& (0+255),b
 11463  000BC2  0E00               	movlw	0
 11464  000BC4  0100               	movlb	0	; () banked
 11465  000BC6  21A2               	addwfc	(??_auto_mount+3)& (0+255),w,b
 11466  000BC8  0100               	movlb	0	; () banked
 11467  000BCA  6FA9               	movwf	(??_auto_mount+10)& (0+255),b
 11468  000BCC  0100               	movlb	0	; () banked
 11469  000BCE  51C8               	movf	auto_mount@fatsize& (0+255),w,b
 11470  000BD0  0100               	movlb	0	; () banked
 11471  000BD2  25A6               	addwf	(??_auto_mount+7)& (0+255),w,b
 11472  000BD4  0100               	movlb	0	; () banked
 11473  000BD6  6FAA               	movwf	(??_auto_mount+11)& (0+255),b
 11474  000BD8  0100               	movlb	0	; () banked
 11475  000BDA  51C9               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 11476  000BDC  0100               	movlb	0	; () banked
 11477  000BDE  21A7               	addwfc	(??_auto_mount+8)& (0+255),w,b
 11478  000BE0  0100               	movlb	0	; () banked
 11479  000BE2  6FAB               	movwf	(??_auto_mount+12)& (0+255),b
 11480  000BE4  0100               	movlb	0	; () banked
 11481  000BE6  51CA               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 11482  000BE8  0100               	movlb	0	; () banked
 11483  000BEA  21A8               	addwfc	(??_auto_mount+9)& (0+255),w,b
 11484  000BEC  0100               	movlb	0	; () banked
 11485  000BEE  6FAC               	movwf	(??_auto_mount+13)& (0+255),b
 11486  000BF0  0100               	movlb	0	; () banked
 11487  000BF2  51CB               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 11488  000BF4  0100               	movlb	0	; () banked
 11489  000BF6  21A9               	addwfc	(??_auto_mount+10)& (0+255),w,b
 11490  000BF8  0100               	movlb	0	; () banked
 11491  000BFA  6FAD               	movwf	(??_auto_mount+14)& (0+255),b
 11492  000BFC  0100               	movlb	0	; () banked
 11493  000BFE  EE20 F010          	lfsr	2,16
 11494  000C02  51CD               	movf	auto_mount@fs& (0+255),w,b
 11495  000C04  26D9               	addwf	fsr2l,f,c
 11496  000C06  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11497  000C08  22DA               	addwfc	fsr2h,f,c
 11498  000C0A  C0AA  FFDE         	movff	??_auto_mount+11,postinc2
 11499  000C0E  C0AB  FFDE         	movff	??_auto_mount+12,postinc2
 11500  000C12  C0AC  FFDE         	movff	??_auto_mount+13,postinc2
 11501  000C16  C0AD  FFDE         	movff	??_auto_mount+14,postinc2
 11502                           
 11503                           ;tff.c: 794: fs->free_clust = (CLUST)0xFFFFFFFF;
 11504  000C1A  0100               	movlb	0	; () banked
 11505  000C1C  EE20 F020          	lfsr	2,32
 11506  000C20  51CD               	movf	auto_mount@fs& (0+255),w,b
 11507  000C22  26D9               	addwf	fsr2l,f,c
 11508  000C24  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11509  000C26  22DA               	addwfc	fsr2h,f,c
 11510  000C28  0EFF               	movlw	255
 11511  000C2A  6EDE               	movwf	postinc2,c
 11512  000C2C  0EFF               	movlw	255
 11513  000C2E  6EDE               	movwf	postinc2,c
 11514  000C30  0EFF               	movlw	255
 11515  000C32  6EDE               	movwf	postinc2,c
 11516  000C34  0EFF               	movlw	255
 11517  000C36  6EDD               	movwf	postdec2,c
 11518                           
 11519                           ;tff.c: 810: fs->fs_type = fmt;
 11520  000C38  0100               	movlb	0	; () banked
 11521  000C3A  EE20 F024          	lfsr	2,36
 11522  000C3E  51CD               	movf	auto_mount@fs& (0+255),w,b
 11523  000C40  26D9               	addwf	fsr2l,f,c
 11524  000C42  51CE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11525  000C44  22DA               	addwfc	fsr2h,f,c
 11526  000C46  C0CC  FFDF         	movff	auto_mount@fmt,indf2
 11527                           
 11528                           ; BSR set to: 0
 11529                           ;tff.c: 811: fs->id = ++fsid;
 11530  000C4A  0101               	movlb	1	; () banked
 11531  000C4C  4B5A               	infsnz	_fsid& (0+255),f,b
 11532  000C4E  2B5B               	incf	(_fsid+1)& (0+255),f,b
 11533  000C50  C0CD  FFD9         	movff	auto_mount@fs,fsr2l
 11534  000C54  C0CE  FFDA         	movff	auto_mount@fs+1,fsr2h
 11535  000C58  C15A  FFDE         	movff	_fsid,postinc2
 11536  000C5C  C15B  FFDD         	movff	_fsid+1,postdec2
 11537                           
 11538                           ;tff.c: 812: return FR_OK;
 11539  000C60  0E00               	movlw	0
 11540  000C62  0012               	return	
 11541  000C64                     __end_of_auto_mount:
 11542                           	opt stack 0
 11543                           tosu	equ	0xFFF
 11544                           tosh	equ	0xFFE
 11545                           tosl	equ	0xFFD
 11546                           pclath	equ	0xFFA
 11547                           tblptru	equ	0xFF8
 11548                           tblptrh	equ	0xFF7
 11549                           tblptrl	equ	0xFF6
 11550                           tablat	equ	0xFF5
 11551                           prodh	equ	0xFF4
 11552                           prodl	equ	0xFF3
 11553                           intcon	equ	0xFF2
 11554                           intcon2	equ	0xFF1
 11555                           intcon3	equ	0xFF0
 11556                           postinc0	equ	0xFEE
 11557                           wreg	equ	0xFE8
 11558                           indf1	equ	0xFE7
 11559                           postinc1	equ	0xFE6
 11560                           postdec1	equ	0xFE5
 11561                           fsr1h	equ	0xFE2
 11562                           fsr1l	equ	0xFE1
 11563                           indf2	equ	0xFDF
 11564                           postinc2	equ	0xFDE
 11565                           postdec2	equ	0xFDD
 11566                           fsr2h	equ	0xFDA
 11567                           fsr2l	equ	0xFD9
 11568                           status	equ	0xFD8
 11569                           
 11570 ;; *************** function _memset *****************
 11571 ;; Defined at:
 11572 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
 11573 ;; Parameters:    Size  Location     Type
 11574 ;;  p1              2   21[COMRAM] PTR void 
 11575 ;;		 -> fs.win(512), fs(552), f_rename@fn(12), f_utime@fn(12), 
 11576 ;;		 -> f_chmod@fn(12), f_mkdir@fn(12), f_unlink@fn(12), f_stat@fn(12), 
 11577 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), gps@gps_buffer(15), 
 11578 ;;  c               2   23[COMRAM] int 
 11579 ;;  n               2   25[COMRAM] unsigned int 
 11580 ;; Auto vars:     Size  Location     Type
 11581 ;;  p               2   27[COMRAM] PTR unsigned char 
 11582 ;;		 -> fs.win(512), fs(552), f_rename@fn(12), f_utime@fn(12), 
 11583 ;;		 -> f_chmod@fn(12), f_mkdir@fn(12), f_unlink@fn(12), f_stat@fn(12), 
 11584 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), gps@gps_buffer(15), 
 11585 ;; Return value:  Size  Location     Type
 11586 ;;                  2   21[COMRAM] PTR void 
 11587 ;; Registers used:
 11588 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11589 ;; Tracked objects:
 11590 ;;		On entry : 0/0
 11591 ;;		On exit  : 0/0
 11592 ;;		Unchanged: 0/0
 11593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11594 ;;      Params:         6       0       0       0       0       0       0       0       0
 11595 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11596 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11597 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11598 ;;Total ram usage:        8 bytes
 11599 ;; Hardware stack levels used:    1
 11600 ;; Hardware stack levels required when called:    2
 11601 ;; This function calls:
 11602 ;;		Nothing
 11603 ;; This function is called by:
 11604 ;;		_make_dirfile
 11605 ;;		_reserve_direntry
 11606 ;;		_auto_mount
 11607 ;;		_f_open
 11608 ;;		_gps
 11609 ;;		_f_mkdir
 11610 ;; This function uses a non-reentrant model
 11611 ;;
 11612                           
 11613                           	psect	text28
 11614  00532C                     __ptext28:
 11615                           	opt stack 0
 11616  00532C                     _memset:
 11617                           	opt stack 23
 11618                           
 11619                           ;incstack = 0
 11620  00532C  C016  F01C         	movff	memset@p1,memset@p
 11621  005330  C017  F01D         	movff	memset@p1+1,memset@p+1
 11622  005334  D008               	goto	l11102
 11623  005336                     l11098:
 11624  005336  C01C  FFD9         	movff	memset@p,fsr2l
 11625  00533A  C01D  FFDA         	movff	memset@p+1,fsr2h
 11626  00533E  C018  FFDF         	movff	memset@c,indf2
 11627  005342  4A1C               	infsnz	memset@p,f,c
 11628  005344  2A1D               	incf	memset@p+1,f,c
 11629  005346                     l11102:
 11630  005346  061A               	decf	memset@n,f,c
 11631  005348  A0D8               	btfss	status,0,c
 11632  00534A  061B               	decf	memset@n+1,f,c
 11633  00534C  281A               	incf	memset@n,w,c
 11634  00534E  E1F3               	bnz	l11098
 11635  005350  281B               	incf	memset@n+1,w,c
 11636  005352  B4D8               	btfsc	status,2,c
 11637  005354  0012               	return	
 11638  005356  D7EF               	goto	l11098
 11639  005358                     __end_of_memset:
 11640                           	opt stack 0
 11641                           tosu	equ	0xFFF
 11642                           tosh	equ	0xFFE
 11643                           tosl	equ	0xFFD
 11644                           pclath	equ	0xFFA
 11645                           tblptru	equ	0xFF8
 11646                           tblptrh	equ	0xFF7
 11647                           tblptrl	equ	0xFF6
 11648                           tablat	equ	0xFF5
 11649                           prodh	equ	0xFF4
 11650                           prodl	equ	0xFF3
 11651                           intcon	equ	0xFF2
 11652                           intcon2	equ	0xFF1
 11653                           intcon3	equ	0xFF0
 11654                           postinc0	equ	0xFEE
 11655                           wreg	equ	0xFE8
 11656                           indf1	equ	0xFE7
 11657                           postinc1	equ	0xFE6
 11658                           postdec1	equ	0xFE5
 11659                           fsr1h	equ	0xFE2
 11660                           fsr1l	equ	0xFE1
 11661                           indf2	equ	0xFDF
 11662                           postinc2	equ	0xFDE
 11663                           postdec2	equ	0xFDD
 11664                           fsr2h	equ	0xFDA
 11665                           fsr2l	equ	0xFD9
 11666                           status	equ	0xFD8
 11667                           
 11668 ;; *************** function _disk_initialize *****************
 11669 ;; Defined at:
 11670 ;;		line 110 in file "bibliotecas/diskio.c"
 11671 ;; Parameters:    Size  Location     Type
 11672 ;;  pdrv            1    wreg     unsigned char 
 11673 ;; Auto vars:     Size  Location     Type
 11674 ;;  pdrv            1   48[COMRAM] unsigned char 
 11675 ;;  result          2    0        int 
 11676 ;;  stat            1   49[COMRAM] unsigned char 
 11677 ;; Return value:  Size  Location     Type
 11678 ;;                  1    wreg      unsigned char 
 11679 ;; Registers used:
 11680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11681 ;; Tracked objects:
 11682 ;;		On entry : 0/0
 11683 ;;		On exit  : 0/0
 11684 ;;		Unchanged: 0/0
 11685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11686 ;;      Params:         0       0       0       0       0       0       0       0       0
 11687 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11688 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11689 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11690 ;;Total ram usage:        2 bytes
 11691 ;; Hardware stack levels used:    1
 11692 ;; Hardware stack levels required when called:    7
 11693 ;; This function calls:
 11694 ;;		_sdc_disk_initialize
 11695 ;; This function is called by:
 11696 ;;		_auto_mount
 11697 ;; This function uses a non-reentrant model
 11698 ;;
 11699                           
 11700                           	psect	text29
 11701  0052F8                     __ptext29:
 11702                           	opt stack 0
 11703  0052F8                     _disk_initialize:
 11704                           	opt stack 19
 11705                           
 11706                           ;incstack = 0
 11707                           ;disk_initialize@pdrv stored from wreg
 11708  0052F8  6E31               	movwf	disk_initialize@pdrv,c
 11709                           
 11710                           ;diskio.c: 114: DSTATUS stat;
 11711                           ;diskio.c: 115: int result;
 11712                           ;diskio.c: 117: switch (pdrv) {
 11713  0052FA  D00C               	goto	l11468
 11714  0052FC                     l11450:
 11715                           
 11716                           ;diskio.c: 119: stat = sdc_disk_initialize();
 11717  0052FC  ECB2  F019         	call	_sdc_disk_initialize	;wreg free
 11718  005300  6E32               	movwf	disk_initialize@stat,c
 11719                           
 11720                           ;diskio.c: 123: return stat;
 11721  005302  5032               	movf	disk_initialize@stat,w,c
 11722  005304  0012               	return	
 11723  005306                     l11456:
 11724                           
 11725                           ;diskio.c: 126: stat = sdc_disk_initialize();
 11726  005306  ECB2  F019         	call	_sdc_disk_initialize	;wreg free
 11727  00530A  6E32               	movwf	disk_initialize@stat,c
 11728                           
 11729                           ;diskio.c: 130: return stat;
 11730  00530C  5032               	movf	disk_initialize@stat,w,c
 11731  00530E  0012               	return	
 11732  005310                     l11462:
 11733                           
 11734                           ;diskio.c: 137: return stat;
 11735  005310  5032               	movf	disk_initialize@stat,w,c
 11736  005312  0012               	return	
 11737  005314                     l11468:
 11738  005314  5031               	movf	disk_initialize@pdrv,w,c
 11739                           
 11740                           ; Switch size 1, requested type "space"
 11741                           ; Number of cases is 3, Range of values is 0 to 2
 11742                           ; switch strategies available:
 11743                           ; Name         Instructions Cycles
 11744                           ; simple_byte           10     6 (average)
 11745                           ;	Chosen strategy is simple_byte
 11746  005316  0A00               	xorlw	0	; case 0
 11747  005318  B4D8               	btfsc	status,2,c
 11748  00531A  D7F5               	goto	l11456
 11749  00531C  0A01               	xorlw	1	; case 1
 11750  00531E  B4D8               	btfsc	status,2,c
 11751  005320  D7ED               	goto	l11450
 11752  005322  0A03               	xorlw	3	; case 2
 11753  005324  B4D8               	btfsc	status,2,c
 11754  005326  D7F4               	goto	l11462
 11755                           
 11756                           ;diskio.c: 139: return 0x01;
 11757  005328  0E01               	movlw	1
 11758  00532A  0012               	return	
 11759  00532C                     __end_of_disk_initialize:
 11760                           	opt stack 0
 11761                           tosu	equ	0xFFF
 11762                           tosh	equ	0xFFE
 11763                           tosl	equ	0xFFD
 11764                           pclath	equ	0xFFA
 11765                           tblptru	equ	0xFF8
 11766                           tblptrh	equ	0xFF7
 11767                           tblptrl	equ	0xFF6
 11768                           tablat	equ	0xFF5
 11769                           prodh	equ	0xFF4
 11770                           prodl	equ	0xFF3
 11771                           intcon	equ	0xFF2
 11772                           intcon2	equ	0xFF1
 11773                           intcon3	equ	0xFF0
 11774                           postinc0	equ	0xFEE
 11775                           wreg	equ	0xFE8
 11776                           indf1	equ	0xFE7
 11777                           postinc1	equ	0xFE6
 11778                           postdec1	equ	0xFE5
 11779                           fsr1h	equ	0xFE2
 11780                           fsr1l	equ	0xFE1
 11781                           indf2	equ	0xFDF
 11782                           postinc2	equ	0xFDE
 11783                           postdec2	equ	0xFDD
 11784                           fsr2h	equ	0xFDA
 11785                           fsr2l	equ	0xFD9
 11786                           status	equ	0xFD8
 11787                           
 11788 ;; *************** function _sdc_disk_initialize *****************
 11789 ;; Defined at:
 11790 ;;		line 295 in file "bibliotecas/diskio.c"
 11791 ;; Parameters:    Size  Location     Type
 11792 ;;		None
 11793 ;; Auto vars:     Size  Location     Type
 11794 ;;  teste          10    0        unsigned char [10]
 11795 ;;  count           2   12[BANK0 ] int 
 11796 ;;  count_nosd      2    9[BANK0 ] int 
 11797 ;;  i               2    7[BANK0 ] int 
 11798 ;;  receive         2    0        unsigned int 
 11799 ;;  buff            1   14[BANK0 ] unsigned char 
 11800 ;;  stat            1   11[BANK0 ] unsigned char 
 11801 ;; Return value:  Size  Location     Type
 11802 ;;                  1    wreg      unsigned char 
 11803 ;; Registers used:
 11804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11805 ;; Tracked objects:
 11806 ;;		On entry : 0/0
 11807 ;;		On exit  : 0/0
 11808 ;;		Unchanged: 0/0
 11809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11810 ;;      Params:         0       0       0       0       0       0       0       0       0
 11811 ;;      Locals:         0       8       0       0       0       0       0       0       0
 11812 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11813 ;;      Totals:         1       8       0       0       0       0       0       0       0
 11814 ;;Total ram usage:        9 bytes
 11815 ;; Hardware stack levels used:    1
 11816 ;; Hardware stack levels required when called:    6
 11817 ;; This function calls:
 11818 ;;		_command
 11819 ;;		_dummy_clocks
 11820 ;;		_escreve_frase_ram_lcd
 11821 ;;		_escreve_inteiro_lcd
 11822 ;;		_posicao_cursor_lcd
 11823 ;;		_response
 11824 ;; This function is called by:
 11825 ;;		_disk_initialize
 11826 ;; This function uses a non-reentrant model
 11827 ;;
 11828                           
 11829                           	psect	text30
 11830  003364                     __ptext30:
 11831                           	opt stack 0
 11832  003364                     _sdc_disk_initialize:
 11833                           	opt stack 19
 11834                           
 11835                           ;diskio.c: 298: int i = 0, count = 0, count_nosd = 0;
 11836                           
 11837                           ;incstack = 0
 11838  003364  0E00               	movlw	0
 11839  003366  0100               	movlb	0	; () banked
 11840  003368  6F68               	movwf	(sdc_disk_initialize@i+1)& (0+255),b
 11841  00336A  0E00               	movlw	0
 11842  00336C  6F67               	movwf	sdc_disk_initialize@i& (0+255),b
 11843  00336E  0E00               	movlw	0
 11844  003370  0100               	movlb	0	; () banked
 11845  003372  6F6D               	movwf	(sdc_disk_initialize@count+1)& (0+255),b
 11846  003374  0E00               	movlw	0
 11847  003376  6F6C               	movwf	sdc_disk_initialize@count& (0+255),b
 11848  003378  0E00               	movlw	0
 11849  00337A  0100               	movlb	0	; () banked
 11850  00337C  6F6A               	movwf	(sdc_disk_initialize@count_nosd+1)& (0+255),b
 11851  00337E  0E00               	movlw	0
 11852  003380  6F69               	movwf	sdc_disk_initialize@count_nosd& (0+255),b
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;diskio.c: 299: unsigned char buff, teste[10];
 11856                           ;diskio.c: 300: DSTATUS stat;
 11857                           ;diskio.c: 301: unsigned int receive;
 11858                           ;diskio.c: 305: LATBbits.LATB4 = 0;
 11859  003382  988A               	bcf	3978,4,c	;volatile
 11860                           
 11861                           ; BSR set to: 0
 11862                           ;diskio.c: 306: LATBbits.LATB7 = 1;
 11863  003384  8E8A               	bsf	3978,7,c	;volatile
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;diskio.c: 307: dummy_clocks(8);
 11867  003386  0E08               	movlw	8
 11868  003388  EC06  F029         	call	_dummy_clocks
 11869                           
 11870                           ;diskio.c: 308: command(0X40, 0X00000000, 0X95);
 11871  00338C  0E00               	movlw	0
 11872  00338E  6E18               	movwf	command@arg,c
 11873  003390  0E00               	movlw	0
 11874  003392  6E19               	movwf	command@arg+1,c
 11875  003394  0E00               	movlw	0
 11876  003396  6E1A               	movwf	command@arg+2,c
 11877  003398  0E00               	movlw	0
 11878  00339A  6E1B               	movwf	command@arg+3,c
 11879  00339C  0E95               	movlw	149
 11880  00339E  6E1C               	movwf	command@CRC,c
 11881  0033A0  0E40               	movlw	64
 11882  0033A2  EC60  F029         	call	_command
 11883                           
 11884                           ;diskio.c: 309: LATBbits.LATB4 = 1;
 11885  0033A6  888A               	bsf	3978,4,c	;volatile
 11886  0033A8                     l11142:
 11887                           
 11888                           ;diskio.c: 311: buff = response();
 11889  0033A8  EC83  F02A         	call	_response	;wreg free
 11890  0033AC  0100               	movlb	0	; () banked
 11891  0033AE  6F6E               	movwf	sdc_disk_initialize@buff& (0+255),b
 11892                           
 11893                           ; BSR set to: 0
 11894                           ;diskio.c: 312: count++;
 11895  0033B0  0100               	movlb	0	; () banked
 11896  0033B2  4B6C               	infsnz	sdc_disk_initialize@count& (0+255),f,b
 11897  0033B4  2B6D               	incf	(sdc_disk_initialize@count+1)& (0+255),f,b
 11898                           
 11899                           ; BSR set to: 0
 11900                           ;diskio.c: 313: if(buff != 0x01)
 11901  0033B6  0100               	movlb	0	; () banked
 11902  0033B8  056E               	decf	sdc_disk_initialize@buff& (0+255),w,b
 11903  0033BA  B4D8               	btfsc	status,2,c
 11904  0033BC  D021               	goto	l11160
 11905                           
 11906                           ; BSR set to: 0
 11907                           ;diskio.c: 314: {
 11908                           ;diskio.c: 315: posicao_cursor_lcd(1,0);
 11909  0033BE  0E00               	movlw	0
 11910  0033C0  6E19               	movwf	posicao_cursor_lcd@coluna,c
 11911  0033C2  0E01               	movlw	1
 11912  0033C4  ECD2  F026         	call	_posicao_cursor_lcd
 11913                           
 11914                           ;diskio.c: 316: escreve_frase_ram_lcd("Sem Cartao      ");
 11915  0033C8  0E67               	movlw	low STR_8
 11916  0033CA  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 11917  0033CC  0E61               	movlw	high STR_8
 11918  0033CE  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 11919  0033D0  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 11920                           
 11921                           ;diskio.c: 317: posicao_cursor_lcd(1, 11);
 11922  0033D4  0E0B               	movlw	11
 11923  0033D6  6E19               	movwf	posicao_cursor_lcd@coluna,c
 11924  0033D8  0E01               	movlw	1
 11925  0033DA  ECD2  F026         	call	_posicao_cursor_lcd
 11926                           
 11927                           ;diskio.c: 318: escreve_inteiro_lcd(buff);
 11928  0033DE  C06E  F02E         	movff	sdc_disk_initialize@buff,escreve_inteiro_lcd@valor
 11929  0033E2  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 11930  0033E4  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 11931                           
 11932                           ;diskio.c: 319: posicao_cursor_lcd(2,0);
 11933  0033E8  0E00               	movlw	0
 11934  0033EA  6E19               	movwf	posicao_cursor_lcd@coluna,c
 11935  0033EC  0E02               	movlw	2
 11936  0033EE  ECD2  F026         	call	_posicao_cursor_lcd
 11937                           
 11938                           ;diskio.c: 320: escreve_frase_ram_lcd("Insira o Cartao");
 11939  0033F2  0E0A               	movlw	low STR_9
 11940  0033F4  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 11941  0033F6  0E62               	movlw	high STR_9
 11942  0033F8  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 11943  0033FA  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 11944                           
 11945                           ;diskio.c: 321: }
 11946  0033FE  D016               	goto	l11166
 11947  003400                     l11160:
 11948                           
 11949                           ;diskio.c: 322: else
 11950                           ;diskio.c: 323: {
 11951                           ;diskio.c: 324: posicao_cursor_lcd(1,0);
 11952  003400  0E00               	movlw	0
 11953  003402  6E19               	movwf	posicao_cursor_lcd@coluna,c
 11954  003404  0E01               	movlw	1
 11955  003406  ECD2  F026         	call	_posicao_cursor_lcd
 11956                           
 11957                           ;diskio.c: 325: escreve_frase_ram_lcd("                ");
 11958  00340A  0EC3               	movlw	low (STR_33+2)
 11959  00340C  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 11960  00340E  0E60               	movlw	high (STR_33+2)
 11961  003410  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 11962  003412  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 11963                           
 11964                           ;diskio.c: 326: posicao_cursor_lcd(2,0);
 11965  003416  0E00               	movlw	0
 11966  003418  6E19               	movwf	posicao_cursor_lcd@coluna,c
 11967  00341A  0E02               	movlw	2
 11968  00341C  ECD2  F026         	call	_posicao_cursor_lcd
 11969                           
 11970                           ;diskio.c: 327: escreve_frase_ram_lcd("                ");
 11971  003420  0EC3               	movlw	low (STR_33+2)
 11972  003422  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 11973  003424  0E60               	movlw	high (STR_33+2)
 11974  003426  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 11975  003428  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 11976  00342C                     l11166:
 11977                           
 11978                           ;diskio.c: 328: }
 11979                           ;diskio.c: 329: }while((buff!=0X01) && count<100);
 11980  00342C  0100               	movlb	0	; () banked
 11981  00342E  056E               	decf	sdc_disk_initialize@buff& (0+255),w,b
 11982  003430  B4D8               	btfsc	status,2,c
 11983  003432  D00B               	goto	l11170
 11984                           
 11985                           ; BSR set to: 0
 11986  003434  0100               	movlb	0	; () banked
 11987  003436  BF6D               	btfsc	(sdc_disk_initialize@count+1)& (0+255),7,b
 11988  003438  D7B7               	goto	l11142
 11989  00343A  0100               	movlb	0	; () banked
 11990  00343C  516D               	movf	(sdc_disk_initialize@count+1)& (0+255),w,b
 11991  00343E  E105               	bnz	l11170
 11992  003440  0E64               	movlw	100
 11993  003442  0100               	movlb	0	; () banked
 11994  003444  5D6C               	subwf	sdc_disk_initialize@count& (0+255),w,b
 11995  003446  A0D8               	btfss	status,0,c
 11996  003448  D7AF               	goto	l11142
 11997  00344A                     l11170:
 11998                           
 11999                           ; BSR set to: 0
 12000                           ;diskio.c: 330: count = 0;
 12001  00344A  0E00               	movlw	0
 12002  00344C  0100               	movlb	0	; () banked
 12003  00344E  6F6D               	movwf	(sdc_disk_initialize@count+1)& (0+255),b
 12004  003450  0E00               	movlw	0
 12005  003452  6F6C               	movwf	sdc_disk_initialize@count& (0+255),b
 12006                           
 12007                           ; BSR set to: 0
 12008                           ;diskio.c: 333: buff = 0xFF;
 12009  003454  0100               	movlb	0	; () banked
 12010  003456  696E               	setf	sdc_disk_initialize@buff& (0+255),b
 12011                           
 12012                           ; BSR set to: 0
 12013                           ;diskio.c: 334: LATBbits.LATB4 = 0;
 12014  003458  988A               	bcf	3978,4,c	;volatile
 12015                           
 12016                           ; BSR set to: 0
 12017                           ;diskio.c: 336: dummy_clocks(8);
 12018  00345A  0E08               	movlw	8
 12019  00345C  EC06  F029         	call	_dummy_clocks
 12020                           
 12021                           ;diskio.c: 337: command(0X48, 0x000001AA, 0x87);
 12022  003460  0EAA               	movlw	170
 12023  003462  6E18               	movwf	command@arg,c
 12024  003464  0E01               	movlw	1
 12025  003466  6E19               	movwf	command@arg+1,c
 12026  003468  0E00               	movlw	0
 12027  00346A  6E1A               	movwf	command@arg+2,c
 12028  00346C  0E00               	movlw	0
 12029  00346E  6E1B               	movwf	command@arg+3,c
 12030  003470  0E87               	movlw	135
 12031  003472  6E1C               	movwf	command@CRC,c
 12032  003474  0E48               	movlw	72
 12033  003476  EC60  F029         	call	_command
 12034                           
 12035                           ;diskio.c: 338: LATBbits.LATB4 = 1;
 12036  00347A  888A               	bsf	3978,4,c	;volatile
 12037  00347C                     l11182:
 12038                           
 12039                           ;diskio.c: 340: buff = response();
 12040  00347C  EC83  F02A         	call	_response	;wreg free
 12041  003480  0100               	movlb	0	; () banked
 12042  003482  6F6E               	movwf	sdc_disk_initialize@buff& (0+255),b
 12043                           
 12044                           ; BSR set to: 0
 12045                           ;diskio.c: 341: }while((buff!=0X01));
 12046  003484  0100               	movlb	0	; () banked
 12047  003486  056E               	decf	sdc_disk_initialize@buff& (0+255),w,b
 12048  003488  A4D8               	btfss	status,2,c
 12049  00348A  D7F8               	goto	l11182
 12050                           
 12051                           ; BSR set to: 0
 12052                           ;diskio.c: 342: _delay((unsigned long)((10)*(48000000/4000.0)));
 12053                           
 12054                           ; BSR set to: 0
 12055  00348C  0E9C               	movlw	156
 12056  00348E  6E30               	movwf	??_sdc_disk_initialize& (0+255),c
 12057  003490  0ED7               	movlw	215
 12058  003492                     u16797:
 12059  003492  2EE8               	decfsz	wreg,f,c
 12060  003494  D7FE               	bra	u16797
 12061  003496  2E30               	decfsz	??_sdc_disk_initialize& (0+255),f,c
 12062  003498  D7FC               	bra	u16797
 12063  00349A  F000               	nop	
 12064                           
 12065                           ;diskio.c: 346: buff = 0xFF;
 12066  00349C  0100               	movlb	0	; () banked
 12067  00349E  696E               	setf	sdc_disk_initialize@buff& (0+255),b
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;diskio.c: 347: LATBbits.LATB4 = 0;
 12071  0034A0  988A               	bcf	3978,4,c	;volatile
 12072                           
 12073                           ; BSR set to: 0
 12074                           ;diskio.c: 349: dummy_clocks(8);
 12075  0034A2  0E08               	movlw	8
 12076  0034A4  EC06  F029         	call	_dummy_clocks
 12077                           
 12078                           ;diskio.c: 350: command(0X77, 0x00000000, 0x65);
 12079  0034A8  0E00               	movlw	0
 12080  0034AA  6E18               	movwf	command@arg,c
 12081  0034AC  0E00               	movlw	0
 12082  0034AE  6E19               	movwf	command@arg+1,c
 12083  0034B0  0E00               	movlw	0
 12084  0034B2  6E1A               	movwf	command@arg+2,c
 12085  0034B4  0E00               	movlw	0
 12086  0034B6  6E1B               	movwf	command@arg+3,c
 12087  0034B8  0E65               	movlw	101
 12088  0034BA  6E1C               	movwf	command@CRC,c
 12089  0034BC  0E77               	movlw	119
 12090  0034BE  EC60  F029         	call	_command
 12091                           
 12092                           ;diskio.c: 351: LATBbits.LATB4 = 1;
 12093  0034C2  888A               	bsf	3978,4,c	;volatile
 12094                           
 12095                           ;diskio.c: 353: _delay((unsigned long)((10)*(48000000/4000.0)));
 12096  0034C4  0E9C               	movlw	156
 12097  0034C6  6E30               	movwf	??_sdc_disk_initialize& (0+255),c
 12098  0034C8  0ED7               	movlw	215
 12099  0034CA                     u16807:
 12100  0034CA  2EE8               	decfsz	wreg,f,c
 12101  0034CC  D7FE               	bra	u16807
 12102  0034CE  2E30               	decfsz	??_sdc_disk_initialize& (0+255),f,c
 12103  0034D0  D7FC               	bra	u16807
 12104  0034D2  F000               	nop	
 12105                           
 12106                           ;diskio.c: 355: buff = 0xFF;
 12107  0034D4  0100               	movlb	0	; () banked
 12108  0034D6  696E               	setf	sdc_disk_initialize@buff& (0+255),b
 12109                           
 12110                           ; BSR set to: 0
 12111                           ;diskio.c: 356: count = 0;
 12112  0034D8  0E00               	movlw	0
 12113  0034DA  0100               	movlb	0	; () banked
 12114  0034DC  6F6D               	movwf	(sdc_disk_initialize@count+1)& (0+255),b
 12115  0034DE  0E00               	movlw	0
 12116  0034E0  6F6C               	movwf	sdc_disk_initialize@count& (0+255),b
 12117                           
 12118                           ; BSR set to: 0
 12119                           ;diskio.c: 358: _delay((unsigned long)((10)*(48000000/4000.0)));
 12120  0034E2  0E9C               	movlw	156
 12121  0034E4  6E30               	movwf	??_sdc_disk_initialize& (0+255),c
 12122  0034E6  0ED7               	movlw	215
 12123  0034E8                     u16817:
 12124  0034E8  2EE8               	decfsz	wreg,f,c
 12125  0034EA  D7FE               	bra	u16817
 12126  0034EC  2E30               	decfsz	??_sdc_disk_initialize& (0+255),f,c
 12127  0034EE  D7FC               	bra	u16817
 12128  0034F0  F000               	nop	
 12129                           
 12130                           ;diskio.c: 360: LATBbits.LATB4 = 0;
 12131  0034F2  988A               	bcf	3978,4,c	;volatile
 12132                           
 12133                           ;diskio.c: 362: dummy_clocks(8);
 12134  0034F4  0E08               	movlw	8
 12135  0034F6  EC06  F029         	call	_dummy_clocks
 12136                           
 12137                           ;diskio.c: 363: command(0X69, 0x00000000, 0x00);
 12138  0034FA  0E00               	movlw	0
 12139  0034FC  6E18               	movwf	command@arg,c
 12140  0034FE  0E00               	movlw	0
 12141  003500  6E19               	movwf	command@arg+1,c
 12142  003502  0E00               	movlw	0
 12143  003504  6E1A               	movwf	command@arg+2,c
 12144  003506  0E00               	movlw	0
 12145  003508  6E1B               	movwf	command@arg+3,c
 12146  00350A  0E00               	movlw	0
 12147  00350C  6E1C               	movwf	command@CRC,c
 12148  00350E  0E69               	movlw	105
 12149  003510  EC60  F029         	call	_command
 12150                           
 12151                           ;diskio.c: 364: LATBbits.LATB4 = 1;
 12152  003514  888A               	bsf	3978,4,c	;volatile
 12153                           
 12154                           ;diskio.c: 366: _delay((unsigned long)((10)*(48000000/4000.0)));
 12155  003516  0E9C               	movlw	156
 12156  003518  6E30               	movwf	??_sdc_disk_initialize& (0+255),c
 12157  00351A  0ED7               	movlw	215
 12158  00351C                     u16827:
 12159  00351C  2EE8               	decfsz	wreg,f,c
 12160  00351E  D7FE               	bra	u16827
 12161  003520  2E30               	decfsz	??_sdc_disk_initialize& (0+255),f,c
 12162  003522  D7FC               	bra	u16827
 12163  003524  F000               	nop	
 12164                           
 12165                           ;diskio.c: 367: LATBbits.LATB4 = 0;
 12166  003526  988A               	bcf	3978,4,c	;volatile
 12167                           
 12168                           ;diskio.c: 369: dummy_clocks(8);
 12169  003528  0E08               	movlw	8
 12170  00352A  EC06  F029         	call	_dummy_clocks
 12171                           
 12172                           ;diskio.c: 370: command(0X41, 0x00000000, 0x00);
 12173  00352E  0E00               	movlw	0
 12174  003530  6E18               	movwf	command@arg,c
 12175  003532  0E00               	movlw	0
 12176  003534  6E19               	movwf	command@arg+1,c
 12177  003536  0E00               	movlw	0
 12178  003538  6E1A               	movwf	command@arg+2,c
 12179  00353A  0E00               	movlw	0
 12180  00353C  6E1B               	movwf	command@arg+3,c
 12181  00353E  0E00               	movlw	0
 12182  003540  6E1C               	movwf	command@CRC,c
 12183  003542  0E41               	movlw	65
 12184  003544  EC60  F029         	call	_command
 12185                           
 12186                           ;diskio.c: 371: LATBbits.LATB4 = 1;
 12187  003548  888A               	bsf	3978,4,c	;volatile
 12188  00354A                     l11222:
 12189                           
 12190                           ;diskio.c: 374: {
 12191                           ;diskio.c: 375: buff = response();
 12192  00354A  EC83  F02A         	call	_response	;wreg free
 12193  00354E  0100               	movlb	0	; () banked
 12194  003550  6F6E               	movwf	sdc_disk_initialize@buff& (0+255),b
 12195                           
 12196                           ; BSR set to: 0
 12197                           ;diskio.c: 376: count++;
 12198  003552  0100               	movlb	0	; () banked
 12199  003554  4B6C               	infsnz	sdc_disk_initialize@count& (0+255),f,b
 12200  003556  2B6D               	incf	(sdc_disk_initialize@count+1)& (0+255),f,b
 12201                           
 12202                           ; BSR set to: 0
 12203                           ;diskio.c: 378: if(buff != 0x00)
 12204  003558  0100               	movlb	0	; () banked
 12205  00355A  516E               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12206  00355C  0100               	movlb	0	; () banked
 12207  00355E  B4D8               	btfsc	status,2,c
 12208  003560  D01B               	goto	l11238
 12209                           
 12210                           ; BSR set to: 0
 12211                           ;diskio.c: 379: {
 12212                           ;diskio.c: 380: posicao_cursor_lcd(2,0);
 12213  003562  0E00               	movlw	0
 12214  003564  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12215  003566  0E02               	movlw	2
 12216  003568  ECD2  F026         	call	_posicao_cursor_lcd
 12217                           
 12218                           ;diskio.c: 381: escreve_frase_ram_lcd("Erro Idle St    ");
 12219  00356C  0E89               	movlw	low STR_12
 12220  00356E  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12221  003570  0E61               	movlw	high STR_12
 12222  003572  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12223  003574  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 12224                           
 12225                           ;diskio.c: 382: escreve_inteiro_lcd(buff);
 12226  003578  C06E  F02E         	movff	sdc_disk_initialize@buff,escreve_inteiro_lcd@valor
 12227  00357C  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 12228  00357E  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 12229                           
 12230                           ;diskio.c: 383: posicao_cursor_lcd(2,13);
 12231  003582  0E0D               	movlw	13
 12232  003584  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12233  003586  0E02               	movlw	2
 12234  003588  ECD2  F026         	call	_posicao_cursor_lcd
 12235                           
 12236                           ;diskio.c: 384: escreve_inteiro_lcd(count);
 12237  00358C  C06C  F02E         	movff	sdc_disk_initialize@count,escreve_inteiro_lcd@valor
 12238  003590  C06D  F02F         	movff	sdc_disk_initialize@count+1,escreve_inteiro_lcd@valor+1
 12239  003594  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 12240  003598                     l11238:
 12241                           
 12242                           ;diskio.c: 385: }
 12243                           ;diskio.c: 387: }while(buff != 0x00);
 12244  003598  0100               	movlb	0	; () banked
 12245  00359A  516E               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12246  00359C  0100               	movlb	0	; () banked
 12247  00359E  A4D8               	btfss	status,2,c
 12248  0035A0  D7D4               	goto	l11222
 12249                           
 12250                           ; BSR set to: 0
 12251                           ;diskio.c: 389: _delay((unsigned long)((10)*(48000000/4000.0)));
 12252                           
 12253                           ; BSR set to: 0
 12254  0035A2  0E9C               	movlw	156
 12255  0035A4  6E30               	movwf	??_sdc_disk_initialize& (0+255),c
 12256  0035A6  0ED7               	movlw	215
 12257  0035A8                     u16837:
 12258  0035A8  2EE8               	decfsz	wreg,f,c
 12259  0035AA  D7FE               	bra	u16837
 12260  0035AC  2E30               	decfsz	??_sdc_disk_initialize& (0+255),f,c
 12261  0035AE  D7FC               	bra	u16837
 12262  0035B0  F000               	nop	
 12263                           
 12264                           ;diskio.c: 394: _delay((unsigned long)((10)*(48000000/4000.0)));
 12265  0035B2  0E9C               	movlw	156
 12266  0035B4  6E30               	movwf	??_sdc_disk_initialize& (0+255),c
 12267  0035B6  0ED7               	movlw	215
 12268  0035B8                     u16847:
 12269  0035B8  2EE8               	decfsz	wreg,f,c
 12270  0035BA  D7FE               	bra	u16847
 12271  0035BC  2E30               	decfsz	??_sdc_disk_initialize& (0+255),f,c
 12272  0035BE  D7FC               	bra	u16847
 12273  0035C0  F000               	nop	
 12274                           
 12275                           ;diskio.c: 396: LATBbits.LATB4 = 0;
 12276  0035C2  988A               	bcf	3978,4,c	;volatile
 12277                           
 12278                           ;diskio.c: 397: LATBbits.LATB7 = 1;
 12279  0035C4  8E8A               	bsf	3978,7,c	;volatile
 12280                           
 12281                           ;diskio.c: 398: dummy_clocks(8);
 12282  0035C6  0E08               	movlw	8
 12283  0035C8  EC06  F029         	call	_dummy_clocks
 12284                           
 12285                           ;diskio.c: 399: command(0X50, 0x00000200, 0xFF);
 12286  0035CC  0E00               	movlw	0
 12287  0035CE  6E18               	movwf	command@arg,c
 12288  0035D0  0E02               	movlw	2
 12289  0035D2  6E19               	movwf	command@arg+1,c
 12290  0035D4  0E00               	movlw	0
 12291  0035D6  6E1A               	movwf	command@arg+2,c
 12292  0035D8  0E00               	movlw	0
 12293  0035DA  6E1B               	movwf	command@arg+3,c
 12294  0035DC  0EFF               	movlw	255
 12295  0035DE  6E1C               	movwf	command@CRC,c
 12296  0035E0  0E50               	movlw	80
 12297  0035E2  EC60  F029         	call	_command
 12298                           
 12299                           ;diskio.c: 400: LATBbits.LATB4 = 1;
 12300  0035E6  888A               	bsf	3978,4,c	;volatile
 12301                           
 12302                           ;diskio.c: 402: count = 0;
 12303  0035E8  0E00               	movlw	0
 12304  0035EA  0100               	movlb	0	; () banked
 12305  0035EC  6F6D               	movwf	(sdc_disk_initialize@count+1)& (0+255),b
 12306  0035EE  0E00               	movlw	0
 12307  0035F0  6F6C               	movwf	sdc_disk_initialize@count& (0+255),b
 12308  0035F2                     l11254:
 12309                           
 12310                           ; BSR set to: 0
 12311                           ;diskio.c: 404: {
 12312                           ;diskio.c: 405: buff = response();
 12313  0035F2  EC83  F02A         	call	_response	;wreg free
 12314  0035F6  0100               	movlb	0	; () banked
 12315  0035F8  6F6E               	movwf	sdc_disk_initialize@buff& (0+255),b
 12316                           
 12317                           ; BSR set to: 0
 12318                           ;diskio.c: 406: count++;
 12319  0035FA  0100               	movlb	0	; () banked
 12320  0035FC  4B6C               	infsnz	sdc_disk_initialize@count& (0+255),f,b
 12321  0035FE  2B6D               	incf	(sdc_disk_initialize@count+1)& (0+255),f,b
 12322                           
 12323                           ; BSR set to: 0
 12324                           ;diskio.c: 407: if(buff != 0x00)
 12325  003600  0100               	movlb	0	; () banked
 12326  003602  516E               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12327  003604  0100               	movlb	0	; () banked
 12328  003606  B4D8               	btfsc	status,2,c
 12329  003608  D020               	goto	l11272
 12330                           
 12331                           ; BSR set to: 0
 12332                           ;diskio.c: 408: {
 12333                           ;diskio.c: 409: posicao_cursor_lcd(2,0);
 12334  00360A  0E00               	movlw	0
 12335  00360C  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12336  00360E  0E02               	movlw	2
 12337  003610  ECD2  F026         	call	_posicao_cursor_lcd
 12338                           
 12339                           ;diskio.c: 410: escreve_frase_ram_lcd("Set. 512b       ");
 12340  003614  0E56               	movlw	low STR_13
 12341  003616  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12342  003618  0E61               	movlw	high STR_13
 12343  00361A  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12344  00361C  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 12345                           
 12346                           ;diskio.c: 411: posicao_cursor_lcd(2,0);
 12347  003620  0E00               	movlw	0
 12348  003622  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12349  003624  0E02               	movlw	2
 12350  003626  ECD2  F026         	call	_posicao_cursor_lcd
 12351                           
 12352                           ;diskio.c: 412: escreve_inteiro_lcd(buff);
 12353  00362A  C06E  F02E         	movff	sdc_disk_initialize@buff,escreve_inteiro_lcd@valor
 12354  00362E  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 12355  003630  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 12356                           
 12357                           ;diskio.c: 413: posicao_cursor_lcd(2,10);
 12358  003634  0E0A               	movlw	10
 12359  003636  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12360  003638  0E02               	movlw	2
 12361  00363A  ECD2  F026         	call	_posicao_cursor_lcd
 12362                           
 12363                           ;diskio.c: 414: escreve_inteiro_lcd(count);
 12364  00363E  C06C  F02E         	movff	sdc_disk_initialize@count,escreve_inteiro_lcd@valor
 12365  003642  C06D  F02F         	movff	sdc_disk_initialize@count+1,escreve_inteiro_lcd@valor+1
 12366  003646  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 12367  00364A                     l11272:
 12368                           
 12369                           ;diskio.c: 415: }
 12370                           ;diskio.c: 416: }while(buff != 0x00);
 12371  00364A  0100               	movlb	0	; () banked
 12372  00364C  516E               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12373  00364E  0100               	movlb	0	; () banked
 12374  003650  A4D8               	btfss	status,2,c
 12375  003652  D7CF               	goto	l11254
 12376                           
 12377                           ; BSR set to: 0
 12378                           ;diskio.c: 417: posicao_cursor_lcd(2,10);
 12379                           
 12380                           ; BSR set to: 0
 12381  003654  0E0A               	movlw	10
 12382  003656  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12383  003658  0E02               	movlw	2
 12384  00365A  ECD2  F026         	call	_posicao_cursor_lcd
 12385                           
 12386                           ;diskio.c: 418: escreve_inteiro_lcd(stat);
 12387  00365E  C06B  F02E         	movff	sdc_disk_initialize@stat,escreve_inteiro_lcd@valor
 12388  003662  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 12389  003664  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 12390                           
 12391                           ;diskio.c: 420: return stat;
 12392  003668  0100               	movlb	0	; () banked
 12393  00366A  516B               	movf	sdc_disk_initialize@stat& (0+255),w,b
 12394  00366C  0012               	return	
 12395  00366E                     __end_of_sdc_disk_initialize:
 12396                           	opt stack 0
 12397                           tosu	equ	0xFFF
 12398                           tosh	equ	0xFFE
 12399                           tosl	equ	0xFFD
 12400                           pclath	equ	0xFFA
 12401                           tblptru	equ	0xFF8
 12402                           tblptrh	equ	0xFF7
 12403                           tblptrl	equ	0xFF6
 12404                           tablat	equ	0xFF5
 12405                           prodh	equ	0xFF4
 12406                           prodl	equ	0xFF3
 12407                           intcon	equ	0xFF2
 12408                           intcon2	equ	0xFF1
 12409                           intcon3	equ	0xFF0
 12410                           postinc0	equ	0xFEE
 12411                           wreg	equ	0xFE8
 12412                           indf1	equ	0xFE7
 12413                           postinc1	equ	0xFE6
 12414                           postdec1	equ	0xFE5
 12415                           fsr1h	equ	0xFE2
 12416                           fsr1l	equ	0xFE1
 12417                           indf2	equ	0xFDF
 12418                           postinc2	equ	0xFDE
 12419                           postdec2	equ	0xFDD
 12420                           fsr2h	equ	0xFDA
 12421                           fsr2l	equ	0xFD9
 12422                           status	equ	0xFD8
 12423                           
 12424 ;; *************** function _check_fs *****************
 12425 ;; Defined at:
 12426 ;;		line 623 in file "bibliotecas/tff.c"
 12427 ;; Parameters:    Size  Location     Type
 12428 ;;  sect            4   35[BANK0 ] unsigned long 
 12429 ;; Auto vars:     Size  Location     Type
 12430 ;;  temp4           4   54[BANK0 ] unsigned long 
 12431 ;;  temp3           4   47[BANK0 ] unsigned long 
 12432 ;;  temp2           4   43[BANK0 ] unsigned long 
 12433 ;;  fs              2   58[BANK0 ] PTR struct _FATFS
 12434 ;;		 -> fs(552), NULL(0), 
 12435 ;;  temp            2   51[BANK0 ] int 
 12436 ;; Return value:  Size  Location     Type
 12437 ;;                  1    wreg      unsigned char 
 12438 ;; Registers used:
 12439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12440 ;; Tracked objects:
 12441 ;;		On entry : 0/0
 12442 ;;		On exit  : 0/0
 12443 ;;		Unchanged: 0/0
 12444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12445 ;;      Params:         0       4       0       0       0       0       0       0       0
 12446 ;;      Locals:         0      17       0       0       0       0       0       0       0
 12447 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12448 ;;      Totals:         0      25       0       0       0       0       0       0       0
 12449 ;;Total ram usage:       25 bytes
 12450 ;; Hardware stack levels used:    1
 12451 ;; Hardware stack levels required when called:    8
 12452 ;; This function calls:
 12453 ;;		_disk_read
 12454 ;;		_escreve_frase_ram_lcd
 12455 ;;		_escreve_inteiro_lcd
 12456 ;;		_memcmp
 12457 ;;		_posicao_cursor_lcd
 12458 ;; This function is called by:
 12459 ;;		_auto_mount
 12460 ;; This function uses a non-reentrant model
 12461 ;;
 12462                           
 12463                           	psect	text31
 12464  00289A                     __ptext31:
 12465                           	opt stack 0
 12466  00289A                     _check_fs:
 12467                           	opt stack 18
 12468                           
 12469                           ;tff.c: 627: FATFS *fs = FatFs;
 12470                           
 12471                           ; BSR set to: 0
 12472                           ;incstack = 0
 12473  00289A  C0FC  F09A         	movff	_FatFs,check_fs@fs
 12474  00289E  C0FD  F09B         	movff	_FatFs+1,check_fs@fs+1
 12475                           
 12476                           ;tff.c: 628: if (disk_read(0, fs->win, sect, 1) != RES_OK)
 12477  0028A2  0E28               	movlw	40
 12478  0028A4  0100               	movlb	0	; () banked
 12479  0028A6  259A               	addwf	check_fs@fs& (0+255),w,b
 12480  0028A8  0100               	movlb	0	; () banked
 12481  0028AA  6F78               	movwf	disk_read@buff& (0+255),b
 12482  0028AC  0E00               	movlw	0
 12483  0028AE  0100               	movlb	0	; () banked
 12484  0028B0  219B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12485  0028B2  0100               	movlb	0	; () banked
 12486  0028B4  6F79               	movwf	(disk_read@buff+1)& (0+255),b
 12487  0028B6  C083  F07A         	movff	check_fs@sect,disk_read@sector
 12488  0028BA  C084  F07B         	movff	check_fs@sect+1,disk_read@sector+1
 12489  0028BE  C085  F07C         	movff	check_fs@sect+2,disk_read@sector+2
 12490  0028C2  C086  F07D         	movff	check_fs@sect+3,disk_read@sector+3
 12491  0028C6  0E01               	movlw	1
 12492  0028C8  0100               	movlb	0	; () banked
 12493  0028CA  6F7E               	movwf	disk_read@count& (0+255),b
 12494  0028CC  0E00               	movlw	0
 12495  0028CE  ECCB  F024         	call	_disk_read
 12496  0028D2  0900               	iorlw	0
 12497  0028D4  B4D8               	btfsc	status,2,c
 12498  0028D6  D002               	goto	l11734
 12499                           
 12500                           ;tff.c: 629: {
 12501                           ;tff.c: 630: return 2;
 12502  0028D8  0E02               	movlw	2
 12503  0028DA  0012               	return	
 12504  0028DC                     l11734:
 12505                           
 12506                           ;tff.c: 631: }
 12507                           ;tff.c: 632: posicao_cursor_lcd(1,0);
 12508  0028DC  0E00               	movlw	0
 12509  0028DE  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12510  0028E0  0E01               	movlw	1
 12511  0028E2  ECD2  F026         	call	_posicao_cursor_lcd
 12512                           
 12513                           ;tff.c: 633: escreve_frase_ram_lcd("Load Boot  ");
 12514  0028E6  0E28               	movlw	low STR_21
 12515  0028E8  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12516  0028EA  0E62               	movlw	high STR_21
 12517  0028EC  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12518  0028EE  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 12519                           
 12520                           ;tff.c: 634: posicao_cursor_lcd(1,12);
 12521  0028F2  0E0C               	movlw	12
 12522  0028F4  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12523  0028F6  0E01               	movlw	1
 12524  0028F8  ECD2  F026         	call	_posicao_cursor_lcd
 12525                           
 12526                           ;tff.c: 635: int temp = disk_read(0, fs->win, sect, 1);
 12527  0028FC  0E28               	movlw	40
 12528  0028FE  0100               	movlb	0	; () banked
 12529  002900  259A               	addwf	check_fs@fs& (0+255),w,b
 12530  002902  0100               	movlb	0	; () banked
 12531  002904  6F78               	movwf	disk_read@buff& (0+255),b
 12532  002906  0E00               	movlw	0
 12533  002908  0100               	movlb	0	; () banked
 12534  00290A  219B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12535  00290C  0100               	movlb	0	; () banked
 12536  00290E  6F79               	movwf	(disk_read@buff+1)& (0+255),b
 12537  002910  C083  F07A         	movff	check_fs@sect,disk_read@sector
 12538  002914  C084  F07B         	movff	check_fs@sect+1,disk_read@sector+1
 12539  002918  C085  F07C         	movff	check_fs@sect+2,disk_read@sector+2
 12540  00291C  C086  F07D         	movff	check_fs@sect+3,disk_read@sector+3
 12541  002920  0E01               	movlw	1
 12542  002922  0100               	movlb	0	; () banked
 12543  002924  6F7E               	movwf	disk_read@count& (0+255),b
 12544  002926  0E00               	movlw	0
 12545  002928  ECCB  F024         	call	_disk_read
 12546  00292C  0100               	movlb	0	; () banked
 12547  00292E  6F87               	movwf	??_check_fs& (0+255),b
 12548  002930  0100               	movlb	0	; () banked
 12549  002932  5187               	movf	??_check_fs& (0+255),w,b
 12550  002934  0100               	movlb	0	; () banked
 12551  002936  6F93               	movwf	check_fs@temp& (0+255),b
 12552  002938  6B94               	clrf	(check_fs@temp+1)& (0+255),b
 12553                           
 12554                           ; BSR set to: 0
 12555                           ;tff.c: 636: escreve_inteiro_lcd(temp);
 12556  00293A  C093  F02E         	movff	check_fs@temp,escreve_inteiro_lcd@valor
 12557  00293E  C094  F02F         	movff	check_fs@temp+1,escreve_inteiro_lcd@valor+1
 12558  002942  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 12559                           
 12560                           ;tff.c: 637: _delay((unsigned long)((2000)*(48000000/4000.0)));
 12561  002946  0E7A               	movlw	122
 12562  002948  0100               	movlb	0	; () banked
 12563  00294A  6F88               	movwf	(??_check_fs+1)& (0+255),b
 12564  00294C  0EC1               	movlw	193
 12565  00294E  0100               	movlb	0	; () banked
 12566  002950  6F87               	movwf	??_check_fs& (0+255),b
 12567  002952  0E81               	movlw	129
 12568  002954                     u16857:
 12569  002954  2EE8               	decfsz	wreg,f,c
 12570  002956  D7FE               	bra	u16857
 12571  002958  2F87               	decfsz	??_check_fs& (0+255),f,b
 12572  00295A  D7FC               	bra	u16857
 12573  00295C  2F88               	decfsz	(??_check_fs+1)& (0+255),f,b
 12574  00295E  D7FA               	bra	u16857
 12575  002960  D000               	nop2	
 12576                           
 12577                           ;tff.c: 638: if ((WORD)(((WORD)*(volatile BYTE*)((&fs->win[510])+1)<<8)|(WORD)*(volatile
      +                           BYTE*)(&fs->win[510])) != 0xAA55)
 12578  002962  0E27               	movlw	39
 12579  002964  0100               	movlb	0	; () banked
 12580  002966  259A               	addwf	check_fs@fs& (0+255),w,b
 12581  002968  6ED9               	movwf	fsr2l,c
 12582  00296A  0E02               	movlw	2
 12583  00296C  0100               	movlb	0	; () banked
 12584  00296E  219B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12585  002970  6EDA               	movwf	fsr2h,c
 12586  002972  50DF               	movf	indf2,w,c
 12587  002974  0100               	movlb	0	; () banked
 12588  002976  6F87               	movwf	??_check_fs& (0+255),b
 12589  002978  0100               	movlb	0	; () banked
 12590  00297A  5187               	movf	??_check_fs& (0+255),w,b
 12591  00297C  0100               	movlb	0	; () banked
 12592  00297E  6F89               	movwf	(??_check_fs+2)& (0+255),b
 12593  002980  6B88               	clrf	(??_check_fs+1)& (0+255),b
 12594  002982  0E26               	movlw	38
 12595  002984  0100               	movlb	0	; () banked
 12596  002986  259A               	addwf	check_fs@fs& (0+255),w,b
 12597  002988  6ED9               	movwf	fsr2l,c
 12598  00298A  0E02               	movlw	2
 12599  00298C  0100               	movlb	0	; () banked
 12600  00298E  219B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12601  002990  6EDA               	movwf	fsr2h,c
 12602  002992  50DF               	movf	indf2,w,c
 12603  002994  0100               	movlb	0	; () banked
 12604  002996  6F8A               	movwf	(??_check_fs+3)& (0+255),b
 12605  002998  0100               	movlb	0	; () banked
 12606  00299A  518A               	movf	(??_check_fs+3)& (0+255),w,b
 12607  00299C  0100               	movlb	0	; () banked
 12608  00299E  1388               	iorwf	(??_check_fs+1)& (0+255),f,b
 12609  0029A0  0E00               	movlw	0
 12610  0029A2  1389               	iorwf	(??_check_fs+2)& (0+255),f,b
 12611  0029A4  0E55               	movlw	85
 12612  0029A6  0100               	movlb	0	; () banked
 12613  0029A8  1988               	xorwf	(??_check_fs+1)& (0+255),w,b
 12614  0029AA  E105               	bnz	u13180
 12615  0029AC  0EAA               	movlw	170
 12616  0029AE  0100               	movlb	0	; () banked
 12617  0029B0  1989               	xorwf	(??_check_fs+2)& (0+255),w,b
 12618  0029B2  B4D8               	btfsc	status,2,c
 12619  0029B4  D002               	goto	l11752
 12620  0029B6                     u13180:
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;tff.c: 639: {
 12624                           ;tff.c: 641: return 2;
 12625  0029B6  0E02               	movlw	2
 12626                           
 12627                           ; BSR set to: 0
 12628  0029B8  0012               	return	
 12629  0029BA                     l11752:
 12630                           
 12631                           ; BSR set to: 0
 12632                           ;tff.c: 642: }
 12633                           ;tff.c: 643: posicao_cursor_lcd(2,0);
 12634  0029BA  0E00               	movlw	0
 12635  0029BC  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12636  0029BE  0E02               	movlw	2
 12637  0029C0  ECD2  F026         	call	_posicao_cursor_lcd
 12638                           
 12639                           ;tff.c: 644: escreve_frase_ram_lcd("Rec. sig.         ");
 12640  0029C4  0E0D               	movlw	low STR_22
 12641  0029C6  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12642  0029C8  0E61               	movlw	high STR_22
 12643  0029CA  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12644  0029CC  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 12645                           
 12646                           ;tff.c: 645: posicao_cursor_lcd(2,10);
 12647  0029D0  0E0A               	movlw	10
 12648  0029D2  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12649  0029D4  0E02               	movlw	2
 12650  0029D6  ECD2  F026         	call	_posicao_cursor_lcd
 12651                           
 12652                           ;tff.c: 646: unsigned long int temp2 = (WORD)(((WORD)*(volatile BYTE*)((&fs->win[510])+1
      +                          )<<8)|(WORD)*(volatile BYTE*)(&fs->win[510]));
 12653  0029DA  0E27               	movlw	39
 12654  0029DC  0100               	movlb	0	; () banked
 12655  0029DE  259A               	addwf	check_fs@fs& (0+255),w,b
 12656  0029E0  6ED9               	movwf	fsr2l,c
 12657  0029E2  0E02               	movlw	2
 12658  0029E4  0100               	movlb	0	; () banked
 12659  0029E6  219B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12660  0029E8  6EDA               	movwf	fsr2h,c
 12661  0029EA  50DF               	movf	indf2,w,c
 12662  0029EC  0100               	movlb	0	; () banked
 12663  0029EE  6F87               	movwf	??_check_fs& (0+255),b
 12664  0029F0  0100               	movlb	0	; () banked
 12665  0029F2  5187               	movf	??_check_fs& (0+255),w,b
 12666  0029F4  0100               	movlb	0	; () banked
 12667  0029F6  6F89               	movwf	(??_check_fs+2)& (0+255),b
 12668  0029F8  6B88               	clrf	(??_check_fs+1)& (0+255),b
 12669  0029FA  0E26               	movlw	38
 12670  0029FC  0100               	movlb	0	; () banked
 12671  0029FE  259A               	addwf	check_fs@fs& (0+255),w,b
 12672  002A00  6ED9               	movwf	fsr2l,c
 12673  002A02  0E02               	movlw	2
 12674  002A04  0100               	movlb	0	; () banked
 12675  002A06  219B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12676  002A08  6EDA               	movwf	fsr2h,c
 12677  002A0A  50DF               	movf	indf2,w,c
 12678  002A0C  0100               	movlb	0	; () banked
 12679  002A0E  6F8A               	movwf	(??_check_fs+3)& (0+255),b
 12680  002A10  0100               	movlb	0	; () banked
 12681  002A12  518A               	movf	(??_check_fs+3)& (0+255),w,b
 12682  002A14  0100               	movlb	0	; () banked
 12683  002A16  1388               	iorwf	(??_check_fs+1)& (0+255),f,b
 12684  002A18  0E00               	movlw	0
 12685  002A1A  1389               	iorwf	(??_check_fs+2)& (0+255),f,b
 12686  002A1C  C088  F08B         	movff	??_check_fs+1,check_fs@temp2
 12687  002A20  C089  F08C         	movff	??_check_fs+2,check_fs@temp2+1
 12688  002A24  0100               	movlb	0	; () banked
 12689  002A26  6B8D               	clrf	(check_fs@temp2+2)& (0+255),b
 12690  002A28  6B8E               	clrf	(check_fs@temp2+3)& (0+255),b
 12691                           
 12692                           ; BSR set to: 0
 12693                           ;tff.c: 647: escreve_inteiro_lcd(temp2);
 12694  002A2A  C08B  F02E         	movff	check_fs@temp2,escreve_inteiro_lcd@valor
 12695  002A2E  C08C  F02F         	movff	check_fs@temp2+1,escreve_inteiro_lcd@valor+1
 12696  002A32  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 12697                           
 12698                           ;tff.c: 648: _delay((unsigned long)((3000)*(48000000/4000.0)));
 12699  002A36  0EB7               	movlw	183
 12700  002A38  0100               	movlb	0	; () banked
 12701  002A3A  6F88               	movwf	(??_check_fs+1)& (0+255),b
 12702  002A3C  0EA1               	movlw	161
 12703  002A3E  0100               	movlb	0	; () banked
 12704  002A40  6F87               	movwf	??_check_fs& (0+255),b
 12705  002A42  0EC3               	movlw	195
 12706  002A44                     u16867:
 12707  002A44  2EE8               	decfsz	wreg,f,c
 12708  002A46  D7FE               	bra	u16867
 12709  002A48  2F87               	decfsz	??_check_fs& (0+255),f,b
 12710  002A4A  D7FC               	bra	u16867
 12711  002A4C  2F88               	decfsz	(??_check_fs+1)& (0+255),f,b
 12712  002A4E  D7FA               	bra	u16867
 12713  002A50  D000               	nop2	
 12714                           
 12715                           ;tff.c: 649: if (!memcmp(&fs->win[54], "FAT", 3))
 12716  002A52  0E5E               	movlw	94
 12717  002A54  0100               	movlb	0	; () banked
 12718  002A56  259A               	addwf	check_fs@fs& (0+255),w,b
 12719  002A58  6E16               	movwf	memcmp@s1,c
 12720  002A5A  0E00               	movlw	0
 12721  002A5C  0100               	movlb	0	; () banked
 12722  002A5E  219B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12723  002A60  6E17               	movwf	memcmp@s1+1,c
 12724  002A62  0E78               	movlw	low STR_23
 12725  002A64  6E18               	movwf	memcmp@s2,c
 12726  002A66  0E62               	movlw	high STR_23
 12727  002A68  6E19               	movwf	memcmp@s2+1,c
 12728  002A6A  0E00               	movlw	0
 12729  002A6C  6E1B               	movwf	memcmp@n+1,c
 12730  002A6E  0E03               	movlw	3
 12731  002A70  6E1A               	movwf	memcmp@n,c
 12732  002A72  EC7D  F024         	call	_memcmp	;wreg free
 12733  002A76  5016               	movf	?_memcmp,w,c
 12734  002A78  1017               	iorwf	?_memcmp+1,w,c
 12735  002A7A  A4D8               	btfss	status,2,c
 12736  002A7C  D002               	goto	l11770
 12737                           
 12738                           ;tff.c: 650: return 0;
 12739  002A7E  0E00               	movlw	0
 12740  002A80  0012               	return	
 12741  002A82                     l11770:
 12742                           
 12743                           ;tff.c: 652: posicao_cursor_lcd(1,0);
 12744  002A82  0E00               	movlw	0
 12745  002A84  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12746  002A86  0E01               	movlw	1
 12747  002A88  ECD2  F026         	call	_posicao_cursor_lcd
 12748                           
 12749                           ;tff.c: 653: escreve_frase_ram_lcd("FAT >           ");
 12750  002A8C  0E45               	movlw	low STR_24
 12751  002A8E  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12752  002A90  0E61               	movlw	high STR_24
 12753  002A92  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12754  002A94  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 12755                           
 12756                           ;tff.c: 654: posicao_cursor_lcd(1,8);
 12757  002A98  0E08               	movlw	8
 12758  002A9A  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12759  002A9C  0E01               	movlw	1
 12760  002A9E  ECD2  F026         	call	_posicao_cursor_lcd
 12761                           
 12762                           ;tff.c: 655: unsigned long int temp3 = !memcmp(&fs->win[54], "FAT", 3);
 12763  002AA2  0E5E               	movlw	94
 12764  002AA4  0100               	movlb	0	; () banked
 12765  002AA6  259A               	addwf	check_fs@fs& (0+255),w,b
 12766  002AA8  6E16               	movwf	memcmp@s1,c
 12767  002AAA  0E00               	movlw	0
 12768  002AAC  0100               	movlb	0	; () banked
 12769  002AAE  219B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12770  002AB0  6E17               	movwf	memcmp@s1+1,c
 12771  002AB2  0E78               	movlw	low STR_23
 12772  002AB4  6E18               	movwf	memcmp@s2,c
 12773  002AB6  0E62               	movlw	high STR_23
 12774  002AB8  6E19               	movwf	memcmp@s2+1,c
 12775  002ABA  0E00               	movlw	0
 12776  002ABC  6E1B               	movwf	memcmp@n+1,c
 12777  002ABE  0E03               	movlw	3
 12778  002AC0  6E1A               	movwf	memcmp@n,c
 12779  002AC2  EC7D  F024         	call	_memcmp	;wreg free
 12780  002AC6  5016               	movf	?_memcmp,w,c
 12781  002AC8  1017               	iorwf	?_memcmp+1,w,c
 12782  002ACA  A4D8               	btfss	status,2,c
 12783  002ACC  D002               	goto	u13200
 12784  002ACE  0E01               	movlw	1
 12785  002AD0  D001               	goto	u13210
 12786  002AD2                     u13200:
 12787  002AD2  0E00               	movlw	0
 12788  002AD4                     u13210:
 12789  002AD4  0100               	movlb	0	; () banked
 12790  002AD6  6F8F               	movwf	check_fs@temp3& (0+255),b
 12791  002AD8  6B90               	clrf	(check_fs@temp3+1)& (0+255),b
 12792  002ADA  6B91               	clrf	(check_fs@temp3+2)& (0+255),b
 12793  002ADC  6B92               	clrf	(check_fs@temp3+3)& (0+255),b
 12794                           
 12795                           ; BSR set to: 0
 12796                           ;tff.c: 656: escreve_inteiro_lcd(temp3);
 12797  002ADE  C08F  F02E         	movff	check_fs@temp3,escreve_inteiro_lcd@valor
 12798  002AE2  C090  F02F         	movff	check_fs@temp3+1,escreve_inteiro_lcd@valor+1
 12799  002AE6  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 12800                           
 12801                           ;tff.c: 657: _delay((unsigned long)((3000)*(48000000/4000.0)));
 12802  002AEA  0EB7               	movlw	183
 12803  002AEC  0100               	movlb	0	; () banked
 12804  002AEE  6F88               	movwf	(??_check_fs+1)& (0+255),b
 12805  002AF0  0EA1               	movlw	161
 12806  002AF2  0100               	movlb	0	; () banked
 12807  002AF4  6F87               	movwf	??_check_fs& (0+255),b
 12808  002AF6  0EC3               	movlw	195
 12809  002AF8                     u16877:
 12810  002AF8  2EE8               	decfsz	wreg,f,c
 12811  002AFA  D7FE               	bra	u16877
 12812  002AFC  2F87               	decfsz	??_check_fs& (0+255),f,b
 12813  002AFE  D7FC               	bra	u16877
 12814  002B00  2F88               	decfsz	(??_check_fs+1)& (0+255),f,b
 12815  002B02  D7FA               	bra	u16877
 12816  002B04  D000               	nop2	
 12817                           
 12818                           ;tff.c: 659: if (!memcmp(&fs->win[82], "FAT32", 5) && !(fs->win[40] & 0x80))
 12819  002B06  0E7A               	movlw	122
 12820  002B08  0100               	movlb	0	; () banked
 12821  002B0A  259A               	addwf	check_fs@fs& (0+255),w,b
 12822  002B0C  6E16               	movwf	memcmp@s1,c
 12823  002B0E  0E00               	movlw	0
 12824  002B10  0100               	movlb	0	; () banked
 12825  002B12  219B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12826  002B14  6E17               	movwf	memcmp@s1+1,c
 12827  002B16  0E51               	movlw	low STR_26
 12828  002B18  6E18               	movwf	memcmp@s2,c
 12829  002B1A  0E62               	movlw	high STR_26
 12830  002B1C  6E19               	movwf	memcmp@s2+1,c
 12831  002B1E  0E00               	movlw	0
 12832  002B20  6E1B               	movwf	memcmp@n+1,c
 12833  002B22  0E05               	movlw	5
 12834  002B24  6E1A               	movwf	memcmp@n,c
 12835  002B26  EC7D  F024         	call	_memcmp	;wreg free
 12836  002B2A  5016               	movf	?_memcmp,w,c
 12837  002B2C  1017               	iorwf	?_memcmp+1,w,c
 12838  002B2E  A4D8               	btfss	status,2,c
 12839  002B30  D00C               	goto	l11790
 12840  002B32  0100               	movlb	0	; () banked
 12841  002B34  EE20 F050          	lfsr	2,80
 12842  002B38  519A               	movf	check_fs@fs& (0+255),w,b
 12843  002B3A  26D9               	addwf	fsr2l,f,c
 12844  002B3C  519B               	movf	(check_fs@fs+1)& (0+255),w,b
 12845  002B3E  22DA               	addwfc	fsr2h,f,c
 12846  002B40  0100               	movlb	0	; () banked
 12847  002B42  BEDF               	btfsc	indf2,7,c
 12848  002B44  D002               	goto	l11790
 12849                           
 12850                           ; BSR set to: 0
 12851                           ;tff.c: 660: return 0;
 12852  002B46  0E00               	movlw	0
 12853                           
 12854                           ; BSR set to: 0
 12855  002B48  0012               	return	
 12856  002B4A                     l11790:
 12857                           
 12858                           ;tff.c: 662: posicao_cursor_lcd(1,0);
 12859  002B4A  0E00               	movlw	0
 12860  002B4C  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12861  002B4E  0E01               	movlw	1
 12862  002B50  ECD2  F026         	call	_posicao_cursor_lcd
 12863                           
 12864                           ;tff.c: 663: escreve_frase_ram_lcd("FAT32 >           ");
 12865  002B54  0EFA               	movlw	low STR_27
 12866  002B56  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12867  002B58  0E60               	movlw	high STR_27
 12868  002B5A  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12869  002B5C  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 12870                           
 12871                           ;tff.c: 664: posicao_cursor_lcd(1,8);
 12872  002B60  0E08               	movlw	8
 12873  002B62  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12874  002B64  0E01               	movlw	1
 12875  002B66  ECD2  F026         	call	_posicao_cursor_lcd
 12876                           
 12877                           ;tff.c: 665: unsigned long int temp4 = !memcmp(&fs->win[82], "FAT32", 5);
 12878  002B6A  0E7A               	movlw	122
 12879  002B6C  0100               	movlb	0	; () banked
 12880  002B6E  259A               	addwf	check_fs@fs& (0+255),w,b
 12881  002B70  6E16               	movwf	memcmp@s1,c
 12882  002B72  0E00               	movlw	0
 12883  002B74  0100               	movlb	0	; () banked
 12884  002B76  219B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12885  002B78  6E17               	movwf	memcmp@s1+1,c
 12886  002B7A  0E51               	movlw	low STR_26
 12887  002B7C  6E18               	movwf	memcmp@s2,c
 12888  002B7E  0E62               	movlw	high STR_26
 12889  002B80  6E19               	movwf	memcmp@s2+1,c
 12890  002B82  0E00               	movlw	0
 12891  002B84  6E1B               	movwf	memcmp@n+1,c
 12892  002B86  0E05               	movlw	5
 12893  002B88  6E1A               	movwf	memcmp@n,c
 12894  002B8A  EC7D  F024         	call	_memcmp	;wreg free
 12895  002B8E  5016               	movf	?_memcmp,w,c
 12896  002B90  1017               	iorwf	?_memcmp+1,w,c
 12897  002B92  A4D8               	btfss	status,2,c
 12898  002B94  D002               	goto	u13240
 12899  002B96  0E01               	movlw	1
 12900  002B98  D001               	goto	u13250
 12901  002B9A                     u13240:
 12902  002B9A  0E00               	movlw	0
 12903  002B9C                     u13250:
 12904  002B9C  0100               	movlb	0	; () banked
 12905  002B9E  6F96               	movwf	check_fs@temp4& (0+255),b
 12906  002BA0  6B97               	clrf	(check_fs@temp4+1)& (0+255),b
 12907  002BA2  6B98               	clrf	(check_fs@temp4+2)& (0+255),b
 12908  002BA4  6B99               	clrf	(check_fs@temp4+3)& (0+255),b
 12909                           
 12910                           ; BSR set to: 0
 12911                           ;tff.c: 666: escreve_inteiro_lcd(temp4);
 12912  002BA6  C096  F02E         	movff	check_fs@temp4,escreve_inteiro_lcd@valor
 12913  002BAA  C097  F02F         	movff	check_fs@temp4+1,escreve_inteiro_lcd@valor+1
 12914  002BAE  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 12915                           
 12916                           ;tff.c: 667: posicao_cursor_lcd(2,0);
 12917  002BB2  0E00               	movlw	0
 12918  002BB4  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12919  002BB6  0E02               	movlw	2
 12920  002BB8  ECD2  F026         	call	_posicao_cursor_lcd
 12921                           
 12922                           ;tff.c: 668: escreve_frase_ram_lcd("BPB >          ");
 12923  002BBC  0EBA               	movlw	low STR_29
 12924  002BBE  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12925  002BC0  0E61               	movlw	high STR_29
 12926  002BC2  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12927  002BC4  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 12928                           
 12929                           ;tff.c: 669: posicao_cursor_lcd(2,8);
 12930  002BC8  0E08               	movlw	8
 12931  002BCA  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12932  002BCC  0E02               	movlw	2
 12933  002BCE  ECD2  F026         	call	_posicao_cursor_lcd
 12934                           
 12935                           ;tff.c: 670: temp4 = !(fs->win[40] & 0x80);
 12936  002BD2  0100               	movlb	0	; () banked
 12937  002BD4  EE20 F050          	lfsr	2,80
 12938  002BD8  519A               	movf	check_fs@fs& (0+255),w,b
 12939  002BDA  26D9               	addwf	fsr2l,f,c
 12940  002BDC  519B               	movf	(check_fs@fs+1)& (0+255),w,b
 12941  002BDE  22DA               	addwfc	fsr2h,f,c
 12942  002BE0  0100               	movlb	0	; () banked
 12943  002BE2  BEDF               	btfsc	indf2,7,c
 12944  002BE4  D002               	goto	u13260
 12945  002BE6  0E01               	movlw	1
 12946  002BE8  D001               	goto	u13270
 12947  002BEA                     u13260:
 12948  002BEA  0E00               	movlw	0
 12949  002BEC                     u13270:
 12950  002BEC  0100               	movlb	0	; () banked
 12951  002BEE  6F96               	movwf	check_fs@temp4& (0+255),b
 12952  002BF0  6B97               	clrf	(check_fs@temp4+1)& (0+255),b
 12953  002BF2  6B98               	clrf	(check_fs@temp4+2)& (0+255),b
 12954  002BF4  6B99               	clrf	(check_fs@temp4+3)& (0+255),b
 12955                           
 12956                           ; BSR set to: 0
 12957                           ;tff.c: 671: escreve_inteiro_lcd(temp4);
 12958  002BF6  C096  F02E         	movff	check_fs@temp4,escreve_inteiro_lcd@valor
 12959  002BFA  C097  F02F         	movff	check_fs@temp4+1,escreve_inteiro_lcd@valor+1
 12960  002BFE  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 12961                           
 12962                           ;tff.c: 672: _delay((unsigned long)((3000)*(48000000/4000.0)));
 12963  002C02  0EB7               	movlw	183
 12964  002C04  0100               	movlb	0	; () banked
 12965  002C06  6F88               	movwf	(??_check_fs+1)& (0+255),b
 12966  002C08  0EA1               	movlw	161
 12967  002C0A  0100               	movlb	0	; () banked
 12968  002C0C  6F87               	movwf	??_check_fs& (0+255),b
 12969  002C0E  0EC3               	movlw	195
 12970  002C10                     u16887:
 12971  002C10  2EE8               	decfsz	wreg,f,c
 12972  002C12  D7FE               	bra	u16887
 12973  002C14  2F87               	decfsz	??_check_fs& (0+255),f,b
 12974  002C16  D7FC               	bra	u16887
 12975  002C18  2F88               	decfsz	(??_check_fs+1)& (0+255),f,b
 12976  002C1A  D7FA               	bra	u16887
 12977  002C1C  D000               	nop2	
 12978                           
 12979                           ;tff.c: 673: posicao_cursor_lcd(2,0);
 12980  002C1E  0E00               	movlw	0
 12981  002C20  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12982  002C22  0E02               	movlw	2
 12983  002C24  ECD2  F026         	call	_posicao_cursor_lcd
 12984                           
 12985                           ;tff.c: 674: escreve_frase_ram_lcd("IF    >        ");
 12986  002C28  0ECA               	movlw	low STR_30
 12987  002C2A  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12988  002C2C  0E61               	movlw	high STR_30
 12989  002C2E  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12990  002C30  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 12991                           
 12992                           ;tff.c: 675: posicao_cursor_lcd(2,8);
 12993  002C34  0E08               	movlw	8
 12994  002C36  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12995  002C38  0E02               	movlw	2
 12996  002C3A  ECD2  F026         	call	_posicao_cursor_lcd
 12997                           
 12998                           ;tff.c: 676: temp4 = !memcmp(&fs->win[82], "FAT32", 5) && !(fs->win[40] & 0x80);
 12999  002C3E  0E00               	movlw	0
 13000  002C40  0100               	movlb	0	; () banked
 13001  002C42  6F95               	movwf	_check_fs$1315& (0+255),b
 13002                           
 13003                           ; BSR set to: 0
 13004  002C44  0E7A               	movlw	122
 13005  002C46  0100               	movlb	0	; () banked
 13006  002C48  259A               	addwf	check_fs@fs& (0+255),w,b
 13007  002C4A  6E16               	movwf	memcmp@s1,c
 13008  002C4C  0E00               	movlw	0
 13009  002C4E  0100               	movlb	0	; () banked
 13010  002C50  219B               	addwfc	(check_fs@fs+1)& (0+255),w,b
 13011  002C52  6E17               	movwf	memcmp@s1+1,c
 13012  002C54  0E51               	movlw	low STR_26
 13013  002C56  6E18               	movwf	memcmp@s2,c
 13014  002C58  0E62               	movlw	high STR_26
 13015  002C5A  6E19               	movwf	memcmp@s2+1,c
 13016  002C5C  0E00               	movlw	0
 13017  002C5E  6E1B               	movwf	memcmp@n+1,c
 13018  002C60  0E05               	movlw	5
 13019  002C62  6E1A               	movwf	memcmp@n,c
 13020  002C64  EC7D  F024         	call	_memcmp	;wreg free
 13021  002C68  5016               	movf	?_memcmp,w,c
 13022  002C6A  1017               	iorwf	?_memcmp+1,w,c
 13023  002C6C  A4D8               	btfss	status,2,c
 13024  002C6E  D00D               	goto	l784
 13025  002C70  0100               	movlb	0	; () banked
 13026  002C72  EE20 F050          	lfsr	2,80
 13027  002C76  519A               	movf	check_fs@fs& (0+255),w,b
 13028  002C78  26D9               	addwf	fsr2l,f,c
 13029  002C7A  519B               	movf	(check_fs@fs+1)& (0+255),w,b
 13030  002C7C  22DA               	addwfc	fsr2h,f,c
 13031  002C7E  0100               	movlb	0	; () banked
 13032  002C80  BEDF               	btfsc	indf2,7,c
 13033  002C82  D003               	goto	l784
 13034                           
 13035                           ; BSR set to: 0
 13036  002C84  0E01               	movlw	1
 13037  002C86  0100               	movlb	0	; () banked
 13038  002C88  6F95               	movwf	_check_fs$1315& (0+255),b
 13039  002C8A                     l784:
 13040  002C8A  0100               	movlb	0	; () banked
 13041  002C8C  5195               	movf	_check_fs$1315& (0+255),w,b
 13042  002C8E  0100               	movlb	0	; () banked
 13043  002C90  6F96               	movwf	check_fs@temp4& (0+255),b
 13044  002C92  6B97               	clrf	(check_fs@temp4+1)& (0+255),b
 13045  002C94  6B98               	clrf	(check_fs@temp4+2)& (0+255),b
 13046  002C96  6B99               	clrf	(check_fs@temp4+3)& (0+255),b
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;tff.c: 677: escreve_inteiro_lcd(temp4);
 13050  002C98  C096  F02E         	movff	check_fs@temp4,escreve_inteiro_lcd@valor
 13051  002C9C  C097  F02F         	movff	check_fs@temp4+1,escreve_inteiro_lcd@valor+1
 13052  002CA0  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 13053                           
 13054                           ;tff.c: 678: _delay((unsigned long)((3000)*(48000000/4000.0)));
 13055  002CA4  0EB7               	movlw	183
 13056  002CA6  0100               	movlb	0	; () banked
 13057  002CA8  6F88               	movwf	(??_check_fs+1)& (0+255),b
 13058  002CAA  0EA1               	movlw	161
 13059  002CAC  0100               	movlb	0	; () banked
 13060  002CAE  6F87               	movwf	??_check_fs& (0+255),b
 13061  002CB0  0EC3               	movlw	195
 13062  002CB2                     u16897:
 13063  002CB2  2EE8               	decfsz	wreg,f,c
 13064  002CB4  D7FE               	bra	u16897
 13065  002CB6  2F87               	decfsz	??_check_fs& (0+255),f,b
 13066  002CB8  D7FC               	bra	u16897
 13067  002CBA  2F88               	decfsz	(??_check_fs+1)& (0+255),f,b
 13068  002CBC  D7FA               	bra	u16897
 13069  002CBE  D000               	nop2	
 13070                           
 13071                           ;tff.c: 681: return 1;
 13072  002CC0  0E01               	movlw	1
 13073  002CC2  0012               	return	
 13074  002CC4                     __end_of_check_fs:
 13075                           	opt stack 0
 13076                           tosu	equ	0xFFF
 13077                           tosh	equ	0xFFE
 13078                           tosl	equ	0xFFD
 13079                           pclath	equ	0xFFA
 13080                           tblptru	equ	0xFF8
 13081                           tblptrh	equ	0xFF7
 13082                           tblptrl	equ	0xFF6
 13083                           tablat	equ	0xFF5
 13084                           prodh	equ	0xFF4
 13085                           prodl	equ	0xFF3
 13086                           intcon	equ	0xFF2
 13087                           intcon2	equ	0xFF1
 13088                           intcon3	equ	0xFF0
 13089                           postinc0	equ	0xFEE
 13090                           wreg	equ	0xFE8
 13091                           indf1	equ	0xFE7
 13092                           postinc1	equ	0xFE6
 13093                           postdec1	equ	0xFE5
 13094                           fsr1h	equ	0xFE2
 13095                           fsr1l	equ	0xFE1
 13096                           indf2	equ	0xFDF
 13097                           postinc2	equ	0xFDE
 13098                           postdec2	equ	0xFDD
 13099                           fsr2h	equ	0xFDA
 13100                           fsr2l	equ	0xFD9
 13101                           status	equ	0xFD8
 13102                           
 13103 ;; *************** function _memcmp *****************
 13104 ;; Defined at:
 13105 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memcmp.c"
 13106 ;; Parameters:    Size  Location     Type
 13107 ;;  s1              2   21[COMRAM] PTR const void 
 13108 ;;		 -> fs.win(512), fs(552), NULL(0), 
 13109 ;;  s2              2   23[COMRAM] PTR const void 
 13110 ;;		 -> f_rename@fn(12), f_utime@fn(12), f_chmod@fn(12), f_mkdir@fn(12), 
 13111 ;;		 -> f_unlink@fn(12), f_stat@fn(12), f_opendir@fn(12), f_open@fn(12), 
 13112 ;;		 -> STR_31(6), STR_28(6), STR_26(6), STR_25(4), 
 13113 ;;		 -> STR_23(4), 
 13114 ;;  n               2   25[COMRAM] unsigned int 
 13115 ;; Auto vars:     Size  Location     Type
 13116 ;;		None
 13117 ;; Return value:  Size  Location     Type
 13118 ;;                  2   21[COMRAM] int 
 13119 ;; Registers used:
 13120 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13121 ;; Tracked objects:
 13122 ;;		On entry : 0/0
 13123 ;;		On exit  : 0/0
 13124 ;;		Unchanged: 0/0
 13125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13126 ;;      Params:         6       0       0       0       0       0       0       0       0
 13127 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13128 ;;      Temps:          3       0       0       0       0       0       0       0       0
 13129 ;;      Totals:         9       0       0       0       0       0       0       0       0
 13130 ;;Total ram usage:        9 bytes
 13131 ;; Hardware stack levels used:    1
 13132 ;; Hardware stack levels required when called:    2
 13133 ;; This function calls:
 13134 ;;		Nothing
 13135 ;; This function is called by:
 13136 ;;		_trace_path
 13137 ;;		_check_fs
 13138 ;; This function uses a non-reentrant model
 13139 ;;
 13140                           
 13141                           	psect	text32
 13142  0048FA                     __ptext32:
 13143                           	opt stack 0
 13144  0048FA                     _memcmp:
 13145                           	opt stack 24
 13146                           
 13147                           ;incstack = 0
 13148  0048FA  D040               	goto	l11442
 13149  0048FC                     l11434:
 13150  0048FC  C016  FFD9         	movff	memcmp@s1,fsr2l
 13151  004900  C017  FFDA         	movff	memcmp@s1+1,fsr2h
 13152  004904  50DF               	movf	indf2,w,c
 13153  004906  6E1C               	movwf	??_memcmp& (0+255),c
 13154  004908  C018  FFF6         	movff	memcmp@s2,tblptrl
 13155  00490C  C019  FFF7         	movff	memcmp@s2+1,tblptrh
 13156  004910  6AF8               	clrf	tblptru,c
 13157  004912  0E07               	movlw	(high __ramtop+-1)
 13158  004914  64F7               	cpfsgt	tblptrh,c
 13159  004916  D003               	bra	u12597
 13160  004918  0008               	tblrd		*
 13161  00491A  50F5               	movf	tablat,w,c
 13162  00491C  D005               	bra	u12590
 13163  00491E                     u12597:
 13164  00491E  CFF6 FFE9          	movff	tblptrl,fsr0l
 13165  004922  CFF7 FFEA          	movff	tblptrh,fsr0h
 13166  004926  50EF               	movf	indf0,w,c
 13167  004928                     u12590:
 13168  004928  181C               	xorwf	??_memcmp,w,c
 13169  00492A  B4D8               	btfsc	status,2,c
 13170  00492C  D023               	goto	l11440
 13171  00492E  C018  FFF6         	movff	memcmp@s2,tblptrl
 13172  004932  C019  FFF7         	movff	memcmp@s2+1,tblptrh
 13173  004936  6AF8               	clrf	tblptru,c
 13174  004938  0E07               	movlw	(high __ramtop+-1)
 13175  00493A  64F7               	cpfsgt	tblptrh,c
 13176  00493C  D003               	bra	u12617
 13177  00493E  0008               	tblrd		*
 13178  004940  50F5               	movf	tablat,w,c
 13179  004942  D005               	bra	u12610
 13180  004944                     u12617:
 13181  004944  CFF6 FFE9          	movff	tblptrl,fsr0l
 13182  004948  CFF7 FFEA          	movff	tblptrh,fsr0h
 13183  00494C  50EF               	movf	indf0,w,c
 13184  00494E                     u12610:
 13185  00494E  6E1C               	movwf	??_memcmp& (0+255),c
 13186  004950  6A1D               	clrf	(??_memcmp+1)& (0+255),c
 13187  004952  1E1C               	comf	??_memcmp,f,c
 13188  004954  1E1D               	comf	??_memcmp+1,f,c
 13189  004956  4A1C               	infsnz	??_memcmp,f,c
 13190  004958  2A1D               	incf	??_memcmp+1,f,c
 13191  00495A  C016  FFD9         	movff	memcmp@s1,fsr2l
 13192  00495E  C017  FFDA         	movff	memcmp@s1+1,fsr2h
 13193  004962  50DF               	movf	indf2,w,c
 13194  004964  6E1E               	movwf	(??_memcmp+2)& (0+255),c
 13195  004966  501E               	movf	??_memcmp+2,w,c
 13196  004968  241C               	addwf	??_memcmp,w,c
 13197  00496A  6E16               	movwf	?_memcmp,c
 13198  00496C  0E00               	movlw	0
 13199  00496E  201D               	addwfc	??_memcmp+1,w,c
 13200  004970  6E17               	movwf	?_memcmp+1,c
 13201  004972  0012               	return	
 13202  004974                     l11440:
 13203  004974  4A16               	infsnz	memcmp@s1,f,c
 13204  004976  2A17               	incf	memcmp@s1+1,f,c
 13205  004978  4A18               	infsnz	memcmp@s2,f,c
 13206  00497A  2A19               	incf	memcmp@s2+1,f,c
 13207  00497C                     l11442:
 13208  00497C  061A               	decf	memcmp@n,f,c
 13209  00497E  A0D8               	btfss	status,0,c
 13210  004980  061B               	decf	memcmp@n+1,f,c
 13211  004982  281A               	incf	memcmp@n,w,c
 13212  004984  E1BB               	bnz	l11434
 13213  004986  281B               	incf	memcmp@n+1,w,c
 13214  004988  A4D8               	btfss	status,2,c
 13215  00498A  D7B8               	goto	l11434
 13216  00498C  0E00               	movlw	0
 13217  00498E  6E17               	movwf	?_memcmp+1,c
 13218  004990  0E00               	movlw	0
 13219  004992  6E16               	movwf	?_memcmp,c
 13220  004994  0012               	return	
 13221  004996                     __end_of_memcmp:
 13222                           	opt stack 0
 13223                           tosu	equ	0xFFF
 13224                           tosh	equ	0xFFE
 13225                           tosl	equ	0xFFD
 13226                           pclath	equ	0xFFA
 13227                           tblptru	equ	0xFF8
 13228                           tblptrh	equ	0xFF7
 13229                           tblptrl	equ	0xFF6
 13230                           tablat	equ	0xFF5
 13231                           prodh	equ	0xFF4
 13232                           prodl	equ	0xFF3
 13233                           intcon	equ	0xFF2
 13234                           intcon2	equ	0xFF1
 13235                           intcon3	equ	0xFF0
 13236                           indf0	equ	0xFEF
 13237                           postinc0	equ	0xFEE
 13238                           fsr0h	equ	0xFEA
 13239                           fsr0l	equ	0xFE9
 13240                           wreg	equ	0xFE8
 13241                           indf1	equ	0xFE7
 13242                           postinc1	equ	0xFE6
 13243                           postdec1	equ	0xFE5
 13244                           fsr1h	equ	0xFE2
 13245                           fsr1l	equ	0xFE1
 13246                           indf2	equ	0xFDF
 13247                           postinc2	equ	0xFDE
 13248                           postdec2	equ	0xFDD
 13249                           fsr2h	equ	0xFDA
 13250                           fsr2l	equ	0xFD9
 13251                           status	equ	0xFD8
 13252                           
 13253 ;; *************** function ___lmul *****************
 13254 ;; Defined at:
 13255 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
 13256 ;; Parameters:    Size  Location     Type
 13257 ;;  multiplier      4   21[COMRAM] unsigned long 
 13258 ;;  multiplicand    4   25[COMRAM] unsigned long 
 13259 ;; Auto vars:     Size  Location     Type
 13260 ;;  product         4   29[COMRAM] unsigned long 
 13261 ;; Return value:  Size  Location     Type
 13262 ;;                  4   21[COMRAM] unsigned long 
 13263 ;; Registers used:
 13264 ;;		wreg, status,2, status,0
 13265 ;; Tracked objects:
 13266 ;;		On entry : 0/0
 13267 ;;		On exit  : 0/0
 13268 ;;		Unchanged: 0/0
 13269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13270 ;;      Params:         8       0       0       0       0       0       0       0       0
 13271 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13272 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13273 ;;      Totals:        12       0       0       0       0       0       0       0       0
 13274 ;;Total ram usage:       12 bytes
 13275 ;; Hardware stack levels used:    1
 13276 ;; Hardware stack levels required when called:    2
 13277 ;; This function calls:
 13278 ;;		Nothing
 13279 ;; This function is called by:
 13280 ;;		_clust2sect
 13281 ;;		_auto_mount
 13282 ;;		_strtod
 13283 ;;		_atol
 13284 ;; This function uses a non-reentrant model
 13285 ;;
 13286                           
 13287                           	psect	text33
 13288  004F34                     __ptext33:
 13289                           	opt stack 0
 13290  004F34                     ___lmul:
 13291                           	opt stack 22
 13292                           
 13293                           ;incstack = 0
 13294  004F34  0E00               	movlw	0
 13295  004F36  6E1E               	movwf	___lmul@product,c
 13296  004F38  0E00               	movlw	0
 13297  004F3A  6E1F               	movwf	___lmul@product+1,c
 13298  004F3C  0E00               	movlw	0
 13299  004F3E  6E20               	movwf	___lmul@product+2,c
 13300  004F40  0E00               	movlw	0
 13301  004F42  6E21               	movwf	___lmul@product+3,c
 13302  004F44                     l11088:
 13303  004F44  A016               	btfss	___lmul@multiplier,0,c
 13304  004F46  D008               	goto	l11092
 13305  004F48  501A               	movf	___lmul@multiplicand,w,c
 13306  004F4A  261E               	addwf	___lmul@product,f,c
 13307  004F4C  501B               	movf	___lmul@multiplicand+1,w,c
 13308  004F4E  221F               	addwfc	___lmul@product+1,f,c
 13309  004F50  501C               	movf	___lmul@multiplicand+2,w,c
 13310  004F52  2220               	addwfc	___lmul@product+2,f,c
 13311  004F54  501D               	movf	___lmul@multiplicand+3,w,c
 13312  004F56  2221               	addwfc	___lmul@product+3,f,c
 13313  004F58                     l11092:
 13314  004F58  90D8               	bcf	status,0,c
 13315  004F5A  361A               	rlcf	___lmul@multiplicand,f,c
 13316  004F5C  361B               	rlcf	___lmul@multiplicand+1,f,c
 13317  004F5E  361C               	rlcf	___lmul@multiplicand+2,f,c
 13318  004F60  361D               	rlcf	___lmul@multiplicand+3,f,c
 13319  004F62  90D8               	bcf	status,0,c
 13320  004F64  3219               	rrcf	___lmul@multiplier+3,f,c
 13321  004F66  3218               	rrcf	___lmul@multiplier+2,f,c
 13322  004F68  3217               	rrcf	___lmul@multiplier+1,f,c
 13323  004F6A  3216               	rrcf	___lmul@multiplier,f,c
 13324  004F6C  5016               	movf	___lmul@multiplier,w,c
 13325  004F6E  1017               	iorwf	___lmul@multiplier+1,w,c
 13326  004F70  1018               	iorwf	___lmul@multiplier+2,w,c
 13327  004F72  1019               	iorwf	___lmul@multiplier+3,w,c
 13328  004F74  A4D8               	btfss	status,2,c
 13329  004F76  D7E6               	goto	l11088
 13330  004F78  C01E  F016         	movff	___lmul@product,?___lmul
 13331  004F7C  C01F  F017         	movff	___lmul@product+1,?___lmul+1
 13332  004F80  C020  F018         	movff	___lmul@product+2,?___lmul+2
 13333  004F84  C021  F019         	movff	___lmul@product+3,?___lmul+3
 13334  004F88  0012               	return		;funcret
 13335  004F8A                     __end_of___lmul:
 13336                           	opt stack 0
 13337                           tosu	equ	0xFFF
 13338                           tosh	equ	0xFFE
 13339                           tosl	equ	0xFFD
 13340                           pclath	equ	0xFFA
 13341                           tblptru	equ	0xFF8
 13342                           tblptrh	equ	0xFF7
 13343                           tblptrl	equ	0xFF6
 13344                           tablat	equ	0xFF5
 13345                           prodh	equ	0xFF4
 13346                           prodl	equ	0xFF3
 13347                           intcon	equ	0xFF2
 13348                           intcon2	equ	0xFF1
 13349                           intcon3	equ	0xFF0
 13350                           indf0	equ	0xFEF
 13351                           postinc0	equ	0xFEE
 13352                           fsr0h	equ	0xFEA
 13353                           fsr0l	equ	0xFE9
 13354                           wreg	equ	0xFE8
 13355                           indf1	equ	0xFE7
 13356                           postinc1	equ	0xFE6
 13357                           postdec1	equ	0xFE5
 13358                           fsr1h	equ	0xFE2
 13359                           fsr1l	equ	0xFE1
 13360                           indf2	equ	0xFDF
 13361                           postinc2	equ	0xFDE
 13362                           postdec2	equ	0xFDD
 13363                           fsr2h	equ	0xFDA
 13364                           fsr2l	equ	0xFD9
 13365                           status	equ	0xFD8
 13366                           
 13367 ;; *************** function ___lldiv *****************
 13368 ;; Defined at:
 13369 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 13370 ;; Parameters:    Size  Location     Type
 13371 ;;  dividend        4   21[COMRAM] unsigned long 
 13372 ;;  divisor         4   25[COMRAM] unsigned long 
 13373 ;; Auto vars:     Size  Location     Type
 13374 ;;  quotient        4   29[COMRAM] unsigned long 
 13375 ;;  counter         1   33[COMRAM] unsigned char 
 13376 ;; Return value:  Size  Location     Type
 13377 ;;                  4   21[COMRAM] unsigned long 
 13378 ;; Registers used:
 13379 ;;		wreg, status,2, status,0
 13380 ;; Tracked objects:
 13381 ;;		On entry : 0/0
 13382 ;;		On exit  : 0/0
 13383 ;;		Unchanged: 0/0
 13384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13385 ;;      Params:         8       0       0       0       0       0       0       0       0
 13386 ;;      Locals:         5       0       0       0       0       0       0       0       0
 13387 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13388 ;;      Totals:        13       0       0       0       0       0       0       0       0
 13389 ;;Total ram usage:       13 bytes
 13390 ;; Hardware stack levels used:    1
 13391 ;; Hardware stack levels required when called:    2
 13392 ;; This function calls:
 13393 ;;		Nothing
 13394 ;; This function is called by:
 13395 ;;		_auto_mount
 13396 ;;		_convert_time_to_utc
 13397 ;;		_f_lseek
 13398 ;;		_sprintf
 13399 ;; This function uses a non-reentrant model
 13400 ;;
 13401                           
 13402                           	psect	text34
 13403  004B3C                     __ptext34:
 13404                           	opt stack 0
 13405  004B3C                     ___lldiv:
 13406                           	opt stack 24
 13407                           
 13408                           ;incstack = 0
 13409  004B3C  0E00               	movlw	0
 13410  004B3E  6E1E               	movwf	___lldiv@quotient,c
 13411  004B40  0E00               	movlw	0
 13412  004B42  6E1F               	movwf	___lldiv@quotient+1,c
 13413  004B44  0E00               	movlw	0
 13414  004B46  6E20               	movwf	___lldiv@quotient+2,c
 13415  004B48  0E00               	movlw	0
 13416  004B4A  6E21               	movwf	___lldiv@quotient+3,c
 13417  004B4C  501A               	movf	___lldiv@divisor,w,c
 13418  004B4E  101B               	iorwf	___lldiv@divisor+1,w,c
 13419  004B50  101C               	iorwf	___lldiv@divisor+2,w,c
 13420  004B52  101D               	iorwf	___lldiv@divisor+3,w,c
 13421  004B54  B4D8               	btfsc	status,2,c
 13422  004B56  D02A               	goto	l1925
 13423  004B58  0E01               	movlw	1
 13424  004B5A  6E22               	movwf	___lldiv@counter,c
 13425  004B5C  D006               	goto	l11866
 13426  004B5E                     l11864:
 13427  004B5E  90D8               	bcf	status,0,c
 13428  004B60  361A               	rlcf	___lldiv@divisor,f,c
 13429  004B62  361B               	rlcf	___lldiv@divisor+1,f,c
 13430  004B64  361C               	rlcf	___lldiv@divisor+2,f,c
 13431  004B66  361D               	rlcf	___lldiv@divisor+3,f,c
 13432  004B68  2A22               	incf	___lldiv@counter,f,c
 13433  004B6A                     l11866:
 13434  004B6A  AE1D               	btfss	___lldiv@divisor+3,7,c
 13435  004B6C  D7F8               	goto	l11864
 13436  004B6E                     l11868:
 13437  004B6E  90D8               	bcf	status,0,c
 13438  004B70  361E               	rlcf	___lldiv@quotient,f,c
 13439  004B72  361F               	rlcf	___lldiv@quotient+1,f,c
 13440  004B74  3620               	rlcf	___lldiv@quotient+2,f,c
 13441  004B76  3621               	rlcf	___lldiv@quotient+3,f,c
 13442  004B78  501A               	movf	___lldiv@divisor,w,c
 13443  004B7A  5C16               	subwf	___lldiv@dividend,w,c
 13444  004B7C  501B               	movf	___lldiv@divisor+1,w,c
 13445  004B7E  5817               	subwfb	___lldiv@dividend+1,w,c
 13446  004B80  501C               	movf	___lldiv@divisor+2,w,c
 13447  004B82  5818               	subwfb	___lldiv@dividend+2,w,c
 13448  004B84  501D               	movf	___lldiv@divisor+3,w,c
 13449  004B86  5819               	subwfb	___lldiv@dividend+3,w,c
 13450  004B88  A0D8               	btfss	status,0,c
 13451  004B8A  D009               	goto	l11876
 13452  004B8C  501A               	movf	___lldiv@divisor,w,c
 13453  004B8E  5E16               	subwf	___lldiv@dividend,f,c
 13454  004B90  501B               	movf	___lldiv@divisor+1,w,c
 13455  004B92  5A17               	subwfb	___lldiv@dividend+1,f,c
 13456  004B94  501C               	movf	___lldiv@divisor+2,w,c
 13457  004B96  5A18               	subwfb	___lldiv@dividend+2,f,c
 13458  004B98  501D               	movf	___lldiv@divisor+3,w,c
 13459  004B9A  5A19               	subwfb	___lldiv@dividend+3,f,c
 13460  004B9C  801E               	bsf	___lldiv@quotient,0,c
 13461  004B9E                     l11876:
 13462  004B9E  90D8               	bcf	status,0,c
 13463  004BA0  321D               	rrcf	___lldiv@divisor+3,f,c
 13464  004BA2  321C               	rrcf	___lldiv@divisor+2,f,c
 13465  004BA4  321B               	rrcf	___lldiv@divisor+1,f,c
 13466  004BA6  321A               	rrcf	___lldiv@divisor,f,c
 13467  004BA8  2E22               	decfsz	___lldiv@counter,f,c
 13468  004BAA  D7E1               	goto	l11868
 13469  004BAC                     l1925:
 13470  004BAC  C01E  F016         	movff	___lldiv@quotient,?___lldiv
 13471  004BB0  C01F  F017         	movff	___lldiv@quotient+1,?___lldiv+1
 13472  004BB4  C020  F018         	movff	___lldiv@quotient+2,?___lldiv+2
 13473  004BB8  C021  F019         	movff	___lldiv@quotient+3,?___lldiv+3
 13474  004BBC  0012               	return		;funcret
 13475  004BBE                     __end_of___lldiv:
 13476                           	opt stack 0
 13477                           tosu	equ	0xFFF
 13478                           tosh	equ	0xFFE
 13479                           tosl	equ	0xFFD
 13480                           pclath	equ	0xFFA
 13481                           tblptru	equ	0xFF8
 13482                           tblptrh	equ	0xFF7
 13483                           tblptrl	equ	0xFF6
 13484                           tablat	equ	0xFF5
 13485                           prodh	equ	0xFF4
 13486                           prodl	equ	0xFF3
 13487                           intcon	equ	0xFF2
 13488                           intcon2	equ	0xFF1
 13489                           intcon3	equ	0xFF0
 13490                           indf0	equ	0xFEF
 13491                           postinc0	equ	0xFEE
 13492                           fsr0h	equ	0xFEA
 13493                           fsr0l	equ	0xFE9
 13494                           wreg	equ	0xFE8
 13495                           indf1	equ	0xFE7
 13496                           postinc1	equ	0xFE6
 13497                           postdec1	equ	0xFE5
 13498                           fsr1h	equ	0xFE2
 13499                           fsr1l	equ	0xFE1
 13500                           indf2	equ	0xFDF
 13501                           postinc2	equ	0xFDE
 13502                           postdec2	equ	0xFDD
 13503                           fsr2h	equ	0xFDA
 13504                           fsr2l	equ	0xFD9
 13505                           status	equ	0xFD8
 13506                           
 13507 ;; *************** function _f_mount *****************
 13508 ;; Defined at:
 13509 ;;		line 850 in file "bibliotecas/tff.c"
 13510 ;; Parameters:    Size  Location     Type
 13511 ;;  drv             1    wreg     unsigned char 
 13512 ;;  fs              2   21[COMRAM] PTR struct _FATFS
 13513 ;;		 -> fs(552), 
 13514 ;; Auto vars:     Size  Location     Type
 13515 ;;  drv             1   23[COMRAM] unsigned char 
 13516 ;; Return value:  Size  Location     Type
 13517 ;;                  1    wreg      enum E155
 13518 ;; Registers used:
 13519 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13520 ;; Tracked objects:
 13521 ;;		On entry : 0/0
 13522 ;;		On exit  : 0/0
 13523 ;;		Unchanged: 0/0
 13524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13525 ;;      Params:         2       0       0       0       0       0       0       0       0
 13526 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13527 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13528 ;;      Totals:         3       0       0       0       0       0       0       0       0
 13529 ;;Total ram usage:        3 bytes
 13530 ;; Hardware stack levels used:    1
 13531 ;; Hardware stack levels required when called:    2
 13532 ;; This function calls:
 13533 ;;		Nothing
 13534 ;; This function is called by:
 13535 ;;		_SDCard
 13536 ;; This function uses a non-reentrant model
 13537 ;;
 13538                           
 13539                           	psect	text35
 13540  00502E                     __ptext35:
 13541                           	opt stack 0
 13542  00502E                     _f_mount:
 13543                           	opt stack 26
 13544                           
 13545                           ;incstack = 0
 13546                           ;f_mount@drv stored from wreg
 13547  00502E  6E18               	movwf	f_mount@drv,c
 13548                           
 13549                           ;tff.c: 855: if (drv) return FR_INVALID_DRIVE;
 13550  005030  5018               	movf	f_mount@drv,w,c
 13551  005032  B4D8               	btfsc	status,2,c
 13552  005034  D002               	goto	l12282
 13553  005036  0E05               	movlw	5
 13554  005038  0012               	return	
 13555  00503A                     l12282:
 13556                           
 13557                           ;tff.c: 857: if (FatFs) FatFs->fs_type = 0;
 13558  00503A  0100               	movlb	0	; () banked
 13559  00503C  51FC               	movf	_FatFs& (0+255),w,b
 13560  00503E  0100               	movlb	0	; () banked
 13561  005040  11FD               	iorwf	(_FatFs+1)& (0+255),w,b
 13562  005042  B4D8               	btfsc	status,2,c
 13563  005044  D009               	goto	l12286
 13564                           
 13565                           ; BSR set to: 0
 13566  005046  0100               	movlb	0	; () banked
 13567  005048  EE20 F024          	lfsr	2,36
 13568  00504C  51FC               	movf	_FatFs& (0+255),w,b
 13569  00504E  26D9               	addwf	fsr2l,f,c
 13570  005050  51FD               	movf	(_FatFs+1)& (0+255),w,b
 13571  005052  22DA               	addwfc	fsr2h,f,c
 13572  005054  0E00               	movlw	0
 13573  005056  6EDF               	movwf	indf2,c
 13574  005058                     l12286:
 13575                           
 13576                           ; BSR set to: 0
 13577                           ;tff.c: 859: FatFs = fs;
 13578  005058  C016  F0FC         	movff	f_mount@fs,_FatFs
 13579  00505C  C017  F0FD         	movff	f_mount@fs+1,_FatFs+1
 13580                           
 13581                           ; BSR set to: 0
 13582                           ;tff.c: 860: if (fs) fs->fs_type = 0;
 13583  005060  5016               	movf	f_mount@fs,w,c
 13584  005062  1017               	iorwf	f_mount@fs+1,w,c
 13585  005064  B4D8               	btfsc	status,2,c
 13586  005066  D008               	goto	l12292
 13587                           
 13588                           ; BSR set to: 0
 13589  005068  EE20 F024          	lfsr	2,36
 13590  00506C  5016               	movf	f_mount@fs,w,c
 13591  00506E  26D9               	addwf	fsr2l,f,c
 13592  005070  5017               	movf	f_mount@fs+1,w,c
 13593  005072  22DA               	addwfc	fsr2h,f,c
 13594  005074  0E00               	movlw	0
 13595  005076  6EDF               	movwf	indf2,c
 13596  005078                     l12292:
 13597                           
 13598                           ; BSR set to: 0
 13599                           ;tff.c: 862: return FR_OK;
 13600  005078  0E00               	movlw	0
 13601  00507A  0012               	return	
 13602  00507C                     __end_of_f_mount:
 13603                           	opt stack 0
 13604                           tosu	equ	0xFFF
 13605                           tosh	equ	0xFFE
 13606                           tosl	equ	0xFFD
 13607                           pclath	equ	0xFFA
 13608                           tblptru	equ	0xFF8
 13609                           tblptrh	equ	0xFF7
 13610                           tblptrl	equ	0xFF6
 13611                           tablat	equ	0xFF5
 13612                           prodh	equ	0xFF4
 13613                           prodl	equ	0xFF3
 13614                           intcon	equ	0xFF2
 13615                           intcon2	equ	0xFF1
 13616                           intcon3	equ	0xFF0
 13617                           indf0	equ	0xFEF
 13618                           postinc0	equ	0xFEE
 13619                           fsr0h	equ	0xFEA
 13620                           fsr0l	equ	0xFE9
 13621                           wreg	equ	0xFE8
 13622                           indf1	equ	0xFE7
 13623                           postinc1	equ	0xFE6
 13624                           postdec1	equ	0xFE5
 13625                           fsr1h	equ	0xFE2
 13626                           fsr1l	equ	0xFE1
 13627                           indf2	equ	0xFDF
 13628                           postinc2	equ	0xFDE
 13629                           postdec2	equ	0xFDD
 13630                           fsr2h	equ	0xFDA
 13631                           fsr2l	equ	0xFD9
 13632                           status	equ	0xFD8
 13633                           
 13634 ;; *************** function _f_close *****************
 13635 ;; Defined at:
 13636 ;;		line 1167 in file "bibliotecas/tff.c"
 13637 ;; Parameters:    Size  Location     Type
 13638 ;;  fp              2   73[BANK0 ] PTR struct _FIL
 13639 ;;		 -> SDCard@fil(32), 
 13640 ;; Auto vars:     Size  Location     Type
 13641 ;;  res             1   52[COMRAM] enum E155
 13642 ;; Return value:  Size  Location     Type
 13643 ;;                  1    wreg      enum E155
 13644 ;; Registers used:
 13645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13646 ;; Tracked objects:
 13647 ;;		On entry : 0/0
 13648 ;;		On exit  : 0/0
 13649 ;;		Unchanged: 0/0
 13650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13651 ;;      Params:         0       2       0       0       0       0       0       0       0
 13652 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13653 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13654 ;;      Totals:         1       2       0       0       0       0       0       0       0
 13655 ;;Total ram usage:        3 bytes
 13656 ;; Hardware stack levels used:    1
 13657 ;; Hardware stack levels required when called:   11
 13658 ;; This function calls:
 13659 ;;		_f_sync
 13660 ;; This function is called by:
 13661 ;;		_SDCard
 13662 ;; This function uses a non-reentrant model
 13663 ;;
 13664                           
 13665                           	psect	text36
 13666  005358                     __ptext36:
 13667                           	opt stack 0
 13668  005358                     _f_close:
 13669                           	opt stack 17
 13670                           
 13671                           ;tff.c: 1171: FRESULT res;
 13672                           ;tff.c: 1175: res = f_sync(fp);
 13673                           
 13674                           ;incstack = 0
 13675  005358  C0A9  F09C         	movff	f_close@fp,f_sync@fp
 13676  00535C  C0AA  F09D         	movff	f_close@fp+1,f_sync@fp+1
 13677  005360  EC37  F01B         	call	_f_sync	;wreg free
 13678  005364  6E35               	movwf	f_close@res,c
 13679                           
 13680                           ;tff.c: 1179: if (res == FR_OK) fp->fs = (0);
 13681  005366  5035               	movf	f_close@res,w,c
 13682  005368  A4D8               	btfss	status,2,c
 13683  00536A  0012               	return	
 13684  00536C  0100               	movlb	0	; () banked
 13685  00536E  EE20 F004          	lfsr	2,4
 13686  005372  51A9               	movf	f_close@fp& (0+255),w,b
 13687  005374  26D9               	addwf	fsr2l,f,c
 13688  005376  51AA               	movf	(f_close@fp+1)& (0+255),w,b
 13689  005378  22DA               	addwfc	fsr2h,f,c
 13690  00537A  0E00               	movlw	0
 13691  00537C  6EDE               	movwf	postinc2,c
 13692  00537E  0E00               	movlw	0
 13693  005380  6EDD               	movwf	postdec2,c
 13694                           
 13695                           ; BSR set to: 0
 13696  005382  0012               	return	
 13697  005384                     __end_of_f_close:
 13698                           	opt stack 0
 13699                           tosu	equ	0xFFF
 13700                           tosh	equ	0xFFE
 13701                           tosl	equ	0xFFD
 13702                           pclath	equ	0xFFA
 13703                           tblptru	equ	0xFF8
 13704                           tblptrh	equ	0xFF7
 13705                           tblptrl	equ	0xFF6
 13706                           tablat	equ	0xFF5
 13707                           prodh	equ	0xFF4
 13708                           prodl	equ	0xFF3
 13709                           intcon	equ	0xFF2
 13710                           intcon2	equ	0xFF1
 13711                           intcon3	equ	0xFF0
 13712                           indf0	equ	0xFEF
 13713                           postinc0	equ	0xFEE
 13714                           fsr0h	equ	0xFEA
 13715                           fsr0l	equ	0xFE9
 13716                           wreg	equ	0xFE8
 13717                           indf1	equ	0xFE7
 13718                           postinc1	equ	0xFE6
 13719                           postdec1	equ	0xFE5
 13720                           fsr1h	equ	0xFE2
 13721                           fsr1l	equ	0xFE1
 13722                           indf2	equ	0xFDF
 13723                           postinc2	equ	0xFDE
 13724                           postdec2	equ	0xFDD
 13725                           fsr2h	equ	0xFDA
 13726                           fsr2l	equ	0xFD9
 13727                           status	equ	0xFD8
 13728                           
 13729 ;; *************** function _f_sync *****************
 13730 ;; Defined at:
 13731 ;;		line 1128 in file "bibliotecas/tff.c"
 13732 ;; Parameters:    Size  Location     Type
 13733 ;;  fp              2   60[BANK0 ] PTR struct _FIL
 13734 ;;		 -> SDCard@fil(32), 
 13735 ;; Auto vars:     Size  Location     Type
 13736 ;;  tim             4   67[BANK0 ] unsigned long 
 13737 ;;  dir             2   71[BANK0 ] PTR unsigned char 
 13738 ;;		 -> fs(552), NULL(0), 
 13739 ;;  res             1   66[BANK0 ] enum E155
 13740 ;; Return value:  Size  Location     Type
 13741 ;;                  1    wreg      enum E155
 13742 ;; Registers used:
 13743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13744 ;; Tracked objects:
 13745 ;;		On entry : 0/0
 13746 ;;		On exit  : 0/0
 13747 ;;		Unchanged: 0/0
 13748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13749 ;;      Params:         0       2       0       0       0       0       0       0       0
 13750 ;;      Locals:         0       7       0       0       0       0       0       0       0
 13751 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13752 ;;      Totals:         0      13       0       0       0       0       0       0       0
 13753 ;;Total ram usage:       13 bytes
 13754 ;; Hardware stack levels used:    1
 13755 ;; Hardware stack levels required when called:   10
 13756 ;; This function calls:
 13757 ;;		_get_fattime
 13758 ;;		_move_window
 13759 ;;		_sync
 13760 ;;		_validate
 13761 ;; This function is called by:
 13762 ;;		_f_close
 13763 ;; This function uses a non-reentrant model
 13764 ;;
 13765                           
 13766                           	psect	text37
 13767  00366E                     __ptext37:
 13768                           	opt stack 0
 13769  00366E                     _f_sync:
 13770                           	opt stack 17
 13771                           
 13772                           ;tff.c: 1132: FRESULT res;
 13773                           ;tff.c: 1133: DWORD tim;
 13774                           ;tff.c: 1134: BYTE *dir;
 13775                           ;tff.c: 1137: res = validate(fp->fs, fp->id);
 13776                           
 13777                           ;incstack = 0
 13778  00366E  0100               	movlb	0	; () banked
 13779  003670  EE20 F004          	lfsr	2,4
 13780  003674  519C               	movf	f_sync@fp& (0+255),w,b
 13781  003676  26D9               	addwf	fsr2l,f,c
 13782  003678  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13783  00367A  22DA               	addwfc	fsr2h,f,c
 13784  00367C  CFDE F01D          	movff	postinc2,validate@fs
 13785  003680  CFDD F01E          	movff	postdec2,validate@fs+1
 13786  003684  C09C  FFD9         	movff	f_sync@fp,fsr2l
 13787  003688  C09D  FFDA         	movff	f_sync@fp+1,fsr2h
 13788  00368C  CFDE F01F          	movff	postinc2,validate@id
 13789  003690  CFDD F020          	movff	postdec2,validate@id+1
 13790  003694  EC3E  F028         	call	_validate	;wreg free
 13791  003698  0100               	movlb	0	; () banked
 13792  00369A  6FA2               	movwf	f_sync@res& (0+255),b
 13793                           
 13794                           ; BSR set to: 0
 13795                           ;tff.c: 1138: if (res == FR_OK) {
 13796  00369C  0100               	movlb	0	; () banked
 13797  00369E  51A2               	movf	f_sync@res& (0+255),w,b
 13798  0036A0  0100               	movlb	0	; () banked
 13799  0036A2  A4D8               	btfss	status,2,c
 13800  0036A4  D15E               	goto	l12272
 13801                           
 13802                           ; BSR set to: 0
 13803                           ;tff.c: 1139: if (fp->flag & 0x20) {
 13804  0036A6  0100               	movlb	0	; () banked
 13805  0036A8  EE20 F002          	lfsr	2,2
 13806  0036AC  519C               	movf	f_sync@fp& (0+255),w,b
 13807  0036AE  26D9               	addwf	fsr2l,f,c
 13808  0036B0  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13809  0036B2  22DA               	addwfc	fsr2h,f,c
 13810  0036B4  0100               	movlb	0	; () banked
 13811  0036B6  AADF               	btfss	indf2,5,c
 13812  0036B8  D154               	goto	l12272
 13813                           
 13814                           ; BSR set to: 0
 13815                           ;tff.c: 1141: if (!move_window(fp->dir_sect))
 13816  0036BA  0100               	movlb	0	; () banked
 13817  0036BC  EE20 F01A          	lfsr	2,26
 13818  0036C0  519C               	movf	f_sync@fp& (0+255),w,b
 13819  0036C2  26D9               	addwf	fsr2l,f,c
 13820  0036C4  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13821  0036C6  22DA               	addwfc	fsr2h,f,c
 13822  0036C8  CFDE F083          	movff	postinc2,move_window@sector
 13823  0036CC  CFDE F084          	movff	postinc2,move_window@sector+1
 13824  0036D0  CFDE F085          	movff	postinc2,move_window@sector+2
 13825  0036D4  CFDE F086          	movff	postinc2,move_window@sector+3
 13826  0036D8  ECB4  F01C         	call	_move_window	;wreg free
 13827  0036DC  0900               	iorlw	0
 13828  0036DE  A4D8               	btfss	status,2,c
 13829  0036E0  D002               	goto	l12240
 13830                           
 13831                           ;tff.c: 1142: return FR_RW_ERROR;
 13832  0036E2  0E08               	movlw	8
 13833  0036E4  0012               	return	
 13834  0036E6                     l12240:
 13835                           
 13836                           ;tff.c: 1143: dir = fp->dir_ptr;
 13837  0036E6  0100               	movlb	0	; () banked
 13838  0036E8  EE20 F01E          	lfsr	2,30
 13839  0036EC  519C               	movf	f_sync@fp& (0+255),w,b
 13840  0036EE  26D9               	addwf	fsr2l,f,c
 13841  0036F0  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13842  0036F2  22DA               	addwfc	fsr2h,f,c
 13843  0036F4  CFDE F0A7          	movff	postinc2,f_sync@dir
 13844  0036F8  CFDD F0A8          	movff	postdec2,f_sync@dir+1
 13845                           
 13846                           ;tff.c: 1144: dir[11] |= 0x20;
 13847  0036FC  0100               	movlb	0	; () banked
 13848  0036FE  EE20 F00B          	lfsr	2,11
 13849  003702  51A7               	movf	f_sync@dir& (0+255),w,b
 13850  003704  26D9               	addwf	fsr2l,f,c
 13851  003706  51A8               	movf	(f_sync@dir+1)& (0+255),w,b
 13852  003708  22DA               	addwfc	fsr2h,f,c
 13853  00370A  0E00               	movlw	0
 13854  00370C  8ADB               	bsf	plusw2,5,c
 13855                           
 13856                           ; BSR set to: 0
 13857                           ;tff.c: 1145: *(volatile BYTE*)(&dir[28])=(BYTE)(fp->fsize); *(volatile BYTE*)((&dir[28]
      +                          )+1)=(BYTE)((WORD)(fp->fsize)>>8); *(volatile BYTE*)((&dir[28])+2)=(BYTE)((DWORD)(fp->fs
      +                          ize)>>16); *(volatile BYTE*)((&dir[28])+3)=(BYTE)((DWORD)(fp->fsize)>>24);
 13858  00370E  0100               	movlb	0	; () banked
 13859  003710  EE20 F00A          	lfsr	2,10
 13860  003714  519C               	movf	f_sync@fp& (0+255),w,b
 13861  003716  26D9               	addwf	fsr2l,f,c
 13862  003718  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13863  00371A  22DA               	addwfc	fsr2h,f,c
 13864  00371C  0E1C               	movlw	28
 13865  00371E  0100               	movlb	0	; () banked
 13866  003720  25A7               	addwf	f_sync@dir& (0+255),w,b
 13867  003722  6EE1               	movwf	fsr1l,c
 13868  003724  0E00               	movlw	0
 13869  003726  0100               	movlb	0	; () banked
 13870  003728  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13871  00372A  6EE2               	movwf	fsr1h,c
 13872  00372C  CFDF FFE7          	movff	indf2,indf1
 13873                           
 13874                           ; BSR set to: 0
 13875  003730  0E1D               	movlw	29
 13876  003732  0100               	movlb	0	; () banked
 13877  003734  25A7               	addwf	f_sync@dir& (0+255),w,b
 13878  003736  6ED9               	movwf	fsr2l,c
 13879  003738  0E00               	movlw	0
 13880  00373A  0100               	movlb	0	; () banked
 13881  00373C  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13882  00373E  6EDA               	movwf	fsr2h,c
 13883  003740  0100               	movlb	0	; () banked
 13884  003742  EE10 F00A          	lfsr	1,10
 13885  003746  519C               	movf	f_sync@fp& (0+255),w,b
 13886  003748  26E1               	addwf	fsr1l,f,c
 13887  00374A  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13888  00374C  22E2               	addwfc	fsr1h,f,c
 13889  00374E  CFE6 F09E          	movff	postinc1,??_f_sync
 13890  003752  CFE5 F09F          	movff	postdec1,??_f_sync+1
 13891  003756  C09F  F09E         	movff	??_f_sync+1,??_f_sync
 13892  00375A  0100               	movlb	0	; () banked
 13893  00375C  6B9F               	clrf	(??_f_sync+1)& (0+255),b
 13894  00375E  0100               	movlb	0	; () banked
 13895  003760  519E               	movf	??_f_sync& (0+255),w,b
 13896  003762  6EDF               	movwf	indf2,c
 13897                           
 13898                           ; BSR set to: 0
 13899  003764  0E1E               	movlw	30
 13900  003766  0100               	movlb	0	; () banked
 13901  003768  25A7               	addwf	f_sync@dir& (0+255),w,b
 13902  00376A  6ED9               	movwf	fsr2l,c
 13903  00376C  0E00               	movlw	0
 13904  00376E  0100               	movlb	0	; () banked
 13905  003770  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13906  003772  6EDA               	movwf	fsr2h,c
 13907  003774  0100               	movlb	0	; () banked
 13908  003776  EE10 F00A          	lfsr	1,10
 13909  00377A  519C               	movf	f_sync@fp& (0+255),w,b
 13910  00377C  26E1               	addwf	fsr1l,f,c
 13911  00377E  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13912  003780  22E2               	addwfc	fsr1h,f,c
 13913  003782  CFE6 F09E          	movff	postinc1,??_f_sync
 13914  003786  CFE6 F09F          	movff	postinc1,??_f_sync+1
 13915  00378A  CFE6 F0A0          	movff	postinc1,??_f_sync+2
 13916  00378E  CFE6 F0A1          	movff	postinc1,??_f_sync+3
 13917  003792  0E11               	movlw	17
 13918  003794  D006               	goto	u13970
 13919  003796                     u13975:
 13920  003796  0100               	movlb	0	; () banked
 13921  003798  90D8               	bcf	status,0,c
 13922  00379A  33A1               	rrcf	(??_f_sync+3)& (0+255),f,b
 13923  00379C  33A0               	rrcf	(??_f_sync+2)& (0+255),f,b
 13924  00379E  339F               	rrcf	(??_f_sync+1)& (0+255),f,b
 13925  0037A0  339E               	rrcf	??_f_sync& (0+255),f,b
 13926  0037A2                     u13970:
 13927  0037A2  2EE8               	decfsz	wreg,f,c
 13928  0037A4  D7F8               	goto	u13975
 13929  0037A6  0100               	movlb	0	; () banked
 13930  0037A8  519E               	movf	??_f_sync& (0+255),w,b
 13931  0037AA  6EDF               	movwf	indf2,c
 13932                           
 13933                           ; BSR set to: 0
 13934  0037AC  0E1F               	movlw	31
 13935  0037AE  0100               	movlb	0	; () banked
 13936  0037B0  25A7               	addwf	f_sync@dir& (0+255),w,b
 13937  0037B2  6ED9               	movwf	fsr2l,c
 13938  0037B4  0E00               	movlw	0
 13939  0037B6  0100               	movlb	0	; () banked
 13940  0037B8  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13941  0037BA  6EDA               	movwf	fsr2h,c
 13942  0037BC  0100               	movlb	0	; () banked
 13943  0037BE  EE10 F00A          	lfsr	1,10
 13944  0037C2  519C               	movf	f_sync@fp& (0+255),w,b
 13945  0037C4  26E1               	addwf	fsr1l,f,c
 13946  0037C6  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13947  0037C8  22E2               	addwfc	fsr1h,f,c
 13948  0037CA  CFE6 F09E          	movff	postinc1,??_f_sync
 13949  0037CE  CFE6 F09F          	movff	postinc1,??_f_sync+1
 13950  0037D2  CFE6 F0A0          	movff	postinc1,??_f_sync+2
 13951  0037D6  CFE6 F0A1          	movff	postinc1,??_f_sync+3
 13952  0037DA  0E19               	movlw	25
 13953  0037DC  D006               	goto	u13980
 13954  0037DE                     u13985:
 13955  0037DE  0100               	movlb	0	; () banked
 13956  0037E0  90D8               	bcf	status,0,c
 13957  0037E2  33A1               	rrcf	(??_f_sync+3)& (0+255),f,b
 13958  0037E4  33A0               	rrcf	(??_f_sync+2)& (0+255),f,b
 13959  0037E6  339F               	rrcf	(??_f_sync+1)& (0+255),f,b
 13960  0037E8  339E               	rrcf	??_f_sync& (0+255),f,b
 13961  0037EA                     u13980:
 13962  0037EA  2EE8               	decfsz	wreg,f,c
 13963  0037EC  D7F8               	goto	u13985
 13964  0037EE  0100               	movlb	0	; () banked
 13965  0037F0  519E               	movf	??_f_sync& (0+255),w,b
 13966  0037F2  6EDF               	movwf	indf2,c
 13967                           
 13968                           ; BSR set to: 0
 13969                           ;tff.c: 1146: *(volatile BYTE*)(&dir[26])=(BYTE)(fp->org_clust); *(volatile BYTE*)((&dir
      +                          [26])+1)=(BYTE)((WORD)(fp->org_clust)>>8);
 13970  0037F4  0100               	movlb	0	; () banked
 13971  0037F6  EE20 F00E          	lfsr	2,14
 13972  0037FA  519C               	movf	f_sync@fp& (0+255),w,b
 13973  0037FC  26D9               	addwf	fsr2l,f,c
 13974  0037FE  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13975  003800  22DA               	addwfc	fsr2h,f,c
 13976  003802  0E1A               	movlw	26
 13977  003804  0100               	movlb	0	; () banked
 13978  003806  25A7               	addwf	f_sync@dir& (0+255),w,b
 13979  003808  6EE1               	movwf	fsr1l,c
 13980  00380A  0E00               	movlw	0
 13981  00380C  0100               	movlb	0	; () banked
 13982  00380E  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13983  003810  6EE2               	movwf	fsr1h,c
 13984  003812  CFDF FFE7          	movff	indf2,indf1
 13985                           
 13986                           ; BSR set to: 0
 13987  003816  0E1B               	movlw	27
 13988  003818  0100               	movlb	0	; () banked
 13989  00381A  25A7               	addwf	f_sync@dir& (0+255),w,b
 13990  00381C  6ED9               	movwf	fsr2l,c
 13991  00381E  0E00               	movlw	0
 13992  003820  0100               	movlb	0	; () banked
 13993  003822  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13994  003824  6EDA               	movwf	fsr2h,c
 13995  003826  0100               	movlb	0	; () banked
 13996  003828  EE10 F00E          	lfsr	1,14
 13997  00382C  519C               	movf	f_sync@fp& (0+255),w,b
 13998  00382E  26E1               	addwf	fsr1l,f,c
 13999  003830  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 14000  003832  22E2               	addwfc	fsr1h,f,c
 14001  003834  CFE6 F09E          	movff	postinc1,??_f_sync
 14002  003838  CFE5 F09F          	movff	postdec1,??_f_sync+1
 14003  00383C  C09F  F09E         	movff	??_f_sync+1,??_f_sync
 14004  003840  0100               	movlb	0	; () banked
 14005  003842  6B9F               	clrf	(??_f_sync+1)& (0+255),b
 14006  003844  0100               	movlb	0	; () banked
 14007  003846  519E               	movf	??_f_sync& (0+255),w,b
 14008  003848  6EDF               	movwf	indf2,c
 14009                           
 14010                           ; BSR set to: 0
 14011                           ;tff.c: 1148: *(volatile BYTE*)(&dir[20])=(BYTE)(fp->org_clust >> 16); *(volatile BYTE*)
      +                          ((&dir[20])+1)=(BYTE)((WORD)(fp->org_clust >> 16)>>8);
 14012  00384A  0E14               	movlw	20
 14013  00384C  0100               	movlb	0	; () banked
 14014  00384E  25A7               	addwf	f_sync@dir& (0+255),w,b
 14015  003850  6ED9               	movwf	fsr2l,c
 14016  003852  0E00               	movlw	0
 14017  003854  0100               	movlb	0	; () banked
 14018  003856  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14019  003858  6EDA               	movwf	fsr2h,c
 14020  00385A  0100               	movlb	0	; () banked
 14021  00385C  EE10 F00E          	lfsr	1,14
 14022  003860  519C               	movf	f_sync@fp& (0+255),w,b
 14023  003862  26E1               	addwf	fsr1l,f,c
 14024  003864  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 14025  003866  22E2               	addwfc	fsr1h,f,c
 14026  003868  CFE6 F09E          	movff	postinc1,??_f_sync
 14027  00386C  CFE6 F09F          	movff	postinc1,??_f_sync+1
 14028  003870  CFE6 F0A0          	movff	postinc1,??_f_sync+2
 14029  003874  CFE6 F0A1          	movff	postinc1,??_f_sync+3
 14030  003878  0E11               	movlw	17
 14031  00387A  D006               	goto	u13990
 14032  00387C                     u13995:
 14033  00387C  0100               	movlb	0	; () banked
 14034  00387E  90D8               	bcf	status,0,c
 14035  003880  33A1               	rrcf	(??_f_sync+3)& (0+255),f,b
 14036  003882  33A0               	rrcf	(??_f_sync+2)& (0+255),f,b
 14037  003884  339F               	rrcf	(??_f_sync+1)& (0+255),f,b
 14038  003886  339E               	rrcf	??_f_sync& (0+255),f,b
 14039  003888                     u13990:
 14040  003888  2EE8               	decfsz	wreg,f,c
 14041  00388A  D7F8               	goto	u13995
 14042  00388C  0100               	movlb	0	; () banked
 14043  00388E  519E               	movf	??_f_sync& (0+255),w,b
 14044  003890  6EDF               	movwf	indf2,c
 14045                           
 14046                           ; BSR set to: 0
 14047  003892  0E15               	movlw	21
 14048  003894  0100               	movlb	0	; () banked
 14049  003896  25A7               	addwf	f_sync@dir& (0+255),w,b
 14050  003898  6ED9               	movwf	fsr2l,c
 14051  00389A  0E00               	movlw	0
 14052  00389C  0100               	movlb	0	; () banked
 14053  00389E  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14054  0038A0  6EDA               	movwf	fsr2h,c
 14055  0038A2  0100               	movlb	0	; () banked
 14056  0038A4  EE10 F00E          	lfsr	1,14
 14057  0038A8  519C               	movf	f_sync@fp& (0+255),w,b
 14058  0038AA  26E1               	addwf	fsr1l,f,c
 14059  0038AC  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 14060  0038AE  22E2               	addwfc	fsr1h,f,c
 14061  0038B0  CFE6 F09E          	movff	postinc1,??_f_sync
 14062  0038B4  CFE6 F09F          	movff	postinc1,??_f_sync+1
 14063  0038B8  CFE6 F0A0          	movff	postinc1,??_f_sync+2
 14064  0038BC  CFE6 F0A1          	movff	postinc1,??_f_sync+3
 14065  0038C0  0E11               	movlw	17
 14066  0038C2  D006               	goto	u14000
 14067  0038C4                     u14005:
 14068  0038C4  0100               	movlb	0	; () banked
 14069  0038C6  90D8               	bcf	status,0,c
 14070  0038C8  33A1               	rrcf	(??_f_sync+3)& (0+255),f,b
 14071  0038CA  33A0               	rrcf	(??_f_sync+2)& (0+255),f,b
 14072  0038CC  339F               	rrcf	(??_f_sync+1)& (0+255),f,b
 14073  0038CE  339E               	rrcf	??_f_sync& (0+255),f,b
 14074  0038D0                     u14000:
 14075  0038D0  2EE8               	decfsz	wreg,f,c
 14076  0038D2  D7F8               	goto	u14005
 14077  0038D4  C09F  F09E         	movff	??_f_sync+1,??_f_sync
 14078  0038D8  0100               	movlb	0	; () banked
 14079  0038DA  6B9F               	clrf	(??_f_sync+1)& (0+255),b
 14080  0038DC  0100               	movlb	0	; () banked
 14081  0038DE  519E               	movf	??_f_sync& (0+255),w,b
 14082  0038E0  6EDF               	movwf	indf2,c
 14083                           
 14084                           ; BSR set to: 0
 14085                           ;tff.c: 1150: tim = get_fattime();
 14086  0038E2  ECD5  F01F         	call	_get_fattime	;wreg free
 14087  0038E6  C016  F0A3         	movff	?_get_fattime,f_sync@tim
 14088  0038EA  C017  F0A4         	movff	?_get_fattime+1,f_sync@tim+1
 14089  0038EE  C018  F0A5         	movff	?_get_fattime+2,f_sync@tim+2
 14090  0038F2  C019  F0A6         	movff	?_get_fattime+3,f_sync@tim+3
 14091                           
 14092                           ;tff.c: 1151: *(volatile BYTE*)(&dir[22])=(BYTE)(tim); *(volatile BYTE*)((&dir[22])+1)=(
      +                          BYTE)((WORD)(tim)>>8); *(volatile BYTE*)((&dir[22])+2)=(BYTE)((DWORD)(tim)>>16); *(volat
      +                          ile BYTE*)((&dir[22])+3)=(BYTE)((DWORD)(tim)>>24);
 14093  0038F6  0E16               	movlw	22
 14094  0038F8  0100               	movlb	0	; () banked
 14095  0038FA  25A7               	addwf	f_sync@dir& (0+255),w,b
 14096  0038FC  6ED9               	movwf	fsr2l,c
 14097  0038FE  0E00               	movlw	0
 14098  003900  0100               	movlb	0	; () banked
 14099  003902  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14100  003904  6EDA               	movwf	fsr2h,c
 14101  003906  C0A3  FFDF         	movff	f_sync@tim,indf2
 14102                           
 14103                           ; BSR set to: 0
 14104  00390A  0E17               	movlw	23
 14105  00390C  0100               	movlb	0	; () banked
 14106  00390E  25A7               	addwf	f_sync@dir& (0+255),w,b
 14107  003910  6ED9               	movwf	fsr2l,c
 14108  003912  0E00               	movlw	0
 14109  003914  0100               	movlb	0	; () banked
 14110  003916  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14111  003918  6EDA               	movwf	fsr2h,c
 14112  00391A  0100               	movlb	0	; () banked
 14113  00391C  51A4               	movf	(f_sync@tim+1)& (0+255),w,b
 14114  00391E  6EDF               	movwf	indf2,c
 14115                           
 14116                           ; BSR set to: 0
 14117  003920  0E18               	movlw	24
 14118  003922  0100               	movlb	0	; () banked
 14119  003924  25A7               	addwf	f_sync@dir& (0+255),w,b
 14120  003926  6ED9               	movwf	fsr2l,c
 14121  003928  0E00               	movlw	0
 14122  00392A  0100               	movlb	0	; () banked
 14123  00392C  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14124  00392E  6EDA               	movwf	fsr2h,c
 14125  003930  C0A5  FFDF         	movff	f_sync@tim+2,indf2
 14126                           
 14127                           ; BSR set to: 0
 14128  003934  0E19               	movlw	25
 14129  003936  0100               	movlb	0	; () banked
 14130  003938  25A7               	addwf	f_sync@dir& (0+255),w,b
 14131  00393A  6ED9               	movwf	fsr2l,c
 14132  00393C  0E00               	movlw	0
 14133  00393E  0100               	movlb	0	; () banked
 14134  003940  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14135  003942  6EDA               	movwf	fsr2h,c
 14136  003944  C0A6  FFDF         	movff	f_sync@tim+3,indf2
 14137                           
 14138                           ; BSR set to: 0
 14139                           ;tff.c: 1152: fp->flag &= (BYTE)~0x20;
 14140  003948  0100               	movlb	0	; () banked
 14141  00394A  EE20 F002          	lfsr	2,2
 14142  00394E  519C               	movf	f_sync@fp& (0+255),w,b
 14143  003950  26D9               	addwf	fsr2l,f,c
 14144  003952  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 14145  003954  22DA               	addwfc	fsr2h,f,c
 14146  003956  0EDF               	movlw	223
 14147  003958  16DF               	andwf	indf2,f,c
 14148                           
 14149                           ; BSR set to: 0
 14150                           ;tff.c: 1153: res = sync();
 14151  00395A  EC6D  F027         	call	_sync	;wreg free
 14152  00395E  0100               	movlb	0	; () banked
 14153  003960  6FA2               	movwf	f_sync@res& (0+255),b
 14154  003962                     l12272:
 14155                           
 14156                           ; BSR set to: 0
 14157                           ;tff.c: 1154: }
 14158                           ;tff.c: 1155: }
 14159                           ;tff.c: 1156: return res;
 14160  003962  0100               	movlb	0	; () banked
 14161  003964  51A2               	movf	f_sync@res& (0+255),w,b
 14162  003966  0012               	return	
 14163  003968                     __end_of_f_sync:
 14164                           	opt stack 0
 14165                           tosu	equ	0xFFF
 14166                           tosh	equ	0xFFE
 14167                           tosl	equ	0xFFD
 14168                           pclath	equ	0xFFA
 14169                           tblptru	equ	0xFF8
 14170                           tblptrh	equ	0xFF7
 14171                           tblptrl	equ	0xFF6
 14172                           tablat	equ	0xFF5
 14173                           prodh	equ	0xFF4
 14174                           prodl	equ	0xFF3
 14175                           intcon	equ	0xFF2
 14176                           intcon2	equ	0xFF1
 14177                           intcon3	equ	0xFF0
 14178                           indf0	equ	0xFEF
 14179                           postinc0	equ	0xFEE
 14180                           fsr0h	equ	0xFEA
 14181                           fsr0l	equ	0xFE9
 14182                           wreg	equ	0xFE8
 14183                           indf1	equ	0xFE7
 14184                           postinc1	equ	0xFE6
 14185                           postdec1	equ	0xFE5
 14186                           fsr1h	equ	0xFE2
 14187                           fsr1l	equ	0xFE1
 14188                           indf2	equ	0xFDF
 14189                           postinc2	equ	0xFDE
 14190                           postdec2	equ	0xFDD
 14191                           plusw2	equ	0xFDB
 14192                           fsr2h	equ	0xFDA
 14193                           fsr2l	equ	0xFD9
 14194                           status	equ	0xFD8
 14195                           
 14196 ;; *************** function _validate *****************
 14197 ;; Defined at:
 14198 ;;		line 823 in file "bibliotecas/tff.c"
 14199 ;; Parameters:    Size  Location     Type
 14200 ;;  fs              2   28[COMRAM] PTR const struct _FATFS
 14201 ;;		 -> fs(552), NULL(0), 
 14202 ;;  id              2   30[COMRAM] unsigned short 
 14203 ;; Auto vars:     Size  Location     Type
 14204 ;;		None
 14205 ;; Return value:  Size  Location     Type
 14206 ;;                  1    wreg      enum E155
 14207 ;; Registers used:
 14208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14209 ;; Tracked objects:
 14210 ;;		On entry : 0/0
 14211 ;;		On exit  : 0/0
 14212 ;;		Unchanged: 0/0
 14213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14214 ;;      Params:         4       0       0       0       0       0       0       0       0
 14215 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14216 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14217 ;;      Totals:         6       0       0       0       0       0       0       0       0
 14218 ;;Total ram usage:        6 bytes
 14219 ;; Hardware stack levels used:    1
 14220 ;; Hardware stack levels required when called:    4
 14221 ;; This function calls:
 14222 ;;		_disk_status
 14223 ;; This function is called by:
 14224 ;;		_f_sync
 14225 ;;		_f_read
 14226 ;;		_f_write
 14227 ;;		_f_lseek
 14228 ;;		_f_readdir
 14229 ;;		_f_truncate
 14230 ;; This function uses a non-reentrant model
 14231 ;;
 14232                           
 14233                           	psect	text38
 14234  00507C                     __ptext38:
 14235                           	opt stack 0
 14236  00507C                     _validate:
 14237                           	opt stack 22
 14238                           
 14239                           ;tff.c: 828: if (!fs || !fs->fs_type || fs->id != id)
 14240                           
 14241                           ;incstack = 0
 14242  00507C  501D               	movf	validate@fs,w,c
 14243  00507E  101E               	iorwf	validate@fs+1,w,c
 14244  005080  B4D8               	btfsc	status,2,c
 14245  005082  D014               	goto	l11840
 14246  005084  EE20 F024          	lfsr	2,36
 14247  005088  501D               	movf	validate@fs,w,c
 14248  00508A  26D9               	addwf	fsr2l,f,c
 14249  00508C  501E               	movf	validate@fs+1,w,c
 14250  00508E  22DA               	addwfc	fsr2h,f,c
 14251  005090  50DF               	movf	indf2,w,c
 14252  005092  B4D8               	btfsc	status,2,c
 14253  005094  D00B               	goto	l11840
 14254  005096  C01D  FFD9         	movff	validate@fs,fsr2l
 14255  00509A  C01E  FFDA         	movff	validate@fs+1,fsr2h
 14256  00509E  501F               	movf	validate@id,w,c
 14257  0050A0  18DE               	xorwf	postinc2,w,c
 14258  0050A2  E104               	bnz	l11840
 14259  0050A4  5020               	movf	validate@id+1,w,c
 14260  0050A6  18DE               	xorwf	postinc2,w,c
 14261  0050A8  B4D8               	btfsc	status,2,c
 14262  0050AA  D002               	goto	l11844
 14263  0050AC                     l11840:
 14264                           
 14265                           ;tff.c: 829: return FR_INVALID_OBJECT;
 14266  0050AC  0E0C               	movlw	12
 14267  0050AE  0012               	return	
 14268  0050B0                     l11844:
 14269                           
 14270                           ;tff.c: 830: if (disk_status(0) & 0x01)
 14271  0050B0  0E00               	movlw	0
 14272  0050B2  ECE7  F028         	call	_disk_status
 14273  0050B6  6E21               	movwf	??_validate& (0+255),c
 14274  0050B8  A021               	btfss	??_validate,0,c
 14275  0050BA  D002               	goto	l11850
 14276                           
 14277                           ;tff.c: 831: return FR_NOT_READY;
 14278  0050BC  0E01               	movlw	1
 14279  0050BE  0012               	return	
 14280  0050C0                     l11850:
 14281                           
 14282                           ;tff.c: 833: return FR_OK;
 14283  0050C0  0E00               	movlw	0
 14284  0050C2  0012               	return	
 14285  0050C4                     __end_of_validate:
 14286                           	opt stack 0
 14287                           tosu	equ	0xFFF
 14288                           tosh	equ	0xFFE
 14289                           tosl	equ	0xFFD
 14290                           pclath	equ	0xFFA
 14291                           tblptru	equ	0xFF8
 14292                           tblptrh	equ	0xFF7
 14293                           tblptrl	equ	0xFF6
 14294                           tablat	equ	0xFF5
 14295                           prodh	equ	0xFF4
 14296                           prodl	equ	0xFF3
 14297                           intcon	equ	0xFF2
 14298                           intcon2	equ	0xFF1
 14299                           intcon3	equ	0xFF0
 14300                           indf0	equ	0xFEF
 14301                           postinc0	equ	0xFEE
 14302                           fsr0h	equ	0xFEA
 14303                           fsr0l	equ	0xFE9
 14304                           wreg	equ	0xFE8
 14305                           indf1	equ	0xFE7
 14306                           postinc1	equ	0xFE6
 14307                           postdec1	equ	0xFE5
 14308                           fsr1h	equ	0xFE2
 14309                           fsr1l	equ	0xFE1
 14310                           indf2	equ	0xFDF
 14311                           postinc2	equ	0xFDE
 14312                           postdec2	equ	0xFDD
 14313                           plusw2	equ	0xFDB
 14314                           fsr2h	equ	0xFDA
 14315                           fsr2l	equ	0xFD9
 14316                           status	equ	0xFD8
 14317                           
 14318 ;; *************** function _disk_status *****************
 14319 ;; Defined at:
 14320 ;;		line 72 in file "bibliotecas/diskio.c"
 14321 ;; Parameters:    Size  Location     Type
 14322 ;;  pdrv            1    wreg     unsigned char 
 14323 ;; Auto vars:     Size  Location     Type
 14324 ;;  pdrv            1   26[COMRAM] unsigned char 
 14325 ;;  result          2   24[COMRAM] int 
 14326 ;;  stat            1   27[COMRAM] unsigned char 
 14327 ;; Return value:  Size  Location     Type
 14328 ;;                  1    wreg      unsigned char 
 14329 ;; Registers used:
 14330 ;;		wreg, status,2, status,0, cstack
 14331 ;; Tracked objects:
 14332 ;;		On entry : 0/0
 14333 ;;		On exit  : 0/0
 14334 ;;		Unchanged: 0/0
 14335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14336 ;;      Params:         0       0       0       0       0       0       0       0       0
 14337 ;;      Locals:         4       0       0       0       0       0       0       0       0
 14338 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14339 ;;      Totals:         5       0       0       0       0       0       0       0       0
 14340 ;;Total ram usage:        5 bytes
 14341 ;; Hardware stack levels used:    1
 14342 ;; Hardware stack levels required when called:    3
 14343 ;; This function calls:
 14344 ;;		_sdc_disk_status
 14345 ;; This function is called by:
 14346 ;;		_validate
 14347 ;; This function uses a non-reentrant model
 14348 ;;
 14349                           
 14350                           	psect	text39
 14351  0051CE                     __ptext39:
 14352                           	opt stack 0
 14353  0051CE                     _disk_status:
 14354                           	opt stack 22
 14355                           
 14356                           ;incstack = 0
 14357                           ;disk_status@pdrv stored from wreg
 14358  0051CE  6E1B               	movwf	disk_status@pdrv,c
 14359                           
 14360                           ;diskio.c: 76: DSTATUS stat;
 14361                           ;diskio.c: 77: int result;
 14362                           ;diskio.c: 79: switch (pdrv) {
 14363  0051D0  D011               	goto	l11124
 14364  0051D2                     l11106:
 14365                           
 14366                           ;diskio.c: 81: stat = sdc_disk_status(pdrv);
 14367  0051D2  501B               	movf	disk_status@pdrv,w,c
 14368  0051D4  EC42  F02A         	call	_sdc_disk_status
 14369  0051D8  6E1C               	movwf	disk_status@stat,c
 14370                           
 14371                           ;diskio.c: 85: return stat;
 14372  0051DA  501C               	movf	disk_status@stat,w,c
 14373  0051DC  0012               	return	
 14374  0051DE                     l11112:
 14375                           
 14376                           ;diskio.c: 88: result = sdc_disk_status(pdrv);
 14377  0051DE  501B               	movf	disk_status@pdrv,w,c
 14378  0051E0  EC42  F02A         	call	_sdc_disk_status
 14379  0051E4  6E18               	movwf	??_disk_status& (0+255),c
 14380  0051E6  5018               	movf	??_disk_status,w,c
 14381  0051E8  6E19               	movwf	disk_status@result,c
 14382  0051EA  6A1A               	clrf	disk_status@result+1,c
 14383                           
 14384                           ;diskio.c: 92: return stat;
 14385  0051EC  501C               	movf	disk_status@stat,w,c
 14386  0051EE  0012               	return	
 14387  0051F0                     l11118:
 14388                           
 14389                           ;diskio.c: 99: return stat;
 14390  0051F0  501C               	movf	disk_status@stat,w,c
 14391  0051F2  0012               	return	
 14392  0051F4                     l11124:
 14393  0051F4  501B               	movf	disk_status@pdrv,w,c
 14394                           
 14395                           ; Switch size 1, requested type "space"
 14396                           ; Number of cases is 3, Range of values is 0 to 2
 14397                           ; switch strategies available:
 14398                           ; Name         Instructions Cycles
 14399                           ; simple_byte           10     6 (average)
 14400                           ;	Chosen strategy is simple_byte
 14401  0051F6  0A00               	xorlw	0	; case 0
 14402  0051F8  B4D8               	btfsc	status,2,c
 14403  0051FA  D7F1               	goto	l11112
 14404  0051FC  0A01               	xorlw	1	; case 1
 14405  0051FE  B4D8               	btfsc	status,2,c
 14406  005200  D7E8               	goto	l11106
 14407  005202  0A03               	xorlw	3	; case 2
 14408  005204  B4D8               	btfsc	status,2,c
 14409  005206  D7F4               	goto	l11118
 14410                           
 14411                           ;diskio.c: 101: return 0x01;
 14412  005208  0E01               	movlw	1
 14413  00520A  0012               	return	
 14414  00520C                     __end_of_disk_status:
 14415                           	opt stack 0
 14416                           tosu	equ	0xFFF
 14417                           tosh	equ	0xFFE
 14418                           tosl	equ	0xFFD
 14419                           pclath	equ	0xFFA
 14420                           tblptru	equ	0xFF8
 14421                           tblptrh	equ	0xFF7
 14422                           tblptrl	equ	0xFF6
 14423                           tablat	equ	0xFF5
 14424                           prodh	equ	0xFF4
 14425                           prodl	equ	0xFF3
 14426                           intcon	equ	0xFF2
 14427                           intcon2	equ	0xFF1
 14428                           intcon3	equ	0xFF0
 14429                           indf0	equ	0xFEF
 14430                           postinc0	equ	0xFEE
 14431                           fsr0h	equ	0xFEA
 14432                           fsr0l	equ	0xFE9
 14433                           wreg	equ	0xFE8
 14434                           indf1	equ	0xFE7
 14435                           postinc1	equ	0xFE6
 14436                           postdec1	equ	0xFE5
 14437                           fsr1h	equ	0xFE2
 14438                           fsr1l	equ	0xFE1
 14439                           indf2	equ	0xFDF
 14440                           postinc2	equ	0xFDE
 14441                           postdec2	equ	0xFDD
 14442                           plusw2	equ	0xFDB
 14443                           fsr2h	equ	0xFDA
 14444                           fsr2l	equ	0xFD9
 14445                           status	equ	0xFD8
 14446                           
 14447 ;; *************** function _sdc_disk_status *****************
 14448 ;; Defined at:
 14449 ;;		line 728 in file "bibliotecas/diskio.c"
 14450 ;; Parameters:    Size  Location     Type
 14451 ;;  pdrv            1    wreg     unsigned char 
 14452 ;; Auto vars:     Size  Location     Type
 14453 ;;  pdrv            1   22[COMRAM] unsigned char 
 14454 ;;  stat            1   21[COMRAM] unsigned char 
 14455 ;;  cont            1    0        unsigned char 
 14456 ;;  buff            1    0        unsigned char 
 14457 ;; Return value:  Size  Location     Type
 14458 ;;                  1    wreg      unsigned char 
 14459 ;; Registers used:
 14460 ;;		wreg, status,2
 14461 ;; Tracked objects:
 14462 ;;		On entry : 0/0
 14463 ;;		On exit  : 0/0
 14464 ;;		Unchanged: 0/0
 14465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14466 ;;      Params:         0       0       0       0       0       0       0       0       0
 14467 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14468 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14469 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14470 ;;Total ram usage:        2 bytes
 14471 ;; Hardware stack levels used:    1
 14472 ;; Hardware stack levels required when called:    2
 14473 ;; This function calls:
 14474 ;;		Nothing
 14475 ;; This function is called by:
 14476 ;;		_disk_status
 14477 ;; This function uses a non-reentrant model
 14478 ;;
 14479                           
 14480                           	psect	text40
 14481  005484                     __ptext40:
 14482                           	opt stack 0
 14483  005484                     _sdc_disk_status:
 14484                           	opt stack 22
 14485                           
 14486                           ;incstack = 0
 14487                           ;sdc_disk_status@pdrv stored from wreg
 14488  005484  6E17               	movwf	sdc_disk_status@pdrv,c
 14489                           
 14490                           ;diskio.c: 730: DSTATUS stat = 0;
 14491  005486  0E00               	movlw	0
 14492  005488  6E16               	movwf	sdc_disk_status@stat,c
 14493                           
 14494                           ;diskio.c: 731: unsigned char buff, cont;
 14495                           ;diskio.c: 733: if (pdrv != 0) return 0x01;
 14496  00548A  5017               	movf	sdc_disk_status@pdrv,w,c
 14497  00548C  B4D8               	btfsc	status,2,c
 14498  00548E  D002               	goto	l11032
 14499  005490  0E01               	movlw	1
 14500  005492  0012               	return	
 14501  005494                     l11032:
 14502                           
 14503                           ;diskio.c: 735: return FR_OK;
 14504  005494  0E00               	movlw	0
 14505  005496  0012               	return	
 14506  005498                     __end_of_sdc_disk_status:
 14507                           	opt stack 0
 14508                           tosu	equ	0xFFF
 14509                           tosh	equ	0xFFE
 14510                           tosl	equ	0xFFD
 14511                           pclath	equ	0xFFA
 14512                           tblptru	equ	0xFF8
 14513                           tblptrh	equ	0xFF7
 14514                           tblptrl	equ	0xFF6
 14515                           tablat	equ	0xFF5
 14516                           prodh	equ	0xFF4
 14517                           prodl	equ	0xFF3
 14518                           intcon	equ	0xFF2
 14519                           intcon2	equ	0xFF1
 14520                           intcon3	equ	0xFF0
 14521                           indf0	equ	0xFEF
 14522                           postinc0	equ	0xFEE
 14523                           fsr0h	equ	0xFEA
 14524                           fsr0l	equ	0xFE9
 14525                           wreg	equ	0xFE8
 14526                           indf1	equ	0xFE7
 14527                           postinc1	equ	0xFE6
 14528                           postdec1	equ	0xFE5
 14529                           fsr1h	equ	0xFE2
 14530                           fsr1l	equ	0xFE1
 14531                           indf2	equ	0xFDF
 14532                           postinc2	equ	0xFDE
 14533                           postdec2	equ	0xFDD
 14534                           plusw2	equ	0xFDB
 14535                           fsr2h	equ	0xFDA
 14536                           fsr2l	equ	0xFD9
 14537                           status	equ	0xFD8
 14538                           
 14539 ;; *************** function _sync *****************
 14540 ;; Defined at:
 14541 ;;		line 118 in file "bibliotecas/tff.c"
 14542 ;; Parameters:    Size  Location     Type
 14543 ;;		None
 14544 ;; Auto vars:     Size  Location     Type
 14545 ;;  fs              2   58[BANK0 ] PTR struct _FATFS
 14546 ;;		 -> fs(552), NULL(0), 
 14547 ;; Return value:  Size  Location     Type
 14548 ;;                  1    wreg      enum E155
 14549 ;; Registers used:
 14550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14551 ;; Tracked objects:
 14552 ;;		On entry : 0/0
 14553 ;;		On exit  : 0/0
 14554 ;;		Unchanged: 0/0
 14555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14556 ;;      Params:         0       0       0       0       0       0       0       0       0
 14557 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14558 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14559 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14560 ;;Total ram usage:        2 bytes
 14561 ;; Hardware stack levels used:    1
 14562 ;; Hardware stack levels required when called:    9
 14563 ;; This function calls:
 14564 ;;		_disk_ioctl
 14565 ;;		_move_window
 14566 ;; This function is called by:
 14567 ;;		_f_sync
 14568 ;;		_f_unlink
 14569 ;;		_f_mkdir
 14570 ;;		_f_chmod
 14571 ;;		_f_utime
 14572 ;;		_f_rename
 14573 ;; This function uses a non-reentrant model
 14574 ;;
 14575                           
 14576                           	psect	text41
 14577  004EDA                     __ptext41:
 14578                           	opt stack 0
 14579  004EDA                     _sync:
 14580                           	opt stack 17
 14581                           
 14582                           ;tff.c: 120: FATFS *fs = FatFs;
 14583                           
 14584                           ;incstack = 0
 14585  004EDA  C0FC  F09A         	movff	_FatFs,sync@fs
 14586  004EDE  C0FD  F09B         	movff	_FatFs+1,sync@fs+1
 14587                           
 14588                           ;tff.c: 123: fs->winflag = 1;
 14589  004EE2  0100               	movlb	0	; () banked
 14590  004EE4  EE20 F027          	lfsr	2,39
 14591  004EE8  519A               	movf	sync@fs& (0+255),w,b
 14592  004EEA  26D9               	addwf	fsr2l,f,c
 14593  004EEC  519B               	movf	(sync@fs+1)& (0+255),w,b
 14594  004EEE  22DA               	addwfc	fsr2h,f,c
 14595  004EF0  0E01               	movlw	1
 14596  004EF2  6EDF               	movwf	indf2,c
 14597                           
 14598                           ; BSR set to: 0
 14599                           ;tff.c: 124: if (!move_window(0)) return FR_RW_ERROR;
 14600  004EF4  0E00               	movlw	0
 14601  004EF6  0100               	movlb	0	; () banked
 14602  004EF8  6F83               	movwf	move_window@sector& (0+255),b
 14603  004EFA  0E00               	movlw	0
 14604  004EFC  6F84               	movwf	(move_window@sector+1)& (0+255),b
 14605  004EFE  0E00               	movlw	0
 14606  004F00  6F85               	movwf	(move_window@sector+2)& (0+255),b
 14607  004F02  0E00               	movlw	0
 14608  004F04  6F86               	movwf	(move_window@sector+3)& (0+255),b
 14609  004F06  ECB4  F01C         	call	_move_window	;wreg free
 14610  004F0A  0900               	iorlw	0
 14611  004F0C  A4D8               	btfss	status,2,c
 14612  004F0E  D002               	goto	l11484
 14613  004F10  0E08               	movlw	8
 14614  004F12  0012               	return	
 14615  004F14                     l11484:
 14616                           
 14617                           ;tff.c: 140: if (disk_ioctl(0, 0, (0)) != RES_OK)
 14618  004F14  0E00               	movlw	0
 14619  004F16  6E16               	movwf	disk_ioctl@cmd,c
 14620  004F18  0E00               	movlw	0
 14621  004F1A  6E17               	movwf	disk_ioctl@buff,c
 14622  004F1C  0E00               	movlw	0
 14623  004F1E  6E18               	movwf	disk_ioctl@buff+1,c
 14624  004F20  0E00               	movlw	0
 14625  004F22  ECD6  F029         	call	_disk_ioctl
 14626  004F26  0900               	iorlw	0
 14627  004F28  B4D8               	btfsc	status,2,c
 14628  004F2A  D002               	goto	l11490
 14629                           
 14630                           ;tff.c: 141: return FR_RW_ERROR;
 14631  004F2C  0E08               	movlw	8
 14632  004F2E  0012               	return	
 14633  004F30                     l11490:
 14634                           
 14635                           ;tff.c: 142: return FR_OK;
 14636  004F30  0E00               	movlw	0
 14637  004F32  0012               	return	
 14638  004F34                     __end_of_sync:
 14639                           	opt stack 0
 14640                           tosu	equ	0xFFF
 14641                           tosh	equ	0xFFE
 14642                           tosl	equ	0xFFD
 14643                           pclath	equ	0xFFA
 14644                           tblptru	equ	0xFF8
 14645                           tblptrh	equ	0xFF7
 14646                           tblptrl	equ	0xFF6
 14647                           tablat	equ	0xFF5
 14648                           prodh	equ	0xFF4
 14649                           prodl	equ	0xFF3
 14650                           intcon	equ	0xFF2
 14651                           intcon2	equ	0xFF1
 14652                           intcon3	equ	0xFF0
 14653                           indf0	equ	0xFEF
 14654                           postinc0	equ	0xFEE
 14655                           fsr0h	equ	0xFEA
 14656                           fsr0l	equ	0xFE9
 14657                           wreg	equ	0xFE8
 14658                           indf1	equ	0xFE7
 14659                           postinc1	equ	0xFE6
 14660                           postdec1	equ	0xFE5
 14661                           fsr1h	equ	0xFE2
 14662                           fsr1l	equ	0xFE1
 14663                           indf2	equ	0xFDF
 14664                           postinc2	equ	0xFDE
 14665                           postdec2	equ	0xFDD
 14666                           plusw2	equ	0xFDB
 14667                           fsr2h	equ	0xFDA
 14668                           fsr2l	equ	0xFD9
 14669                           status	equ	0xFD8
 14670                           
 14671 ;; *************** function _move_window *****************
 14672 ;; Defined at:
 14673 ;;		line 76 in file "bibliotecas/tff.c"
 14674 ;; Parameters:    Size  Location     Type
 14675 ;;  sector          4   35[BANK0 ] unsigned long 
 14676 ;; Auto vars:     Size  Location     Type
 14677 ;;  n               1   51[BANK0 ] unsigned char 
 14678 ;;  wsect           4   52[BANK0 ] unsigned long 
 14679 ;;  fs              2   56[BANK0 ] PTR struct _FATFS
 14680 ;;		 -> fs(552), NULL(0), 
 14681 ;; Return value:  Size  Location     Type
 14682 ;;                  1    wreg      enum E105
 14683 ;; Registers used:
 14684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14685 ;; Tracked objects:
 14686 ;;		On entry : 0/0
 14687 ;;		On exit  : 0/0
 14688 ;;		Unchanged: 0/0
 14689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14690 ;;      Params:         0       4       0       0       0       0       0       0       0
 14691 ;;      Locals:         0       7       0       0       0       0       0       0       0
 14692 ;;      Temps:          0      12       0       0       0       0       0       0       0
 14693 ;;      Totals:         0      23       0       0       0       0       0       0       0
 14694 ;;Total ram usage:       23 bytes
 14695 ;; Hardware stack levels used:    1
 14696 ;; Hardware stack levels required when called:    8
 14697 ;; This function calls:
 14698 ;;		_disk_read
 14699 ;;		_disk_write
 14700 ;; This function is called by:
 14701 ;;		_sync
 14702 ;;		_get_cluster
 14703 ;;		_put_cluster
 14704 ;;		_trace_path
 14705 ;;		_reserve_direntry
 14706 ;;		_f_open
 14707 ;;		_f_sync
 14708 ;;		_f_read
 14709 ;;		_f_write
 14710 ;;		_f_readdir
 14711 ;;		_f_getfree
 14712 ;;		_f_unlink
 14713 ;;		_f_mkdir
 14714 ;;		_f_rename
 14715 ;; This function uses a non-reentrant model
 14716 ;;
 14717                           
 14718                           	psect	text42
 14719  003968                     __ptext42:
 14720                           	opt stack 0
 14721  003968                     _move_window:
 14722                           	opt stack 16
 14723                           
 14724                           ;tff.c: 80: DWORD wsect;
 14725                           ;tff.c: 81: FATFS *fs = FatFs;
 14726                           
 14727                           ;incstack = 0
 14728  003968  C0FC  F098         	movff	_FatFs,move_window@fs
 14729  00396C  C0FD  F099         	movff	_FatFs+1,move_window@fs+1
 14730                           
 14731                           ;tff.c: 84: wsect = fs->winsect;
 14732  003970  0100               	movlb	0	; () banked
 14733  003972  EE20 F004          	lfsr	2,4
 14734  003976  5198               	movf	move_window@fs& (0+255),w,b
 14735  003978  26D9               	addwf	fsr2l,f,c
 14736  00397A  5199               	movf	(move_window@fs+1)& (0+255),w,b
 14737  00397C  22DA               	addwfc	fsr2h,f,c
 14738  00397E  CFDE F094          	movff	postinc2,move_window@wsect
 14739  003982  CFDE F095          	movff	postinc2,move_window@wsect+1
 14740  003986  CFDE F096          	movff	postinc2,move_window@wsect+2
 14741  00398A  CFDE F097          	movff	postinc2,move_window@wsect+3
 14742                           
 14743                           ; BSR set to: 0
 14744                           ;tff.c: 85: if (wsect != sector) {
 14745  00398E  0100               	movlb	0	; () banked
 14746  003990  5183               	movf	move_window@sector& (0+255),w,b
 14747  003992  0100               	movlb	0	; () banked
 14748  003994  1994               	xorwf	move_window@wsect& (0+255),w,b
 14749  003996  E110               	bnz	u12180
 14750  003998  0100               	movlb	0	; () banked
 14751  00399A  5184               	movf	(move_window@sector+1)& (0+255),w,b
 14752  00399C  0100               	movlb	0	; () banked
 14753  00399E  1995               	xorwf	(move_window@wsect+1)& (0+255),w,b
 14754  0039A0  E10B               	bnz	u12180
 14755  0039A2  0100               	movlb	0	; () banked
 14756  0039A4  5185               	movf	(move_window@sector+2)& (0+255),w,b
 14757  0039A6  0100               	movlb	0	; () banked
 14758  0039A8  1996               	xorwf	(move_window@wsect+2)& (0+255),w,b
 14759  0039AA  E106               	bnz	u12180
 14760  0039AC  0100               	movlb	0	; () banked
 14761  0039AE  5186               	movf	(move_window@sector+3)& (0+255),w,b
 14762  0039B0  0100               	movlb	0	; () banked
 14763  0039B2  1997               	xorwf	(move_window@wsect+3)& (0+255),w,b
 14764  0039B4  B4D8               	btfsc	status,2,c
 14765  0039B6  D0EB               	goto	l11076
 14766  0039B8                     u12180:
 14767                           
 14768                           ; BSR set to: 0
 14769                           ;tff.c: 87: BYTE n;
 14770                           ;tff.c: 88: if (fs->winflag) {
 14771  0039B8  0100               	movlb	0	; () banked
 14772  0039BA  EE20 F027          	lfsr	2,39
 14773  0039BE  5198               	movf	move_window@fs& (0+255),w,b
 14774  0039C0  26D9               	addwf	fsr2l,f,c
 14775  0039C2  5199               	movf	(move_window@fs+1)& (0+255),w,b
 14776  0039C4  22DA               	addwfc	fsr2h,f,c
 14777  0039C6  50DF               	movf	indf2,w,c
 14778  0039C8  B4D8               	btfsc	status,2,c
 14779  0039CA  D0AB               	goto	l11066
 14780                           
 14781                           ; BSR set to: 0
 14782                           ;tff.c: 89: if (disk_write(0, fs->win, wsect, 1) != RES_OK)
 14783  0039CC  0E28               	movlw	40
 14784  0039CE  0100               	movlb	0	; () banked
 14785  0039D0  2598               	addwf	move_window@fs& (0+255),w,b
 14786  0039D2  0100               	movlb	0	; () banked
 14787  0039D4  6F60               	movwf	disk_write@buff& (0+255),b
 14788  0039D6  0E00               	movlw	0
 14789  0039D8  0100               	movlb	0	; () banked
 14790  0039DA  2199               	addwfc	(move_window@fs+1)& (0+255),w,b
 14791  0039DC  0100               	movlb	0	; () banked
 14792  0039DE  6F61               	movwf	(disk_write@buff+1)& (0+255),b
 14793  0039E0  C094  F062         	movff	move_window@wsect,disk_write@sector
 14794  0039E4  C095  F063         	movff	move_window@wsect+1,disk_write@sector+1
 14795  0039E8  C096  F064         	movff	move_window@wsect+2,disk_write@sector+2
 14796  0039EC  C097  F065         	movff	move_window@wsect+3,disk_write@sector+3
 14797  0039F0  0E01               	movlw	1
 14798  0039F2  0100               	movlb	0	; () banked
 14799  0039F4  6F66               	movwf	disk_write@count& (0+255),b
 14800  0039F6  0E00               	movlw	0
 14801  0039F8  EC1E  F026         	call	_disk_write
 14802  0039FC  0900               	iorlw	0
 14803  0039FE  B4D8               	btfsc	status,2,c
 14804  003A00  D002               	goto	l11050
 14805                           
 14806                           ;tff.c: 90: return FALSE;
 14807  003A02  0E00               	movlw	0
 14808  003A04  0012               	return	
 14809  003A06                     l11050:
 14810                           
 14811                           ;tff.c: 91: fs->winflag = 0;
 14812  003A06  0100               	movlb	0	; () banked
 14813  003A08  EE20 F027          	lfsr	2,39
 14814  003A0C  5198               	movf	move_window@fs& (0+255),w,b
 14815  003A0E  26D9               	addwf	fsr2l,f,c
 14816  003A10  5199               	movf	(move_window@fs+1)& (0+255),w,b
 14817  003A12  22DA               	addwfc	fsr2h,f,c
 14818  003A14  0E00               	movlw	0
 14819  003A16  6EDF               	movwf	indf2,c
 14820                           
 14821                           ;tff.c: 92: if (wsect < (fs->fatbase + fs->sects_fat)) {
 14822  003A18  0100               	movlb	0	; () banked
 14823  003A1A  EE20 F014          	lfsr	2,20
 14824  003A1E  5198               	movf	move_window@fs& (0+255),w,b
 14825  003A20  26D9               	addwf	fsr2l,f,c
 14826  003A22  5199               	movf	(move_window@fs+1)& (0+255),w,b
 14827  003A24  22DA               	addwfc	fsr2h,f,c
 14828  003A26  CFDE F087          	movff	postinc2,??_move_window
 14829  003A2A  CFDE F088          	movff	postinc2,??_move_window+1
 14830  003A2E  CFDE F089          	movff	postinc2,??_move_window+2
 14831  003A32  CFDE F08A          	movff	postinc2,??_move_window+3
 14832  003A36  0100               	movlb	0	; () banked
 14833  003A38  EE20 F008          	lfsr	2,8
 14834  003A3C  5198               	movf	move_window@fs& (0+255),w,b
 14835  003A3E  26D9               	addwf	fsr2l,f,c
 14836  003A40  5199               	movf	(move_window@fs+1)& (0+255),w,b
 14837  003A42  22DA               	addwfc	fsr2h,f,c
 14838  003A44  CFDE F08B          	movff	postinc2,??_move_window+4
 14839  003A48  CFDE F08C          	movff	postinc2,??_move_window+5
 14840  003A4C  CFDE F08D          	movff	postinc2,??_move_window+6
 14841  003A50  CFDE F08E          	movff	postinc2,??_move_window+7
 14842  003A54  0100               	movlb	0	; () banked
 14843  003A56  5187               	movf	??_move_window& (0+255),w,b
 14844  003A58  0100               	movlb	0	; () banked
 14845  003A5A  258B               	addwf	(??_move_window+4)& (0+255),w,b
 14846  003A5C  0100               	movlb	0	; () banked
 14847  003A5E  6F8F               	movwf	(??_move_window+8)& (0+255),b
 14848  003A60  0100               	movlb	0	; () banked
 14849  003A62  5188               	movf	(??_move_window+1)& (0+255),w,b
 14850  003A64  0100               	movlb	0	; () banked
 14851  003A66  218C               	addwfc	(??_move_window+5)& (0+255),w,b
 14852  003A68  0100               	movlb	0	; () banked
 14853  003A6A  6F90               	movwf	(??_move_window+9)& (0+255),b
 14854  003A6C  0100               	movlb	0	; () banked
 14855  003A6E  5189               	movf	(??_move_window+2)& (0+255),w,b
 14856  003A70  0100               	movlb	0	; () banked
 14857  003A72  218D               	addwfc	(??_move_window+6)& (0+255),w,b
 14858  003A74  0100               	movlb	0	; () banked
 14859  003A76  6F91               	movwf	(??_move_window+10)& (0+255),b
 14860  003A78  0100               	movlb	0	; () banked
 14861  003A7A  518A               	movf	(??_move_window+3)& (0+255),w,b
 14862  003A7C  0100               	movlb	0	; () banked
 14863  003A7E  218E               	addwfc	(??_move_window+7)& (0+255),w,b
 14864  003A80  0100               	movlb	0	; () banked
 14865  003A82  6F92               	movwf	(??_move_window+11)& (0+255),b
 14866  003A84  0100               	movlb	0	; () banked
 14867  003A86  518F               	movf	(??_move_window+8)& (0+255),w,b
 14868  003A88  0100               	movlb	0	; () banked
 14869  003A8A  5D94               	subwf	move_window@wsect& (0+255),w,b
 14870  003A8C  0100               	movlb	0	; () banked
 14871  003A8E  5190               	movf	(??_move_window+9)& (0+255),w,b
 14872  003A90  0100               	movlb	0	; () banked
 14873  003A92  5995               	subwfb	(move_window@wsect+1)& (0+255),w,b
 14874  003A94  0100               	movlb	0	; () banked
 14875  003A96  5191               	movf	(??_move_window+10)& (0+255),w,b
 14876  003A98  0100               	movlb	0	; () banked
 14877  003A9A  5996               	subwfb	(move_window@wsect+2)& (0+255),w,b
 14878  003A9C  0100               	movlb	0	; () banked
 14879  003A9E  5192               	movf	(??_move_window+11)& (0+255),w,b
 14880  003AA0  0100               	movlb	0	; () banked
 14881  003AA2  5997               	subwfb	(move_window@wsect+3)& (0+255),w,b
 14882  003AA4  B0D8               	btfsc	status,0,c
 14883  003AA6  D03D               	goto	l11066
 14884                           
 14885                           ; BSR set to: 0
 14886                           ;tff.c: 93: for (n = fs->n_fats; n >= 2; n--) {
 14887  003AA8  0100               	movlb	0	; () banked
 14888  003AAA  EE20 F026          	lfsr	2,38
 14889  003AAE  5198               	movf	move_window@fs& (0+255),w,b
 14890  003AB0  26D9               	addwf	fsr2l,f,c
 14891  003AB2  5199               	movf	(move_window@fs+1)& (0+255),w,b
 14892  003AB4  22DA               	addwfc	fsr2h,f,c
 14893  003AB6  50DF               	movf	indf2,w,c
 14894  003AB8  0100               	movlb	0	; () banked
 14895  003ABA  6F93               	movwf	move_window@n& (0+255),b
 14896  003ABC                     l11054:
 14897                           
 14898                           ; BSR set to: 0
 14899  003ABC  0E02               	movlw	2
 14900  003ABE  0100               	movlb	0	; () banked
 14901  003AC0  6193               	cpfslt	move_window@n& (0+255),b
 14902  003AC2  D001               	goto	l11058
 14903  003AC4  D02E               	goto	l11066
 14904  003AC6                     l11058:
 14905                           
 14906                           ; BSR set to: 0
 14907                           ;tff.c: 94: wsect += fs->sects_fat;
 14908  003AC6  0100               	movlb	0	; () banked
 14909  003AC8  EE20 F014          	lfsr	2,20
 14910  003ACC  5198               	movf	move_window@fs& (0+255),w,b
 14911  003ACE  26D9               	addwf	fsr2l,f,c
 14912  003AD0  5199               	movf	(move_window@fs+1)& (0+255),w,b
 14913  003AD2  22DA               	addwfc	fsr2h,f,c
 14914  003AD4  50DE               	movf	postinc2,w,c
 14915  003AD6  0100               	movlb	0	; () banked
 14916  003AD8  2794               	addwf	move_window@wsect& (0+255),f,b
 14917  003ADA  50DE               	movf	postinc2,w,c
 14918  003ADC  0100               	movlb	0	; () banked
 14919  003ADE  2395               	addwfc	(move_window@wsect+1)& (0+255),f,b
 14920  003AE0  50DE               	movf	postinc2,w,c
 14921  003AE2  0100               	movlb	0	; () banked
 14922  003AE4  2396               	addwfc	(move_window@wsect+2)& (0+255),f,b
 14923  003AE6  50DD               	movf	postdec2,w,c
 14924  003AE8  0100               	movlb	0	; () banked
 14925  003AEA  2397               	addwfc	(move_window@wsect+3)& (0+255),f,b
 14926                           
 14927                           ; BSR set to: 0
 14928                           ;tff.c: 95: disk_write(0, fs->win, wsect, 1);
 14929  003AEC  0E28               	movlw	40
 14930  003AEE  0100               	movlb	0	; () banked
 14931  003AF0  2598               	addwf	move_window@fs& (0+255),w,b
 14932  003AF2  0100               	movlb	0	; () banked
 14933  003AF4  6F60               	movwf	disk_write@buff& (0+255),b
 14934  003AF6  0E00               	movlw	0
 14935  003AF8  0100               	movlb	0	; () banked
 14936  003AFA  2199               	addwfc	(move_window@fs+1)& (0+255),w,b
 14937  003AFC  0100               	movlb	0	; () banked
 14938  003AFE  6F61               	movwf	(disk_write@buff+1)& (0+255),b
 14939  003B00  C094  F062         	movff	move_window@wsect,disk_write@sector
 14940  003B04  C095  F063         	movff	move_window@wsect+1,disk_write@sector+1
 14941  003B08  C096  F064         	movff	move_window@wsect+2,disk_write@sector+2
 14942  003B0C  C097  F065         	movff	move_window@wsect+3,disk_write@sector+3
 14943  003B10  0E01               	movlw	1
 14944  003B12  0100               	movlb	0	; () banked
 14945  003B14  6F66               	movwf	disk_write@count& (0+255),b
 14946  003B16  0E00               	movlw	0
 14947  003B18  EC1E  F026         	call	_disk_write
 14948  003B1C  0100               	movlb	0	; () banked
 14949  003B1E  0793               	decf	move_window@n& (0+255),f,b
 14950  003B20  D7CD               	goto	l11054
 14951  003B22                     l11066:
 14952                           
 14953                           ; BSR set to: 0
 14954                           ;tff.c: 96: }
 14955                           ;tff.c: 97: }
 14956                           ;tff.c: 98: }
 14957                           ;tff.c: 100: if (sector) {
 14958  003B22  0100               	movlb	0	; () banked
 14959  003B24  5183               	movf	move_window@sector& (0+255),w,b
 14960  003B26  0100               	movlb	0	; () banked
 14961  003B28  1184               	iorwf	(move_window@sector+1)& (0+255),w,b
 14962  003B2A  0100               	movlb	0	; () banked
 14963  003B2C  1185               	iorwf	(move_window@sector+2)& (0+255),w,b
 14964  003B2E  0100               	movlb	0	; () banked
 14965  003B30  1186               	iorwf	(move_window@sector+3)& (0+255),w,b
 14966  003B32  B4D8               	btfsc	status,2,c
 14967  003B34  D02C               	goto	l11076
 14968                           
 14969                           ; BSR set to: 0
 14970                           ;tff.c: 101: if (disk_read(0, fs->win, sector, 1) != RES_OK)
 14971  003B36  0E28               	movlw	40
 14972  003B38  0100               	movlb	0	; () banked
 14973  003B3A  2598               	addwf	move_window@fs& (0+255),w,b
 14974  003B3C  0100               	movlb	0	; () banked
 14975  003B3E  6F78               	movwf	disk_read@buff& (0+255),b
 14976  003B40  0E00               	movlw	0
 14977  003B42  0100               	movlb	0	; () banked
 14978  003B44  2199               	addwfc	(move_window@fs+1)& (0+255),w,b
 14979  003B46  0100               	movlb	0	; () banked
 14980  003B48  6F79               	movwf	(disk_read@buff+1)& (0+255),b
 14981  003B4A  C083  F07A         	movff	move_window@sector,disk_read@sector
 14982  003B4E  C084  F07B         	movff	move_window@sector+1,disk_read@sector+1
 14983  003B52  C085  F07C         	movff	move_window@sector+2,disk_read@sector+2
 14984  003B56  C086  F07D         	movff	move_window@sector+3,disk_read@sector+3
 14985  003B5A  0E01               	movlw	1
 14986  003B5C  0100               	movlb	0	; () banked
 14987  003B5E  6F7E               	movwf	disk_read@count& (0+255),b
 14988  003B60  0E00               	movlw	0
 14989  003B62  ECCB  F024         	call	_disk_read
 14990  003B66  0900               	iorlw	0
 14991  003B68  B4D8               	btfsc	status,2,c
 14992  003B6A  D002               	goto	l11074
 14993                           
 14994                           ;tff.c: 102: return FALSE;
 14995  003B6C  0E00               	movlw	0
 14996  003B6E  0012               	return	
 14997  003B70                     l11074:
 14998                           
 14999                           ;tff.c: 103: fs->winsect = sector;
 15000  003B70  0100               	movlb	0	; () banked
 15001  003B72  EE20 F004          	lfsr	2,4
 15002  003B76  5198               	movf	move_window@fs& (0+255),w,b
 15003  003B78  26D9               	addwf	fsr2l,f,c
 15004  003B7A  5199               	movf	(move_window@fs+1)& (0+255),w,b
 15005  003B7C  22DA               	addwfc	fsr2h,f,c
 15006  003B7E  C083  FFDE         	movff	move_window@sector,postinc2
 15007  003B82  C084  FFDE         	movff	move_window@sector+1,postinc2
 15008  003B86  C085  FFDE         	movff	move_window@sector+2,postinc2
 15009  003B8A  C086  FFDE         	movff	move_window@sector+3,postinc2
 15010  003B8E                     l11076:
 15011                           
 15012                           ; BSR set to: 0
 15013                           ;tff.c: 104: }
 15014                           ;tff.c: 105: }
 15015                           ;tff.c: 106: return TRUE;
 15016  003B8E  0E01               	movlw	1
 15017  003B90  0012               	return	
 15018  003B92                     __end_of_move_window:
 15019                           	opt stack 0
 15020                           tosu	equ	0xFFF
 15021                           tosh	equ	0xFFE
 15022                           tosl	equ	0xFFD
 15023                           pclath	equ	0xFFA
 15024                           tblptru	equ	0xFF8
 15025                           tblptrh	equ	0xFF7
 15026                           tblptrl	equ	0xFF6
 15027                           tablat	equ	0xFF5
 15028                           prodh	equ	0xFF4
 15029                           prodl	equ	0xFF3
 15030                           intcon	equ	0xFF2
 15031                           intcon2	equ	0xFF1
 15032                           intcon3	equ	0xFF0
 15033                           indf0	equ	0xFEF
 15034                           postinc0	equ	0xFEE
 15035                           fsr0h	equ	0xFEA
 15036                           fsr0l	equ	0xFE9
 15037                           wreg	equ	0xFE8
 15038                           indf1	equ	0xFE7
 15039                           postinc1	equ	0xFE6
 15040                           postdec1	equ	0xFE5
 15041                           fsr1h	equ	0xFE2
 15042                           fsr1l	equ	0xFE1
 15043                           indf2	equ	0xFDF
 15044                           postinc2	equ	0xFDE
 15045                           postdec2	equ	0xFDD
 15046                           plusw2	equ	0xFDB
 15047                           fsr2h	equ	0xFDA
 15048                           fsr2l	equ	0xFD9
 15049                           status	equ	0xFD8
 15050                           
 15051 ;; *************** function _disk_write *****************
 15052 ;; Defined at:
 15053 ;;		line 197 in file "bibliotecas/diskio.c"
 15054 ;; Parameters:    Size  Location     Type
 15055 ;;  pdrv            1    wreg     unsigned char 
 15056 ;;  buff            2    0[BANK0 ] PTR const unsigned char 
 15057 ;;		 -> fs.win(512), fs(552), NULL(0), 
 15058 ;;  sector          4    2[BANK0 ] unsigned long 
 15059 ;;  count           1    6[BANK0 ] unsigned char 
 15060 ;; Auto vars:     Size  Location     Type
 15061 ;;  pdrv            1   48[COMRAM] unsigned char 
 15062 ;;  result          2   49[COMRAM] int 
 15063 ;;  res             1   51[COMRAM] enum E25
 15064 ;; Return value:  Size  Location     Type
 15065 ;;                  1    wreg      enum E25
 15066 ;; Registers used:
 15067 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15068 ;; Tracked objects:
 15069 ;;		On entry : 0/0
 15070 ;;		On exit  : 0/0
 15071 ;;		Unchanged: 0/0
 15072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15073 ;;      Params:         0       7       0       0       0       0       0       0       0
 15074 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15075 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15076 ;;      Totals:         5       7       0       0       0       0       0       0       0
 15077 ;;Total ram usage:       12 bytes
 15078 ;; Hardware stack levels used:    1
 15079 ;; Hardware stack levels required when called:    6
 15080 ;; This function calls:
 15081 ;;		_sdc_disk_write
 15082 ;; This function is called by:
 15083 ;;		_move_window
 15084 ;;		_reserve_direntry
 15085 ;;		_f_write
 15086 ;;		_f_mkdir
 15087 ;; This function uses a non-reentrant model
 15088 ;;
 15089                           
 15090                           	psect	text43
 15091  004C3C                     __ptext43:
 15092                           	opt stack 0
 15093  004C3C                     _disk_write:
 15094                           	opt stack 17
 15095                           
 15096                           ;incstack = 0
 15097                           ;disk_write@pdrv stored from wreg
 15098  004C3C  6E31               	movwf	disk_write@pdrv,c
 15099                           
 15100                           ;diskio.c: 204: DRESULT res;
 15101                           ;diskio.c: 205: int result;
 15102                           ;diskio.c: 207: switch (pdrv) {
 15103  004C3E  D030               	goto	l11018
 15104  004C40                     l10998:
 15105                           
 15106                           ;diskio.c: 210: result = sdc_disk_write(buff, sector, count);
 15107  004C40  C060  F01F         	movff	disk_write@buff,sdc_disk_write@p_buff
 15108  004C44  C061  F020         	movff	disk_write@buff+1,sdc_disk_write@p_buff+1
 15109  004C48  C062  F021         	movff	disk_write@sector,sdc_disk_write@sector
 15110  004C4C  C063  F022         	movff	disk_write@sector+1,sdc_disk_write@sector+1
 15111  004C50  C064  F023         	movff	disk_write@sector+2,sdc_disk_write@sector+2
 15112  004C54  C065  F024         	movff	disk_write@sector+3,sdc_disk_write@sector+3
 15113  004C58  C066  F025         	movff	disk_write@count,sdc_disk_write@count
 15114  004C5C  EC63  F021         	call	_sdc_disk_write	;wreg free
 15115  004C60  6E30               	movwf	??_disk_write& (0+255),c
 15116  004C62  5030               	movf	??_disk_write,w,c
 15117  004C64  6E32               	movwf	disk_write@result,c
 15118  004C66  6A33               	clrf	disk_write@result+1,c
 15119                           
 15120                           ;diskio.c: 212: res = result;
 15121  004C68  C032  F034         	movff	disk_write@result,disk_write@res
 15122                           
 15123                           ;diskio.c: 215: return res;
 15124  004C6C  5034               	movf	disk_write@res,w,c
 15125  004C6E  0012               	return	
 15126  004C70                     l11006:
 15127                           
 15128                           ;diskio.c: 219: result = sdc_disk_write(buff, sector, count);
 15129  004C70  C060  F01F         	movff	disk_write@buff,sdc_disk_write@p_buff
 15130  004C74  C061  F020         	movff	disk_write@buff+1,sdc_disk_write@p_buff+1
 15131  004C78  C062  F021         	movff	disk_write@sector,sdc_disk_write@sector
 15132  004C7C  C063  F022         	movff	disk_write@sector+1,sdc_disk_write@sector+1
 15133  004C80  C064  F023         	movff	disk_write@sector+2,sdc_disk_write@sector+2
 15134  004C84  C065  F024         	movff	disk_write@sector+3,sdc_disk_write@sector+3
 15135  004C88  C066  F025         	movff	disk_write@count,sdc_disk_write@count
 15136  004C8C  EC63  F021         	call	_sdc_disk_write	;wreg free
 15137  004C90  6E30               	movwf	??_disk_write& (0+255),c
 15138  004C92  5030               	movf	??_disk_write,w,c
 15139  004C94  6E32               	movwf	disk_write@result,c
 15140  004C96  6A33               	clrf	disk_write@result+1,c
 15141                           
 15142                           ;diskio.c: 222: return res;
 15143  004C98  5034               	movf	disk_write@res,w,c
 15144  004C9A  0012               	return	
 15145  004C9C                     l11012:
 15146                           
 15147                           ;diskio.c: 231: return res;
 15148  004C9C  5034               	movf	disk_write@res,w,c
 15149  004C9E  0012               	return	
 15150  004CA0                     l11018:
 15151  004CA0  5031               	movf	disk_write@pdrv,w,c
 15152                           
 15153                           ; Switch size 1, requested type "space"
 15154                           ; Number of cases is 3, Range of values is 0 to 2
 15155                           ; switch strategies available:
 15156                           ; Name         Instructions Cycles
 15157                           ; simple_byte           10     6 (average)
 15158                           ;	Chosen strategy is simple_byte
 15159  004CA2  0A00               	xorlw	0	; case 0
 15160  004CA4  B4D8               	btfsc	status,2,c
 15161  004CA6  D7E4               	goto	l11006
 15162  004CA8  0A01               	xorlw	1	; case 1
 15163  004CAA  B4D8               	btfsc	status,2,c
 15164  004CAC  D7C9               	goto	l10998
 15165  004CAE  0A03               	xorlw	3	; case 2
 15166  004CB0  B4D8               	btfsc	status,2,c
 15167  004CB2  D7F4               	goto	l11012
 15168                           
 15169                           ;diskio.c: 234: return RES_PARERR;
 15170  004CB4  0E04               	movlw	4
 15171  004CB6  0012               	return	
 15172  004CB8                     __end_of_disk_write:
 15173                           	opt stack 0
 15174                           tosu	equ	0xFFF
 15175                           tosh	equ	0xFFE
 15176                           tosl	equ	0xFFD
 15177                           pclath	equ	0xFFA
 15178                           tblptru	equ	0xFF8
 15179                           tblptrh	equ	0xFF7
 15180                           tblptrl	equ	0xFF6
 15181                           tablat	equ	0xFF5
 15182                           prodh	equ	0xFF4
 15183                           prodl	equ	0xFF3
 15184                           intcon	equ	0xFF2
 15185                           intcon2	equ	0xFF1
 15186                           intcon3	equ	0xFF0
 15187                           indf0	equ	0xFEF
 15188                           postinc0	equ	0xFEE
 15189                           fsr0h	equ	0xFEA
 15190                           fsr0l	equ	0xFE9
 15191                           wreg	equ	0xFE8
 15192                           indf1	equ	0xFE7
 15193                           postinc1	equ	0xFE6
 15194                           postdec1	equ	0xFE5
 15195                           fsr1h	equ	0xFE2
 15196                           fsr1l	equ	0xFE1
 15197                           indf2	equ	0xFDF
 15198                           postinc2	equ	0xFDE
 15199                           postdec2	equ	0xFDD
 15200                           plusw2	equ	0xFDB
 15201                           fsr2h	equ	0xFDA
 15202                           fsr2l	equ	0xFD9
 15203                           status	equ	0xFD8
 15204                           
 15205 ;; *************** function _sdc_disk_write *****************
 15206 ;; Defined at:
 15207 ;;		line 621 in file "bibliotecas/diskio.c"
 15208 ;; Parameters:    Size  Location     Type
 15209 ;;  p_buff          2   30[COMRAM] PTR const unsigned char 
 15210 ;;		 -> fs.win(512), fs(552), NULL(0), 
 15211 ;;  sector          4   32[COMRAM] unsigned long 
 15212 ;;  count           1   36[COMRAM] unsigned char 
 15213 ;; Auto vars:     Size  Location     Type
 15214 ;;  i               1   44[COMRAM] unsigned char 
 15215 ;;  count1          2   42[COMRAM] int 
 15216 ;;  i               2   40[COMRAM] int 
 15217 ;;  j               2    0        int 
 15218 ;;  buff            1   46[COMRAM] unsigned char 
 15219 ;;  res             1   45[COMRAM] enum E25
 15220 ;; Return value:  Size  Location     Type
 15221 ;;                  1    wreg      enum E25
 15222 ;; Registers used:
 15223 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15224 ;; Tracked objects:
 15225 ;;		On entry : 0/0
 15226 ;;		On exit  : 0/0
 15227 ;;		Unchanged: 0/0
 15228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15229 ;;      Params:         7       0       0       0       0       0       0       0       0
 15230 ;;      Locals:         7       0       0       0       0       0       0       0       0
 15231 ;;      Temps:          3       0       0       0       0       0       0       0       0
 15232 ;;      Totals:        17       0       0       0       0       0       0       0       0
 15233 ;;Total ram usage:       17 bytes
 15234 ;; Hardware stack levels used:    1
 15235 ;; Hardware stack levels required when called:    5
 15236 ;; This function calls:
 15237 ;;		___awdiv
 15238 ;;		_command
 15239 ;;		_dummy_clocks
 15240 ;;		_escreve_dado_SPI
 15241 ;;		_escreve_frase_ram_lcd
 15242 ;;		_posicao_cursor_lcd
 15243 ;;		_response
 15244 ;; This function is called by:
 15245 ;;		_disk_write
 15246 ;; This function uses a non-reentrant model
 15247 ;;
 15248                           
 15249                           	psect	text44
 15250  0042C6                     __ptext44:
 15251                           	opt stack 0
 15252  0042C6                     _sdc_disk_write:
 15253                           	opt stack 17
 15254                           
 15255                           ;diskio.c: 623: DRESULT res;
 15256                           ;diskio.c: 624: unsigned char buff;
 15257                           ;diskio.c: 625: int i=0,j, count1 = 0;
 15258                           
 15259                           ;incstack = 0
 15260  0042C6  0E00               	movlw	0
 15261  0042C8  6E2A               	movwf	sdc_disk_write@i+1,c
 15262  0042CA  0E00               	movlw	0
 15263  0042CC  6E29               	movwf	sdc_disk_write@i,c
 15264  0042CE  0E00               	movlw	0
 15265  0042D0  6E2C               	movwf	sdc_disk_write@count1+1,c
 15266  0042D2  0E00               	movlw	0
 15267  0042D4  6E2B               	movwf	sdc_disk_write@count1,c
 15268                           
 15269                           ;diskio.c: 627: LATBbits.LATB7 = 1;
 15270  0042D6  8E8A               	bsf	3978,7,c	;volatile
 15271                           
 15272                           ;diskio.c: 628: LATBbits.LATB4 = 0;
 15273  0042D8  988A               	bcf	3978,4,c	;volatile
 15274                           
 15275                           ;diskio.c: 630: if(count < 512)
 15276  0042DA  0E08               	movlw	8
 15277  0042DC  EC06  F029         	call	_dummy_clocks
 15278                           
 15279                           ;diskio.c: 631: {
 15280                           ;diskio.c: 632: command(0X58, 0X00000000, 0X00);
 15281  0042E0  0E00               	movlw	0
 15282  0042E2  6E18               	movwf	command@arg,c
 15283  0042E4  0E00               	movlw	0
 15284  0042E6  6E19               	movwf	command@arg+1,c
 15285  0042E8  0E00               	movlw	0
 15286  0042EA  6E1A               	movwf	command@arg+2,c
 15287  0042EC  0E00               	movlw	0
 15288  0042EE  6E1B               	movwf	command@arg+3,c
 15289  0042F0  0E00               	movlw	0
 15290  0042F2  6E1C               	movwf	command@CRC,c
 15291  0042F4  0E58               	movlw	88
 15292  0042F6  EC60  F029         	call	_command
 15293                           
 15294                           ;diskio.c: 633: LATBbits.LATB4 = 1;
 15295  0042FA  888A               	bsf	3978,4,c	;volatile
 15296  0042FC                     l10878:
 15297                           
 15298                           ;diskio.c: 635: {
 15299                           ;diskio.c: 636: buff = response();
 15300  0042FC  EC83  F02A         	call	_response	;wreg free
 15301  004300  6E2F               	movwf	sdc_disk_write@buff,c
 15302                           
 15303                           ;diskio.c: 638: }
 15304                           ;diskio.c: 639: while(buff != 0x00);
 15305  004302  502F               	movf	sdc_disk_write@buff,w,c
 15306  004304  A4D8               	btfss	status,2,c
 15307  004306  D7FA               	goto	l10878
 15308                           
 15309                           ;diskio.c: 641: _delay((unsigned long)((1)*(48000000/4000.0)));
 15310  004308  0E10               	movlw	16
 15311  00430A  6E26               	movwf	??_sdc_disk_write& (0+255),c
 15312  00430C  0E94               	movlw	148
 15313  00430E                     u16907:
 15314  00430E  2EE8               	decfsz	wreg,f,c
 15315  004310  D7FE               	bra	u16907
 15316  004312  2E26               	decfsz	??_sdc_disk_write& (0+255),f,c
 15317  004314  D7FC               	bra	u16907
 15318  004316  D000               	nop2	
 15319                           
 15320                           ;diskio.c: 642: LATBbits.LATB7 = 1;
 15321  004318  8E8A               	bsf	3978,7,c	;volatile
 15322                           
 15323                           ;diskio.c: 643: LATBbits.LATB4 = 0;
 15324  00431A  988A               	bcf	3978,4,c	;volatile
 15325                           
 15326                           ;diskio.c: 644: escreve_dado_SPI(0XFE);
 15327  00431C  0EFE               	movlw	254
 15328  00431E  EC62  F028         	call	_escreve_dado_SPI
 15329                           
 15330                           ;diskio.c: 645: LATBbits.LATB4 = 1;
 15331  004322  888A               	bsf	3978,4,c	;volatile
 15332                           
 15333                           ;diskio.c: 648: _delay((unsigned long)((1)*(48000000/4000.0)));
 15334  004324  0E10               	movlw	16
 15335  004326  6E26               	movwf	??_sdc_disk_write& (0+255),c
 15336  004328  0E94               	movlw	148
 15337  00432A                     u16917:
 15338  00432A  2EE8               	decfsz	wreg,f,c
 15339  00432C  D7FE               	bra	u16917
 15340  00432E  2E26               	decfsz	??_sdc_disk_write& (0+255),f,c
 15341  004330  D7FC               	bra	u16917
 15342  004332  D000               	nop2	
 15343                           
 15344                           ;diskio.c: 650: LATBbits.LATB7 = 1;
 15345  004334  8E8A               	bsf	3978,7,c	;volatile
 15346                           
 15347                           ;diskio.c: 651: LATBbits.LATB4 = 0;
 15348  004336  988A               	bcf	3978,4,c	;volatile
 15349                           
 15350                           ;diskio.c: 652: escreve_dado_SPI(*p_buff);
 15351  004338  C01F  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 15352  00433C  C020  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 15353  004340  50DF               	movf	indf2,w,c
 15354  004342  EC62  F028         	call	_escreve_dado_SPI
 15355                           
 15356                           ;diskio.c: 653: p_buff++;
 15357  004346  4A1F               	infsnz	sdc_disk_write@p_buff,f,c
 15358  004348  2A20               	incf	sdc_disk_write@p_buff+1,f,c
 15359                           
 15360                           ;diskio.c: 654: LATBbits.LATB4 = 1;
 15361  00434A  888A               	bsf	3978,4,c	;volatile
 15362                           
 15363                           ;diskio.c: 655: }
 15364  00434C  D03B               	goto	l10938
 15365  00434E                     l281:
 15366                           
 15367                           ;diskio.c: 662: {
 15368                           ;diskio.c: 663: buff = response();
 15369  00434E  EC83  F02A         	call	_response	;wreg free
 15370  004352  6E2F               	movwf	sdc_disk_write@buff,c
 15371                           
 15372                           ;diskio.c: 665: }
 15373                           ;diskio.c: 666: while(buff != 0x00);
 15374  004354  502F               	movf	sdc_disk_write@buff,w,c
 15375  004356  A4D8               	btfss	status,2,c
 15376  004358  D7FA               	goto	l281
 15377                           
 15378                           ;diskio.c: 670: for(char i = 0; i < count / 512; i++)
 15379  00435A  0E00               	movlw	0
 15380  00435C  6E2D               	movwf	sdc_disk_write@i_551,c
 15381  00435E  D01C               	goto	l10936
 15382  004360                     l284:
 15383                           
 15384                           ;diskio.c: 671: {
 15385                           ;diskio.c: 673: LATBbits.LATB7 = 1;
 15386  004360  8E8A               	bsf	3978,7,c	;volatile
 15387                           
 15388                           ;diskio.c: 674: LATBbits.LATB4 = 0;
 15389  004362  988A               	bcf	3978,4,c	;volatile
 15390                           
 15391                           ;diskio.c: 675: dummy_clocks(2);
 15392  004364  0E02               	movlw	2
 15393  004366  EC06  F029         	call	_dummy_clocks
 15394                           
 15395                           ;diskio.c: 676: escreve_dado_SPI(0XFC);
 15396  00436A  0EFC               	movlw	252
 15397  00436C  EC62  F028         	call	_escreve_dado_SPI
 15398                           
 15399                           ;diskio.c: 677: LATBbits.LATB4 = 1;
 15400  004370  888A               	bsf	3978,4,c	;volatile
 15401                           
 15402                           ;diskio.c: 679: LATBbits.LATB7 = 1;
 15403  004372  8E8A               	bsf	3978,7,c	;volatile
 15404                           
 15405                           ;diskio.c: 680: LATBbits.LATB4 = 0;
 15406  004374  988A               	bcf	3978,4,c	;volatile
 15407                           
 15408                           ;diskio.c: 681: escreve_dado_SPI(*p_buff);
 15409  004376  C01F  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 15410  00437A  C020  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 15411  00437E  50DF               	movf	indf2,w,c
 15412  004380  EC62  F028         	call	_escreve_dado_SPI
 15413                           
 15414                           ;diskio.c: 682: p_buff++;
 15415  004384  4A1F               	infsnz	sdc_disk_write@p_buff,f,c
 15416  004386  2A20               	incf	sdc_disk_write@p_buff+1,f,c
 15417                           
 15418                           ;diskio.c: 683: LATBbits.LATB4 = 1;
 15419  004388  888A               	bsf	3978,4,c	;volatile
 15420                           
 15421                           ;diskio.c: 685: LATBbits.LATB7 = 1;
 15422  00438A  8E8A               	bsf	3978,7,c	;volatile
 15423                           
 15424                           ;diskio.c: 686: LATBbits.LATB4 = 0;
 15425  00438C  988A               	bcf	3978,4,c	;volatile
 15426                           
 15427                           ;diskio.c: 687: escreve_dado_SPI(0XFD);
 15428  00438E  0EFD               	movlw	253
 15429  004390  EC62  F028         	call	_escreve_dado_SPI
 15430                           
 15431                           ;diskio.c: 688: LATBbits.LATB4 = 1;
 15432  004394  888A               	bsf	3978,4,c	;volatile
 15433  004396  2A2D               	incf	sdc_disk_write@i_551,f,c
 15434  004398                     l10936:
 15435  004398  C025  F016         	movff	sdc_disk_write@count,___awdiv@dividend
 15436  00439C  6A17               	clrf	___awdiv@dividend+1,c
 15437  00439E  0E02               	movlw	2
 15438  0043A0  6E19               	movwf	___awdiv@divisor+1,c
 15439  0043A2  0E00               	movlw	0
 15440  0043A4  6E18               	movwf	___awdiv@divisor,c
 15441  0043A6  EC5C  F025         	call	___awdiv	;wreg free
 15442  0043AA  502D               	movf	sdc_disk_write@i_551,w,c
 15443  0043AC  6E26               	movwf	??_sdc_disk_write& (0+255),c
 15444  0043AE  6A27               	clrf	(??_sdc_disk_write+1)& (0+255),c
 15445  0043B0  5016               	movf	?___awdiv,w,c
 15446  0043B2  5C26               	subwf	??_sdc_disk_write,w,c
 15447  0043B4  5027               	movf	??_sdc_disk_write+1,w,c
 15448  0043B6  0A80               	xorlw	128
 15449  0043B8  6E28               	movwf	(??_sdc_disk_write+2)& (0+255),c
 15450  0043BA  5017               	movf	?___awdiv+1,w,c
 15451  0043BC  0A80               	xorlw	128
 15452  0043BE  5828               	subwfb	(??_sdc_disk_write+2)& (0+255),w,c
 15453  0043C0  A0D8               	btfss	status,0,c
 15454  0043C2  D7CE               	goto	l284
 15455  0043C4                     l10938:
 15456                           
 15457                           ;diskio.c: 690: }
 15458                           ;diskio.c: 692: }
 15459                           ;diskio.c: 694: _delay((unsigned long)((1)*(48000000/4000.0)));
 15460  0043C4  0E10               	movlw	16
 15461  0043C6  6E26               	movwf	??_sdc_disk_write& (0+255),c
 15462  0043C8  0E94               	movlw	148
 15463  0043CA                     u16927:
 15464  0043CA  2EE8               	decfsz	wreg,f,c
 15465  0043CC  D7FE               	bra	u16927
 15466  0043CE  2E26               	decfsz	??_sdc_disk_write& (0+255),f,c
 15467  0043D0  D7FC               	bra	u16927
 15468  0043D2  D000               	nop2	
 15469                           
 15470                           ;diskio.c: 695: LATBbits.LATB4 = 0;
 15471  0043D4  988A               	bcf	3978,4,c	;volatile
 15472                           
 15473                           ;diskio.c: 696: LATBbits.LATB7 = 1;
 15474  0043D6  8E8A               	bsf	3978,7,c	;volatile
 15475                           
 15476                           ;diskio.c: 697: dummy_clocks(2);
 15477  0043D8  0E02               	movlw	2
 15478  0043DA  EC06  F029         	call	_dummy_clocks
 15479                           
 15480                           ;diskio.c: 698: command(0X4D,0X00000000,0XFF);
 15481  0043DE  0E00               	movlw	0
 15482  0043E0  6E18               	movwf	command@arg,c
 15483  0043E2  0E00               	movlw	0
 15484  0043E4  6E19               	movwf	command@arg+1,c
 15485  0043E6  0E00               	movlw	0
 15486  0043E8  6E1A               	movwf	command@arg+2,c
 15487  0043EA  0E00               	movlw	0
 15488  0043EC  6E1B               	movwf	command@arg+3,c
 15489  0043EE  0EFF               	movlw	255
 15490  0043F0  6E1C               	movwf	command@CRC,c
 15491  0043F2  0E4D               	movlw	77
 15492  0043F4  EC60  F029         	call	_command
 15493                           
 15494                           ;diskio.c: 699: LATBbits.LATB4 = 1;
 15495  0043F8  888A               	bsf	3978,4,c	;volatile
 15496  0043FA                     l10950:
 15497                           
 15498                           ;diskio.c: 703: buff = response();
 15499  0043FA  EC83  F02A         	call	_response	;wreg free
 15500  0043FE  6E2F               	movwf	sdc_disk_write@buff,c
 15501                           
 15502                           ;diskio.c: 709: }while(buff!=0X00 );
 15503  004400  502F               	movf	sdc_disk_write@buff,w,c
 15504  004402  A4D8               	btfss	status,2,c
 15505  004404  D7FA               	goto	l10950
 15506                           
 15507                           ;diskio.c: 711: posicao_cursor_lcd(1,0);
 15508  004406  0E00               	movlw	0
 15509  004408  6E19               	movwf	posicao_cursor_lcd@coluna,c
 15510  00440A  0E01               	movlw	1
 15511  00440C  ECD2  F026         	call	_posicao_cursor_lcd
 15512                           
 15513                           ;diskio.c: 712: escreve_frase_ram_lcd(res);
 15514  004410  502E               	movf	sdc_disk_write@res,w,c
 15515  004412  6E26               	movwf	??_sdc_disk_write& (0+255),c
 15516  004414  6A27               	clrf	(??_sdc_disk_write+1)& (0+255),c
 15517  004416  C026  F019         	movff	??_sdc_disk_write,escreve_frase_ram_lcd@buffer
 15518  00441A  C027  F01A         	movff	??_sdc_disk_write+1,escreve_frase_ram_lcd@buffer+1
 15519  00441E  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 15520                           
 15521                           ;diskio.c: 713: _delay((unsigned long)((2000)*(48000000/4000.0)));
 15522  004422  0E7A               	movlw	122
 15523  004424  6E27               	movwf	(??_sdc_disk_write+1)& (0+255),c
 15524  004426  0EC1               	movlw	193
 15525  004428  6E26               	movwf	??_sdc_disk_write& (0+255),c
 15526  00442A  0E82               	movlw	130
 15527  00442C                     u16937:
 15528  00442C  2EE8               	decfsz	wreg,f,c
 15529  00442E  D7FE               	bra	u16937
 15530  004430  2E26               	decfsz	??_sdc_disk_write& (0+255),f,c
 15531  004432  D7FC               	bra	u16937
 15532  004434  2E27               	decfsz	(??_sdc_disk_write+1)& (0+255),f,c
 15533  004436  D7FA               	bra	u16937
 15534                           
 15535                           ;diskio.c: 717: return res;
 15536  004438  502E               	movf	sdc_disk_write@res,w,c
 15537  00443A  0012               	return	
 15538  00443C                     __end_of_sdc_disk_write:
 15539                           	opt stack 0
 15540                           tosu	equ	0xFFF
 15541                           tosh	equ	0xFFE
 15542                           tosl	equ	0xFFD
 15543                           pclath	equ	0xFFA
 15544                           tblptru	equ	0xFF8
 15545                           tblptrh	equ	0xFF7
 15546                           tblptrl	equ	0xFF6
 15547                           tablat	equ	0xFF5
 15548                           prodh	equ	0xFF4
 15549                           prodl	equ	0xFF3
 15550                           intcon	equ	0xFF2
 15551                           intcon2	equ	0xFF1
 15552                           intcon3	equ	0xFF0
 15553                           indf0	equ	0xFEF
 15554                           postinc0	equ	0xFEE
 15555                           fsr0h	equ	0xFEA
 15556                           fsr0l	equ	0xFE9
 15557                           wreg	equ	0xFE8
 15558                           indf1	equ	0xFE7
 15559                           postinc1	equ	0xFE6
 15560                           postdec1	equ	0xFE5
 15561                           fsr1h	equ	0xFE2
 15562                           fsr1l	equ	0xFE1
 15563                           indf2	equ	0xFDF
 15564                           postinc2	equ	0xFDE
 15565                           postdec2	equ	0xFDD
 15566                           plusw2	equ	0xFDB
 15567                           fsr2h	equ	0xFDA
 15568                           fsr2l	equ	0xFD9
 15569                           status	equ	0xFD8
 15570                           
 15571 ;; *************** function ___awdiv *****************
 15572 ;; Defined at:
 15573 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 15574 ;; Parameters:    Size  Location     Type
 15575 ;;  dividend        2   21[COMRAM] int 
 15576 ;;  divisor         2   23[COMRAM] int 
 15577 ;; Auto vars:     Size  Location     Type
 15578 ;;  quotient        2   27[COMRAM] int 
 15579 ;;  sign            1   26[COMRAM] unsigned char 
 15580 ;;  counter         1   25[COMRAM] unsigned char 
 15581 ;; Return value:  Size  Location     Type
 15582 ;;                  2   21[COMRAM] int 
 15583 ;; Registers used:
 15584 ;;		wreg, status,2, status,0
 15585 ;; Tracked objects:
 15586 ;;		On entry : 0/0
 15587 ;;		On exit  : 0/0
 15588 ;;		Unchanged: 0/0
 15589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15590 ;;      Params:         4       0       0       0       0       0       0       0       0
 15591 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15592 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15593 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15594 ;;Total ram usage:        8 bytes
 15595 ;; Hardware stack levels used:    1
 15596 ;; Hardware stack levels required when called:    2
 15597 ;; This function calls:
 15598 ;;		Nothing
 15599 ;; This function is called by:
 15600 ;;		_sdc_disk_write
 15601 ;;		_sprintf
 15602 ;;		_scale
 15603 ;;		_fround
 15604 ;; This function uses a non-reentrant model
 15605 ;;
 15606                           
 15607                           	psect	text45
 15608  004AB8                     __ptext45:
 15609                           	opt stack 0
 15610  004AB8                     ___awdiv:
 15611                           	opt stack 19
 15612                           
 15613                           ;incstack = 0
 15614  004AB8  0E00               	movlw	0
 15615  004ABA  6E1B               	movwf	___awdiv@sign,c
 15616  004ABC  AE19               	btfss	___awdiv@divisor+1,7,c
 15617  004ABE  D006               	goto	l10630
 15618  004AC0  6C18               	negf	___awdiv@divisor,c
 15619  004AC2  1E19               	comf	___awdiv@divisor+1,f,c
 15620  004AC4  B0D8               	btfsc	status,0,c
 15621  004AC6  2A19               	incf	___awdiv@divisor+1,f,c
 15622  004AC8  0E01               	movlw	1
 15623  004ACA  6E1B               	movwf	___awdiv@sign,c
 15624  004ACC                     l10630:
 15625  004ACC  AE17               	btfss	___awdiv@dividend+1,7,c
 15626  004ACE  D006               	goto	l10636
 15627  004AD0  6C16               	negf	___awdiv@dividend,c
 15628  004AD2  1E17               	comf	___awdiv@dividend+1,f,c
 15629  004AD4  B0D8               	btfsc	status,0,c
 15630  004AD6  2A17               	incf	___awdiv@dividend+1,f,c
 15631  004AD8  0E01               	movlw	1
 15632  004ADA  1A1B               	xorwf	___awdiv@sign,f,c
 15633  004ADC                     l10636:
 15634  004ADC  0E00               	movlw	0
 15635  004ADE  6E1D               	movwf	___awdiv@quotient+1,c
 15636  004AE0  0E00               	movlw	0
 15637  004AE2  6E1C               	movwf	___awdiv@quotient,c
 15638  004AE4  5018               	movf	___awdiv@divisor,w,c
 15639  004AE6  1019               	iorwf	___awdiv@divisor+1,w,c
 15640  004AE8  B4D8               	btfsc	status,2,c
 15641  004AEA  D01C               	goto	l10658
 15642  004AEC  0E01               	movlw	1
 15643  004AEE  6E1A               	movwf	___awdiv@counter,c
 15644  004AF0  D004               	goto	l10644
 15645  004AF2                     l10642:
 15646  004AF2  90D8               	bcf	status,0,c
 15647  004AF4  3618               	rlcf	___awdiv@divisor,f,c
 15648  004AF6  3619               	rlcf	___awdiv@divisor+1,f,c
 15649  004AF8  2A1A               	incf	___awdiv@counter,f,c
 15650  004AFA                     l10644:
 15651  004AFA  AE19               	btfss	___awdiv@divisor+1,7,c
 15652  004AFC  D7FA               	goto	l10642
 15653  004AFE                     l10646:
 15654  004AFE  90D8               	bcf	status,0,c
 15655  004B00  361C               	rlcf	___awdiv@quotient,f,c
 15656  004B02  361D               	rlcf	___awdiv@quotient+1,f,c
 15657  004B04  5018               	movf	___awdiv@divisor,w,c
 15658  004B06  5C16               	subwf	___awdiv@dividend,w,c
 15659  004B08  5019               	movf	___awdiv@divisor+1,w,c
 15660  004B0A  5817               	subwfb	___awdiv@dividend+1,w,c
 15661  004B0C  A0D8               	btfss	status,0,c
 15662  004B0E  D005               	goto	l10654
 15663  004B10  5018               	movf	___awdiv@divisor,w,c
 15664  004B12  5E16               	subwf	___awdiv@dividend,f,c
 15665  004B14  5019               	movf	___awdiv@divisor+1,w,c
 15666  004B16  5A17               	subwfb	___awdiv@dividend+1,f,c
 15667  004B18  801C               	bsf	___awdiv@quotient,0,c
 15668  004B1A                     l10654:
 15669  004B1A  90D8               	bcf	status,0,c
 15670  004B1C  3219               	rrcf	___awdiv@divisor+1,f,c
 15671  004B1E  3218               	rrcf	___awdiv@divisor,f,c
 15672  004B20  2E1A               	decfsz	___awdiv@counter,f,c
 15673  004B22  D7ED               	goto	l10646
 15674  004B24                     l10658:
 15675  004B24  501B               	movf	___awdiv@sign,w,c
 15676  004B26  B4D8               	btfsc	status,2,c
 15677  004B28  D004               	goto	l10662
 15678  004B2A  6C1C               	negf	___awdiv@quotient,c
 15679  004B2C  1E1D               	comf	___awdiv@quotient+1,f,c
 15680  004B2E  B0D8               	btfsc	status,0,c
 15681  004B30  2A1D               	incf	___awdiv@quotient+1,f,c
 15682  004B32                     l10662:
 15683  004B32  C01C  F016         	movff	___awdiv@quotient,?___awdiv
 15684  004B36  C01D  F017         	movff	___awdiv@quotient+1,?___awdiv+1
 15685  004B3A  0012               	return	
 15686  004B3C                     __end_of___awdiv:
 15687                           	opt stack 0
 15688                           tosu	equ	0xFFF
 15689                           tosh	equ	0xFFE
 15690                           tosl	equ	0xFFD
 15691                           pclath	equ	0xFFA
 15692                           tblptru	equ	0xFF8
 15693                           tblptrh	equ	0xFF7
 15694                           tblptrl	equ	0xFF6
 15695                           tablat	equ	0xFF5
 15696                           prodh	equ	0xFF4
 15697                           prodl	equ	0xFF3
 15698                           intcon	equ	0xFF2
 15699                           intcon2	equ	0xFF1
 15700                           intcon3	equ	0xFF0
 15701                           indf0	equ	0xFEF
 15702                           postinc0	equ	0xFEE
 15703                           fsr0h	equ	0xFEA
 15704                           fsr0l	equ	0xFE9
 15705                           wreg	equ	0xFE8
 15706                           indf1	equ	0xFE7
 15707                           postinc1	equ	0xFE6
 15708                           postdec1	equ	0xFE5
 15709                           fsr1h	equ	0xFE2
 15710                           fsr1l	equ	0xFE1
 15711                           indf2	equ	0xFDF
 15712                           postinc2	equ	0xFDE
 15713                           postdec2	equ	0xFDD
 15714                           plusw2	equ	0xFDB
 15715                           fsr2h	equ	0xFDA
 15716                           fsr2l	equ	0xFD9
 15717                           status	equ	0xFD8
 15718                           
 15719 ;; *************** function _disk_read *****************
 15720 ;; Defined at:
 15721 ;;		line 148 in file "bibliotecas/diskio.c"
 15722 ;; Parameters:    Size  Location     Type
 15723 ;;  pdrv            1    wreg     unsigned char 
 15724 ;;  buff            2   24[BANK0 ] PTR unsigned char 
 15725 ;;		 -> fs(552), NULL(0), 
 15726 ;;  sector          4   26[BANK0 ] unsigned long 
 15727 ;;  count           1   30[BANK0 ] unsigned char 
 15728 ;; Auto vars:     Size  Location     Type
 15729 ;;  pdrv            1   31[BANK0 ] unsigned char 
 15730 ;;  result          2   32[BANK0 ] int 
 15731 ;;  res             1   34[BANK0 ] enum E25
 15732 ;; Return value:  Size  Location     Type
 15733 ;;                  1    wreg      enum E25
 15734 ;; Registers used:
 15735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15736 ;; Tracked objects:
 15737 ;;		On entry : 0/0
 15738 ;;		On exit  : 0/0
 15739 ;;		Unchanged: 0/0
 15740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15741 ;;      Params:         0       7       0       0       0       0       0       0       0
 15742 ;;      Locals:         0       4       0       0       0       0       0       0       0
 15743 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15744 ;;      Totals:         1      11       0       0       0       0       0       0       0
 15745 ;;Total ram usage:       12 bytes
 15746 ;; Hardware stack levels used:    1
 15747 ;; Hardware stack levels required when called:    7
 15748 ;; This function calls:
 15749 ;;		_sdc_disk_read
 15750 ;; This function is called by:
 15751 ;;		_move_window
 15752 ;;		_check_fs
 15753 ;;		_f_read
 15754 ;; This function uses a non-reentrant model
 15755 ;;
 15756                           
 15757                           	psect	text46
 15758  004996                     __ptext46:
 15759                           	opt stack 0
 15760  004996                     _disk_read:
 15761                           	opt stack 16
 15762                           
 15763                           ;incstack = 0
 15764                           ;disk_read@pdrv stored from wreg
 15765  004996  0100               	movlb	0	; () banked
 15766  004998  6F7F               	movwf	disk_read@pdrv& (0+255),b
 15767                           
 15768                           ;diskio.c: 155: DRESULT res;
 15769                           ;diskio.c: 156: int result;
 15770                           ;diskio.c: 158: switch (pdrv) {
 15771  00499A  D03B               	goto	l10990
 15772  00499C                     l10966:
 15773                           
 15774                           ;diskio.c: 161: result = sdc_disk_read(buff, sector, count);
 15775  00499C  C078  F067         	movff	disk_read@buff,sdc_disk_read@p_buff
 15776  0049A0  C079  F068         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 15777  0049A4  C07A  F069         	movff	disk_read@sector,sdc_disk_read@sector
 15778  0049A8  C07B  F06A         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 15779  0049AC  C07C  F06B         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 15780  0049B0  C07D  F06C         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 15781  0049B4  C07E  F06D         	movff	disk_read@count,sdc_disk_read@count
 15782  0049B8  ECA7  F00F         	call	_sdc_disk_read	;wreg free
 15783  0049BC  6E34               	movwf	??_disk_read& (0+255),c
 15784  0049BE  5034               	movf	??_disk_read,w,c
 15785  0049C0  0100               	movlb	0	; () banked
 15786  0049C2  6F80               	movwf	disk_read@result& (0+255),b
 15787  0049C4  6B81               	clrf	(disk_read@result+1)& (0+255),b
 15788                           
 15789                           ; BSR set to: 0
 15790                           ;diskio.c: 162: res = result;
 15791  0049C6  C080  F082         	movff	disk_read@result,disk_read@res
 15792                           
 15793                           ; BSR set to: 0
 15794                           ;diskio.c: 164: return res;
 15795  0049CA  0100               	movlb	0	; () banked
 15796  0049CC  5182               	movf	disk_read@res& (0+255),w,b
 15797                           
 15798                           ; BSR set to: 0
 15799  0049CE  0012               	return	
 15800  0049D0                     l10974:
 15801                           
 15802                           ; BSR set to: 0
 15803                           ;diskio.c: 168: result = sdc_disk_read(buff, sector, count);
 15804  0049D0  C078  F067         	movff	disk_read@buff,sdc_disk_read@p_buff
 15805  0049D4  C079  F068         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 15806  0049D8  C07A  F069         	movff	disk_read@sector,sdc_disk_read@sector
 15807  0049DC  C07B  F06A         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 15808  0049E0  C07C  F06B         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 15809  0049E4  C07D  F06C         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 15810  0049E8  C07E  F06D         	movff	disk_read@count,sdc_disk_read@count
 15811  0049EC  ECA7  F00F         	call	_sdc_disk_read	;wreg free
 15812  0049F0  6E34               	movwf	??_disk_read& (0+255),c
 15813  0049F2  5034               	movf	??_disk_read,w,c
 15814  0049F4  0100               	movlb	0	; () banked
 15815  0049F6  6F80               	movwf	disk_read@result& (0+255),b
 15816  0049F8  6B81               	clrf	(disk_read@result+1)& (0+255),b
 15817                           
 15818                           ; BSR set to: 0
 15819                           ;diskio.c: 169: res = result;
 15820  0049FA  C080  F082         	movff	disk_read@result,disk_read@res
 15821                           
 15822                           ; BSR set to: 0
 15823                           ;diskio.c: 171: buff = data_buff;
 15824  0049FE  C0FE  F078         	movff	_data_buff,disk_read@buff
 15825  004A02  C0FF  F079         	movff	_data_buff+1,disk_read@buff+1
 15826                           
 15827                           ; BSR set to: 0
 15828                           ;diskio.c: 172: return res;
 15829  004A06  0100               	movlb	0	; () banked
 15830  004A08  5182               	movf	disk_read@res& (0+255),w,b
 15831                           
 15832                           ; BSR set to: 0
 15833  004A0A  0012               	return	
 15834  004A0C                     l10984:
 15835                           
 15836                           ; BSR set to: 0
 15837                           ;diskio.c: 181: return res;
 15838  004A0C  0100               	movlb	0	; () banked
 15839  004A0E  5182               	movf	disk_read@res& (0+255),w,b
 15840                           
 15841                           ; BSR set to: 0
 15842  004A10  0012               	return	
 15843  004A12                     l10990:
 15844  004A12  0100               	movlb	0	; () banked
 15845  004A14  517F               	movf	disk_read@pdrv& (0+255),w,b
 15846                           
 15847                           ; Switch size 1, requested type "space"
 15848                           ; Number of cases is 3, Range of values is 0 to 2
 15849                           ; switch strategies available:
 15850                           ; Name         Instructions Cycles
 15851                           ; simple_byte           10     6 (average)
 15852                           ;	Chosen strategy is simple_byte
 15853  004A16  0A00               	xorlw	0	; case 0
 15854  004A18  B4D8               	btfsc	status,2,c
 15855  004A1A  D7DA               	goto	l10974
 15856  004A1C  0A01               	xorlw	1	; case 1
 15857  004A1E  B4D8               	btfsc	status,2,c
 15858  004A20  D7BD               	goto	l10966
 15859  004A22  0A03               	xorlw	3	; case 2
 15860  004A24  B4D8               	btfsc	status,2,c
 15861  004A26  D7F2               	goto	l10984
 15862                           
 15863                           ; BSR set to: 0
 15864                           ;diskio.c: 188: return RES_PARERR;
 15865                           
 15866                           ; BSR set to: 0
 15867  004A28  0E04               	movlw	4
 15868  004A2A  0012               	return	
 15869  004A2C                     __end_of_disk_read:
 15870                           	opt stack 0
 15871                           tosu	equ	0xFFF
 15872                           tosh	equ	0xFFE
 15873                           tosl	equ	0xFFD
 15874                           pclath	equ	0xFFA
 15875                           tblptru	equ	0xFF8
 15876                           tblptrh	equ	0xFF7
 15877                           tblptrl	equ	0xFF6
 15878                           tablat	equ	0xFF5
 15879                           prodh	equ	0xFF4
 15880                           prodl	equ	0xFF3
 15881                           intcon	equ	0xFF2
 15882                           intcon2	equ	0xFF1
 15883                           intcon3	equ	0xFF0
 15884                           indf0	equ	0xFEF
 15885                           postinc0	equ	0xFEE
 15886                           fsr0h	equ	0xFEA
 15887                           fsr0l	equ	0xFE9
 15888                           wreg	equ	0xFE8
 15889                           indf1	equ	0xFE7
 15890                           postinc1	equ	0xFE6
 15891                           postdec1	equ	0xFE5
 15892                           fsr1h	equ	0xFE2
 15893                           fsr1l	equ	0xFE1
 15894                           indf2	equ	0xFDF
 15895                           postinc2	equ	0xFDE
 15896                           postdec2	equ	0xFDD
 15897                           plusw2	equ	0xFDB
 15898                           fsr2h	equ	0xFDA
 15899                           fsr2l	equ	0xFD9
 15900                           status	equ	0xFD8
 15901                           
 15902 ;; *************** function _sdc_disk_read *****************
 15903 ;; Defined at:
 15904 ;;		line 433 in file "bibliotecas/diskio.c"
 15905 ;; Parameters:    Size  Location     Type
 15906 ;;  p_buff          2    7[BANK0 ] PTR unsigned char 
 15907 ;;		 -> fs(552), NULL(0), 
 15908 ;;  sector          4    9[BANK0 ] unsigned long 
 15909 ;;  count           1   13[BANK0 ] unsigned char 
 15910 ;; Auto vars:     Size  Location     Type
 15911 ;;  start_add       4   17[BANK0 ] unsigned long 
 15912 ;;  length          2   21[BANK0 ] int 
 15913 ;;  offset          2   15[BANK0 ] int 
 15914 ;;  count1          2    0        int 
 15915 ;;  i               2    0        int 
 15916 ;;  buff            1   23[BANK0 ] unsigned char 
 15917 ;;  ptr             1   14[BANK0 ] unsigned char 
 15918 ;;  res             1    0        enum E25
 15919 ;; Return value:  Size  Location     Type
 15920 ;;                  1    wreg      enum E25
 15921 ;; Registers used:
 15922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15923 ;; Tracked objects:
 15924 ;;		On entry : 0/0
 15925 ;;		On exit  : 0/0
 15926 ;;		Unchanged: 0/0
 15927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15928 ;;      Params:         0       7       0       0       0       0       0       0       0
 15929 ;;      Locals:         0      10       0       0       0       0       0       0       0
 15930 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15931 ;;      Totals:         4      17       0       0       0       0       0       0       0
 15932 ;;Total ram usage:       21 bytes
 15933 ;; Hardware stack levels used:    1
 15934 ;; Hardware stack levels required when called:    6
 15935 ;; This function calls:
 15936 ;;		_command
 15937 ;;		_dummy_clocks
 15938 ;;		_escreve_frase_ram_lcd
 15939 ;;		_escreve_inteiro_lcd
 15940 ;;		_posicao_cursor_lcd
 15941 ;;		_proceed
 15942 ;;		_response
 15943 ;; This function is called by:
 15944 ;;		_disk_read
 15945 ;; This function uses a non-reentrant model
 15946 ;;
 15947                           
 15948                           	psect	text47
 15949  001F4E                     __ptext47:
 15950                           	opt stack 0
 15951  001F4E                     _sdc_disk_read:
 15952                           	opt stack 16
 15953                           
 15954                           ;diskio.c: 440: DRESULT res;
 15955                           ;diskio.c: 441: unsigned char ptr=0X00, buff;
 15956                           
 15957                           ; BSR set to: 0
 15958                           ;incstack = 0
 15959  001F4E  0E00               	movlw	0
 15960  001F50  0100               	movlb	0	; () banked
 15961  001F52  6F6E               	movwf	sdc_disk_read@ptr& (0+255),b
 15962                           
 15963                           ;diskio.c: 442: unsigned long int start_add;
 15964                           ;diskio.c: 444: int length,i, count1, offset = 0;
 15965  001F54  0E00               	movlw	0
 15966  001F56  0100               	movlb	0	; () banked
 15967  001F58  6F70               	movwf	(sdc_disk_read@offset+1)& (0+255),b
 15968  001F5A  0E00               	movlw	0
 15969  001F5C  6F6F               	movwf	sdc_disk_read@offset& (0+255),b
 15970                           
 15971                           ; BSR set to: 0
 15972                           ;diskio.c: 456: if(offset == 0)
 15973  001F5E  0100               	movlb	0	; () banked
 15974  001F60  516F               	movf	sdc_disk_read@offset& (0+255),w,b
 15975  001F62  0100               	movlb	0	; () banked
 15976  001F64  1170               	iorwf	(sdc_disk_read@offset+1)& (0+255),w,b
 15977  001F66  A4D8               	btfss	status,2,c
 15978  001F68  D12E               	goto	l10772
 15979                           
 15980                           ; BSR set to: 0
 15981                           ;diskio.c: 457: {
 15982                           ;diskio.c: 458: start_add = ((sector*512));
 15983  001F6A  C069  F030         	movff	sdc_disk_read@sector,??_sdc_disk_read
 15984  001F6E  C06A  F031         	movff	sdc_disk_read@sector+1,??_sdc_disk_read+1
 15985  001F72  C06B  F032         	movff	sdc_disk_read@sector+2,??_sdc_disk_read+2
 15986  001F76  C06C  F033         	movff	sdc_disk_read@sector+3,??_sdc_disk_read+3
 15987  001F7A  0E09               	movlw	9
 15988  001F7C                     u11965:
 15989  001F7C  90D8               	bcf	status,0,c
 15990  001F7E  3630               	rlcf	??_sdc_disk_read,f,c
 15991  001F80  3631               	rlcf	??_sdc_disk_read+1,f,c
 15992  001F82  3632               	rlcf	??_sdc_disk_read+2,f,c
 15993  001F84  3633               	rlcf	??_sdc_disk_read+3,f,c
 15994  001F86  2EE8               	decfsz	wreg,f,c
 15995  001F88  D7F9               	goto	u11965
 15996  001F8A  C030  F071         	movff	??_sdc_disk_read,sdc_disk_read@start_add
 15997  001F8E  C031  F072         	movff	??_sdc_disk_read+1,sdc_disk_read@start_add+1
 15998  001F92  C032  F073         	movff	??_sdc_disk_read+2,sdc_disk_read@start_add+2
 15999  001F96  C033  F074         	movff	??_sdc_disk_read+3,sdc_disk_read@start_add+3
 16000                           
 16001                           ; BSR set to: 0
 16002                           ;diskio.c: 459: _delay((unsigned long)((1)*(48000000/4000.0)));
 16003  001F9A  0E10               	movlw	16
 16004  001F9C  6E30               	movwf	??_sdc_disk_read& (0+255),c
 16005  001F9E  0E94               	movlw	148
 16006  001FA0                     u16947:
 16007  001FA0  2EE8               	decfsz	wreg,f,c
 16008  001FA2  D7FE               	bra	u16947
 16009  001FA4  2E30               	decfsz	??_sdc_disk_read& (0+255),f,c
 16010  001FA6  D7FC               	bra	u16947
 16011  001FA8  D000               	nop2	
 16012                           
 16013                           ;diskio.c: 460: LATBbits.LATB4 = 0;
 16014  001FAA  988A               	bcf	3978,4,c	;volatile
 16015                           
 16016                           ;diskio.c: 461: LATBbits.LATB7 = 1;
 16017  001FAC  8E8A               	bsf	3978,7,c	;volatile
 16018                           
 16019                           ;diskio.c: 463: dummy_clocks(8);
 16020  001FAE  0E08               	movlw	8
 16021  001FB0  EC06  F029         	call	_dummy_clocks
 16022                           
 16023                           ;diskio.c: 464: command(0X52,start_add,0X00);
 16024  001FB4  C071  F018         	movff	sdc_disk_read@start_add,command@arg
 16025  001FB8  C072  F019         	movff	sdc_disk_read@start_add+1,command@arg+1
 16026  001FBC  C073  F01A         	movff	sdc_disk_read@start_add+2,command@arg+2
 16027  001FC0  C074  F01B         	movff	sdc_disk_read@start_add+3,command@arg+3
 16028  001FC4  0E00               	movlw	0
 16029  001FC6  6E1C               	movwf	command@CRC,c
 16030  001FC8  0E52               	movlw	82
 16031  001FCA  EC60  F029         	call	_command
 16032                           
 16033                           ;diskio.c: 465: LATBbits.LATB4 = 1;
 16034  001FCE  888A               	bsf	3978,4,c	;volatile
 16035                           
 16036                           ;diskio.c: 468: proceed();
 16037  001FD0  EC70  F02A         	call	_proceed	;wreg free
 16038  001FD4                     l10686:
 16039                           
 16040                           ;diskio.c: 470: {
 16041                           ;diskio.c: 471: buff = response();
 16042  001FD4  EC83  F02A         	call	_response	;wreg free
 16043  001FD8  0100               	movlb	0	; () banked
 16044  001FDA  6F77               	movwf	sdc_disk_read@buff& (0+255),b
 16045                           
 16046                           ; BSR set to: 0
 16047                           ;diskio.c: 472: if(buff != 0x00)
 16048  001FDC  0100               	movlb	0	; () banked
 16049  001FDE  5177               	movf	sdc_disk_read@buff& (0+255),w,b
 16050  001FE0  0100               	movlb	0	; () banked
 16051  001FE2  B4D8               	btfsc	status,2,c
 16052  001FE4  D015               	goto	l10698
 16053                           
 16054                           ; BSR set to: 0
 16055                           ;diskio.c: 473: {
 16056                           ;diskio.c: 474: posicao_cursor_lcd(1,0);
 16057  001FE6  0E00               	movlw	0
 16058  001FE8  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16059  001FEA  0E01               	movlw	1
 16060  001FEC  ECD2  F026         	call	_posicao_cursor_lcd
 16061                           
 16062                           ;diskio.c: 475: escreve_frase_ram_lcd("buffer leit.   ");
 16063  001FF0  0EFA               	movlw	low STR_14
 16064  001FF2  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 16065  001FF4  0E61               	movlw	high STR_14
 16066  001FF6  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 16067  001FF8  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 16068                           
 16069                           ;diskio.c: 476: posicao_cursor_lcd(1,13);
 16070  001FFC  0E0D               	movlw	13
 16071  001FFE  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16072  002000  0E01               	movlw	1
 16073  002002  ECD2  F026         	call	_posicao_cursor_lcd
 16074                           
 16075                           ;diskio.c: 477: escreve_inteiro_lcd(buff);
 16076  002006  C077  F02E         	movff	sdc_disk_read@buff,escreve_inteiro_lcd@valor
 16077  00200A  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 16078  00200C  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 16079  002010                     l10698:
 16080                           
 16081                           ;diskio.c: 478: }
 16082                           ;diskio.c: 480: }while(buff!=0X00);
 16083  002010  0100               	movlb	0	; () banked
 16084  002012  5177               	movf	sdc_disk_read@buff& (0+255),w,b
 16085  002014  0100               	movlb	0	; () banked
 16086  002016  A4D8               	btfss	status,2,c
 16087  002018  D7DD               	goto	l10686
 16088                           
 16089                           ; BSR set to: 0
 16090                           ;diskio.c: 482: proceed();
 16091                           
 16092                           ; BSR set to: 0
 16093  00201A  EC70  F02A         	call	_proceed	;wreg free
 16094  00201E                     l241:
 16095                           
 16096                           ;diskio.c: 484: {
 16097                           ;diskio.c: 485: buff = response();
 16098  00201E  EC83  F02A         	call	_response	;wreg free
 16099  002022  0100               	movlb	0	; () banked
 16100  002024  6F77               	movwf	sdc_disk_read@buff& (0+255),b
 16101                           
 16102                           ;diskio.c: 486: posicao_cursor_lcd(2,13);
 16103  002026  0E0D               	movlw	13
 16104  002028  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16105  00202A  0E02               	movlw	2
 16106  00202C  ECD2  F026         	call	_posicao_cursor_lcd
 16107                           
 16108                           ;diskio.c: 487: escreve_inteiro_lcd(buff);
 16109  002030  C077  F02E         	movff	sdc_disk_read@buff,escreve_inteiro_lcd@valor
 16110  002034  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 16111  002036  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 16112                           
 16113                           ;diskio.c: 488: if(buff != 0xFE)
 16114  00203A  0EFE               	movlw	254
 16115  00203C  0100               	movlb	0	; () banked
 16116  00203E  1977               	xorwf	sdc_disk_read@buff& (0+255),w,b
 16117  002040  B4D8               	btfsc	status,2,c
 16118  002042  D015               	goto	l10714
 16119                           
 16120                           ; BSR set to: 0
 16121                           ;diskio.c: 489: {
 16122                           ;diskio.c: 490: posicao_cursor_lcd(2,0);
 16123  002044  0E00               	movlw	0
 16124  002046  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16125  002048  0E02               	movlw	2
 16126  00204A  ECD2  F026         	call	_posicao_cursor_lcd
 16127                           
 16128                           ;diskio.c: 491: escreve_frase_ram_lcd("Aguard 0XFE     ");
 16129  00204E  0E78               	movlw	low STR_15
 16130  002050  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 16131  002052  0E61               	movlw	high STR_15
 16132  002054  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 16133  002056  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 16134                           
 16135                           ;diskio.c: 492: posicao_cursor_lcd(2,13);
 16136  00205A  0E0D               	movlw	13
 16137  00205C  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16138  00205E  0E02               	movlw	2
 16139  002060  ECD2  F026         	call	_posicao_cursor_lcd
 16140                           
 16141                           ;diskio.c: 493: escreve_inteiro_lcd(buff);
 16142  002064  C077  F02E         	movff	sdc_disk_read@buff,escreve_inteiro_lcd@valor
 16143  002068  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 16144  00206A  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 16145  00206E                     l10714:
 16146                           
 16147                           ;diskio.c: 494: }
 16148                           ;diskio.c: 496: }while(buff!=0xFE);
 16149  00206E  0EFE               	movlw	254
 16150  002070  0100               	movlb	0	; () banked
 16151  002072  1977               	xorwf	sdc_disk_read@buff& (0+255),w,b
 16152  002074  A4D8               	btfss	status,2,c
 16153  002076  D7D3               	goto	l241
 16154                           
 16155                           ; BSR set to: 0
 16156                           ;diskio.c: 497: length = 0;
 16157                           
 16158                           ; BSR set to: 0
 16159  002078  0E00               	movlw	0
 16160  00207A  0100               	movlb	0	; () banked
 16161  00207C  6F76               	movwf	(sdc_disk_read@length+1)& (0+255),b
 16162  00207E  0E00               	movlw	0
 16163  002080  6F75               	movwf	sdc_disk_read@length& (0+255),b
 16164                           
 16165                           ; BSR set to: 0
 16166                           ;diskio.c: 498: _delay((unsigned long)((1)*(48000000/4000.0)));
 16167  002082  0E10               	movlw	16
 16168  002084  6E30               	movwf	??_sdc_disk_read& (0+255),c
 16169  002086  0E94               	movlw	148
 16170  002088                     u16957:
 16171  002088  2EE8               	decfsz	wreg,f,c
 16172  00208A  D7FE               	bra	u16957
 16173  00208C  2E30               	decfsz	??_sdc_disk_read& (0+255),f,c
 16174  00208E  D7FC               	bra	u16957
 16175  002090  D000               	nop2	
 16176                           
 16177                           ;diskio.c: 499: while (length < 512)
 16178  002092  D010               	goto	l10724
 16179  002094                     l10720:
 16180                           
 16181                           ;diskio.c: 500: {
 16182                           ;diskio.c: 501: p_buff[length] = response();
 16183  002094  0100               	movlb	0	; () banked
 16184  002096  5175               	movf	sdc_disk_read@length& (0+255),w,b
 16185  002098  0100               	movlb	0	; () banked
 16186  00209A  2567               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 16187  00209C  6ED9               	movwf	fsr2l,c
 16188  00209E  0100               	movlb	0	; () banked
 16189  0020A0  5176               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 16190  0020A2  0100               	movlb	0	; () banked
 16191  0020A4  2168               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 16192  0020A6  6EDA               	movwf	fsr2h,c
 16193  0020A8  EC83  F02A         	call	_response	;wreg free
 16194  0020AC  6EDF               	movwf	indf2,c
 16195                           
 16196                           ;diskio.c: 502: length++;
 16197  0020AE  0100               	movlb	0	; () banked
 16198  0020B0  4B75               	infsnz	sdc_disk_read@length& (0+255),f,b
 16199  0020B2  2B76               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 16200  0020B4                     l10724:
 16201  0020B4  0100               	movlb	0	; () banked
 16202  0020B6  BF76               	btfsc	(sdc_disk_read@length+1)& (0+255),7,b
 16203  0020B8  D7ED               	goto	l10720
 16204  0020BA  0E02               	movlw	2
 16205  0020BC  0100               	movlb	0	; () banked
 16206  0020BE  5D76               	subwf	(sdc_disk_read@length+1)& (0+255),w,b
 16207  0020C0  A0D8               	btfss	status,0,c
 16208  0020C2  D7E8               	goto	l10720
 16209                           
 16210                           ; BSR set to: 0
 16211                           ;diskio.c: 503: }
 16212                           ;diskio.c: 504: LATBbits.LATB4 = 0;
 16213  0020C4  988A               	bcf	3978,4,c	;volatile
 16214                           
 16215                           ; BSR set to: 0
 16216                           ;diskio.c: 505: length = 0;
 16217  0020C6  0E00               	movlw	0
 16218  0020C8  0100               	movlb	0	; () banked
 16219  0020CA  6F76               	movwf	(sdc_disk_read@length+1)& (0+255),b
 16220  0020CC  0E00               	movlw	0
 16221  0020CE  6F75               	movwf	sdc_disk_read@length& (0+255),b
 16222                           
 16223                           ; BSR set to: 0
 16224                           ;diskio.c: 506: dummy_clocks(8);
 16225  0020D0  0E08               	movlw	8
 16226  0020D2  EC06  F029         	call	_dummy_clocks
 16227                           
 16228                           ;diskio.c: 507: command(0X4C,0X00000000,0X00);
 16229  0020D6  0E00               	movlw	0
 16230  0020D8  6E18               	movwf	command@arg,c
 16231  0020DA  0E00               	movlw	0
 16232  0020DC  6E19               	movwf	command@arg+1,c
 16233  0020DE  0E00               	movlw	0
 16234  0020E0  6E1A               	movwf	command@arg+2,c
 16235  0020E2  0E00               	movlw	0
 16236  0020E4  6E1B               	movwf	command@arg+3,c
 16237  0020E6  0E00               	movlw	0
 16238  0020E8  6E1C               	movwf	command@CRC,c
 16239  0020EA  0E4C               	movlw	76
 16240  0020EC  EC60  F029         	call	_command
 16241                           
 16242                           ;diskio.c: 508: LATBbits.LATB4 = 1;
 16243  0020F0  888A               	bsf	3978,4,c	;volatile
 16244                           
 16245                           ;diskio.c: 510: proceed();
 16246  0020F2  EC70  F02A         	call	_proceed	;wreg free
 16247  0020F6                     l10736:
 16248                           
 16249                           ;diskio.c: 512: buff = response();
 16250  0020F6  EC83  F02A         	call	_response	;wreg free
 16251  0020FA  0100               	movlb	0	; () banked
 16252  0020FC  6F77               	movwf	sdc_disk_read@buff& (0+255),b
 16253                           
 16254                           ; BSR set to: 0
 16255                           ;diskio.c: 513: posicao_cursor_lcd(1,0);
 16256  0020FE  0E00               	movlw	0
 16257  002100  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16258  002102  0E01               	movlw	1
 16259  002104  ECD2  F026         	call	_posicao_cursor_lcd
 16260                           
 16261                           ;diskio.c: 514: escreve_frase_ram_lcd("aguard 0xFF       ");
 16262  002108  0E20               	movlw	low STR_16
 16263  00210A  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 16264  00210C  0E61               	movlw	high STR_16
 16265  00210E  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 16266  002110  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 16267                           
 16268                           ;diskio.c: 515: posicao_cursor_lcd(1,13);
 16269  002114  0E0D               	movlw	13
 16270  002116  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16271  002118  0E01               	movlw	1
 16272  00211A  ECD2  F026         	call	_posicao_cursor_lcd
 16273                           
 16274                           ;diskio.c: 516: escreve_inteiro_lcd(buff);
 16275  00211E  C077  F02E         	movff	sdc_disk_read@buff,escreve_inteiro_lcd@valor
 16276  002122  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 16277  002124  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 16278                           
 16279                           ;diskio.c: 519: }while(buff!=0xFF);
 16280  002128  0100               	movlb	0	; () banked
 16281  00212A  2977               	incf	sdc_disk_read@buff& (0+255),w,b
 16282  00212C  A4D8               	btfss	status,2,c
 16283  00212E  D7E3               	goto	l10736
 16284                           
 16285                           ; BSR set to: 0
 16286                           ;diskio.c: 521: _delay((unsigned long)((500)*(48000000/4000.0)));
 16287                           
 16288                           ; BSR set to: 0
 16289  002130  0E1F               	movlw	31
 16290  002132  6E31               	movwf	(??_sdc_disk_read+1)& (0+255),c
 16291  002134  0E71               	movlw	113
 16292  002136  6E30               	movwf	??_sdc_disk_read& (0+255),c
 16293  002138  0E1E               	movlw	30
 16294  00213A                     u16967:
 16295  00213A  2EE8               	decfsz	wreg,f,c
 16296  00213C  D7FE               	bra	u16967
 16297  00213E  2E30               	decfsz	??_sdc_disk_read& (0+255),f,c
 16298  002140  D7FC               	bra	u16967
 16299  002142  2E31               	decfsz	(??_sdc_disk_read+1)& (0+255),f,c
 16300  002144  D7FA               	bra	u16967
 16301  002146  D000               	nop2	
 16302                           
 16303                           ;diskio.c: 522: length = 0;
 16304  002148  0E00               	movlw	0
 16305  00214A  0100               	movlb	0	; () banked
 16306  00214C  6F76               	movwf	(sdc_disk_read@length+1)& (0+255),b
 16307  00214E  0E00               	movlw	0
 16308  002150  6F75               	movwf	sdc_disk_read@length& (0+255),b
 16309                           
 16310                           ;diskio.c: 523: while(p_buff[length]!='\0')
 16311  002152  D024               	goto	l10762
 16312  002154                     l10752:
 16313                           
 16314                           ; BSR set to: 0
 16315                           ;diskio.c: 524: {
 16316                           ;diskio.c: 526: posicao_cursor_lcd(1,0);
 16317  002154  0E00               	movlw	0
 16318  002156  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16319  002158  0E01               	movlw	1
 16320  00215A  ECD2  F026         	call	_posicao_cursor_lcd
 16321                           
 16322                           ;diskio.c: 527: escreve_frase_ram_lcd("\0 ->         ");
 16323  00215E  0E1A               	movlw	low STR_17
 16324  002160  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 16325  002162  0E62               	movlw	high STR_17
 16326  002164  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 16327  002166  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 16328                           
 16329                           ;diskio.c: 528: posicao_cursor_lcd(1,14);
 16330  00216A  0E0E               	movlw	14
 16331  00216C  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16332  00216E  0E01               	movlw	1
 16333  002170  ECD2  F026         	call	_posicao_cursor_lcd
 16334                           
 16335                           ;diskio.c: 529: escreve_inteiro_lcd(p_buff[length]);
 16336  002174  0100               	movlb	0	; () banked
 16337  002176  5175               	movf	sdc_disk_read@length& (0+255),w,b
 16338  002178  0100               	movlb	0	; () banked
 16339  00217A  2567               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 16340  00217C  6ED9               	movwf	fsr2l,c
 16341  00217E  0100               	movlb	0	; () banked
 16342  002180  5176               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 16343  002182  0100               	movlb	0	; () banked
 16344  002184  2168               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 16345  002186  6EDA               	movwf	fsr2h,c
 16346  002188  50DF               	movf	indf2,w,c
 16347  00218A  6E30               	movwf	??_sdc_disk_read& (0+255),c
 16348  00218C  5030               	movf	??_sdc_disk_read,w,c
 16349  00218E  6E2E               	movwf	escreve_inteiro_lcd@valor,c
 16350  002190  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 16351  002192  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 16352                           
 16353                           ;diskio.c: 530: length++;
 16354  002196  0100               	movlb	0	; () banked
 16355  002198  4B75               	infsnz	sdc_disk_read@length& (0+255),f,b
 16356  00219A  2B76               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 16357  00219C                     l10762:
 16358                           
 16359                           ; BSR set to: 0
 16360  00219C  0100               	movlb	0	; () banked
 16361  00219E  5175               	movf	sdc_disk_read@length& (0+255),w,b
 16362  0021A0  0100               	movlb	0	; () banked
 16363  0021A2  2567               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 16364  0021A4  6ED9               	movwf	fsr2l,c
 16365  0021A6  0100               	movlb	0	; () banked
 16366  0021A8  5176               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 16367  0021AA  0100               	movlb	0	; () banked
 16368  0021AC  2168               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 16369  0021AE  6EDA               	movwf	fsr2h,c
 16370  0021B0  50DF               	movf	indf2,w,c
 16371  0021B2  A4D8               	btfss	status,2,c
 16372  0021B4  D7CF               	goto	l10752
 16373                           
 16374                           ; BSR set to: 0
 16375                           ;diskio.c: 531: }
 16376                           ;diskio.c: 532: *p_buff = length;
 16377                           
 16378                           ; BSR set to: 0
 16379  0021B6  C067  FFD9         	movff	sdc_disk_read@p_buff,fsr2l
 16380  0021BA  C068  FFDA         	movff	sdc_disk_read@p_buff+1,fsr2h
 16381  0021BE  C075  FFDF         	movff	sdc_disk_read@length,indf2
 16382                           
 16383                           ; BSR set to: 0
 16384                           ;diskio.c: 535: return RES_OK;
 16385  0021C2  0E00               	movlw	0
 16386                           
 16387                           ; BSR set to: 0
 16388  0021C4  0012               	return	
 16389  0021C6                     l10772:
 16390                           
 16391                           ; BSR set to: 0
 16392                           ;diskio.c: 537: else
 16393                           ;diskio.c: 538: {
 16394                           ;diskio.c: 539: start_add = (sector*512);
 16395  0021C6  C069  F030         	movff	sdc_disk_read@sector,??_sdc_disk_read
 16396  0021CA  C06A  F031         	movff	sdc_disk_read@sector+1,??_sdc_disk_read+1
 16397  0021CE  C06B  F032         	movff	sdc_disk_read@sector+2,??_sdc_disk_read+2
 16398  0021D2  C06C  F033         	movff	sdc_disk_read@sector+3,??_sdc_disk_read+3
 16399  0021D6  0E09               	movlw	9
 16400  0021D8                     u12045:
 16401  0021D8  90D8               	bcf	status,0,c
 16402  0021DA  3630               	rlcf	??_sdc_disk_read,f,c
 16403  0021DC  3631               	rlcf	??_sdc_disk_read+1,f,c
 16404  0021DE  3632               	rlcf	??_sdc_disk_read+2,f,c
 16405  0021E0  3633               	rlcf	??_sdc_disk_read+3,f,c
 16406  0021E2  2EE8               	decfsz	wreg,f,c
 16407  0021E4  D7F9               	goto	u12045
 16408  0021E6  C030  F071         	movff	??_sdc_disk_read,sdc_disk_read@start_add
 16409  0021EA  C031  F072         	movff	??_sdc_disk_read+1,sdc_disk_read@start_add+1
 16410  0021EE  C032  F073         	movff	??_sdc_disk_read+2,sdc_disk_read@start_add+2
 16411  0021F2  C033  F074         	movff	??_sdc_disk_read+3,sdc_disk_read@start_add+3
 16412                           
 16413                           ; BSR set to: 0
 16414                           ;diskio.c: 541: length = 0;
 16415  0021F6  0E00               	movlw	0
 16416  0021F8  0100               	movlb	0	; () banked
 16417  0021FA  6F76               	movwf	(sdc_disk_read@length+1)& (0+255),b
 16418  0021FC  0E00               	movlw	0
 16419  0021FE  6F75               	movwf	sdc_disk_read@length& (0+255),b
 16420                           
 16421                           ;diskio.c: 542: while(length<512)
 16422  002200  D00F               	goto	l10780
 16423  002202                     l10776:
 16424                           
 16425                           ; BSR set to: 0
 16426                           ;diskio.c: 543: {
 16427                           ;diskio.c: 544: p_buff[length] = 0;
 16428  002202  0100               	movlb	0	; () banked
 16429  002204  5175               	movf	sdc_disk_read@length& (0+255),w,b
 16430  002206  0100               	movlb	0	; () banked
 16431  002208  2567               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 16432  00220A  6ED9               	movwf	fsr2l,c
 16433  00220C  0100               	movlb	0	; () banked
 16434  00220E  5176               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 16435  002210  0100               	movlb	0	; () banked
 16436  002212  2168               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 16437  002214  6EDA               	movwf	fsr2h,c
 16438  002216  0E00               	movlw	0
 16439  002218  6EDF               	movwf	indf2,c
 16440                           
 16441                           ; BSR set to: 0
 16442                           ;diskio.c: 545: length++;
 16443  00221A  0100               	movlb	0	; () banked
 16444  00221C  4B75               	infsnz	sdc_disk_read@length& (0+255),f,b
 16445  00221E  2B76               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 16446  002220                     l10780:
 16447                           
 16448                           ; BSR set to: 0
 16449  002220  0100               	movlb	0	; () banked
 16450  002222  BF76               	btfsc	(sdc_disk_read@length+1)& (0+255),7,b
 16451  002224  D7EE               	goto	l10776
 16452  002226  0E02               	movlw	2
 16453  002228  0100               	movlb	0	; () banked
 16454  00222A  5D76               	subwf	(sdc_disk_read@length+1)& (0+255),w,b
 16455  00222C  A0D8               	btfss	status,0,c
 16456  00222E  D7E9               	goto	l10776
 16457                           
 16458                           ; BSR set to: 0
 16459                           ;diskio.c: 546: }
 16460                           ;diskio.c: 547: _delay((unsigned long)((1000)*(48000000/4000.0)));
 16461                           
 16462                           ; BSR set to: 0
 16463  002230  0E3D               	movlw	61
 16464  002232  6E31               	movwf	(??_sdc_disk_read+1)& (0+255),c
 16465  002234  0EE1               	movlw	225
 16466  002236  6E30               	movwf	??_sdc_disk_read& (0+255),c
 16467  002238  0E40               	movlw	64
 16468  00223A                     u16977:
 16469  00223A  2EE8               	decfsz	wreg,f,c
 16470  00223C  D7FE               	bra	u16977
 16471  00223E  2E30               	decfsz	??_sdc_disk_read& (0+255),f,c
 16472  002240  D7FC               	bra	u16977
 16473  002242  2E31               	decfsz	(??_sdc_disk_read+1)& (0+255),f,c
 16474  002244  D7FA               	bra	u16977
 16475                           
 16476                           ;diskio.c: 548: dummy_clocks(8);
 16477  002246  0E08               	movlw	8
 16478  002248  EC06  F029         	call	_dummy_clocks
 16479                           
 16480                           ;diskio.c: 550: command(0X51,start_add,0X00);
 16481  00224C  C071  F018         	movff	sdc_disk_read@start_add,command@arg
 16482  002250  C072  F019         	movff	sdc_disk_read@start_add+1,command@arg+1
 16483  002254  C073  F01A         	movff	sdc_disk_read@start_add+2,command@arg+2
 16484  002258  C074  F01B         	movff	sdc_disk_read@start_add+3,command@arg+3
 16485  00225C  0E00               	movlw	0
 16486  00225E  6E1C               	movwf	command@CRC,c
 16487  002260  0E51               	movlw	81
 16488  002262  EC60  F029         	call	_command
 16489                           
 16490                           ;diskio.c: 551: proceed();
 16491  002266  EC70  F02A         	call	_proceed	;wreg free
 16492  00226A                     l10790:
 16493                           
 16494                           ;diskio.c: 553: buff = response();
 16495  00226A  EC83  F02A         	call	_response	;wreg free
 16496  00226E  0100               	movlb	0	; () banked
 16497  002270  6F77               	movwf	sdc_disk_read@buff& (0+255),b
 16498                           
 16499                           ; BSR set to: 0
 16500                           ;diskio.c: 554: posicao_cursor_lcd(1,0);
 16501  002272  0E00               	movlw	0
 16502  002274  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16503  002276  0E01               	movlw	1
 16504  002278  ECD2  F026         	call	_posicao_cursor_lcd
 16505                           
 16506                           ;diskio.c: 555: escreve_frase_ram_lcd("aguard 0x00    ");
 16507  00227C  0EDA               	movlw	low STR_18
 16508  00227E  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 16509  002280  0E61               	movlw	high STR_18
 16510  002282  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 16511  002284  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 16512                           
 16513                           ;diskio.c: 556: posicao_cursor_lcd(1,13);
 16514  002288  0E0D               	movlw	13
 16515  00228A  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16516  00228C  0E01               	movlw	1
 16517  00228E  ECD2  F026         	call	_posicao_cursor_lcd
 16518                           
 16519                           ;diskio.c: 557: escreve_inteiro_lcd(buff);
 16520  002292  C077  F02E         	movff	sdc_disk_read@buff,escreve_inteiro_lcd@valor
 16521  002296  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 16522  002298  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 16523                           
 16524                           ;diskio.c: 558: }while(buff!=0x00);
 16525  00229C  0100               	movlb	0	; () banked
 16526  00229E  5177               	movf	sdc_disk_read@buff& (0+255),w,b
 16527  0022A0  0100               	movlb	0	; () banked
 16528  0022A2  A4D8               	btfss	status,2,c
 16529  0022A4  D7E2               	goto	l10790
 16530  0022A6                     l10802:
 16531                           
 16532                           ; BSR set to: 0
 16533                           ;diskio.c: 560: buff = response();
 16534  0022A6  EC83  F02A         	call	_response	;wreg free
 16535  0022AA  0100               	movlb	0	; () banked
 16536  0022AC  6F77               	movwf	sdc_disk_read@buff& (0+255),b
 16537                           
 16538                           ;diskio.c: 561: posicao_cursor_lcd(1,0);
 16539  0022AE  0E00               	movlw	0
 16540  0022B0  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16541  0022B2  0E01               	movlw	1
 16542  0022B4  ECD2  F026         	call	_posicao_cursor_lcd
 16543                           
 16544                           ;diskio.c: 562: escreve_frase_ram_lcd("aguard 0xFE    ");
 16545  0022B8  0EEA               	movlw	low STR_19
 16546  0022BA  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 16547  0022BC  0E61               	movlw	high STR_19
 16548  0022BE  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 16549  0022C0  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 16550                           
 16551                           ;diskio.c: 563: posicao_cursor_lcd(1,13);
 16552  0022C4  0E0D               	movlw	13
 16553  0022C6  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16554  0022C8  0E01               	movlw	1
 16555  0022CA  ECD2  F026         	call	_posicao_cursor_lcd
 16556                           
 16557                           ;diskio.c: 564: escreve_inteiro_lcd(buff);
 16558  0022CE  C077  F02E         	movff	sdc_disk_read@buff,escreve_inteiro_lcd@valor
 16559  0022D2  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 16560  0022D4  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 16561                           
 16562                           ;diskio.c: 565: }while(buff!=0xFE);
 16563  0022D8  0EFE               	movlw	254
 16564  0022DA  0100               	movlb	0	; () banked
 16565  0022DC  1977               	xorwf	sdc_disk_read@buff& (0+255),w,b
 16566  0022DE  A4D8               	btfss	status,2,c
 16567  0022E0  D7E2               	goto	l10802
 16568                           
 16569                           ; BSR set to: 0
 16570                           ;diskio.c: 567: length = 0;
 16571                           
 16572                           ; BSR set to: 0
 16573  0022E2  0E00               	movlw	0
 16574  0022E4  0100               	movlb	0	; () banked
 16575  0022E6  6F76               	movwf	(sdc_disk_read@length+1)& (0+255),b
 16576  0022E8  0E00               	movlw	0
 16577  0022EA  6F75               	movwf	sdc_disk_read@length& (0+255),b
 16578                           
 16579                           ;diskio.c: 568: while ( length < 512 )
 16580  0022EC  D058               	goto	l10836
 16581  0022EE                     l10814:
 16582                           
 16583                           ; BSR set to: 0
 16584                           ;diskio.c: 571: {
 16585                           ;diskio.c: 572: p_buff[length] = response();
 16586  0022EE  0100               	movlb	0	; () banked
 16587  0022F0  5175               	movf	sdc_disk_read@length& (0+255),w,b
 16588  0022F2  0100               	movlb	0	; () banked
 16589  0022F4  2567               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 16590  0022F6  6ED9               	movwf	fsr2l,c
 16591  0022F8  0100               	movlb	0	; () banked
 16592  0022FA  5176               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 16593  0022FC  0100               	movlb	0	; () banked
 16594  0022FE  2168               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 16595  002300  6EDA               	movwf	fsr2h,c
 16596  002302  EC83  F02A         	call	_response	;wreg free
 16597  002306  6EDF               	movwf	indf2,c
 16598                           
 16599                           ;diskio.c: 573: length++;
 16600  002308  0100               	movlb	0	; () banked
 16601  00230A  4B75               	infsnz	sdc_disk_read@length& (0+255),f,b
 16602  00230C  2B76               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 16603  00230E                     l10818:
 16604                           
 16605                           ; BSR set to: 0
 16606  00230E  0100               	movlb	0	; () banked
 16607  002310  076F               	decf	sdc_disk_read@offset& (0+255),f,b
 16608  002312  A0D8               	btfss	status,0,c
 16609  002314  0770               	decf	(sdc_disk_read@offset+1)& (0+255),f,b
 16610  002316  0100               	movlb	0	; () banked
 16611  002318  296F               	incf	sdc_disk_read@offset& (0+255),w,b
 16612  00231A  E1E9               	bnz	l10814
 16613  00231C  0100               	movlb	0	; () banked
 16614  00231E  2970               	incf	(sdc_disk_read@offset+1)& (0+255),w,b
 16615  002320  B4D8               	btfsc	status,2,c
 16616  002322  D01E               	goto	l10828
 16617  002324  D7E4               	goto	l10814
 16618  002326                     l10820:
 16619                           
 16620                           ; BSR set to: 0
 16621                           ;diskio.c: 576: {
 16622                           ;diskio.c: 577: *p_buff = response();
 16623  002326  EC83  F02A         	call	_response	;wreg free
 16624  00232A  C067  FFD9         	movff	sdc_disk_read@p_buff,fsr2l
 16625  00232E  C068  FFDA         	movff	sdc_disk_read@p_buff+1,fsr2h
 16626  002332  6EDF               	movwf	indf2,c
 16627                           
 16628                           ;diskio.c: 578: p_buff[length] = *p_buff;
 16629  002334  C067  FFD9         	movff	sdc_disk_read@p_buff,fsr2l
 16630  002338  C068  FFDA         	movff	sdc_disk_read@p_buff+1,fsr2h
 16631  00233C  0100               	movlb	0	; () banked
 16632  00233E  5175               	movf	sdc_disk_read@length& (0+255),w,b
 16633  002340  0100               	movlb	0	; () banked
 16634  002342  2567               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 16635  002344  6EE1               	movwf	fsr1l,c
 16636  002346  0100               	movlb	0	; () banked
 16637  002348  5176               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 16638  00234A  0100               	movlb	0	; () banked
 16639  00234C  2168               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 16640  00234E  6EE2               	movwf	fsr1h,c
 16641  002350  CFDF FFE7          	movff	indf2,indf1
 16642                           
 16643                           ; BSR set to: 0
 16644                           ;diskio.c: 579: p_buff++;
 16645  002354  0100               	movlb	0	; () banked
 16646  002356  4B67               	infsnz	sdc_disk_read@p_buff& (0+255),f,b
 16647  002358  2B68               	incf	(sdc_disk_read@p_buff+1)& (0+255),f,b
 16648                           
 16649                           ; BSR set to: 0
 16650                           ;diskio.c: 580: length++;
 16651  00235A  0100               	movlb	0	; () banked
 16652  00235C  4B75               	infsnz	sdc_disk_read@length& (0+255),f,b
 16653  00235E  2B76               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 16654  002360                     l10828:
 16655                           
 16656                           ; BSR set to: 0
 16657  002360  0100               	movlb	0	; () banked
 16658  002362  076D               	decf	sdc_disk_read@count& (0+255),f,b
 16659  002364  0100               	movlb	0	; () banked
 16660  002366  296D               	incf	sdc_disk_read@count& (0+255),w,b
 16661  002368  B4D8               	btfsc	status,2,c
 16662  00236A  D011               	goto	l10834
 16663  00236C  D7DC               	goto	l10820
 16664  00236E                     l10830:
 16665                           
 16666                           ; BSR set to: 0
 16667                           ;diskio.c: 583: {
 16668                           ;diskio.c: 584: p_buff[length] = response();
 16669  00236E  0100               	movlb	0	; () banked
 16670  002370  5175               	movf	sdc_disk_read@length& (0+255),w,b
 16671  002372  0100               	movlb	0	; () banked
 16672  002374  2567               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 16673  002376  6ED9               	movwf	fsr2l,c
 16674  002378  0100               	movlb	0	; () banked
 16675  00237A  5176               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 16676  00237C  0100               	movlb	0	; () banked
 16677  00237E  2168               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 16678  002380  6EDA               	movwf	fsr2h,c
 16679  002382  EC83  F02A         	call	_response	;wreg free
 16680  002386  6EDF               	movwf	indf2,c
 16681                           
 16682                           ;diskio.c: 585: length++;
 16683  002388  0100               	movlb	0	; () banked
 16684  00238A  4B75               	infsnz	sdc_disk_read@length& (0+255),f,b
 16685  00238C  2B76               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 16686  00238E                     l10834:
 16687                           
 16688                           ; BSR set to: 0
 16689  00238E  0100               	movlb	0	; () banked
 16690  002390  BF76               	btfsc	(sdc_disk_read@length+1)& (0+255),7,b
 16691  002392  D7ED               	goto	l10830
 16692  002394  0E02               	movlw	2
 16693  002396  0100               	movlb	0	; () banked
 16694  002398  5D76               	subwf	(sdc_disk_read@length+1)& (0+255),w,b
 16695  00239A  A0D8               	btfss	status,0,c
 16696  00239C  D7E8               	goto	l10830
 16697  00239E                     l10836:
 16698                           
 16699                           ; BSR set to: 0
 16700  00239E  0100               	movlb	0	; () banked
 16701  0023A0  BF76               	btfsc	(sdc_disk_read@length+1)& (0+255),7,b
 16702  0023A2  D7B5               	goto	l10818
 16703  0023A4  0E02               	movlw	2
 16704  0023A6  0100               	movlb	0	; () banked
 16705  0023A8  5D76               	subwf	(sdc_disk_read@length+1)& (0+255),w,b
 16706  0023AA  A0D8               	btfss	status,0,c
 16707  0023AC  D7B0               	goto	l10818
 16708                           
 16709                           ; BSR set to: 0
 16710                           ;diskio.c: 586: }
 16711                           ;diskio.c: 587: }
 16712                           ;diskio.c: 588: _delay((unsigned long)((1000)*(48000000/4000.0)));
 16713                           
 16714                           ; BSR set to: 0
 16715  0023AE  0E3D               	movlw	61
 16716  0023B0  6E31               	movwf	(??_sdc_disk_read+1)& (0+255),c
 16717  0023B2  0EE1               	movlw	225
 16718  0023B4  6E30               	movwf	??_sdc_disk_read& (0+255),c
 16719  0023B6  0E40               	movlw	64
 16720  0023B8                     u16987:
 16721  0023B8  2EE8               	decfsz	wreg,f,c
 16722  0023BA  D7FE               	bra	u16987
 16723  0023BC  2E30               	decfsz	??_sdc_disk_read& (0+255),f,c
 16724  0023BE  D7FC               	bra	u16987
 16725  0023C0  2E31               	decfsz	(??_sdc_disk_read+1)& (0+255),f,c
 16726  0023C2  D7FA               	bra	u16987
 16727                           
 16728                           ;diskio.c: 591: command(0X4C,0X00000000,0X00);
 16729  0023C4  0E00               	movlw	0
 16730  0023C6  6E18               	movwf	command@arg,c
 16731  0023C8  0E00               	movlw	0
 16732  0023CA  6E19               	movwf	command@arg+1,c
 16733  0023CC  0E00               	movlw	0
 16734  0023CE  6E1A               	movwf	command@arg+2,c
 16735  0023D0  0E00               	movlw	0
 16736  0023D2  6E1B               	movwf	command@arg+3,c
 16737  0023D4  0E00               	movlw	0
 16738  0023D6  6E1C               	movwf	command@CRC,c
 16739  0023D8  0E4C               	movlw	76
 16740  0023DA  EC60  F029         	call	_command
 16741                           
 16742                           ;diskio.c: 592: proceed();
 16743  0023DE  EC70  F02A         	call	_proceed	;wreg free
 16744  0023E2                     l10844:
 16745                           
 16746                           ;diskio.c: 594: buff = response();
 16747  0023E2  EC83  F02A         	call	_response	;wreg free
 16748  0023E6  0100               	movlb	0	; () banked
 16749  0023E8  6F77               	movwf	sdc_disk_read@buff& (0+255),b
 16750                           
 16751                           ; BSR set to: 0
 16752                           ;diskio.c: 595: posicao_cursor_lcd(1,0);
 16753  0023EA  0E00               	movlw	0
 16754  0023EC  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16755  0023EE  0E01               	movlw	1
 16756  0023F0  ECD2  F026         	call	_posicao_cursor_lcd
 16757                           
 16758                           ;diskio.c: 596: escreve_frase_ram_lcd("aguard 0xFF       ");
 16759  0023F4  0E20               	movlw	low STR_16
 16760  0023F6  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 16761  0023F8  0E61               	movlw	high STR_16
 16762  0023FA  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 16763  0023FC  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 16764                           
 16765                           ;diskio.c: 597: posicao_cursor_lcd(1,13);
 16766  002400  0E0D               	movlw	13
 16767  002402  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16768  002404  0E01               	movlw	1
 16769  002406  ECD2  F026         	call	_posicao_cursor_lcd
 16770                           
 16771                           ;diskio.c: 598: escreve_inteiro_lcd(buff);
 16772  00240A  C077  F02E         	movff	sdc_disk_read@buff,escreve_inteiro_lcd@valor
 16773  00240E  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 16774  002410  EC25  F029         	call	_escreve_inteiro_lcd	;wreg free
 16775                           
 16776                           ;diskio.c: 599: }while(buff!=0xFF);
 16777  002414  0100               	movlb	0	; () banked
 16778  002416  2977               	incf	sdc_disk_read@buff& (0+255),w,b
 16779  002418  A4D8               	btfss	status,2,c
 16780  00241A  D7E3               	goto	l10844
 16781                           
 16782                           ; BSR set to: 0
 16783                           ;diskio.c: 601: length = 0;
 16784                           
 16785                           ; BSR set to: 0
 16786  00241C  0E00               	movlw	0
 16787  00241E  0100               	movlb	0	; () banked
 16788  002420  6F76               	movwf	(sdc_disk_read@length+1)& (0+255),b
 16789  002422  0E00               	movlw	0
 16790  002424  6F75               	movwf	sdc_disk_read@length& (0+255),b
 16791                           
 16792                           ; BSR set to: 0
 16793                           ;diskio.c: 606: _delay((unsigned long)((2000)*(48000000/4000.0)));
 16794  002426  0E7A               	movlw	122
 16795  002428  6E31               	movwf	(??_sdc_disk_read+1)& (0+255),c
 16796  00242A  0EC1               	movlw	193
 16797  00242C  6E30               	movwf	??_sdc_disk_read& (0+255),c
 16798  00242E  0E82               	movlw	130
 16799  002430                     u16997:
 16800  002430  2EE8               	decfsz	wreg,f,c
 16801  002432  D7FE               	bra	u16997
 16802  002434  2E30               	decfsz	??_sdc_disk_read& (0+255),f,c
 16803  002436  D7FC               	bra	u16997
 16804  002438  2E31               	decfsz	(??_sdc_disk_read+1)& (0+255),f,c
 16805  00243A  D7FA               	bra	u16997
 16806                           
 16807                           ;diskio.c: 607: return RES_OK;
 16808  00243C  0E00               	movlw	0
 16809  00243E  0012               	return	
 16810                           
 16811                           ;diskio.c: 608: }
 16812                           ;diskio.c: 609: _delay((unsigned long)((2000)*(48000000/4000.0)));
 16813  002440  0E7A               	movlw	122
 16814  002442  6E31               	movwf	(??_sdc_disk_read+1)& (0+255),c
 16815  002444  0EC1               	movlw	193
 16816  002446  6E30               	movwf	??_sdc_disk_read& (0+255),c
 16817  002448  0E82               	movlw	130
 16818  00244A                     u17007:
 16819  00244A  2EE8               	decfsz	wreg,f,c
 16820  00244C  D7FE               	bra	u17007
 16821  00244E  2E30               	decfsz	??_sdc_disk_read& (0+255),f,c
 16822  002450  D7FC               	bra	u17007
 16823  002452  2E31               	decfsz	(??_sdc_disk_read+1)& (0+255),f,c
 16824  002454  D7FA               	bra	u17007
 16825  002456  0012               	return		;funcret
 16826  002458                     __end_of_sdc_disk_read:
 16827                           	opt stack 0
 16828                           tosu	equ	0xFFF
 16829                           tosh	equ	0xFFE
 16830                           tosl	equ	0xFFD
 16831                           pclath	equ	0xFFA
 16832                           tblptru	equ	0xFF8
 16833                           tblptrh	equ	0xFF7
 16834                           tblptrl	equ	0xFF6
 16835                           tablat	equ	0xFF5
 16836                           prodh	equ	0xFF4
 16837                           prodl	equ	0xFF3
 16838                           intcon	equ	0xFF2
 16839                           intcon2	equ	0xFF1
 16840                           intcon3	equ	0xFF0
 16841                           indf0	equ	0xFEF
 16842                           postinc0	equ	0xFEE
 16843                           fsr0h	equ	0xFEA
 16844                           fsr0l	equ	0xFE9
 16845                           wreg	equ	0xFE8
 16846                           indf1	equ	0xFE7
 16847                           postinc1	equ	0xFE6
 16848                           postdec1	equ	0xFE5
 16849                           fsr1h	equ	0xFE2
 16850                           fsr1l	equ	0xFE1
 16851                           indf2	equ	0xFDF
 16852                           postinc2	equ	0xFDE
 16853                           postdec2	equ	0xFDD
 16854                           plusw2	equ	0xFDB
 16855                           fsr2h	equ	0xFDA
 16856                           fsr2l	equ	0xFD9
 16857                           status	equ	0xFD8
 16858                           
 16859 ;; *************** function _response *****************
 16860 ;; Defined at:
 16861 ;;		line 60 in file "bibliotecas/SDCard.c"
 16862 ;; Parameters:    Size  Location     Type
 16863 ;;		None
 16864 ;; Auto vars:     Size  Location     Type
 16865 ;;  buff            1   24[COMRAM] unsigned char 
 16866 ;; Return value:  Size  Location     Type
 16867 ;;                  1    wreg      unsigned char 
 16868 ;; Registers used:
 16869 ;;		wreg, status,2, status,0, cstack
 16870 ;; Tracked objects:
 16871 ;;		On entry : 0/0
 16872 ;;		On exit  : 0/0
 16873 ;;		Unchanged: 0/0
 16874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16875 ;;      Params:         0       0       0       0       0       0       0       0       0
 16876 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16877 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16878 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16879 ;;Total ram usage:        1 bytes
 16880 ;; Hardware stack levels used:    1
 16881 ;; Hardware stack levels required when called:    3
 16882 ;; This function calls:
 16883 ;;		_recebe_dado_SPI
 16884 ;; This function is called by:
 16885 ;;		_sdc_disk_initialize
 16886 ;;		_sdc_disk_read
 16887 ;;		_sdc_disk_write
 16888 ;; This function uses a non-reentrant model
 16889 ;;
 16890                           
 16891                           	psect	text48
 16892  005506                     __ptext48:
 16893                           	opt stack 0
 16894  005506                     _response:
 16895                           	opt stack 18
 16896                           
 16897                           ;SDCard.c: 62: unsigned char buff;
 16898                           ;SDCard.c: 63: LATBbits.LATB4 = 0;
 16899                           
 16900                           ;incstack = 0
 16901  005506  988A               	bcf	3978,4,c	;volatile
 16902                           
 16903                           ;SDCard.c: 64: buff= recebe_dado_SPI();
 16904  005508  EC3F  F027         	call	_recebe_dado_SPI	;wreg free
 16905  00550C  6E19               	movwf	response@buff,c
 16906                           
 16907                           ;SDCard.c: 65: return buff;
 16908  00550E  5019               	movf	response@buff,w,c
 16909  005510  0012               	return	
 16910  005512                     __end_of_response:
 16911                           	opt stack 0
 16912                           tosu	equ	0xFFF
 16913                           tosh	equ	0xFFE
 16914                           tosl	equ	0xFFD
 16915                           pclath	equ	0xFFA
 16916                           tblptru	equ	0xFF8
 16917                           tblptrh	equ	0xFF7
 16918                           tblptrl	equ	0xFF6
 16919                           tablat	equ	0xFF5
 16920                           prodh	equ	0xFF4
 16921                           prodl	equ	0xFF3
 16922                           intcon	equ	0xFF2
 16923                           intcon2	equ	0xFF1
 16924                           intcon3	equ	0xFF0
 16925                           indf0	equ	0xFEF
 16926                           postinc0	equ	0xFEE
 16927                           fsr0h	equ	0xFEA
 16928                           fsr0l	equ	0xFE9
 16929                           wreg	equ	0xFE8
 16930                           indf1	equ	0xFE7
 16931                           postinc1	equ	0xFE6
 16932                           postdec1	equ	0xFE5
 16933                           fsr1h	equ	0xFE2
 16934                           fsr1l	equ	0xFE1
 16935                           indf2	equ	0xFDF
 16936                           postinc2	equ	0xFDE
 16937                           postdec2	equ	0xFDD
 16938                           plusw2	equ	0xFDB
 16939                           fsr2h	equ	0xFDA
 16940                           fsr2l	equ	0xFD9
 16941                           status	equ	0xFD8
 16942                           
 16943 ;; *************** function _recebe_dado_SPI *****************
 16944 ;; Defined at:
 16945 ;;		line 143 in file "bibliotecas/SHRC.c"
 16946 ;; Parameters:    Size  Location     Type
 16947 ;;		None
 16948 ;; Auto vars:     Size  Location     Type
 16949 ;;  contador        1   23[COMRAM] unsigned char 
 16950 ;; Return value:  Size  Location     Type
 16951 ;;                  1    wreg      unsigned char 
 16952 ;; Registers used:
 16953 ;;		wreg, status,2, status,0
 16954 ;; Tracked objects:
 16955 ;;		On entry : 0/0
 16956 ;;		On exit  : 0/0
 16957 ;;		Unchanged: 0/0
 16958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16959 ;;      Params:         0       0       0       0       0       0       0       0       0
 16960 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16961 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16962 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16963 ;;Total ram usage:        3 bytes
 16964 ;; Hardware stack levels used:    1
 16965 ;; Hardware stack levels required when called:    2
 16966 ;; This function calls:
 16967 ;;		Nothing
 16968 ;; This function is called by:
 16969 ;;		_response
 16970 ;; This function uses a non-reentrant model
 16971 ;;
 16972                           
 16973                           	psect	text49
 16974  004E7E                     __ptext49:
 16975                           	opt stack 0
 16976  004E7E                     _recebe_dado_SPI:
 16977                           	opt stack 18
 16978                           
 16979                           ;SHRC.c: 145: dado = 0;
 16980                           
 16981                           ;incstack = 0
 16982  004E7E  0E00               	movlw	0
 16983  004E80  6E43               	movwf	_dado,c
 16984                           
 16985                           ;SHRC.c: 146: unsigned char contador=0;
 16986  004E82  0E00               	movlw	0
 16987  004E84  6E18               	movwf	recebe_dado_SPI@contador,c
 16988                           
 16989                           ;SHRC.c: 148: (INTCONbits.GIE = 0);
 16990  004E86  9EF2               	bcf	intcon,7,c	;volatile
 16991                           
 16992                           ;SHRC.c: 151: while(contador<=7)
 16993  004E88  D022               	goto	l10500
 16994  004E8A                     l10484:
 16995                           
 16996                           ;SHRC.c: 152: {
 16997                           ;SHRC.c: 153: dado |= (PORTBbits.RB5 << (7-contador));
 16998  004E8A  5018               	movf	recebe_dado_SPI@contador,w,c
 16999  004E8C  0800               	sublw	0
 17000  004E8E  6E16               	movwf	??_recebe_dado_SPI& (0+255),c
 17001  004E90  0E07               	movlw	7
 17002  004E92  2616               	addwf	??_recebe_dado_SPI,f,c
 17003  004E94  AA81               	btfss	3969,5,c	;volatile
 17004  004E96  D003               	goto	u11750
 17005  004E98  6A17               	clrf	(??_recebe_dado_SPI+1)& (0+255),c
 17006  004E9A  2A17               	incf	(??_recebe_dado_SPI+1)& (0+255),f,c
 17007  004E9C  D001               	goto	u11758
 17008  004E9E                     u11750:
 17009  004E9E  6A17               	clrf	(??_recebe_dado_SPI+1)& (0+255),c
 17010  004EA0                     u11758:
 17011  004EA0  2A16               	incf	??_recebe_dado_SPI,f,c
 17012  004EA2  D002               	goto	u11764
 17013  004EA4                     u11765:
 17014  004EA4  90D8               	bcf	status,0,c
 17015  004EA6  3617               	rlcf	??_recebe_dado_SPI+1,f,c
 17016  004EA8                     u11764:
 17017  004EA8  2E16               	decfsz	??_recebe_dado_SPI,f,c
 17018  004EAA  D7FC               	goto	u11765
 17019  004EAC  5017               	movf	??_recebe_dado_SPI+1,w,c
 17020  004EAE  1243               	iorwf	_dado,f,c
 17021                           
 17022                           ;SHRC.c: 155: _delay((unsigned long)((2.5)*(48000000/4000000.0)));
 17023  004EB0  0E0A               	movlw	10
 17024  004EB2                     u17017:
 17025  004EB2  2EE8               	decfsz	wreg,f,c
 17026  004EB4  D7FE               	bra	u17017
 17027                           
 17028                           ;SHRC.c: 156: LATBbits.LATB6 = 1;
 17029  004EB6  8C8A               	bsf	3978,6,c	;volatile
 17030                           
 17031                           ;SHRC.c: 157: _delay((unsigned long)((2.5)*(48000000/4000000.0)));
 17032  004EB8  0E0A               	movlw	10
 17033  004EBA                     u17027:
 17034  004EBA  2EE8               	decfsz	wreg,f,c
 17035  004EBC  D7FE               	bra	u17027
 17036                           
 17037                           ;SHRC.c: 158: _delay((unsigned long)((2.5)*(48000000/4000000.0)));
 17038  004EBE  0E0A               	movlw	10
 17039  004EC0                     u17037:
 17040  004EC0  2EE8               	decfsz	wreg,f,c
 17041  004EC2  D7FE               	bra	u17037
 17042                           
 17043                           ;SHRC.c: 159: LATBbits.LATB6 = 0;
 17044  004EC4  9C8A               	bcf	3978,6,c	;volatile
 17045                           
 17046                           ;SHRC.c: 160: _delay((unsigned long)((2.5)*(48000000/4000000.0)));
 17047  004EC6  0E0A               	movlw	10
 17048  004EC8                     u17047:
 17049  004EC8  2EE8               	decfsz	wreg,f,c
 17050  004ECA  D7FE               	bra	u17047
 17051                           
 17052                           ;SHRC.c: 161: contador++;
 17053  004ECC  2A18               	incf	recebe_dado_SPI@contador,f,c
 17054  004ECE                     l10500:
 17055  004ECE  0E07               	movlw	7
 17056  004ED0  6418               	cpfsgt	recebe_dado_SPI@contador,c
 17057  004ED2  D7DB               	goto	l10484
 17058                           
 17059                           ;SHRC.c: 162: }
 17060                           ;SHRC.c: 163: (INTCONbits.GIE = 1);
 17061  004ED4  8EF2               	bsf	intcon,7,c	;volatile
 17062                           
 17063                           ;SHRC.c: 164: return dado;
 17064  004ED6  5043               	movf	_dado,w,c
 17065  004ED8  0012               	return	
 17066  004EDA                     __end_of_recebe_dado_SPI:
 17067                           	opt stack 0
 17068                           tosu	equ	0xFFF
 17069                           tosh	equ	0xFFE
 17070                           tosl	equ	0xFFD
 17071                           pclath	equ	0xFFA
 17072                           tblptru	equ	0xFF8
 17073                           tblptrh	equ	0xFF7
 17074                           tblptrl	equ	0xFF6
 17075                           tablat	equ	0xFF5
 17076                           prodh	equ	0xFF4
 17077                           prodl	equ	0xFF3
 17078                           intcon	equ	0xFF2
 17079                           intcon2	equ	0xFF1
 17080                           intcon3	equ	0xFF0
 17081                           indf0	equ	0xFEF
 17082                           postinc0	equ	0xFEE
 17083                           fsr0h	equ	0xFEA
 17084                           fsr0l	equ	0xFE9
 17085                           wreg	equ	0xFE8
 17086                           indf1	equ	0xFE7
 17087                           postinc1	equ	0xFE6
 17088                           postdec1	equ	0xFE5
 17089                           fsr1h	equ	0xFE2
 17090                           fsr1l	equ	0xFE1
 17091                           indf2	equ	0xFDF
 17092                           postinc2	equ	0xFDE
 17093                           postdec2	equ	0xFDD
 17094                           plusw2	equ	0xFDB
 17095                           fsr2h	equ	0xFDA
 17096                           fsr2l	equ	0xFD9
 17097                           status	equ	0xFD8
 17098                           
 17099 ;; *************** function _proceed *****************
 17100 ;; Defined at:
 17101 ;;		line 97 in file "bibliotecas/SDCard.c"
 17102 ;; Parameters:    Size  Location     Type
 17103 ;;		None
 17104 ;; Auto vars:     Size  Location     Type
 17105 ;;		None
 17106 ;; Return value:  Size  Location     Type
 17107 ;;                  1    wreg      void 
 17108 ;; Registers used:
 17109 ;;		wreg, status,2, status,0, cstack
 17110 ;; Tracked objects:
 17111 ;;		On entry : 0/0
 17112 ;;		On exit  : 0/0
 17113 ;;		Unchanged: 0/0
 17114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17115 ;;      Params:         0       0       0       0       0       0       0       0       0
 17116 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17117 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17118 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17119 ;;Total ram usage:        0 bytes
 17120 ;; Hardware stack levels used:    1
 17121 ;; Hardware stack levels required when called:    3
 17122 ;; This function calls:
 17123 ;;		_escreve_dado_SPI
 17124 ;; This function is called by:
 17125 ;;		_sdc_disk_read
 17126 ;;		_SDCard
 17127 ;; This function uses a non-reentrant model
 17128 ;;
 17129                           
 17130                           	psect	text50
 17131  0054E0                     __ptext50:
 17132                           	opt stack 0
 17133  0054E0                     _proceed:
 17134                           	opt stack 25
 17135                           
 17136                           ;SDCard.c: 99: LATBbits.LATB4 = 0;
 17137                           
 17138                           ;incstack = 0
 17139  0054E0  988A               	bcf	3978,4,c	;volatile
 17140                           
 17141                           ;SDCard.c: 100: LATBbits.LATB7 = 1;
 17142  0054E2  8E8A               	bsf	3978,7,c	;volatile
 17143                           
 17144                           ;SDCard.c: 101: escreve_dado_SPI(0xFF);
 17145  0054E4  0EFF               	movlw	255
 17146  0054E6  EC62  F028         	call	_escreve_dado_SPI
 17147                           
 17148                           ;SDCard.c: 102: LATBbits.LATB4 = 1;
 17149  0054EA  888A               	bsf	3978,4,c	;volatile
 17150  0054EC  0012               	return		;funcret
 17151  0054EE                     __end_of_proceed:
 17152                           	opt stack 0
 17153                           tosu	equ	0xFFF
 17154                           tosh	equ	0xFFE
 17155                           tosl	equ	0xFFD
 17156                           pclath	equ	0xFFA
 17157                           tblptru	equ	0xFF8
 17158                           tblptrh	equ	0xFF7
 17159                           tblptrl	equ	0xFF6
 17160                           tablat	equ	0xFF5
 17161                           prodh	equ	0xFF4
 17162                           prodl	equ	0xFF3
 17163                           intcon	equ	0xFF2
 17164                           intcon2	equ	0xFF1
 17165                           intcon3	equ	0xFF0
 17166                           indf0	equ	0xFEF
 17167                           postinc0	equ	0xFEE
 17168                           fsr0h	equ	0xFEA
 17169                           fsr0l	equ	0xFE9
 17170                           wreg	equ	0xFE8
 17171                           indf1	equ	0xFE7
 17172                           postinc1	equ	0xFE6
 17173                           postdec1	equ	0xFE5
 17174                           fsr1h	equ	0xFE2
 17175                           fsr1l	equ	0xFE1
 17176                           indf2	equ	0xFDF
 17177                           postinc2	equ	0xFDE
 17178                           postdec2	equ	0xFDD
 17179                           plusw2	equ	0xFDB
 17180                           fsr2h	equ	0xFDA
 17181                           fsr2l	equ	0xFD9
 17182                           status	equ	0xFD8
 17183                           
 17184 ;; *************** function _posicao_cursor_lcd *****************
 17185 ;; Defined at:
 17186 ;;		line 271 in file "bibliotecas/display_lcd.c"
 17187 ;; Parameters:    Size  Location     Type
 17188 ;;  linha           1    wreg     unsigned char 
 17189 ;;  coluna          1   24[COMRAM] unsigned char 
 17190 ;; Auto vars:     Size  Location     Type
 17191 ;;  linha           1   25[COMRAM] unsigned char 
 17192 ;;  endereco        1   26[COMRAM] unsigned char 
 17193 ;; Return value:  Size  Location     Type
 17194 ;;                  1    wreg      void 
 17195 ;; Registers used:
 17196 ;;		wreg, status,2, status,0, cstack
 17197 ;; Tracked objects:
 17198 ;;		On entry : 0/0
 17199 ;;		On exit  : 0/0
 17200 ;;		Unchanged: 0/0
 17201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17202 ;;      Params:         1       0       0       0       0       0       0       0       0
 17203 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17204 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17205 ;;      Totals:         3       0       0       0       0       0       0       0       0
 17206 ;;Total ram usage:        3 bytes
 17207 ;; Hardware stack levels used:    1
 17208 ;; Hardware stack levels required when called:    4
 17209 ;; This function calls:
 17210 ;;		_endereco_cursor_lcd
 17211 ;; This function is called by:
 17212 ;;		_sdc_disk_initialize
 17213 ;;		_sdc_disk_read
 17214 ;;		_sdc_disk_write
 17215 ;;		_check_fs
 17216 ;;		_auto_mount
 17217 ;;		_mensagem_inicial
 17218 ;;		_SDCard
 17219 ;;		_gps
 17220 ;; This function uses a non-reentrant model
 17221 ;;
 17222                           
 17223                           	psect	text51
 17224  004DA4                     __ptext51:
 17225                           	opt stack 0
 17226  004DA4                     _posicao_cursor_lcd:
 17227                           	opt stack 25
 17228                           
 17229                           ;incstack = 0
 17230                           ;posicao_cursor_lcd@linha stored from wreg
 17231  004DA4  6E1A               	movwf	posicao_cursor_lcd@linha,c
 17232                           
 17233                           ;display_lcd.c: 273: unsigned char endereco = 0x00;
 17234  004DA6  0E00               	movlw	0
 17235  004DA8  6E1B               	movwf	posicao_cursor_lcd@endereco,c
 17236                           
 17237                           ;display_lcd.c: 275: if(coluna <= 0x10U)
 17238  004DAA  0E11               	movlw	17
 17239  004DAC  6019               	cpfslt	posicao_cursor_lcd@coluna,c
 17240  004DAE  D02F               	goto	l10578
 17241  004DB0  D01E               	goto	l10574
 17242  004DB2                     l362:
 17243                           
 17244                           ;display_lcd.c: 282: endereco = 0x00U + coluna;
 17245  004DB2  C019  F01B         	movff	posicao_cursor_lcd@coluna,posicao_cursor_lcd@endereco
 17246                           
 17247                           ;display_lcd.c: 283: endereco_cursor_lcd(endereco);
 17248  004DB6  501B               	movf	posicao_cursor_lcd@endereco,w,c
 17249  004DB8  EC0A  F027         	call	_endereco_cursor_lcd
 17250                           
 17251                           ;display_lcd.c: 284: break;
 17252  004DBC  D026               	goto	l10576
 17253  004DBE                     l10558:
 17254                           
 17255                           ;display_lcd.c: 287: endereco = 0x40U + coluna;
 17256  004DBE  5019               	movf	posicao_cursor_lcd@coluna,w,c
 17257  004DC0  0F40               	addlw	64
 17258  004DC2  6E1B               	movwf	posicao_cursor_lcd@endereco,c
 17259                           
 17260                           ;display_lcd.c: 288: endereco_cursor_lcd(endereco);
 17261  004DC4  501B               	movf	posicao_cursor_lcd@endereco,w,c
 17262  004DC6  EC0A  F027         	call	_endereco_cursor_lcd
 17263                           
 17264                           ;display_lcd.c: 289: break;
 17265  004DCA  D01F               	goto	l10576
 17266  004DCC                     l10562:
 17267                           
 17268                           ;display_lcd.c: 292: endereco = 0x14U + coluna;
 17269  004DCC  5019               	movf	posicao_cursor_lcd@coluna,w,c
 17270  004DCE  0F14               	addlw	20
 17271  004DD0  6E1B               	movwf	posicao_cursor_lcd@endereco,c
 17272                           
 17273                           ;display_lcd.c: 293: endereco_cursor_lcd(endereco);
 17274  004DD2  501B               	movf	posicao_cursor_lcd@endereco,w,c
 17275  004DD4  EC0A  F027         	call	_endereco_cursor_lcd
 17276                           
 17277                           ;display_lcd.c: 294: break;
 17278  004DD8  D018               	goto	l10576
 17279  004DDA                     l10566:
 17280                           
 17281                           ;display_lcd.c: 297: endereco = 0x54U + coluna;
 17282  004DDA  5019               	movf	posicao_cursor_lcd@coluna,w,c
 17283  004DDC  0F54               	addlw	84
 17284  004DDE  6E1B               	movwf	posicao_cursor_lcd@endereco,c
 17285                           
 17286                           ;display_lcd.c: 298: endereco_cursor_lcd(endereco);
 17287  004DE0  501B               	movf	posicao_cursor_lcd@endereco,w,c
 17288  004DE2  EC0A  F027         	call	_endereco_cursor_lcd
 17289                           
 17290                           ;display_lcd.c: 299: break;
 17291  004DE6  D011               	goto	l10576
 17292  004DE8                     l10570:
 17293                           
 17294                           ;display_lcd.c: 302: endereco = 0x00U;
 17295  004DE8  0E00               	movlw	0
 17296  004DEA  6E1B               	movwf	posicao_cursor_lcd@endereco,c
 17297                           
 17298                           ;display_lcd.c: 304: }
 17299                           
 17300                           ;display_lcd.c: 303: break;
 17301  004DEC  D00E               	goto	l10576
 17302  004DEE                     l10574:
 17303  004DEE  501A               	movf	posicao_cursor_lcd@linha,w,c
 17304                           
 17305                           ; Switch size 1, requested type "space"
 17306                           ; Number of cases is 4, Range of values is 1 to 4
 17307                           ; switch strategies available:
 17308                           ; Name         Instructions Cycles
 17309                           ; simple_byte           13     7 (average)
 17310                           ;	Chosen strategy is simple_byte
 17311  004DF0  0A01               	xorlw	1	; case 1
 17312  004DF2  B4D8               	btfsc	status,2,c
 17313  004DF4  D7DE               	goto	l362
 17314  004DF6  0A03               	xorlw	3	; case 2
 17315  004DF8  B4D8               	btfsc	status,2,c
 17316  004DFA  D7E1               	goto	l10558
 17317  004DFC  0A01               	xorlw	1	; case 3
 17318  004DFE  B4D8               	btfsc	status,2,c
 17319  004E00  D7E5               	goto	l10562
 17320  004E02  0A07               	xorlw	7	; case 4
 17321  004E04  B4D8               	btfsc	status,2,c
 17322  004E06  D7E9               	goto	l10566
 17323  004E08  D7EF               	goto	l10570
 17324  004E0A                     l10576:
 17325                           
 17326                           ;display_lcd.c: 306: coluna++;
 17327  004E0A  2A19               	incf	posicao_cursor_lcd@coluna,f,c
 17328                           
 17329                           ;display_lcd.c: 307: }
 17330  004E0C  0012               	return	
 17331  004E0E                     l10578:
 17332                           
 17333                           ;display_lcd.c: 308: else
 17334                           ;display_lcd.c: 309: {
 17335                           ;display_lcd.c: 310: endereco = 0x00U;
 17336  004E0E  0E00               	movlw	0
 17337  004E10  6E1B               	movwf	posicao_cursor_lcd@endereco,c
 17338  004E12  0012               	return	
 17339  004E14                     __end_of_posicao_cursor_lcd:
 17340                           	opt stack 0
 17341                           tosu	equ	0xFFF
 17342                           tosh	equ	0xFFE
 17343                           tosl	equ	0xFFD
 17344                           pclath	equ	0xFFA
 17345                           tblptru	equ	0xFF8
 17346                           tblptrh	equ	0xFF7
 17347                           tblptrl	equ	0xFF6
 17348                           tablat	equ	0xFF5
 17349                           prodh	equ	0xFF4
 17350                           prodl	equ	0xFF3
 17351                           intcon	equ	0xFF2
 17352                           intcon2	equ	0xFF1
 17353                           intcon3	equ	0xFF0
 17354                           indf0	equ	0xFEF
 17355                           postinc0	equ	0xFEE
 17356                           fsr0h	equ	0xFEA
 17357                           fsr0l	equ	0xFE9
 17358                           wreg	equ	0xFE8
 17359                           indf1	equ	0xFE7
 17360                           postinc1	equ	0xFE6
 17361                           postdec1	equ	0xFE5
 17362                           fsr1h	equ	0xFE2
 17363                           fsr1l	equ	0xFE1
 17364                           indf2	equ	0xFDF
 17365                           postinc2	equ	0xFDE
 17366                           postdec2	equ	0xFDD
 17367                           plusw2	equ	0xFDB
 17368                           fsr2h	equ	0xFDA
 17369                           fsr2l	equ	0xFD9
 17370                           status	equ	0xFD8
 17371                           
 17372 ;; *************** function _endereco_cursor_lcd *****************
 17373 ;; Defined at:
 17374 ;;		line 218 in file "bibliotecas/display_lcd.c"
 17375 ;; Parameters:    Size  Location     Type
 17376 ;;  endereco        1    wreg     unsigned char 
 17377 ;; Auto vars:     Size  Location     Type
 17378 ;;  endereco        1   23[COMRAM] unsigned char 
 17379 ;; Return value:  Size  Location     Type
 17380 ;;                  1    wreg      void 
 17381 ;; Registers used:
 17382 ;;		wreg, status,2, status,0, cstack
 17383 ;; Tracked objects:
 17384 ;;		On entry : 0/0
 17385 ;;		On exit  : 0/0
 17386 ;;		Unchanged: 0/0
 17387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17388 ;;      Params:         0       0       0       0       0       0       0       0       0
 17389 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17390 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17391 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17392 ;;Total ram usage:        1 bytes
 17393 ;; Hardware stack levels used:    1
 17394 ;; Hardware stack levels required when called:    3
 17395 ;; This function calls:
 17396 ;;		_delay
 17397 ;; This function is called by:
 17398 ;;		_posicao_cursor_lcd
 17399 ;;		_cria_caractere_lcd
 17400 ;; This function uses a non-reentrant model
 17401 ;;
 17402                           
 17403                           	psect	text52
 17404  004E14                     __ptext52:
 17405                           	opt stack 0
 17406  004E14                     _endereco_cursor_lcd:
 17407                           	opt stack 25
 17408                           
 17409                           ;incstack = 0
 17410                           ;endereco_cursor_lcd@endereco stored from wreg
 17411  004E14  6E18               	movwf	endereco_cursor_lcd@endereco,c
 17412                           
 17413                           ;display_lcd.c: 221: PORTDbits.RD2 = 0;
 17414  004E16  9483               	bcf	3971,2,c	;volatile
 17415                           
 17416                           ;display_lcd.c: 222: PORTDbits.RD1 = 0;
 17417  004E18  9283               	bcf	3971,1,c	;volatile
 17418                           
 17419                           ;display_lcd.c: 223: PORTDbits.RD0 = 0;
 17420  004E1A  9083               	bcf	3971,0,c	;volatile
 17421                           
 17422                           ;display_lcd.c: 226: PORTDbits.RD7 = 1;
 17423  004E1C  8E83               	bsf	3971,7,c	;volatile
 17424                           
 17425                           ;display_lcd.c: 227: if(endereco&0b00010000){PORTDbits.RD4=1;}
 17426  004E1E  A818               	btfss	endereco_cursor_lcd@endereco,4,c
 17427  004E20  D002               	goto	l343
 17428  004E22  8883               	bsf	3971,4,c	;volatile
 17429  004E24  D001               	goto	l10512
 17430  004E26                     l343:
 17431                           
 17432                           ;display_lcd.c: 228: else {PORTDbits.RD4=0;}
 17433  004E26  9883               	bcf	3971,4,c	;volatile
 17434  004E28                     l10512:
 17435                           
 17436                           ;display_lcd.c: 229: if(endereco&0b00100000){PORTDbits.RD5=1;}
 17437  004E28  AA18               	btfss	endereco_cursor_lcd@endereco,5,c
 17438  004E2A  D002               	goto	l345
 17439  004E2C  8A83               	bsf	3971,5,c	;volatile
 17440  004E2E  D001               	goto	l10516
 17441  004E30                     l345:
 17442                           
 17443                           ;display_lcd.c: 230: else {PORTDbits.RD5=0;}
 17444  004E30  9A83               	bcf	3971,5,c	;volatile
 17445  004E32                     l10516:
 17446                           
 17447                           ;display_lcd.c: 231: if(endereco&0b01000000){PORTDbits.RD6=1;}
 17448  004E32  AC18               	btfss	endereco_cursor_lcd@endereco,6,c
 17449  004E34  D002               	goto	l347
 17450  004E36  8C83               	bsf	3971,6,c	;volatile
 17451  004E38  D001               	goto	l348
 17452  004E3A                     l347:
 17453                           
 17454                           ;display_lcd.c: 232: else {PORTDbits.RD6=0;}
 17455  004E3A  9C83               	bcf	3971,6,c	;volatile
 17456  004E3C                     l348:
 17457                           
 17458                           ;display_lcd.c: 235: PORTDbits.RD0 = 1;
 17459  004E3C  8083               	bsf	3971,0,c	;volatile
 17460                           
 17461                           ;display_lcd.c: 236: delay();
 17462  004E3E  ECFD  F029         	call	_delay	;wreg free
 17463                           
 17464                           ;display_lcd.c: 237: PORTDbits.RD0 = 0;
 17465  004E42  9083               	bcf	3971,0,c	;volatile
 17466                           
 17467                           ;display_lcd.c: 238: delay();
 17468  004E44  ECFD  F029         	call	_delay	;wreg free
 17469                           
 17470                           ;display_lcd.c: 241: if(endereco&0b00000001){PORTDbits.RD4=1;}
 17471  004E48  A018               	btfss	endereco_cursor_lcd@endereco,0,c
 17472  004E4A  D002               	goto	l349
 17473  004E4C  8883               	bsf	3971,4,c	;volatile
 17474  004E4E  D001               	goto	l350
 17475  004E50                     l349:
 17476                           
 17477                           ;display_lcd.c: 242: else {PORTDbits.RD4=0;}
 17478  004E50  9883               	bcf	3971,4,c	;volatile
 17479  004E52                     l350:
 17480                           
 17481                           ;display_lcd.c: 243: if(endereco&0b00000010){PORTDbits.RD5=1;}
 17482  004E52  A218               	btfss	endereco_cursor_lcd@endereco,1,c
 17483  004E54  D002               	goto	l351
 17484  004E56  8A83               	bsf	3971,5,c	;volatile
 17485  004E58  D001               	goto	l352
 17486  004E5A                     l351:
 17487                           
 17488                           ;display_lcd.c: 244: else {PORTDbits.RD5=0;}
 17489  004E5A  9A83               	bcf	3971,5,c	;volatile
 17490  004E5C                     l352:
 17491                           
 17492                           ;display_lcd.c: 245: if(endereco&0b00000100){PORTDbits.RD6=1;}
 17493  004E5C  A418               	btfss	endereco_cursor_lcd@endereco,2,c
 17494  004E5E  D002               	goto	l353
 17495  004E60  8C83               	bsf	3971,6,c	;volatile
 17496  004E62  D001               	goto	l354
 17497  004E64                     l353:
 17498                           
 17499                           ;display_lcd.c: 246: else {PORTDbits.RD6=0;}
 17500  004E64  9C83               	bcf	3971,6,c	;volatile
 17501  004E66                     l354:
 17502                           
 17503                           ;display_lcd.c: 247: if(endereco&0b00001000){PORTDbits.RD7=1;}
 17504  004E66  A618               	btfss	endereco_cursor_lcd@endereco,3,c
 17505  004E68  D002               	goto	l355
 17506  004E6A  8E83               	bsf	3971,7,c	;volatile
 17507  004E6C  D001               	goto	l356
 17508  004E6E                     l355:
 17509                           
 17510                           ;display_lcd.c: 248: else {PORTDbits.RD7=0;}
 17511  004E6E  9E83               	bcf	3971,7,c	;volatile
 17512  004E70                     l356:
 17513                           
 17514                           ;display_lcd.c: 251: PORTDbits.RD0 = 1;
 17515  004E70  8083               	bsf	3971,0,c	;volatile
 17516                           
 17517                           ;display_lcd.c: 252: delay();
 17518  004E72  ECFD  F029         	call	_delay	;wreg free
 17519                           
 17520                           ;display_lcd.c: 253: PORTDbits.RD0 = 0;
 17521  004E76  9083               	bcf	3971,0,c	;volatile
 17522                           
 17523                           ;display_lcd.c: 254: delay();
 17524  004E78  ECFD  F029         	call	_delay	;wreg free
 17525  004E7C  0012               	return		;funcret
 17526  004E7E                     __end_of_endereco_cursor_lcd:
 17527                           	opt stack 0
 17528                           tosu	equ	0xFFF
 17529                           tosh	equ	0xFFE
 17530                           tosl	equ	0xFFD
 17531                           pclath	equ	0xFFA
 17532                           tblptru	equ	0xFF8
 17533                           tblptrh	equ	0xFF7
 17534                           tblptrl	equ	0xFF6
 17535                           tablat	equ	0xFF5
 17536                           prodh	equ	0xFF4
 17537                           prodl	equ	0xFF3
 17538                           intcon	equ	0xFF2
 17539                           intcon2	equ	0xFF1
 17540                           intcon3	equ	0xFF0
 17541                           indf0	equ	0xFEF
 17542                           postinc0	equ	0xFEE
 17543                           fsr0h	equ	0xFEA
 17544                           fsr0l	equ	0xFE9
 17545                           wreg	equ	0xFE8
 17546                           indf1	equ	0xFE7
 17547                           postinc1	equ	0xFE6
 17548                           postdec1	equ	0xFE5
 17549                           fsr1h	equ	0xFE2
 17550                           fsr1l	equ	0xFE1
 17551                           indf2	equ	0xFDF
 17552                           postinc2	equ	0xFDE
 17553                           postdec2	equ	0xFDD
 17554                           plusw2	equ	0xFDB
 17555                           fsr2h	equ	0xFDA
 17556                           fsr2l	equ	0xFD9
 17557                           status	equ	0xFD8
 17558                           
 17559 ;; *************** function _escreve_inteiro_lcd *****************
 17560 ;; Defined at:
 17561 ;;		line 376 in file "bibliotecas/display_lcd.c"
 17562 ;; Parameters:    Size  Location     Type
 17563 ;;  valor           2   45[COMRAM] int 
 17564 ;; Auto vars:     Size  Location     Type
 17565 ;;  texto           7    0[BANK0 ] unsigned char [7]
 17566 ;; Return value:  Size  Location     Type
 17567 ;;                  1    wreg      void 
 17568 ;; Registers used:
 17569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17570 ;; Tracked objects:
 17571 ;;		On entry : 0/0
 17572 ;;		On exit  : 0/0
 17573 ;;		Unchanged: 0/0
 17574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17575 ;;      Params:         2       0       0       0       0       0       0       0       0
 17576 ;;      Locals:         0       7       0       0       0       0       0       0       0
 17577 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17578 ;;      Totals:         2       7       0       0       0       0       0       0       0
 17579 ;;Total ram usage:        9 bytes
 17580 ;; Hardware stack levels used:    1
 17581 ;; Hardware stack levels required when called:    5
 17582 ;; This function calls:
 17583 ;;		_escreve_frase_ram_lcd
 17584 ;;		_itoa
 17585 ;; This function is called by:
 17586 ;;		_sdc_disk_initialize
 17587 ;;		_sdc_disk_read
 17588 ;;		_check_fs
 17589 ;;		_auto_mount
 17590 ;;		_SDCard
 17591 ;;		_escreve_float_lcd
 17592 ;; This function uses a non-reentrant model
 17593 ;;
 17594                           
 17595                           	psect	text53
 17596  00524A                     __ptext53:
 17597                           	opt stack 0
 17598  00524A                     _escreve_inteiro_lcd:
 17599                           	opt stack 16
 17600                           
 17601                           ;display_lcd.c: 378: char texto[7] = "000000";
 17602                           
 17603                           ;incstack = 0
 17604  00524A  EE21  F0E2         	lfsr	2,escreve_inteiro_lcd@F3962
 17605  00524E  EE10  F060         	lfsr	1,escreve_inteiro_lcd@texto
 17606  005252  0E06               	movlw	6
 17607  005254                     u11881:
 17608  005254  CFDB FFE3          	movff	plusw2,plusw1
 17609  005258  06E8               	decf	wreg,f,c
 17610  00525A  E2FC               	bc	u11881
 17611                           
 17612                           ;display_lcd.c: 379: itoa(texto,valor, 10);
 17613  00525C  0E60               	movlw	low escreve_inteiro_lcd@texto
 17614  00525E  6E26               	movwf	itoa@buf,c
 17615  005260  0E00               	movlw	high escreve_inteiro_lcd@texto
 17616  005262  6E27               	movwf	itoa@buf+1,c
 17617  005264  C02E  F028         	movff	escreve_inteiro_lcd@valor,itoa@val
 17618  005268  C02F  F029         	movff	escreve_inteiro_lcd@valor+1,itoa@val+1
 17619  00526C  0E00               	movlw	0
 17620  00526E  6E2B               	movwf	itoa@base+1,c
 17621  005270  0E0A               	movlw	10
 17622  005272  6E2A               	movwf	itoa@base,c
 17623  005274  EC85  F028         	call	_itoa	;wreg free
 17624                           
 17625                           ;display_lcd.c: 380: escreve_frase_ram_lcd(texto);
 17626  005278  0E60               	movlw	low escreve_inteiro_lcd@texto
 17627  00527A  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 17628  00527C  0E00               	movlw	high escreve_inteiro_lcd@texto
 17629  00527E  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 17630  005280  ECEE  F027         	call	_escreve_frase_ram_lcd	;wreg free
 17631  005284  0012               	return		;funcret
 17632  005286                     __end_of_escreve_inteiro_lcd:
 17633                           	opt stack 0
 17634                           tosu	equ	0xFFF
 17635                           tosh	equ	0xFFE
 17636                           tosl	equ	0xFFD
 17637                           pclath	equ	0xFFA
 17638                           tblptru	equ	0xFF8
 17639                           tblptrh	equ	0xFF7
 17640                           tblptrl	equ	0xFF6
 17641                           tablat	equ	0xFF5
 17642                           prodh	equ	0xFF4
 17643                           prodl	equ	0xFF3
 17644                           intcon	equ	0xFF2
 17645                           intcon2	equ	0xFF1
 17646                           intcon3	equ	0xFF0
 17647                           indf0	equ	0xFEF
 17648                           postinc0	equ	0xFEE
 17649                           fsr0h	equ	0xFEA
 17650                           fsr0l	equ	0xFE9
 17651                           wreg	equ	0xFE8
 17652                           indf1	equ	0xFE7
 17653                           postinc1	equ	0xFE6
 17654                           postdec1	equ	0xFE5
 17655                           plusw1	equ	0xFE3
 17656                           fsr1h	equ	0xFE2
 17657                           fsr1l	equ	0xFE1
 17658                           indf2	equ	0xFDF
 17659                           postinc2	equ	0xFDE
 17660                           postdec2	equ	0xFDD
 17661                           plusw2	equ	0xFDB
 17662                           fsr2h	equ	0xFDA
 17663                           fsr2l	equ	0xFD9
 17664                           status	equ	0xFD8
 17665                           
 17666 ;; *************** function _itoa *****************
 17667 ;; Defined at:
 17668 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
 17669 ;; Parameters:    Size  Location     Type
 17670 ;;  buf             2   37[COMRAM] PTR unsigned char 
 17671 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
 17672 ;;  val             2   39[COMRAM] int 
 17673 ;;  base            2   41[COMRAM] int 
 17674 ;; Auto vars:     Size  Location     Type
 17675 ;;  cp              2   43[COMRAM] PTR unsigned char 
 17676 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
 17677 ;; Return value:  Size  Location     Type
 17678 ;;                  2   37[COMRAM] PTR unsigned char 
 17679 ;; Registers used:
 17680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17681 ;; Tracked objects:
 17682 ;;		On entry : 0/0
 17683 ;;		On exit  : 0/0
 17684 ;;		Unchanged: 0/0
 17685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17686 ;;      Params:         6       0       0       0       0       0       0       0       0
 17687 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17688 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17689 ;;      Totals:         8       0       0       0       0       0       0       0       0
 17690 ;;Total ram usage:        8 bytes
 17691 ;; Hardware stack levels used:    1
 17692 ;; Hardware stack levels required when called:    4
 17693 ;; This function calls:
 17694 ;;		_utoa
 17695 ;; This function is called by:
 17696 ;;		_escreve_inteiro_lcd
 17697 ;;		_escreve_inteiro_uart
 17698 ;; This function uses a non-reentrant model
 17699 ;;
 17700                           
 17701                           	psect	text54
 17702  00510A                     __ptext54:
 17703                           	opt stack 0
 17704  00510A                     _itoa:
 17705                           	opt stack 16
 17706                           
 17707                           ;incstack = 0
 17708  00510A  C026  F02C         	movff	itoa@buf,itoa@cp
 17709  00510E  C027  F02D         	movff	itoa@buf+1,itoa@cp+1
 17710  005112  AE29               	btfss	itoa@val+1,7,c
 17711  005114  D00C               	goto	l10546
 17712  005116  C026  FFD9         	movff	itoa@buf,fsr2l
 17713  00511A  C027  FFDA         	movff	itoa@buf+1,fsr2h
 17714  00511E  0E2D               	movlw	45
 17715  005120  6EDF               	movwf	indf2,c
 17716  005122  4A26               	infsnz	itoa@buf,f,c
 17717  005124  2A27               	incf	itoa@buf+1,f,c
 17718  005126  6C28               	negf	itoa@val,c
 17719  005128  1E29               	comf	itoa@val+1,f,c
 17720  00512A  B0D8               	btfsc	status,0,c
 17721  00512C  2A29               	incf	itoa@val+1,f,c
 17722  00512E                     l10546:
 17723  00512E  C026  F01D         	movff	itoa@buf,utoa@buf
 17724  005132  C027  F01E         	movff	itoa@buf+1,utoa@buf+1
 17725  005136  C028  F01F         	movff	itoa@val,utoa@val
 17726  00513A  C029  F020         	movff	itoa@val+1,utoa@val+1
 17727  00513E  C02A  F021         	movff	itoa@base,utoa@base
 17728  005142  C02B  F022         	movff	itoa@base+1,utoa@base+1
 17729  005146  ECDC  F023         	call	_utoa	;wreg free
 17730  00514A  0012               	return	
 17731  00514C                     __end_of_itoa:
 17732                           	opt stack 0
 17733                           tosu	equ	0xFFF
 17734                           tosh	equ	0xFFE
 17735                           tosl	equ	0xFFD
 17736                           pclath	equ	0xFFA
 17737                           tblptru	equ	0xFF8
 17738                           tblptrh	equ	0xFF7
 17739                           tblptrl	equ	0xFF6
 17740                           tablat	equ	0xFF5
 17741                           prodh	equ	0xFF4
 17742                           prodl	equ	0xFF3
 17743                           intcon	equ	0xFF2
 17744                           intcon2	equ	0xFF1
 17745                           intcon3	equ	0xFF0
 17746                           indf0	equ	0xFEF
 17747                           postinc0	equ	0xFEE
 17748                           fsr0h	equ	0xFEA
 17749                           fsr0l	equ	0xFE9
 17750                           wreg	equ	0xFE8
 17751                           indf1	equ	0xFE7
 17752                           postinc1	equ	0xFE6
 17753                           postdec1	equ	0xFE5
 17754                           plusw1	equ	0xFE3
 17755                           fsr1h	equ	0xFE2
 17756                           fsr1l	equ	0xFE1
 17757                           indf2	equ	0xFDF
 17758                           postinc2	equ	0xFDE
 17759                           postdec2	equ	0xFDD
 17760                           plusw2	equ	0xFDB
 17761                           fsr2h	equ	0xFDA
 17762                           fsr2l	equ	0xFD9
 17763                           status	equ	0xFD8
 17764                           
 17765 ;; *************** function _utoa *****************
 17766 ;; Defined at:
 17767 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
 17768 ;; Parameters:    Size  Location     Type
 17769 ;;  buf             2   28[COMRAM] PTR unsigned char 
 17770 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
 17771 ;;  val             2   30[COMRAM] unsigned int 
 17772 ;;  base            2   32[COMRAM] int 
 17773 ;; Auto vars:     Size  Location     Type
 17774 ;;  v               2   34[COMRAM] unsigned int 
 17775 ;;  c               1   36[COMRAM] unsigned char 
 17776 ;; Return value:  Size  Location     Type
 17777 ;;                  2   28[COMRAM] PTR unsigned char 
 17778 ;; Registers used:
 17779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17780 ;; Tracked objects:
 17781 ;;		On entry : 0/0
 17782 ;;		On exit  : 0/0
 17783 ;;		Unchanged: 0/0
 17784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17785 ;;      Params:         6       0       0       0       0       0       0       0       0
 17786 ;;      Locals:         3       0       0       0       0       0       0       0       0
 17787 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17788 ;;      Totals:         9       0       0       0       0       0       0       0       0
 17789 ;;Total ram usage:        9 bytes
 17790 ;; Hardware stack levels used:    1
 17791 ;; Hardware stack levels required when called:    3
 17792 ;; This function calls:
 17793 ;;		___lwdiv
 17794 ;;		___lwmod
 17795 ;; This function is called by:
 17796 ;;		_itoa
 17797 ;; This function uses a non-reentrant model
 17798 ;;
 17799                           
 17800                           	psect	text55
 17801  0047B8                     __ptext55:
 17802                           	opt stack 0
 17803  0047B8                     _utoa:
 17804                           	opt stack 16
 17805                           
 17806                           ;incstack = 0
 17807  0047B8  C01F  F023         	movff	utoa@val,utoa@v
 17808  0047BC  C020  F024         	movff	utoa@val+1,utoa@v+1
 17809  0047C0                     l10414:
 17810  0047C0  C023  F016         	movff	utoa@v,___lwdiv@dividend
 17811  0047C4  C024  F017         	movff	utoa@v+1,___lwdiv@dividend+1
 17812  0047C8  C021  F018         	movff	utoa@base,___lwdiv@divisor
 17813  0047CC  C022  F019         	movff	utoa@base+1,___lwdiv@divisor+1
 17814  0047D0  ECC5  F027         	call	___lwdiv	;wreg free
 17815  0047D4  C016  F023         	movff	?___lwdiv,utoa@v
 17816  0047D8  C017  F024         	movff	?___lwdiv+1,utoa@v+1
 17817  0047DC  4A1D               	infsnz	utoa@buf,f,c
 17818  0047DE  2A1E               	incf	utoa@buf+1,f,c
 17819  0047E0  5023               	movf	utoa@v,w,c
 17820  0047E2  1024               	iorwf	utoa@v+1,w,c
 17821  0047E4  A4D8               	btfss	status,2,c
 17822  0047E6  D7EC               	goto	l10414
 17823  0047E8  C01D  FFD9         	movff	utoa@buf,fsr2l
 17824  0047EC  C01E  FFDA         	movff	utoa@buf+1,fsr2h
 17825  0047F0  0E00               	movlw	0
 17826  0047F2  6EDF               	movwf	indf2,c
 17827  0047F4  061D               	decf	utoa@buf,f,c
 17828  0047F6  A0D8               	btfss	status,0,c
 17829  0047F8  061E               	decf	utoa@buf+1,f,c
 17830  0047FA                     l10424:
 17831  0047FA  C01F  F016         	movff	utoa@val,___lwmod@dividend
 17832  0047FE  C020  F017         	movff	utoa@val+1,___lwmod@dividend+1
 17833  004802  C021  F018         	movff	utoa@base,___lwmod@divisor
 17834  004806  C022  F019         	movff	utoa@base+1,___lwmod@divisor+1
 17835  00480A  ECA6  F028         	call	___lwmod	;wreg free
 17836  00480E  5016               	movf	?___lwmod,w,c
 17837  004810  6E25               	movwf	utoa@c,c
 17838  004812  C01F  F016         	movff	utoa@val,___lwdiv@dividend
 17839  004816  C020  F017         	movff	utoa@val+1,___lwdiv@dividend+1
 17840  00481A  C021  F018         	movff	utoa@base,___lwdiv@divisor
 17841  00481E  C022  F019         	movff	utoa@base+1,___lwdiv@divisor+1
 17842  004822  ECC5  F027         	call	___lwdiv	;wreg free
 17843  004826  C016  F01F         	movff	?___lwdiv,utoa@val
 17844  00482A  C017  F020         	movff	?___lwdiv+1,utoa@val+1
 17845  00482E  0E09               	movlw	9
 17846  004830  6425               	cpfsgt	utoa@c,c
 17847  004832  D002               	goto	l1899
 17848  004834  0E07               	movlw	7
 17849  004836  2625               	addwf	utoa@c,f,c
 17850  004838                     l1899:
 17851  004838  0E30               	movlw	48
 17852  00483A  2625               	addwf	utoa@c,f,c
 17853  00483C  C01D  FFD9         	movff	utoa@buf,fsr2l
 17854  004840  C01E  FFDA         	movff	utoa@buf+1,fsr2h
 17855  004844  C025  FFDF         	movff	utoa@c,indf2
 17856  004848  061D               	decf	utoa@buf,f,c
 17857  00484A  A0D8               	btfss	status,0,c
 17858  00484C  061E               	decf	utoa@buf+1,f,c
 17859  00484E  501F               	movf	utoa@val,w,c
 17860  004850  1020               	iorwf	utoa@val+1,w,c
 17861  004852  A4D8               	btfss	status,2,c
 17862  004854  D7D2               	goto	l10424
 17863                           
 17864                           ;	Return value of _utoa is never used
 17865  004856  4A1D               	infsnz	utoa@buf,f,c
 17866  004858  2A1E               	incf	utoa@buf+1,f,c
 17867  00485A  0012               	return	
 17868  00485C                     __end_of_utoa:
 17869                           	opt stack 0
 17870                           tosu	equ	0xFFF
 17871                           tosh	equ	0xFFE
 17872                           tosl	equ	0xFFD
 17873                           pclath	equ	0xFFA
 17874                           tblptru	equ	0xFF8
 17875                           tblptrh	equ	0xFF7
 17876                           tblptrl	equ	0xFF6
 17877                           tablat	equ	0xFF5
 17878                           prodh	equ	0xFF4
 17879                           prodl	equ	0xFF3
 17880                           intcon	equ	0xFF2
 17881                           intcon2	equ	0xFF1
 17882                           intcon3	equ	0xFF0
 17883                           indf0	equ	0xFEF
 17884                           postinc0	equ	0xFEE
 17885                           fsr0h	equ	0xFEA
 17886                           fsr0l	equ	0xFE9
 17887                           wreg	equ	0xFE8
 17888                           indf1	equ	0xFE7
 17889                           postinc1	equ	0xFE6
 17890                           postdec1	equ	0xFE5
 17891                           plusw1	equ	0xFE3
 17892                           fsr1h	equ	0xFE2
 17893                           fsr1l	equ	0xFE1
 17894                           indf2	equ	0xFDF
 17895                           postinc2	equ	0xFDE
 17896                           postdec2	equ	0xFDD
 17897                           plusw2	equ	0xFDB
 17898                           fsr2h	equ	0xFDA
 17899                           fsr2l	equ	0xFD9
 17900                           status	equ	0xFD8
 17901                           
 17902 ;; *************** function ___lwmod *****************
 17903 ;; Defined at:
 17904 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
 17905 ;; Parameters:    Size  Location     Type
 17906 ;;  dividend        2   21[COMRAM] unsigned int 
 17907 ;;  divisor         2   23[COMRAM] unsigned int 
 17908 ;; Auto vars:     Size  Location     Type
 17909 ;;  counter         1   25[COMRAM] unsigned char 
 17910 ;; Return value:  Size  Location     Type
 17911 ;;                  2   21[COMRAM] unsigned int 
 17912 ;; Registers used:
 17913 ;;		wreg, status,2, status,0
 17914 ;; Tracked objects:
 17915 ;;		On entry : 0/0
 17916 ;;		On exit  : 0/0
 17917 ;;		Unchanged: 0/0
 17918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17919 ;;      Params:         4       0       0       0       0       0       0       0       0
 17920 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17921 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17922 ;;      Totals:         5       0       0       0       0       0       0       0       0
 17923 ;;Total ram usage:        5 bytes
 17924 ;; Hardware stack levels used:    1
 17925 ;; Hardware stack levels required when called:    2
 17926 ;; This function calls:
 17927 ;;		Nothing
 17928 ;; This function is called by:
 17929 ;;		_utoa
 17930 ;;		_converte_inteiro_matriz
 17931 ;; This function uses a non-reentrant model
 17932 ;;
 17933                           
 17934                           	psect	text56
 17935  00514C                     __ptext56:
 17936                           	opt stack 0
 17937  00514C                     ___lwmod:
 17938                           	opt stack 16
 17939                           
 17940                           ;incstack = 0
 17941  00514C  5018               	movf	___lwmod@divisor,w,c
 17942  00514E  1019               	iorwf	___lwmod@divisor+1,w,c
 17943  005150  B4D8               	btfsc	status,2,c
 17944  005152  D018               	goto	l1988
 17945  005154  0E01               	movlw	1
 17946  005156  6E1A               	movwf	___lwmod@counter,c
 17947  005158  D004               	goto	l10366
 17948  00515A                     l10364:
 17949  00515A  90D8               	bcf	status,0,c
 17950  00515C  3618               	rlcf	___lwmod@divisor,f,c
 17951  00515E  3619               	rlcf	___lwmod@divisor+1,f,c
 17952  005160  2A1A               	incf	___lwmod@counter,f,c
 17953  005162                     l10366:
 17954  005162  AE19               	btfss	___lwmod@divisor+1,7,c
 17955  005164  D7FA               	goto	l10364
 17956  005166                     l10368:
 17957  005166  5018               	movf	___lwmod@divisor,w,c
 17958  005168  5C16               	subwf	___lwmod@dividend,w,c
 17959  00516A  5019               	movf	___lwmod@divisor+1,w,c
 17960  00516C  5817               	subwfb	___lwmod@dividend+1,w,c
 17961  00516E  A0D8               	btfss	status,0,c
 17962  005170  D004               	goto	l10372
 17963  005172  5018               	movf	___lwmod@divisor,w,c
 17964  005174  5E16               	subwf	___lwmod@dividend,f,c
 17965  005176  5019               	movf	___lwmod@divisor+1,w,c
 17966  005178  5A17               	subwfb	___lwmod@dividend+1,f,c
 17967  00517A                     l10372:
 17968  00517A  90D8               	bcf	status,0,c
 17969  00517C  3219               	rrcf	___lwmod@divisor+1,f,c
 17970  00517E  3218               	rrcf	___lwmod@divisor,f,c
 17971  005180  2E1A               	decfsz	___lwmod@counter,f,c
 17972  005182  D7F1               	goto	l10368
 17973  005184                     l1988:
 17974  005184  C016  F016         	movff	___lwmod@dividend,?___lwmod
 17975  005188  C017  F017         	movff	___lwmod@dividend+1,?___lwmod+1
 17976  00518C  0012               	return		;funcret
 17977  00518E                     __end_of___lwmod:
 17978                           	opt stack 0
 17979                           tosu	equ	0xFFF
 17980                           tosh	equ	0xFFE
 17981                           tosl	equ	0xFFD
 17982                           pclath	equ	0xFFA
 17983                           tblptru	equ	0xFF8
 17984                           tblptrh	equ	0xFF7
 17985                           tblptrl	equ	0xFF6
 17986                           tablat	equ	0xFF5
 17987                           prodh	equ	0xFF4
 17988                           prodl	equ	0xFF3
 17989                           intcon	equ	0xFF2
 17990                           intcon2	equ	0xFF1
 17991                           intcon3	equ	0xFF0
 17992                           indf0	equ	0xFEF
 17993                           postinc0	equ	0xFEE
 17994                           fsr0h	equ	0xFEA
 17995                           fsr0l	equ	0xFE9
 17996                           wreg	equ	0xFE8
 17997                           indf1	equ	0xFE7
 17998                           postinc1	equ	0xFE6
 17999                           postdec1	equ	0xFE5
 18000                           plusw1	equ	0xFE3
 18001                           fsr1h	equ	0xFE2
 18002                           fsr1l	equ	0xFE1
 18003                           indf2	equ	0xFDF
 18004                           postinc2	equ	0xFDE
 18005                           postdec2	equ	0xFDD
 18006                           plusw2	equ	0xFDB
 18007                           fsr2h	equ	0xFDA
 18008                           fsr2l	equ	0xFD9
 18009                           status	equ	0xFD8
 18010                           
 18011 ;; *************** function ___lwdiv *****************
 18012 ;; Defined at:
 18013 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
 18014 ;; Parameters:    Size  Location     Type
 18015 ;;  dividend        2   21[COMRAM] unsigned int 
 18016 ;;  divisor         2   23[COMRAM] unsigned int 
 18017 ;; Auto vars:     Size  Location     Type
 18018 ;;  quotient        2   26[COMRAM] unsigned int 
 18019 ;;  counter         1   25[COMRAM] unsigned char 
 18020 ;; Return value:  Size  Location     Type
 18021 ;;                  2   21[COMRAM] unsigned int 
 18022 ;; Registers used:
 18023 ;;		wreg, status,2, status,0
 18024 ;; Tracked objects:
 18025 ;;		On entry : 0/0
 18026 ;;		On exit  : 0/0
 18027 ;;		Unchanged: 0/0
 18028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18029 ;;      Params:         4       0       0       0       0       0       0       0       0
 18030 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18031 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18032 ;;      Totals:         7       0       0       0       0       0       0       0       0
 18033 ;;Total ram usage:        7 bytes
 18034 ;; Hardware stack levels used:    1
 18035 ;; Hardware stack levels required when called:    2
 18036 ;; This function calls:
 18037 ;;		Nothing
 18038 ;; This function is called by:
 18039 ;;		_utoa
 18040 ;;		_converte_inteiro_matriz
 18041 ;; This function uses a non-reentrant model
 18042 ;;
 18043                           
 18044                           	psect	text57
 18045  004F8A                     __ptext57:
 18046                           	opt stack 0
 18047  004F8A                     ___lwdiv:
 18048                           	opt stack 16
 18049                           
 18050                           ;incstack = 0
 18051  004F8A  0E00               	movlw	0
 18052  004F8C  6E1C               	movwf	___lwdiv@quotient+1,c
 18053  004F8E  0E00               	movlw	0
 18054  004F90  6E1B               	movwf	___lwdiv@quotient,c
 18055  004F92  5018               	movf	___lwdiv@divisor,w,c
 18056  004F94  1019               	iorwf	___lwdiv@divisor+1,w,c
 18057  004F96  B4D8               	btfsc	status,2,c
 18058  004F98  D01C               	goto	l1978
 18059  004F9A  0E01               	movlw	1
 18060  004F9C  6E1A               	movwf	___lwdiv@counter,c
 18061  004F9E  D004               	goto	l10346
 18062  004FA0                     l10344:
 18063  004FA0  90D8               	bcf	status,0,c
 18064  004FA2  3618               	rlcf	___lwdiv@divisor,f,c
 18065  004FA4  3619               	rlcf	___lwdiv@divisor+1,f,c
 18066  004FA6  2A1A               	incf	___lwdiv@counter,f,c
 18067  004FA8                     l10346:
 18068  004FA8  AE19               	btfss	___lwdiv@divisor+1,7,c
 18069  004FAA  D7FA               	goto	l10344
 18070  004FAC                     l10348:
 18071  004FAC  90D8               	bcf	status,0,c
 18072  004FAE  361B               	rlcf	___lwdiv@quotient,f,c
 18073  004FB0  361C               	rlcf	___lwdiv@quotient+1,f,c
 18074  004FB2  5018               	movf	___lwdiv@divisor,w,c
 18075  004FB4  5C16               	subwf	___lwdiv@dividend,w,c
 18076  004FB6  5019               	movf	___lwdiv@divisor+1,w,c
 18077  004FB8  5817               	subwfb	___lwdiv@dividend+1,w,c
 18078  004FBA  A0D8               	btfss	status,0,c
 18079  004FBC  D005               	goto	l10356
 18080  004FBE  5018               	movf	___lwdiv@divisor,w,c
 18081  004FC0  5E16               	subwf	___lwdiv@dividend,f,c
 18082  004FC2  5019               	movf	___lwdiv@divisor+1,w,c
 18083  004FC4  5A17               	subwfb	___lwdiv@dividend+1,f,c
 18084  004FC6  801B               	bsf	___lwdiv@quotient,0,c
 18085  004FC8                     l10356:
 18086  004FC8  90D8               	bcf	status,0,c
 18087  004FCA  3219               	rrcf	___lwdiv@divisor+1,f,c
 18088  004FCC  3218               	rrcf	___lwdiv@divisor,f,c
 18089  004FCE  2E1A               	decfsz	___lwdiv@counter,f,c
 18090  004FD0  D7ED               	goto	l10348
 18091  004FD2                     l1978:
 18092  004FD2  C01B  F016         	movff	___lwdiv@quotient,?___lwdiv
 18093  004FD6  C01C  F017         	movff	___lwdiv@quotient+1,?___lwdiv+1
 18094  004FDA  0012               	return		;funcret
 18095  004FDC                     __end_of___lwdiv:
 18096                           	opt stack 0
 18097                           tosu	equ	0xFFF
 18098                           tosh	equ	0xFFE
 18099                           tosl	equ	0xFFD
 18100                           pclath	equ	0xFFA
 18101                           tblptru	equ	0xFF8
 18102                           tblptrh	equ	0xFF7
 18103                           tblptrl	equ	0xFF6
 18104                           tablat	equ	0xFF5
 18105                           prodh	equ	0xFF4
 18106                           prodl	equ	0xFF3
 18107                           intcon	equ	0xFF2
 18108                           intcon2	equ	0xFF1
 18109                           intcon3	equ	0xFF0
 18110                           indf0	equ	0xFEF
 18111                           postinc0	equ	0xFEE
 18112                           fsr0h	equ	0xFEA
 18113                           fsr0l	equ	0xFE9
 18114                           wreg	equ	0xFE8
 18115                           indf1	equ	0xFE7
 18116                           postinc1	equ	0xFE6
 18117                           postdec1	equ	0xFE5
 18118                           plusw1	equ	0xFE3
 18119                           fsr1h	equ	0xFE2
 18120                           fsr1l	equ	0xFE1
 18121                           indf2	equ	0xFDF
 18122                           postinc2	equ	0xFDE
 18123                           postdec2	equ	0xFDD
 18124                           plusw2	equ	0xFDB
 18125                           fsr2h	equ	0xFDA
 18126                           fsr2l	equ	0xFD9
 18127                           status	equ	0xFD8
 18128                           
 18129 ;; *************** function _escreve_frase_ram_lcd *****************
 18130 ;; Defined at:
 18131 ;;		line 445 in file "bibliotecas/display_lcd.c"
 18132 ;; Parameters:    Size  Location     Type
 18133 ;;  buffer          2   24[COMRAM] PTR unsigned char 
 18134 ;;		 -> STR_41(5), STR_40(18), buff(20), STR_39(10), 
 18135 ;;		 -> STR_37(16), STR_36(16), mensagem_inicial@msg_dois(17), mensagem_inicial@msg_linha_um(17), 
 18136 ;;		 -> STR_34(19), STR_33(19), STR_32(19), STR_30(16), 
 18137 ;;		 -> STR_29(16), STR_27(19), STR_24(17), STR_22(19), 
 18138 ;;		 -> STR_21(12), escreve_inteiro_lcd@texto(7), RAM(2047), STR_20(19), 
 18139 ;;		 -> STR_19(16), STR_18(16), STR_17(14), STR_16(19), 
 18140 ;;		 -> STR_15(17), STR_14(16), STR_13(17), STR_12(17), 
 18141 ;;		 -> STR_11(17), STR_10(17), STR_9(16), STR_8(17), 
 18142 ;;		 -> STR_6(5), STR_4(5), gps@gps_buffer(15), dado_buffer(7), 
 18143 ;;		 -> STR_2(6), data_buffer(15), STR_1(6), 
 18144 ;; Auto vars:     Size  Location     Type
 18145 ;;		None
 18146 ;; Return value:  Size  Location     Type
 18147 ;;                  1    wreg      void 
 18148 ;; Registers used:
 18149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18150 ;; Tracked objects:
 18151 ;;		On entry : 0/0
 18152 ;;		On exit  : 0/0
 18153 ;;		Unchanged: 0/0
 18154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18155 ;;      Params:         2       0       0       0       0       0       0       0       0
 18156 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18157 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18158 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18159 ;;Total ram usage:        2 bytes
 18160 ;; Hardware stack levels used:    1
 18161 ;; Hardware stack levels required when called:    4
 18162 ;; This function calls:
 18163 ;;		_escreve_caractere_lcd
 18164 ;; This function is called by:
 18165 ;;		_sdc_disk_initialize
 18166 ;;		_sdc_disk_read
 18167 ;;		_sdc_disk_write
 18168 ;;		_escreve_inteiro_lcd
 18169 ;;		_check_fs
 18170 ;;		_auto_mount
 18171 ;;		_mensagem_inicial
 18172 ;;		_SDCard
 18173 ;;		_gps
 18174 ;; This function uses a non-reentrant model
 18175 ;;
 18176                           
 18177                           	psect	text58
 18178  004FDC                     __ptext58:
 18179                           	opt stack 0
 18180  004FDC                     _escreve_frase_ram_lcd:
 18181                           	opt stack 25
 18182                           
 18183                           ;display_lcd.c: 447: while(*buffer)
 18184                           
 18185                           ;incstack = 0
 18186  004FDC  D014               	goto	l10448
 18187  004FDE                     l10444:
 18188                           
 18189                           ;display_lcd.c: 448: {
 18190                           ;display_lcd.c: 449: escreve_caractere_lcd(*buffer);
 18191  004FDE  C019  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 18192  004FE2  C01A  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 18193  004FE6  6AF8               	clrf	tblptru,c
 18194  004FE8  0E07               	movlw	(high __ramtop+-1)
 18195  004FEA  64F7               	cpfsgt	tblptrh,c
 18196  004FEC  D003               	bra	u11707
 18197  004FEE  0008               	tblrd		*
 18198  004FF0  50F5               	movf	tablat,w,c
 18199  004FF2  D005               	bra	u11700
 18200  004FF4                     u11707:
 18201  004FF4  CFF6 FFE9          	movff	tblptrl,fsr0l
 18202  004FF8  CFF7 FFEA          	movff	tblptrh,fsr0h
 18203  004FFC  50EF               	movf	indf0,w,c
 18204  004FFE                     u11700:
 18205  004FFE  EC99  F026         	call	_escreve_caractere_lcd
 18206                           
 18207                           ;display_lcd.c: 450: buffer++;
 18208  005002  4A19               	infsnz	escreve_frase_ram_lcd@buffer,f,c
 18209  005004  2A1A               	incf	escreve_frase_ram_lcd@buffer+1,f,c
 18210  005006                     l10448:
 18211  005006  C019  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 18212  00500A  C01A  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 18213  00500E  6AF8               	clrf	tblptru,c
 18214  005010  0E07               	movlw	(high __ramtop+-1)
 18215  005012  64F7               	cpfsgt	tblptrh,c
 18216  005014  D003               	bra	u11717
 18217  005016  0008               	tblrd		*
 18218  005018  50F5               	movf	tablat,w,c
 18219  00501A  D005               	bra	u11710
 18220  00501C                     u11717:
 18221  00501C  CFF6 FFE9          	movff	tblptrl,fsr0l
 18222  005020  CFF7 FFEA          	movff	tblptrh,fsr0h
 18223  005024  50EF               	movf	indf0,w,c
 18224  005026                     u11710:
 18225  005026  0900               	iorlw	0
 18226  005028  B4D8               	btfsc	status,2,c
 18227  00502A  0012               	return	
 18228  00502C  D7D8               	goto	l10444
 18229  00502E                     __end_of_escreve_frase_ram_lcd:
 18230                           	opt stack 0
 18231                           tosu	equ	0xFFF
 18232                           tosh	equ	0xFFE
 18233                           tosl	equ	0xFFD
 18234                           pclath	equ	0xFFA
 18235                           tblptru	equ	0xFF8
 18236                           tblptrh	equ	0xFF7
 18237                           tblptrl	equ	0xFF6
 18238                           tablat	equ	0xFF5
 18239                           prodh	equ	0xFF4
 18240                           prodl	equ	0xFF3
 18241                           intcon	equ	0xFF2
 18242                           intcon2	equ	0xFF1
 18243                           intcon3	equ	0xFF0
 18244                           indf0	equ	0xFEF
 18245                           postinc0	equ	0xFEE
 18246                           fsr0h	equ	0xFEA
 18247                           fsr0l	equ	0xFE9
 18248                           wreg	equ	0xFE8
 18249                           indf1	equ	0xFE7
 18250                           postinc1	equ	0xFE6
 18251                           postdec1	equ	0xFE5
 18252                           plusw1	equ	0xFE3
 18253                           fsr1h	equ	0xFE2
 18254                           fsr1l	equ	0xFE1
 18255                           indf2	equ	0xFDF
 18256                           postinc2	equ	0xFDE
 18257                           postdec2	equ	0xFDD
 18258                           plusw2	equ	0xFDB
 18259                           fsr2h	equ	0xFDA
 18260                           fsr2l	equ	0xFD9
 18261                           status	equ	0xFD8
 18262                           
 18263 ;; *************** function _escreve_caractere_lcd *****************
 18264 ;; Defined at:
 18265 ;;		line 323 in file "bibliotecas/display_lcd.c"
 18266 ;; Parameters:    Size  Location     Type
 18267 ;;  data            1    wreg     unsigned char 
 18268 ;; Auto vars:     Size  Location     Type
 18269 ;;  data            1   23[COMRAM] unsigned char 
 18270 ;; Return value:  Size  Location     Type
 18271 ;;                  1    wreg      void 
 18272 ;; Registers used:
 18273 ;;		wreg, status,2, status,0, cstack
 18274 ;; Tracked objects:
 18275 ;;		On entry : 0/0
 18276 ;;		On exit  : 0/0
 18277 ;;		Unchanged: 0/0
 18278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18279 ;;      Params:         0       0       0       0       0       0       0       0       0
 18280 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18281 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18282 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18283 ;;Total ram usage:        1 bytes
 18284 ;; Hardware stack levels used:    1
 18285 ;; Hardware stack levels required when called:    3
 18286 ;; This function calls:
 18287 ;;		_delay
 18288 ;; This function is called by:
 18289 ;;		_escreve_frase_ram_lcd
 18290 ;;		_escreve_float_lcd
 18291 ;;		_escreve_frase_lcd
 18292 ;;		_cria_caractere_lcd
 18293 ;; This function uses a non-reentrant model
 18294 ;;
 18295                           
 18296                           	psect	text59
 18297  004D32                     __ptext59:
 18298                           	opt stack 0
 18299  004D32                     _escreve_caractere_lcd:
 18300                           	opt stack 25
 18301                           
 18302                           ;incstack = 0
 18303                           ;escreve_caractere_lcd@data stored from wreg
 18304  004D32  6E18               	movwf	escreve_caractere_lcd@data,c
 18305                           
 18306                           ;display_lcd.c: 326: PORTDbits.RD2 = 0;
 18307  004D34  9483               	bcf	3971,2,c	;volatile
 18308                           
 18309                           ;display_lcd.c: 327: PORTDbits.RD1 = 1;
 18310  004D36  8283               	bsf	3971,1,c	;volatile
 18311                           
 18312                           ;display_lcd.c: 328: PORTDbits.RD0 = 0;
 18313  004D38  9083               	bcf	3971,0,c	;volatile
 18314                           
 18315                           ;display_lcd.c: 331: if(data&0b00010000){PORTDbits.RD4=1;}
 18316  004D3A  A818               	btfss	escreve_caractere_lcd@data,4,c
 18317  004D3C  D002               	goto	l372
 18318  004D3E  8883               	bsf	3971,4,c	;volatile
 18319  004D40  D001               	goto	l10382
 18320  004D42                     l372:
 18321                           
 18322                           ;display_lcd.c: 332: else {PORTDbits.RD4=0;}
 18323  004D42  9883               	bcf	3971,4,c	;volatile
 18324  004D44                     l10382:
 18325                           
 18326                           ;display_lcd.c: 333: if(data&0b00100000){PORTDbits.RD5=1;}
 18327  004D44  AA18               	btfss	escreve_caractere_lcd@data,5,c
 18328  004D46  D002               	goto	l374
 18329  004D48  8A83               	bsf	3971,5,c	;volatile
 18330  004D4A  D001               	goto	l10386
 18331  004D4C                     l374:
 18332                           
 18333                           ;display_lcd.c: 334: else {PORTDbits.RD5=0;}
 18334  004D4C  9A83               	bcf	3971,5,c	;volatile
 18335  004D4E                     l10386:
 18336                           
 18337                           ;display_lcd.c: 335: if(data&0b01000000){PORTDbits.RD6=1;}
 18338  004D4E  AC18               	btfss	escreve_caractere_lcd@data,6,c
 18339  004D50  D002               	goto	l376
 18340  004D52  8C83               	bsf	3971,6,c	;volatile
 18341  004D54  D001               	goto	l10390
 18342  004D56                     l376:
 18343                           
 18344                           ;display_lcd.c: 336: else {PORTDbits.RD6=0;}
 18345  004D56  9C83               	bcf	3971,6,c	;volatile
 18346  004D58                     l10390:
 18347                           
 18348                           ;display_lcd.c: 337: if(data&0b10000000){PORTDbits.RD7=1;}
 18349  004D58  AE18               	btfss	escreve_caractere_lcd@data,7,c
 18350  004D5A  D002               	goto	l378
 18351  004D5C  8E83               	bsf	3971,7,c	;volatile
 18352  004D5E  D001               	goto	l379
 18353  004D60                     l378:
 18354                           
 18355                           ;display_lcd.c: 338: else {PORTDbits.RD7=0;}
 18356  004D60  9E83               	bcf	3971,7,c	;volatile
 18357  004D62                     l379:
 18358                           
 18359                           ;display_lcd.c: 341: PORTDbits.RD0 = 1;
 18360  004D62  8083               	bsf	3971,0,c	;volatile
 18361                           
 18362                           ;display_lcd.c: 342: delay();
 18363  004D64  ECFD  F029         	call	_delay	;wreg free
 18364                           
 18365                           ;display_lcd.c: 343: PORTDbits.RD0 = 0;
 18366  004D68  9083               	bcf	3971,0,c	;volatile
 18367                           
 18368                           ;display_lcd.c: 344: delay();
 18369  004D6A  ECFD  F029         	call	_delay	;wreg free
 18370                           
 18371                           ;display_lcd.c: 348: if(data&0b00000001){PORTDbits.RD4=1;}
 18372  004D6E  A018               	btfss	escreve_caractere_lcd@data,0,c
 18373  004D70  D002               	goto	l380
 18374  004D72  8883               	bsf	3971,4,c	;volatile
 18375  004D74  D001               	goto	l381
 18376  004D76                     l380:
 18377                           
 18378                           ;display_lcd.c: 349: else {PORTDbits.RD4=0;}
 18379  004D76  9883               	bcf	3971,4,c	;volatile
 18380  004D78                     l381:
 18381                           
 18382                           ;display_lcd.c: 350: if(data&0b00000010){PORTDbits.RD5=1;}
 18383  004D78  A218               	btfss	escreve_caractere_lcd@data,1,c
 18384  004D7A  D002               	goto	l382
 18385  004D7C  8A83               	bsf	3971,5,c	;volatile
 18386  004D7E  D001               	goto	l383
 18387  004D80                     l382:
 18388                           
 18389                           ;display_lcd.c: 351: else {PORTDbits.RD5=0;}
 18390  004D80  9A83               	bcf	3971,5,c	;volatile
 18391  004D82                     l383:
 18392                           
 18393                           ;display_lcd.c: 352: if(data&0b00000100){PORTDbits.RD6=1;}
 18394  004D82  A418               	btfss	escreve_caractere_lcd@data,2,c
 18395  004D84  D002               	goto	l384
 18396  004D86  8C83               	bsf	3971,6,c	;volatile
 18397  004D88  D001               	goto	l385
 18398  004D8A                     l384:
 18399                           
 18400                           ;display_lcd.c: 353: else {PORTDbits.RD6=0;}
 18401  004D8A  9C83               	bcf	3971,6,c	;volatile
 18402  004D8C                     l385:
 18403                           
 18404                           ;display_lcd.c: 354: if(data&0b00001000){PORTDbits.RD7=1;}
 18405  004D8C  A618               	btfss	escreve_caractere_lcd@data,3,c
 18406  004D8E  D002               	goto	l386
 18407  004D90  8E83               	bsf	3971,7,c	;volatile
 18408  004D92  D001               	goto	l387
 18409  004D94                     l386:
 18410                           
 18411                           ;display_lcd.c: 355: else {PORTDbits.RD7=0;}
 18412  004D94  9E83               	bcf	3971,7,c	;volatile
 18413  004D96                     l387:
 18414                           
 18415                           ;display_lcd.c: 358: PORTDbits.RD0 = 1;
 18416  004D96  8083               	bsf	3971,0,c	;volatile
 18417                           
 18418                           ;display_lcd.c: 359: delay();
 18419  004D98  ECFD  F029         	call	_delay	;wreg free
 18420                           
 18421                           ;display_lcd.c: 360: PORTDbits.RD0 = 0;
 18422  004D9C  9083               	bcf	3971,0,c	;volatile
 18423                           
 18424                           ;display_lcd.c: 361: delay();
 18425  004D9E  ECFD  F029         	call	_delay	;wreg free
 18426  004DA2  0012               	return		;funcret
 18427  004DA4                     __end_of_escreve_caractere_lcd:
 18428                           	opt stack 0
 18429                           tosu	equ	0xFFF
 18430                           tosh	equ	0xFFE
 18431                           tosl	equ	0xFFD
 18432                           pclath	equ	0xFFA
 18433                           tblptru	equ	0xFF8
 18434                           tblptrh	equ	0xFF7
 18435                           tblptrl	equ	0xFF6
 18436                           tablat	equ	0xFF5
 18437                           prodh	equ	0xFF4
 18438                           prodl	equ	0xFF3
 18439                           intcon	equ	0xFF2
 18440                           intcon2	equ	0xFF1
 18441                           intcon3	equ	0xFF0
 18442                           indf0	equ	0xFEF
 18443                           postinc0	equ	0xFEE
 18444                           fsr0h	equ	0xFEA
 18445                           fsr0l	equ	0xFE9
 18446                           wreg	equ	0xFE8
 18447                           indf1	equ	0xFE7
 18448                           postinc1	equ	0xFE6
 18449                           postdec1	equ	0xFE5
 18450                           plusw1	equ	0xFE3
 18451                           fsr1h	equ	0xFE2
 18452                           fsr1l	equ	0xFE1
 18453                           indf2	equ	0xFDF
 18454                           postinc2	equ	0xFDE
 18455                           postdec2	equ	0xFDD
 18456                           plusw2	equ	0xFDB
 18457                           fsr2h	equ	0xFDA
 18458                           fsr2l	equ	0xFD9
 18459                           status	equ	0xFD8
 18460                           
 18461 ;; *************** function _delay *****************
 18462 ;; Defined at:
 18463 ;;		line 45 in file "bibliotecas/display_lcd.c"
 18464 ;; Parameters:    Size  Location     Type
 18465 ;;		None
 18466 ;; Auto vars:     Size  Location     Type
 18467 ;;  contador_int    1   22[COMRAM] unsigned char 
 18468 ;;  contador_ext    1   21[COMRAM] unsigned char 
 18469 ;; Return value:  Size  Location     Type
 18470 ;;                  1    wreg      void 
 18471 ;; Registers used:
 18472 ;;		wreg, status,2, status,0
 18473 ;; Tracked objects:
 18474 ;;		On entry : 0/0
 18475 ;;		On exit  : 0/0
 18476 ;;		Unchanged: 0/0
 18477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18478 ;;      Params:         0       0       0       0       0       0       0       0       0
 18479 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18480 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18481 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18482 ;;Total ram usage:        2 bytes
 18483 ;; Hardware stack levels used:    1
 18484 ;; Hardware stack levels required when called:    2
 18485 ;; This function calls:
 18486 ;;		Nothing
 18487 ;; This function is called by:
 18488 ;;		_init_lcd
 18489 ;;		_escreve_cmd_lcd
 18490 ;;		_endereco_cursor_lcd
 18491 ;;		_escreve_caractere_lcd
 18492 ;; This function uses a non-reentrant model
 18493 ;;
 18494                           
 18495                           	psect	text60
 18496  0053FA                     __ptext60:
 18497                           	opt stack 0
 18498  0053FA                     _delay:
 18499                           	opt stack 25
 18500                           
 18501                           ;display_lcd.c: 47: unsigned char contador_ext, contador_int;
 18502                           ;display_lcd.c: 49: for(contador_ext = 0; contador_ext<100; contador_ext++)
 18503                           
 18504                           ;incstack = 0
 18505  0053FA  0E00               	movlw	0
 18506  0053FC  6E16               	movwf	delay@contador_ext,c
 18507  0053FE                     l10320:
 18508  0053FE  0E63               	movlw	99
 18509  005400  6416               	cpfsgt	delay@contador_ext,c
 18510  005402  D001               	goto	l311
 18511  005404  0012               	return	
 18512  005406                     l311:
 18513                           
 18514                           ;display_lcd.c: 50: {
 18515                           ;display_lcd.c: 51: __nop();
 18516  005406  F000               	nop	
 18517                           
 18518                           ;display_lcd.c: 52: for(contador_int = 0; contador_int<50; contador_int++)
 18519  005408  0E00               	movlw	0
 18520  00540A  6E17               	movwf	delay@contador_int,c
 18521  00540C                     l10326:
 18522  00540C  0E31               	movlw	49
 18523  00540E  6417               	cpfsgt	delay@contador_int,c
 18524  005410  D001               	goto	l313
 18525  005412  D003               	goto	l10334
 18526  005414                     l313:
 18527                           
 18528                           ;display_lcd.c: 53: {
 18529                           ;display_lcd.c: 54: __nop();
 18530  005414  F000               	nop	
 18531  005416  2A17               	incf	delay@contador_int,f,c
 18532  005418  D7F9               	goto	l10326
 18533  00541A                     l10334:
 18534  00541A  2A16               	incf	delay@contador_ext,f,c
 18535  00541C  D7F0               	goto	l10320
 18536  00541E                     __end_of_delay:
 18537                           	opt stack 0
 18538                           tosu	equ	0xFFF
 18539                           tosh	equ	0xFFE
 18540                           tosl	equ	0xFFD
 18541                           pclath	equ	0xFFA
 18542                           tblptru	equ	0xFF8
 18543                           tblptrh	equ	0xFF7
 18544                           tblptrl	equ	0xFF6
 18545                           tablat	equ	0xFF5
 18546                           prodh	equ	0xFF4
 18547                           prodl	equ	0xFF3
 18548                           intcon	equ	0xFF2
 18549                           intcon2	equ	0xFF1
 18550                           intcon3	equ	0xFF0
 18551                           indf0	equ	0xFEF
 18552                           postinc0	equ	0xFEE
 18553                           fsr0h	equ	0xFEA
 18554                           fsr0l	equ	0xFE9
 18555                           wreg	equ	0xFE8
 18556                           indf1	equ	0xFE7
 18557                           postinc1	equ	0xFE6
 18558                           postdec1	equ	0xFE5
 18559                           plusw1	equ	0xFE3
 18560                           fsr1h	equ	0xFE2
 18561                           fsr1l	equ	0xFE1
 18562                           indf2	equ	0xFDF
 18563                           postinc2	equ	0xFDE
 18564                           postdec2	equ	0xFDD
 18565                           plusw2	equ	0xFDB
 18566                           fsr2h	equ	0xFDA
 18567                           fsr2l	equ	0xFD9
 18568                           status	equ	0xFD8
 18569                           
 18570 ;; *************** function _dummy_clocks *****************
 18571 ;; Defined at:
 18572 ;;		line 76 in file "bibliotecas/SDCard.c"
 18573 ;; Parameters:    Size  Location     Type
 18574 ;;  n               1    wreg     unsigned char 
 18575 ;; Auto vars:     Size  Location     Type
 18576 ;;  n               1   25[COMRAM] unsigned char 
 18577 ;;  i               2   26[COMRAM] unsigned int 
 18578 ;; Return value:  Size  Location     Type
 18579 ;;                  1    wreg      void 
 18580 ;; Registers used:
 18581 ;;		wreg, status,2, status,0, cstack
 18582 ;; Tracked objects:
 18583 ;;		On entry : 0/0
 18584 ;;		On exit  : 0/0
 18585 ;;		Unchanged: 0/0
 18586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18587 ;;      Params:         0       0       0       0       0       0       0       0       0
 18588 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18589 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18590 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18591 ;;Total ram usage:        5 bytes
 18592 ;; Hardware stack levels used:    1
 18593 ;; Hardware stack levels required when called:    3
 18594 ;; This function calls:
 18595 ;;		_escreve_dado_SPI
 18596 ;; This function is called by:
 18597 ;;		_sdc_disk_initialize
 18598 ;;		_sdc_disk_read
 18599 ;;		_sdc_disk_write
 18600 ;; This function uses a non-reentrant model
 18601 ;;
 18602                           
 18603                           	psect	text61
 18604  00520C                     __ptext61:
 18605                           	opt stack 0
 18606  00520C                     _dummy_clocks:
 18607                           	opt stack 18
 18608                           
 18609                           ;incstack = 0
 18610                           ;dummy_clocks@n stored from wreg
 18611  00520C  6E1A               	movwf	dummy_clocks@n,c
 18612                           
 18613                           ;SDCard.c: 78: unsigned int i;
 18614                           ;SDCard.c: 79: _delay((unsigned long)((1)*(48000000/4000.0)));
 18615  00520E  0E10               	movlw	16
 18616  005210  6E18               	movwf	??_dummy_clocks& (0+255),c
 18617  005212  0E94               	movlw	148
 18618  005214                     u17057:
 18619  005214  2EE8               	decfsz	wreg,f,c
 18620  005216  D7FE               	bra	u17057
 18621  005218  2E18               	decfsz	??_dummy_clocks& (0+255),f,c
 18622  00521A  D7FC               	bra	u17057
 18623  00521C  D000               	nop2	
 18624                           
 18625                           ;SDCard.c: 81: for(i=0;i<n;i++)
 18626  00521E  0E00               	movlw	0
 18627  005220  6E1C               	movwf	dummy_clocks@i+1,c
 18628  005222  0E00               	movlw	0
 18629  005224  6E1B               	movwf	dummy_clocks@i,c
 18630  005226  D007               	goto	l10590
 18631  005228                     l1312:
 18632                           
 18633                           ;SDCard.c: 82: {
 18634                           ;SDCard.c: 83: LATBbits.LATB4 = 1;
 18635  005228  888A               	bsf	3978,4,c	;volatile
 18636                           
 18637                           ;SDCard.c: 84: escreve_dado_SPI(0XFF);
 18638  00522A  0EFF               	movlw	255
 18639  00522C  EC62  F028         	call	_escreve_dado_SPI
 18640                           
 18641                           ;SDCard.c: 85: LATBbits.LATB4 = 0;
 18642  005230  988A               	bcf	3978,4,c	;volatile
 18643  005232  4A1B               	infsnz	dummy_clocks@i,f,c
 18644  005234  2A1C               	incf	dummy_clocks@i+1,f,c
 18645  005236                     l10590:
 18646  005236  501A               	movf	dummy_clocks@n,w,c
 18647  005238  6E18               	movwf	??_dummy_clocks& (0+255),c
 18648  00523A  6A19               	clrf	(??_dummy_clocks+1)& (0+255),c
 18649  00523C  5018               	movf	??_dummy_clocks,w,c
 18650  00523E  5C1B               	subwf	dummy_clocks@i,w,c
 18651  005240  5019               	movf	??_dummy_clocks+1,w,c
 18652  005242  581C               	subwfb	dummy_clocks@i+1,w,c
 18653  005244  B0D8               	btfsc	status,0,c
 18654  005246  0012               	return	
 18655  005248  D7EF               	goto	l1312
 18656  00524A                     __end_of_dummy_clocks:
 18657                           	opt stack 0
 18658                           tosu	equ	0xFFF
 18659                           tosh	equ	0xFFE
 18660                           tosl	equ	0xFFD
 18661                           pclath	equ	0xFFA
 18662                           tblptru	equ	0xFF8
 18663                           tblptrh	equ	0xFF7
 18664                           tblptrl	equ	0xFF6
 18665                           tablat	equ	0xFF5
 18666                           prodh	equ	0xFF4
 18667                           prodl	equ	0xFF3
 18668                           intcon	equ	0xFF2
 18669                           intcon2	equ	0xFF1
 18670                           intcon3	equ	0xFF0
 18671                           indf0	equ	0xFEF
 18672                           postinc0	equ	0xFEE
 18673                           fsr0h	equ	0xFEA
 18674                           fsr0l	equ	0xFE9
 18675                           wreg	equ	0xFE8
 18676                           indf1	equ	0xFE7
 18677                           postinc1	equ	0xFE6
 18678                           postdec1	equ	0xFE5
 18679                           plusw1	equ	0xFE3
 18680                           fsr1h	equ	0xFE2
 18681                           fsr1l	equ	0xFE1
 18682                           indf2	equ	0xFDF
 18683                           postinc2	equ	0xFDE
 18684                           postdec2	equ	0xFDD
 18685                           plusw2	equ	0xFDB
 18686                           fsr2h	equ	0xFDA
 18687                           fsr2l	equ	0xFD9
 18688                           status	equ	0xFD8
 18689                           
 18690 ;; *************** function _command *****************
 18691 ;; Defined at:
 18692 ;;		line 115 in file "bibliotecas/SDCard.c"
 18693 ;; Parameters:    Size  Location     Type
 18694 ;;  CMD             1    wreg     unsigned char 
 18695 ;;  arg             4   23[COMRAM] unsigned long 
 18696 ;;  CRC             1   27[COMRAM] unsigned char 
 18697 ;; Auto vars:     Size  Location     Type
 18698 ;;  CMD             1   28[COMRAM] unsigned char 
 18699 ;;  argument        1   29[COMRAM] unsigned char 
 18700 ;; Return value:  Size  Location     Type
 18701 ;;                  1    wreg      void 
 18702 ;; Registers used:
 18703 ;;		wreg, status,2, status,0, cstack
 18704 ;; Tracked objects:
 18705 ;;		On entry : 0/0
 18706 ;;		On exit  : 0/0
 18707 ;;		Unchanged: 0/0
 18708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18709 ;;      Params:         5       0       0       0       0       0       0       0       0
 18710 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18711 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18712 ;;      Totals:         7       0       0       0       0       0       0       0       0
 18713 ;;Total ram usage:        7 bytes
 18714 ;; Hardware stack levels used:    1
 18715 ;; Hardware stack levels required when called:    3
 18716 ;; This function calls:
 18717 ;;		_escreve_dado_SPI
 18718 ;; This function is called by:
 18719 ;;		_sdc_disk_initialize
 18720 ;;		_sdc_disk_read
 18721 ;;		_sdc_disk_write
 18722 ;; This function uses a non-reentrant model
 18723 ;;
 18724                           
 18725                           	psect	text62
 18726  0052C0                     __ptext62:
 18727                           	opt stack 0
 18728  0052C0                     _command:
 18729                           	opt stack 18
 18730                           
 18731                           ;incstack = 0
 18732                           ;command@CMD stored from wreg
 18733  0052C0  6E1D               	movwf	command@CMD,c
 18734                           
 18735                           ;SDCard.c: 117: unsigned char argument;
 18736                           ;SDCard.c: 119: escreve_dado_SPI(CMD);
 18737  0052C2  501D               	movf	command@CMD,w,c
 18738  0052C4  EC62  F028         	call	_escreve_dado_SPI
 18739                           
 18740                           ;SDCard.c: 120: argument = arg>>24;
 18741  0052C8  C01B  F01E         	movff	command@arg+3,command@argument
 18742                           
 18743                           ;SDCard.c: 121: escreve_dado_SPI(argument);
 18744  0052CC  501E               	movf	command@argument,w,c
 18745  0052CE  EC62  F028         	call	_escreve_dado_SPI
 18746                           
 18747                           ;SDCard.c: 122: argument = arg>>16;
 18748  0052D2  C01A  F01E         	movff	command@arg+2,command@argument
 18749                           
 18750                           ;SDCard.c: 123: escreve_dado_SPI(argument);
 18751  0052D6  501E               	movf	command@argument,w,c
 18752  0052D8  EC62  F028         	call	_escreve_dado_SPI
 18753                           
 18754                           ;SDCard.c: 124: argument = arg>>8;
 18755  0052DC  C019  F01E         	movff	command@arg+1,command@argument
 18756                           
 18757                           ;SDCard.c: 125: escreve_dado_SPI(argument);
 18758  0052E0  501E               	movf	command@argument,w,c
 18759  0052E2  EC62  F028         	call	_escreve_dado_SPI
 18760                           
 18761                           ;SDCard.c: 126: argument = arg;
 18762  0052E6  C018  F01E         	movff	command@arg,command@argument
 18763                           
 18764                           ;SDCard.c: 127: escreve_dado_SPI(argument);
 18765  0052EA  501E               	movf	command@argument,w,c
 18766  0052EC  EC62  F028         	call	_escreve_dado_SPI
 18767                           
 18768                           ;SDCard.c: 128: escreve_dado_SPI(CRC);
 18769  0052F0  501C               	movf	command@CRC,w,c
 18770  0052F2  EC62  F028         	call	_escreve_dado_SPI
 18771  0052F6  0012               	return		;funcret
 18772  0052F8                     __end_of_command:
 18773                           	opt stack 0
 18774                           tosu	equ	0xFFF
 18775                           tosh	equ	0xFFE
 18776                           tosl	equ	0xFFD
 18777                           pclath	equ	0xFFA
 18778                           tblptru	equ	0xFF8
 18779                           tblptrh	equ	0xFF7
 18780                           tblptrl	equ	0xFF6
 18781                           tablat	equ	0xFF5
 18782                           prodh	equ	0xFF4
 18783                           prodl	equ	0xFF3
 18784                           intcon	equ	0xFF2
 18785                           intcon2	equ	0xFF1
 18786                           intcon3	equ	0xFF0
 18787                           indf0	equ	0xFEF
 18788                           postinc0	equ	0xFEE
 18789                           fsr0h	equ	0xFEA
 18790                           fsr0l	equ	0xFE9
 18791                           wreg	equ	0xFE8
 18792                           indf1	equ	0xFE7
 18793                           postinc1	equ	0xFE6
 18794                           postdec1	equ	0xFE5
 18795                           plusw1	equ	0xFE3
 18796                           fsr1h	equ	0xFE2
 18797                           fsr1l	equ	0xFE1
 18798                           indf2	equ	0xFDF
 18799                           postinc2	equ	0xFDE
 18800                           postdec2	equ	0xFDD
 18801                           plusw2	equ	0xFDB
 18802                           fsr2h	equ	0xFDA
 18803                           fsr2l	equ	0xFD9
 18804                           status	equ	0xFD8
 18805                           
 18806 ;; *************** function _escreve_dado_SPI *****************
 18807 ;; Defined at:
 18808 ;;		line 67 in file "bibliotecas/SHRC.c"
 18809 ;; Parameters:    Size  Location     Type
 18810 ;;  data_to_shrc    1    wreg     unsigned char 
 18811 ;; Auto vars:     Size  Location     Type
 18812 ;;  data_to_shrc    1   22[COMRAM] unsigned char 
 18813 ;;  contador        1   21[COMRAM] unsigned char 
 18814 ;; Return value:  Size  Location     Type
 18815 ;;                  1    wreg      void 
 18816 ;; Registers used:
 18817 ;;		wreg, status,2, status,0
 18818 ;; Tracked objects:
 18819 ;;		On entry : 0/0
 18820 ;;		On exit  : 0/0
 18821 ;;		Unchanged: 0/0
 18822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18823 ;;      Params:         0       0       0       0       0       0       0       0       0
 18824 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18825 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18826 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18827 ;;Total ram usage:        2 bytes
 18828 ;; Hardware stack levels used:    1
 18829 ;; Hardware stack levels required when called:    2
 18830 ;; This function calls:
 18831 ;;		Nothing
 18832 ;; This function is called by:
 18833 ;;		_sdc_disk_write
 18834 ;;		_dummy_clocks
 18835 ;;		_proceed
 18836 ;;		_command
 18837 ;; This function uses a non-reentrant model
 18838 ;;
 18839                           
 18840                           	psect	text63
 18841  0050C4                     __ptext63:
 18842                           	opt stack 0
 18843  0050C4                     _escreve_dado_SPI:
 18844                           	opt stack 25
 18845                           
 18846                           ;incstack = 0
 18847                           ;escreve_dado_SPI@data_to_shrc stored from wreg
 18848  0050C4  6E17               	movwf	escreve_dado_SPI@data_to_shrc,c
 18849                           
 18850                           ;SHRC.c: 69: LATBbits.LATB7 = 0;
 18851  0050C6  9E8A               	bcf	3978,7,c	;volatile
 18852                           
 18853                           ;SHRC.c: 70: unsigned char contador=0;
 18854  0050C8  0E00               	movlw	0
 18855  0050CA  6E16               	movwf	escreve_dado_SPI@contador,c
 18856                           
 18857                           ;SHRC.c: 71: (INTCONbits.GIE = 0);
 18858  0050CC  9EF2               	bcf	intcon,7,c	;volatile
 18859                           
 18860                           ;SHRC.c: 73: while(contador<=7)
 18861  0050CE  D018               	goto	l10478
 18862  0050D0                     l10456:
 18863                           
 18864                           ;SHRC.c: 74: {
 18865                           ;SHRC.c: 75: if((data_to_shrc & 0x80) == 0)
 18866  0050D0  BE17               	btfsc	escreve_dado_SPI@data_to_shrc,7,c
 18867  0050D2  D002               	goto	l135
 18868                           
 18869                           ;SHRC.c: 76: {
 18870                           ;SHRC.c: 77: LATBbits.LATB7 = 0;
 18871  0050D4  9E8A               	bcf	3978,7,c	;volatile
 18872                           
 18873                           ;SHRC.c: 78: }
 18874  0050D6  D001               	goto	l10460
 18875  0050D8                     l135:
 18876                           
 18877                           ;SHRC.c: 79: else
 18878                           ;SHRC.c: 80: {
 18879                           ;SHRC.c: 81: LATBbits.LATB7 = 1;
 18880  0050D8  8E8A               	bsf	3978,7,c	;volatile
 18881  0050DA                     l10460:
 18882                           
 18883                           ;SHRC.c: 82: }
 18884                           ;SHRC.c: 83: data_to_shrc = data_to_shrc << 1;
 18885  0050DA  5017               	movf	escreve_dado_SPI@data_to_shrc,w,c
 18886  0050DC  2417               	addwf	escreve_dado_SPI@data_to_shrc,w,c
 18887  0050DE  6E17               	movwf	escreve_dado_SPI@data_to_shrc,c
 18888                           
 18889                           ;SHRC.c: 84: _delay((unsigned long)((2.5)*(48000000/4000000.0)));
 18890  0050E0  0E0A               	movlw	10
 18891  0050E2                     u17067:
 18892  0050E2  2EE8               	decfsz	wreg,f,c
 18893  0050E4  D7FE               	bra	u17067
 18894                           
 18895                           ;SHRC.c: 85: LATBbits.LATB6 = 1;
 18896  0050E6  8C8A               	bsf	3978,6,c	;volatile
 18897                           
 18898                           ;SHRC.c: 86: _delay((unsigned long)((2.5)*(48000000/4000000.0)));
 18899  0050E8  0E0A               	movlw	10
 18900  0050EA                     u17077:
 18901  0050EA  2EE8               	decfsz	wreg,f,c
 18902  0050EC  D7FE               	bra	u17077
 18903                           
 18904                           ;SHRC.c: 87: LATBbits.LATB7 = 0;
 18905  0050EE  9E8A               	bcf	3978,7,c	;volatile
 18906                           
 18907                           ;SHRC.c: 88: _delay((unsigned long)((2.5)*(48000000/4000000.0)));
 18908  0050F0  0E0A               	movlw	10
 18909  0050F2                     u17087:
 18910  0050F2  2EE8               	decfsz	wreg,f,c
 18911  0050F4  D7FE               	bra	u17087
 18912                           
 18913                           ;SHRC.c: 89: LATBbits.LATB6 = 0;
 18914  0050F6  9C8A               	bcf	3978,6,c	;volatile
 18915                           
 18916                           ;SHRC.c: 90: _delay((unsigned long)((2.5)*(48000000/4000000.0)));
 18917  0050F8  0E0A               	movlw	10
 18918  0050FA                     u17097:
 18919  0050FA  2EE8               	decfsz	wreg,f,c
 18920  0050FC  D7FE               	bra	u17097
 18921                           
 18922                           ;SHRC.c: 91: contador++;
 18923  0050FE  2A16               	incf	escreve_dado_SPI@contador,f,c
 18924  005100                     l10478:
 18925  005100  0E07               	movlw	7
 18926  005102  6416               	cpfsgt	escreve_dado_SPI@contador,c
 18927  005104  D7E5               	goto	l10456
 18928                           
 18929                           ;SHRC.c: 92: }
 18930                           ;SHRC.c: 93: (INTCONbits.GIE = 1);
 18931  005106  8EF2               	bsf	intcon,7,c	;volatile
 18932  005108  0012               	return		;funcret
 18933  00510A                     __end_of_escreve_dado_SPI:
 18934                           	opt stack 0
 18935                           tosu	equ	0xFFF
 18936                           tosh	equ	0xFFE
 18937                           tosl	equ	0xFFD
 18938                           pclath	equ	0xFFA
 18939                           tblptru	equ	0xFF8
 18940                           tblptrh	equ	0xFF7
 18941                           tblptrl	equ	0xFF6
 18942                           tablat	equ	0xFF5
 18943                           prodh	equ	0xFF4
 18944                           prodl	equ	0xFF3
 18945                           intcon	equ	0xFF2
 18946                           intcon2	equ	0xFF1
 18947                           intcon3	equ	0xFF0
 18948                           indf0	equ	0xFEF
 18949                           postinc0	equ	0xFEE
 18950                           fsr0h	equ	0xFEA
 18951                           fsr0l	equ	0xFE9
 18952                           wreg	equ	0xFE8
 18953                           indf1	equ	0xFE7
 18954                           postinc1	equ	0xFE6
 18955                           postdec1	equ	0xFE5
 18956                           plusw1	equ	0xFE3
 18957                           fsr1h	equ	0xFE2
 18958                           fsr1l	equ	0xFE1
 18959                           indf2	equ	0xFDF
 18960                           postinc2	equ	0xFDE
 18961                           postdec2	equ	0xFDD
 18962                           plusw2	equ	0xFDB
 18963                           fsr2h	equ	0xFDA
 18964                           fsr2l	equ	0xFD9
 18965                           status	equ	0xFD8
 18966                           
 18967 ;; *************** function _disk_ioctl *****************
 18968 ;; Defined at:
 18969 ;;		line 243 in file "bibliotecas/diskio.c"
 18970 ;; Parameters:    Size  Location     Type
 18971 ;;  pdrv            1    wreg     unsigned char 
 18972 ;;  cmd             1   21[COMRAM] unsigned char 
 18973 ;;  buff            2   22[COMRAM] PTR void 
 18974 ;;		 -> NULL(0), 
 18975 ;; Auto vars:     Size  Location     Type
 18976 ;;  pdrv            1   24[COMRAM] unsigned char 
 18977 ;;  result          2    0        int 
 18978 ;;  res             1   25[COMRAM] enum E25
 18979 ;; Return value:  Size  Location     Type
 18980 ;;                  1    wreg      enum E25
 18981 ;; Registers used:
 18982 ;;		wreg, status,2, status,0
 18983 ;; Tracked objects:
 18984 ;;		On entry : 0/0
 18985 ;;		On exit  : 0/0
 18986 ;;		Unchanged: 0/0
 18987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18988 ;;      Params:         3       0       0       0       0       0       0       0       0
 18989 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18990 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18991 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18992 ;;Total ram usage:        5 bytes
 18993 ;; Hardware stack levels used:    1
 18994 ;; Hardware stack levels required when called:    2
 18995 ;; This function calls:
 18996 ;;		Nothing
 18997 ;; This function is called by:
 18998 ;;		_sync
 18999 ;; This function uses a non-reentrant model
 19000 ;;
 19001                           
 19002                           	psect	text64
 19003  0053AC                     __ptext64:
 19004                           	opt stack 0
 19005  0053AC                     _disk_ioctl:
 19006                           	opt stack 23
 19007                           
 19008                           ;incstack = 0
 19009                           ;disk_ioctl@pdrv stored from wreg
 19010  0053AC  6E19               	movwf	disk_ioctl@pdrv,c
 19011                           
 19012                           ;diskio.c: 249: DRESULT res;
 19013                           ;diskio.c: 250: int result;
 19014                           ;diskio.c: 252: switch (pdrv) {
 19015  0053AE  D006               	goto	l11286
 19016  0053B0                     l210:
 19017                           
 19018                           ;diskio.c: 257: return res;
 19019  0053B0  501A               	movf	disk_ioctl@res,w,c
 19020  0053B2  0012               	return	
 19021  0053B4                     l212:
 19022                           
 19023                           ;diskio.c: 263: return res;
 19024  0053B4  501A               	movf	disk_ioctl@res,w,c
 19025  0053B6  0012               	return	
 19026  0053B8                     l213:
 19027                           
 19028                           ;diskio.c: 269: return res;
 19029  0053B8  501A               	movf	disk_ioctl@res,w,c
 19030  0053BA  0012               	return	
 19031  0053BC                     l11286:
 19032  0053BC  5019               	movf	disk_ioctl@pdrv,w,c
 19033                           
 19034                           ; Switch size 1, requested type "space"
 19035                           ; Number of cases is 3, Range of values is 0 to 2
 19036                           ; switch strategies available:
 19037                           ; Name         Instructions Cycles
 19038                           ; simple_byte           10     6 (average)
 19039                           ;	Chosen strategy is simple_byte
 19040  0053BE  0A00               	xorlw	0	; case 0
 19041  0053C0  B4D8               	btfsc	status,2,c
 19042  0053C2  D7F8               	goto	l212
 19043  0053C4  0A01               	xorlw	1	; case 1
 19044  0053C6  B4D8               	btfsc	status,2,c
 19045  0053C8  D7F3               	goto	l210
 19046  0053CA  0A03               	xorlw	3	; case 2
 19047  0053CC  B4D8               	btfsc	status,2,c
 19048  0053CE  D7F4               	goto	l213
 19049                           
 19050                           ;diskio.c: 272: return RES_PARERR;
 19051  0053D0  0E04               	movlw	4
 19052  0053D2  0012               	return	
 19053  0053D4                     __end_of_disk_ioctl:
 19054                           	opt stack 0
 19055                           tosu	equ	0xFFF
 19056                           tosh	equ	0xFFE
 19057                           tosl	equ	0xFFD
 19058                           pclath	equ	0xFFA
 19059                           tblptru	equ	0xFF8
 19060                           tblptrh	equ	0xFF7
 19061                           tblptrl	equ	0xFF6
 19062                           tablat	equ	0xFF5
 19063                           prodh	equ	0xFF4
 19064                           prodl	equ	0xFF3
 19065                           intcon	equ	0xFF2
 19066                           intcon2	equ	0xFF1
 19067                           intcon3	equ	0xFF0
 19068                           indf0	equ	0xFEF
 19069                           postinc0	equ	0xFEE
 19070                           fsr0h	equ	0xFEA
 19071                           fsr0l	equ	0xFE9
 19072                           wreg	equ	0xFE8
 19073                           indf1	equ	0xFE7
 19074                           postinc1	equ	0xFE6
 19075                           postdec1	equ	0xFE5
 19076                           plusw1	equ	0xFE3
 19077                           fsr1h	equ	0xFE2
 19078                           fsr1l	equ	0xFE1
 19079                           indf2	equ	0xFDF
 19080                           postinc2	equ	0xFDE
 19081                           postdec2	equ	0xFDD
 19082                           plusw2	equ	0xFDB
 19083                           fsr2h	equ	0xFDA
 19084                           fsr2l	equ	0xFD9
 19085                           status	equ	0xFD8
 19086                           
 19087 ;; *************** function _get_fattime *****************
 19088 ;; Defined at:
 19089 ;;		line 866 in file "bibliotecas/tff.c"
 19090 ;; Parameters:    Size  Location     Type
 19091 ;;		None
 19092 ;; Auto vars:     Size  Location     Type
 19093 ;;  f_time          9   25[COMRAM] struct .
 19094 ;; Return value:  Size  Location     Type
 19095 ;;                  4   21[COMRAM] unsigned long 
 19096 ;; Registers used:
 19097 ;;		wreg, status,2, status,0
 19098 ;; Tracked objects:
 19099 ;;		On entry : 0/0
 19100 ;;		On exit  : 0/0
 19101 ;;		Unchanged: 0/0
 19102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19103 ;;      Params:         4       0       0       0       0       0       0       0       0
 19104 ;;      Locals:         9       0       0       0       0       0       0       0       0
 19105 ;;      Temps:          0      38       0       0       0       0       0       0       0
 19106 ;;      Totals:        13      38       0       0       0       0       0       0       0
 19107 ;;Total ram usage:       51 bytes
 19108 ;; Hardware stack levels used:    1
 19109 ;; Hardware stack levels required when called:    2
 19110 ;; This function calls:
 19111 ;;		Nothing
 19112 ;; This function is called by:
 19113 ;;		_f_open
 19114 ;;		_f_sync
 19115 ;;		_f_mkdir
 19116 ;; This function uses a non-reentrant model
 19117 ;;
 19118                           
 19119                           	psect	text65
 19120  003FAA                     __ptext65:
 19121                           	opt stack 0
 19122  003FAA                     _get_fattime:
 19123                           	opt stack 25
 19124                           
 19125                           ;tff.c: 868: fat_time f_time;
 19126                           ;tff.c: 870: return (DWORD)(f_time.ano ) << 25 |
 19127                           ;tff.c: 871: (DWORD)(f_time.mes) << 21 |
 19128                           ;tff.c: 872: (DWORD)(f_time.mes) << 16 |
 19129                           ;tff.c: 873: (DWORD)(f_time.hora) << 11 |
 19130                           ;tff.c: 874: (DWORD)(f_time.min) << 5 |
 19131                           ;tff.c: 875: (DWORD)(f_time.seg) >> 1;
 19132                           
 19133                           ;incstack = 0
 19134  003FAA  90D8               	bcf	status,0,c
 19135  003FAC  301F               	rrcf	get_fattime@f_time+5,w,c
 19136  003FAE  0100               	movlb	0	; () banked
 19137  003FB0  6F61               	movwf	(??_get_fattime+1)& (0+255),b
 19138  003FB2  301E               	rrcf	get_fattime@f_time+4,w,c
 19139  003FB4  0100               	movlb	0	; () banked
 19140  003FB6  6F60               	movwf	??_get_fattime& (0+255),b
 19141  003FB8  501C               	movf	get_fattime@f_time+2,w,c
 19142  003FBA  0100               	movlb	0	; () banked
 19143  003FBC  6F62               	movwf	(??_get_fattime+2)& (0+255),b
 19144  003FBE  501D               	movf	get_fattime@f_time+3,w,c
 19145  003FC0  0100               	movlb	0	; () banked
 19146  003FC2  6F63               	movwf	(??_get_fattime+3)& (0+255),b
 19147  003FC4  0100               	movlb	0	; () banked
 19148  003FC6  6B64               	clrf	(??_get_fattime+4)& (0+255),b
 19149  003FC8  0100               	movlb	0	; () banked
 19150  003FCA  6B65               	clrf	(??_get_fattime+5)& (0+255),b
 19151  003FCC  0E05               	movlw	5
 19152  003FCE                     u13345:
 19153  003FCE  90D8               	bcf	status,0,c
 19154  003FD0  0100               	movlb	0	; () banked
 19155  003FD2  3762               	rlcf	(??_get_fattime+2)& (0+255),f,b
 19156  003FD4  3763               	rlcf	(??_get_fattime+3)& (0+255),f,b
 19157  003FD6  3764               	rlcf	(??_get_fattime+4)& (0+255),f,b
 19158  003FD8  3765               	rlcf	(??_get_fattime+5)& (0+255),f,b
 19159  003FDA  2EE8               	decfsz	wreg,f,c
 19160  003FDC  D7F8               	goto	u13345
 19161  003FDE  501A               	movf	get_fattime@f_time,w,c
 19162  003FE0  0100               	movlb	0	; () banked
 19163  003FE2  6F66               	movwf	(??_get_fattime+6)& (0+255),b
 19164  003FE4  501B               	movf	get_fattime@f_time+1,w,c
 19165  003FE6  0100               	movlb	0	; () banked
 19166  003FE8  6F67               	movwf	(??_get_fattime+7)& (0+255),b
 19167  003FEA  0100               	movlb	0	; () banked
 19168  003FEC  6B68               	clrf	(??_get_fattime+8)& (0+255),b
 19169  003FEE  0100               	movlb	0	; () banked
 19170  003FF0  6B69               	clrf	(??_get_fattime+9)& (0+255),b
 19171  003FF2  0E0B               	movlw	11
 19172  003FF4                     u13355:
 19173  003FF4  90D8               	bcf	status,0,c
 19174  003FF6  0100               	movlb	0	; () banked
 19175  003FF8  3766               	rlcf	(??_get_fattime+6)& (0+255),f,b
 19176  003FFA  3767               	rlcf	(??_get_fattime+7)& (0+255),f,b
 19177  003FFC  3768               	rlcf	(??_get_fattime+8)& (0+255),f,b
 19178  003FFE  3769               	rlcf	(??_get_fattime+9)& (0+255),f,b
 19179  004000  2EE8               	decfsz	wreg,f,c
 19180  004002  D7F8               	goto	u13355
 19181  004004  C021  F06A         	movff	get_fattime@f_time+7,??_get_fattime+10
 19182  004008  0100               	movlb	0	; () banked
 19183  00400A  6B6B               	clrf	(??_get_fattime+11)& (0+255),b
 19184  00400C  6B6C               	clrf	(??_get_fattime+12)& (0+255),b
 19185  00400E  6B6D               	clrf	(??_get_fattime+13)& (0+255),b
 19186  004010  C06B  F06D         	movff	??_get_fattime+11,??_get_fattime+13
 19187  004014  C06A  F06C         	movff	??_get_fattime+10,??_get_fattime+12
 19188  004018  0100               	movlb	0	; () banked
 19189  00401A  6B6B               	clrf	(??_get_fattime+11)& (0+255),b
 19190  00401C  6B6A               	clrf	(??_get_fattime+10)& (0+255),b
 19191  00401E  C021  F06E         	movff	get_fattime@f_time+7,??_get_fattime+14
 19192  004022  0100               	movlb	0	; () banked
 19193  004024  6B6F               	clrf	(??_get_fattime+15)& (0+255),b
 19194  004026  6B70               	clrf	(??_get_fattime+16)& (0+255),b
 19195  004028  6B71               	clrf	(??_get_fattime+17)& (0+255),b
 19196  00402A  0E15               	movlw	21
 19197  00402C                     u13365:
 19198  00402C  90D8               	bcf	status,0,c
 19199  00402E  0100               	movlb	0	; () banked
 19200  004030  376E               	rlcf	(??_get_fattime+14)& (0+255),f,b
 19201  004032  376F               	rlcf	(??_get_fattime+15)& (0+255),f,b
 19202  004034  3770               	rlcf	(??_get_fattime+16)& (0+255),f,b
 19203  004036  3771               	rlcf	(??_get_fattime+17)& (0+255),f,b
 19204  004038  2EE8               	decfsz	wreg,f,c
 19205  00403A  D7F8               	goto	u13365
 19206  00403C  C022  F072         	movff	get_fattime@f_time+8,??_get_fattime+18
 19207  004040  0100               	movlb	0	; () banked
 19208  004042  6B73               	clrf	(??_get_fattime+19)& (0+255),b
 19209  004044  6B74               	clrf	(??_get_fattime+20)& (0+255),b
 19210  004046  6B75               	clrf	(??_get_fattime+21)& (0+255),b
 19211  004048  0E19               	movlw	25
 19212  00404A                     u13375:
 19213  00404A  90D8               	bcf	status,0,c
 19214  00404C  0100               	movlb	0	; () banked
 19215  00404E  3772               	rlcf	(??_get_fattime+18)& (0+255),f,b
 19216  004050  3773               	rlcf	(??_get_fattime+19)& (0+255),f,b
 19217  004052  3774               	rlcf	(??_get_fattime+20)& (0+255),f,b
 19218  004054  3775               	rlcf	(??_get_fattime+21)& (0+255),f,b
 19219  004056  2EE8               	decfsz	wreg,f,c
 19220  004058  D7F8               	goto	u13375
 19221  00405A  0100               	movlb	0	; () banked
 19222  00405C  516E               	movf	(??_get_fattime+14)& (0+255),w,b
 19223  00405E  0100               	movlb	0	; () banked
 19224  004060  1172               	iorwf	(??_get_fattime+18)& (0+255),w,b
 19225  004062  0100               	movlb	0	; () banked
 19226  004064  6F76               	movwf	(??_get_fattime+22)& (0+255),b
 19227  004066  0100               	movlb	0	; () banked
 19228  004068  516F               	movf	(??_get_fattime+15)& (0+255),w,b
 19229  00406A  0100               	movlb	0	; () banked
 19230  00406C  1173               	iorwf	(??_get_fattime+19)& (0+255),w,b
 19231  00406E  0100               	movlb	0	; () banked
 19232  004070  6F77               	movwf	(??_get_fattime+23)& (0+255),b
 19233  004072  0100               	movlb	0	; () banked
 19234  004074  5170               	movf	(??_get_fattime+16)& (0+255),w,b
 19235  004076  0100               	movlb	0	; () banked
 19236  004078  1174               	iorwf	(??_get_fattime+20)& (0+255),w,b
 19237  00407A  0100               	movlb	0	; () banked
 19238  00407C  6F78               	movwf	(??_get_fattime+24)& (0+255),b
 19239  00407E  0100               	movlb	0	; () banked
 19240  004080  5171               	movf	(??_get_fattime+17)& (0+255),w,b
 19241  004082  0100               	movlb	0	; () banked
 19242  004084  1175               	iorwf	(??_get_fattime+21)& (0+255),w,b
 19243  004086  0100               	movlb	0	; () banked
 19244  004088  6F79               	movwf	(??_get_fattime+25)& (0+255),b
 19245  00408A  0100               	movlb	0	; () banked
 19246  00408C  516A               	movf	(??_get_fattime+10)& (0+255),w,b
 19247  00408E  0100               	movlb	0	; () banked
 19248  004090  1176               	iorwf	(??_get_fattime+22)& (0+255),w,b
 19249  004092  0100               	movlb	0	; () banked
 19250  004094  6F7A               	movwf	(??_get_fattime+26)& (0+255),b
 19251  004096  0100               	movlb	0	; () banked
 19252  004098  516B               	movf	(??_get_fattime+11)& (0+255),w,b
 19253  00409A  0100               	movlb	0	; () banked
 19254  00409C  1177               	iorwf	(??_get_fattime+23)& (0+255),w,b
 19255  00409E  0100               	movlb	0	; () banked
 19256  0040A0  6F7B               	movwf	(??_get_fattime+27)& (0+255),b
 19257  0040A2  0100               	movlb	0	; () banked
 19258  0040A4  516C               	movf	(??_get_fattime+12)& (0+255),w,b
 19259  0040A6  0100               	movlb	0	; () banked
 19260  0040A8  1178               	iorwf	(??_get_fattime+24)& (0+255),w,b
 19261  0040AA  0100               	movlb	0	; () banked
 19262  0040AC  6F7C               	movwf	(??_get_fattime+28)& (0+255),b
 19263  0040AE  0100               	movlb	0	; () banked
 19264  0040B0  516D               	movf	(??_get_fattime+13)& (0+255),w,b
 19265  0040B2  0100               	movlb	0	; () banked
 19266  0040B4  1179               	iorwf	(??_get_fattime+25)& (0+255),w,b
 19267  0040B6  0100               	movlb	0	; () banked
 19268  0040B8  6F7D               	movwf	(??_get_fattime+29)& (0+255),b
 19269  0040BA  0100               	movlb	0	; () banked
 19270  0040BC  5166               	movf	(??_get_fattime+6)& (0+255),w,b
 19271  0040BE  0100               	movlb	0	; () banked
 19272  0040C0  117A               	iorwf	(??_get_fattime+26)& (0+255),w,b
 19273  0040C2  0100               	movlb	0	; () banked
 19274  0040C4  6F7E               	movwf	(??_get_fattime+30)& (0+255),b
 19275  0040C6  0100               	movlb	0	; () banked
 19276  0040C8  5167               	movf	(??_get_fattime+7)& (0+255),w,b
 19277  0040CA  0100               	movlb	0	; () banked
 19278  0040CC  117B               	iorwf	(??_get_fattime+27)& (0+255),w,b
 19279  0040CE  0100               	movlb	0	; () banked
 19280  0040D0  6F7F               	movwf	(??_get_fattime+31)& (0+255),b
 19281  0040D2  0100               	movlb	0	; () banked
 19282  0040D4  5168               	movf	(??_get_fattime+8)& (0+255),w,b
 19283  0040D6  0100               	movlb	0	; () banked
 19284  0040D8  117C               	iorwf	(??_get_fattime+28)& (0+255),w,b
 19285  0040DA  0100               	movlb	0	; () banked
 19286  0040DC  6F80               	movwf	(??_get_fattime+32)& (0+255),b
 19287  0040DE  0100               	movlb	0	; () banked
 19288  0040E0  5169               	movf	(??_get_fattime+9)& (0+255),w,b
 19289  0040E2  0100               	movlb	0	; () banked
 19290  0040E4  117D               	iorwf	(??_get_fattime+29)& (0+255),w,b
 19291  0040E6  0100               	movlb	0	; () banked
 19292  0040E8  6F81               	movwf	(??_get_fattime+33)& (0+255),b
 19293  0040EA  0100               	movlb	0	; () banked
 19294  0040EC  5162               	movf	(??_get_fattime+2)& (0+255),w,b
 19295  0040EE  0100               	movlb	0	; () banked
 19296  0040F0  117E               	iorwf	(??_get_fattime+30)& (0+255),w,b
 19297  0040F2  0100               	movlb	0	; () banked
 19298  0040F4  6F82               	movwf	(??_get_fattime+34)& (0+255),b
 19299  0040F6  0100               	movlb	0	; () banked
 19300  0040F8  5163               	movf	(??_get_fattime+3)& (0+255),w,b
 19301  0040FA  0100               	movlb	0	; () banked
 19302  0040FC  117F               	iorwf	(??_get_fattime+31)& (0+255),w,b
 19303  0040FE  0100               	movlb	0	; () banked
 19304  004100  6F83               	movwf	(??_get_fattime+35)& (0+255),b
 19305  004102  0100               	movlb	0	; () banked
 19306  004104  5164               	movf	(??_get_fattime+4)& (0+255),w,b
 19307  004106  0100               	movlb	0	; () banked
 19308  004108  1180               	iorwf	(??_get_fattime+32)& (0+255),w,b
 19309  00410A  0100               	movlb	0	; () banked
 19310  00410C  6F84               	movwf	(??_get_fattime+36)& (0+255),b
 19311  00410E  0100               	movlb	0	; () banked
 19312  004110  5165               	movf	(??_get_fattime+5)& (0+255),w,b
 19313  004112  0100               	movlb	0	; () banked
 19314  004114  1181               	iorwf	(??_get_fattime+33)& (0+255),w,b
 19315  004116  0100               	movlb	0	; () banked
 19316  004118  6F85               	movwf	(??_get_fattime+37)& (0+255),b
 19317  00411A  0100               	movlb	0	; () banked
 19318  00411C  5160               	movf	??_get_fattime& (0+255),w,b
 19319  00411E  0100               	movlb	0	; () banked
 19320  004120  1182               	iorwf	(??_get_fattime+34)& (0+255),w,b
 19321  004122  6E16               	movwf	?_get_fattime,c
 19322  004124  0100               	movlb	0	; () banked
 19323  004126  5161               	movf	(??_get_fattime+1)& (0+255),w,b
 19324  004128  0100               	movlb	0	; () banked
 19325  00412A  1183               	iorwf	(??_get_fattime+35)& (0+255),w,b
 19326  00412C  6E17               	movwf	?_get_fattime+1,c
 19327  00412E  0E00               	movlw	0
 19328  004130  0100               	movlb	0	; () banked
 19329  004132  1184               	iorwf	(??_get_fattime+36)& (0+255),w,b
 19330  004134  6E18               	movwf	?_get_fattime+2,c
 19331  004136  0E00               	movlw	0
 19332  004138  0100               	movlb	0	; () banked
 19333  00413A  1185               	iorwf	(??_get_fattime+37)& (0+255),w,b
 19334  00413C  6E19               	movwf	?_get_fattime+3,c
 19335  00413E  0012               	return	
 19336  004140                     __end_of_get_fattime:
 19337                           	opt stack 0
 19338                           tosu	equ	0xFFF
 19339                           tosh	equ	0xFFE
 19340                           tosl	equ	0xFFD
 19341                           pclath	equ	0xFFA
 19342                           tblptru	equ	0xFF8
 19343                           tblptrh	equ	0xFF7
 19344                           tblptrl	equ	0xFF6
 19345                           tablat	equ	0xFF5
 19346                           prodh	equ	0xFF4
 19347                           prodl	equ	0xFF3
 19348                           intcon	equ	0xFF2
 19349                           intcon2	equ	0xFF1
 19350                           intcon3	equ	0xFF0
 19351                           indf0	equ	0xFEF
 19352                           postinc0	equ	0xFEE
 19353                           fsr0h	equ	0xFEA
 19354                           fsr0l	equ	0xFE9
 19355                           wreg	equ	0xFE8
 19356                           indf1	equ	0xFE7
 19357                           postinc1	equ	0xFE6
 19358                           postdec1	equ	0xFE5
 19359                           plusw1	equ	0xFE3
 19360                           fsr1h	equ	0xFE2
 19361                           fsr1l	equ	0xFE1
 19362                           indf2	equ	0xFDF
 19363                           postinc2	equ	0xFDE
 19364                           postdec2	equ	0xFDD
 19365                           plusw2	equ	0xFDB
 19366                           fsr2h	equ	0xFDA
 19367                           fsr2l	equ	0xFD9
 19368                           status	equ	0xFD8
 19369                           
 19370 ;; *************** function _isr *****************
 19371 ;; Defined at:
 19372 ;;		line 96 in file "main.c"
 19373 ;; Parameters:    Size  Location     Type
 19374 ;;		None
 19375 ;; Auto vars:     Size  Location     Type
 19376 ;;  cont            1   20[COMRAM] unsigned char 
 19377 ;; Return value:  Size  Location     Type
 19378 ;;                  1    wreg      void 
 19379 ;; Registers used:
 19380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19381 ;; Tracked objects:
 19382 ;;		On entry : 0/0
 19383 ;;		On exit  : 0/0
 19384 ;;		Unchanged: 0/0
 19385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19386 ;;      Params:         0       0       0       0       0       0       0       0       0
 19387 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19388 ;;      Temps:         16       0       0       0       0       0       0       0       0
 19389 ;;      Totals:        17       0       0       0       0       0       0       0       0
 19390 ;;Total ram usage:       17 bytes
 19391 ;; Hardware stack levels used:    1
 19392 ;; Hardware stack levels required when called:    1
 19393 ;; This function calls:
 19394 ;;		_recebe_dado_uart
 19395 ;;		i2_write_timer_zero
 19396 ;; This function is called by:
 19397 ;;		Interrupt level 2
 19398 ;; This function uses a non-reentrant model
 19399 ;;
 19400                           
 19401                           	psect	intcode
 19402  000008                     __pintcode:
 19403                           	opt stack 0
 19404  000008                     _isr:
 19405                           	opt stack 16
 19406                           
 19407                           ; BSR set to: 0
 19408                           ;incstack = 0
 19409  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 19410  00000A  EDA0  F022         	call	int_func,f	;refresh shadow registers
 19411                           tosu	equ	0xFFF
 19412                           tosh	equ	0xFFE
 19413                           tosl	equ	0xFFD
 19414                           pclath	equ	0xFFA
 19415                           tblptru	equ	0xFF8
 19416                           tblptrh	equ	0xFF7
 19417                           tblptrl	equ	0xFF6
 19418                           tablat	equ	0xFF5
 19419                           prodh	equ	0xFF4
 19420                           prodl	equ	0xFF3
 19421                           intcon	equ	0xFF2
 19422                           intcon2	equ	0xFF1
 19423                           intcon3	equ	0xFF0
 19424                           indf0	equ	0xFEF
 19425                           postinc0	equ	0xFEE
 19426                           fsr0h	equ	0xFEA
 19427                           fsr0l	equ	0xFE9
 19428                           wreg	equ	0xFE8
 19429                           indf1	equ	0xFE7
 19430                           postinc1	equ	0xFE6
 19431                           postdec1	equ	0xFE5
 19432                           plusw1	equ	0xFE3
 19433                           fsr1h	equ	0xFE2
 19434                           fsr1l	equ	0xFE1
 19435                           indf2	equ	0xFDF
 19436                           postinc2	equ	0xFDE
 19437                           postdec2	equ	0xFDD
 19438                           plusw2	equ	0xFDB
 19439                           fsr2h	equ	0xFDA
 19440                           fsr2l	equ	0xFD9
 19441                           status	equ	0xFD8
 19442                           
 19443                           	psect	intcode_body
 19444  004540                     __pintcode_body:
 19445                           	opt stack 16
 19446  004540                     int_func:
 19447                           	opt stack 16
 19448  004540  0006               	pop		; remove dummy address from shadow register refresh
 19449  004542  CFFA F007          	movff	pclath,??_isr+2
 19450  004546  CFFB F008          	movff	pclatu,??_isr+3
 19451  00454A  CFE9 F009          	movff	fsr0l,??_isr+4
 19452  00454E  CFEA F00A          	movff	fsr0h,??_isr+5
 19453  004552  CFE1 F00B          	movff	fsr1l,??_isr+6
 19454  004556  CFE2 F00C          	movff	fsr1h,??_isr+7
 19455  00455A  CFD9 F00D          	movff	fsr2l,??_isr+8
 19456  00455E  CFDA F00E          	movff	fsr2h,??_isr+9
 19457  004562  CFF3 F00F          	movff	prodl,??_isr+10
 19458  004566  CFF4 F010          	movff	prodh,??_isr+11
 19459  00456A  CFF6 F011          	movff	tblptrl,??_isr+12
 19460  00456E  CFF7 F012          	movff	tblptrh,??_isr+13
 19461  004572  CFF8 F013          	movff	tblptru,??_isr+14
 19462  004576  CFF5 F014          	movff	tablat,??_isr+15
 19463                           
 19464                           ;main.c: 98: unsigned char cont;
 19465                           ;main.c: 101: if (PIE1bits.RCIE && PIR1bits.RCIF)
 19466  00457A  BA9D               	btfsc	3997,5,c	;volatile
 19467  00457C  AA9E               	btfss	3998,5,c	;volatile
 19468  00457E  D004               	goto	i2l9854
 19469                           
 19470                           ;main.c: 102: {
 19471                           ;main.c: 103: data_uart_recebe = recebe_dado_uart();
 19472  004580  EC67  F02A         	call	_recebe_dado_uart	;wreg free
 19473  004584  6E41               	movwf	_data_uart_recebe,c
 19474                           
 19475                           ;main.c: 104: PIR1bits.RCIF = 0;
 19476  004586  9A9E               	bcf	3998,5,c	;volatile
 19477  004588                     i2l9854:
 19478                           
 19479                           ;main.c: 109: }
 19480                           ;main.c: 112: unsigned char cont;
 19481                           ;main.c: 114: if (TMR0IF && T0IF)
 19482  004588  B4F2               	btfsc	intcon,2,c	;volatile
 19483  00458A  A4F2               	btfss	intcon,2,c	;volatile
 19484  00458C  D039               	goto	i2l9884
 19485                           
 19486                           ;main.c: 115: {
 19487                           ;main.c: 116: INTCONbits.TMR0IF = 0;
 19488  00458E  94F2               	bcf	intcon,2,c	;volatile
 19489                           
 19490                           ;main.c: 117: sinaliza_int_timer = 1;
 19491  004590  0E01               	movlw	1
 19492  004592  6E40               	movwf	_sinaliza_int_timer,c
 19493                           
 19494                           ;main.c: 119: for(cont= 0; cont<2;cont++)
 19495  004594  0E00               	movlw	0
 19496  004596  6E15               	movwf	isr@cont,c
 19497  004598                     i2l9862:
 19498  004598  0E01               	movlw	1
 19499  00459A  6415               	cpfsgt	isr@cont,c
 19500  00459C  D001               	goto	i2l9866
 19501  00459E  D019               	goto	i2l9874
 19502  0045A0                     i2l9866:
 19503                           
 19504                           ;main.c: 120: {
 19505                           ;main.c: 121: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
 19506  0045A0  5015               	movf	isr@cont,w,c
 19507  0045A2  0D02               	mullw	2
 19508  0045A4  0E4A               	movlw	low _tempo_tarefa
 19509  0045A6  24F3               	addwf	prodl,w,c
 19510  0045A8  6ED9               	movwf	fsr2l,c
 19511  0045AA  0E01               	movlw	high _tempo_tarefa
 19512  0045AC  20F4               	addwfc	prodh,w,c
 19513  0045AE  6EDA               	movwf	fsr2h,c
 19514  0045B0  50DE               	movf	postinc2,w,c
 19515  0045B2  10DE               	iorwf	postinc2,w,c
 19516  0045B4  B4D8               	btfsc	status,2,c
 19517  0045B6  D00B               	goto	i2l9870
 19518  0045B8  5015               	movf	isr@cont,w,c
 19519  0045BA  0D02               	mullw	2
 19520  0045BC  0E4A               	movlw	low _tempo_tarefa
 19521  0045BE  24F3               	addwf	prodl,w,c
 19522  0045C0  6ED9               	movwf	fsr2l,c
 19523  0045C2  0E01               	movlw	high _tempo_tarefa
 19524  0045C4  20F4               	addwfc	prodh,w,c
 19525  0045C6  6EDA               	movwf	fsr2h,c
 19526  0045C8  06DE               	decf	postinc2,f,c
 19527  0045CA  0E00               	movlw	0
 19528  0045CC  5ADD               	subwfb	postdec2,f,c
 19529  0045CE                     i2l9870:
 19530  0045CE  2A15               	incf	isr@cont,f,c
 19531  0045D0  D7E3               	goto	i2l9862
 19532  0045D2                     i2l9874:
 19533                           
 19534                           ;main.c: 122: }
 19535                           ;main.c: 125: if(tarefa_em_execucao == 1)
 19536  0045D2  043F               	decf	_tarefa_em_execucao,w,c	;volatile
 19537  0045D4  A4D8               	btfss	status,2,c
 19538  0045D6  D00E               	goto	i2l9882
 19539                           
 19540                           ;main.c: 126: {
 19541                           ;main.c: 127: timeout_tarefa--;
 19542  0045D8  0101               	movlb	1	; () banked
 19543  0045DA  0758               	decf	_timeout_tarefa& (0+255),f,b
 19544  0045DC  A0D8               	btfss	status,0,c
 19545  0045DE  0759               	decf	(_timeout_tarefa+1)& (0+255),f,b
 19546                           
 19547                           ; BSR set to: 1
 19548                           ;main.c: 128: if(!timeout_tarefa)
 19549  0045E0  0101               	movlb	1	; () banked
 19550  0045E2  5158               	movf	_timeout_tarefa& (0+255),w,b
 19551  0045E4  0101               	movlb	1	; () banked
 19552  0045E6  1159               	iorwf	(_timeout_tarefa+1)& (0+255),w,b
 19553  0045E8  A4D8               	btfss	status,2,c
 19554  0045EA  D004               	goto	i2l9882
 19555                           
 19556                           ; BSR set to: 1
 19557                           ;main.c: 129: {
 19558                           ;main.c: 131: PCLATH = 0;
 19559  0045EC  0E00               	movlw	0
 19560  0045EE  6EFA               	movwf	pclath,c	;volatile
 19561                           
 19562                           ;main.c: 132: PCL = 0;
 19563  0045F0  0E00               	movlw	0
 19564  0045F2  6EF9               	movwf	pcl,c	;volatile
 19565  0045F4                     i2l9882:
 19566                           
 19567                           ;main.c: 133: }
 19568                           ;main.c: 134: }
 19569                           ;main.c: 137: write_timer_zero(0x0083);
 19570  0045F4  0E00               	movlw	0
 19571  0045F6  6E02               	movwf	i2write_timer_zero@timer0+1,c
 19572  0045F8  0E83               	movlw	131
 19573  0045FA  6E01               	movwf	i2write_timer_zero@timer0,c
 19574  0045FC  EC5E  F02A         	call	i2_write_timer_zero	;wreg free
 19575  004600                     i2l9884:
 19576                           
 19577                           ;main.c: 139: }
 19578                           ;main.c: 141: if (INT0IF && INT0IE)
 19579  004600  B2F2               	btfsc	intcon,1,c	;volatile
 19580  004602  A8F2               	btfss	intcon,4,c	;volatile
 19581  004604  D001               	goto	i2l1203
 19582                           
 19583                           ;main.c: 142: {
 19584                           ;main.c: 143: INT0IF = 0;
 19585  004606  92F2               	bcf	intcon,1,c	;volatile
 19586  004608                     i2l1203:
 19587  004608  C014  FFF5         	movff	??_isr+15,tablat
 19588  00460C  C013  FFF8         	movff	??_isr+14,tblptru
 19589  004610  C012  FFF7         	movff	??_isr+13,tblptrh
 19590  004614  C011  FFF6         	movff	??_isr+12,tblptrl
 19591  004618  C010  FFF4         	movff	??_isr+11,prodh
 19592  00461C  C00F  FFF3         	movff	??_isr+10,prodl
 19593  004620  C00E  FFDA         	movff	??_isr+9,fsr2h
 19594  004624  C00D  FFD9         	movff	??_isr+8,fsr2l
 19595  004628  C00C  FFE2         	movff	??_isr+7,fsr1h
 19596  00462C  C00B  FFE1         	movff	??_isr+6,fsr1l
 19597  004630  C00A  FFEA         	movff	??_isr+5,fsr0h
 19598  004634  C009  FFE9         	movff	??_isr+4,fsr0l
 19599  004638  C008  FFFB         	movff	??_isr+3,pclatu
 19600  00463C  C007  FFFA         	movff	??_isr+2,pclath
 19601  004640  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 19602  004642  0011               	retfie		f
 19603  004644                     __end_of_isr:
 19604                           	opt stack 0
 19605                           tosu	equ	0xFFF
 19606                           tosh	equ	0xFFE
 19607                           tosl	equ	0xFFD
 19608                           pclatu	equ	0xFFB
 19609                           pclath	equ	0xFFA
 19610                           pcl	equ	0xFF9
 19611                           tblptru	equ	0xFF8
 19612                           tblptrh	equ	0xFF7
 19613                           tblptrl	equ	0xFF6
 19614                           tablat	equ	0xFF5
 19615                           prodh	equ	0xFF4
 19616                           prodl	equ	0xFF3
 19617                           intcon	equ	0xFF2
 19618                           intcon2	equ	0xFF1
 19619                           intcon3	equ	0xFF0
 19620                           indf0	equ	0xFEF
 19621                           postinc0	equ	0xFEE
 19622                           fsr0h	equ	0xFEA
 19623                           fsr0l	equ	0xFE9
 19624                           wreg	equ	0xFE8
 19625                           indf1	equ	0xFE7
 19626                           postinc1	equ	0xFE6
 19627                           postdec1	equ	0xFE5
 19628                           plusw1	equ	0xFE3
 19629                           fsr1h	equ	0xFE2
 19630                           fsr1l	equ	0xFE1
 19631                           indf2	equ	0xFDF
 19632                           postinc2	equ	0xFDE
 19633                           postdec2	equ	0xFDD
 19634                           plusw2	equ	0xFDB
 19635                           fsr2h	equ	0xFDA
 19636                           fsr2l	equ	0xFD9
 19637                           status	equ	0xFD8
 19638                           
 19639 ;; *************** function i2_write_timer_zero *****************
 19640 ;; Defined at:
 19641 ;;		line 138 in file "bibliotecas/hardware.c"
 19642 ;; Parameters:    Size  Location     Type
 19643 ;;  timer0          2    0[COMRAM] unsigned int 
 19644 ;; Auto vars:     Size  Location     Type
 19645 ;;  write_timer_    2    2[COMRAM] struct Timers
 19646 ;; Return value:  Size  Location     Type
 19647 ;;                  1    wreg      void 
 19648 ;; Registers used:
 19649 ;;		None
 19650 ;; Tracked objects:
 19651 ;;		On entry : 0/0
 19652 ;;		On exit  : 0/0
 19653 ;;		Unchanged: 0/0
 19654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19655 ;;      Params:         2       0       0       0       0       0       0       0       0
 19656 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19657 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19658 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19659 ;;Total ram usage:        4 bytes
 19660 ;; Hardware stack levels used:    1
 19661 ;; This function calls:
 19662 ;;		Nothing
 19663 ;; This function is called by:
 19664 ;;		_isr
 19665 ;; This function uses a non-reentrant model
 19666 ;;
 19667                           
 19668                           	psect	text67
 19669  0054BC                     __ptext67:
 19670                           	opt stack 0
 19671  0054BC                     i2_write_timer_zero:
 19672                           	opt stack 16
 19673                           
 19674                           ;hardware.c: 140: union Timers timer;
 19675                           ;hardware.c: 142: timer.lt = timer0;
 19676                           
 19677                           ;incstack = 0
 19678  0054BC  C001  F003         	movff	i2write_timer_zero@timer0,i2write_timer_zero@timer
 19679  0054C0  C002  F004         	movff	i2write_timer_zero@timer0+1,i2write_timer_zero@timer+1
 19680                           
 19681                           ;hardware.c: 144: TMR0H = timer.bt[1];
 19682  0054C4  C004  FFD7         	movff	i2write_timer_zero@timer+1,4055	;volatile
 19683                           
 19684                           ;hardware.c: 145: TMR0L = timer.bt[0];
 19685  0054C8  C003  FFD6         	movff	i2write_timer_zero@timer,4054	;volatile
 19686  0054CC  0012               	return		;funcret
 19687  0054CE                     __end_ofi2_write_timer_zero:
 19688                           	opt stack 0
 19689                           tosu	equ	0xFFF
 19690                           tosh	equ	0xFFE
 19691                           tosl	equ	0xFFD
 19692                           pclatu	equ	0xFFB
 19693                           pclath	equ	0xFFA
 19694                           pcl	equ	0xFF9
 19695                           tblptru	equ	0xFF8
 19696                           tblptrh	equ	0xFF7
 19697                           tblptrl	equ	0xFF6
 19698                           tablat	equ	0xFF5
 19699                           prodh	equ	0xFF4
 19700                           prodl	equ	0xFF3
 19701                           intcon	equ	0xFF2
 19702                           intcon2	equ	0xFF1
 19703                           intcon3	equ	0xFF0
 19704                           indf0	equ	0xFEF
 19705                           postinc0	equ	0xFEE
 19706                           fsr0h	equ	0xFEA
 19707                           fsr0l	equ	0xFE9
 19708                           wreg	equ	0xFE8
 19709                           indf1	equ	0xFE7
 19710                           postinc1	equ	0xFE6
 19711                           postdec1	equ	0xFE5
 19712                           plusw1	equ	0xFE3
 19713                           fsr1h	equ	0xFE2
 19714                           fsr1l	equ	0xFE1
 19715                           indf2	equ	0xFDF
 19716                           postinc2	equ	0xFDE
 19717                           postdec2	equ	0xFDD
 19718                           plusw2	equ	0xFDB
 19719                           fsr2h	equ	0xFDA
 19720                           fsr2l	equ	0xFD9
 19721                           status	equ	0xFD8
 19722                           
 19723 ;; *************** function _recebe_dado_uart *****************
 19724 ;; Defined at:
 19725 ;;		line 138 in file "bibliotecas/uart.c"
 19726 ;; Parameters:    Size  Location     Type
 19727 ;;		None
 19728 ;; Auto vars:     Size  Location     Type
 19729 ;;		None
 19730 ;; Return value:  Size  Location     Type
 19731 ;;                  1    wreg      unsigned char 
 19732 ;; Registers used:
 19733 ;;		wreg, status,2
 19734 ;; Tracked objects:
 19735 ;;		On entry : 0/0
 19736 ;;		On exit  : 0/0
 19737 ;;		Unchanged: 0/0
 19738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19739 ;;      Params:         0       0       0       0       0       0       0       0       0
 19740 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19741 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19742 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19743 ;;Total ram usage:        0 bytes
 19744 ;; Hardware stack levels used:    1
 19745 ;; This function calls:
 19746 ;;		Nothing
 19747 ;; This function is called by:
 19748 ;;		_isr
 19749 ;;		_recebe_string_uart
 19750 ;; This function uses a non-reentrant model
 19751 ;;
 19752                           
 19753                           	psect	text68
 19754  0054CE                     __ptext68:
 19755                           	opt stack 0
 19756  0054CE                     _recebe_dado_uart:
 19757                           	opt stack 16
 19758  0054CE                     i2l1114:
 19759  0054CE  AA9E               	btfss	3998,5,c	;volatile
 19760  0054D0  D7FE               	goto	i2l1114
 19761                           
 19762                           ;uart.c: 141: if(RCSTAbits.OERR)
 19763  0054D2  A2AB               	btfss	4011,1,c	;volatile
 19764  0054D4  D003               	goto	i2l8192
 19765                           
 19766                           ;uart.c: 142: {
 19767                           ;uart.c: 143: CREN = 0;
 19768  0054D6  98AB               	bcf	4011,4,c	;volatile
 19769                           
 19770                           ;uart.c: 144: __nop();
 19771  0054D8  F000               	nop	
 19772                           
 19773                           ;uart.c: 145: CREN=1;
 19774  0054DA  88AB               	bsf	4011,4,c	;volatile
 19775  0054DC                     i2l8192:
 19776                           
 19777                           ;uart.c: 146: }
 19778                           ;uart.c: 147: return(RCREG);
 19779  0054DC  50AE               	movf	4014,w,c	;volatile
 19780  0054DE  0012               	return	
 19781  0054E0                     __end_of_recebe_dado_uart:
 19782                           	opt stack 0
 19783                           tosu	equ	0xFFF
 19784                           tosh	equ	0xFFE
 19785                           tosl	equ	0xFFD
 19786                           pclatu	equ	0xFFB
 19787                           pclath	equ	0xFFA
 19788                           pcl	equ	0xFF9
 19789                           tblptru	equ	0xFF8
 19790                           tblptrh	equ	0xFF7
 19791                           tblptrl	equ	0xFF6
 19792                           tablat	equ	0xFF5
 19793                           prodh	equ	0xFF4
 19794                           prodl	equ	0xFF3
 19795                           intcon	equ	0xFF2
 19796                           intcon2	equ	0xFF1
 19797                           intcon3	equ	0xFF0
 19798                           indf0	equ	0xFEF
 19799                           postinc0	equ	0xFEE
 19800                           fsr0h	equ	0xFEA
 19801                           fsr0l	equ	0xFE9
 19802                           wreg	equ	0xFE8
 19803                           indf1	equ	0xFE7
 19804                           postinc1	equ	0xFE6
 19805                           postdec1	equ	0xFE5
 19806                           plusw1	equ	0xFE3
 19807                           fsr1h	equ	0xFE2
 19808                           fsr1l	equ	0xFE1
 19809                           indf2	equ	0xFDF
 19810                           postinc2	equ	0xFDE
 19811                           postdec2	equ	0xFDD
 19812                           plusw2	equ	0xFDB
 19813                           fsr2h	equ	0xFDA
 19814                           fsr2l	equ	0xFD9
 19815                           status	equ	0xFD8
 19816                           tosu	equ	0xFFF
 19817                           tosh	equ	0xFFE
 19818                           tosl	equ	0xFFD
 19819                           pclatu	equ	0xFFB
 19820                           pclath	equ	0xFFA
 19821                           pcl	equ	0xFF9
 19822                           tblptru	equ	0xFF8
 19823                           tblptrh	equ	0xFF7
 19824                           tblptrl	equ	0xFF6
 19825                           tablat	equ	0xFF5
 19826                           prodh	equ	0xFF4
 19827                           prodl	equ	0xFF3
 19828                           intcon	equ	0xFF2
 19829                           intcon2	equ	0xFF1
 19830                           intcon3	equ	0xFF0
 19831                           indf0	equ	0xFEF
 19832                           postinc0	equ	0xFEE
 19833                           fsr0h	equ	0xFEA
 19834                           fsr0l	equ	0xFE9
 19835                           wreg	equ	0xFE8
 19836                           indf1	equ	0xFE7
 19837                           postinc1	equ	0xFE6
 19838                           postdec1	equ	0xFE5
 19839                           plusw1	equ	0xFE3
 19840                           fsr1h	equ	0xFE2
 19841                           fsr1l	equ	0xFE1
 19842                           indf2	equ	0xFDF
 19843                           postinc2	equ	0xFDE
 19844                           postdec2	equ	0xFDD
 19845                           plusw2	equ	0xFDB
 19846                           fsr2h	equ	0xFDA
 19847                           fsr2l	equ	0xFD9
 19848                           status	equ	0xFD8
 19849                           
 19850                           	psect	text69
 19851  000000                     __ptext69:
 19852                           	opt stack 0
 19853                           tosu	equ	0xFFF
 19854                           tosh	equ	0xFFE
 19855                           tosl	equ	0xFFD
 19856                           pclatu	equ	0xFFB
 19857                           pclath	equ	0xFFA
 19858                           pcl	equ	0xFF9
 19859                           tblptru	equ	0xFF8
 19860                           tblptrh	equ	0xFF7
 19861                           tblptrl	equ	0xFF6
 19862                           tablat	equ	0xFF5
 19863                           prodh	equ	0xFF4
 19864                           prodl	equ	0xFF3
 19865                           intcon	equ	0xFF2
 19866                           intcon2	equ	0xFF1
 19867                           intcon3	equ	0xFF0
 19868                           indf0	equ	0xFEF
 19869                           postinc0	equ	0xFEE
 19870                           fsr0h	equ	0xFEA
 19871                           fsr0l	equ	0xFE9
 19872                           wreg	equ	0xFE8
 19873                           indf1	equ	0xFE7
 19874                           postinc1	equ	0xFE6
 19875                           postdec1	equ	0xFE5
 19876                           plusw1	equ	0xFE3
 19877                           fsr1h	equ	0xFE2
 19878                           fsr1l	equ	0xFE1
 19879                           indf2	equ	0xFDF
 19880                           postinc2	equ	0xFDE
 19881                           postdec2	equ	0xFDD
 19882                           plusw2	equ	0xFDB
 19883                           fsr2h	equ	0xFDA
 19884                           fsr2l	equ	0xFD9
 19885                           status	equ	0xFD8
 19886                           
 19887                           	psect	rparam
 19888  0000                     tosu	equ	0xFFF
 19889                           tosh	equ	0xFFE
 19890                           tosl	equ	0xFFD
 19891                           pclatu	equ	0xFFB
 19892                           pclath	equ	0xFFA
 19893                           pcl	equ	0xFF9
 19894                           tblptru	equ	0xFF8
 19895                           tblptrh	equ	0xFF7
 19896                           tblptrl	equ	0xFF6
 19897                           tablat	equ	0xFF5
 19898                           prodh	equ	0xFF4
 19899                           prodl	equ	0xFF3
 19900                           intcon	equ	0xFF2
 19901                           intcon2	equ	0xFF1
 19902                           intcon3	equ	0xFF0
 19903                           indf0	equ	0xFEF
 19904                           postinc0	equ	0xFEE
 19905                           fsr0h	equ	0xFEA
 19906                           fsr0l	equ	0xFE9
 19907                           wreg	equ	0xFE8
 19908                           indf1	equ	0xFE7
 19909                           postinc1	equ	0xFE6
 19910                           postdec1	equ	0xFE5
 19911                           plusw1	equ	0xFE3
 19912                           fsr1h	equ	0xFE2
 19913                           fsr1l	equ	0xFE1
 19914                           indf2	equ	0xFDF
 19915                           postinc2	equ	0xFDE
 19916                           postdec2	equ	0xFDD
 19917                           plusw2	equ	0xFDB
 19918                           fsr2h	equ	0xFDA
 19919                           fsr2l	equ	0xFD9
 19920                           status	equ	0xFD8
 19921                           
 19922                           	psect	temp
 19923  00004A                     btemp:
 19924                           	opt stack 0
 19925  00004A                     	ds	1
 19926  0000                     int$flags	set	btemp
 19927                           tosu	equ	0xFFF
 19928                           tosh	equ	0xFFE
 19929                           tosl	equ	0xFFD
 19930                           pclatu	equ	0xFFB
 19931                           pclath	equ	0xFFA
 19932                           pcl	equ	0xFF9
 19933                           tblptru	equ	0xFF8
 19934                           tblptrh	equ	0xFF7
 19935                           tblptrl	equ	0xFF6
 19936                           tablat	equ	0xFF5
 19937                           prodh	equ	0xFF4
 19938                           prodl	equ	0xFF3
 19939                           intcon	equ	0xFF2
 19940                           intcon2	equ	0xFF1
 19941                           intcon3	equ	0xFF0
 19942                           indf0	equ	0xFEF
 19943                           postinc0	equ	0xFEE
 19944                           fsr0h	equ	0xFEA
 19945                           fsr0l	equ	0xFE9
 19946                           wreg	equ	0xFE8
 19947                           indf1	equ	0xFE7
 19948                           postinc1	equ	0xFE6
 19949                           postdec1	equ	0xFE5
 19950                           plusw1	equ	0xFE3
 19951                           fsr1h	equ	0xFE2
 19952                           fsr1l	equ	0xFE1
 19953                           indf2	equ	0xFDF
 19954                           postinc2	equ	0xFDE
 19955                           postdec2	equ	0xFDD
 19956                           plusw2	equ	0xFDB
 19957                           fsr2h	equ	0xFDA
 19958                           fsr2l	equ	0xFD9
 19959                           status	equ	0xFD8


Data Sizes:
    Strings     446
    Constant    152
    Data        29
    BSS         964
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      73
    BANK0           160    153     160
    BANK1           256     89     233
    BANK2           256     33     255
    BANK3           256      0      48
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    escalonador$3384	PTR FTN()void  size(2) Largest target is 1
		 -> SDCard(), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rd	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@fn(COMRAM[12]), f_utime@fn(COMRAM[12]), 
		 -> f_chmod@fn(COMRAM[12]), f_mkdir@fn(COMRAM[12]), f_unlink@fn(COMRAM[12]), f_stat@fn(COMRAM[12]), 
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK1[12]), NULL(NULL[0]), gps@gps_buffer(COMRAM[15]), 

    memset@p	PTR unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@fn(COMRAM[12]), f_utime@fn(COMRAM[12]), 
		 -> f_chmod@fn(COMRAM[12]), f_mkdir@fn(COMRAM[12]), f_unlink@fn(COMRAM[12]), f_stat@fn(COMRAM[12]), 
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK1[12]), NULL(NULL[0]), gps@gps_buffer(COMRAM[15]), 

    memcpy@d1	PTR void  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@direntry(COMRAM[21]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@direntry(COMRAM[21]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@direntry(COMRAM[21]), f_rename@fn(COMRAM[12]), 
		 -> f_mkdir@fn(COMRAM[12]), f_open@fn(BANK1[12]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@direntry(COMRAM[21]), f_rename@fn(COMRAM[12]), 
		 -> f_mkdir@fn(COMRAM[12]), f_open@fn(BANK1[12]), NULL(NULL[0]), 

    memcmp@s2	PTR const void  size(2) Largest target is 12
		 -> f_rename@fn(COMRAM[12]), f_utime@fn(COMRAM[12]), f_chmod@fn(COMRAM[12]), f_mkdir@fn(COMRAM[12]), 
		 -> f_unlink@fn(COMRAM[12]), f_stat@fn(COMRAM[12]), f_opendir@fn(COMRAM[12]), f_open@fn(BANK1[12]), 
		 -> STR_31(CODE[6]), STR_28(CODE[6]), STR_26(CODE[6]), STR_25(CODE[4]), 
		 -> STR_23(CODE[4]), 

    memcmp@s1	PTR const void  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), NULL(NULL[0]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    fil.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    fil.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    p_tarefas	PTR FTN()void [2] size(2) Largest target is 1
		 -> SDCard(), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_truncate@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_truncate@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_readdir@dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_opendir@dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_lseek@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_close@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_close@fp	PTR struct _FIL size(2) Largest target is 34
		 -> SDCard@fil(BANK2[32]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_sync@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_sync@fp	PTR struct _FIL size(2) Largest target is 34
		 -> SDCard@fil(BANK2[32]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_write@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_read@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@direntry(COMRAM[21]), NULL(NULL[0]), 

    f_open@dir	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_38(CODE[10]), 

    S984_FIL$dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    S984_FIL$fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_open@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_open@fp	PTR struct _FIL size(2) Largest target is 34
		 -> SDCard@fil(BANK2[32]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_mount@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), 

    validate@fs	PTR const struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    auto_mount@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    auto_mount@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_rename@path_old(COMRAM[2]), f_utime@path(COMRAM[2]), f_chmod@path(COMRAM[2]), f_mkdir@path(COMRAM[2]), 
		 -> f_unlink@path(COMRAM[2]), f_getfree@drv(COMRAM[2]), f_stat@path(COMRAM[2]), f_opendir@path(COMRAM[2]), 
		 -> f_open@path(BANK1[2]), 

    auto_mount@p	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_38(CODE[10]), 

    check_fs@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    reserve_direntry@dir	PTR PTR unsigned char  size(2) Largest target is 2
		 -> f_rename@dir_new(COMRAM[2]), f_mkdir@dir(COMRAM[2]), f_open@dir(BANK1[2]), 

    reserve_direntry@dptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), NULL(NULL[0]), 

    reserve_direntry@dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    reserve_direntry@dj	PTR struct _DIR size(2) Largest target is 19
		 -> f_rename@dj(COMRAM[18]), f_mkdir@dj(COMRAM[18]), f_open@dj(BANK1[18]), 

    reserve_direntry@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    trace_path@fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_rename@fn(COMRAM[12]), f_utime@fn(COMRAM[12]), f_chmod@fn(COMRAM[12]), f_mkdir@fn(COMRAM[12]), 
		 -> f_unlink@fn(COMRAM[12]), f_stat@fn(COMRAM[12]), f_opendir@fn(COMRAM[12]), f_open@fn(BANK1[12]), 

    trace_path@dir	PTR PTR unsigned char  size(2) Largest target is 2
		 -> f_rename@dir_new(COMRAM[2]), f_rename@dir_old(COMRAM[2]), f_utime@dir(COMRAM[2]), f_chmod@dir(COMRAM[2]), 
		 -> f_mkdir@dir(COMRAM[2]), f_unlink@dir(COMRAM[2]), f_stat@dir(COMRAM[2]), f_opendir@dir(COMRAM[2]), 
		 -> f_open@dir(BANK1[2]), 

    trace_path@path	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_38(CODE[10]), 

    trace_path@dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    trace_path@dj	PTR struct _DIR size(2) Largest target is 19
		 -> f_rename@dj(COMRAM[18]), f_utime@dj(COMRAM[18]), f_chmod@dj(COMRAM[18]), f_mkdir@dj(COMRAM[18]), 
		 -> f_unlink@dj(COMRAM[18]), f_stat@dj(COMRAM[18]), f_open@dj(BANK1[18]), 

    trace_path@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    trace_path@dptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), NULL(NULL[0]), 

    make_dirfile@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> trace_path@path(BANK0[2]), 

    make_dirfile@dirname	PTR unsigned char  size(2) Largest target is 12
		 -> f_rename@fn(COMRAM[12]), f_utime@fn(COMRAM[12]), f_chmod@fn(COMRAM[12]), f_mkdir@fn(COMRAM[12]), 
		 -> f_unlink@fn(COMRAM[12]), f_stat@fn(COMRAM[12]), f_opendir@fn(COMRAM[12]), f_open@fn(BANK1[12]), 

    S949_DIR$fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    next_dir_entry@dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    next_dir_entry@dj	PTR struct _DIR size(2) Largest target is 19
		 -> f_rename@dj(COMRAM[18]), f_utime@dj(COMRAM[18]), f_chmod@dj(COMRAM[18]), f_mkdir@dj(COMRAM[18]), 
		 -> f_unlink@dj(COMRAM[18]), f_stat@dj(COMRAM[18]), f_open@dj(BANK1[18]), 

    clust2sect@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    create_chain@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    remove_chain@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    put_cluster@p	PTR unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), NULL(NULL[0]), 

    put_cluster@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    get_cluster@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    sync@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    FatFs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    move_window@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    escreve_frase_ram_lcd@buffer	PTR unsigned char  size(2) Largest target is 2047
		 -> STR_41(CODE[5]), STR_40(CODE[18]), buff(BANK2[20]), STR_39(CODE[10]), 
		 -> STR_37(CODE[16]), STR_36(CODE[16]), mensagem_inicial@msg_dois(BANK0[17]), mensagem_inicial@msg_linha_um(BANK0[17]), 
		 -> STR_34(CODE[19]), STR_33(CODE[19]), STR_32(CODE[19]), STR_30(CODE[16]), 
		 -> STR_29(CODE[16]), STR_27(CODE[19]), STR_24(CODE[17]), STR_22(CODE[19]), 
		 -> STR_21(CODE[12]), escreve_inteiro_lcd@texto(BANK0[7]), RAM(DATA[2047]), STR_20(CODE[19]), 
		 -> STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[14]), STR_16(CODE[19]), 
		 -> STR_15(CODE[17]), STR_14(CODE[16]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[5]), STR_4(CODE[5]), gps@gps_buffer(COMRAM[15]), dado_buffer(BANK1[7]), 
		 -> STR_2(CODE[6]), data_buffer(BANK1[15]), STR_1(CODE[6]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    sdc_disk_write@p_buff	PTR const unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), NULL(NULL[0]), 

    sdc_disk_read@p_buff	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), NULL(NULL[0]), 

    data_buff	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@fn(COMRAM[12]), f_utime@fn(COMRAM[12]), 
		 -> f_chmod@fn(COMRAM[12]), f_mkdir@fn(COMRAM[12]), f_unlink@fn(COMRAM[12]), f_stat@fn(COMRAM[12]), 
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK1[12]), NULL(NULL[0]), gps@gps_buffer(COMRAM[15]), 


Critical Paths under _main in COMRAM

    _mensagem_inicial->_posicao_cursor_lcd
    _init_lcd->_escreve_cmd_lcd
    _escreve_cmd_lcd->_delay
    _config_timer_zero->_write_timer_zero
    _SDCard->_f_close
    _make_dirfile->_memset
    _reserve_direntry->_disk_write
    _clust2sect->___lmul
    _disk_initialize->_sdc_disk_initialize
    _sdc_disk_initialize->_escreve_inteiro_lcd
    _check_fs->_disk_read
    _validate->_disk_status
    _disk_status->_sdc_disk_status
    _move_window->_disk_read
    _move_window->_disk_write
    _disk_write->_sdc_disk_write
    _sdc_disk_write->_command
    _disk_read->_sdc_disk_read
    _sdc_disk_read->_escreve_inteiro_lcd
    _response->_recebe_dado_SPI
    _proceed->_escreve_dado_SPI
    _posicao_cursor_lcd->_endereco_cursor_lcd
    _endereco_cursor_lcd->_delay
    _escreve_inteiro_lcd->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _escreve_frase_ram_lcd->_escreve_caractere_lcd
    _escreve_caractere_lcd->_delay
    _dummy_clocks->_escreve_dado_SPI
    _command->_escreve_dado_SPI

Critical Paths under _isr in COMRAM

    _isr->i2_write_timer_zero

Critical Paths under _main in BANK0

    _escalonador->_SDCard
    _f_open->_trace_path
    _trace_path->_next_dir_entry
    _reserve_direntry->_create_chain
    _next_dir_entry->_get_cluster
    _create_chain->_get_cluster
    _remove_chain->_get_cluster
    _put_cluster->_move_window
    _get_cluster->_move_window
    _auto_mount->_check_fs
    _disk_initialize->_sdc_disk_initialize
    _sdc_disk_initialize->_escreve_inteiro_lcd
    _check_fs->_disk_read
    _f_close->_f_sync
    _f_sync->_sync
    _sync->_move_window
    _move_window->_disk_read
    _disk_read->_sdc_disk_read
    _sdc_disk_read->_escreve_inteiro_lcd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_escalonador
    _SDCard->_f_open
    _f_open->_reserve_direntry

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _escalonador->_SDCard

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  769070
                        _escalonador
                    _inicializa_shrc
                 _inicializa_tarefas
                      _init_hardware
                           _init_lcd
                   _mensagem_inicial
 ---------------------------------------------------------------------------------
 (1) _mensagem_inicial                                    36    36      0   11143
                                             27 COMRAM     2     2      0
                                              0 BANK0     34    34      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             1     1      0     613
                                             24 COMRAM     1     1      0
                              _delay
                    _escreve_cmd_lcd
 ---------------------------------------------------------------------------------
 (2) _escreve_cmd_lcd                                      1     1      0     477
                                             23 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     195
                  _config_timer_dois
                  _config_timer_zero
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     195
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     4     2      2     195
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _config_timer_dois                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_shrc                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0  757119
                                             86 BANK1      3     3      0
                             _SDCard *
 ---------------------------------------------------------------------------------
 (2) _SDCard                                              39    39      0  756896
                                            151 BANK0      2     2      0
                                              0 BANK2     33    33      0
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                            _f_close
                            _f_mount
                             _f_open
                 _posicao_cursor_lcd
                            _proceed
 ---------------------------------------------------------------------------------
 (3) _f_open                                              72    67      5  633675
                                             14 BANK1     72    67      5
                         _auto_mount
                        _get_fattime
                             _memcpy
                             _memset
                        _move_window
                       _remove_chain
                   _reserve_direntry
                         _trace_path
 ---------------------------------------------------------------------------------
 (4) _trace_path                                          33    25      8  118832
                                            131 BANK0     20    12      8
                                              0 BANK1     13    13      0
                         _clust2sect
                       _make_dirfile
                             _memcmp
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (5) _make_dirfile                                        13     9      4    4103
                                             29 COMRAM    13     9      4
                             _memset
 ---------------------------------------------------------------------------------
 (4) _reserve_direntry                                    20    16      4  241139
                                            142 BANK0      6     2      4
                                              0 BANK1     14    14      0
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memset
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (5) _next_dir_entry                                      15    13      2   57203
                                            116 BANK0     15    13      2
                         _clust2sect
                        _get_cluster
 ---------------------------------------------------------------------------------
 (6) _clust2sect                                          11     7      4    2053
                                             33 COMRAM    11     7      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _create_chain                                        26    22      4  110392
                                            116 BANK0     26    22      4
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (4) _remove_chain                                        14    10      4  109509
                                            116 BANK0     14    10      4
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (6) _put_cluster                                         27    19      8   54635
                                             58 BANK0     27    19      8
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (6) _get_cluster                                         58    54      4   54226
                                             58 BANK0     58    54      4
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    3438
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6    2334
                                             21 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (4) _auto_mount                                          51    48      3  106990
                                             60 BANK0     51    48      3
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                             _memset
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2567
                                             21 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _disk_initialize                                      4     4      0   24890
                                             48 COMRAM     2     2      0
                _sdc_disk_initialize
 ---------------------------------------------------------------------------------
 (6) _sdc_disk_initialize                                 21    21      0   24760
                                             47 COMRAM     1     1      0
                                              7 BANK0      8     8      0
                            _command
                       _dummy_clocks
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                 _posicao_cursor_lcd
                           _response
 ---------------------------------------------------------------------------------
 (5) _check_fs                                            25    21      4   51791
                                             35 BANK0     25    21      4
                          _disk_read
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                             _memcmp
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (5) _memcmp                                               9     3      6    1781
                                             21 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8     812
                                             21 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1525
                                             21 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _f_mount                                              3     1      2     214
                                             21 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _f_close                                              3     1      2  101267
                                             52 COMRAM     1     1      0
                                             73 BANK0      2     0      2
                             _f_sync
 ---------------------------------------------------------------------------------
 (4) _f_sync                                              13    11      2  101074
                                             60 BANK0     13    11      2
                        _get_fattime
                        _move_window
                               _sync
                           _validate
 ---------------------------------------------------------------------------------
 (5) _validate                                             6     2      4    1430
                                             28 COMRAM     6     2      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (6) _disk_status                                          5     5      0     226
                                             23 COMRAM     5     5      0
                    _sdc_disk_status
 ---------------------------------------------------------------------------------
 (7) _sdc_disk_status                                      4     4      0      34
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _sync                                                 2     2      0   49328
                                             58 BANK0      2     2      0
                         _disk_ioctl
                        _move_window
 ---------------------------------------------------------------------------------
 (7) _move_window                                         23    19      4   48990
                                             35 BANK0     23    19      4
                          _disk_read
                         _disk_write
 ---------------------------------------------------------------------------------
 (8) _disk_write                                          12     5      7   18375
                                             47 COMRAM     5     5      0
                                              0 BANK0      7     0      7
                     _sdc_disk_write
 ---------------------------------------------------------------------------------
 (9) _sdc_disk_write                                      19    12      7   16675
                                             30 COMRAM    17    10      7
                            ___awdiv
                            _command
                       _dummy_clocks
                   _escreve_dado_SPI
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                           _response
 ---------------------------------------------------------------------------------
 (10) ___awdiv                                             8     4      4    2105
                                             21 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) _disk_read                                           12     5      7   27789
                                             51 COMRAM     1     1      0
                                             24 BANK0     11     4      7
                      _sdc_disk_read
 ---------------------------------------------------------------------------------
 (9) _sdc_disk_read                                       26    19      7   26322
                                             47 COMRAM     4     4      0
                                              7 BANK0     17    10      7
                            _command
                       _dummy_clocks
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (10) _response                                            1     1      0     102
                                             24 COMRAM     1     1      0
                    _recebe_dado_SPI
 ---------------------------------------------------------------------------------
 (11) _recebe_dado_SPI                                     3     3      0      68
                                             21 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _proceed                                              0     0      0     102
                   _escreve_dado_SPI
 ---------------------------------------------------------------------------------
 (2) _posicao_cursor_lcd                                   3     2      1    6447
                                             24 COMRAM     3     2      1
                _endereco_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _endereco_cursor_lcd                                  1     1      0     353
                                             23 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (10) _escreve_inteiro_lcd                                 9     7      2   10625
                                             45 COMRAM     2     0      2
                                              0 BANK0      7     7      0
              _escreve_frase_ram_lcd
                               _itoa
 ---------------------------------------------------------------------------------
 (11) _itoa                                                8     2      6    3936
                                             37 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (12) _utoa                                                9     3      6    3163
                                             28 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4    1132
                                             21 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (13) ___lwdiv                                             7     3      4    1321
                                             21 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _escreve_frase_ram_lcd                                2     0      2    4139
                                             24 COMRAM     2     0      2
              _escreve_caractere_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_caractere_lcd                                1     1      0     384
                                             23 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     2      0     136
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _dummy_clocks                                        5     5      0     170
                                             23 COMRAM     5     5      0
                   _escreve_dado_SPI
 ---------------------------------------------------------------------------------
 (10) _command                                             7     2      5    2764
                                             23 COMRAM     7     2      5
                   _escreve_dado_SPI
 ---------------------------------------------------------------------------------
 (4) _escreve_dado_SPI                                     2     2      0     102
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _disk_ioctl                                           7     4      3     304
                                             21 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (4) _get_fattime                                         51    47      4     201
                                             21 COMRAM    13     9      4
                                              0 BANK0     38    38      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _isr                                                17    17      0     183
                                              4 COMRAM    17    17      0
                   _recebe_dado_uart
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (15) i2_write_timer_zero                                  4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _recebe_dado_uart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _escalonador
     _SDCard *
       _escreve_frase_ram_lcd
         _escreve_caractere_lcd
           _delay
       _escreve_inteiro_lcd
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
       _f_close
         _f_sync
           _get_fattime
           _move_window
             _disk_read
               _sdc_disk_read
                 _command
                   _escreve_dado_SPI
                 _dummy_clocks
                   _escreve_dado_SPI
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _escreve_inteiro_lcd
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _itoa
                     _utoa
                       ___lwdiv
                       ___lwmod
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _proceed
                   _escreve_dado_SPI
                 _response
                   _recebe_dado_SPI
             _disk_write
               _sdc_disk_write
                 ___awdiv
                 _command
                   _escreve_dado_SPI
                 _dummy_clocks
                   _escreve_dado_SPI
                 _escreve_dado_SPI
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _response
                   _recebe_dado_SPI
           _sync
             _disk_ioctl
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _escreve_dado_SPI
                   _dummy_clocks
                     _escreve_dado_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _escreve_dado_SPI
                   _response
                     _recebe_dado_SPI
               _disk_write
                 _sdc_disk_write
                   ___awdiv
                   _command
                     _escreve_dado_SPI
                   _dummy_clocks
                     _escreve_dado_SPI
                   _escreve_dado_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _response
                     _recebe_dado_SPI
           _validate
             _disk_status
               _sdc_disk_status
       _f_mount
       _f_open
         _auto_mount
           ___lldiv
           ___lmul
           _check_fs
             _disk_read
               _sdc_disk_read
                 _command
                   _escreve_dado_SPI
                 _dummy_clocks
                   _escreve_dado_SPI
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _escreve_inteiro_lcd
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _itoa
                     _utoa
                       ___lwdiv
                       ___lwmod
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _proceed
                   _escreve_dado_SPI
                 _response
                   _recebe_dado_SPI
             _escreve_frase_ram_lcd
               _escreve_caractere_lcd
                 _delay
             _escreve_inteiro_lcd
               _escreve_frase_ram_lcd
                 _escreve_caractere_lcd
                   _delay
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
             _memcmp
             _posicao_cursor_lcd
               _endereco_cursor_lcd
                 _delay
           _disk_initialize
             _sdc_disk_initialize
               _command
                 _escreve_dado_SPI
               _dummy_clocks
                 _escreve_dado_SPI
               _escreve_frase_ram_lcd
                 _escreve_caractere_lcd
                   _delay
               _escreve_inteiro_lcd
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
               _posicao_cursor_lcd
                 _endereco_cursor_lcd
                   _delay
               _response
                 _recebe_dado_SPI
           _escreve_frase_ram_lcd
             _escreve_caractere_lcd
               _delay
           _escreve_inteiro_lcd
             _escreve_frase_ram_lcd
               _escreve_caractere_lcd
                 _delay
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
           _memset
           _posicao_cursor_lcd
             _endereco_cursor_lcd
               _delay
         _get_fattime
         _memcpy
         _memset
         _move_window
           _disk_read
             _sdc_disk_read
               _command
                 _escreve_dado_SPI
               _dummy_clocks
                 _escreve_dado_SPI
               _escreve_frase_ram_lcd
                 _escreve_caractere_lcd
                   _delay
               _escreve_inteiro_lcd
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
               _posicao_cursor_lcd
                 _endereco_cursor_lcd
                   _delay
               _proceed
                 _escreve_dado_SPI
               _response
                 _recebe_dado_SPI
           _disk_write
             _sdc_disk_write
               ___awdiv
               _command
                 _escreve_dado_SPI
               _dummy_clocks
                 _escreve_dado_SPI
               _escreve_dado_SPI
               _escreve_frase_ram_lcd
                 _escreve_caractere_lcd
                   _delay
               _posicao_cursor_lcd
                 _endereco_cursor_lcd
                   _delay
               _response
                 _recebe_dado_SPI
         _remove_chain
           _get_cluster
             ___wmul
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _escreve_dado_SPI
                   _dummy_clocks
                     _escreve_dado_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _escreve_dado_SPI
                   _response
                     _recebe_dado_SPI
               _disk_write
                 _sdc_disk_write
                   ___awdiv
                   _command
                     _escreve_dado_SPI
                   _dummy_clocks
                     _escreve_dado_SPI
                   _escreve_dado_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _response
                     _recebe_dado_SPI
           _put_cluster
             ___wmul
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _escreve_dado_SPI
                   _dummy_clocks
                     _escreve_dado_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _escreve_dado_SPI
                   _response
                     _recebe_dado_SPI
               _disk_write
                 _sdc_disk_write
                   ___awdiv
                   _command
                     _escreve_dado_SPI
                   _dummy_clocks
                     _escreve_dado_SPI
                   _escreve_dado_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _response
                     _recebe_dado_SPI
         _reserve_direntry
           _clust2sect
             ___lmul
           _create_chain
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _escreve_dado_SPI
                     _dummy_clocks
                       _escreve_dado_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _escreve_dado_SPI
                     _response
                       _recebe_dado_SPI
                 _disk_write
                   _sdc_disk_write
                     ___awdiv
                     _command
                       _escreve_dado_SPI
                     _dummy_clocks
                       _escreve_dado_SPI
                     _escreve_dado_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _response
                       _recebe_dado_SPI
             _put_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _escreve_dado_SPI
                     _dummy_clocks
                       _escreve_dado_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _escreve_dado_SPI
                     _response
                       _recebe_dado_SPI
                 _disk_write
                   _sdc_disk_write
                     ___awdiv
                     _command
                       _escreve_dado_SPI
                     _dummy_clocks
                       _escreve_dado_SPI
                     _escreve_dado_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _response
                       _recebe_dado_SPI
           _disk_write
             _sdc_disk_write
               ___awdiv
               _command
                 _escreve_dado_SPI
               _dummy_clocks
                 _escreve_dado_SPI
               _escreve_dado_SPI
               _escreve_frase_ram_lcd
                 _escreve_caractere_lcd
                   _delay
               _posicao_cursor_lcd
                 _endereco_cursor_lcd
                   _delay
               _response
                 _recebe_dado_SPI
           _memset
           _move_window
             _disk_read
               _sdc_disk_read
                 _command
                   _escreve_dado_SPI
                 _dummy_clocks
                   _escreve_dado_SPI
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _escreve_inteiro_lcd
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _itoa
                     _utoa
                       ___lwdiv
                       ___lwmod
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _proceed
                   _escreve_dado_SPI
                 _response
                   _recebe_dado_SPI
             _disk_write
               _sdc_disk_write
                 ___awdiv
                 _command
                   _escreve_dado_SPI
                 _dummy_clocks
                   _escreve_dado_SPI
                 _escreve_dado_SPI
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _response
                   _recebe_dado_SPI
           _next_dir_entry
             _clust2sect
               ___lmul
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _escreve_dado_SPI
                     _dummy_clocks
                       _escreve_dado_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _escreve_dado_SPI
                     _response
                       _recebe_dado_SPI
                 _disk_write
                   _sdc_disk_write
                     ___awdiv
                     _command
                       _escreve_dado_SPI
                     _dummy_clocks
                       _escreve_dado_SPI
                     _escreve_dado_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _response
                       _recebe_dado_SPI
         _trace_path
           _clust2sect
             ___lmul
           _make_dirfile
             _memset
           _memcmp
           _move_window
             _disk_read
               _sdc_disk_read
                 _command
                   _escreve_dado_SPI
                 _dummy_clocks
                   _escreve_dado_SPI
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _escreve_inteiro_lcd
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _itoa
                     _utoa
                       ___lwdiv
                       ___lwmod
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _proceed
                   _escreve_dado_SPI
                 _response
                   _recebe_dado_SPI
             _disk_write
               _sdc_disk_write
                 ___awdiv
                 _command
                   _escreve_dado_SPI
                 _dummy_clocks
                   _escreve_dado_SPI
                 _escreve_dado_SPI
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _response
                   _recebe_dado_SPI
           _next_dir_entry
             _clust2sect
               ___lmul
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _escreve_dado_SPI
                     _dummy_clocks
                       _escreve_dado_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _escreve_dado_SPI
                     _response
                       _recebe_dado_SPI
                 _disk_write
                   _sdc_disk_write
                     ___awdiv
                     _command
                       _escreve_dado_SPI
                     _dummy_clocks
                       _escreve_dado_SPI
                     _escreve_dado_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _response
                       _recebe_dado_SPI
       _posicao_cursor_lcd
         _endereco_cursor_lcd
           _delay
       _proceed
         _escreve_dado_SPI
   _inicializa_shrc
   _inicializa_tarefas
   _init_hardware
     _config_timer_dois
     _config_timer_zero
       _write_timer_zero
     _init_interrupt
     _init_oscilador
     _init_ports
   _init_lcd
     _delay
     _escreve_cmd_lcd
       _delay
   _mensagem_inicial
     _escreve_cmd_lcd
       _delay
     _escreve_frase_ram_lcd
       _escreve_caractere_lcd
         _delay
     _posicao_cursor_lcd
       _endereco_cursor_lcd
         _delay

 _isr (ROOT)
   _recebe_dado_uart
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     228      21       27.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      30      11       18.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100     21      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     59      E9       7       91.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     99      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      49       1       77.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     301      20        0.0%
DATA                 0      0     529       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Mar 03 14:56:09 2022

             next_dir_entry@idx 00E1        __end_of_mensagem_inicial 4D32                               _s 003D  
           next_dir_entry@clust 00DD                ??_init_interrupt 0016    __size_of_escreve_inteiro_lcd 003C  
                  ___awdiv@sign 001B                     __CFG_BOR$ON 000000                              _fs 0330  
                            _rd 0156             ___wmul@multiplicand 0018                     __CFG_BORV$3 000000  
                   _put_cluster 19D0                disk_write@sector 0062   sdc_disk_initialize@count_nosd 0069  
                  ?_escalonador 0001                  create_chain@fs 00E0                disk_write@result 0032  
              ?_inicializa_shrc 0001                             l210 53B0                             l212 53B4  
                           l213 53B8                             l135 50D8                             l311 5406  
                           l313 5414                             l241 201E                             l321 4A3C  
                           l330 4A72                             l331 4A7A                             l323 4A46  
                           l332 4A7C                             l333 4A84                             l325 4A50  
                           l350 4E52                             l334 4A86                             l351 4E5A  
                           l343 4E26                             l335 4A8E                             l327 4A5A  
                           l352 4E5C                             l336 4A90                             l328 4A5C  
                           l353 4E64                             l345 4E30                             l281 434E  
                           l329 4A70                             l354 4E66                             l362 4DB2  
                           l355 4E6E                             l347 4E3A                             l380 4D76  
                           l372 4D42                             l356 4E70                             l348 4E3C  
                           l284 4360                             l381 4D78                             l349 4E50  
                           l382 4D80                             l374 4D4C                             l383 4D82  
                           l711 42A0                             l384 4D8A                             l376 4D56  
                           l640 2DF2                             l385 4D8C                             l386 4D94  
                           l378 4D60                             l714 424E                             l387 4D96  
                           l379 4D62                             l803 050C                             l637 2E02  
                           l830 0D8A                             l808 0B58                             l835 0DC2  
                           l845 10AE                             l784 2C8A                             _PCL 000FF9  
                           _PR2 000FCB                             _E_W 0048                ??_init_oscilador 0016  
                           _n_s 0049                             _isr 0008                             _txt 02B6  
                  disk_read@res 0082                             prod 000FF3                  ??_create_chain 00D8  
                           tosl 000FFD                             wreg 000FE8                    __CFG_FOSC$HS 000000  
     __size_of_write_timer_zero 0012                 create_chain@mcl 00DC                 create_chain@ncl 00EA  
               create_chain@scl 00E6                    __CFG_LVP$OFF 000000         ??_escreve_frase_ram_lcd 001B  
                  __CFG_WDT$OFF 000000                            l1312 5228                            l1332 3FA6  
                          l1925 4BAC                            l1978 4FD2                            l1899 4838  
                          l1988 5184                            ?_isr 0001           _escreve_caractere_lcd 4D32  
                          STR_1 6257                            STR_2 625D                            STR_3 6263  
                          STR_4 6273                            STR_6 626E                            STR_7 6248  
                          STR_8 6167                            STR_9 620A                  timer_dois@flag 0042  
                          _BRGH 007D62                            _CREN 007D5C                            _T0IF 007F92  
                          _LATB 000F8A                            _PIE1 000F9D               _valor_leitura_adc 0100  
                          _RCIF 007CF5                            _TMR2 000FCC                            _SPEN 007D5F  
                          _TRMT 007D61                            _TXEN 007D65                            _SYNC 007D64  
                  trace_path@dj 00E3                    trace_path@fn 00E5                    trace_path@ds 0179  
                  trace_path@fs 0177                   ?_make_dirfile 001E                            _dado 0043  
                          _buff 02CA                            _main 5384                            _fsid 015A  
                          _itoa 510A                            fsr0h 000FEA                            fsr1h 000FE2  
                          indf0 000FEF                            fsr2h 000FDA                            fsr0l 000FE9  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          fsr2l 000FD9                            btemp 004A                            _utoa 47B8  
                          _sync 4EDA                   disk_ioctl@cmd 0016                   disk_read@buff 0078  
                 disk_ioctl@res 001A                   disk_read@pdrv 007F                            prodh 000FF4  
                          prodl 000FF3                            start 000E                   __CFG_IESO$OFF 000000  
                 __CFG_MCLRE$ON 000000                    ___param_bank 000000                           ??_isr 0005  
      __size_of_recebe_dado_SPI 005C                   __CFG_PLLDIV$5 000000                           l11012 4C9C  
                         l11006 4C70                           l11102 5346                           l10320 53FE  
                         l11032 5494                           l11112 51DE                           l11018 4CA0  
                         l11050 3A06                           l11106 51D2                           l12010 30C0  
                         l10500 4ECE                           l11124 51F4                           l12020 312E  
                         l12012 30EC                           l10334 541A                           l10326 540C  
                         l10414 47C0                           l11054 3ABC                           l11118 51F0  
                         l11222 354A                           l11142 33A8                           l12014 3102  
                         l10344 4FA0                           l10424 47FA                           l10512 4E28  
                         l11160 3400                           l12112 00B4                           l11320 15C6  
                         l12040 3220                           l10346 4FA8                           l11074 3B70  
                         l11058 3AC6                           l11066 3B22                           l11170 344A  
                         l12130 00F8                           l12122 00E4                           l12034 31B4  
                         l10460 50DA                           l10444 4FDE                           l10356 4FC8  
                         l10348 4FAC                           l10372 517A                           l10364 515A  
                         l10516 4E32                           l11076 3B8E                           l11092 4F58  
                         l12212 0AEC                           l12204 098E                           l12108 00B0  
                         l12220 51A0                           l11332 16F6                           l11324 15D6  
                         l11404 1DB4                           l11412 1F14                           l12052 3258  
                         l12044 3224                           l12028 31A0                           l10390 4D58  
                         l10382 4D44                           l10366 5162                           l10630 4ACC  
                         l11254 35F2                           l11238 3598                           l11182 347C  
                         l11166 342C                           l11318 15A2                           l11342 199A  
                         l11406 1F10                           l11414 1F38                           l12062 330E  
                         l10456 50D0                           l10448 5006                           l10368 5166  
                         l10720 2094                           l12240 36E6                           l11088 4F44  
                         l11440 4974                           l11272 364A                           l12208 09AE  
                         l11344 19BC                           l11360 1A74                           l11352 19F8  
                         l11520 2E12                           l12056 32D4                           l12048 3254  
                         l12320 0D0A                           l10386 4D4E                           l10546 512E  
                         l10570 4DE8                           l10562 4DCC                           l10802 22A6  
                         l10714 206E                           l10642 4AF2                           l11434 48FC  
                         l11442 497C                           l11450 52FC                           l11098 5336  
                         l12170 0390                           l12226 51BC                           l11530 2E8E  
                         l11506 2D58                           l12066 3320                           l10484 4E8A  
                         l10820 2326                           l10724 20B4                           l10644 4AFA  
                         l10636 4ADC                           l12084 0054                           l12076 0024  
                         l11380 1B8C                           l11516 2DBC                           l11508 2D6C  
                         l11428 46A2                           l11620 41A0                           l12340 0D94  
                         l12308 0CAE                           l11286 53BC                           l10478 5100  
                         l10590 5236                           l10566 4DDA                           l10558 4DBE  
                         l10574 4DEE                           l10830 236E                           l10814 22EE  
                         l10662 4B32                           l10654 4B1A                           l10646 4AFE  
                         l11462 5310                           l12174 0394                           l12166 0336  
                         l12094 007C                           l12078 002A                           l11390 1C54  
                         l11366 1ACA                           l11542 2EEE                           l11702 4280  
                         l11614 416C                           l10576 4E0A                           l10752 2154  
                         l10736 20F6                           l12272 3962                           l11456 5306  
                         l11368 1B12                           l11712 429E                           l11704 4282  
                         l12344 0DBE                           l12360 0FE4                           l12328 0D3A  
                         l14040 539C                           l10578 4E0E                           l10834 238E  
                         l10818 230E                           l10762 219C                           l10658 4B24  
                         l11490 4F30                           l12282 503A                           l11298 1402  
                         l11386 1C18                           l11562 2FBE                           l11554 2F6C  
                         l11714 42A2                           l11722 42C2                           l11634 41C6  
                         l12354 0F9A                           l12442 4A52                           l12434 4A3E  
                         l10844 23E2                           l10828 2360                           l10836 239E  
                         l10780 2220                           l10772 21C6                           l11484 4F14  
                         l12292 5078                           l11468 5314                           l12196 080A  
                         l11396 1CB2                           l11900 44EA                           l11548 2F2C  
                         l11652 4202                           l12540 3F5C                           l10790 226A  
                         l10686 1FD4                           l10950 43FA                           l12286 5058  
                         l11734 28DC                           l11398 1D52                           l11902 44FA  
                         l11566 3014                           l11590 3D32                           l11582 3C3C  
                         l11662 4220                           l12358 0F9E                           l12630 4782  
                         l12622 4716                           l12470 4AB2                           l12438 4A48  
                         l10776 2202                           l10936 4398                           l11840 50AC  
                         l11752 29BA                           l11680 4246                           l11672 4236  
                         l11664 4226                           l11656 420E                           l11648 41F6  
                         l12384 108A                           l10698 2010                           l10938 43C4  
                         l11850 50C0                           l11770 2A82                           l11906 453C  
                         l11594 3D36                           l11922 252A                           l12378 107A  
                         l12634 47B2                           l12618 470C                           l11844 50B0  
                         l11676 423E                           l12388 10AA                           l10974 49D0  
                         l10966 499C                           l10990 4A12                           l10878 42FC  
                         l11790 2B4A                           l11598 3D86                           l11694 4268  
                         l11950 260C                           l11926 2580                           l12398 10CC  
                         l10984 4A0C                           l11864 4B5E                           l11944 25E0  
                         l11936 25BC                           l11866 4B6A                           l11890 4482  
                         l11882 4446                           l11970 26D6                           l11962 268E  
                         l12498 3E2A                           l11876 4B9E                           l11868 4B6E  
                         l11980 270C                           l10998 4C40                           l11958 267E  
                         l11896 44B2                           l11976 26FC                           l11994 2742  
                         l11988 272A                           ?_main 0001                           ?_itoa 0026  
               __end_of___awdiv 4B3C                           STR_10 60C3                           STR_11 60C3  
                         STR_20 6120                           STR_12 6189                           STR_21 6228  
                         STR_13 6156                           STR_14 61FA                           STR_30 61CA  
                         STR_22 610D                           STR_31 6251                           STR_23 6278  
                         STR_15 6178                           STR_24 6145                           STR_40 6133  
                         STR_16 6120                           STR_32 60D4                           STR_25 6278  
                         STR_41 6269                           STR_17 621A                           STR_33 60C1  
                         STR_26 6251                           STR_18 61DA                           STR_34 60E7  
                         STR_35 627C                           STR_19 61EA                           STR_27 60FA  
                         STR_28 6251                           STR_36 619A                           STR_29 61BA  
                         STR_37 61AA                           STR_38 623E                           STR_39 6234  
               __end_of___lldiv 4BBE                           ?_utoa 001D                           ?_sync 0001  
                         _T0CON 000FD5                 ___awdiv@divisor 0018                           u12045 21D8  
                         u14000 38D0                           u13200 2AD2                           u13210 2AD4  
                         u11700 4FFE                           u12180 39B8                           u14005 38C4  
                         u11710 5026                           u12415 14E0                           u13240 2B9A  
                         _T2CON 000FCA                           u12610 494E                           u13250 2B9C  
                         u12370 13B8                           u11707 4FF4                           u12515 1B44  
                         u13260 2BEA                           u13180 29B6                           u12460 1716  
                         u12540 1C38                           u11717 501C                           u12445 15B0  
                         u11750 4E9E                           u13270 2BEC                           u13430 44D2  
                         u12560 1D72                           u13440 4512                           u13345 3FCE  
                         u12617 4944                           u12465 170A                           u12545 1C2C  
                         u13505 262E                           u13355 3FF4                           u12395 1436  
                         u11764 4EA8                           u12660 2D34                           u13365 402C  
                         u11765 4EA4                           u12565 1D66                           u12485 1A2C  
                         u11758 4EA0                           u12590 4928                           u14430 4CC6  
                         u13375 404A                           u12840 3CFC                           u14440 4CDE  
                         u11881 5254                           u12825 3C4A                           u13625 3150  
                         u14418 476E                           u13900 09A8                           u12780 2FFC  
                         u11965 1F7C                           u12597 491E                           u17007 244A  
                         u17017 4EB2                           u17027 4EBA                  _data_buffer_32 0296  
                         u17037 4EC0                           u13925 0B92                           u17047 4EC8  
                         u17057 5214                           u13970 37A2                           u13890 0988  
                         u17067 50E2                           u13980 37EA                           u17077 50EA  
                         u13885 0826                           u13990 3888                           u17087 50F2  
                         u13975 3796                           u17097 50FA                           u13985 37DE  
                         u13995 387C                           u16707 48B6                           u16717 3DBC  
                         u16807 34CA                           u16727 3E1C                           u16817 34E8  
                         u16737 3E40                 __end_of___lwdiv 4FDC                           u16907 430E  
                         u16827 351C                           u16747 3E62                           u16917 432A  
                         u16837 35A8                           u16757 3F4C                           u16677 4D1E  
                         u16927 43CA                           u16847 35B8                           u16767 3F94  
                         u16687 487E                           u16937 442C                           u16857 2954  
                         u16777 0170                           u16697 489A                           u16947 1FA0  
                         u16867 2A44                           u16787 0328                           u16957 2088  
                         u16877 2AF8                           u16797 3492                           u16967 213A  
                         u16887 2C10                           u16977 223A                           u16897 2CB2  
                         u16987 23B8                           u16997 2430                 __end_of___lwmod 518E  
               ___awdiv@counter 001A                           _RCREG 000FAE                           _RCSTA 000FAB  
                         _TMR0H 000FD7                           _TMR0L 000FD6                           _SPBRG 000FAF  
                 __CFG_USBDIV$1 000000                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
               __end_of_f_close 5384                           _TXREG 000FAD                   trace_path@dir 00E9  
                         _TXSTA 000FAC                           _FatFs 00FC                   __CFG_PWRT$OFF 000000  
           ___lmul@multiplicand 001A      __size_of_config_timer_dois 000C                 __end_of_f_mount 507C  
                __CFG_FCMEN$OFF 000000      __size_of_config_timer_zero 001A                   get_cluster@bc 00D0  
                 get_cluster@fs 00D2                   get_cluster@wc 00CA                 __end_of_command 52F8  
                         _delay 53FA                 clust2sect@clust 0022                 __end_of_dpowers 6051  
      __size_of_escreve_cmd_lcd 008C                  ??_make_dirfile 0022                  disk_ioctl@buff 0017  
                         pclath 000FFA                  disk_read@count 007E                           tablat 000FF5  
                disk_ioctl@pdrv 0019                 __end_of_proceed 54EE                           plusw1 000FE3  
                         plusw2 000FDB                           utoa@c 0025                           utoa@v 0023  
                         status 000FD8    escreve_dado_SPI@data_to_shrc 0017                   disk_write@res 0034  
               __initialization 4BBE             disk_initialize@pdrv 0031             disk_initialize@stat 0032  
                  __end_of_main 53AC                    clust2sect@fs 002B                    __end_of_itoa 514C  
                  __end_of_utoa 485C                    __end_of_sync 4F34              _inicializa_tarefas 5286  
               escalonador@cont 01CB             reserve_direntry@dir 00F0               create_chain@clust 00D4  
                   auto_mount@p 00C5               create_chain@cstat 00E2                          ??_main 0036  
                        ??_itoa 002C                          ??_utoa 0023                          ??_sync 0035  
                 __activetblptr 000002             ?_inicializa_tarefas 0001                 __CFG_CCP2MX$OFF 000000  
                _next_dir_entry 3B92               get_fattime@f_time 001A                ??_sdc_disk_write 0026  
                        ?_delay 0001          ?_escreve_caractere_lcd 0001                          _ADCON0 000FC2  
                        _ADCON1 000FC1                          _ADRESH 000FC4                          _ADRESL 000FC3  
              ___awdiv@dividend 0016              auto_mount@bootsect 00C1                          _INT0IE 007F94  
                        _INT0IF 007F91                   ?_dummy_clocks 0001                          i2l1114 54CE  
                        i2l1203 4608                          _PCLATH 000FFA                          _INTCON 000FF2  
                        i2l8192 54DC                          i2l9870 45CE                          i2l9862 4598  
                        i2l9854 4588                          i2l9882 45F4                          i2l9874 45D2  
                        i2l9866 45A0                          i2l9884 4600                          _TMR0IF 007F92  
                        _TMR2IF 007CF1                          _SDCard 3DA0              auto_mount@maxclust 00B9  
      __end_of_recebe_dado_uart 54E0                          _SPPCFG 000F63                          _SPPCON 000F65  
              _is_it_gga_string 0045        __size_of_sdc_disk_status 0014                __end_of_check_fs 2CC4  
          ??_inicializa_tarefas 0016                  trace_path@dptr 017E                  trace_path@path 00E7  
        reserve_direntry@sector 0173        __size_of_disk_initialize 0034      __end_of_posicao_cursor_lcd 4E14  
                auto_mount@path 009C                    ?_move_window 0083            __end_of_create_chain 3026  
        __size_of_init_hardware 0016                __end_of__powers_ 6078                  auto_mount@stat 00C7  
                        _Result 003E            __size_of_get_fattime 0196                    put_cluster@p 00B1  
          __size_of_get_cluster 0638                          ___lmul 4F34            __size_of_disk_status 003E  
                        ___wmul 53D4                       ??___awdiv 001A                  __CFG_STVREN$ON 000000  
                     ??___lldiv 001E                          _f_open 0C64                       ??___lwdiv 001A  
                        _f_sync 366E                       ??___lwmod 001A                          _folder 0300  
                        _memcmp 48FA                          _memcpy 518E                __end_of_init_lcd 48FA  
                        _memset 532C                       ??_f_close 0035                          clear_0 4BE6  
                        clear_1 4BF8                          clear_2 4C04                          clear_3 4C10  
                        clear_4 4C1C                          clear_5 4C28                ___awdiv@quotient 001C  
                     ??_f_mount 0018             _sdc_disk_initialize 3364                       ??_command 001D  
              put_cluster@clust 009A              get_cluster@fatsect 00CC                          itoa@cp 002C  
      __end_of_reserve_direntry 3364                __end_of_validate 50C4          __end_of_next_dir_entry 3DA0  
          __size_of_escalonador 00B2               ??_recebe_dado_SPI 0016        __end_of_escreve_dado_SPI 510A  
              __end_of_response 5512                    __mediumconst 6028           write_timer_zero@timer 0018  
               disk_read@sector 007A                 disk_read@result 0080                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                       ??_proceed 0018  
              _write_timer_zero 54AA                          sync@fs 009A        sdc_disk_initialize@count 006C  
     escreve_caractere_lcd@data 0018                  ??_dummy_clocks 0018             _escreve_inteiro_lcd 524A  
               sdc_disk_write@i 0029                      __accesstop 0060         __end_of__initialization 4C2E  
               __CFG_PBADEN$OFF 000000            ?_sdc_disk_initialize 0001                  disk_write@buff 0060  
                disk_write@pdrv 0031                   ___rparam_used 000001               ??_escreve_cmd_lcd 0018  
                __pcstackCOMRAM 0001     __end_of_endereco_cursor_lcd 4E7E                    __pidataBANK1 541E  
             ?_mensagem_inicial 0001                   __end_of_delay 541E            ?_escreve_inteiro_lcd 002E  
                 check_fs@temp2 008B                   check_fs@temp3 008F                   check_fs@temp4 0096  
            ??_mensagem_inicial 001C            __end_of_make_dirfile 42C6                    ?_put_cluster 009A  
             reserve_direntry@c 017A               reserve_direntry@n 0177              _tarefa_em_execucao 003F  
    __end_ofi2_write_timer_zero 54CE                 ?_next_dir_entry 00D4          __size_of_sdc_disk_read 050A  
          reserve_direntry@dptr 0178                   _init_hardware 546E                    auto_mount@fs 00CD  
            __size_of_disk_read 0096                _get_cluster$1068 00C8                         ??_delay 0016  
              _is_it_rmc_string 0044    mensagem_inicial@msg_linha_um 0060                      __pbssBANK0 00F9  
                    __pbssBANK1 0100                      __pbssBANK2 0200                      __pbssBANK3 0300  
__size_of_escreve_frase_ram_lcd 0052   __end_of_escreve_frase_ram_lcd 502E           ??_sdc_disk_initialize 0030  
                       ?_SDCard 0001       escreve_inteiro_uart@F3952 01DB                      _gga_buffer 0200  
                       ?___lmul 0016               ??_sdc_disk_status 0016                   make_dirfile@a 0028  
                 make_dirfile@b 0026                   make_dirfile@c 002A                   make_dirfile@n 0029  
                 make_dirfile@t 0027                         ?___wmul 0016           mensagem_inicial@F4101 609F  
         mensagem_inicial@F4099 60B0           ??_escreve_inteiro_lcd 0030                         ?_f_open 0181  
                       ?_f_sync 009C                       SDCard@fil 02DF               ??_disk_initialize 0031  
                       ?_memcmp 0016                         ?_memcpy 0016                         ?_memset 0016  
                ___lmul@product 001E                    _gga_pointers 0126                         _INTCON2 000FF1  
                       _INTCON3 000FF0                  ?_init_hardware 0001                       ?_check_fs 0083  
                    _disk_ioctl 53AC                      _disk_write 4C3C                  remove_chain@fs 00E0  
      __size_of_inicializa_shrc 000C                      _clust2sect 4644                 trace_path@clust 017A  
               __CFG_VREGEN$OFF 000000                   ?_remove_chain 00D4           __size_of_create_chain 0362  
                     ?_init_lcd 0001                 __size_of_SDCard 020A                   _sdc_disk_read 1F4E  
                    _auto_mount 0012               __end_of__npowers_ 609F                         __Hparam 0000  
                       __Lparam 0000                       ?_validate 001D               __end_of_disk_read 4A2C  
                 put_cluster@bc 00AF                       ?_response 0001                   put_cluster@fs 00B3  
                    f_close@res 0035                         ___awdiv 4AB8                 __size_of___lmul 0056  
                       ___lldiv 4B3C                 __size_of___wmul 0026            __size_of_move_window 022A  
                    check_fs@fs 009A                         ___lwdiv 4F8A                         ___lwmod 514C  
               __size_of_f_open 0734                 __size_of_f_sync 02FA            __end_of_dummy_clocks 524A  
                       _f_close 5358                         __pcinit 4BBE                 __size_of_memcmp 009C  
               __size_of_memcpy 0040                 __size_of_memset 002C                      _init_ports 5456  
                       __ramtop 0800                         _f_mount 502E                         __ptext0 5384  
                       __ptext1 4CB8                         __ptext2 485C                         __ptext3 4A2C  
                       __ptext4 546E                         __ptext5 5456                         __ptext6 5512  
                       __ptext7 5498                         __ptext8 543C                         __ptext9 54AA  
                       _command 52C0                       _T0CONbits 000FD5             auto_mount@totalsect 00BD  
       i2write_timer_zero@timer 0003     endereco_cursor_lcd@endereco 0018                         _dpowers 6029  
                  __size_of_isr 463C         ??_escreve_caractere_lcd 0018                      ??_check_fs 0087  
                  _create_chain 2CC4                         _proceed 54E0         __size_of_init_interrupt 0012  
                __pintcode_body 4540            end_of_initialization 4C2E                      f_open@mode 0185  
                    f_open@path 0183                  ??_remove_chain 00D8                         isr@cont 0015  
                       memcmp@n 001A                         memcpy@d 001C                         memcpy@n 001A  
                       memcpy@s 001E         __size_of_init_oscilador 0008                         itoa@buf 0026  
                       memset@c 0018                         itoa@val 0028                         memset@n 001A  
                 SDCard@FResult 02DE                         memset@p 001C            sdc_disk_initialize@i 0067  
                 __Lmediumconst 6028                      ??_init_lcd 0019                         int_func 4540  
                    _rmc_buffer 0250               ?_recebe_dado_uart 0001                 disk_status@pdrv 001B  
               disk_status@stat 001C                  ?_sdc_disk_read 0067          write_timer_zero@timer0 0016  
               ___lldiv@divisor 001A                      f_mount@drv 0018              ??_recebe_dado_uart 0001  
              sdc_disk_read@ptr 006E                 ___lldiv@counter 0022                      ??_validate 0021  
         __size_of_make_dirfile 0186                      ??_response 0019                       _RCSTAbits 000FAB  
      __end_of_write_timer_zero 54BC                         postdec1 000FE5                         postdec2 000FDD  
               _recebe_dado_SPI 4E7E                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                         utoa@buf 001D                         utoa@val 001F  
                 _check_fs$1315 0095                       _PORTBbits 000F81                       _PORTDbits 000F83  
               ??_init_hardware 001A                      _trace_path 2458              _posicao_cursor_lcd 4DA4  
          __size_of_put_cluster 057E                     ?_disk_ioctl 0016               ?_reserve_direntry 00EE  
                     _TRISBbits 000F93                     ?_disk_write 0060                       _TRISCbits 000F94  
                     _TRISDbits 000F95               ?_escreve_dado_SPI 0001                next_dir_entry@dj 00D4  
               _escreve_cmd_lcd 4A2C              ??_reserve_direntry 00F2             ?_posicao_cursor_lcd 0019  
               disk_write@count 0066              ??_escreve_dado_SPI 0016                     ?_clust2sect 0022  
              _put_cluster$1091 00A7                _put_cluster$1092 00A9                      command@CMD 001D  
                    command@CRC 001C                      command@arg 0018                    _make_dirfile 4140  
                 ??_get_fattime 0060               ??_inicializa_shrc 0016     __size_of_inicializa_tarefas 003A  
                __end_of_SDCard 3FAA                   ??_get_cluster 009E                   ??_disk_status 0018  
                   ?_auto_mount 009C               _make_dirfile$1201 0024                 command@argument 001E  
          ??_posicao_cursor_lcd 001A                  __end_of___lmul 4F8A                ??_next_dir_entry 00D6  
                __end_of___wmul 53FA                  __end_of_f_open 1398                   ??_escalonador 01C9  
                   ?_init_ports 0001                  __end_of_f_sync 3968                  __end_of_memcmp 4996  
                __end_of_memcpy 51CE                  __end_of_memset 5358             start_initialization 4BBE  
                   __end_of_isr 4644       __size_of_mensagem_inicial 007A              reserve_direntry@dj 00EE  
            reserve_direntry@fs 017F                 _sdc_disk_status 5484                 ??_sdc_disk_read 0030  
                      ??_SDCard 00F7               auto_mount@fatsize 00C8              i2_write_timer_zero 54BC  
       __end_of_recebe_dado_SPI 4EDA                 _disk_initialize 52F8           reserve_direntry@clust 017B  
       __size_of_sdc_disk_write 0176                _data_uart_recebe 0041                     _dado_buffer 016C  
         __size_of_dummy_clocks 003E                   auto_mount@fmt 00CC             __size_of_disk_ioctl 0028  
           ?i2_write_timer_zero 0001             __size_of_disk_write 007C                        ??___lmul 001E  
                      ??___wmul 001A             __end_of_get_fattime 4140                        ??_f_open 0186  
                      ??_f_sync 009E                     __pdataBANK1 01CC             __end_of_get_cluster 19D0  
              __CFG_LPT1OSC$OFF 000000                        ??_memcmp 001C             __end_of_disk_status 520C  
                      ??_memcpy 001C             __size_of_clust2sect 00C2                        ??_memset 001C  
        sdc_disk_read@start_add 0071            __end_of_remove_chain 4540         sdc_disk_initialize@buff 006E  
       __end_of_escreve_cmd_lcd 4AB8         sdc_disk_initialize@stat 006B                     ?_trace_path 00E3  
  __size_of_endereco_cursor_lcd 006A                     __pbssBIGRAM 0330                     __pbssCOMRAM 0036  
               _trace_path$1250 0175                 _trace_path$1248 0173                   __pcstackBANK0 0060  
                 __pcstackBANK1 0173                   __pcstackBANK2 02DE                  _init_interrupt 5498  
           __size_of_auto_mount 0C52            ??i2_write_timer_zero 0003             __end_of_escalonador 47B8  
   __end_of_sdc_disk_initialize 366E                     _data_buffer 015D               __size_of_check_fs 042A  
                  check_fs@sect 0083                    check_fs@temp 0093                    _dummy_clocks 520C  
                _init_oscilador 5512             __size_of_init_ports 0018           _escreve_frase_ram_lcd 4FDC  
                     _data_buff 00FE     __end_of_escreve_inteiro_lcd 5286               __size_of_init_lcd 009E  
              ___lwdiv@dividend 0016               delay@contador_int 0017               delay@contador_ext 0016  
                     _gga_index 003B                       __pintcode 0008                   __pmediumconst 6028  
                      ?___awdiv 0016                        ?___lldiv 0016               __size_of_validate 0048  
                     __npowers_ 6078                        ?___lwdiv 0016                        ?___lwmod 0016  
             __size_of_response 000C                        ?_f_close 00A9                       _disk_read 4996  
            _sinaliza_int_timer 0040                        ?_f_mount 0016                        ?_command 0018  
                    SDCard@init 015C          __end_of_init_interrupt 54AA             sdc_disk_read@p_buff 0067  
           sdc_disk_read@length 0075             sdc_disk_read@offset 006F             sdc_disk_read@sector 0069  
       __end_of_sdc_disk_status 5498  __size_of_escreve_caractere_lcd 0072   __end_of_escreve_caractere_lcd 4DA4  
                      ?_proceed 0001                       f_close@fp 00A9                ___lwdiv@quotient 001B  
                __size_of_delay 0024         __end_of_disk_initialize 532C          __end_of_init_oscilador 551A  
           make_dirfile@dirname 0020                      validate@id 001F                      validate@fs 001D  
                     _p_tarefas 0152                make_dirfile@path 001E                  ___wmul@product 001A  
                      _LATBbits 000F8A                       f_open@dir 01C7                ?_recebe_dado_SPI 0001  
                     f_open@res 01B4                        _PIE1bits 000F9D                     _get_fattime 3FAA  
           __size_of_trace_path 0442                       _rmc_index 0039                     _get_cluster 1398  
                   _disk_status 51CE                   ??_move_window 0087                       f_mount@fs 0016  
                      _PIR1bits 000F9E                   move_window@fs 0098               ?_write_timer_zero 0016  
               remove_chain@nxt 00DC                       f_sync@dir 00A7                       f_sync@res 00A2  
                     f_sync@tim 00A3        posicao_cursor_lcd@coluna 0019                      ?_disk_read 0078  
            ??_write_timer_zero 0018      posicao_cursor_lcd@endereco 001B       __size_of_recebe_dado_uart 0012  
                   _escalonador 4706                      _ADCON0bits 000FC2                      _ADCON1bits 000FC1  
                    _ADCON2bits 000FC0               ___wmul@multiplier 0016                ?_escreve_cmd_lcd 0001  
   escreve_frase_ram_lcd@buffer 0019                 ?_init_interrupt 0001                    ??_disk_ioctl 0019  
                  ??_disk_write 0030                 _inicializa_shrc 54FA                _mensagem_inicial 4CB8  
               ?_init_oscilador 0001                    ??_clust2sect 0026               ___lmul@multiplier 0016  
                     copy_data0 4BD2          ?_escreve_frase_ram_lcd 0019                auto_mount@chk_wp 009E  
             move_window@sector 0083        escreve_dado_SPI@contador 0016                  _sdc_disk_write 42C6  
     __size_of_reserve_direntry 033E        escreve_inteiro_lcd@F3962 01E2                    ??_auto_mount 009F  
                      __Hrparam 0000       __size_of_escreve_dado_SPI 0046                        __Lrparam 0000  
            __end_of_disk_ioctl 53D4           __size_of_remove_chain 0104                  put_cluster@val 009E  
              get_cluster@clust 009A              __end_of_disk_write 4CB8                __size_of___awdiv 0084  
              __size_of___lldiv 0082                   ??_put_cluster 00A2                __size_of___lwdiv 0052  
              __size_of___lwmod 0042                    ??_init_ports 0016             __end_of_move_window 3B92  
            __end_of_clust2sect 4706        escreve_inteiro_lcd@valor 002E                __size_of_f_close 002C  
      escreve_inteiro_lcd@texto 0060                __size_of_f_mount 004E               disk_status@result 0019  
              __size_of_command 0038           __end_of_init_hardware 5484                        _check_fs 289A  
                      _gga_code 0036                 ___lwdiv@divisor 0018                ?_sdc_disk_status 0001  
               ___lwdiv@counter 001A                        _fileName 01CC              __end_of_auto_mount 0C64  
                      __ptext10 54EE                        __ptext11 5286                        __ptext20 4644  
                      __ptext12 54FA                        __ptext21 2CC4                        __ptext13 4706  
                      __ptext30 3364                        __ptext22 443C                        __ptext14 3DA0  
                      __ptext31 289A                        __ptext23 19D0                        __ptext15 0C64  
                      __ptext40 5484                        __ptext32 48FA                        __ptext24 1398  
                      __ptext16 2458                        __ptext41 4EDA                        __ptext33 4F34  
                      __ptext25 53D4                        __ptext17 4140                        __ptext50 54E0  
                      __ptext42 3968                        __ptext34 4B3C                        __ptext26 518E  
                      __ptext18 3026                        __ptext51 4DA4                        __ptext43 4C3C  
                      __ptext35 502E                        __ptext27 0012                        __ptext19 3B92  
                      __ptext60 53FA                        __ptext52 4E14                        __ptext44 42C6  
                      __ptext36 5358                        __ptext28 532C                        __ptext61 520C  
                      __ptext53 524A                        __ptext45 4AB8                        __ptext37 366E  
                      __ptext29 52F8                        __ptext62 52C0                        __ptext54 510A  
                      __ptext46 4996                        __ptext38 507C                        __ptext63 50C4  
                      __ptext55 47B8                        __ptext47 1F4E                        __ptext39 51CE  
                      __ptext64 53AC                        __ptext56 514C                        __ptext48 5506  
                      __ptext65 3FAA                        __ptext57 4F8A                        __ptext49 4E7E  
                      __ptext58 4FDC                        __ptext67 54BC                        __ptext59 4D32  
                      __ptext68 54CE                        __ptext69 0000                        _fileSize 0146  
                      __powers_ 6051                __size_of_proceed 000E                ?_disk_initialize 0001  
                _timeout_tarefa 0158                    _rmc_pointers 013A              sdc_disk_read@count 006D  
    __end_of_inicializa_tarefas 52C0        i2write_timer_zero@timer0 0001          __end_of_sdc_disk_write 443C  
                      _init_lcd 485C                   __size_of_main 0028                    _remove_chain 443C  
                 __size_of_itoa 0042                   __size_of_utoa 00A4                   __size_of_sync 005A  
           _endereco_cursor_lcd 4E14              __end_of_init_ports 546E               _comma_counter_gga 0047  
                 dummy_clocks@i 001B                        f_open@dj 01B5                   dummy_clocks@n 001A  
                      f_open@fn 01A0                        f_open@fp 0181                        f_open@dw 01B0  
                      f_open@rs 01AC               _comma_counter_rmc 0046                        _rmc_code 00F9  
                      _validate 507C                    move_window@n 0093                        _response 5506  
                      f_sync@fp 009C     __size_of_posicao_cursor_lcd 0070                        int$flags 004A  
       posicao_cursor_lcd@linha 001A                     ??_disk_read 0034         __end_of_inicializa_shrc 5506  
         __CFG_CPUDIV$OSC1_PLL2 000000                    ??_trace_path 00EB            ?_endereco_cursor_lcd 0001  
            put_cluster@fatsect 00AB                      _INTCONbits 000FF2                        memcmp@s1 0016  
                      memcmp@s2 0018                move_window@wsect 0094                        memcpy@d1 0016  
                      memcpy@s1 0018             __end_of_put_cluster 1F4E                        itoa@base 002A  
                      memset@p1 0016               _config_timer_dois 54EE                    _tempo_backup 014E  
             _config_timer_zero 543C                        intlevel2 0000              ?_config_timer_dois 0001  
      mensagem_inicial@msg_dois 0071              ?_config_timer_zero 0001                    _tempo_tarefa 014A  
               ?_sdc_disk_write 001F                ___lwmod@dividend 0016                ___lldiv@dividend 0016  
             sdc_disk_read@buff 0077           __end_of_sdc_disk_read 2458             sdc_disk_status@pdrv 0017  
           sdc_disk_status@stat 0016             ??_config_timer_dois 0016                      _OSCCONbits 000FD3  
            __end_of_trace_path 289A             ??_config_timer_zero 001A                     _move_window 3968  
          sdc_disk_write@count1 002B            sdc_disk_write@p_buff 001F                _recebe_dado_uart 54CE  
       recebe_dado_SPI@contador 0018                        utoa@base 0021            sdc_disk_write@sector 0021  
         ??_endereco_cursor_lcd 0018                    response@buff 0019                ___lldiv@quotient 001E  
               ___lwmod@divisor 0018                 ___lwmod@counter 001A               remove_chain@clust 00D4  
     __end_of_config_timer_dois 54FA                   ?_create_chain 00D4             sdc_disk_write@i_551 002D  
     __end_of_config_timer_zero 5456     __size_ofi2_write_timer_zero 0012         __size_of_next_dir_entry 020E  
        escreve_cmd_lcd@comando 0018             sdc_disk_write@count 0025              sdc_disk_write@buff 002F  
  __size_of_sdc_disk_initialize 030A                    ?_get_fattime 0016                _reserve_direntry 3026  
             sdc_disk_write@res 002E                    ?_get_cluster 009A                _escreve_dado_SPI 50C4  
                  ?_disk_status 0001   __end_ofmensagem_inicial@F4101 60B0   __end_ofmensagem_inicial@F4099 60C1  
