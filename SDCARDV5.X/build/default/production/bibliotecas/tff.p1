Version 3.2 HI-TECH Software Intermediate Code
"74 bibliotecas/tff.h
[s S2 `us 1 `us 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc -> 512 `i ]
[n S2 _FATFS id n_rootdir winsect fatbase dirbase database sects_fat max_clust last_clust free_clust fs_type csize n_fats winflag win ]
"79 bibliotecas/tff.c
[c E105 0 1 .. ]
[n E105 . FALSE TRUE  ]
"89
[c E248 0 1 2 3 4 .. ]
[n E248 . RES_OK RES_ERROR RES_WRPRT RES_NOTRDY RES_PARERR  ]
"45 bibliotecas/diskio.h
[v _disk_write `(E248 ~T0 @X0 0 ef4`uc`*Cuc`ul`ui ]
"44
[v _disk_read `(E248 ~T0 @X0 0 ef4`uc`*uc`ul`ui ]
"119 bibliotecas/tff.c
[c E155 0 1 2 3 4 5 6 7 8 9 10 11 12 13 .. ]
[n E155 . FR_OK FR_NOT_READY FR_NO_FILE FR_NO_PATH FR_INVALID_NAME FR_INVALID_DRIVE FR_DENIED FR_EXIST FR_RW_ERROR FR_WRITE_PROTECTED FR_NOT_ENABLED FR_NO_FILESYSTEM FR_INVALID_OBJECT FR_MKFS_ABORTED  ]
"46 bibliotecas/diskio.h
[v _disk_ioctl `(E248 ~T0 @X0 0 ef3`uc`uc`*v ]
"101 bibliotecas/tff.h
[s S3 `us 1 `us 1 `*S2 1 `ul 1 `ul 1 `ul 1 ]
[n S3 _DIR_E id index fs sclust clust sect ]
"130
[s S5 `ul 1 `us 1 `us 1 `uc 1 `uc + + + -> 8 `i -> 1 `i -> 3 `i -> 1 `i ]
[n S5 _FILINFO fsize fdate ftime fattrib fname ]
"16 C:\Program Files (x86)\Microchip\xc8\v1.45\include\string.h
[v _memset `(*v ~T0 @X0 0 ef3`*v`i`ui ]
"44
[v _memcmp `(i ~T0 @X0 0 ef3`*Cv`*Cv`ui ]
"43 bibliotecas/diskio.h
[v _disk_status `(uc ~T0 @X0 0 ef1`uc ]
"42
[v _disk_initialize `(uc ~T0 @X0 0 ef1`uc ]
"8 bibliotecas/integer.h
[s S1 `ui 1 `ui 1 `ui 1 `uc 1 `uc 1 `uc 1 ]
[n S1 . hora min seg dia mes ano ]
"112 bibliotecas/tff.h
[s S4 `us 1 `uc 1 `uc 1 `*S2 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `*uc 1 ]
[n S4 _FIL id flag csect fs fptr fsize org_clust curr_clust curr_sect dir_sect dir_ptr ]
"14 C:\Program Files (x86)\Microchip\xc8\v1.45\include\string.h
[v _memcpy `(*v ~T0 @X0 0 ef3`*v`*Cv`ui ]
"10 C:\Program Files (x86)\Microchip\xc8\v1.45\include\stdarg.h
[v ___va_start `(*v ~T0 @X0 0 ef ]
[p i ___va_start ]
"13
[v ___va_arg `(*v ~T0 @X0 0 ev`*v ]
[p i ___va_arg ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;string.h: 14: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 15: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 16: extern void * memset(void *, int, size_t);
[; ;string.h: 36: extern char * strcat(char *, const char *);
[; ;string.h: 37: extern char * strcpy(char *, const char *);
[; ;string.h: 38: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 39: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 40: extern char * strdup(const char *);
[; ;string.h: 41: extern char * strtok(char *, const char *);
[; ;string.h: 44: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 45: extern int strcmp(const char *, const char *);
[; ;string.h: 46: extern int stricmp(const char *, const char *);
[; ;string.h: 47: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 48: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 49: extern void * memchr(const void *, int, size_t);
[; ;string.h: 50: extern size_t strcspn(const char *, const char *);
[; ;string.h: 51: extern char * strpbrk(const char *, const char *);
[; ;string.h: 52: extern size_t strspn(const char *, const char *);
[; ;string.h: 53: extern char * strstr(const char *, const char *);
[; ;string.h: 54: extern char * stristr(const char *, const char *);
[; ;string.h: 55: extern char * strerror(int);
[; ;string.h: 56: extern size_t strlen(const char *);
[; ;string.h: 57: extern char * strchr(const char *, int);
[; ;string.h: 58: extern char * strichr(const char *, int);
[; ;string.h: 59: extern char * strrchr(const char *, int);
[; ;string.h: 60: extern char * strrichr(const char *, int);
[; ;integer.h: 8: typedef struct{
[; ;integer.h: 9: unsigned int hora;
[; ;integer.h: 10: unsigned int min;
[; ;integer.h: 11: unsigned int seg;
[; ;integer.h: 12: unsigned char dia;
[; ;integer.h: 13: unsigned char mes;
[; ;integer.h: 14: unsigned char ano;
[; ;integer.h: 15: }fat_time;
[; ;integer.h: 17: typedef int INT;
[; ;integer.h: 18: typedef unsigned int UINT;
[; ;integer.h: 21: typedef signed char CHAR;
[; ;integer.h: 22: typedef unsigned char UCHAR;
[; ;integer.h: 23: typedef unsigned char BYTE;
[; ;integer.h: 26: typedef short SHORT;
[; ;integer.h: 27: typedef unsigned short USHORT;
[; ;integer.h: 28: typedef unsigned short WORD;
[; ;integer.h: 31: typedef long LONG;
[; ;integer.h: 32: typedef unsigned long ULONG;
[; ;integer.h: 33: typedef unsigned long DWORD;
[; ;integer.h: 36: typedef enum { FALSE = 0, TRUE } BOOL;
[; ;tff.h: 65: typedef DWORD CLUST;
[; ;tff.h: 74: typedef struct _FATFS {
[; ;tff.h: 75: WORD id;
[; ;tff.h: 76: WORD n_rootdir;
[; ;tff.h: 77: DWORD winsect;
[; ;tff.h: 78: DWORD fatbase;
[; ;tff.h: 79: DWORD dirbase;
[; ;tff.h: 80: DWORD database;
[; ;tff.h: 81: CLUST sects_fat;
[; ;tff.h: 82: CLUST max_clust;
[; ;tff.h: 84: CLUST last_clust;
[; ;tff.h: 85: CLUST free_clust;
[; ;tff.h: 92: BYTE fs_type;
[; ;tff.h: 93: BYTE csize;
[; ;tff.h: 94: BYTE n_fats;
[; ;tff.h: 95: BYTE winflag;
[; ;tff.h: 96: BYTE win[512];
[; ;tff.h: 97: } FATFS;
[; ;tff.h: 101: typedef struct _DIR_E {
[; ;tff.h: 102: WORD id;
[; ;tff.h: 103: WORD index;
[; ;tff.h: 104: FATFS* fs;
[; ;tff.h: 105: CLUST sclust;
[; ;tff.h: 106: CLUST clust;
[; ;tff.h: 107: DWORD sect;
[; ;tff.h: 108: } DIR_E;
[; ;tff.h: 112: typedef struct _FIL {
[; ;tff.h: 113: WORD id;
[; ;tff.h: 114: BYTE flag;
[; ;tff.h: 115: BYTE csect;
[; ;tff.h: 116: FATFS* fs;
[; ;tff.h: 117: DWORD fptr;
[; ;tff.h: 118: DWORD fsize;
[; ;tff.h: 119: CLUST org_clust;
[; ;tff.h: 120: CLUST curr_clust;
[; ;tff.h: 121: DWORD curr_sect;
[; ;tff.h: 123: DWORD dir_sect;
[; ;tff.h: 124: BYTE* dir_ptr;
[; ;tff.h: 126: } FIL;
[; ;tff.h: 130: typedef struct _FILINFO {
[; ;tff.h: 131: DWORD fsize;
[; ;tff.h: 132: WORD fdate;
[; ;tff.h: 133: WORD ftime;
[; ;tff.h: 134: BYTE fattrib;
[; ;tff.h: 135: char fname[8+1+3+1];
[; ;tff.h: 136: } FILINFO;
[; ;tff.h: 141: typedef enum {
[; ;tff.h: 142: FR_OK = 0,
[; ;tff.h: 143: FR_NOT_READY,
[; ;tff.h: 144: FR_NO_FILE,
[; ;tff.h: 145: FR_NO_PATH,
[; ;tff.h: 146: FR_INVALID_NAME,
[; ;tff.h: 147: FR_INVALID_DRIVE,
[; ;tff.h: 148: FR_DENIED,
[; ;tff.h: 149: FR_EXIST,
[; ;tff.h: 150: FR_RW_ERROR,
[; ;tff.h: 151: FR_WRITE_PROTECTED,
[; ;tff.h: 152: FR_NOT_ENABLED,
[; ;tff.h: 153: FR_NO_FILESYSTEM,
[; ;tff.h: 154: FR_INVALID_OBJECT,
[; ;tff.h: 155: FR_MKFS_ABORTED
[; ;tff.h: 156: } FRESULT;
[; ;tff.h: 163: FRESULT f_mount (BYTE, FATFS*);
[; ;tff.h: 164: FRESULT f_open (FIL*, const char*, BYTE);
[; ;tff.h: 165: FRESULT f_read (FIL*, void*, UINT, UINT*);
[; ;tff.h: 166: FRESULT f_write (FIL*, const void*, UINT, UINT*);
[; ;tff.h: 167: FRESULT f_lseek (FIL*, DWORD);
[; ;tff.h: 168: FRESULT f_close (FIL*);
[; ;tff.h: 169: FRESULT f_opendir (DIR_E*, const char*);
[; ;tff.h: 170: FRESULT f_readdir (DIR_E*, FILINFO*);
[; ;tff.h: 171: FRESULT f_stat (const char*, FILINFO*);
[; ;tff.h: 172: FRESULT f_getfree (const char*, DWORD*, FATFS**);
[; ;tff.h: 173: FRESULT f_truncate (FIL*);
[; ;tff.h: 174: FRESULT f_sync (FIL*);
[; ;tff.h: 175: FRESULT f_unlink (const char*);
[; ;tff.h: 176: FRESULT f_mkdir (const char*);
[; ;tff.h: 177: FRESULT f_chmod (const char*, BYTE, BYTE);
[; ;tff.h: 178: FRESULT f_utime (const char*, const FILINFO*);
[; ;tff.h: 179: FRESULT f_rename (const char*, const char*);
[; ;tff.h: 180: FRESULT f_forward (FIL*, UINT(*)(const BYTE*,UINT), UINT, UINT*);
[; ;tff.h: 184: int fputc (int, FIL*);
[; ;tff.h: 185: int fputs (const char*, FIL*);
[; ;tff.h: 186: int fprintf (FIL*, const char*, ...);
[; ;tff.h: 187: char* fgets (char*, int, FIL*);
[; ;tff.h: 193: DWORD get_fattime (void);
[; ;diskio.h: 26: typedef BYTE DSTATUS;
[; ;diskio.h: 29: typedef enum {
[; ;diskio.h: 30: RES_OK = 0,
[; ;diskio.h: 31: RES_ERROR,
[; ;diskio.h: 32: RES_WRPRT,
[; ;diskio.h: 33: RES_NOTRDY,
[; ;diskio.h: 34: RES_PARERR
[; ;diskio.h: 35: } DRESULT;
[; ;diskio.h: 42: DSTATUS disk_initialize (BYTE pdrv);
[; ;diskio.h: 43: DSTATUS disk_status (BYTE pdrv);
[; ;diskio.h: 44: DRESULT disk_read (BYTE pdrv, BYTE* buff, DWORD sector, UINT count);
[; ;diskio.h: 45: DRESULT disk_write (BYTE pdrv, const BYTE* buff, DWORD sector, UINT count);
[; ;diskio.h: 46: DRESULT disk_ioctl (BYTE pdrv, BYTE cmd, void* buff);
"59 bibliotecas/tff.c
[v _FatFs `*S2 ~T0 @X0 1 s ]
[; ;tff.c: 58: static
[; ;tff.c: 59: FATFS *FatFs;
"61
[v _fsid `us ~T0 @X0 1 s ]
[; ;tff.c: 60: static
[; ;tff.c: 61: WORD fsid;
"76
[v _move_window `(E105 ~T0 @X0 1 sf1`ul ]
"79
{
[; ;tff.c: 75: static
[; ;tff.c: 76: BOOL move_window (
[; ;tff.c: 77: DWORD sector
[; ;tff.c: 78: )
[; ;tff.c: 79: {
[e :U _move_window ]
"77
[v _sector `ul ~T0 @X0 1 r1 ]
"79
[f ]
"80
[v _wsect `ul ~T0 @X0 1 a ]
"81
[v _fs `*S2 ~T0 @X0 1 a ]
[; ;tff.c: 80: DWORD wsect;
[; ;tff.c: 81: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;tff.c: 84: wsect = fs->winsect;
"84
[e = _wsect . *U _fs 2 ]
[; ;tff.c: 85: if (wsect != sector) {
"85
[e $ ! != _wsect _sector 7  ]
{
"87
[v _n `uc ~T0 @X0 1 a ]
[; ;tff.c: 87: BYTE n;
[; ;tff.c: 88: if (fs->winflag) {
"88
[e $ ! != -> . *U _fs 13 `i -> -> -> 0 `i `uc `i 8  ]
{
[; ;tff.c: 89: if (disk_write(0, fs->win, wsect, 1) != RES_OK)
"89
[e $ ! != -> ( _disk_write (4 , , , -> -> 0 `i `uc -> &U . *U _fs 14 `*Cuc _wsect -> -> 1 `i `ui `i -> . `E248 0 `i 9  ]
[; ;tff.c: 90: return FALSE;
"90
[e ) . `E105 0 ]
[e $UE 6  ]
[e :U 9 ]
[; ;tff.c: 91: fs->winflag = 0;
"91
[e = . *U _fs 13 -> -> 0 `i `uc ]
[; ;tff.c: 92: if (wsect < (fs->fatbase + fs->sects_fat)) {
"92
[e $ ! < _wsect + . *U _fs 3 . *U _fs 6 10  ]
{
[; ;tff.c: 93: for (n = fs->n_fats; n >= 2; n--) {
"93
{
[e = _n . *U _fs 12 ]
[e $ >= -> _n `i -> 2 `i 11  ]
[e $U 12  ]
[e :U 11 ]
{
[; ;tff.c: 94: wsect += fs->sects_fat;
"94
[e =+ _wsect . *U _fs 6 ]
[; ;tff.c: 95: disk_write(0, fs->win, wsect, 1);
"95
[e ( _disk_write (4 , , , -> -> 0 `i `uc -> &U . *U _fs 14 `*Cuc _wsect -> -> 1 `i `ui ]
"96
}
"93
[e -- _n -> -> 1 `i `uc ]
[e $ >= -> _n `i -> 2 `i 11  ]
[e :U 12 ]
"96
}
"97
}
[e :U 10 ]
"98
}
[e :U 8 ]
[; ;tff.c: 96: }
[; ;tff.c: 97: }
[; ;tff.c: 98: }
[; ;tff.c: 100: if (sector) {
"100
[e $ ! != _sector -> -> 0 `i `ul 14  ]
{
[; ;tff.c: 101: if (disk_read(0, fs->win, sector, 1) != RES_OK)
"101
[e $ ! != -> ( _disk_read (4 , , , -> -> 0 `i `uc &U . *U _fs 14 _sector -> -> 1 `i `ui `i -> . `E248 0 `i 15  ]
[; ;tff.c: 102: return FALSE;
"102
[e ) . `E105 0 ]
[e $UE 6  ]
[e :U 15 ]
[; ;tff.c: 103: fs->winsect = sector;
"103
[e = . *U _fs 2 _sector ]
"104
}
[e :U 14 ]
"105
}
[e :U 7 ]
[; ;tff.c: 104: }
[; ;tff.c: 105: }
[; ;tff.c: 106: return TRUE;
"106
[e ) . `E105 1 ]
[e $UE 6  ]
[; ;tff.c: 107: }
"107
[e :UE 6 ]
}
"118
[v _sync `(E155 ~T0 @X0 1 sf ]
"119
{
[; ;tff.c: 117: static
[; ;tff.c: 118: FRESULT sync (void)
[; ;tff.c: 119: {
[e :U _sync ]
[f ]
"120
[v _fs `*S2 ~T0 @X0 1 a ]
[; ;tff.c: 120: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;tff.c: 123: fs->winflag = 1;
"123
[e = . *U _fs 13 -> -> 1 `i `uc ]
[; ;tff.c: 124: if (!move_window(0)) return FR_RW_ERROR;
"124
[e $ ! ! != -> ( _move_window (1 -> -> -> 0 `i `l `ul `i -> -> -> 0 `i `E105 `i 17  ]
[e ) . `E155 8 ]
[e $UE 16  ]
[e :U 17 ]
[; ;tff.c: 140: if (disk_ioctl(0, 0, (0)) != RES_OK)
"140
[e $ ! != -> ( _disk_ioctl (3 , , -> -> 0 `i `uc -> -> 0 `i `uc -> -> 0 `i `*v `i -> . `E248 0 `i 18  ]
[; ;tff.c: 141: return FR_RW_ERROR;
"141
[e ) . `E155 8 ]
[e $UE 16  ]
[e :U 18 ]
[; ;tff.c: 142: return FR_OK;
"142
[e ) . `E155 0 ]
[e $UE 16  ]
[; ;tff.c: 143: }
"143
[e :UE 16 ]
}
"154
[v _get_cluster `(ul ~T0 @X0 1 sf1`ul ]
"157
{
[; ;tff.c: 153: static
[; ;tff.c: 154: CLUST get_cluster (
[; ;tff.c: 155: CLUST clust
[; ;tff.c: 156: )
[; ;tff.c: 157: {
[e :U _get_cluster ]
"155
[v _clust `ul ~T0 @X0 1 r1 ]
"157
[f ]
"158
[v _wc `us ~T0 @X0 1 a ]
[v _bc `us ~T0 @X0 1 a ]
"159
[v _fatsect `ul ~T0 @X0 1 a ]
"160
[v _fs `*S2 ~T0 @X0 1 a ]
[; ;tff.c: 158: WORD wc, bc;
[; ;tff.c: 159: DWORD fatsect;
[; ;tff.c: 160: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;tff.c: 163: if (clust >= 2 && clust < fs->max_clust) {
"163
[e $ ! && >= _clust -> -> -> 2 `i `l `ul < _clust . *U _fs 7 20  ]
{
[; ;tff.c: 164: fatsect = fs->fatbase;
"164
[e = _fatsect . *U _fs 3 ]
[; ;tff.c: 165: switch (fs->fs_type) {
"165
[e $U 22  ]
{
[; ;tff.c: 166: case 1 :
"166
[e :U 23 ]
[; ;tff.c: 167: bc = (WORD)clust * 3 / 2;
"167
[e = _bc -> / * -> -> _clust `us `ui -> -> 3 `i `ui -> -> 2 `i `ui `us ]
[; ;tff.c: 168: if (!move_window(fatsect + bc / 512U)) break;
"168
[e $ ! ! != -> ( _move_window (1 + _fatsect -> / -> _bc `ui -> 512 `ui `ul `i -> -> -> 0 `i `E105 `i 24  ]
[e $U 21  ]
[e :U 24 ]
[; ;tff.c: 169: wc = fs->win[bc % 512U]; bc++;
"169
[e = _wc -> *U + &U . *U _fs 14 * -> % -> _bc `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `us ]
[e ++ _bc -> -> 1 `i `us ]
[; ;tff.c: 170: if (!move_window(fatsect + bc / 512U)) break;
"170
[e $ ! ! != -> ( _move_window (1 + _fatsect -> / -> _bc `ui -> 512 `ui `ul `i -> -> -> 0 `i `E105 `i 25  ]
[e $U 21  ]
[e :U 25 ]
[; ;tff.c: 171: wc |= (WORD)fs->win[bc % 512U] << 8;
"171
[e =| _wc -> << -> -> *U + &U . *U _fs 14 * -> % -> _bc `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `us `ui -> 8 `i `us ]
[; ;tff.c: 172: return (clust & 1) ? (wc >> 4) : (wc & 0xFFF);
"172
[e ) -> ? != & _clust -> -> -> 1 `i `l `ul -> -> 0 `i `ul : >> -> _wc `ui -> 4 `i & -> _wc `ui -> -> 4095 `i `ui `ul ]
[e $UE 19  ]
[; ;tff.c: 174: case 2 :
"174
[e :U 26 ]
[; ;tff.c: 175: if (!move_window(fatsect + clust / 256)) break;
"175
[e $ ! ! != -> ( _move_window (1 + _fatsect / _clust -> -> -> 256 `i `l `ul `i -> -> -> 0 `i `E105 `i 27  ]
[e $U 21  ]
[e :U 27 ]
[; ;tff.c: 176: return (WORD)(((WORD)*(volatile BYTE*)((&fs->win[((WORD)clust * 2) % 512U])+1)<<8)|(WORD)*(volatile BYTE*)(&fs->win[((WORD)clust * 2) % 512U]));
"176
[e ) -> -> | << -> -> *U -> + &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 2 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 1 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 2 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 2 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `*Vuc `us `ui `us `ul ]
[e $UE 19  ]
[; ;tff.c: 178: case 3 :
"178
[e :U 28 ]
[; ;tff.c: 179: if (!move_window(fatsect + clust / 128)) break;
"179
[e $ ! ! != -> ( _move_window (1 + _fatsect / _clust -> -> -> 128 `i `l `ul `i -> -> -> 0 `i `E105 `i 29  ]
[e $U 21  ]
[e :U 29 ]
[; ;tff.c: 180: return (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[((WORD)clust * 4) % 512U])+3)<<24)|((DWORD)*(volatile BYTE*)((&fs->win[((WORD)clust * 4) % 512U])+2)<<16)|((WORD)*(volatile BYTE*)((&fs->win[((WORD)clust * 4) % 512U])+1)<<8)|*(volatile BYTE*)(&fs->w
"180
[e ) & | | | << -> *U -> + &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 4 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 3 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 4 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `ul -> 24 `i << -> *U -> + &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 4 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 2 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 4 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `ul -> 16 `i -> << -> -> *U -> + &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 4 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 1 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 4 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `us `ui -> 8 `i `ul -> *U -> &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 4 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `*Vuc `ul -> -> 268435455 `l `ul ]
[e $UE 19  ]
"182
}
[; ;tff.c: 182: }
[e $U 21  ]
"165
[e :U 22 ]
[e [\ . *U _fs 10 , $ -> -> 1 `i `uc 23
 , $ -> -> 2 `i `uc 26
 , $ -> -> 3 `i `uc 28
 21 ]
"182
[e :U 21 ]
"183
}
[e :U 20 ]
[; ;tff.c: 183: }
[; ;tff.c: 185: return 1;
"185
[e ) -> -> -> 1 `i `l `ul ]
[e $UE 19  ]
[; ;tff.c: 186: }
"186
[e :UE 19 ]
}
"197
[v _put_cluster `(E105 ~T0 @X0 1 sf2`ul`ul ]
"201
{
[; ;tff.c: 196: static
[; ;tff.c: 197: BOOL put_cluster (
[; ;tff.c: 198: CLUST clust,
[; ;tff.c: 199: CLUST val
[; ;tff.c: 200: )
[; ;tff.c: 201: {
[e :U _put_cluster ]
"198
[v _clust `ul ~T0 @X0 1 r1 ]
"199
[v _val `ul ~T0 @X0 1 r2 ]
"201
[f ]
"202
[v _bc `us ~T0 @X0 1 a ]
"203
[v _p `*uc ~T0 @X0 1 a ]
"204
[v _fatsect `ul ~T0 @X0 1 a ]
"205
[v _fs `*S2 ~T0 @X0 1 a ]
[; ;tff.c: 202: WORD bc;
[; ;tff.c: 203: BYTE *p;
[; ;tff.c: 204: DWORD fatsect;
[; ;tff.c: 205: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;tff.c: 208: fatsect = fs->fatbase;
"208
[e = _fatsect . *U _fs 3 ]
[; ;tff.c: 209: switch (fs->fs_type) {
"209
[e $U 32  ]
{
[; ;tff.c: 210: case 1 :
"210
[e :U 33 ]
[; ;tff.c: 211: bc = (WORD)clust * 3 / 2;
"211
[e = _bc -> / * -> -> _clust `us `ui -> -> 3 `i `ui -> -> 2 `i `ui `us ]
[; ;tff.c: 212: if (!move_window(fatsect + bc / 512U)) return FALSE;
"212
[e $ ! ! != -> ( _move_window (1 + _fatsect -> / -> _bc `ui -> 512 `ui `ul `i -> -> -> 0 `i `E105 `i 34  ]
[e ) . `E105 0 ]
[e $UE 30  ]
[e :U 34 ]
[; ;tff.c: 213: p = &fs->win[bc % 512U];
"213
[e = _p &U *U + &U . *U _fs 14 * -> % -> _bc `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux ]
[; ;tff.c: 214: *p = (clust & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
"214
[e = *U _p -> ? != & _clust -> -> -> 1 `i `l `ul -> -> 0 `i `ul : | & -> *U _p `i -> 15 `i << -> -> _val `uc `i -> 4 `i -> -> _val `uc `i `uc ]
[; ;tff.c: 215: bc++;
"215
[e ++ _bc -> -> 1 `i `us ]
[; ;tff.c: 216: fs->winflag = 1;
"216
[e = . *U _fs 13 -> -> 1 `i `uc ]
[; ;tff.c: 217: if (!move_window(fatsect + bc / 512U)) return FALSE;
"217
[e $ ! ! != -> ( _move_window (1 + _fatsect -> / -> _bc `ui -> 512 `ui `ul `i -> -> -> 0 `i `E105 `i 35  ]
[e ) . `E105 0 ]
[e $UE 30  ]
[e :U 35 ]
[; ;tff.c: 218: p = &fs->win[bc % 512U];
"218
[e = _p &U *U + &U . *U _fs 14 * -> % -> _bc `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux ]
[; ;tff.c: 219: *p = (clust & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
"219
[e = *U _p -> ? != & _clust -> -> -> 1 `i `l `ul -> -> 0 `i `ul : -> -> >> _val -> 4 `i `uc `i | & -> *U _p `i -> 240 `i & -> -> >> _val -> 8 `i `uc `i -> 15 `i `uc ]
[; ;tff.c: 220: break;
"220
[e $U 31  ]
[; ;tff.c: 222: case 2 :
"222
[e :U 36 ]
[; ;tff.c: 223: if (!move_window(fatsect + clust / 256)) return FALSE;
"223
[e $ ! ! != -> ( _move_window (1 + _fatsect / _clust -> -> -> 256 `i `l `ul `i -> -> -> 0 `i `E105 `i 37  ]
[e ) . `E105 0 ]
[e $UE 30  ]
[e :U 37 ]
[; ;tff.c: 224: *(volatile BYTE*)(&fs->win[((WORD)clust * 2) % 512U])=(BYTE)((WORD)val); *(volatile BYTE*)((&fs->win[((WORD)clust * 2) % 512U])+1)=(BYTE)((WORD)((WORD)val)>>8);
"224
[e = *U -> &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 2 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `*Vuc -> -> _val `us `uc ]
[e = *U -> + &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 2 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 1 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 2 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc -> >> -> -> _val `us `ui -> 8 `i `uc ]
[; ;tff.c: 225: break;
"225
[e $U 31  ]
[; ;tff.c: 227: case 3 :
"227
[e :U 38 ]
[; ;tff.c: 228: if (!move_window(fatsect + clust / 128)) return FALSE;
"228
[e $ ! ! != -> ( _move_window (1 + _fatsect / _clust -> -> -> 128 `i `l `ul `i -> -> -> 0 `i `E105 `i 39  ]
[e ) . `E105 0 ]
[e $UE 30  ]
[e :U 39 ]
[; ;tff.c: 229: *(volatile BYTE*)(&fs->win[((WORD)clust * 4) % 512U])=(BYTE)(val); *(volatile BYTE*)((&fs->win[((WORD)clust * 4) % 512U])+1)=(BYTE)((WORD)(val)>>8); *(volatile BYTE*)((&fs->win[((WORD)clust * 4) % 512U])+2)=(BYTE)((DWORD)(val)>>16); *(volatile BYTE*)
"229
[e = *U -> &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 4 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `*Vuc -> _val `uc ]
[e = *U -> + &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 4 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 1 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 4 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc -> >> -> -> _val `us `ui -> 8 `i `uc ]
[e = *U -> + &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 4 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 2 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 4 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc -> >> _val -> 16 `i `uc ]
[e = *U -> + &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 4 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 3 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> % * -> -> _clust `us `ui -> -> 4 `i `ui -> 512 `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc -> >> _val -> 24 `i `uc ]
[; ;tff.c: 230: break;
"230
[e $U 31  ]
[; ;tff.c: 232: default :
"232
[e :U 40 ]
[; ;tff.c: 233: return FALSE;
"233
[e ) . `E105 0 ]
[e $UE 30  ]
"234
}
[; ;tff.c: 234: }
[e $U 31  ]
"209
[e :U 32 ]
[e [\ . *U _fs 10 , $ -> -> 1 `i `uc 33
 , $ -> -> 2 `i `uc 36
 , $ -> -> 3 `i `uc 38
 40 ]
"234
[e :U 31 ]
[; ;tff.c: 235: fs->winflag = 1;
"235
[e = . *U _fs 13 -> -> 1 `i `uc ]
[; ;tff.c: 236: return TRUE;
"236
[e ) . `E105 1 ]
[e $UE 30  ]
[; ;tff.c: 237: }
"237
[e :UE 30 ]
}
"249
[v _remove_chain `(E105 ~T0 @X0 1 sf1`ul ]
"252
{
[; ;tff.c: 248: static
[; ;tff.c: 249: BOOL remove_chain (
[; ;tff.c: 250: CLUST clust
[; ;tff.c: 251: )
[; ;tff.c: 252: {
[e :U _remove_chain ]
"250
[v _clust `ul ~T0 @X0 1 r1 ]
"252
[f ]
"253
[v _nxt `ul ~T0 @X0 1 a ]
"254
[v _fs `*S2 ~T0 @X0 1 a ]
[; ;tff.c: 253: CLUST nxt;
[; ;tff.c: 254: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;tff.c: 257: while (clust >= 2 && clust < fs->max_clust) {
"257
[e $U 42  ]
[e :U 43 ]
{
[; ;tff.c: 258: nxt = get_cluster(clust);
"258
[e = _nxt ( _get_cluster (1 _clust ]
[; ;tff.c: 259: if (nxt == 1) return FALSE;
"259
[e $ ! == _nxt -> -> -> 1 `i `l `ul 45  ]
[e ) . `E105 0 ]
[e $UE 41  ]
[e :U 45 ]
[; ;tff.c: 260: if (!put_cluster(clust, 0)) return FALSE;
"260
[e $ ! ! != -> ( _put_cluster (2 , _clust -> -> -> 0 `i `l `ul `i -> -> -> 0 `i `E105 `i 46  ]
[e ) . `E105 0 ]
[e $UE 41  ]
[e :U 46 ]
[; ;tff.c: 261: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
"261
[e $ ! != . *U _fs 9 -> -1 `ul 47  ]
{
[; ;tff.c: 262: fs->free_clust++;
"262
[e ++ . *U _fs 9 -> -> -> 1 `i `l `ul ]
"266
}
[e :U 47 ]
[; ;tff.c: 266: }
[; ;tff.c: 267: clust = nxt;
"267
[e = _clust _nxt ]
"268
}
[e :U 42 ]
"257
[e $ && >= _clust -> -> -> 2 `i `l `ul < _clust . *U _fs 7 43  ]
[e :U 44 ]
[; ;tff.c: 268: }
[; ;tff.c: 269: return TRUE;
"269
[e ) . `E105 1 ]
[e $UE 41  ]
[; ;tff.c: 270: }
"270
[e :UE 41 ]
}
"282
[v _create_chain `(ul ~T0 @X0 1 sf1`ul ]
"285
{
[; ;tff.c: 281: static
[; ;tff.c: 282: CLUST create_chain (
[; ;tff.c: 283: CLUST clust
[; ;tff.c: 284: )
[; ;tff.c: 285: {
[e :U _create_chain ]
"283
[v _clust `ul ~T0 @X0 1 r1 ]
"285
[f ]
"286
[v _cstat `ul ~T0 @X0 1 a ]
[v _ncl `ul ~T0 @X0 1 a ]
[v _scl `ul ~T0 @X0 1 a ]
[v _mcl `ul ~T0 @X0 1 a ]
"287
[v _fs `*S2 ~T0 @X0 1 a ]
[; ;tff.c: 286: CLUST cstat, ncl, scl, mcl;
[; ;tff.c: 287: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;tff.c: 290: mcl = fs->max_clust;
"290
[e = _mcl . *U _fs 7 ]
[; ;tff.c: 291: if (clust == 0) {
"291
[e $ ! == _clust -> -> -> 0 `i `l `ul 49  ]
{
[; ;tff.c: 292: scl = fs->last_clust;
"292
[e = _scl . *U _fs 8 ]
[; ;tff.c: 293: if (scl < 2 || scl >= mcl) scl = 1;
"293
[e $ ! || < _scl -> -> -> 2 `i `l `ul >= _scl _mcl 50  ]
[e = _scl -> -> -> 1 `i `l `ul ]
[e :U 50 ]
"294
}
[; ;tff.c: 294: }
[e $U 51  ]
"295
[e :U 49 ]
[; ;tff.c: 295: else {
{
[; ;tff.c: 296: cstat = get_cluster(clust);
"296
[e = _cstat ( _get_cluster (1 _clust ]
[; ;tff.c: 297: if (cstat < 2) return 1;
"297
[e $ ! < _cstat -> -> -> 2 `i `l `ul 52  ]
[e ) -> -> -> 1 `i `l `ul ]
[e $UE 48  ]
[e :U 52 ]
[; ;tff.c: 298: if (cstat < mcl) return cstat;
"298
[e $ ! < _cstat _mcl 53  ]
[e ) _cstat ]
[e $UE 48  ]
[e :U 53 ]
[; ;tff.c: 299: scl = clust;
"299
[e = _scl _clust ]
"300
}
[e :U 51 ]
[; ;tff.c: 300: }
[; ;tff.c: 302: ncl = scl;
"302
[e = _ncl _scl ]
[; ;tff.c: 303: for (;;) {
"303
{
[e :U 54 ]
{
[; ;tff.c: 304: ncl++;
"304
[e ++ _ncl -> -> -> 1 `i `l `ul ]
[; ;tff.c: 305: if (ncl >= mcl) {
"305
[e $ ! >= _ncl _mcl 57  ]
{
[; ;tff.c: 306: ncl = 2;
"306
[e = _ncl -> -> -> 2 `i `l `ul ]
[; ;tff.c: 307: if (ncl > scl) return 0;
"307
[e $ ! > _ncl _scl 58  ]
[e ) -> -> -> 0 `i `l `ul ]
[e $UE 48  ]
[e :U 58 ]
"308
}
[e :U 57 ]
[; ;tff.c: 308: }
[; ;tff.c: 309: cstat = get_cluster(ncl);
"309
[e = _cstat ( _get_cluster (1 _ncl ]
[; ;tff.c: 310: if (cstat == 0) break;
"310
[e $ ! == _cstat -> -> -> 0 `i `l `ul 59  ]
[e $U 55  ]
[e :U 59 ]
[; ;tff.c: 311: if (cstat == 1) return 1;
"311
[e $ ! == _cstat -> -> -> 1 `i `l `ul 60  ]
[e ) -> -> -> 1 `i `l `ul ]
[e $UE 48  ]
[e :U 60 ]
[; ;tff.c: 312: if (ncl == scl) return 0;
"312
[e $ ! == _ncl _scl 61  ]
[e ) -> -> -> 0 `i `l `ul ]
[e $UE 48  ]
[e :U 61 ]
"313
}
[; ;tff.c: 313: }
[e $U 54  ]
[e :U 55 ]
}
[; ;tff.c: 315: if (!put_cluster(ncl, (CLUST)0x0FFFFFFF)) return 1;
"315
[e $ ! ! != -> ( _put_cluster (2 , _ncl -> -> 268435455 `l `ul `i -> -> -> 0 `i `E105 `i 62  ]
[e ) -> -> -> 1 `i `l `ul ]
[e $UE 48  ]
[e :U 62 ]
[; ;tff.c: 316: if (clust != 0 && !put_cluster(clust, ncl)) return 1;
"316
[e $ ! && != _clust -> -> -> 0 `i `l `ul ! != -> ( _put_cluster (2 , _clust _ncl `i -> -> -> 0 `i `E105 `i 63  ]
[e ) -> -> -> 1 `i `l `ul ]
[e $UE 48  ]
[e :U 63 ]
[; ;tff.c: 318: fs->last_clust = ncl;
"318
[e = . *U _fs 8 _ncl ]
[; ;tff.c: 319: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
"319
[e $ ! != . *U _fs 9 -> -1 `ul 64  ]
{
[; ;tff.c: 320: fs->free_clust--;
"320
[e -- . *U _fs 9 -> -> -> 1 `i `l `ul ]
"324
}
[e :U 64 ]
[; ;tff.c: 324: }
[; ;tff.c: 326: return ncl;
"326
[e ) _ncl ]
[e $UE 48  ]
[; ;tff.c: 327: }
"327
[e :UE 48 ]
}
"338
[v _clust2sect `(ul ~T0 @X0 1 sf1`ul ]
"341
{
[; ;tff.c: 337: static
[; ;tff.c: 338: DWORD clust2sect (
[; ;tff.c: 339: CLUST clust
[; ;tff.c: 340: )
[; ;tff.c: 341: {
[e :U _clust2sect ]
"339
[v _clust `ul ~T0 @X0 1 r1 ]
"341
[f ]
"342
[v _fs `*S2 ~T0 @X0 1 a ]
[; ;tff.c: 342: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;tff.c: 345: clust -= 2;
"345
[e =- _clust -> -> -> 2 `i `l `ul ]
[; ;tff.c: 346: if (clust >= (fs->max_clust - 2)) return 0;
"346
[e $ ! >= _clust - . *U _fs 7 -> -> -> 2 `i `l `ul 66  ]
[e ) -> -> -> 0 `i `l `ul ]
[e $UE 65  ]
[e :U 66 ]
[; ;tff.c: 347: return (DWORD)clust * fs->csize + fs->database;
"347
[e ) + * _clust -> . *U _fs 11 `ul . *U _fs 5 ]
[e $UE 65  ]
[; ;tff.c: 348: }
"348
[e :UE 65 ]
}
"358
[v _next_dir_entry `(E105 ~T0 @X0 1 sf1`*S3 ]
"361
{
[; ;tff.c: 357: static
[; ;tff.c: 358: BOOL next_dir_entry (
[; ;tff.c: 359: DIR_E *dj
[; ;tff.c: 360: )
[; ;tff.c: 361: {
[e :U _next_dir_entry ]
"359
[v _dj `*S3 ~T0 @X0 1 r1 ]
"361
[f ]
"362
[v _clust `ul ~T0 @X0 1 a ]
"363
[v _idx `us ~T0 @X0 1 a ]
[; ;tff.c: 362: CLUST clust;
[; ;tff.c: 363: WORD idx;
[; ;tff.c: 366: idx = dj->index + 1;
"366
[e = _idx -> + -> . *U _dj 1 `ui -> -> 1 `i `ui `us ]
[; ;tff.c: 367: if ((idx & 15) == 0) {
"367
[e $ ! == & -> _idx `ui -> -> 15 `i `ui -> -> 0 `i `ui 68  ]
{
[; ;tff.c: 368: dj->sect++;
"368
[e ++ . *U _dj 5 -> -> -> 1 `i `l `ul ]
[; ;tff.c: 369: if (dj->clust == 0) {
"369
[e $ ! == . *U _dj 4 -> -> -> 0 `i `l `ul 69  ]
{
[; ;tff.c: 370: if (idx >= dj->fs->n_rootdir) return FALSE;
"370
[e $ ! >= -> _idx `ui -> . *U . *U _dj 2 1 `ui 70  ]
[e ) . `E105 0 ]
[e $UE 67  ]
[e :U 70 ]
"371
}
[; ;tff.c: 371: } else {
[e $U 71  ]
[e :U 69 ]
{
[; ;tff.c: 372: if (((idx / 16) & (dj->fs->csize - 1)) == 0) {
"372
[e $ ! == & / -> _idx `ui -> -> 16 `i `ui -> - -> . *U . *U _dj 2 11 `i -> 1 `i `ui -> -> 0 `i `ui 72  ]
{
[; ;tff.c: 373: clust = get_cluster(dj->clust);
"373
[e = _clust ( _get_cluster (1 . *U _dj 4 ]
[; ;tff.c: 374: if (clust < 2 || clust >= dj->fs->max_clust)
"374
[e $ ! || < _clust -> -> -> 2 `i `l `ul >= _clust . *U . *U _dj 2 7 73  ]
[; ;tff.c: 375: return FALSE;
"375
[e ) . `E105 0 ]
[e $UE 67  ]
[e :U 73 ]
[; ;tff.c: 376: dj->clust = clust;
"376
[e = . *U _dj 4 _clust ]
[; ;tff.c: 377: dj->sect = clust2sect(clust);
"377
[e = . *U _dj 5 ( _clust2sect (1 _clust ]
"378
}
[e :U 72 ]
"379
}
[e :U 71 ]
"380
}
[e :U 68 ]
[; ;tff.c: 378: }
[; ;tff.c: 379: }
[; ;tff.c: 380: }
[; ;tff.c: 381: dj->index = idx;
"381
[e = . *U _dj 1 _idx ]
[; ;tff.c: 382: return TRUE;
"382
[e ) . `E105 1 ]
[e $UE 67  ]
[; ;tff.c: 383: }
"383
[e :UE 67 ]
}
"394
[v _get_fileinfo `(v ~T0 @X0 1 sf2`*S5`*Cuc ]
"398
{
[; ;tff.c: 393: static
[; ;tff.c: 394: void get_fileinfo (
[; ;tff.c: 395: FILINFO *finfo,
[; ;tff.c: 396: const BYTE *dir
[; ;tff.c: 397: )
[; ;tff.c: 398: {
[e :U _get_fileinfo ]
"395
[v _finfo `*S5 ~T0 @X0 1 r1 ]
"396
[v _dir `*Cuc ~T0 @X0 1 r2 ]
"398
[f ]
"399
[v _n `uc ~T0 @X0 1 a ]
[v _c `uc ~T0 @X0 1 a ]
[v _a `uc ~T0 @X0 1 a ]
"400
[v _p `*uc ~T0 @X0 1 a ]
[; ;tff.c: 399: BYTE n, c, a;
[; ;tff.c: 400: char *p;
[; ;tff.c: 403: p = &finfo->fname[0];
"403
[e = _p &U *U + &U . *U _finfo 4 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _finfo 4 `ui `ux ]
[; ;tff.c: 404: a = 1 ? dir[12] : 0;
"404
[e = _a -> ? != -> 1 `i -> 0 `i : -> *U + _dir * -> -> 12 `i `x -> -> # *U _dir `i `x `i -> 0 `i `uc ]
[; ;tff.c: 405: for (n = 0; n < 8; n++) {
"405
{
[e = _n -> -> 0 `i `uc ]
[e $ < -> _n `i -> 8 `i 75  ]
[e $U 76  ]
[e :U 75 ]
{
[; ;tff.c: 406: c = dir[n];
"406
[e = _c *U + _dir * -> _n `ux -> -> # *U _dir `ui `ux ]
[; ;tff.c: 407: if (c == ' ') break;
"407
[e $ ! == -> _c `ui -> 32 `ui 78  ]
[e $U 76  ]
[e :U 78 ]
[; ;tff.c: 408: if (c == 0x05) c = 0xE5;
"408
[e $ ! == -> _c `i -> 5 `i 79  ]
[e = _c -> -> 229 `i `uc ]
[e :U 79 ]
[; ;tff.c: 409: if (a & 0x08 && c >= 'A' && c <= 'Z') c += 0x20;
"409
[e $ ! && && != & -> _a `i -> 8 `i -> 0 `i >= -> _c `ui -> 65 `ui <= -> _c `ui -> 90 `ui 80  ]
[e =+ _c -> -> 32 `i `uc ]
[e :U 80 ]
[; ;tff.c: 410: *p++ = c;
"410
[e = *U ++ _p * -> -> 1 `i `x -> -> # *U _p `i `x _c ]
"411
}
"405
[e ++ _n -> -> 1 `i `uc ]
[e $ < -> _n `i -> 8 `i 75  ]
[e :U 76 ]
"411
}
[; ;tff.c: 411: }
[; ;tff.c: 412: if (dir[8] != ' ') {
"412
[e $ ! != -> *U + _dir * -> -> 8 `i `x -> -> # *U _dir `i `x `ui -> 32 `ui 81  ]
{
[; ;tff.c: 413: *p++ = '.';
"413
[e = *U ++ _p * -> -> 1 `i `x -> -> # *U _p `i `x -> -> 46 `ui `uc ]
[; ;tff.c: 414: for (n = 8; n < 11; n++) {
"414
{
[e = _n -> -> 8 `i `uc ]
[e $ < -> _n `i -> 11 `i 82  ]
[e $U 83  ]
[e :U 82 ]
{
[; ;tff.c: 415: c = dir[n];
"415
[e = _c *U + _dir * -> _n `ux -> -> # *U _dir `ui `ux ]
[; ;tff.c: 416: if (c == ' ') break;
"416
[e $ ! == -> _c `ui -> 32 `ui 85  ]
[e $U 83  ]
[e :U 85 ]
[; ;tff.c: 417: if (a & 0x10 && c >= 'A' && c <= 'Z') c += 0x20;
"417
[e $ ! && && != & -> _a `i -> 16 `i -> 0 `i >= -> _c `ui -> 65 `ui <= -> _c `ui -> 90 `ui 86  ]
[e =+ _c -> -> 32 `i `uc ]
[e :U 86 ]
[; ;tff.c: 418: *p++ = c;
"418
[e = *U ++ _p * -> -> 1 `i `x -> -> # *U _p `i `x _c ]
"419
}
"414
[e ++ _n -> -> 1 `i `uc ]
[e $ < -> _n `i -> 11 `i 82  ]
[e :U 83 ]
"419
}
"420
}
[e :U 81 ]
[; ;tff.c: 419: }
[; ;tff.c: 420: }
[; ;tff.c: 421: *p = '\0';
"421
[e = *U _p -> -> 0 `ui `uc ]
[; ;tff.c: 423: finfo->fattrib = dir[11];
"423
[e = . *U _finfo 3 *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x ]
[; ;tff.c: 424: finfo->fsize = (DWORD)(((DWORD)*(volatile BYTE*)((&dir[28])+3)<<24)|((DWORD)*(volatile BYTE*)((&dir[28])+2)<<16)|((WORD)*(volatile BYTE*)((&dir[28])+1)<<8)|*(volatile BYTE*)(&dir[28]));
"424
[e = . *U _finfo 0 | | | << -> *U -> + &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x * -> -> 3 `i `x -> -> # *U &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `i `x `*Vuc `ul -> 24 `i << -> *U -> + &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x * -> -> 2 `i `x -> -> # *U &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `i `x `*Vuc `ul -> 16 `i -> << -> -> *U -> + &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `i `x `*Vuc `us `ui -> 8 `i `ul -> *U -> &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `*Vuc `ul ]
[; ;tff.c: 425: finfo->fdate = (WORD)(((WORD)*(volatile BYTE*)((&dir[24])+1)<<8)|(WORD)*(volatile BYTE*)(&dir[24]));
"425
[e = . *U _finfo 1 -> | << -> -> *U -> + &U *U + _dir * -> -> 24 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 24 `i `x -> -> # *U _dir `i `x `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + _dir * -> -> 24 `i `x -> -> # *U _dir `i `x `*Vuc `us `ui `us ]
[; ;tff.c: 426: finfo->ftime = (WORD)(((WORD)*(volatile BYTE*)((&dir[22])+1)<<8)|(WORD)*(volatile BYTE*)(&dir[22]));
"426
[e = . *U _finfo 2 -> | << -> -> *U -> + &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x `*Vuc `us `ui `us ]
[; ;tff.c: 427: }
"427
[e :UE 74 ]
}
"438
[v _make_dirfile `(uc ~T0 @X0 1 sf2`**Cuc`*uc ]
"442
{
[; ;tff.c: 437: static
[; ;tff.c: 438: char make_dirfile (
[; ;tff.c: 439: const char **path,
[; ;tff.c: 440: char *dirname
[; ;tff.c: 441: )
[; ;tff.c: 442: {
[e :U _make_dirfile ]
"439
[v _path `**Cuc ~T0 @X0 1 r1 ]
"440
[v _dirname `*uc ~T0 @X0 1 r2 ]
"442
[f ]
"443
[v _n `uc ~T0 @X0 1 a ]
[v _t `uc ~T0 @X0 1 a ]
[v _c `uc ~T0 @X0 1 a ]
[v _a `uc ~T0 @X0 1 a ]
[v _b `uc ~T0 @X0 1 a ]
[; ;tff.c: 443: BYTE n, t, c, a, b;
[; ;tff.c: 446: memset(dirname, ' ', 8+3);
"446
[e ( _memset (3 , , -> _dirname `*v -> -> 32 `ui `i -> + -> 8 `i -> 3 `i `ui ]
[; ;tff.c: 447: a = 0; b = 0x18;
"447
[e = _a -> -> 0 `i `uc ]
[e = _b -> -> 24 `i `uc ]
[; ;tff.c: 448: n = 0; t = 8;
"448
[e = _n -> -> 0 `i `uc ]
[e = _t -> -> 8 `i `uc ]
[; ;tff.c: 449: for (;;) {
"449
{
[e :U 88 ]
{
[; ;tff.c: 450: c = *(*path)++;
"450
[e = _c *U ++ *U _path * -> -> 1 `i `x -> -> # *U *U _path `i `x ]
[; ;tff.c: 451: if (c == '\0' || c == '/') {
"451
[e $ ! || == -> _c `ui -> 0 `ui == -> _c `ui -> 47 `ui 91  ]
{
[; ;tff.c: 452: if (n == 0) break;
"452
[e $ ! == -> _n `i -> 0 `i 92  ]
[e $U 89  ]
[e :U 92 ]
[; ;tff.c: 453: dirname[11] = 1 ? (a & b) : 0;
"453
[e = *U + _dirname * -> -> 11 `i `x -> -> # *U _dirname `i `x -> ? != -> 1 `i -> 0 `i : & -> _a `i -> _b `i -> 0 `i `uc ]
[; ;tff.c: 454: return c;
"454
[e ) _c ]
[e $UE 87  ]
"455
}
[e :U 91 ]
[; ;tff.c: 455: }
[; ;tff.c: 456: if (c <= ' ' || c == 0x7F) break;
"456
[e $ ! || <= -> _c `ui -> 32 `ui == -> _c `i -> 127 `i 93  ]
[e $U 89  ]
[e :U 93 ]
[; ;tff.c: 457: if (c == '.') {
"457
[e $ ! == -> _c `ui -> 46 `ui 94  ]
{
[; ;tff.c: 458: if (!(a & 1) && n >= 1 && n <= 8) {
"458
[e $ ! && && ! != & -> _a `i -> 1 `i -> 0 `i >= -> _n `i -> 1 `i <= -> _n `i -> 8 `i 95  ]
{
[; ;tff.c: 459: n = 8; t = 11; continue;
"459
[e = _n -> -> 8 `i `uc ]
[e = _t -> -> 11 `i `uc ]
[e $U 90  ]
"460
}
[e :U 95 ]
[; ;tff.c: 460: }
[; ;tff.c: 461: break;
"461
[e $U 89  ]
"462
}
[e :U 94 ]
[; ;tff.c: 462: }
[; ;tff.c: 463: if (1 &&
[; ;tff.c: 464: ((c >= 0x81 && c <= 0x9F) ||
[; ;tff.c: 465: (c >= 0xE0 && c <= 0xFC))) {
"465
[e $ ! && != -> 1 `i -> 0 `i || && >= -> _c `i -> 129 `i <= -> _c `i -> 159 `i && >= -> _c `i -> 224 `i <= -> _c `i -> 252 `i 96  ]
{
[; ;tff.c: 466: if (n == 0 && c == 0xE5)
"466
[e $ ! && == -> _n `i -> 0 `i == -> _c `i -> 229 `i 97  ]
[; ;tff.c: 467: c = 0x05;
"467
[e = _c -> -> 5 `i `uc ]
[e :U 97 ]
[; ;tff.c: 468: a ^= 1; goto md_l2;
"468
[e =^ _a -> -> 1 `i `uc ]
[e $U 98  ]
"469
}
[e :U 96 ]
[; ;tff.c: 469: }
[; ;tff.c: 470: if (c == '"') break;
"470
[e $ ! == -> _c `ui -> 34 `ui 99  ]
[e $U 89  ]
[e :U 99 ]
[; ;tff.c: 471: if (c <= ')') goto md_l1;
"471
[e $ ! <= -> _c `ui -> 41 `ui 100  ]
[e $U 101  ]
[e :U 100 ]
[; ;tff.c: 472: if (c <= ',') break;
"472
[e $ ! <= -> _c `ui -> 44 `ui 102  ]
[e $U 89  ]
[e :U 102 ]
[; ;tff.c: 473: if (c <= '9') goto md_l1;
"473
[e $ ! <= -> _c `ui -> 57 `ui 103  ]
[e $U 101  ]
[e :U 103 ]
[; ;tff.c: 474: if (c <= '?') break;
"474
[e $ ! <= -> _c `ui -> 63 `ui 104  ]
[e $U 89  ]
[e :U 104 ]
[; ;tff.c: 475: if (!(a & 1)) {
"475
[e $ ! ! != & -> _a `i -> 1 `i -> 0 `i 105  ]
{
[; ;tff.c: 476: if (c == '|') break;
"476
[e $ ! == -> _c `ui -> 124 `ui 106  ]
[e $U 89  ]
[e :U 106 ]
[; ;tff.c: 477: if (c >= '[' && c <= ']') break;
"477
[e $ ! && >= -> _c `ui -> 91 `ui <= -> _c `ui -> 93 `ui 107  ]
[e $U 89  ]
[e :U 107 ]
[; ;tff.c: 478: if (1 && c >= 'A' && c <= 'Z')
"478
[e $ ! && && != -> 1 `i -> 0 `i >= -> _c `ui -> 65 `ui <= -> _c `ui -> 90 `ui 108  ]
[; ;tff.c: 479: (t == 8) ? (b &= 0xF7) : (b &= 0xEF);
"479
[e ? == -> _t `i -> 8 `i : -> =& _b -> -> 247 `i `uc `i -> =& _b -> -> 239 `i `uc `i ]
[e :U 108 ]
[; ;tff.c: 480: if (c >= 'a' && c <= 'z') {
"480
[e $ ! && >= -> _c `ui -> 97 `ui <= -> _c `ui -> 122 `ui 109  ]
{
[; ;tff.c: 481: c -= 0x20;
"481
[e =- _c -> -> 32 `i `uc ]
[; ;tff.c: 482: if (1) (t == 8) ? (a |= 0x08) : (a |= 0x10);
"482
[e $ ! != -> 1 `i -> 0 `i 110  ]
[e ? == -> _t `i -> 8 `i : -> =| _a -> -> 8 `i `uc `i -> =| _a -> -> 16 `i `uc `i ]
[e :U 110 ]
"483
}
[e :U 109 ]
"484
}
[e :U 105 ]
[; ;tff.c: 483: }
[; ;tff.c: 484: }
[; ;tff.c: 485: md_l1:
"485
[e :U 101 ]
[; ;tff.c: 486: a &= 0xFE;
"486
[e =& _a -> -> 254 `i `uc ]
[; ;tff.c: 487: md_l2:
"487
[e :U 98 ]
[; ;tff.c: 488: if (n >= t) break;
"488
[e $ ! >= -> _n `i -> _t `i 111  ]
[e $U 89  ]
[e :U 111 ]
[; ;tff.c: 489: dirname[n++] = c;
"489
[e = *U + _dirname * -> ++ _n -> -> 1 `i `uc `ux -> -> # *U _dirname `ui `ux _c ]
"490
}
[e :U 90 ]
[; ;tff.c: 490: }
[e $U 88  ]
[e :U 89 ]
}
[; ;tff.c: 491: return 1;
"491
[e ) -> -> 1 `i `uc ]
[e $UE 87  ]
[; ;tff.c: 492: }
"492
[e :UE 87 ]
}
"501
[v _trace_path `(E155 ~T0 @X0 1 sf4`*S3`*uc`*Cuc`**uc ]
"507
{
[; ;tff.c: 500: static
[; ;tff.c: 501: FRESULT trace_path (
[; ;tff.c: 502: DIR_E *dj,
[; ;tff.c: 503: char *fn,
[; ;tff.c: 504: const char *path,
[; ;tff.c: 505: BYTE **dir
[; ;tff.c: 506: )
[; ;tff.c: 507: {
[e :U _trace_path ]
"502
[v _dj `*S3 ~T0 @X0 1 r1 ]
"503
[v _fn `*uc ~T0 @X0 1 r2 ]
"504
[v _path `*Cuc ~T0 @X0 1 r3 ]
"505
[v _dir `**uc ~T0 @X0 1 r4 ]
"507
[f ]
"508
[v _clust `ul ~T0 @X0 1 a ]
"509
[v _ds `uc ~T0 @X0 1 a ]
"510
[v _dptr `*uc ~T0 @X0 1 a ]
[; ;tff.c: 508: CLUST clust;
[; ;tff.c: 509: char ds;
[; ;tff.c: 510: BYTE *dptr = (0);
[e = _dptr -> -> 0 `i `*uc ]
"511
[v _fs `*S2 ~T0 @X0 1 a ]
[; ;tff.c: 511: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;tff.c: 514: dj->fs = fs;
"514
[e = . *U _dj 2 _fs ]
[; ;tff.c: 515: clust = fs->dirbase;
"515
[e = _clust . *U _fs 4 ]
[; ;tff.c: 517: if (fs->fs_type == 3) {
"517
[e $ ! == -> . *U _fs 10 `i -> 3 `i 113  ]
{
[; ;tff.c: 518: dj->clust = dj->sclust = clust;
"518
[e = . *U _dj 4 = . *U _dj 3 _clust ]
[; ;tff.c: 519: dj->sect = clust2sect(clust);
"519
[e = . *U _dj 5 ( _clust2sect (1 _clust ]
"520
}
[; ;tff.c: 520: } else
[e $U 114  ]
[e :U 113 ]
[; ;tff.c: 522: {
"522
{
[; ;tff.c: 523: dj->clust = dj->sclust = 0;
"523
[e = . *U _dj 4 = . *U _dj 3 -> -> -> 0 `i `l `ul ]
[; ;tff.c: 524: dj->sect = clust;
"524
[e = . *U _dj 5 _clust ]
"525
}
[e :U 114 ]
[; ;tff.c: 525: }
[; ;tff.c: 526: dj->index = 0;
"526
[e = . *U _dj 1 -> -> 0 `i `us ]
[; ;tff.c: 528: if (*path == '\0') {
"528
[e $ ! == -> *U _path `ui -> 0 `ui 115  ]
{
[; ;tff.c: 529: *dir = (0); return FR_OK;
"529
[e = *U _dir -> -> 0 `i `*uc ]
[e ) . `E155 0 ]
[e $UE 112  ]
"530
}
[e :U 115 ]
[; ;tff.c: 530: }
[; ;tff.c: 532: for (;;) {
"532
{
[e :U 116 ]
{
[; ;tff.c: 533: ds = make_dirfile(&path, fn);
"533
[e = _ds ( _make_dirfile (2 , &U _path _fn ]
[; ;tff.c: 534: if (ds == 1) return FR_INVALID_NAME;
"534
[e $ ! == -> _ds `i -> 1 `i 119  ]
[e ) . `E155 4 ]
[e $UE 112  ]
[e :U 119 ]
[; ;tff.c: 535: for (;;) {
"535
{
[e :U 120 ]
{
[; ;tff.c: 536: if (!move_window(dj->sect)) return FR_RW_ERROR;
"536
[e $ ! ! != -> ( _move_window (1 . *U _dj 5 `i -> -> -> 0 `i `E105 `i 123  ]
[e ) . `E155 8 ]
[e $UE 112  ]
[e :U 123 ]
[; ;tff.c: 537: dptr = &fs->win[(dj->index & 15) * 32];
"537
[e = _dptr &U *U + &U . *U _fs 14 * -> * & -> . *U _dj 1 `ui -> -> 15 `i `ui -> -> 32 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux ]
[; ;tff.c: 538: if (dptr[0] == 0)
"538
[e $ ! == -> *U + _dptr * -> -> 0 `i `x -> -> # *U _dptr `i `x `i -> 0 `i 124  ]
[; ;tff.c: 539: return !ds ? FR_NO_FILE : FR_NO_PATH;
"539
[e ) -> ? ! != -> _ds `i -> -> -> 0 `i `uc `i : -> . `E155 2 `i -> . `E155 3 `i `E155 ]
[e $UE 112  ]
[e :U 124 ]
[; ;tff.c: 540: if (dptr[0] != 0xE5
[; ;tff.c: 541: && !(dptr[11] & 0x08)
[; ;tff.c: 542: && !memcmp(&dptr[0], fn, 8+3) ) break;
"542
[e $ ! && && != -> *U + _dptr * -> -> 0 `i `x -> -> # *U _dptr `i `x `i -> 229 `i ! != & -> *U + _dptr * -> -> 11 `i `x -> -> # *U _dptr `i `x `i -> 8 `i -> 0 `i ! != ( _memcmp (3 , , -> &U *U + _dptr * -> -> 0 `i `x -> -> # *U _dptr `i `x `*Cv -> _fn `*Cv -> + -> 8 `i -> 3 `i `ui -> 0 `i 125  ]
[e $U 121  ]
[e :U 125 ]
[; ;tff.c: 543: if (!next_dir_entry(dj))
"543
[e $ ! ! != -> ( _next_dir_entry (1 _dj `i -> -> -> 0 `i `E105 `i 126  ]
[; ;tff.c: 544: return !ds ? FR_NO_FILE : FR_NO_PATH;
"544
[e ) -> ? ! != -> _ds `i -> -> -> 0 `i `uc `i : -> . `E155 2 `i -> . `E155 3 `i `E155 ]
[e $UE 112  ]
[e :U 126 ]
"545
}
[; ;tff.c: 545: }
[e $U 120  ]
[e :U 121 ]
}
[; ;tff.c: 546: if (!ds) { *dir = dptr; return FR_OK; }
"546
[e $ ! ! != -> _ds `i -> -> -> 0 `i `uc `i 127  ]
{
[e = *U _dir _dptr ]
[e ) . `E155 0 ]
[e $UE 112  ]
}
[e :U 127 ]
[; ;tff.c: 547: if (!(dptr[11] & 0x10)) return FR_NO_PATH;
"547
[e $ ! ! != & -> *U + _dptr * -> -> 11 `i `x -> -> # *U _dptr `i `x `i -> 16 `i -> 0 `i 128  ]
[e ) . `E155 3 ]
[e $UE 112  ]
[e :U 128 ]
[; ;tff.c: 548: clust =
[; ;tff.c: 550: ((DWORD)(WORD)(((WORD)*(volatile BYTE*)((&dptr[20])+1)<<8)|(WORD)*(volatile BYTE*)(&dptr[20])) << 16) |
[; ;tff.c: 552: (WORD)(((WORD)*(volatile BYTE*)((&dptr[26])+1)<<8)|(WORD)*(volatile BYTE*)(&dptr[26]));
"552
[e = _clust | << -> -> | << -> -> *U -> + &U *U + _dptr * -> -> 20 `i `x -> -> # *U _dptr `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dptr * -> -> 20 `i `x -> -> # *U _dptr `i `x `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + _dptr * -> -> 20 `i `x -> -> # *U _dptr `i `x `*Vuc `us `ui `us `ul -> 16 `i -> -> | << -> -> *U -> + &U *U + _dptr * -> -> 26 `i `x -> -> # *U _dptr `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dptr * -> -> 26 `i `x -> -> # *U _dptr `i `x `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + _dptr * -> -> 26 `i `x -> -> # *U _dptr `i `x `*Vuc `us `ui `us `ul ]
[; ;tff.c: 553: dj->clust = dj->sclust = clust;
"553
[e = . *U _dj 4 = . *U _dj 3 _clust ]
[; ;tff.c: 554: dj->sect = clust2sect(clust);
"554
[e = . *U _dj 5 ( _clust2sect (1 _clust ]
[; ;tff.c: 555: dj->index = 2;
"555
[e = . *U _dj 1 -> -> 2 `i `us ]
"556
}
[; ;tff.c: 556: }
[e $U 116  ]
[e :U 117 ]
}
[; ;tff.c: 557: }
"557
[e :UE 112 ]
}
"567
[v _reserve_direntry `(E155 ~T0 @X0 1 sf2`*S3`**uc ]
"571
{
[; ;tff.c: 566: static
[; ;tff.c: 567: FRESULT reserve_direntry (
[; ;tff.c: 568: DIR_E *dj,
[; ;tff.c: 569: BYTE **dir
[; ;tff.c: 570: )
[; ;tff.c: 571: {
[e :U _reserve_direntry ]
"568
[v _dj `*S3 ~T0 @X0 1 r1 ]
"569
[v _dir `**uc ~T0 @X0 1 r2 ]
"571
[f ]
"572
[v _clust `ul ~T0 @X0 1 a ]
"573
[v _sector `ul ~T0 @X0 1 a ]
"574
[v _c `uc ~T0 @X0 1 a ]
[v _n `uc ~T0 @X0 1 a ]
[v _dptr `*uc ~T0 @X0 1 a ]
"575
[v _fs `*S2 ~T0 @X0 1 a ]
[; ;tff.c: 572: CLUST clust;
[; ;tff.c: 573: DWORD sector;
[; ;tff.c: 574: BYTE c, n, *dptr;
[; ;tff.c: 575: FATFS *fs = dj->fs;
[e = _fs . *U _dj 2 ]
[; ;tff.c: 579: clust = dj->sclust;
"579
[e = _clust . *U _dj 3 ]
[; ;tff.c: 580: if (clust != 0) {
"580
[e $ ! != _clust -> -> -> 0 `i `l `ul 130  ]
{
[; ;tff.c: 581: dj->clust = clust;
"581
[e = . *U _dj 4 _clust ]
[; ;tff.c: 582: dj->sect = clust2sect(clust);
"582
[e = . *U _dj 5 ( _clust2sect (1 _clust ]
"583
}
[; ;tff.c: 583: } else {
[e $U 131  ]
[e :U 130 ]
{
[; ;tff.c: 584: dj->sect = fs->dirbase;
"584
[e = . *U _dj 5 . *U _fs 4 ]
"585
}
[e :U 131 ]
[; ;tff.c: 585: }
[; ;tff.c: 586: dj->index = 0;
"586
[e = . *U _dj 1 -> -> 0 `i `us ]
[; ;tff.c: 588: do {
"588
[e :U 134 ]
{
[; ;tff.c: 589: if (!move_window(dj->sect)) return FR_RW_ERROR;
"589
[e $ ! ! != -> ( _move_window (1 . *U _dj 5 `i -> -> -> 0 `i `E105 `i 135  ]
[e ) . `E155 8 ]
[e $UE 129  ]
[e :U 135 ]
[; ;tff.c: 590: dptr = &fs->win[(dj->index & 15) * 32];
"590
[e = _dptr &U *U + &U . *U _fs 14 * -> * & -> . *U _dj 1 `ui -> -> 15 `i `ui -> -> 32 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux ]
[; ;tff.c: 591: c = dptr[0];
"591
[e = _c *U + _dptr * -> -> 0 `i `x -> -> # *U _dptr `i `x ]
[; ;tff.c: 592: if (c == 0 || c == 0xE5) {
"592
[e $ ! || == -> _c `i -> 0 `i == -> _c `i -> 229 `i 136  ]
{
[; ;tff.c: 593: *dir = dptr; return FR_OK;
"593
[e = *U _dir _dptr ]
[e ) . `E155 0 ]
[e $UE 129  ]
"594
}
[e :U 136 ]
"595
}
[; ;tff.c: 594: }
[; ;tff.c: 595: } while (next_dir_entry(dj));
[e $ != -> ( _next_dir_entry (1 _dj `i -> -> -> 0 `i `E105 `i 134  ]
[e :U 133 ]
[; ;tff.c: 599: if (clust == 0 || !(clust = create_chain(dj->clust))) return FR_DENIED;
"599
[e $ ! || == _clust -> -> -> 0 `i `l `ul ! != = _clust ( _create_chain (1 . *U _dj 4 -> -> 0 `i `ul 137  ]
[e ) . `E155 6 ]
[e $UE 129  ]
[e :U 137 ]
[; ;tff.c: 600: if (clust == 1 || !move_window(0)) return FR_RW_ERROR;
"600
[e $ ! || == _clust -> -> -> 1 `i `l `ul ! != -> ( _move_window (1 -> -> -> 0 `i `l `ul `i -> -> -> 0 `i `E105 `i 138  ]
[e ) . `E155 8 ]
[e $UE 129  ]
[e :U 138 ]
[; ;tff.c: 602: fs->winsect = sector = clust2sect(clust);
"602
[e = . *U _fs 2 = _sector ( _clust2sect (1 _clust ]
[; ;tff.c: 603: memset(fs->win, 0, 512U);
"603
[e ( _memset (3 , , -> &U . *U _fs 14 `*v -> 0 `i -> 512 `ui ]
[; ;tff.c: 604: for (n = fs->csize; n; n--) {
"604
{
[e = _n . *U _fs 11 ]
[e $U 142  ]
[e :U 139 ]
{
[; ;tff.c: 605: if (disk_write(0, fs->win, sector, 1) != RES_OK)
"605
[e $ ! != -> ( _disk_write (4 , , , -> -> 0 `i `uc -> &U . *U _fs 14 `*Cuc _sector -> -> 1 `i `ui `i -> . `E248 0 `i 143  ]
[; ;tff.c: 606: return FR_RW_ERROR;
"606
[e ) . `E155 8 ]
[e $UE 129  ]
[e :U 143 ]
[; ;tff.c: 607: sector++;
"607
[e ++ _sector -> -> -> 1 `i `l `ul ]
"608
}
"604
[e -- _n -> -> 1 `i `uc ]
[e :U 142 ]
[e $ != -> _n `i -> -> -> 0 `i `uc `i 139  ]
[e :U 140 ]
"608
}
[; ;tff.c: 608: }
[; ;tff.c: 609: fs->winflag = 1;
"609
[e = . *U _fs 13 -> -> 1 `i `uc ]
[; ;tff.c: 610: *dir = fs->win;
"610
[e = *U _dir &U . *U _fs 14 ]
[; ;tff.c: 611: return FR_OK;
"611
[e ) . `E155 0 ]
[e $UE 129  ]
[; ;tff.c: 612: }
"612
[e :UE 129 ]
}
"623
[v _check_fs `(uc ~T0 @X0 1 sf1`ul ]
"626
{
[; ;tff.c: 622: static
[; ;tff.c: 623: BYTE check_fs (
[; ;tff.c: 624: DWORD sect
[; ;tff.c: 625: )
[; ;tff.c: 626: {
[e :U _check_fs ]
"624
[v _sect `ul ~T0 @X0 1 r1 ]
"626
[f ]
"627
[v _fs `*S2 ~T0 @X0 1 a ]
[; ;tff.c: 627: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;tff.c: 629: if (disk_read(0, fs->win, sect, 1) != RES_OK)
"629
[e $ ! != -> ( _disk_read (4 , , , -> -> 0 `i `uc &U . *U _fs 14 _sect -> -> 1 `i `ui `i -> . `E248 0 `i 145  ]
[; ;tff.c: 630: return 2;
"630
[e ) -> -> 2 `i `uc ]
[e $UE 144  ]
[e :U 145 ]
[; ;tff.c: 631: if ((WORD)(((WORD)*(volatile BYTE*)((&fs->win[510])+1)<<8)|(WORD)*(volatile BYTE*)(&fs->win[510])) != 0xAA55)
"631
[e $ ! != -> -> | << -> -> *U -> + &U *U + &U . *U _fs 14 * -> -> -> 510 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 1 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> -> 510 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + &U . *U _fs 14 * -> -> -> 510 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `*Vuc `us `ui `us `ui -> 43605 `ui 146  ]
[; ;tff.c: 632: return 2;
"632
[e ) -> -> 2 `i `uc ]
[e $UE 144  ]
[e :U 146 ]
[; ;tff.c: 634: if (!memcmp(&fs->win[54], "FAT", 3))
"634
[e $ ! ! != ( _memcmp (3 , , -> &U *U + &U . *U _fs 14 * -> -> -> 54 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `*Cv -> :s 1C `*Cv -> -> 3 `i `ui -> 0 `i 147  ]
[; ;tff.c: 635: return 0;
"635
[e ) -> -> 0 `i `uc ]
[e $UE 144  ]
[e :U 147 ]
[; ;tff.c: 637: if (!memcmp(&fs->win[82], "FAT32", 5) && !(fs->win[40] & 0x80))
"637
[e $ ! && ! != ( _memcmp (3 , , -> &U *U + &U . *U _fs 14 * -> -> -> 82 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `*Cv -> :s 2C `*Cv -> -> 5 `i `ui -> 0 `i ! != & -> *U + &U . *U _fs 14 * -> -> -> 40 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i -> 128 `i -> 0 `i 148  ]
[; ;tff.c: 638: return 0;
"638
[e ) -> -> 0 `i `uc ]
[e $UE 144  ]
[e :U 148 ]
[; ;tff.c: 640: return 1;
"640
[e ) -> -> 1 `i `uc ]
[e $UE 144  ]
[; ;tff.c: 641: }
"641
[e :UE 144 ]
}
"651
[v _auto_mount `(E155 ~T0 @X0 1 sf2`**Cuc`uc ]
"655
{
[; ;tff.c: 650: static
[; ;tff.c: 651: FRESULT auto_mount (
[; ;tff.c: 652: const char **path,
[; ;tff.c: 653: BYTE chk_wp
[; ;tff.c: 654: )
[; ;tff.c: 655: {
[e :U _auto_mount ]
"652
[v _path `**Cuc ~T0 @X0 1 r1 ]
"653
[v _chk_wp `uc ~T0 @X0 1 r2 ]
"655
[f ]
"656
[v _fmt `uc ~T0 @X0 1 a ]
"657
[v _stat `uc ~T0 @X0 1 a ]
"658
[v _bootsect `ul ~T0 @X0 1 a ]
[v _fatsize `ul ~T0 @X0 1 a ]
[v _totalsect `ul ~T0 @X0 1 a ]
[v _maxclust `ul ~T0 @X0 1 a ]
"659
[v _p `*Cuc ~T0 @X0 1 a ]
[; ;tff.c: 656: BYTE fmt;
[; ;tff.c: 657: DSTATUS stat;
[; ;tff.c: 658: DWORD bootsect, fatsize, totalsect, maxclust;
[; ;tff.c: 659: const char *p = *path;
[e = _p *U _path ]
"660
[v _fs `*S2 ~T0 @X0 1 a ]
[; ;tff.c: 660: FATFS *fs;
[; ;tff.c: 663: while (*p == ' ') p++;
"663
[e $U 150  ]
[e :U 151 ]
[e ++ _p * -> -> 1 `i `x -> -> # *U _p `i `x ]
[e :U 150 ]
[e $ == -> *U _p `ui -> 32 `ui 151  ]
[e :U 152 ]
[; ;tff.c: 664: if (*p == '/') p++;
"664
[e $ ! == -> *U _p `ui -> 47 `ui 153  ]
[e ++ _p * -> -> 1 `i `x -> -> # *U _p `i `x ]
[e :U 153 ]
[; ;tff.c: 665: *path = p;
"665
[e = *U _path _p ]
[; ;tff.c: 668: fs = FatFs;
"668
[e = _fs _FatFs ]
[; ;tff.c: 669: if (!fs) return FR_NOT_ENABLED;
"669
[e $ ! ! != _fs -> -> 0 `i `*S2 154  ]
[e ) . `E155 10 ]
[e $UE 149  ]
[e :U 154 ]
[; ;tff.c: 671: if (fs->fs_type) {
"671
[e $ ! != -> . *U _fs 10 `i -> -> -> 0 `i `uc `i 155  ]
{
[; ;tff.c: 672: stat = disk_status(0);
"672
[e = _stat ( _disk_status (1 -> -> 0 `i `uc ]
[; ;tff.c: 673: if (!(stat & 0x01)) {
"673
[e $ ! ! != & -> _stat `i -> 1 `i -> 0 `i 156  ]
{
[; ;tff.c: 675: if (chk_wp && (stat & 0x04))
"675
[e $ ! && != -> _chk_wp `i -> -> -> 0 `i `uc `i != & -> _stat `i -> 4 `i -> 0 `i 157  ]
[; ;tff.c: 676: return FR_WRITE_PROTECTED;
"676
[e ) . `E155 9 ]
[e $UE 149  ]
[e :U 157 ]
[; ;tff.c: 678: return FR_OK;
"678
[e ) . `E155 0 ]
[e $UE 149  ]
"679
}
[e :U 156 ]
"680
}
[e :U 155 ]
[; ;tff.c: 679: }
[; ;tff.c: 680: }
[; ;tff.c: 684: memset(fs, 0, sizeof(FATFS));
"684
[e ( _memset (3 , , -> _fs `*v -> 0 `i -> # `S2 `ui ]
[; ;tff.c: 685: stat = disk_initialize(0);
"685
[e = _stat ( _disk_initialize (1 -> -> 0 `i `uc ]
[; ;tff.c: 686: if (stat & 0x01)
"686
[e $ ! != & -> _stat `i -> 1 `i -> 0 `i 158  ]
[; ;tff.c: 687: return FR_NOT_READY;
"687
[e ) . `E155 1 ]
[e $UE 149  ]
[e :U 158 ]
[; ;tff.c: 689: if (chk_wp && (stat & 0x04))
"689
[e $ ! && != -> _chk_wp `i -> -> -> 0 `i `uc `i != & -> _stat `i -> 4 `i -> 0 `i 159  ]
[; ;tff.c: 690: return FR_WRITE_PROTECTED;
"690
[e ) . `E155 9 ]
[e $UE 149  ]
[e :U 159 ]
[; ;tff.c: 694: fmt = check_fs(bootsect = 0);
"694
[e = _fmt ( _check_fs (1 = _bootsect -> -> -> 0 `i `l `ul ]
[; ;tff.c: 695: if (fmt == 1) {
"695
[e $ ! == -> _fmt `i -> 1 `i 160  ]
{
[; ;tff.c: 697: if (fs->win[446+4]) {
"697
[e $ ! != -> *U + &U . *U _fs 14 * -> -> + -> 446 `i -> 4 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i -> -> -> 0 `i `uc `i 161  ]
{
[; ;tff.c: 698: bootsect = (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[446+8])+3)<<24)|((DWORD)*(volatile BYTE*)((&fs->win[446+8])+2)<<16)|((WORD)*(volatile BYTE*)((&fs->win[446+8])+1)<<8)|*(volatile BYTE*)(&fs->win[446+8]));
"698
[e = _bootsect | | | << -> *U -> + &U *U + &U . *U _fs 14 * -> -> + -> 446 `i -> 8 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 3 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> + -> 446 `i -> 8 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `ul -> 24 `i << -> *U -> + &U *U + &U . *U _fs 14 * -> -> + -> 446 `i -> 8 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 2 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> + -> 446 `i -> 8 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `ul -> 16 `i -> << -> -> *U -> + &U *U + &U . *U _fs 14 * -> -> + -> 446 `i -> 8 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 1 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> + -> 446 `i -> 8 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `us `ui -> 8 `i `ul -> *U -> &U *U + &U . *U _fs 14 * -> -> + -> 446 `i -> 8 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `*Vuc `ul ]
[; ;tff.c: 699: fmt = check_fs(bootsect);
"699
[e = _fmt ( _check_fs (1 _bootsect ]
"700
}
[e :U 161 ]
"701
}
[e :U 160 ]
[; ;tff.c: 700: }
[; ;tff.c: 701: }
[; ;tff.c: 702: if (fmt || (WORD)(((WORD)*(volatile BYTE*)((&fs->win[11])+1)<<8)|(WORD)*(volatile BYTE*)(&fs->win[11])) != 512U)
"702
[e $ ! || != -> _fmt `i -> -> -> 0 `i `uc `i != -> -> | << -> -> *U -> + &U *U + &U . *U _fs 14 * -> -> -> 11 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 1 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> -> 11 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + &U . *U _fs 14 * -> -> -> 11 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `*Vuc `us `ui `us `ui -> 512 `ui 162  ]
[; ;tff.c: 703: return FR_NO_FILESYSTEM;
"703
[e ) . `E155 11 ]
[e $UE 149  ]
[e :U 162 ]
[; ;tff.c: 706: fatsize = (WORD)(((WORD)*(volatile BYTE*)((&fs->win[22])+1)<<8)|(WORD)*(volatile BYTE*)(&fs->win[22]));
"706
[e = _fatsize -> -> | << -> -> *U -> + &U *U + &U . *U _fs 14 * -> -> -> 22 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 1 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> -> 22 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + &U . *U _fs 14 * -> -> -> 22 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `*Vuc `us `ui `us `ul ]
[; ;tff.c: 707: if (!fatsize) fatsize = (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[36])+3)<<24)|((DWORD)*(volatile BYTE*)((&fs->win[36])+2)<<16)|((WORD)*(volatile BYTE*)((&fs->win[36])+1)<<8)|*(volatile BYTE*)(&fs->win[36]));
"707
[e $ ! ! != _fatsize -> -> 0 `i `ul 163  ]
[e = _fatsize | | | << -> *U -> + &U *U + &U . *U _fs 14 * -> -> -> 36 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 3 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> -> 36 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `ul -> 24 `i << -> *U -> + &U *U + &U . *U _fs 14 * -> -> -> 36 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 2 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> -> 36 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `ul -> 16 `i -> << -> -> *U -> + &U *U + &U . *U _fs 14 * -> -> -> 36 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 1 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> -> 36 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `us `ui -> 8 `i `ul -> *U -> &U *U + &U . *U _fs 14 * -> -> -> 36 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `*Vuc `ul ]
[e :U 163 ]
[; ;tff.c: 708: fs->sects_fat = (CLUST)fatsize;
"708
[e = . *U _fs 6 _fatsize ]
[; ;tff.c: 709: fs->n_fats = fs->win[16];
"709
[e = . *U _fs 12 *U + &U . *U _fs 14 * -> -> -> 16 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux ]
[; ;tff.c: 710: fatsize *= fs->n_fats;
"710
[e =* _fatsize -> . *U _fs 12 `ul ]
[; ;tff.c: 711: fs->fatbase = bootsect + (WORD)(((WORD)*(volatile BYTE*)((&fs->win[14])+1)<<8)|(WORD)*(volatile BYTE*)(&fs->win[14]));
"711
[e = . *U _fs 3 + _bootsect -> -> | << -> -> *U -> + &U *U + &U . *U _fs 14 * -> -> -> 14 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 1 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> -> 14 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + &U . *U _fs 14 * -> -> -> 14 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `*Vuc `us `ui `us `ul ]
[; ;tff.c: 712: fs->csize = fs->win[13];
"712
[e = . *U _fs 11 *U + &U . *U _fs 14 * -> -> -> 13 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux ]
[; ;tff.c: 713: fs->n_rootdir = (WORD)(((WORD)*(volatile BYTE*)((&fs->win[17])+1)<<8)|(WORD)*(volatile BYTE*)(&fs->win[17]));
"713
[e = . *U _fs 1 -> | << -> -> *U -> + &U *U + &U . *U _fs 14 * -> -> -> 17 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 1 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> -> 17 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + &U . *U _fs 14 * -> -> -> 17 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `*Vuc `us `ui `us ]
[; ;tff.c: 714: totalsect = (WORD)(((WORD)*(volatile BYTE*)((&fs->win[19])+1)<<8)|(WORD)*(volatile BYTE*)(&fs->win[19]));
"714
[e = _totalsect -> -> | << -> -> *U -> + &U *U + &U . *U _fs 14 * -> -> -> 19 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 1 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> -> 19 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + &U . *U _fs 14 * -> -> -> 19 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `*Vuc `us `ui `us `ul ]
[; ;tff.c: 715: if (!totalsect) totalsect = (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[32])+3)<<24)|((DWORD)*(volatile BYTE*)((&fs->win[32])+2)<<16)|((WORD)*(volatile BYTE*)((&fs->win[32])+1)<<8)|*(volatile BYTE*)(&fs->win[32]));
"715
[e $ ! ! != _totalsect -> -> 0 `i `ul 164  ]
[e = _totalsect | | | << -> *U -> + &U *U + &U . *U _fs 14 * -> -> -> 32 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 3 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> -> 32 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `ul -> 24 `i << -> *U -> + &U *U + &U . *U _fs 14 * -> -> -> 32 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 2 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> -> 32 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `ul -> 16 `i -> << -> -> *U -> + &U *U + &U . *U _fs 14 * -> -> -> 32 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 1 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> -> 32 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `us `ui -> 8 `i `ul -> *U -> &U *U + &U . *U _fs 14 * -> -> -> 32 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `*Vuc `ul ]
[e :U 164 ]
[; ;tff.c: 716: fs->max_clust = maxclust = (totalsect
[; ;tff.c: 717: - (WORD)(((WORD)*(volatile BYTE*)((&fs->win[14])+1)<<8)|(WORD)*(volatile BYTE*)(&fs->win[14])) - fatsize - fs->n_rootdir / 16
[; ;tff.c: 718: ) / fs->csize + 2;
"718
[e = . *U _fs 7 = _maxclust + / - - - _totalsect -> -> | << -> -> *U -> + &U *U + &U . *U _fs 14 * -> -> -> 14 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 1 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> -> 14 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + &U . *U _fs 14 * -> -> -> 14 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `*Vuc `us `ui `us `ul _fatsize -> / -> . *U _fs 1 `ui -> -> 16 `i `ui `ul -> . *U _fs 11 `ul -> -> -> 2 `i `l `ul ]
[; ;tff.c: 720: fmt = 1;
"720
[e = _fmt -> -> 1 `i `uc ]
[; ;tff.c: 721: if (maxclust >= 0xFF7) fmt = 2;
"721
[e $ ! >= _maxclust -> -> -> 4087 `i `l `ul 165  ]
[e = _fmt -> -> 2 `i `uc ]
[e :U 165 ]
[; ;tff.c: 722: if (maxclust >= 0xFFF7)
"722
[e $ ! >= _maxclust -> -> 65527 `ui `ul 166  ]
[; ;tff.c: 726: fmt = 3;
"726
[e = _fmt -> -> 3 `i `uc ]
[e :U 166 ]
[; ;tff.c: 727: if (fmt == 3)
"727
[e $ ! == -> _fmt `i -> 3 `i 167  ]
[; ;tff.c: 728: fs->dirbase = (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[44])+3)<<24)|((DWORD)*(volatile BYTE*)((&fs->win[44])+2)<<16)|((WORD)*(volatile BYTE*)((&fs->win[44])+1)<<8)|*(volatile BYTE*)(&fs->win[44]));
"728
[e = . *U _fs 4 | | | << -> *U -> + &U *U + &U . *U _fs 14 * -> -> -> 44 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 3 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> -> 44 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `ul -> 24 `i << -> *U -> + &U *U + &U . *U _fs 14 * -> -> -> 44 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 2 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> -> 44 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `ul -> 16 `i -> << -> -> *U -> + &U *U + &U . *U _fs 14 * -> -> -> 44 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux * -> -> 1 `i `x -> -> # *U &U *U + &U . *U _fs 14 * -> -> -> 44 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `i `x `*Vuc `us `ui -> 8 `i `ul -> *U -> &U *U + &U . *U _fs 14 * -> -> -> 44 `i `ui `ux -> -> # *U &U . *U _fs 14 `ui `ux `*Vuc `ul ]
[e $U 168  ]
"729
[e :U 167 ]
[; ;tff.c: 729: else
[; ;tff.c: 731: fs->dirbase = fs->fatbase + fatsize;
"731
[e = . *U _fs 4 + . *U _fs 3 _fatsize ]
[e :U 168 ]
[; ;tff.c: 732: fs->database = fs->fatbase + fatsize + fs->n_rootdir / 16;
"732
[e = . *U _fs 5 + + . *U _fs 3 _fatsize -> / -> . *U _fs 1 `ui -> -> 16 `i `ui `ul ]
[; ;tff.c: 736: fs->free_clust = (CLUST)0xFFFFFFFF;
"736
[e = . *U _fs 9 -> -1 `ul ]
[; ;tff.c: 752: fs->fs_type = fmt;
"752
[e = . *U _fs 10 _fmt ]
[; ;tff.c: 753: fs->id = ++fsid;
"753
[e = . *U _fs 0 =+ _fsid -> -> 1 `i `us ]
[; ;tff.c: 754: return FR_OK;
"754
[e ) . `E155 0 ]
[e $UE 149  ]
[; ;tff.c: 755: }
"755
[e :UE 149 ]
}
"765
[v _validate `(E155 ~T0 @X0 1 sf2`*CS2`us ]
"769
{
[; ;tff.c: 764: static
[; ;tff.c: 765: FRESULT validate (
[; ;tff.c: 766: const FATFS *fs,
[; ;tff.c: 767: WORD id
[; ;tff.c: 768: )
[; ;tff.c: 769: {
[e :U _validate ]
"766
[v _fs `*CS2 ~T0 @X0 1 r1 ]
"767
[v _id `us ~T0 @X0 1 r2 ]
"769
[f ]
[; ;tff.c: 770: if (!fs || !fs->fs_type || fs->id != id)
"770
[e $ ! || || ! != _fs -> -> 0 `i `*CS2 ! != -> . *U _fs 10 `i -> -> -> 0 `i `Cuc `i != -> . *U _fs 0 `ui -> _id `ui 170  ]
[; ;tff.c: 771: return FR_INVALID_OBJECT;
"771
[e ) . `E155 12 ]
[e $UE 169  ]
[e :U 170 ]
[; ;tff.c: 772: if (disk_status(0) & 0x01)
"772
[e $ ! != & -> ( _disk_status (1 -> -> 0 `i `uc `i -> 1 `i -> 0 `i 171  ]
[; ;tff.c: 773: return FR_NOT_READY;
"773
[e ) . `E155 1 ]
[e $UE 169  ]
[e :U 171 ]
[; ;tff.c: 775: return FR_OK;
"775
[e ) . `E155 0 ]
[e $UE 169  ]
[; ;tff.c: 776: }
"776
[e :UE 169 ]
}
"792
[v _f_mount `(E155 ~T0 @X0 1 ef2`uc`*S2 ]
"796
{
[; ;tff.c: 792: FRESULT f_mount (
[; ;tff.c: 793: BYTE drv,
[; ;tff.c: 794: FATFS *fs
[; ;tff.c: 795: )
[; ;tff.c: 796: {
[e :U _f_mount ]
"793
[v _drv `uc ~T0 @X0 1 r1 ]
"794
[v _fs `*S2 ~T0 @X0 1 r2 ]
"796
[f ]
[; ;tff.c: 797: if (drv) return FR_INVALID_DRIVE;
"797
[e $ ! != -> _drv `i -> -> -> 0 `i `uc `i 173  ]
[e ) . `E155 5 ]
[e $UE 172  ]
[e :U 173 ]
[; ;tff.c: 799: if (FatFs) FatFs->fs_type = 0;
"799
[e $ ! != _FatFs -> -> 0 `i `*S2 174  ]
[e = . *U _FatFs 10 -> -> 0 `i `uc ]
[e :U 174 ]
[; ;tff.c: 801: FatFs = fs;
"801
[e = _FatFs _fs ]
[; ;tff.c: 802: if (fs) fs->fs_type = 0;
"802
[e $ ! != _fs -> -> 0 `i `*S2 175  ]
[e = . *U _fs 10 -> -> 0 `i `uc ]
[e :U 175 ]
[; ;tff.c: 804: return FR_OK;
"804
[e ) . `E155 0 ]
[e $UE 172  ]
[; ;tff.c: 805: }
"805
[e :UE 172 ]
}
"808
[v _get_fattime `(ul ~T0 @X0 1 ef ]
"809
{
[; ;tff.c: 808: DWORD get_fattime(void)
[; ;tff.c: 809: {
[e :U _get_fattime ]
[f ]
"810
[v _f_time `S1 ~T0 @X0 1 a ]
[; ;tff.c: 810: fat_time f_time;
[; ;tff.c: 812: return (DWORD)(f_time.ano ) << 25 |
[; ;tff.c: 813: (DWORD)(f_time.mes) << 21 |
[; ;tff.c: 814: (DWORD)(f_time.mes) << 16 |
[; ;tff.c: 815: (DWORD)(f_time.hora) << 11 |
[; ;tff.c: 816: (DWORD)(f_time.min) << 5 |
[; ;tff.c: 817: (DWORD)(f_time.seg) >> 1;
"817
[e ) | | | | | << -> . _f_time 5 `ul -> 25 `i << -> . _f_time 4 `ul -> 21 `i << -> . _f_time 4 `ul -> 16 `i << -> . _f_time 0 `ul -> 11 `i << -> . _f_time 1 `ul -> 5 `i >> -> . _f_time 2 `ul -> 1 `i ]
[e $UE 176  ]
[; ;tff.c: 818: }
"818
[e :UE 176 ]
}
"824
[v _f_open `(E155 ~T0 @X0 1 ef3`*S4`*Cuc`uc ]
"829
{
[; ;tff.c: 824: FRESULT f_open (
[; ;tff.c: 825: FIL *fp,
[; ;tff.c: 826: const char *path,
[; ;tff.c: 827: BYTE mode
[; ;tff.c: 828: )
[; ;tff.c: 829: {
[e :U _f_open ]
"825
[v _fp `*S4 ~T0 @X0 1 r1 ]
"826
[v _path `*Cuc ~T0 @X0 1 r2 ]
"827
[v _mode `uc ~T0 @X0 1 r3 ]
"829
[f ]
"830
[v _res `E155 ~T0 @X0 1 a ]
"831
[v _dj `S3 ~T0 @X0 1 a ]
"832
[v _dir `*uc ~T0 @X0 1 a ]
"833
[v _fn `uc ~T0 @X0 + + -> 8 `i -> 3 `i -> 1 `i a ]
[; ;tff.c: 830: FRESULT res;
[; ;tff.c: 831: DIR_E dj;
[; ;tff.c: 832: BYTE *dir;
[; ;tff.c: 833: char fn[8+3+1];
[; ;tff.c: 836: fp->fs = (0);
"836
[e = . *U _fp 3 -> -> 0 `i `*S2 ]
[; ;tff.c: 838: mode &= (0x01|0x02|0x08|0x10|0x04);
"838
[e =& _mode -> | | | | -> 1 `i -> 2 `i -> 8 `i -> 16 `i -> 4 `i `uc ]
[; ;tff.c: 839: res = auto_mount(&path, (BYTE)(mode & (0x02|0x08|0x10|0x04)));
"839
[e = _res ( _auto_mount (2 , &U _path -> & -> _mode `i | | | -> 2 `i -> 8 `i -> 16 `i -> 4 `i `uc ]
[; ;tff.c: 844: if (res != FR_OK) return res;
"844
[e $ ! != -> _res `i -> . `E155 0 `i 178  ]
[e ) _res ]
[e $UE 177  ]
[e :U 178 ]
[; ;tff.c: 845: res = trace_path(&dj, fn, path, &dir);
"845
[e = _res ( _trace_path (4 , , , &U _dj &U _fn _path &U _dir ]
[; ;tff.c: 849: if (mode & (0x08|0x10|0x04)) {
"849
[e $ ! != & -> _mode `i | | -> 8 `i -> 16 `i -> 4 `i -> 0 `i 179  ]
{
"850
[v _rs `ul ~T0 @X0 1 a ]
"851
[v _dw `ul ~T0 @X0 1 a ]
[; ;tff.c: 850: CLUST rs;
[; ;tff.c: 851: DWORD dw;
[; ;tff.c: 852: if (res != FR_OK) {
"852
[e $ ! != -> _res `i -> . `E155 0 `i 180  ]
{
[; ;tff.c: 853: if (res != FR_NO_FILE) return res;
"853
[e $ ! != -> _res `i -> . `E155 2 `i 181  ]
[e ) _res ]
[e $UE 177  ]
[e :U 181 ]
[; ;tff.c: 854: res = reserve_direntry(&dj, &dir);
"854
[e = _res ( _reserve_direntry (2 , &U _dj &U _dir ]
[; ;tff.c: 855: if (res != FR_OK) return res;
"855
[e $ ! != -> _res `i -> . `E155 0 `i 182  ]
[e ) _res ]
[e $UE 177  ]
[e :U 182 ]
[; ;tff.c: 856: memset(dir, 0, 32);
"856
[e ( _memset (3 , , -> _dir `*v -> 0 `i -> -> 32 `i `ui ]
[; ;tff.c: 857: memcpy(&dir[0], fn, 8+3);
"857
[e ( _memcpy (3 , , -> &U *U + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x `*v -> &U _fn `*Cv -> + -> 8 `i -> 3 `i `ui ]
[; ;tff.c: 858: dir[12] = fn[11];
"858
[e = *U + _dir * -> -> 12 `i `x -> -> # *U _dir `i `x *U + &U _fn * -> -> -> 11 `i `ui `ux -> -> # *U &U _fn `ui `ux ]
[; ;tff.c: 859: mode |= 0x08;
"859
[e =| _mode -> -> 8 `i `uc ]
"860
}
[; ;tff.c: 860: }
[e $U 183  ]
"861
[e :U 180 ]
[; ;tff.c: 861: else {
{
[; ;tff.c: 862: if (mode & 0x04)
"862
[e $ ! != & -> _mode `i -> 4 `i -> 0 `i 184  ]
[; ;tff.c: 863: return FR_EXIST;
"863
[e ) . `E155 7 ]
[e $UE 177  ]
[e :U 184 ]
[; ;tff.c: 864: if (!dir || (dir[11] & (0x01|0x10)))
"864
[e $ ! || ! != _dir -> -> 0 `i `*uc != & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i | -> 1 `i -> 16 `i -> 0 `i 185  ]
[; ;tff.c: 865: return FR_DENIED;
"865
[e ) . `E155 6 ]
[e $UE 177  ]
[e :U 185 ]
[; ;tff.c: 866: if (mode & 0x08) {
"866
[e $ ! != & -> _mode `i -> 8 `i -> 0 `i 186  ]
{
[; ;tff.c: 868: rs = ((DWORD)(WORD)(((WORD)*(volatile BYTE*)((&dir[20])+1)<<8)|(WORD)*(volatile BYTE*)(&dir[20])) << 16) | (WORD)(((WORD)*(volatile BYTE*)((&dir[26])+1)<<8)|(WORD)*(volatile BYTE*)(&dir[26]));
"868
[e = _rs | << -> -> | << -> -> *U -> + &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `*Vuc `us `ui `us `ul -> 16 `i -> -> | << -> -> *U -> + &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `*Vuc `us `ui `us `ul ]
[; ;tff.c: 869: *(volatile BYTE*)(&dir[20])=(BYTE)(0); *(volatile BYTE*)((&dir[20])+1)=(BYTE)((WORD)(0)>>8);
"869
[e = *U -> &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `*Vuc -> -> 0 `i `uc ]
[e = *U -> + &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> -> -> -> 0 `i `us `ui -> 8 `i `uc ]
[; ;tff.c: 873: *(volatile BYTE*)(&dir[26])=(BYTE)(0); *(volatile BYTE*)((&dir[26])+1)=(BYTE)((WORD)(0)>>8);
"873
[e = *U -> &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `*Vuc -> -> 0 `i `uc ]
[e = *U -> + &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> -> -> -> 0 `i `us `ui -> 8 `i `uc ]
[; ;tff.c: 874: *(volatile BYTE*)(&dir[28])=(BYTE)(0); *(volatile BYTE*)((&dir[28])+1)=(BYTE)((WORD)(0)>>8); *(volatile BYTE*)((&dir[28])+2)=(BYTE)((DWORD)(0)>>16); *(volatile BYTE*)((&dir[28])+3)=(BYTE)((DWORD)(0)>>24);
"874
[e = *U -> &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `*Vuc -> -> 0 `i `uc ]
[e = *U -> + &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> -> -> -> 0 `i `us `ui -> 8 `i `uc ]
[e = *U -> + &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x * -> -> 2 `i `x -> -> # *U &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> -> -> 0 `i `ul -> 16 `i `uc ]
[e = *U -> + &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x * -> -> 3 `i `x -> -> # *U &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> -> -> 0 `i `ul -> 24 `i `uc ]
[; ;tff.c: 875: dj.fs->winflag = 1;
"875
[e = . *U . _dj 2 13 -> -> 1 `i `uc ]
[; ;tff.c: 876: dw = dj.fs->winsect;
"876
[e = _dw . *U . _dj 2 2 ]
[; ;tff.c: 877: if (!remove_chain(rs) || !move_window(dw))
"877
[e $ ! || ! != -> ( _remove_chain (1 _rs `i -> -> -> 0 `i `E105 `i ! != -> ( _move_window (1 _dw `i -> -> -> 0 `i `E105 `i 187  ]
[; ;tff.c: 878: return FR_RW_ERROR;
"878
[e ) . `E155 8 ]
[e $UE 177  ]
[e :U 187 ]
[; ;tff.c: 879: dj.fs->last_clust = rs - 1;
"879
[e = . *U . _dj 2 8 - _rs -> -> -> 1 `i `l `ul ]
"880
}
[e :U 186 ]
"881
}
[e :U 183 ]
[; ;tff.c: 880: }
[; ;tff.c: 881: }
[; ;tff.c: 882: if (mode & 0x08) {
"882
[e $ ! != & -> _mode `i -> 8 `i -> 0 `i 188  ]
{
[; ;tff.c: 883: dir[11] = 0;
"883
[e = *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x -> -> 0 `i `uc ]
[; ;tff.c: 884: dw = get_fattime();
"884
[e = _dw ( _get_fattime ..  ]
[; ;tff.c: 885: *(volatile BYTE*)(&dir[14])=(BYTE)(dw); *(volatile BYTE*)((&dir[14])+1)=(BYTE)((WORD)(dw)>>8); *(volatile BYTE*)((&dir[14])+2)=(BYTE)((DWORD)(dw)>>16); *(volatile BYTE*)((&dir[14])+3)=(BYTE)((DWORD)(dw)>>24);
"885
[e = *U -> &U *U + _dir * -> -> 14 `i `x -> -> # *U _dir `i `x `*Vuc -> _dw `uc ]
[e = *U -> + &U *U + _dir * -> -> 14 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 14 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> -> -> _dw `us `ui -> 8 `i `uc ]
[e = *U -> + &U *U + _dir * -> -> 14 `i `x -> -> # *U _dir `i `x * -> -> 2 `i `x -> -> # *U &U *U + _dir * -> -> 14 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> _dw -> 16 `i `uc ]
[e = *U -> + &U *U + _dir * -> -> 14 `i `x -> -> # *U _dir `i `x * -> -> 3 `i `x -> -> # *U &U *U + _dir * -> -> 14 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> _dw -> 24 `i `uc ]
[; ;tff.c: 886: dj.fs->winflag = 1;
"886
[e = . *U . _dj 2 13 -> -> 1 `i `uc ]
[; ;tff.c: 887: mode |= 0x20;
"887
[e =| _mode -> -> 32 `i `uc ]
"888
}
[e :U 188 ]
"889
}
[; ;tff.c: 888: }
[; ;tff.c: 889: }
[e $U 189  ]
"891
[e :U 179 ]
[; ;tff.c: 891: else {
{
[; ;tff.c: 893: if (res != FR_OK) return res;
"893
[e $ ! != -> _res `i -> . `E155 0 `i 190  ]
[e ) _res ]
[e $UE 177  ]
[e :U 190 ]
[; ;tff.c: 894: if (!dir || (dir[11] & 0x10))
"894
[e $ ! || ! != _dir -> -> 0 `i `*uc != & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> 16 `i -> 0 `i 191  ]
[; ;tff.c: 895: return FR_NO_FILE;
"895
[e ) . `E155 2 ]
[e $UE 177  ]
[e :U 191 ]
[; ;tff.c: 897: if ((mode & 0x02) && (dir[11] & 0x01))
"897
[e $ ! && != & -> _mode `i -> 2 `i -> 0 `i != & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> 1 `i -> 0 `i 192  ]
[; ;tff.c: 898: return FR_DENIED;
"898
[e ) . `E155 6 ]
[e $UE 177  ]
[e :U 192 ]
"899
}
[e :U 189 ]
[; ;tff.c: 899: }
[; ;tff.c: 900: fp->dir_sect = dj.fs->winsect;
"900
[e = . *U _fp 9 . *U . _dj 2 2 ]
[; ;tff.c: 901: fp->dir_ptr = dir;
"901
[e = . *U _fp 10 _dir ]
[; ;tff.c: 903: fp->flag = mode;
"903
[e = . *U _fp 1 _mode ]
[; ;tff.c: 904: fp->org_clust =
[; ;tff.c: 906: ((DWORD)(WORD)(((WORD)*(volatile BYTE*)((&dir[20])+1)<<8)|(WORD)*(volatile BYTE*)(&dir[20])) << 16) |
[; ;tff.c: 908: (WORD)(((WORD)*(volatile BYTE*)((&dir[26])+1)<<8)|(WORD)*(volatile BYTE*)(&dir[26]));
"908
[e = . *U _fp 6 | << -> -> | << -> -> *U -> + &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `*Vuc `us `ui `us `ul -> 16 `i -> -> | << -> -> *U -> + &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `*Vuc `us `ui `us `ul ]
[; ;tff.c: 909: fp->fsize = (DWORD)(((DWORD)*(volatile BYTE*)((&dir[28])+3)<<24)|((DWORD)*(volatile BYTE*)((&dir[28])+2)<<16)|((WORD)*(volatile BYTE*)((&dir[28])+1)<<8)|*(volatile BYTE*)(&dir[28]));
"909
[e = . *U _fp 5 | | | << -> *U -> + &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x * -> -> 3 `i `x -> -> # *U &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `i `x `*Vuc `ul -> 24 `i << -> *U -> + &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x * -> -> 2 `i `x -> -> # *U &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `i `x `*Vuc `ul -> 16 `i -> << -> -> *U -> + &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `i `x `*Vuc `us `ui -> 8 `i `ul -> *U -> &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `*Vuc `ul ]
[; ;tff.c: 910: fp->fptr = 0; fp->csect = 255;
"910
[e = . *U _fp 4 -> -> -> 0 `i `l `ul ]
[e = . *U _fp 2 -> -> 255 `i `uc ]
[; ;tff.c: 911: fp->fs = dj.fs; fp->id = dj.fs->id;
"911
[e = . *U _fp 3 . _dj 2 ]
[e = . *U _fp 0 . *U . _dj 2 0 ]
[; ;tff.c: 913: return FR_OK;
"913
[e ) . `E155 0 ]
[e $UE 177  ]
[; ;tff.c: 914: }
"914
[e :UE 177 ]
}
"923
[v _f_read `(E155 ~T0 @X0 1 ef4`*S4`*v`ui`*ui ]
"929
{
[; ;tff.c: 923: FRESULT f_read (
[; ;tff.c: 924: FIL *fp,
[; ;tff.c: 925: void *buff,
[; ;tff.c: 926: UINT btr,
[; ;tff.c: 927: UINT *br
[; ;tff.c: 928: )
[; ;tff.c: 929: {
[e :U _f_read ]
"924
[v _fp `*S4 ~T0 @X0 1 r1 ]
"925
[v _buff `*v ~T0 @X0 1 r2 ]
"926
[v _btr `ui ~T0 @X0 1 r3 ]
"927
[v _br `*ui ~T0 @X0 1 r4 ]
"929
[f ]
"930
[v _res `E155 ~T0 @X0 1 a ]
"931
[v _sect `ul ~T0 @X0 1 a ]
[v _remain `ul ~T0 @X0 1 a ]
"932
[v _rcnt `ui ~T0 @X0 1 a ]
[v _cc `ui ~T0 @X0 1 a ]
"933
[v _clust `ul ~T0 @X0 1 a ]
"934
[v _rbuff `*uc ~T0 @X0 1 a ]
[; ;tff.c: 930: FRESULT res;
[; ;tff.c: 931: DWORD sect, remain;
[; ;tff.c: 932: UINT rcnt, cc;
[; ;tff.c: 933: CLUST clust;
[; ;tff.c: 934: BYTE *rbuff = buff;
[e = _rbuff -> _buff `*uc ]
[; ;tff.c: 937: *br = 0;
"937
[e = *U _br -> -> 0 `i `ui ]
[; ;tff.c: 938: res = validate(fp->fs, fp->id);
"938
[e = _res ( _validate (2 , -> . *U _fp 3 `*CS2 . *U _fp 0 ]
[; ;tff.c: 939: if (res != FR_OK) return res;
"939
[e $ ! != -> _res `i -> . `E155 0 `i 194  ]
[e ) _res ]
[e $UE 193  ]
[e :U 194 ]
[; ;tff.c: 940: if (fp->flag & 0x80) return FR_RW_ERROR;
"940
[e $ ! != & -> . *U _fp 1 `i -> 128 `i -> 0 `i 195  ]
[e ) . `E155 8 ]
[e $UE 193  ]
[e :U 195 ]
[; ;tff.c: 941: if (!(fp->flag & 0x01)) return FR_DENIED;
"941
[e $ ! ! != & -> . *U _fp 1 `i -> 1 `i -> 0 `i 196  ]
[e ) . `E155 6 ]
[e $UE 193  ]
[e :U 196 ]
[; ;tff.c: 942: remain = fp->fsize - fp->fptr;
"942
[e = _remain - . *U _fp 5 . *U _fp 4 ]
[; ;tff.c: 943: if (btr > remain) btr = (UINT)remain;
"943
[e $ ! > -> _btr `ul _remain 197  ]
[e = _btr -> _remain `ui ]
[e :U 197 ]
[; ;tff.c: 945: for ( ; btr;
"945
{
[; ;tff.c: 946: rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
[e $U 201  ]
"946
[e :U 198 ]
{
[; ;tff.c: 947: if ((fp->fptr % 512U) == 0) {
"947
[e $ ! == % . *U _fp 4 -> -> 512 `ui `ul -> -> -> 0 `i `l `ul 202  ]
{
[; ;tff.c: 948: if (fp->csect >= fp->fs->csize) {
"948
[e $ ! >= -> . *U _fp 2 `i -> . *U . *U _fp 3 11 `i 203  ]
{
[; ;tff.c: 949: clust = (fp->fptr == 0) ?
[; ;tff.c: 950: fp->org_clust : get_cluster(fp->curr_clust);
"950
[e = _clust ? == . *U _fp 4 -> -> -> 0 `i `l `ul : . *U _fp 6 ( _get_cluster (1 . *U _fp 7 ]
[; ;tff.c: 951: if (clust < 2 || clust >= fp->fs->max_clust) goto fr_error;
"951
[e $ ! || < _clust -> -> -> 2 `i `l `ul >= _clust . *U . *U _fp 3 7 204  ]
[e $U 205  ]
[e :U 204 ]
[; ;tff.c: 952: fp->curr_clust = clust;
"952
[e = . *U _fp 7 _clust ]
[; ;tff.c: 953: fp->csect = 0;
"953
[e = . *U _fp 2 -> -> 0 `i `uc ]
"954
}
[e :U 203 ]
[; ;tff.c: 954: }
[; ;tff.c: 955: sect = clust2sect(fp->curr_clust) + fp->csect;
"955
[e = _sect + ( _clust2sect (1 . *U _fp 7 -> . *U _fp 2 `ul ]
[; ;tff.c: 956: cc = btr / 512U;
"956
[e = _cc / _btr -> 512 `ui ]
[; ;tff.c: 957: if (cc) {
"957
[e $ ! != _cc -> -> 0 `i `ui 206  ]
{
[; ;tff.c: 958: if (fp->csect + cc > fp->fs->csize)
"958
[e $ ! > + -> . *U _fp 2 `ui _cc -> . *U . *U _fp 3 11 `ui 207  ]
[; ;tff.c: 959: cc = fp->fs->csize - fp->csect;
"959
[e = _cc -> - -> . *U . *U _fp 3 11 `i -> . *U _fp 2 `i `ui ]
[e :U 207 ]
[; ;tff.c: 960: if (disk_read(0, rbuff, sect, (BYTE)cc) != RES_OK)
"960
[e $ ! != -> ( _disk_read (4 , , , -> -> 0 `i `uc _rbuff _sect -> -> _cc `uc `ui `i -> . `E248 0 `i 208  ]
[; ;tff.c: 961: goto fr_error;
"961
[e $U 205  ]
[e :U 208 ]
[; ;tff.c: 962: fp->csect += (BYTE)cc;
"962
[e =+ . *U _fp 2 -> _cc `uc ]
[; ;tff.c: 963: rcnt = 512U * cc;
"963
[e = _rcnt * -> 512 `ui _cc ]
[; ;tff.c: 964: continue;
"964
[e $U 200  ]
"965
}
[e :U 206 ]
[; ;tff.c: 965: }
[; ;tff.c: 966: fp->csect++;
"966
[e ++ . *U _fp 2 -> -> 1 `i `uc ]
"967
}
[e :U 202 ]
[; ;tff.c: 967: }
[; ;tff.c: 968: sect = clust2sect(fp->curr_clust) + fp->csect - 1;
"968
[e = _sect - + ( _clust2sect (1 . *U _fp 7 -> . *U _fp 2 `ul -> -> -> 1 `i `l `ul ]
[; ;tff.c: 969: if (!move_window(sect)) goto fr_error;
"969
[e $ ! ! != -> ( _move_window (1 _sect `i -> -> -> 0 `i `E105 `i 209  ]
[e $U 205  ]
[e :U 209 ]
[; ;tff.c: 970: rcnt = 512U - (fp->fptr % 512U);
"970
[e = _rcnt -> - -> -> 512 `ui `ul % . *U _fp 4 -> -> 512 `ui `ul `ui ]
[; ;tff.c: 971: if (rcnt > btr) rcnt = btr;
"971
[e $ ! > _rcnt _btr 210  ]
[e = _rcnt _btr ]
[e :U 210 ]
[; ;tff.c: 972: memcpy(rbuff, &fp->fs->win[fp->fptr % 512U], rcnt);
"972
[e ( _memcpy (3 , , -> _rbuff `*v -> &U *U + &U . *U . *U _fp 3 14 * -> % . *U _fp 4 -> -> 512 `ui `ul `ux -> -> # *U &U . *U . *U _fp 3 14 `ui `ux `*Cv _rcnt ]
"973
}
"946
[e :U 200 ]
[e ; ; ; =+ _rbuff * -> _rcnt `ux -> -> # *U _rbuff `ui `ux =+ . *U _fp 4 -> _rcnt `ul =+ *U _br _rcnt =- _btr _rcnt ]
"945
[e :U 201 ]
[e $ != _btr -> -> 0 `i `ui 198  ]
[e :U 199 ]
"973
}
[; ;tff.c: 973: }
[; ;tff.c: 975: return FR_OK;
"975
[e ) . `E155 0 ]
[e $UE 193  ]
[; ;tff.c: 977: fr_error:
"977
[e :U 205 ]
[; ;tff.c: 978: fp->flag |= 0x80;
"978
[e =| . *U _fp 1 -> -> 128 `i `uc ]
[; ;tff.c: 979: return FR_RW_ERROR;
"979
[e ) . `E155 8 ]
[e $UE 193  ]
[; ;tff.c: 980: }
"980
[e :UE 193 ]
}
"990
[v _f_write `(E155 ~T0 @X0 1 ef4`*S4`*Cv`ui`*ui ]
"996
{
[; ;tff.c: 990: FRESULT f_write (
[; ;tff.c: 991: FIL *fp,
[; ;tff.c: 992: const void *buff,
[; ;tff.c: 993: UINT btw,
[; ;tff.c: 994: UINT *bw
[; ;tff.c: 995: )
[; ;tff.c: 996: {
[e :U _f_write ]
"991
[v _fp `*S4 ~T0 @X0 1 r1 ]
"992
[v _buff `*Cv ~T0 @X0 1 r2 ]
"993
[v _btw `ui ~T0 @X0 1 r3 ]
"994
[v _bw `*ui ~T0 @X0 1 r4 ]
"996
[f ]
"997
[v _res `E155 ~T0 @X0 1 a ]
"998
[v _sect `ul ~T0 @X0 1 a ]
"999
[v _wcnt `ui ~T0 @X0 1 a ]
[v _cc `ui ~T0 @X0 1 a ]
"1000
[v _clust `ul ~T0 @X0 1 a ]
"1001
[v _wbuff `*Cuc ~T0 @X0 1 a ]
[; ;tff.c: 997: FRESULT res;
[; ;tff.c: 998: DWORD sect;
[; ;tff.c: 999: UINT wcnt, cc;
[; ;tff.c: 1000: CLUST clust;
[; ;tff.c: 1001: const BYTE *wbuff = buff;
[e = _wbuff -> _buff `*Cuc ]
[; ;tff.c: 1004: *bw = 0;
"1004
[e = *U _bw -> -> 0 `i `ui ]
[; ;tff.c: 1005: res = validate(fp->fs, fp->id);
"1005
[e = _res ( _validate (2 , -> . *U _fp 3 `*CS2 . *U _fp 0 ]
[; ;tff.c: 1006: if (res != FR_OK) return res;
"1006
[e $ ! != -> _res `i -> . `E155 0 `i 212  ]
[e ) _res ]
[e $UE 211  ]
[e :U 212 ]
[; ;tff.c: 1007: if (fp->flag & 0x80) return FR_RW_ERROR;
"1007
[e $ ! != & -> . *U _fp 1 `i -> 128 `i -> 0 `i 213  ]
[e ) . `E155 8 ]
[e $UE 211  ]
[e :U 213 ]
[; ;tff.c: 1008: if (!(fp->flag & 0x02)) return FR_DENIED;
"1008
[e $ ! ! != & -> . *U _fp 1 `i -> 2 `i -> 0 `i 214  ]
[e ) . `E155 6 ]
[e $UE 211  ]
[e :U 214 ]
[; ;tff.c: 1009: if (fp->fsize + btw < fp->fsize) return FR_OK;
"1009
[e $ ! < + . *U _fp 5 -> _btw `ul . *U _fp 5 215  ]
[e ) . `E155 0 ]
[e $UE 211  ]
[e :U 215 ]
[; ;tff.c: 1011: for ( ; btw;
"1011
{
[; ;tff.c: 1012: wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
[e $U 219  ]
"1012
[e :U 216 ]
{
[; ;tff.c: 1013: if ((fp->fptr % 512U) == 0) {
"1013
[e $ ! == % . *U _fp 4 -> -> 512 `ui `ul -> -> -> 0 `i `l `ul 220  ]
{
[; ;tff.c: 1014: if (fp->csect >= fp->fs->csize) {
"1014
[e $ ! >= -> . *U _fp 2 `i -> . *U . *U _fp 3 11 `i 221  ]
{
[; ;tff.c: 1015: if (fp->fptr == 0) {
"1015
[e $ ! == . *U _fp 4 -> -> -> 0 `i `l `ul 222  ]
{
[; ;tff.c: 1016: clust = fp->org_clust;
"1016
[e = _clust . *U _fp 6 ]
[; ;tff.c: 1017: if (clust == 0)
"1017
[e $ ! == _clust -> -> -> 0 `i `l `ul 223  ]
[; ;tff.c: 1018: fp->org_clust = clust = create_chain(0);
"1018
[e = . *U _fp 6 = _clust ( _create_chain (1 -> -> -> 0 `i `l `ul ]
[e :U 223 ]
"1019
}
[; ;tff.c: 1019: } else {
[e $U 224  ]
[e :U 222 ]
{
[; ;tff.c: 1020: clust = create_chain(fp->curr_clust);
"1020
[e = _clust ( _create_chain (1 . *U _fp 7 ]
"1021
}
[e :U 224 ]
[; ;tff.c: 1021: }
[; ;tff.c: 1022: if (clust == 0) break;
"1022
[e $ ! == _clust -> -> -> 0 `i `l `ul 225  ]
[e $U 217  ]
[e :U 225 ]
[; ;tff.c: 1023: if (clust == 1 || clust >= fp->fs->max_clust) goto fw_error;
"1023
[e $ ! || == _clust -> -> -> 1 `i `l `ul >= _clust . *U . *U _fp 3 7 226  ]
[e $U 227  ]
[e :U 226 ]
[; ;tff.c: 1024: fp->curr_clust = clust;
"1024
[e = . *U _fp 7 _clust ]
[; ;tff.c: 1025: fp->csect = 0;
"1025
[e = . *U _fp 2 -> -> 0 `i `uc ]
"1026
}
[e :U 221 ]
[; ;tff.c: 1026: }
[; ;tff.c: 1027: sect = clust2sect(fp->curr_clust) + fp->csect;
"1027
[e = _sect + ( _clust2sect (1 . *U _fp 7 -> . *U _fp 2 `ul ]
[; ;tff.c: 1028: cc = btw / 512U;
"1028
[e = _cc / _btw -> 512 `ui ]
[; ;tff.c: 1029: if (cc) {
"1029
[e $ ! != _cc -> -> 0 `i `ui 228  ]
{
[; ;tff.c: 1030: if (fp->csect + cc > fp->fs->csize)
"1030
[e $ ! > + -> . *U _fp 2 `ui _cc -> . *U . *U _fp 3 11 `ui 229  ]
[; ;tff.c: 1031: cc = fp->fs->csize - fp->csect;
"1031
[e = _cc -> - -> . *U . *U _fp 3 11 `i -> . *U _fp 2 `i `ui ]
[e :U 229 ]
[; ;tff.c: 1032: if (disk_write(0, wbuff, sect, (BYTE)cc) != RES_OK)
"1032
[e $ ! != -> ( _disk_write (4 , , , -> -> 0 `i `uc _wbuff _sect -> -> _cc `uc `ui `i -> . `E248 0 `i 230  ]
[; ;tff.c: 1033: goto fw_error;
"1033
[e $U 227  ]
[e :U 230 ]
[; ;tff.c: 1034: fp->csect += (BYTE)cc;
"1034
[e =+ . *U _fp 2 -> _cc `uc ]
[; ;tff.c: 1035: wcnt = 512U * cc;
"1035
[e = _wcnt * -> 512 `ui _cc ]
[; ;tff.c: 1036: continue;
"1036
[e $U 218  ]
"1037
}
[e :U 228 ]
[; ;tff.c: 1037: }
[; ;tff.c: 1038: if (fp->fptr >= fp->fsize) {
"1038
[e $ ! >= . *U _fp 4 . *U _fp 5 231  ]
{
[; ;tff.c: 1039: if (!move_window(0)) goto fw_error;
"1039
[e $ ! ! != -> ( _move_window (1 -> -> -> 0 `i `l `ul `i -> -> -> 0 `i `E105 `i 232  ]
[e $U 227  ]
[e :U 232 ]
[; ;tff.c: 1040: fp->fs->winsect = sect;
"1040
[e = . *U . *U _fp 3 2 _sect ]
"1041
}
[e :U 231 ]
[; ;tff.c: 1041: }
[; ;tff.c: 1042: fp->csect++;
"1042
[e ++ . *U _fp 2 -> -> 1 `i `uc ]
"1043
}
[e :U 220 ]
[; ;tff.c: 1043: }
[; ;tff.c: 1044: sect = clust2sect(fp->curr_clust) + fp->csect - 1;
"1044
[e = _sect - + ( _clust2sect (1 . *U _fp 7 -> . *U _fp 2 `ul -> -> -> 1 `i `l `ul ]
[; ;tff.c: 1045: if (!move_window(sect)) goto fw_error;
"1045
[e $ ! ! != -> ( _move_window (1 _sect `i -> -> -> 0 `i `E105 `i 233  ]
[e $U 227  ]
[e :U 233 ]
[; ;tff.c: 1046: wcnt = 512U - (fp->fptr % 512U);
"1046
[e = _wcnt -> - -> -> 512 `ui `ul % . *U _fp 4 -> -> 512 `ui `ul `ui ]
[; ;tff.c: 1047: if (wcnt > btw) wcnt = btw;
"1047
[e $ ! > _wcnt _btw 234  ]
[e = _wcnt _btw ]
[e :U 234 ]
[; ;tff.c: 1048: memcpy(&fp->fs->win[fp->fptr % 512U], wbuff, wcnt);
"1048
[e ( _memcpy (3 , , -> &U *U + &U . *U . *U _fp 3 14 * -> % . *U _fp 4 -> -> 512 `ui `ul `ux -> -> # *U &U . *U . *U _fp 3 14 `ui `ux `*v -> _wbuff `*Cv _wcnt ]
[; ;tff.c: 1049: fp->fs->winflag = 1;
"1049
[e = . *U . *U _fp 3 13 -> -> 1 `i `uc ]
"1050
}
"1012
[e :U 218 ]
[e ; ; ; =+ _wbuff * -> _wcnt `ux -> -> # *U _wbuff `ui `ux =+ . *U _fp 4 -> _wcnt `ul =+ *U _bw _wcnt =- _btw _wcnt ]
"1011
[e :U 219 ]
[e $ != _btw -> -> 0 `i `ui 216  ]
[e :U 217 ]
"1050
}
[; ;tff.c: 1050: }
[; ;tff.c: 1052: if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;
"1052
[e $ ! > . *U _fp 4 . *U _fp 5 235  ]
[e = . *U _fp 5 . *U _fp 4 ]
[e :U 235 ]
[; ;tff.c: 1053: fp->flag |= 0x20;
"1053
[e =| . *U _fp 1 -> -> 32 `i `uc ]
[; ;tff.c: 1054: return res;
"1054
[e ) _res ]
[e $UE 211  ]
[; ;tff.c: 1056: fw_error:
"1056
[e :U 227 ]
[; ;tff.c: 1057: fp->flag |= 0x80;
"1057
[e =| . *U _fp 1 -> -> 128 `i `uc ]
[; ;tff.c: 1058: return FR_RW_ERROR;
"1058
[e ) . `E155 8 ]
[e $UE 211  ]
[; ;tff.c: 1059: }
"1059
[e :UE 211 ]
}
"1068
[v _f_sync `(E155 ~T0 @X0 1 ef1`*S4 ]
"1071
{
[; ;tff.c: 1068: FRESULT f_sync (
[; ;tff.c: 1069: FIL *fp
[; ;tff.c: 1070: )
[; ;tff.c: 1071: {
[e :U _f_sync ]
"1069
[v _fp `*S4 ~T0 @X0 1 r1 ]
"1071
[f ]
"1072
[v _res `E155 ~T0 @X0 1 a ]
"1073
[v _tim `ul ~T0 @X0 1 a ]
"1074
[v _dir `*uc ~T0 @X0 1 a ]
[; ;tff.c: 1072: FRESULT res;
[; ;tff.c: 1073: DWORD tim;
[; ;tff.c: 1074: BYTE *dir;
[; ;tff.c: 1077: res = validate(fp->fs, fp->id);
"1077
[e = _res ( _validate (2 , -> . *U _fp 3 `*CS2 . *U _fp 0 ]
[; ;tff.c: 1078: if (res == FR_OK) {
"1078
[e $ ! == -> _res `i -> . `E155 0 `i 237  ]
{
[; ;tff.c: 1079: if (fp->flag & 0x20) {
"1079
[e $ ! != & -> . *U _fp 1 `i -> 32 `i -> 0 `i 238  ]
{
[; ;tff.c: 1081: if (!move_window(fp->dir_sect))
"1081
[e $ ! ! != -> ( _move_window (1 . *U _fp 9 `i -> -> -> 0 `i `E105 `i 239  ]
[; ;tff.c: 1082: return FR_RW_ERROR;
"1082
[e ) . `E155 8 ]
[e $UE 236  ]
[e :U 239 ]
[; ;tff.c: 1083: dir = fp->dir_ptr;
"1083
[e = _dir . *U _fp 10 ]
[; ;tff.c: 1084: dir[11] |= 0x20;
"1084
[e =| *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x -> -> 32 `i `uc ]
[; ;tff.c: 1085: *(volatile BYTE*)(&dir[28])=(BYTE)(fp->fsize); *(volatile BYTE*)((&dir[28])+1)=(BYTE)((WORD)(fp->fsize)>>8); *(volatile BYTE*)((&dir[28])+2)=(BYTE)((DWORD)(fp->fsize)>>16); *(volatile BYTE*)((&dir[28])+3)=(BYTE)((DWORD)(fp->fsize)>>24);
"1085
[e = *U -> &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `*Vuc -> . *U _fp 5 `uc ]
[e = *U -> + &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> -> -> . *U _fp 5 `us `ui -> 8 `i `uc ]
[e = *U -> + &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x * -> -> 2 `i `x -> -> # *U &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> . *U _fp 5 -> 16 `i `uc ]
[e = *U -> + &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x * -> -> 3 `i `x -> -> # *U &U *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> . *U _fp 5 -> 24 `i `uc ]
[; ;tff.c: 1086: *(volatile BYTE*)(&dir[26])=(BYTE)(fp->org_clust); *(volatile BYTE*)((&dir[26])+1)=(BYTE)((WORD)(fp->org_clust)>>8);
"1086
[e = *U -> &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `*Vuc -> . *U _fp 6 `uc ]
[e = *U -> + &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> -> -> . *U _fp 6 `us `ui -> 8 `i `uc ]
[; ;tff.c: 1088: *(volatile BYTE*)(&dir[20])=(BYTE)(fp->org_clust >> 16); *(volatile BYTE*)((&dir[20])+1)=(BYTE)((WORD)(fp->org_clust >> 16)>>8);
"1088
[e = *U -> &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `*Vuc -> >> . *U _fp 6 -> 16 `i `uc ]
[e = *U -> + &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> -> -> >> . *U _fp 6 -> 16 `i `us `ui -> 8 `i `uc ]
[; ;tff.c: 1090: tim = get_fattime();
"1090
[e = _tim ( _get_fattime ..  ]
[; ;tff.c: 1091: *(volatile BYTE*)(&dir[22])=(BYTE)(tim); *(volatile BYTE*)((&dir[22])+1)=(BYTE)((WORD)(tim)>>8); *(volatile BYTE*)((&dir[22])+2)=(BYTE)((DWORD)(tim)>>16); *(volatile BYTE*)((&dir[22])+3)=(BYTE)((DWORD)(tim)>>24);
"1091
[e = *U -> &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x `*Vuc -> _tim `uc ]
[e = *U -> + &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> -> -> _tim `us `ui -> 8 `i `uc ]
[e = *U -> + &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x * -> -> 2 `i `x -> -> # *U &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> _tim -> 16 `i `uc ]
[e = *U -> + &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x * -> -> 3 `i `x -> -> # *U &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> _tim -> 24 `i `uc ]
[; ;tff.c: 1092: fp->flag &= (BYTE)~0x20;
"1092
[e =& . *U _fp 1 -> ~ -> 32 `i `uc ]
[; ;tff.c: 1093: res = sync();
"1093
[e = _res ( _sync ..  ]
"1094
}
[e :U 238 ]
"1095
}
[e :U 237 ]
[; ;tff.c: 1094: }
[; ;tff.c: 1095: }
[; ;tff.c: 1096: return res;
"1096
[e ) _res ]
[e $UE 236  ]
[; ;tff.c: 1097: }
"1097
[e :UE 236 ]
}
"1107
[v _f_close `(E155 ~T0 @X0 1 ef1`*S4 ]
"1110
{
[; ;tff.c: 1107: FRESULT f_close (
[; ;tff.c: 1108: FIL *fp
[; ;tff.c: 1109: )
[; ;tff.c: 1110: {
[e :U _f_close ]
"1108
[v _fp `*S4 ~T0 @X0 1 r1 ]
"1110
[f ]
"1111
[v _res `E155 ~T0 @X0 1 a ]
[; ;tff.c: 1111: FRESULT res;
[; ;tff.c: 1115: res = f_sync(fp);
"1115
[e = _res ( _f_sync (1 _fp ]
[; ;tff.c: 1119: if (res == FR_OK) fp->fs = (0);
"1119
[e $ ! == -> _res `i -> . `E155 0 `i 241  ]
[e = . *U _fp 3 -> -> 0 `i `*S2 ]
[e :U 241 ]
[; ;tff.c: 1120: return res;
"1120
[e ) _res ]
[e $UE 240  ]
[; ;tff.c: 1121: }
"1121
[e :UE 240 ]
}
"1131
[v _f_lseek `(E155 ~T0 @X0 1 ef2`*S4`ul ]
"1135
{
[; ;tff.c: 1131: FRESULT f_lseek (
[; ;tff.c: 1132: FIL *fp,
[; ;tff.c: 1133: DWORD ofs
[; ;tff.c: 1134: )
[; ;tff.c: 1135: {
[e :U _f_lseek ]
"1132
[v _fp `*S4 ~T0 @X0 1 r1 ]
"1133
[v _ofs `ul ~T0 @X0 1 r2 ]
"1135
[f ]
"1136
[v _res `E155 ~T0 @X0 1 a ]
"1137
[v _clust `ul ~T0 @X0 1 a ]
"1138
[v _csize `ul ~T0 @X0 1 a ]
[v _ifptr `ul ~T0 @X0 1 a ]
[; ;tff.c: 1136: FRESULT res;
[; ;tff.c: 1137: CLUST clust;
[; ;tff.c: 1138: DWORD csize, ifptr;
[; ;tff.c: 1141: res = validate(fp->fs, fp->id);
"1141
[e = _res ( _validate (2 , -> . *U _fp 3 `*CS2 . *U _fp 0 ]
[; ;tff.c: 1142: if (res != FR_OK) return res;
"1142
[e $ ! != -> _res `i -> . `E155 0 `i 243  ]
[e ) _res ]
[e $UE 242  ]
[e :U 243 ]
[; ;tff.c: 1143: if (fp->flag & 0x80) return FR_RW_ERROR;
"1143
[e $ ! != & -> . *U _fp 1 `i -> 128 `i -> 0 `i 244  ]
[e ) . `E155 8 ]
[e $UE 242  ]
[e :U 244 ]
[; ;tff.c: 1144: if (ofs > fp->fsize
[; ;tff.c: 1146: && !(fp->flag & 0x02)
[; ;tff.c: 1148: ) ofs = fp->fsize;
"1148
[e $ ! && > _ofs . *U _fp 5 ! != & -> . *U _fp 1 `i -> 2 `i -> 0 `i 245  ]
[e = _ofs . *U _fp 5 ]
[e :U 245 ]
[; ;tff.c: 1150: ifptr = fp->fptr;
"1150
[e = _ifptr . *U _fp 4 ]
[; ;tff.c: 1151: fp->fptr = 0; fp->csect = 255;
"1151
[e = . *U _fp 4 -> -> -> 0 `i `l `ul ]
[e = . *U _fp 2 -> -> 255 `i `uc ]
[; ;tff.c: 1152: if (ofs > 0) {
"1152
[e $ ! > _ofs -> -> -> 0 `i `l `ul 246  ]
{
[; ;tff.c: 1153: csize = (DWORD)fp->fs->csize * 512U;
"1153
[e = _csize * -> . *U . *U _fp 3 11 `ul -> -> 512 `ui `ul ]
[; ;tff.c: 1154: if (ifptr > 0 &&
[; ;tff.c: 1155: (ofs - 1) / csize >= (ifptr - 1) / csize) {
"1155
[e $ ! && > _ifptr -> -> -> 0 `i `l `ul >= / - _ofs -> -> -> 1 `i `l `ul _csize / - _ifptr -> -> -> 1 `i `l `ul _csize 247  ]
{
[; ;tff.c: 1156: fp->fptr = (ifptr - 1) & ~(csize - 1);
"1156
[e = . *U _fp 4 & - _ifptr -> -> -> 1 `i `l `ul ~ - _csize -> -> -> 1 `i `l `ul ]
[; ;tff.c: 1157: ofs -= fp->fptr;
"1157
[e =- _ofs . *U _fp 4 ]
[; ;tff.c: 1158: clust = fp->curr_clust;
"1158
[e = _clust . *U _fp 7 ]
"1159
}
[; ;tff.c: 1159: } else {
[e $U 248  ]
[e :U 247 ]
{
[; ;tff.c: 1160: clust = fp->org_clust;
"1160
[e = _clust . *U _fp 6 ]
[; ;tff.c: 1162: if (clust == 0) {
"1162
[e $ ! == _clust -> -> -> 0 `i `l `ul 249  ]
{
[; ;tff.c: 1163: clust = create_chain(0);
"1163
[e = _clust ( _create_chain (1 -> -> -> 0 `i `l `ul ]
[; ;tff.c: 1164: if (clust == 1) goto fk_error;
"1164
[e $ ! == _clust -> -> -> 1 `i `l `ul 250  ]
[e $U 251  ]
[e :U 250 ]
[; ;tff.c: 1165: fp->org_clust = clust;
"1165
[e = . *U _fp 6 _clust ]
"1166
}
[e :U 249 ]
[; ;tff.c: 1166: }
[; ;tff.c: 1168: fp->curr_clust = clust;
"1168
[e = . *U _fp 7 _clust ]
"1169
}
[e :U 248 ]
[; ;tff.c: 1169: }
[; ;tff.c: 1170: if (clust != 0) {
"1170
[e $ ! != _clust -> -> -> 0 `i `l `ul 252  ]
{
[; ;tff.c: 1171: while (ofs > csize) {
"1171
[e $U 253  ]
[e :U 254 ]
{
[; ;tff.c: 1173: if (fp->flag & 0x02) {
"1173
[e $ ! != & -> . *U _fp 1 `i -> 2 `i -> 0 `i 256  ]
{
[; ;tff.c: 1174: clust = create_chain(clust);
"1174
[e = _clust ( _create_chain (1 _clust ]
[; ;tff.c: 1175: if (clust == 0) {
"1175
[e $ ! == _clust -> -> -> 0 `i `l `ul 257  ]
{
[; ;tff.c: 1176: ofs = csize; break;
"1176
[e = _ofs _csize ]
[e $U 255  ]
"1177
}
[e :U 257 ]
"1178
}
[; ;tff.c: 1177: }
[; ;tff.c: 1178: } else
[e $U 258  ]
[e :U 256 ]
[; ;tff.c: 1180: clust = get_cluster(clust);
"1180
[e = _clust ( _get_cluster (1 _clust ]
[e :U 258 ]
[; ;tff.c: 1181: if (clust < 2 || clust >= fp->fs->max_clust) goto fk_error;
"1181
[e $ ! || < _clust -> -> -> 2 `i `l `ul >= _clust . *U . *U _fp 3 7 259  ]
[e $U 251  ]
[e :U 259 ]
[; ;tff.c: 1182: fp->curr_clust = clust;
"1182
[e = . *U _fp 7 _clust ]
[; ;tff.c: 1183: fp->fptr += csize;
"1183
[e =+ . *U _fp 4 _csize ]
[; ;tff.c: 1184: ofs -= csize;
"1184
[e =- _ofs _csize ]
"1185
}
[e :U 253 ]
"1171
[e $ > _ofs _csize 254  ]
[e :U 255 ]
[; ;tff.c: 1185: }
[; ;tff.c: 1186: fp->fptr += ofs;
"1186
[e =+ . *U _fp 4 _ofs ]
[; ;tff.c: 1187: fp->csect = (BYTE)(ofs / 512U);
"1187
[e = . *U _fp 2 -> / _ofs -> -> 512 `ui `ul `uc ]
[; ;tff.c: 1188: if (ofs % 512U) fp->csect++;
"1188
[e $ ! != % _ofs -> -> 512 `ui `ul -> -> 0 `i `ul 260  ]
[e ++ . *U _fp 2 -> -> 1 `i `uc ]
[e :U 260 ]
"1189
}
[e :U 252 ]
"1190
}
[e :U 246 ]
[; ;tff.c: 1189: }
[; ;tff.c: 1190: }
[; ;tff.c: 1193: if (fp->fptr > fp->fsize) {
"1193
[e $ ! > . *U _fp 4 . *U _fp 5 261  ]
{
[; ;tff.c: 1194: fp->fsize = fp->fptr;
"1194
[e = . *U _fp 5 . *U _fp 4 ]
[; ;tff.c: 1195: fp->flag |= 0x20;
"1195
[e =| . *U _fp 1 -> -> 32 `i `uc ]
"1196
}
[e :U 261 ]
[; ;tff.c: 1196: }
[; ;tff.c: 1199: return FR_OK;
"1199
[e ) . `E155 0 ]
[e $UE 242  ]
[; ;tff.c: 1201: fk_error:
"1201
[e :U 251 ]
[; ;tff.c: 1202: fp->flag |= 0x80;
"1202
[e =| . *U _fp 1 -> -> 128 `i `uc ]
[; ;tff.c: 1203: return FR_RW_ERROR;
"1203
[e ) . `E155 8 ]
[e $UE 242  ]
[; ;tff.c: 1204: }
"1204
[e :UE 242 ]
}
"1214
[v _f_opendir `(E155 ~T0 @X0 1 ef2`*S3`*Cuc ]
"1218
{
[; ;tff.c: 1214: FRESULT f_opendir (
[; ;tff.c: 1215: DIR_E *dj,
[; ;tff.c: 1216: const char *path
[; ;tff.c: 1217: )
[; ;tff.c: 1218: {
[e :U _f_opendir ]
"1215
[v _dj `*S3 ~T0 @X0 1 r1 ]
"1216
[v _path `*Cuc ~T0 @X0 1 r2 ]
"1218
[f ]
"1219
[v _res `E155 ~T0 @X0 1 a ]
"1220
[v _dir `*uc ~T0 @X0 1 a ]
"1221
[v _fn `uc ~T0 @X0 + + -> 8 `i -> 3 `i -> 1 `i a ]
[; ;tff.c: 1219: FRESULT res;
[; ;tff.c: 1220: BYTE *dir;
[; ;tff.c: 1221: char fn[8+3+1];
[; ;tff.c: 1224: res = auto_mount(&path, 0);
"1224
[e = _res ( _auto_mount (2 , &U _path -> -> 0 `i `uc ]
[; ;tff.c: 1225: if (res == FR_OK) {
"1225
[e $ ! == -> _res `i -> . `E155 0 `i 263  ]
{
[; ;tff.c: 1226: res = trace_path(dj, fn, path, &dir);
"1226
[e = _res ( _trace_path (4 , , , _dj &U _fn _path &U _dir ]
[; ;tff.c: 1227: if (res == FR_OK) {
"1227
[e $ ! == -> _res `i -> . `E155 0 `i 264  ]
{
[; ;tff.c: 1228: if (dir) {
"1228
[e $ ! != _dir -> -> 0 `i `*uc 265  ]
{
[; ;tff.c: 1229: if (dir[11] & 0x10) {
"1229
[e $ ! != & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> 16 `i -> 0 `i 266  ]
{
[; ;tff.c: 1230: dj->clust =
[; ;tff.c: 1232: ((DWORD)(WORD)(((WORD)*(volatile BYTE*)((&dir[20])+1)<<8)|(WORD)*(volatile BYTE*)(&dir[20])) << 16) |
[; ;tff.c: 1234: (WORD)(((WORD)*(volatile BYTE*)((&dir[26])+1)<<8)|(WORD)*(volatile BYTE*)(&dir[26]));
"1234
[e = . *U _dj 4 | << -> -> | << -> -> *U -> + &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `*Vuc `us `ui `us `ul -> 16 `i -> -> | << -> -> *U -> + &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `*Vuc `us `ui `us `ul ]
[; ;tff.c: 1235: dj->sect = clust2sect(dj->clust);
"1235
[e = . *U _dj 5 ( _clust2sect (1 . *U _dj 4 ]
[; ;tff.c: 1236: dj->index = 2;
"1236
[e = . *U _dj 1 -> -> 2 `i `us ]
"1237
}
[; ;tff.c: 1237: } else {
[e $U 267  ]
[e :U 266 ]
{
[; ;tff.c: 1238: res = FR_NO_FILE;
"1238
[e = _res . `E155 2 ]
"1239
}
[e :U 267 ]
"1240
}
[e :U 265 ]
[; ;tff.c: 1239: }
[; ;tff.c: 1240: }
[; ;tff.c: 1241: dj->id = dj->fs->id;
"1241
[e = . *U _dj 0 . *U . *U _dj 2 0 ]
"1242
}
[e :U 264 ]
"1243
}
[e :U 263 ]
[; ;tff.c: 1242: }
[; ;tff.c: 1243: }
[; ;tff.c: 1245: return res;
"1245
[e ) _res ]
[e $UE 262  ]
[; ;tff.c: 1246: }
"1246
[e :UE 262 ]
}
"1255
[v _f_readdir `(E155 ~T0 @X0 1 ef2`*S3`*S5 ]
"1259
{
[; ;tff.c: 1255: FRESULT f_readdir (
[; ;tff.c: 1256: DIR_E *dj,
[; ;tff.c: 1257: FILINFO *finfo
[; ;tff.c: 1258: )
[; ;tff.c: 1259: {
[e :U _f_readdir ]
"1256
[v _dj `*S3 ~T0 @X0 1 r1 ]
"1257
[v _finfo `*S5 ~T0 @X0 1 r2 ]
"1259
[f ]
"1260
[v _res `E155 ~T0 @X0 1 a ]
"1261
[v _dir `*uc ~T0 @X0 1 a ]
[v _c `uc ~T0 @X0 1 a ]
[; ;tff.c: 1260: FRESULT res;
[; ;tff.c: 1261: BYTE *dir, c;
[; ;tff.c: 1264: res = validate(dj->fs, dj->id);
"1264
[e = _res ( _validate (2 , -> . *U _dj 2 `*CS2 . *U _dj 0 ]
[; ;tff.c: 1265: if (res != FR_OK) return res;
"1265
[e $ ! != -> _res `i -> . `E155 0 `i 269  ]
[e ) _res ]
[e $UE 268  ]
[e :U 269 ]
[; ;tff.c: 1267: finfo->fname[0] = 0;
"1267
[e = *U + &U . *U _finfo 4 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _finfo 4 `ui `ux -> -> 0 `i `uc ]
[; ;tff.c: 1268: while (dj->sect) {
"1268
[e $U 270  ]
[e :U 271 ]
{
[; ;tff.c: 1269: if (!move_window(dj->sect))
"1269
[e $ ! ! != -> ( _move_window (1 . *U _dj 5 `i -> -> -> 0 `i `E105 `i 273  ]
[; ;tff.c: 1270: return FR_RW_ERROR;
"1270
[e ) . `E155 8 ]
[e $UE 268  ]
[e :U 273 ]
[; ;tff.c: 1271: dir = &dj->fs->win[(dj->index & 15) * 32];
"1271
[e = _dir &U *U + &U . *U . *U _dj 2 14 * -> * & -> . *U _dj 1 `ui -> -> 15 `i `ui -> -> 32 `i `ui `ux -> -> # *U &U . *U . *U _dj 2 14 `ui `ux ]
[; ;tff.c: 1272: c = dir[0];
"1272
[e = _c *U + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x ]
[; ;tff.c: 1273: if (c == 0) break;
"1273
[e $ ! == -> _c `i -> 0 `i 274  ]
[e $U 272  ]
[e :U 274 ]
[; ;tff.c: 1274: if (c != 0xE5 && !(dir[11] & 0x08))
"1274
[e $ ! && != -> _c `i -> 229 `i ! != & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> 8 `i -> 0 `i 275  ]
[; ;tff.c: 1275: get_fileinfo(finfo, dir);
"1275
[e ( _get_fileinfo (2 , _finfo -> _dir `*Cuc ]
[e :U 275 ]
[; ;tff.c: 1276: if (!next_dir_entry(dj)) dj->sect = 0;
"1276
[e $ ! ! != -> ( _next_dir_entry (1 _dj `i -> -> -> 0 `i `E105 `i 276  ]
[e = . *U _dj 5 -> -> -> 0 `i `l `ul ]
[e :U 276 ]
[; ;tff.c: 1277: if (finfo->fname[0]) break;
"1277
[e $ ! != -> *U + &U . *U _finfo 4 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _finfo 4 `ui `ux `i -> -> -> 0 `i `uc `i 277  ]
[e $U 272  ]
[e :U 277 ]
"1278
}
[e :U 270 ]
"1268
[e $ != . *U _dj 5 -> -> 0 `i `ul 271  ]
[e :U 272 ]
[; ;tff.c: 1278: }
[; ;tff.c: 1280: return FR_OK;
"1280
[e ) . `E155 0 ]
[e $UE 268  ]
[; ;tff.c: 1281: }
"1281
[e :UE 268 ]
}
"1291
[v _f_stat `(E155 ~T0 @X0 1 ef2`*Cuc`*S5 ]
"1295
{
[; ;tff.c: 1291: FRESULT f_stat (
[; ;tff.c: 1292: const char *path,
[; ;tff.c: 1293: FILINFO *finfo
[; ;tff.c: 1294: )
[; ;tff.c: 1295: {
[e :U _f_stat ]
"1292
[v _path `*Cuc ~T0 @X0 1 r1 ]
"1293
[v _finfo `*S5 ~T0 @X0 1 r2 ]
"1295
[f ]
"1296
[v _res `E155 ~T0 @X0 1 a ]
"1297
[v _dj `S3 ~T0 @X0 1 a ]
"1298
[v _dir `*uc ~T0 @X0 1 a ]
"1299
[v _fn `uc ~T0 @X0 + + -> 8 `i -> 3 `i -> 1 `i a ]
[; ;tff.c: 1296: FRESULT res;
[; ;tff.c: 1297: DIR_E dj;
[; ;tff.c: 1298: BYTE *dir;
[; ;tff.c: 1299: char fn[8+3+1];
[; ;tff.c: 1302: res = auto_mount(&path, 0);
"1302
[e = _res ( _auto_mount (2 , &U _path -> -> 0 `i `uc ]
[; ;tff.c: 1303: if (res == FR_OK) {
"1303
[e $ ! == -> _res `i -> . `E155 0 `i 279  ]
{
[; ;tff.c: 1304: res = trace_path(&dj, fn, path, &dir);
"1304
[e = _res ( _trace_path (4 , , , &U _dj &U _fn _path &U _dir ]
[; ;tff.c: 1305: if (res == FR_OK) {
"1305
[e $ ! == -> _res `i -> . `E155 0 `i 280  ]
{
[; ;tff.c: 1306: if (dir)
"1306
[e $ ! != _dir -> -> 0 `i `*uc 281  ]
[; ;tff.c: 1307: get_fileinfo(finfo, dir);
"1307
[e ( _get_fileinfo (2 , _finfo -> _dir `*Cuc ]
[e $U 282  ]
"1308
[e :U 281 ]
[; ;tff.c: 1308: else
[; ;tff.c: 1309: res = FR_INVALID_NAME;
"1309
[e = _res . `E155 4 ]
[e :U 282 ]
"1310
}
[e :U 280 ]
"1311
}
[e :U 279 ]
[; ;tff.c: 1310: }
[; ;tff.c: 1311: }
[; ;tff.c: 1313: return res;
"1313
[e ) _res ]
[e $UE 278  ]
[; ;tff.c: 1314: }
"1314
[e :UE 278 ]
}
"1324
[v _f_truncate `(E155 ~T0 @X0 1 ef1`*S4 ]
"1327
{
[; ;tff.c: 1324: FRESULT f_truncate (
[; ;tff.c: 1325: FIL *fp
[; ;tff.c: 1326: )
[; ;tff.c: 1327: {
[e :U _f_truncate ]
"1325
[v _fp `*S4 ~T0 @X0 1 r1 ]
"1327
[f ]
"1328
[v _res `E155 ~T0 @X0 1 a ]
"1329
[v _ncl `ul ~T0 @X0 1 a ]
[; ;tff.c: 1328: FRESULT res;
[; ;tff.c: 1329: CLUST ncl;
[; ;tff.c: 1332: res = validate(fp->fs, fp->id);
"1332
[e = _res ( _validate (2 , -> . *U _fp 3 `*CS2 . *U _fp 0 ]
[; ;tff.c: 1333: if (res != FR_OK) return res;
"1333
[e $ ! != -> _res `i -> . `E155 0 `i 284  ]
[e ) _res ]
[e $UE 283  ]
[e :U 284 ]
[; ;tff.c: 1334: if (fp->flag & 0x80) return FR_RW_ERROR;
"1334
[e $ ! != & -> . *U _fp 1 `i -> 128 `i -> 0 `i 285  ]
[e ) . `E155 8 ]
[e $UE 283  ]
[e :U 285 ]
[; ;tff.c: 1335: if (!(fp->flag & 0x02)) return FR_DENIED;
"1335
[e $ ! ! != & -> . *U _fp 1 `i -> 2 `i -> 0 `i 286  ]
[e ) . `E155 6 ]
[e $UE 283  ]
[e :U 286 ]
[; ;tff.c: 1337: if (fp->fsize > fp->fptr) {
"1337
[e $ ! > . *U _fp 5 . *U _fp 4 287  ]
{
[; ;tff.c: 1338: fp->fsize = fp->fptr;
"1338
[e = . *U _fp 5 . *U _fp 4 ]
[; ;tff.c: 1339: fp->flag |= 0x20;
"1339
[e =| . *U _fp 1 -> -> 32 `i `uc ]
[; ;tff.c: 1340: if (fp->fptr == 0) {
"1340
[e $ ! == . *U _fp 4 -> -> -> 0 `i `l `ul 288  ]
{
[; ;tff.c: 1341: if (!remove_chain(fp->org_clust)) goto ft_error;
"1341
[e $ ! ! != -> ( _remove_chain (1 . *U _fp 6 `i -> -> -> 0 `i `E105 `i 289  ]
[e $U 290  ]
[e :U 289 ]
[; ;tff.c: 1342: fp->org_clust = 0;
"1342
[e = . *U _fp 6 -> -> -> 0 `i `l `ul ]
"1343
}
[; ;tff.c: 1343: } else {
[e $U 291  ]
[e :U 288 ]
{
[; ;tff.c: 1344: ncl = get_cluster(fp->curr_clust);
"1344
[e = _ncl ( _get_cluster (1 . *U _fp 7 ]
[; ;tff.c: 1345: if (ncl < 2) goto ft_error;
"1345
[e $ ! < _ncl -> -> -> 2 `i `l `ul 292  ]
[e $U 290  ]
[e :U 292 ]
[; ;tff.c: 1346: if (ncl < fp->fs->max_clust) {
"1346
[e $ ! < _ncl . *U . *U _fp 3 7 293  ]
{
[; ;tff.c: 1347: if (!put_cluster(fp->curr_clust, (CLUST)0x0FFFFFFF)) goto ft_error;
"1347
[e $ ! ! != -> ( _put_cluster (2 , . *U _fp 7 -> -> 268435455 `l `ul `i -> -> -> 0 `i `E105 `i 294  ]
[e $U 290  ]
[e :U 294 ]
[; ;tff.c: 1348: if (!remove_chain(ncl)) goto ft_error;
"1348
[e $ ! ! != -> ( _remove_chain (1 _ncl `i -> -> -> 0 `i `E105 `i 295  ]
[e $U 290  ]
[e :U 295 ]
"1349
}
[e :U 293 ]
"1350
}
[e :U 291 ]
"1351
}
[e :U 287 ]
[; ;tff.c: 1349: }
[; ;tff.c: 1350: }
[; ;tff.c: 1351: }
[; ;tff.c: 1353: return FR_OK;
"1353
[e ) . `E155 0 ]
[e $UE 283  ]
[; ;tff.c: 1355: ft_error:
"1355
[e :U 290 ]
[; ;tff.c: 1356: fp->flag |= 0x80;
"1356
[e =| . *U _fp 1 -> -> 128 `i `uc ]
[; ;tff.c: 1357: return FR_RW_ERROR;
"1357
[e ) . `E155 8 ]
[e $UE 283  ]
[; ;tff.c: 1358: }
"1358
[e :UE 283 ]
}
"1367
[v _f_getfree `(E155 ~T0 @X0 1 ef3`*Cuc`*ul`**S2 ]
"1372
{
[; ;tff.c: 1367: FRESULT f_getfree (
[; ;tff.c: 1368: const char *drv,
[; ;tff.c: 1369: DWORD *nclust,
[; ;tff.c: 1370: FATFS **fatfs
[; ;tff.c: 1371: )
[; ;tff.c: 1372: {
[e :U _f_getfree ]
"1368
[v _drv `*Cuc ~T0 @X0 1 r1 ]
"1369
[v _nclust `*ul ~T0 @X0 1 r2 ]
"1370
[v _fatfs `**S2 ~T0 @X0 1 r3 ]
"1372
[f ]
"1373
[v _res `E155 ~T0 @X0 1 a ]
"1374
[v _fs `*S2 ~T0 @X0 1 a ]
"1375
[v _n `ul ~T0 @X0 1 a ]
[v _sect `ul ~T0 @X0 1 a ]
"1376
[v _clust `ul ~T0 @X0 1 a ]
"1377
[v _fat `uc ~T0 @X0 1 a ]
[v _f `uc ~T0 @X0 1 a ]
[v _p `*uc ~T0 @X0 1 a ]
[; ;tff.c: 1373: FRESULT res;
[; ;tff.c: 1374: FATFS *fs;
[; ;tff.c: 1375: DWORD n, sect;
[; ;tff.c: 1376: CLUST clust;
[; ;tff.c: 1377: BYTE fat, f, *p;
[; ;tff.c: 1381: res = auto_mount(&drv, 0);
"1381
[e = _res ( _auto_mount (2 , &U _drv -> -> 0 `i `uc ]
[; ;tff.c: 1382: if (res != FR_OK) return res;
"1382
[e $ ! != -> _res `i -> . `E155 0 `i 297  ]
[e ) _res ]
[e $UE 296  ]
[e :U 297 ]
[; ;tff.c: 1383: *fatfs = fs = FatFs;
"1383
[e = *U _fatfs = _fs _FatFs ]
[; ;tff.c: 1386: if (fs->free_clust <= fs->max_clust - 2) {
"1386
[e $ ! <= . *U _fs 9 - . *U _fs 7 -> -> -> 2 `i `l `ul 298  ]
{
[; ;tff.c: 1387: *nclust = fs->free_clust;
"1387
[e = *U _nclust . *U _fs 9 ]
[; ;tff.c: 1388: return FR_OK;
"1388
[e ) . `E155 0 ]
[e $UE 296  ]
"1389
}
[e :U 298 ]
[; ;tff.c: 1389: }
[; ;tff.c: 1392: fat = fs->fs_type;
"1392
[e = _fat . *U _fs 10 ]
[; ;tff.c: 1393: n = 0;
"1393
[e = _n -> -> -> 0 `i `l `ul ]
[; ;tff.c: 1394: if (fat == 1) {
"1394
[e $ ! == -> _fat `i -> 1 `i 299  ]
{
[; ;tff.c: 1395: clust = 2;
"1395
[e = _clust -> -> -> 2 `i `l `ul ]
[; ;tff.c: 1396: do {
"1396
[e :U 302 ]
{
[; ;tff.c: 1397: if ((WORD)get_cluster(clust) == 0) n++;
"1397
[e $ ! == -> -> ( _get_cluster (1 _clust `us `ui -> -> 0 `i `ui 303  ]
[e ++ _n -> -> -> 1 `i `l `ul ]
[e :U 303 ]
"1398
}
[; ;tff.c: 1398: } while (++clust < fs->max_clust);
[e $ < =+ _clust -> -> -> 1 `i `l `ul . *U _fs 7 302  ]
[e :U 301 ]
"1399
}
[; ;tff.c: 1399: } else {
[e $U 304  ]
[e :U 299 ]
{
[; ;tff.c: 1400: clust = fs->max_clust;
"1400
[e = _clust . *U _fs 7 ]
[; ;tff.c: 1401: sect = fs->fatbase;
"1401
[e = _sect . *U _fs 3 ]
[; ;tff.c: 1402: f = 0; p = 0;
"1402
[e = _f -> -> 0 `i `uc ]
[e = _p -> -> 0 `i `*uc ]
[; ;tff.c: 1403: do {
"1403
[e :U 307 ]
{
[; ;tff.c: 1404: if (!f) {
"1404
[e $ ! ! != -> _f `i -> -> -> 0 `i `uc `i 308  ]
{
[; ;tff.c: 1405: if (!move_window(sect++)) return FR_RW_ERROR;
"1405
[e $ ! ! != -> ( _move_window (1 ++ _sect -> -> -> 1 `i `l `ul `i -> -> -> 0 `i `E105 `i 309  ]
[e ) . `E155 8 ]
[e $UE 296  ]
[e :U 309 ]
[; ;tff.c: 1406: p = fs->win;
"1406
[e = _p &U . *U _fs 14 ]
"1407
}
[e :U 308 ]
[; ;tff.c: 1407: }
[; ;tff.c: 1408: if (!1 || fat == 2) {
"1408
[e $ ! || ! != -> 1 `i -> 0 `i == -> _fat `i -> 2 `i 310  ]
{
[; ;tff.c: 1409: if ((WORD)(((WORD)*(volatile BYTE*)((p)+1)<<8)|(WORD)*(volatile BYTE*)(p)) == 0) n++;
"1409
[e $ ! == -> -> | << -> -> *U -> + _p * -> -> 1 `i `x -> -> # *U _p `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> _p `*Vuc `us `ui `us `ui -> -> 0 `i `ui 311  ]
[e ++ _n -> -> -> 1 `i `l `ul ]
[e :U 311 ]
[; ;tff.c: 1410: p += 2; f += 1;
"1410
[e =+ _p * -> -> 2 `i `x -> -> # *U _p `i `x ]
[e =+ _f -> -> 1 `i `uc ]
"1411
}
[; ;tff.c: 1411: } else {
[e $U 312  ]
[e :U 310 ]
{
[; ;tff.c: 1412: if ((DWORD)(((DWORD)*(volatile BYTE*)((p)+3)<<24)|((DWORD)*(volatile BYTE*)((p)+2)<<16)|((WORD)*(volatile BYTE*)((p)+1)<<8)|*(volatile BYTE*)(p)) == 0) n++;
"1412
[e $ ! == | | | << -> *U -> + _p * -> -> 3 `i `x -> -> # *U _p `i `x `*Vuc `ul -> 24 `i << -> *U -> + _p * -> -> 2 `i `x -> -> # *U _p `i `x `*Vuc `ul -> 16 `i -> << -> -> *U -> + _p * -> -> 1 `i `x -> -> # *U _p `i `x `*Vuc `us `ui -> 8 `i `ul -> *U -> _p `*Vuc `ul -> -> -> 0 `i `l `ul 313  ]
[e ++ _n -> -> -> 1 `i `l `ul ]
[e :U 313 ]
[; ;tff.c: 1413: p += 4; f += 2;
"1413
[e =+ _p * -> -> 4 `i `x -> -> # *U _p `i `x ]
[e =+ _f -> -> 2 `i `uc ]
"1414
}
[e :U 312 ]
"1415
}
[; ;tff.c: 1414: }
[; ;tff.c: 1415: } while (--clust);
[e $ != =- _clust -> -> -> 1 `i `l `ul -> -> 0 `i `ul 307  ]
[e :U 306 ]
"1416
}
[e :U 304 ]
[; ;tff.c: 1416: }
[; ;tff.c: 1417: fs->free_clust = n;
"1417
[e = . *U _fs 9 _n ]
[; ;tff.c: 1422: *nclust = n;
"1422
[e = *U _nclust _n ]
[; ;tff.c: 1423: return FR_OK;
"1423
[e ) . `E155 0 ]
[e $UE 296  ]
[; ;tff.c: 1424: }
"1424
[e :UE 296 ]
}
"1433
[v _f_unlink `(E155 ~T0 @X0 1 ef1`*Cuc ]
"1436
{
[; ;tff.c: 1433: FRESULT f_unlink (
[; ;tff.c: 1434: const char *path
[; ;tff.c: 1435: )
[; ;tff.c: 1436: {
[e :U _f_unlink ]
"1434
[v _path `*Cuc ~T0 @X0 1 r1 ]
"1436
[f ]
"1437
[v _res `E155 ~T0 @X0 1 a ]
"1438
[v _dj `S3 ~T0 @X0 1 a ]
"1439
[v _dir `*uc ~T0 @X0 1 a ]
[v _sdir `*uc ~T0 @X0 1 a ]
"1440
[v _dsect `ul ~T0 @X0 1 a ]
"1441
[v _fn `uc ~T0 @X0 + + -> 8 `i -> 3 `i -> 1 `i a ]
"1442
[v _dclust `ul ~T0 @X0 1 a ]
[; ;tff.c: 1437: FRESULT res;
[; ;tff.c: 1438: DIR_E dj;
[; ;tff.c: 1439: BYTE *dir, *sdir;
[; ;tff.c: 1440: DWORD dsect;
[; ;tff.c: 1441: char fn[8+3+1];
[; ;tff.c: 1442: CLUST dclust;
[; ;tff.c: 1445: res = auto_mount(&path, 1);
"1445
[e = _res ( _auto_mount (2 , &U _path -> -> 1 `i `uc ]
[; ;tff.c: 1446: if (res != FR_OK) return res;
"1446
[e $ ! != -> _res `i -> . `E155 0 `i 315  ]
[e ) _res ]
[e $UE 314  ]
[e :U 315 ]
[; ;tff.c: 1447: res = trace_path(&dj, fn, path, &dir);
"1447
[e = _res ( _trace_path (4 , , , &U _dj &U _fn _path &U _dir ]
[; ;tff.c: 1448: if (res != FR_OK) return res;
"1448
[e $ ! != -> _res `i -> . `E155 0 `i 316  ]
[e ) _res ]
[e $UE 314  ]
[e :U 316 ]
[; ;tff.c: 1449: if (!dir) return FR_INVALID_NAME;
"1449
[e $ ! ! != _dir -> -> 0 `i `*uc 317  ]
[e ) . `E155 4 ]
[e $UE 314  ]
[e :U 317 ]
[; ;tff.c: 1450: if (dir[11] & 0x01) return FR_DENIED;
"1450
[e $ ! != & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> 1 `i -> 0 `i 318  ]
[e ) . `E155 6 ]
[e $UE 314  ]
[e :U 318 ]
[; ;tff.c: 1451: dsect = dj.fs->winsect;
"1451
[e = _dsect . *U . _dj 2 2 ]
[; ;tff.c: 1452: dclust =
[; ;tff.c: 1454: ((DWORD)(WORD)(((WORD)*(volatile BYTE*)((&dir[20])+1)<<8)|(WORD)*(volatile BYTE*)(&dir[20])) << 16) |
[; ;tff.c: 1456: (WORD)(((WORD)*(volatile BYTE*)((&dir[26])+1)<<8)|(WORD)*(volatile BYTE*)(&dir[26]));
"1456
[e = _dclust | << -> -> | << -> -> *U -> + &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `*Vuc `us `ui `us `ul -> 16 `i -> -> | << -> -> *U -> + &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `i `x `*Vuc `us `ui -> 8 `i -> -> *U -> &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `*Vuc `us `ui `us `ul ]
[; ;tff.c: 1457: if (dir[11] & 0x10) {
"1457
[e $ ! != & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> 16 `i -> 0 `i 319  ]
{
[; ;tff.c: 1458: dj.clust = dclust;
"1458
[e = . _dj 4 _dclust ]
[; ;tff.c: 1459: dj.sect = clust2sect(dclust);
"1459
[e = . _dj 5 ( _clust2sect (1 _dclust ]
[; ;tff.c: 1460: dj.index = 2;
"1460
[e = . _dj 1 -> -> 2 `i `us ]
[; ;tff.c: 1461: do {
"1461
[e :U 322 ]
{
[; ;tff.c: 1462: if (!move_window(dj.sect)) return FR_RW_ERROR;
"1462
[e $ ! ! != -> ( _move_window (1 . _dj 5 `i -> -> -> 0 `i `E105 `i 323  ]
[e ) . `E155 8 ]
[e $UE 314  ]
[e :U 323 ]
[; ;tff.c: 1463: sdir = &dj.fs->win[(dj.index & 15) * 32];
"1463
[e = _sdir &U *U + &U . *U . _dj 2 14 * -> * & -> . _dj 1 `ui -> -> 15 `i `ui -> -> 32 `i `ui `ux -> -> # *U &U . *U . _dj 2 14 `ui `ux ]
[; ;tff.c: 1464: if (sdir[0] == 0) break;
"1464
[e $ ! == -> *U + _sdir * -> -> 0 `i `x -> -> # *U _sdir `i `x `i -> 0 `i 324  ]
[e $U 321  ]
[e :U 324 ]
[; ;tff.c: 1465: if (sdir[0] != 0xE5 && !(sdir[11] & 0x08))
"1465
[e $ ! && != -> *U + _sdir * -> -> 0 `i `x -> -> # *U _sdir `i `x `i -> 229 `i ! != & -> *U + _sdir * -> -> 11 `i `x -> -> # *U _sdir `i `x `i -> 8 `i -> 0 `i 325  ]
[; ;tff.c: 1466: return FR_DENIED;
"1466
[e ) . `E155 6 ]
[e $UE 314  ]
[e :U 325 ]
"1467
}
[; ;tff.c: 1467: } while (next_dir_entry(&dj));
[e $ != -> ( _next_dir_entry (1 &U _dj `i -> -> -> 0 `i `E105 `i 322  ]
[e :U 321 ]
"1468
}
[e :U 319 ]
[; ;tff.c: 1468: }
[; ;tff.c: 1470: if (!move_window(dsect)) return FR_RW_ERROR;
"1470
[e $ ! ! != -> ( _move_window (1 _dsect `i -> -> -> 0 `i `E105 `i 326  ]
[e ) . `E155 8 ]
[e $UE 314  ]
[e :U 326 ]
[; ;tff.c: 1471: dir[0] = 0xE5;
"1471
[e = *U + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x -> -> 229 `i `uc ]
[; ;tff.c: 1472: dj.fs->winflag = 1;
"1472
[e = . *U . _dj 2 13 -> -> 1 `i `uc ]
[; ;tff.c: 1473: if (!remove_chain(dclust)) return FR_RW_ERROR;
"1473
[e $ ! ! != -> ( _remove_chain (1 _dclust `i -> -> -> 0 `i `E105 `i 327  ]
[e ) . `E155 8 ]
[e $UE 314  ]
[e :U 327 ]
[; ;tff.c: 1475: return sync();
"1475
[e ) ( _sync ..  ]
[e $UE 314  ]
[; ;tff.c: 1476: }
"1476
[e :UE 314 ]
}
"1485
[v _f_mkdir `(E155 ~T0 @X0 1 ef1`*Cuc ]
"1488
{
[; ;tff.c: 1485: FRESULT f_mkdir (
[; ;tff.c: 1486: const char *path
[; ;tff.c: 1487: )
[; ;tff.c: 1488: {
[e :U _f_mkdir ]
"1486
[v _path `*Cuc ~T0 @X0 1 r1 ]
"1488
[f ]
"1489
[v _res `E155 ~T0 @X0 1 a ]
"1490
[v _dj `S3 ~T0 @X0 1 a ]
"1491
[v _dir `*uc ~T0 @X0 1 a ]
[v _fw `*uc ~T0 @X0 1 a ]
[v _n `uc ~T0 @X0 1 a ]
"1492
[v _fn `uc ~T0 @X0 + + -> 8 `i -> 3 `i -> 1 `i a ]
"1493
[v _sect `ul ~T0 @X0 1 a ]
[v _dsect `ul ~T0 @X0 1 a ]
[v _tim `ul ~T0 @X0 1 a ]
"1494
[v _dclust `ul ~T0 @X0 1 a ]
[v _pclust `ul ~T0 @X0 1 a ]
[; ;tff.c: 1489: FRESULT res;
[; ;tff.c: 1490: DIR_E dj;
[; ;tff.c: 1491: BYTE *dir, *fw, n;
[; ;tff.c: 1492: char fn[8+3+1];
[; ;tff.c: 1493: DWORD sect, dsect, tim;
[; ;tff.c: 1494: CLUST dclust, pclust;
[; ;tff.c: 1497: res = auto_mount(&path, 1);
"1497
[e = _res ( _auto_mount (2 , &U _path -> -> 1 `i `uc ]
[; ;tff.c: 1498: if (res != FR_OK) return res;
"1498
[e $ ! != -> _res `i -> . `E155 0 `i 329  ]
[e ) _res ]
[e $UE 328  ]
[e :U 329 ]
[; ;tff.c: 1499: res = trace_path(&dj, fn, path, &dir);
"1499
[e = _res ( _trace_path (4 , , , &U _dj &U _fn _path &U _dir ]
[; ;tff.c: 1500: if (res == FR_OK) return FR_EXIST;
"1500
[e $ ! == -> _res `i -> . `E155 0 `i 330  ]
[e ) . `E155 7 ]
[e $UE 328  ]
[e :U 330 ]
[; ;tff.c: 1501: if (res != FR_NO_FILE) return res;
"1501
[e $ ! != -> _res `i -> . `E155 2 `i 331  ]
[e ) _res ]
[e $UE 328  ]
[e :U 331 ]
[; ;tff.c: 1503: res = reserve_direntry(&dj, &dir);
"1503
[e = _res ( _reserve_direntry (2 , &U _dj &U _dir ]
[; ;tff.c: 1504: if (res != FR_OK) return res;
"1504
[e $ ! != -> _res `i -> . `E155 0 `i 332  ]
[e ) _res ]
[e $UE 328  ]
[e :U 332 ]
[; ;tff.c: 1505: sect = dj.fs->winsect;
"1505
[e = _sect . *U . _dj 2 2 ]
[; ;tff.c: 1506: dclust = create_chain(0);
"1506
[e = _dclust ( _create_chain (1 -> -> -> 0 `i `l `ul ]
[; ;tff.c: 1507: if (dclust == 1) return FR_RW_ERROR;
"1507
[e $ ! == _dclust -> -> -> 1 `i `l `ul 333  ]
[e ) . `E155 8 ]
[e $UE 328  ]
[e :U 333 ]
[; ;tff.c: 1508: dsect = clust2sect(dclust);
"1508
[e = _dsect ( _clust2sect (1 _dclust ]
[; ;tff.c: 1509: if (!dsect) return FR_DENIED;
"1509
[e $ ! ! != _dsect -> -> 0 `i `ul 334  ]
[e ) . `E155 6 ]
[e $UE 328  ]
[e :U 334 ]
[; ;tff.c: 1510: if (!move_window(dsect)) return FR_RW_ERROR;
"1510
[e $ ! ! != -> ( _move_window (1 _dsect `i -> -> -> 0 `i `E105 `i 335  ]
[e ) . `E155 8 ]
[e $UE 328  ]
[e :U 335 ]
[; ;tff.c: 1512: fw = dj.fs->win;
"1512
[e = _fw &U . *U . _dj 2 14 ]
[; ;tff.c: 1513: memset(fw, 0, 512U);
"1513
[e ( _memset (3 , , -> _fw `*v -> 0 `i -> 512 `ui ]
[; ;tff.c: 1514: for (n = 1; n < dj.fs->csize; n++) {
"1514
{
[e = _n -> -> 1 `i `uc ]
[e $U 339  ]
[e :U 336 ]
{
[; ;tff.c: 1515: if (disk_write(0, fw, ++dsect, 1) != RES_OK)
"1515
[e $ ! != -> ( _disk_write (4 , , , -> -> 0 `i `uc -> _fw `*Cuc =+ _dsect -> -> -> 1 `i `l `ul -> -> 1 `i `ui `i -> . `E248 0 `i 340  ]
[; ;tff.c: 1516: return FR_RW_ERROR;
"1516
[e ) . `E155 8 ]
[e $UE 328  ]
[e :U 340 ]
"1517
}
"1514
[e ++ _n -> -> 1 `i `uc ]
[e :U 339 ]
[e $ < -> _n `i -> . *U . _dj 2 11 `i 336  ]
[e :U 337 ]
"1517
}
[; ;tff.c: 1517: }
[; ;tff.c: 1519: memset(&fw[0], ' ', 8+3);
"1519
[e ( _memset (3 , , -> &U *U + _fw * -> -> 0 `i `x -> -> # *U _fw `i `x `*v -> -> 32 `ui `i -> + -> 8 `i -> 3 `i `ui ]
[; ;tff.c: 1520: fw[0] = '.';
"1520
[e = *U + _fw * -> -> 0 `i `x -> -> # *U _fw `i `x -> -> 46 `ui `uc ]
[; ;tff.c: 1521: fw[11] = 0x10;
"1521
[e = *U + _fw * -> -> 11 `i `x -> -> # *U _fw `i `x -> -> 16 `i `uc ]
[; ;tff.c: 1522: tim = get_fattime();
"1522
[e = _tim ( _get_fattime ..  ]
[; ;tff.c: 1523: *(volatile BYTE*)(&fw[22])=(BYTE)(tim); *(volatile BYTE*)((&fw[22])+1)=(BYTE)((WORD)(tim)>>8); *(volatile BYTE*)((&fw[22])+2)=(BYTE)((DWORD)(tim)>>16); *(volatile BYTE*)((&fw[22])+3)=(BYTE)((DWORD)(tim)>>24);
"1523
[e = *U -> &U *U + _fw * -> -> 22 `i `x -> -> # *U _fw `i `x `*Vuc -> _tim `uc ]
[e = *U -> + &U *U + _fw * -> -> 22 `i `x -> -> # *U _fw `i `x * -> -> 1 `i `x -> -> # *U &U *U + _fw * -> -> 22 `i `x -> -> # *U _fw `i `x `i `x `*Vuc -> >> -> -> _tim `us `ui -> 8 `i `uc ]
[e = *U -> + &U *U + _fw * -> -> 22 `i `x -> -> # *U _fw `i `x * -> -> 2 `i `x -> -> # *U &U *U + _fw * -> -> 22 `i `x -> -> # *U _fw `i `x `i `x `*Vuc -> >> _tim -> 16 `i `uc ]
[e = *U -> + &U *U + _fw * -> -> 22 `i `x -> -> # *U _fw `i `x * -> -> 3 `i `x -> -> # *U &U *U + _fw * -> -> 22 `i `x -> -> # *U _fw `i `x `i `x `*Vuc -> >> _tim -> 24 `i `uc ]
[; ;tff.c: 1524: memcpy(&fw[32], &fw[0], 32); fw[33] = '.';
"1524
[e ( _memcpy (3 , , -> &U *U + _fw * -> -> 32 `i `x -> -> # *U _fw `i `x `*v -> &U *U + _fw * -> -> 0 `i `x -> -> # *U _fw `i `x `*Cv -> -> 32 `i `ui ]
[e = *U + _fw * -> -> 33 `i `x -> -> # *U _fw `i `x -> -> 46 `ui `uc ]
[; ;tff.c: 1525: pclust = dj.sclust;
"1525
[e = _pclust . _dj 3 ]
[; ;tff.c: 1527: *(volatile BYTE*)(&fw[ 20])=(BYTE)(dclust >> 16); *(volatile BYTE*)((&fw[ 20])+1)=(BYTE)((WORD)(dclust >> 16)>>8);
"1527
[e = *U -> &U *U + _fw * -> -> 20 `i `x -> -> # *U _fw `i `x `*Vuc -> >> _dclust -> 16 `i `uc ]
[e = *U -> + &U *U + _fw * -> -> 20 `i `x -> -> # *U _fw `i `x * -> -> 1 `i `x -> -> # *U &U *U + _fw * -> -> 20 `i `x -> -> # *U _fw `i `x `i `x `*Vuc -> >> -> -> >> _dclust -> 16 `i `us `ui -> 8 `i `uc ]
[; ;tff.c: 1528: if (dj.fs->fs_type == 3 && pclust == dj.fs->dirbase) pclust = 0;
"1528
[e $ ! && == -> . *U . _dj 2 10 `i -> 3 `i == _pclust . *U . _dj 2 4 341  ]
[e = _pclust -> -> -> 0 `i `l `ul ]
[e :U 341 ]
[; ;tff.c: 1529: *(volatile BYTE*)(&fw[32+20])=(BYTE)(pclust >> 16); *(volatile BYTE*)((&fw[32+20])+1)=(BYTE)((WORD)(pclust >> 16)>>8);
"1529
[e = *U -> &U *U + _fw * -> + -> 32 `i -> 20 `i `x -> -> # *U _fw `i `x `*Vuc -> >> _pclust -> 16 `i `uc ]
[e = *U -> + &U *U + _fw * -> + -> 32 `i -> 20 `i `x -> -> # *U _fw `i `x * -> -> 1 `i `x -> -> # *U &U *U + _fw * -> + -> 32 `i -> 20 `i `x -> -> # *U _fw `i `x `i `x `*Vuc -> >> -> -> >> _pclust -> 16 `i `us `ui -> 8 `i `uc ]
[; ;tff.c: 1531: *(volatile BYTE*)(&fw[ 26])=(BYTE)(dclust); *(volatile BYTE*)((&fw[ 26])+1)=(BYTE)((WORD)(dclust)>>8);
"1531
[e = *U -> &U *U + _fw * -> -> 26 `i `x -> -> # *U _fw `i `x `*Vuc -> _dclust `uc ]
[e = *U -> + &U *U + _fw * -> -> 26 `i `x -> -> # *U _fw `i `x * -> -> 1 `i `x -> -> # *U &U *U + _fw * -> -> 26 `i `x -> -> # *U _fw `i `x `i `x `*Vuc -> >> -> -> _dclust `us `ui -> 8 `i `uc ]
[; ;tff.c: 1532: *(volatile BYTE*)(&fw[32+26])=(BYTE)(pclust); *(volatile BYTE*)((&fw[32+26])+1)=(BYTE)((WORD)(pclust)>>8);
"1532
[e = *U -> &U *U + _fw * -> + -> 32 `i -> 26 `i `x -> -> # *U _fw `i `x `*Vuc -> _pclust `uc ]
[e = *U -> + &U *U + _fw * -> + -> 32 `i -> 26 `i `x -> -> # *U _fw `i `x * -> -> 1 `i `x -> -> # *U &U *U + _fw * -> + -> 32 `i -> 26 `i `x -> -> # *U _fw `i `x `i `x `*Vuc -> >> -> -> _pclust `us `ui -> 8 `i `uc ]
[; ;tff.c: 1533: dj.fs->winflag = 1;
"1533
[e = . *U . _dj 2 13 -> -> 1 `i `uc ]
[; ;tff.c: 1535: if (!move_window(sect)) return FR_RW_ERROR;
"1535
[e $ ! ! != -> ( _move_window (1 _sect `i -> -> -> 0 `i `E105 `i 342  ]
[e ) . `E155 8 ]
[e $UE 328  ]
[e :U 342 ]
[; ;tff.c: 1536: memset(&dir[0], 0, 32);
"1536
[e ( _memset (3 , , -> &U *U + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x `*v -> 0 `i -> -> 32 `i `ui ]
[; ;tff.c: 1537: memcpy(&dir[0], fn, 8+3);
"1537
[e ( _memcpy (3 , , -> &U *U + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x `*v -> &U _fn `*Cv -> + -> 8 `i -> 3 `i `ui ]
[; ;tff.c: 1538: dir[12] = fn[11];
"1538
[e = *U + _dir * -> -> 12 `i `x -> -> # *U _dir `i `x *U + &U _fn * -> -> -> 11 `i `ui `ux -> -> # *U &U _fn `ui `ux ]
[; ;tff.c: 1539: dir[11] = 0x10;
"1539
[e = *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x -> -> 16 `i `uc ]
[; ;tff.c: 1540: *(volatile BYTE*)(&dir[22])=(BYTE)(tim); *(volatile BYTE*)((&dir[22])+1)=(BYTE)((WORD)(tim)>>8); *(volatile BYTE*)((&dir[22])+2)=(BYTE)((DWORD)(tim)>>16); *(volatile BYTE*)((&dir[22])+3)=(BYTE)((DWORD)(tim)>>24);
"1540
[e = *U -> &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x `*Vuc -> _tim `uc ]
[e = *U -> + &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> -> -> _tim `us `ui -> 8 `i `uc ]
[e = *U -> + &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x * -> -> 2 `i `x -> -> # *U &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> _tim -> 16 `i `uc ]
[e = *U -> + &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x * -> -> 3 `i `x -> -> # *U &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> _tim -> 24 `i `uc ]
[; ;tff.c: 1541: *(volatile BYTE*)(&dir[26])=(BYTE)(dclust); *(volatile BYTE*)((&dir[26])+1)=(BYTE)((WORD)(dclust)>>8);
"1541
[e = *U -> &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `*Vuc -> _dclust `uc ]
[e = *U -> + &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> -> -> _dclust `us `ui -> 8 `i `uc ]
[; ;tff.c: 1543: *(volatile BYTE*)(&dir[20])=(BYTE)(dclust >> 16); *(volatile BYTE*)((&dir[20])+1)=(BYTE)((WORD)(dclust >> 16)>>8);
"1543
[e = *U -> &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `*Vuc -> >> _dclust -> 16 `i `uc ]
[e = *U -> + &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> -> -> >> _dclust -> 16 `i `us `ui -> 8 `i `uc ]
[; ;tff.c: 1546: return sync();
"1546
[e ) ( _sync ..  ]
[e $UE 328  ]
[; ;tff.c: 1547: }
"1547
[e :UE 328 ]
}
"1556
[v _f_chmod `(E155 ~T0 @X0 1 ef3`*Cuc`uc`uc ]
"1561
{
[; ;tff.c: 1556: FRESULT f_chmod (
[; ;tff.c: 1557: const char *path,
[; ;tff.c: 1558: BYTE value,
[; ;tff.c: 1559: BYTE mask
[; ;tff.c: 1560: )
[; ;tff.c: 1561: {
[e :U _f_chmod ]
"1557
[v _path `*Cuc ~T0 @X0 1 r1 ]
"1558
[v _value `uc ~T0 @X0 1 r2 ]
"1559
[v _mask `uc ~T0 @X0 1 r3 ]
"1561
[f ]
"1562
[v _res `E155 ~T0 @X0 1 a ]
"1563
[v _dj `S3 ~T0 @X0 1 a ]
"1564
[v _dir `*uc ~T0 @X0 1 a ]
"1565
[v _fn `uc ~T0 @X0 + + -> 8 `i -> 3 `i -> 1 `i a ]
[; ;tff.c: 1562: FRESULT res;
[; ;tff.c: 1563: DIR_E dj;
[; ;tff.c: 1564: BYTE *dir;
[; ;tff.c: 1565: char fn[8+3+1];
[; ;tff.c: 1568: res = auto_mount(&path, 1);
"1568
[e = _res ( _auto_mount (2 , &U _path -> -> 1 `i `uc ]
[; ;tff.c: 1569: if (res == FR_OK) {
"1569
[e $ ! == -> _res `i -> . `E155 0 `i 344  ]
{
[; ;tff.c: 1570: res = trace_path(&dj, fn, path, &dir);
"1570
[e = _res ( _trace_path (4 , , , &U _dj &U _fn _path &U _dir ]
[; ;tff.c: 1571: if (res == FR_OK) {
"1571
[e $ ! == -> _res `i -> . `E155 0 `i 345  ]
{
[; ;tff.c: 1572: if (!dir) {
"1572
[e $ ! ! != _dir -> -> 0 `i `*uc 346  ]
{
[; ;tff.c: 1573: res = FR_INVALID_NAME;
"1573
[e = _res . `E155 4 ]
"1574
}
[; ;tff.c: 1574: } else {
[e $U 347  ]
[e :U 346 ]
{
[; ;tff.c: 1575: mask &= 0x01|0x02|0x04|0x20;
"1575
[e =& _mask -> | | | -> 1 `i -> 2 `i -> 4 `i -> 32 `i `uc ]
[; ;tff.c: 1576: dir[11] = (value & mask) | (dir[11] & (BYTE)~mask);
"1576
[e = *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x -> | & -> _value `i -> _mask `i & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> -> ~ -> _mask `i `uc `i `uc ]
[; ;tff.c: 1577: res = sync();
"1577
[e = _res ( _sync ..  ]
"1578
}
[e :U 347 ]
"1579
}
[e :U 345 ]
"1580
}
[e :U 344 ]
[; ;tff.c: 1578: }
[; ;tff.c: 1579: }
[; ;tff.c: 1580: }
[; ;tff.c: 1581: return res;
"1581
[e ) _res ]
[e $UE 343  ]
[; ;tff.c: 1582: }
"1582
[e :UE 343 ]
}
"1591
[v _f_utime `(E155 ~T0 @X0 1 ef2`*Cuc`*CS5 ]
"1595
{
[; ;tff.c: 1591: FRESULT f_utime (
[; ;tff.c: 1592: const char *path,
[; ;tff.c: 1593: const FILINFO *finfo
[; ;tff.c: 1594: )
[; ;tff.c: 1595: {
[e :U _f_utime ]
"1592
[v _path `*Cuc ~T0 @X0 1 r1 ]
"1593
[v _finfo `*CS5 ~T0 @X0 1 r2 ]
"1595
[f ]
"1596
[v _res `E155 ~T0 @X0 1 a ]
"1597
[v _dj `S3 ~T0 @X0 1 a ]
"1598
[v _dir `*uc ~T0 @X0 1 a ]
"1599
[v _fn `uc ~T0 @X0 + + -> 8 `i -> 3 `i -> 1 `i a ]
[; ;tff.c: 1596: FRESULT res;
[; ;tff.c: 1597: DIR_E dj;
[; ;tff.c: 1598: BYTE *dir;
[; ;tff.c: 1599: char fn[8+3+1];
[; ;tff.c: 1602: res = auto_mount(&path, 1);
"1602
[e = _res ( _auto_mount (2 , &U _path -> -> 1 `i `uc ]
[; ;tff.c: 1603: if (res == FR_OK) {
"1603
[e $ ! == -> _res `i -> . `E155 0 `i 349  ]
{
[; ;tff.c: 1604: res = trace_path(&dj, fn, path, &dir);
"1604
[e = _res ( _trace_path (4 , , , &U _dj &U _fn _path &U _dir ]
[; ;tff.c: 1605: if (res == FR_OK) {
"1605
[e $ ! == -> _res `i -> . `E155 0 `i 350  ]
{
[; ;tff.c: 1606: if (!dir) {
"1606
[e $ ! ! != _dir -> -> 0 `i `*uc 351  ]
{
[; ;tff.c: 1607: res = FR_INVALID_NAME;
"1607
[e = _res . `E155 4 ]
"1608
}
[; ;tff.c: 1608: } else {
[e $U 352  ]
[e :U 351 ]
{
[; ;tff.c: 1609: *(volatile BYTE*)(&dir[22])=(BYTE)(finfo->ftime); *(volatile BYTE*)((&dir[22])+1)=(BYTE)((WORD)(finfo->ftime)>>8);
"1609
[e = *U -> &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x `*Vuc -> . *U _finfo 2 `uc ]
[e = *U -> + &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> -> . *U _finfo 2 `ui -> 8 `i `uc ]
[; ;tff.c: 1610: *(volatile BYTE*)(&dir[24])=(BYTE)(finfo->fdate); *(volatile BYTE*)((&dir[24])+1)=(BYTE)((WORD)(finfo->fdate)>>8);
"1610
[e = *U -> &U *U + _dir * -> -> 24 `i `x -> -> # *U _dir `i `x `*Vuc -> . *U _finfo 1 `uc ]
[e = *U -> + &U *U + _dir * -> -> 24 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U &U *U + _dir * -> -> 24 `i `x -> -> # *U _dir `i `x `i `x `*Vuc -> >> -> . *U _finfo 1 `ui -> 8 `i `uc ]
[; ;tff.c: 1611: res = sync();
"1611
[e = _res ( _sync ..  ]
"1612
}
[e :U 352 ]
"1613
}
[e :U 350 ]
"1614
}
[e :U 349 ]
[; ;tff.c: 1612: }
[; ;tff.c: 1613: }
[; ;tff.c: 1614: }
[; ;tff.c: 1615: return res;
"1615
[e ) _res ]
[e $UE 348  ]
[; ;tff.c: 1616: }
"1616
[e :UE 348 ]
}
"1625
[v _f_rename `(E155 ~T0 @X0 1 ef2`*Cuc`*Cuc ]
"1629
{
[; ;tff.c: 1625: FRESULT f_rename (
[; ;tff.c: 1626: const char *path_old,
[; ;tff.c: 1627: const char *path_new
[; ;tff.c: 1628: )
[; ;tff.c: 1629: {
[e :U _f_rename ]
"1626
[v _path_old `*Cuc ~T0 @X0 1 r1 ]
"1627
[v _path_new `*Cuc ~T0 @X0 1 r2 ]
"1629
[f ]
"1630
[v _res `E155 ~T0 @X0 1 a ]
"1631
[v _sect_old `ul ~T0 @X0 1 a ]
"1632
[v _dir_old `*uc ~T0 @X0 1 a ]
[v _dir_new `*uc ~T0 @X0 1 a ]
[v _direntry `uc ~T0 @X0 - -> 32 `i -> 11 `i a ]
"1633
[v _dj `S3 ~T0 @X0 1 a ]
"1634
[v _fn `uc ~T0 @X0 + + -> 8 `i -> 3 `i -> 1 `i a ]
[; ;tff.c: 1630: FRESULT res;
[; ;tff.c: 1631: DWORD sect_old;
[; ;tff.c: 1632: BYTE *dir_old, *dir_new, direntry[32-11];
[; ;tff.c: 1633: DIR_E dj;
[; ;tff.c: 1634: char fn[8+3+1];
[; ;tff.c: 1637: res = auto_mount(&path_old, 1);
"1637
[e = _res ( _auto_mount (2 , &U _path_old -> -> 1 `i `uc ]
[; ;tff.c: 1638: if (res != FR_OK) return res;
"1638
[e $ ! != -> _res `i -> . `E155 0 `i 354  ]
[e ) _res ]
[e $UE 353  ]
[e :U 354 ]
[; ;tff.c: 1640: res = trace_path(&dj, fn, path_old, &dir_old);
"1640
[e = _res ( _trace_path (4 , , , &U _dj &U _fn _path_old &U _dir_old ]
[; ;tff.c: 1641: if (res != FR_OK) return res;
"1641
[e $ ! != -> _res `i -> . `E155 0 `i 355  ]
[e ) _res ]
[e $UE 353  ]
[e :U 355 ]
[; ;tff.c: 1642: if (!dir_old) return FR_NO_FILE;
"1642
[e $ ! ! != _dir_old -> -> 0 `i `*uc 356  ]
[e ) . `E155 2 ]
[e $UE 353  ]
[e :U 356 ]
[; ;tff.c: 1643: sect_old = dj.fs->winsect;
"1643
[e = _sect_old . *U . _dj 2 2 ]
[; ;tff.c: 1644: memcpy(direntry, &dir_old[11], 32-11);
"1644
[e ( _memcpy (3 , , -> &U _direntry `*v -> &U *U + _dir_old * -> -> 11 `i `x -> -> # *U _dir_old `i `x `*Cv -> - -> 32 `i -> 11 `i `ui ]
[; ;tff.c: 1646: res = trace_path(&dj, fn, path_new, &dir_new);
"1646
[e = _res ( _trace_path (4 , , , &U _dj &U _fn _path_new &U _dir_new ]
[; ;tff.c: 1647: if (res == FR_OK) return FR_EXIST;
"1647
[e $ ! == -> _res `i -> . `E155 0 `i 357  ]
[e ) . `E155 7 ]
[e $UE 353  ]
[e :U 357 ]
[; ;tff.c: 1648: if (res != FR_NO_FILE) return res;
"1648
[e $ ! != -> _res `i -> . `E155 2 `i 358  ]
[e ) _res ]
[e $UE 353  ]
[e :U 358 ]
[; ;tff.c: 1649: res = reserve_direntry(&dj, &dir_new);
"1649
[e = _res ( _reserve_direntry (2 , &U _dj &U _dir_new ]
[; ;tff.c: 1650: if (res != FR_OK) return res;
"1650
[e $ ! != -> _res `i -> . `E155 0 `i 359  ]
[e ) _res ]
[e $UE 353  ]
[e :U 359 ]
[; ;tff.c: 1652: memcpy(&dir_new[11], direntry, 32-11);
"1652
[e ( _memcpy (3 , , -> &U *U + _dir_new * -> -> 11 `i `x -> -> # *U _dir_new `i `x `*v -> &U _direntry `*Cv -> - -> 32 `i -> 11 `i `ui ]
[; ;tff.c: 1653: memcpy(&dir_new[0], fn, 8+3);
"1653
[e ( _memcpy (3 , , -> &U *U + _dir_new * -> -> 0 `i `x -> -> # *U _dir_new `i `x `*v -> &U _fn `*Cv -> + -> 8 `i -> 3 `i `ui ]
[; ;tff.c: 1654: dir_new[12] = fn[11];
"1654
[e = *U + _dir_new * -> -> 12 `i `x -> -> # *U _dir_new `i `x *U + &U _fn * -> -> -> 11 `i `ui `ux -> -> # *U &U _fn `ui `ux ]
[; ;tff.c: 1655: dj.fs->winflag = 1;
"1655
[e = . *U . _dj 2 13 -> -> 1 `i `uc ]
[; ;tff.c: 1657: if (!move_window(sect_old)) return FR_RW_ERROR;
"1657
[e $ ! ! != -> ( _move_window (1 _sect_old `i -> -> -> 0 `i `E105 `i 360  ]
[e ) . `E155 8 ]
[e $UE 353  ]
[e :U 360 ]
[; ;tff.c: 1658: dir_old[0] = 0xE5;
"1658
[e = *U + _dir_old * -> -> 0 `i `x -> -> # *U _dir_old `i `x -> -> 229 `i `uc ]
[; ;tff.c: 1660: return sync();
"1660
[e ) ( _sync ..  ]
[e $UE 353  ]
[; ;tff.c: 1661: }
"1661
[e :UE 353 ]
}
"1729
[v _fgets `(*uc ~T0 @X0 1 ef3`*uc`i`*S4 ]
"1734
{
[; ;tff.c: 1729: char* fgets (
[; ;tff.c: 1730: char* buff,
[; ;tff.c: 1731: int len,
[; ;tff.c: 1732: FIL* fil
[; ;tff.c: 1733: )
[; ;tff.c: 1734: {
[e :U _fgets ]
"1730
[v _buff `*uc ~T0 @X0 1 r1 ]
"1731
[v _len `i ~T0 @X0 1 r2 ]
"1732
[v _fil `*S4 ~T0 @X0 1 r3 ]
"1734
[f ]
"1735
[v _i `i ~T0 @X0 1 a ]
[; ;tff.c: 1735: int i = 0;
[e = _i -> 0 `i ]
"1736
[v _p `*uc ~T0 @X0 1 a ]
[; ;tff.c: 1736: char *p = buff;
[e = _p _buff ]
"1737
[v _rc `ui ~T0 @X0 1 a ]
[; ;tff.c: 1737: UINT rc;
[; ;tff.c: 1740: while (i < len - 1) {
"1740
[e $U 362  ]
[e :U 363 ]
{
[; ;tff.c: 1741: f_read(fil, p, 1, &rc);
"1741
[e ( _f_read (4 , , , _fil -> _p `*v -> -> 1 `i `ui &U _rc ]
[; ;tff.c: 1742: if (rc != 1) break;
"1742
[e $ ! != _rc -> -> 1 `i `ui 365  ]
[e $U 364  ]
[e :U 365 ]
[; ;tff.c: 1746: i++;
"1746
[e ++ _i -> 1 `i ]
[; ;tff.c: 1747: if (*p++ == '\n') break;
"1747
[e $ ! == -> *U ++ _p * -> -> 1 `i `x -> -> # *U _p `i `x `ui -> 10 `ui 366  ]
[e $U 364  ]
[e :U 366 ]
"1748
}
[e :U 362 ]
"1740
[e $ < _i - _len -> 1 `i 363  ]
[e :U 364 ]
[; ;tff.c: 1748: }
[; ;tff.c: 1749: *p = 0;
"1749
[e = *U _p -> -> 0 `i `uc ]
[; ;tff.c: 1750: return i ? buff : 0;
"1750
[e ) ? != _i -> 0 `i : _buff -> -> 0 `i `*uc ]
[e $UE 361  ]
[; ;tff.c: 1751: }
"1751
[e :UE 361 ]
}
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
"1760
[v _fputc `(i ~T0 @X0 1 ef2`i`*S4 ]
"1764
{
[; ;tff.c: 1760: int fputc (
[; ;tff.c: 1761: int chr,
[; ;tff.c: 1762: FIL* fil
[; ;tff.c: 1763: )
[; ;tff.c: 1764: {
[e :U _fputc ]
"1761
[v _chr `i ~T0 @X0 1 r1 ]
"1762
[v _fil `*S4 ~T0 @X0 1 r2 ]
"1764
[f ]
"1765
[v _bw `ui ~T0 @X0 1 a ]
"1766
[v _c `uc ~T0 @X0 1 a ]
[; ;tff.c: 1765: UINT bw;
[; ;tff.c: 1766: char c;
[; ;tff.c: 1772: if (!fil) {
"1772
[e $ ! ! != _fil -> -> 0 `i `*S4 368  ]
{
[; ;tff.c: 1774: return chr;
"1774
[e ) _chr ]
[e $UE 367  ]
"1775
}
[e :U 368 ]
[; ;tff.c: 1775: }
[; ;tff.c: 1776: c = (char)chr;
"1776
[e = _c -> _chr `uc ]
[; ;tff.c: 1777: f_write(fil, &c, 1, &bw);
"1777
[e ( _f_write (4 , , , _fil -> &U _c `*Cv -> -> 1 `i `ui &U _bw ]
[; ;tff.c: 1778: return bw ? chr : -1;
"1778
[e ) ? != _bw -> -> 0 `i `ui : _chr -U -> 1 `i ]
[e $UE 367  ]
[; ;tff.c: 1779: }
"1779
[e :UE 367 ]
}
"1787
[v _fputs `(i ~T0 @X0 1 ef2`*Cuc`*S4 ]
"1791
{
[; ;tff.c: 1787: int fputs (
[; ;tff.c: 1788: const char* str,
[; ;tff.c: 1789: FIL* fil
[; ;tff.c: 1790: )
[; ;tff.c: 1791: {
[e :U _fputs ]
"1788
[v _str `*Cuc ~T0 @X0 1 r1 ]
"1789
[v _fil `*S4 ~T0 @X0 1 r2 ]
"1791
[f ]
"1792
[v _n `i ~T0 @X0 1 a ]
[; ;tff.c: 1792: int n;
[; ;tff.c: 1795: for (n = 0; *str; str++, n++) {
"1795
{
[e = _n -> 0 `i ]
[e $U 373  ]
[e :U 370 ]
{
[; ;tff.c: 1796: if (fputc(*str, fil) == -1) return -1;
"1796
[e $ ! == ( _fputc (2 , -> *U _str `i _fil -U -> 1 `i 374  ]
[e ) -U -> 1 `i ]
[e $UE 369  ]
[e :U 374 ]
"1797
}
"1795
[e ; ++ _str * -> -> 1 `i `x -> -> # *U _str `i `x ++ _n -> 1 `i ]
[e :U 373 ]
[e $ != -> *U _str `i -> -> -> 0 `i `Cuc `i 370  ]
[e :U 371 ]
"1797
}
[; ;tff.c: 1797: }
[; ;tff.c: 1798: return n;
"1798
[e ) _n ]
[e $UE 369  ]
[; ;tff.c: 1799: }
"1799
[e :UE 369 ]
}
"1807
[v _fprintf `(i ~T0 @X0 1 e1v`*S4`*Cuc ]
"1812
{
[; ;tff.c: 1807: int fprintf (
[; ;tff.c: 1808: FIL* fil,
[; ;tff.c: 1809: const char* str,
[; ;tff.c: 1810: ...
[; ;tff.c: 1811: )
[; ;tff.c: 1812: {
[e :U _fprintf ]
"1808
[v _fil `*S4 ~T0 @X0 1 r1 ]
"1809
[v _str `*Cuc ~T0 @X0 1 r0 ]
"1812
[f ]
"1813
[v _arp `*v ~T0 @X0 -> -> 1 `i `ux a ]
"1814
[v _c `uc ~T0 @X0 1 a ]
[v _f `uc ~T0 @X0 1 a ]
[v _r `uc ~T0 @X0 1 a ]
"1815
[v _val `ul ~T0 @X0 1 a ]
"1816
[v _s `uc ~T0 @X0 -> 16 `i a ]
"1817
[v _i `i ~T0 @X0 1 a ]
[v _w `i ~T0 @X0 1 a ]
[v _res `i ~T0 @X0 1 a ]
[v _cc `i ~T0 @X0 1 a ]
[; ;tff.c: 1813: va_list arp;
[; ;tff.c: 1814: UCHAR c, f, r;
[; ;tff.c: 1815: ULONG val;
[; ;tff.c: 1816: char s[16];
[; ;tff.c: 1817: int i, w, res, cc;
[; ;tff.c: 1820: *arp = __va_start();
"1820
[e = *U &U _arp ( ___va_start ..  ]
[; ;tff.c: 1822: for (cc = res = 0; cc != -1; res += cc) {
"1822
{
[e = _cc = _res -> 0 `i ]
[e $ != _cc -U -> 1 `i 376  ]
[e $U 377  ]
[e :U 376 ]
{
[; ;tff.c: 1823: c = *str++;
"1823
[e = _c *U ++ _str * -> -> 1 `i `x -> -> # *U _str `i `x ]
[; ;tff.c: 1824: if (c == 0) break;
"1824
[e $ ! == -> _c `i -> 0 `i 379  ]
[e $U 377  ]
[e :U 379 ]
[; ;tff.c: 1825: if (c != '%') {
"1825
[e $ ! != -> _c `ui -> 37 `ui 380  ]
{
[; ;tff.c: 1826: cc = fputc(c, fil);
"1826
[e = _cc ( _fputc (2 , -> _c `i _fil ]
[; ;tff.c: 1827: if (cc != -1) cc = 1;
"1827
[e $ ! != _cc -U -> 1 `i 381  ]
[e = _cc -> 1 `i ]
[e :U 381 ]
[; ;tff.c: 1828: continue;
"1828
[e $U 378  ]
"1829
}
[e :U 380 ]
[; ;tff.c: 1829: }
[; ;tff.c: 1830: w = f = 0;
"1830
[e = _w -> = _f -> -> 0 `i `uc `i ]
[; ;tff.c: 1831: c = *str++;
"1831
[e = _c *U ++ _str * -> -> 1 `i `x -> -> # *U _str `i `x ]
[; ;tff.c: 1832: if (c == '0') {
"1832
[e $ ! == -> _c `ui -> 48 `ui 382  ]
{
[; ;tff.c: 1833: f = 1; c = *str++;
"1833
[e = _f -> -> 1 `i `uc ]
[e = _c *U ++ _str * -> -> 1 `i `x -> -> # *U _str `i `x ]
"1834
}
[e :U 382 ]
[; ;tff.c: 1834: }
[; ;tff.c: 1835: while (c >= '0' && c <= '9') {
"1835
[e $U 383  ]
[e :U 384 ]
{
[; ;tff.c: 1836: w = w * 10 + (c - '0');
"1836
[e = _w -> + -> * _w -> 10 `i `ui - -> _c `ui -> 48 `ui `i ]
[; ;tff.c: 1837: c = *str++;
"1837
[e = _c *U ++ _str * -> -> 1 `i `x -> -> # *U _str `i `x ]
"1838
}
[e :U 383 ]
"1835
[e $ && >= -> _c `ui -> 48 `ui <= -> _c `ui -> 57 `ui 384  ]
[e :U 385 ]
[; ;tff.c: 1838: }
[; ;tff.c: 1839: if (c == 'l') {
"1839
[e $ ! == -> _c `ui -> 108 `ui 386  ]
{
[; ;tff.c: 1840: f |= 2; c = *str++;
"1840
[e =| _f -> -> 2 `i `uc ]
[e = _c *U ++ _str * -> -> 1 `i `x -> -> # *U _str `i `x ]
"1841
}
[e :U 386 ]
[; ;tff.c: 1841: }
[; ;tff.c: 1842: if (c == 's') {
"1842
[e $ ! == -> _c `ui -> 115 `ui 387  ]
{
[; ;tff.c: 1843: cc = fputs((*(char* *)__va_arg((*(char* **)arp), (char*)0)), fil);
"1843
[e = _cc ( _fputs (2 , -> *U -> ( ___va_arg , (. -> *U -> &U _arp `***uc `*v -> -> 0 `i `*uc `**uc `*Cuc _fil ]
[; ;tff.c: 1844: continue;
"1844
[e $U 378  ]
"1845
}
[e :U 387 ]
[; ;tff.c: 1845: }
[; ;tff.c: 1846: if (c == 'c') {
"1846
[e $ ! == -> _c `ui -> 99 `ui 388  ]
{
[; ;tff.c: 1847: cc = fputc((*(char *)__va_arg((*(char **)arp), (char)0)), fil);
"1847
[e = _cc ( _fputc (2 , -> *U -> ( ___va_arg , (. -> *U -> &U _arp `**uc `*v -> -> -> 0 `i `uc `i `*uc `i _fil ]
[; ;tff.c: 1848: if (cc != -1) cc = 1;
"1848
[e $ ! != _cc -U -> 1 `i 389  ]
[e = _cc -> 1 `i ]
[e :U 389 ]
[; ;tff.c: 1849: continue;
"1849
[e $U 378  ]
"1850
}
[e :U 388 ]
[; ;tff.c: 1850: }
[; ;tff.c: 1851: r = 0;
"1851
[e = _r -> -> 0 `i `uc ]
[; ;tff.c: 1852: if (c == 'd') r = 10;
"1852
[e $ ! == -> _c `ui -> 100 `ui 390  ]
[e = _r -> -> 10 `i `uc ]
[e :U 390 ]
[; ;tff.c: 1853: if (c == 'u') r = 10;
"1853
[e $ ! == -> _c `ui -> 117 `ui 391  ]
[e = _r -> -> 10 `i `uc ]
[e :U 391 ]
[; ;tff.c: 1854: if (c == 'X') r = 16;
"1854
[e $ ! == -> _c `ui -> 88 `ui 392  ]
[e = _r -> -> 16 `i `uc ]
[e :U 392 ]
[; ;tff.c: 1855: if (r == 0) break;
"1855
[e $ ! == -> _r `i -> 0 `i 393  ]
[e $U 377  ]
[e :U 393 ]
[; ;tff.c: 1856: if (f & 2) {
"1856
[e $ ! != & -> _f `i -> 2 `i -> 0 `i 394  ]
{
[; ;tff.c: 1857: val = (ULONG)(*(long *)__va_arg((*(long **)arp), (long)0));
"1857
[e = _val -> *U -> ( ___va_arg , (. -> *U -> &U _arp `**l `*v -> -> 0 `i `l `*l `ul ]
"1858
}
[; ;tff.c: 1858: } else {
[e $U 395  ]
[e :U 394 ]
{
[; ;tff.c: 1859: val = (c == 'd') ? (ULONG)(long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (ULONG)(*(unsigned int *)__va_arg((*(unsigned int **)arp), (unsigned int)0));
"1859
[e = _val ? == -> _c `ui -> 100 `ui : -> -> *U -> ( ___va_arg , (. -> *U -> &U _arp `**i `*v -> 0 `i `*i `l `ul -> *U -> ( ___va_arg , (. -> *U -> &U _arp `**ui `*v -> -> 0 `i `ui `*ui `ul ]
"1860
}
[e :U 395 ]
[; ;tff.c: 1860: }
[; ;tff.c: 1862: if (c == 'd') {
"1862
[e $ ! == -> _c `ui -> 100 `ui 396  ]
{
[; ;tff.c: 1863: if (val >= 0x80000000) {
"1863
[e $ ! >= _val -> -2147483648 `ul 397  ]
{
[; ;tff.c: 1864: val = 0 - val;
"1864
[e = _val - -> -> -> 0 `i `l `ul _val ]
[; ;tff.c: 1865: f |= 4;
"1865
[e =| _f -> -> 4 `i `uc ]
"1866
}
[e :U 397 ]
"1867
}
[e :U 396 ]
[; ;tff.c: 1866: }
[; ;tff.c: 1867: }
[; ;tff.c: 1868: i = sizeof(s) - 1; s[i] = 0;
"1868
[e = _i -> - -> # _s `ui -> -> 1 `i `ui `i ]
[e = *U + &U _s * -> -> _i `ui `ux -> -> # *U &U _s `ui `ux -> -> 0 `i `uc ]
[; ;tff.c: 1869: do {
"1869
[e :U 400 ]
{
[; ;tff.c: 1870: c = (UCHAR)(val % r + '0');
"1870
[e = _c -> + % _val -> _r `ul -> -> 48 `ui `ul `uc ]
[; ;tff.c: 1871: if (c > '9') c += 7;
"1871
[e $ ! > -> _c `ui -> 57 `ui 401  ]
[e =+ _c -> -> 7 `i `uc ]
[e :U 401 ]
[; ;tff.c: 1872: s[--i] = c;
"1872
[e = *U + &U _s * -> -> =- _i -> 1 `i `ui `ux -> -> # *U &U _s `ui `ux _c ]
[; ;tff.c: 1873: val /= r;
"1873
[e =/ _val -> _r `ul ]
"1874
}
[; ;tff.c: 1874: } while (i && val);
[e $ && != _i -> 0 `i != _val -> -> 0 `i `ul 400  ]
[e :U 399 ]
[; ;tff.c: 1875: if (i && (f & 4)) s[--i] = '-';
"1875
[e $ ! && != _i -> 0 `i != & -> _f `i -> 4 `i -> 0 `i 402  ]
[e = *U + &U _s * -> -> =- _i -> 1 `i `ui `ux -> -> # *U &U _s `ui `ux -> -> 45 `ui `uc ]
[e :U 402 ]
[; ;tff.c: 1876: w = sizeof(s) - 1 - w;
"1876
[e = _w -> - - -> # _s `ui -> -> 1 `i `ui -> _w `ui `i ]
[; ;tff.c: 1877: while (i && i > w) s[--i] = (f & 1) ? '0' : ' ';
"1877
[e $U 403  ]
[e :U 404 ]
[e = *U + &U _s * -> -> =- _i -> 1 `i `ui `ux -> -> # *U &U _s `ui `ux -> ? != & -> _f `i -> 1 `i -> 0 `i : -> 48 `ui -> 32 `ui `uc ]
[e :U 403 ]
[e $ && != _i -> 0 `i > _i _w 404  ]
[e :U 405 ]
[; ;tff.c: 1878: cc = fputs(&s[i], fil);
"1878
[e = _cc ( _fputs (2 , -> &U *U + &U _s * -> -> _i `ui `ux -> -> # *U &U _s `ui `ux `*Cuc _fil ]
"1879
}
"1822
[e :U 378 ]
[e =+ _res _cc ]
[e $ != _cc -U -> 1 `i 376  ]
[e :U 377 ]
"1879
}
[; ;tff.c: 1879: }
[; ;tff.c: 1881: ;
[; ;tff.c: 1882: return (cc == -1) ? cc : res;
"1882
[e ) ? == _cc -U -> 1 `i : _cc _res ]
[e $UE 375  ]
[; ;tff.c: 1883: }
"1883
[e :UE 375 ]
}
[a 1C 70 65 84 0 ]
[a 2C 70 65 84 51 50 0 ]
