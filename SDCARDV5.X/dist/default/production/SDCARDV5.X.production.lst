

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jan 28 16:47:02 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           ; Version 1.45
    66                           ; Generated 16/11/2017 GMT
    67                           ; 
    68                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F4550 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     
   100                           	psect	idataBANK0
   101  000F4C                     __pidataBANK0:
   102                           	opt stack 0
   103                           
   104                           ;initializer for _fileName
   105  000F4C  63                 	db	99
   106  000F4D  68                 	db	104
   107  000F4E  65                 	db	101
   108  000F4F  63                 	db	99
   109  000F50  6B                 	db	107
   110  000F51  2E                 	db	46
   111  000F52  74                 	db	116
   112  000F53  78                 	db	120
   113  000F54  74                 	db	116
   114  000F55  00                 	db	0
   115                           
   116                           ;initializer for escreve_inteiro_uart@F3956
   117  000F56  30                 	db	48
   118  000F57  30                 	db	48
   119  000F58  30                 	db	48
   120  000F59  30                 	db	48
   121  000F5A  30                 	db	48
   122  000F5B  30                 	db	48
   123  000F5C  00                 	db	0
   124                           
   125                           ;initializer for escreve_inteiro_lcd@F3966
   126  000F5D  30                 	db	48
   127  000F5E  30                 	db	48
   128  000F5F  30                 	db	48
   129  000F60  30                 	db	48
   130  000F61  30                 	db	48
   131  000F62  30                 	db	48
   132  000F63  00                 	db	0
   133                           
   134                           	psect	mediumconst
   135  0060BE                     __pmediumconst:
   136                           	opt stack 0
   137  0060BE  00                 	db	0
   138  0060BF                     create_name@cvt:
   139                           	opt stack 0
   140  0060BF  80                 	db	128
   141  0060C0  9A                 	db	154
   142  0060C1  90                 	db	144
   143  0060C2  41                 	db	65
   144  0060C3  8E                 	db	142
   145  0060C4  41                 	db	65
   146  0060C5  8F                 	db	143
   147  0060C6  80                 	db	128
   148  0060C7  45                 	db	69
   149  0060C8  45                 	db	69
   150  0060C9  45                 	db	69
   151  0060CA  49                 	db	73
   152  0060CB  49                 	db	73
   153  0060CC  49                 	db	73
   154  0060CD  8E                 	db	142
   155  0060CE  8F                 	db	143
   156  0060CF  90                 	db	144
   157  0060D0  92                 	db	146
   158  0060D1  92                 	db	146
   159  0060D2  4F                 	db	79
   160  0060D3  99                 	db	153
   161  0060D4  4F                 	db	79
   162  0060D5  55                 	db	85
   163  0060D6  55                 	db	85
   164  0060D7  59                 	db	89
   165  0060D8  99                 	db	153
   166  0060D9  9A                 	db	154
   167  0060DA  9B                 	db	155
   168  0060DB  9C                 	db	156
   169  0060DC  9D                 	db	157
   170  0060DD  9E                 	db	158
   171  0060DE  9F                 	db	159
   172  0060DF  41                 	db	65
   173  0060E0  49                 	db	73
   174  0060E1  4F                 	db	79
   175  0060E2  55                 	db	85
   176  0060E3  A5                 	db	165
   177  0060E4  A5                 	db	165
   178  0060E5  A6                 	db	166
   179  0060E6  A7                 	db	167
   180  0060E7  A8                 	db	168
   181  0060E8  A9                 	db	169
   182  0060E9  AA                 	db	170
   183  0060EA  AB                 	db	171
   184  0060EB  AC                 	db	172
   185  0060EC  21                 	db	33
   186  0060ED  AE                 	db	174
   187  0060EE  AF                 	db	175
   188  0060EF  B0                 	db	176
   189  0060F0  B1                 	db	177
   190  0060F1  B2                 	db	178
   191  0060F2  B3                 	db	179
   192  0060F3  B4                 	db	180
   193  0060F4  B5                 	db	181
   194  0060F5  B6                 	db	182
   195  0060F6  B7                 	db	183
   196  0060F7  B8                 	db	184
   197  0060F8  B9                 	db	185
   198  0060F9  BA                 	db	186
   199  0060FA  BB                 	db	187
   200  0060FB  BC                 	db	188
   201  0060FC  BD                 	db	189
   202  0060FD  BE                 	db	190
   203  0060FE  BF                 	db	191
   204  0060FF  C0                 	db	192
   205  006100  C1                 	db	193
   206  006101  C2                 	db	194
   207  006102  C3                 	db	195
   208  006103  C4                 	db	196
   209  006104  C5                 	db	197
   210  006105  C6                 	db	198
   211  006106  C7                 	db	199
   212  006107  C8                 	db	200
   213  006108  C9                 	db	201
   214  006109  CA                 	db	202
   215  00610A  CB                 	db	203
   216  00610B  CC                 	db	204
   217  00610C  CD                 	db	205
   218  00610D  CE                 	db	206
   219  00610E  CF                 	db	207
   220  00610F  D0                 	db	208
   221  006110  D1                 	db	209
   222  006111  D2                 	db	210
   223  006112  D3                 	db	211
   224  006113  D4                 	db	212
   225  006114  D5                 	db	213
   226  006115  D6                 	db	214
   227  006116  D7                 	db	215
   228  006117  D8                 	db	216
   229  006118  D9                 	db	217
   230  006119  DA                 	db	218
   231  00611A  DB                 	db	219
   232  00611B  DC                 	db	220
   233  00611C  DD                 	db	221
   234  00611D  DE                 	db	222
   235  00611E  DF                 	db	223
   236  00611F  E0                 	db	224
   237  006120  E1                 	db	225
   238  006121  E2                 	db	226
   239  006122  E3                 	db	227
   240  006123  E4                 	db	228
   241  006124  E5                 	db	229
   242  006125  E6                 	db	230
   243  006126  E7                 	db	231
   244  006127  E8                 	db	232
   245  006128  E9                 	db	233
   246  006129  EA                 	db	234
   247  00612A  EB                 	db	235
   248  00612B  EC                 	db	236
   249  00612C  ED                 	db	237
   250  00612D  EE                 	db	238
   251  00612E  EF                 	db	239
   252  00612F  F0                 	db	240
   253  006130  F1                 	db	241
   254  006131  F2                 	db	242
   255  006132  F3                 	db	243
   256  006133  F4                 	db	244
   257  006134  F5                 	db	245
   258  006135  F6                 	db	246
   259  006136  F7                 	db	247
   260  006137  F8                 	db	248
   261  006138  F9                 	db	249
   262  006139  FA                 	db	250
   263  00613A  FB                 	db	251
   264  00613B  FC                 	db	252
   265  00613C  FD                 	db	253
   266  00613D  FE                 	db	254
   267  00613E  FF                 	db	255
   268  00613F                     __end_ofcreate_name@cvt:
   269                           	opt stack 0
   270  00613F                     leitura_chave@F3842:
   271                           	opt stack 0
   272  00613F  20                 	db	32
   273  006140  49                 	db	73
   274  006141  67                 	db	103
   275  006142  6E                 	db	110
   276  006143  20                 	db	32
   277  006144  4F                 	db	79
   278  006145  6E                 	db	110
   279  006146  00                 	db	0
   280  006147  00                 	db	0
   281  006148  00                 	db	0
   282  006149  00                 	db	0
   283  00614A  00                 	db	0
   284  00614B  00                 	db	0
   285  00614C  00                 	db	0
   286  00614D  00                 	db	0
   287  00614E  00                 	db	0
   288  00614F  00                 	db	0
   289  006150                     __end_ofleitura_chave@F3842:
   290                           	opt stack 0
   291  006150                     leitura_chave@F3840:
   292                           	opt stack 0
   293  006150  20                 	db	32
   294  006151  49                 	db	73
   295  006152  67                 	db	103
   296  006153  6E                 	db	110
   297  006154  20                 	db	32
   298  006155  43                 	db	67
   299  006156  72                 	db	114
   300  006157  61                 	db	97
   301  006158  6E                 	db	110
   302  006159  6B                 	db	107
   303  00615A  00                 	db	0
   304  00615B  00                 	db	0
   305  00615C  00                 	db	0
   306  00615D  00                 	db	0
   307  00615E  00                 	db	0
   308  00615F  00                 	db	0
   309  006160  00                 	db	0
   310  006161                     __end_ofleitura_chave@F3840:
   311                           	opt stack 0
   312  006161                     leitura_chave@F3838:
   313                           	opt stack 0
   314  006161  20                 	db	32
   315  006162  49                 	db	73
   316  006163  67                 	db	103
   317  006164  6E                 	db	110
   318  006165  20                 	db	32
   319  006166  4F                 	db	79
   320  006167  66                 	db	102
   321  006168  66                 	db	102
   322  006169  00                 	db	0
   323  00616A  00                 	db	0
   324  00616B  00                 	db	0
   325  00616C  00                 	db	0
   326  00616D  00                 	db	0
   327  00616E  00                 	db	0
   328  00616F  00                 	db	0
   329  006170  00                 	db	0
   330  006171  00                 	db	0
   331  006172                     __end_ofleitura_chave@F3838:
   332                           	opt stack 0
   333  006172                     mensagem_inicial@F4024:
   334                           	opt stack 0
   335  006172  20                 	db	32
   336  006173  31                 	db	49
   337  006174  38                 	db	56
   338  006175  2F                 	db	47
   339  006176  30                 	db	48
   340  006177  31                 	db	49
   341  006178  2F                 	db	47
   342  006179  32                 	db	50
   343  00617A  30                 	db	48
   344  00617B  32                 	db	50
   345  00617C  32                 	db	50
   346  00617D  20                 	db	32
   347  00617E  20                 	db	32
   348  00617F  20                 	db	32
   349  006180  00                 	db	0
   350  006181  00                 	db	0
   351  006182  00                 	db	0
   352  006183                     __end_ofmensagem_inicial@F4024:
   353                           	opt stack 0
   354  006183                     mensagem_inicial@F4022:
   355                           	opt stack 0
   356  006183  53                 	db	83
   357  006184  44                 	db	68
   358  006185  43                 	db	67
   359  006186  61                 	db	97
   360  006187  72                 	db	114
   361  006188  64                 	db	100
   362  006189  20                 	db	32
   363  00618A  49                 	db	73
   364  00618B  6E                 	db	110
   365  00618C  69                 	db	105
   366  00618D  74                 	db	116
   367  00618E  20                 	db	32
   368  00618F  20                 	db	32
   369  006190  20                 	db	32
   370  006191  00                 	db	0
   371  006192  00                 	db	0
   372  006193  00                 	db	0
   373  006194                     __end_ofmensagem_inicial@F4022:
   374                           	opt stack 0
   375  006194                     _dpowers:
   376                           	opt stack 0
   377  006194  0001               	dw	1
   378  006196  000A               	dw	10
   379  006198  0064               	dw	100
   380  00619A  03E8               	dw	1000
   381  00619C  2710               	dw	10000
   382  00619E                     __end_of_dpowers:
   383                           	opt stack 0
   384  0000                     _RCSTA	set	4011
   385  0000                     _TXSTA	set	4012
   386  0000                     _RCSTAbits	set	4011
   387  0000                     _TXREG	set	4013
   388  0000                     _SPBRG	set	4015
   389  0000                     _PIR2bits	set	4001
   390  0000                     _EECON2	set	4007
   391  0000                     _EECON1bits	set	4006
   392  0000                     _EEDATA	set	4008
   393  0000                     _EEADR	set	4009
   394  0000                     _PR2	set	4043
   395  0000                     _TMR2	set	4044
   396  0000                     _T2CON	set	4042
   397  0000                     _OSCCONbits	set	4051
   398  0000                     _TRISE	set	3990
   399  0000                     _TRISC	set	3988
   400  0000                     _TRISA	set	3986
   401  0000                     _TRISD	set	3989
   402  0000                     _LATB	set	3978
   403  0000                     _TRISB	set	3987
   404  0000                     _T0CONbits	set	4053
   405  0000                     _TMR0L	set	4054
   406  0000                     _TMR0H	set	4055
   407  0000                     _PIE1	set	3997
   408  0000                     _INTCON3	set	4080
   409  0000                     _INTCON2	set	4081
   410  0000                     _INTCON	set	4082
   411  0000                     _SPPCFG	set	3939
   412  0000                     _SPPCON	set	3941
   413  0000                     _T0CON	set	4053
   414  0000                     _PORTDbits	set	3971
   415  0000                     _TRISDbits	set	3989
   416  0000                     _PORTEbits	set	3972
   417  0000                     _PORTCbits	set	3970
   418  0000                     _ADRESL	set	4035
   419  0000                     _ADRESH	set	4036
   420  0000                     _ADCON0	set	4034
   421  0000                     _ADCON0bits	set	4034
   422  0000                     _ADCON2bits	set	4032
   423  0000                     _ADCON1bits	set	4033
   424  0000                     _ADCON1	set	4033
   425  0000                     _SSPBUF	set	4041
   426  0000                     _TRISCbits	set	3988
   427  0000                     _SSPSTATbits	set	4039
   428  0000                     _TRISBbits	set	3987
   429  0000                     _SSPCON1	set	4038
   430  0000                     _SSPSTAT	set	4039
   431  0000                     _SSPCON1bits	set	4038
   432  0000                     _PORTAbits	set	3968
   433  0000                     _TRISAbits	set	3986
   434  0000                     _PCL	set	4089
   435  0000                     _PCLATH	set	4090
   436  0000                     _INTCONbits	set	4082
   437  0000                     _RCREG	set	4014
   438  0000                     _LATBbits	set	3978
   439  0000                     _PIR1bits	set	3998
   440  0000                     _PIE1bits	set	3997
   441  0000                     _RCIF	set	31989
   442  0000                     _TRMT	set	32097
   443  0000                     _TXEN	set	32101
   444  0000                     _CREN	set	32092
   445  0000                     _SPEN	set	32095
   446  0000                     _SYNC	set	32100
   447  0000                     _BRGH	set	32098
   448  0000                     _TMR2IF	set	31985
   449  0000                     _INT0IE	set	32660
   450  0000                     _INT0IF	set	32657
   451  0000                     _T0IF	set	32658
   452  0000                     _TMR0IF	set	32658
   453  00619E  53                 	db	83	;'S'
   454  00619F  50                 	db	80	;'P'
   455  0061A0  49                 	db	73	;'I'
   456  0061A1  20                 	db	32
   457  0061A2  63                 	db	99	;'c'
   458  0061A3  6F                 	db	111	;'o'
   459  0061A4  6E                 	db	110	;'n'
   460  0061A5  66                 	db	102	;'f'
   461  0061A6  69                 	db	105	;'i'
   462  0061A7  67                 	db	103	;'g'
   463  0061A8  75                 	db	117	;'u'
   464  0061A9  72                 	db	114	;'r'
   465  0061AA  61                 	db	97	;'a'
   466  0061AB  64                 	db	100	;'d'
   467  0061AC  61                 	db	97	;'a'
   468  0061AD  21                 	db	33
   469  0061AE  00                 	db	0
   470  0061AF                     STR_4:
   471  0061AF  73                 	db	115	;'s'
   472  0061B0  79                 	db	121	;'y'
   473  0061B1  73                 	db	115	;'s'
   474  0061B2  74                 	db	116	;'t'
   475  0061B3  20                 	db	32
   476  0061B4  69                 	db	105	;'i'
   477  0061B5  6E                 	db	110	;'n'
   478  0061B6  69                 	db	105	;'i'
   479  0061B7  63                 	db	99	;'c'
   480  0061B8  69                 	db	105	;'i'
   481  0061B9  61                 	db	97	;'a'
   482  0061BA  6C                 	db	108	;'l'
   483  0061BB  69                 	db	105	;'i'
   484  0061BC  7A                 	db	122	;'z'
   485  0061BD  65                 	db	101	;'e'
   486  0061BE  64                 	db	100	;'d'
   487  0061BF  00                 	db	0
   488  0061C0  61                 	db	97	;'a'
   489  0061C1  62                 	db	98	;'b'
   490  0061C2  72                 	db	114	;'r'
   491  0061C3  69                 	db	105	;'i'
   492  0061C4  72                 	db	114	;'r'
   493  0061C5  20                 	db	32
   494  0061C6  6F                 	db	111	;'o'
   495  0061C7  20                 	db	32
   496  0061C8  61                 	db	97	;'a'
   497  0061C9  72                 	db	114	;'r'
   498  0061CA  71                 	db	113	;'q'
   499  0061CB  75                 	db	117	;'u'
   500  0061CC  69                 	db	105	;'i'
   501  0061CD  76                 	db	118	;'v'
   502  0061CE  6F                 	db	111	;'o'
   503  0061CF  00                 	db	0
   504  0061D0  6D                 	db	109	;'m'
   505  0061D1  6F                 	db	111	;'o'
   506  0061D2  75                 	db	117	;'u'
   507  0061D3  6E                 	db	110	;'n'
   508  0061D4  74                 	db	116	;'t'
   509  0061D5  20                 	db	32
   510  0061D6  66                 	db	102	;'f'
   511  0061D7  69                 	db	105	;'i'
   512  0061D8  6C                 	db	108	;'l'
   513  0061D9  65                 	db	101	;'e'
   514  0061DA  20                 	db	32
   515  0061DB  73                 	db	115	;'s'
   516  0061DC  79                 	db	121	;'y'
   517  0061DD  73                 	db	115	;'s'
   518  0061DE  00                 	db	0
   519  0061DF  42                 	db	66	;'B'
   520  0061E0  79                 	db	121	;'y'
   521  0061E1  74                 	db	116	;'t'
   522  0061E2  65                 	db	101	;'e'
   523  0061E3  73                 	db	115	;'s'
   524  0061E4  20                 	db	32
   525  0061E5  63                 	db	99	;'c'
   526  0061E6  72                 	db	114	;'r'
   527  0061E7  69                 	db	105	;'i'
   528  0061E8  61                 	db	97	;'a'
   529  0061E9  64                 	db	100	;'d'
   530  0061EA  6F                 	db	111	;'o'
   531  0061EB  21                 	db	33
   532  0061EC  00                 	db	0
   533  0061ED  43                 	db	67	;'C'
   534  0061EE  61                 	db	97	;'a'
   535  0061EF  72                 	db	114	;'r'
   536  0061F0  74                 	db	116	;'t'
   537  0061F1  E3                 	db	-29
   538  0061F2  6F                 	db	111	;'o'
   539  0061F3  20                 	db	32
   540  0061F4  41                 	db	65	;'A'
   541  0061F5  63                 	db	99	;'c'
   542  0061F6  65                 	db	101	;'e'
   543  0061F7  69                 	db	105	;'i'
   544  0061F8  74                 	db	116	;'t'
   545  0061F9  6F                 	db	111	;'o'
   546  0061FA  00                 	db	0
   547  0061FB                     STR_10:
   548  0061FB  45                 	db	69	;'E'
   549  0061FC  72                 	db	114	;'r'
   550  0061FD  72                 	db	114	;'r'
   551  0061FE  6F                 	db	111	;'o'
   552  0061FF  20                 	db	32
   553  006200  74                 	db	116	;'t'
   554  006201  65                 	db	101	;'e'
   555  006202  6E                 	db	110	;'n'
   556  006203  74                 	db	116	;'t'
   557  006204  61                 	db	97	;'a'
   558  006205  6E                 	db	110	;'n'
   559  006206  64                 	db	100	;'d'
   560  006207  6F                 	db	111	;'o'
   561  006208  00                 	db	0
   562  006209  41                 	db	65	;'A'
   563  00620A  74                 	db	116	;'t'
   564  00620B  74                 	db	116	;'t'
   565  00620C  65                 	db	101	;'e'
   566  00620D  6D                 	db	109	;'m'
   567  00620E  70                 	db	112	;'p'
   568  00620F  74                 	db	116	;'t'
   569  006210  69                 	db	105	;'i'
   570  006211  6E                 	db	110	;'n'
   571  006212  67                 	db	103	;'g'
   572  006213  20                 	db	32
   573  006214  74                 	db	116	;'t'
   574  006215  6F                 	db	111	;'o'
   575  006216  00                 	db	0
   576  006217  6C                 	db	108	;'l'
   577  006218  65                 	db	101	;'e'
   578  006219  72                 	db	114	;'r'
   579  00621A  20                 	db	32
   580  00621B  6F                 	db	111	;'o'
   581  00621C  20                 	db	32
   582  00621D  61                 	db	97	;'a'
   583  00621E  72                 	db	114	;'r'
   584  00621F  71                 	db	113	;'q'
   585  006220  75                 	db	117	;'u'
   586  006221  69                 	db	105	;'i'
   587  006222  76                 	db	118	;'v'
   588  006223  6F                 	db	111	;'o'
   589  006224  00                 	db	0
   590  006225  6C                 	db	108	;'l'
   591  006226  65                 	db	101	;'e'
   592  006227  6E                 	db	110	;'n'
   593  006228  64                 	db	100	;'d'
   594  006229  6F                 	db	111	;'o'
   595  00622A  20                 	db	32
   596  00622B  61                 	db	97	;'a'
   597  00622C  72                 	db	114	;'r'
   598  00622D  71                 	db	113	;'q'
   599  00622E  75                 	db	117	;'u'
   600  00622F  69                 	db	105	;'i'
   601  006230  76                 	db	118	;'v'
   602  006231  6F                 	db	111	;'o'
   603  006232  00                 	db	0
   604  006233  42                 	db	66	;'B'
   605  006234  6C                 	db	108	;'l'
   606  006235  6F                 	db	111	;'o'
   607  006236  63                 	db	99	;'c'
   608  006237  6F                 	db	111	;'o'
   609  006238  20                 	db	32
   610  006239  64                 	db	100	;'d'
   611  00623A  65                 	db	101	;'e'
   612  00623B  20                 	db	32
   613  00623C  35                 	db	53	;'5'
   614  00623D  31                 	db	49	;'1'
   615  00623E  32                 	db	50	;'2'
   616  00623F  00                 	db	0
   617  006240  53                 	db	83	;'S'
   618  006241  44                 	db	68	;'D'
   619  006242  43                 	db	67	;'C'
   620  006243  61                 	db	97	;'a'
   621  006244  72                 	db	114	;'r'
   622  006245  64                 	db	100	;'d'
   623  006246  20                 	db	32
   624  006247  65                 	db	101	;'e'
   625  006248  72                 	db	114	;'r'
   626  006249  72                 	db	114	;'r'
   627  00624A  6F                 	db	111	;'o'
   628  00624B  72                 	db	114	;'r'
   629  00624C  00                 	db	0
   630  00624D  63                 	db	99	;'c'
   631  00624E  68                 	db	104	;'h'
   632  00624F  65                 	db	101	;'e'
   633  006250  63                 	db	99	;'c'
   634  006251  6B                 	db	107	;'k'
   635  006252  2E                 	db	46
   636  006253  74                 	db	116	;'t'
   637  006254  78                 	db	120	;'x'
   638  006255  74                 	db	116	;'t'
   639  006256  00                 	db	0
   640  006257  45                 	db	69	;'E'
   641  006258  72                 	db	114	;'r'
   642  006259  72                 	db	114	;'r'
   643  00625A  6F                 	db	111	;'o'
   644  00625B  72                 	db	114	;'r'
   645  00625C  21                 	db	33
   646  00625D  21                 	db	33
   647  00625E  21                 	db	33
   648  00625F  00                 	db	0
   649  006260  25                 	db	37
   650  006261  64                 	db	100	;'d'
   651  006262  3A                 	db	58	;':'
   652  006263  25                 	db	37
   653  006264  64                 	db	100	;'d'
   654  006265  3A                 	db	58	;':'
   655  006266  25                 	db	37
   656  006267  64                 	db	100	;'d'
   657  006268  00                 	db	0
   658  006269  49                 	db	73	;'I'
   659  00626A  6E                 	db	110	;'n'
   660  00626B  69                 	db	105	;'i'
   661  00626C  74                 	db	116	;'t'
   662  00626D  20                 	db	32
   663  00626E  4F                 	db	79	;'O'
   664  00626F  4B                 	db	75	;'K'
   665  006270  00                 	db	0
   666  006271  53                 	db	83	;'S'
   667  006272  44                 	db	68	;'D'
   668  006273  5F                 	db	95	;'_'
   669  006274  43                 	db	67	;'C'
   670  006275  61                 	db	97	;'a'
   671  006276  72                 	db	114	;'r'
   672  006277  64                 	db	100	;'d'
   673  006278  00                 	db	0
   674  006279  0D                 	db	13
   675  00627A  0A                 	db	10
   676  00627B  00                 	db	0
   677  00627C  2E                 	db	46
   678  00627D  2E                 	db	46
   679  00627E  00                 	db	0
   680  0000                     
   681                           ; #config settings
   682  00627F  00                 	db	0	; dummy byte at the end
   683  0000                     
   684                           	psect	cinit
   685  000994                     __pcinit:
   686                           	opt stack 0
   687  000994                     start_initialization:
   688                           	opt stack 0
   689  000994                     __initialization:
   690                           	opt stack 0
   691                           
   692                           ; Initialize objects allocated to BANK0 (24 bytes)
   693                           ; load TBLPTR registers with __pidataBANK0
   694  000994  0E4C               	movlw	low __pidataBANK0
   695  000996  6EF6               	movwf	tblptrl,c
   696  000998  0E0F               	movlw	high __pidataBANK0
   697  00099A  6EF7               	movwf	tblptrh,c
   698  00099C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   699  00099E  6EF8               	movwf	tblptru,c
   700  0009A0  EE00  F0DA         	lfsr	0,__pdataBANK0
   701  0009A4  EE10 F018          	lfsr	1,24
   702  0009A8                     copy_data0:
   703  0009A8  0009               	tblrd		*+
   704  0009AA  CFF5 FFEE          	movff	tablat,postinc0
   705  0009AE  50E5               	movf	postdec1,w,c
   706  0009B0  50E1               	movf	fsr1l,w,c
   707  0009B2  E1FA               	bnz	copy_data0
   708                           
   709                           ; Clear objects allocated to BIGRAM (512 bytes)
   710  0009B4  EE02  F030         	lfsr	0,__pbssBIGRAM
   711  0009B8  EE12 F000          	lfsr	1,512
   712  0009BC                     clear_0:
   713  0009BC  6AEE               	clrf	postinc0,c
   714  0009BE  50E5               	movf	postdec1,w,c
   715  0009C0  50E1               	movf	fsr1l,w,c
   716  0009C2  E1FC               	bnz	clear_0
   717  0009C4  50E2               	movf	fsr1h,w,c
   718  0009C6  E1FA               	bnz	clear_0
   719                           
   720                           ; Clear objects allocated to BANK2 (48 bytes)
   721  0009C8  EE02  F000         	lfsr	0,__pbssBANK2
   722  0009CC  0E30               	movlw	48
   723  0009CE                     clear_1:
   724  0009CE  6AEE               	clrf	postinc0,c
   725  0009D0  06E8               	decf	wreg,f,c
   726  0009D2  E1FD               	bnz	clear_1
   727                           
   728                           ; Clear objects allocated to BANK1 (222 bytes)
   729  0009D4  EE01  F000         	lfsr	0,__pbssBANK1
   730  0009D8  0EDE               	movlw	222
   731  0009DA                     clear_2:
   732  0009DA  6AEE               	clrf	postinc0,c
   733  0009DC  06E8               	decf	wreg,f,c
   734  0009DE  E1FD               	bnz	clear_2
   735                           
   736                           ; Clear objects allocated to BANK0 (80 bytes)
   737  0009E0  EE00  F060         	lfsr	0,__pbssBANK0
   738  0009E4  0E50               	movlw	80
   739  0009E6                     clear_3:
   740  0009E6  6AEE               	clrf	postinc0,c
   741  0009E8  06E8               	decf	wreg,f,c
   742  0009EA  E1FD               	bnz	clear_3
   743                           
   744                           ; Clear objects allocated to COMRAM (40 bytes)
   745  0009EC  EE00  F037         	lfsr	0,__pbssCOMRAM
   746  0009F0  0E28               	movlw	40
   747  0009F2                     clear_4:
   748  0009F2  6AEE               	clrf	postinc0,c
   749  0009F4  06E8               	decf	wreg,f,c
   750  0009F6  E1FD               	bnz	clear_4
   751  0009F8                     end_of_initialization:
   752                           	opt stack 0
   753  0009F8                     __end_of__initialization:
   754                           	opt stack 0
   755  0009F8  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   756  0009FA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   757  0009FC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   758  0009FE  6EF8               	movwf	tblptru,c
   759  000A00  0100               	movlb	0
   760  000A02  EF34  F007         	goto	_main	;jump to C main() function
   761                           tblptru	equ	0xFF8
   762                           tblptrh	equ	0xFF7
   763                           tblptrl	equ	0xFF6
   764                           tablat	equ	0xFF5
   765                           postinc0	equ	0xFEE
   766                           wreg	equ	0xFE8
   767                           postdec1	equ	0xFE5
   768                           fsr1h	equ	0xFE2
   769                           fsr1l	equ	0xFE1
   770                           
   771                           	psect	bssCOMRAM
   772  000037                     __pbssCOMRAM:
   773                           	opt stack 0
   774  000037                     _info_chaves:
   775                           	opt stack 0
   776  000037                     	ds	7
   777  00003E                     _tempo_tarefa:
   778                           	opt stack 0
   779  00003E                     	ds	4
   780  000042                     _RCM_CODE:
   781                           	opt stack 0
   782  000042                     	ds	3
   783  000045                     _GGA_CODE:
   784                           	opt stack 0
   785  000045                     	ds	3
   786  000048                     _FatFs:
   787                           	opt stack 0
   788  000048                     	ds	2
   789  00004A                     _flag:
   790                           	opt stack 0
   791  00004A                     	ds	2
   792  00004C                     _rd:
   793                           	opt stack 0
   794  00004C                     	ds	2
   795  00004E                     _RCM_Index:
   796                           	opt stack 0
   797  00004E                     	ds	2
   798  000050                     _GGA_Index:
   799                           	opt stack 0
   800  000050                     	ds	2
   801  000052                     _timeout_tarefa:
   802                           	opt stack 0
   803  000052                     	ds	2
   804  000054                     _estado:
   805                           	opt stack 0
   806  000054                     	ds	1
   807  000055                     _s:
   808                           	opt stack 0
   809  000055                     	ds	1
   810  000056                     _Result:
   811                           	opt stack 0
   812  000056                     	ds	1
   813  000057                     _CommaCounter_RCM:
   814                           	opt stack 0
   815  000057                     	ds	1
   816  000058                     _IsItRCMString:
   817                           	opt stack 0
   818  000058                     	ds	1
   819  000059                     _IsItGGAString:
   820                           	opt stack 0
   821  000059                     	ds	1
   822  00005A                     _CommaCounter_GGA:
   823                           	opt stack 0
   824  00005A                     	ds	1
   825  00005B                     _E_W:
   826                           	opt stack 0
   827  00005B                     	ds	1
   828  00005C                     _N_S:
   829                           	opt stack 0
   830  00005C                     	ds	1
   831  00005D                     _tarefa_em_execucao:
   832                           	opt stack 0
   833  00005D                     	ds	1
   834  00005E                     _data_uart_recebe:
   835                           	opt stack 0
   836  00005E                     	ds	1
   837                           tblptru	equ	0xFF8
   838                           tblptrh	equ	0xFF7
   839                           tblptrl	equ	0xFF6
   840                           tablat	equ	0xFF5
   841                           postinc0	equ	0xFEE
   842                           wreg	equ	0xFE8
   843                           postdec1	equ	0xFE5
   844                           fsr1h	equ	0xFE2
   845                           fsr1l	equ	0xFE1
   846                           
   847                           	psect	bssBANK0
   848  000060                     __pbssBANK0:
   849                           	opt stack 0
   850  000060                     _valor_leitura_adc:
   851                           	opt stack 0
   852  000060                     	ds	38
   853  000086                     _RCM_Pointers:
   854                           	opt stack 0
   855  000086                     	ds	12
   856  000092                     _fileSize:
   857                           	opt stack 0
   858  000092                     	ds	4
   859  000096                     _tempo_backup:
   860                           	opt stack 0
   861  000096                     	ds	4
   862  00009A                     _p_tarefas:
   863                           	opt stack 0
   864  00009A                     	ds	4
   865  00009E                     timer_dois@flag:
   866                           	opt stack 0
   867  00009E                     	ds	1
   868  00009F                     _dado:
   869                           	opt stack 0
   870  00009F                     	ds	1
   871  0000A0                     _sinaliza_int_timer:
   872                           	opt stack 0
   873  0000A0                     	ds	1
   874  0000A1                     _Data_Buffer:
   875                           	opt stack 0
   876  0000A1                     	ds	15
   877                           tblptru	equ	0xFF8
   878                           tblptrh	equ	0xFF7
   879                           tblptrl	equ	0xFF6
   880                           tablat	equ	0xFF5
   881                           postinc0	equ	0xFEE
   882                           wreg	equ	0xFE8
   883                           postdec1	equ	0xFE5
   884                           fsr1h	equ	0xFE2
   885                           fsr1l	equ	0xFE1
   886                           
   887                           	psect	dataBANK0
   888  0000DA                     __pdataBANK0:
   889                           	opt stack 0
   890  0000DA                     _fileName:
   891                           	opt stack 0
   892  0000DA                     	ds	10
   893  0000E4                     escreve_inteiro_uart@F3956:
   894                           	opt stack 0
   895  0000E4                     	ds	7
   896  0000EB                     escreve_inteiro_lcd@F3966:
   897                           	opt stack 0
   898  0000EB                     	ds	7
   899                           tblptru	equ	0xFF8
   900                           tblptrh	equ	0xFF7
   901                           tblptrl	equ	0xFF6
   902                           tablat	equ	0xFF5
   903                           postinc0	equ	0xFEE
   904                           wreg	equ	0xFE8
   905                           postdec1	equ	0xFE5
   906                           fsr1h	equ	0xFE2
   907                           fsr1l	equ	0xFE1
   908                           
   909                           	psect	bssBANK1
   910  000100                     __pbssBANK1:
   911                           	opt stack 0
   912  000100                     _GGA_Buffer:
   913                           	opt stack 0
   914  000100                     	ds	80
   915  000150                     _RCM_Buffer:
   916                           	opt stack 0
   917  000150                     	ds	70
   918  000196                     _txt:
   919                           	opt stack 0
   920  000196                     	ds	20
   921  0001AA                     _GGA_Pointers:
   922                           	opt stack 0
   923  0001AA                     	ds	20
   924  0001BE                     _data_buffer_32:
   925                           	opt stack 0
   926  0001BE                     	ds	32
   927                           tblptru	equ	0xFF8
   928                           tblptrh	equ	0xFF7
   929                           tblptrl	equ	0xFF6
   930                           tablat	equ	0xFF5
   931                           postinc0	equ	0xFEE
   932                           wreg	equ	0xFE8
   933                           postdec1	equ	0xFE5
   934                           fsr1h	equ	0xFE2
   935                           fsr1l	equ	0xFE1
   936                           
   937                           	psect	bssBANK2
   938  000200                     __pbssBANK2:
   939                           	opt stack 0
   940  000200                     _folder:
   941                           	opt stack 0
   942  000200                     	ds	48
   943                           tblptru	equ	0xFF8
   944                           tblptrh	equ	0xFF7
   945                           tblptrl	equ	0xFF6
   946                           tablat	equ	0xFF5
   947                           postinc0	equ	0xFEE
   948                           wreg	equ	0xFE8
   949                           postdec1	equ	0xFE5
   950                           fsr1h	equ	0xFE2
   951                           fsr1l	equ	0xFE1
   952                           
   953                           	psect	bssBIGRAM
   954  000230                     __pbssBIGRAM:
   955                           	opt stack 0
   956  000230                     disk_readp@arr:
   957                           	opt stack 0
   958  000230                     	ds	512
   959                           tblptru	equ	0xFF8
   960                           tblptrh	equ	0xFF7
   961                           tblptrl	equ	0xFF6
   962                           tablat	equ	0xFF5
   963                           postinc0	equ	0xFEE
   964                           wreg	equ	0xFE8
   965                           postdec1	equ	0xFE5
   966                           fsr1h	equ	0xFE2
   967                           fsr1l	equ	0xFE1
   968                           
   969                           	psect	cstackBANK0
   970  0000B0                     __pcstackBANK0:
   971                           	opt stack 0
   972  0000B0                     ?_leitura_adc:
   973                           	opt stack 0
   974  0000B0                     ?___aldiv:
   975                           	opt stack 0
   976  0000B0                     envia_dados_shrc@contador:
   977                           	opt stack 0
   978  0000B0                     delay@contador_ext:
   979                           	opt stack 0
   980  0000B0                     write_timer_zero@timer0:
   981                           	opt stack 0
   982  0000B0                     ___aldiv@dividend:
   983                           	opt stack 0
   984                           
   985                           ; 4 bytes @ 0x0
   986  0000B0                     	ds	1
   987  0000B1                     envia_dados_shrc@data_to_shrc:
   988                           	opt stack 0
   989  0000B1                     delay@contador_int:
   990                           	opt stack 0
   991                           
   992                           ; 1 bytes @ 0x1
   993  0000B1                     	ds	1
   994  0000B2                     ??_leitura_adc:
   995  0000B2                     escalonador@cont:
   996                           	opt stack 0
   997  0000B2                     escreve_cmd_lcd@comando:
   998                           	opt stack 0
   999  0000B2                     endereco_cursor_lcd@endereco:
  1000                           	opt stack 0
  1001  0000B2                     escreve_caractere_lcd@data:
  1002                           	opt stack 0
  1003  0000B2                     write_timer_zero@timer:
  1004                           	opt stack 0
  1005                           
  1006                           ; 2 bytes @ 0x2
  1007  0000B2                     	ds	1
  1008  0000B3                     ??_init_lcd:
  1009  0000B3                     posicao_cursor_lcd@coluna:
  1010                           	opt stack 0
  1011  0000B3                     escreve_frase_ram_lcd@buffer:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0x3
  1015  0000B3                     	ds	1
  1016  0000B4                     posicao_cursor_lcd@linha:
  1017                           	opt stack 0
  1018  0000B4                     ___aldiv@divisor:
  1019                           	opt stack 0
  1020                           
  1021                           ; 4 bytes @ 0x4
  1022  0000B4                     	ds	1
  1023  0000B5                     posicao_cursor_lcd@endereco:
  1024                           	opt stack 0
  1025                           
  1026                           ; 1 bytes @ 0x5
  1027  0000B5                     	ds	1
  1028  0000B6                     ??_mensagem_inicial:
  1029  0000B6                     leitura_adc@canal:
  1030                           	opt stack 0
  1031                           
  1032                           ; 1 bytes @ 0x6
  1033  0000B6                     	ds	1
  1034  0000B7                     ??_leitura_continua_adc:
  1035                           
  1036                           ; 1 bytes @ 0x7
  1037  0000B7                     	ds	1
  1038  0000B8                     ___aldiv@counter:
  1039                           	opt stack 0
  1040  0000B8                     mensagem_inicial@msg_linha_um:
  1041                           	opt stack 0
  1042                           
  1043                           ; 17 bytes @ 0x8
  1044  0000B8                     	ds	1
  1045  0000B9                     ___aldiv@sign:
  1046                           	opt stack 0
  1047                           
  1048                           ; 1 bytes @ 0x9
  1049  0000B9                     	ds	1
  1050  0000BA                     ___aldiv@quotient:
  1051                           	opt stack 0
  1052                           
  1053                           ; 4 bytes @ 0xA
  1054  0000BA                     	ds	3
  1055  0000BD                     leitura_continua_adc@cont_int:
  1056                           	opt stack 0
  1057                           
  1058                           ; 1 bytes @ 0xD
  1059  0000BD                     	ds	1
  1060  0000BE                     leitura_continua_adc@cont:
  1061                           	opt stack 0
  1062  0000BE                     configura_baudrate_uart@baudrate:
  1063                           	opt stack 0
  1064                           
  1065                           ; 4 bytes @ 0xE
  1066  0000BE                     	ds	4
  1067  0000C2                     ??_configura_baudrate_uart:
  1068                           
  1069                           ; 1 bytes @ 0x12
  1070  0000C2                     	ds	7
  1071  0000C9                     mensagem_inicial@msg_dois:
  1072                           	opt stack 0
  1073                           
  1074                           ; 17 bytes @ 0x19
  1075  0000C9                     	ds	1
  1076  0000CA                     configura_baudrate_uart@x:
  1077                           	opt stack 0
  1078                           
  1079                           ; 2 bytes @ 0x1A
  1080  0000CA                     	ds	2
  1081  0000CC                     
  1082                           ; 1 bytes @ 0x1C
  1083  0000CC                     	ds	14
  1084  0000DA                     tblptru	equ	0xFF8
  1085                           tblptrh	equ	0xFF7
  1086                           tblptrl	equ	0xFF6
  1087                           tablat	equ	0xFF5
  1088                           postinc0	equ	0xFEE
  1089                           wreg	equ	0xFE8
  1090                           postdec1	equ	0xFE5
  1091                           fsr1h	equ	0xFE2
  1092                           fsr1l	equ	0xFE1
  1093                           
  1094                           ; 1 bytes @ 0x2A
  1095                           
  1096                           	psect	cstackCOMRAM
  1097  000001                     __pcstackCOMRAM:
  1098                           	opt stack 0
  1099  000001                     ?___lwdiv:
  1100                           	opt stack 0
  1101  000001                     ?___lwmod:
  1102                           	opt stack 0
  1103  000001                     tratamento_uart@received_char:
  1104                           	opt stack 0
  1105  000001                     i2delay@contador_ext:
  1106                           	opt stack 0
  1107  000001                     ___lwdiv@dividend:
  1108                           	opt stack 0
  1109  000001                     ___lwmod@dividend:
  1110                           	opt stack 0
  1111  000001                     i2write_timer_zero@timer0:
  1112                           	opt stack 0
  1113                           
  1114                           ; 2 bytes @ 0x0
  1115  000001                     	ds	1
  1116  000002                     i2delay@contador_int:
  1117                           	opt stack 0
  1118                           
  1119                           ; 1 bytes @ 0x1
  1120  000002                     	ds	1
  1121  000003                     i2endereco_cursor_lcd@endereco:
  1122                           	opt stack 0
  1123  000003                     i2escreve_caractere_lcd@data:
  1124                           	opt stack 0
  1125  000003                     ___lwdiv@divisor:
  1126                           	opt stack 0
  1127  000003                     ___lwmod@divisor:
  1128                           	opt stack 0
  1129  000003                     i2write_timer_zero@timer:
  1130                           	opt stack 0
  1131                           
  1132                           ; 2 bytes @ 0x2
  1133  000003                     	ds	1
  1134  000004                     i2posicao_cursor_lcd@coluna:
  1135                           	opt stack 0
  1136  000004                     i2escreve_frase_ram_lcd@buffer:
  1137                           	opt stack 0
  1138                           
  1139                           ; 2 bytes @ 0x3
  1140  000004                     	ds	1
  1141  000005                     ___lwmod@counter:
  1142                           	opt stack 0
  1143  000005                     i2posicao_cursor_lcd@linha:
  1144                           	opt stack 0
  1145  000005                     ___lwdiv@quotient:
  1146                           	opt stack 0
  1147                           
  1148                           ; 2 bytes @ 0x4
  1149  000005                     	ds	1
  1150  000006                     i2posicao_cursor_lcd@endereco:
  1151                           	opt stack 0
  1152                           
  1153                           ; 1 bytes @ 0x5
  1154  000006                     	ds	1
  1155  000007                     ___lwdiv@counter:
  1156                           	opt stack 0
  1157                           
  1158                           ; 1 bytes @ 0x6
  1159  000007                     	ds	1
  1160  000008                     utoa@buf:
  1161                           	opt stack 0
  1162                           
  1163                           ; 2 bytes @ 0x7
  1164  000008                     	ds	2
  1165  00000A                     utoa@val:
  1166                           	opt stack 0
  1167                           
  1168                           ; 2 bytes @ 0x9
  1169  00000A                     	ds	2
  1170  00000C                     utoa@base:
  1171                           	opt stack 0
  1172                           
  1173                           ; 2 bytes @ 0xB
  1174  00000C                     	ds	2
  1175  00000E                     utoa@v:
  1176                           	opt stack 0
  1177                           
  1178                           ; 2 bytes @ 0xD
  1179  00000E                     	ds	2
  1180  000010                     utoa@c:
  1181                           	opt stack 0
  1182                           
  1183                           ; 1 bytes @ 0xF
  1184  000010                     	ds	1
  1185  000011                     itoa@buf:
  1186                           	opt stack 0
  1187                           
  1188                           ; 2 bytes @ 0x10
  1189  000011                     	ds	2
  1190  000013                     itoa@val:
  1191                           	opt stack 0
  1192                           
  1193                           ; 2 bytes @ 0x12
  1194  000013                     	ds	2
  1195  000015                     itoa@base:
  1196                           	opt stack 0
  1197                           
  1198                           ; 2 bytes @ 0x14
  1199  000015                     	ds	2
  1200  000017                     itoa@cp:
  1201                           	opt stack 0
  1202                           
  1203                           ; 2 bytes @ 0x16
  1204  000017                     	ds	2
  1205  000019                     escreve_inteiro_lcd@valor:
  1206                           	opt stack 0
  1207                           
  1208                           ; 2 bytes @ 0x18
  1209  000019                     	ds	2
  1210  00001B                     escreve_inteiro_lcd@texto:
  1211                           	opt stack 0
  1212                           
  1213                           ; 7 bytes @ 0x1A
  1214  00001B                     	ds	7
  1215  000022                     ??_isr:
  1216                           
  1217                           ; 1 bytes @ 0x21
  1218  000022                     	ds	20
  1219  000036                     isr@cont:
  1220                           	opt stack 0
  1221                           
  1222                           ; 1 bytes @ 0x35
  1223  000036                     	ds	1
  1224                           tblptru	equ	0xFF8
  1225                           tblptrh	equ	0xFF7
  1226                           tblptrl	equ	0xFF6
  1227                           tablat	equ	0xFF5
  1228                           postinc0	equ	0xFEE
  1229                           wreg	equ	0xFE8
  1230                           postdec1	equ	0xFE5
  1231                           fsr1h	equ	0xFE2
  1232                           fsr1l	equ	0xFE1
  1233                           
  1234 ;;
  1235 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1236 ;;
  1237 ;; *************** function _main *****************
  1238 ;; Defined at:
  1239 ;;		line 207 in file "main.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1253 ;;      Params:         0       0       0       0       0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1256 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1257 ;;Total ram usage:        0 bytes
  1258 ;; Hardware stack levels required when called:    9
  1259 ;; This function calls:
  1260 ;;		_controle_shrc
  1261 ;;		_escalonador
  1262 ;;		_inicializa_shrc
  1263 ;;		_inicializa_tarefas
  1264 ;;		_inicializa_uart
  1265 ;;		_init_hardware
  1266 ;;		_init_lcd
  1267 ;;		_leitura_chaves_sistema
  1268 ;;		_leitura_continua_adc
  1269 ;;		_mensagem_inicial
  1270 ;; This function is called by:
  1271 ;;		Startup code after reset
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text0
  1276  000E68                     __ptext0:
  1277                           	opt stack 0
  1278  000E68                     _main:
  1279                           	opt stack 22
  1280                           
  1281                           ;main.c: 209: init_hardware();
  1282                           
  1283                           ;incstack = 0
  1284  000E68  ECBE  F007         	call	_init_hardware	;wreg free
  1285                           
  1286                           ;main.c: 210: inicializa_uart();
  1287  000E6C  EC64  F007         	call	_inicializa_uart	;wreg free
  1288                           
  1289                           ;main.c: 211: init_lcd();
  1290  000E70  EC73  F003         	call	_init_lcd	;wreg free
  1291                           
  1292                           ;main.c: 212: inicializa_shrc();
  1293  000E74  EC08  F008         	call	_inicializa_shrc	;wreg free
  1294                           
  1295                           ;main.c: 214: mensagem_inicial();
  1296  000E78  EC0C  F004         	call	_mensagem_inicial	;wreg free
  1297                           
  1298                           ;main.c: 215: inicializa_tarefas();
  1299  000E7C  EC88  F007         	call	_inicializa_tarefas	;wreg free
  1300  000E80                     
  1301                           ;main.c: 220: {
  1302                           ;main.c: 222: if ((sinaliza_int_timer == 1) && (2))
  1303  000E80  0100               	movlb	0	; () banked
  1304  000E82  05A0               	decf	_sinaliza_int_timer& (0+255),w,b
  1305  000E84  A4D8               	btfss	status,2,c
  1306  000E86  D004               	goto	l98
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;main.c: 223: {
  1310                           ;main.c: 224: sinaliza_int_timer = 0;
  1311  000E88  0E00               	movlw	0
  1312  000E8A  6FA0               	movwf	_sinaliza_int_timer& (0+255),b
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;main.c: 225: escalonador();
  1316  000E8C  ECCF  F002         	call	_escalonador	;wreg free
  1317  000E90                     l98:
  1318                           
  1319                           ;main.c: 226: }
  1320                           ;main.c: 227: leitura_chaves_sistema();
  1321  000E90  EC17  F007         	call	_leitura_chaves_sistema	;wreg free
  1322                           
  1323                           ;main.c: 228: controle_shrc();
  1324  000E94  ECF7  F007         	call	_controle_shrc	;wreg free
  1325                           
  1326                           ;main.c: 229: leitura_continua_adc();
  1327  000E98  EC4C  F001         	call	_leitura_continua_adc	;wreg free
  1328  000E9C  D7F1               	goto	l97
  1329  000E9E                     __end_of_main:
  1330                           	opt stack 0
  1331                           tblptru	equ	0xFF8
  1332                           tblptrh	equ	0xFF7
  1333                           tblptrl	equ	0xFF6
  1334                           tablat	equ	0xFF5
  1335                           postinc0	equ	0xFEE
  1336                           wreg	equ	0xFE8
  1337                           postdec1	equ	0xFE5
  1338                           fsr1h	equ	0xFE2
  1339                           fsr1l	equ	0xFE1
  1340                           status	equ	0xFD8
  1341                           
  1342 ;; *************** function _mensagem_inicial *****************
  1343 ;; Defined at:
  1344 ;;		line 239 in file "main.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;		None
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  msg_dois       17   25[BANK0 ] const unsigned char [17]
  1349 ;;  msg_linha_um   17    8[BANK0 ] const unsigned char [17]
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1359 ;;      Params:         0       0       0       0       0       0       0       0       0
  1360 ;;      Locals:         0      34       0       0       0       0       0       0       0
  1361 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1362 ;;      Totals:         0      36       0       0       0       0       0       0       0
  1363 ;;Total ram usage:       36 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    8
  1366 ;; This function calls:
  1367 ;;		_escreve_cmd_lcd
  1368 ;;		_escreve_frase_ram_lcd
  1369 ;;		_posicao_cursor_lcd
  1370 ;; This function is called by:
  1371 ;;		_main
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	text1
  1376  000818                     __ptext1:
  1377                           	opt stack 0
  1378  000818                     _mensagem_inicial:
  1379                           	opt stack 22
  1380                           
  1381                           ;main.c: 241: const unsigned char msg_linha_um[17] = "SDCard Init   ";
  1382                           
  1383                           ;incstack = 0
  1384  000818  0E83               	movlw	low mensagem_inicial@F4022
  1385  00081A  6EF6               	movwf	tblptrl,c
  1386  00081C                     	if	1	;There is more than 1 active tblptr byte
  1387  00081C  0E61               	movlw	high mensagem_inicial@F4022
  1388  00081E  6EF7               	movwf	tblptrh,c
  1389  000820                     	endif
  1390  000820                     	if	0	;There are less than 3 active tblptr bytes
  1391  000820                     	endif
  1392  000820  EE20  F0B8         	lfsr	2,mensagem_inicial@msg_linha_um
  1393  000824  0E10               	movlw	16
  1394  000826                     u5610:
  1395  000826  0009               	tblrd		*+
  1396  000828  CFF5 FFDE          	movff	tablat,postinc2
  1397  00082C  06E8               	decf	wreg,f,c
  1398  00082E  E2FB               	bc	u5610
  1399                           
  1400                           ;main.c: 242: const unsigned char msg_dois[17] = " 18/01/2022   ";
  1401  000830  0E72               	movlw	low mensagem_inicial@F4024
  1402  000832  6EF6               	movwf	tblptrl,c
  1403  000834                     	if	1	;There is more than 1 active tblptr byte
  1404  000834  0E61               	movlw	high mensagem_inicial@F4024
  1405  000836  6EF7               	movwf	tblptrh,c
  1406  000838                     	endif
  1407  000838                     	if	0	;There are less than 3 active tblptr bytes
  1408  000838                     	endif
  1409  000838  EE20  F0C9         	lfsr	2,mensagem_inicial@msg_dois
  1410  00083C  0E10               	movlw	16
  1411  00083E                     u5620:
  1412  00083E  0009               	tblrd		*+
  1413  000840  CFF5 FFDE          	movff	tablat,postinc2
  1414  000844  06E8               	decf	wreg,f,c
  1415  000846  E2FB               	bc	u5620
  1416                           
  1417                           ;main.c: 244: posicao_cursor_lcd(1,0);
  1418  000848  0E00               	movlw	0
  1419  00084A  0100               	movlb	0	; () banked
  1420  00084C  6FB3               	movwf	posicao_cursor_lcd@coluna& (0+255),b
  1421  00084E  0E01               	movlw	1
  1422  000850  EC4F  F004         	call	_posicao_cursor_lcd
  1423                           
  1424                           ;main.c: 245: escreve_frase_ram_lcd(msg_linha_um);
  1425  000854  0EB8               	movlw	low mensagem_inicial@msg_linha_um
  1426  000856  0100               	movlb	0	; () banked
  1427  000858  6FB3               	movwf	escreve_frase_ram_lcd@buffer& (0+255),b
  1428  00085A  0E00               	movlw	high mensagem_inicial@msg_linha_um
  1429  00085C  6FB4               	movwf	(escreve_frase_ram_lcd@buffer+1)& (0+255),b
  1430  00085E  EC16  F006         	call	_escreve_frase_ram_lcd	;wreg free
  1431                           
  1432                           ;main.c: 247: posicao_cursor_lcd(2,0);
  1433  000862  0E00               	movlw	0
  1434  000864  0100               	movlb	0	; () banked
  1435  000866  6FB3               	movwf	posicao_cursor_lcd@coluna& (0+255),b
  1436  000868  0E02               	movlw	2
  1437  00086A  EC4F  F004         	call	_posicao_cursor_lcd
  1438                           
  1439                           ;main.c: 248: escreve_frase_ram_lcd(msg_dois);
  1440  00086E  0EC9               	movlw	low mensagem_inicial@msg_dois
  1441  000870  0100               	movlb	0	; () banked
  1442  000872  6FB3               	movwf	escreve_frase_ram_lcd@buffer& (0+255),b
  1443  000874  0E00               	movlw	high mensagem_inicial@msg_dois
  1444  000876  6FB4               	movwf	(escreve_frase_ram_lcd@buffer+1)& (0+255),b
  1445  000878  EC16  F006         	call	_escreve_frase_ram_lcd	;wreg free
  1446                           
  1447                           ;main.c: 250: _delay((unsigned long)((1000)*(48000000/4000.0)));
  1448  00087C  0E3D               	movlw	61
  1449  00087E  0100               	movlb	0	; () banked
  1450  000880  6FB7               	movwf	(??_mensagem_inicial+1)& (0+255),b
  1451  000882  0EE1               	movlw	225
  1452  000884  6FB6               	movwf	??_mensagem_inicial& (0+255),b
  1453  000886  0E3F               	movlw	63
  1454  000888                     u8347:
  1455  000888  2EE8               	decfsz	wreg,f,c
  1456  00088A  D7FE               	bra	u8347
  1457  00088C  2FB6               	decfsz	??_mensagem_inicial& (0+255),f,b
  1458  00088E  D7FC               	bra	u8347
  1459  000890  2FB7               	decfsz	(??_mensagem_inicial+1)& (0+255),f,b
  1460  000892  D7FA               	bra	u8347
  1461  000894  D000               	nop2	
  1462                           
  1463                           ;main.c: 251: escreve_cmd_lcd(0b00000001);
  1464  000896  0E01               	movlw	1
  1465  000898  ECC2  F003         	call	_escreve_cmd_lcd
  1466  00089C  0012               	return		;funcret
  1467  00089E                     __end_of_mensagem_inicial:
  1468                           	opt stack 0
  1469                           tblptru	equ	0xFF8
  1470                           tblptrh	equ	0xFF7
  1471                           tblptrl	equ	0xFF6
  1472                           tablat	equ	0xFF5
  1473                           postinc0	equ	0xFEE
  1474                           wreg	equ	0xFE8
  1475                           postdec1	equ	0xFE5
  1476                           fsr1h	equ	0xFE2
  1477                           fsr1l	equ	0xFE1
  1478                           postinc2	equ	0xFDE
  1479                           status	equ	0xFD8
  1480                           
  1481 ;; *************** function _posicao_cursor_lcd *****************
  1482 ;; Defined at:
  1483 ;;		line 271 in file "bibliotecas/display_lcd.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;  linha           1    wreg     unsigned char 
  1486 ;;  coluna          1    3[BANK0 ] unsigned char 
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;  linha           1    4[BANK0 ] unsigned char 
  1489 ;;  endereco        1    5[BANK0 ] unsigned char 
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1499 ;;      Params:         0       1       0       0       0       0       0       0       0
  1500 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1502 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1503 ;;Total ram usage:        3 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    7
  1506 ;; This function calls:
  1507 ;;		_endereco_cursor_lcd
  1508 ;; This function is called by:
  1509 ;;		_mensagem_inicial
  1510 ;;		_SDCard
  1511 ;;		_inicializa_SPI
  1512 ;;		_leitura_chave
  1513 ;;		_disk_initialize
  1514 ;;		_disk_readp
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           	psect	text2
  1519  00089E                     __ptext2:
  1520                           	opt stack 0
  1521  00089E                     _posicao_cursor_lcd:
  1522                           	opt stack 22
  1523                           
  1524                           ;incstack = 0
  1525                           ;posicao_cursor_lcd@linha stored from wreg
  1526  00089E  0100               	movlb	0	; () banked
  1527  0008A0  6FB4               	movwf	posicao_cursor_lcd@linha& (0+255),b
  1528                           
  1529                           ;display_lcd.c: 273: unsigned char endereco = 0x00;
  1530  0008A2  0E00               	movlw	0
  1531  0008A4  0100               	movlb	0	; () banked
  1532  0008A6  6FB5               	movwf	posicao_cursor_lcd@endereco& (0+255),b
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;display_lcd.c: 275: if(coluna <= 0x10U)
  1536  0008A8  0E11               	movlw	17
  1537  0008AA  61B3               	cpfslt	posicao_cursor_lcd@coluna& (0+255),b
  1538  0008AC  D034               	goto	l677
  1539  0008AE  D022               	goto	l678
  1540  0008B0                     l679:
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;display_lcd.c: 282: endereco = 0x00U + coluna;
  1544  0008B0  C0B3  F0B5         	movff	posicao_cursor_lcd@coluna,posicao_cursor_lcd@endereco
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;display_lcd.c: 283: endereco_cursor_lcd(endereco);
  1548  0008B4  51B5               	movf	posicao_cursor_lcd@endereco& (0+255),w,b
  1549  0008B6  EC3C  F005         	call	_endereco_cursor_lcd
  1550                           
  1551                           ;display_lcd.c: 284: break;
  1552  0008BA  D02A               	goto	l680
  1553  0008BC                     
  1554                           ;display_lcd.c: 287: endereco = 0x40U + coluna;
  1555  0008BC  0100               	movlb	0	; () banked
  1556  0008BE  51B3               	movf	posicao_cursor_lcd@coluna& (0+255),w,b
  1557  0008C0  0F40               	addlw	64
  1558  0008C2  6FB5               	movwf	posicao_cursor_lcd@endereco& (0+255),b
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;display_lcd.c: 288: endereco_cursor_lcd(endereco);
  1562  0008C4  51B5               	movf	posicao_cursor_lcd@endereco& (0+255),w,b
  1563  0008C6  EC3C  F005         	call	_endereco_cursor_lcd
  1564                           
  1565                           ;display_lcd.c: 289: break;
  1566  0008CA  D022               	goto	l680
  1567  0008CC                     
  1568                           ;display_lcd.c: 292: endereco = 0x14U + coluna;
  1569  0008CC  0100               	movlb	0	; () banked
  1570  0008CE  51B3               	movf	posicao_cursor_lcd@coluna& (0+255),w,b
  1571  0008D0  0F14               	addlw	20
  1572  0008D2  6FB5               	movwf	posicao_cursor_lcd@endereco& (0+255),b
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;display_lcd.c: 293: endereco_cursor_lcd(endereco);
  1576  0008D4  51B5               	movf	posicao_cursor_lcd@endereco& (0+255),w,b
  1577  0008D6  EC3C  F005         	call	_endereco_cursor_lcd
  1578                           
  1579                           ;display_lcd.c: 294: break;
  1580  0008DA  D01A               	goto	l680
  1581  0008DC                     
  1582                           ;display_lcd.c: 297: endereco = 0x54U + coluna;
  1583  0008DC  0100               	movlb	0	; () banked
  1584  0008DE  51B3               	movf	posicao_cursor_lcd@coluna& (0+255),w,b
  1585  0008E0  0F54               	addlw	84
  1586  0008E2  6FB5               	movwf	posicao_cursor_lcd@endereco& (0+255),b
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;display_lcd.c: 298: endereco_cursor_lcd(endereco);
  1590  0008E4  51B5               	movf	posicao_cursor_lcd@endereco& (0+255),w,b
  1591  0008E6  EC3C  F005         	call	_endereco_cursor_lcd
  1592                           
  1593                           ;display_lcd.c: 299: break;
  1594  0008EA  D012               	goto	l680
  1595  0008EC                     
  1596                           ;display_lcd.c: 302: endereco = 0x00U;
  1597  0008EC  0E00               	movlw	0
  1598  0008EE  0100               	movlb	0	; () banked
  1599  0008F0  6FB5               	movwf	posicao_cursor_lcd@endereco& (0+255),b
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;display_lcd.c: 304: }
  1603                           
  1604                           ;display_lcd.c: 303: break;
  1605  0008F2  D00E               	goto	l680
  1606  0008F4                     l678:
  1607                           
  1608                           ; BSR set to: 0
  1609                           
  1610                           ; BSR set to: 0
  1611  0008F4  51B4               	movf	posicao_cursor_lcd@linha& (0+255),w,b
  1612                           
  1613                           ; Switch size 1, requested type "space"
  1614                           ; Number of cases is 4, Range of values is 1 to 4
  1615                           ; switch strategies available:
  1616                           ; Name         Instructions Cycles
  1617                           ; simple_byte           13     7 (average)
  1618                           ;	Chosen strategy is simple_byte
  1619  0008F6  0A01               	xorlw	1	; case 1
  1620  0008F8  B4D8               	btfsc	status,2,c
  1621  0008FA  D7DA               	goto	l679
  1622  0008FC  0A03               	xorlw	3	; case 2
  1623  0008FE  B4D8               	btfsc	status,2,c
  1624  000900  D7DD               	goto	l681
  1625  000902  0A01               	xorlw	1	; case 3
  1626  000904  B4D8               	btfsc	status,2,c
  1627  000906  D7E2               	goto	l682
  1628  000908  0A07               	xorlw	7	; case 4
  1629  00090A  B4D8               	btfsc	status,2,c
  1630  00090C  D7E7               	goto	l683
  1631  00090E  D7EE               	goto	l684
  1632  000910                     l680:
  1633                           
  1634                           ;display_lcd.c: 306: coluna++;
  1635                           
  1636                           ; BSR set to: 0
  1637  000910  0100               	movlb	0	; () banked
  1638  000912  2BB3               	incf	posicao_cursor_lcd@coluna& (0+255),f,b
  1639                           
  1640                           ;display_lcd.c: 307: }
  1641  000914  0012               	return	
  1642  000916                     l677:
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;display_lcd.c: 308: else
  1646                           ;display_lcd.c: 309: {
  1647                           ;display_lcd.c: 310: endereco = 0x00U;
  1648                           
  1649                           ; BSR set to: 0
  1650  000916  0E00               	movlw	0
  1651  000918  6FB5               	movwf	posicao_cursor_lcd@endereco& (0+255),b
  1652  00091A  0012               	return	
  1653  00091C                     __end_of_posicao_cursor_lcd:
  1654                           	opt stack 0
  1655                           tblptru	equ	0xFF8
  1656                           tblptrh	equ	0xFF7
  1657                           tblptrl	equ	0xFF6
  1658                           tablat	equ	0xFF5
  1659                           postinc0	equ	0xFEE
  1660                           wreg	equ	0xFE8
  1661                           postdec1	equ	0xFE5
  1662                           fsr1h	equ	0xFE2
  1663                           fsr1l	equ	0xFE1
  1664                           postinc2	equ	0xFDE
  1665                           status	equ	0xFD8
  1666                           
  1667 ;; *************** function _endereco_cursor_lcd *****************
  1668 ;; Defined at:
  1669 ;;		line 218 in file "bibliotecas/display_lcd.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  endereco        1    wreg     unsigned char 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  endereco        1    2[BANK0 ] unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1683 ;;      Params:         0       0       0       0       0       0       0       0       0
  1684 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1686 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1687 ;;Total ram usage:        1 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    6
  1690 ;; This function calls:
  1691 ;;		_delay
  1692 ;; This function is called by:
  1693 ;;		_posicao_cursor_lcd
  1694 ;;		_cria_caractere_lcd
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           	psect	text3
  1699  000A78                     __ptext3:
  1700                           	opt stack 0
  1701  000A78                     _endereco_cursor_lcd:
  1702                           	opt stack 22
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;incstack = 0
  1706                           ;endereco_cursor_lcd@endereco stored from wreg
  1707  000A78  0100               	movlb	0	; () banked
  1708  000A7A  6FB2               	movwf	endereco_cursor_lcd@endereco& (0+255),b
  1709                           
  1710                           ;display_lcd.c: 221: PORTDbits.RD2 = 0;
  1711  000A7C  9483               	bcf	3971,2,c	;volatile
  1712                           
  1713                           ;display_lcd.c: 222: PORTDbits.RD1 = 0;
  1714  000A7E  9283               	bcf	3971,1,c	;volatile
  1715                           
  1716                           ;display_lcd.c: 223: PORTDbits.RD0 = 0;
  1717  000A80  9083               	bcf	3971,0,c	;volatile
  1718                           
  1719                           ;display_lcd.c: 226: PORTDbits.RD7 = 1;
  1720  000A82  8E83               	bsf	3971,7,c	;volatile
  1721                           
  1722                           ;display_lcd.c: 227: if(endereco&0b00010000){PORTDbits.RD4=1;}
  1723  000A84  0100               	movlb	0	; () banked
  1724  000A86  A9B2               	btfss	endereco_cursor_lcd@endereco& (0+255),4,b
  1725  000A88  D002               	goto	l660
  1726                           
  1727                           ; BSR set to: 0
  1728  000A8A  8883               	bsf	3971,4,c	;volatile
  1729  000A8C  D001               	goto	l661
  1730  000A8E                     l660:
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;display_lcd.c: 228: else {PORTDbits.RD4=0;}
  1734  000A8E  9883               	bcf	3971,4,c	;volatile
  1735  000A90                     l661:
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;display_lcd.c: 229: if(endereco&0b00100000){PORTDbits.RD5=1;}
  1739                           
  1740                           ; BSR set to: 0
  1741  000A90  ABB2               	btfss	endereco_cursor_lcd@endereco& (0+255),5,b
  1742  000A92  D002               	goto	l662
  1743                           
  1744                           ; BSR set to: 0
  1745  000A94  8A83               	bsf	3971,5,c	;volatile
  1746  000A96  D001               	goto	l663
  1747  000A98                     l662:
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;display_lcd.c: 230: else {PORTDbits.RD5=0;}
  1751  000A98  9A83               	bcf	3971,5,c	;volatile
  1752  000A9A                     l663:
  1753                           
  1754                           ; BSR set to: 0
  1755                           ;display_lcd.c: 231: if(endereco&0b01000000){PORTDbits.RD6=1;}
  1756                           
  1757                           ; BSR set to: 0
  1758  000A9A  ADB2               	btfss	endereco_cursor_lcd@endereco& (0+255),6,b
  1759  000A9C  D002               	goto	l664
  1760                           
  1761                           ; BSR set to: 0
  1762  000A9E  8C83               	bsf	3971,6,c	;volatile
  1763  000AA0  D001               	goto	l665
  1764  000AA2                     l664:
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;display_lcd.c: 232: else {PORTDbits.RD6=0;}
  1768  000AA2  9C83               	bcf	3971,6,c	;volatile
  1769  000AA4                     l665:
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;display_lcd.c: 235: PORTDbits.RD0 = 1;
  1773  000AA4  8083               	bsf	3971,0,c	;volatile
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;display_lcd.c: 236: delay();
  1777  000AA6  EC4F  F007         	call	_delay	;wreg free
  1778                           
  1779                           ;display_lcd.c: 237: PORTDbits.RD0 = 0;
  1780  000AAA  9083               	bcf	3971,0,c	;volatile
  1781                           
  1782                           ;display_lcd.c: 238: delay();
  1783  000AAC  EC4F  F007         	call	_delay	;wreg free
  1784                           
  1785                           ;display_lcd.c: 241: if(endereco&0b00000001){PORTDbits.RD4=1;}
  1786  000AB0  0100               	movlb	0	; () banked
  1787  000AB2  A1B2               	btfss	endereco_cursor_lcd@endereco& (0+255),0,b
  1788  000AB4  D002               	goto	l666
  1789                           
  1790                           ; BSR set to: 0
  1791  000AB6  8883               	bsf	3971,4,c	;volatile
  1792  000AB8  D001               	goto	l667
  1793  000ABA                     l666:
  1794                           
  1795                           ; BSR set to: 0
  1796                           ;display_lcd.c: 242: else {PORTDbits.RD4=0;}
  1797  000ABA  9883               	bcf	3971,4,c	;volatile
  1798  000ABC                     l667:
  1799                           
  1800                           ; BSR set to: 0
  1801                           ;display_lcd.c: 243: if(endereco&0b00000010){PORTDbits.RD5=1;}
  1802  000ABC  A3B2               	btfss	endereco_cursor_lcd@endereco& (0+255),1,b
  1803  000ABE  D002               	goto	l668
  1804                           
  1805                           ; BSR set to: 0
  1806  000AC0  8A83               	bsf	3971,5,c	;volatile
  1807  000AC2  D001               	goto	l669
  1808  000AC4                     l668:
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;display_lcd.c: 244: else {PORTDbits.RD5=0;}
  1812  000AC4  9A83               	bcf	3971,5,c	;volatile
  1813  000AC6                     l669:
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;display_lcd.c: 245: if(endereco&0b00000100){PORTDbits.RD6=1;}
  1817  000AC6  A5B2               	btfss	endereco_cursor_lcd@endereco& (0+255),2,b
  1818  000AC8  D002               	goto	l670
  1819                           
  1820                           ; BSR set to: 0
  1821  000ACA  8C83               	bsf	3971,6,c	;volatile
  1822  000ACC  D001               	goto	l671
  1823  000ACE                     l670:
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;display_lcd.c: 246: else {PORTDbits.RD6=0;}
  1827  000ACE  9C83               	bcf	3971,6,c	;volatile
  1828  000AD0                     l671:
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;display_lcd.c: 247: if(endereco&0b00001000){PORTDbits.RD7=1;}
  1832  000AD0  A7B2               	btfss	endereco_cursor_lcd@endereco& (0+255),3,b
  1833  000AD2  D002               	goto	l672
  1834                           
  1835                           ; BSR set to: 0
  1836  000AD4  8E83               	bsf	3971,7,c	;volatile
  1837  000AD6  D001               	goto	l673
  1838  000AD8                     l672:
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;display_lcd.c: 248: else {PORTDbits.RD7=0;}
  1842  000AD8  9E83               	bcf	3971,7,c	;volatile
  1843  000ADA                     l673:
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;display_lcd.c: 251: PORTDbits.RD0 = 1;
  1847  000ADA  8083               	bsf	3971,0,c	;volatile
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;display_lcd.c: 252: delay();
  1851  000ADC  EC4F  F007         	call	_delay	;wreg free
  1852                           
  1853                           ;display_lcd.c: 253: PORTDbits.RD0 = 0;
  1854  000AE0  9083               	bcf	3971,0,c	;volatile
  1855                           
  1856                           ;display_lcd.c: 254: delay();
  1857  000AE2  EC4F  F007         	call	_delay	;wreg free
  1858  000AE6  0012               	return		;funcret
  1859  000AE8                     __end_of_endereco_cursor_lcd:
  1860                           	opt stack 0
  1861                           tblptru	equ	0xFF8
  1862                           tblptrh	equ	0xFF7
  1863                           tblptrl	equ	0xFF6
  1864                           tablat	equ	0xFF5
  1865                           postinc0	equ	0xFEE
  1866                           wreg	equ	0xFE8
  1867                           postdec1	equ	0xFE5
  1868                           fsr1h	equ	0xFE2
  1869                           fsr1l	equ	0xFE1
  1870                           postinc2	equ	0xFDE
  1871                           status	equ	0xFD8
  1872                           
  1873 ;; *************** function _escreve_frase_ram_lcd *****************
  1874 ;; Defined at:
  1875 ;;		line 445 in file "bibliotecas/display_lcd.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  buffer          2    3[BANK0 ] PTR unsigned char 
  1878 ;;		 -> escreve_inteiro_lcd@texto(7), STR_20(3), STR_19(8), STR_18(14), 
  1879 ;;		 -> STR_17(13), STR_16(9), STR_15(14), leitura_chave@pos_ignicao_on(17), 
  1880 ;;		 -> leitura_chave@pos_ignicao_crank(17), leitura_chave@pos_ignicao_off(17), STR_14(17), STR_13(16), 
  1881 ;;		 -> STR_12(14), STR_11(14), STR_10(14), STR_9(14), 
  1882 ;;		 -> STR_8(13), STR_7(17), STR_4(17), STR_3(15), 
  1883 ;;		 -> STR_2(14), mensagem_inicial@msg_dois(17), mensagem_inicial@msg_linha_um(17), 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;		None
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1895 ;;      Params:         0       2       0       0       0       0       0       0       0
  1896 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1898 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1899 ;;Total ram usage:        2 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    7
  1902 ;; This function calls:
  1903 ;;		_escreve_caractere_lcd
  1904 ;; This function is called by:
  1905 ;;		_mensagem_inicial
  1906 ;;		_SDCard
  1907 ;;		_inicializa_SPI
  1908 ;;		_leitura_chave
  1909 ;;		_disk_initialize
  1910 ;;		_disk_readp
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text4
  1915  000C2C                     __ptext4:
  1916                           	opt stack 0
  1917  000C2C                     _escreve_frase_ram_lcd:
  1918                           	opt stack 22
  1919                           
  1920                           ;display_lcd.c: 447: while(*buffer)
  1921                           
  1922                           ;incstack = 0
  1923  000C2C  D015               	goto	l722
  1924  000C2E                     
  1925                           ;display_lcd.c: 448: {
  1926                           ;display_lcd.c: 449: escreve_caractere_lcd(*buffer);
  1927  000C2E  C0B3  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
  1928  000C32  C0B4  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
  1929  000C36  6AF8               	clrf	tblptru,c
  1930  000C38  0E07               	movlw	(high __ramtop+-1)
  1931  000C3A  64F7               	cpfsgt	tblptrh,c
  1932  000C3C  D003               	bra	u4697
  1933  000C3E  0008               	tblrd		*
  1934  000C40  50F5               	movf	tablat,w,c
  1935  000C42  D005               	bra	u4690
  1936  000C44                     u4697:
  1937  000C44  CFF6 FFE9          	movff	tblptrl,fsr0l
  1938  000C48  CFF7 FFEA          	movff	tblptrh,fsr0h
  1939  000C4C  50EF               	movf	indf0,w,c
  1940  000C4E                     u4690:
  1941  000C4E  EC8E  F004         	call	_escreve_caractere_lcd
  1942                           
  1943                           ;display_lcd.c: 450: buffer++;
  1944  000C52  0100               	movlb	0	; () banked
  1945  000C54  4BB3               	infsnz	escreve_frase_ram_lcd@buffer& (0+255),f,b
  1946  000C56  2BB4               	incf	(escreve_frase_ram_lcd@buffer+1)& (0+255),f,b
  1947  000C58                     l722:
  1948                           
  1949                           ; BSR set to: 0
  1950  000C58  C0B3  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
  1951  000C5C  C0B4  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
  1952  000C60  6AF8               	clrf	tblptru,c
  1953  000C62  0E07               	movlw	(high __ramtop+-1)
  1954  000C64  64F7               	cpfsgt	tblptrh,c
  1955  000C66  D003               	bra	u4707
  1956  000C68  0008               	tblrd		*
  1957  000C6A  50F5               	movf	tablat,w,c
  1958  000C6C  D005               	bra	u4700
  1959  000C6E                     u4707:
  1960  000C6E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1961  000C72  CFF7 FFEA          	movff	tblptrh,fsr0h
  1962  000C76  50EF               	movf	indf0,w,c
  1963  000C78                     u4700:
  1964  000C78  0900               	iorlw	0
  1965  000C7A  B4D8               	btfsc	status,2,c
  1966  000C7C  0012               	return	
  1967  000C7E  D7D7               	goto	l723
  1968  000C80                     __end_of_escreve_frase_ram_lcd:
  1969                           	opt stack 0
  1970                           tblptru	equ	0xFF8
  1971                           tblptrh	equ	0xFF7
  1972                           tblptrl	equ	0xFF6
  1973                           tablat	equ	0xFF5
  1974                           indf0	equ	0xFEF
  1975                           postinc0	equ	0xFEE
  1976                           fsr0h	equ	0xFEA
  1977                           fsr0l	equ	0xFE9
  1978                           wreg	equ	0xFE8
  1979                           postdec1	equ	0xFE5
  1980                           fsr1h	equ	0xFE2
  1981                           fsr1l	equ	0xFE1
  1982                           postinc2	equ	0xFDE
  1983                           status	equ	0xFD8
  1984                           
  1985 ;; *************** function _escreve_caractere_lcd *****************
  1986 ;; Defined at:
  1987 ;;		line 323 in file "bibliotecas/display_lcd.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;  data            1    wreg     unsigned char 
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;  data            1    2[BANK0 ] unsigned char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2, status,0, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0
  2002 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2004 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2005 ;;Total ram usage:        1 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    6
  2008 ;; This function calls:
  2009 ;;		_delay
  2010 ;; This function is called by:
  2011 ;;		_escreve_frase_ram_lcd
  2012 ;;		_escreve_float_lcd
  2013 ;;		_escreve_frase_lcd
  2014 ;;		_cria_caractere_lcd
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	text5
  2019  00091C                     __ptext5:
  2020                           	opt stack 0
  2021  00091C                     _escreve_caractere_lcd:
  2022                           	opt stack 22
  2023                           
  2024                           ;incstack = 0
  2025                           ;escreve_caractere_lcd@data stored from wreg
  2026  00091C  0100               	movlb	0	; () banked
  2027  00091E  6FB2               	movwf	escreve_caractere_lcd@data& (0+255),b
  2028                           
  2029                           ;display_lcd.c: 326: PORTDbits.RD2 = 0;
  2030  000920  9483               	bcf	3971,2,c	;volatile
  2031                           
  2032                           ;display_lcd.c: 327: PORTDbits.RD1 = 1;
  2033  000922  8283               	bsf	3971,1,c	;volatile
  2034                           
  2035                           ;display_lcd.c: 328: PORTDbits.RD0 = 0;
  2036  000924  9083               	bcf	3971,0,c	;volatile
  2037                           
  2038                           ;display_lcd.c: 331: if(data&0b00010000){PORTDbits.RD4=1;}
  2039  000926  0100               	movlb	0	; () banked
  2040  000928  A9B2               	btfss	escreve_caractere_lcd@data& (0+255),4,b
  2041  00092A  D002               	goto	l689
  2042                           
  2043                           ; BSR set to: 0
  2044  00092C  8883               	bsf	3971,4,c	;volatile
  2045  00092E  D001               	goto	l690
  2046  000930                     l689:
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;display_lcd.c: 332: else {PORTDbits.RD4=0;}
  2050  000930  9883               	bcf	3971,4,c	;volatile
  2051  000932                     l690:
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;display_lcd.c: 333: if(data&0b00100000){PORTDbits.RD5=1;}
  2055                           
  2056                           ; BSR set to: 0
  2057  000932  ABB2               	btfss	escreve_caractere_lcd@data& (0+255),5,b
  2058  000934  D002               	goto	l691
  2059                           
  2060                           ; BSR set to: 0
  2061  000936  8A83               	bsf	3971,5,c	;volatile
  2062  000938  D001               	goto	l692
  2063  00093A                     l691:
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;display_lcd.c: 334: else {PORTDbits.RD5=0;}
  2067  00093A  9A83               	bcf	3971,5,c	;volatile
  2068  00093C                     l692:
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;display_lcd.c: 335: if(data&0b01000000){PORTDbits.RD6=1;}
  2072                           
  2073                           ; BSR set to: 0
  2074  00093C  ADB2               	btfss	escreve_caractere_lcd@data& (0+255),6,b
  2075  00093E  D002               	goto	l693
  2076                           
  2077                           ; BSR set to: 0
  2078  000940  8C83               	bsf	3971,6,c	;volatile
  2079  000942  D001               	goto	l694
  2080  000944                     l693:
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;display_lcd.c: 336: else {PORTDbits.RD6=0;}
  2084  000944  9C83               	bcf	3971,6,c	;volatile
  2085  000946                     l694:
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;display_lcd.c: 337: if(data&0b10000000){PORTDbits.RD7=1;}
  2089                           
  2090                           ; BSR set to: 0
  2091  000946  AFB2               	btfss	escreve_caractere_lcd@data& (0+255),7,b
  2092  000948  D002               	goto	l695
  2093                           
  2094                           ; BSR set to: 0
  2095  00094A  8E83               	bsf	3971,7,c	;volatile
  2096  00094C  D001               	goto	l696
  2097  00094E                     l695:
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;display_lcd.c: 338: else {PORTDbits.RD7=0;}
  2101  00094E  9E83               	bcf	3971,7,c	;volatile
  2102  000950                     l696:
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;display_lcd.c: 341: PORTDbits.RD0 = 1;
  2106  000950  8083               	bsf	3971,0,c	;volatile
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;display_lcd.c: 342: delay();
  2110  000952  EC4F  F007         	call	_delay	;wreg free
  2111                           
  2112                           ;display_lcd.c: 343: PORTDbits.RD0 = 0;
  2113  000956  9083               	bcf	3971,0,c	;volatile
  2114                           
  2115                           ;display_lcd.c: 344: delay();
  2116  000958  EC4F  F007         	call	_delay	;wreg free
  2117                           
  2118                           ;display_lcd.c: 348: if(data&0b00000001){PORTDbits.RD4=1;}
  2119  00095C  0100               	movlb	0	; () banked
  2120  00095E  A1B2               	btfss	escreve_caractere_lcd@data& (0+255),0,b
  2121  000960  D002               	goto	l697
  2122                           
  2123                           ; BSR set to: 0
  2124  000962  8883               	bsf	3971,4,c	;volatile
  2125  000964  D001               	goto	l698
  2126  000966                     l697:
  2127                           
  2128                           ; BSR set to: 0
  2129                           ;display_lcd.c: 349: else {PORTDbits.RD4=0;}
  2130  000966  9883               	bcf	3971,4,c	;volatile
  2131  000968                     l698:
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;display_lcd.c: 350: if(data&0b00000010){PORTDbits.RD5=1;}
  2135  000968  A3B2               	btfss	escreve_caractere_lcd@data& (0+255),1,b
  2136  00096A  D002               	goto	l699
  2137                           
  2138                           ; BSR set to: 0
  2139  00096C  8A83               	bsf	3971,5,c	;volatile
  2140  00096E  D001               	goto	l700
  2141  000970                     l699:
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;display_lcd.c: 351: else {PORTDbits.RD5=0;}
  2145  000970  9A83               	bcf	3971,5,c	;volatile
  2146  000972                     l700:
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;display_lcd.c: 352: if(data&0b00000100){PORTDbits.RD6=1;}
  2150  000972  A5B2               	btfss	escreve_caractere_lcd@data& (0+255),2,b
  2151  000974  D002               	goto	l701
  2152                           
  2153                           ; BSR set to: 0
  2154  000976  8C83               	bsf	3971,6,c	;volatile
  2155  000978  D001               	goto	l702
  2156  00097A                     l701:
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;display_lcd.c: 353: else {PORTDbits.RD6=0;}
  2160  00097A  9C83               	bcf	3971,6,c	;volatile
  2161  00097C                     l702:
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;display_lcd.c: 354: if(data&0b00001000){PORTDbits.RD7=1;}
  2165  00097C  A7B2               	btfss	escreve_caractere_lcd@data& (0+255),3,b
  2166  00097E  D002               	goto	l703
  2167                           
  2168                           ; BSR set to: 0
  2169  000980  8E83               	bsf	3971,7,c	;volatile
  2170  000982  D001               	goto	l704
  2171  000984                     l703:
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;display_lcd.c: 355: else {PORTDbits.RD7=0;}
  2175  000984  9E83               	bcf	3971,7,c	;volatile
  2176  000986                     l704:
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;display_lcd.c: 358: PORTDbits.RD0 = 1;
  2180  000986  8083               	bsf	3971,0,c	;volatile
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;display_lcd.c: 359: delay();
  2184  000988  EC4F  F007         	call	_delay	;wreg free
  2185                           
  2186                           ;display_lcd.c: 360: PORTDbits.RD0 = 0;
  2187  00098C  9083               	bcf	3971,0,c	;volatile
  2188                           
  2189                           ;display_lcd.c: 361: delay();
  2190  00098E  EC4F  F007         	call	_delay	;wreg free
  2191  000992  0012               	return		;funcret
  2192  000994                     __end_of_escreve_caractere_lcd:
  2193                           	opt stack 0
  2194                           tblptru	equ	0xFF8
  2195                           tblptrh	equ	0xFF7
  2196                           tblptrl	equ	0xFF6
  2197                           tablat	equ	0xFF5
  2198                           indf0	equ	0xFEF
  2199                           postinc0	equ	0xFEE
  2200                           fsr0h	equ	0xFEA
  2201                           fsr0l	equ	0xFE9
  2202                           wreg	equ	0xFE8
  2203                           postdec1	equ	0xFE5
  2204                           fsr1h	equ	0xFE2
  2205                           fsr1l	equ	0xFE1
  2206                           postinc2	equ	0xFDE
  2207                           status	equ	0xFD8
  2208                           
  2209 ;; *************** function _leitura_continua_adc *****************
  2210 ;; Defined at:
  2211 ;;		line 109 in file "bibliotecas/adc.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  cont_int        1   13[BANK0 ] unsigned char 
  2216 ;;  cont            1   14[BANK0 ] unsigned char 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2226 ;;      Params:         0       0       0       0       0       0       0       0       0
  2227 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2228 ;;      Temps:          0       6       0       0       0       0       0       0       0
  2229 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2230 ;;Total ram usage:        8 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    6
  2233 ;; This function calls:
  2234 ;;		_leitura_adc
  2235 ;; This function is called by:
  2236 ;;		_main
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text6
  2241  000298                     __ptext6:
  2242                           	opt stack 0
  2243  000298                     _leitura_continua_adc:
  2244                           	opt stack 24
  2245                           
  2246                           ;adc.c: 111: for(unsigned char cont = 0; cont < 2; cont++)
  2247                           
  2248                           ;incstack = 0
  2249  000298  0E00               	movlw	0
  2250  00029A  0100               	movlb	0	; () banked
  2251  00029C  6FBE               	movwf	leitura_continua_adc@cont& (0+255),b
  2252  00029E                     l5847:
  2253                           
  2254                           ; BSR set to: 0
  2255  00029E  0E01               	movlw	1
  2256  0002A0  65BE               	cpfsgt	leitura_continua_adc@cont& (0+255),b
  2257  0002A2  D001               	goto	l451
  2258  0002A4  0012               	return	
  2259  0002A6                     l451:
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;adc.c: 112: {
  2263                           ;adc.c: 113: for(unsigned char cont_int = 0; cont_int < 8; cont_int++)
  2264                           
  2265                           ; BSR set to: 0
  2266  0002A6  0E00               	movlw	0
  2267  0002A8  6FBD               	movwf	leitura_continua_adc@cont_int& (0+255),b
  2268  0002AA                     l5853:
  2269                           
  2270                           ; BSR set to: 0
  2271  0002AA  0E07               	movlw	7
  2272  0002AC  65BD               	cpfsgt	leitura_continua_adc@cont_int& (0+255),b
  2273  0002AE  D001               	goto	l453
  2274  0002B0  D05E               	goto	u5650
  2275  0002B2                     l453:
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;adc.c: 114: {
  2279                           ;adc.c: 115: valor_leitura_adc[cont].leituras[cont_int] = leitura_adc(cont);
  2280                           
  2281                           ; BSR set to: 0
  2282  0002B2  51BE               	movf	leitura_continua_adc@cont& (0+255),w,b
  2283  0002B4  ECAC  F005         	call	_leitura_adc
  2284  0002B8  0100               	movlb	0	; () banked
  2285  0002BA  51BD               	movf	leitura_continua_adc@cont_int& (0+255),w,b
  2286  0002BC  0D02               	mullw	2
  2287  0002BE  0E01               	movlw	1
  2288  0002C0  26F3               	addwf	prodl,f,c
  2289  0002C2  0E00               	movlw	0
  2290  0002C4  22F4               	addwfc	prodh,f,c
  2291  0002C6  0E60               	movlw	low _valor_leitura_adc
  2292  0002C8  6FB7               	movwf	??_leitura_continua_adc& (0+255),b
  2293  0002CA  0E00               	movlw	high _valor_leitura_adc
  2294  0002CC  6FB8               	movwf	(??_leitura_continua_adc+1)& (0+255),b
  2295  0002CE  50F3               	movf	prodl,w,c
  2296  0002D0  27B7               	addwf	??_leitura_continua_adc& (0+255),f,b
  2297  0002D2  50F4               	movf	prodh,w,c
  2298  0002D4  23B8               	addwfc	(??_leitura_continua_adc+1)& (0+255),f,b
  2299  0002D6  51BE               	movf	leitura_continua_adc@cont& (0+255),w,b
  2300  0002D8  0D13               	mullw	19
  2301  0002DA  50F3               	movf	prodl,w,c
  2302  0002DC  25B7               	addwf	??_leitura_continua_adc& (0+255),w,b
  2303  0002DE  6ED9               	movwf	fsr2l,c
  2304  0002E0  50F4               	movf	prodh,w,c
  2305  0002E2  21B8               	addwfc	(??_leitura_continua_adc+1)& (0+255),w,b
  2306  0002E4  6EDA               	movwf	fsr2h,c
  2307  0002E6  C0B0  FFDE         	movff	?_leitura_adc,postinc2
  2308  0002EA  C0B1  FFDD         	movff	?_leitura_adc+1,postdec2
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;adc.c: 116: valor_leitura_adc[cont].media = valor_leitura_adc[cont].media + valor_leitu
      +                          ra_adc[cont].leituras[cont_int];
  2312  0002EE  51BD               	movf	leitura_continua_adc@cont_int& (0+255),w,b
  2313  0002F0  0D02               	mullw	2
  2314  0002F2  0E01               	movlw	1
  2315  0002F4  26F3               	addwf	prodl,f,c
  2316  0002F6  0E00               	movlw	0
  2317  0002F8  22F4               	addwfc	prodh,f,c
  2318  0002FA  0E60               	movlw	low _valor_leitura_adc
  2319  0002FC  6FB7               	movwf	??_leitura_continua_adc& (0+255),b
  2320  0002FE  0E00               	movlw	high _valor_leitura_adc
  2321  000300  6FB8               	movwf	(??_leitura_continua_adc+1)& (0+255),b
  2322  000302  50F3               	movf	prodl,w,c
  2323  000304  27B7               	addwf	??_leitura_continua_adc& (0+255),f,b
  2324  000306  50F4               	movf	prodh,w,c
  2325  000308  23B8               	addwfc	(??_leitura_continua_adc+1)& (0+255),f,b
  2326  00030A  51BE               	movf	leitura_continua_adc@cont& (0+255),w,b
  2327  00030C  0D13               	mullw	19
  2328  00030E  50F3               	movf	prodl,w,c
  2329  000310  25B7               	addwf	??_leitura_continua_adc& (0+255),w,b
  2330  000312  6ED9               	movwf	fsr2l,c
  2331  000314  50F4               	movf	prodh,w,c
  2332  000316  21B8               	addwfc	(??_leitura_continua_adc+1)& (0+255),w,b
  2333  000318  6EDA               	movwf	fsr2h,c
  2334  00031A  CFDE F0B9          	movff	postinc2,??_leitura_continua_adc+2
  2335  00031E  CFDD F0BA          	movff	postdec2,??_leitura_continua_adc+3
  2336  000322  51BE               	movf	leitura_continua_adc@cont& (0+255),w,b
  2337  000324  0D13               	mullw	19
  2338  000326  0E11               	movlw	17
  2339  000328  26F3               	addwf	prodl,f,c
  2340  00032A  0E00               	movlw	0
  2341  00032C  22F4               	addwfc	prodh,f,c
  2342  00032E  0E60               	movlw	low _valor_leitura_adc
  2343  000330  24F3               	addwf	prodl,w,c
  2344  000332  6ED9               	movwf	fsr2l,c
  2345  000334  0E00               	movlw	high _valor_leitura_adc
  2346  000336  20F4               	addwfc	prodh,w,c
  2347  000338  6EDA               	movwf	fsr2h,c
  2348  00033A  CFDE F0BB          	movff	postinc2,??_leitura_continua_adc+4
  2349  00033E  CFDD F0BC          	movff	postdec2,??_leitura_continua_adc+5
  2350  000342  51B9               	movf	(??_leitura_continua_adc+2)& (0+255),w,b
  2351  000344  27BB               	addwf	(??_leitura_continua_adc+4)& (0+255),f,b
  2352  000346  51BA               	movf	(??_leitura_continua_adc+3)& (0+255),w,b
  2353  000348  23BC               	addwfc	(??_leitura_continua_adc+5)& (0+255),f,b
  2354  00034A  51BE               	movf	leitura_continua_adc@cont& (0+255),w,b
  2355  00034C  0D13               	mullw	19
  2356  00034E  0E11               	movlw	17
  2357  000350  26F3               	addwf	prodl,f,c
  2358  000352  0E00               	movlw	0
  2359  000354  22F4               	addwfc	prodh,f,c
  2360  000356  0E60               	movlw	low _valor_leitura_adc
  2361  000358  24F3               	addwf	prodl,w,c
  2362  00035A  6ED9               	movwf	fsr2l,c
  2363  00035C  0E00               	movlw	high _valor_leitura_adc
  2364  00035E  20F4               	addwfc	prodh,w,c
  2365  000360  6EDA               	movwf	fsr2h,c
  2366  000362  C0BB  FFDE         	movff	??_leitura_continua_adc+4,postinc2
  2367  000366  C0BC  FFDD         	movff	??_leitura_continua_adc+5,postdec2
  2368                           
  2369                           ; BSR set to: 0
  2370  00036A  2BBD               	incf	leitura_continua_adc@cont_int& (0+255),f,b
  2371  00036C  D79E               	goto	l5853
  2372  00036E                     u5650:
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;adc.c: 117: }
  2376                           ;adc.c: 118: valor_leitura_adc[cont].media = valor_leitura_adc[cont].media / 8;
  2377                           
  2378                           ; BSR set to: 0
  2379  00036E  51BE               	movf	leitura_continua_adc@cont& (0+255),w,b
  2380  000370  0D13               	mullw	19
  2381  000372  0E11               	movlw	17
  2382  000374  26F3               	addwf	prodl,f,c
  2383  000376  0E00               	movlw	0
  2384  000378  22F4               	addwfc	prodh,f,c
  2385  00037A  0E60               	movlw	low _valor_leitura_adc
  2386  00037C  24F3               	addwf	prodl,w,c
  2387  00037E  6ED9               	movwf	fsr2l,c
  2388  000380  0E00               	movlw	high _valor_leitura_adc
  2389  000382  20F4               	addwfc	prodh,w,c
  2390  000384  6EDA               	movwf	fsr2h,c
  2391  000386  CFDE F0B7          	movff	postinc2,??_leitura_continua_adc
  2392  00038A  CFDD F0B8          	movff	postdec2,??_leitura_continua_adc+1
  2393  00038E  90D8               	bcf	status,0,c
  2394  000390  33B8               	rrcf	(??_leitura_continua_adc+1)& (0+255),f,b
  2395  000392  33B7               	rrcf	??_leitura_continua_adc& (0+255),f,b
  2396  000394  90D8               	bcf	status,0,c
  2397  000396  33B8               	rrcf	(??_leitura_continua_adc+1)& (0+255),f,b
  2398  000398  33B7               	rrcf	??_leitura_continua_adc& (0+255),f,b
  2399  00039A  90D8               	bcf	status,0,c
  2400  00039C  33B8               	rrcf	(??_leitura_continua_adc+1)& (0+255),f,b
  2401  00039E  33B7               	rrcf	??_leitura_continua_adc& (0+255),f,b
  2402  0003A0  51BE               	movf	leitura_continua_adc@cont& (0+255),w,b
  2403  0003A2  0D13               	mullw	19
  2404  0003A4  0E11               	movlw	17
  2405  0003A6  26F3               	addwf	prodl,f,c
  2406  0003A8  0E00               	movlw	0
  2407  0003AA  22F4               	addwfc	prodh,f,c
  2408  0003AC  0E60               	movlw	low _valor_leitura_adc
  2409  0003AE  24F3               	addwf	prodl,w,c
  2410  0003B0  6ED9               	movwf	fsr2l,c
  2411  0003B2  0E00               	movlw	high _valor_leitura_adc
  2412  0003B4  20F4               	addwfc	prodh,w,c
  2413  0003B6  6EDA               	movwf	fsr2h,c
  2414  0003B8  C0B7  FFDE         	movff	??_leitura_continua_adc,postinc2
  2415  0003BC  C0B8  FFDD         	movff	??_leitura_continua_adc+1,postdec2
  2416                           
  2417                           ; BSR set to: 0
  2418  0003C0  2BBE               	incf	leitura_continua_adc@cont& (0+255),f,b
  2419  0003C2  D76D               	goto	l5847
  2420  0003C4                     __end_of_leitura_continua_adc:
  2421                           	opt stack 0
  2422                           tblptru	equ	0xFF8
  2423                           tblptrh	equ	0xFF7
  2424                           tblptrl	equ	0xFF6
  2425                           tablat	equ	0xFF5
  2426                           prodh	equ	0xFF4
  2427                           prodl	equ	0xFF3
  2428                           indf0	equ	0xFEF
  2429                           postinc0	equ	0xFEE
  2430                           fsr0h	equ	0xFEA
  2431                           fsr0l	equ	0xFE9
  2432                           wreg	equ	0xFE8
  2433                           postdec1	equ	0xFE5
  2434                           fsr1h	equ	0xFE2
  2435                           fsr1l	equ	0xFE1
  2436                           postinc2	equ	0xFDE
  2437                           postdec2	equ	0xFDD
  2438                           fsr2h	equ	0xFDA
  2439                           fsr2l	equ	0xFD9
  2440                           status	equ	0xFD8
  2441                           
  2442 ;; *************** function _leitura_adc *****************
  2443 ;; Defined at:
  2444 ;;		line 76 in file "bibliotecas/adc.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;  canal           1    wreg     unsigned char 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  canal           1    6[BANK0 ] unsigned char 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  2    0[BANK0 ] unsigned int 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2, status,0
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2458 ;;      Params:         0       2       0       0       0       0       0       0       0
  2459 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2460 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2461 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2462 ;;Total ram usage:        7 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    5
  2465 ;; This function calls:
  2466 ;;		Nothing
  2467 ;; This function is called by:
  2468 ;;		_leitura_continua_adc
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text7
  2473  000B58                     __ptext7:
  2474                           	opt stack 0
  2475  000B58                     _leitura_adc:
  2476                           	opt stack 24
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;incstack = 0
  2480                           ;leitura_adc@canal stored from wreg
  2481  000B58  0100               	movlb	0	; () banked
  2482  000B5A  6FB6               	movwf	leitura_adc@canal& (0+255),b
  2483                           
  2484                           ;adc.c: 78: switch(canal)
  2485  000B5C  D009               	goto	l439
  2486  000B5E                     
  2487                           ;adc.c: 81: ADCON0 = 0x01;
  2488  000B5E  0E01               	movlw	1
  2489  000B60  D005               	goto	L3
  2490  000B62                     
  2491                           ;adc.c: 85: ADCON0 = 0x05;
  2492  000B62  0E05               	movlw	5
  2493  000B64  D003               	goto	L3
  2494  000B66                     
  2495                           ;adc.c: 89: ADCON0 = 0x09;
  2496  000B66  0E09               	movlw	9
  2497  000B68  D001               	goto	L3
  2498  000B6A                     
  2499                           ;adc.c: 93: ADCON0 = 0x0D;
  2500  000B6A  0E0D               	movlw	13
  2501  000B6C                     L3:
  2502  000B6C  6EC2               	movwf	4034,c	;volatile
  2503                           
  2504                           ;adc.c: 96: }
  2505                           
  2506                           ;adc.c: 94: break;
  2507  000B6E  D00E               	goto	l441
  2508  000B70                     l439:
  2509  000B70  0100               	movlb	0	; () banked
  2510  000B72  51B6               	movf	leitura_adc@canal& (0+255),w,b
  2511                           
  2512                           ; Switch size 1, requested type "space"
  2513                           ; Number of cases is 4, Range of values is 0 to 3
  2514                           ; switch strategies available:
  2515                           ; Name         Instructions Cycles
  2516                           ; simple_byte           13     7 (average)
  2517                           ;	Chosen strategy is simple_byte
  2518  000B74  0A00               	xorlw	0	; case 0
  2519  000B76  B4D8               	btfsc	status,2,c
  2520  000B78  D7F2               	goto	l440
  2521  000B7A  0A01               	xorlw	1	; case 1
  2522  000B7C  B4D8               	btfsc	status,2,c
  2523  000B7E  D7F1               	goto	l442
  2524  000B80  0A03               	xorlw	3	; case 2
  2525  000B82  B4D8               	btfsc	status,2,c
  2526  000B84  D7F0               	goto	l443
  2527  000B86  0A01               	xorlw	1	; case 3
  2528  000B88  B4D8               	btfsc	status,2,c
  2529  000B8A  D7EF               	goto	l444
  2530  000B8C                     l441:
  2531                           
  2532                           ;adc.c: 97: ADCON0bits.GO=1;
  2533  000B8C  82C2               	bsf	4034,1,c	;volatile
  2534  000B8E  B2C2               	btfsc	4034,1,c	;volatile
  2535  000B90  D7FE               	goto	l446
  2536                           
  2537                           ;adc.c: 100: return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
  2538  000B92  CFC3 F0B2          	movff	4035,??_leitura_adc	;volatile
  2539  000B96  0E06               	movlw	6
  2540  000B98  0100               	movlb	0	; () banked
  2541  000B9A  6FB3               	movwf	(??_leitura_adc+1)& (0+255),b
  2542  000B9C                     u4865:
  2543  000B9C  90D8               	bcf	status,0,c
  2544  000B9E  33B2               	rrcf	??_leitura_adc& (0+255),f,b
  2545  000BA0  2FB3               	decfsz	(??_leitura_adc+1)& (0+255),f,b
  2546  000BA2  D7FC               	goto	u4865
  2547  000BA4  51B2               	movf	??_leitura_adc& (0+255),w,b
  2548  000BA6  CFC4 F0B4          	movff	4036,??_leitura_adc+2	;volatile
  2549  000BAA  6BB5               	clrf	(??_leitura_adc+3)& (0+255),b
  2550  000BAC  90D8               	bcf	status,0,c
  2551  000BAE  37B4               	rlcf	(??_leitura_adc+2)& (0+255),f,b
  2552  000BB0  37B5               	rlcf	(??_leitura_adc+3)& (0+255),f,b
  2553  000BB2  90D8               	bcf	status,0,c
  2554  000BB4  37B4               	rlcf	(??_leitura_adc+2)& (0+255),f,b
  2555  000BB6  37B5               	rlcf	(??_leitura_adc+3)& (0+255),f,b
  2556  000BB8  11B4               	iorwf	(??_leitura_adc+2)& (0+255),w,b
  2557  000BBA  6FB0               	movwf	?_leitura_adc& (0+255),b
  2558  000BBC  51B5               	movf	(??_leitura_adc+3)& (0+255),w,b
  2559  000BBE  6FB1               	movwf	(?_leitura_adc+1)& (0+255),b
  2560  000BC0  0012               	return	
  2561  000BC2                     __end_of_leitura_adc:
  2562                           	opt stack 0
  2563                           tblptru	equ	0xFF8
  2564                           tblptrh	equ	0xFF7
  2565                           tblptrl	equ	0xFF6
  2566                           tablat	equ	0xFF5
  2567                           prodh	equ	0xFF4
  2568                           prodl	equ	0xFF3
  2569                           indf0	equ	0xFEF
  2570                           postinc0	equ	0xFEE
  2571                           fsr0h	equ	0xFEA
  2572                           fsr0l	equ	0xFE9
  2573                           wreg	equ	0xFE8
  2574                           postdec1	equ	0xFE5
  2575                           fsr1h	equ	0xFE2
  2576                           fsr1l	equ	0xFE1
  2577                           postinc2	equ	0xFDE
  2578                           postdec2	equ	0xFDD
  2579                           fsr2h	equ	0xFDA
  2580                           fsr2l	equ	0xFD9
  2581                           status	equ	0xFD8
  2582                           
  2583 ;; *************** function _leitura_chaves_sistema *****************
  2584 ;; Defined at:
  2585 ;;		line 47 in file "bibliotecas/chaves.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      void 
  2592 ;; Registers used:
  2593 ;;		wreg
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2599 ;;      Params:         0       0       0       0       0       0       0       0       0
  2600 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2601 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2602 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2603 ;;Total ram usage:        0 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:    5
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_main
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text8
  2614  000E2E                     __ptext8:
  2615                           	opt stack 0
  2616  000E2E                     _leitura_chaves_sistema:
  2617                           	opt stack 25
  2618                           
  2619                           ;chaves.c: 49: info_chaves[0] = PORTCbits.RC0;
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;incstack = 0
  2623  000E2E  0E00               	movlw	0
  2624  000E30  B082               	btfsc	3970,0,c	;volatile
  2625  000E32  0E01               	movlw	1
  2626  000E34  6E37               	movwf	_info_chaves,c
  2627                           
  2628                           ;chaves.c: 50: info_chaves[1] = PORTCbits.RC1;
  2629  000E36  0E00               	movlw	0
  2630  000E38  B282               	btfsc	3970,1,c	;volatile
  2631  000E3A  0E01               	movlw	1
  2632  000E3C  6E38               	movwf	_info_chaves+1,c
  2633                           
  2634                           ;chaves.c: 51: info_chaves[2] = PORTCbits.RC2;
  2635  000E3E  0E00               	movlw	0
  2636  000E40  B482               	btfsc	3970,2,c	;volatile
  2637  000E42  0E01               	movlw	1
  2638  000E44  6E39               	movwf	_info_chaves+2,c
  2639                           
  2640                           ;chaves.c: 52: info_chaves[3] = PORTAbits.RA2;
  2641  000E46  0E00               	movlw	0
  2642  000E48  B480               	btfsc	3968,2,c	;volatile
  2643  000E4A  0E01               	movlw	1
  2644  000E4C  6E3A               	movwf	_info_chaves+3,c
  2645                           
  2646                           ;chaves.c: 53: info_chaves[4] = PORTAbits.RA5;
  2647  000E4E  0E00               	movlw	0
  2648  000E50  BA80               	btfsc	3968,5,c	;volatile
  2649  000E52  0E01               	movlw	1
  2650  000E54  6E3B               	movwf	_info_chaves+4,c
  2651                           
  2652                           ;chaves.c: 54: info_chaves[5] = PORTEbits.RE0;
  2653  000E56  0E00               	movlw	0
  2654  000E58  B084               	btfsc	3972,0,c	;volatile
  2655  000E5A  0E01               	movlw	1
  2656  000E5C  6E3C               	movwf	_info_chaves+5,c
  2657                           
  2658                           ;chaves.c: 55: info_chaves[6] = PORTEbits.RE1;
  2659  000E5E  0E00               	movlw	0
  2660  000E60  B284               	btfsc	3972,1,c	;volatile
  2661  000E62  0E01               	movlw	1
  2662  000E64  6E3D               	movwf	_info_chaves+6,c
  2663  000E66  0012               	return		;funcret
  2664  000E68                     __end_of_leitura_chaves_sistema:
  2665                           	opt stack 0
  2666                           tblptru	equ	0xFF8
  2667                           tblptrh	equ	0xFF7
  2668                           tblptrl	equ	0xFF6
  2669                           tablat	equ	0xFF5
  2670                           prodh	equ	0xFF4
  2671                           prodl	equ	0xFF3
  2672                           indf0	equ	0xFEF
  2673                           postinc0	equ	0xFEE
  2674                           fsr0h	equ	0xFEA
  2675                           fsr0l	equ	0xFE9
  2676                           wreg	equ	0xFE8
  2677                           postdec1	equ	0xFE5
  2678                           fsr1h	equ	0xFE2
  2679                           fsr1l	equ	0xFE1
  2680                           postinc2	equ	0xFDE
  2681                           postdec2	equ	0xFDD
  2682                           fsr2h	equ	0xFDA
  2683                           fsr2l	equ	0xFD9
  2684                           status	equ	0xFD8
  2685                           
  2686 ;; *************** function _init_lcd *****************
  2687 ;; Defined at:
  2688 ;;		line 71 in file "bibliotecas/display_lcd.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;		None
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1    wreg      void 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0, cstack
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2702 ;;      Params:         0       0       0       0       0       0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2704 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2705 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2706 ;;Total ram usage:        1 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    7
  2709 ;; This function calls:
  2710 ;;		_delay
  2711 ;;		_escreve_cmd_lcd
  2712 ;; This function is called by:
  2713 ;;		_main
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text9
  2718  0006E6                     __ptext9:
  2719                           	opt stack 0
  2720  0006E6                     _init_lcd:
  2721                           	opt stack 23
  2722                           
  2723                           ;display_lcd.c: 74: TRISDbits.RD2 = 0;
  2724                           
  2725                           ;incstack = 0
  2726  0006E6  9495               	bcf	3989,2,c	;volatile
  2727                           
  2728                           ;display_lcd.c: 75: TRISDbits.RD1 = 0;
  2729  0006E8  9295               	bcf	3989,1,c	;volatile
  2730                           
  2731                           ;display_lcd.c: 76: TRISDbits.RD0 = 0;
  2732  0006EA  9095               	bcf	3989,0,c	;volatile
  2733                           
  2734                           ;display_lcd.c: 79: TRISDbits.RD4=0;
  2735  0006EC  9895               	bcf	3989,4,c	;volatile
  2736                           
  2737                           ;display_lcd.c: 80: TRISDbits.RD5=0;
  2738  0006EE  9A95               	bcf	3989,5,c	;volatile
  2739                           
  2740                           ;display_lcd.c: 81: TRISDbits.RD6=0;
  2741  0006F0  9C95               	bcf	3989,6,c	;volatile
  2742                           
  2743                           ;display_lcd.c: 82: TRISDbits.RD7=0;
  2744  0006F2  9E95               	bcf	3989,7,c	;volatile
  2745                           
  2746                           ;display_lcd.c: 89: PORTDbits.RD2 = 0;
  2747  0006F4  9483               	bcf	3971,2,c	;volatile
  2748                           
  2749                           ;display_lcd.c: 90: PORTDbits.RD1 = 0;
  2750  0006F6  9283               	bcf	3971,1,c	;volatile
  2751                           
  2752                           ;display_lcd.c: 91: PORTDbits.RD0 = 0;
  2753  0006F8  9083               	bcf	3971,0,c	;volatile
  2754                           
  2755                           ;display_lcd.c: 95: PORTDbits.RD7=0;
  2756  0006FA  9E83               	bcf	3971,7,c	;volatile
  2757                           
  2758                           ;display_lcd.c: 96: PORTDbits.RD6=0;
  2759  0006FC  9C83               	bcf	3971,6,c	;volatile
  2760                           
  2761                           ;display_lcd.c: 97: PORTDbits.RD5=1;
  2762  0006FE  8A83               	bsf	3971,5,c	;volatile
  2763                           
  2764                           ;display_lcd.c: 98: PORTDbits.RD4=1;
  2765  000700  8883               	bsf	3971,4,c	;volatile
  2766                           
  2767                           ;display_lcd.c: 103: _delay((unsigned long)((15)*(48000000/4000.0)));
  2768  000702  0EEA               	movlw	234
  2769  000704  0100               	movlb	0	; () banked
  2770  000706  6FB3               	movwf	??_init_lcd& (0+255),b
  2771  000708  0EC3               	movlw	195
  2772  00070A                     u8357:
  2773  00070A  2EE8               	decfsz	wreg,f,c
  2774  00070C  D7FE               	bra	u8357
  2775  00070E  2FB3               	decfsz	??_init_lcd& (0+255),f,b
  2776  000710  D7FC               	bra	u8357
  2777                           
  2778                           ;display_lcd.c: 107: PORTDbits.RD0 = 1;
  2779  000712  8083               	bsf	3971,0,c	;volatile
  2780                           
  2781                           ;display_lcd.c: 108: delay();
  2782  000714  EC4F  F007         	call	_delay	;wreg free
  2783                           
  2784                           ;display_lcd.c: 109: PORTDbits.RD0 = 0;
  2785  000718  9083               	bcf	3971,0,c	;volatile
  2786                           
  2787                           ;display_lcd.c: 110: delay();
  2788  00071A  EC4F  F007         	call	_delay	;wreg free
  2789                           
  2790                           ;display_lcd.c: 115: _delay((unsigned long)((5)*(48000000/4000.0)));
  2791  00071E  0E4E               	movlw	78
  2792  000720  0100               	movlb	0	; () banked
  2793  000722  6FB3               	movwf	??_init_lcd& (0+255),b
  2794  000724  0EEB               	movlw	235
  2795  000726                     u8367:
  2796  000726  2EE8               	decfsz	wreg,f,c
  2797  000728  D7FE               	bra	u8367
  2798  00072A  2FB3               	decfsz	??_init_lcd& (0+255),f,b
  2799  00072C  D7FC               	bra	u8367
  2800                           
  2801                           ;display_lcd.c: 118: PORTDbits.RD0 = 1;
  2802  00072E  8083               	bsf	3971,0,c	;volatile
  2803                           
  2804                           ;display_lcd.c: 119: delay();
  2805  000730  EC4F  F007         	call	_delay	;wreg free
  2806                           
  2807                           ;display_lcd.c: 120: PORTDbits.RD0 = 0;
  2808  000734  9083               	bcf	3971,0,c	;volatile
  2809                           
  2810                           ;display_lcd.c: 121: delay();
  2811  000736  EC4F  F007         	call	_delay	;wreg free
  2812                           
  2813                           ;display_lcd.c: 126: _delay((unsigned long)((5)*(48000000/4000.0)));
  2814  00073A  0E4E               	movlw	78
  2815  00073C  0100               	movlb	0	; () banked
  2816  00073E  6FB3               	movwf	??_init_lcd& (0+255),b
  2817  000740  0EEB               	movlw	235
  2818  000742                     u8377:
  2819  000742  2EE8               	decfsz	wreg,f,c
  2820  000744  D7FE               	bra	u8377
  2821  000746  2FB3               	decfsz	??_init_lcd& (0+255),f,b
  2822  000748  D7FC               	bra	u8377
  2823                           
  2824                           ;display_lcd.c: 129: PORTDbits.RD0 = 1;
  2825  00074A  8083               	bsf	3971,0,c	;volatile
  2826                           
  2827                           ;display_lcd.c: 130: delay();
  2828  00074C  EC4F  F007         	call	_delay	;wreg free
  2829                           
  2830                           ;display_lcd.c: 131: PORTDbits.RD0 = 0;
  2831  000750  9083               	bcf	3971,0,c	;volatile
  2832                           
  2833                           ;display_lcd.c: 132: delay();
  2834  000752  EC4F  F007         	call	_delay	;wreg free
  2835                           
  2836                           ;display_lcd.c: 135: PORTDbits.RD7=0;
  2837  000756  9E83               	bcf	3971,7,c	;volatile
  2838                           
  2839                           ;display_lcd.c: 136: PORTDbits.RD6=0;
  2840  000758  9C83               	bcf	3971,6,c	;volatile
  2841                           
  2842                           ;display_lcd.c: 137: PORTDbits.RD5=1;
  2843  00075A  8A83               	bsf	3971,5,c	;volatile
  2844                           
  2845                           ;display_lcd.c: 138: PORTDbits.RD4=0;
  2846  00075C  9883               	bcf	3971,4,c	;volatile
  2847                           
  2848                           ;display_lcd.c: 142: PORTDbits.RD0 = 1;
  2849  00075E  8083               	bsf	3971,0,c	;volatile
  2850                           
  2851                           ;display_lcd.c: 143: delay();
  2852  000760  EC4F  F007         	call	_delay	;wreg free
  2853                           
  2854                           ;display_lcd.c: 144: PORTDbits.RD0 = 0;
  2855  000764  9083               	bcf	3971,0,c	;volatile
  2856                           
  2857                           ;display_lcd.c: 145: delay();
  2858  000766  EC4F  F007         	call	_delay	;wreg free
  2859                           
  2860                           ;display_lcd.c: 149: escreve_cmd_lcd(0b00101000);
  2861  00076A  0E28               	movlw	40
  2862  00076C  ECC2  F003         	call	_escreve_cmd_lcd
  2863                           
  2864                           ;display_lcd.c: 150: escreve_cmd_lcd(0b00000110);
  2865  000770  0E06               	movlw	6
  2866  000772  ECC2  F003         	call	_escreve_cmd_lcd
  2867                           
  2868                           ;display_lcd.c: 151: escreve_cmd_lcd(0b00001110);
  2869  000776  0E0E               	movlw	14
  2870  000778  ECC2  F003         	call	_escreve_cmd_lcd
  2871                           
  2872                           ;display_lcd.c: 152: escreve_cmd_lcd(0b00000001);
  2873  00077C  0E01               	movlw	1
  2874  00077E  ECC2  F003         	call	_escreve_cmd_lcd
  2875  000782  0012               	return		;funcret
  2876  000784                     __end_of_init_lcd:
  2877                           	opt stack 0
  2878                           tblptru	equ	0xFF8
  2879                           tblptrh	equ	0xFF7
  2880                           tblptrl	equ	0xFF6
  2881                           tablat	equ	0xFF5
  2882                           prodh	equ	0xFF4
  2883                           prodl	equ	0xFF3
  2884                           indf0	equ	0xFEF
  2885                           postinc0	equ	0xFEE
  2886                           fsr0h	equ	0xFEA
  2887                           fsr0l	equ	0xFE9
  2888                           wreg	equ	0xFE8
  2889                           postdec1	equ	0xFE5
  2890                           fsr1h	equ	0xFE2
  2891                           fsr1l	equ	0xFE1
  2892                           postinc2	equ	0xFDE
  2893                           postdec2	equ	0xFDD
  2894                           fsr2h	equ	0xFDA
  2895                           fsr2l	equ	0xFD9
  2896                           status	equ	0xFD8
  2897                           
  2898 ;; *************** function _escreve_cmd_lcd *****************
  2899 ;; Defined at:
  2900 ;;		line 162 in file "bibliotecas/display_lcd.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  comando         1    wreg     unsigned char 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  comando         1    2[BANK0 ] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2914 ;;      Params:         0       0       0       0       0       0       0       0       0
  2915 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2917 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2918 ;;Total ram usage:        1 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; Hardware stack levels required when called:    6
  2921 ;; This function calls:
  2922 ;;		_delay
  2923 ;; This function is called by:
  2924 ;;		_mensagem_inicial
  2925 ;;		_init_lcd
  2926 ;;		_SDCard
  2927 ;;		_inicializa_SPI
  2928 ;;		_leitura_chave
  2929 ;;		_disk_initialize
  2930 ;;		_cria_caractere_lcd
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text10
  2935  000784                     __ptext10:
  2936                           	opt stack 0
  2937  000784                     _escreve_cmd_lcd:
  2938                           	opt stack 23
  2939                           
  2940                           ;incstack = 0
  2941                           ;escreve_cmd_lcd@comando stored from wreg
  2942  000784  0100               	movlb	0	; () banked
  2943  000786  6FB2               	movwf	escreve_cmd_lcd@comando& (0+255),b
  2944                           
  2945                           ;display_lcd.c: 165: PORTDbits.RD2 = 0;
  2946  000788  9483               	bcf	3971,2,c	;volatile
  2947                           
  2948                           ;display_lcd.c: 166: PORTDbits.RD1 = 0;
  2949  00078A  9283               	bcf	3971,1,c	;volatile
  2950                           
  2951                           ;display_lcd.c: 167: PORTDbits.RD0 = 0;
  2952  00078C  9083               	bcf	3971,0,c	;volatile
  2953                           
  2954                           ;display_lcd.c: 170: if(comando&0b00010000){PORTDbits.RD4=1;}
  2955  00078E  0100               	movlb	0	; () banked
  2956  000790  A9B2               	btfss	escreve_cmd_lcd@comando& (0+255),4,b
  2957  000792  D002               	goto	l638
  2958                           
  2959                           ; BSR set to: 0
  2960  000794  8883               	bsf	3971,4,c	;volatile
  2961  000796  D001               	goto	l639
  2962  000798                     l638:
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;display_lcd.c: 171: else {PORTDbits.RD4=0;}
  2966  000798  9883               	bcf	3971,4,c	;volatile
  2967  00079A                     l639:
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;display_lcd.c: 172: if(comando&0b00100000){PORTDbits.RD5=1;}
  2971                           
  2972                           ; BSR set to: 0
  2973  00079A  ABB2               	btfss	escreve_cmd_lcd@comando& (0+255),5,b
  2974  00079C  D002               	goto	l640
  2975                           
  2976                           ; BSR set to: 0
  2977  00079E  8A83               	bsf	3971,5,c	;volatile
  2978  0007A0  D001               	goto	l641
  2979  0007A2                     l640:
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;display_lcd.c: 173: else {PORTDbits.RD5=0;}
  2983  0007A2  9A83               	bcf	3971,5,c	;volatile
  2984  0007A4                     l641:
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;display_lcd.c: 174: if(comando&0b01000000){PORTDbits.RD6=1;}
  2988                           
  2989                           ; BSR set to: 0
  2990  0007A4  ADB2               	btfss	escreve_cmd_lcd@comando& (0+255),6,b
  2991  0007A6  D002               	goto	l642
  2992                           
  2993                           ; BSR set to: 0
  2994  0007A8  8C83               	bsf	3971,6,c	;volatile
  2995  0007AA  D001               	goto	l643
  2996  0007AC                     l642:
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;display_lcd.c: 175: else {PORTDbits.RD6=0;}
  3000  0007AC  9C83               	bcf	3971,6,c	;volatile
  3001  0007AE                     l643:
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;display_lcd.c: 176: if(comando&0b10000000){PORTDbits.RD7=1;}
  3005                           
  3006                           ; BSR set to: 0
  3007  0007AE  AFB2               	btfss	escreve_cmd_lcd@comando& (0+255),7,b
  3008  0007B0  D002               	goto	l644
  3009                           
  3010                           ; BSR set to: 0
  3011  0007B2  8E83               	bsf	3971,7,c	;volatile
  3012  0007B4  D001               	goto	l645
  3013  0007B6                     l644:
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;display_lcd.c: 177: else {PORTDbits.RD7=0;}
  3017  0007B6  9E83               	bcf	3971,7,c	;volatile
  3018  0007B8                     l645:
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;display_lcd.c: 180: PORTDbits.RD0 = 1;
  3022  0007B8  8083               	bsf	3971,0,c	;volatile
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;display_lcd.c: 181: delay();
  3026  0007BA  EC4F  F007         	call	_delay	;wreg free
  3027                           
  3028                           ;display_lcd.c: 182: PORTDbits.RD0 = 0;
  3029  0007BE  9083               	bcf	3971,0,c	;volatile
  3030                           
  3031                           ;display_lcd.c: 183: delay();
  3032  0007C0  EC4F  F007         	call	_delay	;wreg free
  3033                           
  3034                           ;display_lcd.c: 186: if(comando&0b00000001){PORTDbits.RD4=1;}
  3035  0007C4  0100               	movlb	0	; () banked
  3036  0007C6  A1B2               	btfss	escreve_cmd_lcd@comando& (0+255),0,b
  3037  0007C8  D002               	goto	l646
  3038                           
  3039                           ; BSR set to: 0
  3040  0007CA  8883               	bsf	3971,4,c	;volatile
  3041  0007CC  D001               	goto	l647
  3042  0007CE                     l646:
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;display_lcd.c: 187: else {PORTDbits.RD4=0;}
  3046  0007CE  9883               	bcf	3971,4,c	;volatile
  3047  0007D0                     l647:
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;display_lcd.c: 188: if(comando&0b00000010){PORTDbits.RD5=1;}
  3051  0007D0  A3B2               	btfss	escreve_cmd_lcd@comando& (0+255),1,b
  3052  0007D2  D002               	goto	l648
  3053                           
  3054                           ; BSR set to: 0
  3055  0007D4  8A83               	bsf	3971,5,c	;volatile
  3056  0007D6  D001               	goto	l649
  3057  0007D8                     l648:
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;display_lcd.c: 189: else {PORTDbits.RD5=0;}
  3061  0007D8  9A83               	bcf	3971,5,c	;volatile
  3062  0007DA                     l649:
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;display_lcd.c: 190: if(comando&0b00000100){PORTDbits.RD6=1;}
  3066  0007DA  A5B2               	btfss	escreve_cmd_lcd@comando& (0+255),2,b
  3067  0007DC  D002               	goto	l650
  3068                           
  3069                           ; BSR set to: 0
  3070  0007DE  8C83               	bsf	3971,6,c	;volatile
  3071  0007E0  D001               	goto	l651
  3072  0007E2                     l650:
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;display_lcd.c: 191: else {PORTDbits.RD6=0;}
  3076  0007E2  9C83               	bcf	3971,6,c	;volatile
  3077  0007E4                     l651:
  3078                           
  3079                           ; BSR set to: 0
  3080                           ;display_lcd.c: 192: if(comando&0b00001000){PORTDbits.RD7=1;}
  3081  0007E4  A7B2               	btfss	escreve_cmd_lcd@comando& (0+255),3,b
  3082  0007E6  D002               	goto	l652
  3083                           
  3084                           ; BSR set to: 0
  3085  0007E8  8E83               	bsf	3971,7,c	;volatile
  3086  0007EA  D001               	goto	l653
  3087  0007EC                     l652:
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;display_lcd.c: 193: else {PORTDbits.RD7=0;}
  3091  0007EC  9E83               	bcf	3971,7,c	;volatile
  3092  0007EE                     l653:
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;display_lcd.c: 196: PORTDbits.RD0 = 1;
  3096  0007EE  8083               	bsf	3971,0,c	;volatile
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;display_lcd.c: 197: delay();
  3100  0007F0  EC4F  F007         	call	_delay	;wreg free
  3101                           
  3102                           ;display_lcd.c: 198: PORTDbits.RD0 = 0;
  3103  0007F4  9083               	bcf	3971,0,c	;volatile
  3104                           
  3105                           ;display_lcd.c: 199: delay();
  3106  0007F6  EC4F  F007         	call	_delay	;wreg free
  3107                           
  3108                           ;display_lcd.c: 204: if (comando==0x01 || comando==0x02 || comando==0x03)
  3109  0007FA  0100               	movlb	0	; () banked
  3110  0007FC  05B2               	decf	escreve_cmd_lcd@comando& (0+255),w,b
  3111  0007FE  B4D8               	btfsc	status,2,c
  3112  000800  D008               	goto	u4820
  3113                           
  3114                           ; BSR set to: 0
  3115  000802  0E02               	movlw	2
  3116  000804  19B2               	xorwf	escreve_cmd_lcd@comando& (0+255),w,b
  3117  000806  B4D8               	btfsc	status,2,c
  3118  000808  D004               	goto	u4820
  3119                           
  3120                           ; BSR set to: 0
  3121  00080A  0E03               	movlw	3
  3122  00080C  19B2               	xorwf	escreve_cmd_lcd@comando& (0+255),w,b
  3123  00080E  A4D8               	btfss	status,2,c
  3124  000810  0012               	return	
  3125  000812                     u4820:
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;display_lcd.c: 205: { delay(); }
  3129                           
  3130                           ; BSR set to: 0
  3131  000812  EC4F  F007         	call	_delay	;wreg free
  3132  000816  0012               	return	
  3133  000818                     __end_of_escreve_cmd_lcd:
  3134                           	opt stack 0
  3135                           tblptru	equ	0xFF8
  3136                           tblptrh	equ	0xFF7
  3137                           tblptrl	equ	0xFF6
  3138                           tablat	equ	0xFF5
  3139                           prodh	equ	0xFF4
  3140                           prodl	equ	0xFF3
  3141                           indf0	equ	0xFEF
  3142                           postinc0	equ	0xFEE
  3143                           fsr0h	equ	0xFEA
  3144                           fsr0l	equ	0xFE9
  3145                           wreg	equ	0xFE8
  3146                           postdec1	equ	0xFE5
  3147                           fsr1h	equ	0xFE2
  3148                           fsr1l	equ	0xFE1
  3149                           postinc2	equ	0xFDE
  3150                           postdec2	equ	0xFDD
  3151                           fsr2h	equ	0xFDA
  3152                           fsr2l	equ	0xFD9
  3153                           status	equ	0xFD8
  3154                           
  3155 ;; *************** function _delay *****************
  3156 ;; Defined at:
  3157 ;;		line 45 in file "bibliotecas/display_lcd.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  contador_int    1    1[BANK0 ] unsigned char 
  3162 ;;  contador_ext    1    0[BANK0 ] unsigned char 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2, status,0
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3172 ;;      Params:         0       0       0       0       0       0       0       0       0
  3173 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3175 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3176 ;;Total ram usage:        2 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    5
  3179 ;; This function calls:
  3180 ;;		Nothing
  3181 ;; This function is called by:
  3182 ;;		_init_lcd
  3183 ;;		_escreve_cmd_lcd
  3184 ;;		_endereco_cursor_lcd
  3185 ;;		_escreve_caractere_lcd
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text11
  3190  000E9E                     __ptext11:
  3191                           	opt stack 0
  3192  000E9E                     _delay:
  3193                           	opt stack 22
  3194                           
  3195                           ;display_lcd.c: 47: unsigned char contador_ext, contador_int;
  3196                           ;display_lcd.c: 49: for(contador_ext = 0; contador_ext<100; contador_ext++)
  3197                           
  3198                           ;incstack = 0
  3199  000E9E  0E00               	movlw	0
  3200  000EA0  0100               	movlb	0	; () banked
  3201  000EA2  6FB0               	movwf	delay@contador_ext& (0+255),b
  3202  000EA4                     l4903:
  3203                           
  3204                           ; BSR set to: 0
  3205  000EA4  0E63               	movlw	99
  3206  000EA6  65B0               	cpfsgt	delay@contador_ext& (0+255),b
  3207  000EA8  D001               	goto	l628
  3208  000EAA  0012               	return	
  3209  000EAC                     l628:
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;display_lcd.c: 50: {
  3213                           ;display_lcd.c: 51: __nop();
  3214  000EAC  F000               	nop	
  3215                           
  3216                           ;display_lcd.c: 52: for(contador_int = 0; contador_int<50; contador_int++)
  3217  000EAE  0E00               	movlw	0
  3218  000EB0  0100               	movlb	0	; () banked
  3219  000EB2  6FB1               	movwf	delay@contador_int& (0+255),b
  3220  000EB4                     l4909:
  3221                           
  3222                           ; BSR set to: 0
  3223  000EB4  0E31               	movlw	49
  3224  000EB6  65B1               	cpfsgt	delay@contador_int& (0+255),b
  3225  000EB8  D001               	goto	l630
  3226  000EBA  D004               	goto	u4080
  3227  000EBC                     l630:
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;display_lcd.c: 53: {
  3231                           ;display_lcd.c: 54: __nop();
  3232  000EBC  F000               	nop	
  3233  000EBE  0100               	movlb	0	; () banked
  3234  000EC0  2BB1               	incf	delay@contador_int& (0+255),f,b
  3235  000EC2  D7F8               	goto	l4909
  3236  000EC4                     u4080:
  3237                           
  3238                           ; BSR set to: 0
  3239                           
  3240                           ; BSR set to: 0
  3241  000EC4  2BB0               	incf	delay@contador_ext& (0+255),f,b
  3242  000EC6  D7EE               	goto	l4903
  3243  000EC8                     __end_of_delay:
  3244                           	opt stack 0
  3245                           tblptru	equ	0xFF8
  3246                           tblptrh	equ	0xFF7
  3247                           tblptrl	equ	0xFF6
  3248                           tablat	equ	0xFF5
  3249                           prodh	equ	0xFF4
  3250                           prodl	equ	0xFF3
  3251                           indf0	equ	0xFEF
  3252                           postinc0	equ	0xFEE
  3253                           fsr0h	equ	0xFEA
  3254                           fsr0l	equ	0xFE9
  3255                           wreg	equ	0xFE8
  3256                           postdec1	equ	0xFE5
  3257                           fsr1h	equ	0xFE2
  3258                           fsr1l	equ	0xFE1
  3259                           postinc2	equ	0xFDE
  3260                           postdec2	equ	0xFDD
  3261                           fsr2h	equ	0xFDA
  3262                           fsr2l	equ	0xFD9
  3263                           status	equ	0xFD8
  3264                           
  3265 ;; *************** function _init_hardware *****************
  3266 ;; Defined at:
  3267 ;;		line 55 in file "bibliotecas/hardware.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;		None
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;		None
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  1    wreg      void 
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3281 ;;      Params:         0       0       0       0       0       0       0       0       0
  3282 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3284 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3285 ;;Total ram usage:        0 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    7
  3288 ;; This function calls:
  3289 ;;		_config_timer_dois
  3290 ;;		_config_timer_zero
  3291 ;;		_init_interrupt
  3292 ;;		_init_oscilador
  3293 ;;		_init_ports
  3294 ;; This function is called by:
  3295 ;;		_main
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text12
  3300  000F7C                     __ptext12:
  3301                           	opt stack 0
  3302  000F7C                     _init_hardware:
  3303                           	opt stack 23
  3304                           
  3305                           ;hardware.c: 58: init_oscilador();
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;incstack = 0
  3309  000F7C  EC04  F008         	call	_init_oscilador	;wreg free
  3310                           
  3311                           ;hardware.c: 61: init_ports();
  3312  000F80  ECB2  F007         	call	_init_ports	;wreg free
  3313                           
  3314                           ;hardware.c: 64: config_timer_zero();
  3315  000F84  EC98  F007         	call	_config_timer_zero	;wreg free
  3316                           
  3317                           ;hardware.c: 67: config_timer_dois();
  3318  000F88  ECFE  F007         	call	_config_timer_dois	;wreg free
  3319                           
  3320                           ;hardware.c: 70: init_interrupt();
  3321  000F8C  ECD3  F007         	call	_init_interrupt	;wreg free
  3322  000F90  0012               	return		;funcret
  3323  000F92                     __end_of_init_hardware:
  3324                           	opt stack 0
  3325                           tblptru	equ	0xFF8
  3326                           tblptrh	equ	0xFF7
  3327                           tblptrl	equ	0xFF6
  3328                           tablat	equ	0xFF5
  3329                           prodh	equ	0xFF4
  3330                           prodl	equ	0xFF3
  3331                           indf0	equ	0xFEF
  3332                           postinc0	equ	0xFEE
  3333                           fsr0h	equ	0xFEA
  3334                           fsr0l	equ	0xFE9
  3335                           wreg	equ	0xFE8
  3336                           postdec1	equ	0xFE5
  3337                           fsr1h	equ	0xFE2
  3338                           fsr1l	equ	0xFE1
  3339                           postinc2	equ	0xFDE
  3340                           postdec2	equ	0xFDD
  3341                           fsr2h	equ	0xFDA
  3342                           fsr2l	equ	0xFD9
  3343                           status	equ	0xFD8
  3344                           
  3345 ;; *************** function _init_ports *****************
  3346 ;; Defined at:
  3347 ;;		line 154 in file "bibliotecas/hardware.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;		None
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  1    wreg      void 
  3354 ;; Registers used:
  3355 ;;		wreg, status,2
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3361 ;;      Params:         0       0       0       0       0       0       0       0       0
  3362 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3363 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3364 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3365 ;;Total ram usage:        0 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    5
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_init_hardware
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text13
  3376  000F64                     __ptext13:
  3377                           	opt stack 0
  3378  000F64                     _init_ports:
  3379                           	opt stack 24
  3380                           
  3381                           ;hardware.c: 156: TRISB = 0b00000001;
  3382                           
  3383                           ;incstack = 0
  3384  000F64  0E01               	movlw	1
  3385  000F66  6E93               	movwf	3987,c	;volatile
  3386                           
  3387                           ;hardware.c: 157: LATB = 0xFF;
  3388  000F68  688A               	setf	3978,c	;volatile
  3389                           
  3390                           ;hardware.c: 158: TRISD = 0x00;
  3391  000F6A  0E00               	movlw	0
  3392  000F6C  6E95               	movwf	3989,c	;volatile
  3393                           
  3394                           ;hardware.c: 159: TRISA = 0b00000111;
  3395  000F6E  0E07               	movlw	7
  3396  000F70  6E92               	movwf	3986,c	;volatile
  3397                           
  3398                           ;hardware.c: 160: TRISC = 0x11111111;
  3399  000F72  0E11               	movlw	17
  3400  000F74  6E94               	movwf	3988,c	;volatile
  3401                           
  3402                           ;hardware.c: 161: TRISE = 0b00000011;
  3403  000F76  0E03               	movlw	3
  3404  000F78  6E96               	movwf	3990,c	;volatile
  3405  000F7A  0012               	return		;funcret
  3406  000F7C                     __end_of_init_ports:
  3407                           	opt stack 0
  3408                           tblptru	equ	0xFF8
  3409                           tblptrh	equ	0xFF7
  3410                           tblptrl	equ	0xFF6
  3411                           tablat	equ	0xFF5
  3412                           prodh	equ	0xFF4
  3413                           prodl	equ	0xFF3
  3414                           indf0	equ	0xFEF
  3415                           postinc0	equ	0xFEE
  3416                           fsr0h	equ	0xFEA
  3417                           fsr0l	equ	0xFE9
  3418                           wreg	equ	0xFE8
  3419                           postdec1	equ	0xFE5
  3420                           fsr1h	equ	0xFE2
  3421                           fsr1l	equ	0xFE1
  3422                           postinc2	equ	0xFDE
  3423                           postdec2	equ	0xFDD
  3424                           fsr2h	equ	0xFDA
  3425                           fsr2l	equ	0xFD9
  3426                           status	equ	0xFD8
  3427                           
  3428 ;; *************** function _init_oscilador *****************
  3429 ;; Defined at:
  3430 ;;		line 171 in file "bibliotecas/hardware.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		None
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3444 ;;      Params:         0       0       0       0       0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3447 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3448 ;;Total ram usage:        0 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    5
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_init_hardware
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text14
  3459  001008                     __ptext14:
  3460                           	opt stack 0
  3461  001008                     _init_oscilador:
  3462                           	opt stack 24
  3463                           
  3464                           ;hardware.c: 174: OSCCONbits.IRCF0 = 1;
  3465                           
  3466                           ;incstack = 0
  3467  001008  88D3               	bsf	4051,4,c	;volatile
  3468                           
  3469                           ;hardware.c: 175: OSCCONbits.IRCF1 = 1;
  3470  00100A  8AD3               	bsf	4051,5,c	;volatile
  3471                           
  3472                           ;hardware.c: 176: OSCCONbits.IRCF2 = 1;
  3473  00100C  8CD3               	bsf	4051,6,c	;volatile
  3474  00100E  0012               	return		;funcret
  3475  001010                     __end_of_init_oscilador:
  3476                           	opt stack 0
  3477                           tblptru	equ	0xFF8
  3478                           tblptrh	equ	0xFF7
  3479                           tblptrl	equ	0xFF6
  3480                           tablat	equ	0xFF5
  3481                           prodh	equ	0xFF4
  3482                           prodl	equ	0xFF3
  3483                           indf0	equ	0xFEF
  3484                           postinc0	equ	0xFEE
  3485                           fsr0h	equ	0xFEA
  3486                           fsr0l	equ	0xFE9
  3487                           wreg	equ	0xFE8
  3488                           postdec1	equ	0xFE5
  3489                           fsr1h	equ	0xFE2
  3490                           fsr1l	equ	0xFE1
  3491                           postinc2	equ	0xFDE
  3492                           postdec2	equ	0xFDD
  3493                           fsr2h	equ	0xFDA
  3494                           fsr2l	equ	0xFD9
  3495                           status	equ	0xFD8
  3496                           
  3497 ;; *************** function _init_interrupt *****************
  3498 ;; Defined at:
  3499 ;;		line 98 in file "bibliotecas/hardware.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;		None
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  1    wreg      void 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3513 ;;      Params:         0       0       0       0       0       0       0       0       0
  3514 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3516 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3517 ;;Total ram usage:        0 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:    5
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_init_hardware
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text15
  3528  000FA6                     __ptext15:
  3529                           	opt stack 0
  3530  000FA6                     _init_interrupt:
  3531                           	opt stack 24
  3532                           
  3533                           ;hardware.c: 100: INTCON = 0b11110000;
  3534                           
  3535                           ;incstack = 0
  3536  000FA6  0EF0               	movlw	240
  3537  000FA8  6EF2               	movwf	intcon,c	;volatile
  3538                           
  3539                           ;hardware.c: 101: INTCON2 = 0b00000000;
  3540  000FAA  0E00               	movlw	0
  3541  000FAC  6EF1               	movwf	intcon2,c	;volatile
  3542                           
  3543                           ;hardware.c: 102: INTCON3 = 0b00000000;
  3544  000FAE  0E00               	movlw	0
  3545  000FB0  6EF0               	movwf	intcon3,c	;volatile
  3546                           
  3547                           ;hardware.c: 104: PIE1 = 0b00100000;
  3548  000FB2  0E20               	movlw	32
  3549  000FB4  6E9D               	movwf	3997,c	;volatile
  3550  000FB6  0012               	return		;funcret
  3551  000FB8                     __end_of_init_interrupt:
  3552                           	opt stack 0
  3553                           tblptru	equ	0xFF8
  3554                           tblptrh	equ	0xFF7
  3555                           tblptrl	equ	0xFF6
  3556                           tablat	equ	0xFF5
  3557                           prodh	equ	0xFF4
  3558                           prodl	equ	0xFF3
  3559                           intcon	equ	0xFF2
  3560                           intcon2	equ	0xFF1
  3561                           intcon3	equ	0xFF0
  3562                           indf0	equ	0xFEF
  3563                           postinc0	equ	0xFEE
  3564                           fsr0h	equ	0xFEA
  3565                           fsr0l	equ	0xFE9
  3566                           wreg	equ	0xFE8
  3567                           postdec1	equ	0xFE5
  3568                           fsr1h	equ	0xFE2
  3569                           fsr1l	equ	0xFE1
  3570                           postinc2	equ	0xFDE
  3571                           postdec2	equ	0xFDD
  3572                           fsr2h	equ	0xFDA
  3573                           fsr2l	equ	0xFD9
  3574                           status	equ	0xFD8
  3575                           
  3576 ;; *************** function _config_timer_zero *****************
  3577 ;; Defined at:
  3578 ;;		line 83 in file "bibliotecas/hardware.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;		None
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;		None
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  1    wreg      void 
  3585 ;; Registers used:
  3586 ;;		wreg, status,2, cstack
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3592 ;;      Params:         0       0       0       0       0       0       0       0       0
  3593 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3594 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3595 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3596 ;;Total ram usage:        0 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; Hardware stack levels required when called:    6
  3599 ;; This function calls:
  3600 ;;		_write_timer_zero
  3601 ;; This function is called by:
  3602 ;;		_init_hardware
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text16
  3607  000F30                     __ptext16:
  3608                           	opt stack 0
  3609  000F30                     _config_timer_zero:
  3610                           	opt stack 23
  3611                           
  3612                           ;hardware.c: 85: T0CON = 0b11000011;
  3613                           
  3614                           ;incstack = 0
  3615  000F30  0EC3               	movlw	195
  3616  000F32  6ED5               	movwf	4053,c	;volatile
  3617                           
  3618                           ;hardware.c: 86: SPPCON = 0b00000000;
  3619  000F34  0E00               	movlw	0
  3620  000F36  6E65               	movwf	3941,c	;volatile
  3621                           
  3622                           ;hardware.c: 87: SPPCFG = 0b00000000;
  3623  000F38  0E00               	movlw	0
  3624  000F3A  6E63               	movwf	3939,c	;volatile
  3625                           
  3626                           ;hardware.c: 88: write_timer_zero(0x0083);
  3627  000F3C  0E00               	movlw	0
  3628  000F3E  0100               	movlb	0	; () banked
  3629  000F40  6FB1               	movwf	(write_timer_zero@timer0+1)& (0+255),b
  3630  000F42  0E83               	movlw	131
  3631  000F44  6FB0               	movwf	write_timer_zero@timer0& (0+255),b
  3632  000F46  ECDC  F007         	call	_write_timer_zero	;wreg free
  3633  000F4A  0012               	return		;funcret
  3634  000F4C                     __end_of_config_timer_zero:
  3635                           	opt stack 0
  3636                           tblptru	equ	0xFF8
  3637                           tblptrh	equ	0xFF7
  3638                           tblptrl	equ	0xFF6
  3639                           tablat	equ	0xFF5
  3640                           prodh	equ	0xFF4
  3641                           prodl	equ	0xFF3
  3642                           intcon	equ	0xFF2
  3643                           intcon2	equ	0xFF1
  3644                           intcon3	equ	0xFF0
  3645                           indf0	equ	0xFEF
  3646                           postinc0	equ	0xFEE
  3647                           fsr0h	equ	0xFEA
  3648                           fsr0l	equ	0xFE9
  3649                           wreg	equ	0xFE8
  3650                           postdec1	equ	0xFE5
  3651                           fsr1h	equ	0xFE2
  3652                           fsr1l	equ	0xFE1
  3653                           postinc2	equ	0xFDE
  3654                           postdec2	equ	0xFDD
  3655                           fsr2h	equ	0xFDA
  3656                           fsr2l	equ	0xFD9
  3657                           status	equ	0xFD8
  3658                           
  3659 ;; *************** function _write_timer_zero *****************
  3660 ;; Defined at:
  3661 ;;		line 138 in file "bibliotecas/hardware.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  timer0          2    0[BANK0 ] unsigned int 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  timer           2    2[BANK0 ] struct Timers
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		None
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3675 ;;      Params:         0       2       0       0       0       0       0       0       0
  3676 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3677 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3678 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3679 ;;Total ram usage:        4 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:    5
  3682 ;; This function calls:
  3683 ;;		Nothing
  3684 ;; This function is called by:
  3685 ;;		_config_timer_zero
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           	psect	text17
  3690  000FB8                     __ptext17:
  3691                           	opt stack 0
  3692  000FB8                     _write_timer_zero:
  3693                           	opt stack 23
  3694                           
  3695                           ;hardware.c: 140: union Timers timer;
  3696                           ;hardware.c: 142: timer.lt = timer0;
  3697                           
  3698                           ;incstack = 0
  3699  000FB8  C0B0  F0B2         	movff	write_timer_zero@timer0,write_timer_zero@timer
  3700  000FBC  C0B1  F0B3         	movff	write_timer_zero@timer0+1,write_timer_zero@timer+1
  3701                           
  3702                           ;hardware.c: 144: TMR0H = timer.bt[1];
  3703  000FC0  C0B3  FFD7         	movff	write_timer_zero@timer+1,4055	;volatile
  3704                           
  3705                           ;hardware.c: 145: TMR0L = timer.bt[0];
  3706  000FC4  C0B2  FFD6         	movff	write_timer_zero@timer,4054	;volatile
  3707  000FC8  0012               	return		;funcret
  3708  000FCA                     __end_of_write_timer_zero:
  3709                           	opt stack 0
  3710                           tblptru	equ	0xFF8
  3711                           tblptrh	equ	0xFF7
  3712                           tblptrl	equ	0xFF6
  3713                           tablat	equ	0xFF5
  3714                           prodh	equ	0xFF4
  3715                           prodl	equ	0xFF3
  3716                           intcon	equ	0xFF2
  3717                           intcon2	equ	0xFF1
  3718                           intcon3	equ	0xFF0
  3719                           indf0	equ	0xFEF
  3720                           postinc0	equ	0xFEE
  3721                           fsr0h	equ	0xFEA
  3722                           fsr0l	equ	0xFE9
  3723                           wreg	equ	0xFE8
  3724                           postdec1	equ	0xFE5
  3725                           fsr1h	equ	0xFE2
  3726                           fsr1l	equ	0xFE1
  3727                           postinc2	equ	0xFDE
  3728                           postdec2	equ	0xFDD
  3729                           fsr2h	equ	0xFDA
  3730                           fsr2l	equ	0xFD9
  3731                           status	equ	0xFD8
  3732                           
  3733 ;; *************** function _config_timer_dois *****************
  3734 ;; Defined at:
  3735 ;;		line 200 in file "bibliotecas/hardware.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3749 ;;      Params:         0       0       0       0       0       0       0       0       0
  3750 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3751 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3752 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3753 ;;Total ram usage:        0 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; Hardware stack levels required when called:    5
  3756 ;; This function calls:
  3757 ;;		Nothing
  3758 ;; This function is called by:
  3759 ;;		_init_hardware
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text18
  3764  000FFC                     __ptext18:
  3765                           	opt stack 0
  3766  000FFC                     _config_timer_dois:
  3767                           	opt stack 24
  3768                           
  3769                           ;hardware.c: 202: T2CON = 0b00000100;
  3770                           
  3771                           ;incstack = 0
  3772  000FFC  0E04               	movlw	4
  3773  000FFE  6ECA               	movwf	4042,c	;volatile
  3774                           
  3775                           ;hardware.c: 203: TMR2 = 0;
  3776  001000  0E00               	movlw	0
  3777  001002  6ECC               	movwf	4044,c	;volatile
  3778                           
  3779                           ;hardware.c: 204: PR2 = 0xFF;
  3780  001004  68CB               	setf	4043,c	;volatile
  3781  001006  0012               	return		;funcret
  3782  001008                     __end_of_config_timer_dois:
  3783                           	opt stack 0
  3784                           tblptru	equ	0xFF8
  3785                           tblptrh	equ	0xFF7
  3786                           tblptrl	equ	0xFF6
  3787                           tablat	equ	0xFF5
  3788                           prodh	equ	0xFF4
  3789                           prodl	equ	0xFF3
  3790                           intcon	equ	0xFF2
  3791                           intcon2	equ	0xFF1
  3792                           intcon3	equ	0xFF0
  3793                           indf0	equ	0xFEF
  3794                           postinc0	equ	0xFEE
  3795                           fsr0h	equ	0xFEA
  3796                           fsr0l	equ	0xFE9
  3797                           wreg	equ	0xFE8
  3798                           postdec1	equ	0xFE5
  3799                           fsr1h	equ	0xFE2
  3800                           fsr1l	equ	0xFE1
  3801                           postinc2	equ	0xFDE
  3802                           postdec2	equ	0xFDD
  3803                           fsr2h	equ	0xFDA
  3804                           fsr2l	equ	0xFD9
  3805                           status	equ	0xFD8
  3806                           
  3807 ;; *************** function _inicializa_uart *****************
  3808 ;; Defined at:
  3809 ;;		line 206 in file "bibliotecas/uart.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;		None
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;		None
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  1    wreg      void 
  3816 ;; Registers used:
  3817 ;;		wreg, status,2, status,0, cstack
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3823 ;;      Params:         0       0       0       0       0       0       0       0       0
  3824 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3825 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3826 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3827 ;;Total ram usage:        0 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; Hardware stack levels required when called:    7
  3830 ;; This function calls:
  3831 ;;		_configura_baudrate_uart
  3832 ;; This function is called by:
  3833 ;;		_main
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text19
  3838  000EC8                     __ptext19:
  3839                           	opt stack 0
  3840  000EC8                     _inicializa_uart:
  3841                           	opt stack 23
  3842                           
  3843                           ;uart.c: 208: TRISCbits.RC6 = 0;
  3844                           
  3845                           ;incstack = 0
  3846  000EC8  9C94               	bcf	3988,6,c	;volatile
  3847                           
  3848                           ;uart.c: 209: TRISCbits.RC7 = 0;
  3849  000ECA  9E94               	bcf	3988,7,c	;volatile
  3850                           
  3851                           ;uart.c: 211: (void)configura_baudrate_uart(9600);
  3852  000ECC  0E80               	movlw	128
  3853  000ECE  0100               	movlb	0	; () banked
  3854  000ED0  6FBE               	movwf	configura_baudrate_uart@baudrate& (0+255),b
  3855  000ED2  0E25               	movlw	37
  3856  000ED4  6FBF               	movwf	(configura_baudrate_uart@baudrate+1)& (0+255),b
  3857  000ED6  0E00               	movlw	0
  3858  000ED8  6FC0               	movwf	(configura_baudrate_uart@baudrate+2)& (0+255),b
  3859  000EDA  0E00               	movlw	0
  3860  000EDC  6FC1               	movwf	(configura_baudrate_uart@baudrate+3)& (0+255),b
  3861  000EDE  ECB3  F000         	call	_configura_baudrate_uart	;wreg free
  3862                           
  3863                           ;uart.c: 213: TXSTA = 0x20;
  3864  000EE2  0E20               	movlw	32
  3865  000EE4  6EAC               	movwf	4012,c	;volatile
  3866                           
  3867                           ;uart.c: 214: RCSTA = 0x90;
  3868  000EE6  0E90               	movlw	144
  3869  000EE8  6EAB               	movwf	4011,c	;volatile
  3870  000EEA  0012               	return		;funcret
  3871  000EEC                     __end_of_inicializa_uart:
  3872                           	opt stack 0
  3873                           tblptru	equ	0xFF8
  3874                           tblptrh	equ	0xFF7
  3875                           tblptrl	equ	0xFF6
  3876                           tablat	equ	0xFF5
  3877                           prodh	equ	0xFF4
  3878                           prodl	equ	0xFF3
  3879                           intcon	equ	0xFF2
  3880                           intcon2	equ	0xFF1
  3881                           intcon3	equ	0xFF0
  3882                           indf0	equ	0xFEF
  3883                           postinc0	equ	0xFEE
  3884                           fsr0h	equ	0xFEA
  3885                           fsr0l	equ	0xFE9
  3886                           wreg	equ	0xFE8
  3887                           postdec1	equ	0xFE5
  3888                           fsr1h	equ	0xFE2
  3889                           fsr1l	equ	0xFE1
  3890                           postinc2	equ	0xFDE
  3891                           postdec2	equ	0xFDD
  3892                           fsr2h	equ	0xFDA
  3893                           fsr2l	equ	0xFD9
  3894                           status	equ	0xFD8
  3895                           
  3896 ;; *************** function _configura_baudrate_uart *****************
  3897 ;; Defined at:
  3898 ;;		line 50 in file "bibliotecas/uart.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;  baudrate        4   14[BANK0 ] const long 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  x               2   26[BANK0 ] unsigned int 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      unsigned char 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3912 ;;      Params:         0       4       0       0       0       0       0       0       0
  3913 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3914 ;;      Temps:          0       8       0       0       0       0       0       0       0
  3915 ;;      Totals:         0      14       0       0       0       0       0       0       0
  3916 ;;Total ram usage:       14 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    6
  3919 ;; This function calls:
  3920 ;;		___aldiv
  3921 ;; This function is called by:
  3922 ;;		_inicializa_uart
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text20
  3927  000166                     __ptext20:
  3928                           	opt stack 0
  3929  000166                     _configura_baudrate_uart:
  3930                           	opt stack 23
  3931                           
  3932                           ;uart.c: 52: unsigned int x;
  3933                           ;uart.c: 54: x = (48000000 - baudrate*64)/(baudrate*64);
  3934                           
  3935                           ;incstack = 0
  3936  000166  C0BE  F0C2         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  3937  00016A  C0BF  F0C3         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  3938  00016E  C0C0  F0C4         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  3939  000172  C0C1  F0C5         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  3940  000176  0E06               	movlw	6
  3941  000178                     u5235:
  3942  000178  90D8               	bcf	status,0,c
  3943  00017A  0100               	movlb	0	; () banked
  3944  00017C  37C2               	rlcf	??_configura_baudrate_uart& (0+255),f,b
  3945  00017E  37C3               	rlcf	(??_configura_baudrate_uart+1)& (0+255),f,b
  3946  000180  37C4               	rlcf	(??_configura_baudrate_uart+2)& (0+255),f,b
  3947  000182  37C5               	rlcf	(??_configura_baudrate_uart+3)& (0+255),f,b
  3948  000184  2EE8               	decfsz	wreg,f,c
  3949  000186  D7F8               	goto	u5235
  3950  000188  1FC2               	comf	??_configura_baudrate_uart& (0+255),f,b
  3951  00018A  1FC3               	comf	(??_configura_baudrate_uart+1)& (0+255),f,b
  3952  00018C  1FC4               	comf	(??_configura_baudrate_uart+2)& (0+255),f,b
  3953  00018E  1FC5               	comf	(??_configura_baudrate_uart+3)& (0+255),f,b
  3954  000190  2BC2               	incf	??_configura_baudrate_uart& (0+255),f,b
  3955  000192  0E00               	movlw	0
  3956  000194  23C3               	addwfc	(??_configura_baudrate_uart+1)& (0+255),f,b
  3957  000196  23C4               	addwfc	(??_configura_baudrate_uart+2)& (0+255),f,b
  3958  000198  23C5               	addwfc	(??_configura_baudrate_uart+3)& (0+255),f,b
  3959  00019A  0E00               	movlw	0
  3960  00019C  25C2               	addwf	??_configura_baudrate_uart& (0+255),w,b
  3961  00019E  6FB0               	movwf	___aldiv@dividend& (0+255),b
  3962  0001A0  0E6C               	movlw	108
  3963  0001A2  21C3               	addwfc	(??_configura_baudrate_uart+1)& (0+255),w,b
  3964  0001A4  6FB1               	movwf	(___aldiv@dividend+1)& (0+255),b
  3965  0001A6  0EDC               	movlw	220
  3966  0001A8  21C4               	addwfc	(??_configura_baudrate_uart+2)& (0+255),w,b
  3967  0001AA  6FB2               	movwf	(___aldiv@dividend+2)& (0+255),b
  3968  0001AC  0E02               	movlw	2
  3969  0001AE  21C5               	addwfc	(??_configura_baudrate_uart+3)& (0+255),w,b
  3970  0001B0  6FB3               	movwf	(___aldiv@dividend+3)& (0+255),b
  3971  0001B2  C0BE  F0C6         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  3972  0001B6  C0BF  F0C7         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  3973  0001BA  C0C0  F0C8         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  3974  0001BE  C0C1  F0C9         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  3975  0001C2  0E06               	movlw	6
  3976  0001C4                     u5245:
  3977  0001C4  90D8               	bcf	status,0,c
  3978  0001C6  37C6               	rlcf	(??_configura_baudrate_uart+4)& (0+255),f,b
  3979  0001C8  37C7               	rlcf	(??_configura_baudrate_uart+5)& (0+255),f,b
  3980  0001CA  37C8               	rlcf	(??_configura_baudrate_uart+6)& (0+255),f,b
  3981  0001CC  37C9               	rlcf	(??_configura_baudrate_uart+7)& (0+255),f,b
  3982  0001CE  2EE8               	decfsz	wreg,f,c
  3983  0001D0  D7F9               	goto	u5245
  3984  0001D2  C0C6  F0B4         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  3985  0001D6  C0C7  F0B5         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  3986  0001DA  C0C8  F0B6         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  3987  0001DE  C0C9  F0B7         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  3988  0001E2  EC68  F002         	call	___aldiv	;wreg free
  3989  0001E6  C0B0  F0CA         	movff	?___aldiv,configura_baudrate_uart@x
  3990  0001EA  C0B1  F0CB         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  3991                           
  3992                           ;uart.c: 55: if(x > 255)
  3993  0001EE  0100               	movlb	0	; () banked
  3994  0001F0  05CB               	decf	(configura_baudrate_uart@x+1)& (0+255),w,b
  3995  0001F2  A0D8               	btfss	status,0,c
  3996  0001F4  D044               	goto	l1185
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;uart.c: 56: {
  4000                           ;uart.c: 57: x = (48000000 - baudrate*16)/(baudrate*16);
  4001  0001F6  C0BE  F0C2         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  4002  0001FA  C0BF  F0C3         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  4003  0001FE  C0C0  F0C4         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  4004  000202  C0C1  F0C5         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  4005  000206  0E04               	movlw	4
  4006  000208                     u5265:
  4007  000208  90D8               	bcf	status,0,c
  4008  00020A  37C2               	rlcf	??_configura_baudrate_uart& (0+255),f,b
  4009  00020C  37C3               	rlcf	(??_configura_baudrate_uart+1)& (0+255),f,b
  4010  00020E  37C4               	rlcf	(??_configura_baudrate_uart+2)& (0+255),f,b
  4011  000210  37C5               	rlcf	(??_configura_baudrate_uart+3)& (0+255),f,b
  4012  000212  2EE8               	decfsz	wreg,f,c
  4013  000214  D7F9               	goto	u5265
  4014  000216  1FC2               	comf	??_configura_baudrate_uart& (0+255),f,b
  4015  000218  1FC3               	comf	(??_configura_baudrate_uart+1)& (0+255),f,b
  4016  00021A  1FC4               	comf	(??_configura_baudrate_uart+2)& (0+255),f,b
  4017  00021C  1FC5               	comf	(??_configura_baudrate_uart+3)& (0+255),f,b
  4018  00021E  2BC2               	incf	??_configura_baudrate_uart& (0+255),f,b
  4019  000220  0E00               	movlw	0
  4020  000222  23C3               	addwfc	(??_configura_baudrate_uart+1)& (0+255),f,b
  4021  000224  23C4               	addwfc	(??_configura_baudrate_uart+2)& (0+255),f,b
  4022  000226  23C5               	addwfc	(??_configura_baudrate_uart+3)& (0+255),f,b
  4023  000228  0E00               	movlw	0
  4024  00022A  25C2               	addwf	??_configura_baudrate_uart& (0+255),w,b
  4025  00022C  6FB0               	movwf	___aldiv@dividend& (0+255),b
  4026  00022E  0E6C               	movlw	108
  4027  000230  21C3               	addwfc	(??_configura_baudrate_uart+1)& (0+255),w,b
  4028  000232  6FB1               	movwf	(___aldiv@dividend+1)& (0+255),b
  4029  000234  0EDC               	movlw	220
  4030  000236  21C4               	addwfc	(??_configura_baudrate_uart+2)& (0+255),w,b
  4031  000238  6FB2               	movwf	(___aldiv@dividend+2)& (0+255),b
  4032  00023A  0E02               	movlw	2
  4033  00023C  21C5               	addwfc	(??_configura_baudrate_uart+3)& (0+255),w,b
  4034  00023E  6FB3               	movwf	(___aldiv@dividend+3)& (0+255),b
  4035  000240  C0BE  F0C6         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  4036  000244  C0BF  F0C7         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  4037  000248  C0C0  F0C8         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  4038  00024C  C0C1  F0C9         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  4039  000250  0E04               	movlw	4
  4040  000252                     u5275:
  4041  000252  90D8               	bcf	status,0,c
  4042  000254  37C6               	rlcf	(??_configura_baudrate_uart+4)& (0+255),f,b
  4043  000256  37C7               	rlcf	(??_configura_baudrate_uart+5)& (0+255),f,b
  4044  000258  37C8               	rlcf	(??_configura_baudrate_uart+6)& (0+255),f,b
  4045  00025A  37C9               	rlcf	(??_configura_baudrate_uart+7)& (0+255),f,b
  4046  00025C  2EE8               	decfsz	wreg,f,c
  4047  00025E  D7F9               	goto	u5275
  4048  000260  C0C6  F0B4         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  4049  000264  C0C7  F0B5         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  4050  000268  C0C8  F0B6         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  4051  00026C  C0C9  F0B7         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  4052  000270  EC68  F002         	call	___aldiv	;wreg free
  4053  000274  C0B0  F0CA         	movff	?___aldiv,configura_baudrate_uart@x
  4054  000278  C0B1  F0CB         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  4055                           
  4056                           ;uart.c: 58: BRGH = 1;
  4057  00027C  84AC               	bsf	4012,2,c	;volatile
  4058  00027E                     l1185:
  4059                           
  4060                           ;uart.c: 59: }
  4061                           ;uart.c: 60: if(x < 256)
  4062  00027E  0100               	movlb	0	; () banked
  4063  000280  05CB               	decf	(configura_baudrate_uart@x+1)& (0+255),w,b
  4064  000282  B0D8               	btfsc	status,0,c
  4065  000284  0012               	return	
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;uart.c: 61: {
  4069                           ;uart.c: 62: SPBRG = x;
  4070  000286  C0CA  FFAF         	movff	configura_baudrate_uart@x,4015	;volatile
  4071                           
  4072                           ;uart.c: 63: SYNC = 0;
  4073  00028A  98AC               	bcf	4012,4,c	;volatile
  4074                           
  4075                           ;uart.c: 64: SPEN = 1;
  4076  00028C  8EAB               	bsf	4011,7,c	;volatile
  4077                           
  4078                           ;uart.c: 65: TRISCbits.RC7 = 1;
  4079  00028E  8E94               	bsf	3988,7,c	;volatile
  4080                           
  4081                           ;uart.c: 66: TRISCbits.RC6 = 0;
  4082  000290  9C94               	bcf	3988,6,c	;volatile
  4083                           
  4084                           ;uart.c: 67: CREN = 1;
  4085  000292  88AB               	bsf	4011,4,c	;volatile
  4086                           
  4087                           ;uart.c: 68: TXEN = 1;
  4088  000294  8AAC               	bsf	4012,5,c	;volatile
  4089                           
  4090                           ;uart.c: 70: return (1);
  4091                           ;	Return value of _configura_baudrate_uart is never used
  4092  000296  0012               	return	
  4093  000298                     __end_of_configura_baudrate_uart:
  4094                           	opt stack 0
  4095                           tblptru	equ	0xFF8
  4096                           tblptrh	equ	0xFF7
  4097                           tblptrl	equ	0xFF6
  4098                           tablat	equ	0xFF5
  4099                           prodh	equ	0xFF4
  4100                           prodl	equ	0xFF3
  4101                           intcon	equ	0xFF2
  4102                           intcon2	equ	0xFF1
  4103                           intcon3	equ	0xFF0
  4104                           indf0	equ	0xFEF
  4105                           postinc0	equ	0xFEE
  4106                           fsr0h	equ	0xFEA
  4107                           fsr0l	equ	0xFE9
  4108                           wreg	equ	0xFE8
  4109                           postdec1	equ	0xFE5
  4110                           fsr1h	equ	0xFE2
  4111                           fsr1l	equ	0xFE1
  4112                           postinc2	equ	0xFDE
  4113                           postdec2	equ	0xFDD
  4114                           fsr2h	equ	0xFDA
  4115                           fsr2l	equ	0xFD9
  4116                           status	equ	0xFD8
  4117                           
  4118 ;; *************** function ___aldiv *****************
  4119 ;; Defined at:
  4120 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  dividend        4    0[BANK0 ] long 
  4123 ;;  divisor         4    4[BANK0 ] long 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  quotient        4   10[BANK0 ] long 
  4126 ;;  sign            1    9[BANK0 ] unsigned char 
  4127 ;;  counter         1    8[BANK0 ] unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  4    0[BANK0 ] long 
  4130 ;; Registers used:
  4131 ;;		wreg, status,2, status,0
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4137 ;;      Params:         0       8       0       0       0       0       0       0       0
  4138 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4140 ;;      Totals:         0      14       0       0       0       0       0       0       0
  4141 ;;Total ram usage:       14 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; Hardware stack levels required when called:    5
  4144 ;; This function calls:
  4145 ;;		Nothing
  4146 ;; This function is called by:
  4147 ;;		_configura_baudrate_uart
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text21
  4152  0004D0                     __ptext21:
  4153                           	opt stack 0
  4154  0004D0                     ___aldiv:
  4155                           	opt stack 23
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;incstack = 0
  4159  0004D0  0E00               	movlw	0
  4160  0004D2  0100               	movlb	0	; () banked
  4161  0004D4  6FB9               	movwf	___aldiv@sign& (0+255),b
  4162                           
  4163                           ; BSR set to: 0
  4164  0004D6  AFB7               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  4165  0004D8  D00A               	goto	l1318
  4166                           
  4167                           ; BSR set to: 0
  4168  0004DA  1FB7               	comf	(___aldiv@divisor+3)& (0+255),f,b
  4169  0004DC  1FB6               	comf	(___aldiv@divisor+2)& (0+255),f,b
  4170  0004DE  1FB5               	comf	(___aldiv@divisor+1)& (0+255),f,b
  4171  0004E0  6DB4               	negf	___aldiv@divisor& (0+255),b
  4172  0004E2  0E00               	movlw	0
  4173  0004E4  23B5               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  4174  0004E6  23B6               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  4175  0004E8  23B7               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  4176                           
  4177                           ; BSR set to: 0
  4178  0004EA  0E01               	movlw	1
  4179  0004EC  6FB9               	movwf	___aldiv@sign& (0+255),b
  4180  0004EE                     l1318:
  4181                           
  4182                           ; BSR set to: 0
  4183                           
  4184                           ; BSR set to: 0
  4185  0004EE  AFB3               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  4186  0004F0  D00A               	goto	l1319
  4187                           
  4188                           ; BSR set to: 0
  4189  0004F2  1FB3               	comf	(___aldiv@dividend+3)& (0+255),f,b
  4190  0004F4  1FB2               	comf	(___aldiv@dividend+2)& (0+255),f,b
  4191  0004F6  1FB1               	comf	(___aldiv@dividend+1)& (0+255),f,b
  4192  0004F8  6DB0               	negf	___aldiv@dividend& (0+255),b
  4193  0004FA  0E00               	movlw	0
  4194  0004FC  23B1               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  4195  0004FE  23B2               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  4196  000500  23B3               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  4197                           
  4198                           ; BSR set to: 0
  4199  000502  0E01               	movlw	1
  4200  000504  1BB9               	xorwf	___aldiv@sign& (0+255),f,b
  4201  000506                     l1319:
  4202                           
  4203                           ; BSR set to: 0
  4204                           
  4205                           ; BSR set to: 0
  4206  000506  0E00               	movlw	0
  4207  000508  6FBA               	movwf	___aldiv@quotient& (0+255),b
  4208  00050A  0E00               	movlw	0
  4209  00050C  6FBB               	movwf	(___aldiv@quotient+1)& (0+255),b
  4210  00050E  0E00               	movlw	0
  4211  000510  6FBC               	movwf	(___aldiv@quotient+2)& (0+255),b
  4212  000512  0E00               	movlw	0
  4213  000514  6FBD               	movwf	(___aldiv@quotient+3)& (0+255),b
  4214                           
  4215                           ; BSR set to: 0
  4216  000516  51B4               	movf	___aldiv@divisor& (0+255),w,b
  4217  000518  11B5               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  4218  00051A  11B6               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  4219  00051C  11B7               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  4220  00051E  B4D8               	btfsc	status,2,c
  4221  000520  D02A               	goto	l1326
  4222                           
  4223                           ; BSR set to: 0
  4224  000522  0E01               	movlw	1
  4225  000524  6FB8               	movwf	___aldiv@counter& (0+255),b
  4226  000526  D006               	goto	l1321
  4227  000528                     
  4228                           ; BSR set to: 0
  4229                           
  4230                           ; BSR set to: 0
  4231  000528  90D8               	bcf	status,0,c
  4232  00052A  37B4               	rlcf	___aldiv@divisor& (0+255),f,b
  4233  00052C  37B5               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  4234  00052E  37B6               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  4235  000530  37B7               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  4236  000532  2BB8               	incf	___aldiv@counter& (0+255),f,b
  4237  000534                     l1321:
  4238                           
  4239                           ; BSR set to: 0
  4240                           
  4241                           ; BSR set to: 0
  4242  000534  AFB7               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  4243  000536  D7F8               	goto	l1322
  4244  000538                     u4540:
  4245                           
  4246                           ; BSR set to: 0
  4247                           
  4248                           ; BSR set to: 0
  4249                           
  4250                           ; BSR set to: 0
  4251  000538  90D8               	bcf	status,0,c
  4252  00053A  37BA               	rlcf	___aldiv@quotient& (0+255),f,b
  4253  00053C  37BB               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  4254  00053E  37BC               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  4255  000540  37BD               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  4256                           
  4257                           ; BSR set to: 0
  4258  000542  51B4               	movf	___aldiv@divisor& (0+255),w,b
  4259  000544  5DB0               	subwf	___aldiv@dividend& (0+255),w,b
  4260  000546  51B5               	movf	(___aldiv@divisor+1)& (0+255),w,b
  4261  000548  59B1               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  4262  00054A  51B6               	movf	(___aldiv@divisor+2)& (0+255),w,b
  4263  00054C  59B2               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  4264  00054E  51B7               	movf	(___aldiv@divisor+3)& (0+255),w,b
  4265  000550  59B3               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  4266  000552  A0D8               	btfss	status,0,c
  4267  000554  D009               	goto	l1325
  4268                           
  4269                           ; BSR set to: 0
  4270  000556  51B4               	movf	___aldiv@divisor& (0+255),w,b
  4271  000558  5FB0               	subwf	___aldiv@dividend& (0+255),f,b
  4272  00055A  51B5               	movf	(___aldiv@divisor+1)& (0+255),w,b
  4273  00055C  5BB1               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  4274  00055E  51B6               	movf	(___aldiv@divisor+2)& (0+255),w,b
  4275  000560  5BB2               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  4276  000562  51B7               	movf	(___aldiv@divisor+3)& (0+255),w,b
  4277  000564  5BB3               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  4278                           
  4279                           ; BSR set to: 0
  4280  000566  81BA               	bsf	___aldiv@quotient& (0+255),0,b
  4281  000568                     l1325:
  4282                           
  4283                           ; BSR set to: 0
  4284                           
  4285                           ; BSR set to: 0
  4286  000568  90D8               	bcf	status,0,c
  4287  00056A  33B7               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  4288  00056C  33B6               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  4289  00056E  33B5               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  4290  000570  33B4               	rrcf	___aldiv@divisor& (0+255),f,b
  4291                           
  4292                           ; BSR set to: 0
  4293  000572  2FB8               	decfsz	___aldiv@counter& (0+255),f,b
  4294  000574  D7E1               	goto	u4540
  4295  000576                     l1326:
  4296                           
  4297                           ; BSR set to: 0
  4298                           
  4299                           ; BSR set to: 0
  4300                           
  4301                           ; BSR set to: 0
  4302  000576  51B9               	movf	___aldiv@sign& (0+255),w,b
  4303  000578  B4D8               	btfsc	status,2,c
  4304  00057A  D008               	goto	l1327
  4305                           
  4306                           ; BSR set to: 0
  4307  00057C  1FBD               	comf	(___aldiv@quotient+3)& (0+255),f,b
  4308  00057E  1FBC               	comf	(___aldiv@quotient+2)& (0+255),f,b
  4309  000580  1FBB               	comf	(___aldiv@quotient+1)& (0+255),f,b
  4310  000582  6DBA               	negf	___aldiv@quotient& (0+255),b
  4311  000584  0E00               	movlw	0
  4312  000586  23BB               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  4313  000588  23BC               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  4314  00058A  23BD               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  4315  00058C                     l1327:
  4316                           
  4317                           ; BSR set to: 0
  4318                           
  4319                           ; BSR set to: 0
  4320  00058C  C0BA  F0B0         	movff	___aldiv@quotient,?___aldiv
  4321  000590  C0BB  F0B1         	movff	___aldiv@quotient+1,?___aldiv+1
  4322  000594  C0BC  F0B2         	movff	___aldiv@quotient+2,?___aldiv+2
  4323  000598  C0BD  F0B3         	movff	___aldiv@quotient+3,?___aldiv+3
  4324  00059C  0012               	return	
  4325  00059E                     __end_of___aldiv:
  4326                           	opt stack 0
  4327                           tblptru	equ	0xFF8
  4328                           tblptrh	equ	0xFF7
  4329                           tblptrl	equ	0xFF6
  4330                           tablat	equ	0xFF5
  4331                           prodh	equ	0xFF4
  4332                           prodl	equ	0xFF3
  4333                           intcon	equ	0xFF2
  4334                           intcon2	equ	0xFF1
  4335                           intcon3	equ	0xFF0
  4336                           indf0	equ	0xFEF
  4337                           postinc0	equ	0xFEE
  4338                           fsr0h	equ	0xFEA
  4339                           fsr0l	equ	0xFE9
  4340                           wreg	equ	0xFE8
  4341                           postdec1	equ	0xFE5
  4342                           fsr1h	equ	0xFE2
  4343                           fsr1l	equ	0xFE1
  4344                           postinc2	equ	0xFDE
  4345                           postdec2	equ	0xFDD
  4346                           fsr2h	equ	0xFDA
  4347                           fsr2l	equ	0xFD9
  4348                           status	equ	0xFD8
  4349                           
  4350 ;; *************** function _inicializa_tarefas *****************
  4351 ;; Defined at:
  4352 ;;		line 159 in file "main.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;		None
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      void 
  4359 ;; Registers used:
  4360 ;;		wreg, status,2, status,0
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4366 ;;      Params:         0       0       0       0       0       0       0       0       0
  4367 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4369 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4370 ;;Total ram usage:        0 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; Hardware stack levels required when called:    5
  4373 ;; This function calls:
  4374 ;;		Nothing
  4375 ;; This function is called by:
  4376 ;;		_main
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text22
  4381  000F10                     __ptext22:
  4382                           	opt stack 0
  4383  000F10                     _inicializa_tarefas:
  4384                           	opt stack 25
  4385                           
  4386                           ;main.c: 162: p_tarefas[0] = GPS;
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;incstack = 0
  4390  000F10  0E18               	movlw	low _GPS
  4391  000F12  0100               	movlb	0	; () banked
  4392  000F14  6F9A               	movwf	_p_tarefas& (0+255),b
  4393  000F16  0E10               	movlw	high _GPS
  4394  000F18  6F9B               	movwf	(_p_tarefas+1)& (0+255),b
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;main.c: 166: tempo_backup[0] = 5000;
  4398  000F1A  0E13               	movlw	19
  4399  000F1C  6F97               	movwf	(_tempo_backup+1)& (0+255),b
  4400  000F1E  0E88               	movlw	136
  4401  000F20  6F96               	movwf	_tempo_backup& (0+255),b
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;main.c: 171: tempo_tarefa[0] = 5000;
  4405  000F22  0E13               	movlw	19
  4406  000F24  6E3F               	movwf	_tempo_tarefa+1,c
  4407  000F26  0E88               	movlw	136
  4408  000F28  6E3E               	movwf	_tempo_tarefa,c
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;main.c: 175: tarefa_em_execucao = 0;
  4412  000F2A  0E00               	movlw	0
  4413  000F2C  6E5D               	movwf	_tarefa_em_execucao,c	;volatile
  4414                           
  4415                           ; BSR set to: 0
  4416  000F2E  0012               	return		;funcret
  4417  000F30                     __end_of_inicializa_tarefas:
  4418                           	opt stack 0
  4419                           tblptru	equ	0xFF8
  4420                           tblptrh	equ	0xFF7
  4421                           tblptrl	equ	0xFF6
  4422                           tablat	equ	0xFF5
  4423                           prodh	equ	0xFF4
  4424                           prodl	equ	0xFF3
  4425                           intcon	equ	0xFF2
  4426                           intcon2	equ	0xFF1
  4427                           intcon3	equ	0xFF0
  4428                           indf0	equ	0xFEF
  4429                           postinc0	equ	0xFEE
  4430                           fsr0h	equ	0xFEA
  4431                           fsr0l	equ	0xFE9
  4432                           wreg	equ	0xFE8
  4433                           postdec1	equ	0xFE5
  4434                           fsr1h	equ	0xFE2
  4435                           fsr1l	equ	0xFE1
  4436                           postinc2	equ	0xFDE
  4437                           postdec2	equ	0xFDD
  4438                           fsr2h	equ	0xFDA
  4439                           fsr2l	equ	0xFD9
  4440                           status	equ	0xFD8
  4441                           
  4442 ;; *************** function _inicializa_shrc *****************
  4443 ;; Defined at:
  4444 ;;		line 47 in file "bibliotecas/SHRC.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;		None
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;		None
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  1    wreg      void 
  4451 ;; Registers used:
  4452 ;;		None
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4458 ;;      Params:         0       0       0       0       0       0       0       0       0
  4459 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4461 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4462 ;;Total ram usage:        0 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; Hardware stack levels required when called:    5
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		_main
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text23
  4473  001010                     __ptext23:
  4474                           	opt stack 0
  4475  001010                     _inicializa_shrc:
  4476                           	opt stack 25
  4477                           
  4478                           ;SHRC.c: 49: LATBbits.LATB5 = 0;
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;incstack = 0
  4482  001010  9A8A               	bcf	3978,5,c	;volatile
  4483                           
  4484                           ;SHRC.c: 50: LATBbits.LATB6 = 0;
  4485  001012  9C8A               	bcf	3978,6,c	;volatile
  4486                           
  4487                           ;SHRC.c: 51: LATBbits.LATB7 = 0;
  4488  001014  9E8A               	bcf	3978,7,c	;volatile
  4489  001016  0012               	return		;funcret
  4490  001018                     __end_of_inicializa_shrc:
  4491                           	opt stack 0
  4492                           tblptru	equ	0xFF8
  4493                           tblptrh	equ	0xFF7
  4494                           tblptrl	equ	0xFF6
  4495                           tablat	equ	0xFF5
  4496                           prodh	equ	0xFF4
  4497                           prodl	equ	0xFF3
  4498                           intcon	equ	0xFF2
  4499                           intcon2	equ	0xFF1
  4500                           intcon3	equ	0xFF0
  4501                           indf0	equ	0xFEF
  4502                           postinc0	equ	0xFEE
  4503                           fsr0h	equ	0xFEA
  4504                           fsr0l	equ	0xFE9
  4505                           wreg	equ	0xFE8
  4506                           postdec1	equ	0xFE5
  4507                           fsr1h	equ	0xFE2
  4508                           fsr1l	equ	0xFE1
  4509                           postinc2	equ	0xFDE
  4510                           postdec2	equ	0xFDD
  4511                           fsr2h	equ	0xFDA
  4512                           fsr2l	equ	0xFD9
  4513                           status	equ	0xFD8
  4514                           
  4515 ;; *************** function _escalonador *****************
  4516 ;; Defined at:
  4517 ;;		line 186 in file "main.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;		None
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;  cont            1    2[BANK0 ] unsigned char 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      void 
  4524 ;; Registers used:
  4525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4531 ;;      Params:         0       0       0       0       0       0       0       0       0
  4532 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4533 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4534 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4535 ;;Total ram usage:        3 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; Hardware stack levels required when called:    6
  4538 ;; This function calls:
  4539 ;;		_GPS
  4540 ;; This function is called by:
  4541 ;;		_main
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text24
  4546  00059E                     __ptext24:
  4547                           	opt stack 0
  4548  00059E                     _escalonador:
  4549                           	opt stack 24
  4550                           
  4551                           ;main.c: 188: unsigned char cont;
  4552                           ;main.c: 189: for(cont = 0; cont<2;cont++)
  4553                           
  4554                           ;incstack = 0
  4555  00059E  0E00               	movlw	0
  4556  0005A0  0100               	movlb	0	; () banked
  4557  0005A2  6FB2               	movwf	escalonador@cont& (0+255),b
  4558  0005A4                     l5733:
  4559                           
  4560                           ; BSR set to: 0
  4561  0005A4  0E01               	movlw	1
  4562  0005A6  65B2               	cpfsgt	escalonador@cont& (0+255),b
  4563  0005A8  D001               	goto	l89
  4564  0005AA  0012               	return	
  4565  0005AC                     l89:
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;main.c: 190: {
  4569                           ;main.c: 191: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  4570                           
  4571                           ; BSR set to: 0
  4572  0005AC  51B2               	movf	escalonador@cont& (0+255),w,b
  4573  0005AE  0D02               	mullw	2
  4574  0005B0  0E9A               	movlw	low _p_tarefas
  4575  0005B2  24F3               	addwf	prodl,w,c
  4576  0005B4  6ED9               	movwf	fsr2l,c
  4577  0005B6  0E00               	movlw	high _p_tarefas
  4578  0005B8  20F4               	addwfc	prodh,w,c
  4579  0005BA  6EDA               	movwf	fsr2h,c
  4580  0005BC  50DE               	movf	postinc2,w,c
  4581  0005BE  10DE               	iorwf	postinc2,w,c
  4582  0005C0  B4D8               	btfsc	status,2,c
  4583  0005C2  D03D               	goto	l91
  4584                           
  4585                           ; BSR set to: 0
  4586  0005C4  51B2               	movf	escalonador@cont& (0+255),w,b
  4587  0005C6  0D02               	mullw	2
  4588  0005C8  0E3E               	movlw	low _tempo_tarefa
  4589  0005CA  24F3               	addwf	prodl,w,c
  4590  0005CC  6ED9               	movwf	fsr2l,c
  4591  0005CE  0E00               	movlw	high _tempo_tarefa
  4592  0005D0  20F4               	addwfc	prodh,w,c
  4593  0005D2  6EDA               	movwf	fsr2h,c
  4594  0005D4  50DE               	movf	postinc2,w,c
  4595  0005D6  10DE               	iorwf	postinc2,w,c
  4596  0005D8  A4D8               	btfss	status,2,c
  4597  0005DA  D031               	goto	l91
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;main.c: 192: {
  4601                           ;main.c: 193: tarefa_em_execucao = 1;
  4602  0005DC  0E01               	movlw	1
  4603  0005DE  6E5D               	movwf	_tarefa_em_execucao,c	;volatile
  4604                           
  4605                           ;main.c: 194: timeout_tarefa = 65000;
  4606  0005E0  0EFD               	movlw	253
  4607  0005E2  6E53               	movwf	_timeout_tarefa+1,c
  4608  0005E4  0EE8               	movlw	232
  4609  0005E6  6E52               	movwf	_timeout_tarefa,c
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;main.c: 195: p_tarefas[cont]();
  4613  0005E8  51B2               	movf	escalonador@cont& (0+255),w,b
  4614  0005EA  0D02               	mullw	2
  4615  0005EC  0E9A               	movlw	low _p_tarefas
  4616  0005EE  24F3               	addwf	prodl,w,c
  4617  0005F0  6ED9               	movwf	fsr2l,c
  4618  0005F2  0E00               	movlw	high _p_tarefas
  4619  0005F4  20F4               	addwfc	prodh,w,c
  4620  0005F6  6EDA               	movwf	fsr2h,c
  4621  0005F8  D801               	call	u5598
  4622  0005FA  D00A               	goto	u5599
  4623  0005FC                     u5598:
  4624  0005FC  0005               	push	
  4625  0005FE  6EFA               	movwf	pclath,c
  4626  000600  50DE               	movf	postinc2,w,c
  4627  000602  6EFD               	movwf	tosl,c
  4628  000604  50DE               	movf	postinc2,w,c
  4629  000606  6EFE               	movwf	tosh,c
  4630  000608  50F8               	movf	tblptru,w,c
  4631  00060A  6EFF               	movwf	tosu,c
  4632  00060C  50FA               	movf	pclath,w,c
  4633  00060E  0012               	return		;indir
  4634  000610                     u5599:
  4635                           
  4636                           ;main.c: 196: tarefa_em_execucao = 0;
  4637  000610  0E00               	movlw	0
  4638  000612  6E5D               	movwf	_tarefa_em_execucao,c	;volatile
  4639                           
  4640                           ;main.c: 197: tempo_tarefa[cont] = tempo_backup[cont];
  4641  000614  0100               	movlb	0	; () banked
  4642  000616  51B2               	movf	escalonador@cont& (0+255),w,b
  4643  000618  0D02               	mullw	2
  4644  00061A  0E96               	movlw	low _tempo_backup
  4645  00061C  24F3               	addwf	prodl,w,c
  4646  00061E  6ED9               	movwf	fsr2l,c
  4647  000620  0E00               	movlw	high _tempo_backup
  4648  000622  20F4               	addwfc	prodh,w,c
  4649  000624  6EDA               	movwf	fsr2h,c
  4650  000626  51B2               	movf	escalonador@cont& (0+255),w,b
  4651  000628  0D02               	mullw	2
  4652  00062A  0E3E               	movlw	low _tempo_tarefa
  4653  00062C  24F3               	addwf	prodl,w,c
  4654  00062E  6EE1               	movwf	fsr1l,c
  4655  000630  0E00               	movlw	high _tempo_tarefa
  4656  000632  20F4               	addwfc	prodh,w,c
  4657  000634  6EE2               	movwf	fsr1h,c
  4658  000636  CFDE FFE6          	movff	postinc2,postinc1
  4659  00063A  CFDD FFE5          	movff	postdec2,postdec1
  4660  00063E                     l91:
  4661                           
  4662                           ; BSR set to: 0
  4663                           
  4664                           ; BSR set to: 0
  4665  00063E  2BB2               	incf	escalonador@cont& (0+255),f,b
  4666  000640  D7B1               	goto	l5733
  4667  000642                     __end_of_escalonador:
  4668                           	opt stack 0
  4669                           tosu	equ	0xFFF
  4670                           tosh	equ	0xFFE
  4671                           tosl	equ	0xFFD
  4672                           pclath	equ	0xFFA
  4673                           tblptru	equ	0xFF8
  4674                           tblptrh	equ	0xFF7
  4675                           tblptrl	equ	0xFF6
  4676                           tablat	equ	0xFF5
  4677                           prodh	equ	0xFF4
  4678                           prodl	equ	0xFF3
  4679                           intcon	equ	0xFF2
  4680                           intcon2	equ	0xFF1
  4681                           intcon3	equ	0xFF0
  4682                           indf0	equ	0xFEF
  4683                           postinc0	equ	0xFEE
  4684                           fsr0h	equ	0xFEA
  4685                           fsr0l	equ	0xFE9
  4686                           wreg	equ	0xFE8
  4687                           postinc1	equ	0xFE6
  4688                           postdec1	equ	0xFE5
  4689                           fsr1h	equ	0xFE2
  4690                           fsr1l	equ	0xFE1
  4691                           postinc2	equ	0xFDE
  4692                           postdec2	equ	0xFDD
  4693                           fsr2h	equ	0xFDA
  4694                           fsr2l	equ	0xFD9
  4695                           status	equ	0xFD8
  4696                           
  4697 ;; *************** function _GPS *****************
  4698 ;; Defined at:
  4699 ;;		line 40 in file "bibliotecas/GPS.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;		None
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;  data_out       34    0        unsigned char [34]
  4704 ;;  GPS_Buffer     15    0        unsigned char [15]
  4705 ;;  Time            4    0        unsigned long 
  4706 ;;  Altitude        3    0        float 
  4707 ;;  Longitude       3    0        float 
  4708 ;;  Latitude        3    0        float 
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  1    wreg      void 
  4711 ;; Registers used:
  4712 ;;		None
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4718 ;;      Params:         0       0       0       0       0       0       0       0       0
  4719 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4721 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4722 ;;Total ram usage:        0 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; Hardware stack levels required when called:    5
  4725 ;; This function calls:
  4726 ;;		Nothing
  4727 ;; This function is called by:
  4728 ;;		_inicializa_tarefas
  4729 ;;		_escalonador
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text25
  4734  001018                     __ptext25:
  4735                           	opt stack 0
  4736  001018                     _GPS:
  4737                           	opt stack 24
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;incstack = 0
  4741  001018  0012               	return		;funcret
  4742  00101A                     __end_of_GPS:
  4743                           	opt stack 0
  4744                           tosu	equ	0xFFF
  4745                           tosh	equ	0xFFE
  4746                           tosl	equ	0xFFD
  4747                           pclath	equ	0xFFA
  4748                           tblptru	equ	0xFF8
  4749                           tblptrh	equ	0xFF7
  4750                           tblptrl	equ	0xFF6
  4751                           tablat	equ	0xFF5
  4752                           prodh	equ	0xFF4
  4753                           prodl	equ	0xFF3
  4754                           intcon	equ	0xFF2
  4755                           intcon2	equ	0xFF1
  4756                           intcon3	equ	0xFF0
  4757                           indf0	equ	0xFEF
  4758                           postinc0	equ	0xFEE
  4759                           fsr0h	equ	0xFEA
  4760                           fsr0l	equ	0xFE9
  4761                           wreg	equ	0xFE8
  4762                           postinc1	equ	0xFE6
  4763                           postdec1	equ	0xFE5
  4764                           fsr1h	equ	0xFE2
  4765                           fsr1l	equ	0xFE1
  4766                           postinc2	equ	0xFDE
  4767                           postdec2	equ	0xFDD
  4768                           fsr2h	equ	0xFDA
  4769                           fsr2l	equ	0xFD9
  4770                           status	equ	0xFD8
  4771                           
  4772 ;; *************** function _controle_shrc *****************
  4773 ;; Defined at:
  4774 ;;		line 112 in file "bibliotecas/SHRC.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;		None
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;		None
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  1    wreg      void 
  4781 ;; Registers used:
  4782 ;;		wreg, status,2, status,0, cstack
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4788 ;;      Params:         0       0       0       0       0       0       0       0       0
  4789 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4790 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4791 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4792 ;;Total ram usage:        0 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; Hardware stack levels required when called:    6
  4795 ;; This function calls:
  4796 ;;		_ativa_latch_shrc
  4797 ;;		_envia_dados_shrc
  4798 ;; This function is called by:
  4799 ;;		_main
  4800 ;;		_timer_dois
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text26
  4805  000FEE                     __ptext26:
  4806                           	opt stack 0
  4807  000FEE                     _controle_shrc:
  4808                           	opt stack 24
  4809                           
  4810                           ;SHRC.c: 115: envia_dados_shrc(dado);
  4811                           
  4812                           ;incstack = 0
  4813  000FEE  0100               	movlb	0	; () banked
  4814  000FF0  519F               	movf	_dado& (0+255),w,b
  4815  000FF2  EC92  F006         	call	_envia_dados_shrc
  4816                           
  4817                           ;SHRC.c: 116: ativa_latch_shrc();
  4818  000FF6  ECC9  F007         	call	_ativa_latch_shrc	;wreg free
  4819  000FFA  0012               	return		;funcret
  4820  000FFC                     __end_of_controle_shrc:
  4821                           	opt stack 0
  4822                           tosu	equ	0xFFF
  4823                           tosh	equ	0xFFE
  4824                           tosl	equ	0xFFD
  4825                           pclath	equ	0xFFA
  4826                           tblptru	equ	0xFF8
  4827                           tblptrh	equ	0xFF7
  4828                           tblptrl	equ	0xFF6
  4829                           tablat	equ	0xFF5
  4830                           prodh	equ	0xFF4
  4831                           prodl	equ	0xFF3
  4832                           intcon	equ	0xFF2
  4833                           intcon2	equ	0xFF1
  4834                           intcon3	equ	0xFF0
  4835                           indf0	equ	0xFEF
  4836                           postinc0	equ	0xFEE
  4837                           fsr0h	equ	0xFEA
  4838                           fsr0l	equ	0xFE9
  4839                           wreg	equ	0xFE8
  4840                           postinc1	equ	0xFE6
  4841                           postdec1	equ	0xFE5
  4842                           fsr1h	equ	0xFE2
  4843                           fsr1l	equ	0xFE1
  4844                           postinc2	equ	0xFDE
  4845                           postdec2	equ	0xFDD
  4846                           fsr2h	equ	0xFDA
  4847                           fsr2l	equ	0xFD9
  4848                           status	equ	0xFD8
  4849                           
  4850 ;; *************** function _envia_dados_shrc *****************
  4851 ;; Defined at:
  4852 ;;		line 62 in file "bibliotecas/SHRC.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  data_to_shrc    1    wreg     unsigned char 
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  data_to_shrc    1    1[BANK0 ] unsigned char 
  4857 ;;  contador        1    0[BANK0 ] unsigned char 
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  1    wreg      void 
  4860 ;; Registers used:
  4861 ;;		wreg, status,2, status,0
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4867 ;;      Params:         0       0       0       0       0       0       0       0       0
  4868 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4869 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4870 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4871 ;;Total ram usage:        2 bytes
  4872 ;; Hardware stack levels used:    1
  4873 ;; Hardware stack levels required when called:    5
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_controle_shrc
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           	psect	text27
  4882  000D24                     __ptext27:
  4883                           	opt stack 0
  4884  000D24                     _envia_dados_shrc:
  4885                           	opt stack 24
  4886                           
  4887                           ;incstack = 0
  4888                           ;envia_dados_shrc@data_to_shrc stored from wreg
  4889  000D24  0100               	movlb	0	; () banked
  4890  000D26  6FB1               	movwf	envia_dados_shrc@data_to_shrc& (0+255),b
  4891                           
  4892                           ;SHRC.c: 64: unsigned char contador=0;
  4893  000D28  0E00               	movlw	0
  4894  000D2A  0100               	movlb	0	; () banked
  4895  000D2C  6FB0               	movwf	envia_dados_shrc@contador& (0+255),b
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;SHRC.c: 65: (INTCONbits.GIE = 0);
  4899  000D2E  9EF2               	bcf	intcon,7,c	;volatile
  4900                           
  4901                           ;SHRC.c: 67: while(contador<=7)
  4902  000D30  D019               	goto	l343
  4903  000D32                     
  4904                           ; BSR set to: 0
  4905                           ;SHRC.c: 68: {
  4906                           ;SHRC.c: 69: if((data_to_shrc & 0x80) == 0)
  4907                           
  4908                           ; BSR set to: 0
  4909  000D32  BFB1               	btfsc	envia_dados_shrc@data_to_shrc& (0+255),7,b
  4910  000D34  D002               	goto	l345
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;SHRC.c: 70: {
  4914                           ;SHRC.c: 71: LATBbits.LATB7 = 0;
  4915  000D36  9E8A               	bcf	3978,7,c	;volatile
  4916                           
  4917                           ;SHRC.c: 72: }
  4918  000D38  D001               	goto	l346
  4919  000D3A                     l345:
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;SHRC.c: 73: else
  4923                           ;SHRC.c: 74: {
  4924                           ;SHRC.c: 75: LATBbits.LATB7 = 1;
  4925  000D3A  8E8A               	bsf	3978,7,c	;volatile
  4926  000D3C                     l346:
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;SHRC.c: 76: }
  4930                           ;SHRC.c: 77: data_to_shrc = data_to_shrc << 1;
  4931                           
  4932                           ; BSR set to: 0
  4933  000D3C  51B1               	movf	envia_dados_shrc@data_to_shrc& (0+255),w,b
  4934  000D3E  25B1               	addwf	envia_dados_shrc@data_to_shrc& (0+255),w,b
  4935  000D40  6FB1               	movwf	envia_dados_shrc@data_to_shrc& (0+255),b
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;SHRC.c: 78: _delay((unsigned long)((30)*(48000000/4000000.0)));
  4939  000D42  0E78               	movlw	120
  4940  000D44                     u8387:
  4941  000D44  2EE8               	decfsz	wreg,f,c
  4942  000D46  D7FE               	bra	u8387
  4943                           
  4944                           ;SHRC.c: 79: LATBbits.LATB6 = 1;
  4945  000D48  8C8A               	bsf	3978,6,c	;volatile
  4946                           
  4947                           ;SHRC.c: 80: _delay((unsigned long)((30)*(48000000/4000000.0)));
  4948  000D4A  0E78               	movlw	120
  4949  000D4C                     u8397:
  4950  000D4C  2EE8               	decfsz	wreg,f,c
  4951  000D4E  D7FE               	bra	u8397
  4952                           
  4953                           ;SHRC.c: 81: LATBbits.LATB7 = 0;
  4954  000D50  9E8A               	bcf	3978,7,c	;volatile
  4955                           
  4956                           ;SHRC.c: 82: _delay((unsigned long)((30)*(48000000/4000000.0)));
  4957  000D52  0E78               	movlw	120
  4958  000D54                     u8407:
  4959  000D54  2EE8               	decfsz	wreg,f,c
  4960  000D56  D7FE               	bra	u8407
  4961                           
  4962                           ;SHRC.c: 83: LATBbits.LATB6 = 0;
  4963  000D58  9C8A               	bcf	3978,6,c	;volatile
  4964                           
  4965                           ;SHRC.c: 84: _delay((unsigned long)((30)*(48000000/4000000.0)));
  4966  000D5A  0E78               	movlw	120
  4967  000D5C                     u8417:
  4968  000D5C  2EE8               	decfsz	wreg,f,c
  4969  000D5E  D7FE               	bra	u8417
  4970                           
  4971                           ;SHRC.c: 85: contador++;
  4972  000D60  0100               	movlb	0	; () banked
  4973  000D62  2BB0               	incf	envia_dados_shrc@contador& (0+255),f,b
  4974  000D64                     l343:
  4975                           
  4976                           ; BSR set to: 0
  4977                           
  4978                           ; BSR set to: 0
  4979  000D64  0E07               	movlw	7
  4980  000D66  65B0               	cpfsgt	envia_dados_shrc@contador& (0+255),b
  4981  000D68  D7E4               	goto	l344
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;SHRC.c: 86: }
  4985                           ;SHRC.c: 87: (INTCONbits.GIE = 1);
  4986  000D6A  8EF2               	bsf	intcon,7,c	;volatile
  4987                           
  4988                           ; BSR set to: 0
  4989  000D6C  0012               	return		;funcret
  4990  000D6E                     __end_of_envia_dados_shrc:
  4991                           	opt stack 0
  4992                           tosu	equ	0xFFF
  4993                           tosh	equ	0xFFE
  4994                           tosl	equ	0xFFD
  4995                           pclath	equ	0xFFA
  4996                           tblptru	equ	0xFF8
  4997                           tblptrh	equ	0xFF7
  4998                           tblptrl	equ	0xFF6
  4999                           tablat	equ	0xFF5
  5000                           prodh	equ	0xFF4
  5001                           prodl	equ	0xFF3
  5002                           intcon	equ	0xFF2
  5003                           intcon2	equ	0xFF1
  5004                           intcon3	equ	0xFF0
  5005                           indf0	equ	0xFEF
  5006                           postinc0	equ	0xFEE
  5007                           fsr0h	equ	0xFEA
  5008                           fsr0l	equ	0xFE9
  5009                           wreg	equ	0xFE8
  5010                           postinc1	equ	0xFE6
  5011                           postdec1	equ	0xFE5
  5012                           fsr1h	equ	0xFE2
  5013                           fsr1l	equ	0xFE1
  5014                           postinc2	equ	0xFDE
  5015                           postdec2	equ	0xFDD
  5016                           fsr2h	equ	0xFDA
  5017                           fsr2l	equ	0xFD9
  5018                           status	equ	0xFD8
  5019                           
  5020 ;; *************** function _ativa_latch_shrc *****************
  5021 ;; Defined at:
  5022 ;;		line 96 in file "bibliotecas/SHRC.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;		None
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;		None
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  1    wreg      void 
  5029 ;; Registers used:
  5030 ;;		wreg
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5036 ;;      Params:         0       0       0       0       0       0       0       0       0
  5037 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5038 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5039 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5040 ;;Total ram usage:        0 bytes
  5041 ;; Hardware stack levels used:    1
  5042 ;; Hardware stack levels required when called:    5
  5043 ;; This function calls:
  5044 ;;		Nothing
  5045 ;; This function is called by:
  5046 ;;		_controle_shrc
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text28
  5051  000F92                     __ptext28:
  5052                           	opt stack 0
  5053  000F92                     _ativa_latch_shrc:
  5054                           	opt stack 24
  5055                           
  5056                           ;SHRC.c: 99: LATBbits.LATB5 = 0;
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;incstack = 0
  5060  000F92  9A8A               	bcf	3978,5,c	;volatile
  5061                           
  5062                           ;SHRC.c: 100: _delay((unsigned long)((30)*(48000000/4000000.0)));
  5063  000F94  0E78               	movlw	120
  5064  000F96                     u8427:
  5065  000F96  2EE8               	decfsz	wreg,f,c
  5066  000F98  D7FE               	bra	u8427
  5067                           
  5068                           ;SHRC.c: 101: LATBbits.LATB5 = 1;
  5069  000F9A  8A8A               	bsf	3978,5,c	;volatile
  5070                           
  5071                           ;SHRC.c: 102: _delay((unsigned long)((60)*(48000000/4000000.0)));
  5072  000F9C  0EF0               	movlw	240
  5073  000F9E                     u8437:
  5074  000F9E  2EE8               	decfsz	wreg,f,c
  5075  000FA0  D7FE               	bra	u8437
  5076                           
  5077                           ;SHRC.c: 103: LATBbits.LATB5 = 0;
  5078  000FA2  9A8A               	bcf	3978,5,c	;volatile
  5079  000FA4  0012               	return		;funcret
  5080  000FA6                     __end_of_ativa_latch_shrc:
  5081                           	opt stack 0
  5082                           tosu	equ	0xFFF
  5083                           tosh	equ	0xFFE
  5084                           tosl	equ	0xFFD
  5085                           pclath	equ	0xFFA
  5086                           tblptru	equ	0xFF8
  5087                           tblptrh	equ	0xFF7
  5088                           tblptrl	equ	0xFF6
  5089                           tablat	equ	0xFF5
  5090                           prodh	equ	0xFF4
  5091                           prodl	equ	0xFF3
  5092                           intcon	equ	0xFF2
  5093                           intcon2	equ	0xFF1
  5094                           intcon3	equ	0xFF0
  5095                           indf0	equ	0xFEF
  5096                           postinc0	equ	0xFEE
  5097                           fsr0h	equ	0xFEA
  5098                           fsr0l	equ	0xFE9
  5099                           wreg	equ	0xFE8
  5100                           postinc1	equ	0xFE6
  5101                           postdec1	equ	0xFE5
  5102                           fsr1h	equ	0xFE2
  5103                           fsr1l	equ	0xFE1
  5104                           postinc2	equ	0xFDE
  5105                           postdec2	equ	0xFDD
  5106                           fsr2h	equ	0xFDA
  5107                           fsr2l	equ	0xFD9
  5108                           status	equ	0xFD8
  5109                           
  5110 ;; *************** function _isr *****************
  5111 ;; Defined at:
  5112 ;;		line 96 in file "main.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;		None
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;  cont            1   53[COMRAM] unsigned char 
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  1    wreg      void 
  5119 ;; Registers used:
  5120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5126 ;;      Params:         0       0       0       0       0       0       0       0       0
  5127 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5128 ;;      Temps:         20       0       0       0       0       0       0       0       0
  5129 ;;      Totals:        21       0       0       0       0       0       0       0       0
  5130 ;;Total ram usage:       21 bytes
  5131 ;; Hardware stack levels used:    1
  5132 ;; Hardware stack levels required when called:    4
  5133 ;; This function calls:
  5134 ;;		_escreve_inteiro_lcd
  5135 ;;		_recebe_dado_uart
  5136 ;;		_tratamento_uart
  5137 ;;		i2_posicao_cursor_lcd
  5138 ;;		i2_write_timer_zero
  5139 ;; This function is called by:
  5140 ;;		Interrupt level 2
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           	psect	intcode
  5145  000008                     __pintcode:
  5146                           	opt stack 0
  5147  000008                     _isr:
  5148                           	opt stack 22
  5149                           
  5150                           ;incstack = 0
  5151  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5152  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
  5153                           tosu	equ	0xFFF
  5154                           tosh	equ	0xFFE
  5155                           tosl	equ	0xFFD
  5156                           pclath	equ	0xFFA
  5157                           tblptru	equ	0xFF8
  5158                           tblptrh	equ	0xFF7
  5159                           tblptrl	equ	0xFF6
  5160                           tablat	equ	0xFF5
  5161                           prodh	equ	0xFF4
  5162                           prodl	equ	0xFF3
  5163                           intcon	equ	0xFF2
  5164                           intcon2	equ	0xFF1
  5165                           intcon3	equ	0xFF0
  5166                           indf0	equ	0xFEF
  5167                           postinc0	equ	0xFEE
  5168                           fsr0h	equ	0xFEA
  5169                           fsr0l	equ	0xFE9
  5170                           wreg	equ	0xFE8
  5171                           postinc1	equ	0xFE6
  5172                           postdec1	equ	0xFE5
  5173                           fsr1h	equ	0xFE2
  5174                           fsr1l	equ	0xFE1
  5175                           postinc2	equ	0xFDE
  5176                           postdec2	equ	0xFDD
  5177                           fsr2h	equ	0xFDA
  5178                           fsr2l	equ	0xFD9
  5179                           status	equ	0xFD8
  5180                           
  5181                           	psect	intcode_body
  5182  000012                     __pintcode_body:
  5183                           	opt stack 22
  5184  000012                     int_func:
  5185                           	opt stack 22
  5186  000012  0006               	pop		; remove dummy address from shadow register refresh
  5187  000014  CFFA F024          	movff	pclath,??_isr+2
  5188  000018  CFFB F025          	movff	pclatu,??_isr+3
  5189  00001C  CFE9 F026          	movff	fsr0l,??_isr+4
  5190  000020  CFEA F027          	movff	fsr0h,??_isr+5
  5191  000024  CFE1 F028          	movff	fsr1l,??_isr+6
  5192  000028  CFE2 F029          	movff	fsr1h,??_isr+7
  5193  00002C  CFD9 F02A          	movff	fsr2l,??_isr+8
  5194  000030  CFDA F02B          	movff	fsr2h,??_isr+9
  5195  000034  CFF3 F02C          	movff	prodl,??_isr+10
  5196  000038  CFF4 F02D          	movff	prodh,??_isr+11
  5197  00003C  CFF6 F02E          	movff	tblptrl,??_isr+12
  5198  000040  CFF7 F02F          	movff	tblptrh,??_isr+13
  5199  000044  CFF8 F030          	movff	tblptru,??_isr+14
  5200  000048  CFF5 F031          	movff	tablat,??_isr+15
  5201  00004C  C05F  F032         	movff	btemp,??_isr+16
  5202  000050  C060  F033         	movff	btemp+1,??_isr+17
  5203  000054  C061  F034         	movff	btemp+2,??_isr+18
  5204  000058  C062  F035         	movff	btemp+3,??_isr+19
  5205                           
  5206                           ;main.c: 98: unsigned char cont;
  5207                           ;main.c: 101: if (PIE1bits.RCIE && PIR1bits.RCIF)
  5208  00005C  BA9D               	btfsc	3997,5,c	;volatile
  5209  00005E  AA9E               	btfss	3998,5,c	;volatile
  5210  000060  D01E               	goto	i2l75
  5211                           
  5212                           ;main.c: 102: {
  5213                           ;main.c: 103: data_uart_recebe = recebe_dado_uart();
  5214  000062  ECEE  F007         	call	_recebe_dado_uart	;wreg free
  5215  000066  6E5E               	movwf	_data_uart_recebe,c
  5216                           
  5217                           ;main.c: 104: PIR1bits.RCIF = 0;
  5218  000068  9A9E               	bcf	3998,5,c	;volatile
  5219                           
  5220                           ;main.c: 105: tratamento_uart(data_uart_recebe);
  5221  00006A  505E               	movf	_data_uart_recebe,w,c
  5222  00006C  ECE2  F001         	call	_tratamento_uart
  5223                           
  5224                           ;main.c: 106: LATBbits.LATB4 = ~LATBbits.LATB4;
  5225  000070  A88A               	btfss	3978,4,c	;volatile
  5226  000072  D002               	goto	i2u661_40
  5227  000074  0E01               	movlw	1
  5228  000076  D001               	goto	i2u661_46
  5229  000078                     i2u661_40:
  5230  000078  0E00               	movlw	0
  5231  00007A                     i2u661_46:
  5232  00007A  0AFF               	xorlw	255
  5233  00007C  6E22               	movwf	??_isr& (0+255),c
  5234  00007E  3A22               	swapf	??_isr,f,c
  5235  000080  508A               	movf	3978,w,c	;volatile
  5236  000082  1822               	xorwf	??_isr,w,c
  5237  000084  0BEF               	andlw	-17
  5238  000086  1822               	xorwf	??_isr,w,c
  5239  000088  6E8A               	movwf	3978,c	;volatile
  5240                           
  5241                           ;main.c: 108: posicao_cursor_lcd(1,1);
  5242  00008A  0E01               	movlw	1
  5243  00008C  6E04               	movwf	i2posicao_cursor_lcd@coluna,c
  5244  00008E  0E01               	movlw	1
  5245  000090  EC74  F005         	call	i2_posicao_cursor_lcd
  5246                           
  5247                           ;main.c: 109: escreve_inteiro_lcd(RCREG);
  5248  000094  CFAE F019          	movff	4014,escreve_inteiro_lcd@valor	;volatile
  5249  000098  6A1A               	clrf	escreve_inteiro_lcd@valor+1,c
  5250  00009A  ECF9  F006         	call	_escreve_inteiro_lcd	;wreg free
  5251  00009E                     i2l75:
  5252                           
  5253                           ;main.c: 111: }
  5254                           ;main.c: 114: unsigned char cont;
  5255                           ;main.c: 116: if (TMR0IF && T0IF)
  5256  00009E  B4F2               	btfsc	intcon,2,c	;volatile
  5257  0000A0  A4F2               	btfss	intcon,2,c	;volatile
  5258  0000A2  D037               	goto	i2l76
  5259                           
  5260                           ;main.c: 117: {
  5261                           ;main.c: 118: INTCONbits.TMR0IF = 0;
  5262  0000A4  94F2               	bcf	intcon,2,c	;volatile
  5263                           
  5264                           ;main.c: 119: sinaliza_int_timer = 1;
  5265  0000A6  0E01               	movlw	1
  5266  0000A8  0100               	movlb	0	; () banked
  5267  0000AA  6FA0               	movwf	_sinaliza_int_timer& (0+255),b
  5268                           
  5269                           ;main.c: 121: for(cont= 0; cont<2;cont++)
  5270  0000AC  0E00               	movlw	0
  5271  0000AE  6E36               	movwf	isr@cont,c
  5272  0000B0                     i2l6469:
  5273                           
  5274                           ; BSR set to: 0
  5275  0000B0  0E01               	movlw	1
  5276  0000B2  6436               	cpfsgt	isr@cont,c
  5277  0000B4  D001               	goto	i2l77
  5278  0000B6  D019               	goto	i2u666_40
  5279  0000B8                     i2l77:
  5280                           
  5281                           ;main.c: 122: {
  5282                           ;main.c: 123: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
  5283                           
  5284                           ; BSR set to: 0
  5285  0000B8  5036               	movf	isr@cont,w,c
  5286  0000BA  0D02               	mullw	2
  5287  0000BC  0E3E               	movlw	low _tempo_tarefa
  5288  0000BE  24F3               	addwf	prodl,w,c
  5289  0000C0  6ED9               	movwf	fsr2l,c
  5290  0000C2  0E00               	movlw	high _tempo_tarefa
  5291  0000C4  20F4               	addwfc	prodh,w,c
  5292  0000C6  6EDA               	movwf	fsr2h,c
  5293  0000C8  50DE               	movf	postinc2,w,c
  5294  0000CA  10DE               	iorwf	postinc2,w,c
  5295  0000CC  B4D8               	btfsc	status,2,c
  5296  0000CE  D00B               	goto	i2l79
  5297  0000D0  5036               	movf	isr@cont,w,c
  5298  0000D2  0D02               	mullw	2
  5299  0000D4  0E3E               	movlw	low _tempo_tarefa
  5300  0000D6  24F3               	addwf	prodl,w,c
  5301  0000D8  6ED9               	movwf	fsr2l,c
  5302  0000DA  0E00               	movlw	high _tempo_tarefa
  5303  0000DC  20F4               	addwfc	prodh,w,c
  5304  0000DE  6EDA               	movwf	fsr2h,c
  5305  0000E0  06DE               	decf	postinc2,f,c
  5306  0000E2  0E00               	movlw	0
  5307  0000E4  5ADD               	subwfb	postdec2,f,c
  5308  0000E6                     i2l79:
  5309  0000E6  2A36               	incf	isr@cont,f,c
  5310  0000E8  D7E3               	goto	i2l6469
  5311  0000EA                     i2u666_40:
  5312                           
  5313                           ;main.c: 124: }
  5314                           ;main.c: 127: if(tarefa_em_execucao == 1)
  5315  0000EA  045D               	decf	_tarefa_em_execucao,w,c	;volatile
  5316  0000EC  A4D8               	btfss	status,2,c
  5317  0000EE  D00B               	goto	i2l81
  5318                           
  5319                           ;main.c: 128: {
  5320                           ;main.c: 129: timeout_tarefa--;
  5321  0000F0  0652               	decf	_timeout_tarefa,f,c
  5322  0000F2  A0D8               	btfss	status,0,c
  5323  0000F4  0653               	decf	_timeout_tarefa+1,f,c
  5324                           
  5325                           ;main.c: 130: if(!timeout_tarefa)
  5326  0000F6  5052               	movf	_timeout_tarefa,w,c
  5327  0000F8  1053               	iorwf	_timeout_tarefa+1,w,c
  5328  0000FA  A4D8               	btfss	status,2,c
  5329  0000FC  D004               	goto	i2l81
  5330                           
  5331                           ;main.c: 131: {
  5332                           ;main.c: 133: PCLATH = 0;
  5333  0000FE  0E00               	movlw	0
  5334  000100  6EFA               	movwf	pclath,c	;volatile
  5335                           
  5336                           ;main.c: 134: PCL = 0;
  5337  000102  0E00               	movlw	0
  5338  000104  6EF9               	movwf	pcl,c	;volatile
  5339  000106                     i2l81:
  5340                           
  5341                           ;main.c: 135: }
  5342                           ;main.c: 136: }
  5343                           ;main.c: 139: write_timer_zero(0x0083);
  5344  000106  0E00               	movlw	0
  5345  000108  6E02               	movwf	i2write_timer_zero@timer0+1,c
  5346  00010A  0E83               	movlw	131
  5347  00010C  6E01               	movwf	i2write_timer_zero@timer0,c
  5348  00010E  ECE5  F007         	call	i2_write_timer_zero	;wreg free
  5349  000112                     i2l76:
  5350                           
  5351                           ;main.c: 141: }
  5352                           ;main.c: 143: if (INT0IF && INT0IE)
  5353  000112  B2F2               	btfsc	intcon,1,c	;volatile
  5354  000114  A8F2               	btfss	intcon,4,c	;volatile
  5355  000116  D001               	goto	i2l82
  5356                           
  5357                           ;main.c: 144: {
  5358                           ;main.c: 145: INT0IF = 0;
  5359  000118  92F2               	bcf	intcon,1,c	;volatile
  5360  00011A                     i2l82:
  5361  00011A  C035  F062         	movff	??_isr+19,btemp+3
  5362  00011E  C034  F061         	movff	??_isr+18,btemp+2
  5363  000122  C033  F060         	movff	??_isr+17,btemp+1
  5364  000126  C032  F05F         	movff	??_isr+16,btemp
  5365  00012A  C031  FFF5         	movff	??_isr+15,tablat
  5366  00012E  C030  FFF8         	movff	??_isr+14,tblptru
  5367  000132  C02F  FFF7         	movff	??_isr+13,tblptrh
  5368  000136  C02E  FFF6         	movff	??_isr+12,tblptrl
  5369  00013A  C02D  FFF4         	movff	??_isr+11,prodh
  5370  00013E  C02C  FFF3         	movff	??_isr+10,prodl
  5371  000142  C02B  FFDA         	movff	??_isr+9,fsr2h
  5372  000146  C02A  FFD9         	movff	??_isr+8,fsr2l
  5373  00014A  C029  FFE2         	movff	??_isr+7,fsr1h
  5374  00014E  C028  FFE1         	movff	??_isr+6,fsr1l
  5375  000152  C027  FFEA         	movff	??_isr+5,fsr0h
  5376  000156  C026  FFE9         	movff	??_isr+4,fsr0l
  5377  00015A  C025  FFFB         	movff	??_isr+3,pclatu
  5378  00015E  C024  FFFA         	movff	??_isr+2,pclath
  5379  000162  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5380  000164  0011               	retfie		f
  5381  000166                     __end_of_isr:
  5382                           	opt stack 0
  5383                           tosu	equ	0xFFF
  5384                           tosh	equ	0xFFE
  5385                           tosl	equ	0xFFD
  5386                           pclatu	equ	0xFFB
  5387                           pclath	equ	0xFFA
  5388                           pcl	equ	0xFF9
  5389                           tblptru	equ	0xFF8
  5390                           tblptrh	equ	0xFF7
  5391                           tblptrl	equ	0xFF6
  5392                           tablat	equ	0xFF5
  5393                           prodh	equ	0xFF4
  5394                           prodl	equ	0xFF3
  5395                           intcon	equ	0xFF2
  5396                           intcon2	equ	0xFF1
  5397                           intcon3	equ	0xFF0
  5398                           indf0	equ	0xFEF
  5399                           postinc0	equ	0xFEE
  5400                           fsr0h	equ	0xFEA
  5401                           fsr0l	equ	0xFE9
  5402                           wreg	equ	0xFE8
  5403                           postinc1	equ	0xFE6
  5404                           postdec1	equ	0xFE5
  5405                           fsr1h	equ	0xFE2
  5406                           fsr1l	equ	0xFE1
  5407                           postinc2	equ	0xFDE
  5408                           postdec2	equ	0xFDD
  5409                           fsr2h	equ	0xFDA
  5410                           fsr2l	equ	0xFD9
  5411                           status	equ	0xFD8
  5412                           
  5413 ;; *************** function i2_write_timer_zero *****************
  5414 ;; Defined at:
  5415 ;;		line 138 in file "bibliotecas/hardware.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  timer0          2    0[COMRAM] unsigned int 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  write_timer_    2    2[COMRAM] struct Timers
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  1    wreg      void 
  5422 ;; Registers used:
  5423 ;;		None
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5429 ;;      Params:         2       0       0       0       0       0       0       0       0
  5430 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5432 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5433 ;;Total ram usage:        4 bytes
  5434 ;; Hardware stack levels used:    1
  5435 ;; This function calls:
  5436 ;;		Nothing
  5437 ;; This function is called by:
  5438 ;;		_isr
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           	psect	text30
  5443  000FCA                     __ptext30:
  5444                           	opt stack 0
  5445  000FCA                     i2_write_timer_zero:
  5446                           	opt stack 25
  5447                           
  5448                           ;hardware.c: 140: union Timers timer;
  5449                           ;hardware.c: 142: timer.lt = timer0;
  5450                           
  5451                           ;incstack = 0
  5452  000FCA  C001  F003         	movff	i2write_timer_zero@timer0,i2write_timer_zero@timer
  5453  000FCE  C002  F004         	movff	i2write_timer_zero@timer0+1,i2write_timer_zero@timer+1
  5454                           
  5455                           ;hardware.c: 144: TMR0H = timer.bt[1];
  5456  000FD2  C004  FFD7         	movff	i2write_timer_zero@timer+1,4055	;volatile
  5457                           
  5458                           ;hardware.c: 145: TMR0L = timer.bt[0];
  5459  000FD6  C003  FFD6         	movff	i2write_timer_zero@timer,4054	;volatile
  5460  000FDA  0012               	return		;funcret
  5461  000FDC                     __end_ofi2_write_timer_zero:
  5462                           	opt stack 0
  5463                           tosu	equ	0xFFF
  5464                           tosh	equ	0xFFE
  5465                           tosl	equ	0xFFD
  5466                           pclatu	equ	0xFFB
  5467                           pclath	equ	0xFFA
  5468                           pcl	equ	0xFF9
  5469                           tblptru	equ	0xFF8
  5470                           tblptrh	equ	0xFF7
  5471                           tblptrl	equ	0xFF6
  5472                           tablat	equ	0xFF5
  5473                           prodh	equ	0xFF4
  5474                           prodl	equ	0xFF3
  5475                           intcon	equ	0xFF2
  5476                           intcon2	equ	0xFF1
  5477                           intcon3	equ	0xFF0
  5478                           indf0	equ	0xFEF
  5479                           postinc0	equ	0xFEE
  5480                           fsr0h	equ	0xFEA
  5481                           fsr0l	equ	0xFE9
  5482                           wreg	equ	0xFE8
  5483                           postinc1	equ	0xFE6
  5484                           postdec1	equ	0xFE5
  5485                           fsr1h	equ	0xFE2
  5486                           fsr1l	equ	0xFE1
  5487                           postinc2	equ	0xFDE
  5488                           postdec2	equ	0xFDD
  5489                           fsr2h	equ	0xFDA
  5490                           fsr2l	equ	0xFD9
  5491                           status	equ	0xFD8
  5492                           
  5493 ;; *************** function i2_posicao_cursor_lcd *****************
  5494 ;; Defined at:
  5495 ;;		line 271 in file "bibliotecas/display_lcd.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;  linha           1    wreg     unsigned char 
  5498 ;;  coluna          1    3[COMRAM] unsigned char 
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;  linha           1    4[COMRAM] unsigned char 
  5501 ;;  posicao_curs    1    5[COMRAM] unsigned char 
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  1    wreg      void 
  5504 ;; Registers used:
  5505 ;;		wreg, status,2, status,0, cstack
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5511 ;;      Params:         1       0       0       0       0       0       0       0       0
  5512 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5514 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5515 ;;Total ram usage:        3 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; Hardware stack levels required when called:    2
  5518 ;; This function calls:
  5519 ;;		i2_endereco_cursor_lcd
  5520 ;; This function is called by:
  5521 ;;		_isr
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text31
  5526  000AE8                     __ptext31:
  5527                           	opt stack 0
  5528  000AE8                     i2_posicao_cursor_lcd:
  5529                           	opt stack 23
  5530                           
  5531                           ;incstack = 0
  5532                           ;i2posicao_cursor_lcd@linha stored from wreg
  5533  000AE8  6E05               	movwf	i2posicao_cursor_lcd@linha,c
  5534                           
  5535                           ;display_lcd.c: 273: unsigned char endereco = 0x00;
  5536  000AEA  0E00               	movlw	0
  5537  000AEC  6E06               	movwf	i2posicao_cursor_lcd@endereco,c
  5538                           
  5539                           ;display_lcd.c: 275: if(coluna <= 0x10U)
  5540  000AEE  0E11               	movlw	17
  5541  000AF0  6004               	cpfslt	i2posicao_cursor_lcd@coluna,c
  5542  000AF2  D02F               	goto	i2l677
  5543  000AF4  D01E               	goto	i2l678
  5544  000AF6                     i2l679:
  5545                           
  5546                           ;display_lcd.c: 282: endereco = 0x00U + coluna;
  5547  000AF6  C004  F006         	movff	i2posicao_cursor_lcd@coluna,i2posicao_cursor_lcd@endereco
  5548                           
  5549                           ;display_lcd.c: 283: endereco_cursor_lcd(endereco);
  5550  000AFA  5006               	movf	i2posicao_cursor_lcd@endereco,w,c
  5551  000AFC  ECE1  F005         	call	i2_endereco_cursor_lcd
  5552                           
  5553                           ;display_lcd.c: 284: break;
  5554  000B00  D026               	goto	i2l680
  5555  000B02                     
  5556                           ;display_lcd.c: 287: endereco = 0x40U + coluna;
  5557  000B02  5004               	movf	i2posicao_cursor_lcd@coluna,w,c
  5558  000B04  0F40               	addlw	64
  5559  000B06  6E06               	movwf	i2posicao_cursor_lcd@endereco,c
  5560                           
  5561                           ;display_lcd.c: 288: endereco_cursor_lcd(endereco);
  5562  000B08  5006               	movf	i2posicao_cursor_lcd@endereco,w,c
  5563  000B0A  ECE1  F005         	call	i2_endereco_cursor_lcd
  5564                           
  5565                           ;display_lcd.c: 289: break;
  5566  000B0E  D01F               	goto	i2l680
  5567  000B10                     
  5568                           ;display_lcd.c: 292: endereco = 0x14U + coluna;
  5569  000B10  5004               	movf	i2posicao_cursor_lcd@coluna,w,c
  5570  000B12  0F14               	addlw	20
  5571  000B14  6E06               	movwf	i2posicao_cursor_lcd@endereco,c
  5572                           
  5573                           ;display_lcd.c: 293: endereco_cursor_lcd(endereco);
  5574  000B16  5006               	movf	i2posicao_cursor_lcd@endereco,w,c
  5575  000B18  ECE1  F005         	call	i2_endereco_cursor_lcd
  5576                           
  5577                           ;display_lcd.c: 294: break;
  5578  000B1C  D018               	goto	i2l680
  5579  000B1E                     
  5580                           ;display_lcd.c: 297: endereco = 0x54U + coluna;
  5581  000B1E  5004               	movf	i2posicao_cursor_lcd@coluna,w,c
  5582  000B20  0F54               	addlw	84
  5583  000B22  6E06               	movwf	i2posicao_cursor_lcd@endereco,c
  5584                           
  5585                           ;display_lcd.c: 298: endereco_cursor_lcd(endereco);
  5586  000B24  5006               	movf	i2posicao_cursor_lcd@endereco,w,c
  5587  000B26  ECE1  F005         	call	i2_endereco_cursor_lcd
  5588                           
  5589                           ;display_lcd.c: 299: break;
  5590  000B2A  D011               	goto	i2l680
  5591  000B2C                     
  5592                           ;display_lcd.c: 302: endereco = 0x00U;
  5593  000B2C  0E00               	movlw	0
  5594  000B2E  6E06               	movwf	i2posicao_cursor_lcd@endereco,c
  5595                           
  5596                           ;display_lcd.c: 304: }
  5597                           
  5598                           ;display_lcd.c: 303: break;
  5599  000B30  D00E               	goto	i2l680
  5600  000B32                     i2l678:
  5601  000B32  5005               	movf	i2posicao_cursor_lcd@linha,w,c
  5602                           
  5603                           ; Switch size 1, requested type "space"
  5604                           ; Number of cases is 4, Range of values is 1 to 4
  5605                           ; switch strategies available:
  5606                           ; Name         Instructions Cycles
  5607                           ; simple_byte           13     7 (average)
  5608                           ;	Chosen strategy is simple_byte
  5609  000B34  0A01               	xorlw	1	; case 1
  5610  000B36  B4D8               	btfsc	status,2,c
  5611  000B38  D7DE               	goto	i2l679
  5612  000B3A  0A03               	xorlw	3	; case 2
  5613  000B3C  B4D8               	btfsc	status,2,c
  5614  000B3E  D7E1               	goto	i2l681
  5615  000B40  0A01               	xorlw	1	; case 3
  5616  000B42  B4D8               	btfsc	status,2,c
  5617  000B44  D7E5               	goto	i2l682
  5618  000B46  0A07               	xorlw	7	; case 4
  5619  000B48  B4D8               	btfsc	status,2,c
  5620  000B4A  D7E9               	goto	i2l683
  5621  000B4C  D7EF               	goto	i2l684
  5622  000B4E                     i2l680:
  5623                           
  5624                           ;display_lcd.c: 306: coluna++;
  5625  000B4E  2A04               	incf	i2posicao_cursor_lcd@coluna,f,c
  5626                           
  5627                           ;display_lcd.c: 307: }
  5628  000B50  0012               	return	
  5629  000B52                     i2l677:
  5630                           
  5631                           ;display_lcd.c: 308: else
  5632                           ;display_lcd.c: 309: {
  5633                           ;display_lcd.c: 310: endereco = 0x00U;
  5634  000B52  0E00               	movlw	0
  5635  000B54  6E06               	movwf	i2posicao_cursor_lcd@endereco,c
  5636  000B56  0012               	return	
  5637  000B58                     __end_ofi2_posicao_cursor_lcd:
  5638                           	opt stack 0
  5639                           tosu	equ	0xFFF
  5640                           tosh	equ	0xFFE
  5641                           tosl	equ	0xFFD
  5642                           pclatu	equ	0xFFB
  5643                           pclath	equ	0xFFA
  5644                           pcl	equ	0xFF9
  5645                           tblptru	equ	0xFF8
  5646                           tblptrh	equ	0xFF7
  5647                           tblptrl	equ	0xFF6
  5648                           tablat	equ	0xFF5
  5649                           prodh	equ	0xFF4
  5650                           prodl	equ	0xFF3
  5651                           intcon	equ	0xFF2
  5652                           intcon2	equ	0xFF1
  5653                           intcon3	equ	0xFF0
  5654                           indf0	equ	0xFEF
  5655                           postinc0	equ	0xFEE
  5656                           fsr0h	equ	0xFEA
  5657                           fsr0l	equ	0xFE9
  5658                           wreg	equ	0xFE8
  5659                           postinc1	equ	0xFE6
  5660                           postdec1	equ	0xFE5
  5661                           fsr1h	equ	0xFE2
  5662                           fsr1l	equ	0xFE1
  5663                           postinc2	equ	0xFDE
  5664                           postdec2	equ	0xFDD
  5665                           fsr2h	equ	0xFDA
  5666                           fsr2l	equ	0xFD9
  5667                           status	equ	0xFD8
  5668                           
  5669 ;; *************** function i2_endereco_cursor_lcd *****************
  5670 ;; Defined at:
  5671 ;;		line 218 in file "bibliotecas/display_lcd.c"
  5672 ;; Parameters:    Size  Location     Type
  5673 ;;  endereco        1    wreg     unsigned char 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  endereco        1    2[COMRAM] unsigned char 
  5676 ;; Return value:  Size  Location     Type
  5677 ;;                  1    wreg      void 
  5678 ;; Registers used:
  5679 ;;		wreg, status,2, status,0, cstack
  5680 ;; Tracked objects:
  5681 ;;		On entry : 0/0
  5682 ;;		On exit  : 0/0
  5683 ;;		Unchanged: 0/0
  5684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5685 ;;      Params:         0       0       0       0       0       0       0       0       0
  5686 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5687 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5688 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5689 ;;Total ram usage:        1 bytes
  5690 ;; Hardware stack levels used:    1
  5691 ;; Hardware stack levels required when called:    1
  5692 ;; This function calls:
  5693 ;;		i2_delay
  5694 ;; This function is called by:
  5695 ;;		i2_posicao_cursor_lcd
  5696 ;; This function uses a non-reentrant model
  5697 ;;
  5698                           
  5699                           	psect	text32
  5700  000BC2                     __ptext32:
  5701                           	opt stack 0
  5702  000BC2                     i2_endereco_cursor_lcd:
  5703                           	opt stack 23
  5704                           
  5705                           ;incstack = 0
  5706                           ;i2endereco_cursor_lcd@endereco stored from wreg
  5707  000BC2  6E03               	movwf	i2endereco_cursor_lcd@endereco,c
  5708                           
  5709                           ;display_lcd.c: 221: PORTDbits.RD2 = 0;
  5710  000BC4  9483               	bcf	3971,2,c	;volatile
  5711                           
  5712                           ;display_lcd.c: 222: PORTDbits.RD1 = 0;
  5713  000BC6  9283               	bcf	3971,1,c	;volatile
  5714                           
  5715                           ;display_lcd.c: 223: PORTDbits.RD0 = 0;
  5716  000BC8  9083               	bcf	3971,0,c	;volatile
  5717                           
  5718                           ;display_lcd.c: 226: PORTDbits.RD7 = 1;
  5719  000BCA  8E83               	bsf	3971,7,c	;volatile
  5720                           
  5721                           ;display_lcd.c: 227: if(endereco&0b00010000){PORTDbits.RD4=1;}
  5722  000BCC  A803               	btfss	i2endereco_cursor_lcd@endereco,4,c
  5723  000BCE  D002               	goto	i2l660
  5724  000BD0  8883               	bsf	3971,4,c	;volatile
  5725  000BD2  D001               	goto	i2l661
  5726  000BD4                     i2l660:
  5727                           
  5728                           ;display_lcd.c: 228: else {PORTDbits.RD4=0;}
  5729  000BD4  9883               	bcf	3971,4,c	;volatile
  5730  000BD6                     i2l661:
  5731                           
  5732                           ;display_lcd.c: 229: if(endereco&0b00100000){PORTDbits.RD5=1;}
  5733  000BD6  AA03               	btfss	i2endereco_cursor_lcd@endereco,5,c
  5734  000BD8  D002               	goto	i2l662
  5735  000BDA  8A83               	bsf	3971,5,c	;volatile
  5736  000BDC  D001               	goto	i2l663
  5737  000BDE                     i2l662:
  5738                           
  5739                           ;display_lcd.c: 230: else {PORTDbits.RD5=0;}
  5740  000BDE  9A83               	bcf	3971,5,c	;volatile
  5741  000BE0                     i2l663:
  5742                           
  5743                           ;display_lcd.c: 231: if(endereco&0b01000000){PORTDbits.RD6=1;}
  5744  000BE0  AC03               	btfss	i2endereco_cursor_lcd@endereco,6,c
  5745  000BE2  D002               	goto	i2l664
  5746  000BE4  8C83               	bsf	3971,6,c	;volatile
  5747  000BE6  D001               	goto	i2l665
  5748  000BE8                     i2l664:
  5749                           
  5750                           ;display_lcd.c: 232: else {PORTDbits.RD6=0;}
  5751  000BE8  9C83               	bcf	3971,6,c	;volatile
  5752  000BEA                     i2l665:
  5753                           
  5754                           ;display_lcd.c: 235: PORTDbits.RD0 = 1;
  5755  000BEA  8083               	bsf	3971,0,c	;volatile
  5756                           
  5757                           ;display_lcd.c: 236: delay();
  5758  000BEC  EC76  F007         	call	i2_delay	;wreg free
  5759                           
  5760                           ;display_lcd.c: 237: PORTDbits.RD0 = 0;
  5761  000BF0  9083               	bcf	3971,0,c	;volatile
  5762                           
  5763                           ;display_lcd.c: 238: delay();
  5764  000BF2  EC76  F007         	call	i2_delay	;wreg free
  5765                           
  5766                           ;display_lcd.c: 241: if(endereco&0b00000001){PORTDbits.RD4=1;}
  5767  000BF6  A003               	btfss	i2endereco_cursor_lcd@endereco,0,c
  5768  000BF8  D002               	goto	i2l666
  5769  000BFA  8883               	bsf	3971,4,c	;volatile
  5770  000BFC  D001               	goto	i2l667
  5771  000BFE                     i2l666:
  5772                           
  5773                           ;display_lcd.c: 242: else {PORTDbits.RD4=0;}
  5774  000BFE  9883               	bcf	3971,4,c	;volatile
  5775  000C00                     i2l667:
  5776                           
  5777                           ;display_lcd.c: 243: if(endereco&0b00000010){PORTDbits.RD5=1;}
  5778  000C00  A203               	btfss	i2endereco_cursor_lcd@endereco,1,c
  5779  000C02  D002               	goto	i2l668
  5780  000C04  8A83               	bsf	3971,5,c	;volatile
  5781  000C06  D001               	goto	i2l669
  5782  000C08                     i2l668:
  5783                           
  5784                           ;display_lcd.c: 244: else {PORTDbits.RD5=0;}
  5785  000C08  9A83               	bcf	3971,5,c	;volatile
  5786  000C0A                     i2l669:
  5787                           
  5788                           ;display_lcd.c: 245: if(endereco&0b00000100){PORTDbits.RD6=1;}
  5789  000C0A  A403               	btfss	i2endereco_cursor_lcd@endereco,2,c
  5790  000C0C  D002               	goto	i2l670
  5791  000C0E  8C83               	bsf	3971,6,c	;volatile
  5792  000C10  D001               	goto	i2l671
  5793  000C12                     i2l670:
  5794                           
  5795                           ;display_lcd.c: 246: else {PORTDbits.RD6=0;}
  5796  000C12  9C83               	bcf	3971,6,c	;volatile
  5797  000C14                     i2l671:
  5798                           
  5799                           ;display_lcd.c: 247: if(endereco&0b00001000){PORTDbits.RD7=1;}
  5800  000C14  A603               	btfss	i2endereco_cursor_lcd@endereco,3,c
  5801  000C16  D002               	goto	i2l672
  5802  000C18  8E83               	bsf	3971,7,c	;volatile
  5803  000C1A  D001               	goto	i2l673
  5804  000C1C                     i2l672:
  5805                           
  5806                           ;display_lcd.c: 248: else {PORTDbits.RD7=0;}
  5807  000C1C  9E83               	bcf	3971,7,c	;volatile
  5808  000C1E                     i2l673:
  5809                           
  5810                           ;display_lcd.c: 251: PORTDbits.RD0 = 1;
  5811  000C1E  8083               	bsf	3971,0,c	;volatile
  5812                           
  5813                           ;display_lcd.c: 252: delay();
  5814  000C20  EC76  F007         	call	i2_delay	;wreg free
  5815                           
  5816                           ;display_lcd.c: 253: PORTDbits.RD0 = 0;
  5817  000C24  9083               	bcf	3971,0,c	;volatile
  5818                           
  5819                           ;display_lcd.c: 254: delay();
  5820  000C26  EC76  F007         	call	i2_delay	;wreg free
  5821  000C2A  0012               	return		;funcret
  5822  000C2C                     __end_ofi2_endereco_cursor_lcd:
  5823                           	opt stack 0
  5824                           tosu	equ	0xFFF
  5825                           tosh	equ	0xFFE
  5826                           tosl	equ	0xFFD
  5827                           pclatu	equ	0xFFB
  5828                           pclath	equ	0xFFA
  5829                           pcl	equ	0xFF9
  5830                           tblptru	equ	0xFF8
  5831                           tblptrh	equ	0xFF7
  5832                           tblptrl	equ	0xFF6
  5833                           tablat	equ	0xFF5
  5834                           prodh	equ	0xFF4
  5835                           prodl	equ	0xFF3
  5836                           intcon	equ	0xFF2
  5837                           intcon2	equ	0xFF1
  5838                           intcon3	equ	0xFF0
  5839                           indf0	equ	0xFEF
  5840                           postinc0	equ	0xFEE
  5841                           fsr0h	equ	0xFEA
  5842                           fsr0l	equ	0xFE9
  5843                           wreg	equ	0xFE8
  5844                           postinc1	equ	0xFE6
  5845                           postdec1	equ	0xFE5
  5846                           fsr1h	equ	0xFE2
  5847                           fsr1l	equ	0xFE1
  5848                           postinc2	equ	0xFDE
  5849                           postdec2	equ	0xFDD
  5850                           fsr2h	equ	0xFDA
  5851                           fsr2l	equ	0xFD9
  5852                           status	equ	0xFD8
  5853                           
  5854 ;; *************** function _tratamento_uart *****************
  5855 ;; Defined at:
  5856 ;;		line 293 in file "bibliotecas/GPS.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  received_cha    1    wreg     unsigned char 
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;  received_cha    1    0[COMRAM] unsigned char 
  5861 ;; Return value:  Size  Location     Type
  5862 ;;                  1    wreg      void 
  5863 ;; Registers used:
  5864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5865 ;; Tracked objects:
  5866 ;;		On entry : 0/0
  5867 ;;		On exit  : 0/0
  5868 ;;		Unchanged: 0/0
  5869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5870 ;;      Params:         0       0       0       0       0       0       0       0       0
  5871 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5872 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5873 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5874 ;;Total ram usage:        1 bytes
  5875 ;; Hardware stack levels used:    1
  5876 ;; This function calls:
  5877 ;;		Nothing
  5878 ;; This function is called by:
  5879 ;;		_isr
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           	psect	text33
  5884  0003C4                     __ptext33:
  5885                           	opt stack 0
  5886  0003C4                     _tratamento_uart:
  5887                           	opt stack 25
  5888                           
  5889                           ;incstack = 0
  5890                           ;tratamento_uart@received_char stored from wreg
  5891  0003C4  6E01               	movwf	tratamento_uart@received_char,c
  5892                           
  5893                           ;GPS.c: 295: if(received_char =='$'){
  5894  0003C6  0E24               	movlw	36
  5895  0003C8  1801               	xorwf	tratamento_uart@received_char,w,c
  5896  0003CA  A4D8               	btfss	status,2,c
  5897  0003CC  D010               	goto	i2l195
  5898                           
  5899                           ;GPS.c: 296: GGA_Index = 0;
  5900  0003CE  0E00               	movlw	0
  5901  0003D0  6E51               	movwf	_GGA_Index+1,c	;volatile
  5902  0003D2  0E00               	movlw	0
  5903  0003D4  6E50               	movwf	_GGA_Index,c	;volatile
  5904                           
  5905                           ;GPS.c: 297: RCM_Index = 0;
  5906  0003D6  0E00               	movlw	0
  5907  0003D8  6E4F               	movwf	_RCM_Index+1,c	;volatile
  5908  0003DA  0E00               	movlw	0
  5909  0003DC  6E4E               	movwf	_RCM_Index,c	;volatile
  5910                           
  5911                           ;GPS.c: 298: IsItGGAString = 0;
  5912  0003DE  0E00               	movlw	0
  5913  0003E0  6E59               	movwf	_IsItGGAString,c	;volatile
  5914                           
  5915                           ;GPS.c: 299: IsItRCMString = 0;
  5916  0003E2  0E00               	movlw	0
  5917  0003E4  6E58               	movwf	_IsItRCMString,c	;volatile
  5918                           
  5919                           ;GPS.c: 300: CommaCounter_GGA = 0;
  5920  0003E6  0E00               	movlw	0
  5921  0003E8  6E5A               	movwf	_CommaCounter_GGA,c
  5922                           
  5923                           ;GPS.c: 301: CommaCounter_RCM = 0;
  5924  0003EA  0E00               	movlw	0
  5925  0003EC  6E57               	movwf	_CommaCounter_RCM,c
  5926  0003EE                     i2l195:
  5927                           
  5928                           ;GPS.c: 302: }
  5929                           ;GPS.c: 305: if(IsItGGAString == 1)
  5930  0003EE  0459               	decf	_IsItGGAString,w,c	;volatile
  5931  0003F0  A4D8               	btfss	status,2,c
  5932  0003F2  D01A               	goto	i2l196
  5933                           
  5934                           ;GPS.c: 306: {
  5935                           ;GPS.c: 307: if(received_char == ',' )
  5936  0003F4  0E2C               	movlw	44
  5937  0003F6  1801               	xorwf	tratamento_uart@received_char,w,c
  5938  0003F8  A4D8               	btfss	status,2,c
  5939  0003FA  D00B               	goto	i2l197
  5940                           
  5941                           ;GPS.c: 308: {
  5942                           ;GPS.c: 309: GGA_Pointers[CommaCounter_GGA++] = GGA_Index;
  5943  0003FC  505A               	movf	_CommaCounter_GGA,w,c
  5944  0003FE  0D01               	mullw	1
  5945  000400  0EAA               	movlw	low _GGA_Pointers
  5946  000402  24F3               	addwf	prodl,w,c
  5947  000404  6ED9               	movwf	fsr2l,c
  5948  000406  0E01               	movlw	high _GGA_Pointers
  5949  000408  20F4               	addwfc	prodh,w,c
  5950  00040A  6EDA               	movwf	fsr2h,c
  5951  00040C  C050  FFDF         	movff	_GGA_Index,indf2	;volatile
  5952  000410  2A5A               	incf	_CommaCounter_GGA,f,c
  5953  000412                     i2l197:
  5954                           
  5955                           ;GPS.c: 310: }
  5956                           ;GPS.c: 311: GGA_Buffer[GGA_Index++] = received_char;
  5957  000412  0E00               	movlw	low _GGA_Buffer
  5958  000414  2450               	addwf	_GGA_Index,w,c	;volatile
  5959  000416  6ED9               	movwf	fsr2l,c
  5960  000418  0E01               	movlw	high _GGA_Buffer
  5961  00041A  2051               	addwfc	_GGA_Index+1,w,c	;volatile
  5962  00041C  6EDA               	movwf	fsr2h,c
  5963  00041E  C001  FFDF         	movff	tratamento_uart@received_char,indf2
  5964  000422  4A50               	infsnz	_GGA_Index,f,c	;volatile
  5965  000424  2A51               	incf	_GGA_Index+1,f,c	;volatile
  5966                           
  5967                           ;GPS.c: 312: }
  5968  000426  D01B               	goto	i2l200
  5969  000428                     i2l196:
  5970                           
  5971                           ;GPS.c: 313: else if(GGA_CODE[0] == 'G' && GGA_CODE[1] == 'G' && GGA_CODE[2] == 'A'){
  5972  000428  0E47               	movlw	71
  5973  00042A  1845               	xorwf	_GGA_CODE,w,c
  5974  00042C  A4D8               	btfss	status,2,c
  5975  00042E  D011               	goto	i2l199
  5976  000430  0E47               	movlw	71
  5977  000432  1846               	xorwf	_GGA_CODE+1,w,c
  5978  000434  A4D8               	btfss	status,2,c
  5979  000436  D00D               	goto	i2l199
  5980  000438  0E41               	movlw	65
  5981  00043A  1847               	xorwf	_GGA_CODE+2,w,c
  5982  00043C  A4D8               	btfss	status,2,c
  5983  00043E  D009               	goto	i2l199
  5984                           
  5985                           ;GPS.c: 314: IsItGGAString = 1;
  5986  000440  0E01               	movlw	1
  5987  000442  6E59               	movwf	_IsItGGAString,c	;volatile
  5988                           
  5989                           ;GPS.c: 315: GGA_CODE[0] = 0;
  5990  000444  0E00               	movlw	0
  5991  000446  6E45               	movwf	_GGA_CODE,c
  5992                           
  5993                           ;GPS.c: 316: GGA_CODE[1] = 0;
  5994  000448  0E00               	movlw	0
  5995  00044A  6E46               	movwf	_GGA_CODE+1,c
  5996                           
  5997                           ;GPS.c: 317: GGA_CODE[2] = 0;
  5998  00044C  0E00               	movlw	0
  5999  00044E  6E47               	movwf	_GGA_CODE+2,c
  6000                           
  6001                           ;GPS.c: 318: }
  6002  000450  D006               	goto	i2l200
  6003  000452                     i2l199:
  6004                           
  6005                           ;GPS.c: 319: else{
  6006                           ;GPS.c: 320: GGA_CODE[0] = GGA_CODE[1];
  6007  000452  C046  F045         	movff	_GGA_CODE+1,_GGA_CODE
  6008                           
  6009                           ;GPS.c: 321: GGA_CODE[1] = GGA_CODE[2];
  6010  000456  C047  F046         	movff	_GGA_CODE+2,_GGA_CODE+1
  6011                           
  6012                           ;GPS.c: 322: GGA_CODE[2] = received_char;
  6013  00045A  C001  F047         	movff	tratamento_uart@received_char,_GGA_CODE+2
  6014  00045E                     i2l200:
  6015                           
  6016                           ;GPS.c: 323: }
  6017                           ;GPS.c: 327: if(IsItRCMString == 1)
  6018  00045E  0458               	decf	_IsItRCMString,w,c	;volatile
  6019  000460  A4D8               	btfss	status,2,c
  6020  000462  D01A               	goto	i2l201
  6021                           
  6022                           ;GPS.c: 328: {
  6023                           ;GPS.c: 329: if(received_char == ',' )
  6024  000464  0E2C               	movlw	44
  6025  000466  1801               	xorwf	tratamento_uart@received_char,w,c
  6026  000468  A4D8               	btfss	status,2,c
  6027  00046A  D00B               	goto	i2l202
  6028                           
  6029                           ;GPS.c: 330: {
  6030                           ;GPS.c: 331: RCM_Pointers[CommaCounter_RCM++] = RCM_Index;
  6031  00046C  5057               	movf	_CommaCounter_RCM,w,c
  6032  00046E  0D01               	mullw	1
  6033  000470  0E86               	movlw	low _RCM_Pointers
  6034  000472  24F3               	addwf	prodl,w,c
  6035  000474  6ED9               	movwf	fsr2l,c
  6036  000476  0E00               	movlw	high _RCM_Pointers
  6037  000478  20F4               	addwfc	prodh,w,c
  6038  00047A  6EDA               	movwf	fsr2h,c
  6039  00047C  C04E  FFDF         	movff	_RCM_Index,indf2	;volatile
  6040  000480  2A57               	incf	_CommaCounter_RCM,f,c
  6041  000482                     i2l202:
  6042                           
  6043                           ;GPS.c: 332: }
  6044                           ;GPS.c: 333: RCM_Buffer[RCM_Index++] = received_char;
  6045  000482  0E50               	movlw	low _RCM_Buffer
  6046  000484  244E               	addwf	_RCM_Index,w,c	;volatile
  6047  000486  6ED9               	movwf	fsr2l,c
  6048  000488  0E01               	movlw	high _RCM_Buffer
  6049  00048A  204F               	addwfc	_RCM_Index+1,w,c	;volatile
  6050  00048C  6EDA               	movwf	fsr2h,c
  6051  00048E  C001  FFDF         	movff	tratamento_uart@received_char,indf2
  6052  000492  4A4E               	infsnz	_RCM_Index,f,c	;volatile
  6053  000494  2A4F               	incf	_RCM_Index+1,f,c	;volatile
  6054                           
  6055                           ;GPS.c: 334: }
  6056  000496  0012               	return	
  6057  000498                     i2l201:
  6058                           
  6059                           ;GPS.c: 335: else if(RCM_CODE[0] == 'R' && RCM_CODE[1] == 'M' && RCM_CODE[2] == 'C'){
  6060  000498  0E52               	movlw	82
  6061  00049A  1842               	xorwf	_RCM_CODE,w,c
  6062  00049C  A4D8               	btfss	status,2,c
  6063  00049E  D011               	goto	i2l204
  6064  0004A0  0E4D               	movlw	77
  6065  0004A2  1843               	xorwf	_RCM_CODE+1,w,c
  6066  0004A4  A4D8               	btfss	status,2,c
  6067  0004A6  D00D               	goto	i2l204
  6068  0004A8  0E43               	movlw	67
  6069  0004AA  1844               	xorwf	_RCM_CODE+2,w,c
  6070  0004AC  A4D8               	btfss	status,2,c
  6071  0004AE  D009               	goto	i2l204
  6072                           
  6073                           ;GPS.c: 336: IsItRCMString = 1;
  6074  0004B0  0E01               	movlw	1
  6075  0004B2  6E58               	movwf	_IsItRCMString,c	;volatile
  6076                           
  6077                           ;GPS.c: 337: RCM_CODE[0] = 0;
  6078  0004B4  0E00               	movlw	0
  6079  0004B6  6E42               	movwf	_RCM_CODE,c
  6080                           
  6081                           ;GPS.c: 338: RCM_CODE[1] = 0;
  6082  0004B8  0E00               	movlw	0
  6083  0004BA  6E43               	movwf	_RCM_CODE+1,c
  6084                           
  6085                           ;GPS.c: 339: RCM_CODE[2] = 0;
  6086  0004BC  0E00               	movlw	0
  6087  0004BE  6E44               	movwf	_RCM_CODE+2,c
  6088                           
  6089                           ;GPS.c: 340: }
  6090  0004C0  0012               	return	
  6091  0004C2                     i2l204:
  6092                           
  6093                           ;GPS.c: 341: else{
  6094                           ;GPS.c: 342: RCM_CODE[0] = RCM_CODE[1];
  6095  0004C2  C043  F042         	movff	_RCM_CODE+1,_RCM_CODE
  6096                           
  6097                           ;GPS.c: 343: RCM_CODE[1] = RCM_CODE[2];
  6098  0004C6  C044  F043         	movff	_RCM_CODE+2,_RCM_CODE+1
  6099                           
  6100                           ;GPS.c: 344: RCM_CODE[2] = received_char;
  6101  0004CA  C001  F044         	movff	tratamento_uart@received_char,_RCM_CODE+2
  6102  0004CE  0012               	return	
  6103  0004D0                     __end_of_tratamento_uart:
  6104                           	opt stack 0
  6105                           tosu	equ	0xFFF
  6106                           tosh	equ	0xFFE
  6107                           tosl	equ	0xFFD
  6108                           pclatu	equ	0xFFB
  6109                           pclath	equ	0xFFA
  6110                           pcl	equ	0xFF9
  6111                           tblptru	equ	0xFF8
  6112                           tblptrh	equ	0xFF7
  6113                           tblptrl	equ	0xFF6
  6114                           tablat	equ	0xFF5
  6115                           prodh	equ	0xFF4
  6116                           prodl	equ	0xFF3
  6117                           intcon	equ	0xFF2
  6118                           intcon2	equ	0xFF1
  6119                           intcon3	equ	0xFF0
  6120                           indf0	equ	0xFEF
  6121                           postinc0	equ	0xFEE
  6122                           fsr0h	equ	0xFEA
  6123                           fsr0l	equ	0xFE9
  6124                           wreg	equ	0xFE8
  6125                           postinc1	equ	0xFE6
  6126                           postdec1	equ	0xFE5
  6127                           fsr1h	equ	0xFE2
  6128                           fsr1l	equ	0xFE1
  6129                           indf2	equ	0xFDF
  6130                           postinc2	equ	0xFDE
  6131                           postdec2	equ	0xFDD
  6132                           fsr2h	equ	0xFDA
  6133                           fsr2l	equ	0xFD9
  6134                           status	equ	0xFD8
  6135                           
  6136 ;; *************** function _recebe_dado_uart *****************
  6137 ;; Defined at:
  6138 ;;		line 138 in file "bibliotecas/uart.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;		None
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;		None
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  1    wreg      unsigned char 
  6145 ;; Registers used:
  6146 ;;		wreg, status,2
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6152 ;;      Params:         0       0       0       0       0       0       0       0       0
  6153 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6155 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6156 ;;Total ram usage:        0 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; This function calls:
  6159 ;;		Nothing
  6160 ;; This function is called by:
  6161 ;;		_isr
  6162 ;;		_recebe_string_uart
  6163 ;; This function uses a non-reentrant model
  6164 ;;
  6165                           
  6166                           	psect	text34
  6167  000FDC                     __ptext34:
  6168                           	opt stack 0
  6169  000FDC                     _recebe_dado_uart:
  6170                           	opt stack 25
  6171                           
  6172                           ;uart.c: 140: while(RCIF==0);
  6173                           
  6174                           ;incstack = 0
  6175  000FDC  AA9E               	btfss	3998,5,c	;volatile
  6176  000FDE  D7FE               	goto	_recebe_dado_uart
  6177                           
  6178                           ;uart.c: 141: if(RCSTAbits.OERR)
  6179  000FE0  A2AB               	btfss	4011,1,c	;volatile
  6180  000FE2  D003               	goto	i2l1211
  6181                           
  6182                           ;uart.c: 142: {
  6183                           ;uart.c: 143: CREN = 0;
  6184  000FE4  98AB               	bcf	4011,4,c	;volatile
  6185                           
  6186                           ;uart.c: 144: __nop();
  6187  000FE6  F000               	nop	
  6188                           
  6189                           ;uart.c: 145: CREN=1;
  6190  000FE8  88AB               	bsf	4011,4,c	;volatile
  6191  000FEA                     i2l1211:
  6192                           
  6193                           ;uart.c: 146: }
  6194                           ;uart.c: 147: return(RCREG);
  6195  000FEA  50AE               	movf	4014,w,c	;volatile
  6196  000FEC  0012               	return	
  6197  000FEE                     __end_of_recebe_dado_uart:
  6198                           	opt stack 0
  6199                           tosu	equ	0xFFF
  6200                           tosh	equ	0xFFE
  6201                           tosl	equ	0xFFD
  6202                           pclatu	equ	0xFFB
  6203                           pclath	equ	0xFFA
  6204                           pcl	equ	0xFF9
  6205                           tblptru	equ	0xFF8
  6206                           tblptrh	equ	0xFF7
  6207                           tblptrl	equ	0xFF6
  6208                           tablat	equ	0xFF5
  6209                           prodh	equ	0xFF4
  6210                           prodl	equ	0xFF3
  6211                           intcon	equ	0xFF2
  6212                           intcon2	equ	0xFF1
  6213                           intcon3	equ	0xFF0
  6214                           indf0	equ	0xFEF
  6215                           postinc0	equ	0xFEE
  6216                           fsr0h	equ	0xFEA
  6217                           fsr0l	equ	0xFE9
  6218                           wreg	equ	0xFE8
  6219                           postinc1	equ	0xFE6
  6220                           postdec1	equ	0xFE5
  6221                           fsr1h	equ	0xFE2
  6222                           fsr1l	equ	0xFE1
  6223                           indf2	equ	0xFDF
  6224                           postinc2	equ	0xFDE
  6225                           postdec2	equ	0xFDD
  6226                           fsr2h	equ	0xFDA
  6227                           fsr2l	equ	0xFD9
  6228                           status	equ	0xFD8
  6229                           
  6230 ;; *************** function _escreve_inteiro_lcd *****************
  6231 ;; Defined at:
  6232 ;;		line 376 in file "bibliotecas/display_lcd.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  valor           2   24[COMRAM] int 
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;  texto           7   26[COMRAM] unsigned char [7]
  6237 ;; Return value:  Size  Location     Type
  6238 ;;                  1    wreg      void 
  6239 ;; Registers used:
  6240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6241 ;; Tracked objects:
  6242 ;;		On entry : 0/0
  6243 ;;		On exit  : 0/0
  6244 ;;		Unchanged: 0/0
  6245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6246 ;;      Params:         2       0       0       0       0       0       0       0       0
  6247 ;;      Locals:         7       0       0       0       0       0       0       0       0
  6248 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6249 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6250 ;;Total ram usage:        9 bytes
  6251 ;; Hardware stack levels used:    1
  6252 ;; Hardware stack levels required when called:    3
  6253 ;; This function calls:
  6254 ;;		_itoa
  6255 ;;		i2_escreve_frase_ram_lcd
  6256 ;; This function is called by:
  6257 ;;		_isr
  6258 ;;		_escreve_float_lcd
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           	psect	text35
  6263  000DF2                     __ptext35:
  6264                           	opt stack 0
  6265  000DF2                     _escreve_inteiro_lcd:
  6266                           	opt stack 22
  6267                           
  6268                           ;display_lcd.c: 378: char texto[7] = "000000";
  6269                           
  6270                           ;incstack = 0
  6271  000DF2  EE20  F0EB         	lfsr	2,escreve_inteiro_lcd@F3966
  6272  000DF6  EE10  F01B         	lfsr	1,escreve_inteiro_lcd@texto
  6273  000DFA  0E06               	movlw	6
  6274  000DFC                     i2u555_41:
  6275  000DFC  CFDB FFE3          	movff	plusw2,plusw1
  6276  000E00  06E8               	decf	wreg,f,c
  6277  000E02  E2FC               	bc	i2u555_41
  6278                           
  6279                           ;display_lcd.c: 379: itoa(texto,valor, 10);
  6280  000E04  0E1B               	movlw	low escreve_inteiro_lcd@texto
  6281  000E06  6E11               	movwf	itoa@buf,c
  6282  000E08  0E00               	movlw	high escreve_inteiro_lcd@texto
  6283  000E0A  6E12               	movwf	itoa@buf+1,c
  6284  000E0C  C019  F013         	movff	escreve_inteiro_lcd@valor,itoa@val
  6285  000E10  C01A  F014         	movff	escreve_inteiro_lcd@valor+1,itoa@val+1
  6286  000E14  0E00               	movlw	0
  6287  000E16  6E16               	movwf	itoa@base+1,c
  6288  000E18  0E0A               	movlw	10
  6289  000E1A  6E15               	movwf	itoa@base,c
  6290  000E1C  ECB7  F006         	call	_itoa	;wreg free
  6291                           
  6292                           ;display_lcd.c: 380: escreve_frase_ram_lcd(texto);
  6293  000E20  0E1B               	movlw	low escreve_inteiro_lcd@texto
  6294  000E22  6E04               	movwf	i2escreve_frase_ram_lcd@buffer,c
  6295  000E24  0E00               	movlw	high escreve_inteiro_lcd@texto
  6296  000E26  6E05               	movwf	i2escreve_frase_ram_lcd@buffer+1,c
  6297  000E28  EC40  F006         	call	i2_escreve_frase_ram_lcd	;wreg free
  6298  000E2C  0012               	return		;funcret
  6299  000E2E                     __end_of_escreve_inteiro_lcd:
  6300                           	opt stack 0
  6301                           tosu	equ	0xFFF
  6302                           tosh	equ	0xFFE
  6303                           tosl	equ	0xFFD
  6304                           pclatu	equ	0xFFB
  6305                           pclath	equ	0xFFA
  6306                           pcl	equ	0xFF9
  6307                           tblptru	equ	0xFF8
  6308                           tblptrh	equ	0xFF7
  6309                           tblptrl	equ	0xFF6
  6310                           tablat	equ	0xFF5
  6311                           prodh	equ	0xFF4
  6312                           prodl	equ	0xFF3
  6313                           intcon	equ	0xFF2
  6314                           intcon2	equ	0xFF1
  6315                           intcon3	equ	0xFF0
  6316                           indf0	equ	0xFEF
  6317                           postinc0	equ	0xFEE
  6318                           fsr0h	equ	0xFEA
  6319                           fsr0l	equ	0xFE9
  6320                           wreg	equ	0xFE8
  6321                           postinc1	equ	0xFE6
  6322                           postdec1	equ	0xFE5
  6323                           plusw1	equ	0xFE3
  6324                           fsr1h	equ	0xFE2
  6325                           fsr1l	equ	0xFE1
  6326                           indf2	equ	0xFDF
  6327                           postinc2	equ	0xFDE
  6328                           postdec2	equ	0xFDD
  6329                           plusw2	equ	0xFDB
  6330                           fsr2h	equ	0xFDA
  6331                           fsr2l	equ	0xFD9
  6332                           status	equ	0xFD8
  6333                           
  6334 ;; *************** function i2_escreve_frase_ram_lcd *****************
  6335 ;; Defined at:
  6336 ;;		line 445 in file "bibliotecas/display_lcd.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  buffer          2    3[COMRAM] PTR unsigned char 
  6339 ;;		 -> escreve_inteiro_lcd@texto(7), STR_20(3), STR_19(8), STR_18(14), 
  6340 ;;		 -> STR_17(13), STR_16(9), STR_15(14), leitura_chave@pos_ignicao_on(17), 
  6341 ;;		 -> leitura_chave@pos_ignicao_crank(17), leitura_chave@pos_ignicao_off(17), STR_14(17), STR_13(16), 
  6342 ;;		 -> STR_12(14), STR_11(14), STR_10(14), STR_9(14), 
  6343 ;;		 -> STR_8(13), STR_7(17), STR_4(17), STR_3(15), 
  6344 ;;		 -> STR_2(14), mensagem_inicial@msg_dois(17), mensagem_inicial@msg_linha_um(17), 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;		None
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6356 ;;      Params:         2       0       0       0       0       0       0       0       0
  6357 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6359 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6360 ;;Total ram usage:        2 bytes
  6361 ;; Hardware stack levels used:    1
  6362 ;; Hardware stack levels required when called:    2
  6363 ;; This function calls:
  6364 ;;		i2_escreve_caractere_lcd
  6365 ;; This function is called by:
  6366 ;;		_escreve_inteiro_lcd
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           	psect	text36
  6371  000C80                     __ptext36:
  6372                           	opt stack 0
  6373  000C80                     i2_escreve_frase_ram_lcd:
  6374                           	opt stack 22
  6375                           
  6376                           ;display_lcd.c: 447: while(*buffer)
  6377                           
  6378                           ;incstack = 0
  6379  000C80  D014               	goto	i2l722
  6380  000C82                     
  6381                           ;display_lcd.c: 448: {
  6382                           ;display_lcd.c: 449: escreve_caractere_lcd(*buffer);
  6383  000C82  C004  FFF6         	movff	i2escreve_frase_ram_lcd@buffer,tblptrl
  6384  000C86  C005  FFF7         	movff	i2escreve_frase_ram_lcd@buffer+1,tblptrh
  6385  000C8A  6AF8               	clrf	tblptru,c
  6386  000C8C  0E07               	movlw	(high __ramtop+-1)
  6387  000C8E  64F7               	cpfsgt	tblptrh,c
  6388  000C90  D003               	bra	i2u539_47
  6389  000C92  0008               	tblrd		*
  6390  000C94  50F5               	movf	tablat,w,c
  6391  000C96  D005               	bra	i2u539_40
  6392  000C98                     i2u539_47:
  6393  000C98  CFF6 FFE9          	movff	tblptrl,fsr0l
  6394  000C9C  CFF7 FFEA          	movff	tblptrh,fsr0h
  6395  000CA0  50EF               	movf	indf0,w,c
  6396  000CA2                     i2u539_40:
  6397  000CA2  EC03  F005         	call	i2_escreve_caractere_lcd
  6398                           
  6399                           ;display_lcd.c: 450: buffer++;
  6400  000CA6  4A04               	infsnz	i2escreve_frase_ram_lcd@buffer,f,c
  6401  000CA8  2A05               	incf	i2escreve_frase_ram_lcd@buffer+1,f,c
  6402  000CAA                     i2l722:
  6403  000CAA  C004  FFF6         	movff	i2escreve_frase_ram_lcd@buffer,tblptrl
  6404  000CAE  C005  FFF7         	movff	i2escreve_frase_ram_lcd@buffer+1,tblptrh
  6405  000CB2  6AF8               	clrf	tblptru,c
  6406  000CB4  0E07               	movlw	(high __ramtop+-1)
  6407  000CB6  64F7               	cpfsgt	tblptrh,c
  6408  000CB8  D003               	bra	i2u540_47
  6409  000CBA  0008               	tblrd		*
  6410  000CBC  50F5               	movf	tablat,w,c
  6411  000CBE  D005               	bra	i2u540_40
  6412  000CC0                     i2u540_47:
  6413  000CC0  CFF6 FFE9          	movff	tblptrl,fsr0l
  6414  000CC4  CFF7 FFEA          	movff	tblptrh,fsr0h
  6415  000CC8  50EF               	movf	indf0,w,c
  6416  000CCA                     i2u540_40:
  6417  000CCA  0900               	iorlw	0
  6418  000CCC  B4D8               	btfsc	status,2,c
  6419  000CCE  0012               	return	
  6420  000CD0  D7D8               	goto	i2l723
  6421  000CD2                     __end_ofi2_escreve_frase_ram_lcd:
  6422                           	opt stack 0
  6423                           tosu	equ	0xFFF
  6424                           tosh	equ	0xFFE
  6425                           tosl	equ	0xFFD
  6426                           pclatu	equ	0xFFB
  6427                           pclath	equ	0xFFA
  6428                           pcl	equ	0xFF9
  6429                           tblptru	equ	0xFF8
  6430                           tblptrh	equ	0xFF7
  6431                           tblptrl	equ	0xFF6
  6432                           tablat	equ	0xFF5
  6433                           prodh	equ	0xFF4
  6434                           prodl	equ	0xFF3
  6435                           intcon	equ	0xFF2
  6436                           intcon2	equ	0xFF1
  6437                           intcon3	equ	0xFF0
  6438                           indf0	equ	0xFEF
  6439                           postinc0	equ	0xFEE
  6440                           fsr0h	equ	0xFEA
  6441                           fsr0l	equ	0xFE9
  6442                           wreg	equ	0xFE8
  6443                           postinc1	equ	0xFE6
  6444                           postdec1	equ	0xFE5
  6445                           plusw1	equ	0xFE3
  6446                           fsr1h	equ	0xFE2
  6447                           fsr1l	equ	0xFE1
  6448                           indf2	equ	0xFDF
  6449                           postinc2	equ	0xFDE
  6450                           postdec2	equ	0xFDD
  6451                           plusw2	equ	0xFDB
  6452                           fsr2h	equ	0xFDA
  6453                           fsr2l	equ	0xFD9
  6454                           status	equ	0xFD8
  6455                           
  6456 ;; *************** function i2_escreve_caractere_lcd *****************
  6457 ;; Defined at:
  6458 ;;		line 323 in file "bibliotecas/display_lcd.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  data            1    wreg     unsigned char 
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;  data            1    2[COMRAM] unsigned char 
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  1    wreg      void 
  6465 ;; Registers used:
  6466 ;;		wreg, status,2, status,0, cstack
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6472 ;;      Params:         0       0       0       0       0       0       0       0       0
  6473 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6474 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6475 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6476 ;;Total ram usage:        1 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:    1
  6479 ;; This function calls:
  6480 ;;		i2_delay
  6481 ;; This function is called by:
  6482 ;;		i2_escreve_frase_ram_lcd
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text37
  6487  000A06                     __ptext37:
  6488                           	opt stack 0
  6489  000A06                     i2_escreve_caractere_lcd:
  6490                           	opt stack 22
  6491                           
  6492                           ;incstack = 0
  6493                           ;i2escreve_caractere_lcd@data stored from wreg
  6494  000A06  6E03               	movwf	i2escreve_caractere_lcd@data,c
  6495                           
  6496                           ;display_lcd.c: 326: PORTDbits.RD2 = 0;
  6497  000A08  9483               	bcf	3971,2,c	;volatile
  6498                           
  6499                           ;display_lcd.c: 327: PORTDbits.RD1 = 1;
  6500  000A0A  8283               	bsf	3971,1,c	;volatile
  6501                           
  6502                           ;display_lcd.c: 328: PORTDbits.RD0 = 0;
  6503  000A0C  9083               	bcf	3971,0,c	;volatile
  6504                           
  6505                           ;display_lcd.c: 331: if(data&0b00010000){PORTDbits.RD4=1;}
  6506  000A0E  A803               	btfss	i2escreve_caractere_lcd@data,4,c
  6507  000A10  D002               	goto	i2l689
  6508  000A12  8883               	bsf	3971,4,c	;volatile
  6509  000A14  D001               	goto	i2l690
  6510  000A16                     i2l689:
  6511                           
  6512                           ;display_lcd.c: 332: else {PORTDbits.RD4=0;}
  6513  000A16  9883               	bcf	3971,4,c	;volatile
  6514  000A18                     i2l690:
  6515                           
  6516                           ;display_lcd.c: 333: if(data&0b00100000){PORTDbits.RD5=1;}
  6517  000A18  AA03               	btfss	i2escreve_caractere_lcd@data,5,c
  6518  000A1A  D002               	goto	i2l691
  6519  000A1C  8A83               	bsf	3971,5,c	;volatile
  6520  000A1E  D001               	goto	i2l692
  6521  000A20                     i2l691:
  6522                           
  6523                           ;display_lcd.c: 334: else {PORTDbits.RD5=0;}
  6524  000A20  9A83               	bcf	3971,5,c	;volatile
  6525  000A22                     i2l692:
  6526                           
  6527                           ;display_lcd.c: 335: if(data&0b01000000){PORTDbits.RD6=1;}
  6528  000A22  AC03               	btfss	i2escreve_caractere_lcd@data,6,c
  6529  000A24  D002               	goto	i2l693
  6530  000A26  8C83               	bsf	3971,6,c	;volatile
  6531  000A28  D001               	goto	i2l694
  6532  000A2A                     i2l693:
  6533                           
  6534                           ;display_lcd.c: 336: else {PORTDbits.RD6=0;}
  6535  000A2A  9C83               	bcf	3971,6,c	;volatile
  6536  000A2C                     i2l694:
  6537                           
  6538                           ;display_lcd.c: 337: if(data&0b10000000){PORTDbits.RD7=1;}
  6539  000A2C  AE03               	btfss	i2escreve_caractere_lcd@data,7,c
  6540  000A2E  D002               	goto	i2l695
  6541  000A30  8E83               	bsf	3971,7,c	;volatile
  6542  000A32  D001               	goto	i2l696
  6543  000A34                     i2l695:
  6544                           
  6545                           ;display_lcd.c: 338: else {PORTDbits.RD7=0;}
  6546  000A34  9E83               	bcf	3971,7,c	;volatile
  6547  000A36                     i2l696:
  6548                           
  6549                           ;display_lcd.c: 341: PORTDbits.RD0 = 1;
  6550  000A36  8083               	bsf	3971,0,c	;volatile
  6551                           
  6552                           ;display_lcd.c: 342: delay();
  6553  000A38  EC76  F007         	call	i2_delay	;wreg free
  6554                           
  6555                           ;display_lcd.c: 343: PORTDbits.RD0 = 0;
  6556  000A3C  9083               	bcf	3971,0,c	;volatile
  6557                           
  6558                           ;display_lcd.c: 344: delay();
  6559  000A3E  EC76  F007         	call	i2_delay	;wreg free
  6560                           
  6561                           ;display_lcd.c: 348: if(data&0b00000001){PORTDbits.RD4=1;}
  6562  000A42  A003               	btfss	i2escreve_caractere_lcd@data,0,c
  6563  000A44  D002               	goto	i2l697
  6564  000A46  8883               	bsf	3971,4,c	;volatile
  6565  000A48  D001               	goto	i2l698
  6566  000A4A                     i2l697:
  6567                           
  6568                           ;display_lcd.c: 349: else {PORTDbits.RD4=0;}
  6569  000A4A  9883               	bcf	3971,4,c	;volatile
  6570  000A4C                     i2l698:
  6571                           
  6572                           ;display_lcd.c: 350: if(data&0b00000010){PORTDbits.RD5=1;}
  6573  000A4C  A203               	btfss	i2escreve_caractere_lcd@data,1,c
  6574  000A4E  D002               	goto	i2l699
  6575  000A50  8A83               	bsf	3971,5,c	;volatile
  6576  000A52  D001               	goto	i2l700
  6577  000A54                     i2l699:
  6578                           
  6579                           ;display_lcd.c: 351: else {PORTDbits.RD5=0;}
  6580  000A54  9A83               	bcf	3971,5,c	;volatile
  6581  000A56                     i2l700:
  6582                           
  6583                           ;display_lcd.c: 352: if(data&0b00000100){PORTDbits.RD6=1;}
  6584  000A56  A403               	btfss	i2escreve_caractere_lcd@data,2,c
  6585  000A58  D002               	goto	i2l701
  6586  000A5A  8C83               	bsf	3971,6,c	;volatile
  6587  000A5C  D001               	goto	i2l702
  6588  000A5E                     i2l701:
  6589                           
  6590                           ;display_lcd.c: 353: else {PORTDbits.RD6=0;}
  6591  000A5E  9C83               	bcf	3971,6,c	;volatile
  6592  000A60                     i2l702:
  6593                           
  6594                           ;display_lcd.c: 354: if(data&0b00001000){PORTDbits.RD7=1;}
  6595  000A60  A603               	btfss	i2escreve_caractere_lcd@data,3,c
  6596  000A62  D002               	goto	i2l703
  6597  000A64  8E83               	bsf	3971,7,c	;volatile
  6598  000A66  D001               	goto	i2l704
  6599  000A68                     i2l703:
  6600                           
  6601                           ;display_lcd.c: 355: else {PORTDbits.RD7=0;}
  6602  000A68  9E83               	bcf	3971,7,c	;volatile
  6603  000A6A                     i2l704:
  6604                           
  6605                           ;display_lcd.c: 358: PORTDbits.RD0 = 1;
  6606  000A6A  8083               	bsf	3971,0,c	;volatile
  6607                           
  6608                           ;display_lcd.c: 359: delay();
  6609  000A6C  EC76  F007         	call	i2_delay	;wreg free
  6610                           
  6611                           ;display_lcd.c: 360: PORTDbits.RD0 = 0;
  6612  000A70  9083               	bcf	3971,0,c	;volatile
  6613                           
  6614                           ;display_lcd.c: 361: delay();
  6615  000A72  EC76  F007         	call	i2_delay	;wreg free
  6616  000A76  0012               	return		;funcret
  6617  000A78                     __end_ofi2_escreve_caractere_lcd:
  6618                           	opt stack 0
  6619                           tosu	equ	0xFFF
  6620                           tosh	equ	0xFFE
  6621                           tosl	equ	0xFFD
  6622                           pclatu	equ	0xFFB
  6623                           pclath	equ	0xFFA
  6624                           pcl	equ	0xFF9
  6625                           tblptru	equ	0xFF8
  6626                           tblptrh	equ	0xFF7
  6627                           tblptrl	equ	0xFF6
  6628                           tablat	equ	0xFF5
  6629                           prodh	equ	0xFF4
  6630                           prodl	equ	0xFF3
  6631                           intcon	equ	0xFF2
  6632                           intcon2	equ	0xFF1
  6633                           intcon3	equ	0xFF0
  6634                           indf0	equ	0xFEF
  6635                           postinc0	equ	0xFEE
  6636                           fsr0h	equ	0xFEA
  6637                           fsr0l	equ	0xFE9
  6638                           wreg	equ	0xFE8
  6639                           postinc1	equ	0xFE6
  6640                           postdec1	equ	0xFE5
  6641                           plusw1	equ	0xFE3
  6642                           fsr1h	equ	0xFE2
  6643                           fsr1l	equ	0xFE1
  6644                           indf2	equ	0xFDF
  6645                           postinc2	equ	0xFDE
  6646                           postdec2	equ	0xFDD
  6647                           plusw2	equ	0xFDB
  6648                           fsr2h	equ	0xFDA
  6649                           fsr2l	equ	0xFD9
  6650                           status	equ	0xFD8
  6651                           
  6652 ;; *************** function i2_delay *****************
  6653 ;; Defined at:
  6654 ;;		line 45 in file "bibliotecas/display_lcd.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;		None
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  delay           1    1[COMRAM] unsigned char 
  6659 ;;  delay           1    0[COMRAM] unsigned char 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  1    wreg      void 
  6662 ;; Registers used:
  6663 ;;		wreg, status,2, status,0
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6669 ;;      Params:         0       0       0       0       0       0       0       0       0
  6670 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6672 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6673 ;;Total ram usage:        2 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; This function calls:
  6676 ;;		Nothing
  6677 ;; This function is called by:
  6678 ;;		i2_endereco_cursor_lcd
  6679 ;;		i2_escreve_caractere_lcd
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           
  6683                           	psect	text38
  6684  000EEC                     __ptext38:
  6685                           	opt stack 0
  6686  000EEC                     i2_delay:
  6687                           	opt stack 23
  6688                           
  6689                           ;display_lcd.c: 47: unsigned char contador_ext, contador_int;
  6690                           ;display_lcd.c: 49: for(contador_ext = 0; contador_ext<100; contador_ext++)
  6691                           
  6692                           ;incstack = 0
  6693  000EEC  0E00               	movlw	0
  6694  000EEE  6E01               	movwf	i2delay@contador_ext,c
  6695  000EF0                     i2l4961:
  6696  000EF0  0E63               	movlw	99
  6697  000EF2  6401               	cpfsgt	i2delay@contador_ext,c
  6698  000EF4  D001               	goto	i2l628
  6699  000EF6  0012               	return	
  6700  000EF8                     i2l628:
  6701                           
  6702                           ;display_lcd.c: 50: {
  6703                           ;display_lcd.c: 51: __nop();
  6704  000EF8  F000               	nop	
  6705                           
  6706                           ;display_lcd.c: 52: for(contador_int = 0; contador_int<50; contador_int++)
  6707  000EFA  0E00               	movlw	0
  6708  000EFC  6E02               	movwf	i2delay@contador_int,c
  6709  000EFE                     i2l4967:
  6710  000EFE  0E31               	movlw	49
  6711  000F00  6402               	cpfsgt	i2delay@contador_int,c
  6712  000F02  D001               	goto	i2l630
  6713  000F04  D003               	goto	i2u418_40
  6714  000F06                     i2l630:
  6715                           
  6716                           ;display_lcd.c: 53: {
  6717                           ;display_lcd.c: 54: __nop();
  6718  000F06  F000               	nop	
  6719  000F08  2A02               	incf	i2delay@contador_int,f,c
  6720  000F0A  D7F9               	goto	i2l4967
  6721  000F0C                     i2u418_40:
  6722  000F0C  2A01               	incf	i2delay@contador_ext,f,c
  6723  000F0E  D7F0               	goto	i2l4961
  6724  000F10                     __end_ofi2_delay:
  6725                           	opt stack 0
  6726                           tosu	equ	0xFFF
  6727                           tosh	equ	0xFFE
  6728                           tosl	equ	0xFFD
  6729                           pclatu	equ	0xFFB
  6730                           pclath	equ	0xFFA
  6731                           pcl	equ	0xFF9
  6732                           tblptru	equ	0xFF8
  6733                           tblptrh	equ	0xFF7
  6734                           tblptrl	equ	0xFF6
  6735                           tablat	equ	0xFF5
  6736                           prodh	equ	0xFF4
  6737                           prodl	equ	0xFF3
  6738                           intcon	equ	0xFF2
  6739                           intcon2	equ	0xFF1
  6740                           intcon3	equ	0xFF0
  6741                           indf0	equ	0xFEF
  6742                           postinc0	equ	0xFEE
  6743                           fsr0h	equ	0xFEA
  6744                           fsr0l	equ	0xFE9
  6745                           wreg	equ	0xFE8
  6746                           postinc1	equ	0xFE6
  6747                           postdec1	equ	0xFE5
  6748                           plusw1	equ	0xFE3
  6749                           fsr1h	equ	0xFE2
  6750                           fsr1l	equ	0xFE1
  6751                           indf2	equ	0xFDF
  6752                           postinc2	equ	0xFDE
  6753                           postdec2	equ	0xFDD
  6754                           plusw2	equ	0xFDB
  6755                           fsr2h	equ	0xFDA
  6756                           fsr2l	equ	0xFD9
  6757                           status	equ	0xFD8
  6758                           
  6759 ;; *************** function _itoa *****************
  6760 ;; Defined at:
  6761 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;  buf             2   16[COMRAM] PTR unsigned char 
  6764 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
  6765 ;;  val             2   18[COMRAM] int 
  6766 ;;  base            2   20[COMRAM] int 
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;  cp              2   22[COMRAM] PTR unsigned char 
  6769 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
  6770 ;; Return value:  Size  Location     Type
  6771 ;;                  2   16[COMRAM] PTR unsigned char 
  6772 ;; Registers used:
  6773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6774 ;; Tracked objects:
  6775 ;;		On entry : 0/0
  6776 ;;		On exit  : 0/0
  6777 ;;		Unchanged: 0/0
  6778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6779 ;;      Params:         6       0       0       0       0       0       0       0       0
  6780 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6781 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6782 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6783 ;;Total ram usage:        8 bytes
  6784 ;; Hardware stack levels used:    1
  6785 ;; Hardware stack levels required when called:    2
  6786 ;; This function calls:
  6787 ;;		_utoa
  6788 ;; This function is called by:
  6789 ;;		_escreve_inteiro_lcd
  6790 ;;		_escreve_inteiro_uart
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           	psect	text39
  6795  000D6E                     __ptext39:
  6796                           	opt stack 0
  6797  000D6E                     _itoa:
  6798                           	opt stack 22
  6799                           
  6800                           ;incstack = 0
  6801  000D6E  C011  F017         	movff	itoa@buf,itoa@cp
  6802  000D72  C012  F018         	movff	itoa@buf+1,itoa@cp+1
  6803  000D76  AE14               	btfss	itoa@val+1,7,c
  6804  000D78  D00C               	goto	i2l1678
  6805  000D7A  C011  FFD9         	movff	itoa@buf,fsr2l
  6806  000D7E  C012  FFDA         	movff	itoa@buf+1,fsr2h
  6807  000D82  0E2D               	movlw	45
  6808  000D84  6EDF               	movwf	indf2,c
  6809  000D86  4A11               	infsnz	itoa@buf,f,c
  6810  000D88  2A12               	incf	itoa@buf+1,f,c
  6811  000D8A  6C13               	negf	itoa@val,c
  6812  000D8C  1E14               	comf	itoa@val+1,f,c
  6813  000D8E  B0D8               	btfsc	status,0,c
  6814  000D90  2A14               	incf	itoa@val+1,f,c
  6815  000D92                     i2l1678:
  6816  000D92  C011  F008         	movff	itoa@buf,utoa@buf
  6817  000D96  C012  F009         	movff	itoa@buf+1,utoa@buf+1
  6818  000D9A  C013  F00A         	movff	itoa@val,utoa@val
  6819  000D9E  C014  F00B         	movff	itoa@val+1,utoa@val+1
  6820  000DA2  C015  F00C         	movff	itoa@base,utoa@base
  6821  000DA6  C016  F00D         	movff	itoa@base+1,utoa@base+1
  6822  000DAA  EC21  F003         	call	_utoa	;wreg free
  6823  000DAE  0012               	return	
  6824  000DB0                     __end_of_itoa:
  6825                           	opt stack 0
  6826                           tosu	equ	0xFFF
  6827                           tosh	equ	0xFFE
  6828                           tosl	equ	0xFFD
  6829                           pclatu	equ	0xFFB
  6830                           pclath	equ	0xFFA
  6831                           pcl	equ	0xFF9
  6832                           tblptru	equ	0xFF8
  6833                           tblptrh	equ	0xFF7
  6834                           tblptrl	equ	0xFF6
  6835                           tablat	equ	0xFF5
  6836                           prodh	equ	0xFF4
  6837                           prodl	equ	0xFF3
  6838                           intcon	equ	0xFF2
  6839                           intcon2	equ	0xFF1
  6840                           intcon3	equ	0xFF0
  6841                           indf0	equ	0xFEF
  6842                           postinc0	equ	0xFEE
  6843                           fsr0h	equ	0xFEA
  6844                           fsr0l	equ	0xFE9
  6845                           wreg	equ	0xFE8
  6846                           postinc1	equ	0xFE6
  6847                           postdec1	equ	0xFE5
  6848                           plusw1	equ	0xFE3
  6849                           fsr1h	equ	0xFE2
  6850                           fsr1l	equ	0xFE1
  6851                           indf2	equ	0xFDF
  6852                           postinc2	equ	0xFDE
  6853                           postdec2	equ	0xFDD
  6854                           plusw2	equ	0xFDB
  6855                           fsr2h	equ	0xFDA
  6856                           fsr2l	equ	0xFD9
  6857                           status	equ	0xFD8
  6858                           
  6859 ;; *************** function _utoa *****************
  6860 ;; Defined at:
  6861 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  buf             2    7[COMRAM] PTR unsigned char 
  6864 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
  6865 ;;  val             2    9[COMRAM] unsigned int 
  6866 ;;  base            2   11[COMRAM] int 
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;  v               2   13[COMRAM] unsigned int 
  6869 ;;  c               1   15[COMRAM] unsigned char 
  6870 ;; Return value:  Size  Location     Type
  6871 ;;                  2    7[COMRAM] PTR unsigned char 
  6872 ;; Registers used:
  6873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6874 ;; Tracked objects:
  6875 ;;		On entry : 0/0
  6876 ;;		On exit  : 0/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6879 ;;      Params:         6       0       0       0       0       0       0       0       0
  6880 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6882 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6883 ;;Total ram usage:        9 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; Hardware stack levels required when called:    1
  6886 ;; This function calls:
  6887 ;;		___lwdiv
  6888 ;;		___lwmod
  6889 ;; This function is called by:
  6890 ;;		_itoa
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           	psect	text40
  6895  000642                     __ptext40:
  6896                           	opt stack 0
  6897  000642                     _utoa:
  6898                           	opt stack 22
  6899                           
  6900                           ;incstack = 0
  6901  000642  C00A  F00E         	movff	utoa@val,utoa@v
  6902  000646  C00B  F00F         	movff	utoa@val+1,utoa@v+1
  6903  00064A  C00E  F001         	movff	utoa@v,___lwdiv@dividend
  6904  00064E  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  6905  000652  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  6906  000656  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  6907  00065A  EC69  F006         	call	___lwdiv	;wreg free
  6908  00065E  C001  F00E         	movff	?___lwdiv,utoa@v
  6909  000662  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
  6910  000666  4A08               	infsnz	utoa@buf,f,c
  6911  000668  2A09               	incf	utoa@buf+1,f,c
  6912  00066A  500E               	movf	utoa@v,w,c
  6913  00066C  100F               	iorwf	utoa@v+1,w,c
  6914  00066E  A4D8               	btfss	status,2,c
  6915  000670  D7EC               	goto	i2l1682
  6916  000672  C008  FFD9         	movff	utoa@buf,fsr2l
  6917  000676  C009  FFDA         	movff	utoa@buf+1,fsr2h
  6918  00067A  0E00               	movlw	0
  6919  00067C  6EDF               	movwf	indf2,c
  6920  00067E  0608               	decf	utoa@buf,f,c
  6921  000680  A0D8               	btfss	status,0,c
  6922  000682  0609               	decf	utoa@buf+1,f,c
  6923  000684  C00A  F001         	movff	utoa@val,___lwmod@dividend
  6924  000688  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
  6925  00068C  C00C  F003         	movff	utoa@base,___lwmod@divisor
  6926  000690  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
  6927  000694  ECD8  F006         	call	___lwmod	;wreg free
  6928  000698  5001               	movf	?___lwmod,w,c
  6929  00069A  6E10               	movwf	utoa@c,c
  6930  00069C  C00A  F001         	movff	utoa@val,___lwdiv@dividend
  6931  0006A0  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  6932  0006A4  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  6933  0006A8  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  6934  0006AC  EC69  F006         	call	___lwdiv	;wreg free
  6935  0006B0  C001  F00A         	movff	?___lwdiv,utoa@val
  6936  0006B4  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
  6937  0006B8  0E09               	movlw	9
  6938  0006BA  6410               	cpfsgt	utoa@c,c
  6939  0006BC  D002               	goto	i2l1685
  6940  0006BE  0E07               	movlw	7
  6941  0006C0  2610               	addwf	utoa@c,f,c
  6942  0006C2                     i2l1685:
  6943  0006C2  0E30               	movlw	48
  6944  0006C4  2610               	addwf	utoa@c,f,c
  6945  0006C6  C008  FFD9         	movff	utoa@buf,fsr2l
  6946  0006CA  C009  FFDA         	movff	utoa@buf+1,fsr2h
  6947  0006CE  C010  FFDF         	movff	utoa@c,indf2
  6948  0006D2  0608               	decf	utoa@buf,f,c
  6949  0006D4  A0D8               	btfss	status,0,c
  6950  0006D6  0609               	decf	utoa@buf+1,f,c
  6951  0006D8  500A               	movf	utoa@val,w,c
  6952  0006DA  100B               	iorwf	utoa@val+1,w,c
  6953  0006DC  A4D8               	btfss	status,2,c
  6954  0006DE  D7D2               	goto	i2l1684
  6955                           
  6956                           ;	Return value of _utoa is never used
  6957  0006E0  4A08               	infsnz	utoa@buf,f,c
  6958  0006E2  2A09               	incf	utoa@buf+1,f,c
  6959  0006E4  0012               	return	
  6960  0006E6                     __end_of_utoa:
  6961                           	opt stack 0
  6962                           tosu	equ	0xFFF
  6963                           tosh	equ	0xFFE
  6964                           tosl	equ	0xFFD
  6965                           pclatu	equ	0xFFB
  6966                           pclath	equ	0xFFA
  6967                           pcl	equ	0xFF9
  6968                           tblptru	equ	0xFF8
  6969                           tblptrh	equ	0xFF7
  6970                           tblptrl	equ	0xFF6
  6971                           tablat	equ	0xFF5
  6972                           prodh	equ	0xFF4
  6973                           prodl	equ	0xFF3
  6974                           intcon	equ	0xFF2
  6975                           intcon2	equ	0xFF1
  6976                           intcon3	equ	0xFF0
  6977                           indf0	equ	0xFEF
  6978                           postinc0	equ	0xFEE
  6979                           fsr0h	equ	0xFEA
  6980                           fsr0l	equ	0xFE9
  6981                           wreg	equ	0xFE8
  6982                           postinc1	equ	0xFE6
  6983                           postdec1	equ	0xFE5
  6984                           plusw1	equ	0xFE3
  6985                           fsr1h	equ	0xFE2
  6986                           fsr1l	equ	0xFE1
  6987                           indf2	equ	0xFDF
  6988                           postinc2	equ	0xFDE
  6989                           postdec2	equ	0xFDD
  6990                           plusw2	equ	0xFDB
  6991                           fsr2h	equ	0xFDA
  6992                           fsr2l	equ	0xFD9
  6993                           status	equ	0xFD8
  6994                           
  6995 ;; *************** function ___lwmod *****************
  6996 ;; Defined at:
  6997 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  6998 ;; Parameters:    Size  Location     Type
  6999 ;;  dividend        2    0[COMRAM] unsigned int 
  7000 ;;  divisor         2    2[COMRAM] unsigned int 
  7001 ;; Auto vars:     Size  Location     Type
  7002 ;;  counter         1    4[COMRAM] unsigned char 
  7003 ;; Return value:  Size  Location     Type
  7004 ;;                  2    0[COMRAM] unsigned int 
  7005 ;; Registers used:
  7006 ;;		wreg, status,2, status,0
  7007 ;; Tracked objects:
  7008 ;;		On entry : 0/0
  7009 ;;		On exit  : 0/0
  7010 ;;		Unchanged: 0/0
  7011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7012 ;;      Params:         4       0       0       0       0       0       0       0       0
  7013 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7015 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7016 ;;Total ram usage:        5 bytes
  7017 ;; Hardware stack levels used:    1
  7018 ;; This function calls:
  7019 ;;		Nothing
  7020 ;; This function is called by:
  7021 ;;		_utoa
  7022 ;;		_converte_inteiro_matriz
  7023 ;;		_sprintf
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           	psect	text41
  7028  000DB0                     __ptext41:
  7029                           	opt stack 0
  7030  000DB0                     ___lwmod:
  7031                           	opt stack 22
  7032                           
  7033                           ;incstack = 0
  7034  000DB0  5003               	movf	___lwmod@divisor,w,c
  7035  000DB2  1004               	iorwf	___lwmod@divisor+1,w,c
  7036  000DB4  B4D8               	btfsc	status,2,c
  7037  000DB6  D018               	goto	i2l1780
  7038  000DB8  0E01               	movlw	1
  7039  000DBA  6E05               	movwf	___lwmod@counter,c
  7040  000DBC  D004               	goto	i2l1775
  7041  000DBE  90D8               	bcf	status,0,c
  7042  000DC0  3603               	rlcf	___lwmod@divisor,f,c
  7043  000DC2  3604               	rlcf	___lwmod@divisor+1,f,c
  7044  000DC4  2A05               	incf	___lwmod@counter,f,c
  7045  000DC6                     i2l1775:
  7046  000DC6  AE04               	btfss	___lwmod@divisor+1,7,c
  7047  000DC8  D7FA               	goto	i2l1776
  7048  000DCA                     i2u414_40:
  7049  000DCA  5003               	movf	___lwmod@divisor,w,c
  7050  000DCC  5C01               	subwf	___lwmod@dividend,w,c
  7051  000DCE  5004               	movf	___lwmod@divisor+1,w,c
  7052  000DD0  5802               	subwfb	___lwmod@dividend+1,w,c
  7053  000DD2  A0D8               	btfss	status,0,c
  7054  000DD4  D004               	goto	i2l1779
  7055  000DD6  5003               	movf	___lwmod@divisor,w,c
  7056  000DD8  5E01               	subwf	___lwmod@dividend,f,c
  7057  000DDA  5004               	movf	___lwmod@divisor+1,w,c
  7058  000DDC  5A02               	subwfb	___lwmod@dividend+1,f,c
  7059  000DDE                     i2l1779:
  7060  000DDE  90D8               	bcf	status,0,c
  7061  000DE0  3204               	rrcf	___lwmod@divisor+1,f,c
  7062  000DE2  3203               	rrcf	___lwmod@divisor,f,c
  7063  000DE4  2E05               	decfsz	___lwmod@counter,f,c
  7064  000DE6  D7F1               	goto	i2u414_40
  7065  000DE8                     i2l1780:
  7066  000DE8  C001  F001         	movff	___lwmod@dividend,?___lwmod
  7067  000DEC  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  7068  000DF0  0012               	return		;funcret
  7069  000DF2                     __end_of___lwmod:
  7070                           	opt stack 0
  7071                           tosu	equ	0xFFF
  7072                           tosh	equ	0xFFE
  7073                           tosl	equ	0xFFD
  7074                           pclatu	equ	0xFFB
  7075                           pclath	equ	0xFFA
  7076                           pcl	equ	0xFF9
  7077                           tblptru	equ	0xFF8
  7078                           tblptrh	equ	0xFF7
  7079                           tblptrl	equ	0xFF6
  7080                           tablat	equ	0xFF5
  7081                           prodh	equ	0xFF4
  7082                           prodl	equ	0xFF3
  7083                           intcon	equ	0xFF2
  7084                           intcon2	equ	0xFF1
  7085                           intcon3	equ	0xFF0
  7086                           indf0	equ	0xFEF
  7087                           postinc0	equ	0xFEE
  7088                           fsr0h	equ	0xFEA
  7089                           fsr0l	equ	0xFE9
  7090                           wreg	equ	0xFE8
  7091                           postinc1	equ	0xFE6
  7092                           postdec1	equ	0xFE5
  7093                           plusw1	equ	0xFE3
  7094                           fsr1h	equ	0xFE2
  7095                           fsr1l	equ	0xFE1
  7096                           indf2	equ	0xFDF
  7097                           postinc2	equ	0xFDE
  7098                           postdec2	equ	0xFDD
  7099                           plusw2	equ	0xFDB
  7100                           fsr2h	equ	0xFDA
  7101                           fsr2l	equ	0xFD9
  7102                           status	equ	0xFD8
  7103                           
  7104 ;; *************** function ___lwdiv *****************
  7105 ;; Defined at:
  7106 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;  dividend        2    0[COMRAM] unsigned int 
  7109 ;;  divisor         2    2[COMRAM] unsigned int 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;  quotient        2    4[COMRAM] unsigned int 
  7112 ;;  counter         1    6[COMRAM] unsigned char 
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  2    0[COMRAM] unsigned int 
  7115 ;; Registers used:
  7116 ;;		wreg, status,2, status,0
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7122 ;;      Params:         4       0       0       0       0       0       0       0       0
  7123 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7124 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7125 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7126 ;;Total ram usage:        7 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_utoa
  7132 ;;		_converte_inteiro_matriz
  7133 ;;		_sprintf
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           	psect	text42
  7138  000CD2                     __ptext42:
  7139                           	opt stack 0
  7140  000CD2                     ___lwdiv:
  7141                           	opt stack 22
  7142                           
  7143                           ;incstack = 0
  7144  000CD2  0E00               	movlw	0
  7145  000CD4  6E06               	movwf	___lwdiv@quotient+1,c
  7146  000CD6  0E00               	movlw	0
  7147  000CD8  6E05               	movwf	___lwdiv@quotient,c
  7148  000CDA  5003               	movf	___lwdiv@divisor,w,c
  7149  000CDC  1004               	iorwf	___lwdiv@divisor+1,w,c
  7150  000CDE  B4D8               	btfsc	status,2,c
  7151  000CE0  D01C               	goto	i2l1770
  7152  000CE2  0E01               	movlw	1
  7153  000CE4  6E07               	movwf	___lwdiv@counter,c
  7154  000CE6  D004               	goto	i2l1765
  7155  000CE8  90D8               	bcf	status,0,c
  7156  000CEA  3603               	rlcf	___lwdiv@divisor,f,c
  7157  000CEC  3604               	rlcf	___lwdiv@divisor+1,f,c
  7158  000CEE  2A07               	incf	___lwdiv@counter,f,c
  7159  000CF0                     i2l1765:
  7160  000CF0  AE04               	btfss	___lwdiv@divisor+1,7,c
  7161  000CF2  D7FA               	goto	i2l1766
  7162  000CF4                     i2u411_40:
  7163  000CF4  90D8               	bcf	status,0,c
  7164  000CF6  3605               	rlcf	___lwdiv@quotient,f,c
  7165  000CF8  3606               	rlcf	___lwdiv@quotient+1,f,c
  7166  000CFA  5003               	movf	___lwdiv@divisor,w,c
  7167  000CFC  5C01               	subwf	___lwdiv@dividend,w,c
  7168  000CFE  5004               	movf	___lwdiv@divisor+1,w,c
  7169  000D00  5802               	subwfb	___lwdiv@dividend+1,w,c
  7170  000D02  A0D8               	btfss	status,0,c
  7171  000D04  D005               	goto	i2l1769
  7172  000D06  5003               	movf	___lwdiv@divisor,w,c
  7173  000D08  5E01               	subwf	___lwdiv@dividend,f,c
  7174  000D0A  5004               	movf	___lwdiv@divisor+1,w,c
  7175  000D0C  5A02               	subwfb	___lwdiv@dividend+1,f,c
  7176  000D0E  8005               	bsf	___lwdiv@quotient,0,c
  7177  000D10                     i2l1769:
  7178  000D10  90D8               	bcf	status,0,c
  7179  000D12  3204               	rrcf	___lwdiv@divisor+1,f,c
  7180  000D14  3203               	rrcf	___lwdiv@divisor,f,c
  7181  000D16  2E07               	decfsz	___lwdiv@counter,f,c
  7182  000D18  D7ED               	goto	i2u411_40
  7183  000D1A                     i2l1770:
  7184  000D1A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  7185  000D1E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7186  000D22  0012               	return		;funcret
  7187  000D24                     __end_of___lwdiv:
  7188                           	opt stack 0
  7189                           tosu	equ	0xFFF
  7190                           tosh	equ	0xFFE
  7191                           tosl	equ	0xFFD
  7192                           pclatu	equ	0xFFB
  7193                           pclath	equ	0xFFA
  7194                           pcl	equ	0xFF9
  7195                           tblptru	equ	0xFF8
  7196                           tblptrh	equ	0xFF7
  7197                           tblptrl	equ	0xFF6
  7198                           tablat	equ	0xFF5
  7199                           prodh	equ	0xFF4
  7200                           prodl	equ	0xFF3
  7201                           intcon	equ	0xFF2
  7202                           intcon2	equ	0xFF1
  7203                           intcon3	equ	0xFF0
  7204                           indf0	equ	0xFEF
  7205                           postinc0	equ	0xFEE
  7206                           fsr0h	equ	0xFEA
  7207                           fsr0l	equ	0xFE9
  7208                           wreg	equ	0xFE8
  7209                           postinc1	equ	0xFE6
  7210                           postdec1	equ	0xFE5
  7211                           plusw1	equ	0xFE3
  7212                           fsr1h	equ	0xFE2
  7213                           fsr1l	equ	0xFE1
  7214                           indf2	equ	0xFDF
  7215                           postinc2	equ	0xFDE
  7216                           postdec2	equ	0xFDD
  7217                           plusw2	equ	0xFDB
  7218                           fsr2h	equ	0xFDA
  7219                           fsr2l	equ	0xFD9
  7220                           status	equ	0xFD8
  7221                           tosu	equ	0xFFF
  7222                           tosh	equ	0xFFE
  7223                           tosl	equ	0xFFD
  7224                           pclatu	equ	0xFFB
  7225                           pclath	equ	0xFFA
  7226                           pcl	equ	0xFF9
  7227                           tblptru	equ	0xFF8
  7228                           tblptrh	equ	0xFF7
  7229                           tblptrl	equ	0xFF6
  7230                           tablat	equ	0xFF5
  7231                           prodh	equ	0xFF4
  7232                           prodl	equ	0xFF3
  7233                           intcon	equ	0xFF2
  7234                           intcon2	equ	0xFF1
  7235                           intcon3	equ	0xFF0
  7236                           indf0	equ	0xFEF
  7237                           postinc0	equ	0xFEE
  7238                           fsr0h	equ	0xFEA
  7239                           fsr0l	equ	0xFE9
  7240                           wreg	equ	0xFE8
  7241                           postinc1	equ	0xFE6
  7242                           postdec1	equ	0xFE5
  7243                           plusw1	equ	0xFE3
  7244                           fsr1h	equ	0xFE2
  7245                           fsr1l	equ	0xFE1
  7246                           indf2	equ	0xFDF
  7247                           postinc2	equ	0xFDE
  7248                           postdec2	equ	0xFDD
  7249                           plusw2	equ	0xFDB
  7250                           fsr2h	equ	0xFDA
  7251                           fsr2l	equ	0xFD9
  7252                           status	equ	0xFD8
  7253                           
  7254                           	psect	text43
  7255  000000                     __ptext43:
  7256                           	opt stack 0
  7257                           tosu	equ	0xFFF
  7258                           tosh	equ	0xFFE
  7259                           tosl	equ	0xFFD
  7260                           pclatu	equ	0xFFB
  7261                           pclath	equ	0xFFA
  7262                           pcl	equ	0xFF9
  7263                           tblptru	equ	0xFF8
  7264                           tblptrh	equ	0xFF7
  7265                           tblptrl	equ	0xFF6
  7266                           tablat	equ	0xFF5
  7267                           prodh	equ	0xFF4
  7268                           prodl	equ	0xFF3
  7269                           intcon	equ	0xFF2
  7270                           intcon2	equ	0xFF1
  7271                           intcon3	equ	0xFF0
  7272                           indf0	equ	0xFEF
  7273                           postinc0	equ	0xFEE
  7274                           fsr0h	equ	0xFEA
  7275                           fsr0l	equ	0xFE9
  7276                           wreg	equ	0xFE8
  7277                           postinc1	equ	0xFE6
  7278                           postdec1	equ	0xFE5
  7279                           plusw1	equ	0xFE3
  7280                           fsr1h	equ	0xFE2
  7281                           fsr1l	equ	0xFE1
  7282                           indf2	equ	0xFDF
  7283                           postinc2	equ	0xFDE
  7284                           postdec2	equ	0xFDD
  7285                           plusw2	equ	0xFDB
  7286                           fsr2h	equ	0xFDA
  7287                           fsr2l	equ	0xFD9
  7288                           status	equ	0xFD8
  7289                           
  7290                           	psect	rparam
  7291  0000                     tosu	equ	0xFFF
  7292                           tosh	equ	0xFFE
  7293                           tosl	equ	0xFFD
  7294                           pclatu	equ	0xFFB
  7295                           pclath	equ	0xFFA
  7296                           pcl	equ	0xFF9
  7297                           tblptru	equ	0xFF8
  7298                           tblptrh	equ	0xFF7
  7299                           tblptrl	equ	0xFF6
  7300                           tablat	equ	0xFF5
  7301                           prodh	equ	0xFF4
  7302                           prodl	equ	0xFF3
  7303                           intcon	equ	0xFF2
  7304                           intcon2	equ	0xFF1
  7305                           intcon3	equ	0xFF0
  7306                           indf0	equ	0xFEF
  7307                           postinc0	equ	0xFEE
  7308                           fsr0h	equ	0xFEA
  7309                           fsr0l	equ	0xFE9
  7310                           wreg	equ	0xFE8
  7311                           postinc1	equ	0xFE6
  7312                           postdec1	equ	0xFE5
  7313                           plusw1	equ	0xFE3
  7314                           fsr1h	equ	0xFE2
  7315                           fsr1l	equ	0xFE1
  7316                           indf2	equ	0xFDF
  7317                           postinc2	equ	0xFDE
  7318                           postdec2	equ	0xFDD
  7319                           plusw2	equ	0xFDB
  7320                           fsr2h	equ	0xFDA
  7321                           fsr2l	equ	0xFD9
  7322                           status	equ	0xFD8
  7323                           
  7324                           	psect	temp
  7325  00005F                     btemp:
  7326                           	opt stack 0
  7327  00005F                     	ds	1
  7328  0000                     int$flags	set	btemp
  7329  0000                     wtemp6	set	btemp+1
  7330                           tosu	equ	0xFFF
  7331                           tosh	equ	0xFFE
  7332                           tosl	equ	0xFFD
  7333                           pclatu	equ	0xFFB
  7334                           pclath	equ	0xFFA
  7335                           pcl	equ	0xFF9
  7336                           tblptru	equ	0xFF8
  7337                           tblptrh	equ	0xFF7
  7338                           tblptrl	equ	0xFF6
  7339                           tablat	equ	0xFF5
  7340                           prodh	equ	0xFF4
  7341                           prodl	equ	0xFF3
  7342                           intcon	equ	0xFF2
  7343                           intcon2	equ	0xFF1
  7344                           intcon3	equ	0xFF0
  7345                           indf0	equ	0xFEF
  7346                           postinc0	equ	0xFEE
  7347                           fsr0h	equ	0xFEA
  7348                           fsr0l	equ	0xFE9
  7349                           wreg	equ	0xFE8
  7350                           postinc1	equ	0xFE6
  7351                           postdec1	equ	0xFE5
  7352                           plusw1	equ	0xFE3
  7353                           fsr1h	equ	0xFE2
  7354                           fsr1l	equ	0xFE1
  7355                           indf2	equ	0xFDF
  7356                           postinc2	equ	0xFDE
  7357                           postdec2	equ	0xFDD
  7358                           plusw2	equ	0xFDB
  7359                           fsr2h	equ	0xFDA
  7360                           fsr2l	equ	0xFD9
  7361                           status	equ	0xFD8


Data Sizes:
    Strings     225
    Constant    223
    Data        24
    BSS         902
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      94
    BANK0           160     42     146
    BANK1           256      0     222
    BANK2           256      0      48
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    rd	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(COMRAM[7]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(COMRAM[7]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(COMRAM[7]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(COMRAM[7]), 

    pf_readdir@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    pf_opendir@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    follow_path@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    get_fileinfo@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    create_name@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dir_read@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dir_find@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dir_next@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    S1961$fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dir_rewind@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    FatFs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), SDCard@fs(COMRAM[42]), 

    escreve_frase_ram_lcd@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), STR_20(CODE[3]), STR_19(CODE[8]), STR_18(CODE[14]), 
		 -> STR_17(CODE[13]), STR_16(CODE[9]), STR_15(CODE[14]), leitura_chave@pos_ignicao_on(COMRAM[17]), 
		 -> leitura_chave@pos_ignicao_crank(COMRAM[17]), leitura_chave@pos_ignicao_off(COMRAM[17]), STR_14(CODE[17]), STR_13(CODE[16]), 
		 -> STR_12(CODE[14]), STR_11(CODE[14]), STR_10(CODE[14]), STR_9(CODE[14]), 
		 -> STR_8(CODE[13]), STR_7(CODE[17]), STR_4(CODE[17]), STR_3(CODE[15]), 
		 -> STR_2(CODE[14]), mensagem_inicial@msg_dois(BANK0[17]), mensagem_inicial@msg_linha_um(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(COMRAM[7]), 

    p_tarefas	PTR FTN()void [2] size(2) Largest target is 1
		 -> GPS(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->_escreve_inteiro_lcd
    i2_posicao_cursor_lcd->i2_endereco_cursor_lcd
    i2_endereco_cursor_lcd->i2_delay
    _escreve_inteiro_lcd->_itoa
    i2_escreve_frase_ram_lcd->i2_escreve_caractere_lcd
    i2_escreve_caractere_lcd->i2_delay
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    _main->_mensagem_inicial
    _mensagem_inicial->_posicao_cursor_lcd
    _posicao_cursor_lcd->_endereco_cursor_lcd
    _endereco_cursor_lcd->_delay
    _escreve_frase_ram_lcd->_escreve_caractere_lcd
    _escreve_caractere_lcd->_delay
    _leitura_continua_adc->_leitura_adc
    _init_lcd->_escreve_cmd_lcd
    _escreve_cmd_lcd->_delay
    _config_timer_zero->_write_timer_zero
    _inicializa_uart->_configura_baudrate_uart
    _configura_baudrate_uart->___aldiv
    _controle_shrc->_envia_dados_shrc

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6613
                      _controle_shrc
                        _escalonador
                    _inicializa_shrc
                 _inicializa_tarefas
                    _inicializa_uart
                      _init_hardware
                           _init_lcd
             _leitura_chaves_sistema
               _leitura_continua_adc
                   _mensagem_inicial
 ---------------------------------------------------------------------------------
 (1) _mensagem_inicial                                    36    36      0    4619
                                              6 BANK0     36    36      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (2) _posicao_cursor_lcd                                   3     2      1    2196
                                              3 BANK0      3     2      1
                _endereco_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _endereco_cursor_lcd                                  1     1      0     246
                                              2 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _escreve_frase_ram_lcd                                2     0      2    2035
                                              3 BANK0      2     0      2
              _escreve_caractere_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_caractere_lcd                                1     1      0     268
                                              2 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _leitura_continua_adc                                 8     8      0     312
                                              7 BANK0      8     8      0
                        _leitura_adc
 ---------------------------------------------------------------------------------
 (2) _leitura_adc                                          7     5      2      22
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _leitura_chaves_sistema                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             1     1      0     426
                                              3 BANK0      1     1      0
                              _delay
                    _escreve_cmd_lcd
 ---------------------------------------------------------------------------------
 (2) _escreve_cmd_lcd                                      1     1      0     334
                                              2 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     2      0      92
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     195
                  _config_timer_dois
                  _config_timer_zero
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     195
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     4     2      2     195
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _config_timer_dois                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_uart                                      0     0      0     836
            _configura_baudrate_uart
 ---------------------------------------------------------------------------------
 (2) _configura_baudrate_uart                             14    10      4     836
                                             14 BANK0     14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     604
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_shrc                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0     156
                                              0 BANK0      3     3      0
                                _GPS *
 ---------------------------------------------------------------------------------
 (2) _GPS                                                 62    62      0       0
 ---------------------------------------------------------------------------------
 (1) _controle_shrc                                        0     0      0      69
                   _ativa_latch_shrc
                   _envia_dados_shrc
 ---------------------------------------------------------------------------------
 (2) _envia_dados_shrc                                     2     2      0      69
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ativa_latch_shrc                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                 21    21      0    4879
                                             33 COMRAM    21    21      0
                _escreve_inteiro_lcd
                   _recebe_dado_uart
                    _tratamento_uart
               i2_posicao_cursor_lcd
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (6) i2_write_timer_zero                                   4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) i2_posicao_cursor_lcd                                 3     2      1     500
                                              3 COMRAM     3     2      1
              i2_endereco_cursor_lcd
 ---------------------------------------------------------------------------------
 (7) i2_endereco_cursor_lcd                                1     1      0     246
                                              2 COMRAM     1     1      0
                            i2_delay
 ---------------------------------------------------------------------------------
 (6) _tratamento_uart                                      1     1      0     154
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _recebe_dado_uart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _escreve_inteiro_lcd                                  9     7      2    4042
                                             24 COMRAM     9     7      2
                               _itoa
            i2_escreve_frase_ram_lcd
 ---------------------------------------------------------------------------------
 (7) i2_escreve_frase_ram_lcd                              2     0      2     339
                                              3 COMRAM     2     0      2
            i2_escreve_caractere_lcd
 ---------------------------------------------------------------------------------
 (8) i2_escreve_caractere_lcd                              1     1      0     268
                                              2 COMRAM     1     1      0
                            i2_delay
 ---------------------------------------------------------------------------------
 (8) i2_delay                                              2     2      0      92
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    3398
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    2779
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4    1047
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4    1202
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _controle_shrc
     _ativa_latch_shrc
     _envia_dados_shrc
   _escalonador
     _GPS *
   _inicializa_shrc
   _inicializa_tarefas
   _inicializa_uart
     _configura_baudrate_uart
       ___aldiv
   _init_hardware
     _config_timer_dois
     _config_timer_zero
       _write_timer_zero
     _init_interrupt
     _init_oscilador
     _init_ports
   _init_lcd
     _delay
     _escreve_cmd_lcd
       _delay
   _leitura_chaves_sistema
   _leitura_continua_adc
     _leitura_adc
   _mensagem_inicial
     _escreve_cmd_lcd
       _delay
     _escreve_frase_ram_lcd
       _escreve_caractere_lcd
         _delay
     _posicao_cursor_lcd
       _endereco_cursor_lcd
         _delay

 _isr (ROOT)
   _escreve_inteiro_lcd
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     i2_escreve_frase_ram_lcd
       i2_escreve_caractere_lcd
         i2_delay
   _recebe_dado_uart
   _tratamento_uart
   i2_posicao_cursor_lcd
     i2_endereco_cursor_lcd
       i2_delay
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     200      21       25.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      30       9       18.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      DE       7       86.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2A      92       5       91.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     36      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FE      20        0.0%
DATA                 0      0     3FE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jan 28 16:47:02 2022

        __end_of_mensagem_inicial 089E                                 _s 0055  
          __size_of_controle_shrc 000E                       _SSPSTATbits 000FC7  
                ??_init_interrupt 00B0                                l91 063E  
                              l89 05AC                                l97 0E80  
                              l98 0E90      __size_of_escreve_inteiro_lcd 003C  
                     __CFG_BOR$ON 000000                                _rd 004C  
                     __CFG_BORV$3 000000                      ?_escalonador 0001  
                ?_inicializa_shrc 0001                  ?_inicializa_uart 0001  
                             l343 0D64                               l344 0D32  
                             l440 0B5E                               l345 0D3A  
                             l441 0B8C                               l346 0D3C  
                             l442 0B62                               l443 0B66  
                             l451 02A6                               l444 0B6A  
                             l700 0972                               l453 02B2  
                             l701 097A                               l630 0EBC  
                             l446 0B8E                               l702 097C  
                             l439 0B70                               l703 0984  
                             l640 07A2                               l704 0986  
                             l641 07A4                               l650 07E2  
                             l642 07AC                               l722 0C58  
                             l651 07E4                               l643 07AE  
                             l723 0C2E                               l628 0EAC  
                             l652 07EC                               l644 07B6  
                             l660 0A8E                               l653 07EE  
                             l645 07B8                               l661 0A90  
                             l646 07CE                               l638 0798  
                             l670 0ACE                               l662 0A98  
                             l647 07D0                               l639 079A  
                             l671 0AD0                               l663 0A9A  
                             l648 07D8                               l672 0AD8  
                             l664 0AA2                               l680 0910  
                             l649 07DA                               l673 0ADA  
                             l665 0AA4                               l681 08BC  
                             l690 0932                               l666 0ABA  
                             l682 08CC                               l691 093A  
                             l667 0ABC                               l683 08DC  
                             l692 093C                               l668 0AC4  
                             l684 08EC                               l693 0944  
                             l669 0AC6                               l677 0916  
                             l694 0946                               l678 08F4  
                             l695 094E                               l679 08B0  
                             l696 0950                               l697 0966  
                             l689 0930                               l698 0968  
                             l699 0970                               _GPS 1018  
                             _PCL 000FF9                               _PR2 000FCB  
                             _E_W 005B                               _N_S 005C  
                ??_init_oscilador 00B0                               _isr 0008  
               ??_tratamento_uart 0001                               _txt 0196  
                             prod 000FF3                               tosl 000FFD  
                             wreg 000FE8                      __CFG_FOSC$HS 000000  
                  create_name@cvt 60BF         __size_of_write_timer_zero 0012  
                    __CFG_LVP$OFF 000000           ??i2_endereco_cursor_lcd 0003  
                            ?_GPS 0001           ??_escreve_frase_ram_lcd 00B5  
                    __CFG_WDT$OFF 000000                              l1321 0534  
                            l1322 0528                              l1325 0568  
                            l1326 0576                              l1318 04EE  
                            l1327 058C                              l1319 0506  
                            l1185 027E  __size_ofi2_escreve_caractere_lcd 0072  
                            l4903 0EA4                              l5733 05A4  
                            l4909 0EB4                              ?_isr 0001  
                            l5853 02AA                              l5847 029E  
           _escreve_caractere_lcd 091C                              STR_1 6260  
                            STR_2 6209                              STR_3 61D0  
                            STR_4 61AF                              STR_5 624D  
                            STR_6 6271                              STR_8 6240  
                            STR_9 6225                    timer_dois@flag 009E  
                            _BRGH 007D62                              _T0IF 007F92  
                            _CREN 007D5C                              _LATB 000F8A  
                            _PIE1 000F9D                              u4080 0EC4  
                            u5235 0178                              u4540 0538  
                            u4700 0C78                              u5245 01C4  
               _valor_leitura_adc 0060                              u5265 0208  
                            u5610 0826                              u5275 0252  
                            u4707 0C6E                              u4820 0812  
                            u5620 083E                              _RCIF 007CF5  
                            u5650 036E                              u4690 0C4E  
                            i2l81 0106                              u4865 0B9C  
                            u4697 0C44                              i2l82 011A  
                            i2l75 009E                              i2l76 0112  
                            i2l77 00B8                              u5598 05FC  
                            i2l79 00E6                              u8407 0D54  
                            u5599 0610                              u8417 0D5C  
                            u8427 0F96                              u8347 0888  
                            u8437 0F9E                              u8357 070A  
                            u8367 0726                              u8377 0742  
                            u8387 0D44                              u8397 0D4C  
                            _TMR2 000FCC                              _SPEN 007D5F  
                            _TRMT 007D61                              _TXEN 007D65  
                            _SYNC 007D64                              _dado 009F  
                            _flag 004A                              _main 0E68  
                            _itoa 0D6E                              fsr0h 000FEA  
                            fsr1h 000FE2                              indf0 000FEF  
                            fsr2h 000FDA                              fsr0l 000FE9  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 005F  
                            _utoa 0642     __size_of_leitura_continua_adc 012C  
                            prodh 000FF4                              prodl 000FF3  
    tratamento_uart@received_char 0001                   __end_ofi2_delay 0F10  
                            start 000E                     __CFG_IESO$OFF 000000  
                   disk_readp@arr 0230                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                             ??_GPS 00B0  
                           ??_isr 0022                       _Data_Buffer 00A1  
__size_of_configura_baudrate_uart 0132            ??i2_posicao_cursor_lcd 0005  
                   __CFG_PLLDIV$5 000000                   __end_of___aldiv 059E  
                           ?_main 0001                             ?_itoa 0011  
                           _EEADR 000FA9                             STR_10 61FB  
                           STR_11 6217                             STR_20 627C  
                           STR_21 6279                             STR_13 61C0  
                           STR_14 619E                             STR_15 61ED  
                           STR_16 6257                             STR_17 6233  
                           STR_18 61DF                             STR_19 6269  
                           ?_utoa 0008                             _T0CON 000FD5  
                           _T2CON 000FCA                    _data_buffer_32 01BE  
                 __end_of___lwdiv 0D24                      ?_leitura_adc 00B0  
                           i2l200 045E                   __end_of___lwmod 0DF2  
                           i2l201 0498                             i2l202 0482  
 __size_of_leitura_chaves_sistema 003A                             i2l204 04C2  
                           i2l195 03EE                             i2l700 0A56  
                           i2l196 0428                             i2l701 0A5E  
                           i2l197 0412                             i2l630 0F06  
                           i2l702 0A60                             i2l703 0A68  
                           i2l199 0452                             i2l704 0A6A  
                           i2l722 0CAA                             i2l723 0C82  
                           i2l628 0EF8                             i2l660 0BD4  
                           i2l661 0BD6                             i2l670 0C12  
                           i2l662 0BDE                             i2l671 0C14  
                           i2l663 0BE0                             i2l672 0C1C  
                           i2l664 0BE8                             i2l680 0B4E  
                           i2l673 0C1E                             i2l665 0BEA  
                           i2l681 0B02                             i2l690 0A18  
                           i2l666 0BFE                             i2l682 0B10  
                           i2l691 0A20                             i2l667 0C00  
                           i2l683 0B1E                             i2l692 0A22  
                           i2l668 0C08                             i2l684 0B2C  
                           i2l693 0A2A                             i2l669 0C0A  
                           i2l677 0B52                             i2l694 0A2C  
                           i2l678 0B32                             i2l695 0A34  
                           i2l679 0AF6                             i2l696 0A36  
                           i2l697 0A4A                             i2l689 0A16  
                           i2l698 0A4C                             i2l699 0A54  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                     __CFG_USBDIV$1 000000  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                             _TXREG 000FAD  
                           _TXSTA 000FAC                             _FatFs 0048  
          __end_ofcreate_name@cvt 613F                     __CFG_PWRT$OFF 000000  
      __size_of_config_timer_dois 000C                    __CFG_FCMEN$OFF 000000  
      __size_of_config_timer_zero 001C                             _delay 0E9E  
                _envia_dados_shrc 0D24                   __end_of_dpowers 619E  
        __size_of_escreve_cmd_lcd 0094                     _controle_shrc 0FEE  
                           pclath 000FFA                             tablat 000FF5  
                           plusw1 000FE3                             plusw2 000FDB  
                           utoa@c 0010                             utoa@v 000E  
                           status 000FD8                             wtemp6 0060  
                 __initialization 0994                      __end_of_main 0E9E  
                    __end_of_itoa 0DB0                      __end_of_utoa 06E6  
              _inicializa_tarefas 0F10                   escalonador@cont 00B2  
                          ??_main 00DA                            ??_itoa 0017  
                          ??_utoa 000E                     __activetblptr 000002  
             ?_inicializa_tarefas 0001                   __CFG_CCP2MX$OFF 000000  
                          ?_delay 0001            ?_escreve_caractere_lcd 0001  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                  ?_controle_shrc 0001                            _ADRESH 000FC4  
                          _ADRESL 000FC3                            _EEDATA 000FA8  
                          _EECON2 000FA7                         ??i2_delay 0001  
                          _INT0IE 007F94                            _INT0IF 007F91  
                          i2l1211 0FEA                            i2l1770 0D1A  
                          i2l1682 064A                            i2l1780 0DE8  
                          i2l1684 0684                            _PCLATH 000FFA  
                          i2l1765 0CF0                            i2l1685 06C2  
                          i2l1766 0CE8                            i2l1678 0D92  
                          i2l1775 0DC6                            i2l1776 0DBE  
                          i2l1769 0D10                            i2l1779 0DDE  
                          _INTCON 000FF2                            i2l4961 0EF0  
                          i2l6469 00B0                            i2l4967 0EFE  
                          _TMR0IF 007F92                            _TMR2IF 007CF1  
        __end_of_recebe_dado_uart 0FEE                            _SPPCFG 000F63  
                          _SPPCON 000F65                            _SSPBUF 000FC9  
          _leitura_chaves_sistema 0E2E              ??_inicializa_tarefas 00B0  
      __end_of_posicao_cursor_lcd 091C            __size_of_init_hardware 0016  
                          _Result 0056                         ??___aldiv 00B8  
                  __CFG_STVREN$ON 000000                         ??___lwdiv 0005  
                       ??___lwmod 0005                            _folder 0200  
                          _estado 0054                  __end_of_init_lcd 0784  
                          clear_0 09BC                            clear_1 09CE  
                          clear_2 09DA                            clear_3 09E6  
                          clear_4 09F2          configura_baudrate_uart@x 00CA  
                          itoa@cp 0017              __size_of_escalonador 00A4  
                    __mediumconst 60BE             write_timer_zero@timer 00B2  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                  _write_timer_zero 0FB8  
         i2_escreve_caractere_lcd 0A06         i2posicao_cursor_lcd@linha 0005  
       escreve_caractere_lcd@data 00B2               _escreve_inteiro_lcd 0DF2  
                      __accesstop 0060           __end_of__initialization 09F8  
                 __CFG_PBADEN$OFF 000000                     ___rparam_used 000001  
               ??_escreve_cmd_lcd 00B2                    __pcstackCOMRAM 0001  
               ?_ativa_latch_shrc 0001                   _tratamento_uart 03C4  
     __end_of_endereco_cursor_lcd 0AE8                      __pidataBANK0 0F4C  
               ?_mensagem_inicial 0001           _configura_baudrate_uart 0166  
                   __end_of_delay 0EC8              ?_escreve_inteiro_lcd 0019  
              ??_ativa_latch_shrc 00B0     i2endereco_cursor_lcd@endereco 0003  
              ??_mensagem_inicial 00B6                _tarefa_em_execucao 005D  
      __end_ofi2_write_timer_zero 0FDC   configura_baudrate_uart@baudrate 00BE  
                 ??_controle_shrc 00B2                     _init_hardware 0F7C  
            __size_of_leitura_adc 006A                           ??_delay 00B0  
    mensagem_inicial@msg_linha_um 00B8    __size_ofi2_endereco_cursor_lcd 006A  
                      __pbssBANK0 0060                        __pbssBANK1 0100  
                      __pbssBANK2 0200     __end_ofi2_endereco_cursor_lcd 0C2C  
  __size_of_escreve_frase_ram_lcd 0054     __end_of_escreve_frase_ram_lcd 0C80  
       escreve_inteiro_uart@F3956 00E4          __end_of_envia_dados_shrc 0D6E  
           mensagem_inicial@F4022 6183             mensagem_inicial@F4024 6172  
           ??_escreve_inteiro_lcd 001B      __end_of_leitura_continua_adc 03C4  
                         _INTCON2 000FF1                           _INTCON3 000FF0  
       ??i2_escreve_caractere_lcd 0003                    ?_init_hardware 0001  
        ?i2_escreve_frase_ram_lcd 0004               i2delay@contador_int 0002  
             i2delay@contador_ext 0001                           _SSPCON1 000FC6  
        __size_of_inicializa_shrc 0008          __size_of_inicializa_uart 0024  
                         _SSPSTAT 000FC7                           i2_delay 0EEC  
                 __CFG_VREGEN$OFF 000000                         ?_init_lcd 0001  
         __end_of_tratamento_uart 04D0                      _GGA_Pointers 01AA  
                         __Hparam 0000         ??_configura_baudrate_uart 00C2  
                         __Lparam 0000                           ___aldiv 04D0  
                         ___lwdiv 0CD2                           ___lwmod 0DB0  
                         __pcinit 0994                        _init_ports 0F64  
                         __ramtop 0800                           __ptext0 0E68  
                         __ptext1 0818                           __ptext2 089E  
                         __ptext3 0A78                           __ptext4 0C2C  
                         __ptext5 091C                           __ptext6 0298  
                         __ptext7 0B58                           __ptext8 0E2E  
                         __ptext9 06E6                         _GGA_Index 0050  
                       _T0CONbits 000FD5     __size_ofi2_posicao_cursor_lcd 0070  
                    __size_of_GPS 0002           i2write_timer_zero@timer 0003  
     endereco_cursor_lcd@endereco 00B2                           _dpowers 6194  
                    __size_of_isr 015E           ??_escreve_caractere_lcd 00B2  
                ___aldiv@dividend 00B0           __size_of_init_interrupt 0012  
                  __pintcode_body 0012           ?_leitura_chaves_sistema 0001  
            end_of_initialization 09F8                           isr@cont 0036  
      __end_ofleitura_chave@F3840 6161        __end_ofleitura_chave@F3842 6150  
      __end_ofleitura_chave@F3838 6172           __size_of_init_oscilador 0008  
                         itoa@buf 0011                           itoa@val 0013  
                   __Lmediumconst 60BE                        ??_init_lcd 00B3  
                         int_func 0012                 ?_recebe_dado_uart 0001  
          write_timer_zero@timer0 00B0                ??_recebe_dado_uart 0001  
        envia_dados_shrc@contador 00B0                         _RCSTAbits 000FAB  
        __end_of_write_timer_zero 0FCA                  ___aldiv@quotient 00BA  
                         postdec1 000FE5                           postdec2 000FDD  
                       _RCM_Index 004E                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                         utoa@buf 0008        i2posicao_cursor_lcd@coluna 0004  
                         utoa@val 000A   __end_ofi2_escreve_frase_ram_lcd 0CD2  
                       _PORTAbits 000F80                         _PORTCbits 000F82  
                       _PORTDbits 000F83                         _PORTEbits 000F84  
                 ??_init_hardware 00B4                _posicao_cursor_lcd 089E  
 __end_of_configura_baudrate_uart 0298                         _TRISAbits 000F92  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
                       _TRISDbits 000F95                   _escreve_cmd_lcd 0784  
  __end_of_leitura_chaves_sistema 0E68               ?_posicao_cursor_lcd 00B3  
                ?_tratamento_uart 0001              _leitura_continua_adc 0298  
               ??_inicializa_shrc 00B0                 ??_inicializa_uart 00CC  
     __size_of_inicializa_tarefas 0020              ??_posicao_cursor_lcd 00B4  
                   _IsItGGAString 0059                     ??_escalonador 00B0  
                     ?_init_ports 0001               start_initialization 0994  
                     __end_of_GPS 101A         __size_of_ativa_latch_shrc 0014  
                     __end_of_isr 0166         __size_of_mensagem_inicial 0086  
              i2_write_timer_zero 0FCA             ?_leitura_continua_adc 0001  
                   _IsItRCMString 0058                  _data_uart_recebe 005E  
             ?i2_write_timer_zero 0001                 ?_envia_dados_shrc 0001  
   i2escreve_frase_ram_lcd@buffer 0004                       __pdataBANK0 00DA  
                __CFG_LPT1OSC$OFF 000000                ??_envia_dados_shrc 00B0  
         __end_of_escreve_cmd_lcd 0818                     ??_leitura_adc 00B2  
    __size_of_endereco_cursor_lcd 0070                       __pbssBIGRAM 0230  
                     __pbssCOMRAM 0037                     __pcstackBANK0 00B0  
                  _init_interrupt 0FA6              ??i2_write_timer_zero 0003  
             __end_of_escalonador 0642             __end_of_controle_shrc 0FFC  
                        ?i2_delay 0001                    _init_oscilador 1008  
             __size_of_init_ports 0018             i2_endereco_cursor_lcd 0BC2  
__size_ofi2_escreve_frase_ram_lcd 0052             _escreve_frase_ram_lcd 0C2C  
     __end_of_escreve_inteiro_lcd 0E2E                 __size_of_init_lcd 009E  
                ___lwdiv@dividend 0001                 delay@contador_int 00B1  
               delay@contador_ext 00B0                         __pintcode 0008  
                   __pmediumconst 60BE                          ?___aldiv 00B0  
    i2posicao_cursor_lcd@endereco 0006                          ?___lwdiv 0001  
                        ?___lwmod 0001                _sinaliza_int_timer 00A0  
          __end_of_init_interrupt 0FB8    __size_of_escreve_caractere_lcd 0078  
   __end_of_escreve_caractere_lcd 0994       i2escreve_caractere_lcd@data 0003  
                ___lwdiv@quotient 0005                    __size_of_delay 002A  
                        _GGA_CODE 0045               __end_of_leitura_adc 0BC2  
          __end_of_init_oscilador 1010                         _p_tarefas 009A  
          ??_leitura_continua_adc 00B7                   ___aldiv@divisor 00B4  
    __end_ofi2_posicao_cursor_lcd 0B58                   ___aldiv@counter 00B8  
                        _LATBbits 000F8A                          _PIE1bits 000F9D  
                _CommaCounter_GGA 005A                          i2u411_40 0CF4  
                        _RCM_CODE 0042                          i2u414_40 0DCA  
                _CommaCounter_RCM 0057                          _PIR1bits 000F9E  
                        i2u418_40 0F0C                          _PIR2bits 000FA1  
                        i2u540_40 0CCA                          i2u540_47 0CC0  
                        i2u539_40 0CA2                          i2u555_41 0DFC  
                        i2u539_47 0C98                          i2u661_40 0078  
                        i2u661_46 007A                          i2u666_40 00EA  
               ?_write_timer_zero 00B0                leitura_chave@F3840 6150  
              leitura_chave@F3842 613F                leitura_chave@F3838 6161  
        posicao_cursor_lcd@coluna 00B3                ??_write_timer_zero 00B2  
      posicao_cursor_lcd@endereco 00B5          ?i2_escreve_caractere_lcd 0001  
       __size_of_recebe_dado_uart 0012                       _escalonador 059E  
                      _ADCON0bits 000FC2                        _ADCON1bits 000FC1  
                      _ADCON2bits 000FC0                  ?_escreve_cmd_lcd 0001  
     escreve_frase_ram_lcd@buffer 00B3                   ?_init_interrupt 0001  
                _ativa_latch_shrc 0F92                   _inicializa_shrc 1010  
                 _inicializa_uart 0EC8                  _mensagem_inicial 0818  
                 ?_init_oscilador 0001                         copy_data0 09A8  
          ?i2_endereco_cursor_lcd 0001                  __size_ofi2_delay 0024  
        ?_configura_baudrate_uart 00BE            ?_escreve_frase_ram_lcd 00B3  
                      _EECON1bits 000FA6      leitura_continua_adc@cont_int 00BD  
        escreve_inteiro_lcd@F3966 00EB                          __Hrparam 0000  
                    _RCM_Pointers 0086                       _info_chaves 0037  
                        __Lrparam 0000                  __size_of___aldiv 00CE  
                __size_of___lwdiv 0052                  __size_of___lwmod 0042  
                    ??_init_ports 00B0          escreve_inteiro_lcd@valor 0019  
        escreve_inteiro_lcd@texto 001B                       _leitura_adc 0B58  
           __end_of_init_hardware 0F92                   ___lwdiv@divisor 0003  
                 ___lwdiv@counter 0007                          _fileName 00DA  
                        __ptext10 0784                          __ptext11 0E9E  
                        __ptext20 0166                          __ptext12 0F7C  
                        __ptext21 04D0                          __ptext13 0F64  
                        __ptext30 0FCA                          __ptext22 0F10  
                        __ptext14 1008                          __ptext31 0AE8  
                        __ptext23 1010                          __ptext15 0FA6  
                        __ptext40 0642                          __ptext32 0BC2  
                        __ptext24 059E                          __ptext16 0F30  
                        __ptext41 0DB0                          __ptext33 03C4  
                        __ptext25 1018                          __ptext17 0FB8  
                        __ptext42 0CD2                          __ptext34 0FDC  
                        __ptext26 0FEE                          __ptext18 0FFC  
                        __ptext43 0000                          __ptext35 0DF2  
                        __ptext27 0D24                          __ptext19 0EC8  
                        __ptext36 0C80                          __ptext28 0F92  
                        __ptext37 0A06                          __ptext38 0EEC  
                        __ptext39 0D6E                          _fileSize 0092  
                      _GGA_Buffer 0100                    _timeout_tarefa 0052  
      __end_of_inicializa_tarefas 0F30          i2write_timer_zero@timer0 0001  
         i2_escreve_frase_ram_lcd 0C80                          _init_lcd 06E6  
                   __size_of_main 0036                     __size_of_itoa 0042  
                   __size_of_utoa 00A4               _endereco_cursor_lcd 0A78  
              __end_of_init_ports 0F7C   __end_ofi2_escreve_caractere_lcd 0A78  
     __size_of_posicao_cursor_lcd 007E                          int$flags 005F  
         posicao_cursor_lcd@linha 00B4          __size_of_tratamento_uart 010C  
        leitura_continua_adc@cont 00BE           __end_of_inicializa_shrc 1018  
         __end_of_inicializa_uart 0EEC             __CFG_CPUDIV$OSC1_PLL2 000000  
            i2_posicao_cursor_lcd 0AE8              ?_endereco_cursor_lcd 0001  
                      _INTCONbits 000FF2                  leitura_adc@canal 00B6  
                        itoa@base 0015         __size_of_envia_dados_shrc 004A  
               _config_timer_dois 0FFC                      _tempo_backup 0096  
               _config_timer_zero 0F30                          intlevel2 0000  
              ?_config_timer_dois 0001          mensagem_inicial@msg_dois 00C9  
              ?_config_timer_zero 0001                      _tempo_tarefa 003E  
    envia_dados_shrc@data_to_shrc 00B1                  ___lwmod@dividend 0001  
             ??_config_timer_dois 00B0                        _OSCCONbits 000FD3  
             ??_config_timer_zero 00B4                        _RCM_Buffer 0150  
                _recebe_dado_uart 0FDC             ?i2_posicao_cursor_lcd 0004  
                        utoa@base 000C             ??_endereco_cursor_lcd 00B2  
        ??_leitura_chaves_sistema 00B0                   ___lwmod@divisor 0003  
                 ___lwmod@counter 0005         __end_of_config_timer_dois 1008  
                    ___aldiv@sign 00B9         __end_of_config_timer_zero 0F4C  
     __size_ofi2_write_timer_zero 0012                       _SSPCON1bits 000FC6  
          escreve_cmd_lcd@comando 00B2         ??i2_escreve_frase_ram_lcd 0006  
   __end_ofmensagem_inicial@F4022 6194     __end_ofmensagem_inicial@F4024 6183  
        __end_of_ativa_latch_shrc 0FA6  
