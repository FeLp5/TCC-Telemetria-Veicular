

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Mar 02 16:32:37 2022

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93  0000                     
    94                           ; Version 1.41
    95                           ; Generated 25/01/2017 GMT
    96                           ; 
    97                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F4550 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128  0000                     
   129                           	psect	idataBANK1
   130  004F8E                     __pidataBANK1:
   131                           	opt stack 0
   132                           
   133                           ;initializer for _fileName
   134  004F8E  63                 	db	99
   135  004F8F  68                 	db	104
   136  004F90  65                 	db	101
   137  004F91  63                 	db	99
   138  004F92  6B                 	db	107
   139  004F93  2E                 	db	46
   140  004F94  74                 	db	116
   141  004F95  78                 	db	120
   142  004F96  74                 	db	116
   143  004F97  00                 	db	0
   144  004F98  00                 	db	0
   145  004F99  00                 	db	0
   146  004F9A  00                 	db	0
   147  004F9B  00                 	db	0
   148  004F9C  00                 	db	0
   149                           
   150                           ;initializer for escreve_inteiro_uart@F3952
   151  004F9D  30                 	db	48
   152  004F9E  30                 	db	48
   153  004F9F  30                 	db	48
   154  004FA0  30                 	db	48
   155  004FA1  30                 	db	48
   156  004FA2  30                 	db	48
   157  004FA3  00                 	db	0
   158                           
   159                           ;initializer for escreve_inteiro_lcd@F3962
   160  004FA4  30                 	db	48
   161  004FA5  30                 	db	48
   162  004FA6  30                 	db	48
   163  004FA7  30                 	db	48
   164  004FA8  30                 	db	48
   165  004FA9  30                 	db	48
   166  004FAA  00                 	db	0
   167                           
   168                           	psect	mediumconst
   169  006092                     __pmediumconst:
   170                           	opt stack 0
   171  006092  00                 	db	0
   172  006093                     _dpowers:
   173                           	opt stack 0
   174  006093  0001               	dw	1
   175  006095  0000               	dw	0
   176  006097  000A               	dw	10
   177  006099  0000               	dw	0
   178  00609B  0064               	dw	100
   179  00609D  0000               	dw	0
   180  00609F  03E8               	dw	1000
   181  0060A1  0000               	dw	0
   182  0060A3  2710               	dw	10000
   183  0060A5  0000               	dw	0
   184  0060A7  86A0               	dw	34464
   185  0060A9  0001               	dw	1
   186  0060AB  4240               	dw	16960
   187  0060AD  000F               	dw	15
   188  0060AF  9680               	dw	38528
   189  0060B1  0098               	dw	152
   190  0060B3  E100               	dw	57600
   191  0060B5  05F5               	dw	1525
   192  0060B7  CA00               	dw	51712
   193  0060B9  3B9A               	dw	15258
   194  0060BB                     __end_of_dpowers:
   195                           	opt stack 0
   196  0060BB                     __powers_:
   197                           	opt stack 0
   198  0060BB  00                 	db	0
   199  0060BC  80                 	db	128
   200  0060BD  3F                 	db	63
   201  0060BE  00                 	db	0
   202  0060BF  20                 	db	32
   203  0060C0  41                 	db	65
   204  0060C1  00                 	db	0
   205  0060C2  C8                 	db	200
   206  0060C3  42                 	db	66
   207  0060C4  00                 	db	0
   208  0060C5  7A                 	db	122
   209  0060C6  44                 	db	68
   210  0060C7  40                 	db	64
   211  0060C8  1C                 	db	28
   212  0060C9  46                 	db	70
   213  0060CA  50                 	db	80
   214  0060CB  C3                 	db	195
   215  0060CC  47                 	db	71
   216  0060CD  24                 	db	36
   217  0060CE  74                 	db	116
   218  0060CF  49                 	db	73
   219  0060D0  97                 	db	151
   220  0060D1  18                 	db	24
   221  0060D2  4B                 	db	75
   222  0060D3  BC                 	db	188
   223  0060D4  BE                 	db	190
   224  0060D5  4C                 	db	76
   225  0060D6  6B                 	db	107
   226  0060D7  6E                 	db	110
   227  0060D8  4E                 	db	78
   228  0060D9  03                 	db	3
   229  0060DA  15                 	db	21
   230  0060DB  50                 	db	80
   231  0060DC  79                 	db	121
   232  0060DD  AD                 	db	173
   233  0060DE  60                 	db	96
   234  0060DF  F3                 	db	243
   235  0060E0  49                 	db	73
   236  0060E1  71                 	db	113
   237  0060E2                     __end_of__powers_:
   238                           	opt stack 0
   239  0060E2                     __npowers_:
   240                           	opt stack 0
   241  0060E2  00                 	db	0
   242  0060E3  80                 	db	128
   243  0060E4  3F                 	db	63
   244  0060E5  CD                 	db	205
   245  0060E6  CC                 	db	204
   246  0060E7  3D                 	db	61
   247  0060E8  D7                 	db	215
   248  0060E9  23                 	db	35
   249  0060EA  3C                 	db	60
   250  0060EB  12                 	db	18
   251  0060EC  83                 	db	131
   252  0060ED  3A                 	db	58
   253  0060EE  B7                 	db	183
   254  0060EF  D1                 	db	209
   255  0060F0  38                 	db	56
   256  0060F1  C6                 	db	198
   257  0060F2  27                 	db	39
   258  0060F3  37                 	db	55
   259  0060F4  38                 	db	56
   260  0060F5  86                 	db	134
   261  0060F6  35                 	db	53
   262  0060F7  C0                 	db	192
   263  0060F8  D6                 	db	214
   264  0060F9  33                 	db	51
   265  0060FA  CC                 	db	204
   266  0060FB  2B                 	db	43
   267  0060FC  32                 	db	50
   268  0060FD  70                 	db	112
   269  0060FE  89                 	db	137
   270  0060FF  30                 	db	48
   271  006100  E7                 	db	231
   272  006101  DB                 	db	219
   273  006102  2E                 	db	46
   274  006103  E5                 	db	229
   275  006104  3C                 	db	60
   276  006105  1E                 	db	30
   277  006106  42                 	db	66
   278  006107  A2                 	db	162
   279  006108  0D                 	db	13
   280  006109                     __end_of__npowers_:
   281                           	opt stack 0
   282  006109                     mensagem_inicial@F4101:
   283                           	opt stack 0
   284  006109  20                 	db	32
   285  00610A  31                 	db	49
   286  00610B  38                 	db	56
   287  00610C  2F                 	db	47
   288  00610D  30                 	db	48
   289  00610E  31                 	db	49
   290  00610F  2F                 	db	47
   291  006110  32                 	db	50
   292  006111  30                 	db	48
   293  006112  32                 	db	50
   294  006113  32                 	db	50
   295  006114  20                 	db	32
   296  006115  20                 	db	32
   297  006116  20                 	db	32
   298  006117  00                 	db	0
   299  006118  00                 	db	0
   300  006119  00                 	db	0
   301  00611A                     __end_ofmensagem_inicial@F4101:
   302                           	opt stack 0
   303  00611A                     mensagem_inicial@F4099:
   304                           	opt stack 0
   305  00611A  53                 	db	83
   306  00611B  44                 	db	68
   307  00611C  43                 	db	67
   308  00611D  61                 	db	97
   309  00611E  72                 	db	114
   310  00611F  64                 	db	100
   311  006120  20                 	db	32
   312  006121  49                 	db	73
   313  006122  6E                 	db	110
   314  006123  69                 	db	105
   315  006124  74                 	db	116
   316  006125  20                 	db	32
   317  006126  20                 	db	32
   318  006127  20                 	db	32
   319  006128  00                 	db	0
   320  006129  00                 	db	0
   321  00612A  00                 	db	0
   322  00612B                     __end_ofmensagem_inicial@F4099:
   323                           	opt stack 0
   324  0000                     _ADRESL	set	4035
   325  0000                     _ADRESH	set	4036
   326  0000                     _ADCON0	set	4034
   327  0000                     _ADCON0bits	set	4034
   328  0000                     _ADCON2bits	set	4032
   329  0000                     _ADCON1bits	set	4033
   330  0000                     _ADCON1	set	4033
   331  0000                     _PCL	set	4089
   332  0000                     _PCLATH	set	4090
   333  0000                     _PIE1bits	set	3997
   334  0000                     _RCSTA	set	4011
   335  0000                     _TXSTA	set	4012
   336  0000                     _RCREG	set	4014
   337  0000                     _RCSTAbits	set	4011
   338  0000                     _TXREG	set	4013
   339  0000                     _PIR1bits	set	3998
   340  0000                     _TRISCbits	set	3988
   341  0000                     _SPBRG	set	4015
   342  0000                     _PR2	set	4043
   343  0000                     _TMR2	set	4044
   344  0000                     _T2CON	set	4042
   345  0000                     _OSCCONbits	set	4051
   346  0000                     _TRISE	set	3990
   347  0000                     _TRISC	set	3988
   348  0000                     _TRISA	set	3986
   349  0000                     _TRISD	set	3989
   350  0000                     _LATB	set	3978
   351  0000                     _TRISB	set	3987
   352  0000                     _T0CONbits	set	4053
   353  0000                     _TMR0L	set	4054
   354  0000                     _TMR0H	set	4055
   355  0000                     _PIE1	set	3997
   356  0000                     _INTCON3	set	4080
   357  0000                     _INTCON2	set	4081
   358  0000                     _INTCON	set	4082
   359  0000                     _SPPCFG	set	3939
   360  0000                     _SPPCON	set	3941
   361  0000                     _T0CON	set	4053
   362  0000                     _PORTDbits	set	3971
   363  0000                     _TRISDbits	set	3989
   364  0000                     _PORTBbits	set	3969
   365  0000                     _INTCONbits	set	4082
   366  0000                     _LATBbits	set	3978
   367  0000                     _TRISBbits	set	3987
   368  0000                     _INT0IE	set	32660
   369  0000                     _INT0IF	set	32657
   370  0000                     _T0IF	set	32658
   371  0000                     _TMR0IF	set	32658
   372  0000                     _RCIF	set	31989
   373  0000                     _TRMT	set	32097
   374  0000                     _TXEN	set	32101
   375  0000                     _CREN	set	32092
   376  0000                     _SPEN	set	32095
   377  0000                     _SYNC	set	32100
   378  0000                     _BRGH	set	32098
   379  0000                     _TMR2IF	set	31985
   380  00612B                     STR_23:
   381  00612B  20                 	db	32
   382  00612C  20                 	db	32
   383  00612D  20                 	db	32
   384  00612E  20                 	db	32
   385  00612F  20                 	db	32
   386  006130  20                 	db	32
   387  006131  20                 	db	32
   388  006132  20                 	db	32
   389  006133  20                 	db	32
   390  006134  20                 	db	32
   391  006135  20                 	db	32
   392  006136  20                 	db	32
   393  006137  20                 	db	32
   394  006138  20                 	db	32
   395  006139  20                 	db	32
   396  00613A  20                 	db	32
   397  00613B  20                 	db	32
   398  00613C  20                 	db	32
   399  00613D  00                 	db	0
   400  00613E                     STR_22:
   401  00613E  20                 	db	32
   402  00613F  66                 	db	102	;'f'
   403  006140  6D                 	db	109	;'m'
   404  006141  74                 	db	116	;'t'
   405  006142  31                 	db	49	;'1'
   406  006143  20                 	db	32
   407  006144  20                 	db	32
   408  006145  20                 	db	32
   409  006146  20                 	db	32
   410  006147  20                 	db	32
   411  006148  20                 	db	32
   412  006149  20                 	db	32
   413  00614A  20                 	db	32
   414  00614B  20                 	db	32
   415  00614C  20                 	db	32
   416  00614D  20                 	db	32
   417  00614E  20                 	db	32
   418  00614F  20                 	db	32
   419  006150  00                 	db	0
   420  006151                     STR_24:
   421  006151  20                 	db	32
   422  006152  66                 	db	102	;'f'
   423  006153  6D                 	db	109	;'m'
   424  006154  74                 	db	116	;'t'
   425  006155  32                 	db	50	;'2'
   426  006156  20                 	db	32
   427  006157  20                 	db	32
   428  006158  20                 	db	32
   429  006159  20                 	db	32
   430  00615A  20                 	db	32
   431  00615B  20                 	db	32
   432  00615C  20                 	db	32
   433  00615D  20                 	db	32
   434  00615E  20                 	db	32
   435  00615F  20                 	db	32
   436  006160  20                 	db	32
   437  006161  20                 	db	32
   438  006162  20                 	db	32
   439  006163  00                 	db	0
   440  006164                     STR_19:
   441  006164  52                 	db	82	;'R'
   442  006165  65                 	db	101	;'e'
   443  006166  63                 	db	99	;'c'
   444  006167  2E                 	db	46
   445  006168  20                 	db	32
   446  006169  73                 	db	115	;'s'
   447  00616A  69                 	db	105	;'i'
   448  00616B  67                 	db	103	;'g'
   449  00616C  2E                 	db	46
   450  00616D  20                 	db	32
   451  00616E  20                 	db	32
   452  00616F  20                 	db	32
   453  006170  20                 	db	32
   454  006171  20                 	db	32
   455  006172  20                 	db	32
   456  006173  20                 	db	32
   457  006174  20                 	db	32
   458  006175  20                 	db	32
   459  006176  00                 	db	0
   460  006177                     STR_16:
   461  006177  62                 	db	98	;'b'
   462  006178  75                 	db	117	;'u'
   463  006179  66                 	db	102	;'f'
   464  00617A  66                 	db	102	;'f'
   465  00617B  65                 	db	101	;'e'
   466  00617C  72                 	db	114	;'r'
   467  00617D  20                 	db	32
   468  00617E  30                 	db	48	;'0'
   469  00617F  78                 	db	120	;'x'
   470  006180  46                 	db	70	;'F'
   471  006181  46                 	db	70	;'F'
   472  006182  20                 	db	32
   473  006183  20                 	db	32
   474  006184  20                 	db	32
   475  006185  20                 	db	32
   476  006186  20                 	db	32
   477  006187  20                 	db	32
   478  006188  20                 	db	32
   479  006189  00                 	db	0
   480  00618A                     STR_30:
   481  00618A  41                 	db	65	;'A'
   482  00618B  72                 	db	114	;'r'
   483  00618C  71                 	db	113	;'q'
   484  00618D  75                 	db	117	;'u'
   485  00618E  69                 	db	105	;'i'
   486  00618F  76                 	db	118	;'v'
   487  006190  6F                 	db	111	;'o'
   488  006191  20                 	db	32
   489  006192  72                 	db	114	;'r'
   490  006193  65                 	db	101	;'e'
   491  006194  6E                 	db	110	;'n'
   492  006195  6F                 	db	111	;'o'
   493  006196  6D                 	db	109	;'m'
   494  006197  65                 	db	101	;'e'
   495  006198  61                 	db	97	;'a'
   496  006199  64                 	db	100	;'d'
   497  00619A  6F                 	db	111	;'o'
   498  00619B  00                 	db	0
   499  00619C                     STR_13:
   500  00619C  45                 	db	69	;'E'
   501  00619D  72                 	db	114	;'r'
   502  00619E  72                 	db	114	;'r'
   503  00619F  6F                 	db	111	;'o'
   504  0061A0  20                 	db	32
   505  0061A1  42                 	db	66	;'B'
   506  0061A2  35                 	db	53	;'5'
   507  0061A3  31                 	db	49	;'1'
   508  0061A4  32                 	db	50	;'2'
   509  0061A5  20                 	db	32
   510  0061A6  20                 	db	32
   511  0061A7  20                 	db	32
   512  0061A8  20                 	db	32
   513  0061A9  20                 	db	32
   514  0061AA  20                 	db	32
   515  0061AB  20                 	db	32
   516  0061AC  00                 	db	0
   517  0061AD                     STR_15:
   518  0061AD  41                 	db	65	;'A'
   519  0061AE  67                 	db	103	;'g'
   520  0061AF  75                 	db	117	;'u'
   521  0061B0  61                 	db	97	;'a'
   522  0061B1  72                 	db	114	;'r'
   523  0061B2  64                 	db	100	;'d'
   524  0061B3  20                 	db	32
   525  0061B4  30                 	db	48	;'0'
   526  0061B5  58                 	db	88	;'X'
   527  0061B6  46                 	db	70	;'F'
   528  0061B7  45                 	db	69	;'E'
   529  0061B8  20                 	db	32
   530  0061B9  20                 	db	32
   531  0061BA  20                 	db	32
   532  0061BB  20                 	db	32
   533  0061BC  20                 	db	32
   534  0061BD  00                 	db	0
   535  0061BE                     STR_12:
   536  0061BE  45                 	db	69	;'E'
   537  0061BF  72                 	db	114	;'r'
   538  0061C0  72                 	db	114	;'r'
   539  0061C1  6F                 	db	111	;'o'
   540  0061C2  20                 	db	32
   541  0061C3  49                 	db	73	;'I'
   542  0061C4  64                 	db	100	;'d'
   543  0061C5  6C                 	db	108	;'l'
   544  0061C6  65                 	db	101	;'e'
   545  0061C7  20                 	db	32
   546  0061C8  53                 	db	83	;'S'
   547  0061C9  74                 	db	116	;'t'
   548  0061CA  20                 	db	32
   549  0061CB  20                 	db	32
   550  0061CC  20                 	db	32
   551  0061CD  20                 	db	32
   552  0061CE  00                 	db	0
   553  0061CF                     STR_26:
   554  0061CF  53                 	db	83	;'S'
   555  0061D0  69                 	db	105	;'i'
   556  0061D1  73                 	db	115	;'s'
   557  0061D2  74                 	db	116	;'t'
   558  0061D3  65                 	db	101	;'e'
   559  0061D4  6D                 	db	109	;'m'
   560  0061D5  61                 	db	97	;'a'
   561  0061D6  20                 	db	32
   562  0061D7  4D                 	db	77	;'M'
   563  0061D8  6F                 	db	111	;'o'
   564  0061D9  6E                 	db	110	;'n'
   565  0061DA  74                 	db	116	;'t'
   566  0061DB  61                 	db	97	;'a'
   567  0061DC  64                 	db	100	;'d'
   568  0061DD  6F                 	db	111	;'o'
   569  0061DE  00                 	db	0
   570  0061DF                     STR_27:
   571  0061DF  43                 	db	67	;'C'
   572  0061E0  72                 	db	114	;'r'
   573  0061E1  69                 	db	105	;'i'
   574  0061E2  61                 	db	97	;'a'
   575  0061E3  6E                 	db	110	;'n'
   576  0061E4  64                 	db	100	;'d'
   577  0061E5  6F                 	db	111	;'o'
   578  0061E6  20                 	db	32
   579  0061E7  61                 	db	97	;'a'
   580  0061E8  72                 	db	114	;'r'
   581  0061E9  71                 	db	113	;'q'
   582  0061EA  75                 	db	117	;'u'
   583  0061EB  69                 	db	105	;'i'
   584  0061EC  76                 	db	118	;'v'
   585  0061ED  6F                 	db	111	;'o'
   586  0061EE  00                 	db	0
   587  0061EF                     STR_14:
   588  0061EF  62                 	db	98	;'b'
   589  0061F0  75                 	db	117	;'u'
   590  0061F1  66                 	db	102	;'f'
   591  0061F2  66                 	db	102	;'f'
   592  0061F3  65                 	db	101	;'e'
   593  0061F4  72                 	db	114	;'r'
   594  0061F5  20                 	db	32
   595  0061F6  6C                 	db	108	;'l'
   596  0061F7  65                 	db	101	;'e'
   597  0061F8  69                 	db	105	;'i'
   598  0061F9  74                 	db	116	;'t'
   599  0061FA  2E                 	db	46
   600  0061FB  20                 	db	32
   601  0061FC  20                 	db	32
   602  0061FD  20                 	db	32
   603  0061FE  00                 	db	0
   604  0061FF                     STR_9:
   605  0061FF  49                 	db	73	;'I'
   606  006200  6E                 	db	110	;'n'
   607  006201  73                 	db	115	;'s'
   608  006202  69                 	db	105	;'i'
   609  006203  72                 	db	114	;'r'
   610  006204  61                 	db	97	;'a'
   611  006205  20                 	db	32
   612  006206  6F                 	db	111	;'o'
   613  006207  20                 	db	32
   614  006208  43                 	db	67	;'C'
   615  006209  61                 	db	97	;'a'
   616  00620A  72                 	db	114	;'r'
   617  00620B  74                 	db	116	;'t'
   618  00620C  61                 	db	97	;'a'
   619  00620D  6F                 	db	111	;'o'
   620  00620E  00                 	db	0
   621  00620F                     STR_17:
   622  00620F  00                 	db	0
   623  006210  20                 	db	32
   624  006211  2D                 	db	45
   625  006212  3E                 	db	62	;'>'
   626  006213  20                 	db	32
   627  006214  20                 	db	32
   628  006215  20                 	db	32
   629  006216  20                 	db	32
   630  006217  20                 	db	32
   631  006218  20                 	db	32
   632  006219  20                 	db	32
   633  00621A  20                 	db	32
   634  00621B  20                 	db	32
   635  00621C  00                 	db	0
   636  00621D                     STR_18:
   637  00621D  4C                 	db	76	;'L'
   638  00621E  6F                 	db	111	;'o'
   639  00621F  61                 	db	97	;'a'
   640  006220  64                 	db	100	;'d'
   641  006221  20                 	db	32
   642  006222  42                 	db	66	;'B'
   643  006223  6F                 	db	111	;'o'
   644  006224  6F                 	db	111	;'o'
   645  006225  74                 	db	116	;'t'
   646  006226  20                 	db	32
   647  006227  20                 	db	32
   648  006228  00                 	db	0
   649  006229                     STR_8:
   650  006229  53                 	db	83	;'S'
   651  00622A  65                 	db	101	;'e'
   652  00622B  6D                 	db	109	;'m'
   653  00622C  20                 	db	32
   654  00622D  43                 	db	67	;'C'
   655  00622E  61                 	db	97	;'a'
   656  00622F  72                 	db	114	;'r'
   657  006230  74                 	db	116	;'t'
   658  006231  61                 	db	97	;'a'
   659  006232  6F                 	db	111	;'o'
   660  006233  00                 	db	0
   661  006234                     STR_29:
   662  006234  52                 	db	82	;'R'
   663  006235  65                 	db	101	;'e'
   664  006236  73                 	db	115	;'s'
   665  006237  75                 	db	117	;'u'
   666  006238  6C                 	db	108	;'l'
   667  006239  74                 	db	116	;'t'
   668  00623A  61                 	db	97	;'a'
   669  00623B  64                 	db	100	;'d'
   670  00623C  6F                 	db	111	;'o'
   671  00623D  00                 	db	0
   672  00623E                     STR_28:
   673  00623E  74                 	db	116	;'t'
   674  00623F  65                 	db	101	;'e'
   675  006240  73                 	db	115	;'s'
   676  006241  74                 	db	116	;'t'
   677  006242  65                 	db	101	;'e'
   678  006243  2E                 	db	46
   679  006244  74                 	db	116	;'t'
   680  006245  78                 	db	120	;'x'
   681  006246  74                 	db	116	;'t'
   682  006247  00                 	db	0
   683  006248  25                 	db	37
   684  006249  64                 	db	100	;'d'
   685  00624A  3A                 	db	58	;':'
   686  00624B  25                 	db	37
   687  00624C  64                 	db	100	;'d'
   688  00624D  3A                 	db	58	;':'
   689  00624E  25                 	db	37
   690  00624F  64                 	db	100	;'d'
   691  006250  00                 	db	0
   692  006251                     STR_21:
   693  006251  46                 	db	70	;'F'
   694  006252  41                 	db	65	;'A'
   695  006253  54                 	db	84	;'T'
   696  006254  33                 	db	51	;'3'
   697  006255  32                 	db	50	;'2'
   698  006256  00                 	db	0
   699  006257  48                 	db	72	;'H'
   700  006258  6F                 	db	111	;'o'
   701  006259  72                 	db	114	;'r'
   702  00625A  61                 	db	97	;'a'
   703  00625B  3A                 	db	58	;':'
   704  00625C  00                 	db	0
   705  00625D  44                 	db	68	;'D'
   706  00625E  61                 	db	97	;'a'
   707  00625F  74                 	db	116	;'t'
   708  006260  61                 	db	97	;'a'
   709  006261  3A                 	db	58	;':'
   710  006262  00                 	db	0
   711  006263                     STR_3:
   712  006263  25                 	db	37
   713  006264  2E                 	db	46
   714  006265  30                 	db	48	;'0'
   715  006266  37                 	db	55	;'7'
   716  006267  66                 	db	102	;'f'
   717  006268  00                 	db	0
   718  006269                     STR_31:
   719  006269  45                 	db	69	;'E'
   720  00626A  52                 	db	82	;'R'
   721  00626B  52                 	db	82	;'R'
   722  00626C  4F                 	db	79	;'O'
   723  00626D  00                 	db	0
   724  00626E  4C                 	db	76	;'L'
   725  00626F  6F                 	db	111	;'o'
   726  006270  6E                 	db	110	;'n'
   727  006271  3A                 	db	58	;':'
   728  006272  00                 	db	0
   729  006273  4C                 	db	76	;'L'
   730  006274  61                 	db	97	;'a'
   731  006275  74                 	db	116	;'t'
   732  006276  3A                 	db	58	;':'
   733  006277  00                 	db	0
   734  006278                     STR_20:
   735  006278  46                 	db	70	;'F'
   736  006279  41                 	db	65	;'A'
   737  00627A  54                 	db	84	;'T'
   738  00627B  00                 	db	0
   739  00627C  0D                 	db	13
   740  00627D  0A                 	db	10
   741  00627E  00                 	db	0
   742  0000                     
   743                           ; #config settings
   744  00627F  00                 	db	0	; dummy byte at the end
   745  0000                     
   746                           	psect	cinit
   747  00472E                     __pcinit:
   748                           	opt stack 0
   749  00472E                     start_initialization:
   750                           	opt stack 0
   751  00472E                     __initialization:
   752                           	opt stack 0
   753                           
   754                           ; Initialize objects allocated to BANK1 (29 bytes)
   755                           ; load TBLPTR registers with __pidataBANK1
   756  00472E  0E8E               	movlw	low __pidataBANK1
   757  004730  6EF6               	movwf	tblptrl,c
   758  004732  0E4F               	movlw	high __pidataBANK1
   759  004734  6EF7               	movwf	tblptrh,c
   760  004736  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   761  004738  6EF8               	movwf	tblptru,c
   762  00473A  EE01  F0CC         	lfsr	0,__pdataBANK1
   763  00473E  EE10 F01D          	lfsr	1,29
   764  004742                     copy_data0:
   765  004742  0009               	tblrd		*+
   766  004744  CFF5 FFEE          	movff	tablat,postinc0
   767  004748  50E5               	movf	postdec1,w,c
   768  00474A  50E1               	movf	fsr1l,w,c
   769  00474C  E1FA               	bnz	copy_data0
   770                           
   771                           ; Clear objects allocated to BIGRAM (552 bytes)
   772  00474E  EE03  F030         	lfsr	0,__pbssBIGRAM
   773  004752  EE12 F028          	lfsr	1,552
   774  004756                     clear_0:
   775  004756  6AEE               	clrf	postinc0,c
   776  004758  50E5               	movf	postdec1,w,c
   777  00475A  50E1               	movf	fsr1l,w,c
   778  00475C  E1FC               	bnz	clear_0
   779  00475E  50E2               	movf	fsr1h,w,c
   780  004760  E1FA               	bnz	clear_0
   781                           
   782                           ; Clear objects allocated to BANK3 (48 bytes)
   783  004762  EE03  F000         	lfsr	0,__pbssBANK3
   784  004766  0E30               	movlw	48
   785  004768                     clear_1:
   786  004768  6AEE               	clrf	postinc0,c
   787  00476A  06E8               	decf	wreg,f,c
   788  00476C  E1FD               	bnz	clear_1
   789                           
   790                           ; Clear objects allocated to BANK2 (222 bytes)
   791  00476E  EE02  F000         	lfsr	0,__pbssBANK2
   792  004772  0EDE               	movlw	222
   793  004774                     clear_2:
   794  004774  6AEE               	clrf	postinc0,c
   795  004776  06E8               	decf	wreg,f,c
   796  004778  E1FD               	bnz	clear_2
   797                           
   798                           ; Clear objects allocated to BANK1 (115 bytes)
   799  00477A  EE01  F000         	lfsr	0,__pbssBANK1
   800  00477E  0E73               	movlw	115
   801  004780                     clear_3:
   802  004780  6AEE               	clrf	postinc0,c
   803  004782  06E8               	decf	wreg,f,c
   804  004784  E1FD               	bnz	clear_3
   805                           
   806                           ; Clear objects allocated to BANK0 (7 bytes)
   807  004786  EE00  F0F9         	lfsr	0,__pbssBANK0
   808  00478A  0E07               	movlw	7
   809  00478C                     clear_4:
   810  00478C  6AEE               	clrf	postinc0,c
   811  00478E  06E8               	decf	wreg,f,c
   812  004790  E1FD               	bnz	clear_4
   813                           
   814                           ; Clear objects allocated to COMRAM (20 bytes)
   815  004792  EE00  F036         	lfsr	0,__pbssCOMRAM
   816  004796  0E14               	movlw	20
   817  004798                     clear_5:
   818  004798  6AEE               	clrf	postinc0,c
   819  00479A  06E8               	decf	wreg,f,c
   820  00479C  E1FD               	bnz	clear_5
   821  00479E                     end_of_initialization:
   822                           	opt stack 0
   823  00479E                     __end_of__initialization:
   824                           	opt stack 0
   825  00479E  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   826  0047A0  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   827  0047A2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   828  0047A4  6EF8               	movwf	tblptru,c
   829  0047A6  0100               	movlb	0
   830  0047A8  EF7A  F027         	goto	_main	;jump to C main() function
   831                           tblptru	equ	0xFF8
   832                           tblptrh	equ	0xFF7
   833                           tblptrl	equ	0xFF6
   834                           tablat	equ	0xFF5
   835                           postinc0	equ	0xFEE
   836                           wreg	equ	0xFE8
   837                           postdec1	equ	0xFE5
   838                           fsr1h	equ	0xFE2
   839                           fsr1l	equ	0xFE1
   840                           
   841                           	psect	bssCOMRAM
   842  000036                     __pbssCOMRAM:
   843                           	opt stack 0
   844  000036                     _gga_code:
   845                           	opt stack 0
   846  000036                     	ds	3
   847  000039                     _rmc_index:
   848                           	opt stack 0
   849  000039                     	ds	2
   850  00003B                     _gga_index:
   851                           	opt stack 0
   852  00003B                     	ds	2
   853  00003D                     _s:
   854                           	opt stack 0
   855  00003D                     	ds	1
   856  00003E                     _Result:
   857                           	opt stack 0
   858  00003E                     	ds	1
   859  00003F                     _tarefa_em_execucao:
   860                           	opt stack 0
   861  00003F                     	ds	1
   862  000040                     _sinaliza_int_timer:
   863                           	opt stack 0
   864  000040                     	ds	1
   865  000041                     _data_uart_recebe:
   866                           	opt stack 0
   867  000041                     	ds	1
   868  000042                     timer_dois@flag:
   869                           	opt stack 0
   870  000042                     	ds	1
   871  000043                     _dado:
   872                           	opt stack 0
   873  000043                     	ds	1
   874  000044                     _is_it_rmc_string:
   875                           	opt stack 0
   876  000044                     	ds	1
   877  000045                     _is_it_gga_string:
   878                           	opt stack 0
   879  000045                     	ds	1
   880  000046                     _comma_counter_rmc:
   881                           	opt stack 0
   882  000046                     	ds	1
   883  000047                     _comma_counter_gga:
   884                           	opt stack 0
   885  000047                     	ds	1
   886  000048                     _E_W:
   887                           	opt stack 0
   888  000048                     	ds	1
   889  000049                     _n_s:
   890                           	opt stack 0
   891  000049                     	ds	1
   892                           tblptru	equ	0xFF8
   893                           tblptrh	equ	0xFF7
   894                           tblptrl	equ	0xFF6
   895                           tablat	equ	0xFF5
   896                           postinc0	equ	0xFEE
   897                           wreg	equ	0xFE8
   898                           postdec1	equ	0xFE5
   899                           fsr1h	equ	0xFE2
   900                           fsr1l	equ	0xFE1
   901                           
   902                           	psect	bssBANK0
   903  0000F9                     __pbssBANK0:
   904                           	opt stack 0
   905  0000F9                     _rmc_code:
   906                           	opt stack 0
   907  0000F9                     	ds	3
   908  0000FC                     _FatFs:
   909                           	opt stack 0
   910  0000FC                     	ds	2
   911  0000FE                     _data_buff:
   912                           	opt stack 0
   913  0000FE                     	ds	2
   914                           tblptru	equ	0xFF8
   915                           tblptrh	equ	0xFF7
   916                           tblptrl	equ	0xFF6
   917                           tablat	equ	0xFF5
   918                           postinc0	equ	0xFEE
   919                           wreg	equ	0xFE8
   920                           postdec1	equ	0xFE5
   921                           fsr1h	equ	0xFE2
   922                           fsr1l	equ	0xFE1
   923                           
   924                           	psect	bssBANK1
   925  000100                     __pbssBANK1:
   926                           	opt stack 0
   927  000100                     _valor_leitura_adc:
   928                           	opt stack 0
   929  000100                     	ds	38
   930  000126                     _gga_pointers:
   931                           	opt stack 0
   932  000126                     	ds	20
   933  00013A                     _rmc_pointers:
   934                           	opt stack 0
   935  00013A                     	ds	12
   936  000146                     _fileSize:
   937                           	opt stack 0
   938  000146                     	ds	4
   939  00014A                     _tempo_tarefa:
   940                           	opt stack 0
   941  00014A                     	ds	4
   942  00014E                     _tempo_backup:
   943                           	opt stack 0
   944  00014E                     	ds	4
   945  000152                     _p_tarefas:
   946                           	opt stack 0
   947  000152                     	ds	4
   948  000156                     _rd:
   949                           	opt stack 0
   950  000156                     	ds	2
   951  000158                     _timeout_tarefa:
   952                           	opt stack 0
   953  000158                     	ds	2
   954  00015A                     _fsid:
   955                           	opt stack 0
   956  00015A                     	ds	2
   957  00015C                     SDCard@init:
   958                           	opt stack 0
   959  00015C                     	ds	1
   960  00015D                     _data_buffer:
   961                           	opt stack 0
   962  00015D                     	ds	15
   963  00016C                     _dado_buffer:
   964                           	opt stack 0
   965  00016C                     	ds	7
   966                           tblptru	equ	0xFF8
   967                           tblptrh	equ	0xFF7
   968                           tblptrl	equ	0xFF6
   969                           tablat	equ	0xFF5
   970                           postinc0	equ	0xFEE
   971                           wreg	equ	0xFE8
   972                           postdec1	equ	0xFE5
   973                           fsr1h	equ	0xFE2
   974                           fsr1l	equ	0xFE1
   975                           
   976                           	psect	dataBANK1
   977  0001CC                     __pdataBANK1:
   978                           	opt stack 0
   979  0001CC                     _fileName:
   980                           	opt stack 0
   981  0001CC                     	ds	15
   982  0001DB                     escreve_inteiro_uart@F3952:
   983                           	opt stack 0
   984  0001DB                     	ds	7
   985  0001E2                     escreve_inteiro_lcd@F3962:
   986                           	opt stack 0
   987  0001E2                     	ds	7
   988                           tblptru	equ	0xFF8
   989                           tblptrh	equ	0xFF7
   990                           tblptrl	equ	0xFF6
   991                           tablat	equ	0xFF5
   992                           postinc0	equ	0xFEE
   993                           wreg	equ	0xFE8
   994                           postdec1	equ	0xFE5
   995                           fsr1h	equ	0xFE2
   996                           fsr1l	equ	0xFE1
   997                           
   998                           	psect	bssBANK2
   999  000200                     __pbssBANK2:
  1000                           	opt stack 0
  1001  000200                     _gga_buffer:
  1002                           	opt stack 0
  1003  000200                     	ds	80
  1004  000250                     _rmc_buffer:
  1005                           	opt stack 0
  1006  000250                     	ds	70
  1007  000296                     _data_buffer_32:
  1008                           	opt stack 0
  1009  000296                     	ds	32
  1010  0002B6                     _txt:
  1011                           	opt stack 0
  1012  0002B6                     	ds	20
  1013  0002CA                     _buff:
  1014                           	opt stack 0
  1015  0002CA                     	ds	20
  1016                           tblptru	equ	0xFF8
  1017                           tblptrh	equ	0xFF7
  1018                           tblptrl	equ	0xFF6
  1019                           tablat	equ	0xFF5
  1020                           postinc0	equ	0xFEE
  1021                           wreg	equ	0xFE8
  1022                           postdec1	equ	0xFE5
  1023                           fsr1h	equ	0xFE2
  1024                           fsr1l	equ	0xFE1
  1025                           
  1026                           	psect	bssBANK3
  1027  000300                     __pbssBANK3:
  1028                           	opt stack 0
  1029  000300                     _folder:
  1030                           	opt stack 0
  1031  000300                     	ds	48
  1032                           tblptru	equ	0xFF8
  1033                           tblptrh	equ	0xFF7
  1034                           tblptrl	equ	0xFF6
  1035                           tablat	equ	0xFF5
  1036                           postinc0	equ	0xFEE
  1037                           wreg	equ	0xFE8
  1038                           postdec1	equ	0xFE5
  1039                           fsr1h	equ	0xFE2
  1040                           fsr1l	equ	0xFE1
  1041                           
  1042                           	psect	bssBIGRAM
  1043  000330                     __pbssBIGRAM:
  1044                           	opt stack 0
  1045  000330                     _fs:
  1046                           	opt stack 0
  1047  000330                     	ds	552
  1048                           tblptru	equ	0xFF8
  1049                           tblptrh	equ	0xFF7
  1050                           tblptrl	equ	0xFF6
  1051                           tablat	equ	0xFF5
  1052                           postinc0	equ	0xFEE
  1053                           wreg	equ	0xFE8
  1054                           postdec1	equ	0xFE5
  1055                           fsr1h	equ	0xFE2
  1056                           fsr1l	equ	0xFE1
  1057                           
  1058                           	psect	cstackBANK2
  1059  0002DE                     __pcstackBANK2:
  1060                           	opt stack 0
  1061  0002DE                     SDCard@FResult:
  1062                           	opt stack 0
  1063                           
  1064                           ; 1 bytes @ 0x0
  1065  0002DE                     	ds	1
  1066  0002DF                     SDCard@fil:
  1067                           	opt stack 0
  1068                           
  1069                           ; 32 bytes @ 0x1
  1070  0002DF                     	ds	32
  1071                           tblptru	equ	0xFF8
  1072                           tblptrh	equ	0xFF7
  1073                           tblptrl	equ	0xFF6
  1074                           tablat	equ	0xFF5
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           postdec1	equ	0xFE5
  1078                           fsr1h	equ	0xFE2
  1079                           fsr1l	equ	0xFE1
  1080                           
  1081                           	psect	cstackBANK1
  1082  000173                     __pcstackBANK1:
  1083                           	opt stack 0
  1084  000173                     _trace_path$1245:
  1085                           	opt stack 0
  1086  000173                     reserve_direntry@sector:
  1087                           	opt stack 0
  1088                           
  1089                           ; 4 bytes @ 0x0
  1090  000173                     	ds	2
  1091  000175                     _trace_path$1247:
  1092                           	opt stack 0
  1093                           
  1094                           ; 2 bytes @ 0x2
  1095  000175                     	ds	2
  1096  000177                     reserve_direntry@n:
  1097                           	opt stack 0
  1098  000177                     trace_path@fs:
  1099                           	opt stack 0
  1100                           
  1101                           ; 2 bytes @ 0x4
  1102  000177                     	ds	1
  1103  000178                     reserve_direntry@dptr:
  1104                           	opt stack 0
  1105                           
  1106                           ; 2 bytes @ 0x5
  1107  000178                     	ds	1
  1108  000179                     trace_path@ds:
  1109                           	opt stack 0
  1110                           
  1111                           ; 1 bytes @ 0x6
  1112  000179                     	ds	1
  1113  00017A                     reserve_direntry@c:
  1114                           	opt stack 0
  1115  00017A                     trace_path@clust:
  1116                           	opt stack 0
  1117                           
  1118                           ; 4 bytes @ 0x7
  1119  00017A                     	ds	1
  1120  00017B                     reserve_direntry@clust:
  1121                           	opt stack 0
  1122                           
  1123                           ; 4 bytes @ 0x8
  1124  00017B                     	ds	3
  1125  00017E                     trace_path@dptr:
  1126                           	opt stack 0
  1127                           
  1128                           ; 2 bytes @ 0xB
  1129  00017E                     	ds	1
  1130  00017F                     reserve_direntry@fs:
  1131                           	opt stack 0
  1132                           
  1133                           ; 2 bytes @ 0xC
  1134  00017F                     	ds	2
  1135  000181                     f_open@fp:
  1136                           	opt stack 0
  1137                           
  1138                           ; 2 bytes @ 0xE
  1139  000181                     	ds	2
  1140  000183                     f_open@path:
  1141                           	opt stack 0
  1142                           
  1143                           ; 2 bytes @ 0x10
  1144  000183                     	ds	2
  1145  000185                     f_open@mode:
  1146                           	opt stack 0
  1147                           
  1148                           ; 1 bytes @ 0x12
  1149  000185                     	ds	1
  1150  000186                     ??_f_open:
  1151                           
  1152                           ; 1 bytes @ 0x13
  1153  000186                     	ds	26
  1154  0001A0                     f_open@fn:
  1155                           	opt stack 0
  1156                           
  1157                           ; 12 bytes @ 0x2D
  1158  0001A0                     	ds	12
  1159  0001AC                     f_open@rs:
  1160                           	opt stack 0
  1161                           
  1162                           ; 4 bytes @ 0x39
  1163  0001AC                     	ds	4
  1164  0001B0                     f_open@dw:
  1165                           	opt stack 0
  1166                           
  1167                           ; 4 bytes @ 0x3D
  1168  0001B0                     	ds	4
  1169  0001B4                     f_open@res:
  1170                           	opt stack 0
  1171                           
  1172                           ; 1 bytes @ 0x41
  1173  0001B4                     	ds	1
  1174  0001B5                     f_open@dj:
  1175                           	opt stack 0
  1176                           
  1177                           ; 18 bytes @ 0x42
  1178  0001B5                     	ds	18
  1179  0001C7                     f_open@dir:
  1180                           	opt stack 0
  1181                           
  1182                           ; 2 bytes @ 0x54
  1183  0001C7                     	ds	2
  1184  0001C9                     
  1185                           ; 1 bytes @ 0x56
  1186  0001C9                     	ds	2
  1187  0001CB                     escalonador@cont:
  1188                           	opt stack 0
  1189                           
  1190                           ; 1 bytes @ 0x58
  1191  0001CB                     	ds	1
  1192                           tblptru	equ	0xFF8
  1193                           tblptrh	equ	0xFF7
  1194                           tblptrl	equ	0xFF6
  1195                           tablat	equ	0xFF5
  1196                           postinc0	equ	0xFEE
  1197                           wreg	equ	0xFE8
  1198                           postdec1	equ	0xFE5
  1199                           fsr1h	equ	0xFE2
  1200                           fsr1l	equ	0xFE1
  1201                           
  1202                           	psect	cstackBANK0
  1203  000060                     __pcstackBANK0:
  1204                           	opt stack 0
  1205  000060                     ??_get_fattime:
  1206  000060                     disk_write@buff:
  1207                           	opt stack 0
  1208  000060                     escreve_inteiro_lcd@texto:
  1209                           	opt stack 0
  1210  000060                     mensagem_inicial@msg_linha_um:
  1211                           	opt stack 0
  1212                           
  1213                           ; 17 bytes @ 0x0
  1214  000060                     	ds	2
  1215  000062                     disk_write@sector:
  1216                           	opt stack 0
  1217                           
  1218                           ; 4 bytes @ 0x2
  1219  000062                     	ds	4
  1220  000066                     disk_write@count:
  1221                           	opt stack 0
  1222                           
  1223                           ; 1 bytes @ 0x6
  1224  000066                     	ds	1
  1225  000067                     sdc_disk_initialize@i:
  1226                           	opt stack 0
  1227  000067                     sdc_disk_read@p_buff:
  1228                           	opt stack 0
  1229                           
  1230                           ; 2 bytes @ 0x7
  1231  000067                     	ds	2
  1232  000069                     sdc_disk_initialize@count_nosd:
  1233                           	opt stack 0
  1234  000069                     sdc_disk_read@sector:
  1235                           	opt stack 0
  1236                           
  1237                           ; 4 bytes @ 0x9
  1238  000069                     	ds	2
  1239  00006B                     sdc_disk_initialize@stat:
  1240                           	opt stack 0
  1241                           
  1242                           ; 1 bytes @ 0xB
  1243  00006B                     	ds	1
  1244  00006C                     sdc_disk_initialize@count:
  1245                           	opt stack 0
  1246                           
  1247                           ; 2 bytes @ 0xC
  1248  00006C                     	ds	1
  1249  00006D                     sdc_disk_read@count:
  1250                           	opt stack 0
  1251                           
  1252                           ; 1 bytes @ 0xD
  1253  00006D                     	ds	1
  1254  00006E                     sdc_disk_initialize@buff:
  1255                           	opt stack 0
  1256  00006E                     sdc_disk_read@ptr:
  1257                           	opt stack 0
  1258                           
  1259                           ; 1 bytes @ 0xE
  1260  00006E                     	ds	1
  1261  00006F                     sdc_disk_read@start_add:
  1262                           	opt stack 0
  1263                           
  1264                           ; 4 bytes @ 0xF
  1265  00006F                     	ds	2
  1266  000071                     mensagem_inicial@msg_dois:
  1267                           	opt stack 0
  1268                           
  1269                           ; 17 bytes @ 0x11
  1270  000071                     	ds	2
  1271  000073                     sdc_disk_read@offset:
  1272                           	opt stack 0
  1273                           
  1274                           ; 2 bytes @ 0x13
  1275  000073                     	ds	2
  1276  000075                     sdc_disk_read@length:
  1277                           	opt stack 0
  1278                           
  1279                           ; 2 bytes @ 0x15
  1280  000075                     	ds	2
  1281  000077                     sdc_disk_read@buff:
  1282                           	opt stack 0
  1283                           
  1284                           ; 1 bytes @ 0x17
  1285  000077                     	ds	1
  1286  000078                     disk_read@buff:
  1287                           	opt stack 0
  1288                           
  1289                           ; 2 bytes @ 0x18
  1290  000078                     	ds	2
  1291  00007A                     disk_read@sector:
  1292                           	opt stack 0
  1293                           
  1294                           ; 4 bytes @ 0x1A
  1295  00007A                     	ds	4
  1296  00007E                     disk_read@count:
  1297                           	opt stack 0
  1298                           
  1299                           ; 1 bytes @ 0x1E
  1300  00007E                     	ds	1
  1301  00007F                     disk_read@pdrv:
  1302                           	opt stack 0
  1303                           
  1304                           ; 1 bytes @ 0x1F
  1305  00007F                     	ds	1
  1306  000080                     disk_read@result:
  1307                           	opt stack 0
  1308                           
  1309                           ; 2 bytes @ 0x20
  1310  000080                     	ds	2
  1311  000082                     disk_read@res:
  1312                           	opt stack 0
  1313                           
  1314                           ; 1 bytes @ 0x22
  1315  000082                     	ds	1
  1316  000083                     move_window@sector:
  1317                           	opt stack 0
  1318  000083                     check_fs@sect:
  1319                           	opt stack 0
  1320                           
  1321                           ; 4 bytes @ 0x23
  1322  000083                     	ds	4
  1323  000087                     ??_move_window:
  1324  000087                     ??_check_fs:
  1325                           
  1326                           ; 1 bytes @ 0x27
  1327  000087                     	ds	4
  1328  00008B                     check_fs@temp:
  1329                           	opt stack 0
  1330                           
  1331                           ; 2 bytes @ 0x2B
  1332  00008B                     	ds	2
  1333  00008D                     check_fs@temp2:
  1334                           	opt stack 0
  1335                           
  1336                           ; 2 bytes @ 0x2D
  1337  00008D                     	ds	2
  1338  00008F                     check_fs@fs:
  1339                           	opt stack 0
  1340                           
  1341                           ; 2 bytes @ 0x2F
  1342  00008F                     	ds	2
  1343  000091                     auto_mount@path:
  1344                           	opt stack 0
  1345                           
  1346                           ; 2 bytes @ 0x31
  1347  000091                     	ds	2
  1348  000093                     move_window@n:
  1349                           	opt stack 0
  1350  000093                     auto_mount@chk_wp:
  1351                           	opt stack 0
  1352                           
  1353                           ; 1 bytes @ 0x33
  1354  000093                     	ds	1
  1355  000094                     ??_auto_mount:
  1356  000094                     move_window@wsect:
  1357                           	opt stack 0
  1358                           
  1359                           ; 4 bytes @ 0x34
  1360  000094                     	ds	4
  1361  000098                     move_window@fs:
  1362                           	opt stack 0
  1363                           
  1364                           ; 2 bytes @ 0x38
  1365  000098                     	ds	2
  1366  00009A                     ?_get_cluster:
  1367                           	opt stack 0
  1368  00009A                     sync@fs:
  1369                           	opt stack 0
  1370  00009A                     get_cluster@clust:
  1371                           	opt stack 0
  1372  00009A                     put_cluster@clust:
  1373                           	opt stack 0
  1374                           
  1375                           ; 4 bytes @ 0x3A
  1376  00009A                     	ds	2
  1377  00009C                     f_sync@fp:
  1378                           	opt stack 0
  1379                           
  1380                           ; 2 bytes @ 0x3C
  1381  00009C                     	ds	2
  1382  00009E                     ??_get_cluster:
  1383  00009E                     ??_f_sync:
  1384  00009E                     put_cluster@val:
  1385                           	opt stack 0
  1386                           
  1387                           ; 4 bytes @ 0x3E
  1388  00009E                     	ds	4
  1389  0000A2                     ??_put_cluster:
  1390  0000A2                     f_sync@res:
  1391                           	opt stack 0
  1392                           
  1393                           ; 1 bytes @ 0x42
  1394  0000A2                     	ds	1
  1395  0000A3                     f_sync@tim:
  1396                           	opt stack 0
  1397                           
  1398                           ; 4 bytes @ 0x43
  1399  0000A3                     	ds	4
  1400  0000A7                     _put_cluster$1088:
  1401                           	opt stack 0
  1402  0000A7                     f_sync@dir:
  1403                           	opt stack 0
  1404                           
  1405                           ; 2 bytes @ 0x47
  1406  0000A7                     	ds	2
  1407  0000A9                     _put_cluster$1089:
  1408                           	opt stack 0
  1409  0000A9                     f_close@fp:
  1410                           	opt stack 0
  1411                           
  1412                           ; 2 bytes @ 0x49
  1413  0000A9                     	ds	2
  1414  0000AB                     put_cluster@fatsect:
  1415                           	opt stack 0
  1416                           
  1417                           ; 4 bytes @ 0x4B
  1418  0000AB                     	ds	3
  1419  0000AE                     auto_mount@maxclust:
  1420                           	opt stack 0
  1421                           
  1422                           ; 4 bytes @ 0x4E
  1423  0000AE                     	ds	1
  1424  0000AF                     put_cluster@bc:
  1425                           	opt stack 0
  1426                           
  1427                           ; 2 bytes @ 0x4F
  1428  0000AF                     	ds	2
  1429  0000B1                     put_cluster@p:
  1430                           	opt stack 0
  1431                           
  1432                           ; 2 bytes @ 0x51
  1433  0000B1                     	ds	1
  1434  0000B2                     auto_mount@totalsect:
  1435                           	opt stack 0
  1436                           
  1437                           ; 4 bytes @ 0x52
  1438  0000B2                     	ds	1
  1439  0000B3                     put_cluster@fs:
  1440                           	opt stack 0
  1441                           
  1442                           ; 2 bytes @ 0x53
  1443  0000B3                     	ds	3
  1444  0000B6                     auto_mount@bootsect:
  1445                           	opt stack 0
  1446                           
  1447                           ; 4 bytes @ 0x56
  1448  0000B6                     	ds	4
  1449  0000BA                     auto_mount@p:
  1450                           	opt stack 0
  1451                           
  1452                           ; 2 bytes @ 0x5A
  1453  0000BA                     	ds	2
  1454  0000BC                     auto_mount@stat:
  1455                           	opt stack 0
  1456                           
  1457                           ; 1 bytes @ 0x5C
  1458  0000BC                     	ds	1
  1459  0000BD                     auto_mount@fatsize:
  1460                           	opt stack 0
  1461                           
  1462                           ; 4 bytes @ 0x5D
  1463  0000BD                     	ds	4
  1464  0000C1                     auto_mount@fmt:
  1465                           	opt stack 0
  1466                           
  1467                           ; 1 bytes @ 0x61
  1468  0000C1                     	ds	1
  1469  0000C2                     auto_mount@fs:
  1470                           	opt stack 0
  1471                           
  1472                           ; 2 bytes @ 0x62
  1473  0000C2                     	ds	6
  1474  0000C8                     _get_cluster$1065:
  1475                           	opt stack 0
  1476                           
  1477                           ; 2 bytes @ 0x68
  1478  0000C8                     	ds	2
  1479  0000CA                     get_cluster@wc:
  1480                           	opt stack 0
  1481                           
  1482                           ; 2 bytes @ 0x6A
  1483  0000CA                     	ds	2
  1484  0000CC                     get_cluster@fatsect:
  1485                           	opt stack 0
  1486                           
  1487                           ; 4 bytes @ 0x6C
  1488  0000CC                     	ds	4
  1489  0000D0                     get_cluster@bc:
  1490                           	opt stack 0
  1491                           
  1492                           ; 2 bytes @ 0x70
  1493  0000D0                     	ds	2
  1494  0000D2                     get_cluster@fs:
  1495                           	opt stack 0
  1496                           
  1497                           ; 2 bytes @ 0x72
  1498  0000D2                     	ds	2
  1499  0000D4                     ?_create_chain:
  1500                           	opt stack 0
  1501  0000D4                     next_dir_entry@dj:
  1502                           	opt stack 0
  1503  0000D4                     remove_chain@clust:
  1504                           	opt stack 0
  1505  0000D4                     create_chain@clust:
  1506                           	opt stack 0
  1507                           
  1508                           ; 4 bytes @ 0x74
  1509  0000D4                     	ds	2
  1510  0000D6                     ??_next_dir_entry:
  1511                           
  1512                           ; 1 bytes @ 0x76
  1513  0000D6                     	ds	2
  1514  0000D8                     
  1515                           ; 1 bytes @ 0x78
  1516  0000D8                     	ds	4
  1517  0000DC                     remove_chain@nxt:
  1518                           	opt stack 0
  1519  0000DC                     create_chain@mcl:
  1520                           	opt stack 0
  1521                           
  1522                           ; 4 bytes @ 0x7C
  1523  0000DC                     	ds	1
  1524  0000DD                     next_dir_entry@clust:
  1525                           	opt stack 0
  1526                           
  1527                           ; 4 bytes @ 0x7D
  1528  0000DD                     	ds	3
  1529  0000E0                     remove_chain@fs:
  1530                           	opt stack 0
  1531  0000E0                     create_chain@fs:
  1532                           	opt stack 0
  1533                           
  1534                           ; 2 bytes @ 0x80
  1535  0000E0                     	ds	1
  1536  0000E1                     next_dir_entry@idx:
  1537                           	opt stack 0
  1538                           
  1539                           ; 2 bytes @ 0x81
  1540  0000E1                     	ds	1
  1541  0000E2                     create_chain@cstat:
  1542                           	opt stack 0
  1543                           
  1544                           ; 4 bytes @ 0x82
  1545  0000E2                     	ds	1
  1546  0000E3                     trace_path@dj:
  1547                           	opt stack 0
  1548                           
  1549                           ; 2 bytes @ 0x83
  1550  0000E3                     	ds	2
  1551  0000E5                     trace_path@fn:
  1552                           	opt stack 0
  1553                           
  1554                           ; 2 bytes @ 0x85
  1555  0000E5                     	ds	1
  1556  0000E6                     create_chain@scl:
  1557                           	opt stack 0
  1558                           
  1559                           ; 4 bytes @ 0x86
  1560  0000E6                     	ds	1
  1561  0000E7                     trace_path@path:
  1562                           	opt stack 0
  1563                           
  1564                           ; 2 bytes @ 0x87
  1565  0000E7                     	ds	2
  1566  0000E9                     trace_path@dir:
  1567                           	opt stack 0
  1568                           
  1569                           ; 2 bytes @ 0x89
  1570  0000E9                     	ds	1
  1571  0000EA                     create_chain@ncl:
  1572                           	opt stack 0
  1573                           
  1574                           ; 4 bytes @ 0x8A
  1575  0000EA                     	ds	1
  1576  0000EB                     ??_trace_path:
  1577                           
  1578                           ; 1 bytes @ 0x8B
  1579  0000EB                     	ds	3
  1580  0000EE                     reserve_direntry@dj:
  1581                           	opt stack 0
  1582                           
  1583                           ; 2 bytes @ 0x8E
  1584  0000EE                     	ds	2
  1585  0000F0                     reserve_direntry@dir:
  1586                           	opt stack 0
  1587                           
  1588                           ; 2 bytes @ 0x90
  1589  0000F0                     	ds	2
  1590  0000F2                     ??_reserve_direntry:
  1591                           
  1592                           ; 1 bytes @ 0x92
  1593  0000F2                     	ds	5
  1594  0000F7                     ??_SDCard:
  1595                           
  1596                           ; 1 bytes @ 0x97
  1597  0000F7                     	ds	2
  1598                           tblptru	equ	0xFF8
  1599                           tblptrh	equ	0xFF7
  1600                           tblptrl	equ	0xFF6
  1601                           tablat	equ	0xFF5
  1602                           postinc0	equ	0xFEE
  1603                           wreg	equ	0xFE8
  1604                           postdec1	equ	0xFE5
  1605                           fsr1h	equ	0xFE2
  1606                           fsr1l	equ	0xFE1
  1607                           
  1608                           	psect	cstackCOMRAM
  1609  000001                     __pcstackCOMRAM:
  1610                           	opt stack 0
  1611  000001                     i2write_timer_zero@timer0:
  1612                           	opt stack 0
  1613                           
  1614                           ; 2 bytes @ 0x0
  1615  000001                     	ds	2
  1616  000003                     i2write_timer_zero@timer:
  1617                           	opt stack 0
  1618                           
  1619                           ; 2 bytes @ 0x2
  1620  000003                     	ds	2
  1621  000005                     ??_isr:
  1622                           
  1623                           ; 1 bytes @ 0x4
  1624  000005                     	ds	16
  1625  000015                     isr@cont:
  1626                           	opt stack 0
  1627                           
  1628                           ; 1 bytes @ 0x14
  1629  000015                     	ds	1
  1630  000016                     ??_recebe_dado_SPI:
  1631  000016                     ?_memcmp:
  1632                           	opt stack 0
  1633  000016                     ?___wmul:
  1634                           	opt stack 0
  1635  000016                     ?___awdiv:
  1636                           	opt stack 0
  1637  000016                     ?___lwdiv:
  1638                           	opt stack 0
  1639  000016                     ?___lwmod:
  1640                           	opt stack 0
  1641  000016                     ?_get_fattime:
  1642                           	opt stack 0
  1643  000016                     ?___lmul:
  1644                           	opt stack 0
  1645  000016                     ?___lldiv:
  1646                           	opt stack 0
  1647  000016                     escreve_dado_SPI@contador:
  1648                           	opt stack 0
  1649  000016                     disk_ioctl@cmd:
  1650                           	opt stack 0
  1651  000016                     sdc_disk_status@stat:
  1652                           	opt stack 0
  1653  000016                     delay@contador_ext:
  1654                           	opt stack 0
  1655  000016                     write_timer_zero@timer0:
  1656                           	opt stack 0
  1657  000016                     f_mount@fs:
  1658                           	opt stack 0
  1659  000016                     ___wmul@multiplier:
  1660                           	opt stack 0
  1661  000016                     ___awdiv@dividend:
  1662                           	opt stack 0
  1663  000016                     ___lwdiv@dividend:
  1664                           	opt stack 0
  1665  000016                     ___lwmod@dividend:
  1666                           	opt stack 0
  1667  000016                     memcmp@s1:
  1668                           	opt stack 0
  1669  000016                     memcpy@d1:
  1670                           	opt stack 0
  1671  000016                     memset@p1:
  1672                           	opt stack 0
  1673  000016                     ___lmul@multiplier:
  1674                           	opt stack 0
  1675  000016                     ___lldiv@dividend:
  1676                           	opt stack 0
  1677                           
  1678                           ; 4 bytes @ 0x15
  1679  000016                     	ds	1
  1680  000017                     escreve_dado_SPI@data_to_shrc:
  1681                           	opt stack 0
  1682  000017                     sdc_disk_status@pdrv:
  1683                           	opt stack 0
  1684  000017                     delay@contador_int:
  1685                           	opt stack 0
  1686  000017                     disk_ioctl@buff:
  1687                           	opt stack 0
  1688                           
  1689                           ; 2 bytes @ 0x16
  1690  000017                     	ds	1
  1691  000018                     ??_dummy_clocks:
  1692  000018                     ??_disk_status:
  1693  000018                     recebe_dado_SPI@contador:
  1694                           	opt stack 0
  1695  000018                     escreve_cmd_lcd@comando:
  1696                           	opt stack 0
  1697  000018                     endereco_cursor_lcd@endereco:
  1698                           	opt stack 0
  1699  000018                     escreve_caractere_lcd@data:
  1700                           	opt stack 0
  1701  000018                     f_mount@drv:
  1702                           	opt stack 0
  1703  000018                     write_timer_zero@timer:
  1704                           	opt stack 0
  1705  000018                     ___wmul@multiplicand:
  1706                           	opt stack 0
  1707  000018                     ___awdiv@divisor:
  1708                           	opt stack 0
  1709  000018                     ___lwdiv@divisor:
  1710                           	opt stack 0
  1711  000018                     ___lwmod@divisor:
  1712                           	opt stack 0
  1713  000018                     memcmp@s2:
  1714                           	opt stack 0
  1715  000018                     memcpy@s1:
  1716                           	opt stack 0
  1717  000018                     memset@c:
  1718                           	opt stack 0
  1719  000018                     command@arg:
  1720                           	opt stack 0
  1721                           
  1722                           ; 4 bytes @ 0x17
  1723  000018                     	ds	1
  1724  000019                     ??_init_lcd:
  1725  000019                     disk_ioctl@pdrv:
  1726                           	opt stack 0
  1727  000019                     posicao_cursor_lcd@coluna:
  1728                           	opt stack 0
  1729  000019                     response@buff:
  1730                           	opt stack 0
  1731  000019                     disk_status@result:
  1732                           	opt stack 0
  1733  000019                     escreve_frase_ram_lcd@buffer:
  1734                           	opt stack 0
  1735                           
  1736                           ; 2 bytes @ 0x18
  1737  000019                     	ds	1
  1738  00001A                     disk_ioctl@res:
  1739                           	opt stack 0
  1740  00001A                     posicao_cursor_lcd@linha:
  1741                           	opt stack 0
  1742  00001A                     dummy_clocks@n:
  1743                           	opt stack 0
  1744  00001A                     ___awdiv@counter:
  1745                           	opt stack 0
  1746  00001A                     ___lwdiv@counter:
  1747                           	opt stack 0
  1748  00001A                     ___lwmod@counter:
  1749                           	opt stack 0
  1750  00001A                     ___wmul@product:
  1751                           	opt stack 0
  1752  00001A                     memcmp@n:
  1753                           	opt stack 0
  1754  00001A                     memcpy@n:
  1755                           	opt stack 0
  1756  00001A                     memset@n:
  1757                           	opt stack 0
  1758  00001A                     ___lmul@multiplicand:
  1759                           	opt stack 0
  1760  00001A                     ___lldiv@divisor:
  1761                           	opt stack 0
  1762  00001A                     get_fattime@f_time:
  1763                           	opt stack 0
  1764                           
  1765                           ; 9 bytes @ 0x19
  1766  00001A                     	ds	1
  1767  00001B                     disk_status@pdrv:
  1768                           	opt stack 0
  1769  00001B                     posicao_cursor_lcd@endereco:
  1770                           	opt stack 0
  1771  00001B                     ___awdiv@sign:
  1772                           	opt stack 0
  1773  00001B                     dummy_clocks@i:
  1774                           	opt stack 0
  1775  00001B                     ___lwdiv@quotient:
  1776                           	opt stack 0
  1777                           
  1778                           ; 2 bytes @ 0x1A
  1779  00001B                     	ds	1
  1780  00001C                     ??_memcmp:
  1781  00001C                     ??_mensagem_inicial:
  1782  00001C                     disk_status@stat:
  1783                           	opt stack 0
  1784  00001C                     command@CRC:
  1785                           	opt stack 0
  1786  00001C                     ___awdiv@quotient:
  1787                           	opt stack 0
  1788  00001C                     memcpy@d:
  1789                           	opt stack 0
  1790  00001C                     memset@p:
  1791                           	opt stack 0
  1792                           
  1793                           ; 2 bytes @ 0x1B
  1794  00001C                     	ds	1
  1795  00001D                     command@CMD:
  1796                           	opt stack 0
  1797  00001D                     validate@fs:
  1798                           	opt stack 0
  1799  00001D                     utoa@buf:
  1800                           	opt stack 0
  1801                           
  1802                           ; 2 bytes @ 0x1C
  1803  00001D                     	ds	1
  1804  00001E                     command@argument:
  1805                           	opt stack 0
  1806  00001E                     make_dirfile@path:
  1807                           	opt stack 0
  1808  00001E                     memcpy@s:
  1809                           	opt stack 0
  1810  00001E                     ___lmul@product:
  1811                           	opt stack 0
  1812  00001E                     ___lldiv@quotient:
  1813                           	opt stack 0
  1814                           
  1815                           ; 4 bytes @ 0x1D
  1816  00001E                     	ds	1
  1817  00001F                     sdc_disk_write@p_buff:
  1818                           	opt stack 0
  1819  00001F                     validate@id:
  1820                           	opt stack 0
  1821  00001F                     utoa@val:
  1822                           	opt stack 0
  1823                           
  1824                           ; 2 bytes @ 0x1E
  1825  00001F                     	ds	1
  1826  000020                     make_dirfile@dirname:
  1827                           	opt stack 0
  1828                           
  1829                           ; 2 bytes @ 0x1F
  1830  000020                     	ds	1
  1831  000021                     ??_validate:
  1832  000021                     utoa@base:
  1833                           	opt stack 0
  1834  000021                     sdc_disk_write@sector:
  1835                           	opt stack 0
  1836                           
  1837                           ; 4 bytes @ 0x20
  1838  000021                     	ds	1
  1839  000022                     ??_make_dirfile:
  1840  000022                     ?_clust2sect:
  1841                           	opt stack 0
  1842  000022                     ___lldiv@counter:
  1843                           	opt stack 0
  1844  000022                     clust2sect@clust:
  1845                           	opt stack 0
  1846                           
  1847                           ; 4 bytes @ 0x21
  1848  000022                     	ds	1
  1849  000023                     utoa@v:
  1850                           	opt stack 0
  1851                           
  1852                           ; 2 bytes @ 0x22
  1853  000023                     	ds	1
  1854  000024                     _make_dirfile$1198:
  1855                           	opt stack 0
  1856                           
  1857                           ; 2 bytes @ 0x23
  1858  000024                     	ds	1
  1859  000025                     sdc_disk_write@count:
  1860                           	opt stack 0
  1861  000025                     utoa@c:
  1862                           	opt stack 0
  1863                           
  1864                           ; 1 bytes @ 0x24
  1865  000025                     	ds	1
  1866  000026                     ??_sdc_disk_write:
  1867  000026                     ??_clust2sect:
  1868  000026                     make_dirfile@b:
  1869                           	opt stack 0
  1870  000026                     itoa@buf:
  1871                           	opt stack 0
  1872                           
  1873                           ; 2 bytes @ 0x25
  1874  000026                     	ds	1
  1875  000027                     make_dirfile@t:
  1876                           	opt stack 0
  1877                           
  1878                           ; 1 bytes @ 0x26
  1879  000027                     	ds	1
  1880  000028                     make_dirfile@a:
  1881                           	opt stack 0
  1882  000028                     itoa@val:
  1883                           	opt stack 0
  1884                           
  1885                           ; 2 bytes @ 0x27
  1886  000028                     	ds	1
  1887  000029                     make_dirfile@n:
  1888                           	opt stack 0
  1889  000029                     sdc_disk_write@i:
  1890                           	opt stack 0
  1891                           
  1892                           ; 2 bytes @ 0x28
  1893  000029                     	ds	1
  1894  00002A                     make_dirfile@c:
  1895                           	opt stack 0
  1896  00002A                     itoa@base:
  1897                           	opt stack 0
  1898                           
  1899                           ; 2 bytes @ 0x29
  1900  00002A                     	ds	1
  1901  00002B                     sdc_disk_write@count1:
  1902                           	opt stack 0
  1903  00002B                     clust2sect@fs:
  1904                           	opt stack 0
  1905                           
  1906                           ; 2 bytes @ 0x2A
  1907  00002B                     	ds	1
  1908  00002C                     itoa@cp:
  1909                           	opt stack 0
  1910                           
  1911                           ; 2 bytes @ 0x2B
  1912  00002C                     	ds	1
  1913  00002D                     sdc_disk_write@i_548:
  1914                           	opt stack 0
  1915                           
  1916                           ; 1 bytes @ 0x2C
  1917  00002D                     	ds	1
  1918  00002E                     sdc_disk_write@res:
  1919                           	opt stack 0
  1920  00002E                     escreve_inteiro_lcd@valor:
  1921                           	opt stack 0
  1922                           
  1923                           ; 2 bytes @ 0x2D
  1924  00002E                     	ds	1
  1925  00002F                     sdc_disk_write@buff:
  1926                           	opt stack 0
  1927                           
  1928                           ; 1 bytes @ 0x2E
  1929  00002F                     	ds	1
  1930  000030                     ??_sdc_disk_initialize:
  1931  000030                     ??_sdc_disk_read:
  1932  000030                     ??_disk_write:
  1933                           
  1934                           ; 1 bytes @ 0x2F
  1935  000030                     	ds	1
  1936  000031                     disk_initialize@pdrv:
  1937                           	opt stack 0
  1938  000031                     disk_write@pdrv:
  1939                           	opt stack 0
  1940                           
  1941                           ; 1 bytes @ 0x30
  1942  000031                     	ds	1
  1943  000032                     disk_initialize@stat:
  1944                           	opt stack 0
  1945  000032                     disk_write@result:
  1946                           	opt stack 0
  1947                           
  1948                           ; 2 bytes @ 0x31
  1949  000032                     	ds	2
  1950  000034                     ??_disk_read:
  1951  000034                     disk_write@res:
  1952                           	opt stack 0
  1953                           
  1954                           ; 1 bytes @ 0x33
  1955  000034                     	ds	1
  1956  000035                     f_close@res:
  1957                           	opt stack 0
  1958                           
  1959                           ; 1 bytes @ 0x34
  1960  000035                     	ds	1
  1961  000036                     tblptru	equ	0xFF8
  1962                           tblptrh	equ	0xFF7
  1963                           tblptrl	equ	0xFF6
  1964                           tablat	equ	0xFF5
  1965                           postinc0	equ	0xFEE
  1966                           wreg	equ	0xFE8
  1967                           postdec1	equ	0xFE5
  1968                           fsr1h	equ	0xFE2
  1969                           fsr1l	equ	0xFE1
  1970                           
  1971                           ; 1 bytes @ 0x35
  1972 ;;
  1973 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1974 ;;
  1975 ;; *************** function _main *****************
  1976 ;; Defined at:
  1977 ;;		line 207 in file "main.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;		None
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;		None
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1991 ;;      Params:         0       0       0       0       0       0       0       0       0
  1992 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1993 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1994 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1995 ;;Total ram usage:        0 bytes
  1996 ;; Hardware stack levels required when called:   15
  1997 ;; This function calls:
  1998 ;;		_escalonador
  1999 ;;		_inicializa_shrc
  2000 ;;		_inicializa_tarefas
  2001 ;;		_init_hardware
  2002 ;;		_init_lcd
  2003 ;;		_mensagem_inicial
  2004 ;; This function is called by:
  2005 ;;		Startup code after reset
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text0
  2010  004EF4                     __ptext0:
  2011                           	opt stack 0
  2012  004EF4                     _main:
  2013                           	opt stack 16
  2014                           
  2015                           ;main.c: 209: init_hardware();
  2016                           
  2017                           ;incstack = 0
  2018  004EF4  ECEF  F027         	call	_init_hardware	;wreg free
  2019                           
  2020                           ;main.c: 211: init_lcd();
  2021  004EF8  ECE6  F021         	call	_init_lcd	;wreg free
  2022                           
  2023                           ;main.c: 212: inicializa_shrc();
  2024  004EFC  EC35  F028         	call	_inicializa_shrc	;wreg free
  2025                           
  2026                           ;main.c: 214: mensagem_inicial();
  2027  004F00  EC14  F024         	call	_mensagem_inicial	;wreg free
  2028                           
  2029                           ;main.c: 215: inicializa_tarefas();;
  2030  004F04  ECFB  F026         	call	_inicializa_tarefas	;wreg free
  2031                           
  2032                           ;main.c: 217: ADCON1 = 0X0F;
  2033  004F08  0E0F               	movlw	15
  2034  004F0A  6EC1               	movwf	4033,c	;volatile
  2035  004F0C                     l13597:
  2036                           
  2037                           ;main.c: 219: {
  2038                           ;main.c: 221: if ((sinaliza_int_timer == 1) && (2))
  2039  004F0C  0440               	decf	_sinaliza_int_timer,w,c
  2040  004F0E  A4D8               	btfss	status,2,c
  2041  004F10  D7FD               	goto	l13597
  2042                           
  2043                           ;main.c: 222: {
  2044                           ;main.c: 223: sinaliza_int_timer = 0;
  2045  004F12  0E00               	movlw	0
  2046  004F14  6E40               	movwf	_sinaliza_int_timer,c
  2047                           
  2048                           ;main.c: 224: escalonador();
  2049  004F16  EC3B  F021         	call	_escalonador	;wreg free
  2050  004F1A  D7F8               	goto	l13597
  2051  004F1C                     __end_of_main:
  2052                           	opt stack 0
  2053                           tblptru	equ	0xFF8
  2054                           tblptrh	equ	0xFF7
  2055                           tblptrl	equ	0xFF6
  2056                           tablat	equ	0xFF5
  2057                           postinc0	equ	0xFEE
  2058                           wreg	equ	0xFE8
  2059                           postdec1	equ	0xFE5
  2060                           fsr1h	equ	0xFE2
  2061                           fsr1l	equ	0xFE1
  2062                           status	equ	0xFD8
  2063                           
  2064 ;; *************** function _mensagem_inicial *****************
  2065 ;; Defined at:
  2066 ;;		line 237 in file "main.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;		None
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  msg_dois       17   17[BANK0 ] const unsigned char [17]
  2071 ;;  msg_linha_um   17    0[BANK0 ] const unsigned char [17]
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2081 ;;      Params:         0       0       0       0       0       0       0       0       0
  2082 ;;      Locals:         0      34       0       0       0       0       0       0       0
  2083 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2084 ;;      Totals:         2      34       0       0       0       0       0       0       0
  2085 ;;Total ram usage:       36 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    5
  2088 ;; This function calls:
  2089 ;;		_escreve_cmd_lcd
  2090 ;;		_escreve_frase_ram_lcd
  2091 ;;		_posicao_cursor_lcd
  2092 ;; This function is called by:
  2093 ;;		_main
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text1
  2098  004828                     __ptext1:
  2099                           	opt stack 0
  2100  004828                     _mensagem_inicial:
  2101                           	opt stack 25
  2102                           
  2103                           ;main.c: 239: const unsigned char msg_linha_um[17] = "SDCard Init   ";
  2104                           
  2105                           ;incstack = 0
  2106  004828  0E1A               	movlw	low mensagem_inicial@F4099
  2107  00482A  6EF6               	movwf	tblptrl,c
  2108  00482C                     	if	1	;There is more than 1 active tblptr byte
  2109  00482C  0E61               	movlw	high mensagem_inicial@F4099
  2110  00482E  6EF7               	movwf	tblptrh,c
  2111  004830                     	endif
  2112  004830                     	if	0	;There are less than 3 active tblptr bytes
  2113  004830                     	endif
  2114  004830  EE20  F060         	lfsr	2,mensagem_inicial@msg_linha_um
  2115  004834  0E10               	movlw	16
  2116  004836                     u13950:
  2117  004836  0009               	tblrd		*+
  2118  004838  CFF5 FFDE          	movff	tablat,postinc2
  2119  00483C  06E8               	decf	wreg,f,c
  2120  00483E  E2FB               	bc	u13950
  2121                           
  2122                           ;main.c: 240: const unsigned char msg_dois[17] = " 18/01/2022   ";
  2123  004840  0E09               	movlw	low mensagem_inicial@F4101
  2124  004842  6EF6               	movwf	tblptrl,c
  2125  004844                     	if	1	;There is more than 1 active tblptr byte
  2126  004844  0E61               	movlw	high mensagem_inicial@F4101
  2127  004846  6EF7               	movwf	tblptrh,c
  2128  004848                     	endif
  2129  004848                     	if	0	;There are less than 3 active tblptr bytes
  2130  004848                     	endif
  2131  004848  EE20  F071         	lfsr	2,mensagem_inicial@msg_dois
  2132  00484C  0E10               	movlw	16
  2133  00484E                     u13960:
  2134  00484E  0009               	tblrd		*+
  2135  004850  CFF5 FFDE          	movff	tablat,postinc2
  2136  004854  06E8               	decf	wreg,f,c
  2137  004856  E2FB               	bc	u13960
  2138                           
  2139                           ;main.c: 242: posicao_cursor_lcd(1,0);
  2140  004858  0E00               	movlw	0
  2141  00485A  6E19               	movwf	posicao_cursor_lcd@coluna,c
  2142  00485C  0E01               	movlw	1
  2143  00485E  EC8A  F024         	call	_posicao_cursor_lcd
  2144                           
  2145                           ;main.c: 243: escreve_frase_ram_lcd(msg_linha_um);
  2146  004862  0E60               	movlw	low mensagem_inicial@msg_linha_um
  2147  004864  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  2148  004866  0E00               	movlw	high mensagem_inicial@msg_linha_um
  2149  004868  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  2150  00486A  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
  2151                           
  2152                           ;main.c: 245: posicao_cursor_lcd(2,0);
  2153  00486E  0E00               	movlw	0
  2154  004870  6E19               	movwf	posicao_cursor_lcd@coluna,c
  2155  004872  0E02               	movlw	2
  2156  004874  EC8A  F024         	call	_posicao_cursor_lcd
  2157                           
  2158                           ;main.c: 246: escreve_frase_ram_lcd(msg_dois);
  2159  004878  0E71               	movlw	low mensagem_inicial@msg_dois
  2160  00487A  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  2161  00487C  0E00               	movlw	high mensagem_inicial@msg_dois
  2162  00487E  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  2163  004880  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
  2164                           
  2165                           ;main.c: 247: _delay((unsigned long)((1000)*(48000000/4000.0)));
  2166  004884  0E3D               	movlw	61
  2167  004886  6E1D               	movwf	(??_mensagem_inicial+1)& (0+255),c
  2168  004888  0EE1               	movlw	225
  2169  00488A  6E1C               	movwf	??_mensagem_inicial& (0+255),c
  2170  00488C  0E40               	movlw	64
  2171  00488E                     u16197:
  2172  00488E  2EE8               	decfsz	wreg,f,c
  2173  004890  D7FE               	bra	u16197
  2174  004892  2E1C               	decfsz	??_mensagem_inicial& (0+255),f,c
  2175  004894  D7FC               	bra	u16197
  2176  004896  2E1D               	decfsz	(??_mensagem_inicial+1)& (0+255),f,c
  2177  004898  D7FA               	bra	u16197
  2178                           
  2179                           ;main.c: 248: escreve_cmd_lcd(0b00000001);
  2180  00489A  0E01               	movlw	1
  2181  00489C  ECCE  F022         	call	_escreve_cmd_lcd
  2182  0048A0  0012               	return		;funcret
  2183  0048A2                     __end_of_mensagem_inicial:
  2184                           	opt stack 0
  2185                           tblptru	equ	0xFF8
  2186                           tblptrh	equ	0xFF7
  2187                           tblptrl	equ	0xFF6
  2188                           tablat	equ	0xFF5
  2189                           postinc0	equ	0xFEE
  2190                           wreg	equ	0xFE8
  2191                           postdec1	equ	0xFE5
  2192                           fsr1h	equ	0xFE2
  2193                           fsr1l	equ	0xFE1
  2194                           postinc2	equ	0xFDE
  2195                           status	equ	0xFD8
  2196                           
  2197 ;; *************** function _init_lcd *****************
  2198 ;; Defined at:
  2199 ;;		line 71 in file "bibliotecas/display_lcd.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2213 ;;      Params:         0       0       0       0       0       0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2215 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2216 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2217 ;;Total ram usage:        1 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    4
  2220 ;; This function calls:
  2221 ;;		_delay
  2222 ;;		_escreve_cmd_lcd
  2223 ;; This function is called by:
  2224 ;;		_main
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           	psect	text2
  2229  0043CC                     __ptext2:
  2230                           	opt stack 0
  2231  0043CC                     _init_lcd:
  2232                           	opt stack 26
  2233                           
  2234                           ;display_lcd.c: 74: TRISDbits.RD2 = 0;
  2235                           
  2236                           ;incstack = 0
  2237  0043CC  9495               	bcf	3989,2,c	;volatile
  2238                           
  2239                           ;display_lcd.c: 75: TRISDbits.RD1 = 0;
  2240  0043CE  9295               	bcf	3989,1,c	;volatile
  2241                           
  2242                           ;display_lcd.c: 76: TRISDbits.RD0 = 0;
  2243  0043D0  9095               	bcf	3989,0,c	;volatile
  2244                           
  2245                           ;display_lcd.c: 79: TRISDbits.RD4=0;
  2246  0043D2  9895               	bcf	3989,4,c	;volatile
  2247                           
  2248                           ;display_lcd.c: 80: TRISDbits.RD5=0;
  2249  0043D4  9A95               	bcf	3989,5,c	;volatile
  2250                           
  2251                           ;display_lcd.c: 81: TRISDbits.RD6=0;
  2252  0043D6  9C95               	bcf	3989,6,c	;volatile
  2253                           
  2254                           ;display_lcd.c: 82: TRISDbits.RD7=0;
  2255  0043D8  9E95               	bcf	3989,7,c	;volatile
  2256                           
  2257                           ;display_lcd.c: 89: PORTDbits.RD2 = 0;
  2258  0043DA  9483               	bcf	3971,2,c	;volatile
  2259                           
  2260                           ;display_lcd.c: 90: PORTDbits.RD1 = 0;
  2261  0043DC  9283               	bcf	3971,1,c	;volatile
  2262                           
  2263                           ;display_lcd.c: 91: PORTDbits.RD0 = 0;
  2264  0043DE  9083               	bcf	3971,0,c	;volatile
  2265                           
  2266                           ;display_lcd.c: 95: PORTDbits.RD7=0;
  2267  0043E0  9E83               	bcf	3971,7,c	;volatile
  2268                           
  2269                           ;display_lcd.c: 96: PORTDbits.RD6=0;
  2270  0043E2  9C83               	bcf	3971,6,c	;volatile
  2271                           
  2272                           ;display_lcd.c: 97: PORTDbits.RD5=1;
  2273  0043E4  8A83               	bsf	3971,5,c	;volatile
  2274                           
  2275                           ;display_lcd.c: 98: PORTDbits.RD4=1;
  2276  0043E6  8883               	bsf	3971,4,c	;volatile
  2277                           
  2278                           ;display_lcd.c: 103: _delay((unsigned long)((15)*(48000000/4000.0)));
  2279  0043E8  0EEA               	movlw	234
  2280  0043EA  6E19               	movwf	??_init_lcd& (0+255),c
  2281  0043EC  0EC3               	movlw	195
  2282  0043EE                     u16207:
  2283  0043EE  2EE8               	decfsz	wreg,f,c
  2284  0043F0  D7FE               	bra	u16207
  2285  0043F2  2E19               	decfsz	??_init_lcd& (0+255),f,c
  2286  0043F4  D7FC               	bra	u16207
  2287  0043F6  F000               	nop	
  2288                           
  2289                           ;display_lcd.c: 107: PORTDbits.RD0 = 1;
  2290  0043F8  8083               	bsf	3971,0,c	;volatile
  2291                           
  2292                           ;display_lcd.c: 108: delay();
  2293  0043FA  ECB5  F027         	call	_delay	;wreg free
  2294                           
  2295                           ;display_lcd.c: 109: PORTDbits.RD0 = 0;
  2296  0043FE  9083               	bcf	3971,0,c	;volatile
  2297                           
  2298                           ;display_lcd.c: 110: delay();
  2299  004400  ECB5  F027         	call	_delay	;wreg free
  2300                           
  2301                           ;display_lcd.c: 115: _delay((unsigned long)((5)*(48000000/4000.0)));
  2302  004404  0E4E               	movlw	78
  2303  004406  6E19               	movwf	??_init_lcd& (0+255),c
  2304  004408  0EEB               	movlw	235
  2305  00440A                     u16217:
  2306  00440A  2EE8               	decfsz	wreg,f,c
  2307  00440C  D7FE               	bra	u16217
  2308  00440E  2E19               	decfsz	??_init_lcd& (0+255),f,c
  2309  004410  D7FC               	bra	u16217
  2310  004412  F000               	nop	
  2311                           
  2312                           ;display_lcd.c: 118: PORTDbits.RD0 = 1;
  2313  004414  8083               	bsf	3971,0,c	;volatile
  2314                           
  2315                           ;display_lcd.c: 119: delay();
  2316  004416  ECB5  F027         	call	_delay	;wreg free
  2317                           
  2318                           ;display_lcd.c: 120: PORTDbits.RD0 = 0;
  2319  00441A  9083               	bcf	3971,0,c	;volatile
  2320                           
  2321                           ;display_lcd.c: 121: delay();
  2322  00441C  ECB5  F027         	call	_delay	;wreg free
  2323                           
  2324                           ;display_lcd.c: 126: _delay((unsigned long)((5)*(48000000/4000.0)));
  2325  004420  0E4E               	movlw	78
  2326  004422  6E19               	movwf	??_init_lcd& (0+255),c
  2327  004424  0EEB               	movlw	235
  2328  004426                     u16227:
  2329  004426  2EE8               	decfsz	wreg,f,c
  2330  004428  D7FE               	bra	u16227
  2331  00442A  2E19               	decfsz	??_init_lcd& (0+255),f,c
  2332  00442C  D7FC               	bra	u16227
  2333  00442E  F000               	nop	
  2334                           
  2335                           ;display_lcd.c: 129: PORTDbits.RD0 = 1;
  2336  004430  8083               	bsf	3971,0,c	;volatile
  2337                           
  2338                           ;display_lcd.c: 130: delay();
  2339  004432  ECB5  F027         	call	_delay	;wreg free
  2340                           
  2341                           ;display_lcd.c: 131: PORTDbits.RD0 = 0;
  2342  004436  9083               	bcf	3971,0,c	;volatile
  2343                           
  2344                           ;display_lcd.c: 132: delay();
  2345  004438  ECB5  F027         	call	_delay	;wreg free
  2346                           
  2347                           ;display_lcd.c: 135: PORTDbits.RD7=0;
  2348  00443C  9E83               	bcf	3971,7,c	;volatile
  2349                           
  2350                           ;display_lcd.c: 136: PORTDbits.RD6=0;
  2351  00443E  9C83               	bcf	3971,6,c	;volatile
  2352                           
  2353                           ;display_lcd.c: 137: PORTDbits.RD5=1;
  2354  004440  8A83               	bsf	3971,5,c	;volatile
  2355                           
  2356                           ;display_lcd.c: 138: PORTDbits.RD4=0;
  2357  004442  9883               	bcf	3971,4,c	;volatile
  2358                           
  2359                           ;display_lcd.c: 142: PORTDbits.RD0 = 1;
  2360  004444  8083               	bsf	3971,0,c	;volatile
  2361                           
  2362                           ;display_lcd.c: 143: delay();
  2363  004446  ECB5  F027         	call	_delay	;wreg free
  2364                           
  2365                           ;display_lcd.c: 144: PORTDbits.RD0 = 0;
  2366  00444A  9083               	bcf	3971,0,c	;volatile
  2367                           
  2368                           ;display_lcd.c: 145: delay();
  2369  00444C  ECB5  F027         	call	_delay	;wreg free
  2370                           
  2371                           ;display_lcd.c: 149: escreve_cmd_lcd(0b00101000);
  2372  004450  0E28               	movlw	40
  2373  004452  ECCE  F022         	call	_escreve_cmd_lcd
  2374                           
  2375                           ;display_lcd.c: 150: escreve_cmd_lcd(0b00000110);
  2376  004456  0E06               	movlw	6
  2377  004458  ECCE  F022         	call	_escreve_cmd_lcd
  2378                           
  2379                           ;display_lcd.c: 151: escreve_cmd_lcd(0b00001110);
  2380  00445C  0E0E               	movlw	14
  2381  00445E  ECCE  F022         	call	_escreve_cmd_lcd
  2382                           
  2383                           ;display_lcd.c: 152: escreve_cmd_lcd(0b00000001);
  2384  004462  0E01               	movlw	1
  2385  004464  ECCE  F022         	call	_escreve_cmd_lcd
  2386  004468  0012               	return		;funcret
  2387  00446A                     __end_of_init_lcd:
  2388                           	opt stack 0
  2389                           tblptru	equ	0xFF8
  2390                           tblptrh	equ	0xFF7
  2391                           tblptrl	equ	0xFF6
  2392                           tablat	equ	0xFF5
  2393                           postinc0	equ	0xFEE
  2394                           wreg	equ	0xFE8
  2395                           postdec1	equ	0xFE5
  2396                           fsr1h	equ	0xFE2
  2397                           fsr1l	equ	0xFE1
  2398                           postinc2	equ	0xFDE
  2399                           status	equ	0xFD8
  2400                           
  2401 ;; *************** function _escreve_cmd_lcd *****************
  2402 ;; Defined at:
  2403 ;;		line 162 in file "bibliotecas/display_lcd.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  comando         1    wreg     unsigned char 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  comando         1   23[COMRAM] unsigned char 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  1    wreg      void 
  2410 ;; Registers used:
  2411 ;;		wreg, status,2, status,0, cstack
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2417 ;;      Params:         0       0       0       0       0       0       0       0       0
  2418 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2420 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2421 ;;Total ram usage:        1 bytes
  2422 ;; Hardware stack levels used:    1
  2423 ;; Hardware stack levels required when called:    3
  2424 ;; This function calls:
  2425 ;;		_delay
  2426 ;; This function is called by:
  2427 ;;		_init_lcd
  2428 ;;		_mensagem_inicial
  2429 ;;		_gps
  2430 ;;		_cria_caractere_lcd
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text3
  2435  00459C                     __ptext3:
  2436                           	opt stack 0
  2437  00459C                     _escreve_cmd_lcd:
  2438                           	opt stack 26
  2439                           
  2440                           ;incstack = 0
  2441                           ;escreve_cmd_lcd@comando stored from wreg
  2442  00459C  6E18               	movwf	escreve_cmd_lcd@comando,c
  2443                           
  2444                           ;display_lcd.c: 165: PORTDbits.RD2 = 0;
  2445  00459E  9483               	bcf	3971,2,c	;volatile
  2446                           
  2447                           ;display_lcd.c: 166: PORTDbits.RD1 = 0;
  2448  0045A0  9283               	bcf	3971,1,c	;volatile
  2449                           
  2450                           ;display_lcd.c: 167: PORTDbits.RD0 = 0;
  2451  0045A2  9083               	bcf	3971,0,c	;volatile
  2452                           
  2453                           ;display_lcd.c: 170: if(comando&0b00010000){PORTDbits.RD4=1;}
  2454  0045A4  A818               	btfss	escreve_cmd_lcd@comando,4,c
  2455  0045A6  D002               	goto	l304
  2456  0045A8  8883               	bsf	3971,4,c	;volatile
  2457  0045AA  D001               	goto	l11991
  2458  0045AC                     l304:
  2459                           
  2460                           ;display_lcd.c: 171: else {PORTDbits.RD4=0;}
  2461  0045AC  9883               	bcf	3971,4,c	;volatile
  2462  0045AE                     l11991:
  2463                           
  2464                           ;display_lcd.c: 172: if(comando&0b00100000){PORTDbits.RD5=1;}
  2465  0045AE  AA18               	btfss	escreve_cmd_lcd@comando,5,c
  2466  0045B0  D002               	goto	l306
  2467  0045B2  8A83               	bsf	3971,5,c	;volatile
  2468  0045B4  D001               	goto	l11995
  2469  0045B6                     l306:
  2470                           
  2471                           ;display_lcd.c: 173: else {PORTDbits.RD5=0;}
  2472  0045B6  9A83               	bcf	3971,5,c	;volatile
  2473  0045B8                     l11995:
  2474                           
  2475                           ;display_lcd.c: 174: if(comando&0b01000000){PORTDbits.RD6=1;}
  2476  0045B8  AC18               	btfss	escreve_cmd_lcd@comando,6,c
  2477  0045BA  D002               	goto	l308
  2478  0045BC  8C83               	bsf	3971,6,c	;volatile
  2479  0045BE  D001               	goto	l11999
  2480  0045C0                     l308:
  2481                           
  2482                           ;display_lcd.c: 175: else {PORTDbits.RD6=0;}
  2483  0045C0  9C83               	bcf	3971,6,c	;volatile
  2484  0045C2                     l11999:
  2485                           
  2486                           ;display_lcd.c: 176: if(comando&0b10000000){PORTDbits.RD7=1;}
  2487  0045C2  AE18               	btfss	escreve_cmd_lcd@comando,7,c
  2488  0045C4  D002               	goto	l310
  2489  0045C6  8E83               	bsf	3971,7,c	;volatile
  2490  0045C8  D001               	goto	l311
  2491  0045CA                     l310:
  2492                           
  2493                           ;display_lcd.c: 177: else {PORTDbits.RD7=0;}
  2494  0045CA  9E83               	bcf	3971,7,c	;volatile
  2495  0045CC                     l311:
  2496                           
  2497                           ;display_lcd.c: 180: PORTDbits.RD0 = 1;
  2498  0045CC  8083               	bsf	3971,0,c	;volatile
  2499                           
  2500                           ;display_lcd.c: 181: delay();
  2501  0045CE  ECB5  F027         	call	_delay	;wreg free
  2502                           
  2503                           ;display_lcd.c: 182: PORTDbits.RD0 = 0;
  2504  0045D2  9083               	bcf	3971,0,c	;volatile
  2505                           
  2506                           ;display_lcd.c: 183: delay();
  2507  0045D4  ECB5  F027         	call	_delay	;wreg free
  2508                           
  2509                           ;display_lcd.c: 186: if(comando&0b00000001){PORTDbits.RD4=1;}
  2510  0045D8  A018               	btfss	escreve_cmd_lcd@comando,0,c
  2511  0045DA  D002               	goto	l312
  2512  0045DC  8883               	bsf	3971,4,c	;volatile
  2513  0045DE  D001               	goto	l313
  2514  0045E0                     l312:
  2515                           
  2516                           ;display_lcd.c: 187: else {PORTDbits.RD4=0;}
  2517  0045E0  9883               	bcf	3971,4,c	;volatile
  2518  0045E2                     l313:
  2519                           
  2520                           ;display_lcd.c: 188: if(comando&0b00000010){PORTDbits.RD5=1;}
  2521  0045E2  A218               	btfss	escreve_cmd_lcd@comando,1,c
  2522  0045E4  D002               	goto	l314
  2523  0045E6  8A83               	bsf	3971,5,c	;volatile
  2524  0045E8  D001               	goto	l315
  2525  0045EA                     l314:
  2526                           
  2527                           ;display_lcd.c: 189: else {PORTDbits.RD5=0;}
  2528  0045EA  9A83               	bcf	3971,5,c	;volatile
  2529  0045EC                     l315:
  2530                           
  2531                           ;display_lcd.c: 190: if(comando&0b00000100){PORTDbits.RD6=1;}
  2532  0045EC  A418               	btfss	escreve_cmd_lcd@comando,2,c
  2533  0045EE  D002               	goto	l316
  2534  0045F0  8C83               	bsf	3971,6,c	;volatile
  2535  0045F2  D001               	goto	l317
  2536  0045F4                     l316:
  2537                           
  2538                           ;display_lcd.c: 191: else {PORTDbits.RD6=0;}
  2539  0045F4  9C83               	bcf	3971,6,c	;volatile
  2540  0045F6                     l317:
  2541                           
  2542                           ;display_lcd.c: 192: if(comando&0b00001000){PORTDbits.RD7=1;}
  2543  0045F6  A618               	btfss	escreve_cmd_lcd@comando,3,c
  2544  0045F8  D002               	goto	l318
  2545  0045FA  8E83               	bsf	3971,7,c	;volatile
  2546  0045FC  D001               	goto	l319
  2547  0045FE                     l318:
  2548                           
  2549                           ;display_lcd.c: 193: else {PORTDbits.RD7=0;}
  2550  0045FE  9E83               	bcf	3971,7,c	;volatile
  2551  004600                     l319:
  2552                           
  2553                           ;display_lcd.c: 196: PORTDbits.RD0 = 1;
  2554  004600  8083               	bsf	3971,0,c	;volatile
  2555                           
  2556                           ;display_lcd.c: 197: delay();
  2557  004602  ECB5  F027         	call	_delay	;wreg free
  2558                           
  2559                           ;display_lcd.c: 198: PORTDbits.RD0 = 0;
  2560  004606  9083               	bcf	3971,0,c	;volatile
  2561                           
  2562                           ;display_lcd.c: 199: delay();
  2563  004608  ECB5  F027         	call	_delay	;wreg free
  2564                           
  2565                           ;display_lcd.c: 204: if (comando==0x01 || comando==0x02 || comando==0x03)
  2566  00460C  0418               	decf	escreve_cmd_lcd@comando,w,c
  2567  00460E  B4D8               	btfsc	status,2,c
  2568  004610  D008               	goto	l12027
  2569  004612  0E02               	movlw	2
  2570  004614  1818               	xorwf	escreve_cmd_lcd@comando,w,c
  2571  004616  B4D8               	btfsc	status,2,c
  2572  004618  D004               	goto	l12027
  2573  00461A  0E03               	movlw	3
  2574  00461C  1818               	xorwf	escreve_cmd_lcd@comando,w,c
  2575  00461E  A4D8               	btfss	status,2,c
  2576  004620  0012               	return	
  2577  004622                     l12027:
  2578                           
  2579                           ;display_lcd.c: 205: { delay(); }
  2580  004622  ECB5  F027         	call	_delay	;wreg free
  2581  004626  0012               	return	
  2582  004628                     __end_of_escreve_cmd_lcd:
  2583                           	opt stack 0
  2584                           tblptru	equ	0xFF8
  2585                           tblptrh	equ	0xFF7
  2586                           tblptrl	equ	0xFF6
  2587                           tablat	equ	0xFF5
  2588                           postinc0	equ	0xFEE
  2589                           wreg	equ	0xFE8
  2590                           postdec1	equ	0xFE5
  2591                           fsr1h	equ	0xFE2
  2592                           fsr1l	equ	0xFE1
  2593                           postinc2	equ	0xFDE
  2594                           status	equ	0xFD8
  2595                           
  2596 ;; *************** function _init_hardware *****************
  2597 ;; Defined at:
  2598 ;;		line 55 in file "bibliotecas/hardware.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;		None
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;		None
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      void 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2612 ;;      Params:         0       0       0       0       0       0       0       0       0
  2613 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2615 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2616 ;;Total ram usage:        0 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; Hardware stack levels required when called:    4
  2619 ;; This function calls:
  2620 ;;		_config_timer_dois
  2621 ;;		_config_timer_zero
  2622 ;;		_init_interrupt
  2623 ;;		_init_oscilador
  2624 ;;		_init_ports
  2625 ;; This function is called by:
  2626 ;;		_main
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text4
  2631  004FDE                     __ptext4:
  2632                           	opt stack 0
  2633  004FDE                     _init_hardware:
  2634                           	opt stack 26
  2635                           
  2636                           ;hardware.c: 58: init_oscilador();
  2637                           
  2638                           ;incstack = 0
  2639  004FDE  EC41  F028         	call	_init_oscilador	;wreg free
  2640                           
  2641                           ;hardware.c: 61: init_ports();
  2642  004FE2  ECE3  F027         	call	_init_ports	;wreg free
  2643                           
  2644                           ;hardware.c: 64: config_timer_zero();
  2645  004FE6  ECD6  F027         	call	_config_timer_zero	;wreg free
  2646                           
  2647                           ;hardware.c: 67: config_timer_dois();
  2648  004FEA  EC2F  F028         	call	_config_timer_dois	;wreg free
  2649                           
  2650                           ;hardware.c: 70: init_interrupt();
  2651  004FEE  EC04  F028         	call	_init_interrupt	;wreg free
  2652  004FF2  0012               	return		;funcret
  2653  004FF4                     __end_of_init_hardware:
  2654                           	opt stack 0
  2655                           tblptru	equ	0xFF8
  2656                           tblptrh	equ	0xFF7
  2657                           tblptrl	equ	0xFF6
  2658                           tablat	equ	0xFF5
  2659                           postinc0	equ	0xFEE
  2660                           wreg	equ	0xFE8
  2661                           postdec1	equ	0xFE5
  2662                           fsr1h	equ	0xFE2
  2663                           fsr1l	equ	0xFE1
  2664                           postinc2	equ	0xFDE
  2665                           status	equ	0xFD8
  2666                           
  2667 ;; *************** function _init_ports *****************
  2668 ;; Defined at:
  2669 ;;		line 154 in file "bibliotecas/hardware.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2683 ;;      Params:         0       0       0       0       0       0       0       0       0
  2684 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2686 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2687 ;;Total ram usage:        0 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    2
  2690 ;; This function calls:
  2691 ;;		Nothing
  2692 ;; This function is called by:
  2693 ;;		_init_hardware
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text5
  2698  004FC6                     __ptext5:
  2699                           	opt stack 0
  2700  004FC6                     _init_ports:
  2701                           	opt stack 27
  2702                           
  2703                           ;hardware.c: 156: TRISB = 0b00100001;
  2704                           
  2705                           ;incstack = 0
  2706  004FC6  0E21               	movlw	33
  2707  004FC8  6E93               	movwf	3987,c	;volatile
  2708                           
  2709                           ;hardware.c: 157: LATB = 0xFF;
  2710  004FCA  688A               	setf	3978,c	;volatile
  2711                           
  2712                           ;hardware.c: 158: TRISD = 0x00;
  2713  004FCC  0E00               	movlw	0
  2714  004FCE  6E95               	movwf	3989,c	;volatile
  2715                           
  2716                           ;hardware.c: 159: TRISA = 0b00000111;
  2717  004FD0  0E07               	movlw	7
  2718  004FD2  6E92               	movwf	3986,c	;volatile
  2719                           
  2720                           ;hardware.c: 160: TRISC = 0x01111111;
  2721  004FD4  0E11               	movlw	17
  2722  004FD6  6E94               	movwf	3988,c	;volatile
  2723                           
  2724                           ;hardware.c: 161: TRISE = 0b00000011;
  2725  004FD8  0E03               	movlw	3
  2726  004FDA  6E96               	movwf	3990,c	;volatile
  2727  004FDC  0012               	return		;funcret
  2728  004FDE                     __end_of_init_ports:
  2729                           	opt stack 0
  2730                           tblptru	equ	0xFF8
  2731                           tblptrh	equ	0xFF7
  2732                           tblptrl	equ	0xFF6
  2733                           tablat	equ	0xFF5
  2734                           postinc0	equ	0xFEE
  2735                           wreg	equ	0xFE8
  2736                           postdec1	equ	0xFE5
  2737                           fsr1h	equ	0xFE2
  2738                           fsr1l	equ	0xFE1
  2739                           postinc2	equ	0xFDE
  2740                           status	equ	0xFD8
  2741                           
  2742 ;; *************** function _init_oscilador *****************
  2743 ;; Defined at:
  2744 ;;		line 171 in file "bibliotecas/hardware.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		None
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2758 ;;      Params:         0       0       0       0       0       0       0       0       0
  2759 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2760 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2761 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2762 ;;Total ram usage:        0 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    2
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_init_hardware
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text6
  2773  005082                     __ptext6:
  2774                           	opt stack 0
  2775  005082                     _init_oscilador:
  2776                           	opt stack 27
  2777                           
  2778                           ;hardware.c: 174: OSCCONbits.IRCF0 = 1;
  2779                           
  2780                           ;incstack = 0
  2781  005082  88D3               	bsf	4051,4,c	;volatile
  2782                           
  2783                           ;hardware.c: 175: OSCCONbits.IRCF1 = 1;
  2784  005084  8AD3               	bsf	4051,5,c	;volatile
  2785                           
  2786                           ;hardware.c: 176: OSCCONbits.IRCF2 = 1;
  2787  005086  8CD3               	bsf	4051,6,c	;volatile
  2788  005088  0012               	return		;funcret
  2789  00508A                     __end_of_init_oscilador:
  2790                           	opt stack 0
  2791                           tblptru	equ	0xFF8
  2792                           tblptrh	equ	0xFF7
  2793                           tblptrl	equ	0xFF6
  2794                           tablat	equ	0xFF5
  2795                           postinc0	equ	0xFEE
  2796                           wreg	equ	0xFE8
  2797                           postdec1	equ	0xFE5
  2798                           fsr1h	equ	0xFE2
  2799                           fsr1l	equ	0xFE1
  2800                           postinc2	equ	0xFDE
  2801                           status	equ	0xFD8
  2802                           
  2803 ;; *************** function _init_interrupt *****************
  2804 ;; Defined at:
  2805 ;;		line 98 in file "bibliotecas/hardware.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;		None
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;		None
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  1    wreg      void 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2819 ;;      Params:         0       0       0       0       0       0       0       0       0
  2820 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2821 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2822 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2823 ;;Total ram usage:        0 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; Hardware stack levels required when called:    2
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_init_hardware
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text7
  2834  005008                     __ptext7:
  2835                           	opt stack 0
  2836  005008                     _init_interrupt:
  2837                           	opt stack 27
  2838                           
  2839                           ;hardware.c: 100: INTCON = 0b11110000;
  2840                           
  2841                           ;incstack = 0
  2842  005008  0EF0               	movlw	240
  2843  00500A  6EF2               	movwf	intcon,c	;volatile
  2844                           
  2845                           ;hardware.c: 101: INTCON2 = 0b00000000;
  2846  00500C  0E00               	movlw	0
  2847  00500E  6EF1               	movwf	intcon2,c	;volatile
  2848                           
  2849                           ;hardware.c: 102: INTCON3 = 0b00000000;
  2850  005010  0E00               	movlw	0
  2851  005012  6EF0               	movwf	intcon3,c	;volatile
  2852                           
  2853                           ;hardware.c: 104: PIE1 = 0b00100000;
  2854  005014  0E20               	movlw	32
  2855  005016  6E9D               	movwf	3997,c	;volatile
  2856  005018  0012               	return		;funcret
  2857  00501A                     __end_of_init_interrupt:
  2858                           	opt stack 0
  2859                           tblptru	equ	0xFF8
  2860                           tblptrh	equ	0xFF7
  2861                           tblptrl	equ	0xFF6
  2862                           tablat	equ	0xFF5
  2863                           intcon	equ	0xFF2
  2864                           intcon2	equ	0xFF1
  2865                           intcon3	equ	0xFF0
  2866                           postinc0	equ	0xFEE
  2867                           wreg	equ	0xFE8
  2868                           postdec1	equ	0xFE5
  2869                           fsr1h	equ	0xFE2
  2870                           fsr1l	equ	0xFE1
  2871                           postinc2	equ	0xFDE
  2872                           status	equ	0xFD8
  2873                           
  2874 ;; *************** function _config_timer_zero *****************
  2875 ;; Defined at:
  2876 ;;		line 83 in file "bibliotecas/hardware.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;		None
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;		None
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      void 
  2883 ;; Registers used:
  2884 ;;		wreg, status,2, cstack
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2890 ;;      Params:         0       0       0       0       0       0       0       0       0
  2891 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2892 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2893 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2894 ;;Total ram usage:        0 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:    3
  2897 ;; This function calls:
  2898 ;;		_write_timer_zero
  2899 ;; This function is called by:
  2900 ;;		_init_hardware
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text8
  2905  004FAC                     __ptext8:
  2906                           	opt stack 0
  2907  004FAC                     _config_timer_zero:
  2908                           	opt stack 26
  2909                           
  2910                           ;hardware.c: 85: T0CON = 0b11000011;
  2911                           
  2912                           ;incstack = 0
  2913  004FAC  0EC3               	movlw	195
  2914  004FAE  6ED5               	movwf	4053,c	;volatile
  2915                           
  2916                           ;hardware.c: 86: SPPCON = 0b00000000;
  2917  004FB0  0E00               	movlw	0
  2918  004FB2  6E65               	movwf	3941,c	;volatile
  2919                           
  2920                           ;hardware.c: 87: SPPCFG = 0b00000000;
  2921  004FB4  0E00               	movlw	0
  2922  004FB6  6E63               	movwf	3939,c	;volatile
  2923                           
  2924                           ;hardware.c: 88: write_timer_zero(0x0083);
  2925  004FB8  0E00               	movlw	0
  2926  004FBA  6E17               	movwf	write_timer_zero@timer0+1,c
  2927  004FBC  0E83               	movlw	131
  2928  004FBE  6E16               	movwf	write_timer_zero@timer0,c
  2929  004FC0  EC0D  F028         	call	_write_timer_zero	;wreg free
  2930  004FC4  0012               	return		;funcret
  2931  004FC6                     __end_of_config_timer_zero:
  2932                           	opt stack 0
  2933                           tblptru	equ	0xFF8
  2934                           tblptrh	equ	0xFF7
  2935                           tblptrl	equ	0xFF6
  2936                           tablat	equ	0xFF5
  2937                           intcon	equ	0xFF2
  2938                           intcon2	equ	0xFF1
  2939                           intcon3	equ	0xFF0
  2940                           postinc0	equ	0xFEE
  2941                           wreg	equ	0xFE8
  2942                           postdec1	equ	0xFE5
  2943                           fsr1h	equ	0xFE2
  2944                           fsr1l	equ	0xFE1
  2945                           postinc2	equ	0xFDE
  2946                           status	equ	0xFD8
  2947                           
  2948 ;; *************** function _write_timer_zero *****************
  2949 ;; Defined at:
  2950 ;;		line 138 in file "bibliotecas/hardware.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  timer0          2   21[COMRAM] unsigned int 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  timer           2   23[COMRAM] struct Timers
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		None
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2964 ;;      Params:         2       0       0       0       0       0       0       0       0
  2965 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2966 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2967 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2968 ;;Total ram usage:        4 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:    2
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_config_timer_zero
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text9
  2979  00501A                     __ptext9:
  2980                           	opt stack 0
  2981  00501A                     _write_timer_zero:
  2982                           	opt stack 26
  2983                           
  2984                           ;hardware.c: 140: union Timers timer;
  2985                           ;hardware.c: 142: timer.lt = timer0;
  2986                           
  2987                           ;incstack = 0
  2988  00501A  C016  F018         	movff	write_timer_zero@timer0,write_timer_zero@timer
  2989  00501E  C017  F019         	movff	write_timer_zero@timer0+1,write_timer_zero@timer+1
  2990                           
  2991                           ;hardware.c: 144: TMR0H = timer.bt[1];
  2992  005022  C019  FFD7         	movff	write_timer_zero@timer+1,4055	;volatile
  2993                           
  2994                           ;hardware.c: 145: TMR0L = timer.bt[0];
  2995  005026  C018  FFD6         	movff	write_timer_zero@timer,4054	;volatile
  2996  00502A  0012               	return		;funcret
  2997  00502C                     __end_of_write_timer_zero:
  2998                           	opt stack 0
  2999                           tblptru	equ	0xFF8
  3000                           tblptrh	equ	0xFF7
  3001                           tblptrl	equ	0xFF6
  3002                           tablat	equ	0xFF5
  3003                           intcon	equ	0xFF2
  3004                           intcon2	equ	0xFF1
  3005                           intcon3	equ	0xFF0
  3006                           postinc0	equ	0xFEE
  3007                           wreg	equ	0xFE8
  3008                           postdec1	equ	0xFE5
  3009                           fsr1h	equ	0xFE2
  3010                           fsr1l	equ	0xFE1
  3011                           postinc2	equ	0xFDE
  3012                           status	equ	0xFD8
  3013                           
  3014 ;; *************** function _config_timer_dois *****************
  3015 ;; Defined at:
  3016 ;;		line 200 in file "bibliotecas/hardware.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;		None
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;		None
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		wreg, status,2
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3030 ;;      Params:         0       0       0       0       0       0       0       0       0
  3031 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3033 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3034 ;;Total ram usage:        0 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    2
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_init_hardware
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text10
  3045  00505E                     __ptext10:
  3046                           	opt stack 0
  3047  00505E                     _config_timer_dois:
  3048                           	opt stack 27
  3049                           
  3050                           ;hardware.c: 202: T2CON = 0b00000100;
  3051                           
  3052                           ;incstack = 0
  3053  00505E  0E04               	movlw	4
  3054  005060  6ECA               	movwf	4042,c	;volatile
  3055                           
  3056                           ;hardware.c: 203: TMR2 = 0;
  3057  005062  0E00               	movlw	0
  3058  005064  6ECC               	movwf	4044,c	;volatile
  3059                           
  3060                           ;hardware.c: 204: PR2 = 0xFF;
  3061  005066  68CB               	setf	4043,c	;volatile
  3062  005068  0012               	return		;funcret
  3063  00506A                     __end_of_config_timer_dois:
  3064                           	opt stack 0
  3065                           tblptru	equ	0xFF8
  3066                           tblptrh	equ	0xFF7
  3067                           tblptrl	equ	0xFF6
  3068                           tablat	equ	0xFF5
  3069                           intcon	equ	0xFF2
  3070                           intcon2	equ	0xFF1
  3071                           intcon3	equ	0xFF0
  3072                           postinc0	equ	0xFEE
  3073                           wreg	equ	0xFE8
  3074                           postdec1	equ	0xFE5
  3075                           fsr1h	equ	0xFE2
  3076                           fsr1l	equ	0xFE1
  3077                           postinc2	equ	0xFDE
  3078                           status	equ	0xFD8
  3079                           
  3080 ;; *************** function _inicializa_tarefas *****************
  3081 ;; Defined at:
  3082 ;;		line 157 in file "main.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2, status,0
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3096 ;;      Params:         0       0       0       0       0       0       0       0       0
  3097 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3099 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3100 ;;Total ram usage:        0 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    2
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text11
  3111  004DF6                     __ptext11:
  3112                           	opt stack 0
  3113  004DF6                     _inicializa_tarefas:
  3114                           	opt stack 28
  3115                           
  3116                           ;main.c: 160: p_tarefas[0] = SDCard;
  3117                           
  3118                           ;incstack = 0
  3119  004DF6  0E10               	movlw	low _SDCard
  3120  004DF8  0101               	movlb	1	; () banked
  3121  004DFA  6F52               	movwf	_p_tarefas& (0+255),b
  3122  004DFC  0E39               	movlw	high _SDCard
  3123  004DFE  0101               	movlb	1	; () banked
  3124  004E00  6F53               	movwf	(_p_tarefas+1)& (0+255),b
  3125                           
  3126                           ; BSR set to: 1
  3127                           ;main.c: 164: tempo_backup[0] = 5000;
  3128  004E02  0E13               	movlw	19
  3129  004E04  0101               	movlb	1	; () banked
  3130  004E06  6F4F               	movwf	(_tempo_backup+1)& (0+255),b
  3131  004E08  0E88               	movlw	136
  3132  004E0A  6F4E               	movwf	_tempo_backup& (0+255),b
  3133                           
  3134                           ; BSR set to: 1
  3135                           ;main.c: 165: tempo_backup[1] = 5000;
  3136  004E0C  0E13               	movlw	19
  3137  004E0E  0101               	movlb	1	; () banked
  3138  004E10  6F51               	movwf	(_tempo_backup+3)& (0+255),b
  3139  004E12  0E88               	movlw	136
  3140  004E14  6F50               	movwf	(_tempo_backup+2)& (0+255),b
  3141                           
  3142                           ; BSR set to: 1
  3143                           ;main.c: 170: tempo_tarefa[0] = 5000;
  3144  004E16  0E13               	movlw	19
  3145  004E18  0101               	movlb	1	; () banked
  3146  004E1A  6F4B               	movwf	(_tempo_tarefa+1)& (0+255),b
  3147  004E1C  0E88               	movlw	136
  3148  004E1E  6F4A               	movwf	_tempo_tarefa& (0+255),b
  3149                           
  3150                           ; BSR set to: 1
  3151                           ;main.c: 171: tempo_tarefa[1] = 5000;
  3152  004E20  0E13               	movlw	19
  3153  004E22  0101               	movlb	1	; () banked
  3154  004E24  6F4D               	movwf	(_tempo_tarefa+3)& (0+255),b
  3155  004E26  0E88               	movlw	136
  3156  004E28  6F4C               	movwf	(_tempo_tarefa+2)& (0+255),b
  3157                           
  3158                           ; BSR set to: 1
  3159                           ;main.c: 175: tarefa_em_execucao = 0;
  3160  004E2A  0E00               	movlw	0
  3161  004E2C  6E3F               	movwf	_tarefa_em_execucao,c	;volatile
  3162                           
  3163                           ; BSR set to: 1
  3164  004E2E  0012               	return		;funcret
  3165  004E30                     __end_of_inicializa_tarefas:
  3166                           	opt stack 0
  3167                           tblptru	equ	0xFF8
  3168                           tblptrh	equ	0xFF7
  3169                           tblptrl	equ	0xFF6
  3170                           tablat	equ	0xFF5
  3171                           intcon	equ	0xFF2
  3172                           intcon2	equ	0xFF1
  3173                           intcon3	equ	0xFF0
  3174                           postinc0	equ	0xFEE
  3175                           wreg	equ	0xFE8
  3176                           postdec1	equ	0xFE5
  3177                           fsr1h	equ	0xFE2
  3178                           fsr1l	equ	0xFE1
  3179                           postinc2	equ	0xFDE
  3180                           status	equ	0xFD8
  3181                           
  3182 ;; *************** function _inicializa_shrc *****************
  3183 ;; Defined at:
  3184 ;;		line 48 in file "bibliotecas/SHRC.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		None
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3198 ;;      Params:         0       0       0       0       0       0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3201 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3202 ;;Total ram usage:        0 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    2
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_main
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text12
  3213  00506A                     __ptext12:
  3214                           	opt stack 0
  3215  00506A                     _inicializa_shrc:
  3216                           	opt stack 28
  3217                           
  3218                           ;SHRC.c: 51: TRISBbits.RB6 = 0;
  3219                           
  3220                           ; BSR set to: 1
  3221                           ;incstack = 0
  3222  00506A  9C93               	bcf	3987,6,c	;volatile
  3223                           
  3224                           ;SHRC.c: 52: TRISBbits.RB5 = 1;
  3225  00506C  8A93               	bsf	3987,5,c	;volatile
  3226                           
  3227                           ;SHRC.c: 53: TRISBbits.RB7 = 0;
  3228  00506E  9E93               	bcf	3987,7,c	;volatile
  3229                           
  3230                           ;SHRC.c: 56: LATBbits.LATB6 = 0;
  3231  005070  9C8A               	bcf	3978,6,c	;volatile
  3232                           
  3233                           ;SHRC.c: 57: LATBbits.LATB7 = 0;
  3234  005072  9E8A               	bcf	3978,7,c	;volatile
  3235  005074  0012               	return		;funcret
  3236  005076                     __end_of_inicializa_shrc:
  3237                           	opt stack 0
  3238                           tblptru	equ	0xFF8
  3239                           tblptrh	equ	0xFF7
  3240                           tblptrl	equ	0xFF6
  3241                           tablat	equ	0xFF5
  3242                           intcon	equ	0xFF2
  3243                           intcon2	equ	0xFF1
  3244                           intcon3	equ	0xFF0
  3245                           postinc0	equ	0xFEE
  3246                           wreg	equ	0xFE8
  3247                           postdec1	equ	0xFE5
  3248                           fsr1h	equ	0xFE2
  3249                           fsr1l	equ	0xFE1
  3250                           postinc2	equ	0xFDE
  3251                           status	equ	0xFD8
  3252                           
  3253 ;; *************** function _escalonador *****************
  3254 ;; Defined at:
  3255 ;;		line 186 in file "main.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;  cont            1   88[BANK1 ] unsigned char 
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3269 ;;      Params:         0       0       0       0       0       0       0       0       0
  3270 ;;      Locals:         0       0       1       0       0       0       0       0       0
  3271 ;;      Temps:          0       0       2       0       0       0       0       0       0
  3272 ;;      Totals:         0       0       3       0       0       0       0       0       0
  3273 ;;Total ram usage:        3 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:   14
  3276 ;; This function calls:
  3277 ;;		_SDCard
  3278 ;; This function is called by:
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text13
  3284  004276                     __ptext13:
  3285                           	opt stack 0
  3286  004276                     _escalonador:
  3287                           	opt stack 16
  3288                           
  3289                           ;main.c: 188: unsigned char cont;
  3290                           ;main.c: 189: for(cont = 0; cont<2;cont++)
  3291                           
  3292                           ;incstack = 0
  3293  004276  0E00               	movlw	0
  3294  004278  0101               	movlb	1	; () banked
  3295  00427A  6FCB               	movwf	escalonador@cont& (0+255),b
  3296  00427C                     l12175:
  3297                           
  3298                           ; BSR set to: 1
  3299  00427C  0E01               	movlw	1
  3300  00427E  0101               	movlb	1	; () banked
  3301  004280  65CB               	cpfsgt	escalonador@cont& (0+255),b
  3302  004282  D001               	goto	l12179
  3303  004284  0012               	return	
  3304  004286                     l12179:
  3305                           
  3306                           ; BSR set to: 1
  3307                           ;main.c: 190: {
  3308                           ;main.c: 191: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  3309  004286  0101               	movlb	1	; () banked
  3310  004288  51CB               	movf	escalonador@cont& (0+255),w,b
  3311  00428A  0D02               	mullw	2
  3312  00428C  0E52               	movlw	low _p_tarefas
  3313  00428E  24F3               	addwf	prodl,w,c
  3314  004290  6ED9               	movwf	fsr2l,c
  3315  004292  0E01               	movlw	high _p_tarefas
  3316  004294  20F4               	addwfc	prodh,w,c
  3317  004296  6EDA               	movwf	fsr2h,c
  3318  004298  50DE               	movf	postinc2,w,c
  3319  00429A  10DE               	iorwf	postinc2,w,c
  3320  00429C  B4D8               	btfsc	status,2,c
  3321  00429E  D041               	goto	l12191
  3322                           
  3323                           ; BSR set to: 1
  3324  0042A0  0101               	movlb	1	; () banked
  3325  0042A2  51CB               	movf	escalonador@cont& (0+255),w,b
  3326  0042A4  0D02               	mullw	2
  3327  0042A6  0E4A               	movlw	low _tempo_tarefa
  3328  0042A8  24F3               	addwf	prodl,w,c
  3329  0042AA  6ED9               	movwf	fsr2l,c
  3330  0042AC  0E01               	movlw	high _tempo_tarefa
  3331  0042AE  20F4               	addwfc	prodh,w,c
  3332  0042B0  6EDA               	movwf	fsr2h,c
  3333  0042B2  50DE               	movf	postinc2,w,c
  3334  0042B4  10DE               	iorwf	postinc2,w,c
  3335  0042B6  A4D8               	btfss	status,2,c
  3336  0042B8  D034               	goto	l12191
  3337                           
  3338                           ; BSR set to: 1
  3339                           ;main.c: 192: {
  3340                           ;main.c: 193: tarefa_em_execucao = 1;
  3341  0042BA  0E01               	movlw	1
  3342  0042BC  6E3F               	movwf	_tarefa_em_execucao,c	;volatile
  3343                           
  3344                           ;main.c: 194: timeout_tarefa = 65000;
  3345  0042BE  0EFD               	movlw	253
  3346  0042C0  0101               	movlb	1	; () banked
  3347  0042C2  6F59               	movwf	(_timeout_tarefa+1)& (0+255),b
  3348  0042C4  0EE8               	movlw	232
  3349  0042C6  6F58               	movwf	_timeout_tarefa& (0+255),b
  3350                           
  3351                           ; BSR set to: 1
  3352                           ;main.c: 195: p_tarefas[cont]();
  3353  0042C8  0101               	movlb	1	; () banked
  3354  0042CA  51CB               	movf	escalonador@cont& (0+255),w,b
  3355  0042CC  0D02               	mullw	2
  3356  0042CE  0E52               	movlw	low _p_tarefas
  3357  0042D0  24F3               	addwf	prodl,w,c
  3358  0042D2  6ED9               	movwf	fsr2l,c
  3359  0042D4  0E01               	movlw	high _p_tarefas
  3360  0042D6  20F4               	addwfc	prodh,w,c
  3361  0042D8  6EDA               	movwf	fsr2h,c
  3362  0042DA  D801               	call	u13938
  3363  0042DC  D00A               	goto	l12187
  3364  0042DE                     u13938:
  3365  0042DE  0005               	push	
  3366  0042E0  6EFA               	movwf	pclath,c
  3367  0042E2  50DE               	movf	postinc2,w,c
  3368  0042E4  6EFD               	movwf	tosl,c
  3369  0042E6  50DE               	movf	postinc2,w,c
  3370  0042E8  6EFE               	movwf	tosh,c
  3371  0042EA  50F8               	movf	tblptru,w,c
  3372  0042EC  6EFF               	movwf	tosu,c
  3373  0042EE  50FA               	movf	pclath,w,c
  3374  0042F0  0012               	return		;indir
  3375  0042F2                     l12187:
  3376                           
  3377                           ;main.c: 196: tarefa_em_execucao = 0;
  3378  0042F2  0E00               	movlw	0
  3379  0042F4  6E3F               	movwf	_tarefa_em_execucao,c	;volatile
  3380                           
  3381                           ;main.c: 197: tempo_tarefa[cont] = tempo_backup[cont];
  3382  0042F6  0101               	movlb	1	; () banked
  3383  0042F8  51CB               	movf	escalonador@cont& (0+255),w,b
  3384  0042FA  0D02               	mullw	2
  3385  0042FC  0E4E               	movlw	low _tempo_backup
  3386  0042FE  24F3               	addwf	prodl,w,c
  3387  004300  6ED9               	movwf	fsr2l,c
  3388  004302  0E01               	movlw	high _tempo_backup
  3389  004304  20F4               	addwfc	prodh,w,c
  3390  004306  6EDA               	movwf	fsr2h,c
  3391  004308  0101               	movlb	1	; () banked
  3392  00430A  51CB               	movf	escalonador@cont& (0+255),w,b
  3393  00430C  0D02               	mullw	2
  3394  00430E  0E4A               	movlw	low _tempo_tarefa
  3395  004310  24F3               	addwf	prodl,w,c
  3396  004312  6EE1               	movwf	fsr1l,c
  3397  004314  0E01               	movlw	high _tempo_tarefa
  3398  004316  20F4               	addwfc	prodh,w,c
  3399  004318  6EE2               	movwf	fsr1h,c
  3400  00431A  CFDE FFE6          	movff	postinc2,postinc1
  3401  00431E  CFDD FFE5          	movff	postdec2,postdec1
  3402  004322                     l12191:
  3403                           
  3404                           ; BSR set to: 1
  3405  004322  0101               	movlb	1	; () banked
  3406  004324  2BCB               	incf	escalonador@cont& (0+255),f,b
  3407  004326  D7AA               	goto	l12175
  3408  004328                     __end_of_escalonador:
  3409                           	opt stack 0
  3410                           tosu	equ	0xFFF
  3411                           tosh	equ	0xFFE
  3412                           tosl	equ	0xFFD
  3413                           pclath	equ	0xFFA
  3414                           tblptru	equ	0xFF8
  3415                           tblptrh	equ	0xFF7
  3416                           tblptrl	equ	0xFF6
  3417                           tablat	equ	0xFF5
  3418                           prodh	equ	0xFF4
  3419                           prodl	equ	0xFF3
  3420                           intcon	equ	0xFF2
  3421                           intcon2	equ	0xFF1
  3422                           intcon3	equ	0xFF0
  3423                           postinc0	equ	0xFEE
  3424                           wreg	equ	0xFE8
  3425                           postinc1	equ	0xFE6
  3426                           postdec1	equ	0xFE5
  3427                           fsr1h	equ	0xFE2
  3428                           fsr1l	equ	0xFE1
  3429                           postinc2	equ	0xFDE
  3430                           postdec2	equ	0xFDD
  3431                           fsr2h	equ	0xFDA
  3432                           fsr2l	equ	0xFD9
  3433                           status	equ	0xFD8
  3434                           
  3435 ;; *************** function _SDCard *****************
  3436 ;; Defined at:
  3437 ;;		line 151 in file "bibliotecas/SDCard.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  fil            32    1[BANK2 ] struct _FIL
  3442 ;;  br              2    0        unsigned int 
  3443 ;;  bw              2    0        unsigned short 
  3444 ;;  FResult         1    0[BANK2 ] enum E70
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3454 ;;      Params:         0       0       0       0       0       0       0       0       0
  3455 ;;      Locals:         0       0       0      33       0       0       0       0       0
  3456 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3457 ;;      Totals:         0       2       0      33       0       0       0       0       0
  3458 ;;Total ram usage:       35 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:   13
  3461 ;; This function calls:
  3462 ;;		_escreve_frase_ram_lcd
  3463 ;;		_escreve_inteiro_lcd
  3464 ;;		_f_close
  3465 ;;		_f_mount
  3466 ;;		_f_open
  3467 ;;		_posicao_cursor_lcd
  3468 ;;		_proceed
  3469 ;; This function is called by:
  3470 ;;		_inicializa_tarefas
  3471 ;;		_escalonador
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text14
  3476  003910                     __ptext14:
  3477                           	opt stack 0
  3478  003910                     _SDCard:
  3479                           	opt stack 16
  3480                           
  3481                           ;SDCard.c: 153: T0CONbits.TMR0ON = 0;
  3482                           
  3483                           ; BSR set to: 1
  3484                           ;incstack = 0
  3485  003910  9ED5               	bcf	4053,7,c	;volatile
  3486                           
  3487                           ;SDCard.c: 156: FRESULT FResult;
  3488                           ;SDCard.c: 157: FIL fil;
  3489                           ;SDCard.c: 158: WORD bw;
  3490                           ;SDCard.c: 159: UINT br;
  3491                           ;SDCard.c: 163: static char init;
  3492                           ;SDCard.c: 164: if(init !=1)
  3493  003912  0101               	movlb	1	; () banked
  3494  003914  055C               	decf	SDCard@init& (0+255),w,b
  3495  003916  B4D8               	btfsc	status,2,c
  3496  003918  0012               	return	
  3497                           
  3498                           ; BSR set to: 1
  3499                           ;SDCard.c: 165: {
  3500                           ;SDCard.c: 168: init = 1;
  3501  00391A  0E01               	movlw	1
  3502  00391C  0101               	movlb	1	; () banked
  3503  00391E  6F5C               	movwf	SDCard@init& (0+255),b
  3504                           
  3505                           ; BSR set to: 1
  3506                           ;SDCard.c: 175: proceed();
  3507  003920  EC28  F028         	call	_proceed	;wreg free
  3508                           
  3509                           ;SDCard.c: 177: _delay((unsigned long)((1)*(48000000/4000.0)));
  3510  003924  0E10               	movlw	16
  3511  003926  0100               	movlb	0	; () banked
  3512  003928  6FF7               	movwf	??_SDCard& (0+255),b
  3513  00392A  0E94               	movlw	148
  3514  00392C                     u16237:
  3515  00392C  2EE8               	decfsz	wreg,f,c
  3516  00392E  D7FE               	bra	u16237
  3517  003930  2FF7               	decfsz	??_SDCard& (0+255),f,b
  3518  003932  D7FC               	bra	u16237
  3519  003934  F000               	nop	
  3520                           
  3521                           ;SDCard.c: 178: FResult = f_mount(0, &fs);
  3522  003936  0E30               	movlw	low _fs
  3523  003938  6E16               	movwf	f_mount@fs,c
  3524  00393A  0E03               	movlw	high _fs
  3525  00393C  6E17               	movwf	f_mount@fs+1,c
  3526  00393E  0E00               	movlw	0
  3527  003940  ECCF  F025         	call	_f_mount
  3528  003944  0102               	movlb	2	; () banked
  3529  003946  6FDE               	movwf	SDCard@FResult& (0+255),b
  3530                           
  3531                           ; BSR set to: 2
  3532                           ;SDCard.c: 179: LATBbits.LATB4 = 1;
  3533  003948  888A               	bsf	3978,4,c	;volatile
  3534                           
  3535                           ; BSR set to: 2
  3536                           ;SDCard.c: 180: if(FResult == FR_OK)
  3537  00394A  0102               	movlb	2	; () banked
  3538  00394C  51DE               	movf	SDCard@FResult& (0+255),w,b
  3539  00394E  0102               	movlb	2	; () banked
  3540  003950  A4D8               	btfss	status,2,c
  3541  003952  D023               	goto	l12055
  3542                           
  3543                           ; BSR set to: 2
  3544                           ;SDCard.c: 181: {
  3545                           ;SDCard.c: 182: posicao_cursor_lcd(1,0);
  3546  003954  0E00               	movlw	0
  3547  003956  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3548  003958  0E01               	movlw	1
  3549  00395A  EC8A  F024         	call	_posicao_cursor_lcd
  3550                           
  3551                           ;SDCard.c: 183: escreve_frase_ram_lcd("Sistema Montado");
  3552  00395E  0ECF               	movlw	low STR_26
  3553  003960  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  3554  003962  0E61               	movlw	high STR_26
  3555  003964  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  3556  003966  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3557                           
  3558                           ;SDCard.c: 184: posicao_cursor_lcd(2,14);
  3559  00396A  0E0E               	movlw	14
  3560  00396C  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3561  00396E  0E02               	movlw	2
  3562  003970  EC8A  F024         	call	_posicao_cursor_lcd
  3563                           
  3564                           ;SDCard.c: 185: escreve_inteiro_lcd(FResult);
  3565  003974  C2DE  F02E         	movff	SDCard@FResult,escreve_inteiro_lcd@valor
  3566  003978  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
  3567  00397A  ECDD  F026         	call	_escreve_inteiro_lcd	;wreg free
  3568                           
  3569                           ;SDCard.c: 186: _delay((unsigned long)((100)*(48000000/4000.0)));
  3570  00397E  0E07               	movlw	7
  3571  003980  0100               	movlb	0	; () banked
  3572  003982  6FF8               	movwf	(??_SDCard+1)& (0+255),b
  3573  003984  0E17               	movlw	23
  3574  003986  0100               	movlb	0	; () banked
  3575  003988  6FF7               	movwf	??_SDCard& (0+255),b
  3576  00398A  0E6A               	movlw	106
  3577  00398C                     u16247:
  3578  00398C  2EE8               	decfsz	wreg,f,c
  3579  00398E  D7FE               	bra	u16247
  3580  003990  2FF7               	decfsz	??_SDCard& (0+255),f,b
  3581  003992  D7FC               	bra	u16247
  3582  003994  2FF8               	decfsz	(??_SDCard+1)& (0+255),f,b
  3583  003996  D7FA               	bra	u16247
  3584  003998  F000               	nop	
  3585  00399A                     l12055:
  3586                           
  3587                           ;SDCard.c: 187: }
  3588                           ;SDCard.c: 190: if(FResult == FR_OK)
  3589  00399A  0102               	movlb	2	; () banked
  3590  00399C  51DE               	movf	SDCard@FResult& (0+255),w,b
  3591  00399E  0102               	movlb	2	; () banked
  3592  0039A0  A4D8               	btfss	status,2,c
  3593  0039A2  0012               	return	
  3594                           
  3595                           ; BSR set to: 2
  3596                           ;SDCard.c: 191: {
  3597                           ;SDCard.c: 193: proceed();
  3598  0039A4  EC28  F028         	call	_proceed	;wreg free
  3599                           
  3600                           ;SDCard.c: 194: _delay((unsigned long)((1)*(48000000/4000.0)));
  3601  0039A8  0E10               	movlw	16
  3602  0039AA  0100               	movlb	0	; () banked
  3603  0039AC  6FF7               	movwf	??_SDCard& (0+255),b
  3604  0039AE  0E94               	movlw	148
  3605  0039B0                     u16257:
  3606  0039B0  2EE8               	decfsz	wreg,f,c
  3607  0039B2  D7FE               	bra	u16257
  3608  0039B4  2FF7               	decfsz	??_SDCard& (0+255),f,b
  3609  0039B6  D7FC               	bra	u16257
  3610  0039B8  F000               	nop	
  3611                           
  3612                           ;SDCard.c: 195: posicao_cursor_lcd(1,0);
  3613  0039BA  0E00               	movlw	0
  3614  0039BC  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3615  0039BE  0E01               	movlw	1
  3616  0039C0  EC8A  F024         	call	_posicao_cursor_lcd
  3617                           
  3618                           ;SDCard.c: 196: _delay((unsigned long)((2000)*(48000000/4000.0)));
  3619  0039C4  0E7A               	movlw	122
  3620  0039C6  0100               	movlb	0	; () banked
  3621  0039C8  6FF8               	movwf	(??_SDCard+1)& (0+255),b
  3622  0039CA  0EC1               	movlw	193
  3623  0039CC  0100               	movlb	0	; () banked
  3624  0039CE  6FF7               	movwf	??_SDCard& (0+255),b
  3625  0039D0  0E81               	movlw	129
  3626  0039D2                     u16267:
  3627  0039D2  2EE8               	decfsz	wreg,f,c
  3628  0039D4  D7FE               	bra	u16267
  3629  0039D6  2FF7               	decfsz	??_SDCard& (0+255),f,b
  3630  0039D8  D7FC               	bra	u16267
  3631  0039DA  2FF8               	decfsz	(??_SDCard+1)& (0+255),f,b
  3632  0039DC  D7FA               	bra	u16267
  3633  0039DE  D000               	nop2	
  3634                           
  3635                           ;SDCard.c: 197: escreve_frase_ram_lcd("Criando arquivo");
  3636  0039E0  0EDF               	movlw	low STR_27
  3637  0039E2  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  3638  0039E4  0E61               	movlw	high STR_27
  3639  0039E6  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  3640  0039E8  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3641                           
  3642                           ;SDCard.c: 198: LATBbits.LATB4 = 1;
  3643  0039EC  888A               	bsf	3978,4,c	;volatile
  3644                           
  3645                           ;SDCard.c: 201: FResult = f_open(&fil,"teste.txt", 0x00);
  3646  0039EE  0EDF               	movlw	low SDCard@fil
  3647  0039F0  0101               	movlb	1	; () banked
  3648  0039F2  6F81               	movwf	f_open@fp& (0+255),b
  3649  0039F4  0E02               	movlw	high SDCard@fil
  3650  0039F6  0101               	movlb	1	; () banked
  3651  0039F8  6F82               	movwf	(f_open@fp+1)& (0+255),b
  3652  0039FA  0E3E               	movlw	low STR_28
  3653  0039FC  0101               	movlb	1	; () banked
  3654  0039FE  6F83               	movwf	f_open@path& (0+255),b
  3655  003A00  0E62               	movlw	high STR_28
  3656  003A02  0101               	movlb	1	; () banked
  3657  003A04  6F84               	movwf	(f_open@path+1)& (0+255),b
  3658  003A06  0E00               	movlw	0
  3659  003A08  0101               	movlb	1	; () banked
  3660  003A0A  6F85               	movwf	f_open@mode& (0+255),b
  3661  003A0C  EC32  F006         	call	_f_open	;wreg free
  3662  003A10  0102               	movlb	2	; () banked
  3663  003A12  6FDE               	movwf	SDCard@FResult& (0+255),b
  3664                           
  3665                           ; BSR set to: 2
  3666                           ;SDCard.c: 203: posicao_cursor_lcd(2,0);
  3667  003A14  0E00               	movlw	0
  3668  003A16  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3669  003A18  0E02               	movlw	2
  3670  003A1A  EC8A  F024         	call	_posicao_cursor_lcd
  3671                           
  3672                           ;SDCard.c: 204: escreve_frase_ram_lcd("Resultado");
  3673  003A1E  0E34               	movlw	low STR_29
  3674  003A20  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  3675  003A22  0E62               	movlw	high STR_29
  3676  003A24  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  3677  003A26  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3678                           
  3679                           ;SDCard.c: 205: posicao_cursor_lcd(2,14);
  3680  003A2A  0E0E               	movlw	14
  3681  003A2C  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3682  003A2E  0E02               	movlw	2
  3683  003A30  EC8A  F024         	call	_posicao_cursor_lcd
  3684                           
  3685                           ;SDCard.c: 206: escreve_inteiro_lcd(FResult);
  3686  003A34  C2DE  F02E         	movff	SDCard@FResult,escreve_inteiro_lcd@valor
  3687  003A38  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
  3688  003A3A  ECDD  F026         	call	_escreve_inteiro_lcd	;wreg free
  3689                           
  3690                           ;SDCard.c: 209: if(FResult == FR_OK)
  3691  003A3E  0102               	movlb	2	; () banked
  3692  003A40  51DE               	movf	SDCard@FResult& (0+255),w,b
  3693  003A42  0102               	movlb	2	; () banked
  3694  003A44  A4D8               	btfss	status,2,c
  3695  003A46  D067               	goto	l1313
  3696                           
  3697                           ; BSR set to: 2
  3698                           ;SDCard.c: 210: {
  3699                           ;SDCard.c: 217: posicao_cursor_lcd(2,14);
  3700  003A48  0E0E               	movlw	14
  3701  003A4A  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3702  003A4C  0E02               	movlw	2
  3703  003A4E  EC8A  F024         	call	_posicao_cursor_lcd
  3704                           
  3705                           ;SDCard.c: 218: escreve_frase_ram_lcd(FResult);
  3706  003A52  0102               	movlb	2	; () banked
  3707  003A54  51DE               	movf	SDCard@FResult& (0+255),w,b
  3708  003A56  0100               	movlb	0	; () banked
  3709  003A58  6FF7               	movwf	??_SDCard& (0+255),b
  3710  003A5A  6BF8               	clrf	(??_SDCard+1)& (0+255),b
  3711  003A5C  C0F7  F019         	movff	??_SDCard,escreve_frase_ram_lcd@buffer
  3712  003A60  C0F8  F01A         	movff	??_SDCard+1,escreve_frase_ram_lcd@buffer+1
  3713  003A64  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3714                           
  3715                           ;SDCard.c: 221: if(FResult == FR_OK)
  3716  003A68  0102               	movlb	2	; () banked
  3717  003A6A  51DE               	movf	SDCard@FResult& (0+255),w,b
  3718  003A6C  0102               	movlb	2	; () banked
  3719  003A6E  A4D8               	btfss	status,2,c
  3720  003A70  D02D               	goto	l12097
  3721                           
  3722                           ; BSR set to: 2
  3723                           ;SDCard.c: 222: {
  3724                           ;SDCard.c: 225: posicao_cursor_lcd(2,0);
  3725  003A72  0E00               	movlw	0
  3726  003A74  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3727  003A76  0E02               	movlw	2
  3728  003A78  EC8A  F024         	call	_posicao_cursor_lcd
  3729                           
  3730                           ;SDCard.c: 226: escreve_frase_ram_lcd(buff);
  3731  003A7C  0ECA               	movlw	low _buff
  3732  003A7E  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  3733  003A80  0E02               	movlw	high _buff
  3734  003A82  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  3735  003A84  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3736                           
  3737                           ;SDCard.c: 227: f_close(&fil);
  3738  003A88  0EDF               	movlw	low SDCard@fil
  3739  003A8A  0100               	movlb	0	; () banked
  3740  003A8C  6FA9               	movwf	f_close@fp& (0+255),b
  3741  003A8E  0E02               	movlw	high SDCard@fil
  3742  003A90  0100               	movlb	0	; () banked
  3743  003A92  6FAA               	movwf	(f_close@fp+1)& (0+255),b
  3744  003A94  EC64  F027         	call	_f_close	;wreg free
  3745                           
  3746                           ;SDCard.c: 229: posicao_cursor_lcd(2,0);
  3747  003A98  0E00               	movlw	0
  3748  003A9A  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3749  003A9C  0E02               	movlw	2
  3750  003A9E  EC8A  F024         	call	_posicao_cursor_lcd
  3751                           
  3752                           ;SDCard.c: 230: escreve_frase_ram_lcd("Arquivo renomeado");
  3753  003AA2  0E8A               	movlw	low STR_30
  3754  003AA4  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  3755  003AA6  0E61               	movlw	high STR_30
  3756  003AA8  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  3757  003AAA  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3758                           
  3759                           ;SDCard.c: 231: _delay((unsigned long)((1000)*(48000000/4000.0)));
  3760  003AAE  0E3D               	movlw	61
  3761  003AB0  0100               	movlb	0	; () banked
  3762  003AB2  6FF8               	movwf	(??_SDCard+1)& (0+255),b
  3763  003AB4  0EE1               	movlw	225
  3764  003AB6  0100               	movlb	0	; () banked
  3765  003AB8  6FF7               	movwf	??_SDCard& (0+255),b
  3766  003ABA  0E3F               	movlw	63
  3767  003ABC                     u16277:
  3768  003ABC  2EE8               	decfsz	wreg,f,c
  3769  003ABE  D7FE               	bra	u16277
  3770  003AC0  2FF7               	decfsz	??_SDCard& (0+255),f,b
  3771  003AC2  D7FC               	bra	u16277
  3772  003AC4  2FF8               	decfsz	(??_SDCard+1)& (0+255),f,b
  3773  003AC6  D7FA               	bra	u16277
  3774  003AC8  D000               	nop2	
  3775                           
  3776                           ;SDCard.c: 232: }
  3777  003ACA  0012               	return	
  3778  003ACC                     l12097:
  3779                           
  3780                           ;SDCard.c: 233: else
  3781                           ;SDCard.c: 234: {
  3782                           ;SDCard.c: 235: posicao_cursor_lcd(2,0);
  3783  003ACC  0E00               	movlw	0
  3784  003ACE  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3785  003AD0  0E02               	movlw	2
  3786  003AD2  EC8A  F024         	call	_posicao_cursor_lcd
  3787                           
  3788                           ;SDCard.c: 236: escreve_frase_ram_lcd("ERRO");
  3789  003AD6  0E69               	movlw	low STR_31
  3790  003AD8  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  3791  003ADA  0E62               	movlw	high STR_31
  3792  003ADC  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  3793  003ADE  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3794                           
  3795                           ;SDCard.c: 237: posicao_cursor_lcd(1,0);
  3796  003AE2  0E00               	movlw	0
  3797  003AE4  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3798  003AE6  0E01               	movlw	1
  3799  003AE8  EC8A  F024         	call	_posicao_cursor_lcd
  3800                           
  3801                           ;SDCard.c: 238: escreve_inteiro_lcd(FResult);
  3802  003AEC  C2DE  F02E         	movff	SDCard@FResult,escreve_inteiro_lcd@valor
  3803  003AF0  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
  3804  003AF2  ECDD  F026         	call	_escreve_inteiro_lcd	;wreg free
  3805                           
  3806                           ;SDCard.c: 239: _delay((unsigned long)((1000)*(48000000/4000.0)));
  3807  003AF6  0E3D               	movlw	61
  3808  003AF8  0100               	movlb	0	; () banked
  3809  003AFA  6FF8               	movwf	(??_SDCard+1)& (0+255),b
  3810  003AFC  0EE1               	movlw	225
  3811  003AFE  0100               	movlb	0	; () banked
  3812  003B00  6FF7               	movwf	??_SDCard& (0+255),b
  3813  003B02  0E3F               	movlw	63
  3814  003B04                     u16287:
  3815  003B04  2EE8               	decfsz	wreg,f,c
  3816  003B06  D7FE               	bra	u16287
  3817  003B08  2FF7               	decfsz	??_SDCard& (0+255),f,b
  3818  003B0A  D7FC               	bra	u16287
  3819  003B0C  2FF8               	decfsz	(??_SDCard+1)& (0+255),f,b
  3820  003B0E  D7FA               	bra	u16287
  3821  003B10  D000               	nop2	
  3822                           
  3823                           ;SDCard.c: 240: T0CONbits.TMR0ON = 1;
  3824  003B12  8ED5               	bsf	4053,7,c	;volatile
  3825                           
  3826                           ;SDCard.c: 241: }
  3827                           ;SDCard.c: 258: }
  3828  003B14  0012               	return	
  3829  003B16                     l1313:
  3830                           
  3831                           ; BSR set to: 2
  3832                           ;SDCard.c: 259: else{
  3833                           ;SDCard.c: 262: T0CONbits.TMR0ON = 1;
  3834  003B16  8ED5               	bsf	4053,7,c	;volatile
  3835                           
  3836                           ; BSR set to: 2
  3837                           
  3838                           ; BSR set to: 2
  3839  003B18  0012               	return	
  3840  003B1A                     __end_of_SDCard:
  3841                           	opt stack 0
  3842                           tosu	equ	0xFFF
  3843                           tosh	equ	0xFFE
  3844                           tosl	equ	0xFFD
  3845                           pclath	equ	0xFFA
  3846                           tblptru	equ	0xFF8
  3847                           tblptrh	equ	0xFF7
  3848                           tblptrl	equ	0xFF6
  3849                           tablat	equ	0xFF5
  3850                           prodh	equ	0xFF4
  3851                           prodl	equ	0xFF3
  3852                           intcon	equ	0xFF2
  3853                           intcon2	equ	0xFF1
  3854                           intcon3	equ	0xFF0
  3855                           postinc0	equ	0xFEE
  3856                           wreg	equ	0xFE8
  3857                           postinc1	equ	0xFE6
  3858                           postdec1	equ	0xFE5
  3859                           fsr1h	equ	0xFE2
  3860                           fsr1l	equ	0xFE1
  3861                           postinc2	equ	0xFDE
  3862                           postdec2	equ	0xFDD
  3863                           fsr2h	equ	0xFDA
  3864                           fsr2l	equ	0xFD9
  3865                           status	equ	0xFD8
  3866                           
  3867 ;; *************** function _f_open *****************
  3868 ;; Defined at:
  3869 ;;		line 857 in file "bibliotecas/tff.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  fp              2   14[BANK1 ] PTR struct _FIL
  3872 ;;		 -> SDCard@fil(32), 
  3873 ;;  path            2   16[BANK1 ] PTR const unsigned char 
  3874 ;;		 -> STR_28(10), 
  3875 ;;  mode            1   18[BANK1 ] unsigned char 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  dw              4   61[BANK1 ] unsigned long 
  3878 ;;  rs              4   57[BANK1 ] unsigned long 
  3879 ;;  dj             18   66[BANK1 ] struct _DIR
  3880 ;;  fn             12   45[BANK1 ] unsigned char [12]
  3881 ;;  dir             2   84[BANK1 ] PTR unsigned char 
  3882 ;;		 -> fs(552), NULL(0), 
  3883 ;;  res             1   65[BANK1 ] enum E155
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  1    wreg      enum E155
  3886 ;; Registers used:
  3887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3893 ;;      Params:         0       0       5       0       0       0       0       0       0
  3894 ;;      Locals:         0       0      41       0       0       0       0       0       0
  3895 ;;      Temps:          0       0      26       0       0       0       0       0       0
  3896 ;;      Totals:         0       0      72       0       0       0       0       0       0
  3897 ;;Total ram usage:       72 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:   12
  3900 ;; This function calls:
  3901 ;;		_auto_mount
  3902 ;;		_get_fattime
  3903 ;;		_memcpy
  3904 ;;		_memset
  3905 ;;		_move_window
  3906 ;;		_remove_chain
  3907 ;;		_reserve_direntry
  3908 ;;		_trace_path
  3909 ;; This function is called by:
  3910 ;;		_SDCard
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           	psect	text15
  3915  000C64                     __ptext15:
  3916                           	opt stack 0
  3917  000C64                     _f_open:
  3918                           	opt stack 16
  3919                           
  3920                           ;tff.c: 863: FRESULT res;
  3921                           ;tff.c: 864: DIR_ dj;
  3922                           ;tff.c: 865: BYTE *dir;
  3923                           ;tff.c: 866: char fn[8+3+1];
  3924                           ;tff.c: 869: fp->fs = (0);
  3925                           
  3926                           ;incstack = 0
  3927  000C64  0101               	movlb	1	; () banked
  3928  000C66  EE20 F004          	lfsr	2,4
  3929  000C6A  5181               	movf	f_open@fp& (0+255),w,b
  3930  000C6C  26D9               	addwf	fsr2l,f,c
  3931  000C6E  5182               	movf	(f_open@fp+1)& (0+255),w,b
  3932  000C70  22DA               	addwfc	fsr2h,f,c
  3933  000C72  0E00               	movlw	0
  3934  000C74  6EDE               	movwf	postinc2,c
  3935  000C76  0E00               	movlw	0
  3936  000C78  6EDD               	movwf	postdec2,c
  3937                           
  3938                           ; BSR set to: 1
  3939                           ;tff.c: 871: mode &= (0x01|0x02|0x08|0x10|0x04);
  3940  000C7A  0E1F               	movlw	31
  3941  000C7C  0101               	movlb	1	; () banked
  3942  000C7E  1785               	andwf	f_open@mode& (0+255),f,b
  3943                           
  3944                           ; BSR set to: 1
  3945                           ;tff.c: 872: res = auto_mount(&path, (BYTE)(mode & (0x02|0x08|0x10|0x04)));
  3946  000C80  0E83               	movlw	low f_open@path
  3947  000C82  0100               	movlb	0	; () banked
  3948  000C84  6F91               	movwf	auto_mount@path& (0+255),b
  3949  000C86  0E01               	movlw	high f_open@path
  3950  000C88  0100               	movlb	0	; () banked
  3951  000C8A  6F92               	movwf	(auto_mount@path+1)& (0+255),b
  3952  000C8C  0101               	movlb	1	; () banked
  3953  000C8E  5185               	movf	f_open@mode& (0+255),w,b
  3954  000C90  0B1E               	andlw	30
  3955  000C92  0100               	movlb	0	; () banked
  3956  000C94  6F93               	movwf	auto_mount@chk_wp& (0+255),b
  3957  000C96  EC09  F000         	call	_auto_mount	;wreg free
  3958  000C9A  0101               	movlb	1	; () banked
  3959  000C9C  6FB4               	movwf	f_open@res& (0+255),b
  3960                           
  3961                           ; BSR set to: 1
  3962                           ;tff.c: 877: if (res != FR_OK) return res;
  3963  000C9E  0101               	movlb	1	; () banked
  3964  000CA0  51B4               	movf	f_open@res& (0+255),w,b
  3965  000CA2  0101               	movlb	1	; () banked
  3966  000CA4  B4D8               	btfsc	status,2,c
  3967  000CA6  D003               	goto	l11865
  3968                           
  3969                           ; BSR set to: 1
  3970  000CA8  0101               	movlb	1	; () banked
  3971  000CAA  51B4               	movf	f_open@res& (0+255),w,b
  3972                           
  3973                           ; BSR set to: 1
  3974  000CAC  0012               	return	
  3975  000CAE                     l11865:
  3976                           
  3977                           ; BSR set to: 1
  3978                           ;tff.c: 878: res = trace_path(&dj, fn, path, &dir);
  3979  000CAE  0EB5               	movlw	low f_open@dj
  3980  000CB0  0100               	movlb	0	; () banked
  3981  000CB2  6FE3               	movwf	trace_path@dj& (0+255),b
  3982  000CB4  0E01               	movlw	high f_open@dj
  3983  000CB6  0100               	movlb	0	; () banked
  3984  000CB8  6FE4               	movwf	(trace_path@dj+1)& (0+255),b
  3985  000CBA  0EA0               	movlw	low f_open@fn
  3986  000CBC  0100               	movlb	0	; () banked
  3987  000CBE  6FE5               	movwf	trace_path@fn& (0+255),b
  3988  000CC0  0E01               	movlw	high f_open@fn
  3989  000CC2  0100               	movlb	0	; () banked
  3990  000CC4  6FE6               	movwf	(trace_path@fn+1)& (0+255),b
  3991  000CC6  C183  F0E7         	movff	f_open@path,trace_path@path
  3992  000CCA  C184  F0E8         	movff	f_open@path+1,trace_path@path+1
  3993  000CCE  0EC7               	movlw	low f_open@dir
  3994  000CD0  0100               	movlb	0	; () banked
  3995  000CD2  6FE9               	movwf	trace_path@dir& (0+255),b
  3996  000CD4  0E01               	movlw	high f_open@dir
  3997  000CD6  0100               	movlb	0	; () banked
  3998  000CD8  6FEA               	movwf	(trace_path@dir+1)& (0+255),b
  3999  000CDA  ECA7  F00F         	call	_trace_path	;wreg free
  4000  000CDE  0101               	movlb	1	; () banked
  4001  000CE0  6FB4               	movwf	f_open@res& (0+255),b
  4002                           
  4003                           ; BSR set to: 1
  4004                           ;tff.c: 882: if (mode & (0x08|0x10|0x04)) {
  4005  000CE2  C185  F186         	movff	f_open@mode,??_f_open
  4006  000CE6  0E1C               	movlw	28
  4007  000CE8  0101               	movlb	1	; () banked
  4008  000CEA  1786               	andwf	??_f_open& (0+255),f,b
  4009  000CEC  B4D8               	btfsc	status,2,c
  4010  000CEE  D1C5               	goto	l11935
  4011                           
  4012                           ; BSR set to: 1
  4013                           ;tff.c: 883: CLUST rs;
  4014                           ;tff.c: 884: DWORD dw;
  4015                           ;tff.c: 885: if (res != FR_OK) {
  4016  000CF0  0101               	movlb	1	; () banked
  4017  000CF2  51B4               	movf	f_open@res& (0+255),w,b
  4018  000CF4  0101               	movlb	1	; () banked
  4019  000CF6  B4D8               	btfsc	status,2,c
  4020  000CF8  D048               	goto	l811
  4021                           
  4022                           ; BSR set to: 1
  4023                           ;tff.c: 886: if (res != FR_NO_FILE) return res;
  4024  000CFA  0E02               	movlw	2
  4025  000CFC  0101               	movlb	1	; () banked
  4026  000CFE  19B4               	xorwf	f_open@res& (0+255),w,b
  4027  000D00  B4D8               	btfsc	status,2,c
  4028  000D02  D003               	goto	l11877
  4029                           
  4030                           ; BSR set to: 1
  4031  000D04  0101               	movlb	1	; () banked
  4032  000D06  51B4               	movf	f_open@res& (0+255),w,b
  4033                           
  4034                           ; BSR set to: 1
  4035  000D08  0012               	return	
  4036  000D0A                     l11877:
  4037                           
  4038                           ; BSR set to: 1
  4039                           ;tff.c: 887: res = reserve_direntry(&dj, &dir);
  4040  000D0A  0EB5               	movlw	low f_open@dj
  4041  000D0C  0100               	movlb	0	; () banked
  4042  000D0E  6FEE               	movwf	reserve_direntry@dj& (0+255),b
  4043  000D10  0E01               	movlw	high f_open@dj
  4044  000D12  0100               	movlb	0	; () banked
  4045  000D14  6FEF               	movwf	(reserve_direntry@dj+1)& (0+255),b
  4046  000D16  0EC7               	movlw	low f_open@dir
  4047  000D18  0100               	movlb	0	; () banked
  4048  000D1A  6FF0               	movwf	reserve_direntry@dir& (0+255),b
  4049  000D1C  0E01               	movlw	high f_open@dir
  4050  000D1E  0100               	movlb	0	; () banked
  4051  000D20  6FF1               	movwf	(reserve_direntry@dir+1)& (0+255),b
  4052  000D22  EC79  F013         	call	_reserve_direntry	;wreg free
  4053  000D26  0101               	movlb	1	; () banked
  4054  000D28  6FB4               	movwf	f_open@res& (0+255),b
  4055                           
  4056                           ; BSR set to: 1
  4057                           ;tff.c: 888: if (res != FR_OK) return res;
  4058  000D2A  0101               	movlb	1	; () banked
  4059  000D2C  51B4               	movf	f_open@res& (0+255),w,b
  4060  000D2E  0101               	movlb	1	; () banked
  4061  000D30  B4D8               	btfsc	status,2,c
  4062  000D32  D003               	goto	l11885
  4063                           
  4064                           ; BSR set to: 1
  4065  000D34  0101               	movlb	1	; () banked
  4066  000D36  51B4               	movf	f_open@res& (0+255),w,b
  4067                           
  4068                           ; BSR set to: 1
  4069  000D38  0012               	return	
  4070  000D3A                     l11885:
  4071                           
  4072                           ; BSR set to: 1
  4073                           ;tff.c: 889: memset(dir, 0, 32);
  4074  000D3A  C1C7  F016         	movff	f_open@dir,memset@p1
  4075  000D3E  C1C8  F017         	movff	f_open@dir+1,memset@p1+1
  4076  000D42  0E00               	movlw	0
  4077  000D44  6E19               	movwf	memset@c+1,c
  4078  000D46  0E00               	movlw	0
  4079  000D48  6E18               	movwf	memset@c,c
  4080  000D4A  0E00               	movlw	0
  4081  000D4C  6E1B               	movwf	memset@n+1,c
  4082  000D4E  0E20               	movlw	32
  4083  000D50  6E1A               	movwf	memset@n,c
  4084  000D52  EC4E  F027         	call	_memset	;wreg free
  4085                           
  4086                           ;tff.c: 890: memcpy(&dir[0], fn, 8+3);
  4087  000D56  C1C7  F016         	movff	f_open@dir,memcpy@d1
  4088  000D5A  C1C8  F017         	movff	f_open@dir+1,memcpy@d1+1
  4089  000D5E  0EA0               	movlw	low f_open@fn
  4090  000D60  6E18               	movwf	memcpy@s1,c
  4091  000D62  0E01               	movlw	high f_open@fn
  4092  000D64  6E19               	movwf	memcpy@s1+1,c
  4093  000D66  0E00               	movlw	0
  4094  000D68  6E1B               	movwf	memcpy@n+1,c
  4095  000D6A  0E0B               	movlw	11
  4096  000D6C  6E1A               	movwf	memcpy@n,c
  4097  000D6E  EC7F  F026         	call	_memcpy	;wreg free
  4098                           
  4099                           ;tff.c: 891: dir[12] = fn[11];
  4100  000D72  0101               	movlb	1	; () banked
  4101  000D74  EE20 F00C          	lfsr	2,12
  4102  000D78  51C7               	movf	f_open@dir& (0+255),w,b
  4103  000D7A  26D9               	addwf	fsr2l,f,c
  4104  000D7C  51C8               	movf	(f_open@dir+1)& (0+255),w,b
  4105  000D7E  22DA               	addwfc	fsr2h,f,c
  4106  000D80  C1AB  FFDF         	movff	f_open@fn+11,indf2
  4107                           
  4108                           ; BSR set to: 1
  4109                           ;tff.c: 892: mode |= 0x08;
  4110  000D84  0101               	movlb	1	; () banked
  4111  000D86  8785               	bsf	f_open@mode& (0+255),3,b
  4112                           
  4113                           ;tff.c: 893: }
  4114  000D88  D12D               	goto	l11917
  4115  000D8A                     l811:
  4116                           
  4117                           ; BSR set to: 1
  4118                           ;tff.c: 894: else {
  4119                           ;tff.c: 895: if (mode & 0x04)
  4120  000D8A  0101               	movlb	1	; () banked
  4121  000D8C  A585               	btfss	f_open@mode& (0+255),2,b
  4122  000D8E  D002               	goto	l11897
  4123                           
  4124                           ; BSR set to: 1
  4125                           ;tff.c: 896: return FR_EXIST;
  4126  000D90  0E07               	movlw	7
  4127                           
  4128                           ; BSR set to: 1
  4129  000D92  0012               	return	
  4130  000D94                     l11897:
  4131                           
  4132                           ; BSR set to: 1
  4133                           ;tff.c: 897: if (!dir || (dir[11] & (0x01|0x10)))
  4134  000D94  0101               	movlb	1	; () banked
  4135  000D96  51C7               	movf	f_open@dir& (0+255),w,b
  4136  000D98  0101               	movlb	1	; () banked
  4137  000D9A  11C8               	iorwf	(f_open@dir+1)& (0+255),w,b
  4138  000D9C  B4D8               	btfsc	status,2,c
  4139  000D9E  D00F               	goto	l11901
  4140                           
  4141                           ; BSR set to: 1
  4142  000DA0  0101               	movlb	1	; () banked
  4143  000DA2  EE20 F00B          	lfsr	2,11
  4144  000DA6  51C7               	movf	f_open@dir& (0+255),w,b
  4145  000DA8  26D9               	addwf	fsr2l,f,c
  4146  000DAA  51C8               	movf	(f_open@dir+1)& (0+255),w,b
  4147  000DAC  22DA               	addwfc	fsr2h,f,c
  4148  000DAE  50DF               	movf	indf2,w,c
  4149  000DB0  0101               	movlb	1	; () banked
  4150  000DB2  6F86               	movwf	??_f_open& (0+255),b
  4151  000DB4  0E11               	movlw	17
  4152  000DB6  0101               	movlb	1	; () banked
  4153  000DB8  1786               	andwf	??_f_open& (0+255),f,b
  4154  000DBA  B4D8               	btfsc	status,2,c
  4155  000DBC  D002               	goto	l816
  4156  000DBE                     l11901:
  4157                           
  4158                           ; BSR set to: 1
  4159                           ;tff.c: 898: return FR_DENIED;
  4160  000DBE  0E06               	movlw	6
  4161                           
  4162                           ; BSR set to: 1
  4163  000DC0  0012               	return	
  4164  000DC2                     l816:
  4165                           
  4166                           ; BSR set to: 1
  4167                           ;tff.c: 899: if (mode & 0x08) {
  4168  000DC2  0101               	movlb	1	; () banked
  4169  000DC4  A785               	btfss	f_open@mode& (0+255),3,b
  4170  000DC6  D10E               	goto	l11917
  4171                           
  4172                           ; BSR set to: 1
  4173                           ;tff.c: 901: rs = ((DWORD)(WORD)(((WORD)*(volatile BYTE*)((&dir[20])+1)<<8)|(WORD)*(vola
      +                          tile BYTE*)(&dir[20])) << 16) | (WORD)(((WORD)*(volatile BYTE*)((&dir[26])+1)<<8)|(WORD)
      +                          *(volatile BYTE*)(&dir[26]));
  4174  000DC8  0E1B               	movlw	27
  4175  000DCA  0101               	movlb	1	; () banked
  4176  000DCC  25C7               	addwf	f_open@dir& (0+255),w,b
  4177  000DCE  6ED9               	movwf	fsr2l,c
  4178  000DD0  0E00               	movlw	0
  4179  000DD2  0101               	movlb	1	; () banked
  4180  000DD4  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4181  000DD6  6EDA               	movwf	fsr2h,c
  4182  000DD8  50DF               	movf	indf2,w,c
  4183  000DDA  0101               	movlb	1	; () banked
  4184  000DDC  6F86               	movwf	??_f_open& (0+255),b
  4185  000DDE  0101               	movlb	1	; () banked
  4186  000DE0  5186               	movf	??_f_open& (0+255),w,b
  4187  000DE2  0101               	movlb	1	; () banked
  4188  000DE4  6F88               	movwf	(??_f_open+2)& (0+255),b
  4189  000DE6  6B87               	clrf	(??_f_open+1)& (0+255),b
  4190  000DE8  0E1A               	movlw	26
  4191  000DEA  0101               	movlb	1	; () banked
  4192  000DEC  25C7               	addwf	f_open@dir& (0+255),w,b
  4193  000DEE  6ED9               	movwf	fsr2l,c
  4194  000DF0  0E00               	movlw	0
  4195  000DF2  0101               	movlb	1	; () banked
  4196  000DF4  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4197  000DF6  6EDA               	movwf	fsr2h,c
  4198  000DF8  50DF               	movf	indf2,w,c
  4199  000DFA  0101               	movlb	1	; () banked
  4200  000DFC  6F89               	movwf	(??_f_open+3)& (0+255),b
  4201  000DFE  0101               	movlb	1	; () banked
  4202  000E00  5189               	movf	(??_f_open+3)& (0+255),w,b
  4203  000E02  0101               	movlb	1	; () banked
  4204  000E04  1387               	iorwf	(??_f_open+1)& (0+255),f,b
  4205  000E06  0E00               	movlw	0
  4206  000E08  1388               	iorwf	(??_f_open+2)& (0+255),f,b
  4207  000E0A  0E15               	movlw	21
  4208  000E0C  0101               	movlb	1	; () banked
  4209  000E0E  25C7               	addwf	f_open@dir& (0+255),w,b
  4210  000E10  6ED9               	movwf	fsr2l,c
  4211  000E12  0E00               	movlw	0
  4212  000E14  0101               	movlb	1	; () banked
  4213  000E16  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4214  000E18  6EDA               	movwf	fsr2h,c
  4215  000E1A  50DF               	movf	indf2,w,c
  4216  000E1C  0101               	movlb	1	; () banked
  4217  000E1E  6F8A               	movwf	(??_f_open+4)& (0+255),b
  4218  000E20  0101               	movlb	1	; () banked
  4219  000E22  518A               	movf	(??_f_open+4)& (0+255),w,b
  4220  000E24  0101               	movlb	1	; () banked
  4221  000E26  6F8C               	movwf	(??_f_open+6)& (0+255),b
  4222  000E28  6B8B               	clrf	(??_f_open+5)& (0+255),b
  4223  000E2A  0E14               	movlw	20
  4224  000E2C  0101               	movlb	1	; () banked
  4225  000E2E  25C7               	addwf	f_open@dir& (0+255),w,b
  4226  000E30  6ED9               	movwf	fsr2l,c
  4227  000E32  0E00               	movlw	0
  4228  000E34  0101               	movlb	1	; () banked
  4229  000E36  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4230  000E38  6EDA               	movwf	fsr2h,c
  4231  000E3A  50DF               	movf	indf2,w,c
  4232  000E3C  0101               	movlb	1	; () banked
  4233  000E3E  6F8D               	movwf	(??_f_open+7)& (0+255),b
  4234  000E40  0101               	movlb	1	; () banked
  4235  000E42  518D               	movf	(??_f_open+7)& (0+255),w,b
  4236  000E44  0101               	movlb	1	; () banked
  4237  000E46  118B               	iorwf	(??_f_open+5)& (0+255),w,b
  4238  000E48  0101               	movlb	1	; () banked
  4239  000E4A  6F8E               	movwf	(??_f_open+8)& (0+255),b
  4240  000E4C  0101               	movlb	1	; () banked
  4241  000E4E  518C               	movf	(??_f_open+6)& (0+255),w,b
  4242  000E50  0101               	movlb	1	; () banked
  4243  000E52  6F8F               	movwf	(??_f_open+9)& (0+255),b
  4244  000E54  0101               	movlb	1	; () banked
  4245  000E56  6B90               	clrf	(??_f_open+10)& (0+255),b
  4246  000E58  0101               	movlb	1	; () banked
  4247  000E5A  6B91               	clrf	(??_f_open+11)& (0+255),b
  4248  000E5C  C18F  F191         	movff	??_f_open+9,??_f_open+11
  4249  000E60  C18E  F190         	movff	??_f_open+8,??_f_open+10
  4250  000E64  0101               	movlb	1	; () banked
  4251  000E66  6B8F               	clrf	(??_f_open+9)& (0+255),b
  4252  000E68  6B8E               	clrf	(??_f_open+8)& (0+255),b
  4253  000E6A  0101               	movlb	1	; () banked
  4254  000E6C  5187               	movf	(??_f_open+1)& (0+255),w,b
  4255  000E6E  0101               	movlb	1	; () banked
  4256  000E70  118E               	iorwf	(??_f_open+8)& (0+255),w,b
  4257  000E72  0101               	movlb	1	; () banked
  4258  000E74  6FAC               	movwf	f_open@rs& (0+255),b
  4259  000E76  0101               	movlb	1	; () banked
  4260  000E78  5188               	movf	(??_f_open+2)& (0+255),w,b
  4261  000E7A  0101               	movlb	1	; () banked
  4262  000E7C  118F               	iorwf	(??_f_open+9)& (0+255),w,b
  4263  000E7E  0101               	movlb	1	; () banked
  4264  000E80  6FAD               	movwf	(f_open@rs+1)& (0+255),b
  4265  000E82  0E00               	movlw	0
  4266  000E84  0101               	movlb	1	; () banked
  4267  000E86  1190               	iorwf	(??_f_open+10)& (0+255),w,b
  4268  000E88  0101               	movlb	1	; () banked
  4269  000E8A  6FAE               	movwf	(f_open@rs+2)& (0+255),b
  4270  000E8C  0E00               	movlw	0
  4271  000E8E  0101               	movlb	1	; () banked
  4272  000E90  1191               	iorwf	(??_f_open+11)& (0+255),w,b
  4273  000E92  0101               	movlb	1	; () banked
  4274  000E94  6FAF               	movwf	(f_open@rs+3)& (0+255),b
  4275                           
  4276                           ;tff.c: 902: *(volatile BYTE*)(&dir[20])=(BYTE)(0); *(volatile BYTE*)((&dir[20])+1)=(BYT
      +                          E)((WORD)(0)>>8);
  4277  000E96  0E14               	movlw	20
  4278  000E98  0101               	movlb	1	; () banked
  4279  000E9A  25C7               	addwf	f_open@dir& (0+255),w,b
  4280  000E9C  6ED9               	movwf	fsr2l,c
  4281  000E9E  0E00               	movlw	0
  4282  000EA0  0101               	movlb	1	; () banked
  4283  000EA2  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4284  000EA4  6EDA               	movwf	fsr2h,c
  4285  000EA6  0E00               	movlw	0
  4286  000EA8  6EDF               	movwf	indf2,c
  4287  000EAA  0E15               	movlw	21
  4288  000EAC  0101               	movlb	1	; () banked
  4289  000EAE  25C7               	addwf	f_open@dir& (0+255),w,b
  4290  000EB0  6ED9               	movwf	fsr2l,c
  4291  000EB2  0E00               	movlw	0
  4292  000EB4  0101               	movlb	1	; () banked
  4293  000EB6  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4294  000EB8  6EDA               	movwf	fsr2h,c
  4295  000EBA  0E00               	movlw	0
  4296  000EBC  6EDF               	movwf	indf2,c
  4297                           
  4298                           ;tff.c: 906: *(volatile BYTE*)(&dir[26])=(BYTE)(0); *(volatile BYTE*)((&dir[26])+1)=(BYT
      +                          E)((WORD)(0)>>8);
  4299  000EBE  0E1A               	movlw	26
  4300  000EC0  0101               	movlb	1	; () banked
  4301  000EC2  25C7               	addwf	f_open@dir& (0+255),w,b
  4302  000EC4  6ED9               	movwf	fsr2l,c
  4303  000EC6  0E00               	movlw	0
  4304  000EC8  0101               	movlb	1	; () banked
  4305  000ECA  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4306  000ECC  6EDA               	movwf	fsr2h,c
  4307  000ECE  0E00               	movlw	0
  4308  000ED0  6EDF               	movwf	indf2,c
  4309  000ED2  0E1B               	movlw	27
  4310  000ED4  0101               	movlb	1	; () banked
  4311  000ED6  25C7               	addwf	f_open@dir& (0+255),w,b
  4312  000ED8  6ED9               	movwf	fsr2l,c
  4313  000EDA  0E00               	movlw	0
  4314  000EDC  0101               	movlb	1	; () banked
  4315  000EDE  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4316  000EE0  6EDA               	movwf	fsr2h,c
  4317  000EE2  0E00               	movlw	0
  4318  000EE4  6EDF               	movwf	indf2,c
  4319                           
  4320                           ;tff.c: 907: *(volatile BYTE*)(&dir[28])=(BYTE)(0); *(volatile BYTE*)((&dir[28])+1)=(BYT
      +                          E)((WORD)(0)>>8); *(volatile BYTE*)((&dir[28])+2)=(BYTE)((DWORD)(0)>>16); *(volatile BYT
      +                          E*)((&dir[28])+3)=(BYTE)((DWORD)(0)>>24);
  4321  000EE6  0E1C               	movlw	28
  4322  000EE8  0101               	movlb	1	; () banked
  4323  000EEA  25C7               	addwf	f_open@dir& (0+255),w,b
  4324  000EEC  6ED9               	movwf	fsr2l,c
  4325  000EEE  0E00               	movlw	0
  4326  000EF0  0101               	movlb	1	; () banked
  4327  000EF2  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4328  000EF4  6EDA               	movwf	fsr2h,c
  4329  000EF6  0E00               	movlw	0
  4330  000EF8  6EDF               	movwf	indf2,c
  4331  000EFA  0E1D               	movlw	29
  4332  000EFC  0101               	movlb	1	; () banked
  4333  000EFE  25C7               	addwf	f_open@dir& (0+255),w,b
  4334  000F00  6ED9               	movwf	fsr2l,c
  4335  000F02  0E00               	movlw	0
  4336  000F04  0101               	movlb	1	; () banked
  4337  000F06  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4338  000F08  6EDA               	movwf	fsr2h,c
  4339  000F0A  0E00               	movlw	0
  4340  000F0C  6EDF               	movwf	indf2,c
  4341  000F0E  0E1E               	movlw	30
  4342  000F10  0101               	movlb	1	; () banked
  4343  000F12  25C7               	addwf	f_open@dir& (0+255),w,b
  4344  000F14  6ED9               	movwf	fsr2l,c
  4345  000F16  0E00               	movlw	0
  4346  000F18  0101               	movlb	1	; () banked
  4347  000F1A  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4348  000F1C  6EDA               	movwf	fsr2h,c
  4349  000F1E  0E00               	movlw	0
  4350  000F20  6EDF               	movwf	indf2,c
  4351  000F22  0E1F               	movlw	31
  4352  000F24  0101               	movlb	1	; () banked
  4353  000F26  25C7               	addwf	f_open@dir& (0+255),w,b
  4354  000F28  6ED9               	movwf	fsr2l,c
  4355  000F2A  0E00               	movlw	0
  4356  000F2C  0101               	movlb	1	; () banked
  4357  000F2E  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4358  000F30  6EDA               	movwf	fsr2h,c
  4359  000F32  0E00               	movlw	0
  4360  000F34  6EDF               	movwf	indf2,c
  4361                           
  4362                           ;tff.c: 908: dj.fs->winflag = 1;
  4363  000F36  0101               	movlb	1	; () banked
  4364  000F38  EE20 F027          	lfsr	2,39
  4365  000F3C  51B9               	movf	(f_open@dj+4)& (0+255),w,b
  4366  000F3E  26D9               	addwf	fsr2l,f,c
  4367  000F40  51BA               	movf	(f_open@dj+5)& (0+255),w,b
  4368  000F42  22DA               	addwfc	fsr2h,f,c
  4369  000F44  0E01               	movlw	1
  4370  000F46  6EDF               	movwf	indf2,c
  4371                           
  4372                           ;tff.c: 909: dw = dj.fs->winsect;
  4373  000F48  0101               	movlb	1	; () banked
  4374  000F4A  EE20 F004          	lfsr	2,4
  4375  000F4E  51B9               	movf	(f_open@dj+4)& (0+255),w,b
  4376  000F50  26D9               	addwf	fsr2l,f,c
  4377  000F52  51BA               	movf	(f_open@dj+5)& (0+255),w,b
  4378  000F54  22DA               	addwfc	fsr2h,f,c
  4379  000F56  CFDE F1B0          	movff	postinc2,f_open@dw
  4380  000F5A  CFDE F1B1          	movff	postinc2,f_open@dw+1
  4381  000F5E  CFDE F1B2          	movff	postinc2,f_open@dw+2
  4382  000F62  CFDE F1B3          	movff	postinc2,f_open@dw+3
  4383                           
  4384                           ; BSR set to: 1
  4385                           ;tff.c: 910: if (!remove_chain(rs) || !move_window(dw))
  4386  000F66  C1AC  F0D4         	movff	f_open@rs,remove_chain@clust
  4387  000F6A  C1AD  F0D5         	movff	f_open@rs+1,remove_chain@clust+1
  4388  000F6E  C1AE  F0D6         	movff	f_open@rs+2,remove_chain@clust+2
  4389  000F72  C1AF  F0D7         	movff	f_open@rs+3,remove_chain@clust+3
  4390  000F76  ECD6  F01F         	call	_remove_chain	;wreg free
  4391  000F7A  0900               	iorlw	0
  4392  000F7C  B4D8               	btfsc	status,2,c
  4393  000F7E  D00D               	goto	l11911
  4394  000F80  C1B0  F083         	movff	f_open@dw,move_window@sector
  4395  000F84  C1B1  F084         	movff	f_open@dw+1,move_window@sector+1
  4396  000F88  C1B2  F085         	movff	f_open@dw+2,move_window@sector+2
  4397  000F8C  C1B3  F086         	movff	f_open@dw+3,move_window@sector+3
  4398  000F90  EC60  F019         	call	_move_window	;wreg free
  4399  000F94  0900               	iorlw	0
  4400  000F96  A4D8               	btfss	status,2,c
  4401  000F98  D002               	goto	l11915
  4402  000F9A                     l11911:
  4403                           
  4404                           ;tff.c: 911: return FR_RW_ERROR;
  4405  000F9A  0E08               	movlw	8
  4406  000F9C  0012               	return	
  4407  000F9E                     l11915:
  4408                           
  4409                           ;tff.c: 912: dj.fs->last_clust = rs - 1;
  4410  000F9E  0EFF               	movlw	255
  4411  000FA0  0101               	movlb	1	; () banked
  4412  000FA2  25AC               	addwf	f_open@rs& (0+255),w,b
  4413  000FA4  0101               	movlb	1	; () banked
  4414  000FA6  6F86               	movwf	??_f_open& (0+255),b
  4415  000FA8  0EFF               	movlw	255
  4416  000FAA  0101               	movlb	1	; () banked
  4417  000FAC  21AD               	addwfc	(f_open@rs+1)& (0+255),w,b
  4418  000FAE  0101               	movlb	1	; () banked
  4419  000FB0  6F87               	movwf	(??_f_open+1)& (0+255),b
  4420  000FB2  0EFF               	movlw	255
  4421  000FB4  0101               	movlb	1	; () banked
  4422  000FB6  21AE               	addwfc	(f_open@rs+2)& (0+255),w,b
  4423  000FB8  0101               	movlb	1	; () banked
  4424  000FBA  6F88               	movwf	(??_f_open+2)& (0+255),b
  4425  000FBC  0EFF               	movlw	255
  4426  000FBE  0101               	movlb	1	; () banked
  4427  000FC0  21AF               	addwfc	(f_open@rs+3)& (0+255),w,b
  4428  000FC2  0101               	movlb	1	; () banked
  4429  000FC4  6F89               	movwf	(??_f_open+3)& (0+255),b
  4430  000FC6  0101               	movlb	1	; () banked
  4431  000FC8  EE20 F01C          	lfsr	2,28
  4432  000FCC  51B9               	movf	(f_open@dj+4)& (0+255),w,b
  4433  000FCE  26D9               	addwf	fsr2l,f,c
  4434  000FD0  51BA               	movf	(f_open@dj+5)& (0+255),w,b
  4435  000FD2  22DA               	addwfc	fsr2h,f,c
  4436  000FD4  C186  FFDE         	movff	??_f_open,postinc2
  4437  000FD8  C187  FFDE         	movff	??_f_open+1,postinc2
  4438  000FDC  C188  FFDE         	movff	??_f_open+2,postinc2
  4439  000FE0  C189  FFDE         	movff	??_f_open+3,postinc2
  4440  000FE4                     l11917:
  4441                           
  4442                           ; BSR set to: 1
  4443                           ;tff.c: 913: }
  4444                           ;tff.c: 914: }
  4445                           ;tff.c: 915: if (mode & 0x08) {
  4446  000FE4  0101               	movlb	1	; () banked
  4447  000FE6  A785               	btfss	f_open@mode& (0+255),3,b
  4448  000FE8  D071               	goto	l11955
  4449                           
  4450                           ; BSR set to: 1
  4451                           ;tff.c: 916: dir[11] = 0;
  4452  000FEA  0101               	movlb	1	; () banked
  4453  000FEC  EE20 F00B          	lfsr	2,11
  4454  000FF0  51C7               	movf	f_open@dir& (0+255),w,b
  4455  000FF2  26D9               	addwf	fsr2l,f,c
  4456  000FF4  51C8               	movf	(f_open@dir+1)& (0+255),w,b
  4457  000FF6  22DA               	addwfc	fsr2h,f,c
  4458  000FF8  0E00               	movlw	0
  4459  000FFA  6EDF               	movwf	indf2,c
  4460                           
  4461                           ; BSR set to: 1
  4462                           ;tff.c: 917: dw = get_fattime();
  4463  000FFC  EC8D  F01D         	call	_get_fattime	;wreg free
  4464  001000  C016  F1B0         	movff	?_get_fattime,f_open@dw
  4465  001004  C017  F1B1         	movff	?_get_fattime+1,f_open@dw+1
  4466  001008  C018  F1B2         	movff	?_get_fattime+2,f_open@dw+2
  4467  00100C  C019  F1B3         	movff	?_get_fattime+3,f_open@dw+3
  4468                           
  4469                           ;tff.c: 918: *(volatile BYTE*)(&dir[14])=(BYTE)(dw); *(volatile BYTE*)((&dir[14])+1)=(BY
      +                          TE)((WORD)(dw)>>8); *(volatile BYTE*)((&dir[14])+2)=(BYTE)((DWORD)(dw)>>16); *(volatile 
      +                          BYTE*)((&dir[14])+3)=(BYTE)((DWORD)(dw)>>24);
  4470  001010  0E0E               	movlw	14
  4471  001012  0101               	movlb	1	; () banked
  4472  001014  25C7               	addwf	f_open@dir& (0+255),w,b
  4473  001016  6ED9               	movwf	fsr2l,c
  4474  001018  0E00               	movlw	0
  4475  00101A  0101               	movlb	1	; () banked
  4476  00101C  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4477  00101E  6EDA               	movwf	fsr2h,c
  4478  001020  C1B0  FFDF         	movff	f_open@dw,indf2
  4479                           
  4480                           ; BSR set to: 1
  4481  001024  0E0F               	movlw	15
  4482  001026  0101               	movlb	1	; () banked
  4483  001028  25C7               	addwf	f_open@dir& (0+255),w,b
  4484  00102A  6ED9               	movwf	fsr2l,c
  4485  00102C  0E00               	movlw	0
  4486  00102E  0101               	movlb	1	; () banked
  4487  001030  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4488  001032  6EDA               	movwf	fsr2h,c
  4489  001034  0101               	movlb	1	; () banked
  4490  001036  51B1               	movf	(f_open@dw+1)& (0+255),w,b
  4491  001038  6EDF               	movwf	indf2,c
  4492                           
  4493                           ; BSR set to: 1
  4494  00103A  0E10               	movlw	16
  4495  00103C  0101               	movlb	1	; () banked
  4496  00103E  25C7               	addwf	f_open@dir& (0+255),w,b
  4497  001040  6ED9               	movwf	fsr2l,c
  4498  001042  0E00               	movlw	0
  4499  001044  0101               	movlb	1	; () banked
  4500  001046  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4501  001048  6EDA               	movwf	fsr2h,c
  4502  00104A  C1B2  FFDF         	movff	f_open@dw+2,indf2
  4503                           
  4504                           ; BSR set to: 1
  4505  00104E  0E11               	movlw	17
  4506  001050  0101               	movlb	1	; () banked
  4507  001052  25C7               	addwf	f_open@dir& (0+255),w,b
  4508  001054  6ED9               	movwf	fsr2l,c
  4509  001056  0E00               	movlw	0
  4510  001058  0101               	movlb	1	; () banked
  4511  00105A  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4512  00105C  6EDA               	movwf	fsr2h,c
  4513  00105E  C1B3  FFDF         	movff	f_open@dw+3,indf2
  4514                           
  4515                           ; BSR set to: 1
  4516                           ;tff.c: 919: dj.fs->winflag = 1;
  4517  001062  0101               	movlb	1	; () banked
  4518  001064  EE20 F027          	lfsr	2,39
  4519  001068  51B9               	movf	(f_open@dj+4)& (0+255),w,b
  4520  00106A  26D9               	addwf	fsr2l,f,c
  4521  00106C  51BA               	movf	(f_open@dj+5)& (0+255),w,b
  4522  00106E  22DA               	addwfc	fsr2h,f,c
  4523  001070  0E01               	movlw	1
  4524  001072  6EDF               	movwf	indf2,c
  4525                           
  4526                           ; BSR set to: 1
  4527                           ;tff.c: 920: mode |= 0x20;
  4528  001074  0101               	movlb	1	; () banked
  4529  001076  8B85               	bsf	f_open@mode& (0+255),5,b
  4530                           
  4531                           ; BSR set to: 1
  4532                           ;tff.c: 921: }
  4533                           ;tff.c: 922: }
  4534  001078  D029               	goto	l11955
  4535  00107A                     l11935:
  4536                           
  4537                           ; BSR set to: 1
  4538                           ;tff.c: 924: else {
  4539                           ;tff.c: 926: if (res != FR_OK) return res;
  4540  00107A  0101               	movlb	1	; () banked
  4541  00107C  51B4               	movf	f_open@res& (0+255),w,b
  4542  00107E  0101               	movlb	1	; () banked
  4543  001080  B4D8               	btfsc	status,2,c
  4544  001082  D003               	goto	l11941
  4545                           
  4546                           ; BSR set to: 1
  4547  001084  0101               	movlb	1	; () banked
  4548  001086  51B4               	movf	f_open@res& (0+255),w,b
  4549                           
  4550                           ; BSR set to: 1
  4551  001088  0012               	return	
  4552  00108A                     l11941:
  4553                           
  4554                           ; BSR set to: 1
  4555                           ;tff.c: 927: if (!dir || (dir[11] & 0x10))
  4556  00108A  0101               	movlb	1	; () banked
  4557  00108C  51C7               	movf	f_open@dir& (0+255),w,b
  4558  00108E  0101               	movlb	1	; () banked
  4559  001090  11C8               	iorwf	(f_open@dir+1)& (0+255),w,b
  4560  001092  B4D8               	btfsc	status,2,c
  4561  001094  D00A               	goto	l11945
  4562                           
  4563                           ; BSR set to: 1
  4564  001096  0101               	movlb	1	; () banked
  4565  001098  EE20 F00B          	lfsr	2,11
  4566  00109C  51C7               	movf	f_open@dir& (0+255),w,b
  4567  00109E  26D9               	addwf	fsr2l,f,c
  4568  0010A0  51C8               	movf	(f_open@dir+1)& (0+255),w,b
  4569  0010A2  22DA               	addwfc	fsr2h,f,c
  4570  0010A4  0101               	movlb	1	; () banked
  4571  0010A6  A8DF               	btfss	indf2,4,c
  4572  0010A8  D002               	goto	l826
  4573  0010AA                     l11945:
  4574                           
  4575                           ; BSR set to: 1
  4576                           ;tff.c: 928: return FR_NO_FILE;
  4577  0010AA  0E02               	movlw	2
  4578                           
  4579                           ; BSR set to: 1
  4580  0010AC  0012               	return	
  4581  0010AE                     l826:
  4582                           
  4583                           ; BSR set to: 1
  4584                           ;tff.c: 930: if ((mode & 0x02) && (dir[11] & 0x01))
  4585  0010AE  0101               	movlb	1	; () banked
  4586  0010B0  A385               	btfss	f_open@mode& (0+255),1,b
  4587  0010B2  D00C               	goto	l11955
  4588                           
  4589                           ; BSR set to: 1
  4590  0010B4  0101               	movlb	1	; () banked
  4591  0010B6  EE20 F00B          	lfsr	2,11
  4592  0010BA  51C7               	movf	f_open@dir& (0+255),w,b
  4593  0010BC  26D9               	addwf	fsr2l,f,c
  4594  0010BE  51C8               	movf	(f_open@dir+1)& (0+255),w,b
  4595  0010C0  22DA               	addwfc	fsr2h,f,c
  4596  0010C2  0101               	movlb	1	; () banked
  4597  0010C4  A0DF               	btfss	indf2,0,c
  4598  0010C6  D002               	goto	l11955
  4599                           
  4600                           ; BSR set to: 1
  4601                           ;tff.c: 931: return FR_DENIED;
  4602  0010C8  0E06               	movlw	6
  4603                           
  4604                           ; BSR set to: 1
  4605  0010CA  0012               	return	
  4606  0010CC                     l11955:
  4607                           
  4608                           ; BSR set to: 1
  4609                           ;tff.c: 932: }
  4610                           ;tff.c: 933: fp->dir_sect = dj.fs->winsect;
  4611  0010CC  0101               	movlb	1	; () banked
  4612  0010CE  EE20 F004          	lfsr	2,4
  4613  0010D2  51B9               	movf	(f_open@dj+4)& (0+255),w,b
  4614  0010D4  26D9               	addwf	fsr2l,f,c
  4615  0010D6  51BA               	movf	(f_open@dj+5)& (0+255),w,b
  4616  0010D8  22DA               	addwfc	fsr2h,f,c
  4617  0010DA  0101               	movlb	1	; () banked
  4618  0010DC  EE10 F01A          	lfsr	1,26
  4619  0010E0  5181               	movf	f_open@fp& (0+255),w,b
  4620  0010E2  26E1               	addwf	fsr1l,f,c
  4621  0010E4  5182               	movf	(f_open@fp+1)& (0+255),w,b
  4622  0010E6  22E2               	addwfc	fsr1h,f,c
  4623  0010E8  CFDE FFE6          	movff	postinc2,postinc1
  4624  0010EC  CFDE FFE6          	movff	postinc2,postinc1
  4625  0010F0  CFDE FFE6          	movff	postinc2,postinc1
  4626  0010F4  CFDE FFE6          	movff	postinc2,postinc1
  4627                           
  4628                           ; BSR set to: 1
  4629                           ;tff.c: 934: fp->dir_ptr = dir;
  4630  0010F8  0101               	movlb	1	; () banked
  4631  0010FA  EE20 F01E          	lfsr	2,30
  4632  0010FE  5181               	movf	f_open@fp& (0+255),w,b
  4633  001100  26D9               	addwf	fsr2l,f,c
  4634  001102  5182               	movf	(f_open@fp+1)& (0+255),w,b
  4635  001104  22DA               	addwfc	fsr2h,f,c
  4636  001106  C1C7  FFDE         	movff	f_open@dir,postinc2
  4637  00110A  C1C8  FFDD         	movff	f_open@dir+1,postdec2
  4638                           
  4639                           ; BSR set to: 1
  4640                           ;tff.c: 936: fp->flag = mode;
  4641  00110E  0101               	movlb	1	; () banked
  4642  001110  EE20 F002          	lfsr	2,2
  4643  001114  5181               	movf	f_open@fp& (0+255),w,b
  4644  001116  26D9               	addwf	fsr2l,f,c
  4645  001118  5182               	movf	(f_open@fp+1)& (0+255),w,b
  4646  00111A  22DA               	addwfc	fsr2h,f,c
  4647  00111C  C185  FFDF         	movff	f_open@mode,indf2
  4648                           
  4649                           ; BSR set to: 1
  4650                           ;tff.c: 937: fp->org_clust =
  4651                           ;tff.c: 939: ((DWORD)(WORD)(((WORD)*(volatile BYTE*)((&dir[20])+1)<<8)|(WORD)*(volatile 
      +                          BYTE*)(&dir[20])) << 16) |
  4652                           ;tff.c: 941: (WORD)(((WORD)*(volatile BYTE*)((&dir[26])+1)<<8)|(WORD)*(volatile BYTE*)(&
      +                          dir[26]));
  4653  001120  0E1B               	movlw	27
  4654  001122  0101               	movlb	1	; () banked
  4655  001124  25C7               	addwf	f_open@dir& (0+255),w,b
  4656  001126  6ED9               	movwf	fsr2l,c
  4657  001128  0E00               	movlw	0
  4658  00112A  0101               	movlb	1	; () banked
  4659  00112C  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4660  00112E  6EDA               	movwf	fsr2h,c
  4661  001130  50DF               	movf	indf2,w,c
  4662  001132  0101               	movlb	1	; () banked
  4663  001134  6F86               	movwf	??_f_open& (0+255),b
  4664  001136  0101               	movlb	1	; () banked
  4665  001138  5186               	movf	??_f_open& (0+255),w,b
  4666  00113A  0101               	movlb	1	; () banked
  4667  00113C  6F88               	movwf	(??_f_open+2)& (0+255),b
  4668  00113E  6B87               	clrf	(??_f_open+1)& (0+255),b
  4669  001140  0E1A               	movlw	26
  4670  001142  0101               	movlb	1	; () banked
  4671  001144  25C7               	addwf	f_open@dir& (0+255),w,b
  4672  001146  6ED9               	movwf	fsr2l,c
  4673  001148  0E00               	movlw	0
  4674  00114A  0101               	movlb	1	; () banked
  4675  00114C  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4676  00114E  6EDA               	movwf	fsr2h,c
  4677  001150  50DF               	movf	indf2,w,c
  4678  001152  0101               	movlb	1	; () banked
  4679  001154  6F89               	movwf	(??_f_open+3)& (0+255),b
  4680  001156  0101               	movlb	1	; () banked
  4681  001158  5189               	movf	(??_f_open+3)& (0+255),w,b
  4682  00115A  0101               	movlb	1	; () banked
  4683  00115C  1387               	iorwf	(??_f_open+1)& (0+255),f,b
  4684  00115E  0E00               	movlw	0
  4685  001160  1388               	iorwf	(??_f_open+2)& (0+255),f,b
  4686  001162  0E15               	movlw	21
  4687  001164  0101               	movlb	1	; () banked
  4688  001166  25C7               	addwf	f_open@dir& (0+255),w,b
  4689  001168  6ED9               	movwf	fsr2l,c
  4690  00116A  0E00               	movlw	0
  4691  00116C  0101               	movlb	1	; () banked
  4692  00116E  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4693  001170  6EDA               	movwf	fsr2h,c
  4694  001172  50DF               	movf	indf2,w,c
  4695  001174  0101               	movlb	1	; () banked
  4696  001176  6F8A               	movwf	(??_f_open+4)& (0+255),b
  4697  001178  0101               	movlb	1	; () banked
  4698  00117A  518A               	movf	(??_f_open+4)& (0+255),w,b
  4699  00117C  0101               	movlb	1	; () banked
  4700  00117E  6F8C               	movwf	(??_f_open+6)& (0+255),b
  4701  001180  6B8B               	clrf	(??_f_open+5)& (0+255),b
  4702  001182  0E14               	movlw	20
  4703  001184  0101               	movlb	1	; () banked
  4704  001186  25C7               	addwf	f_open@dir& (0+255),w,b
  4705  001188  6ED9               	movwf	fsr2l,c
  4706  00118A  0E00               	movlw	0
  4707  00118C  0101               	movlb	1	; () banked
  4708  00118E  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4709  001190  6EDA               	movwf	fsr2h,c
  4710  001192  50DF               	movf	indf2,w,c
  4711  001194  0101               	movlb	1	; () banked
  4712  001196  6F8D               	movwf	(??_f_open+7)& (0+255),b
  4713  001198  0101               	movlb	1	; () banked
  4714  00119A  518D               	movf	(??_f_open+7)& (0+255),w,b
  4715  00119C  0101               	movlb	1	; () banked
  4716  00119E  118B               	iorwf	(??_f_open+5)& (0+255),w,b
  4717  0011A0  0101               	movlb	1	; () banked
  4718  0011A2  6F8E               	movwf	(??_f_open+8)& (0+255),b
  4719  0011A4  0101               	movlb	1	; () banked
  4720  0011A6  518C               	movf	(??_f_open+6)& (0+255),w,b
  4721  0011A8  0101               	movlb	1	; () banked
  4722  0011AA  6F8F               	movwf	(??_f_open+9)& (0+255),b
  4723  0011AC  0101               	movlb	1	; () banked
  4724  0011AE  6B90               	clrf	(??_f_open+10)& (0+255),b
  4725  0011B0  0101               	movlb	1	; () banked
  4726  0011B2  6B91               	clrf	(??_f_open+11)& (0+255),b
  4727  0011B4  C18F  F191         	movff	??_f_open+9,??_f_open+11
  4728  0011B8  C18E  F190         	movff	??_f_open+8,??_f_open+10
  4729  0011BC  0101               	movlb	1	; () banked
  4730  0011BE  6B8F               	clrf	(??_f_open+9)& (0+255),b
  4731  0011C0  6B8E               	clrf	(??_f_open+8)& (0+255),b
  4732  0011C2  0101               	movlb	1	; () banked
  4733  0011C4  5187               	movf	(??_f_open+1)& (0+255),w,b
  4734  0011C6  0101               	movlb	1	; () banked
  4735  0011C8  118E               	iorwf	(??_f_open+8)& (0+255),w,b
  4736  0011CA  0101               	movlb	1	; () banked
  4737  0011CC  6F92               	movwf	(??_f_open+12)& (0+255),b
  4738  0011CE  0101               	movlb	1	; () banked
  4739  0011D0  5188               	movf	(??_f_open+2)& (0+255),w,b
  4740  0011D2  0101               	movlb	1	; () banked
  4741  0011D4  118F               	iorwf	(??_f_open+9)& (0+255),w,b
  4742  0011D6  0101               	movlb	1	; () banked
  4743  0011D8  6F93               	movwf	(??_f_open+13)& (0+255),b
  4744  0011DA  0E00               	movlw	0
  4745  0011DC  0101               	movlb	1	; () banked
  4746  0011DE  1190               	iorwf	(??_f_open+10)& (0+255),w,b
  4747  0011E0  0101               	movlb	1	; () banked
  4748  0011E2  6F94               	movwf	(??_f_open+14)& (0+255),b
  4749  0011E4  0E00               	movlw	0
  4750  0011E6  0101               	movlb	1	; () banked
  4751  0011E8  1191               	iorwf	(??_f_open+11)& (0+255),w,b
  4752  0011EA  0101               	movlb	1	; () banked
  4753  0011EC  6F95               	movwf	(??_f_open+15)& (0+255),b
  4754  0011EE  0101               	movlb	1	; () banked
  4755  0011F0  EE20 F00E          	lfsr	2,14
  4756  0011F4  5181               	movf	f_open@fp& (0+255),w,b
  4757  0011F6  26D9               	addwf	fsr2l,f,c
  4758  0011F8  5182               	movf	(f_open@fp+1)& (0+255),w,b
  4759  0011FA  22DA               	addwfc	fsr2h,f,c
  4760  0011FC  C192  FFDE         	movff	??_f_open+12,postinc2
  4761  001200  C193  FFDE         	movff	??_f_open+13,postinc2
  4762  001204  C194  FFDE         	movff	??_f_open+14,postinc2
  4763  001208  C195  FFDE         	movff	??_f_open+15,postinc2
  4764                           
  4765                           ; BSR set to: 1
  4766                           ;tff.c: 942: fp->fsize = (DWORD)(((DWORD)*(volatile BYTE*)((&dir[28])+3)<<24)|((DWORD)*(
      +                          volatile BYTE*)((&dir[28])+2)<<16)|((WORD)*(volatile BYTE*)((&dir[28])+1)<<8)|*(volatile
      +                           BYTE*)(&dir[28]));
  4767  00120C  0E1D               	movlw	29
  4768  00120E  0101               	movlb	1	; () banked
  4769  001210  25C7               	addwf	f_open@dir& (0+255),w,b
  4770  001212  6ED9               	movwf	fsr2l,c
  4771  001214  0E00               	movlw	0
  4772  001216  0101               	movlb	1	; () banked
  4773  001218  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4774  00121A  6EDA               	movwf	fsr2h,c
  4775  00121C  50DF               	movf	indf2,w,c
  4776  00121E  0101               	movlb	1	; () banked
  4777  001220  6F86               	movwf	??_f_open& (0+255),b
  4778  001222  0101               	movlb	1	; () banked
  4779  001224  5186               	movf	??_f_open& (0+255),w,b
  4780  001226  0101               	movlb	1	; () banked
  4781  001228  6F88               	movwf	(??_f_open+2)& (0+255),b
  4782  00122A  6B87               	clrf	(??_f_open+1)& (0+255),b
  4783  00122C  0E1E               	movlw	30
  4784  00122E  0101               	movlb	1	; () banked
  4785  001230  25C7               	addwf	f_open@dir& (0+255),w,b
  4786  001232  6ED9               	movwf	fsr2l,c
  4787  001234  0E00               	movlw	0
  4788  001236  0101               	movlb	1	; () banked
  4789  001238  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4790  00123A  6EDA               	movwf	fsr2h,c
  4791  00123C  50DF               	movf	indf2,w,c
  4792  00123E  0101               	movlb	1	; () banked
  4793  001240  6F89               	movwf	(??_f_open+3)& (0+255),b
  4794  001242  C189  F18A         	movff	??_f_open+3,??_f_open+4
  4795  001246  0101               	movlb	1	; () banked
  4796  001248  6B8B               	clrf	(??_f_open+5)& (0+255),b
  4797  00124A  6B8C               	clrf	(??_f_open+6)& (0+255),b
  4798  00124C  6B8D               	clrf	(??_f_open+7)& (0+255),b
  4799  00124E  C18B  F18D         	movff	??_f_open+5,??_f_open+7
  4800  001252  C18A  F18C         	movff	??_f_open+4,??_f_open+6
  4801  001256  0101               	movlb	1	; () banked
  4802  001258  6B8B               	clrf	(??_f_open+5)& (0+255),b
  4803  00125A  6B8A               	clrf	(??_f_open+4)& (0+255),b
  4804  00125C  0E1F               	movlw	31
  4805  00125E  0101               	movlb	1	; () banked
  4806  001260  25C7               	addwf	f_open@dir& (0+255),w,b
  4807  001262  6ED9               	movwf	fsr2l,c
  4808  001264  0E00               	movlw	0
  4809  001266  0101               	movlb	1	; () banked
  4810  001268  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4811  00126A  6EDA               	movwf	fsr2h,c
  4812  00126C  50DF               	movf	indf2,w,c
  4813  00126E  0101               	movlb	1	; () banked
  4814  001270  6F8E               	movwf	(??_f_open+8)& (0+255),b
  4815  001272  C18E  F18F         	movff	??_f_open+8,??_f_open+9
  4816  001276  0101               	movlb	1	; () banked
  4817  001278  6B90               	clrf	(??_f_open+10)& (0+255),b
  4818  00127A  6B91               	clrf	(??_f_open+11)& (0+255),b
  4819  00127C  6B92               	clrf	(??_f_open+12)& (0+255),b
  4820  00127E  C18F  F192         	movff	??_f_open+9,??_f_open+12
  4821  001282  0101               	movlb	1	; () banked
  4822  001284  6B91               	clrf	(??_f_open+11)& (0+255),b
  4823  001286  6B90               	clrf	(??_f_open+10)& (0+255),b
  4824  001288  6B8F               	clrf	(??_f_open+9)& (0+255),b
  4825  00128A  0101               	movlb	1	; () banked
  4826  00128C  518A               	movf	(??_f_open+4)& (0+255),w,b
  4827  00128E  0101               	movlb	1	; () banked
  4828  001290  118F               	iorwf	(??_f_open+9)& (0+255),w,b
  4829  001292  0101               	movlb	1	; () banked
  4830  001294  6F93               	movwf	(??_f_open+13)& (0+255),b
  4831  001296  0101               	movlb	1	; () banked
  4832  001298  518B               	movf	(??_f_open+5)& (0+255),w,b
  4833  00129A  0101               	movlb	1	; () banked
  4834  00129C  1190               	iorwf	(??_f_open+10)& (0+255),w,b
  4835  00129E  0101               	movlb	1	; () banked
  4836  0012A0  6F94               	movwf	(??_f_open+14)& (0+255),b
  4837  0012A2  0101               	movlb	1	; () banked
  4838  0012A4  518C               	movf	(??_f_open+6)& (0+255),w,b
  4839  0012A6  0101               	movlb	1	; () banked
  4840  0012A8  1191               	iorwf	(??_f_open+11)& (0+255),w,b
  4841  0012AA  0101               	movlb	1	; () banked
  4842  0012AC  6F95               	movwf	(??_f_open+15)& (0+255),b
  4843  0012AE  0101               	movlb	1	; () banked
  4844  0012B0  518D               	movf	(??_f_open+7)& (0+255),w,b
  4845  0012B2  0101               	movlb	1	; () banked
  4846  0012B4  1192               	iorwf	(??_f_open+12)& (0+255),w,b
  4847  0012B6  0101               	movlb	1	; () banked
  4848  0012B8  6F96               	movwf	(??_f_open+16)& (0+255),b
  4849  0012BA  0101               	movlb	1	; () banked
  4850  0012BC  5187               	movf	(??_f_open+1)& (0+255),w,b
  4851  0012BE  0101               	movlb	1	; () banked
  4852  0012C0  1193               	iorwf	(??_f_open+13)& (0+255),w,b
  4853  0012C2  0101               	movlb	1	; () banked
  4854  0012C4  6F97               	movwf	(??_f_open+17)& (0+255),b
  4855  0012C6  0101               	movlb	1	; () banked
  4856  0012C8  5188               	movf	(??_f_open+2)& (0+255),w,b
  4857  0012CA  0101               	movlb	1	; () banked
  4858  0012CC  1194               	iorwf	(??_f_open+14)& (0+255),w,b
  4859  0012CE  0101               	movlb	1	; () banked
  4860  0012D0  6F98               	movwf	(??_f_open+18)& (0+255),b
  4861  0012D2  0E00               	movlw	0
  4862  0012D4  0101               	movlb	1	; () banked
  4863  0012D6  1195               	iorwf	(??_f_open+15)& (0+255),w,b
  4864  0012D8  0101               	movlb	1	; () banked
  4865  0012DA  6F99               	movwf	(??_f_open+19)& (0+255),b
  4866  0012DC  0E00               	movlw	0
  4867  0012DE  0101               	movlb	1	; () banked
  4868  0012E0  1196               	iorwf	(??_f_open+16)& (0+255),w,b
  4869  0012E2  0101               	movlb	1	; () banked
  4870  0012E4  6F9A               	movwf	(??_f_open+20)& (0+255),b
  4871  0012E6  0E1C               	movlw	28
  4872  0012E8  0101               	movlb	1	; () banked
  4873  0012EA  25C7               	addwf	f_open@dir& (0+255),w,b
  4874  0012EC  6ED9               	movwf	fsr2l,c
  4875  0012EE  0E00               	movlw	0
  4876  0012F0  0101               	movlb	1	; () banked
  4877  0012F2  21C8               	addwfc	(f_open@dir+1)& (0+255),w,b
  4878  0012F4  6EDA               	movwf	fsr2h,c
  4879  0012F6  50DF               	movf	indf2,w,c
  4880  0012F8  0101               	movlb	1	; () banked
  4881  0012FA  6F9B               	movwf	(??_f_open+21)& (0+255),b
  4882  0012FC  0101               	movlb	1	; () banked
  4883  0012FE  519B               	movf	(??_f_open+21)& (0+255),w,b
  4884  001300  0101               	movlb	1	; () banked
  4885  001302  1197               	iorwf	(??_f_open+17)& (0+255),w,b
  4886  001304  0101               	movlb	1	; () banked
  4887  001306  6F9C               	movwf	(??_f_open+22)& (0+255),b
  4888  001308  0101               	movlb	1	; () banked
  4889  00130A  5198               	movf	(??_f_open+18)& (0+255),w,b
  4890  00130C  0101               	movlb	1	; () banked
  4891  00130E  6F9D               	movwf	(??_f_open+23)& (0+255),b
  4892  001310  0101               	movlb	1	; () banked
  4893  001312  5199               	movf	(??_f_open+19)& (0+255),w,b
  4894  001314  0101               	movlb	1	; () banked
  4895  001316  6F9E               	movwf	(??_f_open+24)& (0+255),b
  4896  001318  0101               	movlb	1	; () banked
  4897  00131A  519A               	movf	(??_f_open+20)& (0+255),w,b
  4898  00131C  0101               	movlb	1	; () banked
  4899  00131E  6F9F               	movwf	(??_f_open+25)& (0+255),b
  4900  001320  0101               	movlb	1	; () banked
  4901  001322  EE20 F00A          	lfsr	2,10
  4902  001326  5181               	movf	f_open@fp& (0+255),w,b
  4903  001328  26D9               	addwf	fsr2l,f,c
  4904  00132A  5182               	movf	(f_open@fp+1)& (0+255),w,b
  4905  00132C  22DA               	addwfc	fsr2h,f,c
  4906  00132E  C19C  FFDE         	movff	??_f_open+22,postinc2
  4907  001332  C19D  FFDE         	movff	??_f_open+23,postinc2
  4908  001336  C19E  FFDE         	movff	??_f_open+24,postinc2
  4909  00133A  C19F  FFDE         	movff	??_f_open+25,postinc2
  4910                           
  4911                           ; BSR set to: 1
  4912                           ;tff.c: 943: fp->fptr = 0; fp->csect = 255;
  4913  00133E  0101               	movlb	1	; () banked
  4914  001340  EE20 F006          	lfsr	2,6
  4915  001344  5181               	movf	f_open@fp& (0+255),w,b
  4916  001346  26D9               	addwf	fsr2l,f,c
  4917  001348  5182               	movf	(f_open@fp+1)& (0+255),w,b
  4918  00134A  22DA               	addwfc	fsr2h,f,c
  4919  00134C  6ADE               	clrf	postinc2,c
  4920  00134E  6ADE               	clrf	postinc2,c
  4921  001350  6ADE               	clrf	postinc2,c
  4922  001352  6ADD               	clrf	postdec2,c
  4923                           
  4924                           ; BSR set to: 1
  4925  001354  0101               	movlb	1	; () banked
  4926  001356  EE20 F003          	lfsr	2,3
  4927  00135A  5181               	movf	f_open@fp& (0+255),w,b
  4928  00135C  26D9               	addwf	fsr2l,f,c
  4929  00135E  5182               	movf	(f_open@fp+1)& (0+255),w,b
  4930  001360  22DA               	addwfc	fsr2h,f,c
  4931  001362  0EFF               	movlw	255
  4932  001364  6EDF               	movwf	indf2,c
  4933                           
  4934                           ; BSR set to: 1
  4935                           ;tff.c: 944: fp->fs = dj.fs; fp->id = dj.fs->id;
  4936  001366  0101               	movlb	1	; () banked
  4937  001368  EE20 F004          	lfsr	2,4
  4938  00136C  5181               	movf	f_open@fp& (0+255),w,b
  4939  00136E  26D9               	addwf	fsr2l,f,c
  4940  001370  5182               	movf	(f_open@fp+1)& (0+255),w,b
  4941  001372  22DA               	addwfc	fsr2h,f,c
  4942  001374  C1B9  FFDE         	movff	f_open@dj+4,postinc2
  4943  001378  C1BA  FFDD         	movff	f_open@dj+5,postdec2
  4944                           
  4945                           ; BSR set to: 1
  4946  00137C  C1B9  FFD9         	movff	f_open@dj+4,fsr2l
  4947  001380  C1BA  FFDA         	movff	f_open@dj+5,fsr2h
  4948  001384  C181  FFE1         	movff	f_open@fp,fsr1l
  4949  001388  C182  FFE2         	movff	f_open@fp+1,fsr1h
  4950  00138C  CFDE FFE6          	movff	postinc2,postinc1
  4951  001390  CFDD FFE5          	movff	postdec2,postdec1
  4952                           
  4953                           ; BSR set to: 1
  4954                           ;tff.c: 946: return FR_OK;
  4955  001394  0E00               	movlw	0
  4956  001396  0012               	return	
  4957  001398                     __end_of_f_open:
  4958                           	opt stack 0
  4959                           tosu	equ	0xFFF
  4960                           tosh	equ	0xFFE
  4961                           tosl	equ	0xFFD
  4962                           pclath	equ	0xFFA
  4963                           tblptru	equ	0xFF8
  4964                           tblptrh	equ	0xFF7
  4965                           tblptrl	equ	0xFF6
  4966                           tablat	equ	0xFF5
  4967                           prodh	equ	0xFF4
  4968                           prodl	equ	0xFF3
  4969                           intcon	equ	0xFF2
  4970                           intcon2	equ	0xFF1
  4971                           intcon3	equ	0xFF0
  4972                           postinc0	equ	0xFEE
  4973                           wreg	equ	0xFE8
  4974                           postinc1	equ	0xFE6
  4975                           postdec1	equ	0xFE5
  4976                           fsr1h	equ	0xFE2
  4977                           fsr1l	equ	0xFE1
  4978                           indf2	equ	0xFDF
  4979                           postinc2	equ	0xFDE
  4980                           postdec2	equ	0xFDD
  4981                           fsr2h	equ	0xFDA
  4982                           fsr2l	equ	0xFD9
  4983                           status	equ	0xFD8
  4984                           
  4985 ;; *************** function _trace_path *****************
  4986 ;; Defined at:
  4987 ;;		line 501 in file "bibliotecas/tff.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;  dj              2  131[BANK0 ] PTR struct _DIR
  4990 ;;		 -> f_rename@dj(18), f_utime@dj(18), f_chmod@dj(18), f_mkdir@dj(18), 
  4991 ;;		 -> f_unlink@dj(18), f_stat@dj(18), f_open@dj(18), 
  4992 ;;  fn              2  133[BANK0 ] PTR unsigned char 
  4993 ;;		 -> f_rename@fn(12), f_utime@fn(12), f_chmod@fn(12), f_mkdir@fn(12), 
  4994 ;;		 -> f_unlink@fn(12), f_stat@fn(12), f_opendir@fn(12), f_open@fn(12), 
  4995 ;;  path            2  135[BANK0 ] PTR const unsigned char 
  4996 ;;		 -> STR_28(10), 
  4997 ;;  dir             2  137[BANK0 ] PTR PTR unsigned char 
  4998 ;;		 -> f_rename@dir_new(2), f_rename@dir_old(2), f_utime@dir(2), f_chmod@dir(2), 
  4999 ;;		 -> f_mkdir@dir(2), f_unlink@dir(2), f_stat@dir(2), f_opendir@dir(2), 
  5000 ;;		 -> f_open@dir(2), 
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;  clust           4    7[BANK1 ] unsigned long 
  5003 ;;  dptr            2   11[BANK1 ] PTR unsigned char 
  5004 ;;		 -> fs.win(512), fs(552), NULL(0), 
  5005 ;;  fs              2    4[BANK1 ] PTR struct _FATFS
  5006 ;;		 -> fs(552), NULL(0), 
  5007 ;;  ds              1    6[BANK1 ] unsigned char 
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  1    wreg      enum E155
  5010 ;; Registers used:
  5011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5017 ;;      Params:         0       8       0       0       0       0       0       0       0
  5018 ;;      Locals:         0       0      13       0       0       0       0       0       0
  5019 ;;      Temps:          0      12       0       0       0       0       0       0       0
  5020 ;;      Totals:         0      20      13       0       0       0       0       0       0
  5021 ;;Total ram usage:       33 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:   11
  5024 ;; This function calls:
  5025 ;;		_clust2sect
  5026 ;;		_make_dirfile
  5027 ;;		_memcmp
  5028 ;;		_move_window
  5029 ;;		_next_dir_entry
  5030 ;; This function is called by:
  5031 ;;		_f_open
  5032 ;;		_f_opendir
  5033 ;;		_f_stat
  5034 ;;		_f_unlink
  5035 ;;		_f_mkdir
  5036 ;;		_f_chmod
  5037 ;;		_f_utime
  5038 ;;		_f_rename
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           	psect	text16
  5043  001F4E                     __ptext16:
  5044                           	opt stack 0
  5045  001F4E                     _trace_path:
  5046                           	opt stack 16
  5047                           
  5048                           ;tff.c: 508: CLUST clust;
  5049                           ;tff.c: 509: char ds;
  5050                           ;tff.c: 510: BYTE *dptr = (0);
  5051                           
  5052                           ;incstack = 0
  5053  001F4E  0E00               	movlw	0
  5054  001F50  0101               	movlb	1	; () banked
  5055  001F52  6F7E               	movwf	trace_path@dptr& (0+255),b
  5056  001F54  0E00               	movlw	0
  5057  001F56  0101               	movlb	1	; () banked
  5058  001F58  6F7F               	movwf	(trace_path@dptr+1)& (0+255),b
  5059                           
  5060                           ;tff.c: 511: FATFS *fs = FatFs;
  5061  001F5A  C0FC  F177         	movff	_FatFs,trace_path@fs
  5062  001F5E  C0FD  F178         	movff	_FatFs+1,trace_path@fs+1
  5063                           
  5064                           ; BSR set to: 1
  5065                           ;tff.c: 514: dj->fs = fs;
  5066  001F62  0100               	movlb	0	; () banked
  5067  001F64  EE20 F004          	lfsr	2,4
  5068  001F68  51E3               	movf	trace_path@dj& (0+255),w,b
  5069  001F6A  26D9               	addwf	fsr2l,f,c
  5070  001F6C  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5071  001F6E  22DA               	addwfc	fsr2h,f,c
  5072  001F70  C177  FFDE         	movff	trace_path@fs,postinc2
  5073  001F74  C178  FFDD         	movff	trace_path@fs+1,postdec2
  5074                           
  5075                           ; BSR set to: 0
  5076                           ;tff.c: 515: clust = fs->dirbase;
  5077  001F78  0101               	movlb	1	; () banked
  5078  001F7A  EE20 F00C          	lfsr	2,12
  5079  001F7E  5177               	movf	trace_path@fs& (0+255),w,b
  5080  001F80  26D9               	addwf	fsr2l,f,c
  5081  001F82  5178               	movf	(trace_path@fs+1)& (0+255),w,b
  5082  001F84  22DA               	addwfc	fsr2h,f,c
  5083  001F86  CFDE F17A          	movff	postinc2,trace_path@clust
  5084  001F8A  CFDE F17B          	movff	postinc2,trace_path@clust+1
  5085  001F8E  CFDE F17C          	movff	postinc2,trace_path@clust+2
  5086  001F92  CFDE F17D          	movff	postinc2,trace_path@clust+3
  5087                           
  5088                           ; BSR set to: 1
  5089                           ;tff.c: 517: if (fs->fs_type == 3) {
  5090  001F96  0101               	movlb	1	; () banked
  5091  001F98  EE20 F024          	lfsr	2,36
  5092  001F9C  5177               	movf	trace_path@fs& (0+255),w,b
  5093  001F9E  26D9               	addwf	fsr2l,f,c
  5094  001FA0  5178               	movf	(trace_path@fs+1)& (0+255),w,b
  5095  001FA2  22DA               	addwfc	fsr2h,f,c
  5096  001FA4  0E03               	movlw	3
  5097  001FA6  18DE               	xorwf	postinc2,w,c
  5098  001FA8  A4D8               	btfss	status,2,c
  5099  001FAA  D03A               	goto	l11479
  5100                           
  5101                           ; BSR set to: 1
  5102                           ;tff.c: 518: dj->clust = dj->sclust = clust;
  5103  001FAC  0100               	movlb	0	; () banked
  5104  001FAE  EE20 F006          	lfsr	2,6
  5105  001FB2  51E3               	movf	trace_path@dj& (0+255),w,b
  5106  001FB4  26D9               	addwf	fsr2l,f,c
  5107  001FB6  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5108  001FB8  22DA               	addwfc	fsr2h,f,c
  5109  001FBA  C17A  FFDE         	movff	trace_path@clust,postinc2
  5110  001FBE  C17B  FFDE         	movff	trace_path@clust+1,postinc2
  5111  001FC2  C17C  FFDE         	movff	trace_path@clust+2,postinc2
  5112  001FC6  C17D  FFDD         	movff	trace_path@clust+3,postdec2
  5113  001FCA  52DD               	movf	postdec2,f,c
  5114  001FCC  52DD               	movf	postdec2,f,c
  5115  001FCE  0100               	movlb	0	; () banked
  5116  001FD0  EE10 F00A          	lfsr	1,10
  5117  001FD4  51E3               	movf	trace_path@dj& (0+255),w,b
  5118  001FD6  26E1               	addwf	fsr1l,f,c
  5119  001FD8  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5120  001FDA  22E2               	addwfc	fsr1h,f,c
  5121  001FDC  CFDE FFE6          	movff	postinc2,postinc1
  5122  001FE0  CFDE FFE6          	movff	postinc2,postinc1
  5123  001FE4  CFDE FFE6          	movff	postinc2,postinc1
  5124  001FE8  CFDE FFE6          	movff	postinc2,postinc1
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;tff.c: 519: dj->sect = clust2sect(clust);
  5128  001FEC  C17A  F022         	movff	trace_path@clust,clust2sect@clust
  5129  001FF0  C17B  F023         	movff	trace_path@clust+1,clust2sect@clust+1
  5130  001FF4  C17C  F024         	movff	trace_path@clust+2,clust2sect@clust+2
  5131  001FF8  C17D  F025         	movff	trace_path@clust+3,clust2sect@clust+3
  5132  001FFC  ECDA  F020         	call	_clust2sect	;wreg free
  5133  002000  0100               	movlb	0	; () banked
  5134  002002  EE20 F00E          	lfsr	2,14
  5135  002006  51E3               	movf	trace_path@dj& (0+255),w,b
  5136  002008  26D9               	addwf	fsr2l,f,c
  5137  00200A  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5138  00200C  22DA               	addwfc	fsr2h,f,c
  5139  00200E  C022  FFDE         	movff	?_clust2sect,postinc2
  5140  002012  C023  FFDE         	movff	?_clust2sect+1,postinc2
  5141  002016  C024  FFDE         	movff	?_clust2sect+2,postinc2
  5142  00201A  C025  FFDE         	movff	?_clust2sect+3,postinc2
  5143                           
  5144                           ;tff.c: 520: } else
  5145  00201E  D02B               	goto	l11483
  5146  002020                     l11479:
  5147                           
  5148                           ;tff.c: 522: {
  5149                           ;tff.c: 523: dj->clust = dj->sclust = 0;
  5150  002020  0100               	movlb	0	; () banked
  5151  002022  EE20 F006          	lfsr	2,6
  5152  002026  51E3               	movf	trace_path@dj& (0+255),w,b
  5153  002028  26D9               	addwf	fsr2l,f,c
  5154  00202A  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5155  00202C  22DA               	addwfc	fsr2h,f,c
  5156  00202E  6ADE               	clrf	postinc2,c
  5157  002030  6ADE               	clrf	postinc2,c
  5158  002032  6ADE               	clrf	postinc2,c
  5159  002034  6ADD               	clrf	postdec2,c
  5160  002036  52DD               	movf	postdec2,f,c
  5161  002038  52DD               	movf	postdec2,f,c
  5162  00203A  0100               	movlb	0	; () banked
  5163  00203C  EE10 F00A          	lfsr	1,10
  5164  002040  51E3               	movf	trace_path@dj& (0+255),w,b
  5165  002042  26E1               	addwf	fsr1l,f,c
  5166  002044  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5167  002046  22E2               	addwfc	fsr1h,f,c
  5168  002048  CFDE FFE6          	movff	postinc2,postinc1
  5169  00204C  CFDE FFE6          	movff	postinc2,postinc1
  5170  002050  CFDE FFE6          	movff	postinc2,postinc1
  5171  002054  CFDE FFE6          	movff	postinc2,postinc1
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;tff.c: 524: dj->sect = clust;
  5175  002058  0100               	movlb	0	; () banked
  5176  00205A  EE20 F00E          	lfsr	2,14
  5177  00205E  51E3               	movf	trace_path@dj& (0+255),w,b
  5178  002060  26D9               	addwf	fsr2l,f,c
  5179  002062  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5180  002064  22DA               	addwfc	fsr2h,f,c
  5181  002066  C17A  FFDE         	movff	trace_path@clust,postinc2
  5182  00206A  C17B  FFDE         	movff	trace_path@clust+1,postinc2
  5183  00206E  C17C  FFDE         	movff	trace_path@clust+2,postinc2
  5184  002072  C17D  FFDE         	movff	trace_path@clust+3,postinc2
  5185  002076                     l11483:
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;tff.c: 525: }
  5189                           ;tff.c: 526: dj->index = 0;
  5190  002076  0100               	movlb	0	; () banked
  5191  002078  EE20 F002          	lfsr	2,2
  5192  00207C  51E3               	movf	trace_path@dj& (0+255),w,b
  5193  00207E  26D9               	addwf	fsr2l,f,c
  5194  002080  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5195  002082  22DA               	addwfc	fsr2h,f,c
  5196  002084  0E00               	movlw	0
  5197  002086  6EDE               	movwf	postinc2,c
  5198  002088  0E00               	movlw	0
  5199  00208A  6EDD               	movwf	postdec2,c
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;tff.c: 528: if (*path == '\0') {
  5203  00208C  C0E7  FFF6         	movff	trace_path@path,tblptrl
  5204  002090  C0E8  FFF7         	movff	trace_path@path+1,tblptrh
  5205  002094                     	if	0	;tblptru may be non-zero
  5206  002094                     	endif
  5207  002094                     	if	0	;tblptru may be non-zero
  5208  002094                     	endif
  5209  002094  0008               	tblrd		*
  5210  002096  50F5               	movf	tablat,w,c
  5211  002098  0900               	iorlw	0
  5212  00209A  A4D8               	btfss	status,2,c
  5213  00209C  D00A               	goto	l11493
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;tff.c: 529: *dir = (0); return FR_OK;
  5217  00209E  C0E9  FFD9         	movff	trace_path@dir,fsr2l
  5218  0020A2  C0EA  FFDA         	movff	trace_path@dir+1,fsr2h
  5219  0020A6  0E00               	movlw	0
  5220  0020A8  6EDE               	movwf	postinc2,c
  5221  0020AA  0E00               	movlw	0
  5222  0020AC  6EDD               	movwf	postdec2,c
  5223                           
  5224                           ; BSR set to: 0
  5225  0020AE  0E00               	movlw	0
  5226                           
  5227                           ; BSR set to: 0
  5228  0020B0  0012               	return	
  5229  0020B2                     l11493:
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;tff.c: 533: ds = make_dirfile(&path, fn);
  5233  0020B2  0EE7               	movlw	low trace_path@path
  5234  0020B4  6E1E               	movwf	make_dirfile@path,c
  5235  0020B6  0E00               	movlw	high trace_path@path
  5236  0020B8  6E1F               	movwf	make_dirfile@path+1,c
  5237  0020BA  C0E5  F020         	movff	trace_path@fn,make_dirfile@dirname
  5238  0020BE  C0E6  F021         	movff	trace_path@fn+1,make_dirfile@dirname+1
  5239  0020C2  EC58  F01E         	call	_make_dirfile	;wreg free
  5240  0020C6  0101               	movlb	1	; () banked
  5241  0020C8  6F79               	movwf	trace_path@ds& (0+255),b
  5242                           
  5243                           ; BSR set to: 1
  5244                           ;tff.c: 534: if (ds == 1) return FR_INVALID_NAME;
  5245  0020CA  0101               	movlb	1	; () banked
  5246  0020CC  0579               	decf	trace_path@ds& (0+255),w,b
  5247  0020CE  A4D8               	btfss	status,2,c
  5248  0020D0  D002               	goto	l11501
  5249                           
  5250                           ; BSR set to: 1
  5251  0020D2  0E04               	movlw	4
  5252                           
  5253                           ; BSR set to: 1
  5254  0020D4  0012               	return	
  5255  0020D6                     l11501:
  5256                           
  5257                           ;tff.c: 536: if (!move_window(dj->sect)) return FR_RW_ERROR;
  5258  0020D6  0100               	movlb	0	; () banked
  5259  0020D8  EE20 F00E          	lfsr	2,14
  5260  0020DC  51E3               	movf	trace_path@dj& (0+255),w,b
  5261  0020DE  26D9               	addwf	fsr2l,f,c
  5262  0020E0  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5263  0020E2  22DA               	addwfc	fsr2h,f,c
  5264  0020E4  CFDE F083          	movff	postinc2,move_window@sector
  5265  0020E8  CFDE F084          	movff	postinc2,move_window@sector+1
  5266  0020EC  CFDE F085          	movff	postinc2,move_window@sector+2
  5267  0020F0  CFDE F086          	movff	postinc2,move_window@sector+3
  5268  0020F4  EC60  F019         	call	_move_window	;wreg free
  5269  0020F8  0900               	iorlw	0
  5270  0020FA  A4D8               	btfss	status,2,c
  5271  0020FC  D002               	goto	l11507
  5272  0020FE  0E08               	movlw	8
  5273  002100  0012               	return	
  5274  002102                     l11507:
  5275                           
  5276                           ;tff.c: 537: dptr = &fs->win[(dj->index & 15) * 32];
  5277  002102  0100               	movlb	0	; () banked
  5278  002104  EE20 F002          	lfsr	2,2
  5279  002108  51E3               	movf	trace_path@dj& (0+255),w,b
  5280  00210A  26D9               	addwf	fsr2l,f,c
  5281  00210C  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5282  00210E  22DA               	addwfc	fsr2h,f,c
  5283  002110  CFDE F0EB          	movff	postinc2,??_trace_path
  5284  002114  CFDD F0EC          	movff	postdec2,??_trace_path+1
  5285  002118  0E0F               	movlw	15
  5286  00211A  0100               	movlb	0	; () banked
  5287  00211C  17EB               	andwf	??_trace_path& (0+255),f,b
  5288  00211E  0E00               	movlw	0
  5289  002120  17EC               	andwf	(??_trace_path+1)& (0+255),f,b
  5290  002122  0E05               	movlw	5
  5291  002124                     u13025:
  5292  002124  90D8               	bcf	status,0,c
  5293  002126  0100               	movlb	0	; () banked
  5294  002128  37EB               	rlcf	??_trace_path& (0+255),f,b
  5295  00212A  37EC               	rlcf	(??_trace_path+1)& (0+255),f,b
  5296  00212C  2EE8               	decfsz	wreg,f,c
  5297  00212E  D7FA               	goto	u13025
  5298  002130  0E28               	movlw	40
  5299  002132  0100               	movlb	0	; () banked
  5300  002134  27EB               	addwf	??_trace_path& (0+255),f,b
  5301  002136  0E00               	movlw	0
  5302  002138  23EC               	addwfc	(??_trace_path+1)& (0+255),f,b
  5303  00213A  0100               	movlb	0	; () banked
  5304  00213C  51EB               	movf	??_trace_path& (0+255),w,b
  5305  00213E  0101               	movlb	1	; () banked
  5306  002140  2577               	addwf	trace_path@fs& (0+255),w,b
  5307  002142  0101               	movlb	1	; () banked
  5308  002144  6F7E               	movwf	trace_path@dptr& (0+255),b
  5309  002146  0100               	movlb	0	; () banked
  5310  002148  51EC               	movf	(??_trace_path+1)& (0+255),w,b
  5311  00214A  0101               	movlb	1	; () banked
  5312  00214C  2178               	addwfc	(trace_path@fs+1)& (0+255),w,b
  5313  00214E  0101               	movlb	1	; () banked
  5314  002150  6F7F               	movwf	(trace_path@dptr+1)& (0+255),b
  5315                           
  5316                           ; BSR set to: 1
  5317                           ;tff.c: 538: if (dptr[0] == 0)
  5318  002152  C17E  FFD9         	movff	trace_path@dptr,fsr2l
  5319  002156  C17F  FFDA         	movff	trace_path@dptr+1,fsr2h
  5320  00215A  50DF               	movf	indf2,w,c
  5321  00215C  A4D8               	btfss	status,2,c
  5322  00215E  D012               	goto	l11519
  5323                           
  5324                           ; BSR set to: 1
  5325                           ;tff.c: 539: return !ds ? FR_NO_FILE : FR_NO_PATH;
  5326  002160  0101               	movlb	1	; () banked
  5327  002162  5179               	movf	trace_path@ds& (0+255),w,b
  5328  002164  0101               	movlb	1	; () banked
  5329  002166  B4D8               	btfsc	status,2,c
  5330  002168  D005               	goto	l11515
  5331                           
  5332                           ; BSR set to: 1
  5333  00216A  0E00               	movlw	0
  5334  00216C  0101               	movlb	1	; () banked
  5335  00216E  6F74               	movwf	(_trace_path$1245+1)& (0+255),b
  5336  002170  0E03               	movlw	3
  5337  002172  D004               	goto	L1
  5338  002174                     l11515:
  5339                           
  5340                           ; BSR set to: 1
  5341  002174  0E00               	movlw	0
  5342  002176  0101               	movlb	1	; () banked
  5343  002178  6F74               	movwf	(_trace_path$1245+1)& (0+255),b
  5344  00217A  0E02               	movlw	2
  5345  00217C                     L1:
  5346  00217C  6F73               	movwf	_trace_path$1245& (0+255),b
  5347                           
  5348                           ; BSR set to: 1
  5349  00217E  0101               	movlb	1	; () banked
  5350  002180  5173               	movf	_trace_path$1245& (0+255),w,b
  5351                           
  5352                           ; BSR set to: 1
  5353  002182  0012               	return	
  5354  002184                     l11519:
  5355                           
  5356                           ; BSR set to: 1
  5357                           ;tff.c: 540: if (dptr[0] != 0xE5
  5358                           ;tff.c: 541: && !(dptr[11] & 0x08)
  5359                           ;tff.c: 542: && !memcmp(&dptr[0], fn, 8+3) ) break;
  5360  002184  C17E  FFD9         	movff	trace_path@dptr,fsr2l
  5361  002188  C17F  FFDA         	movff	trace_path@dptr+1,fsr2h
  5362  00218C  0EE5               	movlw	229
  5363  00218E  18DE               	xorwf	postinc2,w,c
  5364  002190  B4D8               	btfsc	status,2,c
  5365  002192  D01C               	goto	l11527
  5366                           
  5367                           ; BSR set to: 1
  5368  002194  0101               	movlb	1	; () banked
  5369  002196  EE20 F00B          	lfsr	2,11
  5370  00219A  517E               	movf	trace_path@dptr& (0+255),w,b
  5371  00219C  26D9               	addwf	fsr2l,f,c
  5372  00219E  517F               	movf	(trace_path@dptr+1)& (0+255),w,b
  5373  0021A0  22DA               	addwfc	fsr2h,f,c
  5374  0021A2  0101               	movlb	1	; () banked
  5375  0021A4  B6DF               	btfsc	indf2,3,c
  5376  0021A6  D012               	goto	l11527
  5377                           
  5378                           ; BSR set to: 1
  5379  0021A8  C17E  F016         	movff	trace_path@dptr,memcmp@s1
  5380  0021AC  C17F  F017         	movff	trace_path@dptr+1,memcmp@s1+1
  5381  0021B0  C0E5  F018         	movff	trace_path@fn,memcmp@s2
  5382  0021B4  C0E6  F019         	movff	trace_path@fn+1,memcmp@s2+1
  5383  0021B8  0E00               	movlw	0
  5384  0021BA  6E1B               	movwf	memcmp@n+1,c
  5385  0021BC  0E0B               	movlw	11
  5386  0021BE  6E1A               	movwf	memcmp@n,c
  5387  0021C0  EC35  F022         	call	_memcmp	;wreg free
  5388  0021C4  5016               	movf	?_memcmp,w,c
  5389  0021C6  1017               	iorwf	?_memcmp+1,w,c
  5390  0021C8  B4D8               	btfsc	status,2,c
  5391  0021CA  D01B               	goto	l11537
  5392  0021CC                     l11527:
  5393                           
  5394                           ;tff.c: 543: if (!next_dir_entry(dj))
  5395  0021CC  C0E3  F0D4         	movff	trace_path@dj,next_dir_entry@dj
  5396  0021D0  C0E4  F0D5         	movff	trace_path@dj+1,next_dir_entry@dj+1
  5397  0021D4  EC81  F01B         	call	_next_dir_entry	;wreg free
  5398  0021D8  0900               	iorlw	0
  5399  0021DA  A4D8               	btfss	status,2,c
  5400  0021DC  D77C               	goto	l11501
  5401                           
  5402                           ;tff.c: 544: return !ds ? FR_NO_FILE : FR_NO_PATH;
  5403  0021DE  0101               	movlb	1	; () banked
  5404  0021E0  5179               	movf	trace_path@ds& (0+255),w,b
  5405  0021E2  0101               	movlb	1	; () banked
  5406  0021E4  B4D8               	btfsc	status,2,c
  5407  0021E6  D005               	goto	l11533
  5408                           
  5409                           ; BSR set to: 1
  5410  0021E8  0E00               	movlw	0
  5411  0021EA  0101               	movlb	1	; () banked
  5412  0021EC  6F76               	movwf	(_trace_path$1247+1)& (0+255),b
  5413  0021EE  0E03               	movlw	3
  5414  0021F0  D004               	goto	L2
  5415  0021F2                     l11533:
  5416                           
  5417                           ; BSR set to: 1
  5418  0021F2  0E00               	movlw	0
  5419  0021F4  0101               	movlb	1	; () banked
  5420  0021F6  6F76               	movwf	(_trace_path$1247+1)& (0+255),b
  5421  0021F8  0E02               	movlw	2
  5422  0021FA                     L2:
  5423  0021FA  6F75               	movwf	_trace_path$1247& (0+255),b
  5424                           
  5425                           ; BSR set to: 1
  5426  0021FC  0101               	movlb	1	; () banked
  5427  0021FE  5175               	movf	_trace_path$1247& (0+255),w,b
  5428                           
  5429                           ; BSR set to: 1
  5430  002200  0012               	return	
  5431  002202                     l11537:
  5432                           
  5433                           ;tff.c: 546: if (!ds) { *dir = dptr; return FR_OK; }
  5434  002202  0101               	movlb	1	; () banked
  5435  002204  5179               	movf	trace_path@ds& (0+255),w,b
  5436  002206  0101               	movlb	1	; () banked
  5437  002208  A4D8               	btfss	status,2,c
  5438  00220A  D00A               	goto	l11545
  5439                           
  5440                           ; BSR set to: 1
  5441  00220C  C0E9  FFD9         	movff	trace_path@dir,fsr2l
  5442  002210  C0EA  FFDA         	movff	trace_path@dir+1,fsr2h
  5443  002214  C17E  FFDE         	movff	trace_path@dptr,postinc2
  5444  002218  C17F  FFDD         	movff	trace_path@dptr+1,postdec2
  5445                           
  5446                           ; BSR set to: 1
  5447  00221C  0E00               	movlw	0
  5448                           
  5449                           ; BSR set to: 1
  5450  00221E  0012               	return	
  5451  002220                     l11545:
  5452                           
  5453                           ; BSR set to: 1
  5454                           ;tff.c: 547: if (!(dptr[11] & 0x10)) return FR_NO_PATH;
  5455  002220  0101               	movlb	1	; () banked
  5456  002222  EE20 F00B          	lfsr	2,11
  5457  002226  517E               	movf	trace_path@dptr& (0+255),w,b
  5458  002228  26D9               	addwf	fsr2l,f,c
  5459  00222A  517F               	movf	(trace_path@dptr+1)& (0+255),w,b
  5460  00222C  22DA               	addwfc	fsr2h,f,c
  5461  00222E  0101               	movlb	1	; () banked
  5462  002230  B8DF               	btfsc	indf2,4,c
  5463  002232  D002               	goto	l11551
  5464                           
  5465                           ; BSR set to: 1
  5466  002234  0E03               	movlw	3
  5467                           
  5468                           ; BSR set to: 1
  5469  002236  0012               	return	
  5470  002238                     l11551:
  5471                           
  5472                           ; BSR set to: 1
  5473                           ;tff.c: 548: clust =
  5474                           ;tff.c: 550: ((DWORD)(WORD)(((WORD)*(volatile BYTE*)((&dptr[20])+1)<<8)|(WORD)*(volatile
      +                           BYTE*)(&dptr[20])) << 16) |
  5475                           ;tff.c: 552: (WORD)(((WORD)*(volatile BYTE*)((&dptr[26])+1)<<8)|(WORD)*(volatile BYTE*)(
      +                          &dptr[26]));
  5476  002238  0E1B               	movlw	27
  5477  00223A  0101               	movlb	1	; () banked
  5478  00223C  257E               	addwf	trace_path@dptr& (0+255),w,b
  5479  00223E  6ED9               	movwf	fsr2l,c
  5480  002240  0E00               	movlw	0
  5481  002242  0101               	movlb	1	; () banked
  5482  002244  217F               	addwfc	(trace_path@dptr+1)& (0+255),w,b
  5483  002246  6EDA               	movwf	fsr2h,c
  5484  002248  50DF               	movf	indf2,w,c
  5485  00224A  0100               	movlb	0	; () banked
  5486  00224C  6FEB               	movwf	??_trace_path& (0+255),b
  5487  00224E  0100               	movlb	0	; () banked
  5488  002250  51EB               	movf	??_trace_path& (0+255),w,b
  5489  002252  0100               	movlb	0	; () banked
  5490  002254  6FED               	movwf	(??_trace_path+2)& (0+255),b
  5491  002256  6BEC               	clrf	(??_trace_path+1)& (0+255),b
  5492  002258  0E1A               	movlw	26
  5493  00225A  0101               	movlb	1	; () banked
  5494  00225C  257E               	addwf	trace_path@dptr& (0+255),w,b
  5495  00225E  6ED9               	movwf	fsr2l,c
  5496  002260  0E00               	movlw	0
  5497  002262  0101               	movlb	1	; () banked
  5498  002264  217F               	addwfc	(trace_path@dptr+1)& (0+255),w,b
  5499  002266  6EDA               	movwf	fsr2h,c
  5500  002268  50DF               	movf	indf2,w,c
  5501  00226A  0100               	movlb	0	; () banked
  5502  00226C  6FEE               	movwf	(??_trace_path+3)& (0+255),b
  5503  00226E  0100               	movlb	0	; () banked
  5504  002270  51EE               	movf	(??_trace_path+3)& (0+255),w,b
  5505  002272  0100               	movlb	0	; () banked
  5506  002274  13EC               	iorwf	(??_trace_path+1)& (0+255),f,b
  5507  002276  0E00               	movlw	0
  5508  002278  13ED               	iorwf	(??_trace_path+2)& (0+255),f,b
  5509  00227A  0E15               	movlw	21
  5510  00227C  0101               	movlb	1	; () banked
  5511  00227E  257E               	addwf	trace_path@dptr& (0+255),w,b
  5512  002280  6ED9               	movwf	fsr2l,c
  5513  002282  0E00               	movlw	0
  5514  002284  0101               	movlb	1	; () banked
  5515  002286  217F               	addwfc	(trace_path@dptr+1)& (0+255),w,b
  5516  002288  6EDA               	movwf	fsr2h,c
  5517  00228A  50DF               	movf	indf2,w,c
  5518  00228C  0100               	movlb	0	; () banked
  5519  00228E  6FEF               	movwf	(??_trace_path+4)& (0+255),b
  5520  002290  0100               	movlb	0	; () banked
  5521  002292  51EF               	movf	(??_trace_path+4)& (0+255),w,b
  5522  002294  0100               	movlb	0	; () banked
  5523  002296  6FF1               	movwf	(??_trace_path+6)& (0+255),b
  5524  002298  6BF0               	clrf	(??_trace_path+5)& (0+255),b
  5525  00229A  0E14               	movlw	20
  5526  00229C  0101               	movlb	1	; () banked
  5527  00229E  257E               	addwf	trace_path@dptr& (0+255),w,b
  5528  0022A0  6ED9               	movwf	fsr2l,c
  5529  0022A2  0E00               	movlw	0
  5530  0022A4  0101               	movlb	1	; () banked
  5531  0022A6  217F               	addwfc	(trace_path@dptr+1)& (0+255),w,b
  5532  0022A8  6EDA               	movwf	fsr2h,c
  5533  0022AA  50DF               	movf	indf2,w,c
  5534  0022AC  0100               	movlb	0	; () banked
  5535  0022AE  6FF2               	movwf	(??_trace_path+7)& (0+255),b
  5536  0022B0  0100               	movlb	0	; () banked
  5537  0022B2  51F2               	movf	(??_trace_path+7)& (0+255),w,b
  5538  0022B4  0100               	movlb	0	; () banked
  5539  0022B6  11F0               	iorwf	(??_trace_path+5)& (0+255),w,b
  5540  0022B8  0100               	movlb	0	; () banked
  5541  0022BA  6FF3               	movwf	(??_trace_path+8)& (0+255),b
  5542  0022BC  0100               	movlb	0	; () banked
  5543  0022BE  51F1               	movf	(??_trace_path+6)& (0+255),w,b
  5544  0022C0  0100               	movlb	0	; () banked
  5545  0022C2  6FF4               	movwf	(??_trace_path+9)& (0+255),b
  5546  0022C4  0100               	movlb	0	; () banked
  5547  0022C6  6BF5               	clrf	(??_trace_path+10)& (0+255),b
  5548  0022C8  0100               	movlb	0	; () banked
  5549  0022CA  6BF6               	clrf	(??_trace_path+11)& (0+255),b
  5550  0022CC  C0F4  F0F6         	movff	??_trace_path+9,??_trace_path+11
  5551  0022D0  C0F3  F0F5         	movff	??_trace_path+8,??_trace_path+10
  5552  0022D4  0100               	movlb	0	; () banked
  5553  0022D6  6BF4               	clrf	(??_trace_path+9)& (0+255),b
  5554  0022D8  6BF3               	clrf	(??_trace_path+8)& (0+255),b
  5555  0022DA  0100               	movlb	0	; () banked
  5556  0022DC  51EC               	movf	(??_trace_path+1)& (0+255),w,b
  5557  0022DE  0100               	movlb	0	; () banked
  5558  0022E0  11F3               	iorwf	(??_trace_path+8)& (0+255),w,b
  5559  0022E2  0101               	movlb	1	; () banked
  5560  0022E4  6F7A               	movwf	trace_path@clust& (0+255),b
  5561  0022E6  0100               	movlb	0	; () banked
  5562  0022E8  51ED               	movf	(??_trace_path+2)& (0+255),w,b
  5563  0022EA  0100               	movlb	0	; () banked
  5564  0022EC  11F4               	iorwf	(??_trace_path+9)& (0+255),w,b
  5565  0022EE  0101               	movlb	1	; () banked
  5566  0022F0  6F7B               	movwf	(trace_path@clust+1)& (0+255),b
  5567  0022F2  0E00               	movlw	0
  5568  0022F4  0100               	movlb	0	; () banked
  5569  0022F6  11F5               	iorwf	(??_trace_path+10)& (0+255),w,b
  5570  0022F8  0101               	movlb	1	; () banked
  5571  0022FA  6F7C               	movwf	(trace_path@clust+2)& (0+255),b
  5572  0022FC  0E00               	movlw	0
  5573  0022FE  0100               	movlb	0	; () banked
  5574  002300  11F6               	iorwf	(??_trace_path+11)& (0+255),w,b
  5575  002302  0101               	movlb	1	; () banked
  5576  002304  6F7D               	movwf	(trace_path@clust+3)& (0+255),b
  5577                           
  5578                           ; BSR set to: 1
  5579                           ;tff.c: 553: dj->clust = dj->sclust = clust;
  5580  002306  0100               	movlb	0	; () banked
  5581  002308  EE20 F006          	lfsr	2,6
  5582  00230C  51E3               	movf	trace_path@dj& (0+255),w,b
  5583  00230E  26D9               	addwf	fsr2l,f,c
  5584  002310  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5585  002312  22DA               	addwfc	fsr2h,f,c
  5586  002314  C17A  FFDE         	movff	trace_path@clust,postinc2
  5587  002318  C17B  FFDE         	movff	trace_path@clust+1,postinc2
  5588  00231C  C17C  FFDE         	movff	trace_path@clust+2,postinc2
  5589  002320  C17D  FFDD         	movff	trace_path@clust+3,postdec2
  5590  002324  52DD               	movf	postdec2,f,c
  5591  002326  52DD               	movf	postdec2,f,c
  5592  002328  0100               	movlb	0	; () banked
  5593  00232A  EE10 F00A          	lfsr	1,10
  5594  00232E  51E3               	movf	trace_path@dj& (0+255),w,b
  5595  002330  26E1               	addwf	fsr1l,f,c
  5596  002332  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5597  002334  22E2               	addwfc	fsr1h,f,c
  5598  002336  CFDE FFE6          	movff	postinc2,postinc1
  5599  00233A  CFDE FFE6          	movff	postinc2,postinc1
  5600  00233E  CFDE FFE6          	movff	postinc2,postinc1
  5601  002342  CFDE FFE6          	movff	postinc2,postinc1
  5602                           
  5603                           ; BSR set to: 0
  5604                           ;tff.c: 554: dj->sect = clust2sect(clust);
  5605  002346  C17A  F022         	movff	trace_path@clust,clust2sect@clust
  5606  00234A  C17B  F023         	movff	trace_path@clust+1,clust2sect@clust+1
  5607  00234E  C17C  F024         	movff	trace_path@clust+2,clust2sect@clust+2
  5608  002352  C17D  F025         	movff	trace_path@clust+3,clust2sect@clust+3
  5609  002356  ECDA  F020         	call	_clust2sect	;wreg free
  5610  00235A  0100               	movlb	0	; () banked
  5611  00235C  EE20 F00E          	lfsr	2,14
  5612  002360  51E3               	movf	trace_path@dj& (0+255),w,b
  5613  002362  26D9               	addwf	fsr2l,f,c
  5614  002364  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5615  002366  22DA               	addwfc	fsr2h,f,c
  5616  002368  C022  FFDE         	movff	?_clust2sect,postinc2
  5617  00236C  C023  FFDE         	movff	?_clust2sect+1,postinc2
  5618  002370  C024  FFDE         	movff	?_clust2sect+2,postinc2
  5619  002374  C025  FFDE         	movff	?_clust2sect+3,postinc2
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;tff.c: 555: dj->index = 2;
  5623  002378  0100               	movlb	0	; () banked
  5624  00237A  EE20 F002          	lfsr	2,2
  5625  00237E  51E3               	movf	trace_path@dj& (0+255),w,b
  5626  002380  26D9               	addwf	fsr2l,f,c
  5627  002382  51E4               	movf	(trace_path@dj+1)& (0+255),w,b
  5628  002384  22DA               	addwfc	fsr2h,f,c
  5629  002386  0E02               	movlw	2
  5630  002388  6EDE               	movwf	postinc2,c
  5631  00238A  0E00               	movlw	0
  5632  00238C  6EDD               	movwf	postdec2,c
  5633                           
  5634                           ;tff.c: 556: }
  5635  00238E  D691               	goto	l11493
  5636  002390                     __end_of_trace_path:
  5637                           	opt stack 0
  5638                           tosu	equ	0xFFF
  5639                           tosh	equ	0xFFE
  5640                           tosl	equ	0xFFD
  5641                           pclath	equ	0xFFA
  5642                           tblptru	equ	0xFF8
  5643                           tblptrh	equ	0xFF7
  5644                           tblptrl	equ	0xFF6
  5645                           tablat	equ	0xFF5
  5646                           prodh	equ	0xFF4
  5647                           prodl	equ	0xFF3
  5648                           intcon	equ	0xFF2
  5649                           intcon2	equ	0xFF1
  5650                           intcon3	equ	0xFF0
  5651                           postinc0	equ	0xFEE
  5652                           wreg	equ	0xFE8
  5653                           postinc1	equ	0xFE6
  5654                           postdec1	equ	0xFE5
  5655                           fsr1h	equ	0xFE2
  5656                           fsr1l	equ	0xFE1
  5657                           indf2	equ	0xFDF
  5658                           postinc2	equ	0xFDE
  5659                           postdec2	equ	0xFDD
  5660                           fsr2h	equ	0xFDA
  5661                           fsr2l	equ	0xFD9
  5662                           status	equ	0xFD8
  5663                           
  5664 ;; *************** function _make_dirfile *****************
  5665 ;; Defined at:
  5666 ;;		line 438 in file "bibliotecas/tff.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;  path            2   29[COMRAM] PTR PTR const unsigned c
  5669 ;;		 -> trace_path@path(2), 
  5670 ;;  dirname         2   31[COMRAM] PTR unsigned char 
  5671 ;;		 -> f_rename@fn(12), f_utime@fn(12), f_chmod@fn(12), f_mkdir@fn(12), 
  5672 ;;		 -> f_unlink@fn(12), f_stat@fn(12), f_opendir@fn(12), f_open@fn(12), 
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;  c               1   41[COMRAM] unsigned char 
  5675 ;;  n               1   40[COMRAM] unsigned char 
  5676 ;;  a               1   39[COMRAM] unsigned char 
  5677 ;;  t               1   38[COMRAM] unsigned char 
  5678 ;;  b               1   37[COMRAM] unsigned char 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  1    wreg      unsigned char 
  5681 ;; Registers used:
  5682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5688 ;;      Params:         4       0       0       0       0       0       0       0       0
  5689 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5690 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5691 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5692 ;;Total ram usage:       13 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; Hardware stack levels required when called:    3
  5695 ;; This function calls:
  5696 ;;		_memset
  5697 ;; This function is called by:
  5698 ;;		_trace_path
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702                           	psect	text17
  5703  003CB0                     __ptext17:
  5704                           	opt stack 0
  5705  003CB0                     _make_dirfile:
  5706                           	opt stack 23
  5707                           
  5708                           ;tff.c: 443: BYTE n, t, c, a, b;
  5709                           ;tff.c: 446: memset(dirname, ' ', 8+3);
  5710                           
  5711                           ;incstack = 0
  5712  003CB0  C020  F016         	movff	make_dirfile@dirname,memset@p1
  5713  003CB4  C021  F017         	movff	make_dirfile@dirname+1,memset@p1+1
  5714  003CB8  0E00               	movlw	0
  5715  003CBA  6E19               	movwf	memset@c+1,c
  5716  003CBC  0E20               	movlw	32
  5717  003CBE  6E18               	movwf	memset@c,c
  5718  003CC0  0E00               	movlw	0
  5719  003CC2  6E1B               	movwf	memset@n+1,c
  5720  003CC4  0E0B               	movlw	11
  5721  003CC6  6E1A               	movwf	memset@n,c
  5722  003CC8  EC4E  F027         	call	_memset	;wreg free
  5723                           
  5724                           ;tff.c: 447: a = 0; b = 0x18;
  5725  003CCC  0E00               	movlw	0
  5726  003CCE  6E28               	movwf	make_dirfile@a,c
  5727  003CD0  0E18               	movlw	24
  5728  003CD2  6E26               	movwf	make_dirfile@b,c
  5729                           
  5730                           ;tff.c: 448: n = 0; t = 8;
  5731  003CD4  0E00               	movlw	0
  5732  003CD6  6E29               	movwf	make_dirfile@n,c
  5733  003CD8  0E08               	movlw	8
  5734  003CDA  D043               	goto	L3
  5735  003CDC                     l11223:
  5736                           
  5737                           ;tff.c: 450: c = *(*path)++;
  5738  003CDC  C01E  FFD9         	movff	make_dirfile@path,fsr2l
  5739  003CE0  C01F  FFDA         	movff	make_dirfile@path+1,fsr2h
  5740  003CE4  CFDF F022          	movff	indf2,??_make_dirfile
  5741  003CE8  0E01               	movlw	1
  5742  003CEA  26DE               	addwf	postinc2,f,c
  5743  003CEC  CFDF F023          	movff	indf2,??_make_dirfile+1
  5744  003CF0  0E00               	movlw	0
  5745  003CF2  22DD               	addwfc	postdec2,f,c
  5746  003CF4  C022  FFF6         	movff	??_make_dirfile,tblptrl
  5747  003CF8  C023  FFF7         	movff	??_make_dirfile+1,tblptrh
  5748  003CFC                     	if	0	;tblptru may be non-zero
  5749  003CFC                     	endif
  5750  003CFC                     	if	0	;tblptru may be non-zero
  5751  003CFC                     	endif
  5752  003CFC  0008               	tblrd		*
  5753  003CFE  CFF5 F02A          	movff	tablat,make_dirfile@c
  5754                           
  5755                           ;tff.c: 451: if (c == '\0' || c == '/') {
  5756  003D02  502A               	movf	make_dirfile@c,w,c
  5757  003D04  B4D8               	btfsc	status,2,c
  5758  003D06  D004               	goto	l11229
  5759  003D08  0E2F               	movlw	47
  5760  003D0A  182A               	xorwf	make_dirfile@c,w,c
  5761  003D0C  A4D8               	btfss	status,2,c
  5762  003D0E  D013               	goto	l11243
  5763  003D10                     l11229:
  5764                           
  5765                           ;tff.c: 452: if (n == 0) break;
  5766  003D10  5029               	movf	make_dirfile@n,w,c
  5767  003D12  B4D8               	btfsc	status,2,c
  5768  003D14  D08E               	goto	l11331
  5769                           
  5770                           ;tff.c: 453: dirname[11] = 1 ? (a & b) : 0;
  5771  003D16  5028               	movf	make_dirfile@a,w,c
  5772  003D18  1426               	andwf	make_dirfile@b,w,c
  5773  003D1A  6E22               	movwf	??_make_dirfile& (0+255),c
  5774  003D1C  5022               	movf	??_make_dirfile,w,c
  5775  003D1E  6E24               	movwf	_make_dirfile$1198,c
  5776  003D20  6A25               	clrf	_make_dirfile$1198+1,c
  5777  003D22  EE20 F00B          	lfsr	2,11
  5778  003D26  5020               	movf	make_dirfile@dirname,w,c
  5779  003D28  26D9               	addwf	fsr2l,f,c
  5780  003D2A  5021               	movf	make_dirfile@dirname+1,w,c
  5781  003D2C  22DA               	addwfc	fsr2h,f,c
  5782  003D2E  C024  FFDF         	movff	_make_dirfile$1198,indf2
  5783                           
  5784                           ;tff.c: 454: return c;
  5785  003D32  502A               	movf	make_dirfile@c,w,c
  5786  003D34  0012               	return	
  5787  003D36                     l11243:
  5788                           
  5789                           ;tff.c: 455: }
  5790                           ;tff.c: 456: if (c <= ' ' || c == 0x7F) break;
  5791  003D36  0E20               	movlw	32
  5792  003D38  642A               	cpfsgt	make_dirfile@c,c
  5793  003D3A  D07B               	goto	l11331
  5794  003D3C  0E7F               	movlw	127
  5795  003D3E  182A               	xorwf	make_dirfile@c,w,c
  5796  003D40  B4D8               	btfsc	status,2,c
  5797  003D42  D077               	goto	l11331
  5798                           
  5799                           ;tff.c: 457: if (c == '.') {
  5800  003D44  0E2E               	movlw	46
  5801  003D46  182A               	xorwf	make_dirfile@c,w,c
  5802  003D48  A4D8               	btfss	status,2,c
  5803  003D4A  D00D               	goto	l11257
  5804                           
  5805                           ;tff.c: 458: if (!(a & 1) && n >= 1 && n <= 8) {
  5806  003D4C  B028               	btfsc	make_dirfile@a,0,c
  5807  003D4E  D071               	goto	l11331
  5808  003D50  5029               	movf	make_dirfile@n,w,c
  5809  003D52  B4D8               	btfsc	status,2,c
  5810  003D54  D06E               	goto	l11331
  5811  003D56  0E09               	movlw	9
  5812  003D58  6029               	cpfslt	make_dirfile@n,c
  5813  003D5A  D06B               	goto	l11331
  5814                           
  5815                           ;tff.c: 459: n = 8; t = 11; continue;
  5816  003D5C  0E08               	movlw	8
  5817  003D5E  6E29               	movwf	make_dirfile@n,c
  5818  003D60  0E0B               	movlw	11
  5819  003D62                     L3:
  5820  003D62  6E27               	movwf	make_dirfile@t,c
  5821  003D64  D7BB               	goto	l11223
  5822  003D66                     l11257:
  5823  003D66  0E80               	movlw	128
  5824  003D68  642A               	cpfsgt	make_dirfile@c,c
  5825  003D6A  D003               	goto	l11261
  5826  003D6C  0E9F               	movlw	159
  5827  003D6E  642A               	cpfsgt	make_dirfile@c,c
  5828  003D70  D006               	goto	l11265
  5829  003D72                     l11261:
  5830  003D72  0EDF               	movlw	223
  5831  003D74  642A               	cpfsgt	make_dirfile@c,c
  5832  003D76  D00F               	goto	l11273
  5833  003D78  0EFD               	movlw	253
  5834  003D7A  602A               	cpfslt	make_dirfile@c,c
  5835  003D7C  D00C               	goto	l11273
  5836  003D7E                     l11265:
  5837                           
  5838                           ;tff.c: 466: if (n == 0 && c == 0xE5)
  5839  003D7E  5029               	movf	make_dirfile@n,w,c
  5840  003D80  A4D8               	btfss	status,2,c
  5841  003D82  D006               	goto	l11271
  5842  003D84  0EE5               	movlw	229
  5843  003D86  182A               	xorwf	make_dirfile@c,w,c
  5844  003D88  A4D8               	btfss	status,2,c
  5845  003D8A  D002               	goto	l11271
  5846                           
  5847                           ;tff.c: 467: c = 0x05;
  5848  003D8C  0E05               	movlw	5
  5849  003D8E  6E2A               	movwf	make_dirfile@c,c
  5850  003D90                     l11271:
  5851                           
  5852                           ;tff.c: 468: a ^= 1; goto md_l2;
  5853  003D90  0E01               	movlw	1
  5854  003D92  1A28               	xorwf	make_dirfile@a,f,c
  5855  003D94  D03E               	goto	l11323
  5856  003D96                     l11273:
  5857                           
  5858                           ;tff.c: 469: }
  5859                           ;tff.c: 470: if (c == '"') break;
  5860  003D96  0E22               	movlw	34
  5861  003D98  182A               	xorwf	make_dirfile@c,w,c
  5862  003D9A  B4D8               	btfsc	status,2,c
  5863  003D9C  D04A               	goto	l11331
  5864                           
  5865                           ;tff.c: 471: if (c <= ')') goto md_l1;
  5866  003D9E  0E2A               	movlw	42
  5867  003DA0  602A               	cpfslt	make_dirfile@c,c
  5868  003DA2  D001               	goto	l11281
  5869  003DA4  D035               	goto	l694
  5870  003DA6                     l11281:
  5871                           
  5872                           ;tff.c: 472: if (c <= ',') break;
  5873  003DA6  0E2D               	movlw	45
  5874  003DA8  602A               	cpfslt	make_dirfile@c,c
  5875  003DAA  D001               	goto	l11285
  5876  003DAC  D042               	goto	l11331
  5877  003DAE                     l11285:
  5878                           
  5879                           ;tff.c: 473: if (c <= '9') goto md_l1;
  5880  003DAE  0E3A               	movlw	58
  5881  003DB0  602A               	cpfslt	make_dirfile@c,c
  5882  003DB2  D001               	goto	l11289
  5883  003DB4  D02D               	goto	l694
  5884  003DB6                     l11289:
  5885                           
  5886                           ;tff.c: 474: if (c <= '?') break;
  5887  003DB6  0E40               	movlw	64
  5888  003DB8  602A               	cpfslt	make_dirfile@c,c
  5889  003DBA  D001               	goto	l697
  5890  003DBC  D03A               	goto	l11331
  5891  003DBE                     l697:
  5892                           
  5893                           ;tff.c: 475: if (!(a & 1)) {
  5894  003DBE  B028               	btfsc	make_dirfile@a,0,c
  5895  003DC0  D027               	goto	l694
  5896                           
  5897                           ;tff.c: 476: if (c == '|') break;
  5898  003DC2  0E7C               	movlw	124
  5899  003DC4  182A               	xorwf	make_dirfile@c,w,c
  5900  003DC6  B4D8               	btfsc	status,2,c
  5901  003DC8  D034               	goto	l11331
  5902                           
  5903                           ;tff.c: 477: if (c >= '[' && c <= ']') break;
  5904  003DCA  0E5A               	movlw	90
  5905  003DCC  642A               	cpfsgt	make_dirfile@c,c
  5906  003DCE  D004               	goto	l11303
  5907  003DD0  0E5E               	movlw	94
  5908  003DD2  602A               	cpfslt	make_dirfile@c,c
  5909  003DD4  D001               	goto	l11303
  5910  003DD6  D02D               	goto	l11331
  5911  003DD8                     l11303:
  5912  003DD8  0E40               	movlw	64
  5913  003DDA  642A               	cpfsgt	make_dirfile@c,c
  5914  003DDC  D00A               	goto	l11313
  5915  003DDE  0E5B               	movlw	91
  5916  003DE0  602A               	cpfslt	make_dirfile@c,c
  5917  003DE2  D007               	goto	l11313
  5918                           
  5919                           ;tff.c: 479: (t == 8) ? (b &= 0xF7) : (b &= 0xEF);
  5920  003DE4  0E08               	movlw	8
  5921  003DE6  1827               	xorwf	make_dirfile@t,w,c
  5922  003DE8  A4D8               	btfss	status,2,c
  5923  003DEA  D002               	goto	l11311
  5924  003DEC  9626               	bcf	make_dirfile@b,3,c
  5925  003DEE  D001               	goto	l11313
  5926  003DF0                     l11311:
  5927  003DF0  9826               	bcf	make_dirfile@b,4,c
  5928  003DF2                     l11313:
  5929                           
  5930                           ;tff.c: 480: if (c >= 'a' && c <= 'z') {
  5931  003DF2  0E60               	movlw	96
  5932  003DF4  642A               	cpfsgt	make_dirfile@c,c
  5933  003DF6  D00C               	goto	l694
  5934  003DF8  0E7B               	movlw	123
  5935  003DFA  602A               	cpfslt	make_dirfile@c,c
  5936  003DFC  D009               	goto	l694
  5937                           
  5938                           ;tff.c: 482: if (1) (t == 8) ? (a |= 0x08) : (a |= 0x10);
  5939  003DFE  0E20               	movlw	32
  5940  003E00  5E2A               	subwf	make_dirfile@c,f,c
  5941  003E02  0E08               	movlw	8
  5942  003E04  1827               	xorwf	make_dirfile@t,w,c
  5943  003E06  A4D8               	btfss	status,2,c
  5944  003E08  D002               	goto	l11321
  5945  003E0A  8628               	bsf	make_dirfile@a,3,c
  5946  003E0C  D001               	goto	l694
  5947  003E0E                     l11321:
  5948  003E0E  8828               	bsf	make_dirfile@a,4,c
  5949  003E10                     l694:
  5950                           
  5951                           ;tff.c: 486: a &= 0xFE;
  5952  003E10  9028               	bcf	make_dirfile@a,0,c
  5953  003E12                     l11323:
  5954                           
  5955                           ;tff.c: 488: if (n >= t) break;
  5956  003E12  5027               	movf	make_dirfile@t,w,c
  5957  003E14  5C29               	subwf	make_dirfile@n,w,c
  5958  003E16  B0D8               	btfsc	status,0,c
  5959  003E18  D00C               	goto	l11331
  5960                           
  5961                           ;tff.c: 489: dirname[n++] = c;
  5962  003E1A  5029               	movf	make_dirfile@n,w,c
  5963  003E1C  0D01               	mullw	1
  5964  003E1E  50F3               	movf	prodl,w,c
  5965  003E20  2420               	addwf	make_dirfile@dirname,w,c
  5966  003E22  6ED9               	movwf	fsr2l,c
  5967  003E24  50F4               	movf	prodh,w,c
  5968  003E26  2021               	addwfc	make_dirfile@dirname+1,w,c
  5969  003E28  6EDA               	movwf	fsr2h,c
  5970  003E2A  C02A  FFDF         	movff	make_dirfile@c,indf2
  5971  003E2E  2A29               	incf	make_dirfile@n,f,c
  5972                           
  5973                           ;tff.c: 490: }
  5974  003E30  D755               	goto	l11223
  5975  003E32                     l11331:
  5976                           
  5977                           ;tff.c: 491: return 1;
  5978  003E32  0E01               	movlw	1
  5979  003E34  0012               	return	
  5980  003E36                     __end_of_make_dirfile:
  5981                           	opt stack 0
  5982                           tosu	equ	0xFFF
  5983                           tosh	equ	0xFFE
  5984                           tosl	equ	0xFFD
  5985                           pclath	equ	0xFFA
  5986                           tblptru	equ	0xFF8
  5987                           tblptrh	equ	0xFF7
  5988                           tblptrl	equ	0xFF6
  5989                           tablat	equ	0xFF5
  5990                           prodh	equ	0xFF4
  5991                           prodl	equ	0xFF3
  5992                           intcon	equ	0xFF2
  5993                           intcon2	equ	0xFF1
  5994                           intcon3	equ	0xFF0
  5995                           postinc0	equ	0xFEE
  5996                           wreg	equ	0xFE8
  5997                           postinc1	equ	0xFE6
  5998                           postdec1	equ	0xFE5
  5999                           fsr1h	equ	0xFE2
  6000                           fsr1l	equ	0xFE1
  6001                           indf2	equ	0xFDF
  6002                           postinc2	equ	0xFDE
  6003                           postdec2	equ	0xFDD
  6004                           fsr2h	equ	0xFDA
  6005                           fsr2l	equ	0xFD9
  6006                           status	equ	0xFD8
  6007                           
  6008 ;; *************** function _reserve_direntry *****************
  6009 ;; Defined at:
  6010 ;;		line 567 in file "bibliotecas/tff.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;  dj              2  142[BANK0 ] PTR struct _DIR
  6013 ;;		 -> f_rename@dj(18), f_mkdir@dj(18), f_open@dj(18), 
  6014 ;;  dir             2  144[BANK0 ] PTR PTR unsigned char 
  6015 ;;		 -> f_rename@dir_new(2), f_mkdir@dir(2), f_open@dir(2), 
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;  clust           4    8[BANK1 ] unsigned long 
  6018 ;;  sector          4    0[BANK1 ] unsigned long 
  6019 ;;  fs              2   12[BANK1 ] PTR struct _FATFS
  6020 ;;		 -> fs(552), NULL(0), 
  6021 ;;  dptr            2    5[BANK1 ] PTR unsigned char 
  6022 ;;		 -> fs.win(512), fs(552), NULL(0), 
  6023 ;;  c               1    7[BANK1 ] unsigned char 
  6024 ;;  n               1    4[BANK1 ] unsigned char 
  6025 ;; Return value:  Size  Location     Type
  6026 ;;                  1    wreg      enum E155
  6027 ;; Registers used:
  6028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6029 ;; Tracked objects:
  6030 ;;		On entry : 0/0
  6031 ;;		On exit  : 0/0
  6032 ;;		Unchanged: 0/0
  6033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6034 ;;      Params:         0       4       0       0       0       0       0       0       0
  6035 ;;      Locals:         0       0      14       0       0       0       0       0       0
  6036 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6037 ;;      Totals:         0       6      14       0       0       0       0       0       0
  6038 ;;Total ram usage:       20 bytes
  6039 ;; Hardware stack levels used:    1
  6040 ;; Hardware stack levels required when called:   11
  6041 ;; This function calls:
  6042 ;;		_clust2sect
  6043 ;;		_create_chain
  6044 ;;		_disk_write
  6045 ;;		_memset
  6046 ;;		_move_window
  6047 ;;		_next_dir_entry
  6048 ;; This function is called by:
  6049 ;;		_f_open
  6050 ;;		_f_mkdir
  6051 ;;		_f_rename
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text18
  6056  0026F2                     __ptext18:
  6057                           	opt stack 0
  6058  0026F2                     _reserve_direntry:
  6059                           	opt stack 16
  6060                           
  6061                           ;tff.c: 572: CLUST clust;
  6062                           ;tff.c: 573: DWORD sector;
  6063                           ;tff.c: 574: BYTE c, n, *dptr;
  6064                           ;tff.c: 575: FATFS *fs = dj->fs;
  6065                           
  6066                           ;incstack = 0
  6067  0026F2  0100               	movlb	0	; () banked
  6068  0026F4  EE20 F004          	lfsr	2,4
  6069  0026F8  51EE               	movf	reserve_direntry@dj& (0+255),w,b
  6070  0026FA  26D9               	addwf	fsr2l,f,c
  6071  0026FC  51EF               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6072  0026FE  22DA               	addwfc	fsr2h,f,c
  6073  002700  CFDE F17F          	movff	postinc2,reserve_direntry@fs
  6074  002704  CFDD F180          	movff	postdec2,reserve_direntry@fs+1
  6075                           
  6076                           ;tff.c: 579: clust = dj->sclust;
  6077  002708  0100               	movlb	0	; () banked
  6078  00270A  EE20 F006          	lfsr	2,6
  6079  00270E  51EE               	movf	reserve_direntry@dj& (0+255),w,b
  6080  002710  26D9               	addwf	fsr2l,f,c
  6081  002712  51EF               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6082  002714  22DA               	addwfc	fsr2h,f,c
  6083  002716  CFDE F17B          	movff	postinc2,reserve_direntry@clust
  6084  00271A  CFDE F17C          	movff	postinc2,reserve_direntry@clust+1
  6085  00271E  CFDE F17D          	movff	postinc2,reserve_direntry@clust+2
  6086  002722  CFDE F17E          	movff	postinc2,reserve_direntry@clust+3
  6087                           
  6088                           ; BSR set to: 0
  6089                           ;tff.c: 580: if (clust != 0) {
  6090  002726  0101               	movlb	1	; () banked
  6091  002728  517B               	movf	reserve_direntry@clust& (0+255),w,b
  6092  00272A  0101               	movlb	1	; () banked
  6093  00272C  117C               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
  6094  00272E  0101               	movlb	1	; () banked
  6095  002730  117D               	iorwf	(reserve_direntry@clust+2)& (0+255),w,b
  6096  002732  0101               	movlb	1	; () banked
  6097  002734  117E               	iorwf	(reserve_direntry@clust+3)& (0+255),w,b
  6098  002736  B4D8               	btfsc	status,2,c
  6099  002738  D029               	goto	l11567
  6100                           
  6101                           ; BSR set to: 1
  6102                           ;tff.c: 581: dj->clust = clust;
  6103  00273A  0100               	movlb	0	; () banked
  6104  00273C  EE20 F00A          	lfsr	2,10
  6105  002740  51EE               	movf	reserve_direntry@dj& (0+255),w,b
  6106  002742  26D9               	addwf	fsr2l,f,c
  6107  002744  51EF               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6108  002746  22DA               	addwfc	fsr2h,f,c
  6109  002748  C17B  FFDE         	movff	reserve_direntry@clust,postinc2
  6110  00274C  C17C  FFDE         	movff	reserve_direntry@clust+1,postinc2
  6111  002750  C17D  FFDE         	movff	reserve_direntry@clust+2,postinc2
  6112  002754  C17E  FFDE         	movff	reserve_direntry@clust+3,postinc2
  6113                           
  6114                           ; BSR set to: 0
  6115                           ;tff.c: 582: dj->sect = clust2sect(clust);
  6116  002758  C17B  F022         	movff	reserve_direntry@clust,clust2sect@clust
  6117  00275C  C17C  F023         	movff	reserve_direntry@clust+1,clust2sect@clust+1
  6118  002760  C17D  F024         	movff	reserve_direntry@clust+2,clust2sect@clust+2
  6119  002764  C17E  F025         	movff	reserve_direntry@clust+3,clust2sect@clust+3
  6120  002768  ECDA  F020         	call	_clust2sect	;wreg free
  6121  00276C  0100               	movlb	0	; () banked
  6122  00276E  EE20 F00E          	lfsr	2,14
  6123  002772  51EE               	movf	reserve_direntry@dj& (0+255),w,b
  6124  002774  26D9               	addwf	fsr2l,f,c
  6125  002776  51EF               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6126  002778  22DA               	addwfc	fsr2h,f,c
  6127  00277A  C022  FFDE         	movff	?_clust2sect,postinc2
  6128  00277E  C023  FFDE         	movff	?_clust2sect+1,postinc2
  6129  002782  C024  FFDE         	movff	?_clust2sect+2,postinc2
  6130  002786  C025  FFDE         	movff	?_clust2sect+3,postinc2
  6131                           
  6132                           ;tff.c: 583: } else {
  6133  00278A  D016               	goto	l11569
  6134  00278C                     l11567:
  6135                           
  6136                           ;tff.c: 584: dj->sect = fs->dirbase;
  6137  00278C  0101               	movlb	1	; () banked
  6138  00278E  EE20 F00C          	lfsr	2,12
  6139  002792  517F               	movf	reserve_direntry@fs& (0+255),w,b
  6140  002794  26D9               	addwf	fsr2l,f,c
  6141  002796  5180               	movf	(reserve_direntry@fs+1)& (0+255),w,b
  6142  002798  22DA               	addwfc	fsr2h,f,c
  6143  00279A  0100               	movlb	0	; () banked
  6144  00279C  EE10 F00E          	lfsr	1,14
  6145  0027A0  51EE               	movf	reserve_direntry@dj& (0+255),w,b
  6146  0027A2  26E1               	addwf	fsr1l,f,c
  6147  0027A4  51EF               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6148  0027A6  22E2               	addwfc	fsr1h,f,c
  6149  0027A8  CFDE FFE6          	movff	postinc2,postinc1
  6150  0027AC  CFDE FFE6          	movff	postinc2,postinc1
  6151  0027B0  CFDE FFE6          	movff	postinc2,postinc1
  6152  0027B4  CFDE FFE6          	movff	postinc2,postinc1
  6153  0027B8                     l11569:
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;tff.c: 585: }
  6157                           ;tff.c: 586: dj->index = 0;
  6158  0027B8  0100               	movlb	0	; () banked
  6159  0027BA  EE20 F002          	lfsr	2,2
  6160  0027BE  51EE               	movf	reserve_direntry@dj& (0+255),w,b
  6161  0027C0  26D9               	addwf	fsr2l,f,c
  6162  0027C2  51EF               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6163  0027C4  22DA               	addwfc	fsr2h,f,c
  6164  0027C6  0E00               	movlw	0
  6165  0027C8  6EDE               	movwf	postinc2,c
  6166  0027CA  0E00               	movlw	0
  6167  0027CC  6EDD               	movwf	postdec2,c
  6168  0027CE                     l11571:
  6169                           
  6170                           ;tff.c: 589: if (!move_window(dj->sect)) return FR_RW_ERROR;
  6171  0027CE  0100               	movlb	0	; () banked
  6172  0027D0  EE20 F00E          	lfsr	2,14
  6173  0027D4  51EE               	movf	reserve_direntry@dj& (0+255),w,b
  6174  0027D6  26D9               	addwf	fsr2l,f,c
  6175  0027D8  51EF               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6176  0027DA  22DA               	addwfc	fsr2h,f,c
  6177  0027DC  CFDE F083          	movff	postinc2,move_window@sector
  6178  0027E0  CFDE F084          	movff	postinc2,move_window@sector+1
  6179  0027E4  CFDE F085          	movff	postinc2,move_window@sector+2
  6180  0027E8  CFDE F086          	movff	postinc2,move_window@sector+3
  6181  0027EC  EC60  F019         	call	_move_window	;wreg free
  6182  0027F0  0900               	iorlw	0
  6183  0027F2  A4D8               	btfss	status,2,c
  6184  0027F4  D002               	goto	l11577
  6185  0027F6  0E08               	movlw	8
  6186  0027F8  0012               	return	
  6187  0027FA                     l11577:
  6188                           
  6189                           ;tff.c: 590: dptr = &fs->win[(dj->index & 15) * 32];
  6190  0027FA  0100               	movlb	0	; () banked
  6191  0027FC  EE20 F002          	lfsr	2,2
  6192  002800  51EE               	movf	reserve_direntry@dj& (0+255),w,b
  6193  002802  26D9               	addwf	fsr2l,f,c
  6194  002804  51EF               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6195  002806  22DA               	addwfc	fsr2h,f,c
  6196  002808  CFDE F0F2          	movff	postinc2,??_reserve_direntry
  6197  00280C  CFDD F0F3          	movff	postdec2,??_reserve_direntry+1
  6198  002810  0E0F               	movlw	15
  6199  002812  0100               	movlb	0	; () banked
  6200  002814  17F2               	andwf	??_reserve_direntry& (0+255),f,b
  6201  002816  0E00               	movlw	0
  6202  002818  17F3               	andwf	(??_reserve_direntry+1)& (0+255),f,b
  6203  00281A  0E05               	movlw	5
  6204  00281C                     u13145:
  6205  00281C  90D8               	bcf	status,0,c
  6206  00281E  0100               	movlb	0	; () banked
  6207  002820  37F2               	rlcf	??_reserve_direntry& (0+255),f,b
  6208  002822  37F3               	rlcf	(??_reserve_direntry+1)& (0+255),f,b
  6209  002824  2EE8               	decfsz	wreg,f,c
  6210  002826  D7FA               	goto	u13145
  6211  002828  0E28               	movlw	40
  6212  00282A  0100               	movlb	0	; () banked
  6213  00282C  27F2               	addwf	??_reserve_direntry& (0+255),f,b
  6214  00282E  0E00               	movlw	0
  6215  002830  23F3               	addwfc	(??_reserve_direntry+1)& (0+255),f,b
  6216  002832  0100               	movlb	0	; () banked
  6217  002834  51F2               	movf	??_reserve_direntry& (0+255),w,b
  6218  002836  0101               	movlb	1	; () banked
  6219  002838  257F               	addwf	reserve_direntry@fs& (0+255),w,b
  6220  00283A  0101               	movlb	1	; () banked
  6221  00283C  6F78               	movwf	reserve_direntry@dptr& (0+255),b
  6222  00283E  0100               	movlb	0	; () banked
  6223  002840  51F3               	movf	(??_reserve_direntry+1)& (0+255),w,b
  6224  002842  0101               	movlb	1	; () banked
  6225  002844  2180               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
  6226  002846  0101               	movlb	1	; () banked
  6227  002848  6F79               	movwf	(reserve_direntry@dptr+1)& (0+255),b
  6228                           
  6229                           ; BSR set to: 1
  6230                           ;tff.c: 591: c = dptr[0];
  6231  00284A  C178  FFD9         	movff	reserve_direntry@dptr,fsr2l
  6232  00284E  C179  FFDA         	movff	reserve_direntry@dptr+1,fsr2h
  6233  002852  50DF               	movf	indf2,w,c
  6234  002854  0101               	movlb	1	; () banked
  6235  002856  6F7A               	movwf	reserve_direntry@c& (0+255),b
  6236                           
  6237                           ; BSR set to: 1
  6238                           ;tff.c: 592: if (c == 0 || c == 0xE5) {
  6239  002858  0101               	movlb	1	; () banked
  6240  00285A  517A               	movf	reserve_direntry@c& (0+255),w,b
  6241  00285C  0101               	movlb	1	; () banked
  6242  00285E  B4D8               	btfsc	status,2,c
  6243  002860  D005               	goto	l11585
  6244                           
  6245                           ; BSR set to: 1
  6246  002862  0EE5               	movlw	229
  6247  002864  0101               	movlb	1	; () banked
  6248  002866  197A               	xorwf	reserve_direntry@c& (0+255),w,b
  6249  002868  A4D8               	btfss	status,2,c
  6250  00286A  D00A               	goto	l11591
  6251  00286C                     l11585:
  6252                           
  6253                           ; BSR set to: 1
  6254                           ;tff.c: 593: *dir = dptr; return FR_OK;
  6255  00286C  C0F0  FFD9         	movff	reserve_direntry@dir,fsr2l
  6256  002870  C0F1  FFDA         	movff	reserve_direntry@dir+1,fsr2h
  6257  002874  C178  FFDE         	movff	reserve_direntry@dptr,postinc2
  6258  002878  C179  FFDD         	movff	reserve_direntry@dptr+1,postdec2
  6259                           
  6260                           ; BSR set to: 1
  6261  00287C  0E00               	movlw	0
  6262                           
  6263                           ; BSR set to: 1
  6264  00287E  0012               	return	
  6265  002880                     l11591:
  6266                           
  6267                           ; BSR set to: 1
  6268                           ;tff.c: 594: }
  6269                           ;tff.c: 595: } while (next_dir_entry(dj));
  6270  002880  C0EE  F0D4         	movff	reserve_direntry@dj,next_dir_entry@dj
  6271  002884  C0EF  F0D5         	movff	reserve_direntry@dj+1,next_dir_entry@dj+1
  6272  002888  EC81  F01B         	call	_next_dir_entry	;wreg free
  6273  00288C  0900               	iorlw	0
  6274  00288E  A4D8               	btfss	status,2,c
  6275  002890  D79E               	goto	l11571
  6276                           
  6277                           ;tff.c: 599: if (clust == 0 || !(clust = create_chain(dj->clust))) return FR_DENIED;
  6278  002892  0101               	movlb	1	; () banked
  6279  002894  517B               	movf	reserve_direntry@clust& (0+255),w,b
  6280  002896  0101               	movlb	1	; () banked
  6281  002898  117C               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
  6282  00289A  0101               	movlb	1	; () banked
  6283  00289C  117D               	iorwf	(reserve_direntry@clust+2)& (0+255),w,b
  6284  00289E  0101               	movlb	1	; () banked
  6285  0028A0  117E               	iorwf	(reserve_direntry@clust+3)& (0+255),w,b
  6286  0028A2  B4D8               	btfsc	status,2,c
  6287  0028A4  D023               	goto	l11597
  6288                           
  6289                           ; BSR set to: 1
  6290  0028A6  0100               	movlb	0	; () banked
  6291  0028A8  EE20 F00A          	lfsr	2,10
  6292  0028AC  51EE               	movf	reserve_direntry@dj& (0+255),w,b
  6293  0028AE  26D9               	addwf	fsr2l,f,c
  6294  0028B0  51EF               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6295  0028B2  22DA               	addwfc	fsr2h,f,c
  6296  0028B4  CFDE F0D4          	movff	postinc2,create_chain@clust
  6297  0028B8  CFDE F0D5          	movff	postinc2,create_chain@clust+1
  6298  0028BC  CFDE F0D6          	movff	postinc2,create_chain@clust+2
  6299  0028C0  CFDE F0D7          	movff	postinc2,create_chain@clust+3
  6300  0028C4  ECC8  F011         	call	_create_chain	;wreg free
  6301  0028C8  C0D4  F17B         	movff	?_create_chain,reserve_direntry@clust
  6302  0028CC  C0D5  F17C         	movff	?_create_chain+1,reserve_direntry@clust+1
  6303  0028D0  C0D6  F17D         	movff	?_create_chain+2,reserve_direntry@clust+2
  6304  0028D4  C0D7  F17E         	movff	?_create_chain+3,reserve_direntry@clust+3
  6305  0028D8  0101               	movlb	1	; () banked
  6306  0028DA  517B               	movf	reserve_direntry@clust& (0+255),w,b
  6307  0028DC  0101               	movlb	1	; () banked
  6308  0028DE  117C               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
  6309  0028E0  0101               	movlb	1	; () banked
  6310  0028E2  117D               	iorwf	(reserve_direntry@clust+2)& (0+255),w,b
  6311  0028E4  0101               	movlb	1	; () banked
  6312  0028E6  117E               	iorwf	(reserve_direntry@clust+3)& (0+255),w,b
  6313  0028E8  A4D8               	btfss	status,2,c
  6314  0028EA  D002               	goto	l11601
  6315  0028EC                     l11597:
  6316                           
  6317                           ; BSR set to: 1
  6318  0028EC  0E06               	movlw	6
  6319                           
  6320                           ; BSR set to: 1
  6321  0028EE  0012               	return	
  6322  0028F0                     l11601:
  6323                           
  6324                           ; BSR set to: 1
  6325                           ;tff.c: 600: if (clust == 1 || !move_window(0)) return FR_RW_ERROR;
  6326  0028F0  0101               	movlb	1	; () banked
  6327  0028F2  057B               	decf	reserve_direntry@clust& (0+255),w,b
  6328  0028F4  0101               	movlb	1	; () banked
  6329  0028F6  117C               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
  6330  0028F8  0101               	movlb	1	; () banked
  6331  0028FA  117D               	iorwf	(reserve_direntry@clust+2)& (0+255),w,b
  6332  0028FC  0101               	movlb	1	; () banked
  6333  0028FE  117E               	iorwf	(reserve_direntry@clust+3)& (0+255),w,b
  6334  002900  B4D8               	btfsc	status,2,c
  6335  002902  D00E               	goto	l11605
  6336                           
  6337                           ; BSR set to: 1
  6338  002904  0E00               	movlw	0
  6339  002906  0100               	movlb	0	; () banked
  6340  002908  6F83               	movwf	move_window@sector& (0+255),b
  6341  00290A  0E00               	movlw	0
  6342  00290C  6F84               	movwf	(move_window@sector+1)& (0+255),b
  6343  00290E  0E00               	movlw	0
  6344  002910  6F85               	movwf	(move_window@sector+2)& (0+255),b
  6345  002912  0E00               	movlw	0
  6346  002914  6F86               	movwf	(move_window@sector+3)& (0+255),b
  6347  002916  EC60  F019         	call	_move_window	;wreg free
  6348  00291A  0900               	iorlw	0
  6349  00291C  A4D8               	btfss	status,2,c
  6350  00291E  D002               	goto	l11609
  6351  002920                     l11605:
  6352  002920  0E08               	movlw	8
  6353  002922  0012               	return	
  6354  002924                     l11609:
  6355                           
  6356                           ;tff.c: 602: fs->winsect = sector = clust2sect(clust);
  6357  002924  C17B  F022         	movff	reserve_direntry@clust,clust2sect@clust
  6358  002928  C17C  F023         	movff	reserve_direntry@clust+1,clust2sect@clust+1
  6359  00292C  C17D  F024         	movff	reserve_direntry@clust+2,clust2sect@clust+2
  6360  002930  C17E  F025         	movff	reserve_direntry@clust+3,clust2sect@clust+3
  6361  002934  ECDA  F020         	call	_clust2sect	;wreg free
  6362  002938  C022  F173         	movff	?_clust2sect,reserve_direntry@sector
  6363  00293C  C023  F174         	movff	?_clust2sect+1,reserve_direntry@sector+1
  6364  002940  C024  F175         	movff	?_clust2sect+2,reserve_direntry@sector+2
  6365  002944  C025  F176         	movff	?_clust2sect+3,reserve_direntry@sector+3
  6366  002948  0101               	movlb	1	; () banked
  6367  00294A  EE20 F004          	lfsr	2,4
  6368  00294E  517F               	movf	reserve_direntry@fs& (0+255),w,b
  6369  002950  26D9               	addwf	fsr2l,f,c
  6370  002952  5180               	movf	(reserve_direntry@fs+1)& (0+255),w,b
  6371  002954  22DA               	addwfc	fsr2h,f,c
  6372  002956  C173  FFDE         	movff	reserve_direntry@sector,postinc2
  6373  00295A  C174  FFDE         	movff	reserve_direntry@sector+1,postinc2
  6374  00295E  C175  FFDE         	movff	reserve_direntry@sector+2,postinc2
  6375  002962  C176  FFDE         	movff	reserve_direntry@sector+3,postinc2
  6376                           
  6377                           ;tff.c: 603: memset(fs->win, 0, 512U);
  6378  002966  0E28               	movlw	40
  6379  002968  0101               	movlb	1	; () banked
  6380  00296A  257F               	addwf	reserve_direntry@fs& (0+255),w,b
  6381  00296C  6E16               	movwf	memset@p1,c
  6382  00296E  0E00               	movlw	0
  6383  002970  0101               	movlb	1	; () banked
  6384  002972  2180               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
  6385  002974  6E17               	movwf	memset@p1+1,c
  6386  002976  0E00               	movlw	0
  6387  002978  6E19               	movwf	memset@c+1,c
  6388  00297A  0E00               	movlw	0
  6389  00297C  6E18               	movwf	memset@c,c
  6390  00297E  0E02               	movlw	2
  6391  002980  6E1B               	movwf	memset@n+1,c
  6392  002982  0E00               	movlw	0
  6393  002984  6E1A               	movwf	memset@n,c
  6394  002986  EC4E  F027         	call	_memset	;wreg free
  6395                           
  6396                           ;tff.c: 604: for (n = fs->csize; n; n--) {
  6397  00298A  0101               	movlb	1	; () banked
  6398  00298C  EE20 F025          	lfsr	2,37
  6399  002990  517F               	movf	reserve_direntry@fs& (0+255),w,b
  6400  002992  26D9               	addwf	fsr2l,f,c
  6401  002994  5180               	movf	(reserve_direntry@fs+1)& (0+255),w,b
  6402  002996  22DA               	addwfc	fsr2h,f,c
  6403  002998  50DF               	movf	indf2,w,c
  6404  00299A  0101               	movlb	1	; () banked
  6405  00299C  6F77               	movwf	reserve_direntry@n& (0+255),b
  6406  00299E  D026               	goto	l11623
  6407  0029A0                     l11613:
  6408                           
  6409                           ; BSR set to: 1
  6410                           ;tff.c: 605: if (disk_write(0, fs->win, sector, 1) != RES_OK)
  6411  0029A0  0E28               	movlw	40
  6412  0029A2  0101               	movlb	1	; () banked
  6413  0029A4  257F               	addwf	reserve_direntry@fs& (0+255),w,b
  6414  0029A6  0100               	movlb	0	; () banked
  6415  0029A8  6F60               	movwf	disk_write@buff& (0+255),b
  6416  0029AA  0E00               	movlw	0
  6417  0029AC  0101               	movlb	1	; () banked
  6418  0029AE  2180               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
  6419  0029B0  0100               	movlb	0	; () banked
  6420  0029B2  6F61               	movwf	(disk_write@buff+1)& (0+255),b
  6421  0029B4  C173  F062         	movff	reserve_direntry@sector,disk_write@sector
  6422  0029B8  C174  F063         	movff	reserve_direntry@sector+1,disk_write@sector+1
  6423  0029BC  C175  F064         	movff	reserve_direntry@sector+2,disk_write@sector+2
  6424  0029C0  C176  F065         	movff	reserve_direntry@sector+3,disk_write@sector+3
  6425  0029C4  0E01               	movlw	1
  6426  0029C6  0100               	movlb	0	; () banked
  6427  0029C8  6F66               	movwf	disk_write@count& (0+255),b
  6428  0029CA  0E00               	movlw	0
  6429  0029CC  ECD6  F023         	call	_disk_write
  6430  0029D0  0900               	iorlw	0
  6431  0029D2  B4D8               	btfsc	status,2,c
  6432  0029D4  D002               	goto	l11619
  6433                           
  6434                           ;tff.c: 606: return FR_RW_ERROR;
  6435  0029D6  0E08               	movlw	8
  6436  0029D8  0012               	return	
  6437  0029DA                     l11619:
  6438                           
  6439                           ;tff.c: 607: sector++;
  6440  0029DA  0E01               	movlw	1
  6441  0029DC  0101               	movlb	1	; () banked
  6442  0029DE  2773               	addwf	reserve_direntry@sector& (0+255),f,b
  6443  0029E0  0E00               	movlw	0
  6444  0029E2  2374               	addwfc	(reserve_direntry@sector+1)& (0+255),f,b
  6445  0029E4  2375               	addwfc	(reserve_direntry@sector+2)& (0+255),f,b
  6446  0029E6  2376               	addwfc	(reserve_direntry@sector+3)& (0+255),f,b
  6447                           
  6448                           ; BSR set to: 1
  6449  0029E8  0101               	movlb	1	; () banked
  6450  0029EA  0777               	decf	reserve_direntry@n& (0+255),f,b
  6451  0029EC                     l11623:
  6452                           
  6453                           ; BSR set to: 1
  6454  0029EC  0101               	movlb	1	; () banked
  6455  0029EE  5177               	movf	reserve_direntry@n& (0+255),w,b
  6456  0029F0  0101               	movlb	1	; () banked
  6457  0029F2  A4D8               	btfss	status,2,c
  6458  0029F4  D7D5               	goto	l11613
  6459                           
  6460                           ; BSR set to: 1
  6461                           ;tff.c: 608: }
  6462                           ;tff.c: 609: fs->winflag = 1;
  6463                           
  6464                           ; BSR set to: 1
  6465  0029F6  0101               	movlb	1	; () banked
  6466  0029F8  EE20 F027          	lfsr	2,39
  6467  0029FC  517F               	movf	reserve_direntry@fs& (0+255),w,b
  6468  0029FE  26D9               	addwf	fsr2l,f,c
  6469  002A00  5180               	movf	(reserve_direntry@fs+1)& (0+255),w,b
  6470  002A02  22DA               	addwfc	fsr2h,f,c
  6471  002A04  0E01               	movlw	1
  6472  002A06  6EDF               	movwf	indf2,c
  6473                           
  6474                           ;tff.c: 610: *dir = fs->win;
  6475  002A08  0E28               	movlw	40
  6476  002A0A  0101               	movlb	1	; () banked
  6477  002A0C  257F               	addwf	reserve_direntry@fs& (0+255),w,b
  6478  002A0E  0100               	movlb	0	; () banked
  6479  002A10  6FF2               	movwf	??_reserve_direntry& (0+255),b
  6480  002A12  0E00               	movlw	0
  6481  002A14  0101               	movlb	1	; () banked
  6482  002A16  2180               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
  6483  002A18  0100               	movlb	0	; () banked
  6484  002A1A  6FF3               	movwf	(??_reserve_direntry+1)& (0+255),b
  6485  002A1C  C0F0  FFD9         	movff	reserve_direntry@dir,fsr2l
  6486  002A20  C0F1  FFDA         	movff	reserve_direntry@dir+1,fsr2h
  6487  002A24  C0F2  FFDE         	movff	??_reserve_direntry,postinc2
  6488  002A28  C0F3  FFDD         	movff	??_reserve_direntry+1,postdec2
  6489                           
  6490                           ; BSR set to: 0
  6491                           ;tff.c: 611: return FR_OK;
  6492  002A2C  0E00               	movlw	0
  6493  002A2E  0012               	return	
  6494  002A30                     __end_of_reserve_direntry:
  6495                           	opt stack 0
  6496                           tosu	equ	0xFFF
  6497                           tosh	equ	0xFFE
  6498                           tosl	equ	0xFFD
  6499                           pclath	equ	0xFFA
  6500                           tblptru	equ	0xFF8
  6501                           tblptrh	equ	0xFF7
  6502                           tblptrl	equ	0xFF6
  6503                           tablat	equ	0xFF5
  6504                           prodh	equ	0xFF4
  6505                           prodl	equ	0xFF3
  6506                           intcon	equ	0xFF2
  6507                           intcon2	equ	0xFF1
  6508                           intcon3	equ	0xFF0
  6509                           postinc0	equ	0xFEE
  6510                           wreg	equ	0xFE8
  6511                           postinc1	equ	0xFE6
  6512                           postdec1	equ	0xFE5
  6513                           fsr1h	equ	0xFE2
  6514                           fsr1l	equ	0xFE1
  6515                           indf2	equ	0xFDF
  6516                           postinc2	equ	0xFDE
  6517                           postdec2	equ	0xFDD
  6518                           fsr2h	equ	0xFDA
  6519                           fsr2l	equ	0xFD9
  6520                           status	equ	0xFD8
  6521                           
  6522 ;; *************** function _next_dir_entry *****************
  6523 ;; Defined at:
  6524 ;;		line 358 in file "bibliotecas/tff.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;  dj              2  116[BANK0 ] PTR struct _DIR
  6527 ;;		 -> f_rename@dj(18), f_utime@dj(18), f_chmod@dj(18), f_mkdir@dj(18), 
  6528 ;;		 -> f_unlink@dj(18), f_stat@dj(18), f_open@dj(18), 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;  clust           4  125[BANK0 ] unsigned long 
  6531 ;;  idx             2  129[BANK0 ] unsigned short 
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  1    wreg      enum E105
  6534 ;; Registers used:
  6535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6541 ;;      Params:         0       2       0       0       0       0       0       0       0
  6542 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6543 ;;      Temps:          0       7       0       0       0       0       0       0       0
  6544 ;;      Totals:         0      15       0       0       0       0       0       0       0
  6545 ;;Total ram usage:       15 bytes
  6546 ;; Hardware stack levels used:    1
  6547 ;; Hardware stack levels required when called:   10
  6548 ;; This function calls:
  6549 ;;		_clust2sect
  6550 ;;		_get_cluster
  6551 ;; This function is called by:
  6552 ;;		_trace_path
  6553 ;;		_reserve_direntry
  6554 ;;		_f_readdir
  6555 ;;		_f_unlink
  6556 ;; This function uses a non-reentrant model
  6557 ;;
  6558                           
  6559                           	psect	text19
  6560  003702                     __ptext19:
  6561                           	opt stack 0
  6562  003702                     _next_dir_entry:
  6563                           	opt stack 16
  6564                           
  6565                           ;tff.c: 362: CLUST clust;
  6566                           ;tff.c: 363: WORD idx;
  6567                           ;tff.c: 366: idx = dj->index + 1;
  6568                           
  6569                           ;incstack = 0
  6570  003702  0100               	movlb	0	; () banked
  6571  003704  EE20 F002          	lfsr	2,2
  6572  003708  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6573  00370A  26D9               	addwf	fsr2l,f,c
  6574  00370C  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6575  00370E  22DA               	addwfc	fsr2h,f,c
  6576  003710  CFDE F0D6          	movff	postinc2,??_next_dir_entry
  6577  003714  CFDD F0D7          	movff	postdec2,??_next_dir_entry+1
  6578  003718  0E01               	movlw	1
  6579  00371A  0100               	movlb	0	; () banked
  6580  00371C  25D6               	addwf	??_next_dir_entry& (0+255),w,b
  6581  00371E  0100               	movlb	0	; () banked
  6582  003720  6FE1               	movwf	next_dir_entry@idx& (0+255),b
  6583  003722  0E00               	movlw	0
  6584  003724  0100               	movlb	0	; () banked
  6585  003726  21D7               	addwfc	(??_next_dir_entry+1)& (0+255),w,b
  6586  003728  0100               	movlb	0	; () banked
  6587  00372A  6FE2               	movwf	(next_dir_entry@idx+1)& (0+255),b
  6588                           
  6589                           ; BSR set to: 0
  6590                           ;tff.c: 367: if ((idx & 15) == 0) {
  6591  00372C  0E0F               	movlw	15
  6592  00372E  0100               	movlb	0	; () banked
  6593  003730  15E1               	andwf	next_dir_entry@idx& (0+255),w,b
  6594  003732  0100               	movlb	0	; () banked
  6595  003734  6FD6               	movwf	??_next_dir_entry& (0+255),b
  6596  003736  0E00               	movlw	0
  6597  003738  0100               	movlb	0	; () banked
  6598  00373A  15E2               	andwf	(next_dir_entry@idx+1)& (0+255),w,b
  6599  00373C  0100               	movlb	0	; () banked
  6600  00373E  6FD7               	movwf	(??_next_dir_entry+1)& (0+255),b
  6601  003740  0100               	movlb	0	; () banked
  6602  003742  51D6               	movf	??_next_dir_entry& (0+255),w,b
  6603  003744  0100               	movlb	0	; () banked
  6604  003746  11D7               	iorwf	(??_next_dir_entry+1)& (0+255),w,b
  6605  003748  A4D8               	btfss	status,2,c
  6606  00374A  D0D5               	goto	l11207
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;tff.c: 368: dj->sect++;
  6610  00374C  0100               	movlb	0	; () banked
  6611  00374E  EE20 F00E          	lfsr	2,14
  6612  003752  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6613  003754  26D9               	addwf	fsr2l,f,c
  6614  003756  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6615  003758  22DA               	addwfc	fsr2h,f,c
  6616  00375A  2ADE               	incf	postinc2,f,c
  6617  00375C  0E00               	movlw	0
  6618  00375E  22DE               	addwfc	postinc2,f,c
  6619  003760  22DE               	addwfc	postinc2,f,c
  6620  003762  22DE               	addwfc	postinc2,f,c
  6621                           
  6622                           ;tff.c: 369: if (dj->clust == 0) {
  6623  003764  0100               	movlb	0	; () banked
  6624  003766  EE20 F00A          	lfsr	2,10
  6625  00376A  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6626  00376C  26D9               	addwf	fsr2l,f,c
  6627  00376E  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6628  003770  22DA               	addwfc	fsr2h,f,c
  6629  003772  50DE               	movf	postinc2,w,c
  6630  003774  10DE               	iorwf	postinc2,w,c
  6631  003776  10DE               	iorwf	postinc2,w,c
  6632  003778  10DE               	iorwf	postinc2,w,c
  6633  00377A  A4D8               	btfss	status,2,c
  6634  00377C  D017               	goto	l11191
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;tff.c: 370: if (idx >= dj->fs->n_rootdir) return FALSE;
  6638  00377E  0100               	movlb	0	; () banked
  6639  003780  EE20 F004          	lfsr	2,4
  6640  003784  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6641  003786  26D9               	addwf	fsr2l,f,c
  6642  003788  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6643  00378A  22DA               	addwfc	fsr2h,f,c
  6644  00378C  EE10 F002          	lfsr	1,2
  6645  003790  50DE               	movf	postinc2,w,c
  6646  003792  26E1               	addwf	fsr1l,f,c
  6647  003794  50DD               	movf	postdec2,w,c
  6648  003796  22E2               	addwfc	fsr1h,f,c
  6649  003798  50E6               	movf	postinc1,w,c
  6650  00379A  0100               	movlb	0	; () banked
  6651  00379C  5DE1               	subwf	next_dir_entry@idx& (0+255),w,b
  6652  00379E  50E6               	movf	postinc1,w,c
  6653  0037A0  0100               	movlb	0	; () banked
  6654  0037A2  59E2               	subwfb	(next_dir_entry@idx+1)& (0+255),w,b
  6655  0037A4  A0D8               	btfss	status,0,c
  6656  0037A6  D0A7               	goto	l11207
  6657                           
  6658                           ; BSR set to: 0
  6659  0037A8  0E00               	movlw	0
  6660                           
  6661                           ; BSR set to: 0
  6662  0037AA  0012               	return	
  6663  0037AC                     l11191:
  6664                           
  6665                           ; BSR set to: 0
  6666                           ;tff.c: 372: if (((idx / 16) & (dj->fs->csize - 1)) == 0) {
  6667  0037AC  C0E1  F0D6         	movff	next_dir_entry@idx,??_next_dir_entry
  6668  0037B0  C0E2  F0D7         	movff	next_dir_entry@idx+1,??_next_dir_entry+1
  6669  0037B4  0E04               	movlw	4
  6670  0037B6  0100               	movlb	0	; () banked
  6671  0037B8  6FD8               	movwf	(??_next_dir_entry+2)& (0+255),b
  6672  0037BA                     u12425:
  6673  0037BA  0100               	movlb	0	; () banked
  6674  0037BC  90D8               	bcf	status,0,c
  6675  0037BE  33D7               	rrcf	(??_next_dir_entry+1)& (0+255),f,b
  6676  0037C0  33D6               	rrcf	??_next_dir_entry& (0+255),f,b
  6677  0037C2  0100               	movlb	0	; () banked
  6678  0037C4  2FD8               	decfsz	(??_next_dir_entry+2)& (0+255),f,b
  6679  0037C6  D7F9               	goto	u12425
  6680  0037C8  0EFF               	movlw	255
  6681  0037CA  0100               	movlb	0	; () banked
  6682  0037CC  6FD9               	movwf	(??_next_dir_entry+3)& (0+255),b
  6683  0037CE  0EFF               	movlw	255
  6684  0037D0  0100               	movlb	0	; () banked
  6685  0037D2  6FDA               	movwf	(??_next_dir_entry+4)& (0+255),b
  6686  0037D4  0100               	movlb	0	; () banked
  6687  0037D6  EE20 F004          	lfsr	2,4
  6688  0037DA  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6689  0037DC  26D9               	addwf	fsr2l,f,c
  6690  0037DE  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6691  0037E0  22DA               	addwfc	fsr2h,f,c
  6692  0037E2  EE10 F025          	lfsr	1,37
  6693  0037E6  50DE               	movf	postinc2,w,c
  6694  0037E8  26E1               	addwf	fsr1l,f,c
  6695  0037EA  50DD               	movf	postdec2,w,c
  6696  0037EC  22E2               	addwfc	fsr1h,f,c
  6697  0037EE  50E7               	movf	indf1,w,c
  6698  0037F0  0100               	movlb	0	; () banked
  6699  0037F2  6FDB               	movwf	(??_next_dir_entry+5)& (0+255),b
  6700  0037F4  6BDC               	clrf	(??_next_dir_entry+6)& (0+255),b
  6701  0037F6  0100               	movlb	0	; () banked
  6702  0037F8  51D9               	movf	(??_next_dir_entry+3)& (0+255),w,b
  6703  0037FA  0100               	movlb	0	; () banked
  6704  0037FC  27DB               	addwf	(??_next_dir_entry+5)& (0+255),f,b
  6705  0037FE  0100               	movlb	0	; () banked
  6706  003800  51DA               	movf	(??_next_dir_entry+4)& (0+255),w,b
  6707  003802  0100               	movlb	0	; () banked
  6708  003804  23DC               	addwfc	(??_next_dir_entry+6)& (0+255),f,b
  6709  003806  0100               	movlb	0	; () banked
  6710  003808  51D6               	movf	??_next_dir_entry& (0+255),w,b
  6711  00380A  0100               	movlb	0	; () banked
  6712  00380C  17DB               	andwf	(??_next_dir_entry+5)& (0+255),f,b
  6713  00380E  0100               	movlb	0	; () banked
  6714  003810  51D7               	movf	(??_next_dir_entry+1)& (0+255),w,b
  6715  003812  0100               	movlb	0	; () banked
  6716  003814  17DC               	andwf	(??_next_dir_entry+6)& (0+255),f,b
  6717  003816  0100               	movlb	0	; () banked
  6718  003818  51DB               	movf	(??_next_dir_entry+5)& (0+255),w,b
  6719  00381A  0100               	movlb	0	; () banked
  6720  00381C  11DC               	iorwf	(??_next_dir_entry+6)& (0+255),w,b
  6721  00381E  A4D8               	btfss	status,2,c
  6722  003820  D06A               	goto	l11207
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;tff.c: 373: clust = get_cluster(dj->clust);
  6726  003822  0100               	movlb	0	; () banked
  6727  003824  EE20 F00A          	lfsr	2,10
  6728  003828  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6729  00382A  26D9               	addwf	fsr2l,f,c
  6730  00382C  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6731  00382E  22DA               	addwfc	fsr2h,f,c
  6732  003830  CFDE F09A          	movff	postinc2,get_cluster@clust
  6733  003834  CFDE F09B          	movff	postinc2,get_cluster@clust+1
  6734  003838  CFDE F09C          	movff	postinc2,get_cluster@clust+2
  6735  00383C  CFDE F09D          	movff	postinc2,get_cluster@clust+3
  6736  003840  ECCC  F009         	call	_get_cluster	;wreg free
  6737  003844  C09A  F0DD         	movff	?_get_cluster,next_dir_entry@clust
  6738  003848  C09B  F0DE         	movff	?_get_cluster+1,next_dir_entry@clust+1
  6739  00384C  C09C  F0DF         	movff	?_get_cluster+2,next_dir_entry@clust+2
  6740  003850  C09D  F0E0         	movff	?_get_cluster+3,next_dir_entry@clust+3
  6741                           
  6742                           ;tff.c: 374: if (clust < 2 || clust >= dj->fs->max_clust)
  6743  003854  0100               	movlb	0	; () banked
  6744  003856  51E0               	movf	(next_dir_entry@clust+3)& (0+255),w,b
  6745  003858  0100               	movlb	0	; () banked
  6746  00385A  11DF               	iorwf	(next_dir_entry@clust+2)& (0+255),w,b
  6747  00385C  0100               	movlb	0	; () banked
  6748  00385E  11DE               	iorwf	(next_dir_entry@clust+1)& (0+255),w,b
  6749  003860  E105               	bnz	u12440
  6750  003862  0E02               	movlw	2
  6751  003864  0100               	movlb	0	; () banked
  6752  003866  5DDD               	subwf	next_dir_entry@clust& (0+255),w,b
  6753  003868  A0D8               	btfss	status,0,c
  6754  00386A  D01B               	goto	l11199
  6755  00386C                     u12440:
  6756                           
  6757                           ; BSR set to: 0
  6758  00386C  0100               	movlb	0	; () banked
  6759  00386E  EE20 F004          	lfsr	2,4
  6760  003872  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6761  003874  26D9               	addwf	fsr2l,f,c
  6762  003876  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6763  003878  22DA               	addwfc	fsr2h,f,c
  6764  00387A  EE10 F018          	lfsr	1,24
  6765  00387E  50DE               	movf	postinc2,w,c
  6766  003880  26E1               	addwf	fsr1l,f,c
  6767  003882  50DD               	movf	postdec2,w,c
  6768  003884  22E2               	addwfc	fsr1h,f,c
  6769  003886  50E6               	movf	postinc1,w,c
  6770  003888  0100               	movlb	0	; () banked
  6771  00388A  5DDD               	subwf	next_dir_entry@clust& (0+255),w,b
  6772  00388C  50E6               	movf	postinc1,w,c
  6773  00388E  0100               	movlb	0	; () banked
  6774  003890  59DE               	subwfb	(next_dir_entry@clust+1)& (0+255),w,b
  6775  003892  50E6               	movf	postinc1,w,c
  6776  003894  0100               	movlb	0	; () banked
  6777  003896  59DF               	subwfb	(next_dir_entry@clust+2)& (0+255),w,b
  6778  003898  50E6               	movf	postinc1,w,c
  6779  00389A  0100               	movlb	0	; () banked
  6780  00389C  59E0               	subwfb	(next_dir_entry@clust+3)& (0+255),w,b
  6781  00389E  A0D8               	btfss	status,0,c
  6782  0038A0  D002               	goto	l11203
  6783  0038A2                     l11199:
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;tff.c: 375: return FALSE;
  6787  0038A2  0E00               	movlw	0
  6788                           
  6789                           ; BSR set to: 0
  6790  0038A4  0012               	return	
  6791  0038A6                     l11203:
  6792                           
  6793                           ; BSR set to: 0
  6794                           ;tff.c: 376: dj->clust = clust;
  6795  0038A6  0100               	movlb	0	; () banked
  6796  0038A8  EE20 F00A          	lfsr	2,10
  6797  0038AC  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6798  0038AE  26D9               	addwf	fsr2l,f,c
  6799  0038B0  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6800  0038B2  22DA               	addwfc	fsr2h,f,c
  6801  0038B4  C0DD  FFDE         	movff	next_dir_entry@clust,postinc2
  6802  0038B8  C0DE  FFDE         	movff	next_dir_entry@clust+1,postinc2
  6803  0038BC  C0DF  FFDE         	movff	next_dir_entry@clust+2,postinc2
  6804  0038C0  C0E0  FFDE         	movff	next_dir_entry@clust+3,postinc2
  6805                           
  6806                           ; BSR set to: 0
  6807                           ;tff.c: 377: dj->sect = clust2sect(clust);
  6808  0038C4  C0DD  F022         	movff	next_dir_entry@clust,clust2sect@clust
  6809  0038C8  C0DE  F023         	movff	next_dir_entry@clust+1,clust2sect@clust+1
  6810  0038CC  C0DF  F024         	movff	next_dir_entry@clust+2,clust2sect@clust+2
  6811  0038D0  C0E0  F025         	movff	next_dir_entry@clust+3,clust2sect@clust+3
  6812  0038D4  ECDA  F020         	call	_clust2sect	;wreg free
  6813  0038D8  0100               	movlb	0	; () banked
  6814  0038DA  EE20 F00E          	lfsr	2,14
  6815  0038DE  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6816  0038E0  26D9               	addwf	fsr2l,f,c
  6817  0038E2  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6818  0038E4  22DA               	addwfc	fsr2h,f,c
  6819  0038E6  C022  FFDE         	movff	?_clust2sect,postinc2
  6820  0038EA  C023  FFDE         	movff	?_clust2sect+1,postinc2
  6821  0038EE  C024  FFDE         	movff	?_clust2sect+2,postinc2
  6822  0038F2  C025  FFDE         	movff	?_clust2sect+3,postinc2
  6823  0038F6                     l11207:
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;tff.c: 378: }
  6827                           ;tff.c: 379: }
  6828                           ;tff.c: 380: }
  6829                           ;tff.c: 381: dj->index = idx;
  6830  0038F6  0100               	movlb	0	; () banked
  6831  0038F8  EE20 F002          	lfsr	2,2
  6832  0038FC  51D4               	movf	next_dir_entry@dj& (0+255),w,b
  6833  0038FE  26D9               	addwf	fsr2l,f,c
  6834  003900  51D5               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  6835  003902  22DA               	addwfc	fsr2h,f,c
  6836  003904  C0E1  FFDE         	movff	next_dir_entry@idx,postinc2
  6837  003908  C0E2  FFDD         	movff	next_dir_entry@idx+1,postdec2
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;tff.c: 382: return TRUE;
  6841  00390C  0E01               	movlw	1
  6842  00390E  0012               	return	
  6843  003910                     __end_of_next_dir_entry:
  6844                           	opt stack 0
  6845                           tosu	equ	0xFFF
  6846                           tosh	equ	0xFFE
  6847                           tosl	equ	0xFFD
  6848                           pclath	equ	0xFFA
  6849                           tblptru	equ	0xFF8
  6850                           tblptrh	equ	0xFF7
  6851                           tblptrl	equ	0xFF6
  6852                           tablat	equ	0xFF5
  6853                           prodh	equ	0xFF4
  6854                           prodl	equ	0xFF3
  6855                           intcon	equ	0xFF2
  6856                           intcon2	equ	0xFF1
  6857                           intcon3	equ	0xFF0
  6858                           postinc0	equ	0xFEE
  6859                           wreg	equ	0xFE8
  6860                           indf1	equ	0xFE7
  6861                           postinc1	equ	0xFE6
  6862                           postdec1	equ	0xFE5
  6863                           fsr1h	equ	0xFE2
  6864                           fsr1l	equ	0xFE1
  6865                           indf2	equ	0xFDF
  6866                           postinc2	equ	0xFDE
  6867                           postdec2	equ	0xFDD
  6868                           fsr2h	equ	0xFDA
  6869                           fsr2l	equ	0xFD9
  6870                           status	equ	0xFD8
  6871                           
  6872 ;; *************** function _clust2sect *****************
  6873 ;; Defined at:
  6874 ;;		line 338 in file "bibliotecas/tff.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;  clust           4   33[COMRAM] unsigned long 
  6877 ;; Auto vars:     Size  Location     Type
  6878 ;;  fs              2   42[COMRAM] PTR struct _FATFS
  6879 ;;		 -> fs(552), NULL(0), 
  6880 ;; Return value:  Size  Location     Type
  6881 ;;                  4   33[COMRAM] unsigned long 
  6882 ;; Registers used:
  6883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6884 ;; Tracked objects:
  6885 ;;		On entry : 0/0
  6886 ;;		On exit  : 0/0
  6887 ;;		Unchanged: 0/0
  6888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6889 ;;      Params:         4       0       0       0       0       0       0       0       0
  6890 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6891 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6892 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6893 ;;Total ram usage:       11 bytes
  6894 ;; Hardware stack levels used:    1
  6895 ;; Hardware stack levels required when called:    3
  6896 ;; This function calls:
  6897 ;;		___lmul
  6898 ;; This function is called by:
  6899 ;;		_next_dir_entry
  6900 ;;		_trace_path
  6901 ;;		_reserve_direntry
  6902 ;;		_f_read
  6903 ;;		_f_write
  6904 ;;		_f_opendir
  6905 ;;		_f_unlink
  6906 ;;		_f_mkdir
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text20
  6911  0041B4                     __ptext20:
  6912                           	opt stack 0
  6913  0041B4                     _clust2sect:
  6914                           	opt stack 22
  6915                           
  6916                           ;tff.c: 342: FATFS *fs = FatFs;
  6917                           
  6918                           ; BSR set to: 0
  6919                           ;incstack = 0
  6920  0041B4  C0FC  F02B         	movff	_FatFs,clust2sect@fs
  6921  0041B8  C0FD  F02C         	movff	_FatFs+1,clust2sect@fs+1
  6922                           
  6923                           ;tff.c: 345: clust -= 2;
  6924  0041BC  0E02               	movlw	2
  6925  0041BE  5E22               	subwf	clust2sect@clust,f,c
  6926  0041C0  0E00               	movlw	0
  6927  0041C2  5A23               	subwfb	clust2sect@clust+1,f,c
  6928  0041C4  5A24               	subwfb	clust2sect@clust+2,f,c
  6929  0041C6  5A25               	subwfb	clust2sect@clust+3,f,c
  6930                           
  6931                           ;tff.c: 346: if (clust >= (fs->max_clust - 2)) return 0;
  6932  0041C8  EE20 F018          	lfsr	2,24
  6933  0041CC  502B               	movf	clust2sect@fs,w,c
  6934  0041CE  26D9               	addwf	fsr2l,f,c
  6935  0041D0  502C               	movf	clust2sect@fs+1,w,c
  6936  0041D2  22DA               	addwfc	fsr2h,f,c
  6937  0041D4  0EFE               	movlw	254
  6938  0041D6  24DE               	addwf	postinc2,w,c
  6939  0041D8  6E26               	movwf	??_clust2sect& (0+255),c
  6940  0041DA  0EFF               	movlw	255
  6941  0041DC  20DE               	addwfc	postinc2,w,c
  6942  0041DE  6E27               	movwf	(??_clust2sect+1)& (0+255),c
  6943  0041E0  0EFF               	movlw	255
  6944  0041E2  20DE               	addwfc	postinc2,w,c
  6945  0041E4  6E28               	movwf	(??_clust2sect+2)& (0+255),c
  6946  0041E6  0EFF               	movlw	255
  6947  0041E8  20DE               	addwfc	postinc2,w,c
  6948  0041EA  6E29               	movwf	(??_clust2sect+3)& (0+255),c
  6949  0041EC  5026               	movf	??_clust2sect,w,c
  6950  0041EE  5C22               	subwf	clust2sect@clust,w,c
  6951  0041F0  5027               	movf	??_clust2sect+1,w,c
  6952  0041F2  5823               	subwfb	clust2sect@clust+1,w,c
  6953  0041F4  5028               	movf	??_clust2sect+2,w,c
  6954  0041F6  5824               	subwfb	clust2sect@clust+2,w,c
  6955  0041F8  5029               	movf	??_clust2sect+3,w,c
  6956  0041FA  5825               	subwfb	clust2sect@clust+3,w,c
  6957  0041FC  A0D8               	btfss	status,0,c
  6958  0041FE  D009               	goto	l11037
  6959  004200  0E00               	movlw	0
  6960  004202  6E22               	movwf	?_clust2sect,c
  6961  004204  0E00               	movlw	0
  6962  004206  6E23               	movwf	?_clust2sect+1,c
  6963  004208  0E00               	movlw	0
  6964  00420A  6E24               	movwf	?_clust2sect+2,c
  6965  00420C  0E00               	movlw	0
  6966  00420E  6E25               	movwf	?_clust2sect+3,c
  6967  004210  0012               	return	
  6968  004212                     l11037:
  6969                           
  6970                           ;tff.c: 347: return (DWORD)clust * fs->csize + fs->database;
  6971  004212  EE20 F010          	lfsr	2,16
  6972  004216  502B               	movf	clust2sect@fs,w,c
  6973  004218  26D9               	addwf	fsr2l,f,c
  6974  00421A  502C               	movf	clust2sect@fs+1,w,c
  6975  00421C  22DA               	addwfc	fsr2h,f,c
  6976  00421E  CFDE F026          	movff	postinc2,??_clust2sect
  6977  004222  CFDE F027          	movff	postinc2,??_clust2sect+1
  6978  004226  CFDE F028          	movff	postinc2,??_clust2sect+2
  6979  00422A  CFDE F029          	movff	postinc2,??_clust2sect+3
  6980  00422E  EE20 F025          	lfsr	2,37
  6981  004232  502B               	movf	clust2sect@fs,w,c
  6982  004234  26D9               	addwf	fsr2l,f,c
  6983  004236  502C               	movf	clust2sect@fs+1,w,c
  6984  004238  22DA               	addwfc	fsr2h,f,c
  6985  00423A  50DF               	movf	indf2,w,c
  6986  00423C  6E2A               	movwf	(??_clust2sect+4)& (0+255),c
  6987  00423E  502A               	movf	??_clust2sect+4,w,c
  6988  004240  6E16               	movwf	___lmul@multiplier,c
  6989  004242  6A17               	clrf	___lmul@multiplier+1,c
  6990  004244  6A18               	clrf	___lmul@multiplier+2,c
  6991  004246  6A19               	clrf	___lmul@multiplier+3,c
  6992  004248  C022  F01A         	movff	clust2sect@clust,___lmul@multiplicand
  6993  00424C  C023  F01B         	movff	clust2sect@clust+1,___lmul@multiplicand+1
  6994  004250  C024  F01C         	movff	clust2sect@clust+2,___lmul@multiplicand+2
  6995  004254  C025  F01D         	movff	clust2sect@clust+3,___lmul@multiplicand+3
  6996  004258  EC52  F025         	call	___lmul	;wreg free
  6997  00425C  5026               	movf	??_clust2sect,w,c
  6998  00425E  2416               	addwf	?___lmul,w,c
  6999  004260  6E22               	movwf	?_clust2sect,c
  7000  004262  5027               	movf	??_clust2sect+1,w,c
  7001  004264  2017               	addwfc	?___lmul+1,w,c
  7002  004266  6E23               	movwf	?_clust2sect+1,c
  7003  004268  5028               	movf	??_clust2sect+2,w,c
  7004  00426A  2018               	addwfc	?___lmul+2,w,c
  7005  00426C  6E24               	movwf	?_clust2sect+2,c
  7006  00426E  5029               	movf	??_clust2sect+3,w,c
  7007  004270  2019               	addwfc	?___lmul+3,w,c
  7008  004272  6E25               	movwf	?_clust2sect+3,c
  7009  004274  0012               	return	
  7010  004276                     __end_of_clust2sect:
  7011                           	opt stack 0
  7012                           tosu	equ	0xFFF
  7013                           tosh	equ	0xFFE
  7014                           tosl	equ	0xFFD
  7015                           pclath	equ	0xFFA
  7016                           tblptru	equ	0xFF8
  7017                           tblptrh	equ	0xFF7
  7018                           tblptrl	equ	0xFF6
  7019                           tablat	equ	0xFF5
  7020                           prodh	equ	0xFF4
  7021                           prodl	equ	0xFF3
  7022                           intcon	equ	0xFF2
  7023                           intcon2	equ	0xFF1
  7024                           intcon3	equ	0xFF0
  7025                           postinc0	equ	0xFEE
  7026                           wreg	equ	0xFE8
  7027                           indf1	equ	0xFE7
  7028                           postinc1	equ	0xFE6
  7029                           postdec1	equ	0xFE5
  7030                           fsr1h	equ	0xFE2
  7031                           fsr1l	equ	0xFE1
  7032                           indf2	equ	0xFDF
  7033                           postinc2	equ	0xFDE
  7034                           postdec2	equ	0xFDD
  7035                           fsr2h	equ	0xFDA
  7036                           fsr2l	equ	0xFD9
  7037                           status	equ	0xFD8
  7038                           
  7039 ;; *************** function _create_chain *****************
  7040 ;; Defined at:
  7041 ;;		line 282 in file "bibliotecas/tff.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;  clust           4  116[BANK0 ] unsigned long 
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;  ncl             4  138[BANK0 ] unsigned long 
  7046 ;;  scl             4  134[BANK0 ] unsigned long 
  7047 ;;  cstat           4  130[BANK0 ] unsigned long 
  7048 ;;  mcl             4  124[BANK0 ] unsigned long 
  7049 ;;  fs              2  128[BANK0 ] PTR struct _FATFS
  7050 ;;		 -> fs(552), NULL(0), 
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  4  116[BANK0 ] unsigned long 
  7053 ;; Registers used:
  7054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7060 ;;      Params:         0       4       0       0       0       0       0       0       0
  7061 ;;      Locals:         0      18       0       0       0       0       0       0       0
  7062 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7063 ;;      Totals:         0      26       0       0       0       0       0       0       0
  7064 ;;Total ram usage:       26 bytes
  7065 ;; Hardware stack levels used:    1
  7066 ;; Hardware stack levels required when called:   10
  7067 ;; This function calls:
  7068 ;;		_get_cluster
  7069 ;;		_put_cluster
  7070 ;; This function is called by:
  7071 ;;		_reserve_direntry
  7072 ;;		_f_write
  7073 ;;		_f_lseek
  7074 ;;		_f_mkdir
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text21
  7079  002390                     __ptext21:
  7080                           	opt stack 0
  7081  002390                     _create_chain:
  7082                           	opt stack 16
  7083                           
  7084                           ;tff.c: 286: CLUST cstat, ncl, scl, mcl;
  7085                           ;tff.c: 287: FATFS *fs = FatFs;
  7086                           
  7087                           ;incstack = 0
  7088  002390  C0FC  F0E0         	movff	_FatFs,create_chain@fs
  7089  002394  C0FD  F0E1         	movff	_FatFs+1,create_chain@fs+1
  7090                           
  7091                           ;tff.c: 290: mcl = fs->max_clust;
  7092  002398  0100               	movlb	0	; () banked
  7093  00239A  EE20 F018          	lfsr	2,24
  7094  00239E  51E0               	movf	create_chain@fs& (0+255),w,b
  7095  0023A0  26D9               	addwf	fsr2l,f,c
  7096  0023A2  51E1               	movf	(create_chain@fs+1)& (0+255),w,b
  7097  0023A4  22DA               	addwfc	fsr2h,f,c
  7098  0023A6  CFDE F0DC          	movff	postinc2,create_chain@mcl
  7099  0023AA  CFDE F0DD          	movff	postinc2,create_chain@mcl+1
  7100  0023AE  CFDE F0DE          	movff	postinc2,create_chain@mcl+2
  7101  0023B2  CFDE F0DF          	movff	postinc2,create_chain@mcl+3
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;tff.c: 291: if (clust == 0) {
  7105  0023B6  0100               	movlb	0	; () banked
  7106  0023B8  51D4               	movf	create_chain@clust& (0+255),w,b
  7107  0023BA  0100               	movlb	0	; () banked
  7108  0023BC  11D5               	iorwf	(create_chain@clust+1)& (0+255),w,b
  7109  0023BE  0100               	movlb	0	; () banked
  7110  0023C0  11D6               	iorwf	(create_chain@clust+2)& (0+255),w,b
  7111  0023C2  0100               	movlb	0	; () banked
  7112  0023C4  11D7               	iorwf	(create_chain@clust+3)& (0+255),w,b
  7113  0023C6  A4D8               	btfss	status,2,c
  7114  0023C8  D037               	goto	l11117
  7115                           
  7116                           ; BSR set to: 0
  7117                           ;tff.c: 292: scl = fs->last_clust;
  7118  0023CA  0100               	movlb	0	; () banked
  7119  0023CC  EE20 F01C          	lfsr	2,28
  7120  0023D0  51E0               	movf	create_chain@fs& (0+255),w,b
  7121  0023D2  26D9               	addwf	fsr2l,f,c
  7122  0023D4  51E1               	movf	(create_chain@fs+1)& (0+255),w,b
  7123  0023D6  22DA               	addwfc	fsr2h,f,c
  7124  0023D8  CFDE F0E6          	movff	postinc2,create_chain@scl
  7125  0023DC  CFDE F0E7          	movff	postinc2,create_chain@scl+1
  7126  0023E0  CFDE F0E8          	movff	postinc2,create_chain@scl+2
  7127  0023E4  CFDE F0E9          	movff	postinc2,create_chain@scl+3
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;tff.c: 293: if (scl < 2 || scl >= mcl) scl = 1;
  7131  0023E8  0100               	movlb	0	; () banked
  7132  0023EA  51E9               	movf	(create_chain@scl+3)& (0+255),w,b
  7133  0023EC  0100               	movlb	0	; () banked
  7134  0023EE  11E8               	iorwf	(create_chain@scl+2)& (0+255),w,b
  7135  0023F0  0100               	movlb	0	; () banked
  7136  0023F2  11E7               	iorwf	(create_chain@scl+1)& (0+255),w,b
  7137  0023F4  E105               	bnz	u12260
  7138  0023F6  0E02               	movlw	2
  7139  0023F8  0100               	movlb	0	; () banked
  7140  0023FA  5DE6               	subwf	create_chain@scl& (0+255),w,b
  7141  0023FC  A0D8               	btfss	status,0,c
  7142  0023FE  D012               	goto	l11115
  7143  002400                     u12260:
  7144                           
  7145                           ; BSR set to: 0
  7146  002400  0100               	movlb	0	; () banked
  7147  002402  51DC               	movf	create_chain@mcl& (0+255),w,b
  7148  002404  0100               	movlb	0	; () banked
  7149  002406  5DE6               	subwf	create_chain@scl& (0+255),w,b
  7150  002408  0100               	movlb	0	; () banked
  7151  00240A  51DD               	movf	(create_chain@mcl+1)& (0+255),w,b
  7152  00240C  0100               	movlb	0	; () banked
  7153  00240E  59E7               	subwfb	(create_chain@scl+1)& (0+255),w,b
  7154  002410  0100               	movlb	0	; () banked
  7155  002412  51DE               	movf	(create_chain@mcl+2)& (0+255),w,b
  7156  002414  0100               	movlb	0	; () banked
  7157  002416  59E8               	subwfb	(create_chain@scl+2)& (0+255),w,b
  7158  002418  0100               	movlb	0	; () banked
  7159  00241A  51DF               	movf	(create_chain@mcl+3)& (0+255),w,b
  7160  00241C  0100               	movlb	0	; () banked
  7161  00241E  59E9               	subwfb	(create_chain@scl+3)& (0+255),w,b
  7162  002420  A0D8               	btfss	status,0,c
  7163  002422  D055               	goto	l620
  7164  002424                     l11115:
  7165                           
  7166                           ; BSR set to: 0
  7167  002424  0E01               	movlw	1
  7168  002426  0100               	movlb	0	; () banked
  7169  002428  6FE6               	movwf	create_chain@scl& (0+255),b
  7170  00242A  0E00               	movlw	0
  7171  00242C  6FE7               	movwf	(create_chain@scl+1)& (0+255),b
  7172  00242E  0E00               	movlw	0
  7173  002430  6FE8               	movwf	(create_chain@scl+2)& (0+255),b
  7174  002432  0E00               	movlw	0
  7175  002434  6FE9               	movwf	(create_chain@scl+3)& (0+255),b
  7176                           
  7177                           ; BSR set to: 0
  7178                           ;tff.c: 294: }
  7179  002436  D04B               	goto	l620
  7180  002438                     l11117:
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;tff.c: 295: else {
  7184                           ;tff.c: 296: cstat = get_cluster(clust);
  7185  002438  C0D4  F09A         	movff	create_chain@clust,get_cluster@clust
  7186  00243C  C0D5  F09B         	movff	create_chain@clust+1,get_cluster@clust+1
  7187  002440  C0D6  F09C         	movff	create_chain@clust+2,get_cluster@clust+2
  7188  002444  C0D7  F09D         	movff	create_chain@clust+3,get_cluster@clust+3
  7189  002448  ECCC  F009         	call	_get_cluster	;wreg free
  7190  00244C  C09A  F0E2         	movff	?_get_cluster,create_chain@cstat
  7191  002450  C09B  F0E3         	movff	?_get_cluster+1,create_chain@cstat+1
  7192  002454  C09C  F0E4         	movff	?_get_cluster+2,create_chain@cstat+2
  7193  002458  C09D  F0E5         	movff	?_get_cluster+3,create_chain@cstat+3
  7194                           
  7195                           ;tff.c: 297: if (cstat < 2) return 1;
  7196  00245C  0100               	movlb	0	; () banked
  7197  00245E  51E5               	movf	(create_chain@cstat+3)& (0+255),w,b
  7198  002460  0100               	movlb	0	; () banked
  7199  002462  11E4               	iorwf	(create_chain@cstat+2)& (0+255),w,b
  7200  002464  0100               	movlb	0	; () banked
  7201  002466  11E3               	iorwf	(create_chain@cstat+1)& (0+255),w,b
  7202  002468  E10F               	bnz	l11125
  7203  00246A  0E02               	movlw	2
  7204  00246C  0100               	movlb	0	; () banked
  7205  00246E  5DE2               	subwf	create_chain@cstat& (0+255),w,b
  7206  002470  B0D8               	btfsc	status,0,c
  7207  002472  D00A               	goto	l11125
  7208                           
  7209                           ; BSR set to: 0
  7210  002474  0E01               	movlw	1
  7211  002476  0100               	movlb	0	; () banked
  7212  002478  6FD4               	movwf	?_create_chain& (0+255),b
  7213  00247A  0E00               	movlw	0
  7214  00247C  6FD5               	movwf	(?_create_chain+1)& (0+255),b
  7215  00247E  0E00               	movlw	0
  7216  002480  6FD6               	movwf	(?_create_chain+2)& (0+255),b
  7217  002482  0E00               	movlw	0
  7218  002484  6FD7               	movwf	(?_create_chain+3)& (0+255),b
  7219                           
  7220                           ; BSR set to: 0
  7221  002486  0012               	return	
  7222  002488                     l11125:
  7223                           
  7224                           ; BSR set to: 0
  7225                           ;tff.c: 298: if (cstat < mcl) return cstat;
  7226  002488  0100               	movlb	0	; () banked
  7227  00248A  51DC               	movf	create_chain@mcl& (0+255),w,b
  7228  00248C  0100               	movlb	0	; () banked
  7229  00248E  5DE2               	subwf	create_chain@cstat& (0+255),w,b
  7230  002490  0100               	movlb	0	; () banked
  7231  002492  51DD               	movf	(create_chain@mcl+1)& (0+255),w,b
  7232  002494  0100               	movlb	0	; () banked
  7233  002496  59E3               	subwfb	(create_chain@cstat+1)& (0+255),w,b
  7234  002498  0100               	movlb	0	; () banked
  7235  00249A  51DE               	movf	(create_chain@mcl+2)& (0+255),w,b
  7236  00249C  0100               	movlb	0	; () banked
  7237  00249E  59E4               	subwfb	(create_chain@cstat+2)& (0+255),w,b
  7238  0024A0  0100               	movlb	0	; () banked
  7239  0024A2  51DF               	movf	(create_chain@mcl+3)& (0+255),w,b
  7240  0024A4  0100               	movlb	0	; () banked
  7241  0024A6  59E5               	subwfb	(create_chain@cstat+3)& (0+255),w,b
  7242  0024A8  B0D8               	btfsc	status,0,c
  7243  0024AA  D009               	goto	l623
  7244                           
  7245                           ; BSR set to: 0
  7246  0024AC  C0E2  F0D4         	movff	create_chain@cstat,?_create_chain
  7247  0024B0  C0E3  F0D5         	movff	create_chain@cstat+1,?_create_chain+1
  7248  0024B4  C0E4  F0D6         	movff	create_chain@cstat+2,?_create_chain+2
  7249  0024B8  C0E5  F0D7         	movff	create_chain@cstat+3,?_create_chain+3
  7250  0024BC  0012               	return	
  7251  0024BE                     l623:
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;tff.c: 299: scl = clust;
  7255  0024BE  C0D4  F0E6         	movff	create_chain@clust,create_chain@scl
  7256  0024C2  C0D5  F0E7         	movff	create_chain@clust+1,create_chain@scl+1
  7257  0024C6  C0D6  F0E8         	movff	create_chain@clust+2,create_chain@scl+2
  7258  0024CA  C0D7  F0E9         	movff	create_chain@clust+3,create_chain@scl+3
  7259  0024CE                     l620:
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;tff.c: 300: }
  7263                           ;tff.c: 302: ncl = scl;
  7264  0024CE  C0E6  F0EA         	movff	create_chain@scl,create_chain@ncl
  7265  0024D2  C0E7  F0EB         	movff	create_chain@scl+1,create_chain@ncl+1
  7266  0024D6  C0E8  F0EC         	movff	create_chain@scl+2,create_chain@ncl+2
  7267  0024DA  C0E9  F0ED         	movff	create_chain@scl+3,create_chain@ncl+3
  7268  0024DE                     l11129:
  7269                           
  7270                           ; BSR set to: 0
  7271                           ;tff.c: 304: ncl++;
  7272  0024DE  0E01               	movlw	1
  7273  0024E0  0100               	movlb	0	; () banked
  7274  0024E2  27EA               	addwf	create_chain@ncl& (0+255),f,b
  7275  0024E4  0E00               	movlw	0
  7276  0024E6  23EB               	addwfc	(create_chain@ncl+1)& (0+255),f,b
  7277  0024E8  23EC               	addwfc	(create_chain@ncl+2)& (0+255),f,b
  7278  0024EA  23ED               	addwfc	(create_chain@ncl+3)& (0+255),f,b
  7279                           
  7280                           ;tff.c: 305: if (ncl >= mcl) {
  7281  0024EC  0100               	movlb	0	; () banked
  7282  0024EE  51DC               	movf	create_chain@mcl& (0+255),w,b
  7283  0024F0  0100               	movlb	0	; () banked
  7284  0024F2  5DEA               	subwf	create_chain@ncl& (0+255),w,b
  7285  0024F4  0100               	movlb	0	; () banked
  7286  0024F6  51DD               	movf	(create_chain@mcl+1)& (0+255),w,b
  7287  0024F8  0100               	movlb	0	; () banked
  7288  0024FA  59EB               	subwfb	(create_chain@ncl+1)& (0+255),w,b
  7289  0024FC  0100               	movlb	0	; () banked
  7290  0024FE  51DE               	movf	(create_chain@mcl+2)& (0+255),w,b
  7291  002500  0100               	movlb	0	; () banked
  7292  002502  59EC               	subwfb	(create_chain@ncl+2)& (0+255),w,b
  7293  002504  0100               	movlb	0	; () banked
  7294  002506  51DF               	movf	(create_chain@mcl+3)& (0+255),w,b
  7295  002508  0100               	movlb	0	; () banked
  7296  00250A  59ED               	subwfb	(create_chain@ncl+3)& (0+255),w,b
  7297  00250C  A0D8               	btfss	status,0,c
  7298  00250E  D025               	goto	l11139
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;tff.c: 306: ncl = 2;
  7302  002510  0E02               	movlw	2
  7303  002512  0100               	movlb	0	; () banked
  7304  002514  6FEA               	movwf	create_chain@ncl& (0+255),b
  7305  002516  0E00               	movlw	0
  7306  002518  6FEB               	movwf	(create_chain@ncl+1)& (0+255),b
  7307  00251A  0E00               	movlw	0
  7308  00251C  6FEC               	movwf	(create_chain@ncl+2)& (0+255),b
  7309  00251E  0E00               	movlw	0
  7310  002520  6FED               	movwf	(create_chain@ncl+3)& (0+255),b
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;tff.c: 307: if (ncl > scl) return 0;
  7314  002522  0100               	movlb	0	; () banked
  7315  002524  51EA               	movf	create_chain@ncl& (0+255),w,b
  7316  002526  0100               	movlb	0	; () banked
  7317  002528  5DE6               	subwf	create_chain@scl& (0+255),w,b
  7318  00252A  0100               	movlb	0	; () banked
  7319  00252C  51EB               	movf	(create_chain@ncl+1)& (0+255),w,b
  7320  00252E  0100               	movlb	0	; () banked
  7321  002530  59E7               	subwfb	(create_chain@scl+1)& (0+255),w,b
  7322  002532  0100               	movlb	0	; () banked
  7323  002534  51EC               	movf	(create_chain@ncl+2)& (0+255),w,b
  7324  002536  0100               	movlb	0	; () banked
  7325  002538  59E8               	subwfb	(create_chain@scl+2)& (0+255),w,b
  7326  00253A  0100               	movlb	0	; () banked
  7327  00253C  51ED               	movf	(create_chain@ncl+3)& (0+255),w,b
  7328  00253E  0100               	movlb	0	; () banked
  7329  002540  59E9               	subwfb	(create_chain@scl+3)& (0+255),w,b
  7330  002542  B0D8               	btfsc	status,0,c
  7331  002544  D00A               	goto	l11139
  7332                           
  7333                           ; BSR set to: 0
  7334  002546  0E00               	movlw	0
  7335  002548  0100               	movlb	0	; () banked
  7336  00254A  6FD4               	movwf	?_create_chain& (0+255),b
  7337  00254C  0E00               	movlw	0
  7338  00254E  6FD5               	movwf	(?_create_chain+1)& (0+255),b
  7339  002550  0E00               	movlw	0
  7340  002552  6FD6               	movwf	(?_create_chain+2)& (0+255),b
  7341  002554  0E00               	movlw	0
  7342  002556  6FD7               	movwf	(?_create_chain+3)& (0+255),b
  7343                           
  7344                           ; BSR set to: 0
  7345  002558  0012               	return	
  7346  00255A                     l11139:
  7347                           
  7348                           ; BSR set to: 0
  7349                           ;tff.c: 308: }
  7350                           ;tff.c: 309: cstat = get_cluster(ncl);
  7351  00255A  C0EA  F09A         	movff	create_chain@ncl,get_cluster@clust
  7352  00255E  C0EB  F09B         	movff	create_chain@ncl+1,get_cluster@clust+1
  7353  002562  C0EC  F09C         	movff	create_chain@ncl+2,get_cluster@clust+2
  7354  002566  C0ED  F09D         	movff	create_chain@ncl+3,get_cluster@clust+3
  7355  00256A  ECCC  F009         	call	_get_cluster	;wreg free
  7356  00256E  C09A  F0E2         	movff	?_get_cluster,create_chain@cstat
  7357  002572  C09B  F0E3         	movff	?_get_cluster+1,create_chain@cstat+1
  7358  002576  C09C  F0E4         	movff	?_get_cluster+2,create_chain@cstat+2
  7359  00257A  C09D  F0E5         	movff	?_get_cluster+3,create_chain@cstat+3
  7360                           
  7361                           ;tff.c: 310: if (cstat == 0) break;
  7362  00257E  0100               	movlb	0	; () banked
  7363  002580  51E2               	movf	create_chain@cstat& (0+255),w,b
  7364  002582  0100               	movlb	0	; () banked
  7365  002584  11E3               	iorwf	(create_chain@cstat+1)& (0+255),w,b
  7366  002586  0100               	movlb	0	; () banked
  7367  002588  11E4               	iorwf	(create_chain@cstat+2)& (0+255),w,b
  7368  00258A  0100               	movlb	0	; () banked
  7369  00258C  11E5               	iorwf	(create_chain@cstat+3)& (0+255),w,b
  7370  00258E  B4D8               	btfsc	status,2,c
  7371  002590  D033               	goto	l11157
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;tff.c: 311: if (cstat == 1) return 1;
  7375                           
  7376                           ; BSR set to: 0
  7377                           
  7378                           ; BSR set to: 0
  7379  002592  0100               	movlb	0	; () banked
  7380  002594  05E2               	decf	create_chain@cstat& (0+255),w,b
  7381  002596  0100               	movlb	0	; () banked
  7382  002598  11E3               	iorwf	(create_chain@cstat+1)& (0+255),w,b
  7383  00259A  0100               	movlb	0	; () banked
  7384  00259C  11E4               	iorwf	(create_chain@cstat+2)& (0+255),w,b
  7385  00259E  0100               	movlb	0	; () banked
  7386  0025A0  11E5               	iorwf	(create_chain@cstat+3)& (0+255),w,b
  7387  0025A2  A4D8               	btfss	status,2,c
  7388  0025A4  D00A               	goto	l11151
  7389                           
  7390                           ; BSR set to: 0
  7391  0025A6  0E01               	movlw	1
  7392  0025A8  0100               	movlb	0	; () banked
  7393  0025AA  6FD4               	movwf	?_create_chain& (0+255),b
  7394  0025AC  0E00               	movlw	0
  7395  0025AE  6FD5               	movwf	(?_create_chain+1)& (0+255),b
  7396  0025B0  0E00               	movlw	0
  7397  0025B2  6FD6               	movwf	(?_create_chain+2)& (0+255),b
  7398  0025B4  0E00               	movlw	0
  7399  0025B6  6FD7               	movwf	(?_create_chain+3)& (0+255),b
  7400                           
  7401                           ; BSR set to: 0
  7402  0025B8  0012               	return	
  7403  0025BA                     l11151:
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;tff.c: 312: if (ncl == scl) return 0;
  7407  0025BA  0100               	movlb	0	; () banked
  7408  0025BC  51E6               	movf	create_chain@scl& (0+255),w,b
  7409  0025BE  0100               	movlb	0	; () banked
  7410  0025C0  19EA               	xorwf	create_chain@ncl& (0+255),w,b
  7411  0025C2  E18D               	bnz	l11129
  7412  0025C4  0100               	movlb	0	; () banked
  7413  0025C6  51E7               	movf	(create_chain@scl+1)& (0+255),w,b
  7414  0025C8  0100               	movlb	0	; () banked
  7415  0025CA  19EB               	xorwf	(create_chain@ncl+1)& (0+255),w,b
  7416  0025CC  E188               	bnz	l11129
  7417  0025CE  0100               	movlb	0	; () banked
  7418  0025D0  51E8               	movf	(create_chain@scl+2)& (0+255),w,b
  7419  0025D2  0100               	movlb	0	; () banked
  7420  0025D4  19EC               	xorwf	(create_chain@ncl+2)& (0+255),w,b
  7421  0025D6  E183               	bnz	l11129
  7422  0025D8  0100               	movlb	0	; () banked
  7423  0025DA  51E9               	movf	(create_chain@scl+3)& (0+255),w,b
  7424  0025DC  0100               	movlb	0	; () banked
  7425  0025DE  19ED               	xorwf	(create_chain@ncl+3)& (0+255),w,b
  7426  0025E0  A4D8               	btfss	status,2,c
  7427  0025E2  D77D               	goto	l11129
  7428                           
  7429                           ; BSR set to: 0
  7430  0025E4  0E00               	movlw	0
  7431  0025E6  0100               	movlb	0	; () banked
  7432  0025E8  6FD4               	movwf	?_create_chain& (0+255),b
  7433  0025EA  0E00               	movlw	0
  7434  0025EC  6FD5               	movwf	(?_create_chain+1)& (0+255),b
  7435  0025EE  0E00               	movlw	0
  7436  0025F0  6FD6               	movwf	(?_create_chain+2)& (0+255),b
  7437  0025F2  0E00               	movlw	0
  7438  0025F4  6FD7               	movwf	(?_create_chain+3)& (0+255),b
  7439                           
  7440                           ; BSR set to: 0
  7441  0025F6  0012               	return	
  7442  0025F8                     l11157:
  7443                           
  7444                           ; BSR set to: 0
  7445                           ;tff.c: 315: if (!put_cluster(ncl, (CLUST)0x0FFFFFFF)) return 1;
  7446  0025F8  C0EA  F09A         	movff	create_chain@ncl,put_cluster@clust
  7447  0025FC  C0EB  F09B         	movff	create_chain@ncl+1,put_cluster@clust+1
  7448  002600  C0EC  F09C         	movff	create_chain@ncl+2,put_cluster@clust+2
  7449  002604  C0ED  F09D         	movff	create_chain@ncl+3,put_cluster@clust+3
  7450  002608  0EFF               	movlw	255
  7451  00260A  0100               	movlb	0	; () banked
  7452  00260C  6F9E               	movwf	put_cluster@val& (0+255),b
  7453  00260E  0EFF               	movlw	255
  7454  002610  6F9F               	movwf	(put_cluster@val+1)& (0+255),b
  7455  002612  0EFF               	movlw	255
  7456  002614  6FA0               	movwf	(put_cluster@val+2)& (0+255),b
  7457  002616  0E0F               	movlw	15
  7458  002618  6FA1               	movwf	(put_cluster@val+3)& (0+255),b
  7459  00261A  ECE8  F00C         	call	_put_cluster	;wreg free
  7460  00261E  0900               	iorlw	0
  7461  002620  A4D8               	btfss	status,2,c
  7462  002622  D00A               	goto	l11163
  7463  002624  0E01               	movlw	1
  7464  002626  0100               	movlb	0	; () banked
  7465  002628  6FD4               	movwf	?_create_chain& (0+255),b
  7466  00262A  0E00               	movlw	0
  7467  00262C  6FD5               	movwf	(?_create_chain+1)& (0+255),b
  7468  00262E  0E00               	movlw	0
  7469  002630  6FD6               	movwf	(?_create_chain+2)& (0+255),b
  7470  002632  0E00               	movlw	0
  7471  002634  6FD7               	movwf	(?_create_chain+3)& (0+255),b
  7472                           
  7473                           ; BSR set to: 0
  7474  002636  0012               	return	
  7475  002638                     l11163:
  7476                           
  7477                           ;tff.c: 316: if (clust != 0 && !put_cluster(clust, ncl)) return 1;
  7478  002638  0100               	movlb	0	; () banked
  7479  00263A  51D4               	movf	create_chain@clust& (0+255),w,b
  7480  00263C  0100               	movlb	0	; () banked
  7481  00263E  11D5               	iorwf	(create_chain@clust+1)& (0+255),w,b
  7482  002640  0100               	movlb	0	; () banked
  7483  002642  11D6               	iorwf	(create_chain@clust+2)& (0+255),w,b
  7484  002644  0100               	movlb	0	; () banked
  7485  002646  11D7               	iorwf	(create_chain@clust+3)& (0+255),w,b
  7486  002648  B4D8               	btfsc	status,2,c
  7487  00264A  D01F               	goto	l11171
  7488                           
  7489                           ; BSR set to: 0
  7490  00264C  C0D4  F09A         	movff	create_chain@clust,put_cluster@clust
  7491  002650  C0D5  F09B         	movff	create_chain@clust+1,put_cluster@clust+1
  7492  002654  C0D6  F09C         	movff	create_chain@clust+2,put_cluster@clust+2
  7493  002658  C0D7  F09D         	movff	create_chain@clust+3,put_cluster@clust+3
  7494  00265C  C0EA  F09E         	movff	create_chain@ncl,put_cluster@val
  7495  002660  C0EB  F09F         	movff	create_chain@ncl+1,put_cluster@val+1
  7496  002664  C0EC  F0A0         	movff	create_chain@ncl+2,put_cluster@val+2
  7497  002668  C0ED  F0A1         	movff	create_chain@ncl+3,put_cluster@val+3
  7498  00266C  ECE8  F00C         	call	_put_cluster	;wreg free
  7499  002670  0900               	iorlw	0
  7500  002672  A4D8               	btfss	status,2,c
  7501  002674  D00A               	goto	l11171
  7502  002676  0E01               	movlw	1
  7503  002678  0100               	movlb	0	; () banked
  7504  00267A  6FD4               	movwf	?_create_chain& (0+255),b
  7505  00267C  0E00               	movlw	0
  7506  00267E  6FD5               	movwf	(?_create_chain+1)& (0+255),b
  7507  002680  0E00               	movlw	0
  7508  002682  6FD6               	movwf	(?_create_chain+2)& (0+255),b
  7509  002684  0E00               	movlw	0
  7510  002686  6FD7               	movwf	(?_create_chain+3)& (0+255),b
  7511                           
  7512                           ; BSR set to: 0
  7513  002688  0012               	return	
  7514  00268A                     l11171:
  7515                           
  7516                           ;tff.c: 318: fs->last_clust = ncl;
  7517  00268A  0100               	movlb	0	; () banked
  7518  00268C  EE20 F01C          	lfsr	2,28
  7519  002690  51E0               	movf	create_chain@fs& (0+255),w,b
  7520  002692  26D9               	addwf	fsr2l,f,c
  7521  002694  51E1               	movf	(create_chain@fs+1)& (0+255),w,b
  7522  002696  22DA               	addwfc	fsr2h,f,c
  7523  002698  C0EA  FFDE         	movff	create_chain@ncl,postinc2
  7524  00269C  C0EB  FFDE         	movff	create_chain@ncl+1,postinc2
  7525  0026A0  C0EC  FFDE         	movff	create_chain@ncl+2,postinc2
  7526  0026A4  C0ED  FFDE         	movff	create_chain@ncl+3,postinc2
  7527                           
  7528                           ;tff.c: 319: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
  7529  0026A8  0100               	movlb	0	; () banked
  7530  0026AA  EE20 F020          	lfsr	2,32
  7531  0026AE  51E0               	movf	create_chain@fs& (0+255),w,b
  7532  0026B0  26D9               	addwf	fsr2l,f,c
  7533  0026B2  51E1               	movf	(create_chain@fs+1)& (0+255),w,b
  7534  0026B4  22DA               	addwfc	fsr2h,f,c
  7535  0026B6  28DE               	incf	postinc2,w,c
  7536  0026B8  E107               	bnz	u12380
  7537  0026BA  28DE               	incf	postinc2,w,c
  7538  0026BC  E105               	bnz	u12380
  7539  0026BE  28DE               	incf	postinc2,w,c
  7540  0026C0  E103               	bnz	u12380
  7541  0026C2  28DE               	incf	postinc2,w,c
  7542  0026C4  B4D8               	btfsc	status,2,c
  7543  0026C6  D00C               	goto	l11175
  7544  0026C8                     u12380:
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;tff.c: 320: fs->free_clust--;
  7548  0026C8  0100               	movlb	0	; () banked
  7549  0026CA  EE20 F020          	lfsr	2,32
  7550  0026CE  51E0               	movf	create_chain@fs& (0+255),w,b
  7551  0026D0  26D9               	addwf	fsr2l,f,c
  7552  0026D2  51E1               	movf	(create_chain@fs+1)& (0+255),w,b
  7553  0026D4  22DA               	addwfc	fsr2h,f,c
  7554  0026D6  06DE               	decf	postinc2,f,c
  7555  0026D8  0E00               	movlw	0
  7556  0026DA  5ADE               	subwfb	postinc2,f,c
  7557  0026DC  5ADE               	subwfb	postinc2,f,c
  7558  0026DE  5ADE               	subwfb	postinc2,f,c
  7559  0026E0                     l11175:
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;tff.c: 324: }
  7563                           ;tff.c: 326: return ncl;
  7564  0026E0  C0EA  F0D4         	movff	create_chain@ncl,?_create_chain
  7565  0026E4  C0EB  F0D5         	movff	create_chain@ncl+1,?_create_chain+1
  7566  0026E8  C0EC  F0D6         	movff	create_chain@ncl+2,?_create_chain+2
  7567  0026EC  C0ED  F0D7         	movff	create_chain@ncl+3,?_create_chain+3
  7568  0026F0  0012               	return	
  7569  0026F2                     __end_of_create_chain:
  7570                           	opt stack 0
  7571                           tosu	equ	0xFFF
  7572                           tosh	equ	0xFFE
  7573                           tosl	equ	0xFFD
  7574                           pclath	equ	0xFFA
  7575                           tblptru	equ	0xFF8
  7576                           tblptrh	equ	0xFF7
  7577                           tblptrl	equ	0xFF6
  7578                           tablat	equ	0xFF5
  7579                           prodh	equ	0xFF4
  7580                           prodl	equ	0xFF3
  7581                           intcon	equ	0xFF2
  7582                           intcon2	equ	0xFF1
  7583                           intcon3	equ	0xFF0
  7584                           postinc0	equ	0xFEE
  7585                           wreg	equ	0xFE8
  7586                           indf1	equ	0xFE7
  7587                           postinc1	equ	0xFE6
  7588                           postdec1	equ	0xFE5
  7589                           fsr1h	equ	0xFE2
  7590                           fsr1l	equ	0xFE1
  7591                           indf2	equ	0xFDF
  7592                           postinc2	equ	0xFDE
  7593                           postdec2	equ	0xFDD
  7594                           fsr2h	equ	0xFDA
  7595                           fsr2l	equ	0xFD9
  7596                           status	equ	0xFD8
  7597                           
  7598 ;; *************** function _remove_chain *****************
  7599 ;; Defined at:
  7600 ;;		line 249 in file "bibliotecas/tff.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;  clust           4  116[BANK0 ] unsigned long 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;  nxt             4  124[BANK0 ] unsigned long 
  7605 ;;  fs              2  128[BANK0 ] PTR struct _FATFS
  7606 ;;		 -> fs(552), NULL(0), 
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  1    wreg      enum E105
  7609 ;; Registers used:
  7610 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7616 ;;      Params:         0       4       0       0       0       0       0       0       0
  7617 ;;      Locals:         0       6       0       0       0       0       0       0       0
  7618 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7619 ;;      Totals:         0      14       0       0       0       0       0       0       0
  7620 ;;Total ram usage:       14 bytes
  7621 ;; Hardware stack levels used:    1
  7622 ;; Hardware stack levels required when called:   10
  7623 ;; This function calls:
  7624 ;;		_get_cluster
  7625 ;;		_put_cluster
  7626 ;; This function is called by:
  7627 ;;		_f_open
  7628 ;;		_f_truncate
  7629 ;;		_f_unlink
  7630 ;; This function uses a non-reentrant model
  7631 ;;
  7632                           
  7633                           	psect	text22
  7634  003FAC                     __ptext22:
  7635                           	opt stack 0
  7636  003FAC                     _remove_chain:
  7637                           	opt stack 17
  7638                           
  7639                           ;tff.c: 253: CLUST nxt;
  7640                           ;tff.c: 254: FATFS *fs = FatFs;
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;incstack = 0
  7644  003FAC  C0FC  F0E0         	movff	_FatFs,remove_chain@fs
  7645  003FB0  C0FD  F0E1         	movff	_FatFs+1,remove_chain@fs+1
  7646                           
  7647                           ;tff.c: 257: while (clust >= 2 && clust < fs->max_clust) {
  7648  003FB4  D05A               	goto	l11459
  7649  003FB6                     l11439:
  7650                           
  7651                           ;tff.c: 258: nxt = get_cluster(clust);
  7652  003FB6  C0D4  F09A         	movff	remove_chain@clust,get_cluster@clust
  7653  003FBA  C0D5  F09B         	movff	remove_chain@clust+1,get_cluster@clust+1
  7654  003FBE  C0D6  F09C         	movff	remove_chain@clust+2,get_cluster@clust+2
  7655  003FC2  C0D7  F09D         	movff	remove_chain@clust+3,get_cluster@clust+3
  7656  003FC6  ECCC  F009         	call	_get_cluster	;wreg free
  7657  003FCA  C09A  F0DC         	movff	?_get_cluster,remove_chain@nxt
  7658  003FCE  C09B  F0DD         	movff	?_get_cluster+1,remove_chain@nxt+1
  7659  003FD2  C09C  F0DE         	movff	?_get_cluster+2,remove_chain@nxt+2
  7660  003FD6  C09D  F0DF         	movff	?_get_cluster+3,remove_chain@nxt+3
  7661                           
  7662                           ;tff.c: 259: if (nxt == 1) return FALSE;
  7663  003FDA  0100               	movlb	0	; () banked
  7664  003FDC  05DC               	decf	remove_chain@nxt& (0+255),w,b
  7665  003FDE  0100               	movlb	0	; () banked
  7666  003FE0  11DD               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  7667  003FE2  0100               	movlb	0	; () banked
  7668  003FE4  11DE               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  7669  003FE6  0100               	movlb	0	; () banked
  7670  003FE8  11DF               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  7671  003FEA  A4D8               	btfss	status,2,c
  7672  003FEC  D002               	goto	l11447
  7673                           
  7674                           ; BSR set to: 0
  7675  003FEE  0E00               	movlw	0
  7676                           
  7677                           ; BSR set to: 0
  7678  003FF0  0012               	return	
  7679  003FF2                     l11447:
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;tff.c: 260: if (!put_cluster(clust, 0)) return FALSE;
  7683  003FF2  C0D4  F09A         	movff	remove_chain@clust,put_cluster@clust
  7684  003FF6  C0D5  F09B         	movff	remove_chain@clust+1,put_cluster@clust+1
  7685  003FFA  C0D6  F09C         	movff	remove_chain@clust+2,put_cluster@clust+2
  7686  003FFE  C0D7  F09D         	movff	remove_chain@clust+3,put_cluster@clust+3
  7687  004002  0E00               	movlw	0
  7688  004004  0100               	movlb	0	; () banked
  7689  004006  6F9E               	movwf	put_cluster@val& (0+255),b
  7690  004008  0E00               	movlw	0
  7691  00400A  6F9F               	movwf	(put_cluster@val+1)& (0+255),b
  7692  00400C  0E00               	movlw	0
  7693  00400E  6FA0               	movwf	(put_cluster@val+2)& (0+255),b
  7694  004010  0E00               	movlw	0
  7695  004012  6FA1               	movwf	(put_cluster@val+3)& (0+255),b
  7696  004014  ECE8  F00C         	call	_put_cluster	;wreg free
  7697  004018  0900               	iorlw	0
  7698  00401A  A4D8               	btfss	status,2,c
  7699  00401C  D002               	goto	l11453
  7700  00401E  0E00               	movlw	0
  7701  004020  0012               	return	
  7702  004022                     l11453:
  7703                           
  7704                           ;tff.c: 261: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
  7705  004022  0100               	movlb	0	; () banked
  7706  004024  EE20 F020          	lfsr	2,32
  7707  004028  51E0               	movf	remove_chain@fs& (0+255),w,b
  7708  00402A  26D9               	addwf	fsr2l,f,c
  7709  00402C  51E1               	movf	(remove_chain@fs+1)& (0+255),w,b
  7710  00402E  22DA               	addwfc	fsr2h,f,c
  7711  004030  28DE               	incf	postinc2,w,c
  7712  004032  E107               	bnz	u12950
  7713  004034  28DE               	incf	postinc2,w,c
  7714  004036  E105               	bnz	u12950
  7715  004038  28DE               	incf	postinc2,w,c
  7716  00403A  E103               	bnz	u12950
  7717  00403C  28DE               	incf	postinc2,w,c
  7718  00403E  B4D8               	btfsc	status,2,c
  7719  004040  D00C               	goto	l11457
  7720  004042                     u12950:
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;tff.c: 262: fs->free_clust++;
  7724  004042  0100               	movlb	0	; () banked
  7725  004044  EE20 F020          	lfsr	2,32
  7726  004048  51E0               	movf	remove_chain@fs& (0+255),w,b
  7727  00404A  26D9               	addwf	fsr2l,f,c
  7728  00404C  51E1               	movf	(remove_chain@fs+1)& (0+255),w,b
  7729  00404E  22DA               	addwfc	fsr2h,f,c
  7730  004050  2ADE               	incf	postinc2,f,c
  7731  004052  0E00               	movlw	0
  7732  004054  22DE               	addwfc	postinc2,f,c
  7733  004056  22DE               	addwfc	postinc2,f,c
  7734  004058  22DE               	addwfc	postinc2,f,c
  7735  00405A                     l11457:
  7736                           
  7737                           ; BSR set to: 0
  7738                           ;tff.c: 266: }
  7739                           ;tff.c: 267: clust = nxt;
  7740  00405A  C0DC  F0D4         	movff	remove_chain@nxt,remove_chain@clust
  7741  00405E  C0DD  F0D5         	movff	remove_chain@nxt+1,remove_chain@clust+1
  7742  004062  C0DE  F0D6         	movff	remove_chain@nxt+2,remove_chain@clust+2
  7743  004066  C0DF  F0D7         	movff	remove_chain@nxt+3,remove_chain@clust+3
  7744  00406A                     l11459:
  7745  00406A  0100               	movlb	0	; () banked
  7746  00406C  51D7               	movf	(remove_chain@clust+3)& (0+255),w,b
  7747  00406E  0100               	movlb	0	; () banked
  7748  004070  11D6               	iorwf	(remove_chain@clust+2)& (0+255),w,b
  7749  004072  0100               	movlb	0	; () banked
  7750  004074  11D5               	iorwf	(remove_chain@clust+1)& (0+255),w,b
  7751  004076  E105               	bnz	u12960
  7752  004078  0E02               	movlw	2
  7753  00407A  0100               	movlb	0	; () banked
  7754  00407C  5DD4               	subwf	remove_chain@clust& (0+255),w,b
  7755  00407E  A0D8               	btfss	status,0,c
  7756  004080  D015               	goto	l11463
  7757  004082                     u12960:
  7758                           
  7759                           ; BSR set to: 0
  7760  004082  0100               	movlb	0	; () banked
  7761  004084  EE20 F018          	lfsr	2,24
  7762  004088  51E0               	movf	remove_chain@fs& (0+255),w,b
  7763  00408A  26D9               	addwf	fsr2l,f,c
  7764  00408C  51E1               	movf	(remove_chain@fs+1)& (0+255),w,b
  7765  00408E  22DA               	addwfc	fsr2h,f,c
  7766  004090  50DE               	movf	postinc2,w,c
  7767  004092  0100               	movlb	0	; () banked
  7768  004094  5DD4               	subwf	remove_chain@clust& (0+255),w,b
  7769  004096  50DE               	movf	postinc2,w,c
  7770  004098  0100               	movlb	0	; () banked
  7771  00409A  59D5               	subwfb	(remove_chain@clust+1)& (0+255),w,b
  7772  00409C  50DE               	movf	postinc2,w,c
  7773  00409E  0100               	movlb	0	; () banked
  7774  0040A0  59D6               	subwfb	(remove_chain@clust+2)& (0+255),w,b
  7775  0040A2  50DE               	movf	postinc2,w,c
  7776  0040A4  0100               	movlb	0	; () banked
  7777  0040A6  59D7               	subwfb	(remove_chain@clust+3)& (0+255),w,b
  7778  0040A8  A0D8               	btfss	status,0,c
  7779  0040AA  D785               	goto	l11439
  7780  0040AC                     l11463:
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;tff.c: 268: }
  7784                           ;tff.c: 269: return TRUE;
  7785  0040AC  0E01               	movlw	1
  7786  0040AE  0012               	return	
  7787  0040B0                     __end_of_remove_chain:
  7788                           	opt stack 0
  7789                           tosu	equ	0xFFF
  7790                           tosh	equ	0xFFE
  7791                           tosl	equ	0xFFD
  7792                           pclath	equ	0xFFA
  7793                           tblptru	equ	0xFF8
  7794                           tblptrh	equ	0xFF7
  7795                           tblptrl	equ	0xFF6
  7796                           tablat	equ	0xFF5
  7797                           prodh	equ	0xFF4
  7798                           prodl	equ	0xFF3
  7799                           intcon	equ	0xFF2
  7800                           intcon2	equ	0xFF1
  7801                           intcon3	equ	0xFF0
  7802                           postinc0	equ	0xFEE
  7803                           wreg	equ	0xFE8
  7804                           indf1	equ	0xFE7
  7805                           postinc1	equ	0xFE6
  7806                           postdec1	equ	0xFE5
  7807                           fsr1h	equ	0xFE2
  7808                           fsr1l	equ	0xFE1
  7809                           indf2	equ	0xFDF
  7810                           postinc2	equ	0xFDE
  7811                           postdec2	equ	0xFDD
  7812                           fsr2h	equ	0xFDA
  7813                           fsr2l	equ	0xFD9
  7814                           status	equ	0xFD8
  7815                           
  7816 ;; *************** function _put_cluster *****************
  7817 ;; Defined at:
  7818 ;;		line 197 in file "bibliotecas/tff.c"
  7819 ;; Parameters:    Size  Location     Type
  7820 ;;  clust           4   58[BANK0 ] unsigned long 
  7821 ;;  val             4   62[BANK0 ] unsigned long 
  7822 ;; Auto vars:     Size  Location     Type
  7823 ;;  fatsect         4   75[BANK0 ] unsigned long 
  7824 ;;  fs              2   83[BANK0 ] PTR struct _FATFS
  7825 ;;		 -> fs(552), NULL(0), 
  7826 ;;  p               2   81[BANK0 ] PTR unsigned char 
  7827 ;;		 -> fs.win(512), fs(552), NULL(0), 
  7828 ;;  bc              2   79[BANK0 ] unsigned short 
  7829 ;; Return value:  Size  Location     Type
  7830 ;;                  1    wreg      enum E105
  7831 ;; Registers used:
  7832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7833 ;; Tracked objects:
  7834 ;;		On entry : 0/0
  7835 ;;		On exit  : 0/0
  7836 ;;		Unchanged: 0/0
  7837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7838 ;;      Params:         0       8       0       0       0       0       0       0       0
  7839 ;;      Locals:         0      14       0       0       0       0       0       0       0
  7840 ;;      Temps:          0       5       0       0       0       0       0       0       0
  7841 ;;      Totals:         0      27       0       0       0       0       0       0       0
  7842 ;;Total ram usage:       27 bytes
  7843 ;; Hardware stack levels used:    1
  7844 ;; Hardware stack levels required when called:    9
  7845 ;; This function calls:
  7846 ;;		___wmul
  7847 ;;		_move_window
  7848 ;; This function is called by:
  7849 ;;		_remove_chain
  7850 ;;		_create_chain
  7851 ;;		_f_truncate
  7852 ;; This function uses a non-reentrant model
  7853 ;;
  7854                           
  7855                           	psect	text23
  7856  0019D0                     __ptext23:
  7857                           	opt stack 0
  7858  0019D0                     _put_cluster:
  7859                           	opt stack 16
  7860                           
  7861                           ;tff.c: 202: WORD bc;
  7862                           ;tff.c: 203: BYTE *p;
  7863                           ;tff.c: 204: DWORD fatsect;
  7864                           ;tff.c: 205: FATFS *fs = FatFs;
  7865                           
  7866                           ;incstack = 0
  7867  0019D0  C0FC  F0B3         	movff	_FatFs,put_cluster@fs
  7868  0019D4  C0FD  F0B4         	movff	_FatFs+1,put_cluster@fs+1
  7869                           
  7870                           ;tff.c: 208: fatsect = fs->fatbase;
  7871  0019D8  0100               	movlb	0	; () banked
  7872  0019DA  EE20 F008          	lfsr	2,8
  7873  0019DE  51B3               	movf	put_cluster@fs& (0+255),w,b
  7874  0019E0  26D9               	addwf	fsr2l,f,c
  7875  0019E2  51B4               	movf	(put_cluster@fs+1)& (0+255),w,b
  7876  0019E4  22DA               	addwfc	fsr2h,f,c
  7877  0019E6  CFDE F0AB          	movff	postinc2,put_cluster@fatsect
  7878  0019EA  CFDE F0AC          	movff	postinc2,put_cluster@fatsect+1
  7879  0019EE  CFDE F0AD          	movff	postinc2,put_cluster@fatsect+2
  7880  0019F2  CFDE F0AE          	movff	postinc2,put_cluster@fatsect+3
  7881                           
  7882                           ;tff.c: 209: switch (fs->fs_type) {
  7883  0019F6  D28E               	goto	l11021
  7884  0019F8                     l10961:
  7885                           
  7886                           ; BSR set to: 0
  7887                           ;tff.c: 211: bc = (WORD)clust * 3 / 2;
  7888  0019F8  C09A  F016         	movff	put_cluster@clust,___wmul@multiplier
  7889  0019FC  C09B  F017         	movff	put_cluster@clust+1,___wmul@multiplier+1
  7890  001A00  0E00               	movlw	0
  7891  001A02  6E19               	movwf	___wmul@multiplicand+1,c
  7892  001A04  0E03               	movlw	3
  7893  001A06  6E18               	movwf	___wmul@multiplicand,c
  7894  001A08  ECA2  F027         	call	___wmul	;wreg free
  7895  001A0C  90D8               	bcf	status,0,c
  7896  001A0E  3017               	rrcf	?___wmul+1,w,c
  7897  001A10  0100               	movlb	0	; () banked
  7898  001A12  6FA2               	movwf	??_put_cluster& (0+255),b
  7899  001A14  3016               	rrcf	?___wmul,w,c
  7900  001A16  0100               	movlb	0	; () banked
  7901  001A18  6FAF               	movwf	put_cluster@bc& (0+255),b
  7902  001A1A  C0A2  F0B0         	movff	??_put_cluster,put_cluster@bc+1
  7903                           
  7904                           ; BSR set to: 0
  7905                           ;tff.c: 212: if (!move_window(fatsect + bc / 512U)) return FALSE;
  7906  001A1E  C0AF  F0A2         	movff	put_cluster@bc,??_put_cluster
  7907  001A22  C0B0  F0A3         	movff	put_cluster@bc+1,??_put_cluster+1
  7908  001A26  0E09               	movlw	9
  7909  001A28  0100               	movlb	0	; () banked
  7910  001A2A  6FA4               	movwf	(??_put_cluster+2)& (0+255),b
  7911  001A2C                     u12085:
  7912  001A2C  0100               	movlb	0	; () banked
  7913  001A2E  90D8               	bcf	status,0,c
  7914  001A30  33A3               	rrcf	(??_put_cluster+1)& (0+255),f,b
  7915  001A32  33A2               	rrcf	??_put_cluster& (0+255),f,b
  7916  001A34  0100               	movlb	0	; () banked
  7917  001A36  2FA4               	decfsz	(??_put_cluster+2)& (0+255),f,b
  7918  001A38  D7F9               	goto	u12085
  7919  001A3A  0100               	movlb	0	; () banked
  7920  001A3C  51A2               	movf	??_put_cluster& (0+255),w,b
  7921  001A3E  0100               	movlb	0	; () banked
  7922  001A40  25AB               	addwf	put_cluster@fatsect& (0+255),w,b
  7923  001A42  0100               	movlb	0	; () banked
  7924  001A44  6F83               	movwf	move_window@sector& (0+255),b
  7925  001A46  0100               	movlb	0	; () banked
  7926  001A48  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  7927  001A4A  0100               	movlb	0	; () banked
  7928  001A4C  21AC               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
  7929  001A4E  0100               	movlb	0	; () banked
  7930  001A50  6F84               	movwf	(move_window@sector+1)& (0+255),b
  7931  001A52  0E00               	movlw	0
  7932  001A54  0100               	movlb	0	; () banked
  7933  001A56  21AD               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
  7934  001A58  0100               	movlb	0	; () banked
  7935  001A5A  6F85               	movwf	(move_window@sector+2)& (0+255),b
  7936  001A5C  0E00               	movlw	0
  7937  001A5E  0100               	movlb	0	; () banked
  7938  001A60  21AE               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
  7939  001A62  0100               	movlb	0	; () banked
  7940  001A64  6F86               	movwf	(move_window@sector+3)& (0+255),b
  7941  001A66  EC60  F019         	call	_move_window	;wreg free
  7942  001A6A  0900               	iorlw	0
  7943  001A6C  A4D8               	btfss	status,2,c
  7944  001A6E  D002               	goto	l10969
  7945  001A70  0E00               	movlw	0
  7946  001A72  0012               	return	
  7947  001A74                     l10969:
  7948                           
  7949                           ;tff.c: 213: p = &fs->win[bc % 512U];
  7950  001A74  0EFF               	movlw	255
  7951  001A76  0100               	movlb	0	; () banked
  7952  001A78  6FA2               	movwf	??_put_cluster& (0+255),b
  7953  001A7A  0E01               	movlw	1
  7954  001A7C  0100               	movlb	0	; () banked
  7955  001A7E  6FA3               	movwf	(??_put_cluster+1)& (0+255),b
  7956  001A80  C0AF  F0A4         	movff	put_cluster@bc,??_put_cluster+2
  7957  001A84  C0B0  F0A5         	movff	put_cluster@bc+1,??_put_cluster+3
  7958  001A88  0100               	movlb	0	; () banked
  7959  001A8A  51A2               	movf	??_put_cluster& (0+255),w,b
  7960  001A8C  0100               	movlb	0	; () banked
  7961  001A8E  17A4               	andwf	(??_put_cluster+2)& (0+255),f,b
  7962  001A90  0100               	movlb	0	; () banked
  7963  001A92  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  7964  001A94  0100               	movlb	0	; () banked
  7965  001A96  17A5               	andwf	(??_put_cluster+3)& (0+255),f,b
  7966  001A98  0E28               	movlw	40
  7967  001A9A  0100               	movlb	0	; () banked
  7968  001A9C  27A4               	addwf	(??_put_cluster+2)& (0+255),f,b
  7969  001A9E  0E00               	movlw	0
  7970  001AA0  23A5               	addwfc	(??_put_cluster+3)& (0+255),f,b
  7971  001AA2  0100               	movlb	0	; () banked
  7972  001AA4  51A4               	movf	(??_put_cluster+2)& (0+255),w,b
  7973  001AA6  0100               	movlb	0	; () banked
  7974  001AA8  25B3               	addwf	put_cluster@fs& (0+255),w,b
  7975  001AAA  0100               	movlb	0	; () banked
  7976  001AAC  6FB1               	movwf	put_cluster@p& (0+255),b
  7977  001AAE  0100               	movlb	0	; () banked
  7978  001AB0  51A5               	movf	(??_put_cluster+3)& (0+255),w,b
  7979  001AB2  0100               	movlb	0	; () banked
  7980  001AB4  21B4               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  7981  001AB6  0100               	movlb	0	; () banked
  7982  001AB8  6FB2               	movwf	(put_cluster@p+1)& (0+255),b
  7983                           
  7984                           ; BSR set to: 0
  7985                           ;tff.c: 214: *p = (clust & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
  7986  001ABA  0100               	movlb	0	; () banked
  7987  001ABC  B19A               	btfsc	put_cluster@clust& (0+255),0,b
  7988  001ABE  D005               	goto	l10975
  7989                           
  7990                           ; BSR set to: 0
  7991  001AC0  C09E  F0A7         	movff	put_cluster@val,_put_cluster$1088
  7992  001AC4  0100               	movlb	0	; () banked
  7993  001AC6  6BA8               	clrf	(_put_cluster$1088+1)& (0+255),b
  7994  001AC8  D024               	goto	l10977
  7995  001ACA                     l10975:
  7996                           
  7997                           ; BSR set to: 0
  7998  001ACA  0100               	movlb	0	; () banked
  7999  001ACC  519E               	movf	put_cluster@val& (0+255),w,b
  8000  001ACE  0100               	movlb	0	; () banked
  8001  001AD0  6FA2               	movwf	??_put_cluster& (0+255),b
  8002  001AD2  6BA3               	clrf	(??_put_cluster+1)& (0+255),b
  8003  001AD4  0100               	movlb	0	; () banked
  8004  001AD6  3BA2               	swapf	??_put_cluster& (0+255),f,b
  8005  001AD8  3BA3               	swapf	(??_put_cluster+1)& (0+255),f,b
  8006  001ADA  0EF0               	movlw	240
  8007  001ADC  17A3               	andwf	(??_put_cluster+1)& (0+255),f,b
  8008  001ADE  51A2               	movf	??_put_cluster& (0+255),w,b
  8009  001AE0  0B0F               	andlw	15
  8010  001AE2  13A3               	iorwf	(??_put_cluster+1)& (0+255),f,b
  8011  001AE4  0EF0               	movlw	240
  8012  001AE6  17A2               	andwf	??_put_cluster& (0+255),f,b
  8013  001AE8  C0B1  FFD9         	movff	put_cluster@p,fsr2l
  8014  001AEC  C0B2  FFDA         	movff	put_cluster@p+1,fsr2h
  8015  001AF0  50DF               	movf	indf2,w,c
  8016  001AF2  0B0F               	andlw	15
  8017  001AF4  0100               	movlb	0	; () banked
  8018  001AF6  6FA4               	movwf	(??_put_cluster+2)& (0+255),b
  8019  001AF8  6BA5               	clrf	(??_put_cluster+3)& (0+255),b
  8020  001AFA  0100               	movlb	0	; () banked
  8021  001AFC  51A2               	movf	??_put_cluster& (0+255),w,b
  8022  001AFE  0100               	movlb	0	; () banked
  8023  001B00  11A4               	iorwf	(??_put_cluster+2)& (0+255),w,b
  8024  001B02  0100               	movlb	0	; () banked
  8025  001B04  6FA7               	movwf	_put_cluster$1088& (0+255),b
  8026  001B06  0100               	movlb	0	; () banked
  8027  001B08  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8028  001B0A  0100               	movlb	0	; () banked
  8029  001B0C  11A5               	iorwf	(??_put_cluster+3)& (0+255),w,b
  8030  001B0E  0100               	movlb	0	; () banked
  8031  001B10  6FA8               	movwf	(_put_cluster$1088+1)& (0+255),b
  8032  001B12                     l10977:
  8033                           
  8034                           ; BSR set to: 0
  8035  001B12  C0B1  FFD9         	movff	put_cluster@p,fsr2l
  8036  001B16  C0B2  FFDA         	movff	put_cluster@p+1,fsr2h
  8037  001B1A  C0A7  FFDF         	movff	_put_cluster$1088,indf2
  8038                           
  8039                           ; BSR set to: 0
  8040                           ;tff.c: 215: bc++;
  8041  001B1E  0100               	movlb	0	; () banked
  8042  001B20  4BAF               	infsnz	put_cluster@bc& (0+255),f,b
  8043  001B22  2BB0               	incf	(put_cluster@bc+1)& (0+255),f,b
  8044                           
  8045                           ; BSR set to: 0
  8046                           ;tff.c: 216: fs->winflag = 1;
  8047  001B24  0100               	movlb	0	; () banked
  8048  001B26  EE20 F027          	lfsr	2,39
  8049  001B2A  51B3               	movf	put_cluster@fs& (0+255),w,b
  8050  001B2C  26D9               	addwf	fsr2l,f,c
  8051  001B2E  51B4               	movf	(put_cluster@fs+1)& (0+255),w,b
  8052  001B30  22DA               	addwfc	fsr2h,f,c
  8053  001B32  0E01               	movlw	1
  8054  001B34  6EDF               	movwf	indf2,c
  8055                           
  8056                           ; BSR set to: 0
  8057                           ;tff.c: 217: if (!move_window(fatsect + bc / 512U)) return FALSE;
  8058  001B36  C0AF  F0A2         	movff	put_cluster@bc,??_put_cluster
  8059  001B3A  C0B0  F0A3         	movff	put_cluster@bc+1,??_put_cluster+1
  8060  001B3E  0E09               	movlw	9
  8061  001B40  0100               	movlb	0	; () banked
  8062  001B42  6FA4               	movwf	(??_put_cluster+2)& (0+255),b
  8063  001B44                     u12115:
  8064  001B44  0100               	movlb	0	; () banked
  8065  001B46  90D8               	bcf	status,0,c
  8066  001B48  33A3               	rrcf	(??_put_cluster+1)& (0+255),f,b
  8067  001B4A  33A2               	rrcf	??_put_cluster& (0+255),f,b
  8068  001B4C  0100               	movlb	0	; () banked
  8069  001B4E  2FA4               	decfsz	(??_put_cluster+2)& (0+255),f,b
  8070  001B50  D7F9               	goto	u12115
  8071  001B52  0100               	movlb	0	; () banked
  8072  001B54  51A2               	movf	??_put_cluster& (0+255),w,b
  8073  001B56  0100               	movlb	0	; () banked
  8074  001B58  25AB               	addwf	put_cluster@fatsect& (0+255),w,b
  8075  001B5A  0100               	movlb	0	; () banked
  8076  001B5C  6F83               	movwf	move_window@sector& (0+255),b
  8077  001B5E  0100               	movlb	0	; () banked
  8078  001B60  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8079  001B62  0100               	movlb	0	; () banked
  8080  001B64  21AC               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
  8081  001B66  0100               	movlb	0	; () banked
  8082  001B68  6F84               	movwf	(move_window@sector+1)& (0+255),b
  8083  001B6A  0E00               	movlw	0
  8084  001B6C  0100               	movlb	0	; () banked
  8085  001B6E  21AD               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
  8086  001B70  0100               	movlb	0	; () banked
  8087  001B72  6F85               	movwf	(move_window@sector+2)& (0+255),b
  8088  001B74  0E00               	movlw	0
  8089  001B76  0100               	movlb	0	; () banked
  8090  001B78  21AE               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
  8091  001B7A  0100               	movlb	0	; () banked
  8092  001B7C  6F86               	movwf	(move_window@sector+3)& (0+255),b
  8093  001B7E  EC60  F019         	call	_move_window	;wreg free
  8094  001B82  0900               	iorlw	0
  8095  001B84  A4D8               	btfss	status,2,c
  8096  001B86  D002               	goto	l10989
  8097  001B88  0E00               	movlw	0
  8098  001B8A  0012               	return	
  8099  001B8C                     l10989:
  8100                           
  8101                           ;tff.c: 218: p = &fs->win[bc % 512U];
  8102  001B8C  0EFF               	movlw	255
  8103  001B8E  0100               	movlb	0	; () banked
  8104  001B90  6FA2               	movwf	??_put_cluster& (0+255),b
  8105  001B92  0E01               	movlw	1
  8106  001B94  0100               	movlb	0	; () banked
  8107  001B96  6FA3               	movwf	(??_put_cluster+1)& (0+255),b
  8108  001B98  C0AF  F0A4         	movff	put_cluster@bc,??_put_cluster+2
  8109  001B9C  C0B0  F0A5         	movff	put_cluster@bc+1,??_put_cluster+3
  8110  001BA0  0100               	movlb	0	; () banked
  8111  001BA2  51A2               	movf	??_put_cluster& (0+255),w,b
  8112  001BA4  0100               	movlb	0	; () banked
  8113  001BA6  17A4               	andwf	(??_put_cluster+2)& (0+255),f,b
  8114  001BA8  0100               	movlb	0	; () banked
  8115  001BAA  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8116  001BAC  0100               	movlb	0	; () banked
  8117  001BAE  17A5               	andwf	(??_put_cluster+3)& (0+255),f,b
  8118  001BB0  0E28               	movlw	40
  8119  001BB2  0100               	movlb	0	; () banked
  8120  001BB4  27A4               	addwf	(??_put_cluster+2)& (0+255),f,b
  8121  001BB6  0E00               	movlw	0
  8122  001BB8  23A5               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8123  001BBA  0100               	movlb	0	; () banked
  8124  001BBC  51A4               	movf	(??_put_cluster+2)& (0+255),w,b
  8125  001BBE  0100               	movlb	0	; () banked
  8126  001BC0  25B3               	addwf	put_cluster@fs& (0+255),w,b
  8127  001BC2  0100               	movlb	0	; () banked
  8128  001BC4  6FB1               	movwf	put_cluster@p& (0+255),b
  8129  001BC6  0100               	movlb	0	; () banked
  8130  001BC8  51A5               	movf	(??_put_cluster+3)& (0+255),w,b
  8131  001BCA  0100               	movlb	0	; () banked
  8132  001BCC  21B4               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8133  001BCE  0100               	movlb	0	; () banked
  8134  001BD0  6FB2               	movwf	(put_cluster@p+1)& (0+255),b
  8135                           
  8136                           ; BSR set to: 0
  8137                           ;tff.c: 219: *p = (clust & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x
      +                          0F));
  8138  001BD2  0100               	movlb	0	; () banked
  8139  001BD4  B19A               	btfsc	put_cluster@clust& (0+255),0,b
  8140  001BD6  D020               	goto	l10995
  8141                           
  8142                           ; BSR set to: 0
  8143  001BD8  C09E  F0A2         	movff	put_cluster@val,??_put_cluster
  8144  001BDC  C09F  F0A3         	movff	put_cluster@val+1,??_put_cluster+1
  8145  001BE0  C0A0  F0A4         	movff	put_cluster@val+2,??_put_cluster+2
  8146  001BE4  C0A1  F0A5         	movff	put_cluster@val+3,??_put_cluster+3
  8147  001BE8  C0A3  F0A2         	movff	??_put_cluster+1,??_put_cluster
  8148  001BEC  C0A4  F0A3         	movff	??_put_cluster+2,??_put_cluster+1
  8149  001BF0  C0A5  F0A4         	movff	??_put_cluster+3,??_put_cluster+2
  8150  001BF4  0100               	movlb	0	; () banked
  8151  001BF6  6BA5               	clrf	(??_put_cluster+3)& (0+255),b
  8152  001BF8  0E0F               	movlw	15
  8153  001BFA  0100               	movlb	0	; () banked
  8154  001BFC  17A2               	andwf	??_put_cluster& (0+255),f,b
  8155  001BFE  C0B1  FFD9         	movff	put_cluster@p,fsr2l
  8156  001C02  C0B2  FFDA         	movff	put_cluster@p+1,fsr2h
  8157  001C06  50DF               	movf	indf2,w,c
  8158  001C08  0BF0               	andlw	240
  8159  001C0A  0100               	movlb	0	; () banked
  8160  001C0C  11A2               	iorwf	??_put_cluster& (0+255),w,b
  8161  001C0E  0100               	movlb	0	; () banked
  8162  001C10  6FA6               	movwf	(??_put_cluster+4)& (0+255),b
  8163  001C12  0100               	movlb	0	; () banked
  8164  001C14  51A6               	movf	(??_put_cluster+4)& (0+255),w,b
  8165  001C16  D014               	goto	L4
  8166  001C18                     l10995:
  8167                           
  8168                           ; BSR set to: 0
  8169  001C18  C09E  F0A2         	movff	put_cluster@val,??_put_cluster
  8170  001C1C  C09F  F0A3         	movff	put_cluster@val+1,??_put_cluster+1
  8171  001C20  C0A0  F0A4         	movff	put_cluster@val+2,??_put_cluster+2
  8172  001C24  C0A1  F0A5         	movff	put_cluster@val+3,??_put_cluster+3
  8173  001C28  0E05               	movlw	5
  8174  001C2A  D006               	goto	u12140
  8175  001C2C                     u12145:
  8176  001C2C  0100               	movlb	0	; () banked
  8177  001C2E  90D8               	bcf	status,0,c
  8178  001C30  33A5               	rrcf	(??_put_cluster+3)& (0+255),f,b
  8179  001C32  33A4               	rrcf	(??_put_cluster+2)& (0+255),f,b
  8180  001C34  33A3               	rrcf	(??_put_cluster+1)& (0+255),f,b
  8181  001C36  33A2               	rrcf	??_put_cluster& (0+255),f,b
  8182  001C38                     u12140:
  8183  001C38  2EE8               	decfsz	wreg,f,c
  8184  001C3A  D7F8               	goto	u12145
  8185  001C3C  0100               	movlb	0	; () banked
  8186  001C3E  51A2               	movf	??_put_cluster& (0+255),w,b
  8187  001C40                     L4:
  8188  001C40  0100               	movlb	0	; () banked
  8189  001C42  6FA9               	movwf	_put_cluster$1089& (0+255),b
  8190  001C44  6BAA               	clrf	(_put_cluster$1089+1)& (0+255),b
  8191                           
  8192                           ; BSR set to: 0
  8193                           
  8194                           ; BSR set to: 0
  8195  001C46  C0B1  FFD9         	movff	put_cluster@p,fsr2l
  8196  001C4A  C0B2  FFDA         	movff	put_cluster@p+1,fsr2h
  8197  001C4E  C0A9  FFDF         	movff	_put_cluster$1089,indf2
  8198                           
  8199                           ;tff.c: 220: break;
  8200  001C52  D172               	goto	l11023
  8201  001C54                     l10999:
  8202                           
  8203                           ; BSR set to: 0
  8204                           ;tff.c: 223: if (!move_window(fatsect + clust / 256)) return FALSE;
  8205  001C54  C09A  F0A2         	movff	put_cluster@clust,??_put_cluster
  8206  001C58  C09B  F0A3         	movff	put_cluster@clust+1,??_put_cluster+1
  8207  001C5C  C09C  F0A4         	movff	put_cluster@clust+2,??_put_cluster+2
  8208  001C60  C09D  F0A5         	movff	put_cluster@clust+3,??_put_cluster+3
  8209  001C64  C0A3  F0A2         	movff	??_put_cluster+1,??_put_cluster
  8210  001C68  C0A4  F0A3         	movff	??_put_cluster+2,??_put_cluster+1
  8211  001C6C  C0A5  F0A4         	movff	??_put_cluster+3,??_put_cluster+2
  8212  001C70  0100               	movlb	0	; () banked
  8213  001C72  6BA5               	clrf	(??_put_cluster+3)& (0+255),b
  8214  001C74  0100               	movlb	0	; () banked
  8215  001C76  51AB               	movf	put_cluster@fatsect& (0+255),w,b
  8216  001C78  0100               	movlb	0	; () banked
  8217  001C7A  25A2               	addwf	??_put_cluster& (0+255),w,b
  8218  001C7C  0100               	movlb	0	; () banked
  8219  001C7E  6F83               	movwf	move_window@sector& (0+255),b
  8220  001C80  0100               	movlb	0	; () banked
  8221  001C82  51AC               	movf	(put_cluster@fatsect+1)& (0+255),w,b
  8222  001C84  0100               	movlb	0	; () banked
  8223  001C86  21A3               	addwfc	(??_put_cluster+1)& (0+255),w,b
  8224  001C88  0100               	movlb	0	; () banked
  8225  001C8A  6F84               	movwf	(move_window@sector+1)& (0+255),b
  8226  001C8C  0100               	movlb	0	; () banked
  8227  001C8E  51AD               	movf	(put_cluster@fatsect+2)& (0+255),w,b
  8228  001C90  0100               	movlb	0	; () banked
  8229  001C92  21A4               	addwfc	(??_put_cluster+2)& (0+255),w,b
  8230  001C94  0100               	movlb	0	; () banked
  8231  001C96  6F85               	movwf	(move_window@sector+2)& (0+255),b
  8232  001C98  0100               	movlb	0	; () banked
  8233  001C9A  51AE               	movf	(put_cluster@fatsect+3)& (0+255),w,b
  8234  001C9C  0100               	movlb	0	; () banked
  8235  001C9E  21A5               	addwfc	(??_put_cluster+3)& (0+255),w,b
  8236  001CA0  0100               	movlb	0	; () banked
  8237  001CA2  6F86               	movwf	(move_window@sector+3)& (0+255),b
  8238  001CA4  EC60  F019         	call	_move_window	;wreg free
  8239  001CA8  0900               	iorlw	0
  8240  001CAA  A4D8               	btfss	status,2,c
  8241  001CAC  D002               	goto	l11005
  8242  001CAE  0E00               	movlw	0
  8243  001CB0  0012               	return	
  8244  001CB2                     l11005:
  8245                           
  8246                           ;tff.c: 224: *(volatile BYTE*)(&fs->win[((WORD)clust * 2) % 512U])=(BYTE)((WORD)val); *(
      +                          volatile BYTE*)((&fs->win[((WORD)clust * 2) % 512U])+1)=(BYTE)((WORD)((WORD)val)>>8);
  8247  001CB2  0EFF               	movlw	255
  8248  001CB4  0100               	movlb	0	; () banked
  8249  001CB6  6FA2               	movwf	??_put_cluster& (0+255),b
  8250  001CB8  0E01               	movlw	1
  8251  001CBA  0100               	movlb	0	; () banked
  8252  001CBC  6FA3               	movwf	(??_put_cluster+1)& (0+255),b
  8253  001CBE  C09A  F0A4         	movff	put_cluster@clust,??_put_cluster+2
  8254  001CC2  C09B  F0A5         	movff	put_cluster@clust+1,??_put_cluster+3
  8255  001CC6  90D8               	bcf	status,0,c
  8256  001CC8  0100               	movlb	0	; () banked
  8257  001CCA  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8258  001CCC  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8259  001CCE  0100               	movlb	0	; () banked
  8260  001CD0  51A2               	movf	??_put_cluster& (0+255),w,b
  8261  001CD2  0100               	movlb	0	; () banked
  8262  001CD4  17A4               	andwf	(??_put_cluster+2)& (0+255),f,b
  8263  001CD6  0100               	movlb	0	; () banked
  8264  001CD8  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8265  001CDA  0100               	movlb	0	; () banked
  8266  001CDC  17A5               	andwf	(??_put_cluster+3)& (0+255),f,b
  8267  001CDE  0E28               	movlw	40
  8268  001CE0  0100               	movlb	0	; () banked
  8269  001CE2  27A4               	addwf	(??_put_cluster+2)& (0+255),f,b
  8270  001CE4  0E00               	movlw	0
  8271  001CE6  23A5               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8272  001CE8  0100               	movlb	0	; () banked
  8273  001CEA  51A4               	movf	(??_put_cluster+2)& (0+255),w,b
  8274  001CEC  0100               	movlb	0	; () banked
  8275  001CEE  25B3               	addwf	put_cluster@fs& (0+255),w,b
  8276  001CF0  6ED9               	movwf	fsr2l,c
  8277  001CF2  0100               	movlb	0	; () banked
  8278  001CF4  51A5               	movf	(??_put_cluster+3)& (0+255),w,b
  8279  001CF6  0100               	movlb	0	; () banked
  8280  001CF8  21B4               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8281  001CFA  6EDA               	movwf	fsr2h,c
  8282  001CFC  C09E  FFDF         	movff	put_cluster@val,indf2
  8283  001D00  0EFF               	movlw	255
  8284  001D02  0100               	movlb	0	; () banked
  8285  001D04  6FA2               	movwf	??_put_cluster& (0+255),b
  8286  001D06  0E01               	movlw	1
  8287  001D08  0100               	movlb	0	; () banked
  8288  001D0A  6FA3               	movwf	(??_put_cluster+1)& (0+255),b
  8289  001D0C  C09A  F0A4         	movff	put_cluster@clust,??_put_cluster+2
  8290  001D10  C09B  F0A5         	movff	put_cluster@clust+1,??_put_cluster+3
  8291  001D14  90D8               	bcf	status,0,c
  8292  001D16  0100               	movlb	0	; () banked
  8293  001D18  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8294  001D1A  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8295  001D1C  0100               	movlb	0	; () banked
  8296  001D1E  51A2               	movf	??_put_cluster& (0+255),w,b
  8297  001D20  0100               	movlb	0	; () banked
  8298  001D22  17A4               	andwf	(??_put_cluster+2)& (0+255),f,b
  8299  001D24  0100               	movlb	0	; () banked
  8300  001D26  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8301  001D28  0100               	movlb	0	; () banked
  8302  001D2A  17A5               	andwf	(??_put_cluster+3)& (0+255),f,b
  8303  001D2C  0E29               	movlw	41
  8304  001D2E  0100               	movlb	0	; () banked
  8305  001D30  27A4               	addwf	(??_put_cluster+2)& (0+255),f,b
  8306  001D32  0E00               	movlw	0
  8307  001D34  23A5               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8308  001D36  0100               	movlb	0	; () banked
  8309  001D38  51A4               	movf	(??_put_cluster+2)& (0+255),w,b
  8310  001D3A  0100               	movlb	0	; () banked
  8311  001D3C  25B3               	addwf	put_cluster@fs& (0+255),w,b
  8312  001D3E  6ED9               	movwf	fsr2l,c
  8313  001D40  0100               	movlb	0	; () banked
  8314  001D42  51A5               	movf	(??_put_cluster+3)& (0+255),w,b
  8315  001D44  0100               	movlb	0	; () banked
  8316  001D46  21B4               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8317  001D48  6EDA               	movwf	fsr2h,c
  8318  001D4A  0100               	movlb	0	; () banked
  8319  001D4C  519F               	movf	(put_cluster@val+1)& (0+255),w,b
  8320  001D4E  6EDF               	movwf	indf2,c
  8321                           
  8322                           ;tff.c: 225: break;
  8323  001D50  D0F3               	goto	l11023
  8324  001D52                     l11007:
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;tff.c: 228: if (!move_window(fatsect + clust / 128)) return FALSE;
  8328  001D52  C09A  F0A2         	movff	put_cluster@clust,??_put_cluster
  8329  001D56  C09B  F0A3         	movff	put_cluster@clust+1,??_put_cluster+1
  8330  001D5A  C09C  F0A4         	movff	put_cluster@clust+2,??_put_cluster+2
  8331  001D5E  C09D  F0A5         	movff	put_cluster@clust+3,??_put_cluster+3
  8332  001D62  0E08               	movlw	8
  8333  001D64  D006               	goto	u12160
  8334  001D66                     u12165:
  8335  001D66  0100               	movlb	0	; () banked
  8336  001D68  90D8               	bcf	status,0,c
  8337  001D6A  33A5               	rrcf	(??_put_cluster+3)& (0+255),f,b
  8338  001D6C  33A4               	rrcf	(??_put_cluster+2)& (0+255),f,b
  8339  001D6E  33A3               	rrcf	(??_put_cluster+1)& (0+255),f,b
  8340  001D70  33A2               	rrcf	??_put_cluster& (0+255),f,b
  8341  001D72                     u12160:
  8342  001D72  2EE8               	decfsz	wreg,f,c
  8343  001D74  D7F8               	goto	u12165
  8344  001D76  0100               	movlb	0	; () banked
  8345  001D78  51AB               	movf	put_cluster@fatsect& (0+255),w,b
  8346  001D7A  0100               	movlb	0	; () banked
  8347  001D7C  25A2               	addwf	??_put_cluster& (0+255),w,b
  8348  001D7E  0100               	movlb	0	; () banked
  8349  001D80  6F83               	movwf	move_window@sector& (0+255),b
  8350  001D82  0100               	movlb	0	; () banked
  8351  001D84  51AC               	movf	(put_cluster@fatsect+1)& (0+255),w,b
  8352  001D86  0100               	movlb	0	; () banked
  8353  001D88  21A3               	addwfc	(??_put_cluster+1)& (0+255),w,b
  8354  001D8A  0100               	movlb	0	; () banked
  8355  001D8C  6F84               	movwf	(move_window@sector+1)& (0+255),b
  8356  001D8E  0100               	movlb	0	; () banked
  8357  001D90  51AD               	movf	(put_cluster@fatsect+2)& (0+255),w,b
  8358  001D92  0100               	movlb	0	; () banked
  8359  001D94  21A4               	addwfc	(??_put_cluster+2)& (0+255),w,b
  8360  001D96  0100               	movlb	0	; () banked
  8361  001D98  6F85               	movwf	(move_window@sector+2)& (0+255),b
  8362  001D9A  0100               	movlb	0	; () banked
  8363  001D9C  51AE               	movf	(put_cluster@fatsect+3)& (0+255),w,b
  8364  001D9E  0100               	movlb	0	; () banked
  8365  001DA0  21A5               	addwfc	(??_put_cluster+3)& (0+255),w,b
  8366  001DA2  0100               	movlb	0	; () banked
  8367  001DA4  6F86               	movwf	(move_window@sector+3)& (0+255),b
  8368  001DA6  EC60  F019         	call	_move_window	;wreg free
  8369  001DAA  0900               	iorlw	0
  8370  001DAC  A4D8               	btfss	status,2,c
  8371  001DAE  D002               	goto	l11013
  8372  001DB0  0E00               	movlw	0
  8373  001DB2  0012               	return	
  8374  001DB4                     l11013:
  8375                           
  8376                           ;tff.c: 229: *(volatile BYTE*)(&fs->win[((WORD)clust * 4) % 512U])=(BYTE)(val); *(volati
      +                          le BYTE*)((&fs->win[((WORD)clust * 4) % 512U])+1)=(BYTE)((WORD)(val)>>8); *(volatile BYT
      +                          E*)((&fs->win[((WORD)clust * 4) % 512U])+2)=(BYTE)((DWORD)(val)>>16); *(volatile BYTE*)
  8377  001DB4  0EFF               	movlw	255
  8378  001DB6  0100               	movlb	0	; () banked
  8379  001DB8  6FA2               	movwf	??_put_cluster& (0+255),b
  8380  001DBA  0E01               	movlw	1
  8381  001DBC  0100               	movlb	0	; () banked
  8382  001DBE  6FA3               	movwf	(??_put_cluster+1)& (0+255),b
  8383  001DC0  C09A  F0A4         	movff	put_cluster@clust,??_put_cluster+2
  8384  001DC4  C09B  F0A5         	movff	put_cluster@clust+1,??_put_cluster+3
  8385  001DC8  0100               	movlb	0	; () banked
  8386  001DCA  90D8               	bcf	status,0,c
  8387  001DCC  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8388  001DCE  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8389  001DD0  0100               	movlb	0	; () banked
  8390  001DD2  90D8               	bcf	status,0,c
  8391  001DD4  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8392  001DD6  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8393  001DD8  0100               	movlb	0	; () banked
  8394  001DDA  51A2               	movf	??_put_cluster& (0+255),w,b
  8395  001DDC  0100               	movlb	0	; () banked
  8396  001DDE  17A4               	andwf	(??_put_cluster+2)& (0+255),f,b
  8397  001DE0  0100               	movlb	0	; () banked
  8398  001DE2  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8399  001DE4  0100               	movlb	0	; () banked
  8400  001DE6  17A5               	andwf	(??_put_cluster+3)& (0+255),f,b
  8401  001DE8  0E28               	movlw	40
  8402  001DEA  0100               	movlb	0	; () banked
  8403  001DEC  27A4               	addwf	(??_put_cluster+2)& (0+255),f,b
  8404  001DEE  0E00               	movlw	0
  8405  001DF0  23A5               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8406  001DF2  0100               	movlb	0	; () banked
  8407  001DF4  51A4               	movf	(??_put_cluster+2)& (0+255),w,b
  8408  001DF6  0100               	movlb	0	; () banked
  8409  001DF8  25B3               	addwf	put_cluster@fs& (0+255),w,b
  8410  001DFA  6ED9               	movwf	fsr2l,c
  8411  001DFC  0100               	movlb	0	; () banked
  8412  001DFE  51A5               	movf	(??_put_cluster+3)& (0+255),w,b
  8413  001E00  0100               	movlb	0	; () banked
  8414  001E02  21B4               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8415  001E04  6EDA               	movwf	fsr2h,c
  8416  001E06  C09E  FFDF         	movff	put_cluster@val,indf2
  8417  001E0A  0EFF               	movlw	255
  8418  001E0C  0100               	movlb	0	; () banked
  8419  001E0E  6FA2               	movwf	??_put_cluster& (0+255),b
  8420  001E10  0E01               	movlw	1
  8421  001E12  0100               	movlb	0	; () banked
  8422  001E14  6FA3               	movwf	(??_put_cluster+1)& (0+255),b
  8423  001E16  C09A  F0A4         	movff	put_cluster@clust,??_put_cluster+2
  8424  001E1A  C09B  F0A5         	movff	put_cluster@clust+1,??_put_cluster+3
  8425  001E1E  0100               	movlb	0	; () banked
  8426  001E20  90D8               	bcf	status,0,c
  8427  001E22  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8428  001E24  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8429  001E26  0100               	movlb	0	; () banked
  8430  001E28  90D8               	bcf	status,0,c
  8431  001E2A  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8432  001E2C  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8433  001E2E  0100               	movlb	0	; () banked
  8434  001E30  51A2               	movf	??_put_cluster& (0+255),w,b
  8435  001E32  0100               	movlb	0	; () banked
  8436  001E34  17A4               	andwf	(??_put_cluster+2)& (0+255),f,b
  8437  001E36  0100               	movlb	0	; () banked
  8438  001E38  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8439  001E3A  0100               	movlb	0	; () banked
  8440  001E3C  17A5               	andwf	(??_put_cluster+3)& (0+255),f,b
  8441  001E3E  0E29               	movlw	41
  8442  001E40  0100               	movlb	0	; () banked
  8443  001E42  27A4               	addwf	(??_put_cluster+2)& (0+255),f,b
  8444  001E44  0E00               	movlw	0
  8445  001E46  23A5               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8446  001E48  0100               	movlb	0	; () banked
  8447  001E4A  51A4               	movf	(??_put_cluster+2)& (0+255),w,b
  8448  001E4C  0100               	movlb	0	; () banked
  8449  001E4E  25B3               	addwf	put_cluster@fs& (0+255),w,b
  8450  001E50  6ED9               	movwf	fsr2l,c
  8451  001E52  0100               	movlb	0	; () banked
  8452  001E54  51A5               	movf	(??_put_cluster+3)& (0+255),w,b
  8453  001E56  0100               	movlb	0	; () banked
  8454  001E58  21B4               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8455  001E5A  6EDA               	movwf	fsr2h,c
  8456  001E5C  0100               	movlb	0	; () banked
  8457  001E5E  519F               	movf	(put_cluster@val+1)& (0+255),w,b
  8458  001E60  6EDF               	movwf	indf2,c
  8459  001E62  0EFF               	movlw	255
  8460  001E64  0100               	movlb	0	; () banked
  8461  001E66  6FA2               	movwf	??_put_cluster& (0+255),b
  8462  001E68  0E01               	movlw	1
  8463  001E6A  0100               	movlb	0	; () banked
  8464  001E6C  6FA3               	movwf	(??_put_cluster+1)& (0+255),b
  8465  001E6E  C09A  F0A4         	movff	put_cluster@clust,??_put_cluster+2
  8466  001E72  C09B  F0A5         	movff	put_cluster@clust+1,??_put_cluster+3
  8467  001E76  0100               	movlb	0	; () banked
  8468  001E78  90D8               	bcf	status,0,c
  8469  001E7A  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8470  001E7C  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8471  001E7E  0100               	movlb	0	; () banked
  8472  001E80  90D8               	bcf	status,0,c
  8473  001E82  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8474  001E84  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8475  001E86  0100               	movlb	0	; () banked
  8476  001E88  51A2               	movf	??_put_cluster& (0+255),w,b
  8477  001E8A  0100               	movlb	0	; () banked
  8478  001E8C  17A4               	andwf	(??_put_cluster+2)& (0+255),f,b
  8479  001E8E  0100               	movlb	0	; () banked
  8480  001E90  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8481  001E92  0100               	movlb	0	; () banked
  8482  001E94  17A5               	andwf	(??_put_cluster+3)& (0+255),f,b
  8483  001E96  0E2A               	movlw	42
  8484  001E98  0100               	movlb	0	; () banked
  8485  001E9A  27A4               	addwf	(??_put_cluster+2)& (0+255),f,b
  8486  001E9C  0E00               	movlw	0
  8487  001E9E  23A5               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8488  001EA0  0100               	movlb	0	; () banked
  8489  001EA2  51A4               	movf	(??_put_cluster+2)& (0+255),w,b
  8490  001EA4  0100               	movlb	0	; () banked
  8491  001EA6  25B3               	addwf	put_cluster@fs& (0+255),w,b
  8492  001EA8  6ED9               	movwf	fsr2l,c
  8493  001EAA  0100               	movlb	0	; () banked
  8494  001EAC  51A5               	movf	(??_put_cluster+3)& (0+255),w,b
  8495  001EAE  0100               	movlb	0	; () banked
  8496  001EB0  21B4               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8497  001EB2  6EDA               	movwf	fsr2h,c
  8498  001EB4  C0A0  FFDF         	movff	put_cluster@val+2,indf2
  8499  001EB8  0EFF               	movlw	255
  8500  001EBA  0100               	movlb	0	; () banked
  8501  001EBC  6FA2               	movwf	??_put_cluster& (0+255),b
  8502  001EBE  0E01               	movlw	1
  8503  001EC0  0100               	movlb	0	; () banked
  8504  001EC2  6FA3               	movwf	(??_put_cluster+1)& (0+255),b
  8505  001EC4  C09A  F0A4         	movff	put_cluster@clust,??_put_cluster+2
  8506  001EC8  C09B  F0A5         	movff	put_cluster@clust+1,??_put_cluster+3
  8507  001ECC  0100               	movlb	0	; () banked
  8508  001ECE  90D8               	bcf	status,0,c
  8509  001ED0  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8510  001ED2  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8511  001ED4  0100               	movlb	0	; () banked
  8512  001ED6  90D8               	bcf	status,0,c
  8513  001ED8  37A4               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8514  001EDA  37A5               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8515  001EDC  0100               	movlb	0	; () banked
  8516  001EDE  51A2               	movf	??_put_cluster& (0+255),w,b
  8517  001EE0  0100               	movlb	0	; () banked
  8518  001EE2  17A4               	andwf	(??_put_cluster+2)& (0+255),f,b
  8519  001EE4  0100               	movlb	0	; () banked
  8520  001EE6  51A3               	movf	(??_put_cluster+1)& (0+255),w,b
  8521  001EE8  0100               	movlb	0	; () banked
  8522  001EEA  17A5               	andwf	(??_put_cluster+3)& (0+255),f,b
  8523  001EEC  0E2B               	movlw	43
  8524  001EEE  0100               	movlb	0	; () banked
  8525  001EF0  27A4               	addwf	(??_put_cluster+2)& (0+255),f,b
  8526  001EF2  0E00               	movlw	0
  8527  001EF4  23A5               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8528  001EF6  0100               	movlb	0	; () banked
  8529  001EF8  51A4               	movf	(??_put_cluster+2)& (0+255),w,b
  8530  001EFA  0100               	movlb	0	; () banked
  8531  001EFC  25B3               	addwf	put_cluster@fs& (0+255),w,b
  8532  001EFE  6ED9               	movwf	fsr2l,c
  8533  001F00  0100               	movlb	0	; () banked
  8534  001F02  51A5               	movf	(??_put_cluster+3)& (0+255),w,b
  8535  001F04  0100               	movlb	0	; () banked
  8536  001F06  21B4               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8537  001F08  6EDA               	movwf	fsr2h,c
  8538  001F0A  C0A1  FFDF         	movff	put_cluster@val+3,indf2
  8539                           
  8540                           ;tff.c: 230: break;
  8541  001F0E  D014               	goto	l11023
  8542  001F10                     l11015:
  8543                           
  8544                           ; BSR set to: 0
  8545                           ;tff.c: 233: return FALSE;
  8546  001F10  0E00               	movlw	0
  8547                           
  8548                           ; BSR set to: 0
  8549  001F12  0012               	return	
  8550  001F14                     l11021:
  8551                           
  8552                           ; BSR set to: 0
  8553  001F14  0100               	movlb	0	; () banked
  8554  001F16  EE20 F024          	lfsr	2,36
  8555  001F1A  51B3               	movf	put_cluster@fs& (0+255),w,b
  8556  001F1C  26D9               	addwf	fsr2l,f,c
  8557  001F1E  51B4               	movf	(put_cluster@fs+1)& (0+255),w,b
  8558  001F20  22DA               	addwfc	fsr2h,f,c
  8559  001F22  50DF               	movf	indf2,w,c
  8560                           
  8561                           ; Switch size 1, requested type "space"
  8562                           ; Number of cases is 3, Range of values is 1 to 3
  8563                           ; switch strategies available:
  8564                           ; Name         Instructions Cycles
  8565                           ; simple_byte           10     6 (average)
  8566                           ;	Chosen strategy is simple_byte
  8567  001F24  0A01               	xorlw	1	; case 1
  8568  001F26  B4D8               	btfsc	status,2,c
  8569  001F28  D567               	goto	l10961
  8570  001F2A  0A03               	xorlw	3	; case 2
  8571  001F2C  B4D8               	btfsc	status,2,c
  8572  001F2E  D692               	goto	l10999
  8573  001F30  0A01               	xorlw	1	; case 3
  8574  001F32  B4D8               	btfsc	status,2,c
  8575  001F34  D70E               	goto	l11007
  8576  001F36  D7EC               	goto	l11015
  8577  001F38                     l11023:
  8578                           
  8579                           ; BSR set to: 0
  8580                           ;tff.c: 235: fs->winflag = 1;
  8581  001F38  0100               	movlb	0	; () banked
  8582  001F3A  EE20 F027          	lfsr	2,39
  8583  001F3E  51B3               	movf	put_cluster@fs& (0+255),w,b
  8584  001F40  26D9               	addwf	fsr2l,f,c
  8585  001F42  51B4               	movf	(put_cluster@fs+1)& (0+255),w,b
  8586  001F44  22DA               	addwfc	fsr2h,f,c
  8587  001F46  0E01               	movlw	1
  8588  001F48  6EDF               	movwf	indf2,c
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;tff.c: 236: return TRUE;
  8592  001F4A  0E01               	movlw	1
  8593  001F4C  0012               	return	
  8594  001F4E                     __end_of_put_cluster:
  8595                           	opt stack 0
  8596                           tosu	equ	0xFFF
  8597                           tosh	equ	0xFFE
  8598                           tosl	equ	0xFFD
  8599                           pclath	equ	0xFFA
  8600                           tblptru	equ	0xFF8
  8601                           tblptrh	equ	0xFF7
  8602                           tblptrl	equ	0xFF6
  8603                           tablat	equ	0xFF5
  8604                           prodh	equ	0xFF4
  8605                           prodl	equ	0xFF3
  8606                           intcon	equ	0xFF2
  8607                           intcon2	equ	0xFF1
  8608                           intcon3	equ	0xFF0
  8609                           postinc0	equ	0xFEE
  8610                           wreg	equ	0xFE8
  8611                           indf1	equ	0xFE7
  8612                           postinc1	equ	0xFE6
  8613                           postdec1	equ	0xFE5
  8614                           fsr1h	equ	0xFE2
  8615                           fsr1l	equ	0xFE1
  8616                           indf2	equ	0xFDF
  8617                           postinc2	equ	0xFDE
  8618                           postdec2	equ	0xFDD
  8619                           fsr2h	equ	0xFDA
  8620                           fsr2l	equ	0xFD9
  8621                           status	equ	0xFD8
  8622                           
  8623 ;; *************** function _get_cluster *****************
  8624 ;; Defined at:
  8625 ;;		line 154 in file "bibliotecas/tff.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;  clust           4   58[BANK0 ] unsigned long 
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;  fatsect         4  108[BANK0 ] unsigned long 
  8630 ;;  fs              2  114[BANK0 ] PTR struct _FATFS
  8631 ;;		 -> fs(552), NULL(0), 
  8632 ;;  bc              2  112[BANK0 ] unsigned short 
  8633 ;;  wc              2  106[BANK0 ] unsigned short 
  8634 ;; Return value:  Size  Location     Type
  8635 ;;                  4   58[BANK0 ] unsigned long 
  8636 ;; Registers used:
  8637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/0
  8640 ;;		On exit  : 0/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8643 ;;      Params:         0       4       0       0       0       0       0       0       0
  8644 ;;      Locals:         0      12       0       0       0       0       0       0       0
  8645 ;;      Temps:          0      42       0       0       0       0       0       0       0
  8646 ;;      Totals:         0      58       0       0       0       0       0       0       0
  8647 ;;Total ram usage:       58 bytes
  8648 ;; Hardware stack levels used:    1
  8649 ;; Hardware stack levels required when called:    9
  8650 ;; This function calls:
  8651 ;;		___wmul
  8652 ;;		_move_window
  8653 ;; This function is called by:
  8654 ;;		_remove_chain
  8655 ;;		_create_chain
  8656 ;;		_next_dir_entry
  8657 ;;		_f_read
  8658 ;;		_f_lseek
  8659 ;;		_f_truncate
  8660 ;;		_f_getfree
  8661 ;; This function uses a non-reentrant model
  8662 ;;
  8663                           
  8664                           	psect	text24
  8665  001398                     __ptext24:
  8666                           	opt stack 0
  8667  001398                     _get_cluster:
  8668                           	opt stack 16
  8669                           
  8670                           ;tff.c: 158: WORD wc, bc;
  8671                           ;tff.c: 159: DWORD fatsect;
  8672                           ;tff.c: 160: FATFS *fs = FatFs;
  8673                           
  8674                           ;incstack = 0
  8675  001398  C0FC  F0D2         	movff	_FatFs,get_cluster@fs
  8676  00139C  C0FD  F0D3         	movff	_FatFs+1,get_cluster@fs+1
  8677                           
  8678                           ;tff.c: 163: if (clust >= 2 && clust < fs->max_clust) {
  8679  0013A0  0100               	movlb	0	; () banked
  8680  0013A2  519D               	movf	(get_cluster@clust+3)& (0+255),w,b
  8681  0013A4  0100               	movlb	0	; () banked
  8682  0013A6  119C               	iorwf	(get_cluster@clust+2)& (0+255),w,b
  8683  0013A8  0100               	movlb	0	; () banked
  8684  0013AA  119B               	iorwf	(get_cluster@clust+1)& (0+255),w,b
  8685  0013AC  E105               	bnz	u11970
  8686  0013AE  0E02               	movlw	2
  8687  0013B0  0100               	movlb	0	; () banked
  8688  0013B2  5D9A               	subwf	get_cluster@clust& (0+255),w,b
  8689  0013B4  A0D8               	btfss	status,0,c
  8690  0013B6  D302               	goto	l10953
  8691  0013B8                     u11970:
  8692                           
  8693                           ; BSR set to: 0
  8694  0013B8  0100               	movlb	0	; () banked
  8695  0013BA  EE20 F018          	lfsr	2,24
  8696  0013BE  51D2               	movf	get_cluster@fs& (0+255),w,b
  8697  0013C0  26D9               	addwf	fsr2l,f,c
  8698  0013C2  51D3               	movf	(get_cluster@fs+1)& (0+255),w,b
  8699  0013C4  22DA               	addwfc	fsr2h,f,c
  8700  0013C6  50DE               	movf	postinc2,w,c
  8701  0013C8  0100               	movlb	0	; () banked
  8702  0013CA  5D9A               	subwf	get_cluster@clust& (0+255),w,b
  8703  0013CC  50DE               	movf	postinc2,w,c
  8704  0013CE  0100               	movlb	0	; () banked
  8705  0013D0  599B               	subwfb	(get_cluster@clust+1)& (0+255),w,b
  8706  0013D2  50DE               	movf	postinc2,w,c
  8707  0013D4  0100               	movlb	0	; () banked
  8708  0013D6  599C               	subwfb	(get_cluster@clust+2)& (0+255),w,b
  8709  0013D8  50DE               	movf	postinc2,w,c
  8710  0013DA  0100               	movlb	0	; () banked
  8711  0013DC  599D               	subwfb	(get_cluster@clust+3)& (0+255),w,b
  8712  0013DE  B0D8               	btfsc	status,0,c
  8713  0013E0  D2ED               	goto	l10953
  8714                           
  8715                           ; BSR set to: 0
  8716                           ;tff.c: 164: fatsect = fs->fatbase;
  8717  0013E2  0100               	movlb	0	; () banked
  8718  0013E4  EE20 F008          	lfsr	2,8
  8719  0013E8  51D2               	movf	get_cluster@fs& (0+255),w,b
  8720  0013EA  26D9               	addwf	fsr2l,f,c
  8721  0013EC  51D3               	movf	(get_cluster@fs+1)& (0+255),w,b
  8722  0013EE  22DA               	addwfc	fsr2h,f,c
  8723  0013F0  CFDE F0CC          	movff	postinc2,get_cluster@fatsect
  8724  0013F4  CFDE F0CD          	movff	postinc2,get_cluster@fatsect+1
  8725  0013F8  CFDE F0CE          	movff	postinc2,get_cluster@fatsect+2
  8726  0013FC  CFDE F0CF          	movff	postinc2,get_cluster@fatsect+3
  8727                           
  8728                           ;tff.c: 165: switch (fs->fs_type) {
  8729  001400  D2CC               	goto	l10951
  8730  001402                     l10907:
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;tff.c: 167: bc = (WORD)clust * 3 / 2;
  8734  001402  C09A  F016         	movff	get_cluster@clust,___wmul@multiplier
  8735  001406  C09B  F017         	movff	get_cluster@clust+1,___wmul@multiplier+1
  8736  00140A  0E00               	movlw	0
  8737  00140C  6E19               	movwf	___wmul@multiplicand+1,c
  8738  00140E  0E03               	movlw	3
  8739  001410  6E18               	movwf	___wmul@multiplicand,c
  8740  001412  ECA2  F027         	call	___wmul	;wreg free
  8741  001416  90D8               	bcf	status,0,c
  8742  001418  3017               	rrcf	?___wmul+1,w,c
  8743  00141A  0100               	movlb	0	; () banked
  8744  00141C  6F9E               	movwf	??_get_cluster& (0+255),b
  8745  00141E  3016               	rrcf	?___wmul,w,c
  8746  001420  0100               	movlb	0	; () banked
  8747  001422  6FD0               	movwf	get_cluster@bc& (0+255),b
  8748  001424  C09E  F0D1         	movff	??_get_cluster,get_cluster@bc+1
  8749                           
  8750                           ; BSR set to: 0
  8751                           ;tff.c: 168: if (!move_window(fatsect + bc / 512U)) break;
  8752  001428  C0D0  F09E         	movff	get_cluster@bc,??_get_cluster
  8753  00142C  C0D1  F09F         	movff	get_cluster@bc+1,??_get_cluster+1
  8754  001430  0E09               	movlw	9
  8755  001432  0100               	movlb	0	; () banked
  8756  001434  6FA0               	movwf	(??_get_cluster+2)& (0+255),b
  8757  001436                     u11995:
  8758  001436  0100               	movlb	0	; () banked
  8759  001438  90D8               	bcf	status,0,c
  8760  00143A  339F               	rrcf	(??_get_cluster+1)& (0+255),f,b
  8761  00143C  339E               	rrcf	??_get_cluster& (0+255),f,b
  8762  00143E  0100               	movlb	0	; () banked
  8763  001440  2FA0               	decfsz	(??_get_cluster+2)& (0+255),f,b
  8764  001442  D7F9               	goto	u11995
  8765  001444  0100               	movlb	0	; () banked
  8766  001446  519E               	movf	??_get_cluster& (0+255),w,b
  8767  001448  0100               	movlb	0	; () banked
  8768  00144A  25CC               	addwf	get_cluster@fatsect& (0+255),w,b
  8769  00144C  0100               	movlb	0	; () banked
  8770  00144E  6F83               	movwf	move_window@sector& (0+255),b
  8771  001450  0100               	movlb	0	; () banked
  8772  001452  519F               	movf	(??_get_cluster+1)& (0+255),w,b
  8773  001454  0100               	movlb	0	; () banked
  8774  001456  21CD               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
  8775  001458  0100               	movlb	0	; () banked
  8776  00145A  6F84               	movwf	(move_window@sector+1)& (0+255),b
  8777  00145C  0E00               	movlw	0
  8778  00145E  0100               	movlb	0	; () banked
  8779  001460  21CE               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
  8780  001462  0100               	movlb	0	; () banked
  8781  001464  6F85               	movwf	(move_window@sector+2)& (0+255),b
  8782  001466  0E00               	movlw	0
  8783  001468  0100               	movlb	0	; () banked
  8784  00146A  21CF               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
  8785  00146C  0100               	movlb	0	; () banked
  8786  00146E  6F86               	movwf	(move_window@sector+3)& (0+255),b
  8787  001470  EC60  F019         	call	_move_window	;wreg free
  8788  001474  0900               	iorlw	0
  8789  001476  B4D8               	btfsc	status,2,c
  8790  001478  D2A1               	goto	l10953
  8791                           
  8792                           ;tff.c: 169: wc = fs->win[bc % 512U]; bc++;
  8793  00147A  0EFF               	movlw	255
  8794  00147C  0100               	movlb	0	; () banked
  8795  00147E  6F9E               	movwf	??_get_cluster& (0+255),b
  8796  001480  0E01               	movlw	1
  8797  001482  0100               	movlb	0	; () banked
  8798  001484  6F9F               	movwf	(??_get_cluster+1)& (0+255),b
  8799  001486  C0D0  F0A0         	movff	get_cluster@bc,??_get_cluster+2
  8800  00148A  C0D1  F0A1         	movff	get_cluster@bc+1,??_get_cluster+3
  8801  00148E  0100               	movlb	0	; () banked
  8802  001490  519E               	movf	??_get_cluster& (0+255),w,b
  8803  001492  0100               	movlb	0	; () banked
  8804  001494  17A0               	andwf	(??_get_cluster+2)& (0+255),f,b
  8805  001496  0100               	movlb	0	; () banked
  8806  001498  519F               	movf	(??_get_cluster+1)& (0+255),w,b
  8807  00149A  0100               	movlb	0	; () banked
  8808  00149C  17A1               	andwf	(??_get_cluster+3)& (0+255),f,b
  8809  00149E  0E28               	movlw	40
  8810  0014A0  0100               	movlb	0	; () banked
  8811  0014A2  27A0               	addwf	(??_get_cluster+2)& (0+255),f,b
  8812  0014A4  0E00               	movlw	0
  8813  0014A6  23A1               	addwfc	(??_get_cluster+3)& (0+255),f,b
  8814  0014A8  0100               	movlb	0	; () banked
  8815  0014AA  51A0               	movf	(??_get_cluster+2)& (0+255),w,b
  8816  0014AC  0100               	movlb	0	; () banked
  8817  0014AE  25D2               	addwf	get_cluster@fs& (0+255),w,b
  8818  0014B0  6ED9               	movwf	fsr2l,c
  8819  0014B2  0100               	movlb	0	; () banked
  8820  0014B4  51A1               	movf	(??_get_cluster+3)& (0+255),w,b
  8821  0014B6  0100               	movlb	0	; () banked
  8822  0014B8  21D3               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  8823  0014BA  6EDA               	movwf	fsr2h,c
  8824  0014BC  50DF               	movf	indf2,w,c
  8825  0014BE  0100               	movlb	0	; () banked
  8826  0014C0  6FA2               	movwf	(??_get_cluster+4)& (0+255),b
  8827  0014C2  0100               	movlb	0	; () banked
  8828  0014C4  51A2               	movf	(??_get_cluster+4)& (0+255),w,b
  8829  0014C6  0100               	movlb	0	; () banked
  8830  0014C8  6FCA               	movwf	get_cluster@wc& (0+255),b
  8831  0014CA  6BCB               	clrf	(get_cluster@wc+1)& (0+255),b
  8832                           
  8833                           ; BSR set to: 0
  8834  0014CC  0100               	movlb	0	; () banked
  8835  0014CE  4BD0               	infsnz	get_cluster@bc& (0+255),f,b
  8836  0014D0  2BD1               	incf	(get_cluster@bc+1)& (0+255),f,b
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;tff.c: 170: if (!move_window(fatsect + bc / 512U)) break;
  8840  0014D2  C0D0  F09E         	movff	get_cluster@bc,??_get_cluster
  8841  0014D6  C0D1  F09F         	movff	get_cluster@bc+1,??_get_cluster+1
  8842  0014DA  0E09               	movlw	9
  8843  0014DC  0100               	movlb	0	; () banked
  8844  0014DE  6FA0               	movwf	(??_get_cluster+2)& (0+255),b
  8845  0014E0                     u12015:
  8846  0014E0  0100               	movlb	0	; () banked
  8847  0014E2  90D8               	bcf	status,0,c
  8848  0014E4  339F               	rrcf	(??_get_cluster+1)& (0+255),f,b
  8849  0014E6  339E               	rrcf	??_get_cluster& (0+255),f,b
  8850  0014E8  0100               	movlb	0	; () banked
  8851  0014EA  2FA0               	decfsz	(??_get_cluster+2)& (0+255),f,b
  8852  0014EC  D7F9               	goto	u12015
  8853  0014EE  0100               	movlb	0	; () banked
  8854  0014F0  519E               	movf	??_get_cluster& (0+255),w,b
  8855  0014F2  0100               	movlb	0	; () banked
  8856  0014F4  25CC               	addwf	get_cluster@fatsect& (0+255),w,b
  8857  0014F6  0100               	movlb	0	; () banked
  8858  0014F8  6F83               	movwf	move_window@sector& (0+255),b
  8859  0014FA  0100               	movlb	0	; () banked
  8860  0014FC  519F               	movf	(??_get_cluster+1)& (0+255),w,b
  8861  0014FE  0100               	movlb	0	; () banked
  8862  001500  21CD               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
  8863  001502  0100               	movlb	0	; () banked
  8864  001504  6F84               	movwf	(move_window@sector+1)& (0+255),b
  8865  001506  0E00               	movlw	0
  8866  001508  0100               	movlb	0	; () banked
  8867  00150A  21CE               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
  8868  00150C  0100               	movlb	0	; () banked
  8869  00150E  6F85               	movwf	(move_window@sector+2)& (0+255),b
  8870  001510  0E00               	movlw	0
  8871  001512  0100               	movlb	0	; () banked
  8872  001514  21CF               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
  8873  001516  0100               	movlb	0	; () banked
  8874  001518  6F86               	movwf	(move_window@sector+3)& (0+255),b
  8875  00151A  EC60  F019         	call	_move_window	;wreg free
  8876  00151E  0900               	iorlw	0
  8877  001520  B4D8               	btfsc	status,2,c
  8878  001522  D24C               	goto	l10953
  8879                           
  8880                           ;tff.c: 171: wc |= (WORD)fs->win[bc % 512U] << 8;
  8881  001524  0EFF               	movlw	255
  8882  001526  0100               	movlb	0	; () banked
  8883  001528  6F9E               	movwf	??_get_cluster& (0+255),b
  8884  00152A  0E01               	movlw	1
  8885  00152C  0100               	movlb	0	; () banked
  8886  00152E  6F9F               	movwf	(??_get_cluster+1)& (0+255),b
  8887  001530  C0D0  F0A0         	movff	get_cluster@bc,??_get_cluster+2
  8888  001534  C0D1  F0A1         	movff	get_cluster@bc+1,??_get_cluster+3
  8889  001538  0100               	movlb	0	; () banked
  8890  00153A  519E               	movf	??_get_cluster& (0+255),w,b
  8891  00153C  0100               	movlb	0	; () banked
  8892  00153E  17A0               	andwf	(??_get_cluster+2)& (0+255),f,b
  8893  001540  0100               	movlb	0	; () banked
  8894  001542  519F               	movf	(??_get_cluster+1)& (0+255),w,b
  8895  001544  0100               	movlb	0	; () banked
  8896  001546  17A1               	andwf	(??_get_cluster+3)& (0+255),f,b
  8897  001548  0E28               	movlw	40
  8898  00154A  0100               	movlb	0	; () banked
  8899  00154C  27A0               	addwf	(??_get_cluster+2)& (0+255),f,b
  8900  00154E  0E00               	movlw	0
  8901  001550  23A1               	addwfc	(??_get_cluster+3)& (0+255),f,b
  8902  001552  0100               	movlb	0	; () banked
  8903  001554  51A0               	movf	(??_get_cluster+2)& (0+255),w,b
  8904  001556  0100               	movlb	0	; () banked
  8905  001558  25D2               	addwf	get_cluster@fs& (0+255),w,b
  8906  00155A  6ED9               	movwf	fsr2l,c
  8907  00155C  0100               	movlb	0	; () banked
  8908  00155E  51A1               	movf	(??_get_cluster+3)& (0+255),w,b
  8909  001560  0100               	movlb	0	; () banked
  8910  001562  21D3               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  8911  001564  6EDA               	movwf	fsr2h,c
  8912  001566  50DF               	movf	indf2,w,c
  8913  001568  0100               	movlb	0	; () banked
  8914  00156A  6FA2               	movwf	(??_get_cluster+4)& (0+255),b
  8915  00156C  0100               	movlb	0	; () banked
  8916  00156E  51A2               	movf	(??_get_cluster+4)& (0+255),w,b
  8917  001570  0100               	movlb	0	; () banked
  8918  001572  6FA4               	movwf	(??_get_cluster+6)& (0+255),b
  8919  001574  6BA3               	clrf	(??_get_cluster+5)& (0+255),b
  8920  001576  0100               	movlb	0	; () banked
  8921  001578  51A3               	movf	(??_get_cluster+5)& (0+255),w,b
  8922  00157A  0100               	movlb	0	; () banked
  8923  00157C  13CA               	iorwf	get_cluster@wc& (0+255),f,b
  8924  00157E  0100               	movlb	0	; () banked
  8925  001580  51A4               	movf	(??_get_cluster+6)& (0+255),w,b
  8926  001582  0100               	movlb	0	; () banked
  8927  001584  13CB               	iorwf	(get_cluster@wc+1)& (0+255),f,b
  8928                           
  8929                           ; BSR set to: 0
  8930                           ;tff.c: 172: return (clust & 1) ? (wc >> 4) : (wc & 0xFFF);
  8931  001586  0100               	movlb	0	; () banked
  8932  001588  B19A               	btfsc	get_cluster@clust& (0+255),0,b
  8933  00158A  D00B               	goto	l10927
  8934                           
  8935                           ; BSR set to: 0
  8936  00158C  0EFF               	movlw	255
  8937  00158E  0100               	movlb	0	; () banked
  8938  001590  15CA               	andwf	get_cluster@wc& (0+255),w,b
  8939  001592  0100               	movlb	0	; () banked
  8940  001594  6FC8               	movwf	_get_cluster$1065& (0+255),b
  8941  001596  0E0F               	movlw	15
  8942  001598  0100               	movlb	0	; () banked
  8943  00159A  15CB               	andwf	(get_cluster@wc+1)& (0+255),w,b
  8944  00159C  0100               	movlb	0	; () banked
  8945  00159E  6FC9               	movwf	(_get_cluster$1065+1)& (0+255),b
  8946  0015A0  D012               	goto	l10929
  8947  0015A2                     l10927:
  8948                           
  8949                           ; BSR set to: 0
  8950  0015A2  C0CA  F09E         	movff	get_cluster@wc,??_get_cluster
  8951  0015A6  C0CB  F09F         	movff	get_cluster@wc+1,??_get_cluster+1
  8952  0015AA  0E04               	movlw	4
  8953  0015AC  0100               	movlb	0	; () banked
  8954  0015AE  6FA0               	movwf	(??_get_cluster+2)& (0+255),b
  8955  0015B0                     u12045:
  8956  0015B0  0100               	movlb	0	; () banked
  8957  0015B2  90D8               	bcf	status,0,c
  8958  0015B4  339F               	rrcf	(??_get_cluster+1)& (0+255),f,b
  8959  0015B6  339E               	rrcf	??_get_cluster& (0+255),f,b
  8960  0015B8  0100               	movlb	0	; () banked
  8961  0015BA  2FA0               	decfsz	(??_get_cluster+2)& (0+255),f,b
  8962  0015BC  D7F9               	goto	u12045
  8963  0015BE  C09E  F0C8         	movff	??_get_cluster,_get_cluster$1065
  8964  0015C2  C09F  F0C9         	movff	??_get_cluster+1,_get_cluster$1065+1
  8965  0015C6                     l10929:
  8966                           
  8967                           ; BSR set to: 0
  8968  0015C6  C0C8  F09A         	movff	_get_cluster$1065,?_get_cluster
  8969  0015CA  C0C9  F09B         	movff	_get_cluster$1065+1,?_get_cluster+1
  8970  0015CE  0100               	movlb	0	; () banked
  8971  0015D0  6B9C               	clrf	(?_get_cluster+2)& (0+255),b
  8972  0015D2  6B9D               	clrf	(?_get_cluster+3)& (0+255),b
  8973                           
  8974                           ; BSR set to: 0
  8975  0015D4  0012               	return	
  8976  0015D6                     l10933:
  8977                           
  8978                           ; BSR set to: 0
  8979                           ;tff.c: 175: if (!move_window(fatsect + clust / 256)) break;
  8980  0015D6  C09A  F09E         	movff	get_cluster@clust,??_get_cluster
  8981  0015DA  C09B  F09F         	movff	get_cluster@clust+1,??_get_cluster+1
  8982  0015DE  C09C  F0A0         	movff	get_cluster@clust+2,??_get_cluster+2
  8983  0015E2  C09D  F0A1         	movff	get_cluster@clust+3,??_get_cluster+3
  8984  0015E6  C09F  F09E         	movff	??_get_cluster+1,??_get_cluster
  8985  0015EA  C0A0  F09F         	movff	??_get_cluster+2,??_get_cluster+1
  8986  0015EE  C0A1  F0A0         	movff	??_get_cluster+3,??_get_cluster+2
  8987  0015F2  0100               	movlb	0	; () banked
  8988  0015F4  6BA1               	clrf	(??_get_cluster+3)& (0+255),b
  8989  0015F6  0100               	movlb	0	; () banked
  8990  0015F8  51CC               	movf	get_cluster@fatsect& (0+255),w,b
  8991  0015FA  0100               	movlb	0	; () banked
  8992  0015FC  259E               	addwf	??_get_cluster& (0+255),w,b
  8993  0015FE  0100               	movlb	0	; () banked
  8994  001600  6F83               	movwf	move_window@sector& (0+255),b
  8995  001602  0100               	movlb	0	; () banked
  8996  001604  51CD               	movf	(get_cluster@fatsect+1)& (0+255),w,b
  8997  001606  0100               	movlb	0	; () banked
  8998  001608  219F               	addwfc	(??_get_cluster+1)& (0+255),w,b
  8999  00160A  0100               	movlb	0	; () banked
  9000  00160C  6F84               	movwf	(move_window@sector+1)& (0+255),b
  9001  00160E  0100               	movlb	0	; () banked
  9002  001610  51CE               	movf	(get_cluster@fatsect+2)& (0+255),w,b
  9003  001612  0100               	movlb	0	; () banked
  9004  001614  21A0               	addwfc	(??_get_cluster+2)& (0+255),w,b
  9005  001616  0100               	movlb	0	; () banked
  9006  001618  6F85               	movwf	(move_window@sector+2)& (0+255),b
  9007  00161A  0100               	movlb	0	; () banked
  9008  00161C  51CF               	movf	(get_cluster@fatsect+3)& (0+255),w,b
  9009  00161E  0100               	movlb	0	; () banked
  9010  001620  21A1               	addwfc	(??_get_cluster+3)& (0+255),w,b
  9011  001622  0100               	movlb	0	; () banked
  9012  001624  6F86               	movwf	(move_window@sector+3)& (0+255),b
  9013  001626  EC60  F019         	call	_move_window	;wreg free
  9014  00162A  0900               	iorlw	0
  9015  00162C  B4D8               	btfsc	status,2,c
  9016  00162E  D1C6               	goto	l10953
  9017                           
  9018                           ;tff.c: 176: return (WORD)(((WORD)*(volatile BYTE*)((&fs->win[((WORD)clust * 2) % 512U])
      +                          +1)<<8)|(WORD)*(volatile BYTE*)(&fs->win[((WORD)clust * 2) % 512U]));
  9019  001630  0EFF               	movlw	255
  9020  001632  0100               	movlb	0	; () banked
  9021  001634  6F9E               	movwf	??_get_cluster& (0+255),b
  9022  001636  0E01               	movlw	1
  9023  001638  0100               	movlb	0	; () banked
  9024  00163A  6F9F               	movwf	(??_get_cluster+1)& (0+255),b
  9025  00163C  C09A  F0A0         	movff	get_cluster@clust,??_get_cluster+2
  9026  001640  C09B  F0A1         	movff	get_cluster@clust+1,??_get_cluster+3
  9027  001644  90D8               	bcf	status,0,c
  9028  001646  0100               	movlb	0	; () banked
  9029  001648  37A0               	rlcf	(??_get_cluster+2)& (0+255),f,b
  9030  00164A  37A1               	rlcf	(??_get_cluster+3)& (0+255),f,b
  9031  00164C  0100               	movlb	0	; () banked
  9032  00164E  519E               	movf	??_get_cluster& (0+255),w,b
  9033  001650  0100               	movlb	0	; () banked
  9034  001652  17A0               	andwf	(??_get_cluster+2)& (0+255),f,b
  9035  001654  0100               	movlb	0	; () banked
  9036  001656  519F               	movf	(??_get_cluster+1)& (0+255),w,b
  9037  001658  0100               	movlb	0	; () banked
  9038  00165A  17A1               	andwf	(??_get_cluster+3)& (0+255),f,b
  9039  00165C  0E29               	movlw	41
  9040  00165E  0100               	movlb	0	; () banked
  9041  001660  27A0               	addwf	(??_get_cluster+2)& (0+255),f,b
  9042  001662  0E00               	movlw	0
  9043  001664  23A1               	addwfc	(??_get_cluster+3)& (0+255),f,b
  9044  001666  0100               	movlb	0	; () banked
  9045  001668  51A0               	movf	(??_get_cluster+2)& (0+255),w,b
  9046  00166A  0100               	movlb	0	; () banked
  9047  00166C  25D2               	addwf	get_cluster@fs& (0+255),w,b
  9048  00166E  6ED9               	movwf	fsr2l,c
  9049  001670  0100               	movlb	0	; () banked
  9050  001672  51A1               	movf	(??_get_cluster+3)& (0+255),w,b
  9051  001674  0100               	movlb	0	; () banked
  9052  001676  21D3               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9053  001678  6EDA               	movwf	fsr2h,c
  9054  00167A  50DF               	movf	indf2,w,c
  9055  00167C  0100               	movlb	0	; () banked
  9056  00167E  6FA2               	movwf	(??_get_cluster+4)& (0+255),b
  9057  001680  0100               	movlb	0	; () banked
  9058  001682  51A2               	movf	(??_get_cluster+4)& (0+255),w,b
  9059  001684  0100               	movlb	0	; () banked
  9060  001686  6FA4               	movwf	(??_get_cluster+6)& (0+255),b
  9061  001688  6BA3               	clrf	(??_get_cluster+5)& (0+255),b
  9062  00168A  0EFF               	movlw	255
  9063  00168C  0100               	movlb	0	; () banked
  9064  00168E  6FA5               	movwf	(??_get_cluster+7)& (0+255),b
  9065  001690  0E01               	movlw	1
  9066  001692  0100               	movlb	0	; () banked
  9067  001694  6FA6               	movwf	(??_get_cluster+8)& (0+255),b
  9068  001696  C09A  F0A7         	movff	get_cluster@clust,??_get_cluster+9
  9069  00169A  C09B  F0A8         	movff	get_cluster@clust+1,??_get_cluster+10
  9070  00169E  90D8               	bcf	status,0,c
  9071  0016A0  0100               	movlb	0	; () banked
  9072  0016A2  37A7               	rlcf	(??_get_cluster+9)& (0+255),f,b
  9073  0016A4  37A8               	rlcf	(??_get_cluster+10)& (0+255),f,b
  9074  0016A6  0100               	movlb	0	; () banked
  9075  0016A8  51A5               	movf	(??_get_cluster+7)& (0+255),w,b
  9076  0016AA  0100               	movlb	0	; () banked
  9077  0016AC  17A7               	andwf	(??_get_cluster+9)& (0+255),f,b
  9078  0016AE  0100               	movlb	0	; () banked
  9079  0016B0  51A6               	movf	(??_get_cluster+8)& (0+255),w,b
  9080  0016B2  0100               	movlb	0	; () banked
  9081  0016B4  17A8               	andwf	(??_get_cluster+10)& (0+255),f,b
  9082  0016B6  0E28               	movlw	40
  9083  0016B8  0100               	movlb	0	; () banked
  9084  0016BA  27A7               	addwf	(??_get_cluster+9)& (0+255),f,b
  9085  0016BC  0E00               	movlw	0
  9086  0016BE  23A8               	addwfc	(??_get_cluster+10)& (0+255),f,b
  9087  0016C0  0100               	movlb	0	; () banked
  9088  0016C2  51A7               	movf	(??_get_cluster+9)& (0+255),w,b
  9089  0016C4  0100               	movlb	0	; () banked
  9090  0016C6  25D2               	addwf	get_cluster@fs& (0+255),w,b
  9091  0016C8  6ED9               	movwf	fsr2l,c
  9092  0016CA  0100               	movlb	0	; () banked
  9093  0016CC  51A8               	movf	(??_get_cluster+10)& (0+255),w,b
  9094  0016CE  0100               	movlb	0	; () banked
  9095  0016D0  21D3               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9096  0016D2  6EDA               	movwf	fsr2h,c
  9097  0016D4  50DF               	movf	indf2,w,c
  9098  0016D6  0100               	movlb	0	; () banked
  9099  0016D8  6FA9               	movwf	(??_get_cluster+11)& (0+255),b
  9100  0016DA  0100               	movlb	0	; () banked
  9101  0016DC  51A9               	movf	(??_get_cluster+11)& (0+255),w,b
  9102  0016DE  0100               	movlb	0	; () banked
  9103  0016E0  13A3               	iorwf	(??_get_cluster+5)& (0+255),f,b
  9104  0016E2  0E00               	movlw	0
  9105  0016E4  13A4               	iorwf	(??_get_cluster+6)& (0+255),f,b
  9106  0016E6  C0A3  F09A         	movff	??_get_cluster+5,?_get_cluster
  9107  0016EA  C0A4  F09B         	movff	??_get_cluster+6,?_get_cluster+1
  9108  0016EE  0100               	movlb	0	; () banked
  9109  0016F0  6B9C               	clrf	(?_get_cluster+2)& (0+255),b
  9110  0016F2  6B9D               	clrf	(?_get_cluster+3)& (0+255),b
  9111                           
  9112                           ; BSR set to: 0
  9113  0016F4  0012               	return	
  9114  0016F6                     l10941:
  9115                           
  9116                           ; BSR set to: 0
  9117                           ;tff.c: 179: if (!move_window(fatsect + clust / 128)) break;
  9118  0016F6  C09A  F09E         	movff	get_cluster@clust,??_get_cluster
  9119  0016FA  C09B  F09F         	movff	get_cluster@clust+1,??_get_cluster+1
  9120  0016FE  C09C  F0A0         	movff	get_cluster@clust+2,??_get_cluster+2
  9121  001702  C09D  F0A1         	movff	get_cluster@clust+3,??_get_cluster+3
  9122  001706  0E08               	movlw	8
  9123  001708  D006               	goto	u12060
  9124  00170A                     u12065:
  9125  00170A  0100               	movlb	0	; () banked
  9126  00170C  90D8               	bcf	status,0,c
  9127  00170E  33A1               	rrcf	(??_get_cluster+3)& (0+255),f,b
  9128  001710  33A0               	rrcf	(??_get_cluster+2)& (0+255),f,b
  9129  001712  339F               	rrcf	(??_get_cluster+1)& (0+255),f,b
  9130  001714  339E               	rrcf	??_get_cluster& (0+255),f,b
  9131  001716                     u12060:
  9132  001716  2EE8               	decfsz	wreg,f,c
  9133  001718  D7F8               	goto	u12065
  9134  00171A  0100               	movlb	0	; () banked
  9135  00171C  51CC               	movf	get_cluster@fatsect& (0+255),w,b
  9136  00171E  0100               	movlb	0	; () banked
  9137  001720  259E               	addwf	??_get_cluster& (0+255),w,b
  9138  001722  0100               	movlb	0	; () banked
  9139  001724  6F83               	movwf	move_window@sector& (0+255),b
  9140  001726  0100               	movlb	0	; () banked
  9141  001728  51CD               	movf	(get_cluster@fatsect+1)& (0+255),w,b
  9142  00172A  0100               	movlb	0	; () banked
  9143  00172C  219F               	addwfc	(??_get_cluster+1)& (0+255),w,b
  9144  00172E  0100               	movlb	0	; () banked
  9145  001730  6F84               	movwf	(move_window@sector+1)& (0+255),b
  9146  001732  0100               	movlb	0	; () banked
  9147  001734  51CE               	movf	(get_cluster@fatsect+2)& (0+255),w,b
  9148  001736  0100               	movlb	0	; () banked
  9149  001738  21A0               	addwfc	(??_get_cluster+2)& (0+255),w,b
  9150  00173A  0100               	movlb	0	; () banked
  9151  00173C  6F85               	movwf	(move_window@sector+2)& (0+255),b
  9152  00173E  0100               	movlb	0	; () banked
  9153  001740  51CF               	movf	(get_cluster@fatsect+3)& (0+255),w,b
  9154  001742  0100               	movlb	0	; () banked
  9155  001744  21A1               	addwfc	(??_get_cluster+3)& (0+255),w,b
  9156  001746  0100               	movlb	0	; () banked
  9157  001748  6F86               	movwf	(move_window@sector+3)& (0+255),b
  9158  00174A  EC60  F019         	call	_move_window	;wreg free
  9159  00174E  0900               	iorlw	0
  9160  001750  B4D8               	btfsc	status,2,c
  9161  001752  D134               	goto	l10953
  9162                           
  9163                           ;tff.c: 180: return (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[((WORD)clust * 4) % 512U
      +                          ])+3)<<24)|((DWORD)*(volatile BYTE*)((&fs->win[((WORD)clust * 4) % 512U])+2)<<16)|((WORD
      +                          )*(volatile BYTE*)((&fs->win[((WORD)clust * 4) % 512U])+1)<<8)|*(volatile BYTE*)(&fs->w
  9164  001754  0EFF               	movlw	255
  9165  001756  0100               	movlb	0	; () banked
  9166  001758  6F9E               	movwf	??_get_cluster& (0+255),b
  9167  00175A  0E01               	movlw	1
  9168  00175C  0100               	movlb	0	; () banked
  9169  00175E  6F9F               	movwf	(??_get_cluster+1)& (0+255),b
  9170  001760  C09A  F0A0         	movff	get_cluster@clust,??_get_cluster+2
  9171  001764  C09B  F0A1         	movff	get_cluster@clust+1,??_get_cluster+3
  9172  001768  0100               	movlb	0	; () banked
  9173  00176A  90D8               	bcf	status,0,c
  9174  00176C  37A0               	rlcf	(??_get_cluster+2)& (0+255),f,b
  9175  00176E  37A1               	rlcf	(??_get_cluster+3)& (0+255),f,b
  9176  001770  0100               	movlb	0	; () banked
  9177  001772  90D8               	bcf	status,0,c
  9178  001774  37A0               	rlcf	(??_get_cluster+2)& (0+255),f,b
  9179  001776  37A1               	rlcf	(??_get_cluster+3)& (0+255),f,b
  9180  001778  0100               	movlb	0	; () banked
  9181  00177A  519E               	movf	??_get_cluster& (0+255),w,b
  9182  00177C  0100               	movlb	0	; () banked
  9183  00177E  17A0               	andwf	(??_get_cluster+2)& (0+255),f,b
  9184  001780  0100               	movlb	0	; () banked
  9185  001782  519F               	movf	(??_get_cluster+1)& (0+255),w,b
  9186  001784  0100               	movlb	0	; () banked
  9187  001786  17A1               	andwf	(??_get_cluster+3)& (0+255),f,b
  9188  001788  0E29               	movlw	41
  9189  00178A  0100               	movlb	0	; () banked
  9190  00178C  27A0               	addwf	(??_get_cluster+2)& (0+255),f,b
  9191  00178E  0E00               	movlw	0
  9192  001790  23A1               	addwfc	(??_get_cluster+3)& (0+255),f,b
  9193  001792  0100               	movlb	0	; () banked
  9194  001794  51A0               	movf	(??_get_cluster+2)& (0+255),w,b
  9195  001796  0100               	movlb	0	; () banked
  9196  001798  25D2               	addwf	get_cluster@fs& (0+255),w,b
  9197  00179A  6ED9               	movwf	fsr2l,c
  9198  00179C  0100               	movlb	0	; () banked
  9199  00179E  51A1               	movf	(??_get_cluster+3)& (0+255),w,b
  9200  0017A0  0100               	movlb	0	; () banked
  9201  0017A2  21D3               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9202  0017A4  6EDA               	movwf	fsr2h,c
  9203  0017A6  50DF               	movf	indf2,w,c
  9204  0017A8  0100               	movlb	0	; () banked
  9205  0017AA  6FA2               	movwf	(??_get_cluster+4)& (0+255),b
  9206  0017AC  0100               	movlb	0	; () banked
  9207  0017AE  51A2               	movf	(??_get_cluster+4)& (0+255),w,b
  9208  0017B0  0100               	movlb	0	; () banked
  9209  0017B2  6FA4               	movwf	(??_get_cluster+6)& (0+255),b
  9210  0017B4  6BA3               	clrf	(??_get_cluster+5)& (0+255),b
  9211  0017B6  0EFF               	movlw	255
  9212  0017B8  0100               	movlb	0	; () banked
  9213  0017BA  6FA5               	movwf	(??_get_cluster+7)& (0+255),b
  9214  0017BC  0E01               	movlw	1
  9215  0017BE  0100               	movlb	0	; () banked
  9216  0017C0  6FA6               	movwf	(??_get_cluster+8)& (0+255),b
  9217  0017C2  C09A  F0A7         	movff	get_cluster@clust,??_get_cluster+9
  9218  0017C6  C09B  F0A8         	movff	get_cluster@clust+1,??_get_cluster+10
  9219  0017CA  0100               	movlb	0	; () banked
  9220  0017CC  90D8               	bcf	status,0,c
  9221  0017CE  37A7               	rlcf	(??_get_cluster+9)& (0+255),f,b
  9222  0017D0  37A8               	rlcf	(??_get_cluster+10)& (0+255),f,b
  9223  0017D2  0100               	movlb	0	; () banked
  9224  0017D4  90D8               	bcf	status,0,c
  9225  0017D6  37A7               	rlcf	(??_get_cluster+9)& (0+255),f,b
  9226  0017D8  37A8               	rlcf	(??_get_cluster+10)& (0+255),f,b
  9227  0017DA  0100               	movlb	0	; () banked
  9228  0017DC  51A5               	movf	(??_get_cluster+7)& (0+255),w,b
  9229  0017DE  0100               	movlb	0	; () banked
  9230  0017E0  17A7               	andwf	(??_get_cluster+9)& (0+255),f,b
  9231  0017E2  0100               	movlb	0	; () banked
  9232  0017E4  51A6               	movf	(??_get_cluster+8)& (0+255),w,b
  9233  0017E6  0100               	movlb	0	; () banked
  9234  0017E8  17A8               	andwf	(??_get_cluster+10)& (0+255),f,b
  9235  0017EA  0E2A               	movlw	42
  9236  0017EC  0100               	movlb	0	; () banked
  9237  0017EE  27A7               	addwf	(??_get_cluster+9)& (0+255),f,b
  9238  0017F0  0E00               	movlw	0
  9239  0017F2  23A8               	addwfc	(??_get_cluster+10)& (0+255),f,b
  9240  0017F4  0100               	movlb	0	; () banked
  9241  0017F6  51A7               	movf	(??_get_cluster+9)& (0+255),w,b
  9242  0017F8  0100               	movlb	0	; () banked
  9243  0017FA  25D2               	addwf	get_cluster@fs& (0+255),w,b
  9244  0017FC  6ED9               	movwf	fsr2l,c
  9245  0017FE  0100               	movlb	0	; () banked
  9246  001800  51A8               	movf	(??_get_cluster+10)& (0+255),w,b
  9247  001802  0100               	movlb	0	; () banked
  9248  001804  21D3               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9249  001806  6EDA               	movwf	fsr2h,c
  9250  001808  50DF               	movf	indf2,w,c
  9251  00180A  0100               	movlb	0	; () banked
  9252  00180C  6FA9               	movwf	(??_get_cluster+11)& (0+255),b
  9253  00180E  C0A9  F0AA         	movff	??_get_cluster+11,??_get_cluster+12
  9254  001812  0100               	movlb	0	; () banked
  9255  001814  6BAB               	clrf	(??_get_cluster+13)& (0+255),b
  9256  001816  6BAC               	clrf	(??_get_cluster+14)& (0+255),b
  9257  001818  6BAD               	clrf	(??_get_cluster+15)& (0+255),b
  9258  00181A  C0AB  F0AD         	movff	??_get_cluster+13,??_get_cluster+15
  9259  00181E  C0AA  F0AC         	movff	??_get_cluster+12,??_get_cluster+14
  9260  001822  0100               	movlb	0	; () banked
  9261  001824  6BAB               	clrf	(??_get_cluster+13)& (0+255),b
  9262  001826  6BAA               	clrf	(??_get_cluster+12)& (0+255),b
  9263  001828  0EFF               	movlw	255
  9264  00182A  0100               	movlb	0	; () banked
  9265  00182C  6FAE               	movwf	(??_get_cluster+16)& (0+255),b
  9266  00182E  0E01               	movlw	1
  9267  001830  0100               	movlb	0	; () banked
  9268  001832  6FAF               	movwf	(??_get_cluster+17)& (0+255),b
  9269  001834  C09A  F0B0         	movff	get_cluster@clust,??_get_cluster+18
  9270  001838  C09B  F0B1         	movff	get_cluster@clust+1,??_get_cluster+19
  9271  00183C  0100               	movlb	0	; () banked
  9272  00183E  90D8               	bcf	status,0,c
  9273  001840  37B0               	rlcf	(??_get_cluster+18)& (0+255),f,b
  9274  001842  37B1               	rlcf	(??_get_cluster+19)& (0+255),f,b
  9275  001844  0100               	movlb	0	; () banked
  9276  001846  90D8               	bcf	status,0,c
  9277  001848  37B0               	rlcf	(??_get_cluster+18)& (0+255),f,b
  9278  00184A  37B1               	rlcf	(??_get_cluster+19)& (0+255),f,b
  9279  00184C  0100               	movlb	0	; () banked
  9280  00184E  51AE               	movf	(??_get_cluster+16)& (0+255),w,b
  9281  001850  0100               	movlb	0	; () banked
  9282  001852  17B0               	andwf	(??_get_cluster+18)& (0+255),f,b
  9283  001854  0100               	movlb	0	; () banked
  9284  001856  51AF               	movf	(??_get_cluster+17)& (0+255),w,b
  9285  001858  0100               	movlb	0	; () banked
  9286  00185A  17B1               	andwf	(??_get_cluster+19)& (0+255),f,b
  9287  00185C  0E2B               	movlw	43
  9288  00185E  0100               	movlb	0	; () banked
  9289  001860  27B0               	addwf	(??_get_cluster+18)& (0+255),f,b
  9290  001862  0E00               	movlw	0
  9291  001864  23B1               	addwfc	(??_get_cluster+19)& (0+255),f,b
  9292  001866  0100               	movlb	0	; () banked
  9293  001868  51B0               	movf	(??_get_cluster+18)& (0+255),w,b
  9294  00186A  0100               	movlb	0	; () banked
  9295  00186C  25D2               	addwf	get_cluster@fs& (0+255),w,b
  9296  00186E  6ED9               	movwf	fsr2l,c
  9297  001870  0100               	movlb	0	; () banked
  9298  001872  51B1               	movf	(??_get_cluster+19)& (0+255),w,b
  9299  001874  0100               	movlb	0	; () banked
  9300  001876  21D3               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9301  001878  6EDA               	movwf	fsr2h,c
  9302  00187A  50DF               	movf	indf2,w,c
  9303  00187C  0100               	movlb	0	; () banked
  9304  00187E  6FB2               	movwf	(??_get_cluster+20)& (0+255),b
  9305  001880  C0B2  F0B3         	movff	??_get_cluster+20,??_get_cluster+21
  9306  001884  0100               	movlb	0	; () banked
  9307  001886  6BB4               	clrf	(??_get_cluster+22)& (0+255),b
  9308  001888  6BB5               	clrf	(??_get_cluster+23)& (0+255),b
  9309  00188A  6BB6               	clrf	(??_get_cluster+24)& (0+255),b
  9310  00188C  C0B3  F0B6         	movff	??_get_cluster+21,??_get_cluster+24
  9311  001890  0100               	movlb	0	; () banked
  9312  001892  6BB5               	clrf	(??_get_cluster+23)& (0+255),b
  9313  001894  6BB4               	clrf	(??_get_cluster+22)& (0+255),b
  9314  001896  6BB3               	clrf	(??_get_cluster+21)& (0+255),b
  9315  001898  0100               	movlb	0	; () banked
  9316  00189A  51AA               	movf	(??_get_cluster+12)& (0+255),w,b
  9317  00189C  0100               	movlb	0	; () banked
  9318  00189E  11B3               	iorwf	(??_get_cluster+21)& (0+255),w,b
  9319  0018A0  0100               	movlb	0	; () banked
  9320  0018A2  6FB7               	movwf	(??_get_cluster+25)& (0+255),b
  9321  0018A4  0100               	movlb	0	; () banked
  9322  0018A6  51AB               	movf	(??_get_cluster+13)& (0+255),w,b
  9323  0018A8  0100               	movlb	0	; () banked
  9324  0018AA  11B4               	iorwf	(??_get_cluster+22)& (0+255),w,b
  9325  0018AC  0100               	movlb	0	; () banked
  9326  0018AE  6FB8               	movwf	(??_get_cluster+26)& (0+255),b
  9327  0018B0  0100               	movlb	0	; () banked
  9328  0018B2  51AC               	movf	(??_get_cluster+14)& (0+255),w,b
  9329  0018B4  0100               	movlb	0	; () banked
  9330  0018B6  11B5               	iorwf	(??_get_cluster+23)& (0+255),w,b
  9331  0018B8  0100               	movlb	0	; () banked
  9332  0018BA  6FB9               	movwf	(??_get_cluster+27)& (0+255),b
  9333  0018BC  0100               	movlb	0	; () banked
  9334  0018BE  51AD               	movf	(??_get_cluster+15)& (0+255),w,b
  9335  0018C0  0100               	movlb	0	; () banked
  9336  0018C2  11B6               	iorwf	(??_get_cluster+24)& (0+255),w,b
  9337  0018C4  0100               	movlb	0	; () banked
  9338  0018C6  6FBA               	movwf	(??_get_cluster+28)& (0+255),b
  9339  0018C8  0100               	movlb	0	; () banked
  9340  0018CA  51A3               	movf	(??_get_cluster+5)& (0+255),w,b
  9341  0018CC  0100               	movlb	0	; () banked
  9342  0018CE  11B7               	iorwf	(??_get_cluster+25)& (0+255),w,b
  9343  0018D0  0100               	movlb	0	; () banked
  9344  0018D2  6FBB               	movwf	(??_get_cluster+29)& (0+255),b
  9345  0018D4  0100               	movlb	0	; () banked
  9346  0018D6  51A4               	movf	(??_get_cluster+6)& (0+255),w,b
  9347  0018D8  0100               	movlb	0	; () banked
  9348  0018DA  11B8               	iorwf	(??_get_cluster+26)& (0+255),w,b
  9349  0018DC  0100               	movlb	0	; () banked
  9350  0018DE  6FBC               	movwf	(??_get_cluster+30)& (0+255),b
  9351  0018E0  0E00               	movlw	0
  9352  0018E2  0100               	movlb	0	; () banked
  9353  0018E4  11B9               	iorwf	(??_get_cluster+27)& (0+255),w,b
  9354  0018E6  0100               	movlb	0	; () banked
  9355  0018E8  6FBD               	movwf	(??_get_cluster+31)& (0+255),b
  9356  0018EA  0E00               	movlw	0
  9357  0018EC  0100               	movlb	0	; () banked
  9358  0018EE  11BA               	iorwf	(??_get_cluster+28)& (0+255),w,b
  9359  0018F0  0100               	movlb	0	; () banked
  9360  0018F2  6FBE               	movwf	(??_get_cluster+32)& (0+255),b
  9361  0018F4  0EFF               	movlw	255
  9362  0018F6  0100               	movlb	0	; () banked
  9363  0018F8  6FBF               	movwf	(??_get_cluster+33)& (0+255),b
  9364  0018FA  0E01               	movlw	1
  9365  0018FC  0100               	movlb	0	; () banked
  9366  0018FE  6FC0               	movwf	(??_get_cluster+34)& (0+255),b
  9367  001900  C09A  F0C1         	movff	get_cluster@clust,??_get_cluster+35
  9368  001904  C09B  F0C2         	movff	get_cluster@clust+1,??_get_cluster+36
  9369  001908  0100               	movlb	0	; () banked
  9370  00190A  90D8               	bcf	status,0,c
  9371  00190C  37C1               	rlcf	(??_get_cluster+35)& (0+255),f,b
  9372  00190E  37C2               	rlcf	(??_get_cluster+36)& (0+255),f,b
  9373  001910  0100               	movlb	0	; () banked
  9374  001912  90D8               	bcf	status,0,c
  9375  001914  37C1               	rlcf	(??_get_cluster+35)& (0+255),f,b
  9376  001916  37C2               	rlcf	(??_get_cluster+36)& (0+255),f,b
  9377  001918  0100               	movlb	0	; () banked
  9378  00191A  51BF               	movf	(??_get_cluster+33)& (0+255),w,b
  9379  00191C  0100               	movlb	0	; () banked
  9380  00191E  17C1               	andwf	(??_get_cluster+35)& (0+255),f,b
  9381  001920  0100               	movlb	0	; () banked
  9382  001922  51C0               	movf	(??_get_cluster+34)& (0+255),w,b
  9383  001924  0100               	movlb	0	; () banked
  9384  001926  17C2               	andwf	(??_get_cluster+36)& (0+255),f,b
  9385  001928  0E28               	movlw	40
  9386  00192A  0100               	movlb	0	; () banked
  9387  00192C  27C1               	addwf	(??_get_cluster+35)& (0+255),f,b
  9388  00192E  0E00               	movlw	0
  9389  001930  23C2               	addwfc	(??_get_cluster+36)& (0+255),f,b
  9390  001932  0100               	movlb	0	; () banked
  9391  001934  51C1               	movf	(??_get_cluster+35)& (0+255),w,b
  9392  001936  0100               	movlb	0	; () banked
  9393  001938  25D2               	addwf	get_cluster@fs& (0+255),w,b
  9394  00193A  6ED9               	movwf	fsr2l,c
  9395  00193C  0100               	movlb	0	; () banked
  9396  00193E  51C2               	movf	(??_get_cluster+36)& (0+255),w,b
  9397  001940  0100               	movlb	0	; () banked
  9398  001942  21D3               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9399  001944  6EDA               	movwf	fsr2h,c
  9400  001946  50DF               	movf	indf2,w,c
  9401  001948  0100               	movlb	0	; () banked
  9402  00194A  6FC3               	movwf	(??_get_cluster+37)& (0+255),b
  9403  00194C  0100               	movlb	0	; () banked
  9404  00194E  51C3               	movf	(??_get_cluster+37)& (0+255),w,b
  9405  001950  0100               	movlb	0	; () banked
  9406  001952  11BB               	iorwf	(??_get_cluster+29)& (0+255),w,b
  9407  001954  0100               	movlb	0	; () banked
  9408  001956  6FC4               	movwf	(??_get_cluster+38)& (0+255),b
  9409  001958  0100               	movlb	0	; () banked
  9410  00195A  51BC               	movf	(??_get_cluster+30)& (0+255),w,b
  9411  00195C  0100               	movlb	0	; () banked
  9412  00195E  6FC5               	movwf	(??_get_cluster+39)& (0+255),b
  9413  001960  0100               	movlb	0	; () banked
  9414  001962  51BD               	movf	(??_get_cluster+31)& (0+255),w,b
  9415  001964  0100               	movlb	0	; () banked
  9416  001966  6FC6               	movwf	(??_get_cluster+40)& (0+255),b
  9417  001968  0100               	movlb	0	; () banked
  9418  00196A  51BE               	movf	(??_get_cluster+32)& (0+255),w,b
  9419  00196C  0100               	movlb	0	; () banked
  9420  00196E  6FC7               	movwf	(??_get_cluster+41)& (0+255),b
  9421  001970  0EFF               	movlw	255
  9422  001972  0100               	movlb	0	; () banked
  9423  001974  15C4               	andwf	(??_get_cluster+38)& (0+255),w,b
  9424  001976  0100               	movlb	0	; () banked
  9425  001978  6F9A               	movwf	?_get_cluster& (0+255),b
  9426  00197A  0EFF               	movlw	255
  9427  00197C  0100               	movlb	0	; () banked
  9428  00197E  15C5               	andwf	(??_get_cluster+39)& (0+255),w,b
  9429  001980  0100               	movlb	0	; () banked
  9430  001982  6F9B               	movwf	(?_get_cluster+1)& (0+255),b
  9431  001984  0EFF               	movlw	255
  9432  001986  0100               	movlb	0	; () banked
  9433  001988  15C6               	andwf	(??_get_cluster+40)& (0+255),w,b
  9434  00198A  0100               	movlb	0	; () banked
  9435  00198C  6F9C               	movwf	(?_get_cluster+2)& (0+255),b
  9436  00198E  0E0F               	movlw	15
  9437  001990  0100               	movlb	0	; () banked
  9438  001992  15C7               	andwf	(??_get_cluster+41)& (0+255),w,b
  9439  001994  0100               	movlb	0	; () banked
  9440  001996  6F9D               	movwf	(?_get_cluster+3)& (0+255),b
  9441                           
  9442                           ; BSR set to: 0
  9443  001998  0012               	return	
  9444  00199A                     l10951:
  9445                           
  9446                           ; BSR set to: 0
  9447  00199A  0100               	movlb	0	; () banked
  9448  00199C  EE20 F024          	lfsr	2,36
  9449  0019A0  51D2               	movf	get_cluster@fs& (0+255),w,b
  9450  0019A2  26D9               	addwf	fsr2l,f,c
  9451  0019A4  51D3               	movf	(get_cluster@fs+1)& (0+255),w,b
  9452  0019A6  22DA               	addwfc	fsr2h,f,c
  9453  0019A8  50DF               	movf	indf2,w,c
  9454                           
  9455                           ; Switch size 1, requested type "space"
  9456                           ; Number of cases is 3, Range of values is 1 to 3
  9457                           ; switch strategies available:
  9458                           ; Name         Instructions Cycles
  9459                           ; simple_byte           10     6 (average)
  9460                           ;	Chosen strategy is simple_byte
  9461  0019AA  0A01               	xorlw	1	; case 1
  9462  0019AC  B4D8               	btfsc	status,2,c
  9463  0019AE  D529               	goto	l10907
  9464  0019B0  0A03               	xorlw	3	; case 2
  9465  0019B2  B4D8               	btfsc	status,2,c
  9466  0019B4  D610               	goto	l10933
  9467  0019B6  0A01               	xorlw	1	; case 3
  9468  0019B8  B4D8               	btfsc	status,2,c
  9469  0019BA  D69D               	goto	l10941
  9470  0019BC                     l10953:
  9471                           
  9472                           ;tff.c: 183: }
  9473                           ;tff.c: 185: return 1;
  9474  0019BC  0E01               	movlw	1
  9475  0019BE  0100               	movlb	0	; () banked
  9476  0019C0  6F9A               	movwf	?_get_cluster& (0+255),b
  9477  0019C2  0E00               	movlw	0
  9478  0019C4  6F9B               	movwf	(?_get_cluster+1)& (0+255),b
  9479  0019C6  0E00               	movlw	0
  9480  0019C8  6F9C               	movwf	(?_get_cluster+2)& (0+255),b
  9481  0019CA  0E00               	movlw	0
  9482  0019CC  6F9D               	movwf	(?_get_cluster+3)& (0+255),b
  9483  0019CE  0012               	return	
  9484  0019D0                     __end_of_get_cluster:
  9485                           	opt stack 0
  9486                           tosu	equ	0xFFF
  9487                           tosh	equ	0xFFE
  9488                           tosl	equ	0xFFD
  9489                           pclath	equ	0xFFA
  9490                           tblptru	equ	0xFF8
  9491                           tblptrh	equ	0xFF7
  9492                           tblptrl	equ	0xFF6
  9493                           tablat	equ	0xFF5
  9494                           prodh	equ	0xFF4
  9495                           prodl	equ	0xFF3
  9496                           intcon	equ	0xFF2
  9497                           intcon2	equ	0xFF1
  9498                           intcon3	equ	0xFF0
  9499                           postinc0	equ	0xFEE
  9500                           wreg	equ	0xFE8
  9501                           indf1	equ	0xFE7
  9502                           postinc1	equ	0xFE6
  9503                           postdec1	equ	0xFE5
  9504                           fsr1h	equ	0xFE2
  9505                           fsr1l	equ	0xFE1
  9506                           indf2	equ	0xFDF
  9507                           postinc2	equ	0xFDE
  9508                           postdec2	equ	0xFDD
  9509                           fsr2h	equ	0xFDA
  9510                           fsr2l	equ	0xFD9
  9511                           status	equ	0xFD8
  9512                           
  9513 ;; *************** function ___wmul *****************
  9514 ;; Defined at:
  9515 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;  multiplier      2   21[COMRAM] unsigned int 
  9518 ;;  multiplicand    2   23[COMRAM] unsigned int 
  9519 ;; Auto vars:     Size  Location     Type
  9520 ;;  product         2   25[COMRAM] unsigned int 
  9521 ;; Return value:  Size  Location     Type
  9522 ;;                  2   21[COMRAM] unsigned int 
  9523 ;; Registers used:
  9524 ;;		wreg, status,2, status,0, prodl, prodh
  9525 ;; Tracked objects:
  9526 ;;		On entry : 0/0
  9527 ;;		On exit  : 0/0
  9528 ;;		Unchanged: 0/0
  9529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9530 ;;      Params:         4       0       0       0       0       0       0       0       0
  9531 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9532 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9533 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9534 ;;Total ram usage:        6 bytes
  9535 ;; Hardware stack levels used:    1
  9536 ;; Hardware stack levels required when called:    2
  9537 ;; This function calls:
  9538 ;;		Nothing
  9539 ;; This function is called by:
  9540 ;;		_get_cluster
  9541 ;;		_put_cluster
  9542 ;;		_sprintf
  9543 ;;		_scale
  9544 ;;		_fround
  9545 ;; This function uses a non-reentrant model
  9546 ;;
  9547                           
  9548                           	psect	text25
  9549  004F44                     __ptext25:
  9550                           	opt stack 0
  9551  004F44                     ___wmul:
  9552                           	opt stack 22
  9553                           
  9554                           ; BSR set to: 0
  9555                           ;incstack = 0
  9556  004F44  5016               	movf	___wmul@multiplier,w,c
  9557  004F46  0218               	mulwf	___wmul@multiplicand,c
  9558  004F48  CFF3 F01A          	movff	prodl,___wmul@product
  9559  004F4C  CFF4 F01B          	movff	prodh,___wmul@product+1
  9560  004F50  5016               	movf	___wmul@multiplier,w,c
  9561  004F52  0219               	mulwf	___wmul@multiplicand+1,c
  9562  004F54  50F3               	movf	prodl,w,c
  9563  004F56  261B               	addwf	___wmul@product+1,f,c
  9564  004F58  5017               	movf	___wmul@multiplier+1,w,c
  9565  004F5A  0218               	mulwf	___wmul@multiplicand,c
  9566  004F5C  50F3               	movf	prodl,w,c
  9567  004F5E  261B               	addwf	___wmul@product+1,f,c
  9568  004F60  C01A  F016         	movff	___wmul@product,?___wmul
  9569  004F64  C01B  F017         	movff	___wmul@product+1,?___wmul+1
  9570  004F68  0012               	return	
  9571  004F6A                     __end_of___wmul:
  9572                           	opt stack 0
  9573                           tosu	equ	0xFFF
  9574                           tosh	equ	0xFFE
  9575                           tosl	equ	0xFFD
  9576                           pclath	equ	0xFFA
  9577                           tblptru	equ	0xFF8
  9578                           tblptrh	equ	0xFF7
  9579                           tblptrl	equ	0xFF6
  9580                           tablat	equ	0xFF5
  9581                           prodh	equ	0xFF4
  9582                           prodl	equ	0xFF3
  9583                           intcon	equ	0xFF2
  9584                           intcon2	equ	0xFF1
  9585                           intcon3	equ	0xFF0
  9586                           postinc0	equ	0xFEE
  9587                           wreg	equ	0xFE8
  9588                           indf1	equ	0xFE7
  9589                           postinc1	equ	0xFE6
  9590                           postdec1	equ	0xFE5
  9591                           fsr1h	equ	0xFE2
  9592                           fsr1l	equ	0xFE1
  9593                           indf2	equ	0xFDF
  9594                           postinc2	equ	0xFDE
  9595                           postdec2	equ	0xFDD
  9596                           fsr2h	equ	0xFDA
  9597                           fsr2l	equ	0xFD9
  9598                           status	equ	0xFD8
  9599                           
  9600 ;; *************** function _memcpy *****************
  9601 ;; Defined at:
  9602 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memcpy.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  d1              2   21[COMRAM] PTR void 
  9605 ;;		 -> fs.win(512), fs(552), f_rename@direntry(21), NULL(0), 
  9606 ;;  s1              2   23[COMRAM] PTR const void 
  9607 ;;		 -> fs.win(512), fs(552), f_rename@direntry(21), f_rename@fn(12), 
  9608 ;;		 -> f_mkdir@fn(12), f_open@fn(12), NULL(0), 
  9609 ;;  n               2   25[COMRAM] unsigned int 
  9610 ;; Auto vars:     Size  Location     Type
  9611 ;;  s               2   29[COMRAM] PTR const unsigned char 
  9612 ;;		 -> fs.win(512), fs(552), f_rename@direntry(21), f_rename@fn(12), 
  9613 ;;		 -> f_mkdir@fn(12), f_open@fn(12), NULL(0), 
  9614 ;;  d               2   27[COMRAM] PTR unsigned char 
  9615 ;;		 -> fs.win(512), fs(552), f_rename@direntry(21), NULL(0), 
  9616 ;; Return value:  Size  Location     Type
  9617 ;;                  2   21[COMRAM] PTR void 
  9618 ;; Registers used:
  9619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9620 ;; Tracked objects:
  9621 ;;		On entry : 0/0
  9622 ;;		On exit  : 0/0
  9623 ;;		Unchanged: 0/0
  9624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9625 ;;      Params:         6       0       0       0       0       0       0       0       0
  9626 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9627 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9628 ;;      Totals:        10       0       0       0       0       0       0       0       0
  9629 ;;Total ram usage:       10 bytes
  9630 ;; Hardware stack levels used:    1
  9631 ;; Hardware stack levels required when called:    2
  9632 ;; This function calls:
  9633 ;;		Nothing
  9634 ;; This function is called by:
  9635 ;;		_f_open
  9636 ;;		_f_read
  9637 ;;		_f_write
  9638 ;;		_f_mkdir
  9639 ;;		_f_rename
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           	psect	text26
  9644  004CFE                     __ptext26:
  9645                           	opt stack 0
  9646  004CFE                     _memcpy:
  9647                           	opt stack 25
  9648                           
  9649                           ;incstack = 0
  9650  004CFE  C018  F01E         	movff	memcpy@s1,memcpy@s
  9651  004D02  C019  F01F         	movff	memcpy@s1+1,memcpy@s+1
  9652  004D06  C016  F01C         	movff	memcpy@d1,memcpy@d
  9653  004D0A  C017  F01D         	movff	memcpy@d1+1,memcpy@d+1
  9654  004D0E  D00E               	goto	l11783
  9655  004D10                     l11777:
  9656  004D10  C01E  FFD9         	movff	memcpy@s,fsr2l
  9657  004D14  C01F  FFDA         	movff	memcpy@s+1,fsr2h
  9658  004D18  C01C  FFE1         	movff	memcpy@d,fsr1l
  9659  004D1C  C01D  FFE2         	movff	memcpy@d+1,fsr1h
  9660  004D20  CFDF FFE7          	movff	indf2,indf1
  9661  004D24  4A1E               	infsnz	memcpy@s,f,c
  9662  004D26  2A1F               	incf	memcpy@s+1,f,c
  9663  004D28  4A1C               	infsnz	memcpy@d,f,c
  9664  004D2A  2A1D               	incf	memcpy@d+1,f,c
  9665  004D2C                     l11783:
  9666  004D2C  061A               	decf	memcpy@n,f,c
  9667  004D2E  A0D8               	btfss	status,0,c
  9668  004D30  061B               	decf	memcpy@n+1,f,c
  9669  004D32  281A               	incf	memcpy@n,w,c
  9670  004D34  E1ED               	bnz	l11777
  9671  004D36  281B               	incf	memcpy@n+1,w,c
  9672  004D38  B4D8               	btfsc	status,2,c
  9673  004D3A  0012               	return	
  9674  004D3C  D7E9               	goto	l11777
  9675  004D3E                     __end_of_memcpy:
  9676                           	opt stack 0
  9677                           tosu	equ	0xFFF
  9678                           tosh	equ	0xFFE
  9679                           tosl	equ	0xFFD
  9680                           pclath	equ	0xFFA
  9681                           tblptru	equ	0xFF8
  9682                           tblptrh	equ	0xFF7
  9683                           tblptrl	equ	0xFF6
  9684                           tablat	equ	0xFF5
  9685                           prodh	equ	0xFF4
  9686                           prodl	equ	0xFF3
  9687                           intcon	equ	0xFF2
  9688                           intcon2	equ	0xFF1
  9689                           intcon3	equ	0xFF0
  9690                           postinc0	equ	0xFEE
  9691                           wreg	equ	0xFE8
  9692                           indf1	equ	0xFE7
  9693                           postinc1	equ	0xFE6
  9694                           postdec1	equ	0xFE5
  9695                           fsr1h	equ	0xFE2
  9696                           fsr1l	equ	0xFE1
  9697                           indf2	equ	0xFDF
  9698                           postinc2	equ	0xFDE
  9699                           postdec2	equ	0xFDD
  9700                           fsr2h	equ	0xFDA
  9701                           fsr2l	equ	0xFD9
  9702                           status	equ	0xFD8
  9703                           
  9704 ;; *************** function _auto_mount *****************
  9705 ;; Defined at:
  9706 ;;		line 665 in file "bibliotecas/tff.c"
  9707 ;; Parameters:    Size  Location     Type
  9708 ;;  path            2   49[BANK0 ] PTR PTR const unsigned c
  9709 ;;		 -> f_rename@path_old(2), f_utime@path(2), f_chmod@path(2), f_mkdir@path(2), 
  9710 ;;		 -> f_unlink@path(2), f_getfree@drv(2), f_stat@path(2), f_opendir@path(2), 
  9711 ;;		 -> f_open@path(2), 
  9712 ;;  chk_wp          1   51[BANK0 ] unsigned char 
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;  fatsize         4   93[BANK0 ] unsigned long 
  9715 ;;  bootsect        4   86[BANK0 ] unsigned long 
  9716 ;;  totalsect       4   82[BANK0 ] unsigned long 
  9717 ;;  maxclust        4   78[BANK0 ] unsigned long 
  9718 ;;  fs              2   98[BANK0 ] PTR struct _FATFS
  9719 ;;		 -> fs(552), NULL(0), 
  9720 ;;  p               2   90[BANK0 ] PTR const unsigned char 
  9721 ;;		 -> STR_28(10), 
  9722 ;;  fmt             1   97[BANK0 ] unsigned char 
  9723 ;;  stat            1   92[BANK0 ] unsigned char 
  9724 ;; Return value:  Size  Location     Type
  9725 ;;                  1    wreg      enum E155
  9726 ;; Registers used:
  9727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9728 ;; Tracked objects:
  9729 ;;		On entry : 0/0
  9730 ;;		On exit  : 0/0
  9731 ;;		Unchanged: 0/0
  9732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9733 ;;      Params:         0       3       0       0       0       0       0       0       0
  9734 ;;      Locals:         0      22       0       0       0       0       0       0       0
  9735 ;;      Temps:          0      26       0       0       0       0       0       0       0
  9736 ;;      Totals:         0      51       0       0       0       0       0       0       0
  9737 ;;Total ram usage:       51 bytes
  9738 ;; Hardware stack levels used:    1
  9739 ;; Hardware stack levels required when called:    9
  9740 ;; This function calls:
  9741 ;;		___lldiv
  9742 ;;		___lmul
  9743 ;;		_check_fs
  9744 ;;		_disk_initialize
  9745 ;;		_escreve_frase_ram_lcd
  9746 ;;		_escreve_inteiro_lcd
  9747 ;;		_memset
  9748 ;;		_posicao_cursor_lcd
  9749 ;; This function is called by:
  9750 ;;		_f_open
  9751 ;;		_f_opendir
  9752 ;;		_f_stat
  9753 ;;		_f_getfree
  9754 ;;		_f_unlink
  9755 ;;		_f_mkdir
  9756 ;;		_f_chmod
  9757 ;;		_f_utime
  9758 ;;		_f_rename
  9759 ;; This function uses a non-reentrant model
  9760 ;;
  9761                           
  9762                           	psect	text27
  9763  000012                     __ptext27:
  9764                           	opt stack 0
  9765  000012                     _auto_mount:
  9766                           	opt stack 18
  9767                           
  9768                           ;tff.c: 670: BYTE fmt;
  9769                           ;tff.c: 671: DSTATUS stat;
  9770                           ;tff.c: 672: DWORD bootsect, fatsize, totalsect, maxclust;
  9771                           ;tff.c: 673: const char *p = *path;
  9772                           
  9773                           ;incstack = 0
  9774  000012  C091  FFD9         	movff	auto_mount@path,fsr2l
  9775  000016  C092  FFDA         	movff	auto_mount@path+1,fsr2h
  9776  00001A  CFDE F0BA          	movff	postinc2,auto_mount@p
  9777  00001E  CFDD F0BB          	movff	postdec2,auto_mount@p+1
  9778                           
  9779                           ;tff.c: 674: FATFS *fs;
  9780                           ;tff.c: 677: while (*p == ' ') p++;
  9781  000022  D003               	goto	l11635
  9782  000024                     l11633:
  9783  000024  0100               	movlb	0	; () banked
  9784  000026  4BBA               	infsnz	auto_mount@p& (0+255),f,b
  9785  000028  2BBB               	incf	(auto_mount@p+1)& (0+255),f,b
  9786  00002A                     l11635:
  9787  00002A  C0BA  FFF6         	movff	auto_mount@p,tblptrl
  9788  00002E  C0BB  FFF7         	movff	auto_mount@p+1,tblptrh
  9789  000032                     	if	0	;tblptru may be non-zero
  9790  000032                     	endif
  9791  000032                     	if	0	;tblptru may be non-zero
  9792  000032                     	endif
  9793  000032  0008               	tblrd		*
  9794  000034  50F5               	movf	tablat,w,c
  9795  000036  0A20               	xorlw	32
  9796  000038  B4D8               	btfsc	status,2,c
  9797  00003A  D7F4               	goto	l11633
  9798                           
  9799                           ;tff.c: 678: if (*p == '/') p++;
  9800  00003C  C0BA  FFF6         	movff	auto_mount@p,tblptrl
  9801  000040  C0BB  FFF7         	movff	auto_mount@p+1,tblptrh
  9802  000044                     	if	0	;tblptru may be non-zero
  9803  000044                     	endif
  9804  000044                     	if	0	;tblptru may be non-zero
  9805  000044                     	endif
  9806  000044  0008               	tblrd		*
  9807  000046  50F5               	movf	tablat,w,c
  9808  000048  0A2F               	xorlw	47
  9809  00004A  A4D8               	btfss	status,2,c
  9810  00004C  D003               	goto	l11641
  9811  00004E  0100               	movlb	0	; () banked
  9812  000050  4BBA               	infsnz	auto_mount@p& (0+255),f,b
  9813  000052  2BBB               	incf	(auto_mount@p+1)& (0+255),f,b
  9814  000054                     l11641:
  9815                           
  9816                           ;tff.c: 679: *path = p;
  9817  000054  C091  FFD9         	movff	auto_mount@path,fsr2l
  9818  000058  C092  FFDA         	movff	auto_mount@path+1,fsr2h
  9819  00005C  C0BA  FFDE         	movff	auto_mount@p,postinc2
  9820  000060  C0BB  FFDD         	movff	auto_mount@p+1,postdec2
  9821                           
  9822                           ;tff.c: 682: fs = FatFs;
  9823  000064  C0FC  F0C2         	movff	_FatFs,auto_mount@fs
  9824  000068  C0FD  F0C3         	movff	_FatFs+1,auto_mount@fs+1
  9825                           
  9826                           ;tff.c: 683: if (!fs) return FR_NOT_ENABLED;
  9827  00006C  0100               	movlb	0	; () banked
  9828  00006E  51C2               	movf	auto_mount@fs& (0+255),w,b
  9829  000070  0100               	movlb	0	; () banked
  9830  000072  11C3               	iorwf	(auto_mount@fs+1)& (0+255),w,b
  9831  000074  A4D8               	btfss	status,2,c
  9832  000076  D002               	goto	l11651
  9833                           
  9834                           ; BSR set to: 0
  9835  000078  0E0A               	movlw	10
  9836                           
  9837                           ; BSR set to: 0
  9838  00007A  0012               	return	
  9839  00007C                     l11651:
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;tff.c: 685: if (fs->fs_type) {
  9843  00007C  0100               	movlb	0	; () banked
  9844  00007E  EE20 F024          	lfsr	2,36
  9845  000082  51C2               	movf	auto_mount@fs& (0+255),w,b
  9846  000084  26D9               	addwf	fsr2l,f,c
  9847  000086  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
  9848  000088  22DA               	addwfc	fsr2h,f,c
  9849  00008A  50DF               	movf	indf2,w,c
  9850  00008C  B4D8               	btfsc	status,2,c
  9851  00008E  D012               	goto	l11669
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;tff.c: 687: stat = 0;
  9855  000090  0E00               	movlw	0
  9856  000092  0100               	movlb	0	; () banked
  9857  000094  6FBC               	movwf	auto_mount@stat& (0+255),b
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;tff.c: 688: if (!(stat & 0x01)) {
  9861  000096  0100               	movlb	0	; () banked
  9862  000098  B1BC               	btfsc	auto_mount@stat& (0+255),0,b
  9863  00009A  D00C               	goto	l11669
  9864                           
  9865                           ; BSR set to: 0
  9866                           ;tff.c: 690: if (chk_wp && (stat & 0x04))
  9867  00009C  0100               	movlb	0	; () banked
  9868  00009E  5193               	movf	auto_mount@chk_wp& (0+255),w,b
  9869  0000A0  0100               	movlb	0	; () banked
  9870  0000A2  B4D8               	btfsc	status,2,c
  9871  0000A4  D005               	goto	l11665
  9872                           
  9873                           ; BSR set to: 0
  9874  0000A6  0100               	movlb	0	; () banked
  9875  0000A8  A5BC               	btfss	auto_mount@stat& (0+255),2,b
  9876  0000AA  D002               	goto	l11665
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;tff.c: 691: return FR_WRITE_PROTECTED;
  9880  0000AC  0E09               	movlw	9
  9881                           
  9882                           ; BSR set to: 0
  9883  0000AE  0012               	return	
  9884  0000B0                     l11665:
  9885                           
  9886                           ; BSR set to: 0
  9887                           ;tff.c: 693: return FR_OK;
  9888  0000B0  0E00               	movlw	0
  9889                           
  9890                           ; BSR set to: 0
  9891  0000B2  0012               	return	
  9892  0000B4                     l11669:
  9893                           
  9894                           ; BSR set to: 0
  9895                           ;tff.c: 694: }
  9896                           ;tff.c: 695: }
  9897                           ;tff.c: 699: memset(fs, 0, sizeof(FATFS));
  9898  0000B4  C0C2  F016         	movff	auto_mount@fs,memset@p1
  9899  0000B8  C0C3  F017         	movff	auto_mount@fs+1,memset@p1+1
  9900  0000BC  0E00               	movlw	0
  9901  0000BE  6E19               	movwf	memset@c+1,c
  9902  0000C0  0E00               	movlw	0
  9903  0000C2  6E18               	movwf	memset@c,c
  9904  0000C4  0E02               	movlw	2
  9905  0000C6  6E1B               	movwf	memset@n+1,c
  9906  0000C8  0E28               	movlw	40
  9907  0000CA  6E1A               	movwf	memset@n,c
  9908  0000CC  EC4E  F027         	call	_memset	;wreg free
  9909                           
  9910                           ;tff.c: 700: stat = disk_initialize(0);
  9911  0000D0  0E00               	movlw	0
  9912  0000D2  EC34  F027         	call	_disk_initialize
  9913  0000D6  0100               	movlb	0	; () banked
  9914  0000D8  6FBC               	movwf	auto_mount@stat& (0+255),b
  9915                           
  9916                           ; BSR set to: 0
  9917                           ;tff.c: 702: if (stat & 0x01)
  9918  0000DA  0100               	movlb	0	; () banked
  9919  0000DC  A1BC               	btfss	auto_mount@stat& (0+255),0,b
  9920  0000DE  D002               	goto	l11679
  9921                           
  9922                           ; BSR set to: 0
  9923                           ;tff.c: 703: return FR_NOT_READY;
  9924  0000E0  0E01               	movlw	1
  9925                           
  9926                           ; BSR set to: 0
  9927  0000E2  0012               	return	
  9928  0000E4                     l11679:
  9929                           
  9930                           ; BSR set to: 0
  9931                           ;tff.c: 705: if (chk_wp && (stat & 0x04))
  9932  0000E4  0100               	movlb	0	; () banked
  9933  0000E6  5193               	movf	auto_mount@chk_wp& (0+255),w,b
  9934  0000E8  0100               	movlb	0	; () banked
  9935  0000EA  B4D8               	btfsc	status,2,c
  9936  0000EC  D005               	goto	l11687
  9937                           
  9938                           ; BSR set to: 0
  9939  0000EE  0100               	movlb	0	; () banked
  9940  0000F0  A5BC               	btfss	auto_mount@stat& (0+255),2,b
  9941  0000F2  D002               	goto	l11687
  9942                           
  9943                           ; BSR set to: 0
  9944                           ;tff.c: 706: return FR_WRITE_PROTECTED;
  9945  0000F4  0E09               	movlw	9
  9946                           
  9947                           ; BSR set to: 0
  9948  0000F6  0012               	return	
  9949  0000F8                     l11687:
  9950                           
  9951                           ; BSR set to: 0
  9952                           ;tff.c: 710: fmt = check_fs(bootsect = 0);
  9953  0000F8  0E00               	movlw	0
  9954  0000FA  0100               	movlb	0	; () banked
  9955  0000FC  6FB6               	movwf	auto_mount@bootsect& (0+255),b
  9956  0000FE  0E00               	movlw	0
  9957  000100  6FB7               	movwf	(auto_mount@bootsect+1)& (0+255),b
  9958  000102  0E00               	movlw	0
  9959  000104  6FB8               	movwf	(auto_mount@bootsect+2)& (0+255),b
  9960  000106  0E00               	movlw	0
  9961  000108  6FB9               	movwf	(auto_mount@bootsect+3)& (0+255),b
  9962  00010A  C0B6  F083         	movff	auto_mount@bootsect,check_fs@sect
  9963  00010E  C0B7  F084         	movff	auto_mount@bootsect+1,check_fs@sect+1
  9964  000112  C0B8  F085         	movff	auto_mount@bootsect+2,check_fs@sect+2
  9965  000116  C0B9  F086         	movff	auto_mount@bootsect+3,check_fs@sect+3
  9966  00011A  EC75  F01A         	call	_check_fs	;wreg free
  9967  00011E  0100               	movlb	0	; () banked
  9968  000120  6FC1               	movwf	auto_mount@fmt& (0+255),b
  9969                           
  9970                           ; BSR set to: 0
  9971                           ;tff.c: 711: posicao_cursor_lcd(1,0);
  9972  000122  0E00               	movlw	0
  9973  000124  6E19               	movwf	posicao_cursor_lcd@coluna,c
  9974  000126  0E01               	movlw	1
  9975  000128  EC8A  F024         	call	_posicao_cursor_lcd
  9976                           
  9977                           ;tff.c: 712: escreve_frase_ram_lcd(" fmt1             ");
  9978  00012C  0E3E               	movlw	low STR_22
  9979  00012E  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  9980  000130  0E61               	movlw	high STR_22
  9981  000132  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  9982  000134  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
  9983                           
  9984                           ;tff.c: 713: posicao_cursor_lcd(2,0);
  9985  000138  0E00               	movlw	0
  9986  00013A  6E19               	movwf	posicao_cursor_lcd@coluna,c
  9987  00013C  0E02               	movlw	2
  9988  00013E  EC8A  F024         	call	_posicao_cursor_lcd
  9989                           
  9990                           ;tff.c: 714: escreve_frase_ram_lcd("                  ");
  9991  000142  0E2B               	movlw	low STR_23
  9992  000144  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  9993  000146  0E61               	movlw	high STR_23
  9994  000148  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  9995  00014A  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
  9996                           
  9997                           ;tff.c: 715: posicao_cursor_lcd(1,12);
  9998  00014E  0E0C               	movlw	12
  9999  000150  6E19               	movwf	posicao_cursor_lcd@coluna,c
 10000  000152  0E01               	movlw	1
 10001  000154  EC8A  F024         	call	_posicao_cursor_lcd
 10002                           
 10003                           ;tff.c: 716: escreve_inteiro_lcd(fmt);
 10004  000158  C0C1  F02E         	movff	auto_mount@fmt,escreve_inteiro_lcd@valor
 10005  00015C  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 10006  00015E  ECDD  F026         	call	_escreve_inteiro_lcd	;wreg free
 10007                           
 10008                           ;tff.c: 717: _delay((unsigned long)((2000)*(48000000/4000.0)));
 10009  000162  0E7A               	movlw	122
 10010  000164  0100               	movlb	0	; () banked
 10011  000166  6F95               	movwf	(??_auto_mount+1)& (0+255),b
 10012  000168  0EC1               	movlw	193
 10013  00016A  0100               	movlb	0	; () banked
 10014  00016C  6F94               	movwf	??_auto_mount& (0+255),b
 10015  00016E  0E81               	movlw	129
 10016  000170                     u16297:
 10017  000170  2EE8               	decfsz	wreg,f,c
 10018  000172  D7FE               	bra	u16297
 10019  000174  2F94               	decfsz	??_auto_mount& (0+255),f,b
 10020  000176  D7FC               	bra	u16297
 10021  000178  2F95               	decfsz	(??_auto_mount+1)& (0+255),f,b
 10022  00017A  D7FA               	bra	u16297
 10023  00017C  D000               	nop2	
 10024                           
 10025                           ;tff.c: 718: if (fmt == 1) {
 10026  00017E  0100               	movlb	0	; () banked
 10027  000180  05C1               	decf	auto_mount@fmt& (0+255),w,b
 10028  000182  A4D8               	btfss	status,2,c
 10029  000184  D0D8               	goto	l11723
 10030                           
 10031                           ; BSR set to: 0
 10032                           ;tff.c: 720: if (fs->win[446+4]) {
 10033  000186  0100               	movlb	0	; () banked
 10034  000188  EE21 F0EA          	lfsr	2,490
 10035  00018C  51C2               	movf	auto_mount@fs& (0+255),w,b
 10036  00018E  26D9               	addwf	fsr2l,f,c
 10037  000190  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 10038  000192  22DA               	addwfc	fsr2h,f,c
 10039  000194  50DF               	movf	indf2,w,c
 10040  000196  B4D8               	btfsc	status,2,c
 10041  000198  D0CE               	goto	l11723
 10042                           
 10043                           ; BSR set to: 0
 10044                           ;tff.c: 721: bootsect = (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[446+8])+3)<<24)|((DW
      +                          ORD)*(volatile BYTE*)((&fs->win[446+8])+2)<<16)|((WORD)*(volatile BYTE*)((&fs->win[446+8
      +                          ])+1)<<8)|*(volatile BYTE*)(&fs->win[446+8]));
 10045  00019A  0EEF               	movlw	239
 10046  00019C  0100               	movlb	0	; () banked
 10047  00019E  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10048  0001A0  6ED9               	movwf	fsr2l,c
 10049  0001A2  0E01               	movlw	1
 10050  0001A4  0100               	movlb	0	; () banked
 10051  0001A6  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10052  0001A8  6EDA               	movwf	fsr2h,c
 10053  0001AA  50DF               	movf	indf2,w,c
 10054  0001AC  0100               	movlb	0	; () banked
 10055  0001AE  6F94               	movwf	??_auto_mount& (0+255),b
 10056  0001B0  0100               	movlb	0	; () banked
 10057  0001B2  5194               	movf	??_auto_mount& (0+255),w,b
 10058  0001B4  0100               	movlb	0	; () banked
 10059  0001B6  6F96               	movwf	(??_auto_mount+2)& (0+255),b
 10060  0001B8  6B95               	clrf	(??_auto_mount+1)& (0+255),b
 10061  0001BA  0EF0               	movlw	240
 10062  0001BC  0100               	movlb	0	; () banked
 10063  0001BE  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10064  0001C0  6ED9               	movwf	fsr2l,c
 10065  0001C2  0E01               	movlw	1
 10066  0001C4  0100               	movlb	0	; () banked
 10067  0001C6  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10068  0001C8  6EDA               	movwf	fsr2h,c
 10069  0001CA  50DF               	movf	indf2,w,c
 10070  0001CC  0100               	movlb	0	; () banked
 10071  0001CE  6F97               	movwf	(??_auto_mount+3)& (0+255),b
 10072  0001D0  C097  F098         	movff	??_auto_mount+3,??_auto_mount+4
 10073  0001D4  0100               	movlb	0	; () banked
 10074  0001D6  6B99               	clrf	(??_auto_mount+5)& (0+255),b
 10075  0001D8  6B9A               	clrf	(??_auto_mount+6)& (0+255),b
 10076  0001DA  6B9B               	clrf	(??_auto_mount+7)& (0+255),b
 10077  0001DC  C099  F09B         	movff	??_auto_mount+5,??_auto_mount+7
 10078  0001E0  C098  F09A         	movff	??_auto_mount+4,??_auto_mount+6
 10079  0001E4  0100               	movlb	0	; () banked
 10080  0001E6  6B99               	clrf	(??_auto_mount+5)& (0+255),b
 10081  0001E8  6B98               	clrf	(??_auto_mount+4)& (0+255),b
 10082  0001EA  0EF1               	movlw	241
 10083  0001EC  0100               	movlb	0	; () banked
 10084  0001EE  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10085  0001F0  6ED9               	movwf	fsr2l,c
 10086  0001F2  0E01               	movlw	1
 10087  0001F4  0100               	movlb	0	; () banked
 10088  0001F6  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10089  0001F8  6EDA               	movwf	fsr2h,c
 10090  0001FA  50DF               	movf	indf2,w,c
 10091  0001FC  0100               	movlb	0	; () banked
 10092  0001FE  6F9C               	movwf	(??_auto_mount+8)& (0+255),b
 10093  000200  C09C  F09D         	movff	??_auto_mount+8,??_auto_mount+9
 10094  000204  0100               	movlb	0	; () banked
 10095  000206  6B9E               	clrf	(??_auto_mount+10)& (0+255),b
 10096  000208  6B9F               	clrf	(??_auto_mount+11)& (0+255),b
 10097  00020A  6BA0               	clrf	(??_auto_mount+12)& (0+255),b
 10098  00020C  C09D  F0A0         	movff	??_auto_mount+9,??_auto_mount+12
 10099  000210  0100               	movlb	0	; () banked
 10100  000212  6B9F               	clrf	(??_auto_mount+11)& (0+255),b
 10101  000214  6B9E               	clrf	(??_auto_mount+10)& (0+255),b
 10102  000216  6B9D               	clrf	(??_auto_mount+9)& (0+255),b
 10103  000218  0100               	movlb	0	; () banked
 10104  00021A  5198               	movf	(??_auto_mount+4)& (0+255),w,b
 10105  00021C  0100               	movlb	0	; () banked
 10106  00021E  119D               	iorwf	(??_auto_mount+9)& (0+255),w,b
 10107  000220  0100               	movlb	0	; () banked
 10108  000222  6FA1               	movwf	(??_auto_mount+13)& (0+255),b
 10109  000224  0100               	movlb	0	; () banked
 10110  000226  5199               	movf	(??_auto_mount+5)& (0+255),w,b
 10111  000228  0100               	movlb	0	; () banked
 10112  00022A  119E               	iorwf	(??_auto_mount+10)& (0+255),w,b
 10113  00022C  0100               	movlb	0	; () banked
 10114  00022E  6FA2               	movwf	(??_auto_mount+14)& (0+255),b
 10115  000230  0100               	movlb	0	; () banked
 10116  000232  519A               	movf	(??_auto_mount+6)& (0+255),w,b
 10117  000234  0100               	movlb	0	; () banked
 10118  000236  119F               	iorwf	(??_auto_mount+11)& (0+255),w,b
 10119  000238  0100               	movlb	0	; () banked
 10120  00023A  6FA3               	movwf	(??_auto_mount+15)& (0+255),b
 10121  00023C  0100               	movlb	0	; () banked
 10122  00023E  519B               	movf	(??_auto_mount+7)& (0+255),w,b
 10123  000240  0100               	movlb	0	; () banked
 10124  000242  11A0               	iorwf	(??_auto_mount+12)& (0+255),w,b
 10125  000244  0100               	movlb	0	; () banked
 10126  000246  6FA4               	movwf	(??_auto_mount+16)& (0+255),b
 10127  000248  0100               	movlb	0	; () banked
 10128  00024A  5195               	movf	(??_auto_mount+1)& (0+255),w,b
 10129  00024C  0100               	movlb	0	; () banked
 10130  00024E  11A1               	iorwf	(??_auto_mount+13)& (0+255),w,b
 10131  000250  0100               	movlb	0	; () banked
 10132  000252  6FA5               	movwf	(??_auto_mount+17)& (0+255),b
 10133  000254  0100               	movlb	0	; () banked
 10134  000256  5196               	movf	(??_auto_mount+2)& (0+255),w,b
 10135  000258  0100               	movlb	0	; () banked
 10136  00025A  11A2               	iorwf	(??_auto_mount+14)& (0+255),w,b
 10137  00025C  0100               	movlb	0	; () banked
 10138  00025E  6FA6               	movwf	(??_auto_mount+18)& (0+255),b
 10139  000260  0E00               	movlw	0
 10140  000262  0100               	movlb	0	; () banked
 10141  000264  11A3               	iorwf	(??_auto_mount+15)& (0+255),w,b
 10142  000266  0100               	movlb	0	; () banked
 10143  000268  6FA7               	movwf	(??_auto_mount+19)& (0+255),b
 10144  00026A  0E00               	movlw	0
 10145  00026C  0100               	movlb	0	; () banked
 10146  00026E  11A4               	iorwf	(??_auto_mount+16)& (0+255),w,b
 10147  000270  0100               	movlb	0	; () banked
 10148  000272  6FA8               	movwf	(??_auto_mount+20)& (0+255),b
 10149  000274  0EEE               	movlw	238
 10150  000276  0100               	movlb	0	; () banked
 10151  000278  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10152  00027A  6ED9               	movwf	fsr2l,c
 10153  00027C  0E01               	movlw	1
 10154  00027E  0100               	movlb	0	; () banked
 10155  000280  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10156  000282  6EDA               	movwf	fsr2h,c
 10157  000284  50DF               	movf	indf2,w,c
 10158  000286  0100               	movlb	0	; () banked
 10159  000288  6FA9               	movwf	(??_auto_mount+21)& (0+255),b
 10160  00028A  0100               	movlb	0	; () banked
 10161  00028C  51A9               	movf	(??_auto_mount+21)& (0+255),w,b
 10162  00028E  0100               	movlb	0	; () banked
 10163  000290  11A5               	iorwf	(??_auto_mount+17)& (0+255),w,b
 10164  000292  0100               	movlb	0	; () banked
 10165  000294  6FB6               	movwf	auto_mount@bootsect& (0+255),b
 10166  000296  0100               	movlb	0	; () banked
 10167  000298  51A6               	movf	(??_auto_mount+18)& (0+255),w,b
 10168  00029A  0100               	movlb	0	; () banked
 10169  00029C  6FB7               	movwf	(auto_mount@bootsect+1)& (0+255),b
 10170  00029E  0100               	movlb	0	; () banked
 10171  0002A0  51A7               	movf	(??_auto_mount+19)& (0+255),w,b
 10172  0002A2  0100               	movlb	0	; () banked
 10173  0002A4  6FB8               	movwf	(auto_mount@bootsect+2)& (0+255),b
 10174  0002A6  0100               	movlb	0	; () banked
 10175  0002A8  51A8               	movf	(??_auto_mount+20)& (0+255),w,b
 10176  0002AA  0100               	movlb	0	; () banked
 10177  0002AC  6FB9               	movwf	(auto_mount@bootsect+3)& (0+255),b
 10178                           
 10179                           ; BSR set to: 0
 10180                           ;tff.c: 722: fmt = check_fs(bootsect);
 10181  0002AE  C0B6  F083         	movff	auto_mount@bootsect,check_fs@sect
 10182  0002B2  C0B7  F084         	movff	auto_mount@bootsect+1,check_fs@sect+1
 10183  0002B6  C0B8  F085         	movff	auto_mount@bootsect+2,check_fs@sect+2
 10184  0002BA  C0B9  F086         	movff	auto_mount@bootsect+3,check_fs@sect+3
 10185  0002BE  EC75  F01A         	call	_check_fs	;wreg free
 10186  0002C2  0100               	movlb	0	; () banked
 10187  0002C4  6FC1               	movwf	auto_mount@fmt& (0+255),b
 10188                           
 10189                           ; BSR set to: 0
 10190                           ;tff.c: 724: fmt = check_fs(bootsect = 0);
 10191  0002C6  0E00               	movlw	0
 10192  0002C8  0100               	movlb	0	; () banked
 10193  0002CA  6FB6               	movwf	auto_mount@bootsect& (0+255),b
 10194  0002CC  0E00               	movlw	0
 10195  0002CE  6FB7               	movwf	(auto_mount@bootsect+1)& (0+255),b
 10196  0002D0  0E00               	movlw	0
 10197  0002D2  6FB8               	movwf	(auto_mount@bootsect+2)& (0+255),b
 10198  0002D4  0E00               	movlw	0
 10199  0002D6  6FB9               	movwf	(auto_mount@bootsect+3)& (0+255),b
 10200  0002D8  C0B6  F083         	movff	auto_mount@bootsect,check_fs@sect
 10201  0002DC  C0B7  F084         	movff	auto_mount@bootsect+1,check_fs@sect+1
 10202  0002E0  C0B8  F085         	movff	auto_mount@bootsect+2,check_fs@sect+2
 10203  0002E4  C0B9  F086         	movff	auto_mount@bootsect+3,check_fs@sect+3
 10204  0002E8  EC75  F01A         	call	_check_fs	;wreg free
 10205  0002EC  0100               	movlb	0	; () banked
 10206  0002EE  6FC1               	movwf	auto_mount@fmt& (0+255),b
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;tff.c: 725: posicao_cursor_lcd(2,0);
 10210  0002F0  0E00               	movlw	0
 10211  0002F2  6E19               	movwf	posicao_cursor_lcd@coluna,c
 10212  0002F4  0E02               	movlw	2
 10213  0002F6  EC8A  F024         	call	_posicao_cursor_lcd
 10214                           
 10215                           ;tff.c: 726: escreve_frase_ram_lcd(" fmt2             ");
 10216  0002FA  0E51               	movlw	low STR_24
 10217  0002FC  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 10218  0002FE  0E61               	movlw	high STR_24
 10219  000300  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 10220  000302  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
 10221                           
 10222                           ;tff.c: 727: posicao_cursor_lcd(2,12);
 10223  000306  0E0C               	movlw	12
 10224  000308  6E19               	movwf	posicao_cursor_lcd@coluna,c
 10225  00030A  0E02               	movlw	2
 10226  00030C  EC8A  F024         	call	_posicao_cursor_lcd
 10227                           
 10228                           ;tff.c: 728: escreve_inteiro_lcd(fmt);
 10229  000310  C0C1  F02E         	movff	auto_mount@fmt,escreve_inteiro_lcd@valor
 10230  000314  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 10231  000316  ECDD  F026         	call	_escreve_inteiro_lcd	;wreg free
 10232                           
 10233                           ;tff.c: 729: _delay((unsigned long)((1000)*(48000000/4000.0)));
 10234  00031A  0E3D               	movlw	61
 10235  00031C  0100               	movlb	0	; () banked
 10236  00031E  6F95               	movwf	(??_auto_mount+1)& (0+255),b
 10237  000320  0EE1               	movlw	225
 10238  000322  0100               	movlb	0	; () banked
 10239  000324  6F94               	movwf	??_auto_mount& (0+255),b
 10240  000326  0E3F               	movlw	63
 10241  000328                     u16307:
 10242  000328  2EE8               	decfsz	wreg,f,c
 10243  00032A  D7FE               	bra	u16307
 10244  00032C  2F94               	decfsz	??_auto_mount& (0+255),f,b
 10245  00032E  D7FC               	bra	u16307
 10246  000330  2F95               	decfsz	(??_auto_mount+1)& (0+255),f,b
 10247  000332  D7FA               	bra	u16307
 10248  000334  D000               	nop2	
 10249  000336                     l11723:
 10250                           
 10251                           ;tff.c: 731: }
 10252                           ;tff.c: 732: }
 10253                           ;tff.c: 733: if (fmt || (WORD)(((WORD)*(volatile BYTE*)((&fs->win[11])+1)<<8)|(WORD)*(vo
      +                          latile BYTE*)(&fs->win[11])) != 512)
 10254  000336  0100               	movlb	0	; () banked
 10255  000338  51C1               	movf	auto_mount@fmt& (0+255),w,b
 10256  00033A  0100               	movlb	0	; () banked
 10257  00033C  A4D8               	btfss	status,2,c
 10258  00033E  D028               	goto	l11727
 10259                           
 10260                           ; BSR set to: 0
 10261  000340  0E34               	movlw	52
 10262  000342  0100               	movlb	0	; () banked
 10263  000344  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10264  000346  6ED9               	movwf	fsr2l,c
 10265  000348  0E00               	movlw	0
 10266  00034A  0100               	movlb	0	; () banked
 10267  00034C  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10268  00034E  6EDA               	movwf	fsr2h,c
 10269  000350  50DF               	movf	indf2,w,c
 10270  000352  0100               	movlb	0	; () banked
 10271  000354  6F94               	movwf	??_auto_mount& (0+255),b
 10272  000356  0100               	movlb	0	; () banked
 10273  000358  5194               	movf	??_auto_mount& (0+255),w,b
 10274  00035A  0100               	movlb	0	; () banked
 10275  00035C  6F96               	movwf	(??_auto_mount+2)& (0+255),b
 10276  00035E  6B95               	clrf	(??_auto_mount+1)& (0+255),b
 10277  000360  0E33               	movlw	51
 10278  000362  0100               	movlb	0	; () banked
 10279  000364  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10280  000366  6ED9               	movwf	fsr2l,c
 10281  000368  0E00               	movlw	0
 10282  00036A  0100               	movlb	0	; () banked
 10283  00036C  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10284  00036E  6EDA               	movwf	fsr2h,c
 10285  000370  50DF               	movf	indf2,w,c
 10286  000372  0100               	movlb	0	; () banked
 10287  000374  6F97               	movwf	(??_auto_mount+3)& (0+255),b
 10288  000376  0100               	movlb	0	; () banked
 10289  000378  5197               	movf	(??_auto_mount+3)& (0+255),w,b
 10290  00037A  0100               	movlb	0	; () banked
 10291  00037C  1395               	iorwf	(??_auto_mount+1)& (0+255),f,b
 10292  00037E  0E00               	movlw	0
 10293  000380  1396               	iorwf	(??_auto_mount+2)& (0+255),f,b
 10294  000382  0E02               	movlw	2
 10295  000384  0100               	movlb	0	; () banked
 10296  000386  1996               	xorwf	(??_auto_mount+2)& (0+255),w,b
 10297  000388  0100               	movlb	0	; () banked
 10298  00038A  1195               	iorwf	(??_auto_mount+1)& (0+255),w,b
 10299  00038C  B4D8               	btfsc	status,2,c
 10300  00038E  D002               	goto	l11731
 10301  000390                     l11727:
 10302                           
 10303                           ; BSR set to: 0
 10304                           ;tff.c: 734: return FR_NO_FILESYSTEM;
 10305  000390  0E0B               	movlw	11
 10306                           
 10307                           ; BSR set to: 0
 10308  000392  0012               	return	
 10309  000394                     l11731:
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;tff.c: 737: fatsize = (WORD)(((WORD)*(volatile BYTE*)((&fs->win[22])+1)<<8)|(WORD)*(vol
      +                          atile BYTE*)(&fs->win[22]));
 10313  000394  0E3F               	movlw	63
 10314  000396  0100               	movlb	0	; () banked
 10315  000398  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10316  00039A  6ED9               	movwf	fsr2l,c
 10317  00039C  0E00               	movlw	0
 10318  00039E  0100               	movlb	0	; () banked
 10319  0003A0  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10320  0003A2  6EDA               	movwf	fsr2h,c
 10321  0003A4  50DF               	movf	indf2,w,c
 10322  0003A6  0100               	movlb	0	; () banked
 10323  0003A8  6F94               	movwf	??_auto_mount& (0+255),b
 10324  0003AA  0100               	movlb	0	; () banked
 10325  0003AC  5194               	movf	??_auto_mount& (0+255),w,b
 10326  0003AE  0100               	movlb	0	; () banked
 10327  0003B0  6F96               	movwf	(??_auto_mount+2)& (0+255),b
 10328  0003B2  6B95               	clrf	(??_auto_mount+1)& (0+255),b
 10329  0003B4  0E3E               	movlw	62
 10330  0003B6  0100               	movlb	0	; () banked
 10331  0003B8  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10332  0003BA  6ED9               	movwf	fsr2l,c
 10333  0003BC  0E00               	movlw	0
 10334  0003BE  0100               	movlb	0	; () banked
 10335  0003C0  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10336  0003C2  6EDA               	movwf	fsr2h,c
 10337  0003C4  50DF               	movf	indf2,w,c
 10338  0003C6  0100               	movlb	0	; () banked
 10339  0003C8  6F97               	movwf	(??_auto_mount+3)& (0+255),b
 10340  0003CA  0100               	movlb	0	; () banked
 10341  0003CC  5197               	movf	(??_auto_mount+3)& (0+255),w,b
 10342  0003CE  0100               	movlb	0	; () banked
 10343  0003D0  1395               	iorwf	(??_auto_mount+1)& (0+255),f,b
 10344  0003D2  0E00               	movlw	0
 10345  0003D4  1396               	iorwf	(??_auto_mount+2)& (0+255),f,b
 10346  0003D6  C095  F0BD         	movff	??_auto_mount+1,auto_mount@fatsize
 10347  0003DA  C096  F0BE         	movff	??_auto_mount+2,auto_mount@fatsize+1
 10348  0003DE  0100               	movlb	0	; () banked
 10349  0003E0  6BBF               	clrf	(auto_mount@fatsize+2)& (0+255),b
 10350  0003E2  6BC0               	clrf	(auto_mount@fatsize+3)& (0+255),b
 10351                           
 10352                           ; BSR set to: 0
 10353                           ;tff.c: 738: if (!fatsize) fatsize = (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[36])+3)
      +                          <<24)|((DWORD)*(volatile BYTE*)((&fs->win[36])+2)<<16)|((WORD)*(volatile BYTE*)((&fs->wi
      +                          n[36])+1)<<8)|*(volatile BYTE*)(&fs->win[36]));
 10354  0003E4  0100               	movlb	0	; () banked
 10355  0003E6  51BD               	movf	auto_mount@fatsize& (0+255),w,b
 10356  0003E8  0100               	movlb	0	; () banked
 10357  0003EA  11BE               	iorwf	(auto_mount@fatsize+1)& (0+255),w,b
 10358  0003EC  0100               	movlb	0	; () banked
 10359  0003EE  11BF               	iorwf	(auto_mount@fatsize+2)& (0+255),w,b
 10360  0003F0  0100               	movlb	0	; () banked
 10361  0003F2  11C0               	iorwf	(auto_mount@fatsize+3)& (0+255),w,b
 10362  0003F4  A4D8               	btfss	status,2,c
 10363  0003F6  D08A               	goto	l784
 10364                           
 10365                           ; BSR set to: 0
 10366  0003F8  0E4D               	movlw	77
 10367  0003FA  0100               	movlb	0	; () banked
 10368  0003FC  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10369  0003FE  6ED9               	movwf	fsr2l,c
 10370  000400  0E00               	movlw	0
 10371  000402  0100               	movlb	0	; () banked
 10372  000404  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10373  000406  6EDA               	movwf	fsr2h,c
 10374  000408  50DF               	movf	indf2,w,c
 10375  00040A  0100               	movlb	0	; () banked
 10376  00040C  6F94               	movwf	??_auto_mount& (0+255),b
 10377  00040E  0100               	movlb	0	; () banked
 10378  000410  5194               	movf	??_auto_mount& (0+255),w,b
 10379  000412  0100               	movlb	0	; () banked
 10380  000414  6F96               	movwf	(??_auto_mount+2)& (0+255),b
 10381  000416  6B95               	clrf	(??_auto_mount+1)& (0+255),b
 10382  000418  0E4E               	movlw	78
 10383  00041A  0100               	movlb	0	; () banked
 10384  00041C  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10385  00041E  6ED9               	movwf	fsr2l,c
 10386  000420  0E00               	movlw	0
 10387  000422  0100               	movlb	0	; () banked
 10388  000424  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10389  000426  6EDA               	movwf	fsr2h,c
 10390  000428  50DF               	movf	indf2,w,c
 10391  00042A  0100               	movlb	0	; () banked
 10392  00042C  6F97               	movwf	(??_auto_mount+3)& (0+255),b
 10393  00042E  C097  F098         	movff	??_auto_mount+3,??_auto_mount+4
 10394  000432  0100               	movlb	0	; () banked
 10395  000434  6B99               	clrf	(??_auto_mount+5)& (0+255),b
 10396  000436  6B9A               	clrf	(??_auto_mount+6)& (0+255),b
 10397  000438  6B9B               	clrf	(??_auto_mount+7)& (0+255),b
 10398  00043A  C099  F09B         	movff	??_auto_mount+5,??_auto_mount+7
 10399  00043E  C098  F09A         	movff	??_auto_mount+4,??_auto_mount+6
 10400  000442  0100               	movlb	0	; () banked
 10401  000444  6B99               	clrf	(??_auto_mount+5)& (0+255),b
 10402  000446  6B98               	clrf	(??_auto_mount+4)& (0+255),b
 10403  000448  0E4F               	movlw	79
 10404  00044A  0100               	movlb	0	; () banked
 10405  00044C  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10406  00044E  6ED9               	movwf	fsr2l,c
 10407  000450  0E00               	movlw	0
 10408  000452  0100               	movlb	0	; () banked
 10409  000454  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10410  000456  6EDA               	movwf	fsr2h,c
 10411  000458  50DF               	movf	indf2,w,c
 10412  00045A  0100               	movlb	0	; () banked
 10413  00045C  6F9C               	movwf	(??_auto_mount+8)& (0+255),b
 10414  00045E  C09C  F09D         	movff	??_auto_mount+8,??_auto_mount+9
 10415  000462  0100               	movlb	0	; () banked
 10416  000464  6B9E               	clrf	(??_auto_mount+10)& (0+255),b
 10417  000466  6B9F               	clrf	(??_auto_mount+11)& (0+255),b
 10418  000468  6BA0               	clrf	(??_auto_mount+12)& (0+255),b
 10419  00046A  C09D  F0A0         	movff	??_auto_mount+9,??_auto_mount+12
 10420  00046E  0100               	movlb	0	; () banked
 10421  000470  6B9F               	clrf	(??_auto_mount+11)& (0+255),b
 10422  000472  6B9E               	clrf	(??_auto_mount+10)& (0+255),b
 10423  000474  6B9D               	clrf	(??_auto_mount+9)& (0+255),b
 10424  000476  0100               	movlb	0	; () banked
 10425  000478  5198               	movf	(??_auto_mount+4)& (0+255),w,b
 10426  00047A  0100               	movlb	0	; () banked
 10427  00047C  119D               	iorwf	(??_auto_mount+9)& (0+255),w,b
 10428  00047E  0100               	movlb	0	; () banked
 10429  000480  6FA1               	movwf	(??_auto_mount+13)& (0+255),b
 10430  000482  0100               	movlb	0	; () banked
 10431  000484  5199               	movf	(??_auto_mount+5)& (0+255),w,b
 10432  000486  0100               	movlb	0	; () banked
 10433  000488  119E               	iorwf	(??_auto_mount+10)& (0+255),w,b
 10434  00048A  0100               	movlb	0	; () banked
 10435  00048C  6FA2               	movwf	(??_auto_mount+14)& (0+255),b
 10436  00048E  0100               	movlb	0	; () banked
 10437  000490  519A               	movf	(??_auto_mount+6)& (0+255),w,b
 10438  000492  0100               	movlb	0	; () banked
 10439  000494  119F               	iorwf	(??_auto_mount+11)& (0+255),w,b
 10440  000496  0100               	movlb	0	; () banked
 10441  000498  6FA3               	movwf	(??_auto_mount+15)& (0+255),b
 10442  00049A  0100               	movlb	0	; () banked
 10443  00049C  519B               	movf	(??_auto_mount+7)& (0+255),w,b
 10444  00049E  0100               	movlb	0	; () banked
 10445  0004A0  11A0               	iorwf	(??_auto_mount+12)& (0+255),w,b
 10446  0004A2  0100               	movlb	0	; () banked
 10447  0004A4  6FA4               	movwf	(??_auto_mount+16)& (0+255),b
 10448  0004A6  0100               	movlb	0	; () banked
 10449  0004A8  5195               	movf	(??_auto_mount+1)& (0+255),w,b
 10450  0004AA  0100               	movlb	0	; () banked
 10451  0004AC  11A1               	iorwf	(??_auto_mount+13)& (0+255),w,b
 10452  0004AE  0100               	movlb	0	; () banked
 10453  0004B0  6FA5               	movwf	(??_auto_mount+17)& (0+255),b
 10454  0004B2  0100               	movlb	0	; () banked
 10455  0004B4  5196               	movf	(??_auto_mount+2)& (0+255),w,b
 10456  0004B6  0100               	movlb	0	; () banked
 10457  0004B8  11A2               	iorwf	(??_auto_mount+14)& (0+255),w,b
 10458  0004BA  0100               	movlb	0	; () banked
 10459  0004BC  6FA6               	movwf	(??_auto_mount+18)& (0+255),b
 10460  0004BE  0E00               	movlw	0
 10461  0004C0  0100               	movlb	0	; () banked
 10462  0004C2  11A3               	iorwf	(??_auto_mount+15)& (0+255),w,b
 10463  0004C4  0100               	movlb	0	; () banked
 10464  0004C6  6FA7               	movwf	(??_auto_mount+19)& (0+255),b
 10465  0004C8  0E00               	movlw	0
 10466  0004CA  0100               	movlb	0	; () banked
 10467  0004CC  11A4               	iorwf	(??_auto_mount+16)& (0+255),w,b
 10468  0004CE  0100               	movlb	0	; () banked
 10469  0004D0  6FA8               	movwf	(??_auto_mount+20)& (0+255),b
 10470  0004D2  0E4C               	movlw	76
 10471  0004D4  0100               	movlb	0	; () banked
 10472  0004D6  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10473  0004D8  6ED9               	movwf	fsr2l,c
 10474  0004DA  0E00               	movlw	0
 10475  0004DC  0100               	movlb	0	; () banked
 10476  0004DE  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10477  0004E0  6EDA               	movwf	fsr2h,c
 10478  0004E2  50DF               	movf	indf2,w,c
 10479  0004E4  0100               	movlb	0	; () banked
 10480  0004E6  6FA9               	movwf	(??_auto_mount+21)& (0+255),b
 10481  0004E8  0100               	movlb	0	; () banked
 10482  0004EA  51A9               	movf	(??_auto_mount+21)& (0+255),w,b
 10483  0004EC  0100               	movlb	0	; () banked
 10484  0004EE  11A5               	iorwf	(??_auto_mount+17)& (0+255),w,b
 10485  0004F0  0100               	movlb	0	; () banked
 10486  0004F2  6FBD               	movwf	auto_mount@fatsize& (0+255),b
 10487  0004F4  0100               	movlb	0	; () banked
 10488  0004F6  51A6               	movf	(??_auto_mount+18)& (0+255),w,b
 10489  0004F8  0100               	movlb	0	; () banked
 10490  0004FA  6FBE               	movwf	(auto_mount@fatsize+1)& (0+255),b
 10491  0004FC  0100               	movlb	0	; () banked
 10492  0004FE  51A7               	movf	(??_auto_mount+19)& (0+255),w,b
 10493  000500  0100               	movlb	0	; () banked
 10494  000502  6FBF               	movwf	(auto_mount@fatsize+2)& (0+255),b
 10495  000504  0100               	movlb	0	; () banked
 10496  000506  51A8               	movf	(??_auto_mount+20)& (0+255),w,b
 10497  000508  0100               	movlb	0	; () banked
 10498  00050A  6FC0               	movwf	(auto_mount@fatsize+3)& (0+255),b
 10499  00050C                     l784:
 10500                           
 10501                           ; BSR set to: 0
 10502                           ;tff.c: 739: fs->sects_fat = (CLUST)fatsize;
 10503  00050C  0100               	movlb	0	; () banked
 10504  00050E  EE20 F014          	lfsr	2,20
 10505  000512  51C2               	movf	auto_mount@fs& (0+255),w,b
 10506  000514  26D9               	addwf	fsr2l,f,c
 10507  000516  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 10508  000518  22DA               	addwfc	fsr2h,f,c
 10509  00051A  C0BD  FFDE         	movff	auto_mount@fatsize,postinc2
 10510  00051E  C0BE  FFDE         	movff	auto_mount@fatsize+1,postinc2
 10511  000522  C0BF  FFDE         	movff	auto_mount@fatsize+2,postinc2
 10512  000526  C0C0  FFDE         	movff	auto_mount@fatsize+3,postinc2
 10513                           
 10514                           ; BSR set to: 0
 10515                           ;tff.c: 740: fs->n_fats = fs->win[16];
 10516  00052A  0100               	movlb	0	; () banked
 10517  00052C  EE20 F038          	lfsr	2,56
 10518  000530  51C2               	movf	auto_mount@fs& (0+255),w,b
 10519  000532  26D9               	addwf	fsr2l,f,c
 10520  000534  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 10521  000536  22DA               	addwfc	fsr2h,f,c
 10522  000538  0100               	movlb	0	; () banked
 10523  00053A  EE10 F026          	lfsr	1,38
 10524  00053E  51C2               	movf	auto_mount@fs& (0+255),w,b
 10525  000540  26E1               	addwf	fsr1l,f,c
 10526  000542  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 10527  000544  22E2               	addwfc	fsr1h,f,c
 10528  000546  CFDF FFE7          	movff	indf2,indf1
 10529                           
 10530                           ; BSR set to: 0
 10531                           ;tff.c: 741: fatsize *= fs->n_fats;
 10532  00054A  C0BD  F016         	movff	auto_mount@fatsize,___lmul@multiplier
 10533  00054E  C0BE  F017         	movff	auto_mount@fatsize+1,___lmul@multiplier+1
 10534  000552  C0BF  F018         	movff	auto_mount@fatsize+2,___lmul@multiplier+2
 10535  000556  C0C0  F019         	movff	auto_mount@fatsize+3,___lmul@multiplier+3
 10536  00055A  0100               	movlb	0	; () banked
 10537  00055C  EE20 F026          	lfsr	2,38
 10538  000560  51C2               	movf	auto_mount@fs& (0+255),w,b
 10539  000562  26D9               	addwf	fsr2l,f,c
 10540  000564  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 10541  000566  22DA               	addwfc	fsr2h,f,c
 10542  000568  50DF               	movf	indf2,w,c
 10543  00056A  0100               	movlb	0	; () banked
 10544  00056C  6F94               	movwf	??_auto_mount& (0+255),b
 10545  00056E  0100               	movlb	0	; () banked
 10546  000570  5194               	movf	??_auto_mount& (0+255),w,b
 10547  000572  6E1A               	movwf	___lmul@multiplicand,c
 10548  000574  6A1B               	clrf	___lmul@multiplicand+1,c
 10549  000576  6A1C               	clrf	___lmul@multiplicand+2,c
 10550  000578  6A1D               	clrf	___lmul@multiplicand+3,c
 10551  00057A  EC52  F025         	call	___lmul	;wreg free
 10552  00057E  C016  F0BD         	movff	?___lmul,auto_mount@fatsize
 10553  000582  C017  F0BE         	movff	?___lmul+1,auto_mount@fatsize+1
 10554  000586  C018  F0BF         	movff	?___lmul+2,auto_mount@fatsize+2
 10555  00058A  C019  F0C0         	movff	?___lmul+3,auto_mount@fatsize+3
 10556                           
 10557                           ;tff.c: 742: fs->fatbase = bootsect + (WORD)(((WORD)*(volatile BYTE*)((&fs->win[14])+1)<
      +                          <8)|(WORD)*(volatile BYTE*)(&fs->win[14]));
 10558  00058E  0E37               	movlw	55
 10559  000590  0100               	movlb	0	; () banked
 10560  000592  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10561  000594  6ED9               	movwf	fsr2l,c
 10562  000596  0E00               	movlw	0
 10563  000598  0100               	movlb	0	; () banked
 10564  00059A  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10565  00059C  6EDA               	movwf	fsr2h,c
 10566  00059E  50DF               	movf	indf2,w,c
 10567  0005A0  0100               	movlb	0	; () banked
 10568  0005A2  6F94               	movwf	??_auto_mount& (0+255),b
 10569  0005A4  0100               	movlb	0	; () banked
 10570  0005A6  5194               	movf	??_auto_mount& (0+255),w,b
 10571  0005A8  0100               	movlb	0	; () banked
 10572  0005AA  6F96               	movwf	(??_auto_mount+2)& (0+255),b
 10573  0005AC  6B95               	clrf	(??_auto_mount+1)& (0+255),b
 10574  0005AE  0E36               	movlw	54
 10575  0005B0  0100               	movlb	0	; () banked
 10576  0005B2  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10577  0005B4  6ED9               	movwf	fsr2l,c
 10578  0005B6  0E00               	movlw	0
 10579  0005B8  0100               	movlb	0	; () banked
 10580  0005BA  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10581  0005BC  6EDA               	movwf	fsr2h,c
 10582  0005BE  50DF               	movf	indf2,w,c
 10583  0005C0  0100               	movlb	0	; () banked
 10584  0005C2  6F97               	movwf	(??_auto_mount+3)& (0+255),b
 10585  0005C4  0100               	movlb	0	; () banked
 10586  0005C6  5197               	movf	(??_auto_mount+3)& (0+255),w,b
 10587  0005C8  0100               	movlb	0	; () banked
 10588  0005CA  1395               	iorwf	(??_auto_mount+1)& (0+255),f,b
 10589  0005CC  0E00               	movlw	0
 10590  0005CE  1396               	iorwf	(??_auto_mount+2)& (0+255),f,b
 10591  0005D0  0100               	movlb	0	; () banked
 10592  0005D2  5195               	movf	(??_auto_mount+1)& (0+255),w,b
 10593  0005D4  0100               	movlb	0	; () banked
 10594  0005D6  25B6               	addwf	auto_mount@bootsect& (0+255),w,b
 10595  0005D8  0100               	movlb	0	; () banked
 10596  0005DA  6F98               	movwf	(??_auto_mount+4)& (0+255),b
 10597  0005DC  0100               	movlb	0	; () banked
 10598  0005DE  5196               	movf	(??_auto_mount+2)& (0+255),w,b
 10599  0005E0  0100               	movlb	0	; () banked
 10600  0005E2  21B7               	addwfc	(auto_mount@bootsect+1)& (0+255),w,b
 10601  0005E4  0100               	movlb	0	; () banked
 10602  0005E6  6F99               	movwf	(??_auto_mount+5)& (0+255),b
 10603  0005E8  0E00               	movlw	0
 10604  0005EA  0100               	movlb	0	; () banked
 10605  0005EC  21B8               	addwfc	(auto_mount@bootsect+2)& (0+255),w,b
 10606  0005EE  0100               	movlb	0	; () banked
 10607  0005F0  6F9A               	movwf	(??_auto_mount+6)& (0+255),b
 10608  0005F2  0E00               	movlw	0
 10609  0005F4  0100               	movlb	0	; () banked
 10610  0005F6  21B9               	addwfc	(auto_mount@bootsect+3)& (0+255),w,b
 10611  0005F8  0100               	movlb	0	; () banked
 10612  0005FA  6F9B               	movwf	(??_auto_mount+7)& (0+255),b
 10613  0005FC  0100               	movlb	0	; () banked
 10614  0005FE  EE20 F008          	lfsr	2,8
 10615  000602  51C2               	movf	auto_mount@fs& (0+255),w,b
 10616  000604  26D9               	addwf	fsr2l,f,c
 10617  000606  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 10618  000608  22DA               	addwfc	fsr2h,f,c
 10619  00060A  C098  FFDE         	movff	??_auto_mount+4,postinc2
 10620  00060E  C099  FFDE         	movff	??_auto_mount+5,postinc2
 10621  000612  C09A  FFDE         	movff	??_auto_mount+6,postinc2
 10622  000616  C09B  FFDE         	movff	??_auto_mount+7,postinc2
 10623                           
 10624                           ; BSR set to: 0
 10625                           ;tff.c: 743: fs->csize = fs->win[13];
 10626  00061A  0100               	movlb	0	; () banked
 10627  00061C  EE20 F035          	lfsr	2,53
 10628  000620  51C2               	movf	auto_mount@fs& (0+255),w,b
 10629  000622  26D9               	addwf	fsr2l,f,c
 10630  000624  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 10631  000626  22DA               	addwfc	fsr2h,f,c
 10632  000628  0100               	movlb	0	; () banked
 10633  00062A  EE10 F025          	lfsr	1,37
 10634  00062E  51C2               	movf	auto_mount@fs& (0+255),w,b
 10635  000630  26E1               	addwf	fsr1l,f,c
 10636  000632  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 10637  000634  22E2               	addwfc	fsr1h,f,c
 10638  000636  CFDF FFE7          	movff	indf2,indf1
 10639                           
 10640                           ; BSR set to: 0
 10641                           ;tff.c: 744: fs->n_rootdir = (WORD)(((WORD)*(volatile BYTE*)((&fs->win[17])+1)<<8)|(WORD
      +                          )*(volatile BYTE*)(&fs->win[17]));
 10642  00063A  0E3A               	movlw	58
 10643  00063C  0100               	movlb	0	; () banked
 10644  00063E  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10645  000640  6ED9               	movwf	fsr2l,c
 10646  000642  0E00               	movlw	0
 10647  000644  0100               	movlb	0	; () banked
 10648  000646  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10649  000648  6EDA               	movwf	fsr2h,c
 10650  00064A  50DF               	movf	indf2,w,c
 10651  00064C  0100               	movlb	0	; () banked
 10652  00064E  6F94               	movwf	??_auto_mount& (0+255),b
 10653  000650  0100               	movlb	0	; () banked
 10654  000652  5194               	movf	??_auto_mount& (0+255),w,b
 10655  000654  0100               	movlb	0	; () banked
 10656  000656  6F96               	movwf	(??_auto_mount+2)& (0+255),b
 10657  000658  6B95               	clrf	(??_auto_mount+1)& (0+255),b
 10658  00065A  0E39               	movlw	57
 10659  00065C  0100               	movlb	0	; () banked
 10660  00065E  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10661  000660  6ED9               	movwf	fsr2l,c
 10662  000662  0E00               	movlw	0
 10663  000664  0100               	movlb	0	; () banked
 10664  000666  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10665  000668  6EDA               	movwf	fsr2h,c
 10666  00066A  50DF               	movf	indf2,w,c
 10667  00066C  0100               	movlb	0	; () banked
 10668  00066E  6F97               	movwf	(??_auto_mount+3)& (0+255),b
 10669  000670  0100               	movlb	0	; () banked
 10670  000672  5197               	movf	(??_auto_mount+3)& (0+255),w,b
 10671  000674  0100               	movlb	0	; () banked
 10672  000676  1395               	iorwf	(??_auto_mount+1)& (0+255),f,b
 10673  000678  0E00               	movlw	0
 10674  00067A  1396               	iorwf	(??_auto_mount+2)& (0+255),f,b
 10675  00067C  0100               	movlb	0	; () banked
 10676  00067E  EE20 F002          	lfsr	2,2
 10677  000682  51C2               	movf	auto_mount@fs& (0+255),w,b
 10678  000684  26D9               	addwf	fsr2l,f,c
 10679  000686  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 10680  000688  22DA               	addwfc	fsr2h,f,c
 10681  00068A  C095  FFDE         	movff	??_auto_mount+1,postinc2
 10682  00068E  C096  FFDD         	movff	??_auto_mount+2,postdec2
 10683                           
 10684                           ; BSR set to: 0
 10685                           ;tff.c: 745: totalsect = (WORD)(((WORD)*(volatile BYTE*)((&fs->win[19])+1)<<8)|(WORD)*(v
      +                          olatile BYTE*)(&fs->win[19]));
 10686  000692  0E3C               	movlw	60
 10687  000694  0100               	movlb	0	; () banked
 10688  000696  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10689  000698  6ED9               	movwf	fsr2l,c
 10690  00069A  0E00               	movlw	0
 10691  00069C  0100               	movlb	0	; () banked
 10692  00069E  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10693  0006A0  6EDA               	movwf	fsr2h,c
 10694  0006A2  50DF               	movf	indf2,w,c
 10695  0006A4  0100               	movlb	0	; () banked
 10696  0006A6  6F94               	movwf	??_auto_mount& (0+255),b
 10697  0006A8  0100               	movlb	0	; () banked
 10698  0006AA  5194               	movf	??_auto_mount& (0+255),w,b
 10699  0006AC  0100               	movlb	0	; () banked
 10700  0006AE  6F96               	movwf	(??_auto_mount+2)& (0+255),b
 10701  0006B0  6B95               	clrf	(??_auto_mount+1)& (0+255),b
 10702  0006B2  0E3B               	movlw	59
 10703  0006B4  0100               	movlb	0	; () banked
 10704  0006B6  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10705  0006B8  6ED9               	movwf	fsr2l,c
 10706  0006BA  0E00               	movlw	0
 10707  0006BC  0100               	movlb	0	; () banked
 10708  0006BE  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10709  0006C0  6EDA               	movwf	fsr2h,c
 10710  0006C2  50DF               	movf	indf2,w,c
 10711  0006C4  0100               	movlb	0	; () banked
 10712  0006C6  6F97               	movwf	(??_auto_mount+3)& (0+255),b
 10713  0006C8  0100               	movlb	0	; () banked
 10714  0006CA  5197               	movf	(??_auto_mount+3)& (0+255),w,b
 10715  0006CC  0100               	movlb	0	; () banked
 10716  0006CE  1395               	iorwf	(??_auto_mount+1)& (0+255),f,b
 10717  0006D0  0E00               	movlw	0
 10718  0006D2  1396               	iorwf	(??_auto_mount+2)& (0+255),f,b
 10719  0006D4  C095  F0B2         	movff	??_auto_mount+1,auto_mount@totalsect
 10720  0006D8  C096  F0B3         	movff	??_auto_mount+2,auto_mount@totalsect+1
 10721  0006DC  0100               	movlb	0	; () banked
 10722  0006DE  6BB4               	clrf	(auto_mount@totalsect+2)& (0+255),b
 10723  0006E0  6BB5               	clrf	(auto_mount@totalsect+3)& (0+255),b
 10724                           
 10725                           ; BSR set to: 0
 10726                           ;tff.c: 746: if (!totalsect) totalsect = (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[32]
      +                          )+3)<<24)|((DWORD)*(volatile BYTE*)((&fs->win[32])+2)<<16)|((WORD)*(volatile BYTE*)((&fs
      +                          ->win[32])+1)<<8)|*(volatile BYTE*)(&fs->win[32]));
 10727  0006E2  0100               	movlb	0	; () banked
 10728  0006E4  51B2               	movf	auto_mount@totalsect& (0+255),w,b
 10729  0006E6  0100               	movlb	0	; () banked
 10730  0006E8  11B3               	iorwf	(auto_mount@totalsect+1)& (0+255),w,b
 10731  0006EA  0100               	movlb	0	; () banked
 10732  0006EC  11B4               	iorwf	(auto_mount@totalsect+2)& (0+255),w,b
 10733  0006EE  0100               	movlb	0	; () banked
 10734  0006F0  11B5               	iorwf	(auto_mount@totalsect+3)& (0+255),w,b
 10735  0006F2  A4D8               	btfss	status,2,c
 10736  0006F4  D08A               	goto	l11753
 10737                           
 10738                           ; BSR set to: 0
 10739  0006F6  0E49               	movlw	73
 10740  0006F8  0100               	movlb	0	; () banked
 10741  0006FA  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10742  0006FC  6ED9               	movwf	fsr2l,c
 10743  0006FE  0E00               	movlw	0
 10744  000700  0100               	movlb	0	; () banked
 10745  000702  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10746  000704  6EDA               	movwf	fsr2h,c
 10747  000706  50DF               	movf	indf2,w,c
 10748  000708  0100               	movlb	0	; () banked
 10749  00070A  6F94               	movwf	??_auto_mount& (0+255),b
 10750  00070C  0100               	movlb	0	; () banked
 10751  00070E  5194               	movf	??_auto_mount& (0+255),w,b
 10752  000710  0100               	movlb	0	; () banked
 10753  000712  6F96               	movwf	(??_auto_mount+2)& (0+255),b
 10754  000714  6B95               	clrf	(??_auto_mount+1)& (0+255),b
 10755  000716  0E4A               	movlw	74
 10756  000718  0100               	movlb	0	; () banked
 10757  00071A  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10758  00071C  6ED9               	movwf	fsr2l,c
 10759  00071E  0E00               	movlw	0
 10760  000720  0100               	movlb	0	; () banked
 10761  000722  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10762  000724  6EDA               	movwf	fsr2h,c
 10763  000726  50DF               	movf	indf2,w,c
 10764  000728  0100               	movlb	0	; () banked
 10765  00072A  6F97               	movwf	(??_auto_mount+3)& (0+255),b
 10766  00072C  C097  F098         	movff	??_auto_mount+3,??_auto_mount+4
 10767  000730  0100               	movlb	0	; () banked
 10768  000732  6B99               	clrf	(??_auto_mount+5)& (0+255),b
 10769  000734  6B9A               	clrf	(??_auto_mount+6)& (0+255),b
 10770  000736  6B9B               	clrf	(??_auto_mount+7)& (0+255),b
 10771  000738  C099  F09B         	movff	??_auto_mount+5,??_auto_mount+7
 10772  00073C  C098  F09A         	movff	??_auto_mount+4,??_auto_mount+6
 10773  000740  0100               	movlb	0	; () banked
 10774  000742  6B99               	clrf	(??_auto_mount+5)& (0+255),b
 10775  000744  6B98               	clrf	(??_auto_mount+4)& (0+255),b
 10776  000746  0E4B               	movlw	75
 10777  000748  0100               	movlb	0	; () banked
 10778  00074A  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10779  00074C  6ED9               	movwf	fsr2l,c
 10780  00074E  0E00               	movlw	0
 10781  000750  0100               	movlb	0	; () banked
 10782  000752  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10783  000754  6EDA               	movwf	fsr2h,c
 10784  000756  50DF               	movf	indf2,w,c
 10785  000758  0100               	movlb	0	; () banked
 10786  00075A  6F9C               	movwf	(??_auto_mount+8)& (0+255),b
 10787  00075C  C09C  F09D         	movff	??_auto_mount+8,??_auto_mount+9
 10788  000760  0100               	movlb	0	; () banked
 10789  000762  6B9E               	clrf	(??_auto_mount+10)& (0+255),b
 10790  000764  6B9F               	clrf	(??_auto_mount+11)& (0+255),b
 10791  000766  6BA0               	clrf	(??_auto_mount+12)& (0+255),b
 10792  000768  C09D  F0A0         	movff	??_auto_mount+9,??_auto_mount+12
 10793  00076C  0100               	movlb	0	; () banked
 10794  00076E  6B9F               	clrf	(??_auto_mount+11)& (0+255),b
 10795  000770  6B9E               	clrf	(??_auto_mount+10)& (0+255),b
 10796  000772  6B9D               	clrf	(??_auto_mount+9)& (0+255),b
 10797  000774  0100               	movlb	0	; () banked
 10798  000776  5198               	movf	(??_auto_mount+4)& (0+255),w,b
 10799  000778  0100               	movlb	0	; () banked
 10800  00077A  119D               	iorwf	(??_auto_mount+9)& (0+255),w,b
 10801  00077C  0100               	movlb	0	; () banked
 10802  00077E  6FA1               	movwf	(??_auto_mount+13)& (0+255),b
 10803  000780  0100               	movlb	0	; () banked
 10804  000782  5199               	movf	(??_auto_mount+5)& (0+255),w,b
 10805  000784  0100               	movlb	0	; () banked
 10806  000786  119E               	iorwf	(??_auto_mount+10)& (0+255),w,b
 10807  000788  0100               	movlb	0	; () banked
 10808  00078A  6FA2               	movwf	(??_auto_mount+14)& (0+255),b
 10809  00078C  0100               	movlb	0	; () banked
 10810  00078E  519A               	movf	(??_auto_mount+6)& (0+255),w,b
 10811  000790  0100               	movlb	0	; () banked
 10812  000792  119F               	iorwf	(??_auto_mount+11)& (0+255),w,b
 10813  000794  0100               	movlb	0	; () banked
 10814  000796  6FA3               	movwf	(??_auto_mount+15)& (0+255),b
 10815  000798  0100               	movlb	0	; () banked
 10816  00079A  519B               	movf	(??_auto_mount+7)& (0+255),w,b
 10817  00079C  0100               	movlb	0	; () banked
 10818  00079E  11A0               	iorwf	(??_auto_mount+12)& (0+255),w,b
 10819  0007A0  0100               	movlb	0	; () banked
 10820  0007A2  6FA4               	movwf	(??_auto_mount+16)& (0+255),b
 10821  0007A4  0100               	movlb	0	; () banked
 10822  0007A6  5195               	movf	(??_auto_mount+1)& (0+255),w,b
 10823  0007A8  0100               	movlb	0	; () banked
 10824  0007AA  11A1               	iorwf	(??_auto_mount+13)& (0+255),w,b
 10825  0007AC  0100               	movlb	0	; () banked
 10826  0007AE  6FA5               	movwf	(??_auto_mount+17)& (0+255),b
 10827  0007B0  0100               	movlb	0	; () banked
 10828  0007B2  5196               	movf	(??_auto_mount+2)& (0+255),w,b
 10829  0007B4  0100               	movlb	0	; () banked
 10830  0007B6  11A2               	iorwf	(??_auto_mount+14)& (0+255),w,b
 10831  0007B8  0100               	movlb	0	; () banked
 10832  0007BA  6FA6               	movwf	(??_auto_mount+18)& (0+255),b
 10833  0007BC  0E00               	movlw	0
 10834  0007BE  0100               	movlb	0	; () banked
 10835  0007C0  11A3               	iorwf	(??_auto_mount+15)& (0+255),w,b
 10836  0007C2  0100               	movlb	0	; () banked
 10837  0007C4  6FA7               	movwf	(??_auto_mount+19)& (0+255),b
 10838  0007C6  0E00               	movlw	0
 10839  0007C8  0100               	movlb	0	; () banked
 10840  0007CA  11A4               	iorwf	(??_auto_mount+16)& (0+255),w,b
 10841  0007CC  0100               	movlb	0	; () banked
 10842  0007CE  6FA8               	movwf	(??_auto_mount+20)& (0+255),b
 10843  0007D0  0E48               	movlw	72
 10844  0007D2  0100               	movlb	0	; () banked
 10845  0007D4  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10846  0007D6  6ED9               	movwf	fsr2l,c
 10847  0007D8  0E00               	movlw	0
 10848  0007DA  0100               	movlb	0	; () banked
 10849  0007DC  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10850  0007DE  6EDA               	movwf	fsr2h,c
 10851  0007E0  50DF               	movf	indf2,w,c
 10852  0007E2  0100               	movlb	0	; () banked
 10853  0007E4  6FA9               	movwf	(??_auto_mount+21)& (0+255),b
 10854  0007E6  0100               	movlb	0	; () banked
 10855  0007E8  51A9               	movf	(??_auto_mount+21)& (0+255),w,b
 10856  0007EA  0100               	movlb	0	; () banked
 10857  0007EC  11A5               	iorwf	(??_auto_mount+17)& (0+255),w,b
 10858  0007EE  0100               	movlb	0	; () banked
 10859  0007F0  6FB2               	movwf	auto_mount@totalsect& (0+255),b
 10860  0007F2  0100               	movlb	0	; () banked
 10861  0007F4  51A6               	movf	(??_auto_mount+18)& (0+255),w,b
 10862  0007F6  0100               	movlb	0	; () banked
 10863  0007F8  6FB3               	movwf	(auto_mount@totalsect+1)& (0+255),b
 10864  0007FA  0100               	movlb	0	; () banked
 10865  0007FC  51A7               	movf	(??_auto_mount+19)& (0+255),w,b
 10866  0007FE  0100               	movlb	0	; () banked
 10867  000800  6FB4               	movwf	(auto_mount@totalsect+2)& (0+255),b
 10868  000802  0100               	movlb	0	; () banked
 10869  000804  51A8               	movf	(??_auto_mount+20)& (0+255),w,b
 10870  000806  0100               	movlb	0	; () banked
 10871  000808  6FB5               	movwf	(auto_mount@totalsect+3)& (0+255),b
 10872  00080A                     l11753:
 10873                           
 10874                           ; BSR set to: 0
 10875                           ;tff.c: 747: fs->max_clust = maxclust = (totalsect
 10876                           ;tff.c: 748: - (WORD)(((WORD)*(volatile BYTE*)((&fs->win[14])+1)<<8)|(WORD)*(volatile BY
      +                          TE*)(&fs->win[14])) - fatsize - fs->n_rootdir / 16
 10877                           ;tff.c: 749: ) / fs->csize + 2;
 10878  00080A  0100               	movlb	0	; () banked
 10879  00080C  EE20 F002          	lfsr	2,2
 10880  000810  51C2               	movf	auto_mount@fs& (0+255),w,b
 10881  000812  26D9               	addwf	fsr2l,f,c
 10882  000814  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 10883  000816  22DA               	addwfc	fsr2h,f,c
 10884  000818  CFDE F094          	movff	postinc2,??_auto_mount
 10885  00081C  CFDD F095          	movff	postdec2,??_auto_mount+1
 10886  000820  0E04               	movlw	4
 10887  000822  0100               	movlb	0	; () banked
 10888  000824  6F96               	movwf	(??_auto_mount+2)& (0+255),b
 10889  000826                     u13405:
 10890  000826  0100               	movlb	0	; () banked
 10891  000828  90D8               	bcf	status,0,c
 10892  00082A  3395               	rrcf	(??_auto_mount+1)& (0+255),f,b
 10893  00082C  3394               	rrcf	??_auto_mount& (0+255),f,b
 10894  00082E  0100               	movlb	0	; () banked
 10895  000830  2F96               	decfsz	(??_auto_mount+2)& (0+255),f,b
 10896  000832  D7F9               	goto	u13405
 10897  000834  0E37               	movlw	55
 10898  000836  0100               	movlb	0	; () banked
 10899  000838  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10900  00083A  6ED9               	movwf	fsr2l,c
 10901  00083C  0E00               	movlw	0
 10902  00083E  0100               	movlb	0	; () banked
 10903  000840  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10904  000842  6EDA               	movwf	fsr2h,c
 10905  000844  50DF               	movf	indf2,w,c
 10906  000846  0100               	movlb	0	; () banked
 10907  000848  6F97               	movwf	(??_auto_mount+3)& (0+255),b
 10908  00084A  0100               	movlb	0	; () banked
 10909  00084C  5197               	movf	(??_auto_mount+3)& (0+255),w,b
 10910  00084E  0100               	movlb	0	; () banked
 10911  000850  6F99               	movwf	(??_auto_mount+5)& (0+255),b
 10912  000852  6B98               	clrf	(??_auto_mount+4)& (0+255),b
 10913  000854  0E36               	movlw	54
 10914  000856  0100               	movlb	0	; () banked
 10915  000858  25C2               	addwf	auto_mount@fs& (0+255),w,b
 10916  00085A  6ED9               	movwf	fsr2l,c
 10917  00085C  0E00               	movlw	0
 10918  00085E  0100               	movlb	0	; () banked
 10919  000860  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10920  000862  6EDA               	movwf	fsr2h,c
 10921  000864  50DF               	movf	indf2,w,c
 10922  000866  0100               	movlb	0	; () banked
 10923  000868  6F9A               	movwf	(??_auto_mount+6)& (0+255),b
 10924  00086A  0100               	movlb	0	; () banked
 10925  00086C  519A               	movf	(??_auto_mount+6)& (0+255),w,b
 10926  00086E  0100               	movlb	0	; () banked
 10927  000870  1398               	iorwf	(??_auto_mount+4)& (0+255),f,b
 10928  000872  0E00               	movlw	0
 10929  000874  1399               	iorwf	(??_auto_mount+5)& (0+255),f,b
 10930  000876  0100               	movlb	0	; () banked
 10931  000878  5198               	movf	(??_auto_mount+4)& (0+255),w,b
 10932  00087A  0100               	movlb	0	; () banked
 10933  00087C  2594               	addwf	??_auto_mount& (0+255),w,b
 10934  00087E  0100               	movlb	0	; () banked
 10935  000880  6F9B               	movwf	(??_auto_mount+7)& (0+255),b
 10936  000882  0100               	movlb	0	; () banked
 10937  000884  5199               	movf	(??_auto_mount+5)& (0+255),w,b
 10938  000886  0100               	movlb	0	; () banked
 10939  000888  2195               	addwfc	(??_auto_mount+1)& (0+255),w,b
 10940  00088A  0100               	movlb	0	; () banked
 10941  00088C  6F9C               	movwf	(??_auto_mount+8)& (0+255),b
 10942  00088E  0100               	movlb	0	; () banked
 10943  000890  6B9D               	clrf	(??_auto_mount+9)& (0+255),b
 10944  000892  B0D8               	btfsc	status,0,c
 10945  000894  2B9D               	incf	(??_auto_mount+9)& (0+255),f,b
 10946  000896  0100               	movlb	0	; () banked
 10947  000898  6B9E               	clrf	(??_auto_mount+10)& (0+255),b
 10948  00089A  0100               	movlb	0	; () banked
 10949  00089C  51BD               	movf	auto_mount@fatsize& (0+255),w,b
 10950  00089E  0100               	movlb	0	; () banked
 10951  0008A0  259B               	addwf	(??_auto_mount+7)& (0+255),w,b
 10952  0008A2  0100               	movlb	0	; () banked
 10953  0008A4  6F9F               	movwf	(??_auto_mount+11)& (0+255),b
 10954  0008A6  0100               	movlb	0	; () banked
 10955  0008A8  51BE               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 10956  0008AA  0100               	movlb	0	; () banked
 10957  0008AC  219C               	addwfc	(??_auto_mount+8)& (0+255),w,b
 10958  0008AE  0100               	movlb	0	; () banked
 10959  0008B0  6FA0               	movwf	(??_auto_mount+12)& (0+255),b
 10960  0008B2  0100               	movlb	0	; () banked
 10961  0008B4  51BF               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 10962  0008B6  0100               	movlb	0	; () banked
 10963  0008B8  219D               	addwfc	(??_auto_mount+9)& (0+255),w,b
 10964  0008BA  0100               	movlb	0	; () banked
 10965  0008BC  6FA1               	movwf	(??_auto_mount+13)& (0+255),b
 10966  0008BE  0100               	movlb	0	; () banked
 10967  0008C0  51C0               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 10968  0008C2  0100               	movlb	0	; () banked
 10969  0008C4  219E               	addwfc	(??_auto_mount+10)& (0+255),w,b
 10970  0008C6  0100               	movlb	0	; () banked
 10971  0008C8  6FA2               	movwf	(??_auto_mount+14)& (0+255),b
 10972  0008CA  0100               	movlb	0	; () banked
 10973  0008CC  1F9F               	comf	(??_auto_mount+11)& (0+255),f,b
 10974  0008CE  1FA0               	comf	(??_auto_mount+12)& (0+255),f,b
 10975  0008D0  1FA1               	comf	(??_auto_mount+13)& (0+255),f,b
 10976  0008D2  1FA2               	comf	(??_auto_mount+14)& (0+255),f,b
 10977  0008D4  2B9F               	incf	(??_auto_mount+11)& (0+255),f,b
 10978  0008D6  0E00               	movlw	0
 10979  0008D8  23A0               	addwfc	(??_auto_mount+12)& (0+255),f,b
 10980  0008DA  23A1               	addwfc	(??_auto_mount+13)& (0+255),f,b
 10981  0008DC  23A2               	addwfc	(??_auto_mount+14)& (0+255),f,b
 10982  0008DE  0100               	movlb	0	; () banked
 10983  0008E0  51B2               	movf	auto_mount@totalsect& (0+255),w,b
 10984  0008E2  0100               	movlb	0	; () banked
 10985  0008E4  259F               	addwf	(??_auto_mount+11)& (0+255),w,b
 10986  0008E6  6E16               	movwf	___lldiv@dividend,c
 10987  0008E8  0100               	movlb	0	; () banked
 10988  0008EA  51B3               	movf	(auto_mount@totalsect+1)& (0+255),w,b
 10989  0008EC  0100               	movlb	0	; () banked
 10990  0008EE  21A0               	addwfc	(??_auto_mount+12)& (0+255),w,b
 10991  0008F0  6E17               	movwf	___lldiv@dividend+1,c
 10992  0008F2  0100               	movlb	0	; () banked
 10993  0008F4  51B4               	movf	(auto_mount@totalsect+2)& (0+255),w,b
 10994  0008F6  0100               	movlb	0	; () banked
 10995  0008F8  21A1               	addwfc	(??_auto_mount+13)& (0+255),w,b
 10996  0008FA  6E18               	movwf	___lldiv@dividend+2,c
 10997  0008FC  0100               	movlb	0	; () banked
 10998  0008FE  51B5               	movf	(auto_mount@totalsect+3)& (0+255),w,b
 10999  000900  0100               	movlb	0	; () banked
 11000  000902  21A2               	addwfc	(??_auto_mount+14)& (0+255),w,b
 11001  000904  6E19               	movwf	___lldiv@dividend+3,c
 11002  000906  0100               	movlb	0	; () banked
 11003  000908  EE20 F025          	lfsr	2,37
 11004  00090C  51C2               	movf	auto_mount@fs& (0+255),w,b
 11005  00090E  26D9               	addwf	fsr2l,f,c
 11006  000910  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 11007  000912  22DA               	addwfc	fsr2h,f,c
 11008  000914  50DF               	movf	indf2,w,c
 11009  000916  0100               	movlb	0	; () banked
 11010  000918  6FA3               	movwf	(??_auto_mount+15)& (0+255),b
 11011  00091A  0100               	movlb	0	; () banked
 11012  00091C  51A3               	movf	(??_auto_mount+15)& (0+255),w,b
 11013  00091E  6E1A               	movwf	___lldiv@divisor,c
 11014  000920  6A1B               	clrf	___lldiv@divisor+1,c
 11015  000922  6A1C               	clrf	___lldiv@divisor+2,c
 11016  000924  6A1D               	clrf	___lldiv@divisor+3,c
 11017  000926  EC56  F023         	call	___lldiv	;wreg free
 11018  00092A  0E02               	movlw	2
 11019  00092C  2416               	addwf	?___lldiv,w,c
 11020  00092E  0100               	movlb	0	; () banked
 11021  000930  6FAE               	movwf	auto_mount@maxclust& (0+255),b
 11022  000932  0E00               	movlw	0
 11023  000934  2017               	addwfc	?___lldiv+1,w,c
 11024  000936  0100               	movlb	0	; () banked
 11025  000938  6FAF               	movwf	(auto_mount@maxclust+1)& (0+255),b
 11026  00093A  0E00               	movlw	0
 11027  00093C  2018               	addwfc	?___lldiv+2,w,c
 11028  00093E  0100               	movlb	0	; () banked
 11029  000940  6FB0               	movwf	(auto_mount@maxclust+2)& (0+255),b
 11030  000942  0E00               	movlw	0
 11031  000944  2019               	addwfc	?___lldiv+3,w,c
 11032  000946  0100               	movlb	0	; () banked
 11033  000948  6FB1               	movwf	(auto_mount@maxclust+3)& (0+255),b
 11034  00094A  0100               	movlb	0	; () banked
 11035  00094C  EE20 F018          	lfsr	2,24
 11036  000950  51C2               	movf	auto_mount@fs& (0+255),w,b
 11037  000952  26D9               	addwf	fsr2l,f,c
 11038  000954  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 11039  000956  22DA               	addwfc	fsr2h,f,c
 11040  000958  C0AE  FFDE         	movff	auto_mount@maxclust,postinc2
 11041  00095C  C0AF  FFDE         	movff	auto_mount@maxclust+1,postinc2
 11042  000960  C0B0  FFDE         	movff	auto_mount@maxclust+2,postinc2
 11043  000964  C0B1  FFDE         	movff	auto_mount@maxclust+3,postinc2
 11044                           
 11045                           ; BSR set to: 0
 11046                           ;tff.c: 751: fmt = 1;
 11047  000968  0E01               	movlw	1
 11048  00096A  0100               	movlb	0	; () banked
 11049  00096C  6FC1               	movwf	auto_mount@fmt& (0+255),b
 11050                           
 11051                           ; BSR set to: 0
 11052                           ;tff.c: 752: if (maxclust >= 0xFF7) fmt = 2;
 11053  00096E  0100               	movlb	0	; () banked
 11054  000970  51B1               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 11055  000972  0100               	movlb	0	; () banked
 11056  000974  11B0               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 11057  000976  E108               	bnz	u13410
 11058  000978  0EF7               	movlw	247
 11059  00097A  0100               	movlb	0	; () banked
 11060  00097C  5DAE               	subwf	auto_mount@maxclust& (0+255),w,b
 11061  00097E  0E0F               	movlw	15
 11062  000980  0100               	movlb	0	; () banked
 11063  000982  59AF               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 11064  000984  A0D8               	btfss	status,0,c
 11065  000986  D003               	goto	l11761
 11066  000988                     u13410:
 11067                           
 11068                           ; BSR set to: 0
 11069  000988  0E02               	movlw	2
 11070  00098A  0100               	movlb	0	; () banked
 11071  00098C  6FC1               	movwf	auto_mount@fmt& (0+255),b
 11072  00098E                     l11761:
 11073                           
 11074                           ; BSR set to: 0
 11075                           ;tff.c: 753: if (maxclust >= 0xFFF7)
 11076  00098E  0100               	movlb	0	; () banked
 11077  000990  51B1               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 11078  000992  0100               	movlb	0	; () banked
 11079  000994  11B0               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 11080  000996  E108               	bnz	u13420
 11081  000998  0EF7               	movlw	247
 11082  00099A  0100               	movlb	0	; () banked
 11083  00099C  5DAE               	subwf	auto_mount@maxclust& (0+255),w,b
 11084  00099E  0EFF               	movlw	255
 11085  0009A0  0100               	movlb	0	; () banked
 11086  0009A2  59AF               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 11087  0009A4  A0D8               	btfss	status,0,c
 11088  0009A6  D003               	goto	l11765
 11089  0009A8                     u13420:
 11090                           
 11091                           ; BSR set to: 0
 11092                           ;tff.c: 757: fmt = 3;
 11093  0009A8  0E03               	movlw	3
 11094  0009AA  0100               	movlb	0	; () banked
 11095  0009AC  6FC1               	movwf	auto_mount@fmt& (0+255),b
 11096  0009AE                     l11765:
 11097                           
 11098                           ; BSR set to: 0
 11099                           ;tff.c: 758: if (fmt == 3)
 11100  0009AE  0E03               	movlw	3
 11101  0009B0  0100               	movlb	0	; () banked
 11102  0009B2  19C1               	xorwf	auto_mount@fmt& (0+255),w,b
 11103  0009B4  A4D8               	btfss	status,2,c
 11104  0009B6  D09A               	goto	l11769
 11105                           
 11106                           ; BSR set to: 0
 11107                           ;tff.c: 759: fs->dirbase = (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[44])+3)<<24)|((DW
      +                          ORD)*(volatile BYTE*)((&fs->win[44])+2)<<16)|((WORD)*(volatile BYTE*)((&fs->win[44])+1)<
      +                          <8)|*(volatile BYTE*)(&fs->win[44]));
 11108  0009B8  0E55               	movlw	85
 11109  0009BA  0100               	movlb	0	; () banked
 11110  0009BC  25C2               	addwf	auto_mount@fs& (0+255),w,b
 11111  0009BE  6ED9               	movwf	fsr2l,c
 11112  0009C0  0E00               	movlw	0
 11113  0009C2  0100               	movlb	0	; () banked
 11114  0009C4  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11115  0009C6  6EDA               	movwf	fsr2h,c
 11116  0009C8  50DF               	movf	indf2,w,c
 11117  0009CA  0100               	movlb	0	; () banked
 11118  0009CC  6F94               	movwf	??_auto_mount& (0+255),b
 11119  0009CE  0100               	movlb	0	; () banked
 11120  0009D0  5194               	movf	??_auto_mount& (0+255),w,b
 11121  0009D2  0100               	movlb	0	; () banked
 11122  0009D4  6F96               	movwf	(??_auto_mount+2)& (0+255),b
 11123  0009D6  6B95               	clrf	(??_auto_mount+1)& (0+255),b
 11124  0009D8  0E56               	movlw	86
 11125  0009DA  0100               	movlb	0	; () banked
 11126  0009DC  25C2               	addwf	auto_mount@fs& (0+255),w,b
 11127  0009DE  6ED9               	movwf	fsr2l,c
 11128  0009E0  0E00               	movlw	0
 11129  0009E2  0100               	movlb	0	; () banked
 11130  0009E4  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11131  0009E6  6EDA               	movwf	fsr2h,c
 11132  0009E8  50DF               	movf	indf2,w,c
 11133  0009EA  0100               	movlb	0	; () banked
 11134  0009EC  6F97               	movwf	(??_auto_mount+3)& (0+255),b
 11135  0009EE  C097  F098         	movff	??_auto_mount+3,??_auto_mount+4
 11136  0009F2  0100               	movlb	0	; () banked
 11137  0009F4  6B99               	clrf	(??_auto_mount+5)& (0+255),b
 11138  0009F6  6B9A               	clrf	(??_auto_mount+6)& (0+255),b
 11139  0009F8  6B9B               	clrf	(??_auto_mount+7)& (0+255),b
 11140  0009FA  C099  F09B         	movff	??_auto_mount+5,??_auto_mount+7
 11141  0009FE  C098  F09A         	movff	??_auto_mount+4,??_auto_mount+6
 11142  000A02  0100               	movlb	0	; () banked
 11143  000A04  6B99               	clrf	(??_auto_mount+5)& (0+255),b
 11144  000A06  6B98               	clrf	(??_auto_mount+4)& (0+255),b
 11145  000A08  0E57               	movlw	87
 11146  000A0A  0100               	movlb	0	; () banked
 11147  000A0C  25C2               	addwf	auto_mount@fs& (0+255),w,b
 11148  000A0E  6ED9               	movwf	fsr2l,c
 11149  000A10  0E00               	movlw	0
 11150  000A12  0100               	movlb	0	; () banked
 11151  000A14  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11152  000A16  6EDA               	movwf	fsr2h,c
 11153  000A18  50DF               	movf	indf2,w,c
 11154  000A1A  0100               	movlb	0	; () banked
 11155  000A1C  6F9C               	movwf	(??_auto_mount+8)& (0+255),b
 11156  000A1E  C09C  F09D         	movff	??_auto_mount+8,??_auto_mount+9
 11157  000A22  0100               	movlb	0	; () banked
 11158  000A24  6B9E               	clrf	(??_auto_mount+10)& (0+255),b
 11159  000A26  6B9F               	clrf	(??_auto_mount+11)& (0+255),b
 11160  000A28  6BA0               	clrf	(??_auto_mount+12)& (0+255),b
 11161  000A2A  C09D  F0A0         	movff	??_auto_mount+9,??_auto_mount+12
 11162  000A2E  0100               	movlb	0	; () banked
 11163  000A30  6B9F               	clrf	(??_auto_mount+11)& (0+255),b
 11164  000A32  6B9E               	clrf	(??_auto_mount+10)& (0+255),b
 11165  000A34  6B9D               	clrf	(??_auto_mount+9)& (0+255),b
 11166  000A36  0100               	movlb	0	; () banked
 11167  000A38  5198               	movf	(??_auto_mount+4)& (0+255),w,b
 11168  000A3A  0100               	movlb	0	; () banked
 11169  000A3C  119D               	iorwf	(??_auto_mount+9)& (0+255),w,b
 11170  000A3E  0100               	movlb	0	; () banked
 11171  000A40  6FA1               	movwf	(??_auto_mount+13)& (0+255),b
 11172  000A42  0100               	movlb	0	; () banked
 11173  000A44  5199               	movf	(??_auto_mount+5)& (0+255),w,b
 11174  000A46  0100               	movlb	0	; () banked
 11175  000A48  119E               	iorwf	(??_auto_mount+10)& (0+255),w,b
 11176  000A4A  0100               	movlb	0	; () banked
 11177  000A4C  6FA2               	movwf	(??_auto_mount+14)& (0+255),b
 11178  000A4E  0100               	movlb	0	; () banked
 11179  000A50  519A               	movf	(??_auto_mount+6)& (0+255),w,b
 11180  000A52  0100               	movlb	0	; () banked
 11181  000A54  119F               	iorwf	(??_auto_mount+11)& (0+255),w,b
 11182  000A56  0100               	movlb	0	; () banked
 11183  000A58  6FA3               	movwf	(??_auto_mount+15)& (0+255),b
 11184  000A5A  0100               	movlb	0	; () banked
 11185  000A5C  519B               	movf	(??_auto_mount+7)& (0+255),w,b
 11186  000A5E  0100               	movlb	0	; () banked
 11187  000A60  11A0               	iorwf	(??_auto_mount+12)& (0+255),w,b
 11188  000A62  0100               	movlb	0	; () banked
 11189  000A64  6FA4               	movwf	(??_auto_mount+16)& (0+255),b
 11190  000A66  0100               	movlb	0	; () banked
 11191  000A68  5195               	movf	(??_auto_mount+1)& (0+255),w,b
 11192  000A6A  0100               	movlb	0	; () banked
 11193  000A6C  11A1               	iorwf	(??_auto_mount+13)& (0+255),w,b
 11194  000A6E  0100               	movlb	0	; () banked
 11195  000A70  6FA5               	movwf	(??_auto_mount+17)& (0+255),b
 11196  000A72  0100               	movlb	0	; () banked
 11197  000A74  5196               	movf	(??_auto_mount+2)& (0+255),w,b
 11198  000A76  0100               	movlb	0	; () banked
 11199  000A78  11A2               	iorwf	(??_auto_mount+14)& (0+255),w,b
 11200  000A7A  0100               	movlb	0	; () banked
 11201  000A7C  6FA6               	movwf	(??_auto_mount+18)& (0+255),b
 11202  000A7E  0E00               	movlw	0
 11203  000A80  0100               	movlb	0	; () banked
 11204  000A82  11A3               	iorwf	(??_auto_mount+15)& (0+255),w,b
 11205  000A84  0100               	movlb	0	; () banked
 11206  000A86  6FA7               	movwf	(??_auto_mount+19)& (0+255),b
 11207  000A88  0E00               	movlw	0
 11208  000A8A  0100               	movlb	0	; () banked
 11209  000A8C  11A4               	iorwf	(??_auto_mount+16)& (0+255),w,b
 11210  000A8E  0100               	movlb	0	; () banked
 11211  000A90  6FA8               	movwf	(??_auto_mount+20)& (0+255),b
 11212  000A92  0E54               	movlw	84
 11213  000A94  0100               	movlb	0	; () banked
 11214  000A96  25C2               	addwf	auto_mount@fs& (0+255),w,b
 11215  000A98  6ED9               	movwf	fsr2l,c
 11216  000A9A  0E00               	movlw	0
 11217  000A9C  0100               	movlb	0	; () banked
 11218  000A9E  21C3               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11219  000AA0  6EDA               	movwf	fsr2h,c
 11220  000AA2  50DF               	movf	indf2,w,c
 11221  000AA4  0100               	movlb	0	; () banked
 11222  000AA6  6FA9               	movwf	(??_auto_mount+21)& (0+255),b
 11223  000AA8  0100               	movlb	0	; () banked
 11224  000AAA  51A9               	movf	(??_auto_mount+21)& (0+255),w,b
 11225  000AAC  0100               	movlb	0	; () banked
 11226  000AAE  11A5               	iorwf	(??_auto_mount+17)& (0+255),w,b
 11227  000AB0  0100               	movlb	0	; () banked
 11228  000AB2  6FAA               	movwf	(??_auto_mount+22)& (0+255),b
 11229  000AB4  0100               	movlb	0	; () banked
 11230  000AB6  51A6               	movf	(??_auto_mount+18)& (0+255),w,b
 11231  000AB8  0100               	movlb	0	; () banked
 11232  000ABA  6FAB               	movwf	(??_auto_mount+23)& (0+255),b
 11233  000ABC  0100               	movlb	0	; () banked
 11234  000ABE  51A7               	movf	(??_auto_mount+19)& (0+255),w,b
 11235  000AC0  0100               	movlb	0	; () banked
 11236  000AC2  6FAC               	movwf	(??_auto_mount+24)& (0+255),b
 11237  000AC4  0100               	movlb	0	; () banked
 11238  000AC6  51A8               	movf	(??_auto_mount+20)& (0+255),w,b
 11239  000AC8  0100               	movlb	0	; () banked
 11240  000ACA  6FAD               	movwf	(??_auto_mount+25)& (0+255),b
 11241  000ACC  0100               	movlb	0	; () banked
 11242  000ACE  EE20 F00C          	lfsr	2,12
 11243  000AD2  51C2               	movf	auto_mount@fs& (0+255),w,b
 11244  000AD4  26D9               	addwf	fsr2l,f,c
 11245  000AD6  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 11246  000AD8  22DA               	addwfc	fsr2h,f,c
 11247  000ADA  C0AA  FFDE         	movff	??_auto_mount+22,postinc2
 11248  000ADE  C0AB  FFDE         	movff	??_auto_mount+23,postinc2
 11249  000AE2  C0AC  FFDE         	movff	??_auto_mount+24,postinc2
 11250  000AE6  C0AD  FFDE         	movff	??_auto_mount+25,postinc2
 11251  000AEA  D036               	goto	l789
 11252  000AEC                     l11769:
 11253                           
 11254                           ; BSR set to: 0
 11255                           ;tff.c: 760: else
 11256                           ;tff.c: 762: fs->dirbase = fs->fatbase + fatsize;
 11257  000AEC  0100               	movlb	0	; () banked
 11258  000AEE  EE20 F008          	lfsr	2,8
 11259  000AF2  51C2               	movf	auto_mount@fs& (0+255),w,b
 11260  000AF4  26D9               	addwf	fsr2l,f,c
 11261  000AF6  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 11262  000AF8  22DA               	addwfc	fsr2h,f,c
 11263  000AFA  CFDE F094          	movff	postinc2,??_auto_mount
 11264  000AFE  CFDE F095          	movff	postinc2,??_auto_mount+1
 11265  000B02  CFDE F096          	movff	postinc2,??_auto_mount+2
 11266  000B06  CFDE F097          	movff	postinc2,??_auto_mount+3
 11267  000B0A  0100               	movlb	0	; () banked
 11268  000B0C  51BD               	movf	auto_mount@fatsize& (0+255),w,b
 11269  000B0E  0100               	movlb	0	; () banked
 11270  000B10  2594               	addwf	??_auto_mount& (0+255),w,b
 11271  000B12  0100               	movlb	0	; () banked
 11272  000B14  6F98               	movwf	(??_auto_mount+4)& (0+255),b
 11273  000B16  0100               	movlb	0	; () banked
 11274  000B18  51BE               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 11275  000B1A  0100               	movlb	0	; () banked
 11276  000B1C  2195               	addwfc	(??_auto_mount+1)& (0+255),w,b
 11277  000B1E  0100               	movlb	0	; () banked
 11278  000B20  6F99               	movwf	(??_auto_mount+5)& (0+255),b
 11279  000B22  0100               	movlb	0	; () banked
 11280  000B24  51BF               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 11281  000B26  0100               	movlb	0	; () banked
 11282  000B28  2196               	addwfc	(??_auto_mount+2)& (0+255),w,b
 11283  000B2A  0100               	movlb	0	; () banked
 11284  000B2C  6F9A               	movwf	(??_auto_mount+6)& (0+255),b
 11285  000B2E  0100               	movlb	0	; () banked
 11286  000B30  51C0               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 11287  000B32  0100               	movlb	0	; () banked
 11288  000B34  2197               	addwfc	(??_auto_mount+3)& (0+255),w,b
 11289  000B36  0100               	movlb	0	; () banked
 11290  000B38  6F9B               	movwf	(??_auto_mount+7)& (0+255),b
 11291  000B3A  0100               	movlb	0	; () banked
 11292  000B3C  EE20 F00C          	lfsr	2,12
 11293  000B40  51C2               	movf	auto_mount@fs& (0+255),w,b
 11294  000B42  26D9               	addwf	fsr2l,f,c
 11295  000B44  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 11296  000B46  22DA               	addwfc	fsr2h,f,c
 11297  000B48  C098  FFDE         	movff	??_auto_mount+4,postinc2
 11298  000B4C  C099  FFDE         	movff	??_auto_mount+5,postinc2
 11299  000B50  C09A  FFDE         	movff	??_auto_mount+6,postinc2
 11300  000B54  C09B  FFDE         	movff	??_auto_mount+7,postinc2
 11301  000B58                     l789:
 11302                           
 11303                           ; BSR set to: 0
 11304                           ;tff.c: 763: fs->database = fs->fatbase + fatsize + fs->n_rootdir / 16;
 11305  000B58  0100               	movlb	0	; () banked
 11306  000B5A  EE20 F008          	lfsr	2,8
 11307  000B5E  51C2               	movf	auto_mount@fs& (0+255),w,b
 11308  000B60  26D9               	addwf	fsr2l,f,c
 11309  000B62  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 11310  000B64  22DA               	addwfc	fsr2h,f,c
 11311  000B66  CFDE F094          	movff	postinc2,??_auto_mount
 11312  000B6A  CFDE F095          	movff	postinc2,??_auto_mount+1
 11313  000B6E  CFDE F096          	movff	postinc2,??_auto_mount+2
 11314  000B72  CFDE F097          	movff	postinc2,??_auto_mount+3
 11315  000B76  0100               	movlb	0	; () banked
 11316  000B78  EE20 F002          	lfsr	2,2
 11317  000B7C  51C2               	movf	auto_mount@fs& (0+255),w,b
 11318  000B7E  26D9               	addwf	fsr2l,f,c
 11319  000B80  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 11320  000B82  22DA               	addwfc	fsr2h,f,c
 11321  000B84  CFDE F098          	movff	postinc2,??_auto_mount+4
 11322  000B88  CFDD F099          	movff	postdec2,??_auto_mount+5
 11323  000B8C  0E04               	movlw	4
 11324  000B8E  0100               	movlb	0	; () banked
 11325  000B90  6F9A               	movwf	(??_auto_mount+6)& (0+255),b
 11326  000B92                     u13445:
 11327  000B92  0100               	movlb	0	; () banked
 11328  000B94  90D8               	bcf	status,0,c
 11329  000B96  3399               	rrcf	(??_auto_mount+5)& (0+255),f,b
 11330  000B98  3398               	rrcf	(??_auto_mount+4)& (0+255),f,b
 11331  000B9A  0100               	movlb	0	; () banked
 11332  000B9C  2F9A               	decfsz	(??_auto_mount+6)& (0+255),f,b
 11333  000B9E  D7F9               	goto	u13445
 11334  000BA0  0100               	movlb	0	; () banked
 11335  000BA2  5198               	movf	(??_auto_mount+4)& (0+255),w,b
 11336  000BA4  0100               	movlb	0	; () banked
 11337  000BA6  2594               	addwf	??_auto_mount& (0+255),w,b
 11338  000BA8  0100               	movlb	0	; () banked
 11339  000BAA  6F9B               	movwf	(??_auto_mount+7)& (0+255),b
 11340  000BAC  0100               	movlb	0	; () banked
 11341  000BAE  5199               	movf	(??_auto_mount+5)& (0+255),w,b
 11342  000BB0  0100               	movlb	0	; () banked
 11343  000BB2  2195               	addwfc	(??_auto_mount+1)& (0+255),w,b
 11344  000BB4  0100               	movlb	0	; () banked
 11345  000BB6  6F9C               	movwf	(??_auto_mount+8)& (0+255),b
 11346  000BB8  0E00               	movlw	0
 11347  000BBA  0100               	movlb	0	; () banked
 11348  000BBC  2196               	addwfc	(??_auto_mount+2)& (0+255),w,b
 11349  000BBE  0100               	movlb	0	; () banked
 11350  000BC0  6F9D               	movwf	(??_auto_mount+9)& (0+255),b
 11351  000BC2  0E00               	movlw	0
 11352  000BC4  0100               	movlb	0	; () banked
 11353  000BC6  2197               	addwfc	(??_auto_mount+3)& (0+255),w,b
 11354  000BC8  0100               	movlb	0	; () banked
 11355  000BCA  6F9E               	movwf	(??_auto_mount+10)& (0+255),b
 11356  000BCC  0100               	movlb	0	; () banked
 11357  000BCE  51BD               	movf	auto_mount@fatsize& (0+255),w,b
 11358  000BD0  0100               	movlb	0	; () banked
 11359  000BD2  259B               	addwf	(??_auto_mount+7)& (0+255),w,b
 11360  000BD4  0100               	movlb	0	; () banked
 11361  000BD6  6F9F               	movwf	(??_auto_mount+11)& (0+255),b
 11362  000BD8  0100               	movlb	0	; () banked
 11363  000BDA  51BE               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 11364  000BDC  0100               	movlb	0	; () banked
 11365  000BDE  219C               	addwfc	(??_auto_mount+8)& (0+255),w,b
 11366  000BE0  0100               	movlb	0	; () banked
 11367  000BE2  6FA0               	movwf	(??_auto_mount+12)& (0+255),b
 11368  000BE4  0100               	movlb	0	; () banked
 11369  000BE6  51BF               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 11370  000BE8  0100               	movlb	0	; () banked
 11371  000BEA  219D               	addwfc	(??_auto_mount+9)& (0+255),w,b
 11372  000BEC  0100               	movlb	0	; () banked
 11373  000BEE  6FA1               	movwf	(??_auto_mount+13)& (0+255),b
 11374  000BF0  0100               	movlb	0	; () banked
 11375  000BF2  51C0               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 11376  000BF4  0100               	movlb	0	; () banked
 11377  000BF6  219E               	addwfc	(??_auto_mount+10)& (0+255),w,b
 11378  000BF8  0100               	movlb	0	; () banked
 11379  000BFA  6FA2               	movwf	(??_auto_mount+14)& (0+255),b
 11380  000BFC  0100               	movlb	0	; () banked
 11381  000BFE  EE20 F010          	lfsr	2,16
 11382  000C02  51C2               	movf	auto_mount@fs& (0+255),w,b
 11383  000C04  26D9               	addwf	fsr2l,f,c
 11384  000C06  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 11385  000C08  22DA               	addwfc	fsr2h,f,c
 11386  000C0A  C09F  FFDE         	movff	??_auto_mount+11,postinc2
 11387  000C0E  C0A0  FFDE         	movff	??_auto_mount+12,postinc2
 11388  000C12  C0A1  FFDE         	movff	??_auto_mount+13,postinc2
 11389  000C16  C0A2  FFDE         	movff	??_auto_mount+14,postinc2
 11390                           
 11391                           ;tff.c: 767: fs->free_clust = (CLUST)0xFFFFFFFF;
 11392  000C1A  0100               	movlb	0	; () banked
 11393  000C1C  EE20 F020          	lfsr	2,32
 11394  000C20  51C2               	movf	auto_mount@fs& (0+255),w,b
 11395  000C22  26D9               	addwf	fsr2l,f,c
 11396  000C24  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 11397  000C26  22DA               	addwfc	fsr2h,f,c
 11398  000C28  0EFF               	movlw	255
 11399  000C2A  6EDE               	movwf	postinc2,c
 11400  000C2C  0EFF               	movlw	255
 11401  000C2E  6EDE               	movwf	postinc2,c
 11402  000C30  0EFF               	movlw	255
 11403  000C32  6EDE               	movwf	postinc2,c
 11404  000C34  0EFF               	movlw	255
 11405  000C36  6EDD               	movwf	postdec2,c
 11406                           
 11407                           ;tff.c: 783: fs->fs_type = fmt;
 11408  000C38  0100               	movlb	0	; () banked
 11409  000C3A  EE20 F024          	lfsr	2,36
 11410  000C3E  51C2               	movf	auto_mount@fs& (0+255),w,b
 11411  000C40  26D9               	addwf	fsr2l,f,c
 11412  000C42  51C3               	movf	(auto_mount@fs+1)& (0+255),w,b
 11413  000C44  22DA               	addwfc	fsr2h,f,c
 11414  000C46  C0C1  FFDF         	movff	auto_mount@fmt,indf2
 11415                           
 11416                           ; BSR set to: 0
 11417                           ;tff.c: 784: fs->id = ++fsid;
 11418  000C4A  0101               	movlb	1	; () banked
 11419  000C4C  4B5A               	infsnz	_fsid& (0+255),f,b
 11420  000C4E  2B5B               	incf	(_fsid+1)& (0+255),f,b
 11421  000C50  C0C2  FFD9         	movff	auto_mount@fs,fsr2l
 11422  000C54  C0C3  FFDA         	movff	auto_mount@fs+1,fsr2h
 11423  000C58  C15A  FFDE         	movff	_fsid,postinc2
 11424  000C5C  C15B  FFDD         	movff	_fsid+1,postdec2
 11425                           
 11426                           ;tff.c: 785: return FR_OK;
 11427  000C60  0E00               	movlw	0
 11428  000C62  0012               	return	
 11429  000C64                     __end_of_auto_mount:
 11430                           	opt stack 0
 11431                           tosu	equ	0xFFF
 11432                           tosh	equ	0xFFE
 11433                           tosl	equ	0xFFD
 11434                           pclath	equ	0xFFA
 11435                           tblptru	equ	0xFF8
 11436                           tblptrh	equ	0xFF7
 11437                           tblptrl	equ	0xFF6
 11438                           tablat	equ	0xFF5
 11439                           prodh	equ	0xFF4
 11440                           prodl	equ	0xFF3
 11441                           intcon	equ	0xFF2
 11442                           intcon2	equ	0xFF1
 11443                           intcon3	equ	0xFF0
 11444                           postinc0	equ	0xFEE
 11445                           wreg	equ	0xFE8
 11446                           indf1	equ	0xFE7
 11447                           postinc1	equ	0xFE6
 11448                           postdec1	equ	0xFE5
 11449                           fsr1h	equ	0xFE2
 11450                           fsr1l	equ	0xFE1
 11451                           indf2	equ	0xFDF
 11452                           postinc2	equ	0xFDE
 11453                           postdec2	equ	0xFDD
 11454                           fsr2h	equ	0xFDA
 11455                           fsr2l	equ	0xFD9
 11456                           status	equ	0xFD8
 11457                           
 11458 ;; *************** function _memset *****************
 11459 ;; Defined at:
 11460 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
 11461 ;; Parameters:    Size  Location     Type
 11462 ;;  p1              2   21[COMRAM] PTR void 
 11463 ;;		 -> fs.win(512), fs(552), f_rename@fn(12), f_utime@fn(12), 
 11464 ;;		 -> f_chmod@fn(12), f_mkdir@fn(12), f_unlink@fn(12), f_stat@fn(12), 
 11465 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), gps@gps_buffer(15), 
 11466 ;;  c               2   23[COMRAM] int 
 11467 ;;  n               2   25[COMRAM] unsigned int 
 11468 ;; Auto vars:     Size  Location     Type
 11469 ;;  p               2   27[COMRAM] PTR unsigned char 
 11470 ;;		 -> fs.win(512), fs(552), f_rename@fn(12), f_utime@fn(12), 
 11471 ;;		 -> f_chmod@fn(12), f_mkdir@fn(12), f_unlink@fn(12), f_stat@fn(12), 
 11472 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), gps@gps_buffer(15), 
 11473 ;; Return value:  Size  Location     Type
 11474 ;;                  2   21[COMRAM] PTR void 
 11475 ;; Registers used:
 11476 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11477 ;; Tracked objects:
 11478 ;;		On entry : 0/0
 11479 ;;		On exit  : 0/0
 11480 ;;		Unchanged: 0/0
 11481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11482 ;;      Params:         6       0       0       0       0       0       0       0       0
 11483 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11484 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11485 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11486 ;;Total ram usage:        8 bytes
 11487 ;; Hardware stack levels used:    1
 11488 ;; Hardware stack levels required when called:    2
 11489 ;; This function calls:
 11490 ;;		Nothing
 11491 ;; This function is called by:
 11492 ;;		_make_dirfile
 11493 ;;		_reserve_direntry
 11494 ;;		_auto_mount
 11495 ;;		_f_open
 11496 ;;		_gps
 11497 ;;		_f_mkdir
 11498 ;; This function uses a non-reentrant model
 11499 ;;
 11500                           
 11501                           	psect	text28
 11502  004E9C                     __ptext28:
 11503                           	opt stack 0
 11504  004E9C                     _memset:
 11505                           	opt stack 23
 11506                           
 11507                           ;incstack = 0
 11508  004E9C  C016  F01C         	movff	memset@p1,memset@p
 11509  004EA0  C017  F01D         	movff	memset@p1+1,memset@p+1
 11510  004EA4  D008               	goto	l10713
 11511  004EA6                     l10709:
 11512  004EA6  C01C  FFD9         	movff	memset@p,fsr2l
 11513  004EAA  C01D  FFDA         	movff	memset@p+1,fsr2h
 11514  004EAE  C018  FFDF         	movff	memset@c,indf2
 11515  004EB2  4A1C               	infsnz	memset@p,f,c
 11516  004EB4  2A1D               	incf	memset@p+1,f,c
 11517  004EB6                     l10713:
 11518  004EB6  061A               	decf	memset@n,f,c
 11519  004EB8  A0D8               	btfss	status,0,c
 11520  004EBA  061B               	decf	memset@n+1,f,c
 11521  004EBC  281A               	incf	memset@n,w,c
 11522  004EBE  E1F3               	bnz	l10709
 11523  004EC0  281B               	incf	memset@n+1,w,c
 11524  004EC2  B4D8               	btfsc	status,2,c
 11525  004EC4  0012               	return	
 11526  004EC6  D7EF               	goto	l10709
 11527  004EC8                     __end_of_memset:
 11528                           	opt stack 0
 11529                           tosu	equ	0xFFF
 11530                           tosh	equ	0xFFE
 11531                           tosl	equ	0xFFD
 11532                           pclath	equ	0xFFA
 11533                           tblptru	equ	0xFF8
 11534                           tblptrh	equ	0xFF7
 11535                           tblptrl	equ	0xFF6
 11536                           tablat	equ	0xFF5
 11537                           prodh	equ	0xFF4
 11538                           prodl	equ	0xFF3
 11539                           intcon	equ	0xFF2
 11540                           intcon2	equ	0xFF1
 11541                           intcon3	equ	0xFF0
 11542                           postinc0	equ	0xFEE
 11543                           wreg	equ	0xFE8
 11544                           indf1	equ	0xFE7
 11545                           postinc1	equ	0xFE6
 11546                           postdec1	equ	0xFE5
 11547                           fsr1h	equ	0xFE2
 11548                           fsr1l	equ	0xFE1
 11549                           indf2	equ	0xFDF
 11550                           postinc2	equ	0xFDE
 11551                           postdec2	equ	0xFDD
 11552                           fsr2h	equ	0xFDA
 11553                           fsr2l	equ	0xFD9
 11554                           status	equ	0xFD8
 11555                           
 11556 ;; *************** function _disk_initialize *****************
 11557 ;; Defined at:
 11558 ;;		line 110 in file "bibliotecas/diskio.c"
 11559 ;; Parameters:    Size  Location     Type
 11560 ;;  pdrv            1    wreg     unsigned char 
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;  pdrv            1   48[COMRAM] unsigned char 
 11563 ;;  result          2    0        int 
 11564 ;;  stat            1   49[COMRAM] unsigned char 
 11565 ;; Return value:  Size  Location     Type
 11566 ;;                  1    wreg      unsigned char 
 11567 ;; Registers used:
 11568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11569 ;; Tracked objects:
 11570 ;;		On entry : 0/0
 11571 ;;		On exit  : 0/0
 11572 ;;		Unchanged: 0/0
 11573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11574 ;;      Params:         0       0       0       0       0       0       0       0       0
 11575 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11576 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11577 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11578 ;;Total ram usage:        2 bytes
 11579 ;; Hardware stack levels used:    1
 11580 ;; Hardware stack levels required when called:    7
 11581 ;; This function calls:
 11582 ;;		_sdc_disk_initialize
 11583 ;; This function is called by:
 11584 ;;		_auto_mount
 11585 ;; This function uses a non-reentrant model
 11586 ;;
 11587                           
 11588                           	psect	text29
 11589  004E68                     __ptext29:
 11590                           	opt stack 0
 11591  004E68                     _disk_initialize:
 11592                           	opt stack 19
 11593                           
 11594                           ;incstack = 0
 11595                           ;disk_initialize@pdrv stored from wreg
 11596  004E68  6E31               	movwf	disk_initialize@pdrv,c
 11597                           
 11598                           ;diskio.c: 114: DSTATUS stat;
 11599                           ;diskio.c: 115: int result;
 11600                           ;diskio.c: 117: switch (pdrv) {
 11601  004E6A  D00C               	goto	l11077
 11602  004E6C                     l11059:
 11603                           
 11604                           ;diskio.c: 119: stat = sdc_disk_initialize();
 11605  004E6C  EC18  F015         	call	_sdc_disk_initialize	;wreg free
 11606  004E70  6E32               	movwf	disk_initialize@stat,c
 11607                           
 11608                           ;diskio.c: 123: return stat;
 11609  004E72  5032               	movf	disk_initialize@stat,w,c
 11610  004E74  0012               	return	
 11611  004E76                     l11065:
 11612                           
 11613                           ;diskio.c: 126: stat = sdc_disk_initialize();
 11614  004E76  EC18  F015         	call	_sdc_disk_initialize	;wreg free
 11615  004E7A  6E32               	movwf	disk_initialize@stat,c
 11616                           
 11617                           ;diskio.c: 130: return stat;
 11618  004E7C  5032               	movf	disk_initialize@stat,w,c
 11619  004E7E  0012               	return	
 11620  004E80                     l11071:
 11621                           
 11622                           ;diskio.c: 137: return stat;
 11623  004E80  5032               	movf	disk_initialize@stat,w,c
 11624  004E82  0012               	return	
 11625  004E84                     l11077:
 11626  004E84  5031               	movf	disk_initialize@pdrv,w,c
 11627                           
 11628                           ; Switch size 1, requested type "space"
 11629                           ; Number of cases is 3, Range of values is 0 to 2
 11630                           ; switch strategies available:
 11631                           ; Name         Instructions Cycles
 11632                           ; simple_byte           10     6 (average)
 11633                           ;	Chosen strategy is simple_byte
 11634  004E86  0A00               	xorlw	0	; case 0
 11635  004E88  B4D8               	btfsc	status,2,c
 11636  004E8A  D7F5               	goto	l11065
 11637  004E8C  0A01               	xorlw	1	; case 1
 11638  004E8E  B4D8               	btfsc	status,2,c
 11639  004E90  D7ED               	goto	l11059
 11640  004E92  0A03               	xorlw	3	; case 2
 11641  004E94  B4D8               	btfsc	status,2,c
 11642  004E96  D7F4               	goto	l11071
 11643                           
 11644                           ;diskio.c: 139: return 0x01;
 11645  004E98  0E01               	movlw	1
 11646  004E9A  0012               	return	
 11647  004E9C                     __end_of_disk_initialize:
 11648                           	opt stack 0
 11649                           tosu	equ	0xFFF
 11650                           tosh	equ	0xFFE
 11651                           tosl	equ	0xFFD
 11652                           pclath	equ	0xFFA
 11653                           tblptru	equ	0xFF8
 11654                           tblptrh	equ	0xFF7
 11655                           tblptrl	equ	0xFF6
 11656                           tablat	equ	0xFF5
 11657                           prodh	equ	0xFF4
 11658                           prodl	equ	0xFF3
 11659                           intcon	equ	0xFF2
 11660                           intcon2	equ	0xFF1
 11661                           intcon3	equ	0xFF0
 11662                           postinc0	equ	0xFEE
 11663                           wreg	equ	0xFE8
 11664                           indf1	equ	0xFE7
 11665                           postinc1	equ	0xFE6
 11666                           postdec1	equ	0xFE5
 11667                           fsr1h	equ	0xFE2
 11668                           fsr1l	equ	0xFE1
 11669                           indf2	equ	0xFDF
 11670                           postinc2	equ	0xFDE
 11671                           postdec2	equ	0xFDD
 11672                           fsr2h	equ	0xFDA
 11673                           fsr2l	equ	0xFD9
 11674                           status	equ	0xFD8
 11675                           
 11676 ;; *************** function _sdc_disk_initialize *****************
 11677 ;; Defined at:
 11678 ;;		line 295 in file "bibliotecas/diskio.c"
 11679 ;; Parameters:    Size  Location     Type
 11680 ;;		None
 11681 ;; Auto vars:     Size  Location     Type
 11682 ;;  teste          10    0        unsigned char [10]
 11683 ;;  count           2   12[BANK0 ] int 
 11684 ;;  count_nosd      2    9[BANK0 ] int 
 11685 ;;  i               2    7[BANK0 ] int 
 11686 ;;  receive         2    0        unsigned int 
 11687 ;;  buff            1   14[BANK0 ] unsigned char 
 11688 ;;  stat            1   11[BANK0 ] unsigned char 
 11689 ;; Return value:  Size  Location     Type
 11690 ;;                  1    wreg      unsigned char 
 11691 ;; Registers used:
 11692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11693 ;; Tracked objects:
 11694 ;;		On entry : 0/0
 11695 ;;		On exit  : 0/0
 11696 ;;		Unchanged: 0/0
 11697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11698 ;;      Params:         0       0       0       0       0       0       0       0       0
 11699 ;;      Locals:         0       8       0       0       0       0       0       0       0
 11700 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11701 ;;      Totals:         1       8       0       0       0       0       0       0       0
 11702 ;;Total ram usage:        9 bytes
 11703 ;; Hardware stack levels used:    1
 11704 ;; Hardware stack levels required when called:    6
 11705 ;; This function calls:
 11706 ;;		_command
 11707 ;;		_dummy_clocks
 11708 ;;		_escreve_frase_ram_lcd
 11709 ;;		_escreve_inteiro_lcd
 11710 ;;		_posicao_cursor_lcd
 11711 ;;		_response
 11712 ;; This function is called by:
 11713 ;;		_disk_initialize
 11714 ;; This function uses a non-reentrant model
 11715 ;;
 11716                           
 11717                           	psect	text30
 11718  002A30                     __ptext30:
 11719                           	opt stack 0
 11720  002A30                     _sdc_disk_initialize:
 11721                           	opt stack 19
 11722                           
 11723                           ;diskio.c: 298: int i = 0, count = 0, count_nosd = 0;
 11724                           
 11725                           ;incstack = 0
 11726  002A30  0E00               	movlw	0
 11727  002A32  0100               	movlb	0	; () banked
 11728  002A34  6F68               	movwf	(sdc_disk_initialize@i+1)& (0+255),b
 11729  002A36  0E00               	movlw	0
 11730  002A38  6F67               	movwf	sdc_disk_initialize@i& (0+255),b
 11731  002A3A  0E00               	movlw	0
 11732  002A3C  0100               	movlb	0	; () banked
 11733  002A3E  6F6D               	movwf	(sdc_disk_initialize@count+1)& (0+255),b
 11734  002A40  0E00               	movlw	0
 11735  002A42  6F6C               	movwf	sdc_disk_initialize@count& (0+255),b
 11736  002A44  0E00               	movlw	0
 11737  002A46  0100               	movlb	0	; () banked
 11738  002A48  6F6A               	movwf	(sdc_disk_initialize@count_nosd+1)& (0+255),b
 11739  002A4A  0E00               	movlw	0
 11740  002A4C  6F69               	movwf	sdc_disk_initialize@count_nosd& (0+255),b
 11741                           
 11742                           ; BSR set to: 0
 11743                           ;diskio.c: 299: unsigned char buff, teste[10];
 11744                           ;diskio.c: 300: DSTATUS stat;
 11745                           ;diskio.c: 301: unsigned int receive;
 11746                           ;diskio.c: 305: LATBbits.LATB4 = 0;
 11747  002A4E  988A               	bcf	3978,4,c	;volatile
 11748                           
 11749                           ; BSR set to: 0
 11750                           ;diskio.c: 306: LATBbits.LATB7 = 1;
 11751  002A50  8E8A               	bsf	3978,7,c	;volatile
 11752                           
 11753                           ; BSR set to: 0
 11754                           ;diskio.c: 307: dummy_clocks(1);
 11755  002A52  0E01               	movlw	1
 11756  002A54  ECBE  F026         	call	_dummy_clocks
 11757                           
 11758                           ;diskio.c: 308: command(0X40, 0X00000000, 0X95);
 11759  002A58  0E00               	movlw	0
 11760  002A5A  6E18               	movwf	command@arg,c
 11761  002A5C  0E00               	movlw	0
 11762  002A5E  6E19               	movwf	command@arg+1,c
 11763  002A60  0E00               	movlw	0
 11764  002A62  6E1A               	movwf	command@arg+2,c
 11765  002A64  0E00               	movlw	0
 11766  002A66  6E1B               	movwf	command@arg+3,c
 11767  002A68  0E95               	movlw	149
 11768  002A6A  6E1C               	movwf	command@CRC,c
 11769  002A6C  0E40               	movlw	64
 11770  002A6E  EC18  F027         	call	_command
 11771                           
 11772                           ;diskio.c: 309: LATBbits.LATB4 = 1;
 11773  002A72  888A               	bsf	3978,4,c	;volatile
 11774  002A74                     l10753:
 11775                           
 11776                           ;diskio.c: 311: buff = response();
 11777  002A74  EC3B  F028         	call	_response	;wreg free
 11778  002A78  0100               	movlb	0	; () banked
 11779  002A7A  6F6E               	movwf	sdc_disk_initialize@buff& (0+255),b
 11780                           
 11781                           ; BSR set to: 0
 11782                           ;diskio.c: 312: count++;
 11783  002A7C  0100               	movlb	0	; () banked
 11784  002A7E  4B6C               	infsnz	sdc_disk_initialize@count& (0+255),f,b
 11785  002A80  2B6D               	incf	(sdc_disk_initialize@count+1)& (0+255),f,b
 11786                           
 11787                           ; BSR set to: 0
 11788                           ;diskio.c: 313: }while((buff!=0X01) && count<30);
 11789  002A82  0100               	movlb	0	; () banked
 11790  002A84  056E               	decf	sdc_disk_initialize@buff& (0+255),w,b
 11791  002A86  B4D8               	btfsc	status,2,c
 11792  002A88  D00B               	goto	l10761
 11793                           
 11794                           ; BSR set to: 0
 11795  002A8A  0100               	movlb	0	; () banked
 11796  002A8C  BF6D               	btfsc	(sdc_disk_initialize@count+1)& (0+255),7,b
 11797  002A8E  D7F2               	goto	l10753
 11798  002A90  0100               	movlb	0	; () banked
 11799  002A92  516D               	movf	(sdc_disk_initialize@count+1)& (0+255),w,b
 11800  002A94  E105               	bnz	l10761
 11801  002A96  0E1E               	movlw	30
 11802  002A98  0100               	movlb	0	; () banked
 11803  002A9A  5D6C               	subwf	sdc_disk_initialize@count& (0+255),w,b
 11804  002A9C  A0D8               	btfss	status,0,c
 11805  002A9E  D7EA               	goto	l10753
 11806  002AA0                     l10761:
 11807                           
 11808                           ; BSR set to: 0
 11809                           ;diskio.c: 314: count = 0;
 11810  002AA0  0E00               	movlw	0
 11811  002AA2  0100               	movlb	0	; () banked
 11812  002AA4  6F6D               	movwf	(sdc_disk_initialize@count+1)& (0+255),b
 11813  002AA6  0E00               	movlw	0
 11814  002AA8  6F6C               	movwf	sdc_disk_initialize@count& (0+255),b
 11815                           
 11816                           ; BSR set to: 0
 11817                           ;diskio.c: 315: if(buff != 0x01)
 11818  002AAA  0100               	movlb	0	; () banked
 11819  002AAC  056E               	decf	sdc_disk_initialize@buff& (0+255),w,b
 11820  002AAE  A4D8               	btfss	status,2,c
 11821  002AB0  D017               	goto	l10773
 11822  002AB2  D030               	goto	l10781
 11823  002AB4                     l10767:
 11824                           
 11825                           ; BSR set to: 0
 11826                           ;diskio.c: 318: posicao_cursor_lcd(1,0);
 11827  002AB4  0E00               	movlw	0
 11828  002AB6  6E19               	movwf	posicao_cursor_lcd@coluna,c
 11829  002AB8  0E01               	movlw	1
 11830  002ABA  EC8A  F024         	call	_posicao_cursor_lcd
 11831                           
 11832                           ;diskio.c: 319: escreve_frase_ram_lcd("Sem Cartao");
 11833  002ABE  0E29               	movlw	low STR_8
 11834  002AC0  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 11835  002AC2  0E62               	movlw	high STR_8
 11836  002AC4  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 11837  002AC6  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
 11838                           
 11839                           ;diskio.c: 320: posicao_cursor_lcd(2,0);
 11840  002ACA  0E00               	movlw	0
 11841  002ACC  6E19               	movwf	posicao_cursor_lcd@coluna,c
 11842  002ACE  0E02               	movlw	2
 11843  002AD0  EC8A  F024         	call	_posicao_cursor_lcd
 11844                           
 11845                           ;diskio.c: 321: escreve_frase_ram_lcd("Insira o Cartao");
 11846  002AD4  0EFF               	movlw	low STR_9
 11847  002AD6  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 11848  002AD8  0E61               	movlw	high STR_9
 11849  002ADA  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 11850  002ADC  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
 11851  002AE0                     l10773:
 11852  002AE0  0100               	movlb	0	; () banked
 11853  002AE2  056E               	decf	sdc_disk_initialize@buff& (0+255),w,b
 11854  002AE4  A4D8               	btfss	status,2,c
 11855  002AE6  D7E6               	goto	l10767
 11856                           
 11857                           ; BSR set to: 0
 11858                           ;diskio.c: 322: }
 11859                           ;diskio.c: 323: posicao_cursor_lcd(1,0);
 11860                           
 11861                           ; BSR set to: 0
 11862  002AE8  0E00               	movlw	0
 11863  002AEA  6E19               	movwf	posicao_cursor_lcd@coluna,c
 11864  002AEC  0E01               	movlw	1
 11865  002AEE  EC8A  F024         	call	_posicao_cursor_lcd
 11866                           
 11867                           ;diskio.c: 324: escreve_frase_ram_lcd("                ");
 11868  002AF2  0E2D               	movlw	low (STR_23+2)
 11869  002AF4  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 11870  002AF6  0E61               	movlw	high (STR_23+2)
 11871  002AF8  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 11872  002AFA  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
 11873                           
 11874                           ;diskio.c: 325: posicao_cursor_lcd(2,0);
 11875  002AFE  0E00               	movlw	0
 11876  002B00  6E19               	movwf	posicao_cursor_lcd@coluna,c
 11877  002B02  0E02               	movlw	2
 11878  002B04  EC8A  F024         	call	_posicao_cursor_lcd
 11879                           
 11880                           ;diskio.c: 326: escreve_frase_ram_lcd("                ");
 11881  002B08  0E2D               	movlw	low (STR_23+2)
 11882  002B0A  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 11883  002B0C  0E61               	movlw	high (STR_23+2)
 11884  002B0E  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 11885  002B10  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
 11886  002B14                     l10781:
 11887                           
 11888                           ;diskio.c: 327: }
 11889                           ;diskio.c: 330: buff = 0xFF;
 11890  002B14  0100               	movlb	0	; () banked
 11891  002B16  696E               	setf	sdc_disk_initialize@buff& (0+255),b
 11892                           
 11893                           ; BSR set to: 0
 11894                           ;diskio.c: 331: LATBbits.LATB4 = 0;
 11895  002B18  988A               	bcf	3978,4,c	;volatile
 11896                           
 11897                           ; BSR set to: 0
 11898                           ;diskio.c: 333: dummy_clocks(8);
 11899  002B1A  0E08               	movlw	8
 11900  002B1C  ECBE  F026         	call	_dummy_clocks
 11901                           
 11902                           ;diskio.c: 334: command(0X48, 0x000001AA, 0x87);
 11903  002B20  0EAA               	movlw	170
 11904  002B22  6E18               	movwf	command@arg,c
 11905  002B24  0E01               	movlw	1
 11906  002B26  6E19               	movwf	command@arg+1,c
 11907  002B28  0E00               	movlw	0
 11908  002B2A  6E1A               	movwf	command@arg+2,c
 11909  002B2C  0E00               	movlw	0
 11910  002B2E  6E1B               	movwf	command@arg+3,c
 11911  002B30  0E87               	movlw	135
 11912  002B32  6E1C               	movwf	command@CRC,c
 11913  002B34  0E48               	movlw	72
 11914  002B36  EC18  F027         	call	_command
 11915                           
 11916                           ;diskio.c: 335: LATBbits.LATB4 = 1;
 11917  002B3A  888A               	bsf	3978,4,c	;volatile
 11918  002B3C                     l10791:
 11919                           
 11920                           ;diskio.c: 337: buff = response();
 11921  002B3C  EC3B  F028         	call	_response	;wreg free
 11922  002B40  0100               	movlb	0	; () banked
 11923  002B42  6F6E               	movwf	sdc_disk_initialize@buff& (0+255),b
 11924                           
 11925                           ; BSR set to: 0
 11926                           ;diskio.c: 338: }while((buff!=0X01));
 11927  002B44  0100               	movlb	0	; () banked
 11928  002B46  056E               	decf	sdc_disk_initialize@buff& (0+255),w,b
 11929  002B48  A4D8               	btfss	status,2,c
 11930  002B4A  D7F8               	goto	l10791
 11931                           
 11932                           ; BSR set to: 0
 11933                           ;diskio.c: 339: _delay((unsigned long)((10)*(48000000/4000.0)));
 11934                           
 11935                           ; BSR set to: 0
 11936  002B4C  0E9C               	movlw	156
 11937  002B4E  6E30               	movwf	??_sdc_disk_initialize& (0+255),c
 11938  002B50  0ED7               	movlw	215
 11939  002B52                     u16317:
 11940  002B52  2EE8               	decfsz	wreg,f,c
 11941  002B54  D7FE               	bra	u16317
 11942  002B56  2E30               	decfsz	??_sdc_disk_initialize& (0+255),f,c
 11943  002B58  D7FC               	bra	u16317
 11944  002B5A  F000               	nop	
 11945                           
 11946                           ;diskio.c: 343: buff = 0xFF;
 11947  002B5C  0100               	movlb	0	; () banked
 11948  002B5E  696E               	setf	sdc_disk_initialize@buff& (0+255),b
 11949                           
 11950                           ; BSR set to: 0
 11951                           ;diskio.c: 344: LATBbits.LATB4 = 0;
 11952  002B60  988A               	bcf	3978,4,c	;volatile
 11953                           
 11954                           ; BSR set to: 0
 11955                           ;diskio.c: 346: dummy_clocks(8);
 11956  002B62  0E08               	movlw	8
 11957  002B64  ECBE  F026         	call	_dummy_clocks
 11958                           
 11959                           ;diskio.c: 347: command(0X77, 0x00000000, 0x65);
 11960  002B68  0E00               	movlw	0
 11961  002B6A  6E18               	movwf	command@arg,c
 11962  002B6C  0E00               	movlw	0
 11963  002B6E  6E19               	movwf	command@arg+1,c
 11964  002B70  0E00               	movlw	0
 11965  002B72  6E1A               	movwf	command@arg+2,c
 11966  002B74  0E00               	movlw	0
 11967  002B76  6E1B               	movwf	command@arg+3,c
 11968  002B78  0E65               	movlw	101
 11969  002B7A  6E1C               	movwf	command@CRC,c
 11970  002B7C  0E77               	movlw	119
 11971  002B7E  EC18  F027         	call	_command
 11972                           
 11973                           ;diskio.c: 348: LATBbits.LATB4 = 1;
 11974  002B82  888A               	bsf	3978,4,c	;volatile
 11975                           
 11976                           ;diskio.c: 350: _delay((unsigned long)((10)*(48000000/4000.0)));
 11977  002B84  0E9C               	movlw	156
 11978  002B86  6E30               	movwf	??_sdc_disk_initialize& (0+255),c
 11979  002B88  0ED7               	movlw	215
 11980  002B8A                     u16327:
 11981  002B8A  2EE8               	decfsz	wreg,f,c
 11982  002B8C  D7FE               	bra	u16327
 11983  002B8E  2E30               	decfsz	??_sdc_disk_initialize& (0+255),f,c
 11984  002B90  D7FC               	bra	u16327
 11985  002B92  F000               	nop	
 11986                           
 11987                           ;diskio.c: 352: buff = 0xFF;
 11988  002B94  0100               	movlb	0	; () banked
 11989  002B96  696E               	setf	sdc_disk_initialize@buff& (0+255),b
 11990                           
 11991                           ; BSR set to: 0
 11992                           ;diskio.c: 353: count = 0;
 11993  002B98  0E00               	movlw	0
 11994  002B9A  0100               	movlb	0	; () banked
 11995  002B9C  6F6D               	movwf	(sdc_disk_initialize@count+1)& (0+255),b
 11996  002B9E  0E00               	movlw	0
 11997  002BA0  6F6C               	movwf	sdc_disk_initialize@count& (0+255),b
 11998                           
 11999                           ; BSR set to: 0
 12000                           ;diskio.c: 355: _delay((unsigned long)((10)*(48000000/4000.0)));
 12001  002BA2  0E9C               	movlw	156
 12002  002BA4  6E30               	movwf	??_sdc_disk_initialize& (0+255),c
 12003  002BA6  0ED7               	movlw	215
 12004  002BA8                     u16337:
 12005  002BA8  2EE8               	decfsz	wreg,f,c
 12006  002BAA  D7FE               	bra	u16337
 12007  002BAC  2E30               	decfsz	??_sdc_disk_initialize& (0+255),f,c
 12008  002BAE  D7FC               	bra	u16337
 12009  002BB0  F000               	nop	
 12010                           
 12011                           ;diskio.c: 357: LATBbits.LATB4 = 0;
 12012  002BB2  988A               	bcf	3978,4,c	;volatile
 12013                           
 12014                           ;diskio.c: 359: dummy_clocks(8);
 12015  002BB4  0E08               	movlw	8
 12016  002BB6  ECBE  F026         	call	_dummy_clocks
 12017                           
 12018                           ;diskio.c: 360: command(0X69, 0x00000000, 0x00);
 12019  002BBA  0E00               	movlw	0
 12020  002BBC  6E18               	movwf	command@arg,c
 12021  002BBE  0E00               	movlw	0
 12022  002BC0  6E19               	movwf	command@arg+1,c
 12023  002BC2  0E00               	movlw	0
 12024  002BC4  6E1A               	movwf	command@arg+2,c
 12025  002BC6  0E00               	movlw	0
 12026  002BC8  6E1B               	movwf	command@arg+3,c
 12027  002BCA  0E00               	movlw	0
 12028  002BCC  6E1C               	movwf	command@CRC,c
 12029  002BCE  0E69               	movlw	105
 12030  002BD0  EC18  F027         	call	_command
 12031                           
 12032                           ;diskio.c: 361: LATBbits.LATB4 = 1;
 12033  002BD4  888A               	bsf	3978,4,c	;volatile
 12034                           
 12035                           ;diskio.c: 363: _delay((unsigned long)((10)*(48000000/4000.0)));
 12036  002BD6  0E9C               	movlw	156
 12037  002BD8  6E30               	movwf	??_sdc_disk_initialize& (0+255),c
 12038  002BDA  0ED7               	movlw	215
 12039  002BDC                     u16347:
 12040  002BDC  2EE8               	decfsz	wreg,f,c
 12041  002BDE  D7FE               	bra	u16347
 12042  002BE0  2E30               	decfsz	??_sdc_disk_initialize& (0+255),f,c
 12043  002BE2  D7FC               	bra	u16347
 12044  002BE4  F000               	nop	
 12045                           
 12046                           ;diskio.c: 364: LATBbits.LATB4 = 0;
 12047  002BE6  988A               	bcf	3978,4,c	;volatile
 12048                           
 12049                           ;diskio.c: 366: dummy_clocks(8);
 12050  002BE8  0E08               	movlw	8
 12051  002BEA  ECBE  F026         	call	_dummy_clocks
 12052                           
 12053                           ;diskio.c: 367: command(0X41, 0x00000000, 0x00);
 12054  002BEE  0E00               	movlw	0
 12055  002BF0  6E18               	movwf	command@arg,c
 12056  002BF2  0E00               	movlw	0
 12057  002BF4  6E19               	movwf	command@arg+1,c
 12058  002BF6  0E00               	movlw	0
 12059  002BF8  6E1A               	movwf	command@arg+2,c
 12060  002BFA  0E00               	movlw	0
 12061  002BFC  6E1B               	movwf	command@arg+3,c
 12062  002BFE  0E00               	movlw	0
 12063  002C00  6E1C               	movwf	command@CRC,c
 12064  002C02  0E41               	movlw	65
 12065  002C04  EC18  F027         	call	_command
 12066                           
 12067                           ;diskio.c: 368: LATBbits.LATB4 = 1;
 12068  002C08  888A               	bsf	3978,4,c	;volatile
 12069  002C0A                     l10831:
 12070                           
 12071                           ;diskio.c: 371: {
 12072                           ;diskio.c: 372: buff = response();
 12073  002C0A  EC3B  F028         	call	_response	;wreg free
 12074  002C0E  0100               	movlb	0	; () banked
 12075  002C10  6F6E               	movwf	sdc_disk_initialize@buff& (0+255),b
 12076                           
 12077                           ; BSR set to: 0
 12078                           ;diskio.c: 373: count++;
 12079  002C12  0100               	movlb	0	; () banked
 12080  002C14  4B6C               	infsnz	sdc_disk_initialize@count& (0+255),f,b
 12081  002C16  2B6D               	incf	(sdc_disk_initialize@count+1)& (0+255),f,b
 12082                           
 12083                           ; BSR set to: 0
 12084                           ;diskio.c: 375: if(buff != 0x00)
 12085  002C18  0100               	movlb	0	; () banked
 12086  002C1A  516E               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12087  002C1C  0100               	movlb	0	; () banked
 12088  002C1E  B4D8               	btfsc	status,2,c
 12089  002C20  D01B               	goto	l10847
 12090                           
 12091                           ; BSR set to: 0
 12092                           ;diskio.c: 376: {
 12093                           ;diskio.c: 377: posicao_cursor_lcd(2,0);
 12094  002C22  0E00               	movlw	0
 12095  002C24  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12096  002C26  0E02               	movlw	2
 12097  002C28  EC8A  F024         	call	_posicao_cursor_lcd
 12098                           
 12099                           ;diskio.c: 378: escreve_frase_ram_lcd("Erro Idle St    ");
 12100  002C2C  0EBE               	movlw	low STR_12
 12101  002C2E  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12102  002C30  0E61               	movlw	high STR_12
 12103  002C32  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12104  002C34  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
 12105                           
 12106                           ;diskio.c: 379: escreve_inteiro_lcd(buff);
 12107  002C38  C06E  F02E         	movff	sdc_disk_initialize@buff,escreve_inteiro_lcd@valor
 12108  002C3C  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 12109  002C3E  ECDD  F026         	call	_escreve_inteiro_lcd	;wreg free
 12110                           
 12111                           ;diskio.c: 380: posicao_cursor_lcd(2,13);
 12112  002C42  0E0D               	movlw	13
 12113  002C44  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12114  002C46  0E02               	movlw	2
 12115  002C48  EC8A  F024         	call	_posicao_cursor_lcd
 12116                           
 12117                           ;diskio.c: 381: escreve_inteiro_lcd(count);
 12118  002C4C  C06C  F02E         	movff	sdc_disk_initialize@count,escreve_inteiro_lcd@valor
 12119  002C50  C06D  F02F         	movff	sdc_disk_initialize@count+1,escreve_inteiro_lcd@valor+1
 12120  002C54  ECDD  F026         	call	_escreve_inteiro_lcd	;wreg free
 12121  002C58                     l10847:
 12122                           
 12123                           ;diskio.c: 382: }
 12124                           ;diskio.c: 384: }while(buff != 0x00);
 12125  002C58  0100               	movlb	0	; () banked
 12126  002C5A  516E               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12127  002C5C  0100               	movlb	0	; () banked
 12128  002C5E  A4D8               	btfss	status,2,c
 12129  002C60  D7D4               	goto	l10831
 12130                           
 12131                           ; BSR set to: 0
 12132                           ;diskio.c: 386: _delay((unsigned long)((10)*(48000000/4000.0)));
 12133                           
 12134                           ; BSR set to: 0
 12135  002C62  0E9C               	movlw	156
 12136  002C64  6E30               	movwf	??_sdc_disk_initialize& (0+255),c
 12137  002C66  0ED7               	movlw	215
 12138  002C68                     u16357:
 12139  002C68  2EE8               	decfsz	wreg,f,c
 12140  002C6A  D7FE               	bra	u16357
 12141  002C6C  2E30               	decfsz	??_sdc_disk_initialize& (0+255),f,c
 12142  002C6E  D7FC               	bra	u16357
 12143  002C70  F000               	nop	
 12144                           
 12145                           ;diskio.c: 391: _delay((unsigned long)((10)*(48000000/4000.0)));
 12146  002C72  0E9C               	movlw	156
 12147  002C74  6E30               	movwf	??_sdc_disk_initialize& (0+255),c
 12148  002C76  0ED7               	movlw	215
 12149  002C78                     u16367:
 12150  002C78  2EE8               	decfsz	wreg,f,c
 12151  002C7A  D7FE               	bra	u16367
 12152  002C7C  2E30               	decfsz	??_sdc_disk_initialize& (0+255),f,c
 12153  002C7E  D7FC               	bra	u16367
 12154  002C80  F000               	nop	
 12155                           
 12156                           ;diskio.c: 393: LATBbits.LATB4 = 0;
 12157  002C82  988A               	bcf	3978,4,c	;volatile
 12158                           
 12159                           ;diskio.c: 394: LATBbits.LATB7 = 1;
 12160  002C84  8E8A               	bsf	3978,7,c	;volatile
 12161                           
 12162                           ;diskio.c: 395: dummy_clocks(8);
 12163  002C86  0E08               	movlw	8
 12164  002C88  ECBE  F026         	call	_dummy_clocks
 12165                           
 12166                           ;diskio.c: 396: command(0X50, 0x00000200, 0xFF);
 12167  002C8C  0E00               	movlw	0
 12168  002C8E  6E18               	movwf	command@arg,c
 12169  002C90  0E02               	movlw	2
 12170  002C92  6E19               	movwf	command@arg+1,c
 12171  002C94  0E00               	movlw	0
 12172  002C96  6E1A               	movwf	command@arg+2,c
 12173  002C98  0E00               	movlw	0
 12174  002C9A  6E1B               	movwf	command@arg+3,c
 12175  002C9C  0EFF               	movlw	255
 12176  002C9E  6E1C               	movwf	command@CRC,c
 12177  002CA0  0E50               	movlw	80
 12178  002CA2  EC18  F027         	call	_command
 12179                           
 12180                           ;diskio.c: 397: LATBbits.LATB4 = 1;
 12181  002CA6  888A               	bsf	3978,4,c	;volatile
 12182                           
 12183                           ;diskio.c: 399: count = 0;
 12184  002CA8  0E00               	movlw	0
 12185  002CAA  0100               	movlb	0	; () banked
 12186  002CAC  6F6D               	movwf	(sdc_disk_initialize@count+1)& (0+255),b
 12187  002CAE  0E00               	movlw	0
 12188  002CB0  6F6C               	movwf	sdc_disk_initialize@count& (0+255),b
 12189  002CB2                     l10863:
 12190                           
 12191                           ; BSR set to: 0
 12192                           ;diskio.c: 401: {
 12193                           ;diskio.c: 402: buff = response();
 12194  002CB2  EC3B  F028         	call	_response	;wreg free
 12195  002CB6  0100               	movlb	0	; () banked
 12196  002CB8  6F6E               	movwf	sdc_disk_initialize@buff& (0+255),b
 12197                           
 12198                           ; BSR set to: 0
 12199                           ;diskio.c: 403: count++;
 12200  002CBA  0100               	movlb	0	; () banked
 12201  002CBC  4B6C               	infsnz	sdc_disk_initialize@count& (0+255),f,b
 12202  002CBE  2B6D               	incf	(sdc_disk_initialize@count+1)& (0+255),f,b
 12203                           
 12204                           ; BSR set to: 0
 12205                           ;diskio.c: 404: if(buff != 0x00)
 12206  002CC0  0100               	movlb	0	; () banked
 12207  002CC2  516E               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12208  002CC4  0100               	movlb	0	; () banked
 12209  002CC6  B4D8               	btfsc	status,2,c
 12210  002CC8  D020               	goto	l10881
 12211                           
 12212                           ; BSR set to: 0
 12213                           ;diskio.c: 405: {
 12214                           ;diskio.c: 406: posicao_cursor_lcd(2,0);
 12215  002CCA  0E00               	movlw	0
 12216  002CCC  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12217  002CCE  0E02               	movlw	2
 12218  002CD0  EC8A  F024         	call	_posicao_cursor_lcd
 12219                           
 12220                           ;diskio.c: 407: escreve_frase_ram_lcd("Erro B512       ");
 12221  002CD4  0E9C               	movlw	low STR_13
 12222  002CD6  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12223  002CD8  0E61               	movlw	high STR_13
 12224  002CDA  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12225  002CDC  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
 12226                           
 12227                           ;diskio.c: 408: posicao_cursor_lcd(2,0);
 12228  002CE0  0E00               	movlw	0
 12229  002CE2  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12230  002CE4  0E02               	movlw	2
 12231  002CE6  EC8A  F024         	call	_posicao_cursor_lcd
 12232                           
 12233                           ;diskio.c: 409: escreve_inteiro_lcd(buff);
 12234  002CEA  C06E  F02E         	movff	sdc_disk_initialize@buff,escreve_inteiro_lcd@valor
 12235  002CEE  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 12236  002CF0  ECDD  F026         	call	_escreve_inteiro_lcd	;wreg free
 12237                           
 12238                           ;diskio.c: 410: posicao_cursor_lcd(2,10);
 12239  002CF4  0E0A               	movlw	10
 12240  002CF6  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12241  002CF8  0E02               	movlw	2
 12242  002CFA  EC8A  F024         	call	_posicao_cursor_lcd
 12243                           
 12244                           ;diskio.c: 411: escreve_inteiro_lcd(count);
 12245  002CFE  C06C  F02E         	movff	sdc_disk_initialize@count,escreve_inteiro_lcd@valor
 12246  002D02  C06D  F02F         	movff	sdc_disk_initialize@count+1,escreve_inteiro_lcd@valor+1
 12247  002D06  ECDD  F026         	call	_escreve_inteiro_lcd	;wreg free
 12248  002D0A                     l10881:
 12249                           
 12250                           ;diskio.c: 412: }
 12251                           ;diskio.c: 413: }while(buff != 0x00);
 12252  002D0A  0100               	movlb	0	; () banked
 12253  002D0C  516E               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12254  002D0E  0100               	movlb	0	; () banked
 12255  002D10  A4D8               	btfss	status,2,c
 12256  002D12  D7CF               	goto	l10863
 12257                           
 12258                           ; BSR set to: 0
 12259                           ;diskio.c: 414: posicao_cursor_lcd(2,10);
 12260                           
 12261                           ; BSR set to: 0
 12262  002D14  0E0A               	movlw	10
 12263  002D16  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12264  002D18  0E02               	movlw	2
 12265  002D1A  EC8A  F024         	call	_posicao_cursor_lcd
 12266                           
 12267                           ;diskio.c: 415: escreve_inteiro_lcd(stat);
 12268  002D1E  C06B  F02E         	movff	sdc_disk_initialize@stat,escreve_inteiro_lcd@valor
 12269  002D22  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 12270  002D24  ECDD  F026         	call	_escreve_inteiro_lcd	;wreg free
 12271                           
 12272                           ;diskio.c: 417: return stat;
 12273  002D28  0100               	movlb	0	; () banked
 12274  002D2A  516B               	movf	sdc_disk_initialize@stat& (0+255),w,b
 12275  002D2C  0012               	return	
 12276  002D2E                     __end_of_sdc_disk_initialize:
 12277                           	opt stack 0
 12278                           tosu	equ	0xFFF
 12279                           tosh	equ	0xFFE
 12280                           tosl	equ	0xFFD
 12281                           pclath	equ	0xFFA
 12282                           tblptru	equ	0xFF8
 12283                           tblptrh	equ	0xFF7
 12284                           tblptrl	equ	0xFF6
 12285                           tablat	equ	0xFF5
 12286                           prodh	equ	0xFF4
 12287                           prodl	equ	0xFF3
 12288                           intcon	equ	0xFF2
 12289                           intcon2	equ	0xFF1
 12290                           intcon3	equ	0xFF0
 12291                           postinc0	equ	0xFEE
 12292                           wreg	equ	0xFE8
 12293                           indf1	equ	0xFE7
 12294                           postinc1	equ	0xFE6
 12295                           postdec1	equ	0xFE5
 12296                           fsr1h	equ	0xFE2
 12297                           fsr1l	equ	0xFE1
 12298                           indf2	equ	0xFDF
 12299                           postinc2	equ	0xFDE
 12300                           postdec2	equ	0xFDD
 12301                           fsr2h	equ	0xFDA
 12302                           fsr2l	equ	0xFD9
 12303                           status	equ	0xFD8
 12304                           
 12305 ;; *************** function _check_fs *****************
 12306 ;; Defined at:
 12307 ;;		line 623 in file "bibliotecas/tff.c"
 12308 ;; Parameters:    Size  Location     Type
 12309 ;;  sect            4   35[BANK0 ] unsigned long 
 12310 ;; Auto vars:     Size  Location     Type
 12311 ;;  temp2           2   45[BANK0 ] unsigned int 
 12312 ;;  temp            2   43[BANK0 ] int 
 12313 ;;  fs              2   47[BANK0 ] PTR struct _FATFS
 12314 ;;		 -> fs(552), NULL(0), 
 12315 ;; Return value:  Size  Location     Type
 12316 ;;                  1    wreg      unsigned char 
 12317 ;; Registers used:
 12318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12319 ;; Tracked objects:
 12320 ;;		On entry : 0/0
 12321 ;;		On exit  : 0/0
 12322 ;;		Unchanged: 0/0
 12323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12324 ;;      Params:         0       4       0       0       0       0       0       0       0
 12325 ;;      Locals:         0       6       0       0       0       0       0       0       0
 12326 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12327 ;;      Totals:         0      14       0       0       0       0       0       0       0
 12328 ;;Total ram usage:       14 bytes
 12329 ;; Hardware stack levels used:    1
 12330 ;; Hardware stack levels required when called:    8
 12331 ;; This function calls:
 12332 ;;		_disk_read
 12333 ;;		_escreve_frase_ram_lcd
 12334 ;;		_escreve_inteiro_lcd
 12335 ;;		_memcmp
 12336 ;;		_posicao_cursor_lcd
 12337 ;; This function is called by:
 12338 ;;		_auto_mount
 12339 ;; This function uses a non-reentrant model
 12340 ;;
 12341                           
 12342                           	psect	text31
 12343  0034EA                     __ptext31:
 12344                           	opt stack 0
 12345  0034EA                     _check_fs:
 12346                           	opt stack 18
 12347                           
 12348                           ;tff.c: 627: FATFS *fs = FatFs;
 12349                           
 12350                           ; BSR set to: 0
 12351                           ;incstack = 0
 12352  0034EA  C0FC  F08F         	movff	_FatFs,check_fs@fs
 12353  0034EE  C0FD  F090         	movff	_FatFs+1,check_fs@fs+1
 12354                           
 12355                           ;tff.c: 628: if (disk_read(0, fs->win, sect, 1) != RES_OK)
 12356  0034F2  0E28               	movlw	40
 12357  0034F4  0100               	movlb	0	; () banked
 12358  0034F6  258F               	addwf	check_fs@fs& (0+255),w,b
 12359  0034F8  0100               	movlb	0	; () banked
 12360  0034FA  6F78               	movwf	disk_read@buff& (0+255),b
 12361  0034FC  0E00               	movlw	0
 12362  0034FE  0100               	movlb	0	; () banked
 12363  003500  2190               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12364  003502  0100               	movlb	0	; () banked
 12365  003504  6F79               	movwf	(disk_read@buff+1)& (0+255),b
 12366  003506  C083  F07A         	movff	check_fs@sect,disk_read@sector
 12367  00350A  C084  F07B         	movff	check_fs@sect+1,disk_read@sector+1
 12368  00350E  C085  F07C         	movff	check_fs@sect+2,disk_read@sector+2
 12369  003512  C086  F07D         	movff	check_fs@sect+3,disk_read@sector+3
 12370  003516  0E01               	movlw	1
 12371  003518  0100               	movlb	0	; () banked
 12372  00351A  6F7E               	movwf	disk_read@count& (0+255),b
 12373  00351C  0E00               	movlw	0
 12374  00351E  EC83  F022         	call	_disk_read
 12375  003522  0900               	iorlw	0
 12376  003524  B4D8               	btfsc	status,2,c
 12377  003526  D045               	goto	l11355
 12378                           
 12379                           ;tff.c: 629: {
 12380                           ;tff.c: 630: posicao_cursor_lcd(1,0);
 12381  003528  0E00               	movlw	0
 12382  00352A  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12383  00352C  0E01               	movlw	1
 12384  00352E  EC8A  F024         	call	_posicao_cursor_lcd
 12385                           
 12386                           ;tff.c: 631: escreve_frase_ram_lcd("Load Boot  ");
 12387  003532  0E1D               	movlw	low STR_18
 12388  003534  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12389  003536  0E62               	movlw	high STR_18
 12390  003538  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12391  00353A  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
 12392                           
 12393                           ;tff.c: 632: posicao_cursor_lcd(1,12);
 12394  00353E  0E0C               	movlw	12
 12395  003540  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12396  003542  0E01               	movlw	1
 12397  003544  EC8A  F024         	call	_posicao_cursor_lcd
 12398                           
 12399                           ;tff.c: 633: int temp = disk_read(0, fs->win, sect, 1);
 12400  003548  0E28               	movlw	40
 12401  00354A  0100               	movlb	0	; () banked
 12402  00354C  258F               	addwf	check_fs@fs& (0+255),w,b
 12403  00354E  0100               	movlb	0	; () banked
 12404  003550  6F78               	movwf	disk_read@buff& (0+255),b
 12405  003552  0E00               	movlw	0
 12406  003554  0100               	movlb	0	; () banked
 12407  003556  2190               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12408  003558  0100               	movlb	0	; () banked
 12409  00355A  6F79               	movwf	(disk_read@buff+1)& (0+255),b
 12410  00355C  C083  F07A         	movff	check_fs@sect,disk_read@sector
 12411  003560  C084  F07B         	movff	check_fs@sect+1,disk_read@sector+1
 12412  003564  C085  F07C         	movff	check_fs@sect+2,disk_read@sector+2
 12413  003568  C086  F07D         	movff	check_fs@sect+3,disk_read@sector+3
 12414  00356C  0E01               	movlw	1
 12415  00356E  0100               	movlb	0	; () banked
 12416  003570  6F7E               	movwf	disk_read@count& (0+255),b
 12417  003572  0E00               	movlw	0
 12418  003574  EC83  F022         	call	_disk_read
 12419  003578  0100               	movlb	0	; () banked
 12420  00357A  6F87               	movwf	??_check_fs& (0+255),b
 12421  00357C  0100               	movlb	0	; () banked
 12422  00357E  5187               	movf	??_check_fs& (0+255),w,b
 12423  003580  0100               	movlb	0	; () banked
 12424  003582  6F8B               	movwf	check_fs@temp& (0+255),b
 12425  003584  6B8C               	clrf	(check_fs@temp+1)& (0+255),b
 12426                           
 12427                           ; BSR set to: 0
 12428                           ;tff.c: 634: escreve_inteiro_lcd(temp);
 12429  003586  C08B  F02E         	movff	check_fs@temp,escreve_inteiro_lcd@valor
 12430  00358A  C08C  F02F         	movff	check_fs@temp+1,escreve_inteiro_lcd@valor+1
 12431  00358E  ECDD  F026         	call	_escreve_inteiro_lcd	;wreg free
 12432                           
 12433                           ;tff.c: 635: _delay((unsigned long)((2000)*(48000000/4000.0)));
 12434  003592  0E7A               	movlw	122
 12435  003594  0100               	movlb	0	; () banked
 12436  003596  6F88               	movwf	(??_check_fs+1)& (0+255),b
 12437  003598  0EC1               	movlw	193
 12438  00359A  0100               	movlb	0	; () banked
 12439  00359C  6F87               	movwf	??_check_fs& (0+255),b
 12440  00359E  0E81               	movlw	129
 12441  0035A0                     u16377:
 12442  0035A0  2EE8               	decfsz	wreg,f,c
 12443  0035A2  D7FE               	bra	u16377
 12444  0035A4  2F87               	decfsz	??_check_fs& (0+255),f,b
 12445  0035A6  D7FC               	bra	u16377
 12446  0035A8  2F88               	decfsz	(??_check_fs+1)& (0+255),f,b
 12447  0035AA  D7FA               	bra	u16377
 12448  0035AC  D000               	nop2	
 12449                           
 12450                           ;tff.c: 636: return 2;
 12451  0035AE  0E02               	movlw	2
 12452  0035B0  0012               	return	
 12453  0035B2                     l11355:
 12454                           
 12455                           ;tff.c: 637: }
 12456                           ;tff.c: 638: if ((WORD)(((WORD)*(volatile BYTE*)((&fs->win[510])+1)<<8)|(WORD)*(volatile
      +                           BYTE*)(&fs->win[510])) != 0xAA55)
 12457  0035B2  0E27               	movlw	39
 12458  0035B4  0100               	movlb	0	; () banked
 12459  0035B6  258F               	addwf	check_fs@fs& (0+255),w,b
 12460  0035B8  6ED9               	movwf	fsr2l,c
 12461  0035BA  0E02               	movlw	2
 12462  0035BC  0100               	movlb	0	; () banked
 12463  0035BE  2190               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12464  0035C0  6EDA               	movwf	fsr2h,c
 12465  0035C2  50DF               	movf	indf2,w,c
 12466  0035C4  0100               	movlb	0	; () banked
 12467  0035C6  6F87               	movwf	??_check_fs& (0+255),b
 12468  0035C8  0100               	movlb	0	; () banked
 12469  0035CA  5187               	movf	??_check_fs& (0+255),w,b
 12470  0035CC  0100               	movlb	0	; () banked
 12471  0035CE  6F89               	movwf	(??_check_fs+2)& (0+255),b
 12472  0035D0  6B88               	clrf	(??_check_fs+1)& (0+255),b
 12473  0035D2  0E26               	movlw	38
 12474  0035D4  0100               	movlb	0	; () banked
 12475  0035D6  258F               	addwf	check_fs@fs& (0+255),w,b
 12476  0035D8  6ED9               	movwf	fsr2l,c
 12477  0035DA  0E02               	movlw	2
 12478  0035DC  0100               	movlb	0	; () banked
 12479  0035DE  2190               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12480  0035E0  6EDA               	movwf	fsr2h,c
 12481  0035E2  50DF               	movf	indf2,w,c
 12482  0035E4  0100               	movlb	0	; () banked
 12483  0035E6  6F8A               	movwf	(??_check_fs+3)& (0+255),b
 12484  0035E8  0100               	movlb	0	; () banked
 12485  0035EA  518A               	movf	(??_check_fs+3)& (0+255),w,b
 12486  0035EC  0100               	movlb	0	; () banked
 12487  0035EE  1388               	iorwf	(??_check_fs+1)& (0+255),f,b
 12488  0035F0  0E00               	movlw	0
 12489  0035F2  1389               	iorwf	(??_check_fs+2)& (0+255),f,b
 12490  0035F4  0E55               	movlw	85
 12491  0035F6  0100               	movlb	0	; () banked
 12492  0035F8  1988               	xorwf	(??_check_fs+1)& (0+255),w,b
 12493  0035FA  E105               	bnz	u12780
 12494  0035FC  0EAA               	movlw	170
 12495  0035FE  0100               	movlb	0	; () banked
 12496  003600  1989               	xorwf	(??_check_fs+2)& (0+255),w,b
 12497  003602  B4D8               	btfsc	status,2,c
 12498  003604  D042               	goto	l11373
 12499  003606                     u12780:
 12500                           
 12501                           ; BSR set to: 0
 12502                           ;tff.c: 639: {
 12503                           ;tff.c: 640: posicao_cursor_lcd(2,0);
 12504  003606  0E00               	movlw	0
 12505  003608  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12506  00360A  0E02               	movlw	2
 12507  00360C  EC8A  F024         	call	_posicao_cursor_lcd
 12508                           
 12509                           ;tff.c: 641: escreve_frase_ram_lcd("Rec. sig.         ");
 12510  003610  0E64               	movlw	low STR_19
 12511  003612  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12512  003614  0E61               	movlw	high STR_19
 12513  003616  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12514  003618  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
 12515                           
 12516                           ;tff.c: 642: posicao_cursor_lcd(2,9);
 12517  00361C  0E09               	movlw	9
 12518  00361E  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12519  003620  0E02               	movlw	2
 12520  003622  EC8A  F024         	call	_posicao_cursor_lcd
 12521                           
 12522                           ;tff.c: 643: unsigned int temp2 = (WORD)(((WORD)*(volatile BYTE*)((&fs->win[510])+1)<<8)
      +                          |(WORD)*(volatile BYTE*)(&fs->win[510]));
 12523  003626  0E26               	movlw	38
 12524  003628  0100               	movlb	0	; () banked
 12525  00362A  258F               	addwf	check_fs@fs& (0+255),w,b
 12526  00362C  6ED9               	movwf	fsr2l,c
 12527  00362E  0E02               	movlw	2
 12528  003630  0100               	movlb	0	; () banked
 12529  003632  2190               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12530  003634  6EDA               	movwf	fsr2h,c
 12531  003636  50DF               	movf	indf2,w,c
 12532  003638  0100               	movlb	0	; () banked
 12533  00363A  6F87               	movwf	??_check_fs& (0+255),b
 12534  00363C  0E27               	movlw	39
 12535  00363E  0100               	movlb	0	; () banked
 12536  003640  258F               	addwf	check_fs@fs& (0+255),w,b
 12537  003642  6ED9               	movwf	fsr2l,c
 12538  003644  0E02               	movlw	2
 12539  003646  0100               	movlb	0	; () banked
 12540  003648  2190               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12541  00364A  6EDA               	movwf	fsr2h,c
 12542  00364C  50DF               	movf	indf2,w,c
 12543  00364E  0100               	movlb	0	; () banked
 12544  003650  6F88               	movwf	(??_check_fs+1)& (0+255),b
 12545  003652  0100               	movlb	0	; () banked
 12546  003654  5187               	movf	??_check_fs& (0+255),w,b
 12547  003656  0100               	movlb	0	; () banked
 12548  003658  6F8D               	movwf	check_fs@temp2& (0+255),b
 12549  00365A  C088  F08E         	movff	??_check_fs+1,check_fs@temp2+1
 12550                           
 12551                           ; BSR set to: 0
 12552                           ;tff.c: 644: escreve_inteiro_lcd(temp2);
 12553  00365E  C08D  F02E         	movff	check_fs@temp2,escreve_inteiro_lcd@valor
 12554  003662  C08E  F02F         	movff	check_fs@temp2+1,escreve_inteiro_lcd@valor+1
 12555  003666  ECDD  F026         	call	_escreve_inteiro_lcd	;wreg free
 12556                           
 12557                           ;tff.c: 645: _delay((unsigned long)((3000)*(48000000/4000.0)));
 12558  00366A  0EB7               	movlw	183
 12559  00366C  0100               	movlb	0	; () banked
 12560  00366E  6F88               	movwf	(??_check_fs+1)& (0+255),b
 12561  003670  0EA1               	movlw	161
 12562  003672  0100               	movlb	0	; () banked
 12563  003674  6F87               	movwf	??_check_fs& (0+255),b
 12564  003676  0EC3               	movlw	195
 12565  003678                     u16387:
 12566  003678  2EE8               	decfsz	wreg,f,c
 12567  00367A  D7FE               	bra	u16387
 12568  00367C  2F87               	decfsz	??_check_fs& (0+255),f,b
 12569  00367E  D7FC               	bra	u16387
 12570  003680  2F88               	decfsz	(??_check_fs+1)& (0+255),f,b
 12571  003682  D7FA               	bra	u16387
 12572  003684  D000               	nop2	
 12573                           
 12574                           ;tff.c: 646: return 2;
 12575  003686  0E02               	movlw	2
 12576  003688  0012               	return	
 12577  00368A                     l11373:
 12578                           
 12579                           ;tff.c: 647: }
 12580                           ;tff.c: 648: if (!memcmp(&fs->win[54], "FAT", 3))
 12581  00368A  0E5E               	movlw	94
 12582  00368C  0100               	movlb	0	; () banked
 12583  00368E  258F               	addwf	check_fs@fs& (0+255),w,b
 12584  003690  6E16               	movwf	memcmp@s1,c
 12585  003692  0E00               	movlw	0
 12586  003694  0100               	movlb	0	; () banked
 12587  003696  2190               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12588  003698  6E17               	movwf	memcmp@s1+1,c
 12589  00369A  0E78               	movlw	low STR_20
 12590  00369C  6E18               	movwf	memcmp@s2,c
 12591  00369E  0E62               	movlw	high STR_20
 12592  0036A0  6E19               	movwf	memcmp@s2+1,c
 12593  0036A2  0E00               	movlw	0
 12594  0036A4  6E1B               	movwf	memcmp@n+1,c
 12595  0036A6  0E03               	movlw	3
 12596  0036A8  6E1A               	movwf	memcmp@n,c
 12597  0036AA  EC35  F022         	call	_memcmp	;wreg free
 12598  0036AE  5016               	movf	?_memcmp,w,c
 12599  0036B0  1017               	iorwf	?_memcmp+1,w,c
 12600  0036B2  A4D8               	btfss	status,2,c
 12601  0036B4  D002               	goto	l11379
 12602                           
 12603                           ;tff.c: 649: return 0;
 12604  0036B6  0E00               	movlw	0
 12605  0036B8  0012               	return	
 12606  0036BA                     l11379:
 12607                           
 12608                           ;tff.c: 651: if (!memcmp(&fs->win[82], "FAT32", 5) && !(fs->win[40] & 0x80))
 12609  0036BA  0E7A               	movlw	122
 12610  0036BC  0100               	movlb	0	; () banked
 12611  0036BE  258F               	addwf	check_fs@fs& (0+255),w,b
 12612  0036C0  6E16               	movwf	memcmp@s1,c
 12613  0036C2  0E00               	movlw	0
 12614  0036C4  0100               	movlb	0	; () banked
 12615  0036C6  2190               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12616  0036C8  6E17               	movwf	memcmp@s1+1,c
 12617  0036CA  0E51               	movlw	low STR_21
 12618  0036CC  6E18               	movwf	memcmp@s2,c
 12619  0036CE  0E62               	movlw	high STR_21
 12620  0036D0  6E19               	movwf	memcmp@s2+1,c
 12621  0036D2  0E00               	movlw	0
 12622  0036D4  6E1B               	movwf	memcmp@n+1,c
 12623  0036D6  0E05               	movlw	5
 12624  0036D8  6E1A               	movwf	memcmp@n,c
 12625  0036DA  EC35  F022         	call	_memcmp	;wreg free
 12626  0036DE  5016               	movf	?_memcmp,w,c
 12627  0036E0  1017               	iorwf	?_memcmp+1,w,c
 12628  0036E2  A4D8               	btfss	status,2,c
 12629  0036E4  D00C               	goto	l11387
 12630  0036E6  0100               	movlb	0	; () banked
 12631  0036E8  EE20 F050          	lfsr	2,80
 12632  0036EC  518F               	movf	check_fs@fs& (0+255),w,b
 12633  0036EE  26D9               	addwf	fsr2l,f,c
 12634  0036F0  5190               	movf	(check_fs@fs+1)& (0+255),w,b
 12635  0036F2  22DA               	addwfc	fsr2h,f,c
 12636  0036F4  0100               	movlb	0	; () banked
 12637  0036F6  BEDF               	btfsc	indf2,7,c
 12638  0036F8  D002               	goto	l11387
 12639                           
 12640                           ; BSR set to: 0
 12641                           ;tff.c: 652: return 0;
 12642  0036FA  0E00               	movlw	0
 12643                           
 12644                           ; BSR set to: 0
 12645  0036FC  0012               	return	
 12646  0036FE                     l11387:
 12647                           
 12648                           ;tff.c: 654: return 1;
 12649  0036FE  0E01               	movlw	1
 12650  003700  0012               	return	
 12651  003702                     __end_of_check_fs:
 12652                           	opt stack 0
 12653                           tosu	equ	0xFFF
 12654                           tosh	equ	0xFFE
 12655                           tosl	equ	0xFFD
 12656                           pclath	equ	0xFFA
 12657                           tblptru	equ	0xFF8
 12658                           tblptrh	equ	0xFF7
 12659                           tblptrl	equ	0xFF6
 12660                           tablat	equ	0xFF5
 12661                           prodh	equ	0xFF4
 12662                           prodl	equ	0xFF3
 12663                           intcon	equ	0xFF2
 12664                           intcon2	equ	0xFF1
 12665                           intcon3	equ	0xFF0
 12666                           postinc0	equ	0xFEE
 12667                           wreg	equ	0xFE8
 12668                           indf1	equ	0xFE7
 12669                           postinc1	equ	0xFE6
 12670                           postdec1	equ	0xFE5
 12671                           fsr1h	equ	0xFE2
 12672                           fsr1l	equ	0xFE1
 12673                           indf2	equ	0xFDF
 12674                           postinc2	equ	0xFDE
 12675                           postdec2	equ	0xFDD
 12676                           fsr2h	equ	0xFDA
 12677                           fsr2l	equ	0xFD9
 12678                           status	equ	0xFD8
 12679                           
 12680 ;; *************** function _memcmp *****************
 12681 ;; Defined at:
 12682 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memcmp.c"
 12683 ;; Parameters:    Size  Location     Type
 12684 ;;  s1              2   21[COMRAM] PTR const void 
 12685 ;;		 -> fs.win(512), fs(552), NULL(0), 
 12686 ;;  s2              2   23[COMRAM] PTR const void 
 12687 ;;		 -> f_rename@fn(12), f_utime@fn(12), f_chmod@fn(12), f_mkdir@fn(12), 
 12688 ;;		 -> f_unlink@fn(12), f_stat@fn(12), f_opendir@fn(12), f_open@fn(12), 
 12689 ;;		 -> STR_21(6), STR_20(4), 
 12690 ;;  n               2   25[COMRAM] unsigned int 
 12691 ;; Auto vars:     Size  Location     Type
 12692 ;;		None
 12693 ;; Return value:  Size  Location     Type
 12694 ;;                  2   21[COMRAM] int 
 12695 ;; Registers used:
 12696 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12697 ;; Tracked objects:
 12698 ;;		On entry : 0/0
 12699 ;;		On exit  : 0/0
 12700 ;;		Unchanged: 0/0
 12701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12702 ;;      Params:         6       0       0       0       0       0       0       0       0
 12703 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12704 ;;      Temps:          3       0       0       0       0       0       0       0       0
 12705 ;;      Totals:         9       0       0       0       0       0       0       0       0
 12706 ;;Total ram usage:        9 bytes
 12707 ;; Hardware stack levels used:    1
 12708 ;; Hardware stack levels required when called:    2
 12709 ;; This function calls:
 12710 ;;		Nothing
 12711 ;; This function is called by:
 12712 ;;		_trace_path
 12713 ;;		_check_fs
 12714 ;; This function uses a non-reentrant model
 12715 ;;
 12716                           
 12717                           	psect	text32
 12718  00446A                     __ptext32:
 12719                           	opt stack 0
 12720  00446A                     _memcmp:
 12721                           	opt stack 24
 12722                           
 12723                           ;incstack = 0
 12724  00446A  D040               	goto	l11051
 12725  00446C                     l11043:
 12726  00446C  C016  FFD9         	movff	memcmp@s1,fsr2l
 12727  004470  C017  FFDA         	movff	memcmp@s1+1,fsr2h
 12728  004474  50DF               	movf	indf2,w,c
 12729  004476  6E1C               	movwf	??_memcmp& (0+255),c
 12730  004478  C018  FFF6         	movff	memcmp@s2,tblptrl
 12731  00447C  C019  FFF7         	movff	memcmp@s2+1,tblptrh
 12732  004480  6AF8               	clrf	tblptru,c
 12733  004482  0E07               	movlw	(high __ramtop+-1)
 12734  004484  64F7               	cpfsgt	tblptrh,c
 12735  004486  D003               	bra	u12197
 12736  004488  0008               	tblrd		*
 12737  00448A  50F5               	movf	tablat,w,c
 12738  00448C  D005               	bra	u12190
 12739  00448E                     u12197:
 12740  00448E  CFF6 FFE9          	movff	tblptrl,fsr0l
 12741  004492  CFF7 FFEA          	movff	tblptrh,fsr0h
 12742  004496  50EF               	movf	indf0,w,c
 12743  004498                     u12190:
 12744  004498  181C               	xorwf	??_memcmp,w,c
 12745  00449A  B4D8               	btfsc	status,2,c
 12746  00449C  D023               	goto	l11049
 12747  00449E  C018  FFF6         	movff	memcmp@s2,tblptrl
 12748  0044A2  C019  FFF7         	movff	memcmp@s2+1,tblptrh
 12749  0044A6  6AF8               	clrf	tblptru,c
 12750  0044A8  0E07               	movlw	(high __ramtop+-1)
 12751  0044AA  64F7               	cpfsgt	tblptrh,c
 12752  0044AC  D003               	bra	u12217
 12753  0044AE  0008               	tblrd		*
 12754  0044B0  50F5               	movf	tablat,w,c
 12755  0044B2  D005               	bra	u12210
 12756  0044B4                     u12217:
 12757  0044B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 12758  0044B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 12759  0044BC  50EF               	movf	indf0,w,c
 12760  0044BE                     u12210:
 12761  0044BE  6E1C               	movwf	??_memcmp& (0+255),c
 12762  0044C0  6A1D               	clrf	(??_memcmp+1)& (0+255),c
 12763  0044C2  1E1C               	comf	??_memcmp,f,c
 12764  0044C4  1E1D               	comf	??_memcmp+1,f,c
 12765  0044C6  4A1C               	infsnz	??_memcmp,f,c
 12766  0044C8  2A1D               	incf	??_memcmp+1,f,c
 12767  0044CA  C016  FFD9         	movff	memcmp@s1,fsr2l
 12768  0044CE  C017  FFDA         	movff	memcmp@s1+1,fsr2h
 12769  0044D2  50DF               	movf	indf2,w,c
 12770  0044D4  6E1E               	movwf	(??_memcmp+2)& (0+255),c
 12771  0044D6  501E               	movf	??_memcmp+2,w,c
 12772  0044D8  241C               	addwf	??_memcmp,w,c
 12773  0044DA  6E16               	movwf	?_memcmp,c
 12774  0044DC  0E00               	movlw	0
 12775  0044DE  201D               	addwfc	??_memcmp+1,w,c
 12776  0044E0  6E17               	movwf	?_memcmp+1,c
 12777  0044E2  0012               	return	
 12778  0044E4                     l11049:
 12779  0044E4  4A16               	infsnz	memcmp@s1,f,c
 12780  0044E6  2A17               	incf	memcmp@s1+1,f,c
 12781  0044E8  4A18               	infsnz	memcmp@s2,f,c
 12782  0044EA  2A19               	incf	memcmp@s2+1,f,c
 12783  0044EC                     l11051:
 12784  0044EC  061A               	decf	memcmp@n,f,c
 12785  0044EE  A0D8               	btfss	status,0,c
 12786  0044F0  061B               	decf	memcmp@n+1,f,c
 12787  0044F2  281A               	incf	memcmp@n,w,c
 12788  0044F4  E1BB               	bnz	l11043
 12789  0044F6  281B               	incf	memcmp@n+1,w,c
 12790  0044F8  A4D8               	btfss	status,2,c
 12791  0044FA  D7B8               	goto	l11043
 12792  0044FC  0E00               	movlw	0
 12793  0044FE  6E17               	movwf	?_memcmp+1,c
 12794  004500  0E00               	movlw	0
 12795  004502  6E16               	movwf	?_memcmp,c
 12796  004504  0012               	return	
 12797  004506                     __end_of_memcmp:
 12798                           	opt stack 0
 12799                           tosu	equ	0xFFF
 12800                           tosh	equ	0xFFE
 12801                           tosl	equ	0xFFD
 12802                           pclath	equ	0xFFA
 12803                           tblptru	equ	0xFF8
 12804                           tblptrh	equ	0xFF7
 12805                           tblptrl	equ	0xFF6
 12806                           tablat	equ	0xFF5
 12807                           prodh	equ	0xFF4
 12808                           prodl	equ	0xFF3
 12809                           intcon	equ	0xFF2
 12810                           intcon2	equ	0xFF1
 12811                           intcon3	equ	0xFF0
 12812                           indf0	equ	0xFEF
 12813                           postinc0	equ	0xFEE
 12814                           fsr0h	equ	0xFEA
 12815                           fsr0l	equ	0xFE9
 12816                           wreg	equ	0xFE8
 12817                           indf1	equ	0xFE7
 12818                           postinc1	equ	0xFE6
 12819                           postdec1	equ	0xFE5
 12820                           fsr1h	equ	0xFE2
 12821                           fsr1l	equ	0xFE1
 12822                           indf2	equ	0xFDF
 12823                           postinc2	equ	0xFDE
 12824                           postdec2	equ	0xFDD
 12825                           fsr2h	equ	0xFDA
 12826                           fsr2l	equ	0xFD9
 12827                           status	equ	0xFD8
 12828                           
 12829 ;; *************** function ___lmul *****************
 12830 ;; Defined at:
 12831 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
 12832 ;; Parameters:    Size  Location     Type
 12833 ;;  multiplier      4   21[COMRAM] unsigned long 
 12834 ;;  multiplicand    4   25[COMRAM] unsigned long 
 12835 ;; Auto vars:     Size  Location     Type
 12836 ;;  product         4   29[COMRAM] unsigned long 
 12837 ;; Return value:  Size  Location     Type
 12838 ;;                  4   21[COMRAM] unsigned long 
 12839 ;; Registers used:
 12840 ;;		wreg, status,2, status,0
 12841 ;; Tracked objects:
 12842 ;;		On entry : 0/0
 12843 ;;		On exit  : 0/0
 12844 ;;		Unchanged: 0/0
 12845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12846 ;;      Params:         8       0       0       0       0       0       0       0       0
 12847 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12848 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12849 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12850 ;;Total ram usage:       12 bytes
 12851 ;; Hardware stack levels used:    1
 12852 ;; Hardware stack levels required when called:    2
 12853 ;; This function calls:
 12854 ;;		Nothing
 12855 ;; This function is called by:
 12856 ;;		_clust2sect
 12857 ;;		_auto_mount
 12858 ;;		_strtod
 12859 ;;		_atol
 12860 ;; This function uses a non-reentrant model
 12861 ;;
 12862                           
 12863                           	psect	text33
 12864  004AA4                     __ptext33:
 12865                           	opt stack 0
 12866  004AA4                     ___lmul:
 12867                           	opt stack 22
 12868                           
 12869                           ;incstack = 0
 12870  004AA4  0E00               	movlw	0
 12871  004AA6  6E1E               	movwf	___lmul@product,c
 12872  004AA8  0E00               	movlw	0
 12873  004AAA  6E1F               	movwf	___lmul@product+1,c
 12874  004AAC  0E00               	movlw	0
 12875  004AAE  6E20               	movwf	___lmul@product+2,c
 12876  004AB0  0E00               	movlw	0
 12877  004AB2  6E21               	movwf	___lmul@product+3,c
 12878  004AB4                     l10699:
 12879  004AB4  A016               	btfss	___lmul@multiplier,0,c
 12880  004AB6  D008               	goto	l10703
 12881  004AB8  501A               	movf	___lmul@multiplicand,w,c
 12882  004ABA  261E               	addwf	___lmul@product,f,c
 12883  004ABC  501B               	movf	___lmul@multiplicand+1,w,c
 12884  004ABE  221F               	addwfc	___lmul@product+1,f,c
 12885  004AC0  501C               	movf	___lmul@multiplicand+2,w,c
 12886  004AC2  2220               	addwfc	___lmul@product+2,f,c
 12887  004AC4  501D               	movf	___lmul@multiplicand+3,w,c
 12888  004AC6  2221               	addwfc	___lmul@product+3,f,c
 12889  004AC8                     l10703:
 12890  004AC8  90D8               	bcf	status,0,c
 12891  004ACA  361A               	rlcf	___lmul@multiplicand,f,c
 12892  004ACC  361B               	rlcf	___lmul@multiplicand+1,f,c
 12893  004ACE  361C               	rlcf	___lmul@multiplicand+2,f,c
 12894  004AD0  361D               	rlcf	___lmul@multiplicand+3,f,c
 12895  004AD2  90D8               	bcf	status,0,c
 12896  004AD4  3219               	rrcf	___lmul@multiplier+3,f,c
 12897  004AD6  3218               	rrcf	___lmul@multiplier+2,f,c
 12898  004AD8  3217               	rrcf	___lmul@multiplier+1,f,c
 12899  004ADA  3216               	rrcf	___lmul@multiplier,f,c
 12900  004ADC  5016               	movf	___lmul@multiplier,w,c
 12901  004ADE  1017               	iorwf	___lmul@multiplier+1,w,c
 12902  004AE0  1018               	iorwf	___lmul@multiplier+2,w,c
 12903  004AE2  1019               	iorwf	___lmul@multiplier+3,w,c
 12904  004AE4  A4D8               	btfss	status,2,c
 12905  004AE6  D7E6               	goto	l10699
 12906  004AE8  C01E  F016         	movff	___lmul@product,?___lmul
 12907  004AEC  C01F  F017         	movff	___lmul@product+1,?___lmul+1
 12908  004AF0  C020  F018         	movff	___lmul@product+2,?___lmul+2
 12909  004AF4  C021  F019         	movff	___lmul@product+3,?___lmul+3
 12910  004AF8  0012               	return		;funcret
 12911  004AFA                     __end_of___lmul:
 12912                           	opt stack 0
 12913                           tosu	equ	0xFFF
 12914                           tosh	equ	0xFFE
 12915                           tosl	equ	0xFFD
 12916                           pclath	equ	0xFFA
 12917                           tblptru	equ	0xFF8
 12918                           tblptrh	equ	0xFF7
 12919                           tblptrl	equ	0xFF6
 12920                           tablat	equ	0xFF5
 12921                           prodh	equ	0xFF4
 12922                           prodl	equ	0xFF3
 12923                           intcon	equ	0xFF2
 12924                           intcon2	equ	0xFF1
 12925                           intcon3	equ	0xFF0
 12926                           indf0	equ	0xFEF
 12927                           postinc0	equ	0xFEE
 12928                           fsr0h	equ	0xFEA
 12929                           fsr0l	equ	0xFE9
 12930                           wreg	equ	0xFE8
 12931                           indf1	equ	0xFE7
 12932                           postinc1	equ	0xFE6
 12933                           postdec1	equ	0xFE5
 12934                           fsr1h	equ	0xFE2
 12935                           fsr1l	equ	0xFE1
 12936                           indf2	equ	0xFDF
 12937                           postinc2	equ	0xFDE
 12938                           postdec2	equ	0xFDD
 12939                           fsr2h	equ	0xFDA
 12940                           fsr2l	equ	0xFD9
 12941                           status	equ	0xFD8
 12942                           
 12943 ;; *************** function ___lldiv *****************
 12944 ;; Defined at:
 12945 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 12946 ;; Parameters:    Size  Location     Type
 12947 ;;  dividend        4   21[COMRAM] unsigned long 
 12948 ;;  divisor         4   25[COMRAM] unsigned long 
 12949 ;; Auto vars:     Size  Location     Type
 12950 ;;  quotient        4   29[COMRAM] unsigned long 
 12951 ;;  counter         1   33[COMRAM] unsigned char 
 12952 ;; Return value:  Size  Location     Type
 12953 ;;                  4   21[COMRAM] unsigned long 
 12954 ;; Registers used:
 12955 ;;		wreg, status,2, status,0
 12956 ;; Tracked objects:
 12957 ;;		On entry : 0/0
 12958 ;;		On exit  : 0/0
 12959 ;;		Unchanged: 0/0
 12960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12961 ;;      Params:         8       0       0       0       0       0       0       0       0
 12962 ;;      Locals:         5       0       0       0       0       0       0       0       0
 12963 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12964 ;;      Totals:        13       0       0       0       0       0       0       0       0
 12965 ;;Total ram usage:       13 bytes
 12966 ;; Hardware stack levels used:    1
 12967 ;; Hardware stack levels required when called:    2
 12968 ;; This function calls:
 12969 ;;		Nothing
 12970 ;; This function is called by:
 12971 ;;		_auto_mount
 12972 ;;		_convert_time_to_utc
 12973 ;;		_f_lseek
 12974 ;;		_sprintf
 12975 ;; This function uses a non-reentrant model
 12976 ;;
 12977                           
 12978                           	psect	text34
 12979  0046AC                     __ptext34:
 12980                           	opt stack 0
 12981  0046AC                     ___lldiv:
 12982                           	opt stack 24
 12983                           
 12984                           ;incstack = 0
 12985  0046AC  0E00               	movlw	0
 12986  0046AE  6E1E               	movwf	___lldiv@quotient,c
 12987  0046B0  0E00               	movlw	0
 12988  0046B2  6E1F               	movwf	___lldiv@quotient+1,c
 12989  0046B4  0E00               	movlw	0
 12990  0046B6  6E20               	movwf	___lldiv@quotient+2,c
 12991  0046B8  0E00               	movlw	0
 12992  0046BA  6E21               	movwf	___lldiv@quotient+3,c
 12993  0046BC  501A               	movf	___lldiv@divisor,w,c
 12994  0046BE  101B               	iorwf	___lldiv@divisor+1,w,c
 12995  0046C0  101C               	iorwf	___lldiv@divisor+2,w,c
 12996  0046C2  101D               	iorwf	___lldiv@divisor+3,w,c
 12997  0046C4  B4D8               	btfsc	status,2,c
 12998  0046C6  D02A               	goto	l1906
 12999  0046C8  0E01               	movlw	1
 13000  0046CA  6E22               	movwf	___lldiv@counter,c
 13001  0046CC  D006               	goto	l11423
 13002  0046CE                     l11421:
 13003  0046CE  90D8               	bcf	status,0,c
 13004  0046D0  361A               	rlcf	___lldiv@divisor,f,c
 13005  0046D2  361B               	rlcf	___lldiv@divisor+1,f,c
 13006  0046D4  361C               	rlcf	___lldiv@divisor+2,f,c
 13007  0046D6  361D               	rlcf	___lldiv@divisor+3,f,c
 13008  0046D8  2A22               	incf	___lldiv@counter,f,c
 13009  0046DA                     l11423:
 13010  0046DA  AE1D               	btfss	___lldiv@divisor+3,7,c
 13011  0046DC  D7F8               	goto	l11421
 13012  0046DE                     l11425:
 13013  0046DE  90D8               	bcf	status,0,c
 13014  0046E0  361E               	rlcf	___lldiv@quotient,f,c
 13015  0046E2  361F               	rlcf	___lldiv@quotient+1,f,c
 13016  0046E4  3620               	rlcf	___lldiv@quotient+2,f,c
 13017  0046E6  3621               	rlcf	___lldiv@quotient+3,f,c
 13018  0046E8  501A               	movf	___lldiv@divisor,w,c
 13019  0046EA  5C16               	subwf	___lldiv@dividend,w,c
 13020  0046EC  501B               	movf	___lldiv@divisor+1,w,c
 13021  0046EE  5817               	subwfb	___lldiv@dividend+1,w,c
 13022  0046F0  501C               	movf	___lldiv@divisor+2,w,c
 13023  0046F2  5818               	subwfb	___lldiv@dividend+2,w,c
 13024  0046F4  501D               	movf	___lldiv@divisor+3,w,c
 13025  0046F6  5819               	subwfb	___lldiv@dividend+3,w,c
 13026  0046F8  A0D8               	btfss	status,0,c
 13027  0046FA  D009               	goto	l11433
 13028  0046FC  501A               	movf	___lldiv@divisor,w,c
 13029  0046FE  5E16               	subwf	___lldiv@dividend,f,c
 13030  004700  501B               	movf	___lldiv@divisor+1,w,c
 13031  004702  5A17               	subwfb	___lldiv@dividend+1,f,c
 13032  004704  501C               	movf	___lldiv@divisor+2,w,c
 13033  004706  5A18               	subwfb	___lldiv@dividend+2,f,c
 13034  004708  501D               	movf	___lldiv@divisor+3,w,c
 13035  00470A  5A19               	subwfb	___lldiv@dividend+3,f,c
 13036  00470C  801E               	bsf	___lldiv@quotient,0,c
 13037  00470E                     l11433:
 13038  00470E  90D8               	bcf	status,0,c
 13039  004710  321D               	rrcf	___lldiv@divisor+3,f,c
 13040  004712  321C               	rrcf	___lldiv@divisor+2,f,c
 13041  004714  321B               	rrcf	___lldiv@divisor+1,f,c
 13042  004716  321A               	rrcf	___lldiv@divisor,f,c
 13043  004718  2E22               	decfsz	___lldiv@counter,f,c
 13044  00471A  D7E1               	goto	l11425
 13045  00471C                     l1906:
 13046  00471C  C01E  F016         	movff	___lldiv@quotient,?___lldiv
 13047  004720  C01F  F017         	movff	___lldiv@quotient+1,?___lldiv+1
 13048  004724  C020  F018         	movff	___lldiv@quotient+2,?___lldiv+2
 13049  004728  C021  F019         	movff	___lldiv@quotient+3,?___lldiv+3
 13050  00472C  0012               	return		;funcret
 13051  00472E                     __end_of___lldiv:
 13052                           	opt stack 0
 13053                           tosu	equ	0xFFF
 13054                           tosh	equ	0xFFE
 13055                           tosl	equ	0xFFD
 13056                           pclath	equ	0xFFA
 13057                           tblptru	equ	0xFF8
 13058                           tblptrh	equ	0xFF7
 13059                           tblptrl	equ	0xFF6
 13060                           tablat	equ	0xFF5
 13061                           prodh	equ	0xFF4
 13062                           prodl	equ	0xFF3
 13063                           intcon	equ	0xFF2
 13064                           intcon2	equ	0xFF1
 13065                           intcon3	equ	0xFF0
 13066                           indf0	equ	0xFEF
 13067                           postinc0	equ	0xFEE
 13068                           fsr0h	equ	0xFEA
 13069                           fsr0l	equ	0xFE9
 13070                           wreg	equ	0xFE8
 13071                           indf1	equ	0xFE7
 13072                           postinc1	equ	0xFE6
 13073                           postdec1	equ	0xFE5
 13074                           fsr1h	equ	0xFE2
 13075                           fsr1l	equ	0xFE1
 13076                           indf2	equ	0xFDF
 13077                           postinc2	equ	0xFDE
 13078                           postdec2	equ	0xFDD
 13079                           fsr2h	equ	0xFDA
 13080                           fsr2l	equ	0xFD9
 13081                           status	equ	0xFD8
 13082                           
 13083 ;; *************** function _f_mount *****************
 13084 ;; Defined at:
 13085 ;;		line 823 in file "bibliotecas/tff.c"
 13086 ;; Parameters:    Size  Location     Type
 13087 ;;  drv             1    wreg     unsigned char 
 13088 ;;  fs              2   21[COMRAM] PTR struct _FATFS
 13089 ;;		 -> fs(552), 
 13090 ;; Auto vars:     Size  Location     Type
 13091 ;;  drv             1   23[COMRAM] unsigned char 
 13092 ;; Return value:  Size  Location     Type
 13093 ;;                  1    wreg      enum E155
 13094 ;; Registers used:
 13095 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13096 ;; Tracked objects:
 13097 ;;		On entry : 0/0
 13098 ;;		On exit  : 0/0
 13099 ;;		Unchanged: 0/0
 13100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13101 ;;      Params:         2       0       0       0       0       0       0       0       0
 13102 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13103 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13104 ;;      Totals:         3       0       0       0       0       0       0       0       0
 13105 ;;Total ram usage:        3 bytes
 13106 ;; Hardware stack levels used:    1
 13107 ;; Hardware stack levels required when called:    2
 13108 ;; This function calls:
 13109 ;;		Nothing
 13110 ;; This function is called by:
 13111 ;;		_SDCard
 13112 ;; This function uses a non-reentrant model
 13113 ;;
 13114                           
 13115                           	psect	text35
 13116  004B9E                     __ptext35:
 13117                           	opt stack 0
 13118  004B9E                     _f_mount:
 13119                           	opt stack 26
 13120                           
 13121                           ;incstack = 0
 13122                           ;f_mount@drv stored from wreg
 13123  004B9E  6E18               	movwf	f_mount@drv,c
 13124                           
 13125                           ;tff.c: 828: if (drv) return FR_INVALID_DRIVE;
 13126  004BA0  5018               	movf	f_mount@drv,w,c
 13127  004BA2  B4D8               	btfsc	status,2,c
 13128  004BA4  D002               	goto	l11839
 13129  004BA6  0E05               	movlw	5
 13130  004BA8  0012               	return	
 13131  004BAA                     l11839:
 13132                           
 13133                           ;tff.c: 830: if (FatFs) FatFs->fs_type = 0;
 13134  004BAA  0100               	movlb	0	; () banked
 13135  004BAC  51FC               	movf	_FatFs& (0+255),w,b
 13136  004BAE  0100               	movlb	0	; () banked
 13137  004BB0  11FD               	iorwf	(_FatFs+1)& (0+255),w,b
 13138  004BB2  B4D8               	btfsc	status,2,c
 13139  004BB4  D009               	goto	l11843
 13140                           
 13141                           ; BSR set to: 0
 13142  004BB6  0100               	movlb	0	; () banked
 13143  004BB8  EE20 F024          	lfsr	2,36
 13144  004BBC  51FC               	movf	_FatFs& (0+255),w,b
 13145  004BBE  26D9               	addwf	fsr2l,f,c
 13146  004BC0  51FD               	movf	(_FatFs+1)& (0+255),w,b
 13147  004BC2  22DA               	addwfc	fsr2h,f,c
 13148  004BC4  0E00               	movlw	0
 13149  004BC6  6EDF               	movwf	indf2,c
 13150  004BC8                     l11843:
 13151                           
 13152                           ; BSR set to: 0
 13153                           ;tff.c: 832: FatFs = fs;
 13154  004BC8  C016  F0FC         	movff	f_mount@fs,_FatFs
 13155  004BCC  C017  F0FD         	movff	f_mount@fs+1,_FatFs+1
 13156                           
 13157                           ; BSR set to: 0
 13158                           ;tff.c: 833: if (fs) fs->fs_type = 0;
 13159  004BD0  5016               	movf	f_mount@fs,w,c
 13160  004BD2  1017               	iorwf	f_mount@fs+1,w,c
 13161  004BD4  B4D8               	btfsc	status,2,c
 13162  004BD6  D008               	goto	l11849
 13163                           
 13164                           ; BSR set to: 0
 13165  004BD8  EE20 F024          	lfsr	2,36
 13166  004BDC  5016               	movf	f_mount@fs,w,c
 13167  004BDE  26D9               	addwf	fsr2l,f,c
 13168  004BE0  5017               	movf	f_mount@fs+1,w,c
 13169  004BE2  22DA               	addwfc	fsr2h,f,c
 13170  004BE4  0E00               	movlw	0
 13171  004BE6  6EDF               	movwf	indf2,c
 13172  004BE8                     l11849:
 13173                           
 13174                           ; BSR set to: 0
 13175                           ;tff.c: 835: return FR_OK;
 13176  004BE8  0E00               	movlw	0
 13177  004BEA  0012               	return	
 13178  004BEC                     __end_of_f_mount:
 13179                           	opt stack 0
 13180                           tosu	equ	0xFFF
 13181                           tosh	equ	0xFFE
 13182                           tosl	equ	0xFFD
 13183                           pclath	equ	0xFFA
 13184                           tblptru	equ	0xFF8
 13185                           tblptrh	equ	0xFF7
 13186                           tblptrl	equ	0xFF6
 13187                           tablat	equ	0xFF5
 13188                           prodh	equ	0xFF4
 13189                           prodl	equ	0xFF3
 13190                           intcon	equ	0xFF2
 13191                           intcon2	equ	0xFF1
 13192                           intcon3	equ	0xFF0
 13193                           indf0	equ	0xFEF
 13194                           postinc0	equ	0xFEE
 13195                           fsr0h	equ	0xFEA
 13196                           fsr0l	equ	0xFE9
 13197                           wreg	equ	0xFE8
 13198                           indf1	equ	0xFE7
 13199                           postinc1	equ	0xFE6
 13200                           postdec1	equ	0xFE5
 13201                           fsr1h	equ	0xFE2
 13202                           fsr1l	equ	0xFE1
 13203                           indf2	equ	0xFDF
 13204                           postinc2	equ	0xFDE
 13205                           postdec2	equ	0xFDD
 13206                           fsr2h	equ	0xFDA
 13207                           fsr2l	equ	0xFD9
 13208                           status	equ	0xFD8
 13209                           
 13210 ;; *************** function _f_close *****************
 13211 ;; Defined at:
 13212 ;;		line 1140 in file "bibliotecas/tff.c"
 13213 ;; Parameters:    Size  Location     Type
 13214 ;;  fp              2   73[BANK0 ] PTR struct _FIL
 13215 ;;		 -> SDCard@fil(32), 
 13216 ;; Auto vars:     Size  Location     Type
 13217 ;;  res             1   52[COMRAM] enum E155
 13218 ;; Return value:  Size  Location     Type
 13219 ;;                  1    wreg      enum E155
 13220 ;; Registers used:
 13221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13222 ;; Tracked objects:
 13223 ;;		On entry : 0/0
 13224 ;;		On exit  : 0/0
 13225 ;;		Unchanged: 0/0
 13226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13227 ;;      Params:         0       2       0       0       0       0       0       0       0
 13228 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13229 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13230 ;;      Totals:         1       2       0       0       0       0       0       0       0
 13231 ;;Total ram usage:        3 bytes
 13232 ;; Hardware stack levels used:    1
 13233 ;; Hardware stack levels required when called:   11
 13234 ;; This function calls:
 13235 ;;		_f_sync
 13236 ;; This function is called by:
 13237 ;;		_SDCard
 13238 ;; This function uses a non-reentrant model
 13239 ;;
 13240                           
 13241                           	psect	text36
 13242  004EC8                     __ptext36:
 13243                           	opt stack 0
 13244  004EC8                     _f_close:
 13245                           	opt stack 17
 13246                           
 13247                           ;tff.c: 1144: FRESULT res;
 13248                           ;tff.c: 1148: res = f_sync(fp);
 13249                           
 13250                           ;incstack = 0
 13251  004EC8  C0A9  F09C         	movff	f_close@fp,f_sync@fp
 13252  004ECC  C0AA  F09D         	movff	f_close@fp+1,f_sync@fp+1
 13253  004ED0  EC97  F016         	call	_f_sync	;wreg free
 13254  004ED4  6E35               	movwf	f_close@res,c
 13255                           
 13256                           ;tff.c: 1152: if (res == FR_OK) fp->fs = (0);
 13257  004ED6  5035               	movf	f_close@res,w,c
 13258  004ED8  A4D8               	btfss	status,2,c
 13259  004EDA  0012               	return	
 13260  004EDC  0100               	movlb	0	; () banked
 13261  004EDE  EE20 F004          	lfsr	2,4
 13262  004EE2  51A9               	movf	f_close@fp& (0+255),w,b
 13263  004EE4  26D9               	addwf	fsr2l,f,c
 13264  004EE6  51AA               	movf	(f_close@fp+1)& (0+255),w,b
 13265  004EE8  22DA               	addwfc	fsr2h,f,c
 13266  004EEA  0E00               	movlw	0
 13267  004EEC  6EDE               	movwf	postinc2,c
 13268  004EEE  0E00               	movlw	0
 13269  004EF0  6EDD               	movwf	postdec2,c
 13270                           
 13271                           ; BSR set to: 0
 13272  004EF2  0012               	return	
 13273  004EF4                     __end_of_f_close:
 13274                           	opt stack 0
 13275                           tosu	equ	0xFFF
 13276                           tosh	equ	0xFFE
 13277                           tosl	equ	0xFFD
 13278                           pclath	equ	0xFFA
 13279                           tblptru	equ	0xFF8
 13280                           tblptrh	equ	0xFF7
 13281                           tblptrl	equ	0xFF6
 13282                           tablat	equ	0xFF5
 13283                           prodh	equ	0xFF4
 13284                           prodl	equ	0xFF3
 13285                           intcon	equ	0xFF2
 13286                           intcon2	equ	0xFF1
 13287                           intcon3	equ	0xFF0
 13288                           indf0	equ	0xFEF
 13289                           postinc0	equ	0xFEE
 13290                           fsr0h	equ	0xFEA
 13291                           fsr0l	equ	0xFE9
 13292                           wreg	equ	0xFE8
 13293                           indf1	equ	0xFE7
 13294                           postinc1	equ	0xFE6
 13295                           postdec1	equ	0xFE5
 13296                           fsr1h	equ	0xFE2
 13297                           fsr1l	equ	0xFE1
 13298                           indf2	equ	0xFDF
 13299                           postinc2	equ	0xFDE
 13300                           postdec2	equ	0xFDD
 13301                           fsr2h	equ	0xFDA
 13302                           fsr2l	equ	0xFD9
 13303                           status	equ	0xFD8
 13304                           
 13305 ;; *************** function _f_sync *****************
 13306 ;; Defined at:
 13307 ;;		line 1101 in file "bibliotecas/tff.c"
 13308 ;; Parameters:    Size  Location     Type
 13309 ;;  fp              2   60[BANK0 ] PTR struct _FIL
 13310 ;;		 -> SDCard@fil(32), 
 13311 ;; Auto vars:     Size  Location     Type
 13312 ;;  tim             4   67[BANK0 ] unsigned long 
 13313 ;;  dir             2   71[BANK0 ] PTR unsigned char 
 13314 ;;		 -> fs(552), NULL(0), 
 13315 ;;  res             1   66[BANK0 ] enum E155
 13316 ;; Return value:  Size  Location     Type
 13317 ;;                  1    wreg      enum E155
 13318 ;; Registers used:
 13319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13320 ;; Tracked objects:
 13321 ;;		On entry : 0/0
 13322 ;;		On exit  : 0/0
 13323 ;;		Unchanged: 0/0
 13324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13325 ;;      Params:         0       2       0       0       0       0       0       0       0
 13326 ;;      Locals:         0       7       0       0       0       0       0       0       0
 13327 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13328 ;;      Totals:         0      13       0       0       0       0       0       0       0
 13329 ;;Total ram usage:       13 bytes
 13330 ;; Hardware stack levels used:    1
 13331 ;; Hardware stack levels required when called:   10
 13332 ;; This function calls:
 13333 ;;		_get_fattime
 13334 ;;		_move_window
 13335 ;;		_sync
 13336 ;;		_validate
 13337 ;; This function is called by:
 13338 ;;		_f_close
 13339 ;; This function uses a non-reentrant model
 13340 ;;
 13341                           
 13342                           	psect	text37
 13343  002D2E                     __ptext37:
 13344                           	opt stack 0
 13345  002D2E                     _f_sync:
 13346                           	opt stack 17
 13347                           
 13348                           ;tff.c: 1105: FRESULT res;
 13349                           ;tff.c: 1106: DWORD tim;
 13350                           ;tff.c: 1107: BYTE *dir;
 13351                           ;tff.c: 1110: res = validate(fp->fs, fp->id);
 13352                           
 13353                           ;incstack = 0
 13354  002D2E  0100               	movlb	0	; () banked
 13355  002D30  EE20 F004          	lfsr	2,4
 13356  002D34  519C               	movf	f_sync@fp& (0+255),w,b
 13357  002D36  26D9               	addwf	fsr2l,f,c
 13358  002D38  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13359  002D3A  22DA               	addwfc	fsr2h,f,c
 13360  002D3C  CFDE F01D          	movff	postinc2,validate@fs
 13361  002D40  CFDD F01E          	movff	postdec2,validate@fs+1
 13362  002D44  C09C  FFD9         	movff	f_sync@fp,fsr2l
 13363  002D48  C09D  FFDA         	movff	f_sync@fp+1,fsr2h
 13364  002D4C  CFDE F01F          	movff	postinc2,validate@id
 13365  002D50  CFDD F020          	movff	postdec2,validate@id+1
 13366  002D54  ECF6  F025         	call	_validate	;wreg free
 13367  002D58  0100               	movlb	0	; () banked
 13368  002D5A  6FA2               	movwf	f_sync@res& (0+255),b
 13369                           
 13370                           ; BSR set to: 0
 13371                           ;tff.c: 1111: if (res == FR_OK) {
 13372  002D5C  0100               	movlb	0	; () banked
 13373  002D5E  51A2               	movf	f_sync@res& (0+255),w,b
 13374  002D60  0100               	movlb	0	; () banked
 13375  002D62  A4D8               	btfss	status,2,c
 13376  002D64  D15E               	goto	l11829
 13377                           
 13378                           ; BSR set to: 0
 13379                           ;tff.c: 1112: if (fp->flag & 0x20) {
 13380  002D66  0100               	movlb	0	; () banked
 13381  002D68  EE20 F002          	lfsr	2,2
 13382  002D6C  519C               	movf	f_sync@fp& (0+255),w,b
 13383  002D6E  26D9               	addwf	fsr2l,f,c
 13384  002D70  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13385  002D72  22DA               	addwfc	fsr2h,f,c
 13386  002D74  0100               	movlb	0	; () banked
 13387  002D76  AADF               	btfss	indf2,5,c
 13388  002D78  D154               	goto	l11829
 13389                           
 13390                           ; BSR set to: 0
 13391                           ;tff.c: 1114: if (!move_window(fp->dir_sect))
 13392  002D7A  0100               	movlb	0	; () banked
 13393  002D7C  EE20 F01A          	lfsr	2,26
 13394  002D80  519C               	movf	f_sync@fp& (0+255),w,b
 13395  002D82  26D9               	addwf	fsr2l,f,c
 13396  002D84  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13397  002D86  22DA               	addwfc	fsr2h,f,c
 13398  002D88  CFDE F083          	movff	postinc2,move_window@sector
 13399  002D8C  CFDE F084          	movff	postinc2,move_window@sector+1
 13400  002D90  CFDE F085          	movff	postinc2,move_window@sector+2
 13401  002D94  CFDE F086          	movff	postinc2,move_window@sector+3
 13402  002D98  EC60  F019         	call	_move_window	;wreg free
 13403  002D9C  0900               	iorlw	0
 13404  002D9E  A4D8               	btfss	status,2,c
 13405  002DA0  D002               	goto	l11797
 13406                           
 13407                           ;tff.c: 1115: return FR_RW_ERROR;
 13408  002DA2  0E08               	movlw	8
 13409  002DA4  0012               	return	
 13410  002DA6                     l11797:
 13411                           
 13412                           ;tff.c: 1116: dir = fp->dir_ptr;
 13413  002DA6  0100               	movlb	0	; () banked
 13414  002DA8  EE20 F01E          	lfsr	2,30
 13415  002DAC  519C               	movf	f_sync@fp& (0+255),w,b
 13416  002DAE  26D9               	addwf	fsr2l,f,c
 13417  002DB0  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13418  002DB2  22DA               	addwfc	fsr2h,f,c
 13419  002DB4  CFDE F0A7          	movff	postinc2,f_sync@dir
 13420  002DB8  CFDD F0A8          	movff	postdec2,f_sync@dir+1
 13421                           
 13422                           ;tff.c: 1117: dir[11] |= 0x20;
 13423  002DBC  0100               	movlb	0	; () banked
 13424  002DBE  EE20 F00B          	lfsr	2,11
 13425  002DC2  51A7               	movf	f_sync@dir& (0+255),w,b
 13426  002DC4  26D9               	addwf	fsr2l,f,c
 13427  002DC6  51A8               	movf	(f_sync@dir+1)& (0+255),w,b
 13428  002DC8  22DA               	addwfc	fsr2h,f,c
 13429  002DCA  0E00               	movlw	0
 13430  002DCC  8ADB               	bsf	plusw2,5,c
 13431                           
 13432                           ; BSR set to: 0
 13433                           ;tff.c: 1118: *(volatile BYTE*)(&dir[28])=(BYTE)(fp->fsize); *(volatile BYTE*)((&dir[28]
      +                          )+1)=(BYTE)((WORD)(fp->fsize)>>8); *(volatile BYTE*)((&dir[28])+2)=(BYTE)((DWORD)(fp->fs
      +                          ize)>>16); *(volatile BYTE*)((&dir[28])+3)=(BYTE)((DWORD)(fp->fsize)>>24);
 13434  002DCE  0100               	movlb	0	; () banked
 13435  002DD0  EE20 F00A          	lfsr	2,10
 13436  002DD4  519C               	movf	f_sync@fp& (0+255),w,b
 13437  002DD6  26D9               	addwf	fsr2l,f,c
 13438  002DD8  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13439  002DDA  22DA               	addwfc	fsr2h,f,c
 13440  002DDC  0E1C               	movlw	28
 13441  002DDE  0100               	movlb	0	; () banked
 13442  002DE0  25A7               	addwf	f_sync@dir& (0+255),w,b
 13443  002DE2  6EE1               	movwf	fsr1l,c
 13444  002DE4  0E00               	movlw	0
 13445  002DE6  0100               	movlb	0	; () banked
 13446  002DE8  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13447  002DEA  6EE2               	movwf	fsr1h,c
 13448  002DEC  CFDF FFE7          	movff	indf2,indf1
 13449                           
 13450                           ; BSR set to: 0
 13451  002DF0  0E1D               	movlw	29
 13452  002DF2  0100               	movlb	0	; () banked
 13453  002DF4  25A7               	addwf	f_sync@dir& (0+255),w,b
 13454  002DF6  6ED9               	movwf	fsr2l,c
 13455  002DF8  0E00               	movlw	0
 13456  002DFA  0100               	movlb	0	; () banked
 13457  002DFC  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13458  002DFE  6EDA               	movwf	fsr2h,c
 13459  002E00  0100               	movlb	0	; () banked
 13460  002E02  EE10 F00A          	lfsr	1,10
 13461  002E06  519C               	movf	f_sync@fp& (0+255),w,b
 13462  002E08  26E1               	addwf	fsr1l,f,c
 13463  002E0A  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13464  002E0C  22E2               	addwfc	fsr1h,f,c
 13465  002E0E  CFE6 F09E          	movff	postinc1,??_f_sync
 13466  002E12  CFE5 F09F          	movff	postdec1,??_f_sync+1
 13467  002E16  C09F  F09E         	movff	??_f_sync+1,??_f_sync
 13468  002E1A  0100               	movlb	0	; () banked
 13469  002E1C  6B9F               	clrf	(??_f_sync+1)& (0+255),b
 13470  002E1E  0100               	movlb	0	; () banked
 13471  002E20  519E               	movf	??_f_sync& (0+255),w,b
 13472  002E22  6EDF               	movwf	indf2,c
 13473                           
 13474                           ; BSR set to: 0
 13475  002E24  0E1E               	movlw	30
 13476  002E26  0100               	movlb	0	; () banked
 13477  002E28  25A7               	addwf	f_sync@dir& (0+255),w,b
 13478  002E2A  6ED9               	movwf	fsr2l,c
 13479  002E2C  0E00               	movlw	0
 13480  002E2E  0100               	movlb	0	; () banked
 13481  002E30  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13482  002E32  6EDA               	movwf	fsr2h,c
 13483  002E34  0100               	movlb	0	; () banked
 13484  002E36  EE10 F00A          	lfsr	1,10
 13485  002E3A  519C               	movf	f_sync@fp& (0+255),w,b
 13486  002E3C  26E1               	addwf	fsr1l,f,c
 13487  002E3E  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13488  002E40  22E2               	addwfc	fsr1h,f,c
 13489  002E42  CFE6 F09E          	movff	postinc1,??_f_sync
 13490  002E46  CFE6 F09F          	movff	postinc1,??_f_sync+1
 13491  002E4A  CFE6 F0A0          	movff	postinc1,??_f_sync+2
 13492  002E4E  CFE6 F0A1          	movff	postinc1,??_f_sync+3
 13493  002E52  0E11               	movlw	17
 13494  002E54  D006               	goto	u13490
 13495  002E56                     u13495:
 13496  002E56  0100               	movlb	0	; () banked
 13497  002E58  90D8               	bcf	status,0,c
 13498  002E5A  33A1               	rrcf	(??_f_sync+3)& (0+255),f,b
 13499  002E5C  33A0               	rrcf	(??_f_sync+2)& (0+255),f,b
 13500  002E5E  339F               	rrcf	(??_f_sync+1)& (0+255),f,b
 13501  002E60  339E               	rrcf	??_f_sync& (0+255),f,b
 13502  002E62                     u13490:
 13503  002E62  2EE8               	decfsz	wreg,f,c
 13504  002E64  D7F8               	goto	u13495
 13505  002E66  0100               	movlb	0	; () banked
 13506  002E68  519E               	movf	??_f_sync& (0+255),w,b
 13507  002E6A  6EDF               	movwf	indf2,c
 13508                           
 13509                           ; BSR set to: 0
 13510  002E6C  0E1F               	movlw	31
 13511  002E6E  0100               	movlb	0	; () banked
 13512  002E70  25A7               	addwf	f_sync@dir& (0+255),w,b
 13513  002E72  6ED9               	movwf	fsr2l,c
 13514  002E74  0E00               	movlw	0
 13515  002E76  0100               	movlb	0	; () banked
 13516  002E78  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13517  002E7A  6EDA               	movwf	fsr2h,c
 13518  002E7C  0100               	movlb	0	; () banked
 13519  002E7E  EE10 F00A          	lfsr	1,10
 13520  002E82  519C               	movf	f_sync@fp& (0+255),w,b
 13521  002E84  26E1               	addwf	fsr1l,f,c
 13522  002E86  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13523  002E88  22E2               	addwfc	fsr1h,f,c
 13524  002E8A  CFE6 F09E          	movff	postinc1,??_f_sync
 13525  002E8E  CFE6 F09F          	movff	postinc1,??_f_sync+1
 13526  002E92  CFE6 F0A0          	movff	postinc1,??_f_sync+2
 13527  002E96  CFE6 F0A1          	movff	postinc1,??_f_sync+3
 13528  002E9A  0E19               	movlw	25
 13529  002E9C  D006               	goto	u13500
 13530  002E9E                     u13505:
 13531  002E9E  0100               	movlb	0	; () banked
 13532  002EA0  90D8               	bcf	status,0,c
 13533  002EA2  33A1               	rrcf	(??_f_sync+3)& (0+255),f,b
 13534  002EA4  33A0               	rrcf	(??_f_sync+2)& (0+255),f,b
 13535  002EA6  339F               	rrcf	(??_f_sync+1)& (0+255),f,b
 13536  002EA8  339E               	rrcf	??_f_sync& (0+255),f,b
 13537  002EAA                     u13500:
 13538  002EAA  2EE8               	decfsz	wreg,f,c
 13539  002EAC  D7F8               	goto	u13505
 13540  002EAE  0100               	movlb	0	; () banked
 13541  002EB0  519E               	movf	??_f_sync& (0+255),w,b
 13542  002EB2  6EDF               	movwf	indf2,c
 13543                           
 13544                           ; BSR set to: 0
 13545                           ;tff.c: 1119: *(volatile BYTE*)(&dir[26])=(BYTE)(fp->org_clust); *(volatile BYTE*)((&dir
      +                          [26])+1)=(BYTE)((WORD)(fp->org_clust)>>8);
 13546  002EB4  0100               	movlb	0	; () banked
 13547  002EB6  EE20 F00E          	lfsr	2,14
 13548  002EBA  519C               	movf	f_sync@fp& (0+255),w,b
 13549  002EBC  26D9               	addwf	fsr2l,f,c
 13550  002EBE  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13551  002EC0  22DA               	addwfc	fsr2h,f,c
 13552  002EC2  0E1A               	movlw	26
 13553  002EC4  0100               	movlb	0	; () banked
 13554  002EC6  25A7               	addwf	f_sync@dir& (0+255),w,b
 13555  002EC8  6EE1               	movwf	fsr1l,c
 13556  002ECA  0E00               	movlw	0
 13557  002ECC  0100               	movlb	0	; () banked
 13558  002ECE  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13559  002ED0  6EE2               	movwf	fsr1h,c
 13560  002ED2  CFDF FFE7          	movff	indf2,indf1
 13561                           
 13562                           ; BSR set to: 0
 13563  002ED6  0E1B               	movlw	27
 13564  002ED8  0100               	movlb	0	; () banked
 13565  002EDA  25A7               	addwf	f_sync@dir& (0+255),w,b
 13566  002EDC  6ED9               	movwf	fsr2l,c
 13567  002EDE  0E00               	movlw	0
 13568  002EE0  0100               	movlb	0	; () banked
 13569  002EE2  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13570  002EE4  6EDA               	movwf	fsr2h,c
 13571  002EE6  0100               	movlb	0	; () banked
 13572  002EE8  EE10 F00E          	lfsr	1,14
 13573  002EEC  519C               	movf	f_sync@fp& (0+255),w,b
 13574  002EEE  26E1               	addwf	fsr1l,f,c
 13575  002EF0  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13576  002EF2  22E2               	addwfc	fsr1h,f,c
 13577  002EF4  CFE6 F09E          	movff	postinc1,??_f_sync
 13578  002EF8  CFE5 F09F          	movff	postdec1,??_f_sync+1
 13579  002EFC  C09F  F09E         	movff	??_f_sync+1,??_f_sync
 13580  002F00  0100               	movlb	0	; () banked
 13581  002F02  6B9F               	clrf	(??_f_sync+1)& (0+255),b
 13582  002F04  0100               	movlb	0	; () banked
 13583  002F06  519E               	movf	??_f_sync& (0+255),w,b
 13584  002F08  6EDF               	movwf	indf2,c
 13585                           
 13586                           ; BSR set to: 0
 13587                           ;tff.c: 1121: *(volatile BYTE*)(&dir[20])=(BYTE)(fp->org_clust >> 16); *(volatile BYTE*)
      +                          ((&dir[20])+1)=(BYTE)((WORD)(fp->org_clust >> 16)>>8);
 13588  002F0A  0E14               	movlw	20
 13589  002F0C  0100               	movlb	0	; () banked
 13590  002F0E  25A7               	addwf	f_sync@dir& (0+255),w,b
 13591  002F10  6ED9               	movwf	fsr2l,c
 13592  002F12  0E00               	movlw	0
 13593  002F14  0100               	movlb	0	; () banked
 13594  002F16  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13595  002F18  6EDA               	movwf	fsr2h,c
 13596  002F1A  0100               	movlb	0	; () banked
 13597  002F1C  EE10 F00E          	lfsr	1,14
 13598  002F20  519C               	movf	f_sync@fp& (0+255),w,b
 13599  002F22  26E1               	addwf	fsr1l,f,c
 13600  002F24  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13601  002F26  22E2               	addwfc	fsr1h,f,c
 13602  002F28  CFE6 F09E          	movff	postinc1,??_f_sync
 13603  002F2C  CFE6 F09F          	movff	postinc1,??_f_sync+1
 13604  002F30  CFE6 F0A0          	movff	postinc1,??_f_sync+2
 13605  002F34  CFE6 F0A1          	movff	postinc1,??_f_sync+3
 13606  002F38  0E11               	movlw	17
 13607  002F3A  D006               	goto	u13510
 13608  002F3C                     u13515:
 13609  002F3C  0100               	movlb	0	; () banked
 13610  002F3E  90D8               	bcf	status,0,c
 13611  002F40  33A1               	rrcf	(??_f_sync+3)& (0+255),f,b
 13612  002F42  33A0               	rrcf	(??_f_sync+2)& (0+255),f,b
 13613  002F44  339F               	rrcf	(??_f_sync+1)& (0+255),f,b
 13614  002F46  339E               	rrcf	??_f_sync& (0+255),f,b
 13615  002F48                     u13510:
 13616  002F48  2EE8               	decfsz	wreg,f,c
 13617  002F4A  D7F8               	goto	u13515
 13618  002F4C  0100               	movlb	0	; () banked
 13619  002F4E  519E               	movf	??_f_sync& (0+255),w,b
 13620  002F50  6EDF               	movwf	indf2,c
 13621                           
 13622                           ; BSR set to: 0
 13623  002F52  0E15               	movlw	21
 13624  002F54  0100               	movlb	0	; () banked
 13625  002F56  25A7               	addwf	f_sync@dir& (0+255),w,b
 13626  002F58  6ED9               	movwf	fsr2l,c
 13627  002F5A  0E00               	movlw	0
 13628  002F5C  0100               	movlb	0	; () banked
 13629  002F5E  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13630  002F60  6EDA               	movwf	fsr2h,c
 13631  002F62  0100               	movlb	0	; () banked
 13632  002F64  EE10 F00E          	lfsr	1,14
 13633  002F68  519C               	movf	f_sync@fp& (0+255),w,b
 13634  002F6A  26E1               	addwf	fsr1l,f,c
 13635  002F6C  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13636  002F6E  22E2               	addwfc	fsr1h,f,c
 13637  002F70  CFE6 F09E          	movff	postinc1,??_f_sync
 13638  002F74  CFE6 F09F          	movff	postinc1,??_f_sync+1
 13639  002F78  CFE6 F0A0          	movff	postinc1,??_f_sync+2
 13640  002F7C  CFE6 F0A1          	movff	postinc1,??_f_sync+3
 13641  002F80  0E11               	movlw	17
 13642  002F82  D006               	goto	u13520
 13643  002F84                     u13525:
 13644  002F84  0100               	movlb	0	; () banked
 13645  002F86  90D8               	bcf	status,0,c
 13646  002F88  33A1               	rrcf	(??_f_sync+3)& (0+255),f,b
 13647  002F8A  33A0               	rrcf	(??_f_sync+2)& (0+255),f,b
 13648  002F8C  339F               	rrcf	(??_f_sync+1)& (0+255),f,b
 13649  002F8E  339E               	rrcf	??_f_sync& (0+255),f,b
 13650  002F90                     u13520:
 13651  002F90  2EE8               	decfsz	wreg,f,c
 13652  002F92  D7F8               	goto	u13525
 13653  002F94  C09F  F09E         	movff	??_f_sync+1,??_f_sync
 13654  002F98  0100               	movlb	0	; () banked
 13655  002F9A  6B9F               	clrf	(??_f_sync+1)& (0+255),b
 13656  002F9C  0100               	movlb	0	; () banked
 13657  002F9E  519E               	movf	??_f_sync& (0+255),w,b
 13658  002FA0  6EDF               	movwf	indf2,c
 13659                           
 13660                           ; BSR set to: 0
 13661                           ;tff.c: 1123: tim = get_fattime();
 13662  002FA2  EC8D  F01D         	call	_get_fattime	;wreg free
 13663  002FA6  C016  F0A3         	movff	?_get_fattime,f_sync@tim
 13664  002FAA  C017  F0A4         	movff	?_get_fattime+1,f_sync@tim+1
 13665  002FAE  C018  F0A5         	movff	?_get_fattime+2,f_sync@tim+2
 13666  002FB2  C019  F0A6         	movff	?_get_fattime+3,f_sync@tim+3
 13667                           
 13668                           ;tff.c: 1124: *(volatile BYTE*)(&dir[22])=(BYTE)(tim); *(volatile BYTE*)((&dir[22])+1)=(
      +                          BYTE)((WORD)(tim)>>8); *(volatile BYTE*)((&dir[22])+2)=(BYTE)((DWORD)(tim)>>16); *(volat
      +                          ile BYTE*)((&dir[22])+3)=(BYTE)((DWORD)(tim)>>24);
 13669  002FB6  0E16               	movlw	22
 13670  002FB8  0100               	movlb	0	; () banked
 13671  002FBA  25A7               	addwf	f_sync@dir& (0+255),w,b
 13672  002FBC  6ED9               	movwf	fsr2l,c
 13673  002FBE  0E00               	movlw	0
 13674  002FC0  0100               	movlb	0	; () banked
 13675  002FC2  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13676  002FC4  6EDA               	movwf	fsr2h,c
 13677  002FC6  C0A3  FFDF         	movff	f_sync@tim,indf2
 13678                           
 13679                           ; BSR set to: 0
 13680  002FCA  0E17               	movlw	23
 13681  002FCC  0100               	movlb	0	; () banked
 13682  002FCE  25A7               	addwf	f_sync@dir& (0+255),w,b
 13683  002FD0  6ED9               	movwf	fsr2l,c
 13684  002FD2  0E00               	movlw	0
 13685  002FD4  0100               	movlb	0	; () banked
 13686  002FD6  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13687  002FD8  6EDA               	movwf	fsr2h,c
 13688  002FDA  0100               	movlb	0	; () banked
 13689  002FDC  51A4               	movf	(f_sync@tim+1)& (0+255),w,b
 13690  002FDE  6EDF               	movwf	indf2,c
 13691                           
 13692                           ; BSR set to: 0
 13693  002FE0  0E18               	movlw	24
 13694  002FE2  0100               	movlb	0	; () banked
 13695  002FE4  25A7               	addwf	f_sync@dir& (0+255),w,b
 13696  002FE6  6ED9               	movwf	fsr2l,c
 13697  002FE8  0E00               	movlw	0
 13698  002FEA  0100               	movlb	0	; () banked
 13699  002FEC  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13700  002FEE  6EDA               	movwf	fsr2h,c
 13701  002FF0  C0A5  FFDF         	movff	f_sync@tim+2,indf2
 13702                           
 13703                           ; BSR set to: 0
 13704  002FF4  0E19               	movlw	25
 13705  002FF6  0100               	movlb	0	; () banked
 13706  002FF8  25A7               	addwf	f_sync@dir& (0+255),w,b
 13707  002FFA  6ED9               	movwf	fsr2l,c
 13708  002FFC  0E00               	movlw	0
 13709  002FFE  0100               	movlb	0	; () banked
 13710  003000  21A8               	addwfc	(f_sync@dir+1)& (0+255),w,b
 13711  003002  6EDA               	movwf	fsr2h,c
 13712  003004  C0A6  FFDF         	movff	f_sync@tim+3,indf2
 13713                           
 13714                           ; BSR set to: 0
 13715                           ;tff.c: 1125: fp->flag &= (BYTE)~0x20;
 13716  003008  0100               	movlb	0	; () banked
 13717  00300A  EE20 F002          	lfsr	2,2
 13718  00300E  519C               	movf	f_sync@fp& (0+255),w,b
 13719  003010  26D9               	addwf	fsr2l,f,c
 13720  003012  519D               	movf	(f_sync@fp+1)& (0+255),w,b
 13721  003014  22DA               	addwfc	fsr2h,f,c
 13722  003016  0EDF               	movlw	223
 13723  003018  16DF               	andwf	indf2,f,c
 13724                           
 13725                           ; BSR set to: 0
 13726                           ;tff.c: 1126: res = sync();
 13727  00301A  EC25  F025         	call	_sync	;wreg free
 13728  00301E  0100               	movlb	0	; () banked
 13729  003020  6FA2               	movwf	f_sync@res& (0+255),b
 13730  003022                     l11829:
 13731                           
 13732                           ; BSR set to: 0
 13733                           ;tff.c: 1127: }
 13734                           ;tff.c: 1128: }
 13735                           ;tff.c: 1129: return res;
 13736  003022  0100               	movlb	0	; () banked
 13737  003024  51A2               	movf	f_sync@res& (0+255),w,b
 13738  003026  0012               	return	
 13739  003028                     __end_of_f_sync:
 13740                           	opt stack 0
 13741                           tosu	equ	0xFFF
 13742                           tosh	equ	0xFFE
 13743                           tosl	equ	0xFFD
 13744                           pclath	equ	0xFFA
 13745                           tblptru	equ	0xFF8
 13746                           tblptrh	equ	0xFF7
 13747                           tblptrl	equ	0xFF6
 13748                           tablat	equ	0xFF5
 13749                           prodh	equ	0xFF4
 13750                           prodl	equ	0xFF3
 13751                           intcon	equ	0xFF2
 13752                           intcon2	equ	0xFF1
 13753                           intcon3	equ	0xFF0
 13754                           indf0	equ	0xFEF
 13755                           postinc0	equ	0xFEE
 13756                           fsr0h	equ	0xFEA
 13757                           fsr0l	equ	0xFE9
 13758                           wreg	equ	0xFE8
 13759                           indf1	equ	0xFE7
 13760                           postinc1	equ	0xFE6
 13761                           postdec1	equ	0xFE5
 13762                           fsr1h	equ	0xFE2
 13763                           fsr1l	equ	0xFE1
 13764                           indf2	equ	0xFDF
 13765                           postinc2	equ	0xFDE
 13766                           postdec2	equ	0xFDD
 13767                           plusw2	equ	0xFDB
 13768                           fsr2h	equ	0xFDA
 13769                           fsr2l	equ	0xFD9
 13770                           status	equ	0xFD8
 13771                           
 13772 ;; *************** function _validate *****************
 13773 ;; Defined at:
 13774 ;;		line 796 in file "bibliotecas/tff.c"
 13775 ;; Parameters:    Size  Location     Type
 13776 ;;  fs              2   28[COMRAM] PTR const struct _FATFS
 13777 ;;		 -> fs(552), NULL(0), 
 13778 ;;  id              2   30[COMRAM] unsigned short 
 13779 ;; Auto vars:     Size  Location     Type
 13780 ;;		None
 13781 ;; Return value:  Size  Location     Type
 13782 ;;                  1    wreg      enum E155
 13783 ;; Registers used:
 13784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13785 ;; Tracked objects:
 13786 ;;		On entry : 0/0
 13787 ;;		On exit  : 0/0
 13788 ;;		Unchanged: 0/0
 13789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13790 ;;      Params:         4       0       0       0       0       0       0       0       0
 13791 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13792 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13793 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13794 ;;Total ram usage:        6 bytes
 13795 ;; Hardware stack levels used:    1
 13796 ;; Hardware stack levels required when called:    4
 13797 ;; This function calls:
 13798 ;;		_disk_status
 13799 ;; This function is called by:
 13800 ;;		_f_sync
 13801 ;;		_f_read
 13802 ;;		_f_write
 13803 ;;		_f_lseek
 13804 ;;		_f_readdir
 13805 ;;		_f_truncate
 13806 ;; This function uses a non-reentrant model
 13807 ;;
 13808                           
 13809                           	psect	text38
 13810  004BEC                     __ptext38:
 13811                           	opt stack 0
 13812  004BEC                     _validate:
 13813                           	opt stack 22
 13814                           
 13815                           ;tff.c: 801: if (!fs || !fs->fs_type || fs->id != id)
 13816                           
 13817                           ;incstack = 0
 13818  004BEC  501D               	movf	validate@fs,w,c
 13819  004BEE  101E               	iorwf	validate@fs+1,w,c
 13820  004BF0  B4D8               	btfsc	status,2,c
 13821  004BF2  D014               	goto	l11397
 13822  004BF4  EE20 F024          	lfsr	2,36
 13823  004BF8  501D               	movf	validate@fs,w,c
 13824  004BFA  26D9               	addwf	fsr2l,f,c
 13825  004BFC  501E               	movf	validate@fs+1,w,c
 13826  004BFE  22DA               	addwfc	fsr2h,f,c
 13827  004C00  50DF               	movf	indf2,w,c
 13828  004C02  B4D8               	btfsc	status,2,c
 13829  004C04  D00B               	goto	l11397
 13830  004C06  C01D  FFD9         	movff	validate@fs,fsr2l
 13831  004C0A  C01E  FFDA         	movff	validate@fs+1,fsr2h
 13832  004C0E  501F               	movf	validate@id,w,c
 13833  004C10  18DE               	xorwf	postinc2,w,c
 13834  004C12  E104               	bnz	l11397
 13835  004C14  5020               	movf	validate@id+1,w,c
 13836  004C16  18DE               	xorwf	postinc2,w,c
 13837  004C18  B4D8               	btfsc	status,2,c
 13838  004C1A  D002               	goto	l11401
 13839  004C1C                     l11397:
 13840                           
 13841                           ;tff.c: 802: return FR_INVALID_OBJECT;
 13842  004C1C  0E0C               	movlw	12
 13843  004C1E  0012               	return	
 13844  004C20                     l11401:
 13845                           
 13846                           ;tff.c: 803: if (disk_status(0) & 0x01)
 13847  004C20  0E00               	movlw	0
 13848  004C22  EC9F  F026         	call	_disk_status
 13849  004C26  6E21               	movwf	??_validate& (0+255),c
 13850  004C28  A021               	btfss	??_validate,0,c
 13851  004C2A  D002               	goto	l11407
 13852                           
 13853                           ;tff.c: 804: return FR_NOT_READY;
 13854  004C2C  0E01               	movlw	1
 13855  004C2E  0012               	return	
 13856  004C30                     l11407:
 13857                           
 13858                           ;tff.c: 806: return FR_OK;
 13859  004C30  0E00               	movlw	0
 13860  004C32  0012               	return	
 13861  004C34                     __end_of_validate:
 13862                           	opt stack 0
 13863                           tosu	equ	0xFFF
 13864                           tosh	equ	0xFFE
 13865                           tosl	equ	0xFFD
 13866                           pclath	equ	0xFFA
 13867                           tblptru	equ	0xFF8
 13868                           tblptrh	equ	0xFF7
 13869                           tblptrl	equ	0xFF6
 13870                           tablat	equ	0xFF5
 13871                           prodh	equ	0xFF4
 13872                           prodl	equ	0xFF3
 13873                           intcon	equ	0xFF2
 13874                           intcon2	equ	0xFF1
 13875                           intcon3	equ	0xFF0
 13876                           indf0	equ	0xFEF
 13877                           postinc0	equ	0xFEE
 13878                           fsr0h	equ	0xFEA
 13879                           fsr0l	equ	0xFE9
 13880                           wreg	equ	0xFE8
 13881                           indf1	equ	0xFE7
 13882                           postinc1	equ	0xFE6
 13883                           postdec1	equ	0xFE5
 13884                           fsr1h	equ	0xFE2
 13885                           fsr1l	equ	0xFE1
 13886                           indf2	equ	0xFDF
 13887                           postinc2	equ	0xFDE
 13888                           postdec2	equ	0xFDD
 13889                           plusw2	equ	0xFDB
 13890                           fsr2h	equ	0xFDA
 13891                           fsr2l	equ	0xFD9
 13892                           status	equ	0xFD8
 13893                           
 13894 ;; *************** function _disk_status *****************
 13895 ;; Defined at:
 13896 ;;		line 72 in file "bibliotecas/diskio.c"
 13897 ;; Parameters:    Size  Location     Type
 13898 ;;  pdrv            1    wreg     unsigned char 
 13899 ;; Auto vars:     Size  Location     Type
 13900 ;;  pdrv            1   26[COMRAM] unsigned char 
 13901 ;;  result          2   24[COMRAM] int 
 13902 ;;  stat            1   27[COMRAM] unsigned char 
 13903 ;; Return value:  Size  Location     Type
 13904 ;;                  1    wreg      unsigned char 
 13905 ;; Registers used:
 13906 ;;		wreg, status,2, status,0, cstack
 13907 ;; Tracked objects:
 13908 ;;		On entry : 0/0
 13909 ;;		On exit  : 0/0
 13910 ;;		Unchanged: 0/0
 13911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13912 ;;      Params:         0       0       0       0       0       0       0       0       0
 13913 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13914 ;;      Temps:          1       0       0       0       0       0       0       0       0
 13915 ;;      Totals:         5       0       0       0       0       0       0       0       0
 13916 ;;Total ram usage:        5 bytes
 13917 ;; Hardware stack levels used:    1
 13918 ;; Hardware stack levels required when called:    3
 13919 ;; This function calls:
 13920 ;;		_sdc_disk_status
 13921 ;; This function is called by:
 13922 ;;		_validate
 13923 ;; This function uses a non-reentrant model
 13924 ;;
 13925                           
 13926                           	psect	text39
 13927  004D3E                     __ptext39:
 13928                           	opt stack 0
 13929  004D3E                     _disk_status:
 13930                           	opt stack 22
 13931                           
 13932                           ;incstack = 0
 13933                           ;disk_status@pdrv stored from wreg
 13934  004D3E  6E1B               	movwf	disk_status@pdrv,c
 13935                           
 13936                           ;diskio.c: 76: DSTATUS stat;
 13937                           ;diskio.c: 77: int result;
 13938                           ;diskio.c: 79: switch (pdrv) {
 13939  004D40  D011               	goto	l10735
 13940  004D42                     l10717:
 13941                           
 13942                           ;diskio.c: 81: stat = sdc_disk_status(pdrv);
 13943  004D42  501B               	movf	disk_status@pdrv,w,c
 13944  004D44  ECFA  F027         	call	_sdc_disk_status
 13945  004D48  6E1C               	movwf	disk_status@stat,c
 13946                           
 13947                           ;diskio.c: 85: return stat;
 13948  004D4A  501C               	movf	disk_status@stat,w,c
 13949  004D4C  0012               	return	
 13950  004D4E                     l10723:
 13951                           
 13952                           ;diskio.c: 88: result = sdc_disk_status(pdrv);
 13953  004D4E  501B               	movf	disk_status@pdrv,w,c
 13954  004D50  ECFA  F027         	call	_sdc_disk_status
 13955  004D54  6E18               	movwf	??_disk_status& (0+255),c
 13956  004D56  5018               	movf	??_disk_status,w,c
 13957  004D58  6E19               	movwf	disk_status@result,c
 13958  004D5A  6A1A               	clrf	disk_status@result+1,c
 13959                           
 13960                           ;diskio.c: 92: return stat;
 13961  004D5C  501C               	movf	disk_status@stat,w,c
 13962  004D5E  0012               	return	
 13963  004D60                     l10729:
 13964                           
 13965                           ;diskio.c: 99: return stat;
 13966  004D60  501C               	movf	disk_status@stat,w,c
 13967  004D62  0012               	return	
 13968  004D64                     l10735:
 13969  004D64  501B               	movf	disk_status@pdrv,w,c
 13970                           
 13971                           ; Switch size 1, requested type "space"
 13972                           ; Number of cases is 3, Range of values is 0 to 2
 13973                           ; switch strategies available:
 13974                           ; Name         Instructions Cycles
 13975                           ; simple_byte           10     6 (average)
 13976                           ;	Chosen strategy is simple_byte
 13977  004D66  0A00               	xorlw	0	; case 0
 13978  004D68  B4D8               	btfsc	status,2,c
 13979  004D6A  D7F1               	goto	l10723
 13980  004D6C  0A01               	xorlw	1	; case 1
 13981  004D6E  B4D8               	btfsc	status,2,c
 13982  004D70  D7E8               	goto	l10717
 13983  004D72  0A03               	xorlw	3	; case 2
 13984  004D74  B4D8               	btfsc	status,2,c
 13985  004D76  D7F4               	goto	l10729
 13986                           
 13987                           ;diskio.c: 101: return 0x01;
 13988  004D78  0E01               	movlw	1
 13989  004D7A  0012               	return	
 13990  004D7C                     __end_of_disk_status:
 13991                           	opt stack 0
 13992                           tosu	equ	0xFFF
 13993                           tosh	equ	0xFFE
 13994                           tosl	equ	0xFFD
 13995                           pclath	equ	0xFFA
 13996                           tblptru	equ	0xFF8
 13997                           tblptrh	equ	0xFF7
 13998                           tblptrl	equ	0xFF6
 13999                           tablat	equ	0xFF5
 14000                           prodh	equ	0xFF4
 14001                           prodl	equ	0xFF3
 14002                           intcon	equ	0xFF2
 14003                           intcon2	equ	0xFF1
 14004                           intcon3	equ	0xFF0
 14005                           indf0	equ	0xFEF
 14006                           postinc0	equ	0xFEE
 14007                           fsr0h	equ	0xFEA
 14008                           fsr0l	equ	0xFE9
 14009                           wreg	equ	0xFE8
 14010                           indf1	equ	0xFE7
 14011                           postinc1	equ	0xFE6
 14012                           postdec1	equ	0xFE5
 14013                           fsr1h	equ	0xFE2
 14014                           fsr1l	equ	0xFE1
 14015                           indf2	equ	0xFDF
 14016                           postinc2	equ	0xFDE
 14017                           postdec2	equ	0xFDD
 14018                           plusw2	equ	0xFDB
 14019                           fsr2h	equ	0xFDA
 14020                           fsr2l	equ	0xFD9
 14021                           status	equ	0xFD8
 14022                           
 14023 ;; *************** function _sdc_disk_status *****************
 14024 ;; Defined at:
 14025 ;;		line 689 in file "bibliotecas/diskio.c"
 14026 ;; Parameters:    Size  Location     Type
 14027 ;;  pdrv            1    wreg     unsigned char 
 14028 ;; Auto vars:     Size  Location     Type
 14029 ;;  pdrv            1   22[COMRAM] unsigned char 
 14030 ;;  stat            1   21[COMRAM] unsigned char 
 14031 ;;  cont            1    0        unsigned char 
 14032 ;;  buff            1    0        unsigned char 
 14033 ;; Return value:  Size  Location     Type
 14034 ;;                  1    wreg      unsigned char 
 14035 ;; Registers used:
 14036 ;;		wreg, status,2
 14037 ;; Tracked objects:
 14038 ;;		On entry : 0/0
 14039 ;;		On exit  : 0/0
 14040 ;;		Unchanged: 0/0
 14041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14042 ;;      Params:         0       0       0       0       0       0       0       0       0
 14043 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14044 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14045 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14046 ;;Total ram usage:        2 bytes
 14047 ;; Hardware stack levels used:    1
 14048 ;; Hardware stack levels required when called:    2
 14049 ;; This function calls:
 14050 ;;		Nothing
 14051 ;; This function is called by:
 14052 ;;		_disk_status
 14053 ;; This function uses a non-reentrant model
 14054 ;;
 14055                           
 14056                           	psect	text40
 14057  004FF4                     __ptext40:
 14058                           	opt stack 0
 14059  004FF4                     _sdc_disk_status:
 14060                           	opt stack 22
 14061                           
 14062                           ;incstack = 0
 14063                           ;sdc_disk_status@pdrv stored from wreg
 14064  004FF4  6E17               	movwf	sdc_disk_status@pdrv,c
 14065                           
 14066                           ;diskio.c: 691: DSTATUS stat = 0;
 14067  004FF6  0E00               	movlw	0
 14068  004FF8  6E16               	movwf	sdc_disk_status@stat,c
 14069                           
 14070                           ;diskio.c: 692: unsigned char buff, cont;
 14071                           ;diskio.c: 694: if (pdrv != 0) return 0x01;
 14072  004FFA  5017               	movf	sdc_disk_status@pdrv,w,c
 14073  004FFC  B4D8               	btfsc	status,2,c
 14074  004FFE  D002               	goto	l10643
 14075  005000  0E01               	movlw	1
 14076  005002  0012               	return	
 14077  005004                     l10643:
 14078                           
 14079                           ;diskio.c: 696: return FR_OK;
 14080  005004  0E00               	movlw	0
 14081  005006  0012               	return	
 14082  005008                     __end_of_sdc_disk_status:
 14083                           	opt stack 0
 14084                           tosu	equ	0xFFF
 14085                           tosh	equ	0xFFE
 14086                           tosl	equ	0xFFD
 14087                           pclath	equ	0xFFA
 14088                           tblptru	equ	0xFF8
 14089                           tblptrh	equ	0xFF7
 14090                           tblptrl	equ	0xFF6
 14091                           tablat	equ	0xFF5
 14092                           prodh	equ	0xFF4
 14093                           prodl	equ	0xFF3
 14094                           intcon	equ	0xFF2
 14095                           intcon2	equ	0xFF1
 14096                           intcon3	equ	0xFF0
 14097                           indf0	equ	0xFEF
 14098                           postinc0	equ	0xFEE
 14099                           fsr0h	equ	0xFEA
 14100                           fsr0l	equ	0xFE9
 14101                           wreg	equ	0xFE8
 14102                           indf1	equ	0xFE7
 14103                           postinc1	equ	0xFE6
 14104                           postdec1	equ	0xFE5
 14105                           fsr1h	equ	0xFE2
 14106                           fsr1l	equ	0xFE1
 14107                           indf2	equ	0xFDF
 14108                           postinc2	equ	0xFDE
 14109                           postdec2	equ	0xFDD
 14110                           plusw2	equ	0xFDB
 14111                           fsr2h	equ	0xFDA
 14112                           fsr2l	equ	0xFD9
 14113                           status	equ	0xFD8
 14114                           
 14115 ;; *************** function _sync *****************
 14116 ;; Defined at:
 14117 ;;		line 118 in file "bibliotecas/tff.c"
 14118 ;; Parameters:    Size  Location     Type
 14119 ;;		None
 14120 ;; Auto vars:     Size  Location     Type
 14121 ;;  fs              2   58[BANK0 ] PTR struct _FATFS
 14122 ;;		 -> fs(552), NULL(0), 
 14123 ;; Return value:  Size  Location     Type
 14124 ;;                  1    wreg      enum E155
 14125 ;; Registers used:
 14126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14127 ;; Tracked objects:
 14128 ;;		On entry : 0/0
 14129 ;;		On exit  : 0/0
 14130 ;;		Unchanged: 0/0
 14131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14132 ;;      Params:         0       0       0       0       0       0       0       0       0
 14133 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14134 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14135 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14136 ;;Total ram usage:        2 bytes
 14137 ;; Hardware stack levels used:    1
 14138 ;; Hardware stack levels required when called:    9
 14139 ;; This function calls:
 14140 ;;		_disk_ioctl
 14141 ;;		_move_window
 14142 ;; This function is called by:
 14143 ;;		_f_sync
 14144 ;;		_f_unlink
 14145 ;;		_f_mkdir
 14146 ;;		_f_chmod
 14147 ;;		_f_utime
 14148 ;;		_f_rename
 14149 ;; This function uses a non-reentrant model
 14150 ;;
 14151                           
 14152                           	psect	text41
 14153  004A4A                     __ptext41:
 14154                           	opt stack 0
 14155  004A4A                     _sync:
 14156                           	opt stack 17
 14157                           
 14158                           ;tff.c: 120: FATFS *fs = FatFs;
 14159                           
 14160                           ;incstack = 0
 14161  004A4A  C0FC  F09A         	movff	_FatFs,sync@fs
 14162  004A4E  C0FD  F09B         	movff	_FatFs+1,sync@fs+1
 14163                           
 14164                           ;tff.c: 123: fs->winflag = 1;
 14165  004A52  0100               	movlb	0	; () banked
 14166  004A54  EE20 F027          	lfsr	2,39
 14167  004A58  519A               	movf	sync@fs& (0+255),w,b
 14168  004A5A  26D9               	addwf	fsr2l,f,c
 14169  004A5C  519B               	movf	(sync@fs+1)& (0+255),w,b
 14170  004A5E  22DA               	addwfc	fsr2h,f,c
 14171  004A60  0E01               	movlw	1
 14172  004A62  6EDF               	movwf	indf2,c
 14173                           
 14174                           ; BSR set to: 0
 14175                           ;tff.c: 124: if (!move_window(0)) return FR_RW_ERROR;
 14176  004A64  0E00               	movlw	0
 14177  004A66  0100               	movlb	0	; () banked
 14178  004A68  6F83               	movwf	move_window@sector& (0+255),b
 14179  004A6A  0E00               	movlw	0
 14180  004A6C  6F84               	movwf	(move_window@sector+1)& (0+255),b
 14181  004A6E  0E00               	movlw	0
 14182  004A70  6F85               	movwf	(move_window@sector+2)& (0+255),b
 14183  004A72  0E00               	movlw	0
 14184  004A74  6F86               	movwf	(move_window@sector+3)& (0+255),b
 14185  004A76  EC60  F019         	call	_move_window	;wreg free
 14186  004A7A  0900               	iorlw	0
 14187  004A7C  A4D8               	btfss	status,2,c
 14188  004A7E  D002               	goto	l11093
 14189  004A80  0E08               	movlw	8
 14190  004A82  0012               	return	
 14191  004A84                     l11093:
 14192                           
 14193                           ;tff.c: 140: if (disk_ioctl(0, 0, (0)) != RES_OK)
 14194  004A84  0E00               	movlw	0
 14195  004A86  6E16               	movwf	disk_ioctl@cmd,c
 14196  004A88  0E00               	movlw	0
 14197  004A8A  6E17               	movwf	disk_ioctl@buff,c
 14198  004A8C  0E00               	movlw	0
 14199  004A8E  6E18               	movwf	disk_ioctl@buff+1,c
 14200  004A90  0E00               	movlw	0
 14201  004A92  EC8E  F027         	call	_disk_ioctl
 14202  004A96  0900               	iorlw	0
 14203  004A98  B4D8               	btfsc	status,2,c
 14204  004A9A  D002               	goto	l11099
 14205                           
 14206                           ;tff.c: 141: return FR_RW_ERROR;
 14207  004A9C  0E08               	movlw	8
 14208  004A9E  0012               	return	
 14209  004AA0                     l11099:
 14210                           
 14211                           ;tff.c: 142: return FR_OK;
 14212  004AA0  0E00               	movlw	0
 14213  004AA2  0012               	return	
 14214  004AA4                     __end_of_sync:
 14215                           	opt stack 0
 14216                           tosu	equ	0xFFF
 14217                           tosh	equ	0xFFE
 14218                           tosl	equ	0xFFD
 14219                           pclath	equ	0xFFA
 14220                           tblptru	equ	0xFF8
 14221                           tblptrh	equ	0xFF7
 14222                           tblptrl	equ	0xFF6
 14223                           tablat	equ	0xFF5
 14224                           prodh	equ	0xFF4
 14225                           prodl	equ	0xFF3
 14226                           intcon	equ	0xFF2
 14227                           intcon2	equ	0xFF1
 14228                           intcon3	equ	0xFF0
 14229                           indf0	equ	0xFEF
 14230                           postinc0	equ	0xFEE
 14231                           fsr0h	equ	0xFEA
 14232                           fsr0l	equ	0xFE9
 14233                           wreg	equ	0xFE8
 14234                           indf1	equ	0xFE7
 14235                           postinc1	equ	0xFE6
 14236                           postdec1	equ	0xFE5
 14237                           fsr1h	equ	0xFE2
 14238                           fsr1l	equ	0xFE1
 14239                           indf2	equ	0xFDF
 14240                           postinc2	equ	0xFDE
 14241                           postdec2	equ	0xFDD
 14242                           plusw2	equ	0xFDB
 14243                           fsr2h	equ	0xFDA
 14244                           fsr2l	equ	0xFD9
 14245                           status	equ	0xFD8
 14246                           
 14247 ;; *************** function _move_window *****************
 14248 ;; Defined at:
 14249 ;;		line 76 in file "bibliotecas/tff.c"
 14250 ;; Parameters:    Size  Location     Type
 14251 ;;  sector          4   35[BANK0 ] unsigned long 
 14252 ;; Auto vars:     Size  Location     Type
 14253 ;;  n               1   51[BANK0 ] unsigned char 
 14254 ;;  wsect           4   52[BANK0 ] unsigned long 
 14255 ;;  fs              2   56[BANK0 ] PTR struct _FATFS
 14256 ;;		 -> fs(552), NULL(0), 
 14257 ;; Return value:  Size  Location     Type
 14258 ;;                  1    wreg      enum E105
 14259 ;; Registers used:
 14260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14261 ;; Tracked objects:
 14262 ;;		On entry : 0/0
 14263 ;;		On exit  : 0/0
 14264 ;;		Unchanged: 0/0
 14265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14266 ;;      Params:         0       4       0       0       0       0       0       0       0
 14267 ;;      Locals:         0       7       0       0       0       0       0       0       0
 14268 ;;      Temps:          0      12       0       0       0       0       0       0       0
 14269 ;;      Totals:         0      23       0       0       0       0       0       0       0
 14270 ;;Total ram usage:       23 bytes
 14271 ;; Hardware stack levels used:    1
 14272 ;; Hardware stack levels required when called:    8
 14273 ;; This function calls:
 14274 ;;		_disk_read
 14275 ;;		_disk_write
 14276 ;; This function is called by:
 14277 ;;		_sync
 14278 ;;		_get_cluster
 14279 ;;		_put_cluster
 14280 ;;		_trace_path
 14281 ;;		_reserve_direntry
 14282 ;;		_f_open
 14283 ;;		_f_sync
 14284 ;;		_f_read
 14285 ;;		_f_write
 14286 ;;		_f_readdir
 14287 ;;		_f_getfree
 14288 ;;		_f_unlink
 14289 ;;		_f_mkdir
 14290 ;;		_f_rename
 14291 ;; This function uses a non-reentrant model
 14292 ;;
 14293                           
 14294                           	psect	text42
 14295  0032C0                     __ptext42:
 14296                           	opt stack 0
 14297  0032C0                     _move_window:
 14298                           	opt stack 16
 14299                           
 14300                           ;tff.c: 80: DWORD wsect;
 14301                           ;tff.c: 81: FATFS *fs = FatFs;
 14302                           
 14303                           ;incstack = 0
 14304  0032C0  C0FC  F098         	movff	_FatFs,move_window@fs
 14305  0032C4  C0FD  F099         	movff	_FatFs+1,move_window@fs+1
 14306                           
 14307                           ;tff.c: 84: wsect = fs->winsect;
 14308  0032C8  0100               	movlb	0	; () banked
 14309  0032CA  EE20 F004          	lfsr	2,4
 14310  0032CE  5198               	movf	move_window@fs& (0+255),w,b
 14311  0032D0  26D9               	addwf	fsr2l,f,c
 14312  0032D2  5199               	movf	(move_window@fs+1)& (0+255),w,b
 14313  0032D4  22DA               	addwfc	fsr2h,f,c
 14314  0032D6  CFDE F094          	movff	postinc2,move_window@wsect
 14315  0032DA  CFDE F095          	movff	postinc2,move_window@wsect+1
 14316  0032DE  CFDE F096          	movff	postinc2,move_window@wsect+2
 14317  0032E2  CFDE F097          	movff	postinc2,move_window@wsect+3
 14318                           
 14319                           ; BSR set to: 0
 14320                           ;tff.c: 85: if (wsect != sector) {
 14321  0032E6  0100               	movlb	0	; () banked
 14322  0032E8  5183               	movf	move_window@sector& (0+255),w,b
 14323  0032EA  0100               	movlb	0	; () banked
 14324  0032EC  1994               	xorwf	move_window@wsect& (0+255),w,b
 14325  0032EE  E110               	bnz	u11770
 14326  0032F0  0100               	movlb	0	; () banked
 14327  0032F2  5184               	movf	(move_window@sector+1)& (0+255),w,b
 14328  0032F4  0100               	movlb	0	; () banked
 14329  0032F6  1995               	xorwf	(move_window@wsect+1)& (0+255),w,b
 14330  0032F8  E10B               	bnz	u11770
 14331  0032FA  0100               	movlb	0	; () banked
 14332  0032FC  5185               	movf	(move_window@sector+2)& (0+255),w,b
 14333  0032FE  0100               	movlb	0	; () banked
 14334  003300  1996               	xorwf	(move_window@wsect+2)& (0+255),w,b
 14335  003302  E106               	bnz	u11770
 14336  003304  0100               	movlb	0	; () banked
 14337  003306  5186               	movf	(move_window@sector+3)& (0+255),w,b
 14338  003308  0100               	movlb	0	; () banked
 14339  00330A  1997               	xorwf	(move_window@wsect+3)& (0+255),w,b
 14340  00330C  B4D8               	btfsc	status,2,c
 14341  00330E  D0EB               	goto	l10687
 14342  003310                     u11770:
 14343                           
 14344                           ; BSR set to: 0
 14345                           ;tff.c: 87: BYTE n;
 14346                           ;tff.c: 88: if (fs->winflag) {
 14347  003310  0100               	movlb	0	; () banked
 14348  003312  EE20 F027          	lfsr	2,39
 14349  003316  5198               	movf	move_window@fs& (0+255),w,b
 14350  003318  26D9               	addwf	fsr2l,f,c
 14351  00331A  5199               	movf	(move_window@fs+1)& (0+255),w,b
 14352  00331C  22DA               	addwfc	fsr2h,f,c
 14353  00331E  50DF               	movf	indf2,w,c
 14354  003320  B4D8               	btfsc	status,2,c
 14355  003322  D0AB               	goto	l10677
 14356                           
 14357                           ; BSR set to: 0
 14358                           ;tff.c: 89: if (disk_write(0, fs->win, wsect, 1) != RES_OK)
 14359  003324  0E28               	movlw	40
 14360  003326  0100               	movlb	0	; () banked
 14361  003328  2598               	addwf	move_window@fs& (0+255),w,b
 14362  00332A  0100               	movlb	0	; () banked
 14363  00332C  6F60               	movwf	disk_write@buff& (0+255),b
 14364  00332E  0E00               	movlw	0
 14365  003330  0100               	movlb	0	; () banked
 14366  003332  2199               	addwfc	(move_window@fs+1)& (0+255),w,b
 14367  003334  0100               	movlb	0	; () banked
 14368  003336  6F61               	movwf	(disk_write@buff+1)& (0+255),b
 14369  003338  C094  F062         	movff	move_window@wsect,disk_write@sector
 14370  00333C  C095  F063         	movff	move_window@wsect+1,disk_write@sector+1
 14371  003340  C096  F064         	movff	move_window@wsect+2,disk_write@sector+2
 14372  003344  C097  F065         	movff	move_window@wsect+3,disk_write@sector+3
 14373  003348  0E01               	movlw	1
 14374  00334A  0100               	movlb	0	; () banked
 14375  00334C  6F66               	movwf	disk_write@count& (0+255),b
 14376  00334E  0E00               	movlw	0
 14377  003350  ECD6  F023         	call	_disk_write
 14378  003354  0900               	iorlw	0
 14379  003356  B4D8               	btfsc	status,2,c
 14380  003358  D002               	goto	l10661
 14381                           
 14382                           ;tff.c: 90: return FALSE;
 14383  00335A  0E00               	movlw	0
 14384  00335C  0012               	return	
 14385  00335E                     l10661:
 14386                           
 14387                           ;tff.c: 91: fs->winflag = 0;
 14388  00335E  0100               	movlb	0	; () banked
 14389  003360  EE20 F027          	lfsr	2,39
 14390  003364  5198               	movf	move_window@fs& (0+255),w,b
 14391  003366  26D9               	addwf	fsr2l,f,c
 14392  003368  5199               	movf	(move_window@fs+1)& (0+255),w,b
 14393  00336A  22DA               	addwfc	fsr2h,f,c
 14394  00336C  0E00               	movlw	0
 14395  00336E  6EDF               	movwf	indf2,c
 14396                           
 14397                           ;tff.c: 92: if (wsect < (fs->fatbase + fs->sects_fat)) {
 14398  003370  0100               	movlb	0	; () banked
 14399  003372  EE20 F014          	lfsr	2,20
 14400  003376  5198               	movf	move_window@fs& (0+255),w,b
 14401  003378  26D9               	addwf	fsr2l,f,c
 14402  00337A  5199               	movf	(move_window@fs+1)& (0+255),w,b
 14403  00337C  22DA               	addwfc	fsr2h,f,c
 14404  00337E  CFDE F087          	movff	postinc2,??_move_window
 14405  003382  CFDE F088          	movff	postinc2,??_move_window+1
 14406  003386  CFDE F089          	movff	postinc2,??_move_window+2
 14407  00338A  CFDE F08A          	movff	postinc2,??_move_window+3
 14408  00338E  0100               	movlb	0	; () banked
 14409  003390  EE20 F008          	lfsr	2,8
 14410  003394  5198               	movf	move_window@fs& (0+255),w,b
 14411  003396  26D9               	addwf	fsr2l,f,c
 14412  003398  5199               	movf	(move_window@fs+1)& (0+255),w,b
 14413  00339A  22DA               	addwfc	fsr2h,f,c
 14414  00339C  CFDE F08B          	movff	postinc2,??_move_window+4
 14415  0033A0  CFDE F08C          	movff	postinc2,??_move_window+5
 14416  0033A4  CFDE F08D          	movff	postinc2,??_move_window+6
 14417  0033A8  CFDE F08E          	movff	postinc2,??_move_window+7
 14418  0033AC  0100               	movlb	0	; () banked
 14419  0033AE  5187               	movf	??_move_window& (0+255),w,b
 14420  0033B0  0100               	movlb	0	; () banked
 14421  0033B2  258B               	addwf	(??_move_window+4)& (0+255),w,b
 14422  0033B4  0100               	movlb	0	; () banked
 14423  0033B6  6F8F               	movwf	(??_move_window+8)& (0+255),b
 14424  0033B8  0100               	movlb	0	; () banked
 14425  0033BA  5188               	movf	(??_move_window+1)& (0+255),w,b
 14426  0033BC  0100               	movlb	0	; () banked
 14427  0033BE  218C               	addwfc	(??_move_window+5)& (0+255),w,b
 14428  0033C0  0100               	movlb	0	; () banked
 14429  0033C2  6F90               	movwf	(??_move_window+9)& (0+255),b
 14430  0033C4  0100               	movlb	0	; () banked
 14431  0033C6  5189               	movf	(??_move_window+2)& (0+255),w,b
 14432  0033C8  0100               	movlb	0	; () banked
 14433  0033CA  218D               	addwfc	(??_move_window+6)& (0+255),w,b
 14434  0033CC  0100               	movlb	0	; () banked
 14435  0033CE  6F91               	movwf	(??_move_window+10)& (0+255),b
 14436  0033D0  0100               	movlb	0	; () banked
 14437  0033D2  518A               	movf	(??_move_window+3)& (0+255),w,b
 14438  0033D4  0100               	movlb	0	; () banked
 14439  0033D6  218E               	addwfc	(??_move_window+7)& (0+255),w,b
 14440  0033D8  0100               	movlb	0	; () banked
 14441  0033DA  6F92               	movwf	(??_move_window+11)& (0+255),b
 14442  0033DC  0100               	movlb	0	; () banked
 14443  0033DE  518F               	movf	(??_move_window+8)& (0+255),w,b
 14444  0033E0  0100               	movlb	0	; () banked
 14445  0033E2  5D94               	subwf	move_window@wsect& (0+255),w,b
 14446  0033E4  0100               	movlb	0	; () banked
 14447  0033E6  5190               	movf	(??_move_window+9)& (0+255),w,b
 14448  0033E8  0100               	movlb	0	; () banked
 14449  0033EA  5995               	subwfb	(move_window@wsect+1)& (0+255),w,b
 14450  0033EC  0100               	movlb	0	; () banked
 14451  0033EE  5191               	movf	(??_move_window+10)& (0+255),w,b
 14452  0033F0  0100               	movlb	0	; () banked
 14453  0033F2  5996               	subwfb	(move_window@wsect+2)& (0+255),w,b
 14454  0033F4  0100               	movlb	0	; () banked
 14455  0033F6  5192               	movf	(??_move_window+11)& (0+255),w,b
 14456  0033F8  0100               	movlb	0	; () banked
 14457  0033FA  5997               	subwfb	(move_window@wsect+3)& (0+255),w,b
 14458  0033FC  B0D8               	btfsc	status,0,c
 14459  0033FE  D03D               	goto	l10677
 14460                           
 14461                           ; BSR set to: 0
 14462                           ;tff.c: 93: for (n = fs->n_fats; n >= 2; n--) {
 14463  003400  0100               	movlb	0	; () banked
 14464  003402  EE20 F026          	lfsr	2,38
 14465  003406  5198               	movf	move_window@fs& (0+255),w,b
 14466  003408  26D9               	addwf	fsr2l,f,c
 14467  00340A  5199               	movf	(move_window@fs+1)& (0+255),w,b
 14468  00340C  22DA               	addwfc	fsr2h,f,c
 14469  00340E  50DF               	movf	indf2,w,c
 14470  003410  0100               	movlb	0	; () banked
 14471  003412  6F93               	movwf	move_window@n& (0+255),b
 14472  003414                     l10665:
 14473                           
 14474                           ; BSR set to: 0
 14475  003414  0E02               	movlw	2
 14476  003416  0100               	movlb	0	; () banked
 14477  003418  6193               	cpfslt	move_window@n& (0+255),b
 14478  00341A  D001               	goto	l10669
 14479  00341C  D02E               	goto	l10677
 14480  00341E                     l10669:
 14481                           
 14482                           ; BSR set to: 0
 14483                           ;tff.c: 94: wsect += fs->sects_fat;
 14484  00341E  0100               	movlb	0	; () banked
 14485  003420  EE20 F014          	lfsr	2,20
 14486  003424  5198               	movf	move_window@fs& (0+255),w,b
 14487  003426  26D9               	addwf	fsr2l,f,c
 14488  003428  5199               	movf	(move_window@fs+1)& (0+255),w,b
 14489  00342A  22DA               	addwfc	fsr2h,f,c
 14490  00342C  50DE               	movf	postinc2,w,c
 14491  00342E  0100               	movlb	0	; () banked
 14492  003430  2794               	addwf	move_window@wsect& (0+255),f,b
 14493  003432  50DE               	movf	postinc2,w,c
 14494  003434  0100               	movlb	0	; () banked
 14495  003436  2395               	addwfc	(move_window@wsect+1)& (0+255),f,b
 14496  003438  50DE               	movf	postinc2,w,c
 14497  00343A  0100               	movlb	0	; () banked
 14498  00343C  2396               	addwfc	(move_window@wsect+2)& (0+255),f,b
 14499  00343E  50DD               	movf	postdec2,w,c
 14500  003440  0100               	movlb	0	; () banked
 14501  003442  2397               	addwfc	(move_window@wsect+3)& (0+255),f,b
 14502                           
 14503                           ; BSR set to: 0
 14504                           ;tff.c: 95: disk_write(0, fs->win, wsect, 1);
 14505  003444  0E28               	movlw	40
 14506  003446  0100               	movlb	0	; () banked
 14507  003448  2598               	addwf	move_window@fs& (0+255),w,b
 14508  00344A  0100               	movlb	0	; () banked
 14509  00344C  6F60               	movwf	disk_write@buff& (0+255),b
 14510  00344E  0E00               	movlw	0
 14511  003450  0100               	movlb	0	; () banked
 14512  003452  2199               	addwfc	(move_window@fs+1)& (0+255),w,b
 14513  003454  0100               	movlb	0	; () banked
 14514  003456  6F61               	movwf	(disk_write@buff+1)& (0+255),b
 14515  003458  C094  F062         	movff	move_window@wsect,disk_write@sector
 14516  00345C  C095  F063         	movff	move_window@wsect+1,disk_write@sector+1
 14517  003460  C096  F064         	movff	move_window@wsect+2,disk_write@sector+2
 14518  003464  C097  F065         	movff	move_window@wsect+3,disk_write@sector+3
 14519  003468  0E01               	movlw	1
 14520  00346A  0100               	movlb	0	; () banked
 14521  00346C  6F66               	movwf	disk_write@count& (0+255),b
 14522  00346E  0E00               	movlw	0
 14523  003470  ECD6  F023         	call	_disk_write
 14524  003474  0100               	movlb	0	; () banked
 14525  003476  0793               	decf	move_window@n& (0+255),f,b
 14526  003478  D7CD               	goto	l10665
 14527  00347A                     l10677:
 14528                           
 14529                           ; BSR set to: 0
 14530                           ;tff.c: 96: }
 14531                           ;tff.c: 97: }
 14532                           ;tff.c: 98: }
 14533                           ;tff.c: 100: if (sector) {
 14534  00347A  0100               	movlb	0	; () banked
 14535  00347C  5183               	movf	move_window@sector& (0+255),w,b
 14536  00347E  0100               	movlb	0	; () banked
 14537  003480  1184               	iorwf	(move_window@sector+1)& (0+255),w,b
 14538  003482  0100               	movlb	0	; () banked
 14539  003484  1185               	iorwf	(move_window@sector+2)& (0+255),w,b
 14540  003486  0100               	movlb	0	; () banked
 14541  003488  1186               	iorwf	(move_window@sector+3)& (0+255),w,b
 14542  00348A  B4D8               	btfsc	status,2,c
 14543  00348C  D02C               	goto	l10687
 14544                           
 14545                           ; BSR set to: 0
 14546                           ;tff.c: 101: if (disk_read(0, fs->win, sector, 1) != RES_OK)
 14547  00348E  0E28               	movlw	40
 14548  003490  0100               	movlb	0	; () banked
 14549  003492  2598               	addwf	move_window@fs& (0+255),w,b
 14550  003494  0100               	movlb	0	; () banked
 14551  003496  6F78               	movwf	disk_read@buff& (0+255),b
 14552  003498  0E00               	movlw	0
 14553  00349A  0100               	movlb	0	; () banked
 14554  00349C  2199               	addwfc	(move_window@fs+1)& (0+255),w,b
 14555  00349E  0100               	movlb	0	; () banked
 14556  0034A0  6F79               	movwf	(disk_read@buff+1)& (0+255),b
 14557  0034A2  C083  F07A         	movff	move_window@sector,disk_read@sector
 14558  0034A6  C084  F07B         	movff	move_window@sector+1,disk_read@sector+1
 14559  0034AA  C085  F07C         	movff	move_window@sector+2,disk_read@sector+2
 14560  0034AE  C086  F07D         	movff	move_window@sector+3,disk_read@sector+3
 14561  0034B2  0E01               	movlw	1
 14562  0034B4  0100               	movlb	0	; () banked
 14563  0034B6  6F7E               	movwf	disk_read@count& (0+255),b
 14564  0034B8  0E00               	movlw	0
 14565  0034BA  EC83  F022         	call	_disk_read
 14566  0034BE  0900               	iorlw	0
 14567  0034C0  B4D8               	btfsc	status,2,c
 14568  0034C2  D002               	goto	l10685
 14569                           
 14570                           ;tff.c: 102: return FALSE;
 14571  0034C4  0E00               	movlw	0
 14572  0034C6  0012               	return	
 14573  0034C8                     l10685:
 14574                           
 14575                           ;tff.c: 103: fs->winsect = sector;
 14576  0034C8  0100               	movlb	0	; () banked
 14577  0034CA  EE20 F004          	lfsr	2,4
 14578  0034CE  5198               	movf	move_window@fs& (0+255),w,b
 14579  0034D0  26D9               	addwf	fsr2l,f,c
 14580  0034D2  5199               	movf	(move_window@fs+1)& (0+255),w,b
 14581  0034D4  22DA               	addwfc	fsr2h,f,c
 14582  0034D6  C083  FFDE         	movff	move_window@sector,postinc2
 14583  0034DA  C084  FFDE         	movff	move_window@sector+1,postinc2
 14584  0034DE  C085  FFDE         	movff	move_window@sector+2,postinc2
 14585  0034E2  C086  FFDE         	movff	move_window@sector+3,postinc2
 14586  0034E6                     l10687:
 14587                           
 14588                           ; BSR set to: 0
 14589                           ;tff.c: 104: }
 14590                           ;tff.c: 105: }
 14591                           ;tff.c: 106: return TRUE;
 14592  0034E6  0E01               	movlw	1
 14593  0034E8  0012               	return	
 14594  0034EA                     __end_of_move_window:
 14595                           	opt stack 0
 14596                           tosu	equ	0xFFF
 14597                           tosh	equ	0xFFE
 14598                           tosl	equ	0xFFD
 14599                           pclath	equ	0xFFA
 14600                           tblptru	equ	0xFF8
 14601                           tblptrh	equ	0xFF7
 14602                           tblptrl	equ	0xFF6
 14603                           tablat	equ	0xFF5
 14604                           prodh	equ	0xFF4
 14605                           prodl	equ	0xFF3
 14606                           intcon	equ	0xFF2
 14607                           intcon2	equ	0xFF1
 14608                           intcon3	equ	0xFF0
 14609                           indf0	equ	0xFEF
 14610                           postinc0	equ	0xFEE
 14611                           fsr0h	equ	0xFEA
 14612                           fsr0l	equ	0xFE9
 14613                           wreg	equ	0xFE8
 14614                           indf1	equ	0xFE7
 14615                           postinc1	equ	0xFE6
 14616                           postdec1	equ	0xFE5
 14617                           fsr1h	equ	0xFE2
 14618                           fsr1l	equ	0xFE1
 14619                           indf2	equ	0xFDF
 14620                           postinc2	equ	0xFDE
 14621                           postdec2	equ	0xFDD
 14622                           plusw2	equ	0xFDB
 14623                           fsr2h	equ	0xFDA
 14624                           fsr2l	equ	0xFD9
 14625                           status	equ	0xFD8
 14626                           
 14627 ;; *************** function _disk_write *****************
 14628 ;; Defined at:
 14629 ;;		line 197 in file "bibliotecas/diskio.c"
 14630 ;; Parameters:    Size  Location     Type
 14631 ;;  pdrv            1    wreg     unsigned char 
 14632 ;;  buff            2    0[BANK0 ] PTR const unsigned char 
 14633 ;;		 -> fs.win(512), fs(552), NULL(0), 
 14634 ;;  sector          4    2[BANK0 ] unsigned long 
 14635 ;;  count           1    6[BANK0 ] unsigned char 
 14636 ;; Auto vars:     Size  Location     Type
 14637 ;;  pdrv            1   48[COMRAM] unsigned char 
 14638 ;;  result          2   49[COMRAM] int 
 14639 ;;  res             1   51[COMRAM] enum E25
 14640 ;; Return value:  Size  Location     Type
 14641 ;;                  1    wreg      enum E25
 14642 ;; Registers used:
 14643 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14644 ;; Tracked objects:
 14645 ;;		On entry : 0/0
 14646 ;;		On exit  : 0/0
 14647 ;;		Unchanged: 0/0
 14648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14649 ;;      Params:         0       7       0       0       0       0       0       0       0
 14650 ;;      Locals:         4       0       0       0       0       0       0       0       0
 14651 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14652 ;;      Totals:         5       7       0       0       0       0       0       0       0
 14653 ;;Total ram usage:       12 bytes
 14654 ;; Hardware stack levels used:    1
 14655 ;; Hardware stack levels required when called:    6
 14656 ;; This function calls:
 14657 ;;		_sdc_disk_write
 14658 ;; This function is called by:
 14659 ;;		_move_window
 14660 ;;		_reserve_direntry
 14661 ;;		_f_write
 14662 ;;		_f_mkdir
 14663 ;; This function uses a non-reentrant model
 14664 ;;
 14665                           
 14666                           	psect	text43
 14667  0047AC                     __ptext43:
 14668                           	opt stack 0
 14669  0047AC                     _disk_write:
 14670                           	opt stack 17
 14671                           
 14672                           ;incstack = 0
 14673                           ;disk_write@pdrv stored from wreg
 14674  0047AC  6E31               	movwf	disk_write@pdrv,c
 14675                           
 14676                           ;diskio.c: 204: DRESULT res;
 14677                           ;diskio.c: 205: int result;
 14678                           ;diskio.c: 207: switch (pdrv) {
 14679  0047AE  D030               	goto	l10629
 14680  0047B0                     l10609:
 14681                           
 14682                           ;diskio.c: 210: result = sdc_disk_write(buff, sector, count);
 14683  0047B0  C060  F01F         	movff	disk_write@buff,sdc_disk_write@p_buff
 14684  0047B4  C061  F020         	movff	disk_write@buff+1,sdc_disk_write@p_buff+1
 14685  0047B8  C062  F021         	movff	disk_write@sector,sdc_disk_write@sector
 14686  0047BC  C063  F022         	movff	disk_write@sector+1,sdc_disk_write@sector+1
 14687  0047C0  C064  F023         	movff	disk_write@sector+2,sdc_disk_write@sector+2
 14688  0047C4  C065  F024         	movff	disk_write@sector+3,sdc_disk_write@sector+3
 14689  0047C8  C066  F025         	movff	disk_write@count,sdc_disk_write@count
 14690  0047CC  EC1B  F01F         	call	_sdc_disk_write	;wreg free
 14691  0047D0  6E30               	movwf	??_disk_write& (0+255),c
 14692  0047D2  5030               	movf	??_disk_write,w,c
 14693  0047D4  6E32               	movwf	disk_write@result,c
 14694  0047D6  6A33               	clrf	disk_write@result+1,c
 14695                           
 14696                           ;diskio.c: 212: res = result;
 14697  0047D8  C032  F034         	movff	disk_write@result,disk_write@res
 14698                           
 14699                           ;diskio.c: 215: return res;
 14700  0047DC  5034               	movf	disk_write@res,w,c
 14701  0047DE  0012               	return	
 14702  0047E0                     l10617:
 14703                           
 14704                           ;diskio.c: 219: result = sdc_disk_write(buff, sector, count);
 14705  0047E0  C060  F01F         	movff	disk_write@buff,sdc_disk_write@p_buff
 14706  0047E4  C061  F020         	movff	disk_write@buff+1,sdc_disk_write@p_buff+1
 14707  0047E8  C062  F021         	movff	disk_write@sector,sdc_disk_write@sector
 14708  0047EC  C063  F022         	movff	disk_write@sector+1,sdc_disk_write@sector+1
 14709  0047F0  C064  F023         	movff	disk_write@sector+2,sdc_disk_write@sector+2
 14710  0047F4  C065  F024         	movff	disk_write@sector+3,sdc_disk_write@sector+3
 14711  0047F8  C066  F025         	movff	disk_write@count,sdc_disk_write@count
 14712  0047FC  EC1B  F01F         	call	_sdc_disk_write	;wreg free
 14713  004800  6E30               	movwf	??_disk_write& (0+255),c
 14714  004802  5030               	movf	??_disk_write,w,c
 14715  004804  6E32               	movwf	disk_write@result,c
 14716  004806  6A33               	clrf	disk_write@result+1,c
 14717                           
 14718                           ;diskio.c: 222: return res;
 14719  004808  5034               	movf	disk_write@res,w,c
 14720  00480A  0012               	return	
 14721  00480C                     l10623:
 14722                           
 14723                           ;diskio.c: 231: return res;
 14724  00480C  5034               	movf	disk_write@res,w,c
 14725  00480E  0012               	return	
 14726  004810                     l10629:
 14727  004810  5031               	movf	disk_write@pdrv,w,c
 14728                           
 14729                           ; Switch size 1, requested type "space"
 14730                           ; Number of cases is 3, Range of values is 0 to 2
 14731                           ; switch strategies available:
 14732                           ; Name         Instructions Cycles
 14733                           ; simple_byte           10     6 (average)
 14734                           ;	Chosen strategy is simple_byte
 14735  004812  0A00               	xorlw	0	; case 0
 14736  004814  B4D8               	btfsc	status,2,c
 14737  004816  D7E4               	goto	l10617
 14738  004818  0A01               	xorlw	1	; case 1
 14739  00481A  B4D8               	btfsc	status,2,c
 14740  00481C  D7C9               	goto	l10609
 14741  00481E  0A03               	xorlw	3	; case 2
 14742  004820  B4D8               	btfsc	status,2,c
 14743  004822  D7F4               	goto	l10623
 14744                           
 14745                           ;diskio.c: 234: return RES_PARERR;
 14746  004824  0E04               	movlw	4
 14747  004826  0012               	return	
 14748  004828                     __end_of_disk_write:
 14749                           	opt stack 0
 14750                           tosu	equ	0xFFF
 14751                           tosh	equ	0xFFE
 14752                           tosl	equ	0xFFD
 14753                           pclath	equ	0xFFA
 14754                           tblptru	equ	0xFF8
 14755                           tblptrh	equ	0xFF7
 14756                           tblptrl	equ	0xFF6
 14757                           tablat	equ	0xFF5
 14758                           prodh	equ	0xFF4
 14759                           prodl	equ	0xFF3
 14760                           intcon	equ	0xFF2
 14761                           intcon2	equ	0xFF1
 14762                           intcon3	equ	0xFF0
 14763                           indf0	equ	0xFEF
 14764                           postinc0	equ	0xFEE
 14765                           fsr0h	equ	0xFEA
 14766                           fsr0l	equ	0xFE9
 14767                           wreg	equ	0xFE8
 14768                           indf1	equ	0xFE7
 14769                           postinc1	equ	0xFE6
 14770                           postdec1	equ	0xFE5
 14771                           fsr1h	equ	0xFE2
 14772                           fsr1l	equ	0xFE1
 14773                           indf2	equ	0xFDF
 14774                           postinc2	equ	0xFDE
 14775                           postdec2	equ	0xFDD
 14776                           plusw2	equ	0xFDB
 14777                           fsr2h	equ	0xFDA
 14778                           fsr2l	equ	0xFD9
 14779                           status	equ	0xFD8
 14780                           
 14781 ;; *************** function _sdc_disk_write *****************
 14782 ;; Defined at:
 14783 ;;		line 582 in file "bibliotecas/diskio.c"
 14784 ;; Parameters:    Size  Location     Type
 14785 ;;  p_buff          2   30[COMRAM] PTR const unsigned char 
 14786 ;;		 -> fs.win(512), fs(552), NULL(0), 
 14787 ;;  sector          4   32[COMRAM] unsigned long 
 14788 ;;  count           1   36[COMRAM] unsigned char 
 14789 ;; Auto vars:     Size  Location     Type
 14790 ;;  i               1   44[COMRAM] unsigned char 
 14791 ;;  count1          2   42[COMRAM] int 
 14792 ;;  i               2   40[COMRAM] int 
 14793 ;;  j               2    0        int 
 14794 ;;  buff            1   46[COMRAM] unsigned char 
 14795 ;;  res             1   45[COMRAM] enum E25
 14796 ;; Return value:  Size  Location     Type
 14797 ;;                  1    wreg      enum E25
 14798 ;; Registers used:
 14799 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14800 ;; Tracked objects:
 14801 ;;		On entry : 0/0
 14802 ;;		On exit  : 0/0
 14803 ;;		Unchanged: 0/0
 14804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14805 ;;      Params:         7       0       0       0       0       0       0       0       0
 14806 ;;      Locals:         7       0       0       0       0       0       0       0       0
 14807 ;;      Temps:          3       0       0       0       0       0       0       0       0
 14808 ;;      Totals:        17       0       0       0       0       0       0       0       0
 14809 ;;Total ram usage:       17 bytes
 14810 ;; Hardware stack levels used:    1
 14811 ;; Hardware stack levels required when called:    5
 14812 ;; This function calls:
 14813 ;;		___awdiv
 14814 ;;		_command
 14815 ;;		_dummy_clocks
 14816 ;;		_escreve_dado_SPI
 14817 ;;		_escreve_frase_ram_lcd
 14818 ;;		_posicao_cursor_lcd
 14819 ;;		_response
 14820 ;; This function is called by:
 14821 ;;		_disk_write
 14822 ;; This function uses a non-reentrant model
 14823 ;;
 14824                           
 14825                           	psect	text44
 14826  003E36                     __ptext44:
 14827                           	opt stack 0
 14828  003E36                     _sdc_disk_write:
 14829                           	opt stack 17
 14830                           
 14831                           ;diskio.c: 584: DRESULT res;
 14832                           ;diskio.c: 585: unsigned char buff;
 14833                           ;diskio.c: 586: int i=0,j, count1 = 0;
 14834                           
 14835                           ;incstack = 0
 14836  003E36  0E00               	movlw	0
 14837  003E38  6E2A               	movwf	sdc_disk_write@i+1,c
 14838  003E3A  0E00               	movlw	0
 14839  003E3C  6E29               	movwf	sdc_disk_write@i,c
 14840  003E3E  0E00               	movlw	0
 14841  003E40  6E2C               	movwf	sdc_disk_write@count1+1,c
 14842  003E42  0E00               	movlw	0
 14843  003E44  6E2B               	movwf	sdc_disk_write@count1,c
 14844                           
 14845                           ;diskio.c: 588: LATBbits.LATB7 = 1;
 14846  003E46  8E8A               	bsf	3978,7,c	;volatile
 14847                           
 14848                           ;diskio.c: 589: LATBbits.LATB4 = 0;
 14849  003E48  988A               	bcf	3978,4,c	;volatile
 14850                           
 14851                           ;diskio.c: 591: if(count < 512)
 14852  003E4A  0E08               	movlw	8
 14853  003E4C  ECBE  F026         	call	_dummy_clocks
 14854                           
 14855                           ;diskio.c: 592: {
 14856                           ;diskio.c: 593: command(0X58, 0X00000000, 0X00);
 14857  003E50  0E00               	movlw	0
 14858  003E52  6E18               	movwf	command@arg,c
 14859  003E54  0E00               	movlw	0
 14860  003E56  6E19               	movwf	command@arg+1,c
 14861  003E58  0E00               	movlw	0
 14862  003E5A  6E1A               	movwf	command@arg+2,c
 14863  003E5C  0E00               	movlw	0
 14864  003E5E  6E1B               	movwf	command@arg+3,c
 14865  003E60  0E00               	movlw	0
 14866  003E62  6E1C               	movwf	command@CRC,c
 14867  003E64  0E58               	movlw	88
 14868  003E66  EC18  F027         	call	_command
 14869                           
 14870                           ;diskio.c: 594: LATBbits.LATB4 = 1;
 14871  003E6A  888A               	bsf	3978,4,c	;volatile
 14872  003E6C                     l10489:
 14873                           
 14874                           ;diskio.c: 596: {
 14875                           ;diskio.c: 597: buff = response();
 14876  003E6C  EC3B  F028         	call	_response	;wreg free
 14877  003E70  6E2F               	movwf	sdc_disk_write@buff,c
 14878                           
 14879                           ;diskio.c: 599: }
 14880                           ;diskio.c: 600: while(buff != 0x00);
 14881  003E72  502F               	movf	sdc_disk_write@buff,w,c
 14882  003E74  A4D8               	btfss	status,2,c
 14883  003E76  D7FA               	goto	l10489
 14884                           
 14885                           ;diskio.c: 602: _delay((unsigned long)((1)*(48000000/4000.0)));
 14886  003E78  0E10               	movlw	16
 14887  003E7A  6E26               	movwf	??_sdc_disk_write& (0+255),c
 14888  003E7C  0E94               	movlw	148
 14889  003E7E                     u16397:
 14890  003E7E  2EE8               	decfsz	wreg,f,c
 14891  003E80  D7FE               	bra	u16397
 14892  003E82  2E26               	decfsz	??_sdc_disk_write& (0+255),f,c
 14893  003E84  D7FC               	bra	u16397
 14894  003E86  D000               	nop2	
 14895                           
 14896                           ;diskio.c: 603: LATBbits.LATB7 = 1;
 14897  003E88  8E8A               	bsf	3978,7,c	;volatile
 14898                           
 14899                           ;diskio.c: 604: LATBbits.LATB4 = 0;
 14900  003E8A  988A               	bcf	3978,4,c	;volatile
 14901                           
 14902                           ;diskio.c: 605: escreve_dado_SPI(0XFE);
 14903  003E8C  0EFE               	movlw	254
 14904  003E8E  EC1A  F026         	call	_escreve_dado_SPI
 14905                           
 14906                           ;diskio.c: 606: LATBbits.LATB4 = 1;
 14907  003E92  888A               	bsf	3978,4,c	;volatile
 14908                           
 14909                           ;diskio.c: 609: _delay((unsigned long)((1)*(48000000/4000.0)));
 14910  003E94  0E10               	movlw	16
 14911  003E96  6E26               	movwf	??_sdc_disk_write& (0+255),c
 14912  003E98  0E94               	movlw	148
 14913  003E9A                     u16407:
 14914  003E9A  2EE8               	decfsz	wreg,f,c
 14915  003E9C  D7FE               	bra	u16407
 14916  003E9E  2E26               	decfsz	??_sdc_disk_write& (0+255),f,c
 14917  003EA0  D7FC               	bra	u16407
 14918  003EA2  D000               	nop2	
 14919                           
 14920                           ;diskio.c: 611: LATBbits.LATB7 = 1;
 14921  003EA4  8E8A               	bsf	3978,7,c	;volatile
 14922                           
 14923                           ;diskio.c: 612: LATBbits.LATB4 = 0;
 14924  003EA6  988A               	bcf	3978,4,c	;volatile
 14925                           
 14926                           ;diskio.c: 613: escreve_dado_SPI(*p_buff);
 14927  003EA8  C01F  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 14928  003EAC  C020  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 14929  003EB0  50DF               	movf	indf2,w,c
 14930  003EB2  EC1A  F026         	call	_escreve_dado_SPI
 14931                           
 14932                           ;diskio.c: 614: p_buff++;
 14933  003EB6  4A1F               	infsnz	sdc_disk_write@p_buff,f,c
 14934  003EB8  2A20               	incf	sdc_disk_write@p_buff+1,f,c
 14935                           
 14936                           ;diskio.c: 615: LATBbits.LATB4 = 1;
 14937  003EBA  888A               	bsf	3978,4,c	;volatile
 14938                           
 14939                           ;diskio.c: 616: }
 14940  003EBC  D03B               	goto	l10549
 14941  003EBE                     l264:
 14942                           
 14943                           ;diskio.c: 623: {
 14944                           ;diskio.c: 624: buff = response();
 14945  003EBE  EC3B  F028         	call	_response	;wreg free
 14946  003EC2  6E2F               	movwf	sdc_disk_write@buff,c
 14947                           
 14948                           ;diskio.c: 626: }
 14949                           ;diskio.c: 627: while(buff != 0x00);
 14950  003EC4  502F               	movf	sdc_disk_write@buff,w,c
 14951  003EC6  A4D8               	btfss	status,2,c
 14952  003EC8  D7FA               	goto	l264
 14953                           
 14954                           ;diskio.c: 631: for(char i = 0; i < count / 512; i++)
 14955  003ECA  0E00               	movlw	0
 14956  003ECC  6E2D               	movwf	sdc_disk_write@i_548,c
 14957  003ECE  D01C               	goto	l10547
 14958  003ED0                     l267:
 14959                           
 14960                           ;diskio.c: 632: {
 14961                           ;diskio.c: 634: LATBbits.LATB7 = 1;
 14962  003ED0  8E8A               	bsf	3978,7,c	;volatile
 14963                           
 14964                           ;diskio.c: 635: LATBbits.LATB4 = 0;
 14965  003ED2  988A               	bcf	3978,4,c	;volatile
 14966                           
 14967                           ;diskio.c: 636: dummy_clocks(2);
 14968  003ED4  0E02               	movlw	2
 14969  003ED6  ECBE  F026         	call	_dummy_clocks
 14970                           
 14971                           ;diskio.c: 637: escreve_dado_SPI(0XFC);
 14972  003EDA  0EFC               	movlw	252
 14973  003EDC  EC1A  F026         	call	_escreve_dado_SPI
 14974                           
 14975                           ;diskio.c: 638: LATBbits.LATB4 = 1;
 14976  003EE0  888A               	bsf	3978,4,c	;volatile
 14977                           
 14978                           ;diskio.c: 640: LATBbits.LATB7 = 1;
 14979  003EE2  8E8A               	bsf	3978,7,c	;volatile
 14980                           
 14981                           ;diskio.c: 641: LATBbits.LATB4 = 0;
 14982  003EE4  988A               	bcf	3978,4,c	;volatile
 14983                           
 14984                           ;diskio.c: 642: escreve_dado_SPI(*p_buff);
 14985  003EE6  C01F  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 14986  003EEA  C020  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 14987  003EEE  50DF               	movf	indf2,w,c
 14988  003EF0  EC1A  F026         	call	_escreve_dado_SPI
 14989                           
 14990                           ;diskio.c: 643: p_buff++;
 14991  003EF4  4A1F               	infsnz	sdc_disk_write@p_buff,f,c
 14992  003EF6  2A20               	incf	sdc_disk_write@p_buff+1,f,c
 14993                           
 14994                           ;diskio.c: 644: LATBbits.LATB4 = 1;
 14995  003EF8  888A               	bsf	3978,4,c	;volatile
 14996                           
 14997                           ;diskio.c: 646: LATBbits.LATB7 = 1;
 14998  003EFA  8E8A               	bsf	3978,7,c	;volatile
 14999                           
 15000                           ;diskio.c: 647: LATBbits.LATB4 = 0;
 15001  003EFC  988A               	bcf	3978,4,c	;volatile
 15002                           
 15003                           ;diskio.c: 648: escreve_dado_SPI(0XFD);
 15004  003EFE  0EFD               	movlw	253
 15005  003F00  EC1A  F026         	call	_escreve_dado_SPI
 15006                           
 15007                           ;diskio.c: 649: LATBbits.LATB4 = 1;
 15008  003F04  888A               	bsf	3978,4,c	;volatile
 15009  003F06  2A2D               	incf	sdc_disk_write@i_548,f,c
 15010  003F08                     l10547:
 15011  003F08  C025  F016         	movff	sdc_disk_write@count,___awdiv@dividend
 15012  003F0C  6A17               	clrf	___awdiv@dividend+1,c
 15013  003F0E  0E02               	movlw	2
 15014  003F10  6E19               	movwf	___awdiv@divisor+1,c
 15015  003F12  0E00               	movlw	0
 15016  003F14  6E18               	movwf	___awdiv@divisor,c
 15017  003F16  EC14  F023         	call	___awdiv	;wreg free
 15018  003F1A  502D               	movf	sdc_disk_write@i_548,w,c
 15019  003F1C  6E26               	movwf	??_sdc_disk_write& (0+255),c
 15020  003F1E  6A27               	clrf	(??_sdc_disk_write+1)& (0+255),c
 15021  003F20  5016               	movf	?___awdiv,w,c
 15022  003F22  5C26               	subwf	??_sdc_disk_write,w,c
 15023  003F24  5027               	movf	??_sdc_disk_write+1,w,c
 15024  003F26  0A80               	xorlw	128
 15025  003F28  6E28               	movwf	(??_sdc_disk_write+2)& (0+255),c
 15026  003F2A  5017               	movf	?___awdiv+1,w,c
 15027  003F2C  0A80               	xorlw	128
 15028  003F2E  5828               	subwfb	(??_sdc_disk_write+2)& (0+255),w,c
 15029  003F30  A0D8               	btfss	status,0,c
 15030  003F32  D7CE               	goto	l267
 15031  003F34                     l10549:
 15032                           
 15033                           ;diskio.c: 651: }
 15034                           ;diskio.c: 653: }
 15035                           ;diskio.c: 655: _delay((unsigned long)((1)*(48000000/4000.0)));
 15036  003F34  0E10               	movlw	16
 15037  003F36  6E26               	movwf	??_sdc_disk_write& (0+255),c
 15038  003F38  0E94               	movlw	148
 15039  003F3A                     u16417:
 15040  003F3A  2EE8               	decfsz	wreg,f,c
 15041  003F3C  D7FE               	bra	u16417
 15042  003F3E  2E26               	decfsz	??_sdc_disk_write& (0+255),f,c
 15043  003F40  D7FC               	bra	u16417
 15044  003F42  D000               	nop2	
 15045                           
 15046                           ;diskio.c: 656: LATBbits.LATB4 = 0;
 15047  003F44  988A               	bcf	3978,4,c	;volatile
 15048                           
 15049                           ;diskio.c: 657: LATBbits.LATB7 = 1;
 15050  003F46  8E8A               	bsf	3978,7,c	;volatile
 15051                           
 15052                           ;diskio.c: 658: dummy_clocks(2);
 15053  003F48  0E02               	movlw	2
 15054  003F4A  ECBE  F026         	call	_dummy_clocks
 15055                           
 15056                           ;diskio.c: 659: command(0X4D,0X00000000,0XFF);
 15057  003F4E  0E00               	movlw	0
 15058  003F50  6E18               	movwf	command@arg,c
 15059  003F52  0E00               	movlw	0
 15060  003F54  6E19               	movwf	command@arg+1,c
 15061  003F56  0E00               	movlw	0
 15062  003F58  6E1A               	movwf	command@arg+2,c
 15063  003F5A  0E00               	movlw	0
 15064  003F5C  6E1B               	movwf	command@arg+3,c
 15065  003F5E  0EFF               	movlw	255
 15066  003F60  6E1C               	movwf	command@CRC,c
 15067  003F62  0E4D               	movlw	77
 15068  003F64  EC18  F027         	call	_command
 15069                           
 15070                           ;diskio.c: 660: LATBbits.LATB4 = 1;
 15071  003F68  888A               	bsf	3978,4,c	;volatile
 15072  003F6A                     l10561:
 15073                           
 15074                           ;diskio.c: 664: buff = response();
 15075  003F6A  EC3B  F028         	call	_response	;wreg free
 15076  003F6E  6E2F               	movwf	sdc_disk_write@buff,c
 15077                           
 15078                           ;diskio.c: 670: }while(buff!=0X00 );
 15079  003F70  502F               	movf	sdc_disk_write@buff,w,c
 15080  003F72  A4D8               	btfss	status,2,c
 15081  003F74  D7FA               	goto	l10561
 15082                           
 15083                           ;diskio.c: 672: posicao_cursor_lcd(1,0);
 15084  003F76  0E00               	movlw	0
 15085  003F78  6E19               	movwf	posicao_cursor_lcd@coluna,c
 15086  003F7A  0E01               	movlw	1
 15087  003F7C  EC8A  F024         	call	_posicao_cursor_lcd
 15088                           
 15089                           ;diskio.c: 673: escreve_frase_ram_lcd(res);
 15090  003F80  502E               	movf	sdc_disk_write@res,w,c
 15091  003F82  6E26               	movwf	??_sdc_disk_write& (0+255),c
 15092  003F84  6A27               	clrf	(??_sdc_disk_write+1)& (0+255),c
 15093  003F86  C026  F019         	movff	??_sdc_disk_write,escreve_frase_ram_lcd@buffer
 15094  003F8A  C027  F01A         	movff	??_sdc_disk_write+1,escreve_frase_ram_lcd@buffer+1
 15095  003F8E  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
 15096                           
 15097                           ;diskio.c: 674: _delay((unsigned long)((2000)*(48000000/4000.0)));
 15098  003F92  0E7A               	movlw	122
 15099  003F94  6E27               	movwf	(??_sdc_disk_write+1)& (0+255),c
 15100  003F96  0EC1               	movlw	193
 15101  003F98  6E26               	movwf	??_sdc_disk_write& (0+255),c
 15102  003F9A  0E82               	movlw	130
 15103  003F9C                     u16427:
 15104  003F9C  2EE8               	decfsz	wreg,f,c
 15105  003F9E  D7FE               	bra	u16427
 15106  003FA0  2E26               	decfsz	??_sdc_disk_write& (0+255),f,c
 15107  003FA2  D7FC               	bra	u16427
 15108  003FA4  2E27               	decfsz	(??_sdc_disk_write+1)& (0+255),f,c
 15109  003FA6  D7FA               	bra	u16427
 15110                           
 15111                           ;diskio.c: 678: return res;
 15112  003FA8  502E               	movf	sdc_disk_write@res,w,c
 15113  003FAA  0012               	return	
 15114  003FAC                     __end_of_sdc_disk_write:
 15115                           	opt stack 0
 15116                           tosu	equ	0xFFF
 15117                           tosh	equ	0xFFE
 15118                           tosl	equ	0xFFD
 15119                           pclath	equ	0xFFA
 15120                           tblptru	equ	0xFF8
 15121                           tblptrh	equ	0xFF7
 15122                           tblptrl	equ	0xFF6
 15123                           tablat	equ	0xFF5
 15124                           prodh	equ	0xFF4
 15125                           prodl	equ	0xFF3
 15126                           intcon	equ	0xFF2
 15127                           intcon2	equ	0xFF1
 15128                           intcon3	equ	0xFF0
 15129                           indf0	equ	0xFEF
 15130                           postinc0	equ	0xFEE
 15131                           fsr0h	equ	0xFEA
 15132                           fsr0l	equ	0xFE9
 15133                           wreg	equ	0xFE8
 15134                           indf1	equ	0xFE7
 15135                           postinc1	equ	0xFE6
 15136                           postdec1	equ	0xFE5
 15137                           fsr1h	equ	0xFE2
 15138                           fsr1l	equ	0xFE1
 15139                           indf2	equ	0xFDF
 15140                           postinc2	equ	0xFDE
 15141                           postdec2	equ	0xFDD
 15142                           plusw2	equ	0xFDB
 15143                           fsr2h	equ	0xFDA
 15144                           fsr2l	equ	0xFD9
 15145                           status	equ	0xFD8
 15146                           
 15147 ;; *************** function ___awdiv *****************
 15148 ;; Defined at:
 15149 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 15150 ;; Parameters:    Size  Location     Type
 15151 ;;  dividend        2   21[COMRAM] int 
 15152 ;;  divisor         2   23[COMRAM] int 
 15153 ;; Auto vars:     Size  Location     Type
 15154 ;;  quotient        2   27[COMRAM] int 
 15155 ;;  sign            1   26[COMRAM] unsigned char 
 15156 ;;  counter         1   25[COMRAM] unsigned char 
 15157 ;; Return value:  Size  Location     Type
 15158 ;;                  2   21[COMRAM] int 
 15159 ;; Registers used:
 15160 ;;		wreg, status,2, status,0
 15161 ;; Tracked objects:
 15162 ;;		On entry : 0/0
 15163 ;;		On exit  : 0/0
 15164 ;;		Unchanged: 0/0
 15165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15166 ;;      Params:         4       0       0       0       0       0       0       0       0
 15167 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15168 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15169 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15170 ;;Total ram usage:        8 bytes
 15171 ;; Hardware stack levels used:    1
 15172 ;; Hardware stack levels required when called:    2
 15173 ;; This function calls:
 15174 ;;		Nothing
 15175 ;; This function is called by:
 15176 ;;		_sdc_disk_write
 15177 ;;		_sprintf
 15178 ;;		_scale
 15179 ;;		_fround
 15180 ;; This function uses a non-reentrant model
 15181 ;;
 15182                           
 15183                           	psect	text45
 15184  004628                     __ptext45:
 15185                           	opt stack 0
 15186  004628                     ___awdiv:
 15187                           	opt stack 19
 15188                           
 15189                           ;incstack = 0
 15190  004628  0E00               	movlw	0
 15191  00462A  6E1B               	movwf	___awdiv@sign,c
 15192  00462C  AE19               	btfss	___awdiv@divisor+1,7,c
 15193  00462E  D006               	goto	l10329
 15194  004630  6C18               	negf	___awdiv@divisor,c
 15195  004632  1E19               	comf	___awdiv@divisor+1,f,c
 15196  004634  B0D8               	btfsc	status,0,c
 15197  004636  2A19               	incf	___awdiv@divisor+1,f,c
 15198  004638  0E01               	movlw	1
 15199  00463A  6E1B               	movwf	___awdiv@sign,c
 15200  00463C                     l10329:
 15201  00463C  AE17               	btfss	___awdiv@dividend+1,7,c
 15202  00463E  D006               	goto	l10335
 15203  004640  6C16               	negf	___awdiv@dividend,c
 15204  004642  1E17               	comf	___awdiv@dividend+1,f,c
 15205  004644  B0D8               	btfsc	status,0,c
 15206  004646  2A17               	incf	___awdiv@dividend+1,f,c
 15207  004648  0E01               	movlw	1
 15208  00464A  1A1B               	xorwf	___awdiv@sign,f,c
 15209  00464C                     l10335:
 15210  00464C  0E00               	movlw	0
 15211  00464E  6E1D               	movwf	___awdiv@quotient+1,c
 15212  004650  0E00               	movlw	0
 15213  004652  6E1C               	movwf	___awdiv@quotient,c
 15214  004654  5018               	movf	___awdiv@divisor,w,c
 15215  004656  1019               	iorwf	___awdiv@divisor+1,w,c
 15216  004658  B4D8               	btfsc	status,2,c
 15217  00465A  D01C               	goto	l10357
 15218  00465C  0E01               	movlw	1
 15219  00465E  6E1A               	movwf	___awdiv@counter,c
 15220  004660  D004               	goto	l10343
 15221  004662                     l10341:
 15222  004662  90D8               	bcf	status,0,c
 15223  004664  3618               	rlcf	___awdiv@divisor,f,c
 15224  004666  3619               	rlcf	___awdiv@divisor+1,f,c
 15225  004668  2A1A               	incf	___awdiv@counter,f,c
 15226  00466A                     l10343:
 15227  00466A  AE19               	btfss	___awdiv@divisor+1,7,c
 15228  00466C  D7FA               	goto	l10341
 15229  00466E                     l10345:
 15230  00466E  90D8               	bcf	status,0,c
 15231  004670  361C               	rlcf	___awdiv@quotient,f,c
 15232  004672  361D               	rlcf	___awdiv@quotient+1,f,c
 15233  004674  5018               	movf	___awdiv@divisor,w,c
 15234  004676  5C16               	subwf	___awdiv@dividend,w,c
 15235  004678  5019               	movf	___awdiv@divisor+1,w,c
 15236  00467A  5817               	subwfb	___awdiv@dividend+1,w,c
 15237  00467C  A0D8               	btfss	status,0,c
 15238  00467E  D005               	goto	l10353
 15239  004680  5018               	movf	___awdiv@divisor,w,c
 15240  004682  5E16               	subwf	___awdiv@dividend,f,c
 15241  004684  5019               	movf	___awdiv@divisor+1,w,c
 15242  004686  5A17               	subwfb	___awdiv@dividend+1,f,c
 15243  004688  801C               	bsf	___awdiv@quotient,0,c
 15244  00468A                     l10353:
 15245  00468A  90D8               	bcf	status,0,c
 15246  00468C  3219               	rrcf	___awdiv@divisor+1,f,c
 15247  00468E  3218               	rrcf	___awdiv@divisor,f,c
 15248  004690  2E1A               	decfsz	___awdiv@counter,f,c
 15249  004692  D7ED               	goto	l10345
 15250  004694                     l10357:
 15251  004694  501B               	movf	___awdiv@sign,w,c
 15252  004696  B4D8               	btfsc	status,2,c
 15253  004698  D004               	goto	l10361
 15254  00469A  6C1C               	negf	___awdiv@quotient,c
 15255  00469C  1E1D               	comf	___awdiv@quotient+1,f,c
 15256  00469E  B0D8               	btfsc	status,0,c
 15257  0046A0  2A1D               	incf	___awdiv@quotient+1,f,c
 15258  0046A2                     l10361:
 15259  0046A2  C01C  F016         	movff	___awdiv@quotient,?___awdiv
 15260  0046A6  C01D  F017         	movff	___awdiv@quotient+1,?___awdiv+1
 15261  0046AA  0012               	return	
 15262  0046AC                     __end_of___awdiv:
 15263                           	opt stack 0
 15264                           tosu	equ	0xFFF
 15265                           tosh	equ	0xFFE
 15266                           tosl	equ	0xFFD
 15267                           pclath	equ	0xFFA
 15268                           tblptru	equ	0xFF8
 15269                           tblptrh	equ	0xFF7
 15270                           tblptrl	equ	0xFF6
 15271                           tablat	equ	0xFF5
 15272                           prodh	equ	0xFF4
 15273                           prodl	equ	0xFF3
 15274                           intcon	equ	0xFF2
 15275                           intcon2	equ	0xFF1
 15276                           intcon3	equ	0xFF0
 15277                           indf0	equ	0xFEF
 15278                           postinc0	equ	0xFEE
 15279                           fsr0h	equ	0xFEA
 15280                           fsr0l	equ	0xFE9
 15281                           wreg	equ	0xFE8
 15282                           indf1	equ	0xFE7
 15283                           postinc1	equ	0xFE6
 15284                           postdec1	equ	0xFE5
 15285                           fsr1h	equ	0xFE2
 15286                           fsr1l	equ	0xFE1
 15287                           indf2	equ	0xFDF
 15288                           postinc2	equ	0xFDE
 15289                           postdec2	equ	0xFDD
 15290                           plusw2	equ	0xFDB
 15291                           fsr2h	equ	0xFDA
 15292                           fsr2l	equ	0xFD9
 15293                           status	equ	0xFD8
 15294                           
 15295 ;; *************** function _disk_read *****************
 15296 ;; Defined at:
 15297 ;;		line 148 in file "bibliotecas/diskio.c"
 15298 ;; Parameters:    Size  Location     Type
 15299 ;;  pdrv            1    wreg     unsigned char 
 15300 ;;  buff            2   24[BANK0 ] PTR unsigned char 
 15301 ;;		 -> fs(552), NULL(0), 
 15302 ;;  sector          4   26[BANK0 ] unsigned long 
 15303 ;;  count           1   30[BANK0 ] unsigned char 
 15304 ;; Auto vars:     Size  Location     Type
 15305 ;;  pdrv            1   31[BANK0 ] unsigned char 
 15306 ;;  result          2   32[BANK0 ] int 
 15307 ;;  res             1   34[BANK0 ] enum E25
 15308 ;; Return value:  Size  Location     Type
 15309 ;;                  1    wreg      enum E25
 15310 ;; Registers used:
 15311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15312 ;; Tracked objects:
 15313 ;;		On entry : 0/0
 15314 ;;		On exit  : 0/0
 15315 ;;		Unchanged: 0/0
 15316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15317 ;;      Params:         0       7       0       0       0       0       0       0       0
 15318 ;;      Locals:         0       4       0       0       0       0       0       0       0
 15319 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15320 ;;      Totals:         1      11       0       0       0       0       0       0       0
 15321 ;;Total ram usage:       12 bytes
 15322 ;; Hardware stack levels used:    1
 15323 ;; Hardware stack levels required when called:    7
 15324 ;; This function calls:
 15325 ;;		_sdc_disk_read
 15326 ;; This function is called by:
 15327 ;;		_move_window
 15328 ;;		_check_fs
 15329 ;;		_f_read
 15330 ;; This function uses a non-reentrant model
 15331 ;;
 15332                           
 15333                           	psect	text46
 15334  004506                     __ptext46:
 15335                           	opt stack 0
 15336  004506                     _disk_read:
 15337                           	opt stack 16
 15338                           
 15339                           ;incstack = 0
 15340                           ;disk_read@pdrv stored from wreg
 15341  004506  0100               	movlb	0	; () banked
 15342  004508  6F7F               	movwf	disk_read@pdrv& (0+255),b
 15343                           
 15344                           ;diskio.c: 155: DRESULT res;
 15345                           ;diskio.c: 156: int result;
 15346                           ;diskio.c: 158: switch (pdrv) {
 15347  00450A  D03B               	goto	l10601
 15348  00450C                     l10577:
 15349                           
 15350                           ;diskio.c: 161: result = sdc_disk_read(buff, sector, count);
 15351  00450C  C078  F067         	movff	disk_read@buff,sdc_disk_read@p_buff
 15352  004510  C079  F068         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 15353  004514  C07A  F069         	movff	disk_read@sector,sdc_disk_read@sector
 15354  004518  C07B  F06A         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 15355  00451C  C07C  F06B         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 15356  004520  C07D  F06C         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 15357  004524  C07E  F06D         	movff	disk_read@count,sdc_disk_read@count
 15358  004528  EC14  F018         	call	_sdc_disk_read	;wreg free
 15359  00452C  6E34               	movwf	??_disk_read& (0+255),c
 15360  00452E  5034               	movf	??_disk_read,w,c
 15361  004530  0100               	movlb	0	; () banked
 15362  004532  6F80               	movwf	disk_read@result& (0+255),b
 15363  004534  6B81               	clrf	(disk_read@result+1)& (0+255),b
 15364                           
 15365                           ; BSR set to: 0
 15366                           ;diskio.c: 162: res = result;
 15367  004536  C080  F082         	movff	disk_read@result,disk_read@res
 15368                           
 15369                           ; BSR set to: 0
 15370                           ;diskio.c: 164: return res;
 15371  00453A  0100               	movlb	0	; () banked
 15372  00453C  5182               	movf	disk_read@res& (0+255),w,b
 15373                           
 15374                           ; BSR set to: 0
 15375  00453E  0012               	return	
 15376  004540                     l10585:
 15377                           
 15378                           ; BSR set to: 0
 15379                           ;diskio.c: 168: result = sdc_disk_read(buff, sector, count);
 15380  004540  C078  F067         	movff	disk_read@buff,sdc_disk_read@p_buff
 15381  004544  C079  F068         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 15382  004548  C07A  F069         	movff	disk_read@sector,sdc_disk_read@sector
 15383  00454C  C07B  F06A         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 15384  004550  C07C  F06B         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 15385  004554  C07D  F06C         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 15386  004558  C07E  F06D         	movff	disk_read@count,sdc_disk_read@count
 15387  00455C  EC14  F018         	call	_sdc_disk_read	;wreg free
 15388  004560  6E34               	movwf	??_disk_read& (0+255),c
 15389  004562  5034               	movf	??_disk_read,w,c
 15390  004564  0100               	movlb	0	; () banked
 15391  004566  6F80               	movwf	disk_read@result& (0+255),b
 15392  004568  6B81               	clrf	(disk_read@result+1)& (0+255),b
 15393                           
 15394                           ; BSR set to: 0
 15395                           ;diskio.c: 169: res = result;
 15396  00456A  C080  F082         	movff	disk_read@result,disk_read@res
 15397                           
 15398                           ; BSR set to: 0
 15399                           ;diskio.c: 171: buff = data_buff;
 15400  00456E  C0FE  F078         	movff	_data_buff,disk_read@buff
 15401  004572  C0FF  F079         	movff	_data_buff+1,disk_read@buff+1
 15402                           
 15403                           ; BSR set to: 0
 15404                           ;diskio.c: 172: return res;
 15405  004576  0100               	movlb	0	; () banked
 15406  004578  5182               	movf	disk_read@res& (0+255),w,b
 15407                           
 15408                           ; BSR set to: 0
 15409  00457A  0012               	return	
 15410  00457C                     l10595:
 15411                           
 15412                           ; BSR set to: 0
 15413                           ;diskio.c: 181: return res;
 15414  00457C  0100               	movlb	0	; () banked
 15415  00457E  5182               	movf	disk_read@res& (0+255),w,b
 15416                           
 15417                           ; BSR set to: 0
 15418  004580  0012               	return	
 15419  004582                     l10601:
 15420  004582  0100               	movlb	0	; () banked
 15421  004584  517F               	movf	disk_read@pdrv& (0+255),w,b
 15422                           
 15423                           ; Switch size 1, requested type "space"
 15424                           ; Number of cases is 3, Range of values is 0 to 2
 15425                           ; switch strategies available:
 15426                           ; Name         Instructions Cycles
 15427                           ; simple_byte           10     6 (average)
 15428                           ;	Chosen strategy is simple_byte
 15429  004586  0A00               	xorlw	0	; case 0
 15430  004588  B4D8               	btfsc	status,2,c
 15431  00458A  D7DA               	goto	l10585
 15432  00458C  0A01               	xorlw	1	; case 1
 15433  00458E  B4D8               	btfsc	status,2,c
 15434  004590  D7BD               	goto	l10577
 15435  004592  0A03               	xorlw	3	; case 2
 15436  004594  B4D8               	btfsc	status,2,c
 15437  004596  D7F2               	goto	l10595
 15438                           
 15439                           ; BSR set to: 0
 15440                           ;diskio.c: 188: return RES_PARERR;
 15441                           
 15442                           ; BSR set to: 0
 15443  004598  0E04               	movlw	4
 15444  00459A  0012               	return	
 15445  00459C                     __end_of_disk_read:
 15446                           	opt stack 0
 15447                           tosu	equ	0xFFF
 15448                           tosh	equ	0xFFE
 15449                           tosl	equ	0xFFD
 15450                           pclath	equ	0xFFA
 15451                           tblptru	equ	0xFF8
 15452                           tblptrh	equ	0xFF7
 15453                           tblptrl	equ	0xFF6
 15454                           tablat	equ	0xFF5
 15455                           prodh	equ	0xFF4
 15456                           prodl	equ	0xFF3
 15457                           intcon	equ	0xFF2
 15458                           intcon2	equ	0xFF1
 15459                           intcon3	equ	0xFF0
 15460                           indf0	equ	0xFEF
 15461                           postinc0	equ	0xFEE
 15462                           fsr0h	equ	0xFEA
 15463                           fsr0l	equ	0xFE9
 15464                           wreg	equ	0xFE8
 15465                           indf1	equ	0xFE7
 15466                           postinc1	equ	0xFE6
 15467                           postdec1	equ	0xFE5
 15468                           fsr1h	equ	0xFE2
 15469                           fsr1l	equ	0xFE1
 15470                           indf2	equ	0xFDF
 15471                           postinc2	equ	0xFDE
 15472                           postdec2	equ	0xFDD
 15473                           plusw2	equ	0xFDB
 15474                           fsr2h	equ	0xFDA
 15475                           fsr2l	equ	0xFD9
 15476                           status	equ	0xFD8
 15477                           
 15478 ;; *************** function _sdc_disk_read *****************
 15479 ;; Defined at:
 15480 ;;		line 430 in file "bibliotecas/diskio.c"
 15481 ;; Parameters:    Size  Location     Type
 15482 ;;  p_buff          2    7[BANK0 ] PTR unsigned char 
 15483 ;;		 -> fs(552), NULL(0), 
 15484 ;;  sector          4    9[BANK0 ] unsigned long 
 15485 ;;  count           1   13[BANK0 ] unsigned char 
 15486 ;; Auto vars:     Size  Location     Type
 15487 ;;  start_add       4   15[BANK0 ] unsigned long 
 15488 ;;  length          2   21[BANK0 ] int 
 15489 ;;  offset          2   19[BANK0 ] int 
 15490 ;;  count1          2    0        int 
 15491 ;;  i               2    0        int 
 15492 ;;  buff            1   23[BANK0 ] unsigned char 
 15493 ;;  ptr             1   14[BANK0 ] unsigned char 
 15494 ;;  res             1    0        enum E25
 15495 ;; Return value:  Size  Location     Type
 15496 ;;                  1    wreg      enum E25
 15497 ;; Registers used:
 15498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15499 ;; Tracked objects:
 15500 ;;		On entry : 0/0
 15501 ;;		On exit  : 0/0
 15502 ;;		Unchanged: 0/0
 15503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15504 ;;      Params:         0       7       0       0       0       0       0       0       0
 15505 ;;      Locals:         0      10       0       0       0       0       0       0       0
 15506 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15507 ;;      Totals:         4      17       0       0       0       0       0       0       0
 15508 ;;Total ram usage:       21 bytes
 15509 ;; Hardware stack levels used:    1
 15510 ;; Hardware stack levels required when called:    6
 15511 ;; This function calls:
 15512 ;;		_command
 15513 ;;		_dummy_clocks
 15514 ;;		_escreve_frase_ram_lcd
 15515 ;;		_escreve_inteiro_lcd
 15516 ;;		_posicao_cursor_lcd
 15517 ;;		_proceed
 15518 ;;		_response
 15519 ;; This function is called by:
 15520 ;;		_disk_read
 15521 ;; This function uses a non-reentrant model
 15522 ;;
 15523                           
 15524                           	psect	text47
 15525  003028                     __ptext47:
 15526                           	opt stack 0
 15527  003028                     _sdc_disk_read:
 15528                           	opt stack 16
 15529                           
 15530                           ;diskio.c: 437: DRESULT res;
 15531                           ;diskio.c: 438: unsigned char ptr=0X00, buff;
 15532                           
 15533                           ; BSR set to: 0
 15534                           ;incstack = 0
 15535  003028  0E00               	movlw	0
 15536  00302A  0100               	movlb	0	; () banked
 15537  00302C  6F6E               	movwf	sdc_disk_read@ptr& (0+255),b
 15538                           
 15539                           ;diskio.c: 439: unsigned long int start_add;
 15540                           ;diskio.c: 441: int length,i, count1, offset = 0;
 15541  00302E  0E00               	movlw	0
 15542  003030  0100               	movlb	0	; () banked
 15543  003032  6F74               	movwf	(sdc_disk_read@offset+1)& (0+255),b
 15544  003034  0E00               	movlw	0
 15545  003036  6F73               	movwf	sdc_disk_read@offset& (0+255),b
 15546                           
 15547                           ; BSR set to: 0
 15548                           ;diskio.c: 453: if(offset == 0)
 15549  003038  0100               	movlb	0	; () banked
 15550  00303A  5173               	movf	sdc_disk_read@offset& (0+255),w,b
 15551  00303C  0100               	movlb	0	; () banked
 15552  00303E  1174               	iorwf	(sdc_disk_read@offset+1)& (0+255),w,b
 15553  003040  A4D8               	btfss	status,2,c
 15554  003042  D130               	goto	l10471
 15555                           
 15556                           ; BSR set to: 0
 15557                           ;diskio.c: 454: {
 15558                           ;diskio.c: 455: start_add = ((sector*512));
 15559  003044  C069  F030         	movff	sdc_disk_read@sector,??_sdc_disk_read
 15560  003048  C06A  F031         	movff	sdc_disk_read@sector+1,??_sdc_disk_read+1
 15561  00304C  C06B  F032         	movff	sdc_disk_read@sector+2,??_sdc_disk_read+2
 15562  003050  C06C  F033         	movff	sdc_disk_read@sector+3,??_sdc_disk_read+3
 15563  003054  0E09               	movlw	9
 15564  003056                     u11645:
 15565  003056  90D8               	bcf	status,0,c
 15566  003058  3630               	rlcf	??_sdc_disk_read,f,c
 15567  00305A  3631               	rlcf	??_sdc_disk_read+1,f,c
 15568  00305C  3632               	rlcf	??_sdc_disk_read+2,f,c
 15569  00305E  3633               	rlcf	??_sdc_disk_read+3,f,c
 15570  003060  2EE8               	decfsz	wreg,f,c
 15571  003062  D7F9               	goto	u11645
 15572  003064  C030  F06F         	movff	??_sdc_disk_read,sdc_disk_read@start_add
 15573  003068  C031  F070         	movff	??_sdc_disk_read+1,sdc_disk_read@start_add+1
 15574  00306C  C032  F071         	movff	??_sdc_disk_read+2,sdc_disk_read@start_add+2
 15575  003070  C033  F072         	movff	??_sdc_disk_read+3,sdc_disk_read@start_add+3
 15576                           
 15577                           ; BSR set to: 0
 15578                           ;diskio.c: 456: _delay((unsigned long)((1)*(48000000/4000.0)));
 15579  003074  0E10               	movlw	16
 15580  003076  6E30               	movwf	??_sdc_disk_read& (0+255),c
 15581  003078  0E94               	movlw	148
 15582  00307A                     u16437:
 15583  00307A  2EE8               	decfsz	wreg,f,c
 15584  00307C  D7FE               	bra	u16437
 15585  00307E  2E30               	decfsz	??_sdc_disk_read& (0+255),f,c
 15586  003080  D7FC               	bra	u16437
 15587  003082  D000               	nop2	
 15588                           
 15589                           ;diskio.c: 457: LATBbits.LATB4 = 0;
 15590  003084  988A               	bcf	3978,4,c	;volatile
 15591                           
 15592                           ;diskio.c: 458: LATBbits.LATB7 = 1;
 15593  003086  8E8A               	bsf	3978,7,c	;volatile
 15594                           
 15595                           ;diskio.c: 460: dummy_clocks(8);
 15596  003088  0E08               	movlw	8
 15597  00308A  ECBE  F026         	call	_dummy_clocks
 15598                           
 15599                           ;diskio.c: 461: command(0X52,start_add,0X00);
 15600  00308E  C06F  F018         	movff	sdc_disk_read@start_add,command@arg
 15601  003092  C070  F019         	movff	sdc_disk_read@start_add+1,command@arg+1
 15602  003096  C071  F01A         	movff	sdc_disk_read@start_add+2,command@arg+2
 15603  00309A  C072  F01B         	movff	sdc_disk_read@start_add+3,command@arg+3
 15604  00309E  0E00               	movlw	0
 15605  0030A0  6E1C               	movwf	command@CRC,c
 15606  0030A2  0E52               	movlw	82
 15607  0030A4  EC18  F027         	call	_command
 15608                           
 15609                           ;diskio.c: 462: LATBbits.LATB4 = 1;
 15610  0030A8  888A               	bsf	3978,4,c	;volatile
 15611                           
 15612                           ;diskio.c: 465: proceed();
 15613  0030AA  EC28  F028         	call	_proceed	;wreg free
 15614  0030AE                     l10385:
 15615                           
 15616                           ;diskio.c: 467: {
 15617                           ;diskio.c: 468: buff = response();
 15618  0030AE  EC3B  F028         	call	_response	;wreg free
 15619  0030B2  0100               	movlb	0	; () banked
 15620  0030B4  6F77               	movwf	sdc_disk_read@buff& (0+255),b
 15621                           
 15622                           ; BSR set to: 0
 15623                           ;diskio.c: 469: if(buff != 0x00)
 15624  0030B6  0100               	movlb	0	; () banked
 15625  0030B8  5177               	movf	sdc_disk_read@buff& (0+255),w,b
 15626  0030BA  0100               	movlb	0	; () banked
 15627  0030BC  B4D8               	btfsc	status,2,c
 15628  0030BE  D015               	goto	l10397
 15629                           
 15630                           ; BSR set to: 0
 15631                           ;diskio.c: 470: {
 15632                           ;diskio.c: 471: posicao_cursor_lcd(1,0);
 15633  0030C0  0E00               	movlw	0
 15634  0030C2  6E19               	movwf	posicao_cursor_lcd@coluna,c
 15635  0030C4  0E01               	movlw	1
 15636  0030C6  EC8A  F024         	call	_posicao_cursor_lcd
 15637                           
 15638                           ;diskio.c: 472: escreve_frase_ram_lcd("buffer leit.   ");
 15639  0030CA  0EEF               	movlw	low STR_14
 15640  0030CC  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 15641  0030CE  0E61               	movlw	high STR_14
 15642  0030D0  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 15643  0030D2  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
 15644                           
 15645                           ;diskio.c: 473: posicao_cursor_lcd(1,13);
 15646  0030D6  0E0D               	movlw	13
 15647  0030D8  6E19               	movwf	posicao_cursor_lcd@coluna,c
 15648  0030DA  0E01               	movlw	1
 15649  0030DC  EC8A  F024         	call	_posicao_cursor_lcd
 15650                           
 15651                           ;diskio.c: 474: escreve_inteiro_lcd(buff);
 15652  0030E0  C077  F02E         	movff	sdc_disk_read@buff,escreve_inteiro_lcd@valor
 15653  0030E4  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 15654  0030E6  ECDD  F026         	call	_escreve_inteiro_lcd	;wreg free
 15655  0030EA                     l10397:
 15656                           
 15657                           ;diskio.c: 481: }
 15658                           ;diskio.c: 482: }while(buff!=0X00);
 15659  0030EA  0100               	movlb	0	; () banked
 15660  0030EC  5177               	movf	sdc_disk_read@buff& (0+255),w,b
 15661  0030EE  0100               	movlb	0	; () banked
 15662  0030F0  A4D8               	btfss	status,2,c
 15663  0030F2  D7DD               	goto	l10385
 15664                           
 15665                           ; BSR set to: 0
 15666                           ;diskio.c: 485: proceed();
 15667                           
 15668                           ; BSR set to: 0
 15669  0030F4  EC28  F028         	call	_proceed	;wreg free
 15670  0030F8                     l244:
 15671                           
 15672                           ;diskio.c: 488: {
 15673                           ;diskio.c: 489: buff = response();
 15674  0030F8  EC3B  F028         	call	_response	;wreg free
 15675  0030FC  0100               	movlb	0	; () banked
 15676  0030FE  6F77               	movwf	sdc_disk_read@buff& (0+255),b
 15677                           
 15678                           ;diskio.c: 490: posicao_cursor_lcd(2,13);
 15679  003100  0E0D               	movlw	13
 15680  003102  6E19               	movwf	posicao_cursor_lcd@coluna,c
 15681  003104  0E02               	movlw	2
 15682  003106  EC8A  F024         	call	_posicao_cursor_lcd
 15683                           
 15684                           ;diskio.c: 491: escreve_inteiro_lcd(buff);
 15685  00310A  C077  F02E         	movff	sdc_disk_read@buff,escreve_inteiro_lcd@valor
 15686  00310E  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 15687  003110  ECDD  F026         	call	_escreve_inteiro_lcd	;wreg free
 15688                           
 15689                           ;diskio.c: 492: if(buff != 0xFE)
 15690  003114  0EFE               	movlw	254
 15691  003116  0100               	movlb	0	; () banked
 15692  003118  1977               	xorwf	sdc_disk_read@buff& (0+255),w,b
 15693  00311A  B4D8               	btfsc	status,2,c
 15694  00311C  D015               	goto	l10413
 15695                           
 15696                           ; BSR set to: 0
 15697                           ;diskio.c: 493: {
 15698                           ;diskio.c: 494: posicao_cursor_lcd(2,0);
 15699  00311E  0E00               	movlw	0
 15700  003120  6E19               	movwf	posicao_cursor_lcd@coluna,c
 15701  003122  0E02               	movlw	2
 15702  003124  EC8A  F024         	call	_posicao_cursor_lcd
 15703                           
 15704                           ;diskio.c: 495: escreve_frase_ram_lcd("Aguard 0XFE     ");
 15705  003128  0EAD               	movlw	low STR_15
 15706  00312A  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 15707  00312C  0E61               	movlw	high STR_15
 15708  00312E  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 15709  003130  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
 15710                           
 15711                           ;diskio.c: 496: posicao_cursor_lcd(2,13);
 15712  003134  0E0D               	movlw	13
 15713  003136  6E19               	movwf	posicao_cursor_lcd@coluna,c
 15714  003138  0E02               	movlw	2
 15715  00313A  EC8A  F024         	call	_posicao_cursor_lcd
 15716                           
 15717                           ;diskio.c: 497: escreve_inteiro_lcd(buff);
 15718  00313E  C077  F02E         	movff	sdc_disk_read@buff,escreve_inteiro_lcd@valor
 15719  003142  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 15720  003144  ECDD  F026         	call	_escreve_inteiro_lcd	;wreg free
 15721  003148                     l10413:
 15722                           
 15723                           ;diskio.c: 505: }
 15724                           ;diskio.c: 509: }while(buff!=0xFE);
 15725  003148  0EFE               	movlw	254
 15726  00314A  0100               	movlb	0	; () banked
 15727  00314C  1977               	xorwf	sdc_disk_read@buff& (0+255),w,b
 15728  00314E  A4D8               	btfss	status,2,c
 15729  003150  D7D3               	goto	l244
 15730                           
 15731                           ; BSR set to: 0
 15732                           ;diskio.c: 510: length = 0;
 15733                           
 15734                           ; BSR set to: 0
 15735  003152  0E00               	movlw	0
 15736  003154  0100               	movlb	0	; () banked
 15737  003156  6F76               	movwf	(sdc_disk_read@length+1)& (0+255),b
 15738  003158  0E00               	movlw	0
 15739  00315A  6F75               	movwf	sdc_disk_read@length& (0+255),b
 15740                           
 15741                           ; BSR set to: 0
 15742                           ;diskio.c: 513: _delay((unsigned long)((200)*(48000000/4000.0)));
 15743  00315C  0E0D               	movlw	13
 15744  00315E  6E31               	movwf	(??_sdc_disk_read+1)& (0+255),c
 15745  003160  0E2D               	movlw	45
 15746  003162  6E30               	movwf	??_sdc_disk_read& (0+255),c
 15747  003164  0ED8               	movlw	216
 15748  003166                     u16447:
 15749  003166  2EE8               	decfsz	wreg,f,c
 15750  003168  D7FE               	bra	u16447
 15751  00316A  2E30               	decfsz	??_sdc_disk_read& (0+255),f,c
 15752  00316C  D7FC               	bra	u16447
 15753  00316E  2E31               	decfsz	(??_sdc_disk_read+1)& (0+255),f,c
 15754  003170  D7FA               	bra	u16447
 15755                           
 15756                           ;diskio.c: 514: while (length < 512)
 15757  003172  D010               	goto	l10423
 15758  003174                     l10419:
 15759                           
 15760                           ;diskio.c: 515: {
 15761                           ;diskio.c: 516: p_buff[length] = response();
 15762  003174  0100               	movlb	0	; () banked
 15763  003176  5175               	movf	sdc_disk_read@length& (0+255),w,b
 15764  003178  0100               	movlb	0	; () banked
 15765  00317A  2567               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 15766  00317C  6ED9               	movwf	fsr2l,c
 15767  00317E  0100               	movlb	0	; () banked
 15768  003180  5176               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 15769  003182  0100               	movlb	0	; () banked
 15770  003184  2168               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 15771  003186  6EDA               	movwf	fsr2h,c
 15772  003188  EC3B  F028         	call	_response	;wreg free
 15773  00318C  6EDF               	movwf	indf2,c
 15774                           
 15775                           ;diskio.c: 524: length++;
 15776  00318E  0100               	movlb	0	; () banked
 15777  003190  4B75               	infsnz	sdc_disk_read@length& (0+255),f,b
 15778  003192  2B76               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 15779  003194                     l10423:
 15780  003194  0100               	movlb	0	; () banked
 15781  003196  BF76               	btfsc	(sdc_disk_read@length+1)& (0+255),7,b
 15782  003198  D7ED               	goto	l10419
 15783  00319A  0E02               	movlw	2
 15784  00319C  0100               	movlb	0	; () banked
 15785  00319E  5D76               	subwf	(sdc_disk_read@length+1)& (0+255),w,b
 15786  0031A0  A0D8               	btfss	status,0,c
 15787  0031A2  D7E8               	goto	l10419
 15788                           
 15789                           ; BSR set to: 0
 15790                           ;diskio.c: 525: }
 15791                           ;diskio.c: 530: LATBbits.LATB4 = 0;
 15792  0031A4  988A               	bcf	3978,4,c	;volatile
 15793                           
 15794                           ; BSR set to: 0
 15795                           ;diskio.c: 531: length = 0;
 15796  0031A6  0E00               	movlw	0
 15797  0031A8  0100               	movlb	0	; () banked
 15798  0031AA  6F76               	movwf	(sdc_disk_read@length+1)& (0+255),b
 15799  0031AC  0E00               	movlw	0
 15800  0031AE  6F75               	movwf	sdc_disk_read@length& (0+255),b
 15801                           
 15802                           ; BSR set to: 0
 15803                           ;diskio.c: 532: dummy_clocks(8);
 15804  0031B0  0E08               	movlw	8
 15805  0031B2  ECBE  F026         	call	_dummy_clocks
 15806                           
 15807                           ;diskio.c: 533: command(0X4C,0X00000000,0X00);
 15808  0031B6  0E00               	movlw	0
 15809  0031B8  6E18               	movwf	command@arg,c
 15810  0031BA  0E00               	movlw	0
 15811  0031BC  6E19               	movwf	command@arg+1,c
 15812  0031BE  0E00               	movlw	0
 15813  0031C0  6E1A               	movwf	command@arg+2,c
 15814  0031C2  0E00               	movlw	0
 15815  0031C4  6E1B               	movwf	command@arg+3,c
 15816  0031C6  0E00               	movlw	0
 15817  0031C8  6E1C               	movwf	command@CRC,c
 15818  0031CA  0E4C               	movlw	76
 15819  0031CC  EC18  F027         	call	_command
 15820                           
 15821                           ;diskio.c: 534: LATBbits.LATB4 = 1;
 15822  0031D0  888A               	bsf	3978,4,c	;volatile
 15823                           
 15824                           ;diskio.c: 536: proceed();
 15825  0031D2  EC28  F028         	call	_proceed	;wreg free
 15826  0031D6                     l10435:
 15827                           
 15828                           ;diskio.c: 538: buff = response();
 15829  0031D6  EC3B  F028         	call	_response	;wreg free
 15830  0031DA  0100               	movlb	0	; () banked
 15831  0031DC  6F77               	movwf	sdc_disk_read@buff& (0+255),b
 15832                           
 15833                           ; BSR set to: 0
 15834                           ;diskio.c: 539: posicao_cursor_lcd(1,0);
 15835  0031DE  0E00               	movlw	0
 15836  0031E0  6E19               	movwf	posicao_cursor_lcd@coluna,c
 15837  0031E2  0E01               	movlw	1
 15838  0031E4  EC8A  F024         	call	_posicao_cursor_lcd
 15839                           
 15840                           ;diskio.c: 540: escreve_frase_ram_lcd("buffer 0xFF       ");
 15841  0031E8  0E77               	movlw	low STR_16
 15842  0031EA  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 15843  0031EC  0E61               	movlw	high STR_16
 15844  0031EE  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 15845  0031F0  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
 15846                           
 15847                           ;diskio.c: 541: posicao_cursor_lcd(1,13);
 15848  0031F4  0E0D               	movlw	13
 15849  0031F6  6E19               	movwf	posicao_cursor_lcd@coluna,c
 15850  0031F8  0E01               	movlw	1
 15851  0031FA  EC8A  F024         	call	_posicao_cursor_lcd
 15852                           
 15853                           ;diskio.c: 542: escreve_inteiro_lcd(buff);
 15854  0031FE  C077  F02E         	movff	sdc_disk_read@buff,escreve_inteiro_lcd@valor
 15855  003202  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 15856  003204  ECDD  F026         	call	_escreve_inteiro_lcd	;wreg free
 15857                           
 15858                           ;diskio.c: 545: }while(buff!=0xFF);
 15859  003208  0100               	movlb	0	; () banked
 15860  00320A  2977               	incf	sdc_disk_read@buff& (0+255),w,b
 15861  00320C  A4D8               	btfss	status,2,c
 15862  00320E  D7E3               	goto	l10435
 15863                           
 15864                           ; BSR set to: 0
 15865                           ;diskio.c: 547: _delay((unsigned long)((1000)*(48000000/4000.0)));
 15866                           
 15867                           ; BSR set to: 0
 15868  003210  0E3D               	movlw	61
 15869  003212  6E31               	movwf	(??_sdc_disk_read+1)& (0+255),c
 15870  003214  0EE1               	movlw	225
 15871  003216  6E30               	movwf	??_sdc_disk_read& (0+255),c
 15872  003218  0E40               	movlw	64
 15873  00321A                     u16457:
 15874  00321A  2EE8               	decfsz	wreg,f,c
 15875  00321C  D7FE               	bra	u16457
 15876  00321E  2E30               	decfsz	??_sdc_disk_read& (0+255),f,c
 15877  003220  D7FC               	bra	u16457
 15878  003222  2E31               	decfsz	(??_sdc_disk_read+1)& (0+255),f,c
 15879  003224  D7FA               	bra	u16457
 15880                           
 15881                           ;diskio.c: 548: length = 0;
 15882  003226  0E00               	movlw	0
 15883  003228  0100               	movlb	0	; () banked
 15884  00322A  6F76               	movwf	(sdc_disk_read@length+1)& (0+255),b
 15885  00322C  0E00               	movlw	0
 15886  00322E  6F75               	movwf	sdc_disk_read@length& (0+255),b
 15887                           
 15888                           ;diskio.c: 549: while(p_buff[length]!='\0')
 15889  003230  D024               	goto	l10461
 15890  003232                     l10451:
 15891                           
 15892                           ; BSR set to: 0
 15893                           ;diskio.c: 550: {
 15894                           ;diskio.c: 552: posicao_cursor_lcd(1,0);
 15895  003232  0E00               	movlw	0
 15896  003234  6E19               	movwf	posicao_cursor_lcd@coluna,c
 15897  003236  0E01               	movlw	1
 15898  003238  EC8A  F024         	call	_posicao_cursor_lcd
 15899                           
 15900                           ;diskio.c: 553: escreve_frase_ram_lcd("\0 ->         ");
 15901  00323C  0E0F               	movlw	low STR_17
 15902  00323E  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 15903  003240  0E62               	movlw	high STR_17
 15904  003242  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 15905  003244  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
 15906                           
 15907                           ;diskio.c: 554: posicao_cursor_lcd(1,14);
 15908  003248  0E0E               	movlw	14
 15909  00324A  6E19               	movwf	posicao_cursor_lcd@coluna,c
 15910  00324C  0E01               	movlw	1
 15911  00324E  EC8A  F024         	call	_posicao_cursor_lcd
 15912                           
 15913                           ;diskio.c: 555: escreve_inteiro_lcd(p_buff[length]);
 15914  003252  0100               	movlb	0	; () banked
 15915  003254  5175               	movf	sdc_disk_read@length& (0+255),w,b
 15916  003256  0100               	movlb	0	; () banked
 15917  003258  2567               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 15918  00325A  6ED9               	movwf	fsr2l,c
 15919  00325C  0100               	movlb	0	; () banked
 15920  00325E  5176               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 15921  003260  0100               	movlb	0	; () banked
 15922  003262  2168               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 15923  003264  6EDA               	movwf	fsr2h,c
 15924  003266  50DF               	movf	indf2,w,c
 15925  003268  6E30               	movwf	??_sdc_disk_read& (0+255),c
 15926  00326A  5030               	movf	??_sdc_disk_read,w,c
 15927  00326C  6E2E               	movwf	escreve_inteiro_lcd@valor,c
 15928  00326E  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 15929  003270  ECDD  F026         	call	_escreve_inteiro_lcd	;wreg free
 15930                           
 15931                           ;diskio.c: 558: length++;
 15932  003274  0100               	movlb	0	; () banked
 15933  003276  4B75               	infsnz	sdc_disk_read@length& (0+255),f,b
 15934  003278  2B76               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 15935  00327A                     l10461:
 15936                           
 15937                           ; BSR set to: 0
 15938  00327A  0100               	movlb	0	; () banked
 15939  00327C  5175               	movf	sdc_disk_read@length& (0+255),w,b
 15940  00327E  0100               	movlb	0	; () banked
 15941  003280  2567               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 15942  003282  6ED9               	movwf	fsr2l,c
 15943  003284  0100               	movlb	0	; () banked
 15944  003286  5176               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 15945  003288  0100               	movlb	0	; () banked
 15946  00328A  2168               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 15947  00328C  6EDA               	movwf	fsr2h,c
 15948  00328E  50DF               	movf	indf2,w,c
 15949  003290  A4D8               	btfss	status,2,c
 15950  003292  D7CF               	goto	l10451
 15951                           
 15952                           ; BSR set to: 0
 15953                           ;diskio.c: 559: }
 15954                           ;diskio.c: 560: *p_buff = length;
 15955                           
 15956                           ; BSR set to: 0
 15957  003294  C067  FFD9         	movff	sdc_disk_read@p_buff,fsr2l
 15958  003298  C068  FFDA         	movff	sdc_disk_read@p_buff+1,fsr2h
 15959  00329C  C075  FFDF         	movff	sdc_disk_read@length,indf2
 15960                           
 15961                           ; BSR set to: 0
 15962                           ;diskio.c: 563: return RES_OK;
 15963  0032A0  0E00               	movlw	0
 15964                           
 15965                           ; BSR set to: 0
 15966  0032A2  0012               	return	
 15967  0032A4                     l10471:
 15968                           
 15969                           ; BSR set to: 0
 15970                           ;diskio.c: 565: else
 15971                           ;diskio.c: 566: {
 15972                           ;diskio.c: 568: return RES_OK;
 15973  0032A4  0E00               	movlw	0
 15974                           
 15975                           ; BSR set to: 0
 15976  0032A6  0012               	return	
 15977                           
 15978                           ; BSR set to: 0
 15979                           ;diskio.c: 569: }
 15980                           ;diskio.c: 570: _delay((unsigned long)((2000)*(48000000/4000.0)));
 15981                           
 15982                           ; BSR set to: 0
 15983  0032A8  0E7A               	movlw	122
 15984  0032AA  6E31               	movwf	(??_sdc_disk_read+1)& (0+255),c
 15985  0032AC  0EC1               	movlw	193
 15986  0032AE  6E30               	movwf	??_sdc_disk_read& (0+255),c
 15987  0032B0  0E82               	movlw	130
 15988  0032B2                     u16467:
 15989  0032B2  2EE8               	decfsz	wreg,f,c
 15990  0032B4  D7FE               	bra	u16467
 15991  0032B6  2E30               	decfsz	??_sdc_disk_read& (0+255),f,c
 15992  0032B8  D7FC               	bra	u16467
 15993  0032BA  2E31               	decfsz	(??_sdc_disk_read+1)& (0+255),f,c
 15994  0032BC  D7FA               	bra	u16467
 15995  0032BE  0012               	return		;funcret
 15996  0032C0                     __end_of_sdc_disk_read:
 15997                           	opt stack 0
 15998                           tosu	equ	0xFFF
 15999                           tosh	equ	0xFFE
 16000                           tosl	equ	0xFFD
 16001                           pclath	equ	0xFFA
 16002                           tblptru	equ	0xFF8
 16003                           tblptrh	equ	0xFF7
 16004                           tblptrl	equ	0xFF6
 16005                           tablat	equ	0xFF5
 16006                           prodh	equ	0xFF4
 16007                           prodl	equ	0xFF3
 16008                           intcon	equ	0xFF2
 16009                           intcon2	equ	0xFF1
 16010                           intcon3	equ	0xFF0
 16011                           indf0	equ	0xFEF
 16012                           postinc0	equ	0xFEE
 16013                           fsr0h	equ	0xFEA
 16014                           fsr0l	equ	0xFE9
 16015                           wreg	equ	0xFE8
 16016                           indf1	equ	0xFE7
 16017                           postinc1	equ	0xFE6
 16018                           postdec1	equ	0xFE5
 16019                           fsr1h	equ	0xFE2
 16020                           fsr1l	equ	0xFE1
 16021                           indf2	equ	0xFDF
 16022                           postinc2	equ	0xFDE
 16023                           postdec2	equ	0xFDD
 16024                           plusw2	equ	0xFDB
 16025                           fsr2h	equ	0xFDA
 16026                           fsr2l	equ	0xFD9
 16027                           status	equ	0xFD8
 16028                           
 16029 ;; *************** function _response *****************
 16030 ;; Defined at:
 16031 ;;		line 60 in file "bibliotecas/SDCard.c"
 16032 ;; Parameters:    Size  Location     Type
 16033 ;;		None
 16034 ;; Auto vars:     Size  Location     Type
 16035 ;;  buff            1   24[COMRAM] unsigned char 
 16036 ;; Return value:  Size  Location     Type
 16037 ;;                  1    wreg      unsigned char 
 16038 ;; Registers used:
 16039 ;;		wreg, status,2, status,0, cstack
 16040 ;; Tracked objects:
 16041 ;;		On entry : 0/0
 16042 ;;		On exit  : 0/0
 16043 ;;		Unchanged: 0/0
 16044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16045 ;;      Params:         0       0       0       0       0       0       0       0       0
 16046 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16047 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16048 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16049 ;;Total ram usage:        1 bytes
 16050 ;; Hardware stack levels used:    1
 16051 ;; Hardware stack levels required when called:    3
 16052 ;; This function calls:
 16053 ;;		_recebe_dado_SPI
 16054 ;; This function is called by:
 16055 ;;		_sdc_disk_initialize
 16056 ;;		_sdc_disk_read
 16057 ;;		_sdc_disk_write
 16058 ;; This function uses a non-reentrant model
 16059 ;;
 16060                           
 16061                           	psect	text48
 16062  005076                     __ptext48:
 16063                           	opt stack 0
 16064  005076                     _response:
 16065                           	opt stack 18
 16066                           
 16067                           ;SDCard.c: 62: unsigned char buff;
 16068                           ;SDCard.c: 63: LATBbits.LATB4 = 0;
 16069                           
 16070                           ;incstack = 0
 16071  005076  988A               	bcf	3978,4,c	;volatile
 16072                           
 16073                           ;SDCard.c: 64: buff= recebe_dado_SPI();
 16074  005078  ECF7  F024         	call	_recebe_dado_SPI	;wreg free
 16075  00507C  6E19               	movwf	response@buff,c
 16076                           
 16077                           ;SDCard.c: 65: return buff;
 16078  00507E  5019               	movf	response@buff,w,c
 16079  005080  0012               	return	
 16080  005082                     __end_of_response:
 16081                           	opt stack 0
 16082                           tosu	equ	0xFFF
 16083                           tosh	equ	0xFFE
 16084                           tosl	equ	0xFFD
 16085                           pclath	equ	0xFFA
 16086                           tblptru	equ	0xFF8
 16087                           tblptrh	equ	0xFF7
 16088                           tblptrl	equ	0xFF6
 16089                           tablat	equ	0xFF5
 16090                           prodh	equ	0xFF4
 16091                           prodl	equ	0xFF3
 16092                           intcon	equ	0xFF2
 16093                           intcon2	equ	0xFF1
 16094                           intcon3	equ	0xFF0
 16095                           indf0	equ	0xFEF
 16096                           postinc0	equ	0xFEE
 16097                           fsr0h	equ	0xFEA
 16098                           fsr0l	equ	0xFE9
 16099                           wreg	equ	0xFE8
 16100                           indf1	equ	0xFE7
 16101                           postinc1	equ	0xFE6
 16102                           postdec1	equ	0xFE5
 16103                           fsr1h	equ	0xFE2
 16104                           fsr1l	equ	0xFE1
 16105                           indf2	equ	0xFDF
 16106                           postinc2	equ	0xFDE
 16107                           postdec2	equ	0xFDD
 16108                           plusw2	equ	0xFDB
 16109                           fsr2h	equ	0xFDA
 16110                           fsr2l	equ	0xFD9
 16111                           status	equ	0xFD8
 16112                           
 16113 ;; *************** function _recebe_dado_SPI *****************
 16114 ;; Defined at:
 16115 ;;		line 143 in file "bibliotecas/SHRC.c"
 16116 ;; Parameters:    Size  Location     Type
 16117 ;;		None
 16118 ;; Auto vars:     Size  Location     Type
 16119 ;;  contador        1   23[COMRAM] unsigned char 
 16120 ;; Return value:  Size  Location     Type
 16121 ;;                  1    wreg      unsigned char 
 16122 ;; Registers used:
 16123 ;;		wreg, status,2, status,0
 16124 ;; Tracked objects:
 16125 ;;		On entry : 0/0
 16126 ;;		On exit  : 0/0
 16127 ;;		Unchanged: 0/0
 16128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16129 ;;      Params:         0       0       0       0       0       0       0       0       0
 16130 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16131 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16132 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16133 ;;Total ram usage:        3 bytes
 16134 ;; Hardware stack levels used:    1
 16135 ;; Hardware stack levels required when called:    2
 16136 ;; This function calls:
 16137 ;;		Nothing
 16138 ;; This function is called by:
 16139 ;;		_response
 16140 ;; This function uses a non-reentrant model
 16141 ;;
 16142                           
 16143                           	psect	text49
 16144  0049EE                     __ptext49:
 16145                           	opt stack 0
 16146  0049EE                     _recebe_dado_SPI:
 16147                           	opt stack 18
 16148                           
 16149                           ;SHRC.c: 145: dado = 0;
 16150                           
 16151                           ;incstack = 0
 16152  0049EE  0E00               	movlw	0
 16153  0049F0  6E43               	movwf	_dado,c
 16154                           
 16155                           ;SHRC.c: 146: unsigned char contador=0;
 16156  0049F2  0E00               	movlw	0
 16157  0049F4  6E18               	movwf	recebe_dado_SPI@contador,c
 16158                           
 16159                           ;SHRC.c: 148: (INTCONbits.GIE = 0);
 16160  0049F6  9EF2               	bcf	intcon,7,c	;volatile
 16161                           
 16162                           ;SHRC.c: 151: while(contador<=7)
 16163  0049F8  D022               	goto	l10199
 16164  0049FA                     l10183:
 16165                           
 16166                           ;SHRC.c: 152: {
 16167                           ;SHRC.c: 153: dado |= (PORTBbits.RB5 << (7-contador));
 16168  0049FA  5018               	movf	recebe_dado_SPI@contador,w,c
 16169  0049FC  0800               	sublw	0
 16170  0049FE  6E16               	movwf	??_recebe_dado_SPI& (0+255),c
 16171  004A00  0E07               	movlw	7
 16172  004A02  2616               	addwf	??_recebe_dado_SPI,f,c
 16173  004A04  AA81               	btfss	3969,5,c	;volatile
 16174  004A06  D003               	goto	u11430
 16175  004A08  6A17               	clrf	(??_recebe_dado_SPI+1)& (0+255),c
 16176  004A0A  2A17               	incf	(??_recebe_dado_SPI+1)& (0+255),f,c
 16177  004A0C  D001               	goto	u11438
 16178  004A0E                     u11430:
 16179  004A0E  6A17               	clrf	(??_recebe_dado_SPI+1)& (0+255),c
 16180  004A10                     u11438:
 16181  004A10  2A16               	incf	??_recebe_dado_SPI,f,c
 16182  004A12  D002               	goto	u11444
 16183  004A14                     u11445:
 16184  004A14  90D8               	bcf	status,0,c
 16185  004A16  3617               	rlcf	??_recebe_dado_SPI+1,f,c
 16186  004A18                     u11444:
 16187  004A18  2E16               	decfsz	??_recebe_dado_SPI,f,c
 16188  004A1A  D7FC               	goto	u11445
 16189  004A1C  5017               	movf	??_recebe_dado_SPI+1,w,c
 16190  004A1E  1243               	iorwf	_dado,f,c
 16191                           
 16192                           ;SHRC.c: 155: _delay((unsigned long)((1.25)*(48000000/4000000.0)));
 16193  004A20  0E05               	movlw	5
 16194  004A22                     u16477:
 16195  004A22  2EE8               	decfsz	wreg,f,c
 16196  004A24  D7FE               	bra	u16477
 16197                           
 16198                           ;SHRC.c: 156: LATBbits.LATB6 = 1;
 16199  004A26  8C8A               	bsf	3978,6,c	;volatile
 16200                           
 16201                           ;SHRC.c: 157: _delay((unsigned long)((1.25)*(48000000/4000000.0)));
 16202  004A28  0E05               	movlw	5
 16203  004A2A                     u16487:
 16204  004A2A  2EE8               	decfsz	wreg,f,c
 16205  004A2C  D7FE               	bra	u16487
 16206                           
 16207                           ;SHRC.c: 158: _delay((unsigned long)((1.25)*(48000000/4000000.0)));
 16208  004A2E  0E05               	movlw	5
 16209  004A30                     u16497:
 16210  004A30  2EE8               	decfsz	wreg,f,c
 16211  004A32  D7FE               	bra	u16497
 16212                           
 16213                           ;SHRC.c: 159: LATBbits.LATB6 = 0;
 16214  004A34  9C8A               	bcf	3978,6,c	;volatile
 16215                           
 16216                           ;SHRC.c: 160: _delay((unsigned long)((1.25)*(48000000/4000000.0)));
 16217  004A36  0E05               	movlw	5
 16218  004A38                     u16507:
 16219  004A38  2EE8               	decfsz	wreg,f,c
 16220  004A3A  D7FE               	bra	u16507
 16221                           
 16222                           ;SHRC.c: 161: contador++;
 16223  004A3C  2A18               	incf	recebe_dado_SPI@contador,f,c
 16224  004A3E                     l10199:
 16225  004A3E  0E07               	movlw	7
 16226  004A40  6418               	cpfsgt	recebe_dado_SPI@contador,c
 16227  004A42  D7DB               	goto	l10183
 16228                           
 16229                           ;SHRC.c: 162: }
 16230                           ;SHRC.c: 163: (INTCONbits.GIE = 1);
 16231  004A44  8EF2               	bsf	intcon,7,c	;volatile
 16232                           
 16233                           ;SHRC.c: 164: return dado;
 16234  004A46  5043               	movf	_dado,w,c
 16235  004A48  0012               	return	
 16236  004A4A                     __end_of_recebe_dado_SPI:
 16237                           	opt stack 0
 16238                           tosu	equ	0xFFF
 16239                           tosh	equ	0xFFE
 16240                           tosl	equ	0xFFD
 16241                           pclath	equ	0xFFA
 16242                           tblptru	equ	0xFF8
 16243                           tblptrh	equ	0xFF7
 16244                           tblptrl	equ	0xFF6
 16245                           tablat	equ	0xFF5
 16246                           prodh	equ	0xFF4
 16247                           prodl	equ	0xFF3
 16248                           intcon	equ	0xFF2
 16249                           intcon2	equ	0xFF1
 16250                           intcon3	equ	0xFF0
 16251                           indf0	equ	0xFEF
 16252                           postinc0	equ	0xFEE
 16253                           fsr0h	equ	0xFEA
 16254                           fsr0l	equ	0xFE9
 16255                           wreg	equ	0xFE8
 16256                           indf1	equ	0xFE7
 16257                           postinc1	equ	0xFE6
 16258                           postdec1	equ	0xFE5
 16259                           fsr1h	equ	0xFE2
 16260                           fsr1l	equ	0xFE1
 16261                           indf2	equ	0xFDF
 16262                           postinc2	equ	0xFDE
 16263                           postdec2	equ	0xFDD
 16264                           plusw2	equ	0xFDB
 16265                           fsr2h	equ	0xFDA
 16266                           fsr2l	equ	0xFD9
 16267                           status	equ	0xFD8
 16268                           
 16269 ;; *************** function _proceed *****************
 16270 ;; Defined at:
 16271 ;;		line 97 in file "bibliotecas/SDCard.c"
 16272 ;; Parameters:    Size  Location     Type
 16273 ;;		None
 16274 ;; Auto vars:     Size  Location     Type
 16275 ;;		None
 16276 ;; Return value:  Size  Location     Type
 16277 ;;                  1    wreg      void 
 16278 ;; Registers used:
 16279 ;;		wreg, status,2, status,0, cstack
 16280 ;; Tracked objects:
 16281 ;;		On entry : 0/0
 16282 ;;		On exit  : 0/0
 16283 ;;		Unchanged: 0/0
 16284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16285 ;;      Params:         0       0       0       0       0       0       0       0       0
 16286 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16287 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16288 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16289 ;;Total ram usage:        0 bytes
 16290 ;; Hardware stack levels used:    1
 16291 ;; Hardware stack levels required when called:    3
 16292 ;; This function calls:
 16293 ;;		_escreve_dado_SPI
 16294 ;; This function is called by:
 16295 ;;		_sdc_disk_read
 16296 ;;		_SDCard
 16297 ;; This function uses a non-reentrant model
 16298 ;;
 16299                           
 16300                           	psect	text50
 16301  005050                     __ptext50:
 16302                           	opt stack 0
 16303  005050                     _proceed:
 16304                           	opt stack 25
 16305                           
 16306                           ;SDCard.c: 99: LATBbits.LATB4 = 0;
 16307                           
 16308                           ;incstack = 0
 16309  005050  988A               	bcf	3978,4,c	;volatile
 16310                           
 16311                           ;SDCard.c: 100: LATBbits.LATB7 = 1;
 16312  005052  8E8A               	bsf	3978,7,c	;volatile
 16313                           
 16314                           ;SDCard.c: 101: escreve_dado_SPI(0xFF);
 16315  005054  0EFF               	movlw	255
 16316  005056  EC1A  F026         	call	_escreve_dado_SPI
 16317                           
 16318                           ;SDCard.c: 102: LATBbits.LATB4 = 1;
 16319  00505A  888A               	bsf	3978,4,c	;volatile
 16320  00505C  0012               	return		;funcret
 16321  00505E                     __end_of_proceed:
 16322                           	opt stack 0
 16323                           tosu	equ	0xFFF
 16324                           tosh	equ	0xFFE
 16325                           tosl	equ	0xFFD
 16326                           pclath	equ	0xFFA
 16327                           tblptru	equ	0xFF8
 16328                           tblptrh	equ	0xFF7
 16329                           tblptrl	equ	0xFF6
 16330                           tablat	equ	0xFF5
 16331                           prodh	equ	0xFF4
 16332                           prodl	equ	0xFF3
 16333                           intcon	equ	0xFF2
 16334                           intcon2	equ	0xFF1
 16335                           intcon3	equ	0xFF0
 16336                           indf0	equ	0xFEF
 16337                           postinc0	equ	0xFEE
 16338                           fsr0h	equ	0xFEA
 16339                           fsr0l	equ	0xFE9
 16340                           wreg	equ	0xFE8
 16341                           indf1	equ	0xFE7
 16342                           postinc1	equ	0xFE6
 16343                           postdec1	equ	0xFE5
 16344                           fsr1h	equ	0xFE2
 16345                           fsr1l	equ	0xFE1
 16346                           indf2	equ	0xFDF
 16347                           postinc2	equ	0xFDE
 16348                           postdec2	equ	0xFDD
 16349                           plusw2	equ	0xFDB
 16350                           fsr2h	equ	0xFDA
 16351                           fsr2l	equ	0xFD9
 16352                           status	equ	0xFD8
 16353                           
 16354 ;; *************** function _posicao_cursor_lcd *****************
 16355 ;; Defined at:
 16356 ;;		line 271 in file "bibliotecas/display_lcd.c"
 16357 ;; Parameters:    Size  Location     Type
 16358 ;;  linha           1    wreg     unsigned char 
 16359 ;;  coluna          1   24[COMRAM] unsigned char 
 16360 ;; Auto vars:     Size  Location     Type
 16361 ;;  linha           1   25[COMRAM] unsigned char 
 16362 ;;  endereco        1   26[COMRAM] unsigned char 
 16363 ;; Return value:  Size  Location     Type
 16364 ;;                  1    wreg      void 
 16365 ;; Registers used:
 16366 ;;		wreg, status,2, status,0, cstack
 16367 ;; Tracked objects:
 16368 ;;		On entry : 0/0
 16369 ;;		On exit  : 0/0
 16370 ;;		Unchanged: 0/0
 16371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16372 ;;      Params:         1       0       0       0       0       0       0       0       0
 16373 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16374 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16375 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16376 ;;Total ram usage:        3 bytes
 16377 ;; Hardware stack levels used:    1
 16378 ;; Hardware stack levels required when called:    4
 16379 ;; This function calls:
 16380 ;;		_endereco_cursor_lcd
 16381 ;; This function is called by:
 16382 ;;		_sdc_disk_initialize
 16383 ;;		_sdc_disk_read
 16384 ;;		_sdc_disk_write
 16385 ;;		_check_fs
 16386 ;;		_auto_mount
 16387 ;;		_mensagem_inicial
 16388 ;;		_SDCard
 16389 ;;		_gps
 16390 ;; This function uses a non-reentrant model
 16391 ;;
 16392                           
 16393                           	psect	text51
 16394  004914                     __ptext51:
 16395                           	opt stack 0
 16396  004914                     _posicao_cursor_lcd:
 16397                           	opt stack 25
 16398                           
 16399                           ;incstack = 0
 16400                           ;posicao_cursor_lcd@linha stored from wreg
 16401  004914  6E1A               	movwf	posicao_cursor_lcd@linha,c
 16402                           
 16403                           ;display_lcd.c: 273: unsigned char endereco = 0x00;
 16404  004916  0E00               	movlw	0
 16405  004918  6E1B               	movwf	posicao_cursor_lcd@endereco,c
 16406                           
 16407                           ;display_lcd.c: 275: if(coluna <= 0x10U)
 16408  00491A  0E11               	movlw	17
 16409  00491C  6019               	cpfslt	posicao_cursor_lcd@coluna,c
 16410  00491E  D02F               	goto	l10277
 16411  004920  D01E               	goto	l10273
 16412  004922                     l345:
 16413                           
 16414                           ;display_lcd.c: 282: endereco = 0x00U + coluna;
 16415  004922  C019  F01B         	movff	posicao_cursor_lcd@coluna,posicao_cursor_lcd@endereco
 16416                           
 16417                           ;display_lcd.c: 283: endereco_cursor_lcd(endereco);
 16418  004926  501B               	movf	posicao_cursor_lcd@endereco,w,c
 16419  004928  ECC2  F024         	call	_endereco_cursor_lcd
 16420                           
 16421                           ;display_lcd.c: 284: break;
 16422  00492C  D026               	goto	l10275
 16423  00492E                     l10257:
 16424                           
 16425                           ;display_lcd.c: 287: endereco = 0x40U + coluna;
 16426  00492E  5019               	movf	posicao_cursor_lcd@coluna,w,c
 16427  004930  0F40               	addlw	64
 16428  004932  6E1B               	movwf	posicao_cursor_lcd@endereco,c
 16429                           
 16430                           ;display_lcd.c: 288: endereco_cursor_lcd(endereco);
 16431  004934  501B               	movf	posicao_cursor_lcd@endereco,w,c
 16432  004936  ECC2  F024         	call	_endereco_cursor_lcd
 16433                           
 16434                           ;display_lcd.c: 289: break;
 16435  00493A  D01F               	goto	l10275
 16436  00493C                     l10261:
 16437                           
 16438                           ;display_lcd.c: 292: endereco = 0x14U + coluna;
 16439  00493C  5019               	movf	posicao_cursor_lcd@coluna,w,c
 16440  00493E  0F14               	addlw	20
 16441  004940  6E1B               	movwf	posicao_cursor_lcd@endereco,c
 16442                           
 16443                           ;display_lcd.c: 293: endereco_cursor_lcd(endereco);
 16444  004942  501B               	movf	posicao_cursor_lcd@endereco,w,c
 16445  004944  ECC2  F024         	call	_endereco_cursor_lcd
 16446                           
 16447                           ;display_lcd.c: 294: break;
 16448  004948  D018               	goto	l10275
 16449  00494A                     l10265:
 16450                           
 16451                           ;display_lcd.c: 297: endereco = 0x54U + coluna;
 16452  00494A  5019               	movf	posicao_cursor_lcd@coluna,w,c
 16453  00494C  0F54               	addlw	84
 16454  00494E  6E1B               	movwf	posicao_cursor_lcd@endereco,c
 16455                           
 16456                           ;display_lcd.c: 298: endereco_cursor_lcd(endereco);
 16457  004950  501B               	movf	posicao_cursor_lcd@endereco,w,c
 16458  004952  ECC2  F024         	call	_endereco_cursor_lcd
 16459                           
 16460                           ;display_lcd.c: 299: break;
 16461  004956  D011               	goto	l10275
 16462  004958                     l10269:
 16463                           
 16464                           ;display_lcd.c: 302: endereco = 0x00U;
 16465  004958  0E00               	movlw	0
 16466  00495A  6E1B               	movwf	posicao_cursor_lcd@endereco,c
 16467                           
 16468                           ;display_lcd.c: 304: }
 16469                           
 16470                           ;display_lcd.c: 303: break;
 16471  00495C  D00E               	goto	l10275
 16472  00495E                     l10273:
 16473  00495E  501A               	movf	posicao_cursor_lcd@linha,w,c
 16474                           
 16475                           ; Switch size 1, requested type "space"
 16476                           ; Number of cases is 4, Range of values is 1 to 4
 16477                           ; switch strategies available:
 16478                           ; Name         Instructions Cycles
 16479                           ; simple_byte           13     7 (average)
 16480                           ;	Chosen strategy is simple_byte
 16481  004960  0A01               	xorlw	1	; case 1
 16482  004962  B4D8               	btfsc	status,2,c
 16483  004964  D7DE               	goto	l345
 16484  004966  0A03               	xorlw	3	; case 2
 16485  004968  B4D8               	btfsc	status,2,c
 16486  00496A  D7E1               	goto	l10257
 16487  00496C  0A01               	xorlw	1	; case 3
 16488  00496E  B4D8               	btfsc	status,2,c
 16489  004970  D7E5               	goto	l10261
 16490  004972  0A07               	xorlw	7	; case 4
 16491  004974  B4D8               	btfsc	status,2,c
 16492  004976  D7E9               	goto	l10265
 16493  004978  D7EF               	goto	l10269
 16494  00497A                     l10275:
 16495                           
 16496                           ;display_lcd.c: 306: coluna++;
 16497  00497A  2A19               	incf	posicao_cursor_lcd@coluna,f,c
 16498                           
 16499                           ;display_lcd.c: 307: }
 16500  00497C  0012               	return	
 16501  00497E                     l10277:
 16502                           
 16503                           ;display_lcd.c: 308: else
 16504                           ;display_lcd.c: 309: {
 16505                           ;display_lcd.c: 310: endereco = 0x00U;
 16506  00497E  0E00               	movlw	0
 16507  004980  6E1B               	movwf	posicao_cursor_lcd@endereco,c
 16508  004982  0012               	return	
 16509  004984                     __end_of_posicao_cursor_lcd:
 16510                           	opt stack 0
 16511                           tosu	equ	0xFFF
 16512                           tosh	equ	0xFFE
 16513                           tosl	equ	0xFFD
 16514                           pclath	equ	0xFFA
 16515                           tblptru	equ	0xFF8
 16516                           tblptrh	equ	0xFF7
 16517                           tblptrl	equ	0xFF6
 16518                           tablat	equ	0xFF5
 16519                           prodh	equ	0xFF4
 16520                           prodl	equ	0xFF3
 16521                           intcon	equ	0xFF2
 16522                           intcon2	equ	0xFF1
 16523                           intcon3	equ	0xFF0
 16524                           indf0	equ	0xFEF
 16525                           postinc0	equ	0xFEE
 16526                           fsr0h	equ	0xFEA
 16527                           fsr0l	equ	0xFE9
 16528                           wreg	equ	0xFE8
 16529                           indf1	equ	0xFE7
 16530                           postinc1	equ	0xFE6
 16531                           postdec1	equ	0xFE5
 16532                           fsr1h	equ	0xFE2
 16533                           fsr1l	equ	0xFE1
 16534                           indf2	equ	0xFDF
 16535                           postinc2	equ	0xFDE
 16536                           postdec2	equ	0xFDD
 16537                           plusw2	equ	0xFDB
 16538                           fsr2h	equ	0xFDA
 16539                           fsr2l	equ	0xFD9
 16540                           status	equ	0xFD8
 16541                           
 16542 ;; *************** function _endereco_cursor_lcd *****************
 16543 ;; Defined at:
 16544 ;;		line 218 in file "bibliotecas/display_lcd.c"
 16545 ;; Parameters:    Size  Location     Type
 16546 ;;  endereco        1    wreg     unsigned char 
 16547 ;; Auto vars:     Size  Location     Type
 16548 ;;  endereco        1   23[COMRAM] unsigned char 
 16549 ;; Return value:  Size  Location     Type
 16550 ;;                  1    wreg      void 
 16551 ;; Registers used:
 16552 ;;		wreg, status,2, status,0, cstack
 16553 ;; Tracked objects:
 16554 ;;		On entry : 0/0
 16555 ;;		On exit  : 0/0
 16556 ;;		Unchanged: 0/0
 16557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16558 ;;      Params:         0       0       0       0       0       0       0       0       0
 16559 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16560 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16561 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16562 ;;Total ram usage:        1 bytes
 16563 ;; Hardware stack levels used:    1
 16564 ;; Hardware stack levels required when called:    3
 16565 ;; This function calls:
 16566 ;;		_delay
 16567 ;; This function is called by:
 16568 ;;		_posicao_cursor_lcd
 16569 ;;		_cria_caractere_lcd
 16570 ;; This function uses a non-reentrant model
 16571 ;;
 16572                           
 16573                           	psect	text52
 16574  004984                     __ptext52:
 16575                           	opt stack 0
 16576  004984                     _endereco_cursor_lcd:
 16577                           	opt stack 25
 16578                           
 16579                           ;incstack = 0
 16580                           ;endereco_cursor_lcd@endereco stored from wreg
 16581  004984  6E18               	movwf	endereco_cursor_lcd@endereco,c
 16582                           
 16583                           ;display_lcd.c: 221: PORTDbits.RD2 = 0;
 16584  004986  9483               	bcf	3971,2,c	;volatile
 16585                           
 16586                           ;display_lcd.c: 222: PORTDbits.RD1 = 0;
 16587  004988  9283               	bcf	3971,1,c	;volatile
 16588                           
 16589                           ;display_lcd.c: 223: PORTDbits.RD0 = 0;
 16590  00498A  9083               	bcf	3971,0,c	;volatile
 16591                           
 16592                           ;display_lcd.c: 226: PORTDbits.RD7 = 1;
 16593  00498C  8E83               	bsf	3971,7,c	;volatile
 16594                           
 16595                           ;display_lcd.c: 227: if(endereco&0b00010000){PORTDbits.RD4=1;}
 16596  00498E  A818               	btfss	endereco_cursor_lcd@endereco,4,c
 16597  004990  D002               	goto	l326
 16598  004992  8883               	bsf	3971,4,c	;volatile
 16599  004994  D001               	goto	l10211
 16600  004996                     l326:
 16601                           
 16602                           ;display_lcd.c: 228: else {PORTDbits.RD4=0;}
 16603  004996  9883               	bcf	3971,4,c	;volatile
 16604  004998                     l10211:
 16605                           
 16606                           ;display_lcd.c: 229: if(endereco&0b00100000){PORTDbits.RD5=1;}
 16607  004998  AA18               	btfss	endereco_cursor_lcd@endereco,5,c
 16608  00499A  D002               	goto	l328
 16609  00499C  8A83               	bsf	3971,5,c	;volatile
 16610  00499E  D001               	goto	l10215
 16611  0049A0                     l328:
 16612                           
 16613                           ;display_lcd.c: 230: else {PORTDbits.RD5=0;}
 16614  0049A0  9A83               	bcf	3971,5,c	;volatile
 16615  0049A2                     l10215:
 16616                           
 16617                           ;display_lcd.c: 231: if(endereco&0b01000000){PORTDbits.RD6=1;}
 16618  0049A2  AC18               	btfss	endereco_cursor_lcd@endereco,6,c
 16619  0049A4  D002               	goto	l330
 16620  0049A6  8C83               	bsf	3971,6,c	;volatile
 16621  0049A8  D001               	goto	l331
 16622  0049AA                     l330:
 16623                           
 16624                           ;display_lcd.c: 232: else {PORTDbits.RD6=0;}
 16625  0049AA  9C83               	bcf	3971,6,c	;volatile
 16626  0049AC                     l331:
 16627                           
 16628                           ;display_lcd.c: 235: PORTDbits.RD0 = 1;
 16629  0049AC  8083               	bsf	3971,0,c	;volatile
 16630                           
 16631                           ;display_lcd.c: 236: delay();
 16632  0049AE  ECB5  F027         	call	_delay	;wreg free
 16633                           
 16634                           ;display_lcd.c: 237: PORTDbits.RD0 = 0;
 16635  0049B2  9083               	bcf	3971,0,c	;volatile
 16636                           
 16637                           ;display_lcd.c: 238: delay();
 16638  0049B4  ECB5  F027         	call	_delay	;wreg free
 16639                           
 16640                           ;display_lcd.c: 241: if(endereco&0b00000001){PORTDbits.RD4=1;}
 16641  0049B8  A018               	btfss	endereco_cursor_lcd@endereco,0,c
 16642  0049BA  D002               	goto	l332
 16643  0049BC  8883               	bsf	3971,4,c	;volatile
 16644  0049BE  D001               	goto	l333
 16645  0049C0                     l332:
 16646                           
 16647                           ;display_lcd.c: 242: else {PORTDbits.RD4=0;}
 16648  0049C0  9883               	bcf	3971,4,c	;volatile
 16649  0049C2                     l333:
 16650                           
 16651                           ;display_lcd.c: 243: if(endereco&0b00000010){PORTDbits.RD5=1;}
 16652  0049C2  A218               	btfss	endereco_cursor_lcd@endereco,1,c
 16653  0049C4  D002               	goto	l334
 16654  0049C6  8A83               	bsf	3971,5,c	;volatile
 16655  0049C8  D001               	goto	l335
 16656  0049CA                     l334:
 16657                           
 16658                           ;display_lcd.c: 244: else {PORTDbits.RD5=0;}
 16659  0049CA  9A83               	bcf	3971,5,c	;volatile
 16660  0049CC                     l335:
 16661                           
 16662                           ;display_lcd.c: 245: if(endereco&0b00000100){PORTDbits.RD6=1;}
 16663  0049CC  A418               	btfss	endereco_cursor_lcd@endereco,2,c
 16664  0049CE  D002               	goto	l336
 16665  0049D0  8C83               	bsf	3971,6,c	;volatile
 16666  0049D2  D001               	goto	l337
 16667  0049D4                     l336:
 16668                           
 16669                           ;display_lcd.c: 246: else {PORTDbits.RD6=0;}
 16670  0049D4  9C83               	bcf	3971,6,c	;volatile
 16671  0049D6                     l337:
 16672                           
 16673                           ;display_lcd.c: 247: if(endereco&0b00001000){PORTDbits.RD7=1;}
 16674  0049D6  A618               	btfss	endereco_cursor_lcd@endereco,3,c
 16675  0049D8  D002               	goto	l338
 16676  0049DA  8E83               	bsf	3971,7,c	;volatile
 16677  0049DC  D001               	goto	l339
 16678  0049DE                     l338:
 16679                           
 16680                           ;display_lcd.c: 248: else {PORTDbits.RD7=0;}
 16681  0049DE  9E83               	bcf	3971,7,c	;volatile
 16682  0049E0                     l339:
 16683                           
 16684                           ;display_lcd.c: 251: PORTDbits.RD0 = 1;
 16685  0049E0  8083               	bsf	3971,0,c	;volatile
 16686                           
 16687                           ;display_lcd.c: 252: delay();
 16688  0049E2  ECB5  F027         	call	_delay	;wreg free
 16689                           
 16690                           ;display_lcd.c: 253: PORTDbits.RD0 = 0;
 16691  0049E6  9083               	bcf	3971,0,c	;volatile
 16692                           
 16693                           ;display_lcd.c: 254: delay();
 16694  0049E8  ECB5  F027         	call	_delay	;wreg free
 16695  0049EC  0012               	return		;funcret
 16696  0049EE                     __end_of_endereco_cursor_lcd:
 16697                           	opt stack 0
 16698                           tosu	equ	0xFFF
 16699                           tosh	equ	0xFFE
 16700                           tosl	equ	0xFFD
 16701                           pclath	equ	0xFFA
 16702                           tblptru	equ	0xFF8
 16703                           tblptrh	equ	0xFF7
 16704                           tblptrl	equ	0xFF6
 16705                           tablat	equ	0xFF5
 16706                           prodh	equ	0xFF4
 16707                           prodl	equ	0xFF3
 16708                           intcon	equ	0xFF2
 16709                           intcon2	equ	0xFF1
 16710                           intcon3	equ	0xFF0
 16711                           indf0	equ	0xFEF
 16712                           postinc0	equ	0xFEE
 16713                           fsr0h	equ	0xFEA
 16714                           fsr0l	equ	0xFE9
 16715                           wreg	equ	0xFE8
 16716                           indf1	equ	0xFE7
 16717                           postinc1	equ	0xFE6
 16718                           postdec1	equ	0xFE5
 16719                           fsr1h	equ	0xFE2
 16720                           fsr1l	equ	0xFE1
 16721                           indf2	equ	0xFDF
 16722                           postinc2	equ	0xFDE
 16723                           postdec2	equ	0xFDD
 16724                           plusw2	equ	0xFDB
 16725                           fsr2h	equ	0xFDA
 16726                           fsr2l	equ	0xFD9
 16727                           status	equ	0xFD8
 16728                           
 16729 ;; *************** function _escreve_inteiro_lcd *****************
 16730 ;; Defined at:
 16731 ;;		line 376 in file "bibliotecas/display_lcd.c"
 16732 ;; Parameters:    Size  Location     Type
 16733 ;;  valor           2   45[COMRAM] int 
 16734 ;; Auto vars:     Size  Location     Type
 16735 ;;  texto           7    0[BANK0 ] unsigned char [7]
 16736 ;; Return value:  Size  Location     Type
 16737 ;;                  1    wreg      void 
 16738 ;; Registers used:
 16739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16740 ;; Tracked objects:
 16741 ;;		On entry : 0/0
 16742 ;;		On exit  : 0/0
 16743 ;;		Unchanged: 0/0
 16744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16745 ;;      Params:         2       0       0       0       0       0       0       0       0
 16746 ;;      Locals:         0       7       0       0       0       0       0       0       0
 16747 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16748 ;;      Totals:         2       7       0       0       0       0       0       0       0
 16749 ;;Total ram usage:        9 bytes
 16750 ;; Hardware stack levels used:    1
 16751 ;; Hardware stack levels required when called:    5
 16752 ;; This function calls:
 16753 ;;		_escreve_frase_ram_lcd
 16754 ;;		_itoa
 16755 ;; This function is called by:
 16756 ;;		_sdc_disk_initialize
 16757 ;;		_sdc_disk_read
 16758 ;;		_check_fs
 16759 ;;		_auto_mount
 16760 ;;		_SDCard
 16761 ;;		_escreve_float_lcd
 16762 ;; This function uses a non-reentrant model
 16763 ;;
 16764                           
 16765                           	psect	text53
 16766  004DBA                     __ptext53:
 16767                           	opt stack 0
 16768  004DBA                     _escreve_inteiro_lcd:
 16769                           	opt stack 16
 16770                           
 16771                           ;display_lcd.c: 378: char texto[7] = "000000";
 16772                           
 16773                           ;incstack = 0
 16774  004DBA  EE21  F0E2         	lfsr	2,escreve_inteiro_lcd@F3962
 16775  004DBE  EE10  F060         	lfsr	1,escreve_inteiro_lcd@texto
 16776  004DC2  0E06               	movlw	6
 16777  004DC4                     u11561:
 16778  004DC4  CFDB FFE3          	movff	plusw2,plusw1
 16779  004DC8  06E8               	decf	wreg,f,c
 16780  004DCA  E2FC               	bc	u11561
 16781                           
 16782                           ;display_lcd.c: 379: itoa(texto,valor, 10);
 16783  004DCC  0E60               	movlw	low escreve_inteiro_lcd@texto
 16784  004DCE  6E26               	movwf	itoa@buf,c
 16785  004DD0  0E00               	movlw	high escreve_inteiro_lcd@texto
 16786  004DD2  6E27               	movwf	itoa@buf+1,c
 16787  004DD4  C02E  F028         	movff	escreve_inteiro_lcd@valor,itoa@val
 16788  004DD8  C02F  F029         	movff	escreve_inteiro_lcd@valor+1,itoa@val+1
 16789  004DDC  0E00               	movlw	0
 16790  004DDE  6E2B               	movwf	itoa@base+1,c
 16791  004DE0  0E0A               	movlw	10
 16792  004DE2  6E2A               	movwf	itoa@base,c
 16793  004DE4  EC3D  F026         	call	_itoa	;wreg free
 16794                           
 16795                           ;display_lcd.c: 380: escreve_frase_ram_lcd(texto);
 16796  004DE8  0E60               	movlw	low escreve_inteiro_lcd@texto
 16797  004DEA  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 16798  004DEC  0E00               	movlw	high escreve_inteiro_lcd@texto
 16799  004DEE  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 16800  004DF0  ECA6  F025         	call	_escreve_frase_ram_lcd	;wreg free
 16801  004DF4  0012               	return		;funcret
 16802  004DF6                     __end_of_escreve_inteiro_lcd:
 16803                           	opt stack 0
 16804                           tosu	equ	0xFFF
 16805                           tosh	equ	0xFFE
 16806                           tosl	equ	0xFFD
 16807                           pclath	equ	0xFFA
 16808                           tblptru	equ	0xFF8
 16809                           tblptrh	equ	0xFF7
 16810                           tblptrl	equ	0xFF6
 16811                           tablat	equ	0xFF5
 16812                           prodh	equ	0xFF4
 16813                           prodl	equ	0xFF3
 16814                           intcon	equ	0xFF2
 16815                           intcon2	equ	0xFF1
 16816                           intcon3	equ	0xFF0
 16817                           indf0	equ	0xFEF
 16818                           postinc0	equ	0xFEE
 16819                           fsr0h	equ	0xFEA
 16820                           fsr0l	equ	0xFE9
 16821                           wreg	equ	0xFE8
 16822                           indf1	equ	0xFE7
 16823                           postinc1	equ	0xFE6
 16824                           postdec1	equ	0xFE5
 16825                           plusw1	equ	0xFE3
 16826                           fsr1h	equ	0xFE2
 16827                           fsr1l	equ	0xFE1
 16828                           indf2	equ	0xFDF
 16829                           postinc2	equ	0xFDE
 16830                           postdec2	equ	0xFDD
 16831                           plusw2	equ	0xFDB
 16832                           fsr2h	equ	0xFDA
 16833                           fsr2l	equ	0xFD9
 16834                           status	equ	0xFD8
 16835                           
 16836 ;; *************** function _itoa *****************
 16837 ;; Defined at:
 16838 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
 16839 ;; Parameters:    Size  Location     Type
 16840 ;;  buf             2   37[COMRAM] PTR unsigned char 
 16841 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
 16842 ;;  val             2   39[COMRAM] int 
 16843 ;;  base            2   41[COMRAM] int 
 16844 ;; Auto vars:     Size  Location     Type
 16845 ;;  cp              2   43[COMRAM] PTR unsigned char 
 16846 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
 16847 ;; Return value:  Size  Location     Type
 16848 ;;                  2   37[COMRAM] PTR unsigned char 
 16849 ;; Registers used:
 16850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16851 ;; Tracked objects:
 16852 ;;		On entry : 0/0
 16853 ;;		On exit  : 0/0
 16854 ;;		Unchanged: 0/0
 16855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16856 ;;      Params:         6       0       0       0       0       0       0       0       0
 16857 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16858 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16859 ;;      Totals:         8       0       0       0       0       0       0       0       0
 16860 ;;Total ram usage:        8 bytes
 16861 ;; Hardware stack levels used:    1
 16862 ;; Hardware stack levels required when called:    4
 16863 ;; This function calls:
 16864 ;;		_utoa
 16865 ;; This function is called by:
 16866 ;;		_escreve_inteiro_lcd
 16867 ;;		_escreve_inteiro_uart
 16868 ;; This function uses a non-reentrant model
 16869 ;;
 16870                           
 16871                           	psect	text54
 16872  004C7A                     __ptext54:
 16873                           	opt stack 0
 16874  004C7A                     _itoa:
 16875                           	opt stack 16
 16876                           
 16877                           ;incstack = 0
 16878  004C7A  C026  F02C         	movff	itoa@buf,itoa@cp
 16879  004C7E  C027  F02D         	movff	itoa@buf+1,itoa@cp+1
 16880  004C82  AE29               	btfss	itoa@val+1,7,c
 16881  004C84  D00C               	goto	l10245
 16882  004C86  C026  FFD9         	movff	itoa@buf,fsr2l
 16883  004C8A  C027  FFDA         	movff	itoa@buf+1,fsr2h
 16884  004C8E  0E2D               	movlw	45
 16885  004C90  6EDF               	movwf	indf2,c
 16886  004C92  4A26               	infsnz	itoa@buf,f,c
 16887  004C94  2A27               	incf	itoa@buf+1,f,c
 16888  004C96  6C28               	negf	itoa@val,c
 16889  004C98  1E29               	comf	itoa@val+1,f,c
 16890  004C9A  B0D8               	btfsc	status,0,c
 16891  004C9C  2A29               	incf	itoa@val+1,f,c
 16892  004C9E                     l10245:
 16893  004C9E  C026  F01D         	movff	itoa@buf,utoa@buf
 16894  004CA2  C027  F01E         	movff	itoa@buf+1,utoa@buf+1
 16895  004CA6  C028  F01F         	movff	itoa@val,utoa@val
 16896  004CAA  C029  F020         	movff	itoa@val+1,utoa@val+1
 16897  004CAE  C02A  F021         	movff	itoa@base,utoa@base
 16898  004CB2  C02B  F022         	movff	itoa@base+1,utoa@base+1
 16899  004CB6  EC94  F021         	call	_utoa	;wreg free
 16900  004CBA  0012               	return	
 16901  004CBC                     __end_of_itoa:
 16902                           	opt stack 0
 16903                           tosu	equ	0xFFF
 16904                           tosh	equ	0xFFE
 16905                           tosl	equ	0xFFD
 16906                           pclath	equ	0xFFA
 16907                           tblptru	equ	0xFF8
 16908                           tblptrh	equ	0xFF7
 16909                           tblptrl	equ	0xFF6
 16910                           tablat	equ	0xFF5
 16911                           prodh	equ	0xFF4
 16912                           prodl	equ	0xFF3
 16913                           intcon	equ	0xFF2
 16914                           intcon2	equ	0xFF1
 16915                           intcon3	equ	0xFF0
 16916                           indf0	equ	0xFEF
 16917                           postinc0	equ	0xFEE
 16918                           fsr0h	equ	0xFEA
 16919                           fsr0l	equ	0xFE9
 16920                           wreg	equ	0xFE8
 16921                           indf1	equ	0xFE7
 16922                           postinc1	equ	0xFE6
 16923                           postdec1	equ	0xFE5
 16924                           plusw1	equ	0xFE3
 16925                           fsr1h	equ	0xFE2
 16926                           fsr1l	equ	0xFE1
 16927                           indf2	equ	0xFDF
 16928                           postinc2	equ	0xFDE
 16929                           postdec2	equ	0xFDD
 16930                           plusw2	equ	0xFDB
 16931                           fsr2h	equ	0xFDA
 16932                           fsr2l	equ	0xFD9
 16933                           status	equ	0xFD8
 16934                           
 16935 ;; *************** function _utoa *****************
 16936 ;; Defined at:
 16937 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
 16938 ;; Parameters:    Size  Location     Type
 16939 ;;  buf             2   28[COMRAM] PTR unsigned char 
 16940 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
 16941 ;;  val             2   30[COMRAM] unsigned int 
 16942 ;;  base            2   32[COMRAM] int 
 16943 ;; Auto vars:     Size  Location     Type
 16944 ;;  v               2   34[COMRAM] unsigned int 
 16945 ;;  c               1   36[COMRAM] unsigned char 
 16946 ;; Return value:  Size  Location     Type
 16947 ;;                  2   28[COMRAM] PTR unsigned char 
 16948 ;; Registers used:
 16949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16950 ;; Tracked objects:
 16951 ;;		On entry : 0/0
 16952 ;;		On exit  : 0/0
 16953 ;;		Unchanged: 0/0
 16954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16955 ;;      Params:         6       0       0       0       0       0       0       0       0
 16956 ;;      Locals:         3       0       0       0       0       0       0       0       0
 16957 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16958 ;;      Totals:         9       0       0       0       0       0       0       0       0
 16959 ;;Total ram usage:        9 bytes
 16960 ;; Hardware stack levels used:    1
 16961 ;; Hardware stack levels required when called:    3
 16962 ;; This function calls:
 16963 ;;		___lwdiv
 16964 ;;		___lwmod
 16965 ;; This function is called by:
 16966 ;;		_itoa
 16967 ;; This function uses a non-reentrant model
 16968 ;;
 16969                           
 16970                           	psect	text55
 16971  004328                     __ptext55:
 16972                           	opt stack 0
 16973  004328                     _utoa:
 16974                           	opt stack 16
 16975                           
 16976                           ;incstack = 0
 16977  004328  C01F  F023         	movff	utoa@val,utoa@v
 16978  00432C  C020  F024         	movff	utoa@val+1,utoa@v+1
 16979  004330                     l10113:
 16980  004330  C023  F016         	movff	utoa@v,___lwdiv@dividend
 16981  004334  C024  F017         	movff	utoa@v+1,___lwdiv@dividend+1
 16982  004338  C021  F018         	movff	utoa@base,___lwdiv@divisor
 16983  00433C  C022  F019         	movff	utoa@base+1,___lwdiv@divisor+1
 16984  004340  EC7D  F025         	call	___lwdiv	;wreg free
 16985  004344  C016  F023         	movff	?___lwdiv,utoa@v
 16986  004348  C017  F024         	movff	?___lwdiv+1,utoa@v+1
 16987  00434C  4A1D               	infsnz	utoa@buf,f,c
 16988  00434E  2A1E               	incf	utoa@buf+1,f,c
 16989  004350  5023               	movf	utoa@v,w,c
 16990  004352  1024               	iorwf	utoa@v+1,w,c
 16991  004354  A4D8               	btfss	status,2,c
 16992  004356  D7EC               	goto	l10113
 16993  004358  C01D  FFD9         	movff	utoa@buf,fsr2l
 16994  00435C  C01E  FFDA         	movff	utoa@buf+1,fsr2h
 16995  004360  0E00               	movlw	0
 16996  004362  6EDF               	movwf	indf2,c
 16997  004364  061D               	decf	utoa@buf,f,c
 16998  004366  A0D8               	btfss	status,0,c
 16999  004368  061E               	decf	utoa@buf+1,f,c
 17000  00436A                     l10123:
 17001  00436A  C01F  F016         	movff	utoa@val,___lwmod@dividend
 17002  00436E  C020  F017         	movff	utoa@val+1,___lwmod@dividend+1
 17003  004372  C021  F018         	movff	utoa@base,___lwmod@divisor
 17004  004376  C022  F019         	movff	utoa@base+1,___lwmod@divisor+1
 17005  00437A  EC5E  F026         	call	___lwmod	;wreg free
 17006  00437E  5016               	movf	?___lwmod,w,c
 17007  004380  6E25               	movwf	utoa@c,c
 17008  004382  C01F  F016         	movff	utoa@val,___lwdiv@dividend
 17009  004386  C020  F017         	movff	utoa@val+1,___lwdiv@dividend+1
 17010  00438A  C021  F018         	movff	utoa@base,___lwdiv@divisor
 17011  00438E  C022  F019         	movff	utoa@base+1,___lwdiv@divisor+1
 17012  004392  EC7D  F025         	call	___lwdiv	;wreg free
 17013  004396  C016  F01F         	movff	?___lwdiv,utoa@val
 17014  00439A  C017  F020         	movff	?___lwdiv+1,utoa@val+1
 17015  00439E  0E09               	movlw	9
 17016  0043A0  6425               	cpfsgt	utoa@c,c
 17017  0043A2  D002               	goto	l1880
 17018  0043A4  0E07               	movlw	7
 17019  0043A6  2625               	addwf	utoa@c,f,c
 17020  0043A8                     l1880:
 17021  0043A8  0E30               	movlw	48
 17022  0043AA  2625               	addwf	utoa@c,f,c
 17023  0043AC  C01D  FFD9         	movff	utoa@buf,fsr2l
 17024  0043B0  C01E  FFDA         	movff	utoa@buf+1,fsr2h
 17025  0043B4  C025  FFDF         	movff	utoa@c,indf2
 17026  0043B8  061D               	decf	utoa@buf,f,c
 17027  0043BA  A0D8               	btfss	status,0,c
 17028  0043BC  061E               	decf	utoa@buf+1,f,c
 17029  0043BE  501F               	movf	utoa@val,w,c
 17030  0043C0  1020               	iorwf	utoa@val+1,w,c
 17031  0043C2  A4D8               	btfss	status,2,c
 17032  0043C4  D7D2               	goto	l10123
 17033                           
 17034                           ;	Return value of _utoa is never used
 17035  0043C6  4A1D               	infsnz	utoa@buf,f,c
 17036  0043C8  2A1E               	incf	utoa@buf+1,f,c
 17037  0043CA  0012               	return	
 17038  0043CC                     __end_of_utoa:
 17039                           	opt stack 0
 17040                           tosu	equ	0xFFF
 17041                           tosh	equ	0xFFE
 17042                           tosl	equ	0xFFD
 17043                           pclath	equ	0xFFA
 17044                           tblptru	equ	0xFF8
 17045                           tblptrh	equ	0xFF7
 17046                           tblptrl	equ	0xFF6
 17047                           tablat	equ	0xFF5
 17048                           prodh	equ	0xFF4
 17049                           prodl	equ	0xFF3
 17050                           intcon	equ	0xFF2
 17051                           intcon2	equ	0xFF1
 17052                           intcon3	equ	0xFF0
 17053                           indf0	equ	0xFEF
 17054                           postinc0	equ	0xFEE
 17055                           fsr0h	equ	0xFEA
 17056                           fsr0l	equ	0xFE9
 17057                           wreg	equ	0xFE8
 17058                           indf1	equ	0xFE7
 17059                           postinc1	equ	0xFE6
 17060                           postdec1	equ	0xFE5
 17061                           plusw1	equ	0xFE3
 17062                           fsr1h	equ	0xFE2
 17063                           fsr1l	equ	0xFE1
 17064                           indf2	equ	0xFDF
 17065                           postinc2	equ	0xFDE
 17066                           postdec2	equ	0xFDD
 17067                           plusw2	equ	0xFDB
 17068                           fsr2h	equ	0xFDA
 17069                           fsr2l	equ	0xFD9
 17070                           status	equ	0xFD8
 17071                           
 17072 ;; *************** function ___lwmod *****************
 17073 ;; Defined at:
 17074 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
 17075 ;; Parameters:    Size  Location     Type
 17076 ;;  dividend        2   21[COMRAM] unsigned int 
 17077 ;;  divisor         2   23[COMRAM] unsigned int 
 17078 ;; Auto vars:     Size  Location     Type
 17079 ;;  counter         1   25[COMRAM] unsigned char 
 17080 ;; Return value:  Size  Location     Type
 17081 ;;                  2   21[COMRAM] unsigned int 
 17082 ;; Registers used:
 17083 ;;		wreg, status,2, status,0
 17084 ;; Tracked objects:
 17085 ;;		On entry : 0/0
 17086 ;;		On exit  : 0/0
 17087 ;;		Unchanged: 0/0
 17088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17089 ;;      Params:         4       0       0       0       0       0       0       0       0
 17090 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17091 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17092 ;;      Totals:         5       0       0       0       0       0       0       0       0
 17093 ;;Total ram usage:        5 bytes
 17094 ;; Hardware stack levels used:    1
 17095 ;; Hardware stack levels required when called:    2
 17096 ;; This function calls:
 17097 ;;		Nothing
 17098 ;; This function is called by:
 17099 ;;		_utoa
 17100 ;;		_converte_inteiro_matriz
 17101 ;; This function uses a non-reentrant model
 17102 ;;
 17103                           
 17104                           	psect	text56
 17105  004CBC                     __ptext56:
 17106                           	opt stack 0
 17107  004CBC                     ___lwmod:
 17108                           	opt stack 16
 17109                           
 17110                           ;incstack = 0
 17111  004CBC  5018               	movf	___lwmod@divisor,w,c
 17112  004CBE  1019               	iorwf	___lwmod@divisor+1,w,c
 17113  004CC0  B4D8               	btfsc	status,2,c
 17114  004CC2  D018               	goto	l1969
 17115  004CC4  0E01               	movlw	1
 17116  004CC6  6E1A               	movwf	___lwmod@counter,c
 17117  004CC8  D004               	goto	l10065
 17118  004CCA                     l10063:
 17119  004CCA  90D8               	bcf	status,0,c
 17120  004CCC  3618               	rlcf	___lwmod@divisor,f,c
 17121  004CCE  3619               	rlcf	___lwmod@divisor+1,f,c
 17122  004CD0  2A1A               	incf	___lwmod@counter,f,c
 17123  004CD2                     l10065:
 17124  004CD2  AE19               	btfss	___lwmod@divisor+1,7,c
 17125  004CD4  D7FA               	goto	l10063
 17126  004CD6                     l10067:
 17127  004CD6  5018               	movf	___lwmod@divisor,w,c
 17128  004CD8  5C16               	subwf	___lwmod@dividend,w,c
 17129  004CDA  5019               	movf	___lwmod@divisor+1,w,c
 17130  004CDC  5817               	subwfb	___lwmod@dividend+1,w,c
 17131  004CDE  A0D8               	btfss	status,0,c
 17132  004CE0  D004               	goto	l10071
 17133  004CE2  5018               	movf	___lwmod@divisor,w,c
 17134  004CE4  5E16               	subwf	___lwmod@dividend,f,c
 17135  004CE6  5019               	movf	___lwmod@divisor+1,w,c
 17136  004CE8  5A17               	subwfb	___lwmod@dividend+1,f,c
 17137  004CEA                     l10071:
 17138  004CEA  90D8               	bcf	status,0,c
 17139  004CEC  3219               	rrcf	___lwmod@divisor+1,f,c
 17140  004CEE  3218               	rrcf	___lwmod@divisor,f,c
 17141  004CF0  2E1A               	decfsz	___lwmod@counter,f,c
 17142  004CF2  D7F1               	goto	l10067
 17143  004CF4                     l1969:
 17144  004CF4  C016  F016         	movff	___lwmod@dividend,?___lwmod
 17145  004CF8  C017  F017         	movff	___lwmod@dividend+1,?___lwmod+1
 17146  004CFC  0012               	return		;funcret
 17147  004CFE                     __end_of___lwmod:
 17148                           	opt stack 0
 17149                           tosu	equ	0xFFF
 17150                           tosh	equ	0xFFE
 17151                           tosl	equ	0xFFD
 17152                           pclath	equ	0xFFA
 17153                           tblptru	equ	0xFF8
 17154                           tblptrh	equ	0xFF7
 17155                           tblptrl	equ	0xFF6
 17156                           tablat	equ	0xFF5
 17157                           prodh	equ	0xFF4
 17158                           prodl	equ	0xFF3
 17159                           intcon	equ	0xFF2
 17160                           intcon2	equ	0xFF1
 17161                           intcon3	equ	0xFF0
 17162                           indf0	equ	0xFEF
 17163                           postinc0	equ	0xFEE
 17164                           fsr0h	equ	0xFEA
 17165                           fsr0l	equ	0xFE9
 17166                           wreg	equ	0xFE8
 17167                           indf1	equ	0xFE7
 17168                           postinc1	equ	0xFE6
 17169                           postdec1	equ	0xFE5
 17170                           plusw1	equ	0xFE3
 17171                           fsr1h	equ	0xFE2
 17172                           fsr1l	equ	0xFE1
 17173                           indf2	equ	0xFDF
 17174                           postinc2	equ	0xFDE
 17175                           postdec2	equ	0xFDD
 17176                           plusw2	equ	0xFDB
 17177                           fsr2h	equ	0xFDA
 17178                           fsr2l	equ	0xFD9
 17179                           status	equ	0xFD8
 17180                           
 17181 ;; *************** function ___lwdiv *****************
 17182 ;; Defined at:
 17183 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
 17184 ;; Parameters:    Size  Location     Type
 17185 ;;  dividend        2   21[COMRAM] unsigned int 
 17186 ;;  divisor         2   23[COMRAM] unsigned int 
 17187 ;; Auto vars:     Size  Location     Type
 17188 ;;  quotient        2   26[COMRAM] unsigned int 
 17189 ;;  counter         1   25[COMRAM] unsigned char 
 17190 ;; Return value:  Size  Location     Type
 17191 ;;                  2   21[COMRAM] unsigned int 
 17192 ;; Registers used:
 17193 ;;		wreg, status,2, status,0
 17194 ;; Tracked objects:
 17195 ;;		On entry : 0/0
 17196 ;;		On exit  : 0/0
 17197 ;;		Unchanged: 0/0
 17198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17199 ;;      Params:         4       0       0       0       0       0       0       0       0
 17200 ;;      Locals:         3       0       0       0       0       0       0       0       0
 17201 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17202 ;;      Totals:         7       0       0       0       0       0       0       0       0
 17203 ;;Total ram usage:        7 bytes
 17204 ;; Hardware stack levels used:    1
 17205 ;; Hardware stack levels required when called:    2
 17206 ;; This function calls:
 17207 ;;		Nothing
 17208 ;; This function is called by:
 17209 ;;		_utoa
 17210 ;;		_converte_inteiro_matriz
 17211 ;; This function uses a non-reentrant model
 17212 ;;
 17213                           
 17214                           	psect	text57
 17215  004AFA                     __ptext57:
 17216                           	opt stack 0
 17217  004AFA                     ___lwdiv:
 17218                           	opt stack 16
 17219                           
 17220                           ;incstack = 0
 17221  004AFA  0E00               	movlw	0
 17222  004AFC  6E1C               	movwf	___lwdiv@quotient+1,c
 17223  004AFE  0E00               	movlw	0
 17224  004B00  6E1B               	movwf	___lwdiv@quotient,c
 17225  004B02  5018               	movf	___lwdiv@divisor,w,c
 17226  004B04  1019               	iorwf	___lwdiv@divisor+1,w,c
 17227  004B06  B4D8               	btfsc	status,2,c
 17228  004B08  D01C               	goto	l1959
 17229  004B0A  0E01               	movlw	1
 17230  004B0C  6E1A               	movwf	___lwdiv@counter,c
 17231  004B0E  D004               	goto	l10045
 17232  004B10                     l10043:
 17233  004B10  90D8               	bcf	status,0,c
 17234  004B12  3618               	rlcf	___lwdiv@divisor,f,c
 17235  004B14  3619               	rlcf	___lwdiv@divisor+1,f,c
 17236  004B16  2A1A               	incf	___lwdiv@counter,f,c
 17237  004B18                     l10045:
 17238  004B18  AE19               	btfss	___lwdiv@divisor+1,7,c
 17239  004B1A  D7FA               	goto	l10043
 17240  004B1C                     l10047:
 17241  004B1C  90D8               	bcf	status,0,c
 17242  004B1E  361B               	rlcf	___lwdiv@quotient,f,c
 17243  004B20  361C               	rlcf	___lwdiv@quotient+1,f,c
 17244  004B22  5018               	movf	___lwdiv@divisor,w,c
 17245  004B24  5C16               	subwf	___lwdiv@dividend,w,c
 17246  004B26  5019               	movf	___lwdiv@divisor+1,w,c
 17247  004B28  5817               	subwfb	___lwdiv@dividend+1,w,c
 17248  004B2A  A0D8               	btfss	status,0,c
 17249  004B2C  D005               	goto	l10055
 17250  004B2E  5018               	movf	___lwdiv@divisor,w,c
 17251  004B30  5E16               	subwf	___lwdiv@dividend,f,c
 17252  004B32  5019               	movf	___lwdiv@divisor+1,w,c
 17253  004B34  5A17               	subwfb	___lwdiv@dividend+1,f,c
 17254  004B36  801B               	bsf	___lwdiv@quotient,0,c
 17255  004B38                     l10055:
 17256  004B38  90D8               	bcf	status,0,c
 17257  004B3A  3219               	rrcf	___lwdiv@divisor+1,f,c
 17258  004B3C  3218               	rrcf	___lwdiv@divisor,f,c
 17259  004B3E  2E1A               	decfsz	___lwdiv@counter,f,c
 17260  004B40  D7ED               	goto	l10047
 17261  004B42                     l1959:
 17262  004B42  C01B  F016         	movff	___lwdiv@quotient,?___lwdiv
 17263  004B46  C01C  F017         	movff	___lwdiv@quotient+1,?___lwdiv+1
 17264  004B4A  0012               	return		;funcret
 17265  004B4C                     __end_of___lwdiv:
 17266                           	opt stack 0
 17267                           tosu	equ	0xFFF
 17268                           tosh	equ	0xFFE
 17269                           tosl	equ	0xFFD
 17270                           pclath	equ	0xFFA
 17271                           tblptru	equ	0xFF8
 17272                           tblptrh	equ	0xFF7
 17273                           tblptrl	equ	0xFF6
 17274                           tablat	equ	0xFF5
 17275                           prodh	equ	0xFF4
 17276                           prodl	equ	0xFF3
 17277                           intcon	equ	0xFF2
 17278                           intcon2	equ	0xFF1
 17279                           intcon3	equ	0xFF0
 17280                           indf0	equ	0xFEF
 17281                           postinc0	equ	0xFEE
 17282                           fsr0h	equ	0xFEA
 17283                           fsr0l	equ	0xFE9
 17284                           wreg	equ	0xFE8
 17285                           indf1	equ	0xFE7
 17286                           postinc1	equ	0xFE6
 17287                           postdec1	equ	0xFE5
 17288                           plusw1	equ	0xFE3
 17289                           fsr1h	equ	0xFE2
 17290                           fsr1l	equ	0xFE1
 17291                           indf2	equ	0xFDF
 17292                           postinc2	equ	0xFDE
 17293                           postdec2	equ	0xFDD
 17294                           plusw2	equ	0xFDB
 17295                           fsr2h	equ	0xFDA
 17296                           fsr2l	equ	0xFD9
 17297                           status	equ	0xFD8
 17298                           
 17299 ;; *************** function _escreve_frase_ram_lcd *****************
 17300 ;; Defined at:
 17301 ;;		line 445 in file "bibliotecas/display_lcd.c"
 17302 ;; Parameters:    Size  Location     Type
 17303 ;;  buffer          2   24[COMRAM] PTR unsigned char 
 17304 ;;		 -> STR_31(5), STR_30(18), buff(20), STR_29(10), 
 17305 ;;		 -> STR_27(16), STR_26(16), mensagem_inicial@msg_dois(17), mensagem_inicial@msg_linha_um(17), 
 17306 ;;		 -> STR_24(19), STR_23(19), STR_22(19), STR_19(19), 
 17307 ;;		 -> STR_18(12), escreve_inteiro_lcd@texto(7), RAM(2047), STR_17(14), 
 17308 ;;		 -> STR_16(19), STR_15(17), STR_14(16), STR_13(17), 
 17309 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(16), 
 17310 ;;		 -> STR_8(11), STR_6(5), STR_4(5), gps@gps_buffer(15), 
 17311 ;;		 -> dado_buffer(7), STR_2(6), data_buffer(15), STR_1(6), 
 17312 ;; Auto vars:     Size  Location     Type
 17313 ;;		None
 17314 ;; Return value:  Size  Location     Type
 17315 ;;                  1    wreg      void 
 17316 ;; Registers used:
 17317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17318 ;; Tracked objects:
 17319 ;;		On entry : 0/0
 17320 ;;		On exit  : 0/0
 17321 ;;		Unchanged: 0/0
 17322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17323 ;;      Params:         2       0       0       0       0       0       0       0       0
 17324 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17325 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17326 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17327 ;;Total ram usage:        2 bytes
 17328 ;; Hardware stack levels used:    1
 17329 ;; Hardware stack levels required when called:    4
 17330 ;; This function calls:
 17331 ;;		_escreve_caractere_lcd
 17332 ;; This function is called by:
 17333 ;;		_sdc_disk_initialize
 17334 ;;		_sdc_disk_read
 17335 ;;		_sdc_disk_write
 17336 ;;		_escreve_inteiro_lcd
 17337 ;;		_check_fs
 17338 ;;		_auto_mount
 17339 ;;		_mensagem_inicial
 17340 ;;		_SDCard
 17341 ;;		_gps
 17342 ;; This function uses a non-reentrant model
 17343 ;;
 17344                           
 17345                           	psect	text58
 17346  004B4C                     __ptext58:
 17347                           	opt stack 0
 17348  004B4C                     _escreve_frase_ram_lcd:
 17349                           	opt stack 25
 17350                           
 17351                           ;display_lcd.c: 447: while(*buffer)
 17352                           
 17353                           ;incstack = 0
 17354  004B4C  D014               	goto	l10147
 17355  004B4E                     l10143:
 17356                           
 17357                           ;display_lcd.c: 448: {
 17358                           ;display_lcd.c: 449: escreve_caractere_lcd(*buffer);
 17359  004B4E  C019  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 17360  004B52  C01A  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 17361  004B56  6AF8               	clrf	tblptru,c
 17362  004B58  0E07               	movlw	(high __ramtop+-1)
 17363  004B5A  64F7               	cpfsgt	tblptrh,c
 17364  004B5C  D003               	bra	u11387
 17365  004B5E  0008               	tblrd		*
 17366  004B60  50F5               	movf	tablat,w,c
 17367  004B62  D005               	bra	u11380
 17368  004B64                     u11387:
 17369  004B64  CFF6 FFE9          	movff	tblptrl,fsr0l
 17370  004B68  CFF7 FFEA          	movff	tblptrh,fsr0h
 17371  004B6C  50EF               	movf	indf0,w,c
 17372  004B6E                     u11380:
 17373  004B6E  EC51  F024         	call	_escreve_caractere_lcd
 17374                           
 17375                           ;display_lcd.c: 450: buffer++;
 17376  004B72  4A19               	infsnz	escreve_frase_ram_lcd@buffer,f,c
 17377  004B74  2A1A               	incf	escreve_frase_ram_lcd@buffer+1,f,c
 17378  004B76                     l10147:
 17379  004B76  C019  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 17380  004B7A  C01A  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 17381  004B7E  6AF8               	clrf	tblptru,c
 17382  004B80  0E07               	movlw	(high __ramtop+-1)
 17383  004B82  64F7               	cpfsgt	tblptrh,c
 17384  004B84  D003               	bra	u11397
 17385  004B86  0008               	tblrd		*
 17386  004B88  50F5               	movf	tablat,w,c
 17387  004B8A  D005               	bra	u11390
 17388  004B8C                     u11397:
 17389  004B8C  CFF6 FFE9          	movff	tblptrl,fsr0l
 17390  004B90  CFF7 FFEA          	movff	tblptrh,fsr0h
 17391  004B94  50EF               	movf	indf0,w,c
 17392  004B96                     u11390:
 17393  004B96  0900               	iorlw	0
 17394  004B98  B4D8               	btfsc	status,2,c
 17395  004B9A  0012               	return	
 17396  004B9C  D7D8               	goto	l10143
 17397  004B9E                     __end_of_escreve_frase_ram_lcd:
 17398                           	opt stack 0
 17399                           tosu	equ	0xFFF
 17400                           tosh	equ	0xFFE
 17401                           tosl	equ	0xFFD
 17402                           pclath	equ	0xFFA
 17403                           tblptru	equ	0xFF8
 17404                           tblptrh	equ	0xFF7
 17405                           tblptrl	equ	0xFF6
 17406                           tablat	equ	0xFF5
 17407                           prodh	equ	0xFF4
 17408                           prodl	equ	0xFF3
 17409                           intcon	equ	0xFF2
 17410                           intcon2	equ	0xFF1
 17411                           intcon3	equ	0xFF0
 17412                           indf0	equ	0xFEF
 17413                           postinc0	equ	0xFEE
 17414                           fsr0h	equ	0xFEA
 17415                           fsr0l	equ	0xFE9
 17416                           wreg	equ	0xFE8
 17417                           indf1	equ	0xFE7
 17418                           postinc1	equ	0xFE6
 17419                           postdec1	equ	0xFE5
 17420                           plusw1	equ	0xFE3
 17421                           fsr1h	equ	0xFE2
 17422                           fsr1l	equ	0xFE1
 17423                           indf2	equ	0xFDF
 17424                           postinc2	equ	0xFDE
 17425                           postdec2	equ	0xFDD
 17426                           plusw2	equ	0xFDB
 17427                           fsr2h	equ	0xFDA
 17428                           fsr2l	equ	0xFD9
 17429                           status	equ	0xFD8
 17430                           
 17431 ;; *************** function _escreve_caractere_lcd *****************
 17432 ;; Defined at:
 17433 ;;		line 323 in file "bibliotecas/display_lcd.c"
 17434 ;; Parameters:    Size  Location     Type
 17435 ;;  data            1    wreg     unsigned char 
 17436 ;; Auto vars:     Size  Location     Type
 17437 ;;  data            1   23[COMRAM] unsigned char 
 17438 ;; Return value:  Size  Location     Type
 17439 ;;                  1    wreg      void 
 17440 ;; Registers used:
 17441 ;;		wreg, status,2, status,0, cstack
 17442 ;; Tracked objects:
 17443 ;;		On entry : 0/0
 17444 ;;		On exit  : 0/0
 17445 ;;		Unchanged: 0/0
 17446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17447 ;;      Params:         0       0       0       0       0       0       0       0       0
 17448 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17449 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17450 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17451 ;;Total ram usage:        1 bytes
 17452 ;; Hardware stack levels used:    1
 17453 ;; Hardware stack levels required when called:    3
 17454 ;; This function calls:
 17455 ;;		_delay
 17456 ;; This function is called by:
 17457 ;;		_escreve_frase_ram_lcd
 17458 ;;		_escreve_float_lcd
 17459 ;;		_escreve_frase_lcd
 17460 ;;		_cria_caractere_lcd
 17461 ;; This function uses a non-reentrant model
 17462 ;;
 17463                           
 17464                           	psect	text59
 17465  0048A2                     __ptext59:
 17466                           	opt stack 0
 17467  0048A2                     _escreve_caractere_lcd:
 17468                           	opt stack 25
 17469                           
 17470                           ;incstack = 0
 17471                           ;escreve_caractere_lcd@data stored from wreg
 17472  0048A2  6E18               	movwf	escreve_caractere_lcd@data,c
 17473                           
 17474                           ;display_lcd.c: 326: PORTDbits.RD2 = 0;
 17475  0048A4  9483               	bcf	3971,2,c	;volatile
 17476                           
 17477                           ;display_lcd.c: 327: PORTDbits.RD1 = 1;
 17478  0048A6  8283               	bsf	3971,1,c	;volatile
 17479                           
 17480                           ;display_lcd.c: 328: PORTDbits.RD0 = 0;
 17481  0048A8  9083               	bcf	3971,0,c	;volatile
 17482                           
 17483                           ;display_lcd.c: 331: if(data&0b00010000){PORTDbits.RD4=1;}
 17484  0048AA  A818               	btfss	escreve_caractere_lcd@data,4,c
 17485  0048AC  D002               	goto	l355
 17486  0048AE  8883               	bsf	3971,4,c	;volatile
 17487  0048B0  D001               	goto	l10081
 17488  0048B2                     l355:
 17489                           
 17490                           ;display_lcd.c: 332: else {PORTDbits.RD4=0;}
 17491  0048B2  9883               	bcf	3971,4,c	;volatile
 17492  0048B4                     l10081:
 17493                           
 17494                           ;display_lcd.c: 333: if(data&0b00100000){PORTDbits.RD5=1;}
 17495  0048B4  AA18               	btfss	escreve_caractere_lcd@data,5,c
 17496  0048B6  D002               	goto	l357
 17497  0048B8  8A83               	bsf	3971,5,c	;volatile
 17498  0048BA  D001               	goto	l10085
 17499  0048BC                     l357:
 17500                           
 17501                           ;display_lcd.c: 334: else {PORTDbits.RD5=0;}
 17502  0048BC  9A83               	bcf	3971,5,c	;volatile
 17503  0048BE                     l10085:
 17504                           
 17505                           ;display_lcd.c: 335: if(data&0b01000000){PORTDbits.RD6=1;}
 17506  0048BE  AC18               	btfss	escreve_caractere_lcd@data,6,c
 17507  0048C0  D002               	goto	l359
 17508  0048C2  8C83               	bsf	3971,6,c	;volatile
 17509  0048C4  D001               	goto	l10089
 17510  0048C6                     l359:
 17511                           
 17512                           ;display_lcd.c: 336: else {PORTDbits.RD6=0;}
 17513  0048C6  9C83               	bcf	3971,6,c	;volatile
 17514  0048C8                     l10089:
 17515                           
 17516                           ;display_lcd.c: 337: if(data&0b10000000){PORTDbits.RD7=1;}
 17517  0048C8  AE18               	btfss	escreve_caractere_lcd@data,7,c
 17518  0048CA  D002               	goto	l361
 17519  0048CC  8E83               	bsf	3971,7,c	;volatile
 17520  0048CE  D001               	goto	l362
 17521  0048D0                     l361:
 17522                           
 17523                           ;display_lcd.c: 338: else {PORTDbits.RD7=0;}
 17524  0048D0  9E83               	bcf	3971,7,c	;volatile
 17525  0048D2                     l362:
 17526                           
 17527                           ;display_lcd.c: 341: PORTDbits.RD0 = 1;
 17528  0048D2  8083               	bsf	3971,0,c	;volatile
 17529                           
 17530                           ;display_lcd.c: 342: delay();
 17531  0048D4  ECB5  F027         	call	_delay	;wreg free
 17532                           
 17533                           ;display_lcd.c: 343: PORTDbits.RD0 = 0;
 17534  0048D8  9083               	bcf	3971,0,c	;volatile
 17535                           
 17536                           ;display_lcd.c: 344: delay();
 17537  0048DA  ECB5  F027         	call	_delay	;wreg free
 17538                           
 17539                           ;display_lcd.c: 348: if(data&0b00000001){PORTDbits.RD4=1;}
 17540  0048DE  A018               	btfss	escreve_caractere_lcd@data,0,c
 17541  0048E0  D002               	goto	l363
 17542  0048E2  8883               	bsf	3971,4,c	;volatile
 17543  0048E4  D001               	goto	l364
 17544  0048E6                     l363:
 17545                           
 17546                           ;display_lcd.c: 349: else {PORTDbits.RD4=0;}
 17547  0048E6  9883               	bcf	3971,4,c	;volatile
 17548  0048E8                     l364:
 17549                           
 17550                           ;display_lcd.c: 350: if(data&0b00000010){PORTDbits.RD5=1;}
 17551  0048E8  A218               	btfss	escreve_caractere_lcd@data,1,c
 17552  0048EA  D002               	goto	l365
 17553  0048EC  8A83               	bsf	3971,5,c	;volatile
 17554  0048EE  D001               	goto	l366
 17555  0048F0                     l365:
 17556                           
 17557                           ;display_lcd.c: 351: else {PORTDbits.RD5=0;}
 17558  0048F0  9A83               	bcf	3971,5,c	;volatile
 17559  0048F2                     l366:
 17560                           
 17561                           ;display_lcd.c: 352: if(data&0b00000100){PORTDbits.RD6=1;}
 17562  0048F2  A418               	btfss	escreve_caractere_lcd@data,2,c
 17563  0048F4  D002               	goto	l367
 17564  0048F6  8C83               	bsf	3971,6,c	;volatile
 17565  0048F8  D001               	goto	l368
 17566  0048FA                     l367:
 17567                           
 17568                           ;display_lcd.c: 353: else {PORTDbits.RD6=0;}
 17569  0048FA  9C83               	bcf	3971,6,c	;volatile
 17570  0048FC                     l368:
 17571                           
 17572                           ;display_lcd.c: 354: if(data&0b00001000){PORTDbits.RD7=1;}
 17573  0048FC  A618               	btfss	escreve_caractere_lcd@data,3,c
 17574  0048FE  D002               	goto	l369
 17575  004900  8E83               	bsf	3971,7,c	;volatile
 17576  004902  D001               	goto	l370
 17577  004904                     l369:
 17578                           
 17579                           ;display_lcd.c: 355: else {PORTDbits.RD7=0;}
 17580  004904  9E83               	bcf	3971,7,c	;volatile
 17581  004906                     l370:
 17582                           
 17583                           ;display_lcd.c: 358: PORTDbits.RD0 = 1;
 17584  004906  8083               	bsf	3971,0,c	;volatile
 17585                           
 17586                           ;display_lcd.c: 359: delay();
 17587  004908  ECB5  F027         	call	_delay	;wreg free
 17588                           
 17589                           ;display_lcd.c: 360: PORTDbits.RD0 = 0;
 17590  00490C  9083               	bcf	3971,0,c	;volatile
 17591                           
 17592                           ;display_lcd.c: 361: delay();
 17593  00490E  ECB5  F027         	call	_delay	;wreg free
 17594  004912  0012               	return		;funcret
 17595  004914                     __end_of_escreve_caractere_lcd:
 17596                           	opt stack 0
 17597                           tosu	equ	0xFFF
 17598                           tosh	equ	0xFFE
 17599                           tosl	equ	0xFFD
 17600                           pclath	equ	0xFFA
 17601                           tblptru	equ	0xFF8
 17602                           tblptrh	equ	0xFF7
 17603                           tblptrl	equ	0xFF6
 17604                           tablat	equ	0xFF5
 17605                           prodh	equ	0xFF4
 17606                           prodl	equ	0xFF3
 17607                           intcon	equ	0xFF2
 17608                           intcon2	equ	0xFF1
 17609                           intcon3	equ	0xFF0
 17610                           indf0	equ	0xFEF
 17611                           postinc0	equ	0xFEE
 17612                           fsr0h	equ	0xFEA
 17613                           fsr0l	equ	0xFE9
 17614                           wreg	equ	0xFE8
 17615                           indf1	equ	0xFE7
 17616                           postinc1	equ	0xFE6
 17617                           postdec1	equ	0xFE5
 17618                           plusw1	equ	0xFE3
 17619                           fsr1h	equ	0xFE2
 17620                           fsr1l	equ	0xFE1
 17621                           indf2	equ	0xFDF
 17622                           postinc2	equ	0xFDE
 17623                           postdec2	equ	0xFDD
 17624                           plusw2	equ	0xFDB
 17625                           fsr2h	equ	0xFDA
 17626                           fsr2l	equ	0xFD9
 17627                           status	equ	0xFD8
 17628                           
 17629 ;; *************** function _delay *****************
 17630 ;; Defined at:
 17631 ;;		line 45 in file "bibliotecas/display_lcd.c"
 17632 ;; Parameters:    Size  Location     Type
 17633 ;;		None
 17634 ;; Auto vars:     Size  Location     Type
 17635 ;;  contador_int    1   22[COMRAM] unsigned char 
 17636 ;;  contador_ext    1   21[COMRAM] unsigned char 
 17637 ;; Return value:  Size  Location     Type
 17638 ;;                  1    wreg      void 
 17639 ;; Registers used:
 17640 ;;		wreg, status,2, status,0
 17641 ;; Tracked objects:
 17642 ;;		On entry : 0/0
 17643 ;;		On exit  : 0/0
 17644 ;;		Unchanged: 0/0
 17645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17646 ;;      Params:         0       0       0       0       0       0       0       0       0
 17647 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17648 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17649 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17650 ;;Total ram usage:        2 bytes
 17651 ;; Hardware stack levels used:    1
 17652 ;; Hardware stack levels required when called:    2
 17653 ;; This function calls:
 17654 ;;		Nothing
 17655 ;; This function is called by:
 17656 ;;		_init_lcd
 17657 ;;		_escreve_cmd_lcd
 17658 ;;		_endereco_cursor_lcd
 17659 ;;		_escreve_caractere_lcd
 17660 ;; This function uses a non-reentrant model
 17661 ;;
 17662                           
 17663                           	psect	text60
 17664  004F6A                     __ptext60:
 17665                           	opt stack 0
 17666  004F6A                     _delay:
 17667                           	opt stack 25
 17668                           
 17669                           ;display_lcd.c: 47: unsigned char contador_ext, contador_int;
 17670                           ;display_lcd.c: 49: for(contador_ext = 0; contador_ext<100; contador_ext++)
 17671                           
 17672                           ;incstack = 0
 17673  004F6A  0E00               	movlw	0
 17674  004F6C  6E16               	movwf	delay@contador_ext,c
 17675  004F6E                     l10019:
 17676  004F6E  0E63               	movlw	99
 17677  004F70  6416               	cpfsgt	delay@contador_ext,c
 17678  004F72  D001               	goto	l294
 17679  004F74  0012               	return	
 17680  004F76                     l294:
 17681                           
 17682                           ;display_lcd.c: 50: {
 17683                           ;display_lcd.c: 51: __nop();
 17684  004F76  F000               	nop	
 17685                           
 17686                           ;display_lcd.c: 52: for(contador_int = 0; contador_int<50; contador_int++)
 17687  004F78  0E00               	movlw	0
 17688  004F7A  6E17               	movwf	delay@contador_int,c
 17689  004F7C                     l10025:
 17690  004F7C  0E31               	movlw	49
 17691  004F7E  6417               	cpfsgt	delay@contador_int,c
 17692  004F80  D001               	goto	l296
 17693  004F82  D003               	goto	l10033
 17694  004F84                     l296:
 17695                           
 17696                           ;display_lcd.c: 53: {
 17697                           ;display_lcd.c: 54: __nop();
 17698  004F84  F000               	nop	
 17699  004F86  2A17               	incf	delay@contador_int,f,c
 17700  004F88  D7F9               	goto	l10025
 17701  004F8A                     l10033:
 17702  004F8A  2A16               	incf	delay@contador_ext,f,c
 17703  004F8C  D7F0               	goto	l10019
 17704  004F8E                     __end_of_delay:
 17705                           	opt stack 0
 17706                           tosu	equ	0xFFF
 17707                           tosh	equ	0xFFE
 17708                           tosl	equ	0xFFD
 17709                           pclath	equ	0xFFA
 17710                           tblptru	equ	0xFF8
 17711                           tblptrh	equ	0xFF7
 17712                           tblptrl	equ	0xFF6
 17713                           tablat	equ	0xFF5
 17714                           prodh	equ	0xFF4
 17715                           prodl	equ	0xFF3
 17716                           intcon	equ	0xFF2
 17717                           intcon2	equ	0xFF1
 17718                           intcon3	equ	0xFF0
 17719                           indf0	equ	0xFEF
 17720                           postinc0	equ	0xFEE
 17721                           fsr0h	equ	0xFEA
 17722                           fsr0l	equ	0xFE9
 17723                           wreg	equ	0xFE8
 17724                           indf1	equ	0xFE7
 17725                           postinc1	equ	0xFE6
 17726                           postdec1	equ	0xFE5
 17727                           plusw1	equ	0xFE3
 17728                           fsr1h	equ	0xFE2
 17729                           fsr1l	equ	0xFE1
 17730                           indf2	equ	0xFDF
 17731                           postinc2	equ	0xFDE
 17732                           postdec2	equ	0xFDD
 17733                           plusw2	equ	0xFDB
 17734                           fsr2h	equ	0xFDA
 17735                           fsr2l	equ	0xFD9
 17736                           status	equ	0xFD8
 17737                           
 17738 ;; *************** function _dummy_clocks *****************
 17739 ;; Defined at:
 17740 ;;		line 76 in file "bibliotecas/SDCard.c"
 17741 ;; Parameters:    Size  Location     Type
 17742 ;;  n               1    wreg     unsigned char 
 17743 ;; Auto vars:     Size  Location     Type
 17744 ;;  n               1   25[COMRAM] unsigned char 
 17745 ;;  i               2   26[COMRAM] unsigned int 
 17746 ;; Return value:  Size  Location     Type
 17747 ;;                  1    wreg      void 
 17748 ;; Registers used:
 17749 ;;		wreg, status,2, status,0, cstack
 17750 ;; Tracked objects:
 17751 ;;		On entry : 0/0
 17752 ;;		On exit  : 0/0
 17753 ;;		Unchanged: 0/0
 17754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17755 ;;      Params:         0       0       0       0       0       0       0       0       0
 17756 ;;      Locals:         3       0       0       0       0       0       0       0       0
 17757 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17758 ;;      Totals:         5       0       0       0       0       0       0       0       0
 17759 ;;Total ram usage:        5 bytes
 17760 ;; Hardware stack levels used:    1
 17761 ;; Hardware stack levels required when called:    3
 17762 ;; This function calls:
 17763 ;;		_escreve_dado_SPI
 17764 ;; This function is called by:
 17765 ;;		_sdc_disk_initialize
 17766 ;;		_sdc_disk_read
 17767 ;;		_sdc_disk_write
 17768 ;; This function uses a non-reentrant model
 17769 ;;
 17770                           
 17771                           	psect	text61
 17772  004D7C                     __ptext61:
 17773                           	opt stack 0
 17774  004D7C                     _dummy_clocks:
 17775                           	opt stack 18
 17776                           
 17777                           ;incstack = 0
 17778                           ;dummy_clocks@n stored from wreg
 17779  004D7C  6E1A               	movwf	dummy_clocks@n,c
 17780                           
 17781                           ;SDCard.c: 78: unsigned int i;
 17782                           ;SDCard.c: 79: _delay((unsigned long)((1)*(48000000/4000.0)));
 17783  004D7E  0E10               	movlw	16
 17784  004D80  6E18               	movwf	??_dummy_clocks& (0+255),c
 17785  004D82  0E94               	movlw	148
 17786  004D84                     u16517:
 17787  004D84  2EE8               	decfsz	wreg,f,c
 17788  004D86  D7FE               	bra	u16517
 17789  004D88  2E18               	decfsz	??_dummy_clocks& (0+255),f,c
 17790  004D8A  D7FC               	bra	u16517
 17791  004D8C  D000               	nop2	
 17792                           
 17793                           ;SDCard.c: 81: for(i=0;i<n;i++)
 17794  004D8E  0E00               	movlw	0
 17795  004D90  6E1C               	movwf	dummy_clocks@i+1,c
 17796  004D92  0E00               	movlw	0
 17797  004D94  6E1B               	movwf	dummy_clocks@i,c
 17798  004D96  D007               	goto	l10289
 17799  004D98                     l1293:
 17800                           
 17801                           ;SDCard.c: 82: {
 17802                           ;SDCard.c: 83: LATBbits.LATB4 = 1;
 17803  004D98  888A               	bsf	3978,4,c	;volatile
 17804                           
 17805                           ;SDCard.c: 84: escreve_dado_SPI(0XFF);
 17806  004D9A  0EFF               	movlw	255
 17807  004D9C  EC1A  F026         	call	_escreve_dado_SPI
 17808                           
 17809                           ;SDCard.c: 85: LATBbits.LATB4 = 0;
 17810  004DA0  988A               	bcf	3978,4,c	;volatile
 17811  004DA2  4A1B               	infsnz	dummy_clocks@i,f,c
 17812  004DA4  2A1C               	incf	dummy_clocks@i+1,f,c
 17813  004DA6                     l10289:
 17814  004DA6  501A               	movf	dummy_clocks@n,w,c
 17815  004DA8  6E18               	movwf	??_dummy_clocks& (0+255),c
 17816  004DAA  6A19               	clrf	(??_dummy_clocks+1)& (0+255),c
 17817  004DAC  5018               	movf	??_dummy_clocks,w,c
 17818  004DAE  5C1B               	subwf	dummy_clocks@i,w,c
 17819  004DB0  5019               	movf	??_dummy_clocks+1,w,c
 17820  004DB2  581C               	subwfb	dummy_clocks@i+1,w,c
 17821  004DB4  B0D8               	btfsc	status,0,c
 17822  004DB6  0012               	return	
 17823  004DB8  D7EF               	goto	l1293
 17824  004DBA                     __end_of_dummy_clocks:
 17825                           	opt stack 0
 17826                           tosu	equ	0xFFF
 17827                           tosh	equ	0xFFE
 17828                           tosl	equ	0xFFD
 17829                           pclath	equ	0xFFA
 17830                           tblptru	equ	0xFF8
 17831                           tblptrh	equ	0xFF7
 17832                           tblptrl	equ	0xFF6
 17833                           tablat	equ	0xFF5
 17834                           prodh	equ	0xFF4
 17835                           prodl	equ	0xFF3
 17836                           intcon	equ	0xFF2
 17837                           intcon2	equ	0xFF1
 17838                           intcon3	equ	0xFF0
 17839                           indf0	equ	0xFEF
 17840                           postinc0	equ	0xFEE
 17841                           fsr0h	equ	0xFEA
 17842                           fsr0l	equ	0xFE9
 17843                           wreg	equ	0xFE8
 17844                           indf1	equ	0xFE7
 17845                           postinc1	equ	0xFE6
 17846                           postdec1	equ	0xFE5
 17847                           plusw1	equ	0xFE3
 17848                           fsr1h	equ	0xFE2
 17849                           fsr1l	equ	0xFE1
 17850                           indf2	equ	0xFDF
 17851                           postinc2	equ	0xFDE
 17852                           postdec2	equ	0xFDD
 17853                           plusw2	equ	0xFDB
 17854                           fsr2h	equ	0xFDA
 17855                           fsr2l	equ	0xFD9
 17856                           status	equ	0xFD8
 17857                           
 17858 ;; *************** function _command *****************
 17859 ;; Defined at:
 17860 ;;		line 115 in file "bibliotecas/SDCard.c"
 17861 ;; Parameters:    Size  Location     Type
 17862 ;;  CMD             1    wreg     unsigned char 
 17863 ;;  arg             4   23[COMRAM] unsigned long 
 17864 ;;  CRC             1   27[COMRAM] unsigned char 
 17865 ;; Auto vars:     Size  Location     Type
 17866 ;;  CMD             1   28[COMRAM] unsigned char 
 17867 ;;  argument        1   29[COMRAM] unsigned char 
 17868 ;; Return value:  Size  Location     Type
 17869 ;;                  1    wreg      void 
 17870 ;; Registers used:
 17871 ;;		wreg, status,2, status,0, cstack
 17872 ;; Tracked objects:
 17873 ;;		On entry : 0/0
 17874 ;;		On exit  : 0/0
 17875 ;;		Unchanged: 0/0
 17876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17877 ;;      Params:         5       0       0       0       0       0       0       0       0
 17878 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17879 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17880 ;;      Totals:         7       0       0       0       0       0       0       0       0
 17881 ;;Total ram usage:        7 bytes
 17882 ;; Hardware stack levels used:    1
 17883 ;; Hardware stack levels required when called:    3
 17884 ;; This function calls:
 17885 ;;		_escreve_dado_SPI
 17886 ;; This function is called by:
 17887 ;;		_sdc_disk_initialize
 17888 ;;		_sdc_disk_read
 17889 ;;		_sdc_disk_write
 17890 ;; This function uses a non-reentrant model
 17891 ;;
 17892                           
 17893                           	psect	text62
 17894  004E30                     __ptext62:
 17895                           	opt stack 0
 17896  004E30                     _command:
 17897                           	opt stack 18
 17898                           
 17899                           ;incstack = 0
 17900                           ;command@CMD stored from wreg
 17901  004E30  6E1D               	movwf	command@CMD,c
 17902                           
 17903                           ;SDCard.c: 117: unsigned char argument;
 17904                           ;SDCard.c: 119: escreve_dado_SPI(CMD);
 17905  004E32  501D               	movf	command@CMD,w,c
 17906  004E34  EC1A  F026         	call	_escreve_dado_SPI
 17907                           
 17908                           ;SDCard.c: 120: argument = arg>>24;
 17909  004E38  C01B  F01E         	movff	command@arg+3,command@argument
 17910                           
 17911                           ;SDCard.c: 121: escreve_dado_SPI(argument);
 17912  004E3C  501E               	movf	command@argument,w,c
 17913  004E3E  EC1A  F026         	call	_escreve_dado_SPI
 17914                           
 17915                           ;SDCard.c: 122: argument = arg>>16;
 17916  004E42  C01A  F01E         	movff	command@arg+2,command@argument
 17917                           
 17918                           ;SDCard.c: 123: escreve_dado_SPI(argument);
 17919  004E46  501E               	movf	command@argument,w,c
 17920  004E48  EC1A  F026         	call	_escreve_dado_SPI
 17921                           
 17922                           ;SDCard.c: 124: argument = arg>>8;
 17923  004E4C  C019  F01E         	movff	command@arg+1,command@argument
 17924                           
 17925                           ;SDCard.c: 125: escreve_dado_SPI(argument);
 17926  004E50  501E               	movf	command@argument,w,c
 17927  004E52  EC1A  F026         	call	_escreve_dado_SPI
 17928                           
 17929                           ;SDCard.c: 126: argument = arg;
 17930  004E56  C018  F01E         	movff	command@arg,command@argument
 17931                           
 17932                           ;SDCard.c: 127: escreve_dado_SPI(argument);
 17933  004E5A  501E               	movf	command@argument,w,c
 17934  004E5C  EC1A  F026         	call	_escreve_dado_SPI
 17935                           
 17936                           ;SDCard.c: 128: escreve_dado_SPI(CRC);
 17937  004E60  501C               	movf	command@CRC,w,c
 17938  004E62  EC1A  F026         	call	_escreve_dado_SPI
 17939  004E66  0012               	return		;funcret
 17940  004E68                     __end_of_command:
 17941                           	opt stack 0
 17942                           tosu	equ	0xFFF
 17943                           tosh	equ	0xFFE
 17944                           tosl	equ	0xFFD
 17945                           pclath	equ	0xFFA
 17946                           tblptru	equ	0xFF8
 17947                           tblptrh	equ	0xFF7
 17948                           tblptrl	equ	0xFF6
 17949                           tablat	equ	0xFF5
 17950                           prodh	equ	0xFF4
 17951                           prodl	equ	0xFF3
 17952                           intcon	equ	0xFF2
 17953                           intcon2	equ	0xFF1
 17954                           intcon3	equ	0xFF0
 17955                           indf0	equ	0xFEF
 17956                           postinc0	equ	0xFEE
 17957                           fsr0h	equ	0xFEA
 17958                           fsr0l	equ	0xFE9
 17959                           wreg	equ	0xFE8
 17960                           indf1	equ	0xFE7
 17961                           postinc1	equ	0xFE6
 17962                           postdec1	equ	0xFE5
 17963                           plusw1	equ	0xFE3
 17964                           fsr1h	equ	0xFE2
 17965                           fsr1l	equ	0xFE1
 17966                           indf2	equ	0xFDF
 17967                           postinc2	equ	0xFDE
 17968                           postdec2	equ	0xFDD
 17969                           plusw2	equ	0xFDB
 17970                           fsr2h	equ	0xFDA
 17971                           fsr2l	equ	0xFD9
 17972                           status	equ	0xFD8
 17973                           
 17974 ;; *************** function _escreve_dado_SPI *****************
 17975 ;; Defined at:
 17976 ;;		line 67 in file "bibliotecas/SHRC.c"
 17977 ;; Parameters:    Size  Location     Type
 17978 ;;  data_to_shrc    1    wreg     unsigned char 
 17979 ;; Auto vars:     Size  Location     Type
 17980 ;;  data_to_shrc    1   22[COMRAM] unsigned char 
 17981 ;;  contador        1   21[COMRAM] unsigned char 
 17982 ;; Return value:  Size  Location     Type
 17983 ;;                  1    wreg      void 
 17984 ;; Registers used:
 17985 ;;		wreg, status,2, status,0
 17986 ;; Tracked objects:
 17987 ;;		On entry : 0/0
 17988 ;;		On exit  : 0/0
 17989 ;;		Unchanged: 0/0
 17990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17991 ;;      Params:         0       0       0       0       0       0       0       0       0
 17992 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17993 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17994 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17995 ;;Total ram usage:        2 bytes
 17996 ;; Hardware stack levels used:    1
 17997 ;; Hardware stack levels required when called:    2
 17998 ;; This function calls:
 17999 ;;		Nothing
 18000 ;; This function is called by:
 18001 ;;		_sdc_disk_write
 18002 ;;		_dummy_clocks
 18003 ;;		_proceed
 18004 ;;		_command
 18005 ;; This function uses a non-reentrant model
 18006 ;;
 18007                           
 18008                           	psect	text63
 18009  004C34                     __ptext63:
 18010                           	opt stack 0
 18011  004C34                     _escreve_dado_SPI:
 18012                           	opt stack 25
 18013                           
 18014                           ;incstack = 0
 18015                           ;escreve_dado_SPI@data_to_shrc stored from wreg
 18016  004C34  6E17               	movwf	escreve_dado_SPI@data_to_shrc,c
 18017                           
 18018                           ;SHRC.c: 69: LATBbits.LATB7 = 0;
 18019  004C36  9E8A               	bcf	3978,7,c	;volatile
 18020                           
 18021                           ;SHRC.c: 70: unsigned char contador=0;
 18022  004C38  0E00               	movlw	0
 18023  004C3A  6E16               	movwf	escreve_dado_SPI@contador,c
 18024                           
 18025                           ;SHRC.c: 71: (INTCONbits.GIE = 0);
 18026  004C3C  9EF2               	bcf	intcon,7,c	;volatile
 18027                           
 18028                           ;SHRC.c: 73: while(contador<=7)
 18029  004C3E  D018               	goto	l10177
 18030  004C40                     l10155:
 18031                           
 18032                           ;SHRC.c: 74: {
 18033                           ;SHRC.c: 75: if((data_to_shrc & 0x80) == 0)
 18034  004C40  BE17               	btfsc	escreve_dado_SPI@data_to_shrc,7,c
 18035  004C42  D002               	goto	l135
 18036                           
 18037                           ;SHRC.c: 76: {
 18038                           ;SHRC.c: 77: LATBbits.LATB7 = 0;
 18039  004C44  9E8A               	bcf	3978,7,c	;volatile
 18040                           
 18041                           ;SHRC.c: 78: }
 18042  004C46  D001               	goto	l10159
 18043  004C48                     l135:
 18044                           
 18045                           ;SHRC.c: 79: else
 18046                           ;SHRC.c: 80: {
 18047                           ;SHRC.c: 81: LATBbits.LATB7 = 1;
 18048  004C48  8E8A               	bsf	3978,7,c	;volatile
 18049  004C4A                     l10159:
 18050                           
 18051                           ;SHRC.c: 82: }
 18052                           ;SHRC.c: 83: data_to_shrc = data_to_shrc << 1;
 18053  004C4A  5017               	movf	escreve_dado_SPI@data_to_shrc,w,c
 18054  004C4C  2417               	addwf	escreve_dado_SPI@data_to_shrc,w,c
 18055  004C4E  6E17               	movwf	escreve_dado_SPI@data_to_shrc,c
 18056                           
 18057                           ;SHRC.c: 84: _delay((unsigned long)((1.25)*(48000000/4000000.0)));
 18058  004C50  0E05               	movlw	5
 18059  004C52                     u16527:
 18060  004C52  2EE8               	decfsz	wreg,f,c
 18061  004C54  D7FE               	bra	u16527
 18062                           
 18063                           ;SHRC.c: 85: LATBbits.LATB6 = 1;
 18064  004C56  8C8A               	bsf	3978,6,c	;volatile
 18065                           
 18066                           ;SHRC.c: 86: _delay((unsigned long)((1.25)*(48000000/4000000.0)));
 18067  004C58  0E05               	movlw	5
 18068  004C5A                     u16537:
 18069  004C5A  2EE8               	decfsz	wreg,f,c
 18070  004C5C  D7FE               	bra	u16537
 18071                           
 18072                           ;SHRC.c: 87: LATBbits.LATB7 = 0;
 18073  004C5E  9E8A               	bcf	3978,7,c	;volatile
 18074                           
 18075                           ;SHRC.c: 88: _delay((unsigned long)((1.25)*(48000000/4000000.0)));
 18076  004C60  0E05               	movlw	5
 18077  004C62                     u16547:
 18078  004C62  2EE8               	decfsz	wreg,f,c
 18079  004C64  D7FE               	bra	u16547
 18080                           
 18081                           ;SHRC.c: 89: LATBbits.LATB6 = 0;
 18082  004C66  9C8A               	bcf	3978,6,c	;volatile
 18083                           
 18084                           ;SHRC.c: 90: _delay((unsigned long)((1.25)*(48000000/4000000.0)));
 18085  004C68  0E05               	movlw	5
 18086  004C6A                     u16557:
 18087  004C6A  2EE8               	decfsz	wreg,f,c
 18088  004C6C  D7FE               	bra	u16557
 18089                           
 18090                           ;SHRC.c: 91: contador++;
 18091  004C6E  2A16               	incf	escreve_dado_SPI@contador,f,c
 18092  004C70                     l10177:
 18093  004C70  0E07               	movlw	7
 18094  004C72  6416               	cpfsgt	escreve_dado_SPI@contador,c
 18095  004C74  D7E5               	goto	l10155
 18096                           
 18097                           ;SHRC.c: 92: }
 18098                           ;SHRC.c: 93: (INTCONbits.GIE = 1);
 18099  004C76  8EF2               	bsf	intcon,7,c	;volatile
 18100  004C78  0012               	return		;funcret
 18101  004C7A                     __end_of_escreve_dado_SPI:
 18102                           	opt stack 0
 18103                           tosu	equ	0xFFF
 18104                           tosh	equ	0xFFE
 18105                           tosl	equ	0xFFD
 18106                           pclath	equ	0xFFA
 18107                           tblptru	equ	0xFF8
 18108                           tblptrh	equ	0xFF7
 18109                           tblptrl	equ	0xFF6
 18110                           tablat	equ	0xFF5
 18111                           prodh	equ	0xFF4
 18112                           prodl	equ	0xFF3
 18113                           intcon	equ	0xFF2
 18114                           intcon2	equ	0xFF1
 18115                           intcon3	equ	0xFF0
 18116                           indf0	equ	0xFEF
 18117                           postinc0	equ	0xFEE
 18118                           fsr0h	equ	0xFEA
 18119                           fsr0l	equ	0xFE9
 18120                           wreg	equ	0xFE8
 18121                           indf1	equ	0xFE7
 18122                           postinc1	equ	0xFE6
 18123                           postdec1	equ	0xFE5
 18124                           plusw1	equ	0xFE3
 18125                           fsr1h	equ	0xFE2
 18126                           fsr1l	equ	0xFE1
 18127                           indf2	equ	0xFDF
 18128                           postinc2	equ	0xFDE
 18129                           postdec2	equ	0xFDD
 18130                           plusw2	equ	0xFDB
 18131                           fsr2h	equ	0xFDA
 18132                           fsr2l	equ	0xFD9
 18133                           status	equ	0xFD8
 18134                           
 18135 ;; *************** function _disk_ioctl *****************
 18136 ;; Defined at:
 18137 ;;		line 243 in file "bibliotecas/diskio.c"
 18138 ;; Parameters:    Size  Location     Type
 18139 ;;  pdrv            1    wreg     unsigned char 
 18140 ;;  cmd             1   21[COMRAM] unsigned char 
 18141 ;;  buff            2   22[COMRAM] PTR void 
 18142 ;;		 -> NULL(0), 
 18143 ;; Auto vars:     Size  Location     Type
 18144 ;;  pdrv            1   24[COMRAM] unsigned char 
 18145 ;;  result          2    0        int 
 18146 ;;  res             1   25[COMRAM] enum E25
 18147 ;; Return value:  Size  Location     Type
 18148 ;;                  1    wreg      enum E25
 18149 ;; Registers used:
 18150 ;;		wreg, status,2, status,0
 18151 ;; Tracked objects:
 18152 ;;		On entry : 0/0
 18153 ;;		On exit  : 0/0
 18154 ;;		Unchanged: 0/0
 18155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18156 ;;      Params:         3       0       0       0       0       0       0       0       0
 18157 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18158 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18159 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18160 ;;Total ram usage:        5 bytes
 18161 ;; Hardware stack levels used:    1
 18162 ;; Hardware stack levels required when called:    2
 18163 ;; This function calls:
 18164 ;;		Nothing
 18165 ;; This function is called by:
 18166 ;;		_sync
 18167 ;; This function uses a non-reentrant model
 18168 ;;
 18169                           
 18170                           	psect	text64
 18171  004F1C                     __ptext64:
 18172                           	opt stack 0
 18173  004F1C                     _disk_ioctl:
 18174                           	opt stack 23
 18175                           
 18176                           ;incstack = 0
 18177                           ;disk_ioctl@pdrv stored from wreg
 18178  004F1C  6E19               	movwf	disk_ioctl@pdrv,c
 18179                           
 18180                           ;diskio.c: 249: DRESULT res;
 18181                           ;diskio.c: 250: int result;
 18182                           ;diskio.c: 252: switch (pdrv) {
 18183  004F1E  D006               	goto	l10895
 18184  004F20                     l210:
 18185                           
 18186                           ;diskio.c: 257: return res;
 18187  004F20  501A               	movf	disk_ioctl@res,w,c
 18188  004F22  0012               	return	
 18189  004F24                     l212:
 18190                           
 18191                           ;diskio.c: 263: return res;
 18192  004F24  501A               	movf	disk_ioctl@res,w,c
 18193  004F26  0012               	return	
 18194  004F28                     l213:
 18195                           
 18196                           ;diskio.c: 269: return res;
 18197  004F28  501A               	movf	disk_ioctl@res,w,c
 18198  004F2A  0012               	return	
 18199  004F2C                     l10895:
 18200  004F2C  5019               	movf	disk_ioctl@pdrv,w,c
 18201                           
 18202                           ; Switch size 1, requested type "space"
 18203                           ; Number of cases is 3, Range of values is 0 to 2
 18204                           ; switch strategies available:
 18205                           ; Name         Instructions Cycles
 18206                           ; simple_byte           10     6 (average)
 18207                           ;	Chosen strategy is simple_byte
 18208  004F2E  0A00               	xorlw	0	; case 0
 18209  004F30  B4D8               	btfsc	status,2,c
 18210  004F32  D7F8               	goto	l212
 18211  004F34  0A01               	xorlw	1	; case 1
 18212  004F36  B4D8               	btfsc	status,2,c
 18213  004F38  D7F3               	goto	l210
 18214  004F3A  0A03               	xorlw	3	; case 2
 18215  004F3C  B4D8               	btfsc	status,2,c
 18216  004F3E  D7F4               	goto	l213
 18217                           
 18218                           ;diskio.c: 272: return RES_PARERR;
 18219  004F40  0E04               	movlw	4
 18220  004F42  0012               	return	
 18221  004F44                     __end_of_disk_ioctl:
 18222                           	opt stack 0
 18223                           tosu	equ	0xFFF
 18224                           tosh	equ	0xFFE
 18225                           tosl	equ	0xFFD
 18226                           pclath	equ	0xFFA
 18227                           tblptru	equ	0xFF8
 18228                           tblptrh	equ	0xFF7
 18229                           tblptrl	equ	0xFF6
 18230                           tablat	equ	0xFF5
 18231                           prodh	equ	0xFF4
 18232                           prodl	equ	0xFF3
 18233                           intcon	equ	0xFF2
 18234                           intcon2	equ	0xFF1
 18235                           intcon3	equ	0xFF0
 18236                           indf0	equ	0xFEF
 18237                           postinc0	equ	0xFEE
 18238                           fsr0h	equ	0xFEA
 18239                           fsr0l	equ	0xFE9
 18240                           wreg	equ	0xFE8
 18241                           indf1	equ	0xFE7
 18242                           postinc1	equ	0xFE6
 18243                           postdec1	equ	0xFE5
 18244                           plusw1	equ	0xFE3
 18245                           fsr1h	equ	0xFE2
 18246                           fsr1l	equ	0xFE1
 18247                           indf2	equ	0xFDF
 18248                           postinc2	equ	0xFDE
 18249                           postdec2	equ	0xFDD
 18250                           plusw2	equ	0xFDB
 18251                           fsr2h	equ	0xFDA
 18252                           fsr2l	equ	0xFD9
 18253                           status	equ	0xFD8
 18254                           
 18255 ;; *************** function _get_fattime *****************
 18256 ;; Defined at:
 18257 ;;		line 839 in file "bibliotecas/tff.c"
 18258 ;; Parameters:    Size  Location     Type
 18259 ;;		None
 18260 ;; Auto vars:     Size  Location     Type
 18261 ;;  f_time          9   25[COMRAM] struct .
 18262 ;; Return value:  Size  Location     Type
 18263 ;;                  4   21[COMRAM] unsigned long 
 18264 ;; Registers used:
 18265 ;;		wreg, status,2, status,0
 18266 ;; Tracked objects:
 18267 ;;		On entry : 0/0
 18268 ;;		On exit  : 0/0
 18269 ;;		Unchanged: 0/0
 18270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18271 ;;      Params:         4       0       0       0       0       0       0       0       0
 18272 ;;      Locals:         9       0       0       0       0       0       0       0       0
 18273 ;;      Temps:          0      38       0       0       0       0       0       0       0
 18274 ;;      Totals:        13      38       0       0       0       0       0       0       0
 18275 ;;Total ram usage:       51 bytes
 18276 ;; Hardware stack levels used:    1
 18277 ;; Hardware stack levels required when called:    2
 18278 ;; This function calls:
 18279 ;;		Nothing
 18280 ;; This function is called by:
 18281 ;;		_f_open
 18282 ;;		_f_sync
 18283 ;;		_f_mkdir
 18284 ;; This function uses a non-reentrant model
 18285 ;;
 18286                           
 18287                           	psect	text65
 18288  003B1A                     __ptext65:
 18289                           	opt stack 0
 18290  003B1A                     _get_fattime:
 18291                           	opt stack 25
 18292                           
 18293                           ;tff.c: 841: fat_time f_time;
 18294                           ;tff.c: 843: return (DWORD)(f_time.ano ) << 25 |
 18295                           ;tff.c: 844: (DWORD)(f_time.mes) << 21 |
 18296                           ;tff.c: 845: (DWORD)(f_time.mes) << 16 |
 18297                           ;tff.c: 846: (DWORD)(f_time.hora) << 11 |
 18298                           ;tff.c: 847: (DWORD)(f_time.min) << 5 |
 18299                           ;tff.c: 848: (DWORD)(f_time.seg) >> 1;
 18300                           
 18301                           ;incstack = 0
 18302  003B1A  90D8               	bcf	status,0,c
 18303  003B1C  301F               	rrcf	get_fattime@f_time+5,w,c
 18304  003B1E  0100               	movlb	0	; () banked
 18305  003B20  6F61               	movwf	(??_get_fattime+1)& (0+255),b
 18306  003B22  301E               	rrcf	get_fattime@f_time+4,w,c
 18307  003B24  0100               	movlb	0	; () banked
 18308  003B26  6F60               	movwf	??_get_fattime& (0+255),b
 18309  003B28  501C               	movf	get_fattime@f_time+2,w,c
 18310  003B2A  0100               	movlb	0	; () banked
 18311  003B2C  6F62               	movwf	(??_get_fattime+2)& (0+255),b
 18312  003B2E  501D               	movf	get_fattime@f_time+3,w,c
 18313  003B30  0100               	movlb	0	; () banked
 18314  003B32  6F63               	movwf	(??_get_fattime+3)& (0+255),b
 18315  003B34  0100               	movlb	0	; () banked
 18316  003B36  6B64               	clrf	(??_get_fattime+4)& (0+255),b
 18317  003B38  0100               	movlb	0	; () banked
 18318  003B3A  6B65               	clrf	(??_get_fattime+5)& (0+255),b
 18319  003B3C  0E05               	movlw	5
 18320  003B3E                     u12865:
 18321  003B3E  90D8               	bcf	status,0,c
 18322  003B40  0100               	movlb	0	; () banked
 18323  003B42  3762               	rlcf	(??_get_fattime+2)& (0+255),f,b
 18324  003B44  3763               	rlcf	(??_get_fattime+3)& (0+255),f,b
 18325  003B46  3764               	rlcf	(??_get_fattime+4)& (0+255),f,b
 18326  003B48  3765               	rlcf	(??_get_fattime+5)& (0+255),f,b
 18327  003B4A  2EE8               	decfsz	wreg,f,c
 18328  003B4C  D7F8               	goto	u12865
 18329  003B4E  501A               	movf	get_fattime@f_time,w,c
 18330  003B50  0100               	movlb	0	; () banked
 18331  003B52  6F66               	movwf	(??_get_fattime+6)& (0+255),b
 18332  003B54  501B               	movf	get_fattime@f_time+1,w,c
 18333  003B56  0100               	movlb	0	; () banked
 18334  003B58  6F67               	movwf	(??_get_fattime+7)& (0+255),b
 18335  003B5A  0100               	movlb	0	; () banked
 18336  003B5C  6B68               	clrf	(??_get_fattime+8)& (0+255),b
 18337  003B5E  0100               	movlb	0	; () banked
 18338  003B60  6B69               	clrf	(??_get_fattime+9)& (0+255),b
 18339  003B62  0E0B               	movlw	11
 18340  003B64                     u12875:
 18341  003B64  90D8               	bcf	status,0,c
 18342  003B66  0100               	movlb	0	; () banked
 18343  003B68  3766               	rlcf	(??_get_fattime+6)& (0+255),f,b
 18344  003B6A  3767               	rlcf	(??_get_fattime+7)& (0+255),f,b
 18345  003B6C  3768               	rlcf	(??_get_fattime+8)& (0+255),f,b
 18346  003B6E  3769               	rlcf	(??_get_fattime+9)& (0+255),f,b
 18347  003B70  2EE8               	decfsz	wreg,f,c
 18348  003B72  D7F8               	goto	u12875
 18349  003B74  C021  F06A         	movff	get_fattime@f_time+7,??_get_fattime+10
 18350  003B78  0100               	movlb	0	; () banked
 18351  003B7A  6B6B               	clrf	(??_get_fattime+11)& (0+255),b
 18352  003B7C  6B6C               	clrf	(??_get_fattime+12)& (0+255),b
 18353  003B7E  6B6D               	clrf	(??_get_fattime+13)& (0+255),b
 18354  003B80  C06B  F06D         	movff	??_get_fattime+11,??_get_fattime+13
 18355  003B84  C06A  F06C         	movff	??_get_fattime+10,??_get_fattime+12
 18356  003B88  0100               	movlb	0	; () banked
 18357  003B8A  6B6B               	clrf	(??_get_fattime+11)& (0+255),b
 18358  003B8C  6B6A               	clrf	(??_get_fattime+10)& (0+255),b
 18359  003B8E  C021  F06E         	movff	get_fattime@f_time+7,??_get_fattime+14
 18360  003B92  0100               	movlb	0	; () banked
 18361  003B94  6B6F               	clrf	(??_get_fattime+15)& (0+255),b
 18362  003B96  6B70               	clrf	(??_get_fattime+16)& (0+255),b
 18363  003B98  6B71               	clrf	(??_get_fattime+17)& (0+255),b
 18364  003B9A  0E15               	movlw	21
 18365  003B9C                     u12885:
 18366  003B9C  90D8               	bcf	status,0,c
 18367  003B9E  0100               	movlb	0	; () banked
 18368  003BA0  376E               	rlcf	(??_get_fattime+14)& (0+255),f,b
 18369  003BA2  376F               	rlcf	(??_get_fattime+15)& (0+255),f,b
 18370  003BA4  3770               	rlcf	(??_get_fattime+16)& (0+255),f,b
 18371  003BA6  3771               	rlcf	(??_get_fattime+17)& (0+255),f,b
 18372  003BA8  2EE8               	decfsz	wreg,f,c
 18373  003BAA  D7F8               	goto	u12885
 18374  003BAC  C022  F072         	movff	get_fattime@f_time+8,??_get_fattime+18
 18375  003BB0  0100               	movlb	0	; () banked
 18376  003BB2  6B73               	clrf	(??_get_fattime+19)& (0+255),b
 18377  003BB4  6B74               	clrf	(??_get_fattime+20)& (0+255),b
 18378  003BB6  6B75               	clrf	(??_get_fattime+21)& (0+255),b
 18379  003BB8  0E19               	movlw	25
 18380  003BBA                     u12895:
 18381  003BBA  90D8               	bcf	status,0,c
 18382  003BBC  0100               	movlb	0	; () banked
 18383  003BBE  3772               	rlcf	(??_get_fattime+18)& (0+255),f,b
 18384  003BC0  3773               	rlcf	(??_get_fattime+19)& (0+255),f,b
 18385  003BC2  3774               	rlcf	(??_get_fattime+20)& (0+255),f,b
 18386  003BC4  3775               	rlcf	(??_get_fattime+21)& (0+255),f,b
 18387  003BC6  2EE8               	decfsz	wreg,f,c
 18388  003BC8  D7F8               	goto	u12895
 18389  003BCA  0100               	movlb	0	; () banked
 18390  003BCC  516E               	movf	(??_get_fattime+14)& (0+255),w,b
 18391  003BCE  0100               	movlb	0	; () banked
 18392  003BD0  1172               	iorwf	(??_get_fattime+18)& (0+255),w,b
 18393  003BD2  0100               	movlb	0	; () banked
 18394  003BD4  6F76               	movwf	(??_get_fattime+22)& (0+255),b
 18395  003BD6  0100               	movlb	0	; () banked
 18396  003BD8  516F               	movf	(??_get_fattime+15)& (0+255),w,b
 18397  003BDA  0100               	movlb	0	; () banked
 18398  003BDC  1173               	iorwf	(??_get_fattime+19)& (0+255),w,b
 18399  003BDE  0100               	movlb	0	; () banked
 18400  003BE0  6F77               	movwf	(??_get_fattime+23)& (0+255),b
 18401  003BE2  0100               	movlb	0	; () banked
 18402  003BE4  5170               	movf	(??_get_fattime+16)& (0+255),w,b
 18403  003BE6  0100               	movlb	0	; () banked
 18404  003BE8  1174               	iorwf	(??_get_fattime+20)& (0+255),w,b
 18405  003BEA  0100               	movlb	0	; () banked
 18406  003BEC  6F78               	movwf	(??_get_fattime+24)& (0+255),b
 18407  003BEE  0100               	movlb	0	; () banked
 18408  003BF0  5171               	movf	(??_get_fattime+17)& (0+255),w,b
 18409  003BF2  0100               	movlb	0	; () banked
 18410  003BF4  1175               	iorwf	(??_get_fattime+21)& (0+255),w,b
 18411  003BF6  0100               	movlb	0	; () banked
 18412  003BF8  6F79               	movwf	(??_get_fattime+25)& (0+255),b
 18413  003BFA  0100               	movlb	0	; () banked
 18414  003BFC  516A               	movf	(??_get_fattime+10)& (0+255),w,b
 18415  003BFE  0100               	movlb	0	; () banked
 18416  003C00  1176               	iorwf	(??_get_fattime+22)& (0+255),w,b
 18417  003C02  0100               	movlb	0	; () banked
 18418  003C04  6F7A               	movwf	(??_get_fattime+26)& (0+255),b
 18419  003C06  0100               	movlb	0	; () banked
 18420  003C08  516B               	movf	(??_get_fattime+11)& (0+255),w,b
 18421  003C0A  0100               	movlb	0	; () banked
 18422  003C0C  1177               	iorwf	(??_get_fattime+23)& (0+255),w,b
 18423  003C0E  0100               	movlb	0	; () banked
 18424  003C10  6F7B               	movwf	(??_get_fattime+27)& (0+255),b
 18425  003C12  0100               	movlb	0	; () banked
 18426  003C14  516C               	movf	(??_get_fattime+12)& (0+255),w,b
 18427  003C16  0100               	movlb	0	; () banked
 18428  003C18  1178               	iorwf	(??_get_fattime+24)& (0+255),w,b
 18429  003C1A  0100               	movlb	0	; () banked
 18430  003C1C  6F7C               	movwf	(??_get_fattime+28)& (0+255),b
 18431  003C1E  0100               	movlb	0	; () banked
 18432  003C20  516D               	movf	(??_get_fattime+13)& (0+255),w,b
 18433  003C22  0100               	movlb	0	; () banked
 18434  003C24  1179               	iorwf	(??_get_fattime+25)& (0+255),w,b
 18435  003C26  0100               	movlb	0	; () banked
 18436  003C28  6F7D               	movwf	(??_get_fattime+29)& (0+255),b
 18437  003C2A  0100               	movlb	0	; () banked
 18438  003C2C  5166               	movf	(??_get_fattime+6)& (0+255),w,b
 18439  003C2E  0100               	movlb	0	; () banked
 18440  003C30  117A               	iorwf	(??_get_fattime+26)& (0+255),w,b
 18441  003C32  0100               	movlb	0	; () banked
 18442  003C34  6F7E               	movwf	(??_get_fattime+30)& (0+255),b
 18443  003C36  0100               	movlb	0	; () banked
 18444  003C38  5167               	movf	(??_get_fattime+7)& (0+255),w,b
 18445  003C3A  0100               	movlb	0	; () banked
 18446  003C3C  117B               	iorwf	(??_get_fattime+27)& (0+255),w,b
 18447  003C3E  0100               	movlb	0	; () banked
 18448  003C40  6F7F               	movwf	(??_get_fattime+31)& (0+255),b
 18449  003C42  0100               	movlb	0	; () banked
 18450  003C44  5168               	movf	(??_get_fattime+8)& (0+255),w,b
 18451  003C46  0100               	movlb	0	; () banked
 18452  003C48  117C               	iorwf	(??_get_fattime+28)& (0+255),w,b
 18453  003C4A  0100               	movlb	0	; () banked
 18454  003C4C  6F80               	movwf	(??_get_fattime+32)& (0+255),b
 18455  003C4E  0100               	movlb	0	; () banked
 18456  003C50  5169               	movf	(??_get_fattime+9)& (0+255),w,b
 18457  003C52  0100               	movlb	0	; () banked
 18458  003C54  117D               	iorwf	(??_get_fattime+29)& (0+255),w,b
 18459  003C56  0100               	movlb	0	; () banked
 18460  003C58  6F81               	movwf	(??_get_fattime+33)& (0+255),b
 18461  003C5A  0100               	movlb	0	; () banked
 18462  003C5C  5162               	movf	(??_get_fattime+2)& (0+255),w,b
 18463  003C5E  0100               	movlb	0	; () banked
 18464  003C60  117E               	iorwf	(??_get_fattime+30)& (0+255),w,b
 18465  003C62  0100               	movlb	0	; () banked
 18466  003C64  6F82               	movwf	(??_get_fattime+34)& (0+255),b
 18467  003C66  0100               	movlb	0	; () banked
 18468  003C68  5163               	movf	(??_get_fattime+3)& (0+255),w,b
 18469  003C6A  0100               	movlb	0	; () banked
 18470  003C6C  117F               	iorwf	(??_get_fattime+31)& (0+255),w,b
 18471  003C6E  0100               	movlb	0	; () banked
 18472  003C70  6F83               	movwf	(??_get_fattime+35)& (0+255),b
 18473  003C72  0100               	movlb	0	; () banked
 18474  003C74  5164               	movf	(??_get_fattime+4)& (0+255),w,b
 18475  003C76  0100               	movlb	0	; () banked
 18476  003C78  1180               	iorwf	(??_get_fattime+32)& (0+255),w,b
 18477  003C7A  0100               	movlb	0	; () banked
 18478  003C7C  6F84               	movwf	(??_get_fattime+36)& (0+255),b
 18479  003C7E  0100               	movlb	0	; () banked
 18480  003C80  5165               	movf	(??_get_fattime+5)& (0+255),w,b
 18481  003C82  0100               	movlb	0	; () banked
 18482  003C84  1181               	iorwf	(??_get_fattime+33)& (0+255),w,b
 18483  003C86  0100               	movlb	0	; () banked
 18484  003C88  6F85               	movwf	(??_get_fattime+37)& (0+255),b
 18485  003C8A  0100               	movlb	0	; () banked
 18486  003C8C  5160               	movf	??_get_fattime& (0+255),w,b
 18487  003C8E  0100               	movlb	0	; () banked
 18488  003C90  1182               	iorwf	(??_get_fattime+34)& (0+255),w,b
 18489  003C92  6E16               	movwf	?_get_fattime,c
 18490  003C94  0100               	movlb	0	; () banked
 18491  003C96  5161               	movf	(??_get_fattime+1)& (0+255),w,b
 18492  003C98  0100               	movlb	0	; () banked
 18493  003C9A  1183               	iorwf	(??_get_fattime+35)& (0+255),w,b
 18494  003C9C  6E17               	movwf	?_get_fattime+1,c
 18495  003C9E  0E00               	movlw	0
 18496  003CA0  0100               	movlb	0	; () banked
 18497  003CA2  1184               	iorwf	(??_get_fattime+36)& (0+255),w,b
 18498  003CA4  6E18               	movwf	?_get_fattime+2,c
 18499  003CA6  0E00               	movlw	0
 18500  003CA8  0100               	movlb	0	; () banked
 18501  003CAA  1185               	iorwf	(??_get_fattime+37)& (0+255),w,b
 18502  003CAC  6E19               	movwf	?_get_fattime+3,c
 18503  003CAE  0012               	return	
 18504  003CB0                     __end_of_get_fattime:
 18505                           	opt stack 0
 18506                           tosu	equ	0xFFF
 18507                           tosh	equ	0xFFE
 18508                           tosl	equ	0xFFD
 18509                           pclath	equ	0xFFA
 18510                           tblptru	equ	0xFF8
 18511                           tblptrh	equ	0xFF7
 18512                           tblptrl	equ	0xFF6
 18513                           tablat	equ	0xFF5
 18514                           prodh	equ	0xFF4
 18515                           prodl	equ	0xFF3
 18516                           intcon	equ	0xFF2
 18517                           intcon2	equ	0xFF1
 18518                           intcon3	equ	0xFF0
 18519                           indf0	equ	0xFEF
 18520                           postinc0	equ	0xFEE
 18521                           fsr0h	equ	0xFEA
 18522                           fsr0l	equ	0xFE9
 18523                           wreg	equ	0xFE8
 18524                           indf1	equ	0xFE7
 18525                           postinc1	equ	0xFE6
 18526                           postdec1	equ	0xFE5
 18527                           plusw1	equ	0xFE3
 18528                           fsr1h	equ	0xFE2
 18529                           fsr1l	equ	0xFE1
 18530                           indf2	equ	0xFDF
 18531                           postinc2	equ	0xFDE
 18532                           postdec2	equ	0xFDD
 18533                           plusw2	equ	0xFDB
 18534                           fsr2h	equ	0xFDA
 18535                           fsr2l	equ	0xFD9
 18536                           status	equ	0xFD8
 18537                           
 18538 ;; *************** function _isr *****************
 18539 ;; Defined at:
 18540 ;;		line 96 in file "main.c"
 18541 ;; Parameters:    Size  Location     Type
 18542 ;;		None
 18543 ;; Auto vars:     Size  Location     Type
 18544 ;;  cont            1   20[COMRAM] unsigned char 
 18545 ;; Return value:  Size  Location     Type
 18546 ;;                  1    wreg      void 
 18547 ;; Registers used:
 18548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18549 ;; Tracked objects:
 18550 ;;		On entry : 0/0
 18551 ;;		On exit  : 0/0
 18552 ;;		Unchanged: 0/0
 18553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18554 ;;      Params:         0       0       0       0       0       0       0       0       0
 18555 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18556 ;;      Temps:         16       0       0       0       0       0       0       0       0
 18557 ;;      Totals:        17       0       0       0       0       0       0       0       0
 18558 ;;Total ram usage:       17 bytes
 18559 ;; Hardware stack levels used:    1
 18560 ;; Hardware stack levels required when called:    1
 18561 ;; This function calls:
 18562 ;;		_recebe_dado_uart
 18563 ;;		i2_write_timer_zero
 18564 ;; This function is called by:
 18565 ;;		Interrupt level 2
 18566 ;; This function uses a non-reentrant model
 18567 ;;
 18568                           
 18569                           	psect	intcode
 18570  000008                     __pintcode:
 18571                           	opt stack 0
 18572  000008                     _isr:
 18573                           	opt stack 16
 18574                           
 18575                           ; BSR set to: 0
 18576                           ;incstack = 0
 18577  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 18578  00000A  ED58  F020         	call	int_func,f	;refresh shadow registers
 18579                           tosu	equ	0xFFF
 18580                           tosh	equ	0xFFE
 18581                           tosl	equ	0xFFD
 18582                           pclath	equ	0xFFA
 18583                           tblptru	equ	0xFF8
 18584                           tblptrh	equ	0xFF7
 18585                           tblptrl	equ	0xFF6
 18586                           tablat	equ	0xFF5
 18587                           prodh	equ	0xFF4
 18588                           prodl	equ	0xFF3
 18589                           intcon	equ	0xFF2
 18590                           intcon2	equ	0xFF1
 18591                           intcon3	equ	0xFF0
 18592                           indf0	equ	0xFEF
 18593                           postinc0	equ	0xFEE
 18594                           fsr0h	equ	0xFEA
 18595                           fsr0l	equ	0xFE9
 18596                           wreg	equ	0xFE8
 18597                           indf1	equ	0xFE7
 18598                           postinc1	equ	0xFE6
 18599                           postdec1	equ	0xFE5
 18600                           plusw1	equ	0xFE3
 18601                           fsr1h	equ	0xFE2
 18602                           fsr1l	equ	0xFE1
 18603                           indf2	equ	0xFDF
 18604                           postinc2	equ	0xFDE
 18605                           postdec2	equ	0xFDD
 18606                           plusw2	equ	0xFDB
 18607                           fsr2h	equ	0xFDA
 18608                           fsr2l	equ	0xFD9
 18609                           status	equ	0xFD8
 18610                           
 18611                           	psect	intcode_body
 18612  0040B0                     __pintcode_body:
 18613                           	opt stack 16
 18614  0040B0                     int_func:
 18615                           	opt stack 16
 18616  0040B0  0006               	pop		; remove dummy address from shadow register refresh
 18617  0040B2  CFFA F007          	movff	pclath,??_isr+2
 18618  0040B6  CFFB F008          	movff	pclatu,??_isr+3
 18619  0040BA  CFE9 F009          	movff	fsr0l,??_isr+4
 18620  0040BE  CFEA F00A          	movff	fsr0h,??_isr+5
 18621  0040C2  CFE1 F00B          	movff	fsr1l,??_isr+6
 18622  0040C6  CFE2 F00C          	movff	fsr1h,??_isr+7
 18623  0040CA  CFD9 F00D          	movff	fsr2l,??_isr+8
 18624  0040CE  CFDA F00E          	movff	fsr2h,??_isr+9
 18625  0040D2  CFF3 F00F          	movff	prodl,??_isr+10
 18626  0040D6  CFF4 F010          	movff	prodh,??_isr+11
 18627  0040DA  CFF6 F011          	movff	tblptrl,??_isr+12
 18628  0040DE  CFF7 F012          	movff	tblptrh,??_isr+13
 18629  0040E2  CFF8 F013          	movff	tblptru,??_isr+14
 18630  0040E6  CFF5 F014          	movff	tablat,??_isr+15
 18631                           
 18632                           ;main.c: 98: unsigned char cont;
 18633                           ;main.c: 101: if (PIE1bits.RCIE && PIR1bits.RCIF)
 18634  0040EA  BA9D               	btfsc	3997,5,c	;volatile
 18635  0040EC  AA9E               	btfss	3998,5,c	;volatile
 18636  0040EE  D004               	goto	i2l9553
 18637                           
 18638                           ;main.c: 102: {
 18639                           ;main.c: 103: data_uart_recebe = recebe_dado_uart();
 18640  0040F0  EC1F  F028         	call	_recebe_dado_uart	;wreg free
 18641  0040F4  6E41               	movwf	_data_uart_recebe,c
 18642                           
 18643                           ;main.c: 104: PIR1bits.RCIF = 0;
 18644  0040F6  9A9E               	bcf	3998,5,c	;volatile
 18645  0040F8                     i2l9553:
 18646                           
 18647                           ;main.c: 109: }
 18648                           ;main.c: 112: unsigned char cont;
 18649                           ;main.c: 114: if (TMR0IF && T0IF)
 18650  0040F8  B4F2               	btfsc	intcon,2,c	;volatile
 18651  0040FA  A4F2               	btfss	intcon,2,c	;volatile
 18652  0040FC  D039               	goto	i2l9583
 18653                           
 18654                           ;main.c: 115: {
 18655                           ;main.c: 116: INTCONbits.TMR0IF = 0;
 18656  0040FE  94F2               	bcf	intcon,2,c	;volatile
 18657                           
 18658                           ;main.c: 117: sinaliza_int_timer = 1;
 18659  004100  0E01               	movlw	1
 18660  004102  6E40               	movwf	_sinaliza_int_timer,c
 18661                           
 18662                           ;main.c: 119: for(cont= 0; cont<2;cont++)
 18663  004104  0E00               	movlw	0
 18664  004106  6E15               	movwf	isr@cont,c
 18665  004108                     i2l9561:
 18666  004108  0E01               	movlw	1
 18667  00410A  6415               	cpfsgt	isr@cont,c
 18668  00410C  D001               	goto	i2l9565
 18669  00410E  D019               	goto	i2l9573
 18670  004110                     i2l9565:
 18671                           
 18672                           ;main.c: 120: {
 18673                           ;main.c: 121: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
 18674  004110  5015               	movf	isr@cont,w,c
 18675  004112  0D02               	mullw	2
 18676  004114  0E4A               	movlw	low _tempo_tarefa
 18677  004116  24F3               	addwf	prodl,w,c
 18678  004118  6ED9               	movwf	fsr2l,c
 18679  00411A  0E01               	movlw	high _tempo_tarefa
 18680  00411C  20F4               	addwfc	prodh,w,c
 18681  00411E  6EDA               	movwf	fsr2h,c
 18682  004120  50DE               	movf	postinc2,w,c
 18683  004122  10DE               	iorwf	postinc2,w,c
 18684  004124  B4D8               	btfsc	status,2,c
 18685  004126  D00B               	goto	i2l9569
 18686  004128  5015               	movf	isr@cont,w,c
 18687  00412A  0D02               	mullw	2
 18688  00412C  0E4A               	movlw	low _tempo_tarefa
 18689  00412E  24F3               	addwf	prodl,w,c
 18690  004130  6ED9               	movwf	fsr2l,c
 18691  004132  0E01               	movlw	high _tempo_tarefa
 18692  004134  20F4               	addwfc	prodh,w,c
 18693  004136  6EDA               	movwf	fsr2h,c
 18694  004138  06DE               	decf	postinc2,f,c
 18695  00413A  0E00               	movlw	0
 18696  00413C  5ADD               	subwfb	postdec2,f,c
 18697  00413E                     i2l9569:
 18698  00413E  2A15               	incf	isr@cont,f,c
 18699  004140  D7E3               	goto	i2l9561
 18700  004142                     i2l9573:
 18701                           
 18702                           ;main.c: 122: }
 18703                           ;main.c: 125: if(tarefa_em_execucao == 1)
 18704  004142  043F               	decf	_tarefa_em_execucao,w,c	;volatile
 18705  004144  A4D8               	btfss	status,2,c
 18706  004146  D00E               	goto	i2l9581
 18707                           
 18708                           ;main.c: 126: {
 18709                           ;main.c: 127: timeout_tarefa--;
 18710  004148  0101               	movlb	1	; () banked
 18711  00414A  0758               	decf	_timeout_tarefa& (0+255),f,b
 18712  00414C  A0D8               	btfss	status,0,c
 18713  00414E  0759               	decf	(_timeout_tarefa+1)& (0+255),f,b
 18714                           
 18715                           ; BSR set to: 1
 18716                           ;main.c: 128: if(!timeout_tarefa)
 18717  004150  0101               	movlb	1	; () banked
 18718  004152  5158               	movf	_timeout_tarefa& (0+255),w,b
 18719  004154  0101               	movlb	1	; () banked
 18720  004156  1159               	iorwf	(_timeout_tarefa+1)& (0+255),w,b
 18721  004158  A4D8               	btfss	status,2,c
 18722  00415A  D004               	goto	i2l9581
 18723                           
 18724                           ; BSR set to: 1
 18725                           ;main.c: 129: {
 18726                           ;main.c: 131: PCLATH = 0;
 18727  00415C  0E00               	movlw	0
 18728  00415E  6EFA               	movwf	pclath,c	;volatile
 18729                           
 18730                           ;main.c: 132: PCL = 0;
 18731  004160  0E00               	movlw	0
 18732  004162  6EF9               	movwf	pcl,c	;volatile
 18733  004164                     i2l9581:
 18734                           
 18735                           ;main.c: 133: }
 18736                           ;main.c: 134: }
 18737                           ;main.c: 137: write_timer_zero(0x0083);
 18738  004164  0E00               	movlw	0
 18739  004166  6E02               	movwf	i2write_timer_zero@timer0+1,c
 18740  004168  0E83               	movlw	131
 18741  00416A  6E01               	movwf	i2write_timer_zero@timer0,c
 18742  00416C  EC16  F028         	call	i2_write_timer_zero	;wreg free
 18743  004170                     i2l9583:
 18744                           
 18745                           ;main.c: 139: }
 18746                           ;main.c: 141: if (INT0IF && INT0IE)
 18747  004170  B2F2               	btfsc	intcon,1,c	;volatile
 18748  004172  A8F2               	btfss	intcon,4,c	;volatile
 18749  004174  D001               	goto	i2l1184
 18750                           
 18751                           ;main.c: 142: {
 18752                           ;main.c: 143: INT0IF = 0;
 18753  004176  92F2               	bcf	intcon,1,c	;volatile
 18754  004178                     i2l1184:
 18755  004178  C014  FFF5         	movff	??_isr+15,tablat
 18756  00417C  C013  FFF8         	movff	??_isr+14,tblptru
 18757  004180  C012  FFF7         	movff	??_isr+13,tblptrh
 18758  004184  C011  FFF6         	movff	??_isr+12,tblptrl
 18759  004188  C010  FFF4         	movff	??_isr+11,prodh
 18760  00418C  C00F  FFF3         	movff	??_isr+10,prodl
 18761  004190  C00E  FFDA         	movff	??_isr+9,fsr2h
 18762  004194  C00D  FFD9         	movff	??_isr+8,fsr2l
 18763  004198  C00C  FFE2         	movff	??_isr+7,fsr1h
 18764  00419C  C00B  FFE1         	movff	??_isr+6,fsr1l
 18765  0041A0  C00A  FFEA         	movff	??_isr+5,fsr0h
 18766  0041A4  C009  FFE9         	movff	??_isr+4,fsr0l
 18767  0041A8  C008  FFFB         	movff	??_isr+3,pclatu
 18768  0041AC  C007  FFFA         	movff	??_isr+2,pclath
 18769  0041B0  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 18770  0041B2  0011               	retfie		f
 18771  0041B4                     __end_of_isr:
 18772                           	opt stack 0
 18773                           tosu	equ	0xFFF
 18774                           tosh	equ	0xFFE
 18775                           tosl	equ	0xFFD
 18776                           pclatu	equ	0xFFB
 18777                           pclath	equ	0xFFA
 18778                           pcl	equ	0xFF9
 18779                           tblptru	equ	0xFF8
 18780                           tblptrh	equ	0xFF7
 18781                           tblptrl	equ	0xFF6
 18782                           tablat	equ	0xFF5
 18783                           prodh	equ	0xFF4
 18784                           prodl	equ	0xFF3
 18785                           intcon	equ	0xFF2
 18786                           intcon2	equ	0xFF1
 18787                           intcon3	equ	0xFF0
 18788                           indf0	equ	0xFEF
 18789                           postinc0	equ	0xFEE
 18790                           fsr0h	equ	0xFEA
 18791                           fsr0l	equ	0xFE9
 18792                           wreg	equ	0xFE8
 18793                           indf1	equ	0xFE7
 18794                           postinc1	equ	0xFE6
 18795                           postdec1	equ	0xFE5
 18796                           plusw1	equ	0xFE3
 18797                           fsr1h	equ	0xFE2
 18798                           fsr1l	equ	0xFE1
 18799                           indf2	equ	0xFDF
 18800                           postinc2	equ	0xFDE
 18801                           postdec2	equ	0xFDD
 18802                           plusw2	equ	0xFDB
 18803                           fsr2h	equ	0xFDA
 18804                           fsr2l	equ	0xFD9
 18805                           status	equ	0xFD8
 18806                           
 18807 ;; *************** function i2_write_timer_zero *****************
 18808 ;; Defined at:
 18809 ;;		line 138 in file "bibliotecas/hardware.c"
 18810 ;; Parameters:    Size  Location     Type
 18811 ;;  timer0          2    0[COMRAM] unsigned int 
 18812 ;; Auto vars:     Size  Location     Type
 18813 ;;  write_timer_    2    2[COMRAM] struct Timers
 18814 ;; Return value:  Size  Location     Type
 18815 ;;                  1    wreg      void 
 18816 ;; Registers used:
 18817 ;;		None
 18818 ;; Tracked objects:
 18819 ;;		On entry : 0/0
 18820 ;;		On exit  : 0/0
 18821 ;;		Unchanged: 0/0
 18822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18823 ;;      Params:         2       0       0       0       0       0       0       0       0
 18824 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18825 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18826 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18827 ;;Total ram usage:        4 bytes
 18828 ;; Hardware stack levels used:    1
 18829 ;; This function calls:
 18830 ;;		Nothing
 18831 ;; This function is called by:
 18832 ;;		_isr
 18833 ;; This function uses a non-reentrant model
 18834 ;;
 18835                           
 18836                           	psect	text67
 18837  00502C                     __ptext67:
 18838                           	opt stack 0
 18839  00502C                     i2_write_timer_zero:
 18840                           	opt stack 16
 18841                           
 18842                           ;hardware.c: 140: union Timers timer;
 18843                           ;hardware.c: 142: timer.lt = timer0;
 18844                           
 18845                           ;incstack = 0
 18846  00502C  C001  F003         	movff	i2write_timer_zero@timer0,i2write_timer_zero@timer
 18847  005030  C002  F004         	movff	i2write_timer_zero@timer0+1,i2write_timer_zero@timer+1
 18848                           
 18849                           ;hardware.c: 144: TMR0H = timer.bt[1];
 18850  005034  C004  FFD7         	movff	i2write_timer_zero@timer+1,4055	;volatile
 18851                           
 18852                           ;hardware.c: 145: TMR0L = timer.bt[0];
 18853  005038  C003  FFD6         	movff	i2write_timer_zero@timer,4054	;volatile
 18854  00503C  0012               	return		;funcret
 18855  00503E                     __end_ofi2_write_timer_zero:
 18856                           	opt stack 0
 18857                           tosu	equ	0xFFF
 18858                           tosh	equ	0xFFE
 18859                           tosl	equ	0xFFD
 18860                           pclatu	equ	0xFFB
 18861                           pclath	equ	0xFFA
 18862                           pcl	equ	0xFF9
 18863                           tblptru	equ	0xFF8
 18864                           tblptrh	equ	0xFF7
 18865                           tblptrl	equ	0xFF6
 18866                           tablat	equ	0xFF5
 18867                           prodh	equ	0xFF4
 18868                           prodl	equ	0xFF3
 18869                           intcon	equ	0xFF2
 18870                           intcon2	equ	0xFF1
 18871                           intcon3	equ	0xFF0
 18872                           indf0	equ	0xFEF
 18873                           postinc0	equ	0xFEE
 18874                           fsr0h	equ	0xFEA
 18875                           fsr0l	equ	0xFE9
 18876                           wreg	equ	0xFE8
 18877                           indf1	equ	0xFE7
 18878                           postinc1	equ	0xFE6
 18879                           postdec1	equ	0xFE5
 18880                           plusw1	equ	0xFE3
 18881                           fsr1h	equ	0xFE2
 18882                           fsr1l	equ	0xFE1
 18883                           indf2	equ	0xFDF
 18884                           postinc2	equ	0xFDE
 18885                           postdec2	equ	0xFDD
 18886                           plusw2	equ	0xFDB
 18887                           fsr2h	equ	0xFDA
 18888                           fsr2l	equ	0xFD9
 18889                           status	equ	0xFD8
 18890                           
 18891 ;; *************** function _recebe_dado_uart *****************
 18892 ;; Defined at:
 18893 ;;		line 138 in file "bibliotecas/uart.c"
 18894 ;; Parameters:    Size  Location     Type
 18895 ;;		None
 18896 ;; Auto vars:     Size  Location     Type
 18897 ;;		None
 18898 ;; Return value:  Size  Location     Type
 18899 ;;                  1    wreg      unsigned char 
 18900 ;; Registers used:
 18901 ;;		wreg, status,2
 18902 ;; Tracked objects:
 18903 ;;		On entry : 0/0
 18904 ;;		On exit  : 0/0
 18905 ;;		Unchanged: 0/0
 18906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18907 ;;      Params:         0       0       0       0       0       0       0       0       0
 18908 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18909 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18910 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18911 ;;Total ram usage:        0 bytes
 18912 ;; Hardware stack levels used:    1
 18913 ;; This function calls:
 18914 ;;		Nothing
 18915 ;; This function is called by:
 18916 ;;		_isr
 18917 ;;		_recebe_string_uart
 18918 ;; This function uses a non-reentrant model
 18919 ;;
 18920                           
 18921                           	psect	text68
 18922  00503E                     __ptext68:
 18923                           	opt stack 0
 18924  00503E                     _recebe_dado_uart:
 18925                           	opt stack 16
 18926  00503E                     i2l1095:
 18927  00503E  AA9E               	btfss	3998,5,c	;volatile
 18928  005040  D7FE               	goto	i2l1095
 18929                           
 18930                           ;uart.c: 141: if(RCSTAbits.OERR)
 18931  005042  A2AB               	btfss	4011,1,c	;volatile
 18932  005044  D003               	goto	i2l7891
 18933                           
 18934                           ;uart.c: 142: {
 18935                           ;uart.c: 143: CREN = 0;
 18936  005046  98AB               	bcf	4011,4,c	;volatile
 18937                           
 18938                           ;uart.c: 144: __nop();
 18939  005048  F000               	nop	
 18940                           
 18941                           ;uart.c: 145: CREN=1;
 18942  00504A  88AB               	bsf	4011,4,c	;volatile
 18943  00504C                     i2l7891:
 18944                           
 18945                           ;uart.c: 146: }
 18946                           ;uart.c: 147: return(RCREG);
 18947  00504C  50AE               	movf	4014,w,c	;volatile
 18948  00504E  0012               	return	
 18949  005050                     __end_of_recebe_dado_uart:
 18950                           	opt stack 0
 18951                           tosu	equ	0xFFF
 18952                           tosh	equ	0xFFE
 18953                           tosl	equ	0xFFD
 18954                           pclatu	equ	0xFFB
 18955                           pclath	equ	0xFFA
 18956                           pcl	equ	0xFF9
 18957                           tblptru	equ	0xFF8
 18958                           tblptrh	equ	0xFF7
 18959                           tblptrl	equ	0xFF6
 18960                           tablat	equ	0xFF5
 18961                           prodh	equ	0xFF4
 18962                           prodl	equ	0xFF3
 18963                           intcon	equ	0xFF2
 18964                           intcon2	equ	0xFF1
 18965                           intcon3	equ	0xFF0
 18966                           indf0	equ	0xFEF
 18967                           postinc0	equ	0xFEE
 18968                           fsr0h	equ	0xFEA
 18969                           fsr0l	equ	0xFE9
 18970                           wreg	equ	0xFE8
 18971                           indf1	equ	0xFE7
 18972                           postinc1	equ	0xFE6
 18973                           postdec1	equ	0xFE5
 18974                           plusw1	equ	0xFE3
 18975                           fsr1h	equ	0xFE2
 18976                           fsr1l	equ	0xFE1
 18977                           indf2	equ	0xFDF
 18978                           postinc2	equ	0xFDE
 18979                           postdec2	equ	0xFDD
 18980                           plusw2	equ	0xFDB
 18981                           fsr2h	equ	0xFDA
 18982                           fsr2l	equ	0xFD9
 18983                           status	equ	0xFD8
 18984                           tosu	equ	0xFFF
 18985                           tosh	equ	0xFFE
 18986                           tosl	equ	0xFFD
 18987                           pclatu	equ	0xFFB
 18988                           pclath	equ	0xFFA
 18989                           pcl	equ	0xFF9
 18990                           tblptru	equ	0xFF8
 18991                           tblptrh	equ	0xFF7
 18992                           tblptrl	equ	0xFF6
 18993                           tablat	equ	0xFF5
 18994                           prodh	equ	0xFF4
 18995                           prodl	equ	0xFF3
 18996                           intcon	equ	0xFF2
 18997                           intcon2	equ	0xFF1
 18998                           intcon3	equ	0xFF0
 18999                           indf0	equ	0xFEF
 19000                           postinc0	equ	0xFEE
 19001                           fsr0h	equ	0xFEA
 19002                           fsr0l	equ	0xFE9
 19003                           wreg	equ	0xFE8
 19004                           indf1	equ	0xFE7
 19005                           postinc1	equ	0xFE6
 19006                           postdec1	equ	0xFE5
 19007                           plusw1	equ	0xFE3
 19008                           fsr1h	equ	0xFE2
 19009                           fsr1l	equ	0xFE1
 19010                           indf2	equ	0xFDF
 19011                           postinc2	equ	0xFDE
 19012                           postdec2	equ	0xFDD
 19013                           plusw2	equ	0xFDB
 19014                           fsr2h	equ	0xFDA
 19015                           fsr2l	equ	0xFD9
 19016                           status	equ	0xFD8
 19017                           
 19018                           	psect	text69
 19019  000000                     __ptext69:
 19020                           	opt stack 0
 19021                           tosu	equ	0xFFF
 19022                           tosh	equ	0xFFE
 19023                           tosl	equ	0xFFD
 19024                           pclatu	equ	0xFFB
 19025                           pclath	equ	0xFFA
 19026                           pcl	equ	0xFF9
 19027                           tblptru	equ	0xFF8
 19028                           tblptrh	equ	0xFF7
 19029                           tblptrl	equ	0xFF6
 19030                           tablat	equ	0xFF5
 19031                           prodh	equ	0xFF4
 19032                           prodl	equ	0xFF3
 19033                           intcon	equ	0xFF2
 19034                           intcon2	equ	0xFF1
 19035                           intcon3	equ	0xFF0
 19036                           indf0	equ	0xFEF
 19037                           postinc0	equ	0xFEE
 19038                           fsr0h	equ	0xFEA
 19039                           fsr0l	equ	0xFE9
 19040                           wreg	equ	0xFE8
 19041                           indf1	equ	0xFE7
 19042                           postinc1	equ	0xFE6
 19043                           postdec1	equ	0xFE5
 19044                           plusw1	equ	0xFE3
 19045                           fsr1h	equ	0xFE2
 19046                           fsr1l	equ	0xFE1
 19047                           indf2	equ	0xFDF
 19048                           postinc2	equ	0xFDE
 19049                           postdec2	equ	0xFDD
 19050                           plusw2	equ	0xFDB
 19051                           fsr2h	equ	0xFDA
 19052                           fsr2l	equ	0xFD9
 19053                           status	equ	0xFD8
 19054                           
 19055                           	psect	rparam
 19056  0000                     tosu	equ	0xFFF
 19057                           tosh	equ	0xFFE
 19058                           tosl	equ	0xFFD
 19059                           pclatu	equ	0xFFB
 19060                           pclath	equ	0xFFA
 19061                           pcl	equ	0xFF9
 19062                           tblptru	equ	0xFF8
 19063                           tblptrh	equ	0xFF7
 19064                           tblptrl	equ	0xFF6
 19065                           tablat	equ	0xFF5
 19066                           prodh	equ	0xFF4
 19067                           prodl	equ	0xFF3
 19068                           intcon	equ	0xFF2
 19069                           intcon2	equ	0xFF1
 19070                           intcon3	equ	0xFF0
 19071                           indf0	equ	0xFEF
 19072                           postinc0	equ	0xFEE
 19073                           fsr0h	equ	0xFEA
 19074                           fsr0l	equ	0xFE9
 19075                           wreg	equ	0xFE8
 19076                           indf1	equ	0xFE7
 19077                           postinc1	equ	0xFE6
 19078                           postdec1	equ	0xFE5
 19079                           plusw1	equ	0xFE3
 19080                           fsr1h	equ	0xFE2
 19081                           fsr1l	equ	0xFE1
 19082                           indf2	equ	0xFDF
 19083                           postinc2	equ	0xFDE
 19084                           postdec2	equ	0xFDD
 19085                           plusw2	equ	0xFDB
 19086                           fsr2h	equ	0xFDA
 19087                           fsr2l	equ	0xFD9
 19088                           status	equ	0xFD8
 19089                           
 19090                           	psect	temp
 19091  00004A                     btemp:
 19092                           	opt stack 0
 19093  00004A                     	ds	1
 19094  0000                     int$flags	set	btemp
 19095                           tosu	equ	0xFFF
 19096                           tosh	equ	0xFFE
 19097                           tosl	equ	0xFFD
 19098                           pclatu	equ	0xFFB
 19099                           pclath	equ	0xFFA
 19100                           pcl	equ	0xFF9
 19101                           tblptru	equ	0xFF8
 19102                           tblptrh	equ	0xFF7
 19103                           tblptrl	equ	0xFF6
 19104                           tablat	equ	0xFF5
 19105                           prodh	equ	0xFF4
 19106                           prodl	equ	0xFF3
 19107                           intcon	equ	0xFF2
 19108                           intcon2	equ	0xFF1
 19109                           intcon3	equ	0xFF0
 19110                           indf0	equ	0xFEF
 19111                           postinc0	equ	0xFEE
 19112                           fsr0h	equ	0xFEA
 19113                           fsr0l	equ	0xFE9
 19114                           wreg	equ	0xFE8
 19115                           indf1	equ	0xFE7
 19116                           postinc1	equ	0xFE6
 19117                           postdec1	equ	0xFE5
 19118                           plusw1	equ	0xFE3
 19119                           fsr1h	equ	0xFE2
 19120                           fsr1l	equ	0xFE1
 19121                           indf2	equ	0xFDF
 19122                           postinc2	equ	0xFDE
 19123                           postdec2	equ	0xFDD
 19124                           plusw2	equ	0xFDB
 19125                           fsr2h	equ	0xFDA
 19126                           fsr2l	equ	0xFD9
 19127                           status	equ	0xFD8


Data Sizes:
    Strings     340
    Constant    152
    Data        29
    BSS         964
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      73
    BANK0           160    153     160
    BANK1           256     89     233
    BANK2           256     33     255
    BANK3           256      0      48
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    escalonador$3371	PTR FTN()void  size(2) Largest target is 1
		 -> SDCard(), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rd	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@fn(COMRAM[12]), f_utime@fn(COMRAM[12]), 
		 -> f_chmod@fn(COMRAM[12]), f_mkdir@fn(COMRAM[12]), f_unlink@fn(COMRAM[12]), f_stat@fn(COMRAM[12]), 
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK1[12]), NULL(NULL[0]), gps@gps_buffer(COMRAM[15]), 

    memset@p	PTR unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@fn(COMRAM[12]), f_utime@fn(COMRAM[12]), 
		 -> f_chmod@fn(COMRAM[12]), f_mkdir@fn(COMRAM[12]), f_unlink@fn(COMRAM[12]), f_stat@fn(COMRAM[12]), 
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK1[12]), NULL(NULL[0]), gps@gps_buffer(COMRAM[15]), 

    memcpy@d1	PTR void  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@direntry(COMRAM[21]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@direntry(COMRAM[21]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@direntry(COMRAM[21]), f_rename@fn(COMRAM[12]), 
		 -> f_mkdir@fn(COMRAM[12]), f_open@fn(BANK1[12]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@direntry(COMRAM[21]), f_rename@fn(COMRAM[12]), 
		 -> f_mkdir@fn(COMRAM[12]), f_open@fn(BANK1[12]), NULL(NULL[0]), 

    memcmp@s2	PTR const void  size(2) Largest target is 12
		 -> f_rename@fn(COMRAM[12]), f_utime@fn(COMRAM[12]), f_chmod@fn(COMRAM[12]), f_mkdir@fn(COMRAM[12]), 
		 -> f_unlink@fn(COMRAM[12]), f_stat@fn(COMRAM[12]), f_opendir@fn(COMRAM[12]), f_open@fn(BANK1[12]), 
		 -> STR_21(CODE[6]), STR_20(CODE[4]), 

    memcmp@s1	PTR const void  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), NULL(NULL[0]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    fil.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    fil.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    p_tarefas	PTR FTN()void [2] size(2) Largest target is 1
		 -> SDCard(), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_truncate@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_truncate@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_readdir@dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_opendir@dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_lseek@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_close@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_close@fp	PTR struct _FIL size(2) Largest target is 34
		 -> SDCard@fil(BANK2[32]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_sync@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_sync@fp	PTR struct _FIL size(2) Largest target is 34
		 -> SDCard@fil(BANK2[32]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_write@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_read@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@direntry(COMRAM[21]), NULL(NULL[0]), 

    f_open@dir	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_28(CODE[10]), 

    S981_FIL$dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    S981_FIL$fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_open@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_open@fp	PTR struct _FIL size(2) Largest target is 34
		 -> SDCard@fil(BANK2[32]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_mount@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), 

    validate@fs	PTR const struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    auto_mount@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    auto_mount@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_rename@path_old(COMRAM[2]), f_utime@path(COMRAM[2]), f_chmod@path(COMRAM[2]), f_mkdir@path(COMRAM[2]), 
		 -> f_unlink@path(COMRAM[2]), f_getfree@drv(COMRAM[2]), f_stat@path(COMRAM[2]), f_opendir@path(COMRAM[2]), 
		 -> f_open@path(BANK1[2]), 

    auto_mount@p	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_28(CODE[10]), 

    check_fs@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    reserve_direntry@dir	PTR PTR unsigned char  size(2) Largest target is 2
		 -> f_rename@dir_new(COMRAM[2]), f_mkdir@dir(COMRAM[2]), f_open@dir(BANK1[2]), 

    reserve_direntry@dptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), NULL(NULL[0]), 

    reserve_direntry@dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    reserve_direntry@dj	PTR struct _DIR size(2) Largest target is 19
		 -> f_rename@dj(COMRAM[18]), f_mkdir@dj(COMRAM[18]), f_open@dj(BANK1[18]), 

    reserve_direntry@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    trace_path@fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_rename@fn(COMRAM[12]), f_utime@fn(COMRAM[12]), f_chmod@fn(COMRAM[12]), f_mkdir@fn(COMRAM[12]), 
		 -> f_unlink@fn(COMRAM[12]), f_stat@fn(COMRAM[12]), f_opendir@fn(COMRAM[12]), f_open@fn(BANK1[12]), 

    trace_path@dir	PTR PTR unsigned char  size(2) Largest target is 2
		 -> f_rename@dir_new(COMRAM[2]), f_rename@dir_old(COMRAM[2]), f_utime@dir(COMRAM[2]), f_chmod@dir(COMRAM[2]), 
		 -> f_mkdir@dir(COMRAM[2]), f_unlink@dir(COMRAM[2]), f_stat@dir(COMRAM[2]), f_opendir@dir(COMRAM[2]), 
		 -> f_open@dir(BANK1[2]), 

    trace_path@path	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_28(CODE[10]), 

    trace_path@dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    trace_path@dj	PTR struct _DIR size(2) Largest target is 19
		 -> f_rename@dj(COMRAM[18]), f_utime@dj(COMRAM[18]), f_chmod@dj(COMRAM[18]), f_mkdir@dj(COMRAM[18]), 
		 -> f_unlink@dj(COMRAM[18]), f_stat@dj(COMRAM[18]), f_open@dj(BANK1[18]), 

    trace_path@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    trace_path@dptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), NULL(NULL[0]), 

    make_dirfile@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> trace_path@path(BANK0[2]), 

    make_dirfile@dirname	PTR unsigned char  size(2) Largest target is 12
		 -> f_rename@fn(COMRAM[12]), f_utime@fn(COMRAM[12]), f_chmod@fn(COMRAM[12]), f_mkdir@fn(COMRAM[12]), 
		 -> f_unlink@fn(COMRAM[12]), f_stat@fn(COMRAM[12]), f_opendir@fn(COMRAM[12]), f_open@fn(BANK1[12]), 

    S946_DIR$fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    next_dir_entry@dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    next_dir_entry@dj	PTR struct _DIR size(2) Largest target is 19
		 -> f_rename@dj(COMRAM[18]), f_utime@dj(COMRAM[18]), f_chmod@dj(COMRAM[18]), f_mkdir@dj(COMRAM[18]), 
		 -> f_unlink@dj(COMRAM[18]), f_stat@dj(COMRAM[18]), f_open@dj(BANK1[18]), 

    clust2sect@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    create_chain@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    remove_chain@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    put_cluster@p	PTR unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), NULL(NULL[0]), 

    put_cluster@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    get_cluster@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    sync@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    FatFs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    move_window@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    escreve_frase_ram_lcd@buffer	PTR unsigned char  size(2) Largest target is 2047
		 -> STR_31(CODE[5]), STR_30(CODE[18]), buff(BANK2[20]), STR_29(CODE[10]), 
		 -> STR_27(CODE[16]), STR_26(CODE[16]), mensagem_inicial@msg_dois(BANK0[17]), mensagem_inicial@msg_linha_um(BANK0[17]), 
		 -> STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[12]), escreve_inteiro_lcd@texto(BANK0[7]), RAM(DATA[2047]), STR_17(CODE[14]), 
		 -> STR_16(CODE[19]), STR_15(CODE[17]), STR_14(CODE[16]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[16]), 
		 -> STR_8(CODE[11]), STR_6(CODE[5]), STR_4(CODE[5]), gps@gps_buffer(COMRAM[15]), 
		 -> dado_buffer(BANK1[7]), STR_2(CODE[6]), data_buffer(BANK1[15]), STR_1(CODE[6]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    sdc_disk_write@p_buff	PTR const unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), NULL(NULL[0]), 

    sdc_disk_read@p_buff	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), NULL(NULL[0]), 

    data_buff	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@fn(COMRAM[12]), f_utime@fn(COMRAM[12]), 
		 -> f_chmod@fn(COMRAM[12]), f_mkdir@fn(COMRAM[12]), f_unlink@fn(COMRAM[12]), f_stat@fn(COMRAM[12]), 
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK1[12]), NULL(NULL[0]), gps@gps_buffer(COMRAM[15]), 


Critical Paths under _main in COMRAM

    _mensagem_inicial->_posicao_cursor_lcd
    _init_lcd->_escreve_cmd_lcd
    _escreve_cmd_lcd->_delay
    _config_timer_zero->_write_timer_zero
    _SDCard->_f_close
    _make_dirfile->_memset
    _reserve_direntry->_disk_write
    _clust2sect->___lmul
    _disk_initialize->_sdc_disk_initialize
    _sdc_disk_initialize->_escreve_inteiro_lcd
    _check_fs->_disk_read
    _validate->_disk_status
    _disk_status->_sdc_disk_status
    _move_window->_disk_read
    _move_window->_disk_write
    _disk_write->_sdc_disk_write
    _sdc_disk_write->_command
    _disk_read->_sdc_disk_read
    _sdc_disk_read->_escreve_inteiro_lcd
    _response->_recebe_dado_SPI
    _proceed->_escreve_dado_SPI
    _posicao_cursor_lcd->_endereco_cursor_lcd
    _endereco_cursor_lcd->_delay
    _escreve_inteiro_lcd->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _escreve_frase_ram_lcd->_escreve_caractere_lcd
    _escreve_caractere_lcd->_delay
    _dummy_clocks->_escreve_dado_SPI
    _command->_escreve_dado_SPI

Critical Paths under _isr in COMRAM

    _isr->i2_write_timer_zero

Critical Paths under _main in BANK0

    _escalonador->_SDCard
    _f_open->_trace_path
    _trace_path->_next_dir_entry
    _reserve_direntry->_create_chain
    _next_dir_entry->_get_cluster
    _create_chain->_get_cluster
    _remove_chain->_get_cluster
    _put_cluster->_move_window
    _get_cluster->_move_window
    _auto_mount->_check_fs
    _disk_initialize->_sdc_disk_initialize
    _sdc_disk_initialize->_escreve_inteiro_lcd
    _check_fs->_disk_read
    _f_close->_f_sync
    _f_sync->_sync
    _sync->_move_window
    _move_window->_disk_read
    _disk_read->_sdc_disk_read
    _sdc_disk_read->_escreve_inteiro_lcd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_escalonador
    _SDCard->_f_open
    _f_open->_reserve_direntry

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _escalonador->_SDCard

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  670114
                        _escalonador
                    _inicializa_shrc
                 _inicializa_tarefas
                      _init_hardware
                           _init_lcd
                   _mensagem_inicial
 ---------------------------------------------------------------------------------
 (1) _mensagem_inicial                                    36    36      0    9163
                                             27 COMRAM     2     2      0
                                              0 BANK0     34    34      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             1     1      0     613
                                             24 COMRAM     1     1      0
                              _delay
                    _escreve_cmd_lcd
 ---------------------------------------------------------------------------------
 (2) _escreve_cmd_lcd                                      1     1      0     477
                                             23 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     195
                  _config_timer_dois
                  _config_timer_zero
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     195
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     4     2      2     195
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _config_timer_dois                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_shrc                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0  660143
                                             86 BANK1      3     3      0
                             _SDCard *
 ---------------------------------------------------------------------------------
 (2) _SDCard                                              39    39      0  659920
                                            151 BANK0      2     2      0
                                              0 BANK2     33    33      0
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                            _f_close
                            _f_mount
                             _f_open
                 _posicao_cursor_lcd
                            _proceed
 ---------------------------------------------------------------------------------
 (3) _f_open                                              72    67      5  553587
                                             14 BANK1     72    67      5
                         _auto_mount
                        _get_fattime
                             _memcpy
                             _memset
                        _move_window
                       _remove_chain
                   _reserve_direntry
                         _trace_path
 ---------------------------------------------------------------------------------
 (4) _trace_path                                          33    25      8  104464
                                            131 BANK0     20    12      8
                                              0 BANK1     13    13      0
                         _clust2sect
                       _make_dirfile
                             _memcmp
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (5) _make_dirfile                                        13     9      4    4103
                                             29 COMRAM    13     9      4
                             _memset
 ---------------------------------------------------------------------------------
 (4) _reserve_direntry                                    20    16      4  211683
                                            142 BANK0      6     2      4
                                              0 BANK1     14    14      0
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memset
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (5) _next_dir_entry                                      15    13      2   50424
                                            116 BANK0     15    13      2
                         _clust2sect
                        _get_cluster
 ---------------------------------------------------------------------------------
 (6) _clust2sect                                          11     7      4    2053
                                             33 COMRAM    11     7      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _create_chain                                        26    22      4   96834
                                            116 BANK0     26    22      4
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (4) _remove_chain                                        14    10      4   95951
                                            116 BANK0     14    10      4
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (6) _put_cluster                                         27    19      8   47856
                                             58 BANK0     27    19      8
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (6) _get_cluster                                         58    54      4   47447
                                             58 BANK0     58    54      4
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    3438
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6    2334
                                             21 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (4) _auto_mount                                          51    48      3   91063
                                             49 BANK0     51    48      3
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                             _memset
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2567
                                             21 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _disk_initialize                                      4     4      0   21200
                                             48 COMRAM     2     2      0
                _sdc_disk_initialize
 ---------------------------------------------------------------------------------
 (6) _sdc_disk_initialize                                 21    21      0   21070
                                             47 COMRAM     1     1      0
                                              7 BANK0      8     8      0
                            _command
                       _dummy_clocks
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                 _posicao_cursor_lcd
                           _response
 ---------------------------------------------------------------------------------
 (5) _check_fs                                            14    10      4   42884
                                             35 BANK0     14    10      4
                          _disk_read
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                             _memcmp
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (5) _memcmp                                               9     3      6     971
                                             21 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8     812
                                             21 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1525
                                             21 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _f_mount                                              3     1      2     214
                                             21 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _f_close                                              3     1      2   87709
                                             52 COMRAM     1     1      0
                                             73 BANK0      2     0      2
                             _f_sync
 ---------------------------------------------------------------------------------
 (4) _f_sync                                              13    11      2   87516
                                             60 BANK0     13    11      2
                        _get_fattime
                        _move_window
                               _sync
                           _validate
 ---------------------------------------------------------------------------------
 (5) _validate                                             6     2      4    1430
                                             28 COMRAM     6     2      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (6) _disk_status                                          5     5      0     226
                                             23 COMRAM     5     5      0
                    _sdc_disk_status
 ---------------------------------------------------------------------------------
 (7) _sdc_disk_status                                      4     4      0      34
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _sync                                                 2     2      0   42549
                                             58 BANK0      2     2      0
                         _disk_ioctl
                        _move_window
 ---------------------------------------------------------------------------------
 (7) _move_window                                         23    19      4   42211
                                             35 BANK0     23    19      4
                          _disk_read
                         _disk_write
 ---------------------------------------------------------------------------------
 (8) _disk_write                                          12     5      7   16035
                                             47 COMRAM     5     5      0
                                              0 BANK0      7     0      7
                     _sdc_disk_write
 ---------------------------------------------------------------------------------
 (9) _sdc_disk_write                                      19    12      7   14335
                                             30 COMRAM    17    10      7
                            ___awdiv
                            _command
                       _dummy_clocks
                   _escreve_dado_SPI
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                           _response
 ---------------------------------------------------------------------------------
 (10) ___awdiv                                             8     4      4    2105
                                             21 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) _disk_read                                           12     5      7   23350
                                             51 COMRAM     1     1      0
                                             24 BANK0     11     4      7
                      _sdc_disk_read
 ---------------------------------------------------------------------------------
 (9) _sdc_disk_read                                       26    19      7   21883
                                             47 COMRAM     4     4      0
                                              7 BANK0     17    10      7
                            _command
                       _dummy_clocks
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (10) _response                                            1     1      0     102
                                             24 COMRAM     1     1      0
                    _recebe_dado_SPI
 ---------------------------------------------------------------------------------
 (11) _recebe_dado_SPI                                     3     3      0      68
                                             21 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _proceed                                              0     0      0     102
                   _escreve_dado_SPI
 ---------------------------------------------------------------------------------
 (2) _posicao_cursor_lcd                                   3     2      1    5097
                                             24 COMRAM     3     2      1
                _endereco_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _endereco_cursor_lcd                                  1     1      0     353
                                             23 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (10) _escreve_inteiro_lcd                                 9     7      2    9275
                                             45 COMRAM     2     0      2
                                              0 BANK0      7     7      0
              _escreve_frase_ram_lcd
                               _itoa
 ---------------------------------------------------------------------------------
 (11) _itoa                                                8     2      6    3936
                                             37 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (12) _utoa                                                9     3      6    3163
                                             28 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4    1132
                                             21 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (13) ___lwdiv                                             7     3      4    1321
                                             21 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _escreve_frase_ram_lcd                                2     0      2    3509
                                             24 COMRAM     2     0      2
              _escreve_caractere_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_caractere_lcd                                1     1      0     384
                                             23 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     2      0     136
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _dummy_clocks                                        5     5      0     170
                                             23 COMRAM     5     5      0
                   _escreve_dado_SPI
 ---------------------------------------------------------------------------------
 (10) _command                                             7     2      5    2404
                                             23 COMRAM     7     2      5
                   _escreve_dado_SPI
 ---------------------------------------------------------------------------------
 (4) _escreve_dado_SPI                                     2     2      0     102
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _disk_ioctl                                           7     4      3     304
                                             21 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (4) _get_fattime                                         51    47      4     201
                                             21 COMRAM    13     9      4
                                              0 BANK0     38    38      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _isr                                                17    17      0     183
                                              4 COMRAM    17    17      0
                   _recebe_dado_uart
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (15) i2_write_timer_zero                                  4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _recebe_dado_uart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _escalonador
     _SDCard *
       _escreve_frase_ram_lcd
         _escreve_caractere_lcd
           _delay
       _escreve_inteiro_lcd
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
       _f_close
         _f_sync
           _get_fattime
           _move_window
             _disk_read
               _sdc_disk_read
                 _command
                   _escreve_dado_SPI
                 _dummy_clocks
                   _escreve_dado_SPI
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _escreve_inteiro_lcd
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _itoa
                     _utoa
                       ___lwdiv
                       ___lwmod
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _proceed
                   _escreve_dado_SPI
                 _response
                   _recebe_dado_SPI
             _disk_write
               _sdc_disk_write
                 ___awdiv
                 _command
                   _escreve_dado_SPI
                 _dummy_clocks
                   _escreve_dado_SPI
                 _escreve_dado_SPI
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _response
                   _recebe_dado_SPI
           _sync
             _disk_ioctl
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _escreve_dado_SPI
                   _dummy_clocks
                     _escreve_dado_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _escreve_dado_SPI
                   _response
                     _recebe_dado_SPI
               _disk_write
                 _sdc_disk_write
                   ___awdiv
                   _command
                     _escreve_dado_SPI
                   _dummy_clocks
                     _escreve_dado_SPI
                   _escreve_dado_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _response
                     _recebe_dado_SPI
           _validate
             _disk_status
               _sdc_disk_status
       _f_mount
       _f_open
         _auto_mount
           ___lldiv
           ___lmul
           _check_fs
             _disk_read
               _sdc_disk_read
                 _command
                   _escreve_dado_SPI
                 _dummy_clocks
                   _escreve_dado_SPI
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _escreve_inteiro_lcd
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _itoa
                     _utoa
                       ___lwdiv
                       ___lwmod
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _proceed
                   _escreve_dado_SPI
                 _response
                   _recebe_dado_SPI
             _escreve_frase_ram_lcd
               _escreve_caractere_lcd
                 _delay
             _escreve_inteiro_lcd
               _escreve_frase_ram_lcd
                 _escreve_caractere_lcd
                   _delay
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
             _memcmp
             _posicao_cursor_lcd
               _endereco_cursor_lcd
                 _delay
           _disk_initialize
             _sdc_disk_initialize
               _command
                 _escreve_dado_SPI
               _dummy_clocks
                 _escreve_dado_SPI
               _escreve_frase_ram_lcd
                 _escreve_caractere_lcd
                   _delay
               _escreve_inteiro_lcd
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
               _posicao_cursor_lcd
                 _endereco_cursor_lcd
                   _delay
               _response
                 _recebe_dado_SPI
           _escreve_frase_ram_lcd
             _escreve_caractere_lcd
               _delay
           _escreve_inteiro_lcd
             _escreve_frase_ram_lcd
               _escreve_caractere_lcd
                 _delay
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
           _memset
           _posicao_cursor_lcd
             _endereco_cursor_lcd
               _delay
         _get_fattime
         _memcpy
         _memset
         _move_window
           _disk_read
             _sdc_disk_read
               _command
                 _escreve_dado_SPI
               _dummy_clocks
                 _escreve_dado_SPI
               _escreve_frase_ram_lcd
                 _escreve_caractere_lcd
                   _delay
               _escreve_inteiro_lcd
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
               _posicao_cursor_lcd
                 _endereco_cursor_lcd
                   _delay
               _proceed
                 _escreve_dado_SPI
               _response
                 _recebe_dado_SPI
           _disk_write
             _sdc_disk_write
               ___awdiv
               _command
                 _escreve_dado_SPI
               _dummy_clocks
                 _escreve_dado_SPI
               _escreve_dado_SPI
               _escreve_frase_ram_lcd
                 _escreve_caractere_lcd
                   _delay
               _posicao_cursor_lcd
                 _endereco_cursor_lcd
                   _delay
               _response
                 _recebe_dado_SPI
         _remove_chain
           _get_cluster
             ___wmul
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _escreve_dado_SPI
                   _dummy_clocks
                     _escreve_dado_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _escreve_dado_SPI
                   _response
                     _recebe_dado_SPI
               _disk_write
                 _sdc_disk_write
                   ___awdiv
                   _command
                     _escreve_dado_SPI
                   _dummy_clocks
                     _escreve_dado_SPI
                   _escreve_dado_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _response
                     _recebe_dado_SPI
           _put_cluster
             ___wmul
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _escreve_dado_SPI
                   _dummy_clocks
                     _escreve_dado_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _escreve_dado_SPI
                   _response
                     _recebe_dado_SPI
               _disk_write
                 _sdc_disk_write
                   ___awdiv
                   _command
                     _escreve_dado_SPI
                   _dummy_clocks
                     _escreve_dado_SPI
                   _escreve_dado_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _response
                     _recebe_dado_SPI
         _reserve_direntry
           _clust2sect
             ___lmul
           _create_chain
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _escreve_dado_SPI
                     _dummy_clocks
                       _escreve_dado_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _escreve_dado_SPI
                     _response
                       _recebe_dado_SPI
                 _disk_write
                   _sdc_disk_write
                     ___awdiv
                     _command
                       _escreve_dado_SPI
                     _dummy_clocks
                       _escreve_dado_SPI
                     _escreve_dado_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _response
                       _recebe_dado_SPI
             _put_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _escreve_dado_SPI
                     _dummy_clocks
                       _escreve_dado_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _escreve_dado_SPI
                     _response
                       _recebe_dado_SPI
                 _disk_write
                   _sdc_disk_write
                     ___awdiv
                     _command
                       _escreve_dado_SPI
                     _dummy_clocks
                       _escreve_dado_SPI
                     _escreve_dado_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _response
                       _recebe_dado_SPI
           _disk_write
             _sdc_disk_write
               ___awdiv
               _command
                 _escreve_dado_SPI
               _dummy_clocks
                 _escreve_dado_SPI
               _escreve_dado_SPI
               _escreve_frase_ram_lcd
                 _escreve_caractere_lcd
                   _delay
               _posicao_cursor_lcd
                 _endereco_cursor_lcd
                   _delay
               _response
                 _recebe_dado_SPI
           _memset
           _move_window
             _disk_read
               _sdc_disk_read
                 _command
                   _escreve_dado_SPI
                 _dummy_clocks
                   _escreve_dado_SPI
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _escreve_inteiro_lcd
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _itoa
                     _utoa
                       ___lwdiv
                       ___lwmod
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _proceed
                   _escreve_dado_SPI
                 _response
                   _recebe_dado_SPI
             _disk_write
               _sdc_disk_write
                 ___awdiv
                 _command
                   _escreve_dado_SPI
                 _dummy_clocks
                   _escreve_dado_SPI
                 _escreve_dado_SPI
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _response
                   _recebe_dado_SPI
           _next_dir_entry
             _clust2sect
               ___lmul
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _escreve_dado_SPI
                     _dummy_clocks
                       _escreve_dado_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _escreve_dado_SPI
                     _response
                       _recebe_dado_SPI
                 _disk_write
                   _sdc_disk_write
                     ___awdiv
                     _command
                       _escreve_dado_SPI
                     _dummy_clocks
                       _escreve_dado_SPI
                     _escreve_dado_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _response
                       _recebe_dado_SPI
         _trace_path
           _clust2sect
             ___lmul
           _make_dirfile
             _memset
           _memcmp
           _move_window
             _disk_read
               _sdc_disk_read
                 _command
                   _escreve_dado_SPI
                 _dummy_clocks
                   _escreve_dado_SPI
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _escreve_inteiro_lcd
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _itoa
                     _utoa
                       ___lwdiv
                       ___lwmod
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _proceed
                   _escreve_dado_SPI
                 _response
                   _recebe_dado_SPI
             _disk_write
               _sdc_disk_write
                 ___awdiv
                 _command
                   _escreve_dado_SPI
                 _dummy_clocks
                   _escreve_dado_SPI
                 _escreve_dado_SPI
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _response
                   _recebe_dado_SPI
           _next_dir_entry
             _clust2sect
               ___lmul
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _escreve_dado_SPI
                     _dummy_clocks
                       _escreve_dado_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _escreve_dado_SPI
                     _response
                       _recebe_dado_SPI
                 _disk_write
                   _sdc_disk_write
                     ___awdiv
                     _command
                       _escreve_dado_SPI
                     _dummy_clocks
                       _escreve_dado_SPI
                     _escreve_dado_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _response
                       _recebe_dado_SPI
       _posicao_cursor_lcd
         _endereco_cursor_lcd
           _delay
       _proceed
         _escreve_dado_SPI
   _inicializa_shrc
   _inicializa_tarefas
   _init_hardware
     _config_timer_dois
     _config_timer_zero
       _write_timer_zero
     _init_interrupt
     _init_oscilador
     _init_ports
   _init_lcd
     _delay
     _escreve_cmd_lcd
       _delay
   _mensagem_inicial
     _escreve_cmd_lcd
       _delay
     _escreve_frase_ram_lcd
       _escreve_caractere_lcd
         _delay
     _posicao_cursor_lcd
       _endereco_cursor_lcd
         _delay

 _isr (ROOT)
   _recebe_dado_uart
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     228      21       27.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      30      11       18.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100     21      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     59      E9       7       91.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     99      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      49       1       77.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     301      20        0.0%
DATA                 0      0     529       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Mar 02 16:32:37 2022

             next_dir_entry@idx 00E1        __end_of_mensagem_inicial 48A2                               _s 003D  
           next_dir_entry@clust 00DD                ??_init_interrupt 0016    __size_of_escreve_inteiro_lcd 003C  
                  ___awdiv@sign 001B                     __CFG_BOR$ON 000000                              _fs 0330  
                            _rd 0156             ___wmul@multiplicand 0018                     __CFG_BORV$3 000000  
                   _put_cluster 19D0                disk_write@sector 0062   sdc_disk_initialize@count_nosd 0069  
                  ?_escalonador 0001                  create_chain@fs 00E0                disk_write@result 0032  
              ?_inicializa_shrc 0001                             l210 4F20                             l212 4F24  
                           l213 4F28                             l310 45CA                             l135 4C48  
                           l311 45CC                             l312 45E0                             l304 45AC  
                           l313 45E2                             l330 49AA                             l314 45EA  
                           l306 45B6                             l331 49AC                             l315 45EC  
                           l332 49C0                             l244 30F8                             l316 45F4  
                           l308 45C0                             l333 49C2                             l317 45F6  
                           l334 49CA                             l326 4996                             l318 45FE  
                           l335 49CC                             l319 4600                             l336 49D4  
                           l328 49A0                             l264 3EBE                             l361 48D0  
                           l337 49D6                             l345 4922                             l370 4906  
                           l362 48D2                             l338 49DE                             l363 48E6  
                           l355 48B2                             l339 49E0                             l267 3ED0  
                           l364 48E8                             l620 24CE                             l365 48F0  
                           l357 48BC                             l294 4F76                             l366 48F2  
                           l367 48FA                             l359 48C6                             l623 24BE  
                           l296 4F84                             l368 48FC                             l369 4904  
                           l811 0D8A                             l816 0DC2                             l826 10AE  
                           l694 3E10                             l784 050C                             l697 3DBE  
                           l789 0B58                             _PCL 000FF9                             _PR2 000FCB  
                           _E_W 0048                ??_init_oscilador 0016                             _n_s 0049  
                           _isr 0008                             _txt 02B6                    disk_read@res 0082  
                           prod 000FF3                  ??_create_chain 00D8                             tosl 000FFD  
                           wreg 000FE8                    __CFG_FOSC$HS 000000       __size_of_write_timer_zero 0012  
               create_chain@mcl 00DC                 create_chain@ncl 00EA                 create_chain@scl 00E6  
                  __CFG_LVP$OFF 000000         ??_escreve_frase_ram_lcd 001B                    __CFG_WDT$OFF 000000  
                          l1313 3B16                            l1293 4D98                            l1906 471C  
                          l1880 43A8                            l1959 4B42                            l1969 4CF4  
                          ?_isr 0001           _escreve_caractere_lcd 48A2                            STR_1 6257  
                          STR_2 625D                            STR_3 6263                            STR_4 6273  
                          STR_6 626E                            STR_7 6248                            STR_8 6229  
                          STR_9 61FF                  timer_dois@flag 0042                            _BRGH 007D62  
                          _CREN 007D5C                            _T0IF 007F92                            _LATB 000F8A  
                          _PIE1 000F9D               _valor_leitura_adc 0100                            _RCIF 007CF5  
                          _TMR2 000FCC                            _SPEN 007D5F                            _TRMT 007D61  
                          _TXEN 007D65                            _SYNC 007D64                    trace_path@dj 00E3  
                  trace_path@fn 00E5                    trace_path@ds 0179                    trace_path@fs 0177  
                 ?_make_dirfile 001E                            _dado 0043                            _buff 02CA  
                          _main 4EF4                            _fsid 015A                            _itoa 4C7A  
                          fsr0h 000FEA                            fsr1h 000FE2                            indf0 000FEF  
                          fsr2h 000FDA                            fsr0l 000FE9                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            fsr2l 000FD9  
                          btemp 004A                            _utoa 4328                            _sync 4A4A  
                 disk_ioctl@cmd 0016                   disk_read@buff 0078                   disk_ioctl@res 001A  
                 disk_read@pdrv 007F                            prodh 000FF4                            prodl 000FF3  
                          start 000E                   __CFG_IESO$OFF 000000                   __CFG_MCLRE$ON 000000  
                  ___param_bank 000000                           ??_isr 0005        __size_of_recebe_dado_SPI 005C  
                 __CFG_PLLDIV$5 000000                           l10033 4F8A                           l10025 4F7C  
                         l10113 4330                           l10019 4F6E                           l10043 4B10  
                         l10123 436A                           l10211 4998                           l10045 4B18  
                         l11013 1DB4                           l11005 1CB2                           l11021 1F14  
                         l10143 4B4E                           l10055 4B38                           l10047 4B1C  
                         l10071 4CEA                           l10063 4CCA                           l10215 49A2  
                         l11015 1F10                           l11007 1D52                           l11023 1F38  
                         l10081 48B4                           l10065 4CD2                           l10155 4C40  
                         l10147 4B76                           l10067 4CD6                           l11043 446C  
                         l11051 44EC                           l11115 2424                           l11203 38A6  
                         l10085 48BE                           l10245 4C9E                           l10261 493C  
                         l10413 3148                           l10341 4662                           l11125 2488  
                         l11117 2438                           l11037 4212                           l10159 4C4A  
                         l10183 49FA                           l10423 3194                           l10343 466A  
                         l10335 464C                           l11071 4E80                           l11151 25BA  
                         l11207 38F6                           l11311 3DF0                           l11303 3DD8  
                         l11223 3CDC                           l10177 4C70                           l10089 48C8  
                         l10265 494A                           l10257 492E                           l10273 495E  
                         l10601 4582                           l10361 46A2                           l10353 468A  
                         l10345 466E                           l10329 463C                           l11401 4C20  
                         l11049 44E4                           l11065 4E76                           l11129 24DE  
                         l11321 3E0E                           l11313 3DF2                           l10275 497A  
                         l10451 3232                           l10435 31D6                           l10419 3174  
                         l11059 4E6C                           l11171 268A                           l11163 2638  
                         l11139 255A                           l11323 3E12                           l11331 3E32  
                         l11243 3D36                           l12027 4622                           l10269 4958  
                         l10277 497E                           l10461 327A                           l10357 4694  
                         l11093 4A84                           l11421 46CE                           l11077 4E84  
                         l11157 25F8                           l11261 3D72                           l11229 3D10  
                         l11501 20D6                           l10199 4A3E                           l10471 32A4  
                         l10623 480C                           l11407 4C30                           l11423 46DA  
                         l10703 4AC8                           l11175 26E0                           l11191 37AC  
                         l11271 3D90                           l12055 399A                           l10289 4DA6  
                         l10385 30AE                           l10561 3F6A                           l10617 47E0  
                         l10609 47B0                           l11433 470E                           l11425 46DE  
                         l10713 4EB6                           l11601 28F0                           l11281 3DA6  
                         l11273 3D96                           l11265 3D7E                           l11257 3D66  
                         l10547 3F08                           l11099 4AA0                           l10643 5004  
                         l10723 4D4E                           l11355 35B2                           l11515 2174  
                         l11507 2102                           l10397 30EA                           l10549 3F34  
                         l10629 4810                           l10661 335E                           l10717 4D42  
                         l11373 368A                           l10709 4EA6                           l11453 4022  
                         l11613 29A0                           l11605 2920                           l11285 3DAE  
                         l11533 21F2                           l10735 4D64                           l10831 2C0A  
                         l11463 40AC                           l11447 3FF2                           l11439 3FB6  
                         l11199 38A2                           l11623 29EC                           l11551 2238  
                         l11527 21CC                           l11519 2184                           l12191 4322  
                         l12175 427C                           l10585 4540                           l10577 450C  
                         l10489 3E6C                           l10665 3414                           l10729 4D60  
                         l10761 2AA0                           l10753 2A74                           l11641 0054  
                         l11633 0024                           l11457 405A                           l11609 2924  
                         l11289 3DB6                           l11545 2220                           l11537 2202  
                         l12097 3ACC                           l10595 457C                           l11387 36FE  
                         l11379 36BA                           l11731 0394                           l11723 0336  
                         l11651 007C                           l11635 002A                           l10907 1402  
                         l11459 406A                           l11619 29DA                           l11571 27CE  
                         l11483 2076                           l12187 42F2                           l12179 4286  
                         l10685 34C8                           l10669 341E                           l10677 347A  
                         l11397 4C1C                           l10773 2AE0                           l10781 2B14  
                         l10941 16F6                           l10933 15D6                           l11493 20B2  
                         l11901 0DBE                           l10687 34E6                           l10863 2CB2  
                         l10847 2C58                           l10791 2B3C                           l10767 2AB4  
                         l11727 0390                           l10927 15A2                           l10951 199A  
                         l11591 2880                           l11567 278C                           l11479 2020  
                         l11911 0F9A                           l10881 2D0A                           l11761 098E  
                         l11753 080A                           l11665 00B0                           l10929 15C6  
                         l10953 19BC                           l10961 19F8                           l11585 286C  
                         l11577 27FA                           l11569 27B8                           l11843 4BC8  
                         l10699 4AB4                           l11915 0F9E                           l11829 3022  
                         l11765 09AE                           l11669 00B4                           l11597 28EC  
                         l11941 108A                           l11917 0FE4                           l10895 4F2C  
                         l11839 4BAA                           l11687 00F8                           l11679 00E4  
                         l11783 4D2C                           l10975 1ACA                           l11935 107A  
                         l11849 4BE8                           l11769 0AEC                           l11777 4D10  
                         l10977 1B12                           l10969 1A74                           l11945 10AA  
                         l11865 0CAE                           l10995 1C18                           l11955 10CC  
                         l11797 2DA6                           l10989 1B8C                           l11885 0D3A  
                         l11877 0D0A                           l10999 1C54                           l11991 45AE  
                         l11897 0D94                           l11995 45B8                           l13597 4F0C  
                         l11999 45C2                           ?_main 0001                           ?_itoa 0026  
               __end_of___awdiv 46AC                           STR_10 612D                           STR_11 612D  
                         STR_20 6278                           STR_12 61BE                           STR_21 6251  
                         STR_13 619C                           STR_14 61EF                           STR_30 618A  
                         STR_22 613E                           STR_31 6269                           STR_15 61AD  
                         STR_23 612B                           STR_16 6177                           STR_24 6151  
                         STR_25 627C                           STR_17 620F                           STR_18 621D  
                         STR_26 61CF                           STR_27 61DF                           STR_19 6164  
                         STR_28 623E                           STR_29 6234                 __end_of___lldiv 472E  
                         ?_utoa 001D                           ?_sync 0001                           u12015 14E0  
                         _T0CON 000FD5                           u12210 44BE                           u12115 1B44  
                         u12060 1716                           u12140 1C38                 ___awdiv@divisor 0018  
                         u12045 15B0                           u11430 4A0E                           u12160 1D72  
                         u12217 44B4                           u12065 170A                           u12145 1C2C  
                         u13025 2124                           u11380 4B6E                           u11444 4A18  
                         u12260 2400                           u11445 4A14                           u12165 1D66  
                         u12085 1A2C                           u11390 4B96                           u11438 4A10  
                         u12190 4498                           u12440 386C                           _T2CON 000FCA  
                         u11561 4DC4                           u12425 37BA                           u13145 281C  
                         u13410 0988                           u11387 4B64                           u13500 2EAA  
                         u13420 09A8                           u12380 26C8                           u11397 4B8C  
                         u11645 3056                           u12197 448E                           u13405 0826  
                         u13510 2F48                           u13520 2F90                           u13505 2E9E  
                         u11770 3310                           u13515 2F3C                           u13525 2F84  
                         u13445 0B92                           u13490 2E62                           u11970 13B8  
                         u12780 3606                           u12950 4042                           u13495 2E56  
                         u16207 43EE                           u12960 4082                           u12865 3B3E  
                         u16217 440A                           u12875 3B64                           u16307 0328  
                         u11995 1436                           u16227 4426                  _data_buffer_32 0296  
                         u12885 3B9C                           u16317 2B52                           u16237 392C  
                         u13950 4836                           u12895 3BBA                           u16407 3E9A  
                         u16327 2B8A                           u16247 398C                           u13960 484E  
                         u16417 3F3A                           u16337 2BA8                           u16257 39B0  
                         u13938 42DE                           u16507 4A38                           u16427 3F9C  
                         u16347 2BDC                           u16267 39D2                           u16517 4D84  
                         u16437 307A                           u16357 2C68                           u16277 3ABC  
                         u16197 488E                           u16527 4C52                           u16447 3166  
                         u16367 2C78                           u16287 3B04                           u16537 4C5A  
                         u16457 321A                           u16377 35A0                           u16297 0170  
                         u16547 4C62                           u16467 32B2                           u16387 3678  
                         u16557 4C6A                           u16477 4A22                           u16397 3E7E  
                         u16487 4A2A                           u16497 4A30                 __end_of___lwdiv 4B4C  
               __end_of___lwmod 4CFE                 ___awdiv@counter 001A                           _RCREG 000FAE  
                         _RCSTA 000FAB                           _TMR0H 000FD7                           _TMR0L 000FD6  
                         _SPBRG 000FAF                   __CFG_USBDIV$1 000000                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96                 __end_of_f_close 4EF4                           _TXREG 000FAD  
                 trace_path@dir 00E9                           _TXSTA 000FAC                           _FatFs 00FC  
                 __CFG_PWRT$OFF 000000             ___lmul@multiplicand 001A      __size_of_config_timer_dois 000C  
               __end_of_f_mount 4BEC                  __CFG_FCMEN$OFF 000000      __size_of_config_timer_zero 001A  
                 get_cluster@bc 00D0                   get_cluster@fs 00D2                   get_cluster@wc 00CA  
               __end_of_command 4E68                           _delay 4F6A                 clust2sect@clust 0022  
               __end_of_dpowers 60BB        __size_of_escreve_cmd_lcd 008C                  ??_make_dirfile 0022  
                disk_ioctl@buff 0017                           pclath 000FFA                  disk_read@count 007E  
                         tablat 000FF5                  disk_ioctl@pdrv 0019                 __end_of_proceed 505E  
                         plusw1 000FE3                           plusw2 000FDB                           utoa@c 0025  
                         utoa@v 0023                           status 000FD8    escreve_dado_SPI@data_to_shrc 0017  
                 disk_write@res 0034                 __initialization 472E             disk_initialize@pdrv 0031  
           disk_initialize@stat 0032                    __end_of_main 4F1C                    clust2sect@fs 002B  
                  __end_of_itoa 4CBC                    __end_of_utoa 43CC                    __end_of_sync 4AA4  
            _inicializa_tarefas 4DF6                 escalonador@cont 01CB             reserve_direntry@dir 00F0  
             create_chain@clust 00D4                     auto_mount@p 00BA               create_chain@cstat 00E2  
                        ??_main 0036                          ??_itoa 002C                          ??_utoa 0023  
                        ??_sync 0035                   __activetblptr 000002             ?_inicializa_tarefas 0001  
               __CFG_CCP2MX$OFF 000000                  _next_dir_entry 3702               get_fattime@f_time 001A  
              ??_sdc_disk_write 0026                          ?_delay 0001          ?_escreve_caractere_lcd 0001  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADRESH 000FC4  
                        _ADRESL 000FC3                ___awdiv@dividend 0016              auto_mount@bootsect 00B6  
                        _INT0IE 007F94                          _INT0IF 007F91                   ?_dummy_clocks 0001  
                        i2l1095 503E                          i2l1184 4178                          _PCLATH 000FFA  
                        _INTCON 000FF2                          i2l9561 4108                          i2l9553 40F8  
                        i2l7891 504C                          i2l9581 4164                          i2l9573 4142  
                        i2l9565 4110                          i2l9583 4170                          i2l9569 413E  
                        _TMR0IF 007F92                          _TMR2IF 007CF1                          _SDCard 3910  
            auto_mount@maxclust 00AE        __end_of_recebe_dado_uart 5050                          _SPPCFG 000F63  
                        _SPPCON 000F65                _is_it_gga_string 0045        __size_of_sdc_disk_status 0014  
              __end_of_check_fs 3702            ??_inicializa_tarefas 0016                  trace_path@dptr 017E  
                trace_path@path 00E7          reserve_direntry@sector 0173        __size_of_disk_initialize 0034  
    __end_of_posicao_cursor_lcd 4984                  auto_mount@path 0091                    ?_move_window 0083  
          __end_of_create_chain 26F2          __size_of_init_hardware 0016                __end_of__powers_ 60E2  
                auto_mount@stat 00BC                          _Result 003E            __size_of_get_fattime 0196  
                  put_cluster@p 00B1            __size_of_get_cluster 0638                          ___lmul 4AA4  
          __size_of_disk_status 003E                          ___wmul 4F44                       ??___awdiv 001A  
                __CFG_STVREN$ON 000000                       ??___lldiv 001E                          _f_open 0C64  
                     ??___lwdiv 001A                          _f_sync 2D2E                       ??___lwmod 001A  
                        _folder 0300                          _memcmp 446A                          _memcpy 4CFE  
              __end_of_init_lcd 446A                          _memset 4E9C                       ??_f_close 0035  
                        clear_0 4756                          clear_1 4768                          clear_2 4774  
                        clear_3 4780                          clear_4 478C                          clear_5 4798  
              ___awdiv@quotient 001C                       ??_f_mount 0018             _sdc_disk_initialize 2A30  
                     ??_command 001D                put_cluster@clust 009A              get_cluster@fatsect 00CC  
                        itoa@cp 002C        __end_of_reserve_direntry 2A30                __end_of_validate 4C34  
        __end_of_next_dir_entry 3910            __size_of_escalonador 00B2               ??_recebe_dado_SPI 0016  
      __end_of_escreve_dado_SPI 4C7A                __end_of_response 5082                    __mediumconst 6092  
         write_timer_zero@timer 0018                 disk_read@sector 007A                 disk_read@result 0080  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                     ??_proceed 0018                _write_timer_zero 501A                          sync@fs 009A  
      sdc_disk_initialize@count 006C       escreve_caractere_lcd@data 0018                  ??_dummy_clocks 0018  
           _escreve_inteiro_lcd 4DBA                 sdc_disk_write@i 0029                      __accesstop 0060  
       __end_of__initialization 479E                 __CFG_PBADEN$OFF 000000            ?_sdc_disk_initialize 0001  
                disk_write@buff 0060                  disk_write@pdrv 0031                   ___rparam_used 000001  
             ??_escreve_cmd_lcd 0018                  __pcstackCOMRAM 0001     __end_of_endereco_cursor_lcd 49EE  
                  __pidataBANK1 4F8E               ?_mensagem_inicial 0001                   __end_of_delay 4F8E  
          ?_escreve_inteiro_lcd 002E                   check_fs@temp2 008D              ??_mensagem_inicial 001C  
          __end_of_make_dirfile 3E36                    ?_put_cluster 009A               reserve_direntry@c 017A  
             reserve_direntry@n 0177              _tarefa_em_execucao 003F      __end_ofi2_write_timer_zero 503E  
               ?_next_dir_entry 00D4          __size_of_sdc_disk_read 0298            reserve_direntry@dptr 0178  
                 _init_hardware 4FDE                    auto_mount@fs 00C2              __size_of_disk_read 0096  
              _get_cluster$1065 00C8                         ??_delay 0016                _is_it_rmc_string 0044  
  mensagem_inicial@msg_linha_um 0060                      __pbssBANK0 00F9                      __pbssBANK1 0100  
                    __pbssBANK2 0200                      __pbssBANK3 0300  __size_of_escreve_frase_ram_lcd 0052  
 __end_of_escreve_frase_ram_lcd 4B9E           ??_sdc_disk_initialize 0030                         ?_SDCard 0001  
     escreve_inteiro_uart@F3952 01DB                      _gga_buffer 0200                         ?___lmul 0016  
             ??_sdc_disk_status 0016                   make_dirfile@a 0028                   make_dirfile@b 0026  
                 make_dirfile@c 002A                   make_dirfile@n 0029                   make_dirfile@t 0027  
                       ?___wmul 0016           mensagem_inicial@F4101 6109           mensagem_inicial@F4099 611A  
         ??_escreve_inteiro_lcd 0030                         ?_f_open 0181                         ?_f_sync 009C  
                     SDCard@fil 02DF               ??_disk_initialize 0031                         ?_memcmp 0016  
                       ?_memcpy 0016                         ?_memset 0016                  ___lmul@product 001E  
                  _gga_pointers 0126                         _INTCON2 000FF1                         _INTCON3 000FF0  
                ?_init_hardware 0001                       ?_check_fs 0083                      _disk_ioctl 4F1C  
                    _disk_write 47AC                  remove_chain@fs 00E0        __size_of_inicializa_shrc 000C  
                    _clust2sect 41B4                 trace_path@clust 017A                 __CFG_VREGEN$OFF 000000  
                 ?_remove_chain 00D4           __size_of_create_chain 0362                       ?_init_lcd 0001  
               __size_of_SDCard 020A                   _sdc_disk_read 3028                      _auto_mount 0012  
             __end_of__npowers_ 6109                         __Hparam 0000                         __Lparam 0000  
                     ?_validate 001D               __end_of_disk_read 459C                   put_cluster@bc 00AF  
                     ?_response 0001                   put_cluster@fs 00B3                      f_close@res 0035  
                       ___awdiv 4628                 __size_of___lmul 0056                         ___lldiv 46AC  
               __size_of___wmul 0026            __size_of_move_window 022A                      check_fs@fs 008F  
                       ___lwdiv 4AFA                         ___lwmod 4CBC                 __size_of_f_open 0734  
               __size_of_f_sync 02FA            __end_of_dummy_clocks 4DBA                         _f_close 4EC8  
                       __pcinit 472E                 __size_of_memcmp 009C                 __size_of_memcpy 0040  
               __size_of_memset 002C                      _init_ports 4FC6                         __ramtop 0800  
                       _f_mount 4B9E                         __ptext0 4EF4                         __ptext1 4828  
                       __ptext2 43CC                         __ptext3 459C                         __ptext4 4FDE  
                       __ptext5 4FC6                         __ptext6 5082                         __ptext7 5008  
                       __ptext8 4FAC                         __ptext9 501A                         _command 4E30  
                     _T0CONbits 000FD5             auto_mount@totalsect 00B2         i2write_timer_zero@timer 0003  
   endereco_cursor_lcd@endereco 0018                         _dpowers 6093                    __size_of_isr 41AC  
       ??_escreve_caractere_lcd 0018                      ??_check_fs 0087                    _create_chain 2390  
                       _proceed 5050         __size_of_init_interrupt 0012                  __pintcode_body 40B0  
          end_of_initialization 479E                      f_open@mode 0185                      f_open@path 0183  
                ??_remove_chain 00D8                         isr@cont 0015                         memcmp@n 001A  
                       memcpy@d 001C                         memcpy@n 001A                         memcpy@s 001E  
       __size_of_init_oscilador 0008                         itoa@buf 0026                         memset@c 0018  
                       itoa@val 0028                         memset@n 001A                   SDCard@FResult 02DE  
                       memset@p 001C            sdc_disk_initialize@i 0067                   __Lmediumconst 6092  
                    ??_init_lcd 0019                         int_func 40B0                      _rmc_buffer 0250  
             ?_recebe_dado_uart 0001                 disk_status@pdrv 001B                 disk_status@stat 001C  
                ?_sdc_disk_read 0067          write_timer_zero@timer0 0016                 ___lldiv@divisor 001A  
                    f_mount@drv 0018              ??_recebe_dado_uart 0001                sdc_disk_read@ptr 006E  
               ___lldiv@counter 0022                      ??_validate 0021           __size_of_make_dirfile 0186  
                    ??_response 0019                       _RCSTAbits 000FAB        __end_of_write_timer_zero 502C  
                       postdec1 000FE5                         postdec2 000FDD                 _recebe_dado_SPI 49EE  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                       utoa@buf 001D                         utoa@val 001F                       _PORTBbits 000F81  
                     _PORTDbits 000F83                 ??_init_hardware 001A                      _trace_path 1F4E  
            _posicao_cursor_lcd 4914            __size_of_put_cluster 057E                     ?_disk_ioctl 0016  
             ?_reserve_direntry 00EE                       _TRISBbits 000F93                     ?_disk_write 0060  
                     _TRISCbits 000F94                       _TRISDbits 000F95               ?_escreve_dado_SPI 0001  
              next_dir_entry@dj 00D4                 _escreve_cmd_lcd 459C              ??_reserve_direntry 00F2  
           ?_posicao_cursor_lcd 0019                 disk_write@count 0066              ??_escreve_dado_SPI 0016  
                   ?_clust2sect 0022                _put_cluster$1088 00A7                _put_cluster$1089 00A9  
                    command@CMD 001D                      command@CRC 001C                      command@arg 0018  
                  _make_dirfile 3CB0                   ??_get_fattime 0060               ??_inicializa_shrc 0016  
   __size_of_inicializa_tarefas 003A                  __end_of_SDCard 3B1A                   ??_get_cluster 009E  
                 ??_disk_status 0018                     ?_auto_mount 0091               _make_dirfile$1198 0024  
               command@argument 001E            ??_posicao_cursor_lcd 001A                  __end_of___lmul 4AFA  
              ??_next_dir_entry 00D6                  __end_of___wmul 4F6A                  __end_of_f_open 1398  
                 ??_escalonador 01C9                     ?_init_ports 0001                  __end_of_f_sync 3028  
                __end_of_memcmp 4506                  __end_of_memcpy 4D3E                  __end_of_memset 4EC8  
           start_initialization 472E                     __end_of_isr 41B4       __size_of_mensagem_inicial 007A  
            reserve_direntry@dj 00EE              reserve_direntry@fs 017F                 _sdc_disk_status 4FF4  
               ??_sdc_disk_read 0030                        ??_SDCard 00F7               auto_mount@fatsize 00BD  
            i2_write_timer_zero 502C         __end_of_recebe_dado_SPI 4A4A                 _disk_initialize 4E68  
         reserve_direntry@clust 017B         __size_of_sdc_disk_write 0176                _data_uart_recebe 0041  
                   _dado_buffer 016C           __size_of_dummy_clocks 003E                   auto_mount@fmt 00C1  
           __size_of_disk_ioctl 0028             ?i2_write_timer_zero 0001             __size_of_disk_write 007C  
                      ??___lmul 001E                        ??___wmul 001A             __end_of_get_fattime 3CB0  
                      ??_f_open 0186                        ??_f_sync 009E                     __pdataBANK1 01CC  
           __end_of_get_cluster 19D0                __CFG_LPT1OSC$OFF 000000                        ??_memcmp 001C  
           __end_of_disk_status 4D7C                        ??_memcpy 001C             __size_of_clust2sect 00C2  
                      ??_memset 001C          sdc_disk_read@start_add 006F            __end_of_remove_chain 40B0  
       sdc_disk_initialize@buff 006E         __end_of_escreve_cmd_lcd 4628         sdc_disk_initialize@stat 006B  
                   ?_trace_path 00E3    __size_of_endereco_cursor_lcd 006A                     __pbssBIGRAM 0330  
                   __pbssCOMRAM 0036                 _trace_path$1245 0173                 _trace_path$1247 0175  
                 __pcstackBANK0 0060                   __pcstackBANK1 0173                   __pcstackBANK2 02DE  
                _init_interrupt 5008             __size_of_auto_mount 0C52            ??i2_write_timer_zero 0003  
           __end_of_escalonador 4328     __end_of_sdc_disk_initialize 2D2E                     _data_buffer 015D  
             __size_of_check_fs 0218                    check_fs@sect 0083                    check_fs@temp 008B  
                  _dummy_clocks 4D7C                  _init_oscilador 5082             __size_of_init_ports 0018  
         _escreve_frase_ram_lcd 4B4C                       _data_buff 00FE     __end_of_escreve_inteiro_lcd 4DF6  
             __size_of_init_lcd 009E                ___lwdiv@dividend 0016               delay@contador_int 0017  
             delay@contador_ext 0016                       _gga_index 003B                       __pintcode 0008  
                 __pmediumconst 6092                        ?___awdiv 0016                        ?___lldiv 0016  
             __size_of_validate 0048                       __npowers_ 60E2                        ?___lwdiv 0016  
                      ?___lwmod 0016               __size_of_response 000C                        ?_f_close 00A9  
                     _disk_read 4506              _sinaliza_int_timer 0040                        ?_f_mount 0016  
                      ?_command 0018                      SDCard@init 015C          __end_of_init_interrupt 501A  
           sdc_disk_read@p_buff 0067             sdc_disk_read@length 0075             sdc_disk_read@offset 0073  
           sdc_disk_read@sector 0069         __end_of_sdc_disk_status 5008  __size_of_escreve_caractere_lcd 0072  
 __end_of_escreve_caractere_lcd 4914                        ?_proceed 0001                       f_close@fp 00A9  
              ___lwdiv@quotient 001B                  __size_of_delay 0024         __end_of_disk_initialize 4E9C  
        __end_of_init_oscilador 508A             make_dirfile@dirname 0020                      validate@id 001F  
                    validate@fs 001D                       _p_tarefas 0152                make_dirfile@path 001E  
                ___wmul@product 001A                        _LATBbits 000F8A                       f_open@dir 01C7  
              ?_recebe_dado_SPI 0001                       f_open@res 01B4                        _PIE1bits 000F9D  
                   _get_fattime 3B1A             __size_of_trace_path 0442                       _rmc_index 0039  
                   _get_cluster 1398                     _disk_status 4D3E                   ??_move_window 0087  
                     f_mount@fs 0016                        _PIR1bits 000F9E                   move_window@fs 0098  
             ?_write_timer_zero 0016                 remove_chain@nxt 00DC                       f_sync@dir 00A7  
                     f_sync@res 00A2                       f_sync@tim 00A3        posicao_cursor_lcd@coluna 0019  
                    ?_disk_read 0078              ??_write_timer_zero 0018      posicao_cursor_lcd@endereco 001B  
     __size_of_recebe_dado_uart 0012                     _escalonador 4276                      _ADCON0bits 000FC2  
                    _ADCON1bits 000FC1                      _ADCON2bits 000FC0               ___wmul@multiplier 0016  
              ?_escreve_cmd_lcd 0001     escreve_frase_ram_lcd@buffer 0019                 ?_init_interrupt 0001  
                  ??_disk_ioctl 0019                    ??_disk_write 0030                 _inicializa_shrc 506A  
              _mensagem_inicial 4828                 ?_init_oscilador 0001                    ??_clust2sect 0026  
             ___lmul@multiplier 0016                       copy_data0 4742          ?_escreve_frase_ram_lcd 0019  
              auto_mount@chk_wp 0093               move_window@sector 0083        escreve_dado_SPI@contador 0016  
                _sdc_disk_write 3E36       __size_of_reserve_direntry 033E        escreve_inteiro_lcd@F3962 01E2  
                  ??_auto_mount 0094                        __Hrparam 0000       __size_of_escreve_dado_SPI 0046  
                      __Lrparam 0000              __end_of_disk_ioctl 4F44           __size_of_remove_chain 0104  
                put_cluster@val 009E                get_cluster@clust 009A              __end_of_disk_write 4828  
              __size_of___awdiv 0084                __size_of___lldiv 0082                   ??_put_cluster 00A2  
              __size_of___lwdiv 0052                __size_of___lwmod 0042                    ??_init_ports 0016  
           __end_of_move_window 34EA              __end_of_clust2sect 4276        escreve_inteiro_lcd@valor 002E  
              __size_of_f_close 002C        escreve_inteiro_lcd@texto 0060                __size_of_f_mount 004E  
             disk_status@result 0019                __size_of_command 0038           __end_of_init_hardware 4FF4  
                      _check_fs 34EA                        _gga_code 0036                 ___lwdiv@divisor 0018  
              ?_sdc_disk_status 0001                 ___lwdiv@counter 001A                        _fileName 01CC  
            __end_of_auto_mount 0C64                        __ptext10 505E                        __ptext11 4DF6  
                      __ptext20 41B4                        __ptext12 506A                        __ptext21 2390  
                      __ptext13 4276                        __ptext30 2A30                        __ptext22 3FAC  
                      __ptext14 3910                        __ptext31 34EA                        __ptext23 19D0  
                      __ptext15 0C64                        __ptext40 4FF4                        __ptext32 446A  
                      __ptext24 1398                        __ptext16 1F4E                        __ptext41 4A4A  
                      __ptext33 4AA4                        __ptext25 4F44                        __ptext17 3CB0  
                      __ptext50 5050                        __ptext42 32C0                        __ptext34 46AC  
                      __ptext26 4CFE                        __ptext18 26F2                        __ptext51 4914  
                      __ptext43 47AC                        __ptext35 4B9E                        __ptext27 0012  
                      __ptext19 3702                        __ptext60 4F6A                        __ptext52 4984  
                      __ptext44 3E36                        __ptext36 4EC8                        __ptext28 4E9C  
                      __ptext61 4D7C                        __ptext53 4DBA                        __ptext45 4628  
                      __ptext37 2D2E                        __ptext29 4E68                        __ptext62 4E30  
                      __ptext54 4C7A                        __ptext46 4506                        __ptext38 4BEC  
                      __ptext63 4C34                        __ptext55 4328                        __ptext47 3028  
                      __ptext39 4D3E                        __ptext64 4F1C                        __ptext56 4CBC  
                      __ptext48 5076                        __ptext65 3B1A                        __ptext57 4AFA  
                      __ptext49 49EE                        __ptext58 4B4C                        __ptext67 502C  
                      __ptext59 48A2                        __ptext68 503E                        __ptext69 0000  
                      _fileSize 0146                        __powers_ 60BB                __size_of_proceed 000E  
              ?_disk_initialize 0001                  _timeout_tarefa 0158                    _rmc_pointers 013A  
            sdc_disk_read@count 006D      __end_of_inicializa_tarefas 4E30        i2write_timer_zero@timer0 0001  
        __end_of_sdc_disk_write 3FAC                        _init_lcd 43CC                   __size_of_main 0028  
                  _remove_chain 3FAC                   __size_of_itoa 0042                   __size_of_utoa 00A4  
                 __size_of_sync 005A             _endereco_cursor_lcd 4984              __end_of_init_ports 4FDE  
             _comma_counter_gga 0047                   dummy_clocks@i 001B                        f_open@dj 01B5  
                 dummy_clocks@n 001A                        f_open@fn 01A0                        f_open@fp 0181  
                      f_open@dw 01B0                        f_open@rs 01AC               _comma_counter_rmc 0046  
                      _rmc_code 00F9                        _validate 4BEC                    move_window@n 0093  
                      _response 5076                        f_sync@fp 009C     __size_of_posicao_cursor_lcd 0070  
                      int$flags 004A         posicao_cursor_lcd@linha 001A                     ??_disk_read 0034  
       __end_of_inicializa_shrc 5076           __CFG_CPUDIV$OSC1_PLL2 000000                    ??_trace_path 00EB  
          ?_endereco_cursor_lcd 0001              put_cluster@fatsect 00AB                      _INTCONbits 000FF2  
                      memcmp@s1 0016                        memcmp@s2 0018                move_window@wsect 0094  
                      memcpy@d1 0016                        memcpy@s1 0018             __end_of_put_cluster 1F4E  
                      itoa@base 002A                        memset@p1 0016               _config_timer_dois 505E  
                  _tempo_backup 014E               _config_timer_zero 4FAC                        intlevel2 0000  
            ?_config_timer_dois 0001        mensagem_inicial@msg_dois 0071              ?_config_timer_zero 0001  
                  _tempo_tarefa 014A                 ?_sdc_disk_write 001F                ___lwmod@dividend 0016  
              ___lldiv@dividend 0016               sdc_disk_read@buff 0077           __end_of_sdc_disk_read 32C0  
           sdc_disk_status@pdrv 0017             sdc_disk_status@stat 0016             ??_config_timer_dois 0016  
                    _OSCCONbits 000FD3              __end_of_trace_path 2390             ??_config_timer_zero 001A  
                   _move_window 32C0            sdc_disk_write@count1 002B            sdc_disk_write@p_buff 001F  
              _recebe_dado_uart 503E         recebe_dado_SPI@contador 0018                        utoa@base 0021  
          sdc_disk_write@sector 0021           ??_endereco_cursor_lcd 0018                    response@buff 0019  
              ___lldiv@quotient 001E                 ___lwmod@divisor 0018                 ___lwmod@counter 001A  
             remove_chain@clust 00D4       __end_of_config_timer_dois 506A                   ?_create_chain 00D4  
           sdc_disk_write@i_548 002D       __end_of_config_timer_zero 4FC6     __size_ofi2_write_timer_zero 0012  
       __size_of_next_dir_entry 020E          escreve_cmd_lcd@comando 0018             sdc_disk_write@count 0025  
            sdc_disk_write@buff 002F    __size_of_sdc_disk_initialize 02FE                    ?_get_fattime 0016  
              _reserve_direntry 26F2               sdc_disk_write@res 002E                    ?_get_cluster 009A  
              _escreve_dado_SPI 4C34                    ?_disk_status 0001   __end_ofmensagem_inicial@F4101 611A  
 __end_ofmensagem_inicial@F4099 612B  
