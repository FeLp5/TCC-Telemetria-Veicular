

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Mar 04 16:14:49 2022

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92  0000                     
    93                           ; Version 1.41
    94                           ; Generated 25/01/2017 GMT
    95                           ; 
    96                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    97                           ; All rights reserved.
    98                           ; 
    99                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   100                           ; 
   101                           ; Redistribution and use in source and binary forms, with or without modification, are
   102                           ; permitted provided that the following conditions are met:
   103                           ; 
   104                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   105                           ;        conditions and the following disclaimer.
   106                           ; 
   107                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   108                           ;        of conditions and the following disclaimer in the documentation and/or other
   109                           ;        materials provided with the distribution.
   110                           ; 
   111                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   112                           ;        software without specific prior written permission.
   113                           ; 
   114                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   115                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   116                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   117                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   118                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   119                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   120                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   121                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   122                           ; 
   123                           ; 
   124                           ; Code-generator required, PIC18F4550 Definitions
   125                           ; 
   126                           ; SFR Addresses
   127  0000                     
   128                           	psect	idataBANK1
   129  0056A2                     __pidataBANK1:
   130                           	opt stack 0
   131                           
   132                           ;initializer for _fileName
   133  0056A2  63                 	db	99
   134  0056A3  68                 	db	104
   135  0056A4  65                 	db	101
   136  0056A5  63                 	db	99
   137  0056A6  6B                 	db	107
   138  0056A7  2E                 	db	46
   139  0056A8  74                 	db	116
   140  0056A9  78                 	db	120
   141  0056AA  74                 	db	116
   142  0056AB  00                 	db	0
   143  0056AC  00                 	db	0
   144  0056AD  00                 	db	0
   145  0056AE  00                 	db	0
   146  0056AF  00                 	db	0
   147  0056B0  00                 	db	0
   148                           
   149                           ;initializer for escreve_inteiro_uart@F3952
   150  0056B1  30                 	db	48
   151  0056B2  30                 	db	48
   152  0056B3  30                 	db	48
   153  0056B4  30                 	db	48
   154  0056B5  30                 	db	48
   155  0056B6  30                 	db	48
   156  0056B7  00                 	db	0
   157                           
   158                           ;initializer for escreve_inteiro_lcd@F3962
   159  0056B8  30                 	db	48
   160  0056B9  30                 	db	48
   161  0056BA  30                 	db	48
   162  0056BB  30                 	db	48
   163  0056BC  30                 	db	48
   164  0056BD  30                 	db	48
   165  0056BE  00                 	db	0
   166                           
   167                           	psect	mediumconst
   168  005FE0                     __pmediumconst:
   169                           	opt stack 0
   170  005FE0  00                 	db	0
   171  005FE1                     _dpowers:
   172                           	opt stack 0
   173  005FE1  0001               	dw	1
   174  005FE3  0000               	dw	0
   175  005FE5  000A               	dw	10
   176  005FE7  0000               	dw	0
   177  005FE9  0064               	dw	100
   178  005FEB  0000               	dw	0
   179  005FED  03E8               	dw	1000
   180  005FEF  0000               	dw	0
   181  005FF1  2710               	dw	10000
   182  005FF3  0000               	dw	0
   183  005FF5  86A0               	dw	34464
   184  005FF7  0001               	dw	1
   185  005FF9  4240               	dw	16960
   186  005FFB  000F               	dw	15
   187  005FFD  9680               	dw	38528
   188  005FFF  0098               	dw	152
   189  006001  E100               	dw	57600
   190  006003  05F5               	dw	1525
   191  006005  CA00               	dw	51712
   192  006007  3B9A               	dw	15258
   193  006009                     __end_of_dpowers:
   194                           	opt stack 0
   195  006009                     __powers_:
   196                           	opt stack 0
   197  006009  00                 	db	0
   198  00600A  80                 	db	128
   199  00600B  3F                 	db	63
   200  00600C  00                 	db	0
   201  00600D  20                 	db	32
   202  00600E  41                 	db	65
   203  00600F  00                 	db	0
   204  006010  C8                 	db	200
   205  006011  42                 	db	66
   206  006012  00                 	db	0
   207  006013  7A                 	db	122
   208  006014  44                 	db	68
   209  006015  40                 	db	64
   210  006016  1C                 	db	28
   211  006017  46                 	db	70
   212  006018  50                 	db	80
   213  006019  C3                 	db	195
   214  00601A  47                 	db	71
   215  00601B  24                 	db	36
   216  00601C  74                 	db	116
   217  00601D  49                 	db	73
   218  00601E  97                 	db	151
   219  00601F  18                 	db	24
   220  006020  4B                 	db	75
   221  006021  BC                 	db	188
   222  006022  BE                 	db	190
   223  006023  4C                 	db	76
   224  006024  6B                 	db	107
   225  006025  6E                 	db	110
   226  006026  4E                 	db	78
   227  006027  03                 	db	3
   228  006028  15                 	db	21
   229  006029  50                 	db	80
   230  00602A  79                 	db	121
   231  00602B  AD                 	db	173
   232  00602C  60                 	db	96
   233  00602D  F3                 	db	243
   234  00602E  49                 	db	73
   235  00602F  71                 	db	113
   236  006030                     __end_of__powers_:
   237                           	opt stack 0
   238  006030                     __npowers_:
   239                           	opt stack 0
   240  006030  00                 	db	0
   241  006031  80                 	db	128
   242  006032  3F                 	db	63
   243  006033  CD                 	db	205
   244  006034  CC                 	db	204
   245  006035  3D                 	db	61
   246  006036  D7                 	db	215
   247  006037  23                 	db	35
   248  006038  3C                 	db	60
   249  006039  12                 	db	18
   250  00603A  83                 	db	131
   251  00603B  3A                 	db	58
   252  00603C  B7                 	db	183
   253  00603D  D1                 	db	209
   254  00603E  38                 	db	56
   255  00603F  C6                 	db	198
   256  006040  27                 	db	39
   257  006041  37                 	db	55
   258  006042  38                 	db	56
   259  006043  86                 	db	134
   260  006044  35                 	db	53
   261  006045  C0                 	db	192
   262  006046  D6                 	db	214
   263  006047  33                 	db	51
   264  006048  CC                 	db	204
   265  006049  2B                 	db	43
   266  00604A  32                 	db	50
   267  00604B  70                 	db	112
   268  00604C  89                 	db	137
   269  00604D  30                 	db	48
   270  00604E  E7                 	db	231
   271  00604F  DB                 	db	219
   272  006050  2E                 	db	46
   273  006051  E5                 	db	229
   274  006052  3C                 	db	60
   275  006053  1E                 	db	30
   276  006054  42                 	db	66
   277  006055  A2                 	db	162
   278  006056  0D                 	db	13
   279  006057                     __end_of__npowers_:
   280                           	opt stack 0
   281  006057                     mensagem_inicial@F4098:
   282                           	opt stack 0
   283  006057  20                 	db	32
   284  006058  20                 	db	32
   285  006059  20                 	db	32
   286  00605A  30                 	db	48
   287  00605B  34                 	db	52
   288  00605C  2F                 	db	47
   289  00605D  30                 	db	48
   290  00605E  33                 	db	51
   291  00605F  2F                 	db	47
   292  006060  32                 	db	50
   293  006061  30                 	db	48
   294  006062  32                 	db	50
   295  006063  32                 	db	50
   296  006064  20                 	db	32
   297  006065  20                 	db	32
   298  006066  20                 	db	32
   299  006067  00                 	db	0
   300  006068                     __end_ofmensagem_inicial@F4098:
   301                           	opt stack 0
   302  006068                     mensagem_inicial@F4096:
   303                           	opt stack 0
   304  006068  20                 	db	32
   305  006069  20                 	db	32
   306  00606A  53                 	db	83
   307  00606B  44                 	db	68
   308  00606C  43                 	db	67
   309  00606D  61                 	db	97
   310  00606E  72                 	db	114
   311  00606F  64                 	db	100
   312  006070  20                 	db	32
   313  006071  49                 	db	73
   314  006072  6E                 	db	110
   315  006073  69                 	db	105
   316  006074  74                 	db	116
   317  006075  20                 	db	32
   318  006076  20                 	db	32
   319  006077  20                 	db	32
   320  006078  00                 	db	0
   321  006079                     __end_ofmensagem_inicial@F4096:
   322                           	opt stack 0
   323  0000                     _SSPBUF	set	4041
   324  0000                     _SSPSTATbits	set	4039
   325  0000                     _TRISBbits	set	3987
   326  0000                     _SSPCON1	set	4038
   327  0000                     _SSPSTAT	set	4039
   328  0000                     _SSPCON1bits	set	4038
   329  0000                     _ADRESL	set	4035
   330  0000                     _ADRESH	set	4036
   331  0000                     _ADCON0	set	4034
   332  0000                     _ADCON0bits	set	4034
   333  0000                     _ADCON2bits	set	4032
   334  0000                     _ADCON1bits	set	4033
   335  0000                     _ADCON1	set	4033
   336  0000                     _PCL	set	4089
   337  0000                     _PCLATH	set	4090
   338  0000                     _PIE1bits	set	3997
   339  0000                     _RCSTA	set	4011
   340  0000                     _TXSTA	set	4012
   341  0000                     _RCREG	set	4014
   342  0000                     _RCSTAbits	set	4011
   343  0000                     _TXREG	set	4013
   344  0000                     _PIR1bits	set	3998
   345  0000                     _TRISCbits	set	3988
   346  0000                     _SPBRG	set	4015
   347  0000                     _PR2	set	4043
   348  0000                     _TMR2	set	4044
   349  0000                     _T2CON	set	4042
   350  0000                     _OSCCONbits	set	4051
   351  0000                     _TRISE	set	3990
   352  0000                     _TRISC	set	3988
   353  0000                     _TRISA	set	3986
   354  0000                     _TRISD	set	3989
   355  0000                     _LATB	set	3978
   356  0000                     _TRISB	set	3987
   357  0000                     _T0CONbits	set	4053
   358  0000                     _INTCONbits	set	4082
   359  0000                     _TMR0L	set	4054
   360  0000                     _TMR0H	set	4055
   361  0000                     _PIE1	set	3997
   362  0000                     _INTCON3	set	4080
   363  0000                     _INTCON2	set	4081
   364  0000                     _INTCON	set	4082
   365  0000                     _SPPCFG	set	3939
   366  0000                     _SPPCON	set	3941
   367  0000                     _T0CON	set	4053
   368  0000                     _PORTDbits	set	3971
   369  0000                     _TRISDbits	set	3989
   370  0000                     _LATBbits	set	3978
   371  0000                     _LATCbits	set	3979
   372  0000                     _INT0IE	set	32660
   373  0000                     _INT0IF	set	32657
   374  0000                     _T0IF	set	32658
   375  0000                     _TMR0IF	set	32658
   376  0000                     _RCIF	set	31989
   377  0000                     _TRMT	set	32097
   378  0000                     _TXEN	set	32101
   379  0000                     _CREN	set	32092
   380  0000                     _SPEN	set	32095
   381  0000                     _SYNC	set	32100
   382  0000                     _BRGH	set	32098
   383  0000                     _TMR2IF	set	31985
   384  006079                     STR_34:
   385  006079  20                 	db	32
   386  00607A  20                 	db	32
   387  00607B  20                 	db	32
   388  00607C  20                 	db	32
   389  00607D  20                 	db	32
   390  00607E  20                 	db	32
   391  00607F  20                 	db	32
   392  006080  20                 	db	32
   393  006081  20                 	db	32
   394  006082  20                 	db	32
   395  006083  20                 	db	32
   396  006084  20                 	db	32
   397  006085  20                 	db	32
   398  006086  20                 	db	32
   399  006087  20                 	db	32
   400  006088  20                 	db	32
   401  006089  20                 	db	32
   402  00608A  20                 	db	32
   403  00608B  00                 	db	0
   404  00608C                     STR_33:
   405  00608C  20                 	db	32
   406  00608D  66                 	db	102	;'f'
   407  00608E  6D                 	db	109	;'m'
   408  00608F  74                 	db	116	;'t'
   409  006090  31                 	db	49	;'1'
   410  006091  20                 	db	32
   411  006092  20                 	db	32
   412  006093  20                 	db	32
   413  006094  20                 	db	32
   414  006095  20                 	db	32
   415  006096  20                 	db	32
   416  006097  20                 	db	32
   417  006098  20                 	db	32
   418  006099  20                 	db	32
   419  00609A  20                 	db	32
   420  00609B  20                 	db	32
   421  00609C  20                 	db	32
   422  00609D  20                 	db	32
   423  00609E  00                 	db	0
   424  00609F                     STR_35:
   425  00609F  20                 	db	32
   426  0060A0  66                 	db	102	;'f'
   427  0060A1  6D                 	db	109	;'m'
   428  0060A2  74                 	db	116	;'t'
   429  0060A3  32                 	db	50	;'2'
   430  0060A4  20                 	db	32
   431  0060A5  20                 	db	32
   432  0060A6  20                 	db	32
   433  0060A7  20                 	db	32
   434  0060A8  20                 	db	32
   435  0060A9  20                 	db	32
   436  0060AA  20                 	db	32
   437  0060AB  20                 	db	32
   438  0060AC  20                 	db	32
   439  0060AD  20                 	db	32
   440  0060AE  20                 	db	32
   441  0060AF  20                 	db	32
   442  0060B0  20                 	db	32
   443  0060B1  00                 	db	0
   444  0060B2                     STR_28:
   445  0060B2  46                 	db	70	;'F'
   446  0060B3  41                 	db	65	;'A'
   447  0060B4  54                 	db	84	;'T'
   448  0060B5  33                 	db	51	;'3'
   449  0060B6  32                 	db	50	;'2'
   450  0060B7  20                 	db	32
   451  0060B8  3E                 	db	62	;'>'
   452  0060B9  20                 	db	32
   453  0060BA  20                 	db	32
   454  0060BB  20                 	db	32
   455  0060BC  20                 	db	32
   456  0060BD  20                 	db	32
   457  0060BE  20                 	db	32
   458  0060BF  20                 	db	32
   459  0060C0  20                 	db	32
   460  0060C1  20                 	db	32
   461  0060C2  20                 	db	32
   462  0060C3  20                 	db	32
   463  0060C4  00                 	db	0
   464  0060C5                     STR_23:
   465  0060C5  52                 	db	82	;'R'
   466  0060C6  65                 	db	101	;'e'
   467  0060C7  63                 	db	99	;'c'
   468  0060C8  2E                 	db	46
   469  0060C9  20                 	db	32
   470  0060CA  73                 	db	115	;'s'
   471  0060CB  69                 	db	105	;'i'
   472  0060CC  67                 	db	103	;'g'
   473  0060CD  2E                 	db	46
   474  0060CE  20                 	db	32
   475  0060CF  20                 	db	32
   476  0060D0  20                 	db	32
   477  0060D1  20                 	db	32
   478  0060D2  20                 	db	32
   479  0060D3  20                 	db	32
   480  0060D4  20                 	db	32
   481  0060D5  20                 	db	32
   482  0060D6  20                 	db	32
   483  0060D7  00                 	db	0
   484  0060D8                     STR_17:
   485  0060D8  61                 	db	97	;'a'
   486  0060D9  67                 	db	103	;'g'
   487  0060DA  75                 	db	117	;'u'
   488  0060DB  61                 	db	97	;'a'
   489  0060DC  72                 	db	114	;'r'
   490  0060DD  64                 	db	100	;'d'
   491  0060DE  20                 	db	32
   492  0060DF  30                 	db	48	;'0'
   493  0060E0  78                 	db	120	;'x'
   494  0060E1  46                 	db	70	;'F'
   495  0060E2  46                 	db	70	;'F'
   496  0060E3  20                 	db	32
   497  0060E4  20                 	db	32
   498  0060E5  20                 	db	32
   499  0060E6  20                 	db	32
   500  0060E7  20                 	db	32
   501  0060E8  20                 	db	32
   502  0060E9  20                 	db	32
   503  0060EA  00                 	db	0
   504  0060EB                     STR_41:
   505  0060EB  41                 	db	65	;'A'
   506  0060EC  72                 	db	114	;'r'
   507  0060ED  71                 	db	113	;'q'
   508  0060EE  75                 	db	117	;'u'
   509  0060EF  69                 	db	105	;'i'
   510  0060F0  76                 	db	118	;'v'
   511  0060F1  6F                 	db	111	;'o'
   512  0060F2  20                 	db	32
   513  0060F3  72                 	db	114	;'r'
   514  0060F4  65                 	db	101	;'e'
   515  0060F5  6E                 	db	110	;'n'
   516  0060F6  6F                 	db	111	;'o'
   517  0060F7  6D                 	db	109	;'m'
   518  0060F8  65                 	db	101	;'e'
   519  0060F9  61                 	db	97	;'a'
   520  0060FA  64                 	db	100	;'d'
   521  0060FB  6F                 	db	111	;'o'
   522  0060FC  00                 	db	0
   523  0060FD                     STR_44:
   524  0060FD  42                 	db	66	;'B'
   525  0060FE  55                 	db	85	;'U'
   526  0060FF  53                 	db	83	;'S'
   527  006100  20                 	db	32
   528  006101  4D                 	db	77	;'M'
   529  006102  4F                 	db	79	;'O'
   530  006103  44                 	db	68	;'D'
   531  006104  45                 	db	69	;'E'
   532  006105  20                 	db	32
   533  006106  20                 	db	32
   534  006107  20                 	db	32
   535  006108  20                 	db	32
   536  006109  20                 	db	32
   537  00610A  20                 	db	32
   538  00610B  20                 	db	32
   539  00610C  20                 	db	32
   540  00610D  00                 	db	0
   541  00610E                     STR_45:
   542  00610E  53                 	db	83	;'S'
   543  00610F  59                 	db	89	;'Y'
   544  006110  4E                 	db	78	;'N'
   545  006111  43                 	db	67	;'C'
   546  006112  20                 	db	32
   547  006113  4D                 	db	77	;'M'
   548  006114  4F                 	db	79	;'O'
   549  006115  44                 	db	68	;'D'
   550  006116  45                 	db	69	;'E'
   551  006117  20                 	db	32
   552  006118  20                 	db	32
   553  006119  20                 	db	32
   554  00611A  20                 	db	32
   555  00611B  20                 	db	32
   556  00611C  20                 	db	32
   557  00611D  20                 	db	32
   558  00611E  00                 	db	0
   559  00611F                     STR_46:
   560  00611F  53                 	db	83	;'S'
   561  006120  4D                 	db	77	;'M'
   562  006121  50                 	db	80	;'P'
   563  006122  20                 	db	32
   564  006123  50                 	db	80	;'P'
   565  006124  48                 	db	72	;'H'
   566  006125  41                 	db	65	;'A'
   567  006126  53                 	db	83	;'S'
   568  006127  45                 	db	69	;'E'
   569  006128  20                 	db	32
   570  006129  20                 	db	32
   571  00612A  20                 	db	32
   572  00612B  20                 	db	32
   573  00612C  20                 	db	32
   574  00612D  20                 	db	32
   575  00612E  20                 	db	32
   576  00612F  00                 	db	0
   577  006130                     STR_43:
   578  006130  53                 	db	83	;'S'
   579  006131  50                 	db	80	;'P'
   580  006132  49                 	db	73	;'I'
   581  006133  20                 	db	32
   582  006134  63                 	db	99	;'c'
   583  006135  6F                 	db	111	;'o'
   584  006136  6E                 	db	110	;'n'
   585  006137  66                 	db	102	;'f'
   586  006138  69                 	db	105	;'i'
   587  006139  67                 	db	103	;'g'
   588  00613A  75                 	db	117	;'u'
   589  00613B  72                 	db	114	;'r'
   590  00613C  61                 	db	97	;'a'
   591  00613D  64                 	db	100	;'d'
   592  00613E  61                 	db	97	;'a'
   593  00613F  21                 	db	33
   594  006140  00                 	db	0
   595  006141                     STR_25:
   596  006141  46                 	db	70	;'F'
   597  006142  41                 	db	65	;'A'
   598  006143  54                 	db	84	;'T'
   599  006144  20                 	db	32
   600  006145  3E                 	db	62	;'>'
   601  006146  20                 	db	32
   602  006147  20                 	db	32
   603  006148  20                 	db	32
   604  006149  20                 	db	32
   605  00614A  20                 	db	32
   606  00614B  20                 	db	32
   607  00614C  20                 	db	32
   608  00614D  20                 	db	32
   609  00614E  20                 	db	32
   610  00614F  20                 	db	32
   611  006150  20                 	db	32
   612  006151  00                 	db	0
   613  006152                     STR_14:
   614  006152  53                 	db	83	;'S'
   615  006153  65                 	db	101	;'e'
   616  006154  74                 	db	116	;'t'
   617  006155  2E                 	db	46
   618  006156  20                 	db	32
   619  006157  35                 	db	53	;'5'
   620  006158  31                 	db	49	;'1'
   621  006159  32                 	db	50	;'2'
   622  00615A  62                 	db	98	;'b'
   623  00615B  20                 	db	32
   624  00615C  20                 	db	32
   625  00615D  20                 	db	32
   626  00615E  20                 	db	32
   627  00615F  20                 	db	32
   628  006160  20                 	db	32
   629  006161  20                 	db	32
   630  006162  00                 	db	0
   631  006163                     STR_16:
   632  006163  41                 	db	65	;'A'
   633  006164  67                 	db	103	;'g'
   634  006165  75                 	db	117	;'u'
   635  006166  61                 	db	97	;'a'
   636  006167  72                 	db	114	;'r'
   637  006168  64                 	db	100	;'d'
   638  006169  20                 	db	32
   639  00616A  30                 	db	48	;'0'
   640  00616B  58                 	db	88	;'X'
   641  00616C  46                 	db	70	;'F'
   642  00616D  45                 	db	69	;'E'
   643  00616E  20                 	db	32
   644  00616F  20                 	db	32
   645  006170  20                 	db	32
   646  006171  20                 	db	32
   647  006172  20                 	db	32
   648  006173  00                 	db	0
   649  006174                     STR_13:
   650  006174  45                 	db	69	;'E'
   651  006175  72                 	db	114	;'r'
   652  006176  72                 	db	114	;'r'
   653  006177  6F                 	db	111	;'o'
   654  006178  20                 	db	32
   655  006179  49                 	db	73	;'I'
   656  00617A  64                 	db	100	;'d'
   657  00617B  6C                 	db	108	;'l'
   658  00617C  65                 	db	101	;'e'
   659  00617D  20                 	db	32
   660  00617E  53                 	db	83	;'S'
   661  00617F  74                 	db	116	;'t'
   662  006180  20                 	db	32
   663  006181  20                 	db	32
   664  006182  20                 	db	32
   665  006183  20                 	db	32
   666  006184  00                 	db	0
   667  006185                     STR_37:
   668  006185  53                 	db	83	;'S'
   669  006186  69                 	db	105	;'i'
   670  006187  73                 	db	115	;'s'
   671  006188  74                 	db	116	;'t'
   672  006189  65                 	db	101	;'e'
   673  00618A  6D                 	db	109	;'m'
   674  00618B  61                 	db	97	;'a'
   675  00618C  20                 	db	32
   676  00618D  4D                 	db	77	;'M'
   677  00618E  6F                 	db	111	;'o'
   678  00618F  6E                 	db	110	;'n'
   679  006190  74                 	db	116	;'t'
   680  006191  61                 	db	97	;'a'
   681  006192  64                 	db	100	;'d'
   682  006193  6F                 	db	111	;'o'
   683  006194  00                 	db	0
   684  006195                     STR_38:
   685  006195  43                 	db	67	;'C'
   686  006196  72                 	db	114	;'r'
   687  006197  69                 	db	105	;'i'
   688  006198  61                 	db	97	;'a'
   689  006199  6E                 	db	110	;'n'
   690  00619A  64                 	db	100	;'d'
   691  00619B  6F                 	db	111	;'o'
   692  00619C  20                 	db	32
   693  00619D  61                 	db	97	;'a'
   694  00619E  72                 	db	114	;'r'
   695  00619F  71                 	db	113	;'q'
   696  0061A0  75                 	db	117	;'u'
   697  0061A1  69                 	db	105	;'i'
   698  0061A2  76                 	db	118	;'v'
   699  0061A3  6F                 	db	111	;'o'
   700  0061A4  00                 	db	0
   701  0061A5                     STR_30:
   702  0061A5  42                 	db	66	;'B'
   703  0061A6  50                 	db	80	;'P'
   704  0061A7  42                 	db	66	;'B'
   705  0061A8  20                 	db	32
   706  0061A9  3E                 	db	62	;'>'
   707  0061AA  20                 	db	32
   708  0061AB  20                 	db	32
   709  0061AC  20                 	db	32
   710  0061AD  20                 	db	32
   711  0061AE  20                 	db	32
   712  0061AF  20                 	db	32
   713  0061B0  20                 	db	32
   714  0061B1  20                 	db	32
   715  0061B2  20                 	db	32
   716  0061B3  20                 	db	32
   717  0061B4  00                 	db	0
   718  0061B5                     STR_31:
   719  0061B5  49                 	db	73	;'I'
   720  0061B6  46                 	db	70	;'F'
   721  0061B7  20                 	db	32
   722  0061B8  20                 	db	32
   723  0061B9  20                 	db	32
   724  0061BA  20                 	db	32
   725  0061BB  3E                 	db	62	;'>'
   726  0061BC  20                 	db	32
   727  0061BD  20                 	db	32
   728  0061BE  20                 	db	32
   729  0061BF  20                 	db	32
   730  0061C0  20                 	db	32
   731  0061C1  20                 	db	32
   732  0061C2  20                 	db	32
   733  0061C3  20                 	db	32
   734  0061C4  00                 	db	0
   735  0061C5                     STR_19:
   736  0061C5  61                 	db	97	;'a'
   737  0061C6  67                 	db	103	;'g'
   738  0061C7  75                 	db	117	;'u'
   739  0061C8  61                 	db	97	;'a'
   740  0061C9  72                 	db	114	;'r'
   741  0061CA  64                 	db	100	;'d'
   742  0061CB  20                 	db	32
   743  0061CC  30                 	db	48	;'0'
   744  0061CD  78                 	db	120	;'x'
   745  0061CE  30                 	db	48	;'0'
   746  0061CF  30                 	db	48	;'0'
   747  0061D0  20                 	db	32
   748  0061D1  20                 	db	32
   749  0061D2  20                 	db	32
   750  0061D3  20                 	db	32
   751  0061D4  00                 	db	0
   752  0061D5                     STR_20:
   753  0061D5  61                 	db	97	;'a'
   754  0061D6  67                 	db	103	;'g'
   755  0061D7  75                 	db	117	;'u'
   756  0061D8  61                 	db	97	;'a'
   757  0061D9  72                 	db	114	;'r'
   758  0061DA  64                 	db	100	;'d'
   759  0061DB  20                 	db	32
   760  0061DC  30                 	db	48	;'0'
   761  0061DD  78                 	db	120	;'x'
   762  0061DE  46                 	db	70	;'F'
   763  0061DF  45                 	db	69	;'E'
   764  0061E0  20                 	db	32
   765  0061E1  20                 	db	32
   766  0061E2  20                 	db	32
   767  0061E3  20                 	db	32
   768  0061E4  00                 	db	0
   769  0061E5                     STR_15:
   770  0061E5  62                 	db	98	;'b'
   771  0061E6  75                 	db	117	;'u'
   772  0061E7  66                 	db	102	;'f'
   773  0061E8  66                 	db	102	;'f'
   774  0061E9  65                 	db	101	;'e'
   775  0061EA  72                 	db	114	;'r'
   776  0061EB  20                 	db	32
   777  0061EC  6C                 	db	108	;'l'
   778  0061ED  65                 	db	101	;'e'
   779  0061EE  69                 	db	105	;'i'
   780  0061EF  74                 	db	116	;'t'
   781  0061F0  2E                 	db	46
   782  0061F1  20                 	db	32
   783  0061F2  20                 	db	32
   784  0061F3  20                 	db	32
   785  0061F4  00                 	db	0
   786  0061F5                     STR_18:
   787  0061F5  00                 	db	0
   788  0061F6  20                 	db	32
   789  0061F7  2D                 	db	45
   790  0061F8  3E                 	db	62	;'>'
   791  0061F9  20                 	db	32
   792  0061FA  20                 	db	32
   793  0061FB  20                 	db	32
   794  0061FC  20                 	db	32
   795  0061FD  20                 	db	32
   796  0061FE  20                 	db	32
   797  0061FF  20                 	db	32
   798  006200  20                 	db	32
   799  006201  20                 	db	32
   800  006202  00                 	db	0
   801  006203                     STR_22:
   802  006203  4C                 	db	76	;'L'
   803  006204  6F                 	db	111	;'o'
   804  006205  61                 	db	97	;'a'
   805  006206  64                 	db	100	;'d'
   806  006207  20                 	db	32
   807  006208  42                 	db	66	;'B'
   808  006209  6F                 	db	111	;'o'
   809  00620A  6F                 	db	111	;'o'
   810  00620B  74                 	db	116	;'t'
   811  00620C  20                 	db	32
   812  00620D  20                 	db	32
   813  00620E  00                 	db	0
   814  00620F                     STR_10:
   815  00620F  49                 	db	73	;'I'
   816  006210  6E                 	db	110	;'n'
   817  006211  73                 	db	115	;'s'
   818  006212  2E                 	db	46
   819  006213  20                 	db	32
   820  006214  43                 	db	67	;'C'
   821  006215  61                 	db	97	;'a'
   822  006216  72                 	db	114	;'r'
   823  006217  74                 	db	116	;'t'
   824  006218  61                 	db	97	;'a'
   825  006219  6F                 	db	111	;'o'
   826  00621A  00                 	db	0
   827  00621B                     STR_9:
   828  00621B  53                 	db	83	;'S'
   829  00621C  65                 	db	101	;'e'
   830  00621D  6D                 	db	109	;'m'
   831  00621E  20                 	db	32
   832  00621F  43                 	db	67	;'C'
   833  006220  61                 	db	97	;'a'
   834  006221  72                 	db	114	;'r'
   835  006222  74                 	db	116	;'t'
   836  006223  61                 	db	97	;'a'
   837  006224  6F                 	db	111	;'o'
   838  006225  00                 	db	0
   839  006226                     STR_40:
   840  006226  52                 	db	82	;'R'
   841  006227  65                 	db	101	;'e'
   842  006228  73                 	db	115	;'s'
   843  006229  75                 	db	117	;'u'
   844  00622A  6C                 	db	108	;'l'
   845  00622B  74                 	db	116	;'t'
   846  00622C  61                 	db	97	;'a'
   847  00622D  64                 	db	100	;'d'
   848  00622E  6F                 	db	111	;'o'
   849  00622F  00                 	db	0
   850  006230                     STR_39:
   851  006230  74                 	db	116	;'t'
   852  006231  65                 	db	101	;'e'
   853  006232  73                 	db	115	;'s'
   854  006233  74                 	db	116	;'t'
   855  006234  65                 	db	101	;'e'
   856  006235  2E                 	db	46
   857  006236  74                 	db	116	;'t'
   858  006237  78                 	db	120	;'x'
   859  006238  74                 	db	116	;'t'
   860  006239  00                 	db	0
   861  00623A                     STR_47:
   862  00623A  21                 	db	33
   863  00623B  50                 	db	80	;'P'
   864  00623C  49                 	db	73	;'I'
   865  00623D  52                 	db	82	;'R'
   866  00623E  42                 	db	66	;'B'
   867  00623F  49                 	db	73	;'I'
   868  006240  54                 	db	84	;'T'
   869  006241  53                 	db	83	;'S'
   870  006242  00                 	db	0
   871  006243  25                 	db	37
   872  006244  64                 	db	100	;'d'
   873  006245  3A                 	db	58	;':'
   874  006246  25                 	db	37
   875  006247  64                 	db	100	;'d'
   876  006248  3A                 	db	58	;':'
   877  006249  25                 	db	37
   878  00624A  64                 	db	100	;'d'
   879  00624B  00                 	db	0
   880  00624C                     STR_27:
   881  00624C  46                 	db	70	;'F'
   882  00624D  41                 	db	65	;'A'
   883  00624E  54                 	db	84	;'T'
   884  00624F  33                 	db	51	;'3'
   885  006250  32                 	db	50	;'2'
   886  006251  00                 	db	0
   887  006252  48                 	db	72	;'H'
   888  006253  6F                 	db	111	;'o'
   889  006254  72                 	db	114	;'r'
   890  006255  61                 	db	97	;'a'
   891  006256  3A                 	db	58	;':'
   892  006257  00                 	db	0
   893  006258  44                 	db	68	;'D'
   894  006259  61                 	db	97	;'a'
   895  00625A  74                 	db	116	;'t'
   896  00625B  61                 	db	97	;'a'
   897  00625C  3A                 	db	58	;':'
   898  00625D  00                 	db	0
   899  00625E                     STR_3:
   900  00625E  25                 	db	37
   901  00625F  2E                 	db	46
   902  006260  30                 	db	48	;'0'
   903  006261  37                 	db	55	;'7'
   904  006262  66                 	db	102	;'f'
   905  006263  00                 	db	0
   906  006264                     STR_42:
   907  006264  45                 	db	69	;'E'
   908  006265  52                 	db	82	;'R'
   909  006266  52                 	db	82	;'R'
   910  006267  4F                 	db	79	;'O'
   911  006268  00                 	db	0
   912  006269                     STR_8:
   913  006269  30                 	db	48	;'0'
   914  00626A  78                 	db	120	;'x'
   915  00626B  46                 	db	70	;'F'
   916  00626C  46                 	db	70	;'F'
   917  00626D  00                 	db	0
   918  00626E  4C                 	db	76	;'L'
   919  00626F  6F                 	db	111	;'o'
   920  006270  6E                 	db	110	;'n'
   921  006271  3A                 	db	58	;':'
   922  006272  00                 	db	0
   923  006273  4C                 	db	76	;'L'
   924  006274  61                 	db	97	;'a'
   925  006275  74                 	db	116	;'t'
   926  006276  3A                 	db	58	;':'
   927  006277  00                 	db	0
   928  006278                     STR_24:
   929  006278  46                 	db	70	;'F'
   930  006279  41                 	db	65	;'A'
   931  00627A  54                 	db	84	;'T'
   932  00627B  00                 	db	0
   933  00627C  0D                 	db	13
   934  00627D  0A                 	db	10
   935  00627E  00                 	db	0
   936  0000                     
   937                           ; #config settings
   938  00627F  00                 	db	0	; dummy byte at the end
   939  0000                     
   940                           	psect	cinit
   941  004F10                     __pcinit:
   942                           	opt stack 0
   943  004F10                     start_initialization:
   944                           	opt stack 0
   945  004F10                     __initialization:
   946                           	opt stack 0
   947                           
   948                           ; Initialize objects allocated to BANK1 (29 bytes)
   949                           ; load TBLPTR registers with __pidataBANK1
   950  004F10  0EA2               	movlw	low __pidataBANK1
   951  004F12  6EF6               	movwf	tblptrl,c
   952  004F14  0E56               	movlw	high __pidataBANK1
   953  004F16  6EF7               	movwf	tblptrh,c
   954  004F18  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   955  004F1A  6EF8               	movwf	tblptru,c
   956  004F1C  EE01  F0DE         	lfsr	0,__pdataBANK1
   957  004F20  EE10 F01D          	lfsr	1,29
   958  004F24                     copy_data0:
   959  004F24  0009               	tblrd		*+
   960  004F26  CFF5 FFEE          	movff	tablat,postinc0
   961  004F2A  50E5               	movf	postdec1,w,c
   962  004F2C  50E1               	movf	fsr1l,w,c
   963  004F2E  E1FA               	bnz	copy_data0
   964                           
   965                           ; Clear objects allocated to BIGRAM (552 bytes)
   966  004F30  EE03  F030         	lfsr	0,__pbssBIGRAM
   967  004F34  EE12 F028          	lfsr	1,552
   968  004F38                     clear_0:
   969  004F38  6AEE               	clrf	postinc0,c
   970  004F3A  50E5               	movf	postdec1,w,c
   971  004F3C  50E1               	movf	fsr1l,w,c
   972  004F3E  E1FC               	bnz	clear_0
   973  004F40  50E2               	movf	fsr1h,w,c
   974  004F42  E1FA               	bnz	clear_0
   975                           
   976                           ; Clear objects allocated to BANK3 (48 bytes)
   977  004F44  EE03  F000         	lfsr	0,__pbssBANK3
   978  004F48  0E30               	movlw	48
   979  004F4A                     clear_1:
   980  004F4A  6AEE               	clrf	postinc0,c
   981  004F4C  06E8               	decf	wreg,f,c
   982  004F4E  E1FD               	bnz	clear_1
   983                           
   984                           ; Clear objects allocated to BANK2 (222 bytes)
   985  004F50  EE02  F000         	lfsr	0,__pbssBANK2
   986  004F54  0EDE               	movlw	222
   987  004F56                     clear_2:
   988  004F56  6AEE               	clrf	postinc0,c
   989  004F58  06E8               	decf	wreg,f,c
   990  004F5A  E1FD               	bnz	clear_2
   991                           
   992                           ; Clear objects allocated to BANK1 (121 bytes)
   993  004F5C  EE01  F000         	lfsr	0,__pbssBANK1
   994  004F60  0E79               	movlw	121
   995  004F62                     clear_3:
   996  004F62  6AEE               	clrf	postinc0,c
   997  004F64  06E8               	decf	wreg,f,c
   998  004F66  E1FD               	bnz	clear_3
   999                           
  1000                           ; Clear objects allocated to COMRAM (21 bytes)
  1001  004F68  EE00  F035         	lfsr	0,__pbssCOMRAM
  1002  004F6C  0E15               	movlw	21
  1003  004F6E                     clear_4:
  1004  004F6E  6AEE               	clrf	postinc0,c
  1005  004F70  06E8               	decf	wreg,f,c
  1006  004F72  E1FD               	bnz	clear_4
  1007  004F74                     end_of_initialization:
  1008                           	opt stack 0
  1009  004F74                     __end_of__initialization:
  1010                           	opt stack 0
  1011  004F74  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1012  004F76  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1013  004F78  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1014  004F7A  6EF8               	movwf	tblptru,c
  1015  004F7C  0100               	movlb	0
  1016  004F7E  EFD0  F02A         	goto	_main	;jump to C main() function
  1017                           tblptru	equ	0xFF8
  1018                           tblptrh	equ	0xFF7
  1019                           tblptrl	equ	0xFF6
  1020                           tablat	equ	0xFF5
  1021                           postinc0	equ	0xFEE
  1022                           wreg	equ	0xFE8
  1023                           postdec1	equ	0xFE5
  1024                           fsr1h	equ	0xFE2
  1025                           fsr1l	equ	0xFE1
  1026                           
  1027                           	psect	bssCOMRAM
  1028  000035                     __pbssCOMRAM:
  1029                           	opt stack 0
  1030  000035                     _FatFs:
  1031                           	opt stack 0
  1032  000035                     	ds	2
  1033  000037                     _data_buff:
  1034                           	opt stack 0
  1035  000037                     	ds	2
  1036  000039                     _rmc_index:
  1037                           	opt stack 0
  1038  000039                     	ds	2
  1039  00003B                     _gga_index:
  1040                           	opt stack 0
  1041  00003B                     	ds	2
  1042  00003D                     _estado:
  1043                           	opt stack 0
  1044  00003D                     	ds	1
  1045  00003E                     _s:
  1046                           	opt stack 0
  1047  00003E                     	ds	1
  1048  00003F                     _Result:
  1049                           	opt stack 0
  1050  00003F                     	ds	1
  1051  000040                     _tarefa_em_execucao:
  1052                           	opt stack 0
  1053  000040                     	ds	1
  1054  000041                     _sinaliza_int_timer:
  1055                           	opt stack 0
  1056  000041                     	ds	1
  1057  000042                     _data_uart_recebe:
  1058                           	opt stack 0
  1059  000042                     	ds	1
  1060  000043                     timer_dois@flag:
  1061                           	opt stack 0
  1062  000043                     	ds	1
  1063  000044                     _is_it_rmc_string:
  1064                           	opt stack 0
  1065  000044                     	ds	1
  1066  000045                     _is_it_gga_string:
  1067                           	opt stack 0
  1068  000045                     	ds	1
  1069  000046                     _comma_counter_rmc:
  1070                           	opt stack 0
  1071  000046                     	ds	1
  1072  000047                     _comma_counter_gga:
  1073                           	opt stack 0
  1074  000047                     	ds	1
  1075  000048                     _E_W:
  1076                           	opt stack 0
  1077  000048                     	ds	1
  1078  000049                     _n_s:
  1079                           	opt stack 0
  1080  000049                     	ds	1
  1081                           tblptru	equ	0xFF8
  1082                           tblptrh	equ	0xFF7
  1083                           tblptrl	equ	0xFF6
  1084                           tablat	equ	0xFF5
  1085                           postinc0	equ	0xFEE
  1086                           wreg	equ	0xFE8
  1087                           postdec1	equ	0xFE5
  1088                           fsr1h	equ	0xFE2
  1089                           fsr1l	equ	0xFE1
  1090                           
  1091                           	psect	bssBANK1
  1092  000100                     __pbssBANK1:
  1093                           	opt stack 0
  1094  000100                     _valor_leitura_adc:
  1095                           	opt stack 0
  1096  000100                     	ds	38
  1097  000126                     _gga_pointers:
  1098                           	opt stack 0
  1099  000126                     	ds	20
  1100  00013A                     _rmc_pointers:
  1101                           	opt stack 0
  1102  00013A                     	ds	12
  1103  000146                     _fileSize:
  1104                           	opt stack 0
  1105  000146                     	ds	4
  1106  00014A                     _tempo_tarefa:
  1107                           	opt stack 0
  1108  00014A                     	ds	4
  1109  00014E                     _tempo_backup:
  1110                           	opt stack 0
  1111  00014E                     	ds	4
  1112  000152                     _p_tarefas:
  1113                           	opt stack 0
  1114  000152                     	ds	4
  1115  000156                     _rmc_code:
  1116                           	opt stack 0
  1117  000156                     	ds	3
  1118  000159                     _gga_code:
  1119                           	opt stack 0
  1120  000159                     	ds	3
  1121  00015C                     _rd:
  1122                           	opt stack 0
  1123  00015C                     	ds	2
  1124  00015E                     _timeout_tarefa:
  1125                           	opt stack 0
  1126  00015E                     	ds	2
  1127  000160                     _fsid:
  1128                           	opt stack 0
  1129  000160                     	ds	2
  1130  000162                     SDCard@init:
  1131                           	opt stack 0
  1132  000162                     	ds	1
  1133  000163                     _data_buffer:
  1134                           	opt stack 0
  1135  000163                     	ds	15
  1136  000172                     _dado_buffer:
  1137                           	opt stack 0
  1138  000172                     	ds	7
  1139                           tblptru	equ	0xFF8
  1140                           tblptrh	equ	0xFF7
  1141                           tblptrl	equ	0xFF6
  1142                           tablat	equ	0xFF5
  1143                           postinc0	equ	0xFEE
  1144                           wreg	equ	0xFE8
  1145                           postdec1	equ	0xFE5
  1146                           fsr1h	equ	0xFE2
  1147                           fsr1l	equ	0xFE1
  1148                           
  1149                           	psect	dataBANK1
  1150  0001DE                     __pdataBANK1:
  1151                           	opt stack 0
  1152  0001DE                     _fileName:
  1153                           	opt stack 0
  1154  0001DE                     	ds	15
  1155  0001ED                     escreve_inteiro_uart@F3952:
  1156                           	opt stack 0
  1157  0001ED                     	ds	7
  1158  0001F4                     escreve_inteiro_lcd@F3962:
  1159                           	opt stack 0
  1160  0001F4                     	ds	7
  1161                           tblptru	equ	0xFF8
  1162                           tblptrh	equ	0xFF7
  1163                           tblptrl	equ	0xFF6
  1164                           tablat	equ	0xFF5
  1165                           postinc0	equ	0xFEE
  1166                           wreg	equ	0xFE8
  1167                           postdec1	equ	0xFE5
  1168                           fsr1h	equ	0xFE2
  1169                           fsr1l	equ	0xFE1
  1170                           
  1171                           	psect	bssBANK2
  1172  000200                     __pbssBANK2:
  1173                           	opt stack 0
  1174  000200                     _gga_buffer:
  1175                           	opt stack 0
  1176  000200                     	ds	80
  1177  000250                     _rmc_buffer:
  1178                           	opt stack 0
  1179  000250                     	ds	70
  1180  000296                     _data_buffer_32:
  1181                           	opt stack 0
  1182  000296                     	ds	32
  1183  0002B6                     _txt:
  1184                           	opt stack 0
  1185  0002B6                     	ds	20
  1186  0002CA                     _buff:
  1187                           	opt stack 0
  1188  0002CA                     	ds	20
  1189                           tblptru	equ	0xFF8
  1190                           tblptrh	equ	0xFF7
  1191                           tblptrl	equ	0xFF6
  1192                           tablat	equ	0xFF5
  1193                           postinc0	equ	0xFEE
  1194                           wreg	equ	0xFE8
  1195                           postdec1	equ	0xFE5
  1196                           fsr1h	equ	0xFE2
  1197                           fsr1l	equ	0xFE1
  1198                           
  1199                           	psect	bssBANK3
  1200  000300                     __pbssBANK3:
  1201                           	opt stack 0
  1202  000300                     _folder:
  1203                           	opt stack 0
  1204  000300                     	ds	48
  1205                           tblptru	equ	0xFF8
  1206                           tblptrh	equ	0xFF7
  1207                           tblptrl	equ	0xFF6
  1208                           tablat	equ	0xFF5
  1209                           postinc0	equ	0xFEE
  1210                           wreg	equ	0xFE8
  1211                           postdec1	equ	0xFE5
  1212                           fsr1h	equ	0xFE2
  1213                           fsr1l	equ	0xFE1
  1214                           
  1215                           	psect	bssBIGRAM
  1216  000330                     __pbssBIGRAM:
  1217                           	opt stack 0
  1218  000330                     _fs:
  1219                           	opt stack 0
  1220  000330                     	ds	552
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           postdec1	equ	0xFE5
  1228                           fsr1h	equ	0xFE2
  1229                           fsr1l	equ	0xFE1
  1230                           
  1231                           	psect	cstackBANK2
  1232  0002DE                     __pcstackBANK2:
  1233                           	opt stack 0
  1234  0002DE                     SDCard@FResult:
  1235                           	opt stack 0
  1236                           
  1237                           ; 1 bytes @ 0x0
  1238  0002DE                     	ds	1
  1239  0002DF                     SDCard@fil:
  1240                           	opt stack 0
  1241                           
  1242                           ; 32 bytes @ 0x1
  1243  0002DF                     	ds	32
  1244                           tblptru	equ	0xFF8
  1245                           tblptrh	equ	0xFF7
  1246                           tblptrl	equ	0xFF6
  1247                           tablat	equ	0xFF5
  1248                           postinc0	equ	0xFEE
  1249                           wreg	equ	0xFE8
  1250                           postdec1	equ	0xFE5
  1251                           fsr1h	equ	0xFE2
  1252                           fsr1l	equ	0xFE1
  1253                           
  1254                           	psect	cstackBANK1
  1255  000179                     __pcstackBANK1:
  1256                           	opt stack 0
  1257  000179                     ??_trace_path:
  1258  000179                     reserve_direntry@sector:
  1259                           	opt stack 0
  1260                           
  1261                           ; 4 bytes @ 0x0
  1262  000179                     	ds	4
  1263  00017D                     reserve_direntry@n:
  1264                           	opt stack 0
  1265                           
  1266                           ; 1 bytes @ 0x4
  1267  00017D                     	ds	1
  1268  00017E                     reserve_direntry@dptr:
  1269                           	opt stack 0
  1270                           
  1271                           ; 2 bytes @ 0x5
  1272  00017E                     	ds	2
  1273  000180                     reserve_direntry@c:
  1274                           	opt stack 0
  1275                           
  1276                           ; 1 bytes @ 0x7
  1277  000180                     	ds	1
  1278  000181                     reserve_direntry@clust:
  1279                           	opt stack 0
  1280                           
  1281                           ; 4 bytes @ 0x8
  1282  000181                     	ds	4
  1283  000185                     _trace_path$1121:
  1284                           	opt stack 0
  1285  000185                     reserve_direntry@fs:
  1286                           	opt stack 0
  1287                           
  1288                           ; 2 bytes @ 0xC
  1289  000185                     	ds	2
  1290  000187                     _trace_path$1123:
  1291                           	opt stack 0
  1292                           
  1293                           ; 2 bytes @ 0xE
  1294  000187                     	ds	2
  1295  000189                     trace_path@fs:
  1296                           	opt stack 0
  1297                           
  1298                           ; 2 bytes @ 0x10
  1299  000189                     	ds	2
  1300  00018B                     trace_path@ds:
  1301                           	opt stack 0
  1302                           
  1303                           ; 1 bytes @ 0x12
  1304  00018B                     	ds	1
  1305  00018C                     trace_path@clust:
  1306                           	opt stack 0
  1307                           
  1308                           ; 4 bytes @ 0x13
  1309  00018C                     	ds	4
  1310  000190                     trace_path@dptr:
  1311                           	opt stack 0
  1312                           
  1313                           ; 2 bytes @ 0x17
  1314  000190                     	ds	2
  1315  000192                     f_open@fp:
  1316                           	opt stack 0
  1317                           
  1318                           ; 2 bytes @ 0x19
  1319  000192                     	ds	2
  1320  000194                     f_open@path:
  1321                           	opt stack 0
  1322                           
  1323                           ; 2 bytes @ 0x1B
  1324  000194                     	ds	2
  1325  000196                     f_open@mode:
  1326                           	opt stack 0
  1327                           
  1328                           ; 1 bytes @ 0x1D
  1329  000196                     	ds	1
  1330  000197                     ??_f_open:
  1331                           
  1332                           ; 1 bytes @ 0x1E
  1333  000197                     	ds	26
  1334  0001B1                     f_open@fn:
  1335                           	opt stack 0
  1336                           
  1337                           ; 12 bytes @ 0x38
  1338  0001B1                     	ds	12
  1339  0001BD                     f_open@rs:
  1340                           	opt stack 0
  1341                           
  1342                           ; 4 bytes @ 0x44
  1343  0001BD                     	ds	4
  1344  0001C1                     f_open@dw:
  1345                           	opt stack 0
  1346                           
  1347                           ; 4 bytes @ 0x48
  1348  0001C1                     	ds	4
  1349  0001C5                     f_open@res:
  1350                           	opt stack 0
  1351                           
  1352                           ; 1 bytes @ 0x4C
  1353  0001C5                     	ds	1
  1354  0001C6                     f_open@dj:
  1355                           	opt stack 0
  1356                           
  1357                           ; 18 bytes @ 0x4D
  1358  0001C6                     	ds	18
  1359  0001D8                     f_open@dir:
  1360                           	opt stack 0
  1361                           
  1362                           ; 2 bytes @ 0x5F
  1363  0001D8                     	ds	2
  1364  0001DA                     ??_SDCard:
  1365                           
  1366                           ; 1 bytes @ 0x61
  1367  0001DA                     	ds	2
  1368  0001DC                     
  1369                           ; 1 bytes @ 0x63
  1370  0001DC                     	ds	2
  1371                           tblptru	equ	0xFF8
  1372                           tblptrh	equ	0xFF7
  1373                           tblptrl	equ	0xFF6
  1374                           tablat	equ	0xFF5
  1375                           postinc0	equ	0xFEE
  1376                           wreg	equ	0xFE8
  1377                           postdec1	equ	0xFE5
  1378                           fsr1h	equ	0xFE2
  1379                           fsr1l	equ	0xFE1
  1380                           
  1381                           	psect	cstackBANK0
  1382  000060                     __pcstackBANK0:
  1383                           	opt stack 0
  1384  000060                     ??_get_fattime:
  1385  000060                     escreve_inteiro_lcd@texto:
  1386                           	opt stack 0
  1387  000060                     mensagem_inicial@msg_linha_um:
  1388                           	opt stack 0
  1389                           
  1390                           ; 17 bytes @ 0x0
  1391  000060                     	ds	7
  1392  000067                     ??_dummy_clocks:
  1393  000067                     command@arg:
  1394                           	opt stack 0
  1395                           
  1396                           ; 4 bytes @ 0x7
  1397  000067                     	ds	2
  1398  000069                     dummy_clocks@n:
  1399                           	opt stack 0
  1400                           
  1401                           ; 1 bytes @ 0x9
  1402  000069                     	ds	1
  1403  00006A                     dummy_clocks@i:
  1404                           	opt stack 0
  1405                           
  1406                           ; 2 bytes @ 0xA
  1407  00006A                     	ds	1
  1408  00006B                     command@CRC:
  1409                           	opt stack 0
  1410                           
  1411                           ; 1 bytes @ 0xB
  1412  00006B                     	ds	1
  1413  00006C                     command@CMD:
  1414                           	opt stack 0
  1415                           
  1416                           ; 1 bytes @ 0xC
  1417  00006C                     	ds	1
  1418  00006D                     command@argument:
  1419                           	opt stack 0
  1420                           
  1421                           ; 1 bytes @ 0xD
  1422  00006D                     	ds	1
  1423  00006E                     sdc_disk_initialize@i:
  1424                           	opt stack 0
  1425  00006E                     sdc_disk_read@p_buff:
  1426                           	opt stack 0
  1427  00006E                     sdc_disk_write@p_buff:
  1428                           	opt stack 0
  1429                           
  1430                           ; 2 bytes @ 0xE
  1431  00006E                     	ds	2
  1432  000070                     sdc_disk_initialize@count_nosd:
  1433                           	opt stack 0
  1434  000070                     sdc_disk_read@sector:
  1435                           	opt stack 0
  1436  000070                     sdc_disk_write@sector:
  1437                           	opt stack 0
  1438                           
  1439                           ; 4 bytes @ 0x10
  1440  000070                     	ds	1
  1441  000071                     mensagem_inicial@msg_dois:
  1442                           	opt stack 0
  1443                           
  1444                           ; 17 bytes @ 0x11
  1445  000071                     	ds	1
  1446  000072                     sdc_disk_initialize@stat:
  1447                           	opt stack 0
  1448                           
  1449                           ; 1 bytes @ 0x12
  1450  000072                     	ds	1
  1451  000073                     sdc_disk_initialize@count:
  1452                           	opt stack 0
  1453                           
  1454                           ; 2 bytes @ 0x13
  1455  000073                     	ds	1
  1456  000074                     sdc_disk_read@count:
  1457                           	opt stack 0
  1458  000074                     sdc_disk_write@count:
  1459                           	opt stack 0
  1460                           
  1461                           ; 1 bytes @ 0x14
  1462  000074                     	ds	1
  1463  000075                     ??_sdc_disk_read:
  1464  000075                     ??_sdc_disk_write:
  1465  000075                     sdc_disk_initialize@buff:
  1466                           	opt stack 0
  1467                           
  1468                           ; 1 bytes @ 0x15
  1469  000075                     	ds	1
  1470  000076                     disk_initialize@pdrv:
  1471                           	opt stack 0
  1472                           
  1473                           ; 1 bytes @ 0x16
  1474  000076                     	ds	1
  1475  000077                     disk_initialize@stat:
  1476                           	opt stack 0
  1477                           
  1478                           ; 1 bytes @ 0x17
  1479  000077                     	ds	1
  1480  000078                     sdc_disk_write@i:
  1481                           	opt stack 0
  1482                           
  1483                           ; 2 bytes @ 0x18
  1484  000078                     	ds	1
  1485  000079                     sdc_disk_read@ptr:
  1486                           	opt stack 0
  1487                           
  1488                           ; 1 bytes @ 0x19
  1489  000079                     	ds	1
  1490  00007A                     sdc_disk_read@offset:
  1491                           	opt stack 0
  1492  00007A                     sdc_disk_write@count1:
  1493                           	opt stack 0
  1494                           
  1495                           ; 2 bytes @ 0x1A
  1496  00007A                     	ds	2
  1497  00007C                     sdc_disk_write@i_405:
  1498                           	opt stack 0
  1499  00007C                     sdc_disk_read@start_add:
  1500                           	opt stack 0
  1501                           
  1502                           ; 4 bytes @ 0x1C
  1503  00007C                     	ds	1
  1504  00007D                     sdc_disk_write@res:
  1505                           	opt stack 0
  1506                           
  1507                           ; 1 bytes @ 0x1D
  1508  00007D                     	ds	1
  1509  00007E                     sdc_disk_write@buff:
  1510                           	opt stack 0
  1511                           
  1512                           ; 1 bytes @ 0x1E
  1513  00007E                     	ds	1
  1514  00007F                     disk_write@buff:
  1515                           	opt stack 0
  1516                           
  1517                           ; 2 bytes @ 0x1F
  1518  00007F                     	ds	1
  1519  000080                     sdc_disk_read@length:
  1520                           	opt stack 0
  1521                           
  1522                           ; 2 bytes @ 0x20
  1523  000080                     	ds	1
  1524  000081                     disk_write@sector:
  1525                           	opt stack 0
  1526                           
  1527                           ; 4 bytes @ 0x21
  1528  000081                     	ds	1
  1529  000082                     sdc_disk_read@buff:
  1530                           	opt stack 0
  1531                           
  1532                           ; 1 bytes @ 0x22
  1533  000082                     	ds	1
  1534  000083                     disk_read@buff:
  1535                           	opt stack 0
  1536                           
  1537                           ; 2 bytes @ 0x23
  1538  000083                     	ds	2
  1539  000085                     disk_write@count:
  1540                           	opt stack 0
  1541  000085                     disk_read@sector:
  1542                           	opt stack 0
  1543                           
  1544                           ; 4 bytes @ 0x25
  1545  000085                     	ds	1
  1546  000086                     disk_write@pdrv:
  1547                           	opt stack 0
  1548                           
  1549                           ; 1 bytes @ 0x26
  1550  000086                     	ds	1
  1551  000087                     disk_write@result:
  1552                           	opt stack 0
  1553                           
  1554                           ; 2 bytes @ 0x27
  1555  000087                     	ds	2
  1556  000089                     disk_read@count:
  1557                           	opt stack 0
  1558  000089                     disk_write@res:
  1559                           	opt stack 0
  1560                           
  1561                           ; 1 bytes @ 0x29
  1562  000089                     	ds	1
  1563  00008A                     disk_read@pdrv:
  1564                           	opt stack 0
  1565                           
  1566                           ; 1 bytes @ 0x2A
  1567  00008A                     	ds	1
  1568  00008B                     disk_read@result:
  1569                           	opt stack 0
  1570                           
  1571                           ; 2 bytes @ 0x2B
  1572  00008B                     	ds	2
  1573  00008D                     disk_read@res:
  1574                           	opt stack 0
  1575                           
  1576                           ; 1 bytes @ 0x2D
  1577  00008D                     	ds	1
  1578  00008E                     move_window@sector:
  1579                           	opt stack 0
  1580  00008E                     check_fs@sect:
  1581                           	opt stack 0
  1582                           
  1583                           ; 4 bytes @ 0x2E
  1584  00008E                     	ds	4
  1585  000092                     ??_move_window:
  1586  000092                     ??_check_fs:
  1587                           
  1588                           ; 1 bytes @ 0x32
  1589  000092                     	ds	4
  1590  000096                     check_fs@temp2:
  1591                           	opt stack 0
  1592                           
  1593                           ; 4 bytes @ 0x36
  1594  000096                     	ds	4
  1595  00009A                     check_fs@temp3:
  1596                           	opt stack 0
  1597                           
  1598                           ; 4 bytes @ 0x3A
  1599  00009A                     	ds	4
  1600  00009E                     move_window@n:
  1601                           	opt stack 0
  1602  00009E                     check_fs@temp:
  1603                           	opt stack 0
  1604                           
  1605                           ; 2 bytes @ 0x3E
  1606  00009E                     	ds	1
  1607  00009F                     move_window@wsect:
  1608                           	opt stack 0
  1609                           
  1610                           ; 4 bytes @ 0x3F
  1611  00009F                     	ds	1
  1612  0000A0                     _check_fs$1188:
  1613                           	opt stack 0
  1614                           
  1615                           ; 1 bytes @ 0x40
  1616  0000A0                     	ds	1
  1617  0000A1                     check_fs@temp4:
  1618                           	opt stack 0
  1619                           
  1620                           ; 4 bytes @ 0x41
  1621  0000A1                     	ds	2
  1622  0000A3                     move_window@fs:
  1623                           	opt stack 0
  1624                           
  1625                           ; 2 bytes @ 0x43
  1626  0000A3                     	ds	2
  1627  0000A5                     ?_get_cluster:
  1628                           	opt stack 0
  1629  0000A5                     sync@fs:
  1630                           	opt stack 0
  1631  0000A5                     check_fs@fs:
  1632                           	opt stack 0
  1633  0000A5                     get_cluster@clust:
  1634                           	opt stack 0
  1635  0000A5                     put_cluster@clust:
  1636                           	opt stack 0
  1637                           
  1638                           ; 4 bytes @ 0x45
  1639  0000A5                     	ds	2
  1640  0000A7                     auto_mount@path:
  1641                           	opt stack 0
  1642  0000A7                     f_sync@fp:
  1643                           	opt stack 0
  1644                           
  1645                           ; 2 bytes @ 0x47
  1646  0000A7                     	ds	2
  1647  0000A9                     ??_get_cluster:
  1648  0000A9                     ??_f_sync:
  1649  0000A9                     auto_mount@chk_wp:
  1650                           	opt stack 0
  1651  0000A9                     put_cluster@val:
  1652                           	opt stack 0
  1653                           
  1654                           ; 4 bytes @ 0x49
  1655  0000A9                     	ds	1
  1656  0000AA                     ??_auto_mount:
  1657                           
  1658                           ; 1 bytes @ 0x4A
  1659  0000AA                     	ds	3
  1660  0000AD                     ??_put_cluster:
  1661  0000AD                     f_sync@res:
  1662                           	opt stack 0
  1663                           
  1664                           ; 1 bytes @ 0x4D
  1665  0000AD                     	ds	1
  1666  0000AE                     f_sync@tim:
  1667                           	opt stack 0
  1668                           
  1669                           ; 4 bytes @ 0x4E
  1670  0000AE                     	ds	4
  1671  0000B2                     _put_cluster$964:
  1672                           	opt stack 0
  1673  0000B2                     f_sync@dir:
  1674                           	opt stack 0
  1675                           
  1676                           ; 2 bytes @ 0x52
  1677  0000B2                     	ds	2
  1678  0000B4                     _put_cluster$965:
  1679                           	opt stack 0
  1680  0000B4                     f_close@fp:
  1681                           	opt stack 0
  1682                           
  1683                           ; 2 bytes @ 0x54
  1684  0000B4                     	ds	2
  1685  0000B6                     f_close@res:
  1686                           	opt stack 0
  1687  0000B6                     put_cluster@fatsect:
  1688                           	opt stack 0
  1689                           
  1690                           ; 4 bytes @ 0x56
  1691  0000B6                     	ds	4
  1692  0000BA                     put_cluster@bc:
  1693                           	opt stack 0
  1694                           
  1695                           ; 2 bytes @ 0x5A
  1696  0000BA                     	ds	2
  1697  0000BC                     put_cluster@p:
  1698                           	opt stack 0
  1699                           
  1700                           ; 2 bytes @ 0x5C
  1701  0000BC                     	ds	2
  1702  0000BE                     put_cluster@fs:
  1703                           	opt stack 0
  1704                           
  1705                           ; 2 bytes @ 0x5E
  1706  0000BE                     	ds	6
  1707  0000C4                     auto_mount@maxclust:
  1708                           	opt stack 0
  1709                           
  1710                           ; 4 bytes @ 0x64
  1711  0000C4                     	ds	4
  1712  0000C8                     auto_mount@totalsect:
  1713                           	opt stack 0
  1714                           
  1715                           ; 4 bytes @ 0x68
  1716  0000C8                     	ds	4
  1717  0000CC                     auto_mount@bootsect:
  1718                           	opt stack 0
  1719                           
  1720                           ; 4 bytes @ 0x6C
  1721  0000CC                     	ds	4
  1722  0000D0                     auto_mount@p:
  1723                           	opt stack 0
  1724                           
  1725                           ; 2 bytes @ 0x70
  1726  0000D0                     	ds	2
  1727  0000D2                     auto_mount@stat:
  1728                           	opt stack 0
  1729                           
  1730                           ; 1 bytes @ 0x72
  1731  0000D2                     	ds	1
  1732  0000D3                     _get_cluster$941:
  1733                           	opt stack 0
  1734  0000D3                     auto_mount@fatsize:
  1735                           	opt stack 0
  1736                           
  1737                           ; 4 bytes @ 0x73
  1738  0000D3                     	ds	2
  1739  0000D5                     get_cluster@wc:
  1740                           	opt stack 0
  1741                           
  1742                           ; 2 bytes @ 0x75
  1743  0000D5                     	ds	2
  1744  0000D7                     auto_mount@fmt:
  1745                           	opt stack 0
  1746  0000D7                     get_cluster@fatsect:
  1747                           	opt stack 0
  1748                           
  1749                           ; 4 bytes @ 0x77
  1750  0000D7                     	ds	1
  1751  0000D8                     auto_mount@fs:
  1752                           	opt stack 0
  1753                           
  1754                           ; 2 bytes @ 0x78
  1755  0000D8                     	ds	3
  1756  0000DB                     get_cluster@bc:
  1757                           	opt stack 0
  1758                           
  1759                           ; 2 bytes @ 0x7B
  1760  0000DB                     	ds	2
  1761  0000DD                     get_cluster@fs:
  1762                           	opt stack 0
  1763                           
  1764                           ; 2 bytes @ 0x7D
  1765  0000DD                     	ds	2
  1766  0000DF                     ?_create_chain:
  1767                           	opt stack 0
  1768  0000DF                     next_dir_entry@dj:
  1769                           	opt stack 0
  1770  0000DF                     remove_chain@clust:
  1771                           	opt stack 0
  1772  0000DF                     create_chain@clust:
  1773                           	opt stack 0
  1774                           
  1775                           ; 4 bytes @ 0x7F
  1776  0000DF                     	ds	2
  1777  0000E1                     ??_next_dir_entry:
  1778                           
  1779                           ; 1 bytes @ 0x81
  1780  0000E1                     	ds	2
  1781  0000E3                     
  1782                           ; 1 bytes @ 0x83
  1783  0000E3                     	ds	4
  1784  0000E7                     remove_chain@nxt:
  1785                           	opt stack 0
  1786  0000E7                     create_chain@mcl:
  1787                           	opt stack 0
  1788                           
  1789                           ; 4 bytes @ 0x87
  1790  0000E7                     	ds	1
  1791  0000E8                     next_dir_entry@clust:
  1792                           	opt stack 0
  1793                           
  1794                           ; 4 bytes @ 0x88
  1795  0000E8                     	ds	3
  1796  0000EB                     remove_chain@fs:
  1797                           	opt stack 0
  1798  0000EB                     create_chain@fs:
  1799                           	opt stack 0
  1800                           
  1801                           ; 2 bytes @ 0x8B
  1802  0000EB                     	ds	1
  1803  0000EC                     next_dir_entry@idx:
  1804                           	opt stack 0
  1805                           
  1806                           ; 2 bytes @ 0x8C
  1807  0000EC                     	ds	1
  1808  0000ED                     create_chain@cstat:
  1809                           	opt stack 0
  1810                           
  1811                           ; 4 bytes @ 0x8D
  1812  0000ED                     	ds	1
  1813  0000EE                     trace_path@dj:
  1814                           	opt stack 0
  1815                           
  1816                           ; 2 bytes @ 0x8E
  1817  0000EE                     	ds	2
  1818  0000F0                     trace_path@fn:
  1819                           	opt stack 0
  1820                           
  1821                           ; 2 bytes @ 0x90
  1822  0000F0                     	ds	1
  1823  0000F1                     create_chain@scl:
  1824                           	opt stack 0
  1825                           
  1826                           ; 4 bytes @ 0x91
  1827  0000F1                     	ds	1
  1828  0000F2                     trace_path@path:
  1829                           	opt stack 0
  1830                           
  1831                           ; 2 bytes @ 0x92
  1832  0000F2                     	ds	2
  1833  0000F4                     trace_path@dir:
  1834                           	opt stack 0
  1835                           
  1836                           ; 2 bytes @ 0x94
  1837  0000F4                     	ds	1
  1838  0000F5                     create_chain@ncl:
  1839                           	opt stack 0
  1840                           
  1841                           ; 4 bytes @ 0x95
  1842  0000F5                     	ds	4
  1843  0000F9                     reserve_direntry@dj:
  1844                           	opt stack 0
  1845                           
  1846                           ; 2 bytes @ 0x99
  1847  0000F9                     	ds	2
  1848  0000FB                     reserve_direntry@dir:
  1849                           	opt stack 0
  1850                           
  1851                           ; 2 bytes @ 0x9B
  1852  0000FB                     	ds	2
  1853  0000FD                     ??_reserve_direntry:
  1854                           
  1855                           ; 1 bytes @ 0x9D
  1856  0000FD                     	ds	2
  1857  0000FF                     escalonador@cont:
  1858                           	opt stack 0
  1859                           
  1860                           ; 1 bytes @ 0x9F
  1861  0000FF                     	ds	1
  1862                           tblptru	equ	0xFF8
  1863                           tblptrh	equ	0xFF7
  1864                           tblptrl	equ	0xFF6
  1865                           tablat	equ	0xFF5
  1866                           postinc0	equ	0xFEE
  1867                           wreg	equ	0xFE8
  1868                           postdec1	equ	0xFE5
  1869                           fsr1h	equ	0xFE2
  1870                           fsr1l	equ	0xFE1
  1871                           
  1872                           	psect	cstackCOMRAM
  1873  000001                     __pcstackCOMRAM:
  1874                           	opt stack 0
  1875  000001                     i2write_timer_zero@timer0:
  1876                           	opt stack 0
  1877                           
  1878                           ; 2 bytes @ 0x0
  1879  000001                     	ds	2
  1880  000003                     i2write_timer_zero@timer:
  1881                           	opt stack 0
  1882                           
  1883                           ; 2 bytes @ 0x2
  1884  000003                     	ds	2
  1885  000005                     ??_isr:
  1886                           
  1887                           ; 1 bytes @ 0x4
  1888  000005                     	ds	16
  1889  000015                     isr@cont:
  1890                           	opt stack 0
  1891                           
  1892                           ; 1 bytes @ 0x14
  1893  000015                     	ds	1
  1894  000016                     ?_memcmp:
  1895                           	opt stack 0
  1896  000016                     ?___wmul:
  1897                           	opt stack 0
  1898  000016                     ?___awdiv:
  1899                           	opt stack 0
  1900  000016                     ?___lwdiv:
  1901                           	opt stack 0
  1902  000016                     ?___lwmod:
  1903                           	opt stack 0
  1904  000016                     ?_get_fattime:
  1905                           	opt stack 0
  1906  000016                     ?___lmul:
  1907                           	opt stack 0
  1908  000016                     ?___lldiv:
  1909                           	opt stack 0
  1910  000016                     disk_ioctl@cmd:
  1911                           	opt stack 0
  1912  000016                     sdc_disk_status@stat:
  1913                           	opt stack 0
  1914  000016                     delay@contador_ext:
  1915                           	opt stack 0
  1916  000016                     write_timer_zero@timer0:
  1917                           	opt stack 0
  1918  000016                     f_mount@fs:
  1919                           	opt stack 0
  1920  000016                     ___wmul@multiplier:
  1921                           	opt stack 0
  1922  000016                     ___awdiv@dividend:
  1923                           	opt stack 0
  1924  000016                     ___lwdiv@dividend:
  1925                           	opt stack 0
  1926  000016                     ___lwmod@dividend:
  1927                           	opt stack 0
  1928  000016                     memcmp@s1:
  1929                           	opt stack 0
  1930  000016                     memcpy@d1:
  1931                           	opt stack 0
  1932  000016                     memset@p1:
  1933                           	opt stack 0
  1934  000016                     ___lmul@multiplier:
  1935                           	opt stack 0
  1936  000016                     ___lldiv@dividend:
  1937                           	opt stack 0
  1938                           
  1939                           ; 4 bytes @ 0x15
  1940  000016                     	ds	1
  1941  000017                     sdc_disk_status@pdrv:
  1942                           	opt stack 0
  1943  000017                     delay@contador_int:
  1944                           	opt stack 0
  1945  000017                     disk_ioctl@buff:
  1946                           	opt stack 0
  1947                           
  1948                           ; 2 bytes @ 0x16
  1949  000017                     	ds	1
  1950  000018                     ??_disk_status:
  1951  000018                     escreve_cmd_lcd@comando:
  1952                           	opt stack 0
  1953  000018                     endereco_cursor_lcd@endereco:
  1954                           	opt stack 0
  1955  000018                     escreve_caractere_lcd@data:
  1956                           	opt stack 0
  1957  000018                     f_mount@drv:
  1958                           	opt stack 0
  1959  000018                     write_timer_zero@timer:
  1960                           	opt stack 0
  1961  000018                     ___wmul@multiplicand:
  1962                           	opt stack 0
  1963  000018                     ___awdiv@divisor:
  1964                           	opt stack 0
  1965  000018                     ___lwdiv@divisor:
  1966                           	opt stack 0
  1967  000018                     ___lwmod@divisor:
  1968                           	opt stack 0
  1969  000018                     memcmp@s2:
  1970                           	opt stack 0
  1971  000018                     memcpy@s1:
  1972                           	opt stack 0
  1973  000018                     memset@c:
  1974                           	opt stack 0
  1975                           
  1976                           ; 2 bytes @ 0x17
  1977  000018                     	ds	1
  1978  000019                     ??_init_lcd:
  1979  000019                     disk_ioctl@pdrv:
  1980                           	opt stack 0
  1981  000019                     posicao_cursor_lcd@coluna:
  1982                           	opt stack 0
  1983  000019                     disk_status@result:
  1984                           	opt stack 0
  1985  000019                     escreve_frase_ram_lcd@buffer:
  1986                           	opt stack 0
  1987                           
  1988                           ; 2 bytes @ 0x18
  1989  000019                     	ds	1
  1990  00001A                     disk_ioctl@res:
  1991                           	opt stack 0
  1992  00001A                     posicao_cursor_lcd@linha:
  1993                           	opt stack 0
  1994  00001A                     ___awdiv@counter:
  1995                           	opt stack 0
  1996  00001A                     ___lwdiv@counter:
  1997                           	opt stack 0
  1998  00001A                     ___lwmod@counter:
  1999                           	opt stack 0
  2000  00001A                     ___wmul@product:
  2001                           	opt stack 0
  2002  00001A                     memcmp@n:
  2003                           	opt stack 0
  2004  00001A                     memcpy@n:
  2005                           	opt stack 0
  2006  00001A                     memset@n:
  2007                           	opt stack 0
  2008  00001A                     ___lmul@multiplicand:
  2009                           	opt stack 0
  2010  00001A                     ___lldiv@divisor:
  2011                           	opt stack 0
  2012  00001A                     get_fattime@f_time:
  2013                           	opt stack 0
  2014                           
  2015                           ; 9 bytes @ 0x19
  2016  00001A                     	ds	1
  2017  00001B                     disk_status@pdrv:
  2018                           	opt stack 0
  2019  00001B                     posicao_cursor_lcd@endereco:
  2020                           	opt stack 0
  2021  00001B                     ___awdiv@sign:
  2022                           	opt stack 0
  2023  00001B                     ___lwdiv@quotient:
  2024                           	opt stack 0
  2025                           
  2026                           ; 2 bytes @ 0x1A
  2027  00001B                     	ds	1
  2028  00001C                     ??_memcmp:
  2029  00001C                     ??_mensagem_inicial:
  2030  00001C                     disk_status@stat:
  2031                           	opt stack 0
  2032  00001C                     ___awdiv@quotient:
  2033                           	opt stack 0
  2034  00001C                     memcpy@d:
  2035                           	opt stack 0
  2036  00001C                     memset@p:
  2037                           	opt stack 0
  2038                           
  2039                           ; 2 bytes @ 0x1B
  2040  00001C                     	ds	1
  2041  00001D                     validate@fs:
  2042                           	opt stack 0
  2043  00001D                     utoa@buf:
  2044                           	opt stack 0
  2045                           
  2046                           ; 2 bytes @ 0x1C
  2047  00001D                     	ds	1
  2048  00001E                     make_dirfile@path:
  2049                           	opt stack 0
  2050  00001E                     memcpy@s:
  2051                           	opt stack 0
  2052  00001E                     ___lmul@product:
  2053                           	opt stack 0
  2054  00001E                     ___lldiv@quotient:
  2055                           	opt stack 0
  2056                           
  2057                           ; 4 bytes @ 0x1D
  2058  00001E                     	ds	1
  2059  00001F                     validate@id:
  2060                           	opt stack 0
  2061  00001F                     utoa@val:
  2062                           	opt stack 0
  2063                           
  2064                           ; 2 bytes @ 0x1E
  2065  00001F                     	ds	1
  2066  000020                     make_dirfile@dirname:
  2067                           	opt stack 0
  2068                           
  2069                           ; 2 bytes @ 0x1F
  2070  000020                     	ds	1
  2071  000021                     ??_validate:
  2072  000021                     utoa@base:
  2073                           	opt stack 0
  2074                           
  2075                           ; 2 bytes @ 0x20
  2076  000021                     	ds	1
  2077  000022                     ??_make_dirfile:
  2078  000022                     ?_clust2sect:
  2079                           	opt stack 0
  2080  000022                     ___lldiv@counter:
  2081                           	opt stack 0
  2082  000022                     clust2sect@clust:
  2083                           	opt stack 0
  2084                           
  2085                           ; 4 bytes @ 0x21
  2086  000022                     	ds	1
  2087  000023                     utoa@v:
  2088                           	opt stack 0
  2089                           
  2090                           ; 2 bytes @ 0x22
  2091  000023                     	ds	1
  2092  000024                     _make_dirfile$1074:
  2093                           	opt stack 0
  2094                           
  2095                           ; 2 bytes @ 0x23
  2096  000024                     	ds	1
  2097  000025                     utoa@c:
  2098                           	opt stack 0
  2099                           
  2100                           ; 1 bytes @ 0x24
  2101  000025                     	ds	1
  2102  000026                     ??_clust2sect:
  2103  000026                     make_dirfile@b:
  2104                           	opt stack 0
  2105  000026                     itoa@buf:
  2106                           	opt stack 0
  2107                           
  2108                           ; 2 bytes @ 0x25
  2109  000026                     	ds	1
  2110  000027                     make_dirfile@t:
  2111                           	opt stack 0
  2112                           
  2113                           ; 1 bytes @ 0x26
  2114  000027                     	ds	1
  2115  000028                     make_dirfile@a:
  2116                           	opt stack 0
  2117  000028                     itoa@val:
  2118                           	opt stack 0
  2119                           
  2120                           ; 2 bytes @ 0x27
  2121  000028                     	ds	1
  2122  000029                     make_dirfile@n:
  2123                           	opt stack 0
  2124                           
  2125                           ; 1 bytes @ 0x28
  2126  000029                     	ds	1
  2127  00002A                     make_dirfile@c:
  2128                           	opt stack 0
  2129  00002A                     itoa@base:
  2130                           	opt stack 0
  2131                           
  2132                           ; 2 bytes @ 0x29
  2133  00002A                     	ds	1
  2134  00002B                     clust2sect@fs:
  2135                           	opt stack 0
  2136                           
  2137                           ; 2 bytes @ 0x2A
  2138  00002B                     	ds	1
  2139  00002C                     itoa@cp:
  2140                           	opt stack 0
  2141                           
  2142                           ; 2 bytes @ 0x2B
  2143  00002C                     	ds	2
  2144  00002E                     escreve_inteiro_lcd@valor:
  2145                           	opt stack 0
  2146                           
  2147                           ; 2 bytes @ 0x2D
  2148  00002E                     	ds	2
  2149  000030                     ??_WriteSPI_:
  2150  000030                     inicializa_SPI@bus_mode:
  2151                           	opt stack 0
  2152  000030                     ReadSPI_@temp_var:
  2153                           	opt stack 0
  2154                           
  2155                           ; 1 bytes @ 0x2F
  2156  000030                     	ds	1
  2157  000031                     response@buff:
  2158                           	opt stack 0
  2159  000031                     inicializa_SPI@smp_phase:
  2160                           	opt stack 0
  2161                           
  2162                           ; 1 bytes @ 0x30
  2163  000031                     	ds	1
  2164  000032                     ??_inicializa_SPI:
  2165  000032                     WriteSPI_@TempVar:
  2166                           	opt stack 0
  2167                           
  2168                           ; 1 bytes @ 0x31
  2169  000032                     	ds	1
  2170  000033                     WriteSPI_@dado:
  2171                           	opt stack 0
  2172                           
  2173                           ; 1 bytes @ 0x32
  2174  000033                     	ds	1
  2175  000034                     ??_sdc_disk_initialize:
  2176  000034                     ??_disk_read:
  2177  000034                     ??_disk_write:
  2178  000034                     inicializa_SPI@sync_mode:
  2179                           	opt stack 0
  2180                           
  2181                           ; 1 bytes @ 0x33
  2182  000034                     	ds	1
  2183  000035                     tblptru	equ	0xFF8
  2184                           tblptrh	equ	0xFF7
  2185                           tblptrl	equ	0xFF6
  2186                           tablat	equ	0xFF5
  2187                           postinc0	equ	0xFEE
  2188                           wreg	equ	0xFE8
  2189                           postdec1	equ	0xFE5
  2190                           fsr1h	equ	0xFE2
  2191                           fsr1l	equ	0xFE1
  2192                           
  2193                           ; 1 bytes @ 0x34
  2194 ;;
  2195 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2196 ;;
  2197 ;; *************** function _main *****************
  2198 ;; Defined at:
  2199 ;;		line 207 in file "main.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2213 ;;      Params:         0       0       0       0       0       0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2216 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2217 ;;Total ram usage:        0 bytes
  2218 ;; Hardware stack levels required when called:   17
  2219 ;; This function calls:
  2220 ;;		_escalonador
  2221 ;;		_inicializa_SPI
  2222 ;;		_inicializa_tarefas
  2223 ;;		_init_hardware
  2224 ;;		_init_lcd
  2225 ;;		_mensagem_inicial
  2226 ;; This function is called by:
  2227 ;;		Startup code after reset
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text0
  2232  0055A0                     __ptext0:
  2233                           	opt stack 0
  2234  0055A0                     _main:
  2235                           	opt stack 14
  2236                           
  2237                           ;main.c: 209: init_hardware();
  2238                           
  2239                           ;incstack = 0
  2240  0055A0  EC79  F02B         	call	_init_hardware	;wreg free
  2241                           
  2242                           ;main.c: 211: init_lcd();
  2243  0055A4  EC55  F025         	call	_init_lcd	;wreg free
  2244                           
  2245                           ;main.c: 214: mensagem_inicial();
  2246  0055A8  EC4B  F027         	call	_mensagem_inicial	;wreg free
  2247                           
  2248                           ;main.c: 215: inicializa_tarefas();;
  2249  0055AC  ECB3  F02A         	call	_inicializa_tarefas	;wreg free
  2250                           
  2251                           ;main.c: 217: inicializa_SPI(0,3,0);
  2252  0055B0  0E03               	movlw	3
  2253  0055B2  6E30               	movwf	inicializa_SPI@bus_mode,c
  2254  0055B4  0E00               	movlw	0
  2255  0055B6  6E31               	movwf	inicializa_SPI@smp_phase,c
  2256  0055B8  0E00               	movlw	0
  2257  0055BA  ECA3  F022         	call	_inicializa_SPI
  2258                           
  2259                           ;main.c: 218: ADCON1 = 0X0F;
  2260  0055BE  0E0F               	movlw	15
  2261  0055C0  6EC1               	movwf	4033,c	;volatile
  2262  0055C2                     l14271:
  2263                           
  2264                           ;main.c: 220: {
  2265                           ;main.c: 222: if ((sinaliza_int_timer == 1) && (2))
  2266  0055C2  0441               	decf	_sinaliza_int_timer,w,c
  2267  0055C4  A4D8               	btfss	status,2,c
  2268  0055C6  D7FD               	goto	l14271
  2269                           
  2270                           ;main.c: 223: {
  2271                           ;main.c: 224: sinaliza_int_timer = 0;
  2272  0055C8  0E00               	movlw	0
  2273  0055CA  6E41               	movwf	_sinaliza_int_timer,c
  2274                           
  2275                           ;main.c: 225: escalonador();
  2276  0055CC  ECAA  F024         	call	_escalonador	;wreg free
  2277  0055D0  D7F8               	goto	l14271
  2278  0055D2                     __end_of_main:
  2279                           	opt stack 0
  2280                           tblptru	equ	0xFF8
  2281                           tblptrh	equ	0xFF7
  2282                           tblptrl	equ	0xFF6
  2283                           tablat	equ	0xFF5
  2284                           postinc0	equ	0xFEE
  2285                           wreg	equ	0xFE8
  2286                           postdec1	equ	0xFE5
  2287                           fsr1h	equ	0xFE2
  2288                           fsr1l	equ	0xFE1
  2289                           status	equ	0xFD8
  2290                           
  2291 ;; *************** function _mensagem_inicial *****************
  2292 ;; Defined at:
  2293 ;;		line 238 in file "main.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;  msg_dois       17   17[BANK0 ] const unsigned char [17]
  2298 ;;  msg_linha_um   17    0[BANK0 ] const unsigned char [17]
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2308 ;;      Params:         0       0       0       0       0       0       0       0       0
  2309 ;;      Locals:         0      34       0       0       0       0       0       0       0
  2310 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2311 ;;      Totals:         2      34       0       0       0       0       0       0       0
  2312 ;;Total ram usage:       36 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; Hardware stack levels required when called:    5
  2315 ;; This function calls:
  2316 ;;		_escreve_cmd_lcd
  2317 ;;		_escreve_frase_ram_lcd
  2318 ;;		_posicao_cursor_lcd
  2319 ;; This function is called by:
  2320 ;;		_main
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           	psect	text1
  2325  004E96                     __ptext1:
  2326                           	opt stack 0
  2327  004E96                     _mensagem_inicial:
  2328                           	opt stack 25
  2329                           
  2330                           ;main.c: 240: const unsigned char msg_linha_um[17] = "  SDCard Init   ";
  2331                           
  2332                           ;incstack = 0
  2333  004E96  0E68               	movlw	low mensagem_inicial@F4096
  2334  004E98  6EF6               	movwf	tblptrl,c
  2335  004E9A                     	if	1	;There is more than 1 active tblptr byte
  2336  004E9A  0E60               	movlw	high mensagem_inicial@F4096
  2337  004E9C  6EF7               	movwf	tblptrh,c
  2338  004E9E                     	endif
  2339  004E9E                     	if	0	;There are less than 3 active tblptr bytes
  2340  004E9E                     	endif
  2341  004E9E  EE20  F060         	lfsr	2,mensagem_inicial@msg_linha_um
  2342  004EA2  0E10               	movlw	16
  2343  004EA4                     u14370:
  2344  004EA4  0009               	tblrd		*+
  2345  004EA6  CFF5 FFDE          	movff	tablat,postinc2
  2346  004EAA  06E8               	decf	wreg,f,c
  2347  004EAC  E2FB               	bc	u14370
  2348                           
  2349                           ;main.c: 241: const unsigned char msg_dois[17] = "   04/03/2022   ";
  2350  004EAE  0E57               	movlw	low mensagem_inicial@F4098
  2351  004EB0  6EF6               	movwf	tblptrl,c
  2352  004EB2                     	if	1	;There is more than 1 active tblptr byte
  2353  004EB2  0E60               	movlw	high mensagem_inicial@F4098
  2354  004EB4  6EF7               	movwf	tblptrh,c
  2355  004EB6                     	endif
  2356  004EB6                     	if	0	;There are less than 3 active tblptr bytes
  2357  004EB6                     	endif
  2358  004EB6  EE20  F071         	lfsr	2,mensagem_inicial@msg_dois
  2359  004EBA  0E10               	movlw	16
  2360  004EBC                     u14380:
  2361  004EBC  0009               	tblrd		*+
  2362  004EBE  CFF5 FFDE          	movff	tablat,postinc2
  2363  004EC2  06E8               	decf	wreg,f,c
  2364  004EC4  E2FB               	bc	u14380
  2365                           
  2366                           ;main.c: 243: posicao_cursor_lcd(1,0);
  2367  004EC6  0E00               	movlw	0
  2368  004EC8  6E19               	movwf	posicao_cursor_lcd@coluna,c
  2369  004ECA  0E01               	movlw	1
  2370  004ECC  ECFA  F027         	call	_posicao_cursor_lcd
  2371                           
  2372                           ;main.c: 244: escreve_frase_ram_lcd(msg_linha_um);
  2373  004ED0  0E60               	movlw	low mensagem_inicial@msg_linha_um
  2374  004ED2  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  2375  004ED4  0E00               	movlw	high mensagem_inicial@msg_linha_um
  2376  004ED6  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  2377  004ED8  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
  2378                           
  2379                           ;main.c: 246: posicao_cursor_lcd(2,0);
  2380  004EDC  0E00               	movlw	0
  2381  004EDE  6E19               	movwf	posicao_cursor_lcd@coluna,c
  2382  004EE0  0E02               	movlw	2
  2383  004EE2  ECFA  F027         	call	_posicao_cursor_lcd
  2384                           
  2385                           ;main.c: 247: escreve_frase_ram_lcd(msg_dois);
  2386  004EE6  0E71               	movlw	low mensagem_inicial@msg_dois
  2387  004EE8  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  2388  004EEA  0E00               	movlw	high mensagem_inicial@msg_dois
  2389  004EEC  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  2390  004EEE  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
  2391                           
  2392                           ;main.c: 248: _delay((unsigned long)((1000)*(48000000/4000.0)));
  2393  004EF2  0E3D               	movlw	61
  2394  004EF4  6E1D               	movwf	(??_mensagem_inicial+1)& (0+255),c
  2395  004EF6  0EE1               	movlw	225
  2396  004EF8  6E1C               	movwf	??_mensagem_inicial& (0+255),c
  2397  004EFA  0E40               	movlw	64
  2398  004EFC                     u16617:
  2399  004EFC  2EE8               	decfsz	wreg,f,c
  2400  004EFE  D7FE               	bra	u16617
  2401  004F00  2E1C               	decfsz	??_mensagem_inicial& (0+255),f,c
  2402  004F02  D7FC               	bra	u16617
  2403  004F04  2E1D               	decfsz	(??_mensagem_inicial+1)& (0+255),f,c
  2404  004F06  D7FA               	bra	u16617
  2405                           
  2406                           ;main.c: 249: escreve_cmd_lcd(0b00000001);
  2407  004F08  0E01               	movlw	1
  2408  004F0A  EC3D  F026         	call	_escreve_cmd_lcd
  2409  004F0E  0012               	return		;funcret
  2410  004F10                     __end_of_mensagem_inicial:
  2411                           	opt stack 0
  2412                           tblptru	equ	0xFF8
  2413                           tblptrh	equ	0xFF7
  2414                           tblptrl	equ	0xFF6
  2415                           tablat	equ	0xFF5
  2416                           postinc0	equ	0xFEE
  2417                           wreg	equ	0xFE8
  2418                           postdec1	equ	0xFE5
  2419                           fsr1h	equ	0xFE2
  2420                           fsr1l	equ	0xFE1
  2421                           postinc2	equ	0xFDE
  2422                           status	equ	0xFD8
  2423                           
  2424 ;; *************** function _init_lcd *****************
  2425 ;; Defined at:
  2426 ;;		line 71 in file "bibliotecas/display_lcd.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;		None
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;		None
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2440 ;;      Params:         0       0       0       0       0       0       0       0       0
  2441 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2442 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2443 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2444 ;;Total ram usage:        1 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    4
  2447 ;; This function calls:
  2448 ;;		_delay
  2449 ;;		_escreve_cmd_lcd
  2450 ;; This function is called by:
  2451 ;;		_main
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text2
  2456  004AAA                     __ptext2:
  2457                           	opt stack 0
  2458  004AAA                     _init_lcd:
  2459                           	opt stack 26
  2460                           
  2461                           ;display_lcd.c: 74: TRISDbits.RD2 = 0;
  2462                           
  2463                           ;incstack = 0
  2464  004AAA  9495               	bcf	3989,2,c	;volatile
  2465                           
  2466                           ;display_lcd.c: 75: TRISDbits.RD1 = 0;
  2467  004AAC  9295               	bcf	3989,1,c	;volatile
  2468                           
  2469                           ;display_lcd.c: 76: TRISDbits.RD0 = 0;
  2470  004AAE  9095               	bcf	3989,0,c	;volatile
  2471                           
  2472                           ;display_lcd.c: 79: TRISDbits.RD4=0;
  2473  004AB0  9895               	bcf	3989,4,c	;volatile
  2474                           
  2475                           ;display_lcd.c: 80: TRISDbits.RD5=0;
  2476  004AB2  9A95               	bcf	3989,5,c	;volatile
  2477                           
  2478                           ;display_lcd.c: 81: TRISDbits.RD6=0;
  2479  004AB4  9C95               	bcf	3989,6,c	;volatile
  2480                           
  2481                           ;display_lcd.c: 82: TRISDbits.RD7=0;
  2482  004AB6  9E95               	bcf	3989,7,c	;volatile
  2483                           
  2484                           ;display_lcd.c: 89: PORTDbits.RD2 = 0;
  2485  004AB8  9483               	bcf	3971,2,c	;volatile
  2486                           
  2487                           ;display_lcd.c: 90: PORTDbits.RD1 = 0;
  2488  004ABA  9283               	bcf	3971,1,c	;volatile
  2489                           
  2490                           ;display_lcd.c: 91: PORTDbits.RD0 = 0;
  2491  004ABC  9083               	bcf	3971,0,c	;volatile
  2492                           
  2493                           ;display_lcd.c: 95: PORTDbits.RD7=0;
  2494  004ABE  9E83               	bcf	3971,7,c	;volatile
  2495                           
  2496                           ;display_lcd.c: 96: PORTDbits.RD6=0;
  2497  004AC0  9C83               	bcf	3971,6,c	;volatile
  2498                           
  2499                           ;display_lcd.c: 97: PORTDbits.RD5=1;
  2500  004AC2  8A83               	bsf	3971,5,c	;volatile
  2501                           
  2502                           ;display_lcd.c: 98: PORTDbits.RD4=1;
  2503  004AC4  8883               	bsf	3971,4,c	;volatile
  2504                           
  2505                           ;display_lcd.c: 103: _delay((unsigned long)((15)*(48000000/4000.0)));
  2506  004AC6  0EEA               	movlw	234
  2507  004AC8  6E19               	movwf	??_init_lcd& (0+255),c
  2508  004ACA  0EC3               	movlw	195
  2509  004ACC                     u16627:
  2510  004ACC  2EE8               	decfsz	wreg,f,c
  2511  004ACE  D7FE               	bra	u16627
  2512  004AD0  2E19               	decfsz	??_init_lcd& (0+255),f,c
  2513  004AD2  D7FC               	bra	u16627
  2514  004AD4  F000               	nop	
  2515                           
  2516                           ;display_lcd.c: 107: PORTDbits.RD0 = 1;
  2517  004AD6  8083               	bsf	3971,0,c	;volatile
  2518                           
  2519                           ;display_lcd.c: 108: delay();
  2520  004AD8  EC3F  F02B         	call	_delay	;wreg free
  2521                           
  2522                           ;display_lcd.c: 109: PORTDbits.RD0 = 0;
  2523  004ADC  9083               	bcf	3971,0,c	;volatile
  2524                           
  2525                           ;display_lcd.c: 110: delay();
  2526  004ADE  EC3F  F02B         	call	_delay	;wreg free
  2527                           
  2528                           ;display_lcd.c: 115: _delay((unsigned long)((5)*(48000000/4000.0)));
  2529  004AE2  0E4E               	movlw	78
  2530  004AE4  6E19               	movwf	??_init_lcd& (0+255),c
  2531  004AE6  0EEB               	movlw	235
  2532  004AE8                     u16637:
  2533  004AE8  2EE8               	decfsz	wreg,f,c
  2534  004AEA  D7FE               	bra	u16637
  2535  004AEC  2E19               	decfsz	??_init_lcd& (0+255),f,c
  2536  004AEE  D7FC               	bra	u16637
  2537  004AF0  F000               	nop	
  2538                           
  2539                           ;display_lcd.c: 118: PORTDbits.RD0 = 1;
  2540  004AF2  8083               	bsf	3971,0,c	;volatile
  2541                           
  2542                           ;display_lcd.c: 119: delay();
  2543  004AF4  EC3F  F02B         	call	_delay	;wreg free
  2544                           
  2545                           ;display_lcd.c: 120: PORTDbits.RD0 = 0;
  2546  004AF8  9083               	bcf	3971,0,c	;volatile
  2547                           
  2548                           ;display_lcd.c: 121: delay();
  2549  004AFA  EC3F  F02B         	call	_delay	;wreg free
  2550                           
  2551                           ;display_lcd.c: 126: _delay((unsigned long)((5)*(48000000/4000.0)));
  2552  004AFE  0E4E               	movlw	78
  2553  004B00  6E19               	movwf	??_init_lcd& (0+255),c
  2554  004B02  0EEB               	movlw	235
  2555  004B04                     u16647:
  2556  004B04  2EE8               	decfsz	wreg,f,c
  2557  004B06  D7FE               	bra	u16647
  2558  004B08  2E19               	decfsz	??_init_lcd& (0+255),f,c
  2559  004B0A  D7FC               	bra	u16647
  2560  004B0C  F000               	nop	
  2561                           
  2562                           ;display_lcd.c: 129: PORTDbits.RD0 = 1;
  2563  004B0E  8083               	bsf	3971,0,c	;volatile
  2564                           
  2565                           ;display_lcd.c: 130: delay();
  2566  004B10  EC3F  F02B         	call	_delay	;wreg free
  2567                           
  2568                           ;display_lcd.c: 131: PORTDbits.RD0 = 0;
  2569  004B14  9083               	bcf	3971,0,c	;volatile
  2570                           
  2571                           ;display_lcd.c: 132: delay();
  2572  004B16  EC3F  F02B         	call	_delay	;wreg free
  2573                           
  2574                           ;display_lcd.c: 135: PORTDbits.RD7=0;
  2575  004B1A  9E83               	bcf	3971,7,c	;volatile
  2576                           
  2577                           ;display_lcd.c: 136: PORTDbits.RD6=0;
  2578  004B1C  9C83               	bcf	3971,6,c	;volatile
  2579                           
  2580                           ;display_lcd.c: 137: PORTDbits.RD5=1;
  2581  004B1E  8A83               	bsf	3971,5,c	;volatile
  2582                           
  2583                           ;display_lcd.c: 138: PORTDbits.RD4=0;
  2584  004B20  9883               	bcf	3971,4,c	;volatile
  2585                           
  2586                           ;display_lcd.c: 142: PORTDbits.RD0 = 1;
  2587  004B22  8083               	bsf	3971,0,c	;volatile
  2588                           
  2589                           ;display_lcd.c: 143: delay();
  2590  004B24  EC3F  F02B         	call	_delay	;wreg free
  2591                           
  2592                           ;display_lcd.c: 144: PORTDbits.RD0 = 0;
  2593  004B28  9083               	bcf	3971,0,c	;volatile
  2594                           
  2595                           ;display_lcd.c: 145: delay();
  2596  004B2A  EC3F  F02B         	call	_delay	;wreg free
  2597                           
  2598                           ;display_lcd.c: 149: escreve_cmd_lcd(0b00101000);
  2599  004B2E  0E28               	movlw	40
  2600  004B30  EC3D  F026         	call	_escreve_cmd_lcd
  2601                           
  2602                           ;display_lcd.c: 150: escreve_cmd_lcd(0b00000110);
  2603  004B34  0E06               	movlw	6
  2604  004B36  EC3D  F026         	call	_escreve_cmd_lcd
  2605                           
  2606                           ;display_lcd.c: 151: escreve_cmd_lcd(0b00001110);
  2607  004B3A  0E0E               	movlw	14
  2608  004B3C  EC3D  F026         	call	_escreve_cmd_lcd
  2609                           
  2610                           ;display_lcd.c: 152: escreve_cmd_lcd(0b00000001);
  2611  004B40  0E01               	movlw	1
  2612  004B42  EC3D  F026         	call	_escreve_cmd_lcd
  2613  004B46  0012               	return		;funcret
  2614  004B48                     __end_of_init_lcd:
  2615                           	opt stack 0
  2616                           tblptru	equ	0xFF8
  2617                           tblptrh	equ	0xFF7
  2618                           tblptrl	equ	0xFF6
  2619                           tablat	equ	0xFF5
  2620                           postinc0	equ	0xFEE
  2621                           wreg	equ	0xFE8
  2622                           postdec1	equ	0xFE5
  2623                           fsr1h	equ	0xFE2
  2624                           fsr1l	equ	0xFE1
  2625                           postinc2	equ	0xFDE
  2626                           status	equ	0xFD8
  2627                           
  2628 ;; *************** function _init_hardware *****************
  2629 ;; Defined at:
  2630 ;;		line 55 in file "bibliotecas/hardware.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      void 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2644 ;;      Params:         0       0       0       0       0       0       0       0       0
  2645 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2646 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2647 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2648 ;;Total ram usage:        0 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    4
  2651 ;; This function calls:
  2652 ;;		_config_timer_dois
  2653 ;;		_config_timer_zero
  2654 ;;		_init_interrupt
  2655 ;;		_init_oscilador
  2656 ;;		_init_ports
  2657 ;; This function is called by:
  2658 ;;		_main
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text3
  2663  0056F2                     __ptext3:
  2664                           	opt stack 0
  2665  0056F2                     _init_hardware:
  2666                           	opt stack 26
  2667                           
  2668                           ;hardware.c: 58: init_oscilador();
  2669                           
  2670                           ;incstack = 0
  2671  0056F2  ECC6  F02B         	call	_init_oscilador	;wreg free
  2672                           
  2673                           ;hardware.c: 61: init_ports();
  2674  0056F6  EC6D  F02B         	call	_init_ports	;wreg free
  2675                           
  2676                           ;hardware.c: 64: config_timer_zero();
  2677  0056FA  EC60  F02B         	call	_config_timer_zero	;wreg free
  2678                           
  2679                           ;hardware.c: 67: config_timer_dois();
  2680  0056FE  ECB2  F02B         	call	_config_timer_dois	;wreg free
  2681                           
  2682                           ;hardware.c: 70: init_interrupt();
  2683  005702  EC8E  F02B         	call	_init_interrupt	;wreg free
  2684  005706  0012               	return		;funcret
  2685  005708                     __end_of_init_hardware:
  2686                           	opt stack 0
  2687                           tblptru	equ	0xFF8
  2688                           tblptrh	equ	0xFF7
  2689                           tblptrl	equ	0xFF6
  2690                           tablat	equ	0xFF5
  2691                           postinc0	equ	0xFEE
  2692                           wreg	equ	0xFE8
  2693                           postdec1	equ	0xFE5
  2694                           fsr1h	equ	0xFE2
  2695                           fsr1l	equ	0xFE1
  2696                           postinc2	equ	0xFDE
  2697                           status	equ	0xFD8
  2698                           
  2699 ;; *************** function _init_ports *****************
  2700 ;; Defined at:
  2701 ;;		line 155 in file "bibliotecas/hardware.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;		None
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2715 ;;      Params:         0       0       0       0       0       0       0       0       0
  2716 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2718 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2719 ;;Total ram usage:        0 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; Hardware stack levels required when called:    2
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		_init_hardware
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text4
  2730  0056DA                     __ptext4:
  2731                           	opt stack 0
  2732  0056DA                     _init_ports:
  2733                           	opt stack 27
  2734                           
  2735                           ;hardware.c: 157: TRISB = 0b00100001;
  2736                           
  2737                           ;incstack = 0
  2738  0056DA  0E21               	movlw	33
  2739  0056DC  6E93               	movwf	3987,c	;volatile
  2740                           
  2741                           ;hardware.c: 158: LATB = 0xFF;
  2742  0056DE  688A               	setf	3978,c	;volatile
  2743                           
  2744                           ;hardware.c: 159: TRISD = 0x00;
  2745  0056E0  0E00               	movlw	0
  2746  0056E2  6E95               	movwf	3989,c	;volatile
  2747                           
  2748                           ;hardware.c: 160: TRISA = 0b00000111;
  2749  0056E4  0E07               	movlw	7
  2750  0056E6  6E92               	movwf	3986,c	;volatile
  2751                           
  2752                           ;hardware.c: 161: TRISC = 0x01111111;
  2753  0056E8  0E11               	movlw	17
  2754  0056EA  6E94               	movwf	3988,c	;volatile
  2755                           
  2756                           ;hardware.c: 162: TRISE = 0b00000011;
  2757  0056EC  0E03               	movlw	3
  2758  0056EE  6E96               	movwf	3990,c	;volatile
  2759  0056F0  0012               	return		;funcret
  2760  0056F2                     __end_of_init_ports:
  2761                           	opt stack 0
  2762                           tblptru	equ	0xFF8
  2763                           tblptrh	equ	0xFF7
  2764                           tblptrl	equ	0xFF6
  2765                           tablat	equ	0xFF5
  2766                           postinc0	equ	0xFEE
  2767                           wreg	equ	0xFE8
  2768                           postdec1	equ	0xFE5
  2769                           fsr1h	equ	0xFE2
  2770                           fsr1l	equ	0xFE1
  2771                           postinc2	equ	0xFDE
  2772                           status	equ	0xFD8
  2773                           
  2774 ;; *************** function _init_oscilador *****************
  2775 ;; Defined at:
  2776 ;;		line 172 in file "bibliotecas/hardware.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		None
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2790 ;;      Params:         0       0       0       0       0       0       0       0       0
  2791 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2793 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2794 ;;Total ram usage:        0 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    2
  2797 ;; This function calls:
  2798 ;;		Nothing
  2799 ;; This function is called by:
  2800 ;;		_init_hardware
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text5
  2805  00578C                     __ptext5:
  2806                           	opt stack 0
  2807  00578C                     _init_oscilador:
  2808                           	opt stack 27
  2809                           
  2810                           ;hardware.c: 175: OSCCONbits.IRCF0 = 1;
  2811                           
  2812                           ;incstack = 0
  2813  00578C  88D3               	bsf	4051,4,c	;volatile
  2814                           
  2815                           ;hardware.c: 176: OSCCONbits.IRCF1 = 1;
  2816  00578E  8AD3               	bsf	4051,5,c	;volatile
  2817                           
  2818                           ;hardware.c: 177: OSCCONbits.IRCF2 = 1;
  2819  005790  8CD3               	bsf	4051,6,c	;volatile
  2820  005792  0012               	return		;funcret
  2821  005794                     __end_of_init_oscilador:
  2822                           	opt stack 0
  2823                           tblptru	equ	0xFF8
  2824                           tblptrh	equ	0xFF7
  2825                           tblptrl	equ	0xFF6
  2826                           tablat	equ	0xFF5
  2827                           postinc0	equ	0xFEE
  2828                           wreg	equ	0xFE8
  2829                           postdec1	equ	0xFE5
  2830                           fsr1h	equ	0xFE2
  2831                           fsr1l	equ	0xFE1
  2832                           postinc2	equ	0xFDE
  2833                           status	equ	0xFD8
  2834                           
  2835 ;; *************** function _init_interrupt *****************
  2836 ;; Defined at:
  2837 ;;		line 98 in file "bibliotecas/hardware.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2851 ;;      Params:         0       0       0       0       0       0       0       0       0
  2852 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2854 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2855 ;;Total ram usage:        0 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    2
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_init_hardware
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text6
  2866  00571C                     __ptext6:
  2867                           	opt stack 0
  2868  00571C                     _init_interrupt:
  2869                           	opt stack 27
  2870                           
  2871                           ;hardware.c: 100: INTCON = 0b10100000;
  2872                           
  2873                           ;incstack = 0
  2874  00571C  0EA0               	movlw	160
  2875  00571E  6EF2               	movwf	intcon,c	;volatile
  2876                           
  2877                           ;hardware.c: 101: INTCON2 = 0b00000000;
  2878  005720  0E00               	movlw	0
  2879  005722  6EF1               	movwf	intcon2,c	;volatile
  2880                           
  2881                           ;hardware.c: 102: INTCON3 = 0b00000000;
  2882  005724  0E00               	movlw	0
  2883  005726  6EF0               	movwf	intcon3,c	;volatile
  2884                           
  2885                           ;hardware.c: 104: PIE1 = 0b00001000;
  2886  005728  0E08               	movlw	8
  2887  00572A  6E9D               	movwf	3997,c	;volatile
  2888  00572C  0012               	return		;funcret
  2889  00572E                     __end_of_init_interrupt:
  2890                           	opt stack 0
  2891                           tblptru	equ	0xFF8
  2892                           tblptrh	equ	0xFF7
  2893                           tblptrl	equ	0xFF6
  2894                           tablat	equ	0xFF5
  2895                           intcon	equ	0xFF2
  2896                           intcon2	equ	0xFF1
  2897                           intcon3	equ	0xFF0
  2898                           postinc0	equ	0xFEE
  2899                           wreg	equ	0xFE8
  2900                           postdec1	equ	0xFE5
  2901                           fsr1h	equ	0xFE2
  2902                           fsr1l	equ	0xFE1
  2903                           postinc2	equ	0xFDE
  2904                           status	equ	0xFD8
  2905                           
  2906 ;; *************** function _config_timer_zero *****************
  2907 ;; Defined at:
  2908 ;;		line 83 in file "bibliotecas/hardware.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;		None
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2, cstack
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2922 ;;      Params:         0       0       0       0       0       0       0       0       0
  2923 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2925 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2926 ;;Total ram usage:        0 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    3
  2929 ;; This function calls:
  2930 ;;		_write_timer_zero
  2931 ;; This function is called by:
  2932 ;;		_init_hardware
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text7
  2937  0056C0                     __ptext7:
  2938                           	opt stack 0
  2939  0056C0                     _config_timer_zero:
  2940                           	opt stack 26
  2941                           
  2942                           ;hardware.c: 85: T0CON = 0b11000011;
  2943                           
  2944                           ;incstack = 0
  2945  0056C0  0EC3               	movlw	195
  2946  0056C2  6ED5               	movwf	4053,c	;volatile
  2947                           
  2948                           ;hardware.c: 86: SPPCON = 0b00000000;
  2949  0056C4  0E00               	movlw	0
  2950  0056C6  6E65               	movwf	3941,c	;volatile
  2951                           
  2952                           ;hardware.c: 87: SPPCFG = 0b00000000;
  2953  0056C8  0E00               	movlw	0
  2954  0056CA  6E63               	movwf	3939,c	;volatile
  2955                           
  2956                           ;hardware.c: 88: write_timer_zero(0x0083);
  2957  0056CC  0E00               	movlw	0
  2958  0056CE  6E17               	movwf	write_timer_zero@timer0+1,c
  2959  0056D0  0E83               	movlw	131
  2960  0056D2  6E16               	movwf	write_timer_zero@timer0,c
  2961  0056D4  EC97  F02B         	call	_write_timer_zero	;wreg free
  2962  0056D8  0012               	return		;funcret
  2963  0056DA                     __end_of_config_timer_zero:
  2964                           	opt stack 0
  2965                           tblptru	equ	0xFF8
  2966                           tblptrh	equ	0xFF7
  2967                           tblptrl	equ	0xFF6
  2968                           tablat	equ	0xFF5
  2969                           intcon	equ	0xFF2
  2970                           intcon2	equ	0xFF1
  2971                           intcon3	equ	0xFF0
  2972                           postinc0	equ	0xFEE
  2973                           wreg	equ	0xFE8
  2974                           postdec1	equ	0xFE5
  2975                           fsr1h	equ	0xFE2
  2976                           fsr1l	equ	0xFE1
  2977                           postinc2	equ	0xFDE
  2978                           status	equ	0xFD8
  2979                           
  2980 ;; *************** function _write_timer_zero *****************
  2981 ;; Defined at:
  2982 ;;		line 139 in file "bibliotecas/hardware.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  timer0          2   21[COMRAM] unsigned int 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  timer           2   23[COMRAM] struct Timers
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		None
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2996 ;;      Params:         2       0       0       0       0       0       0       0       0
  2997 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2999 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3000 ;;Total ram usage:        4 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:    2
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_config_timer_zero
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text8
  3011  00572E                     __ptext8:
  3012                           	opt stack 0
  3013  00572E                     _write_timer_zero:
  3014                           	opt stack 26
  3015                           
  3016                           ;hardware.c: 141: union Timers timer;
  3017                           ;hardware.c: 143: timer.lt = timer0;
  3018                           
  3019                           ;incstack = 0
  3020  00572E  C016  F018         	movff	write_timer_zero@timer0,write_timer_zero@timer
  3021  005732  C017  F019         	movff	write_timer_zero@timer0+1,write_timer_zero@timer+1
  3022                           
  3023                           ;hardware.c: 145: TMR0H = timer.bt[1];
  3024  005736  C019  FFD7         	movff	write_timer_zero@timer+1,4055	;volatile
  3025                           
  3026                           ;hardware.c: 146: TMR0L = timer.bt[0];
  3027  00573A  C018  FFD6         	movff	write_timer_zero@timer,4054	;volatile
  3028  00573E  0012               	return		;funcret
  3029  005740                     __end_of_write_timer_zero:
  3030                           	opt stack 0
  3031                           tblptru	equ	0xFF8
  3032                           tblptrh	equ	0xFF7
  3033                           tblptrl	equ	0xFF6
  3034                           tablat	equ	0xFF5
  3035                           intcon	equ	0xFF2
  3036                           intcon2	equ	0xFF1
  3037                           intcon3	equ	0xFF0
  3038                           postinc0	equ	0xFEE
  3039                           wreg	equ	0xFE8
  3040                           postdec1	equ	0xFE5
  3041                           fsr1h	equ	0xFE2
  3042                           fsr1l	equ	0xFE1
  3043                           postinc2	equ	0xFDE
  3044                           status	equ	0xFD8
  3045                           
  3046 ;; *************** function _config_timer_dois *****************
  3047 ;; Defined at:
  3048 ;;		line 201 in file "bibliotecas/hardware.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;		None
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg, status,2
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3062 ;;      Params:         0       0       0       0       0       0       0       0       0
  3063 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3065 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3066 ;;Total ram usage:        0 bytes
  3067 ;; Hardware stack levels used:    1
  3068 ;; Hardware stack levels required when called:    2
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_init_hardware
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text9
  3077  005764                     __ptext9:
  3078                           	opt stack 0
  3079  005764                     _config_timer_dois:
  3080                           	opt stack 27
  3081                           
  3082                           ;hardware.c: 203: T2CON = 0b00000100;
  3083                           
  3084                           ;incstack = 0
  3085  005764  0E04               	movlw	4
  3086  005766  6ECA               	movwf	4042,c	;volatile
  3087                           
  3088                           ;hardware.c: 204: TMR2 = 0;
  3089  005768  0E00               	movlw	0
  3090  00576A  6ECC               	movwf	4044,c	;volatile
  3091                           
  3092                           ;hardware.c: 206: PR2 = 0x78;
  3093  00576C  0E78               	movlw	120
  3094  00576E  6ECB               	movwf	4043,c	;volatile
  3095  005770  0012               	return		;funcret
  3096  005772                     __end_of_config_timer_dois:
  3097                           	opt stack 0
  3098                           tblptru	equ	0xFF8
  3099                           tblptrh	equ	0xFF7
  3100                           tblptrl	equ	0xFF6
  3101                           tablat	equ	0xFF5
  3102                           intcon	equ	0xFF2
  3103                           intcon2	equ	0xFF1
  3104                           intcon3	equ	0xFF0
  3105                           postinc0	equ	0xFEE
  3106                           wreg	equ	0xFE8
  3107                           postdec1	equ	0xFE5
  3108                           fsr1h	equ	0xFE2
  3109                           fsr1l	equ	0xFE1
  3110                           postinc2	equ	0xFDE
  3111                           status	equ	0xFD8
  3112                           
  3113 ;; *************** function _inicializa_tarefas *****************
  3114 ;; Defined at:
  3115 ;;		line 157 in file "main.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3129 ;;      Params:         0       0       0       0       0       0       0       0       0
  3130 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3132 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3133 ;;Total ram usage:        0 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    2
  3136 ;; This function calls:
  3137 ;;		Nothing
  3138 ;; This function is called by:
  3139 ;;		_main
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text10
  3144  005566                     __ptext10:
  3145                           	opt stack 0
  3146  005566                     _inicializa_tarefas:
  3147                           	opt stack 28
  3148                           
  3149                           ;main.c: 160: p_tarefas[0] = SDCard;
  3150                           
  3151                           ;incstack = 0
  3152  005566  0E88               	movlw	low _SDCard
  3153  005568  0101               	movlb	1	; () banked
  3154  00556A  6F52               	movwf	_p_tarefas& (0+255),b
  3155  00556C  0E3E               	movlw	high _SDCard
  3156  00556E  0101               	movlb	1	; () banked
  3157  005570  6F53               	movwf	(_p_tarefas+1)& (0+255),b
  3158                           
  3159                           ; BSR set to: 1
  3160                           ;main.c: 164: tempo_backup[0] = 5000;
  3161  005572  0E13               	movlw	19
  3162  005574  0101               	movlb	1	; () banked
  3163  005576  6F4F               	movwf	(_tempo_backup+1)& (0+255),b
  3164  005578  0E88               	movlw	136
  3165  00557A  6F4E               	movwf	_tempo_backup& (0+255),b
  3166                           
  3167                           ; BSR set to: 1
  3168                           ;main.c: 165: tempo_backup[1] = 5000;
  3169  00557C  0E13               	movlw	19
  3170  00557E  0101               	movlb	1	; () banked
  3171  005580  6F51               	movwf	(_tempo_backup+3)& (0+255),b
  3172  005582  0E88               	movlw	136
  3173  005584  6F50               	movwf	(_tempo_backup+2)& (0+255),b
  3174                           
  3175                           ; BSR set to: 1
  3176                           ;main.c: 170: tempo_tarefa[0] = 5000;
  3177  005586  0E13               	movlw	19
  3178  005588  0101               	movlb	1	; () banked
  3179  00558A  6F4B               	movwf	(_tempo_tarefa+1)& (0+255),b
  3180  00558C  0E88               	movlw	136
  3181  00558E  6F4A               	movwf	_tempo_tarefa& (0+255),b
  3182                           
  3183                           ; BSR set to: 1
  3184                           ;main.c: 171: tempo_tarefa[1] = 5000;
  3185  005590  0E13               	movlw	19
  3186  005592  0101               	movlb	1	; () banked
  3187  005594  6F4D               	movwf	(_tempo_tarefa+3)& (0+255),b
  3188  005596  0E88               	movlw	136
  3189  005598  6F4C               	movwf	(_tempo_tarefa+2)& (0+255),b
  3190                           
  3191                           ; BSR set to: 1
  3192                           ;main.c: 175: tarefa_em_execucao = 0;
  3193  00559A  0E00               	movlw	0
  3194  00559C  6E40               	movwf	_tarefa_em_execucao,c	;volatile
  3195                           
  3196                           ; BSR set to: 1
  3197  00559E  0012               	return		;funcret
  3198  0055A0                     __end_of_inicializa_tarefas:
  3199                           	opt stack 0
  3200                           tblptru	equ	0xFF8
  3201                           tblptrh	equ	0xFF7
  3202                           tblptrl	equ	0xFF6
  3203                           tablat	equ	0xFF5
  3204                           intcon	equ	0xFF2
  3205                           intcon2	equ	0xFF1
  3206                           intcon3	equ	0xFF0
  3207                           postinc0	equ	0xFEE
  3208                           wreg	equ	0xFE8
  3209                           postdec1	equ	0xFE5
  3210                           fsr1h	equ	0xFE2
  3211                           fsr1l	equ	0xFE1
  3212                           postinc2	equ	0xFDE
  3213                           status	equ	0xFD8
  3214                           
  3215 ;; *************** function _inicializa_SPI *****************
  3216 ;; Defined at:
  3217 ;;		line 49 in file "bibliotecas/SPI.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  sync_mode       1    wreg     unsigned char 
  3220 ;;  bus_mode        1   47[COMRAM] unsigned char 
  3221 ;;  smp_phase       1   48[COMRAM] unsigned char 
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;  sync_mode       1   51[COMRAM] unsigned char 
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3233 ;;      Params:         2       0       0       0       0       0       0       0       0
  3234 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3235 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3236 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3237 ;;Total ram usage:        5 bytes
  3238 ;; Hardware stack levels used:    1
  3239 ;; Hardware stack levels required when called:    6
  3240 ;; This function calls:
  3241 ;;		_escreve_cmd_lcd
  3242 ;;		_escreve_frase_ram_lcd
  3243 ;;		_escreve_inteiro_lcd
  3244 ;;		_posicao_cursor_lcd
  3245 ;; This function is called by:
  3246 ;;		_main
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           	psect	text11
  3251  004546                     __ptext11:
  3252                           	opt stack 0
  3253  004546                     _inicializa_SPI:
  3254                           	opt stack 24
  3255                           
  3256                           ; BSR set to: 1
  3257                           ;incstack = 0
  3258                           ;inicializa_SPI@sync_mode stored from wreg
  3259  004546  6E34               	movwf	inicializa_SPI@sync_mode,c
  3260                           
  3261                           ;SPI.c: 51: SSPCON1bits.SSPEN = 0;
  3262  004548  9AC6               	bcf	4038,5,c	;volatile
  3263                           
  3264                           ;SPI.c: 52: SSPSTAT &= 0x3F;
  3265  00454A  0E3F               	movlw	63
  3266  00454C  16C7               	andwf	4039,f,c	;volatile
  3267                           
  3268                           ;SPI.c: 53: SSPCON1 = 0x00;
  3269  00454E  0E00               	movlw	0
  3270  004550  6EC6               	movwf	4038,c	;volatile
  3271                           
  3272                           ;SPI.c: 54: SSPCON1 |= sync_mode;
  3273  004552  5034               	movf	inicializa_SPI@sync_mode,w,c
  3274  004554  12C6               	iorwf	4038,f,c	;volatile
  3275                           
  3276                           ;SPI.c: 55: SSPSTAT |= smp_phase;
  3277  004556  5031               	movf	inicializa_SPI@smp_phase,w,c
  3278  004558  12C7               	iorwf	4039,f,c	;volatile
  3279                           
  3280                           ;SPI.c: 56: TRISBbits.RB4 = 0;
  3281  00455A  9893               	bcf	3987,4,c	;volatile
  3282                           
  3283                           ;SPI.c: 59: switch(bus_mode)
  3284  00455C  D005               	goto	l12843
  3285  00455E                     l1343:
  3286                           
  3287                           ;SPI.c: 62: SSPSTATbits.CKE = 1;
  3288  00455E  8CC7               	bsf	4039,6,c	;volatile
  3289                           
  3290                           ;SPI.c: 63: break;
  3291  004560  D016               	goto	l12847
  3292  004562                     l1345:
  3293                           
  3294                           ;SPI.c: 65: SSPSTATbits.CKE = 1;
  3295  004562  8CC7               	bsf	4039,6,c	;volatile
  3296  004564                     l1346:
  3297                           
  3298                           ;SPI.c: 69: SSPCON1bits.CKP = 1;
  3299  004564  88C6               	bsf	4038,4,c	;volatile
  3300                           
  3301                           ;SPI.c: 73: }
  3302                           
  3303                           ;SPI.c: 72: break;
  3304                           
  3305                           ;SPI.c: 71: default:
  3306                           
  3307                           ;SPI.c: 70: break;
  3308  004566  D013               	goto	l12847
  3309  004568                     l12843:
  3310  004568  5030               	movf	inicializa_SPI@bus_mode,w,c
  3311                           
  3312                           ; Switch size 1, requested type "space"
  3313                           ; Number of cases is 3, Range of values is 0 to 3
  3314                           ; switch strategies available:
  3315                           ; Name         Instructions Cycles
  3316                           ; simple_byte           10     6 (average)
  3317                           ;	Chosen strategy is simple_byte
  3318  00456A  0A00               	xorlw	0	; case 0
  3319  00456C  B4D8               	btfsc	status,2,c
  3320  00456E  D7F7               	goto	l1343
  3321  004570  0A02               	xorlw	2	; case 2
  3322  004572  B4D8               	btfsc	status,2,c
  3323  004574  D7F6               	goto	l1345
  3324  004576  0A01               	xorlw	1	; case 3
  3325  004578  B4D8               	btfsc	status,2,c
  3326  00457A  D7F4               	goto	l1346
  3327                           
  3328                           ;SPI.c: 75: switch( sync_mode )
  3329  00457C  D008               	goto	l12847
  3330  00457E                     l1349:
  3331                           
  3332                           ;SPI.c: 78: TRISBbits.RB1 = 1;
  3333  00457E  8293               	bsf	3987,1,c	;volatile
  3334                           
  3335                           ;SPI.c: 79: TRISBbits.RB4 = 1;
  3336  004580  8893               	bsf	3987,4,c	;volatile
  3337                           
  3338                           ;SPI.c: 80: break;
  3339  004582  D00F               	goto	l1350
  3340  004584                     l1351:
  3341                           
  3342                           ;SPI.c: 83: TRISBbits.RB1 = 1;
  3343  004584  8293               	bsf	3987,1,c	;volatile
  3344                           
  3345                           ;SPI.c: 84: break;
  3346  004586  D00D               	goto	l1350
  3347  004588                     l1352:
  3348                           
  3349                           ;SPI.c: 87: TRISBbits.RB1 = 0;
  3350  004588  9293               	bcf	3987,1,c	;volatile
  3351                           
  3352                           ;SPI.c: 88: TRISBbits.RB4 = 0;
  3353  00458A  9893               	bcf	3987,4,c	;volatile
  3354                           
  3355                           ;SPI.c: 90: }
  3356                           
  3357                           ;SPI.c: 89: break;
  3358  00458C  D00A               	goto	l1350
  3359  00458E                     l12847:
  3360  00458E  5034               	movf	inicializa_SPI@sync_mode,w,c
  3361                           
  3362                           ; Switch size 1, requested type "space"
  3363                           ; Number of cases is 3, Range of values is 0 to 5
  3364                           ; switch strategies available:
  3365                           ; Name         Instructions Cycles
  3366                           ; simple_byte           10     6 (average)
  3367                           ;	Chosen strategy is simple_byte
  3368  004590  0A00               	xorlw	0	; case 0
  3369  004592  B4D8               	btfsc	status,2,c
  3370  004594  D7F9               	goto	l1352
  3371  004596  0A04               	xorlw	4	; case 4
  3372  004598  B4D8               	btfsc	status,2,c
  3373  00459A  D7F1               	goto	l1349
  3374  00459C  0A01               	xorlw	1	; case 5
  3375  00459E  B4D8               	btfsc	status,2,c
  3376  0045A0  D7F1               	goto	l1351
  3377  0045A2                     l1350:
  3378                           
  3379                           ;SPI.c: 91: TRISBbits.RB1 = 0;
  3380  0045A2  9293               	bcf	3987,1,c	;volatile
  3381                           
  3382                           ;SPI.c: 92: TRISBbits.RB4 = 0;
  3383  0045A4  9893               	bcf	3987,4,c	;volatile
  3384                           
  3385                           ;SPI.c: 94: TRISBbits.RB0 = 1;
  3386  0045A6  8093               	bsf	3987,0,c	;volatile
  3387                           
  3388                           ;SPI.c: 95: TRISCbits.RC7 = 0;
  3389  0045A8  9E94               	bcf	3988,7,c	;volatile
  3390                           
  3391                           ;SPI.c: 99: SSPCON1bits.SSPEN = 1;
  3392  0045AA  8AC6               	bsf	4038,5,c	;volatile
  3393                           
  3394                           ;SPI.c: 100: posicao_cursor_lcd(1,1);
  3395  0045AC  0E01               	movlw	1
  3396  0045AE  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3397  0045B0  0E01               	movlw	1
  3398  0045B2  ECFA  F027         	call	_posicao_cursor_lcd
  3399                           
  3400                           ;SPI.c: 101: escreve_frase_ram_lcd("SPI configurada!");
  3401  0045B6  0E30               	movlw	low STR_43
  3402  0045B8  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  3403  0045BA  0E61               	movlw	high STR_43
  3404  0045BC  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  3405  0045BE  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
  3406                           
  3407                           ;SPI.c: 103: _delay((unsigned long)((2000)*(48000000/4000.0)));
  3408  0045C2  0E7A               	movlw	122
  3409  0045C4  6E33               	movwf	(??_inicializa_SPI+1)& (0+255),c
  3410  0045C6  0EC1               	movlw	193
  3411  0045C8  6E32               	movwf	??_inicializa_SPI& (0+255),c
  3412  0045CA  0E82               	movlw	130
  3413  0045CC                     u16657:
  3414  0045CC  2EE8               	decfsz	wreg,f,c
  3415  0045CE  D7FE               	bra	u16657
  3416  0045D0  2E32               	decfsz	??_inicializa_SPI& (0+255),f,c
  3417  0045D2  D7FC               	bra	u16657
  3418  0045D4  2E33               	decfsz	(??_inicializa_SPI+1)& (0+255),f,c
  3419  0045D6  D7FA               	bra	u16657
  3420                           
  3421                           ;SPI.c: 104: posicao_cursor_lcd(1,0);
  3422  0045D8  0E00               	movlw	0
  3423  0045DA  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3424  0045DC  0E01               	movlw	1
  3425  0045DE  ECFA  F027         	call	_posicao_cursor_lcd
  3426                           
  3427                           ;SPI.c: 105: escreve_frase_ram_lcd("BUS MODE        ");
  3428  0045E2  0EFD               	movlw	low STR_44
  3429  0045E4  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  3430  0045E6  0E60               	movlw	high STR_44
  3431  0045E8  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  3432  0045EA  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
  3433                           
  3434                           ;SPI.c: 106: posicao_cursor_lcd(1, 11);
  3435  0045EE  0E0B               	movlw	11
  3436  0045F0  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3437  0045F2  0E01               	movlw	1
  3438  0045F4  ECFA  F027         	call	_posicao_cursor_lcd
  3439                           
  3440                           ;SPI.c: 107: escreve_inteiro_lcd(bus_mode);
  3441  0045F8  C030  F02E         	movff	inicializa_SPI@bus_mode,escreve_inteiro_lcd@valor
  3442  0045FC  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
  3443  0045FE  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3444                           
  3445                           ;SPI.c: 108: posicao_cursor_lcd(2,0);
  3446  004602  0E00               	movlw	0
  3447  004604  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3448  004606  0E02               	movlw	2
  3449  004608  ECFA  F027         	call	_posicao_cursor_lcd
  3450                           
  3451                           ;SPI.c: 109: escreve_frase_ram_lcd("SYNC MODE       ");
  3452  00460C  0E0E               	movlw	low STR_45
  3453  00460E  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  3454  004610  0E61               	movlw	high STR_45
  3455  004612  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  3456  004614  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
  3457                           
  3458                           ;SPI.c: 110: posicao_cursor_lcd(2, 11);
  3459  004618  0E0B               	movlw	11
  3460  00461A  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3461  00461C  0E02               	movlw	2
  3462  00461E  ECFA  F027         	call	_posicao_cursor_lcd
  3463                           
  3464                           ;SPI.c: 111: escreve_inteiro_lcd(sync_mode);
  3465  004622  C034  F02E         	movff	inicializa_SPI@sync_mode,escreve_inteiro_lcd@valor
  3466  004626  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
  3467  004628  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3468                           
  3469                           ;SPI.c: 112: _delay((unsigned long)((2000)*(48000000/4000.0)));
  3470  00462C  0E7A               	movlw	122
  3471  00462E  6E33               	movwf	(??_inicializa_SPI+1)& (0+255),c
  3472  004630  0EC1               	movlw	193
  3473  004632  6E32               	movwf	??_inicializa_SPI& (0+255),c
  3474  004634  0E82               	movlw	130
  3475  004636                     u16667:
  3476  004636  2EE8               	decfsz	wreg,f,c
  3477  004638  D7FE               	bra	u16667
  3478  00463A  2E32               	decfsz	??_inicializa_SPI& (0+255),f,c
  3479  00463C  D7FC               	bra	u16667
  3480  00463E  2E33               	decfsz	(??_inicializa_SPI+1)& (0+255),f,c
  3481  004640  D7FA               	bra	u16667
  3482                           
  3483                           ;SPI.c: 113: posicao_cursor_lcd(1,0);
  3484  004642  0E00               	movlw	0
  3485  004644  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3486  004646  0E01               	movlw	1
  3487  004648  ECFA  F027         	call	_posicao_cursor_lcd
  3488                           
  3489                           ;SPI.c: 114: escreve_frase_ram_lcd("SMP PHASE       ");
  3490  00464C  0E1F               	movlw	low STR_46
  3491  00464E  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  3492  004650  0E61               	movlw	high STR_46
  3493  004652  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  3494  004654  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
  3495                           
  3496                           ;SPI.c: 115: posicao_cursor_lcd(1, 11);
  3497  004658  0E0B               	movlw	11
  3498  00465A  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3499  00465C  0E01               	movlw	1
  3500  00465E  ECFA  F027         	call	_posicao_cursor_lcd
  3501                           
  3502                           ;SPI.c: 116: escreve_inteiro_lcd(smp_phase);
  3503  004662  C031  F02E         	movff	inicializa_SPI@smp_phase,escreve_inteiro_lcd@valor
  3504  004666  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
  3505  004668  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3506                           
  3507                           ;SPI.c: 117: _delay((unsigned long)((2000)*(48000000/4000.0)));
  3508  00466C  0E7A               	movlw	122
  3509  00466E  6E33               	movwf	(??_inicializa_SPI+1)& (0+255),c
  3510  004670  0EC1               	movlw	193
  3511  004672  6E32               	movwf	??_inicializa_SPI& (0+255),c
  3512  004674  0E82               	movlw	130
  3513  004676                     u16677:
  3514  004676  2EE8               	decfsz	wreg,f,c
  3515  004678  D7FE               	bra	u16677
  3516  00467A  2E32               	decfsz	??_inicializa_SPI& (0+255),f,c
  3517  00467C  D7FC               	bra	u16677
  3518  00467E  2E33               	decfsz	(??_inicializa_SPI+1)& (0+255),f,c
  3519  004680  D7FA               	bra	u16677
  3520                           
  3521                           ;SPI.c: 121: escreve_cmd_lcd(0b00000001);
  3522  004682  0E01               	movlw	1
  3523  004684  EC3D  F026         	call	_escreve_cmd_lcd
  3524  004688  0012               	return		;funcret
  3525  00468A                     __end_of_inicializa_SPI:
  3526                           	opt stack 0
  3527                           tblptru	equ	0xFF8
  3528                           tblptrh	equ	0xFF7
  3529                           tblptrl	equ	0xFF6
  3530                           tablat	equ	0xFF5
  3531                           intcon	equ	0xFF2
  3532                           intcon2	equ	0xFF1
  3533                           intcon3	equ	0xFF0
  3534                           postinc0	equ	0xFEE
  3535                           wreg	equ	0xFE8
  3536                           postdec1	equ	0xFE5
  3537                           fsr1h	equ	0xFE2
  3538                           fsr1l	equ	0xFE1
  3539                           postinc2	equ	0xFDE
  3540                           status	equ	0xFD8
  3541                           
  3542 ;; *************** function _escreve_cmd_lcd *****************
  3543 ;; Defined at:
  3544 ;;		line 162 in file "bibliotecas/display_lcd.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;  comando         1    wreg     unsigned char 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  comando         1   23[COMRAM] unsigned char 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2, status,0, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3558 ;;      Params:         0       0       0       0       0       0       0       0       0
  3559 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3561 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3562 ;;Total ram usage:        1 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    3
  3565 ;; This function calls:
  3566 ;;		_delay
  3567 ;; This function is called by:
  3568 ;;		_init_lcd
  3569 ;;		_mensagem_inicial
  3570 ;;		_inicializa_SPI
  3571 ;;		_gps
  3572 ;;		_cria_caractere_lcd
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	text12
  3577  004C7A                     __ptext12:
  3578                           	opt stack 0
  3579  004C7A                     _escreve_cmd_lcd:
  3580                           	opt stack 26
  3581                           
  3582                           ;incstack = 0
  3583                           ;escreve_cmd_lcd@comando stored from wreg
  3584  004C7A  6E18               	movwf	escreve_cmd_lcd@comando,c
  3585                           
  3586                           ;display_lcd.c: 165: PORTDbits.RD2 = 0;
  3587  004C7C  9483               	bcf	3971,2,c	;volatile
  3588                           
  3589                           ;display_lcd.c: 166: PORTDbits.RD1 = 0;
  3590  004C7E  9283               	bcf	3971,1,c	;volatile
  3591                           
  3592                           ;display_lcd.c: 167: PORTDbits.RD0 = 0;
  3593  004C80  9083               	bcf	3971,0,c	;volatile
  3594                           
  3595                           ;display_lcd.c: 170: if(comando&0b00010000){PORTDbits.RD4=1;}
  3596  004C82  A818               	btfss	escreve_cmd_lcd@comando,4,c
  3597  004C84  D002               	goto	l294
  3598  004C86  8883               	bsf	3971,4,c	;volatile
  3599  004C88  D001               	goto	l12615
  3600  004C8A                     l294:
  3601                           
  3602                           ;display_lcd.c: 171: else {PORTDbits.RD4=0;}
  3603  004C8A  9883               	bcf	3971,4,c	;volatile
  3604  004C8C                     l12615:
  3605                           
  3606                           ;display_lcd.c: 172: if(comando&0b00100000){PORTDbits.RD5=1;}
  3607  004C8C  AA18               	btfss	escreve_cmd_lcd@comando,5,c
  3608  004C8E  D002               	goto	l296
  3609  004C90  8A83               	bsf	3971,5,c	;volatile
  3610  004C92  D001               	goto	l12619
  3611  004C94                     l296:
  3612                           
  3613                           ;display_lcd.c: 173: else {PORTDbits.RD5=0;}
  3614  004C94  9A83               	bcf	3971,5,c	;volatile
  3615  004C96                     l12619:
  3616                           
  3617                           ;display_lcd.c: 174: if(comando&0b01000000){PORTDbits.RD6=1;}
  3618  004C96  AC18               	btfss	escreve_cmd_lcd@comando,6,c
  3619  004C98  D002               	goto	l298
  3620  004C9A  8C83               	bsf	3971,6,c	;volatile
  3621  004C9C  D001               	goto	l12623
  3622  004C9E                     l298:
  3623                           
  3624                           ;display_lcd.c: 175: else {PORTDbits.RD6=0;}
  3625  004C9E  9C83               	bcf	3971,6,c	;volatile
  3626  004CA0                     l12623:
  3627                           
  3628                           ;display_lcd.c: 176: if(comando&0b10000000){PORTDbits.RD7=1;}
  3629  004CA0  AE18               	btfss	escreve_cmd_lcd@comando,7,c
  3630  004CA2  D002               	goto	l300
  3631  004CA4  8E83               	bsf	3971,7,c	;volatile
  3632  004CA6  D001               	goto	l301
  3633  004CA8                     l300:
  3634                           
  3635                           ;display_lcd.c: 177: else {PORTDbits.RD7=0;}
  3636  004CA8  9E83               	bcf	3971,7,c	;volatile
  3637  004CAA                     l301:
  3638                           
  3639                           ;display_lcd.c: 180: PORTDbits.RD0 = 1;
  3640  004CAA  8083               	bsf	3971,0,c	;volatile
  3641                           
  3642                           ;display_lcd.c: 181: delay();
  3643  004CAC  EC3F  F02B         	call	_delay	;wreg free
  3644                           
  3645                           ;display_lcd.c: 182: PORTDbits.RD0 = 0;
  3646  004CB0  9083               	bcf	3971,0,c	;volatile
  3647                           
  3648                           ;display_lcd.c: 183: delay();
  3649  004CB2  EC3F  F02B         	call	_delay	;wreg free
  3650                           
  3651                           ;display_lcd.c: 186: if(comando&0b00000001){PORTDbits.RD4=1;}
  3652  004CB6  A018               	btfss	escreve_cmd_lcd@comando,0,c
  3653  004CB8  D002               	goto	l302
  3654  004CBA  8883               	bsf	3971,4,c	;volatile
  3655  004CBC  D001               	goto	l303
  3656  004CBE                     l302:
  3657                           
  3658                           ;display_lcd.c: 187: else {PORTDbits.RD4=0;}
  3659  004CBE  9883               	bcf	3971,4,c	;volatile
  3660  004CC0                     l303:
  3661                           
  3662                           ;display_lcd.c: 188: if(comando&0b00000010){PORTDbits.RD5=1;}
  3663  004CC0  A218               	btfss	escreve_cmd_lcd@comando,1,c
  3664  004CC2  D002               	goto	l304
  3665  004CC4  8A83               	bsf	3971,5,c	;volatile
  3666  004CC6  D001               	goto	l305
  3667  004CC8                     l304:
  3668                           
  3669                           ;display_lcd.c: 189: else {PORTDbits.RD5=0;}
  3670  004CC8  9A83               	bcf	3971,5,c	;volatile
  3671  004CCA                     l305:
  3672                           
  3673                           ;display_lcd.c: 190: if(comando&0b00000100){PORTDbits.RD6=1;}
  3674  004CCA  A418               	btfss	escreve_cmd_lcd@comando,2,c
  3675  004CCC  D002               	goto	l306
  3676  004CCE  8C83               	bsf	3971,6,c	;volatile
  3677  004CD0  D001               	goto	l307
  3678  004CD2                     l306:
  3679                           
  3680                           ;display_lcd.c: 191: else {PORTDbits.RD6=0;}
  3681  004CD2  9C83               	bcf	3971,6,c	;volatile
  3682  004CD4                     l307:
  3683                           
  3684                           ;display_lcd.c: 192: if(comando&0b00001000){PORTDbits.RD7=1;}
  3685  004CD4  A618               	btfss	escreve_cmd_lcd@comando,3,c
  3686  004CD6  D002               	goto	l308
  3687  004CD8  8E83               	bsf	3971,7,c	;volatile
  3688  004CDA  D001               	goto	l309
  3689  004CDC                     l308:
  3690                           
  3691                           ;display_lcd.c: 193: else {PORTDbits.RD7=0;}
  3692  004CDC  9E83               	bcf	3971,7,c	;volatile
  3693  004CDE                     l309:
  3694                           
  3695                           ;display_lcd.c: 196: PORTDbits.RD0 = 1;
  3696  004CDE  8083               	bsf	3971,0,c	;volatile
  3697                           
  3698                           ;display_lcd.c: 197: delay();
  3699  004CE0  EC3F  F02B         	call	_delay	;wreg free
  3700                           
  3701                           ;display_lcd.c: 198: PORTDbits.RD0 = 0;
  3702  004CE4  9083               	bcf	3971,0,c	;volatile
  3703                           
  3704                           ;display_lcd.c: 199: delay();
  3705  004CE6  EC3F  F02B         	call	_delay	;wreg free
  3706                           
  3707                           ;display_lcd.c: 204: if (comando==0x01 || comando==0x02 || comando==0x03)
  3708  004CEA  0418               	decf	escreve_cmd_lcd@comando,w,c
  3709  004CEC  B4D8               	btfsc	status,2,c
  3710  004CEE  D008               	goto	l12651
  3711  004CF0  0E02               	movlw	2
  3712  004CF2  1818               	xorwf	escreve_cmd_lcd@comando,w,c
  3713  004CF4  B4D8               	btfsc	status,2,c
  3714  004CF6  D004               	goto	l12651
  3715  004CF8  0E03               	movlw	3
  3716  004CFA  1818               	xorwf	escreve_cmd_lcd@comando,w,c
  3717  004CFC  A4D8               	btfss	status,2,c
  3718  004CFE  0012               	return	
  3719  004D00                     l12651:
  3720                           
  3721                           ;display_lcd.c: 205: { delay(); }
  3722  004D00  EC3F  F02B         	call	_delay	;wreg free
  3723  004D04  0012               	return	
  3724  004D06                     __end_of_escreve_cmd_lcd:
  3725                           	opt stack 0
  3726                           tblptru	equ	0xFF8
  3727                           tblptrh	equ	0xFF7
  3728                           tblptrl	equ	0xFF6
  3729                           tablat	equ	0xFF5
  3730                           intcon	equ	0xFF2
  3731                           intcon2	equ	0xFF1
  3732                           intcon3	equ	0xFF0
  3733                           postinc0	equ	0xFEE
  3734                           wreg	equ	0xFE8
  3735                           postdec1	equ	0xFE5
  3736                           fsr1h	equ	0xFE2
  3737                           fsr1l	equ	0xFE1
  3738                           postinc2	equ	0xFDE
  3739                           status	equ	0xFD8
  3740                           
  3741 ;; *************** function _escalonador *****************
  3742 ;; Defined at:
  3743 ;;		line 186 in file "main.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;		None
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;  cont            1  159[BANK0 ] unsigned char 
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3757 ;;      Params:         0       0       0       0       0       0       0       0       0
  3758 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3759 ;;      Temps:          0       0       2       0       0       0       0       0       0
  3760 ;;      Totals:         0       1       2       0       0       0       0       0       0
  3761 ;;Total ram usage:        3 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; Hardware stack levels required when called:   16
  3764 ;; This function calls:
  3765 ;;		_SDCard
  3766 ;; This function is called by:
  3767 ;;		_main
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	text13
  3772  004954                     __ptext13:
  3773                           	opt stack 0
  3774  004954                     _escalonador:
  3775                           	opt stack 14
  3776                           
  3777                           ;main.c: 188: unsigned char cont;
  3778                           ;main.c: 189: for(cont = 0; cont<2;cont++)
  3779                           
  3780                           ;incstack = 0
  3781  004954  0E00               	movlw	0
  3782  004956  0100               	movlb	0	; () banked
  3783  004958  6FFF               	movwf	escalonador@cont& (0+255),b
  3784  00495A                     l12795:
  3785                           
  3786                           ; BSR set to: 0
  3787  00495A  0E01               	movlw	1
  3788  00495C  0100               	movlb	0	; () banked
  3789  00495E  65FF               	cpfsgt	escalonador@cont& (0+255),b
  3790  004960  D001               	goto	l12799
  3791  004962  0012               	return	
  3792  004964                     l12799:
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;main.c: 190: {
  3796                           ;main.c: 191: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  3797  004964  0100               	movlb	0	; () banked
  3798  004966  51FF               	movf	escalonador@cont& (0+255),w,b
  3799  004968  0D02               	mullw	2
  3800  00496A  0E52               	movlw	low _p_tarefas
  3801  00496C  24F3               	addwf	prodl,w,c
  3802  00496E  6ED9               	movwf	fsr2l,c
  3803  004970  0E01               	movlw	high _p_tarefas
  3804  004972  20F4               	addwfc	prodh,w,c
  3805  004974  6EDA               	movwf	fsr2h,c
  3806  004976  50DE               	movf	postinc2,w,c
  3807  004978  10DE               	iorwf	postinc2,w,c
  3808  00497A  B4D8               	btfsc	status,2,c
  3809  00497C  D041               	goto	l12811
  3810                           
  3811                           ; BSR set to: 0
  3812  00497E  0100               	movlb	0	; () banked
  3813  004980  51FF               	movf	escalonador@cont& (0+255),w,b
  3814  004982  0D02               	mullw	2
  3815  004984  0E4A               	movlw	low _tempo_tarefa
  3816  004986  24F3               	addwf	prodl,w,c
  3817  004988  6ED9               	movwf	fsr2l,c
  3818  00498A  0E01               	movlw	high _tempo_tarefa
  3819  00498C  20F4               	addwfc	prodh,w,c
  3820  00498E  6EDA               	movwf	fsr2h,c
  3821  004990  50DE               	movf	postinc2,w,c
  3822  004992  10DE               	iorwf	postinc2,w,c
  3823  004994  A4D8               	btfss	status,2,c
  3824  004996  D034               	goto	l12811
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;main.c: 192: {
  3828                           ;main.c: 193: tarefa_em_execucao = 1;
  3829  004998  0E01               	movlw	1
  3830  00499A  6E40               	movwf	_tarefa_em_execucao,c	;volatile
  3831                           
  3832                           ;main.c: 194: timeout_tarefa = 65000;
  3833  00499C  0EFD               	movlw	253
  3834  00499E  0101               	movlb	1	; () banked
  3835  0049A0  6F5F               	movwf	(_timeout_tarefa+1)& (0+255),b
  3836  0049A2  0EE8               	movlw	232
  3837  0049A4  6F5E               	movwf	_timeout_tarefa& (0+255),b
  3838                           
  3839                           ; BSR set to: 1
  3840                           ;main.c: 195: p_tarefas[cont]();
  3841  0049A6  0100               	movlb	0	; () banked
  3842  0049A8  51FF               	movf	escalonador@cont& (0+255),w,b
  3843  0049AA  0D02               	mullw	2
  3844  0049AC  0E52               	movlw	low _p_tarefas
  3845  0049AE  24F3               	addwf	prodl,w,c
  3846  0049B0  6ED9               	movwf	fsr2l,c
  3847  0049B2  0E01               	movlw	high _p_tarefas
  3848  0049B4  20F4               	addwfc	prodh,w,c
  3849  0049B6  6EDA               	movwf	fsr2h,c
  3850  0049B8  D801               	call	u14358
  3851  0049BA  D00A               	goto	l12807
  3852  0049BC                     u14358:
  3853  0049BC  0005               	push	
  3854  0049BE  6EFA               	movwf	pclath,c
  3855  0049C0  50DE               	movf	postinc2,w,c
  3856  0049C2  6EFD               	movwf	tosl,c
  3857  0049C4  50DE               	movf	postinc2,w,c
  3858  0049C6  6EFE               	movwf	tosh,c
  3859  0049C8  50F8               	movf	tblptru,w,c
  3860  0049CA  6EFF               	movwf	tosu,c
  3861  0049CC  50FA               	movf	pclath,w,c
  3862  0049CE  0012               	return		;indir
  3863  0049D0                     l12807:
  3864                           
  3865                           ;main.c: 196: tarefa_em_execucao = 0;
  3866  0049D0  0E00               	movlw	0
  3867  0049D2  6E40               	movwf	_tarefa_em_execucao,c	;volatile
  3868                           
  3869                           ;main.c: 197: tempo_tarefa[cont] = tempo_backup[cont];
  3870  0049D4  0100               	movlb	0	; () banked
  3871  0049D6  51FF               	movf	escalonador@cont& (0+255),w,b
  3872  0049D8  0D02               	mullw	2
  3873  0049DA  0E4E               	movlw	low _tempo_backup
  3874  0049DC  24F3               	addwf	prodl,w,c
  3875  0049DE  6ED9               	movwf	fsr2l,c
  3876  0049E0  0E01               	movlw	high _tempo_backup
  3877  0049E2  20F4               	addwfc	prodh,w,c
  3878  0049E4  6EDA               	movwf	fsr2h,c
  3879  0049E6  0100               	movlb	0	; () banked
  3880  0049E8  51FF               	movf	escalonador@cont& (0+255),w,b
  3881  0049EA  0D02               	mullw	2
  3882  0049EC  0E4A               	movlw	low _tempo_tarefa
  3883  0049EE  24F3               	addwf	prodl,w,c
  3884  0049F0  6EE1               	movwf	fsr1l,c
  3885  0049F2  0E01               	movlw	high _tempo_tarefa
  3886  0049F4  20F4               	addwfc	prodh,w,c
  3887  0049F6  6EE2               	movwf	fsr1h,c
  3888  0049F8  CFDE FFE6          	movff	postinc2,postinc1
  3889  0049FC  CFDD FFE5          	movff	postdec2,postdec1
  3890  004A00                     l12811:
  3891                           
  3892                           ; BSR set to: 0
  3893  004A00  0100               	movlb	0	; () banked
  3894  004A02  2BFF               	incf	escalonador@cont& (0+255),f,b
  3895  004A04  D7AA               	goto	l12795
  3896  004A06                     __end_of_escalonador:
  3897                           	opt stack 0
  3898                           tosu	equ	0xFFF
  3899                           tosh	equ	0xFFE
  3900                           tosl	equ	0xFFD
  3901                           pclath	equ	0xFFA
  3902                           tblptru	equ	0xFF8
  3903                           tblptrh	equ	0xFF7
  3904                           tblptrl	equ	0xFF6
  3905                           tablat	equ	0xFF5
  3906                           prodh	equ	0xFF4
  3907                           prodl	equ	0xFF3
  3908                           intcon	equ	0xFF2
  3909                           intcon2	equ	0xFF1
  3910                           intcon3	equ	0xFF0
  3911                           postinc0	equ	0xFEE
  3912                           wreg	equ	0xFE8
  3913                           postinc1	equ	0xFE6
  3914                           postdec1	equ	0xFE5
  3915                           fsr1h	equ	0xFE2
  3916                           fsr1l	equ	0xFE1
  3917                           postinc2	equ	0xFDE
  3918                           postdec2	equ	0xFDD
  3919                           fsr2h	equ	0xFDA
  3920                           fsr2l	equ	0xFD9
  3921                           status	equ	0xFD8
  3922                           
  3923 ;; *************** function _SDCard *****************
  3924 ;; Defined at:
  3925 ;;		line 151 in file "bibliotecas/SDCard.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;		None
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;  fil            32    1[BANK2 ] struct _FIL
  3930 ;;  br              2    0        unsigned int 
  3931 ;;  bw              2    0        unsigned short 
  3932 ;;  FResult         1    0[BANK2 ] enum E70
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3942 ;;      Params:         0       0       0       0       0       0       0       0       0
  3943 ;;      Locals:         0       0       0      33       0       0       0       0       0
  3944 ;;      Temps:          0       0       2       0       0       0       0       0       0
  3945 ;;      Totals:         0       0       2      33       0       0       0       0       0
  3946 ;;Total ram usage:       35 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:   15
  3949 ;; This function calls:
  3950 ;;		_escreve_frase_ram_lcd
  3951 ;;		_escreve_inteiro_lcd
  3952 ;;		_f_close
  3953 ;;		_f_mount
  3954 ;;		_f_open
  3955 ;;		_posicao_cursor_lcd
  3956 ;;		_proceed
  3957 ;; This function is called by:
  3958 ;;		_inicializa_tarefas
  3959 ;;		_escalonador
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text14
  3964  003E88                     __ptext14:
  3965                           	opt stack 0
  3966  003E88                     _SDCard:
  3967                           	opt stack 14
  3968                           
  3969                           ;SDCard.c: 153: T0CONbits.TMR0ON = 0;
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;incstack = 0
  3973  003E88  9ED5               	bcf	4053,7,c	;volatile
  3974                           
  3975                           ;SDCard.c: 155: FRESULT FResult;
  3976                           ;SDCard.c: 156: FIL fil;
  3977                           ;SDCard.c: 157: WORD bw;
  3978                           ;SDCard.c: 158: UINT br;
  3979                           ;SDCard.c: 162: static char init;
  3980                           ;SDCard.c: 163: if(init !=1)
  3981  003E8A  0101               	movlb	1	; () banked
  3982  003E8C  0562               	decf	SDCard@init& (0+255),w,b
  3983  003E8E  B4D8               	btfsc	status,2,c
  3984  003E90  0012               	return	
  3985                           
  3986                           ; BSR set to: 1
  3987                           ;SDCard.c: 164: {
  3988                           ;SDCard.c: 167: init = 1;
  3989  003E92  0E01               	movlw	1
  3990  003E94  0101               	movlb	1	; () banked
  3991  003E96  6F62               	movwf	SDCard@init& (0+255),b
  3992                           
  3993                           ; BSR set to: 1
  3994                           ;SDCard.c: 176: _delay((unsigned long)((1)*(48000000/4000.0)));
  3995  003E98  0E10               	movlw	16
  3996  003E9A  0101               	movlb	1	; () banked
  3997  003E9C  6FDA               	movwf	??_SDCard& (0+255),b
  3998  003E9E  0E94               	movlw	148
  3999  003EA0                     u16687:
  4000  003EA0  2EE8               	decfsz	wreg,f,c
  4001  003EA2  D7FE               	bra	u16687
  4002  003EA4  2FDA               	decfsz	??_SDCard& (0+255),f,b
  4003  003EA6  D7FC               	bra	u16687
  4004  003EA8  F000               	nop	
  4005                           
  4006                           ;SDCard.c: 177: FResult = f_mount(0, &fs);
  4007  003EAA  0E30               	movlw	low _fs
  4008  003EAC  6E16               	movwf	f_mount@fs,c
  4009  003EAE  0E03               	movlw	high _fs
  4010  003EB0  6E17               	movwf	f_mount@fs+1,c
  4011  003EB2  0E00               	movlw	0
  4012  003EB4  EC6A  F029         	call	_f_mount
  4013  003EB8  0102               	movlb	2	; () banked
  4014  003EBA  6FDE               	movwf	SDCard@FResult& (0+255),b
  4015                           
  4016                           ; BSR set to: 2
  4017                           ;SDCard.c: 178: LATBbits.LATB4 = 1;
  4018  003EBC  888A               	bsf	3978,4,c	;volatile
  4019                           
  4020                           ; BSR set to: 2
  4021                           ;SDCard.c: 179: if(FResult == FR_OK)
  4022  003EBE  0102               	movlb	2	; () banked
  4023  003EC0  51DE               	movf	SDCard@FResult& (0+255),w,b
  4024  003EC2  0102               	movlb	2	; () banked
  4025  003EC4  A4D8               	btfss	status,2,c
  4026  003EC6  D023               	goto	l12677
  4027                           
  4028                           ; BSR set to: 2
  4029                           ;SDCard.c: 180: {
  4030                           ;SDCard.c: 181: posicao_cursor_lcd(1,0);
  4031  003EC8  0E00               	movlw	0
  4032  003ECA  6E19               	movwf	posicao_cursor_lcd@coluna,c
  4033  003ECC  0E01               	movlw	1
  4034  003ECE  ECFA  F027         	call	_posicao_cursor_lcd
  4035                           
  4036                           ;SDCard.c: 182: escreve_frase_ram_lcd("Sistema Montado");
  4037  003ED2  0E85               	movlw	low STR_37
  4038  003ED4  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  4039  003ED6  0E61               	movlw	high STR_37
  4040  003ED8  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  4041  003EDA  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4042                           
  4043                           ;SDCard.c: 183: posicao_cursor_lcd(2,14);
  4044  003EDE  0E0E               	movlw	14
  4045  003EE0  6E19               	movwf	posicao_cursor_lcd@coluna,c
  4046  003EE2  0E02               	movlw	2
  4047  003EE4  ECFA  F027         	call	_posicao_cursor_lcd
  4048                           
  4049                           ;SDCard.c: 184: escreve_inteiro_lcd(FResult);
  4050  003EE8  C2DE  F02E         	movff	SDCard@FResult,escreve_inteiro_lcd@valor
  4051  003EEC  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
  4052  003EEE  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
  4053                           
  4054                           ;SDCard.c: 185: _delay((unsigned long)((100)*(48000000/4000.0)));
  4055  003EF2  0E07               	movlw	7
  4056  003EF4  0101               	movlb	1	; () banked
  4057  003EF6  6FDB               	movwf	(??_SDCard+1)& (0+255),b
  4058  003EF8  0E17               	movlw	23
  4059  003EFA  0101               	movlb	1	; () banked
  4060  003EFC  6FDA               	movwf	??_SDCard& (0+255),b
  4061  003EFE  0E6A               	movlw	106
  4062  003F00                     u16697:
  4063  003F00  2EE8               	decfsz	wreg,f,c
  4064  003F02  D7FE               	bra	u16697
  4065  003F04  2FDA               	decfsz	??_SDCard& (0+255),f,b
  4066  003F06  D7FC               	bra	u16697
  4067  003F08  2FDB               	decfsz	(??_SDCard+1)& (0+255),f,b
  4068  003F0A  D7FA               	bra	u16697
  4069  003F0C  F000               	nop	
  4070  003F0E                     l12677:
  4071                           
  4072                           ;SDCard.c: 186: }
  4073                           ;SDCard.c: 189: if(FResult == FR_OK)
  4074  003F0E  0102               	movlb	2	; () banked
  4075  003F10  51DE               	movf	SDCard@FResult& (0+255),w,b
  4076  003F12  0102               	movlb	2	; () banked
  4077  003F14  A4D8               	btfss	status,2,c
  4078  003F16  0012               	return	
  4079                           
  4080                           ; BSR set to: 2
  4081                           ;SDCard.c: 190: {
  4082                           ;SDCard.c: 193: _delay((unsigned long)((1)*(48000000/4000.0)));
  4083  003F18  0E10               	movlw	16
  4084  003F1A  0101               	movlb	1	; () banked
  4085  003F1C  6FDA               	movwf	??_SDCard& (0+255),b
  4086  003F1E  0E94               	movlw	148
  4087  003F20                     u16707:
  4088  003F20  2EE8               	decfsz	wreg,f,c
  4089  003F22  D7FE               	bra	u16707
  4090  003F24  2FDA               	decfsz	??_SDCard& (0+255),f,b
  4091  003F26  D7FC               	bra	u16707
  4092  003F28  F000               	nop	
  4093                           
  4094                           ;SDCard.c: 194: posicao_cursor_lcd(1,0);
  4095  003F2A  0E00               	movlw	0
  4096  003F2C  6E19               	movwf	posicao_cursor_lcd@coluna,c
  4097  003F2E  0E01               	movlw	1
  4098  003F30  ECFA  F027         	call	_posicao_cursor_lcd
  4099                           
  4100                           ;SDCard.c: 196: escreve_frase_ram_lcd("Criando arquivo");
  4101  003F34  0E95               	movlw	low STR_38
  4102  003F36  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  4103  003F38  0E61               	movlw	high STR_38
  4104  003F3A  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  4105  003F3C  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4106                           
  4107                           ;SDCard.c: 199: proceed();
  4108  003F40  ECB9  F02B         	call	_proceed	;wreg free
  4109                           
  4110                           ;SDCard.c: 200: FResult = f_open(&fil,"teste.txt", 0x00);
  4111  003F44  0EDF               	movlw	low SDCard@fil
  4112  003F46  0101               	movlb	1	; () banked
  4113  003F48  6F92               	movwf	f_open@fp& (0+255),b
  4114  003F4A  0E02               	movlw	high SDCard@fil
  4115  003F4C  0101               	movlb	1	; () banked
  4116  003F4E  6F93               	movwf	(f_open@fp+1)& (0+255),b
  4117  003F50  0E30               	movlw	low STR_39
  4118  003F52  0101               	movlb	1	; () banked
  4119  003F54  6F94               	movwf	f_open@path& (0+255),b
  4120  003F56  0E62               	movlw	high STR_39
  4121  003F58  0101               	movlb	1	; () banked
  4122  003F5A  6F95               	movwf	(f_open@path+1)& (0+255),b
  4123  003F5C  0E00               	movlw	0
  4124  003F5E  0101               	movlb	1	; () banked
  4125  003F60  6F96               	movwf	f_open@mode& (0+255),b
  4126  003F62  EC32  F006         	call	_f_open	;wreg free
  4127  003F66  0102               	movlb	2	; () banked
  4128  003F68  6FDE               	movwf	SDCard@FResult& (0+255),b
  4129                           
  4130                           ; BSR set to: 2
  4131                           ;SDCard.c: 202: posicao_cursor_lcd(2,0);
  4132  003F6A  0E00               	movlw	0
  4133  003F6C  6E19               	movwf	posicao_cursor_lcd@coluna,c
  4134  003F6E  0E02               	movlw	2
  4135  003F70  ECFA  F027         	call	_posicao_cursor_lcd
  4136                           
  4137                           ;SDCard.c: 203: escreve_frase_ram_lcd("Resultado");
  4138  003F74  0E26               	movlw	low STR_40
  4139  003F76  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  4140  003F78  0E62               	movlw	high STR_40
  4141  003F7A  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  4142  003F7C  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4143                           
  4144                           ;SDCard.c: 204: posicao_cursor_lcd(2,14);
  4145  003F80  0E0E               	movlw	14
  4146  003F82  6E19               	movwf	posicao_cursor_lcd@coluna,c
  4147  003F84  0E02               	movlw	2
  4148  003F86  ECFA  F027         	call	_posicao_cursor_lcd
  4149                           
  4150                           ;SDCard.c: 205: escreve_inteiro_lcd(FResult);
  4151  003F8A  C2DE  F02E         	movff	SDCard@FResult,escreve_inteiro_lcd@valor
  4152  003F8E  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
  4153  003F90  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
  4154                           
  4155                           ;SDCard.c: 208: if(FResult == FR_OK)
  4156  003F94  0102               	movlb	2	; () banked
  4157  003F96  51DE               	movf	SDCard@FResult& (0+255),w,b
  4158  003F98  0102               	movlb	2	; () banked
  4159  003F9A  A4D8               	btfss	status,2,c
  4160  003F9C  D067               	goto	l1307
  4161                           
  4162                           ; BSR set to: 2
  4163                           ;SDCard.c: 209: {
  4164                           ;SDCard.c: 216: posicao_cursor_lcd(2,14);
  4165  003F9E  0E0E               	movlw	14
  4166  003FA0  6E19               	movwf	posicao_cursor_lcd@coluna,c
  4167  003FA2  0E02               	movlw	2
  4168  003FA4  ECFA  F027         	call	_posicao_cursor_lcd
  4169                           
  4170                           ;SDCard.c: 217: escreve_frase_ram_lcd(FResult);
  4171  003FA8  0102               	movlb	2	; () banked
  4172  003FAA  51DE               	movf	SDCard@FResult& (0+255),w,b
  4173  003FAC  0101               	movlb	1	; () banked
  4174  003FAE  6FDA               	movwf	??_SDCard& (0+255),b
  4175  003FB0  6BDB               	clrf	(??_SDCard+1)& (0+255),b
  4176  003FB2  C1DA  F019         	movff	??_SDCard,escreve_frase_ram_lcd@buffer
  4177  003FB6  C1DB  F01A         	movff	??_SDCard+1,escreve_frase_ram_lcd@buffer+1
  4178  003FBA  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4179                           
  4180                           ;SDCard.c: 220: if(FResult == FR_OK)
  4181  003FBE  0102               	movlb	2	; () banked
  4182  003FC0  51DE               	movf	SDCard@FResult& (0+255),w,b
  4183  003FC2  0102               	movlb	2	; () banked
  4184  003FC4  A4D8               	btfss	status,2,c
  4185  003FC6  D02D               	goto	l12717
  4186                           
  4187                           ; BSR set to: 2
  4188                           ;SDCard.c: 221: {
  4189                           ;SDCard.c: 224: posicao_cursor_lcd(2,0);
  4190  003FC8  0E00               	movlw	0
  4191  003FCA  6E19               	movwf	posicao_cursor_lcd@coluna,c
  4192  003FCC  0E02               	movlw	2
  4193  003FCE  ECFA  F027         	call	_posicao_cursor_lcd
  4194                           
  4195                           ;SDCard.c: 225: escreve_frase_ram_lcd(buff);
  4196  003FD2  0ECA               	movlw	low _buff
  4197  003FD4  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  4198  003FD6  0E02               	movlw	high _buff
  4199  003FD8  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  4200  003FDA  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4201                           
  4202                           ;SDCard.c: 226: f_close(&fil);
  4203  003FDE  0EDF               	movlw	low SDCard@fil
  4204  003FE0  0100               	movlb	0	; () banked
  4205  003FE2  6FB4               	movwf	f_close@fp& (0+255),b
  4206  003FE4  0E02               	movlw	high SDCard@fil
  4207  003FE6  0100               	movlb	0	; () banked
  4208  003FE8  6FB5               	movwf	(f_close@fp+1)& (0+255),b
  4209  003FEA  ECE9  F02A         	call	_f_close	;wreg free
  4210                           
  4211                           ;SDCard.c: 228: posicao_cursor_lcd(2,0);
  4212  003FEE  0E00               	movlw	0
  4213  003FF0  6E19               	movwf	posicao_cursor_lcd@coluna,c
  4214  003FF2  0E02               	movlw	2
  4215  003FF4  ECFA  F027         	call	_posicao_cursor_lcd
  4216                           
  4217                           ;SDCard.c: 229: escreve_frase_ram_lcd("Arquivo renomeado");
  4218  003FF8  0EEB               	movlw	low STR_41
  4219  003FFA  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  4220  003FFC  0E60               	movlw	high STR_41
  4221  003FFE  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  4222  004000  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4223                           
  4224                           ;SDCard.c: 230: _delay((unsigned long)((1000)*(48000000/4000.0)));
  4225  004004  0E3D               	movlw	61
  4226  004006  0101               	movlb	1	; () banked
  4227  004008  6FDB               	movwf	(??_SDCard+1)& (0+255),b
  4228  00400A  0EE1               	movlw	225
  4229  00400C  0101               	movlb	1	; () banked
  4230  00400E  6FDA               	movwf	??_SDCard& (0+255),b
  4231  004010  0E3F               	movlw	63
  4232  004012                     u16717:
  4233  004012  2EE8               	decfsz	wreg,f,c
  4234  004014  D7FE               	bra	u16717
  4235  004016  2FDA               	decfsz	??_SDCard& (0+255),f,b
  4236  004018  D7FC               	bra	u16717
  4237  00401A  2FDB               	decfsz	(??_SDCard+1)& (0+255),f,b
  4238  00401C  D7FA               	bra	u16717
  4239  00401E  D000               	nop2	
  4240                           
  4241                           ;SDCard.c: 231: }
  4242  004020  0012               	return	
  4243  004022                     l12717:
  4244                           
  4245                           ;SDCard.c: 232: else
  4246                           ;SDCard.c: 233: {
  4247                           ;SDCard.c: 234: posicao_cursor_lcd(2,0);
  4248  004022  0E00               	movlw	0
  4249  004024  6E19               	movwf	posicao_cursor_lcd@coluna,c
  4250  004026  0E02               	movlw	2
  4251  004028  ECFA  F027         	call	_posicao_cursor_lcd
  4252                           
  4253                           ;SDCard.c: 235: escreve_frase_ram_lcd("ERRO");
  4254  00402C  0E64               	movlw	low STR_42
  4255  00402E  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  4256  004030  0E62               	movlw	high STR_42
  4257  004032  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  4258  004034  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
  4259                           
  4260                           ;SDCard.c: 236: posicao_cursor_lcd(1,0);
  4261  004038  0E00               	movlw	0
  4262  00403A  6E19               	movwf	posicao_cursor_lcd@coluna,c
  4263  00403C  0E01               	movlw	1
  4264  00403E  ECFA  F027         	call	_posicao_cursor_lcd
  4265                           
  4266                           ;SDCard.c: 237: escreve_inteiro_lcd(FResult);
  4267  004042  C2DE  F02E         	movff	SDCard@FResult,escreve_inteiro_lcd@valor
  4268  004046  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
  4269  004048  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
  4270                           
  4271                           ;SDCard.c: 238: _delay((unsigned long)((1000)*(48000000/4000.0)));
  4272  00404C  0E3D               	movlw	61
  4273  00404E  0101               	movlb	1	; () banked
  4274  004050  6FDB               	movwf	(??_SDCard+1)& (0+255),b
  4275  004052  0EE1               	movlw	225
  4276  004054  0101               	movlb	1	; () banked
  4277  004056  6FDA               	movwf	??_SDCard& (0+255),b
  4278  004058  0E3F               	movlw	63
  4279  00405A                     u16727:
  4280  00405A  2EE8               	decfsz	wreg,f,c
  4281  00405C  D7FE               	bra	u16727
  4282  00405E  2FDA               	decfsz	??_SDCard& (0+255),f,b
  4283  004060  D7FC               	bra	u16727
  4284  004062  2FDB               	decfsz	(??_SDCard+1)& (0+255),f,b
  4285  004064  D7FA               	bra	u16727
  4286  004066  D000               	nop2	
  4287                           
  4288                           ;SDCard.c: 239: T0CONbits.TMR0ON = 1;
  4289  004068  8ED5               	bsf	4053,7,c	;volatile
  4290                           
  4291                           ;SDCard.c: 240: }
  4292                           ;SDCard.c: 257: }
  4293  00406A  0012               	return	
  4294  00406C                     l1307:
  4295                           
  4296                           ; BSR set to: 2
  4297                           ;SDCard.c: 258: else{
  4298                           ;SDCard.c: 261: T0CONbits.TMR0ON = 1;
  4299  00406C  8ED5               	bsf	4053,7,c	;volatile
  4300                           
  4301                           ; BSR set to: 2
  4302                           
  4303                           ; BSR set to: 2
  4304  00406E  0012               	return	
  4305  004070                     __end_of_SDCard:
  4306                           	opt stack 0
  4307                           tosu	equ	0xFFF
  4308                           tosh	equ	0xFFE
  4309                           tosl	equ	0xFFD
  4310                           pclath	equ	0xFFA
  4311                           tblptru	equ	0xFF8
  4312                           tblptrh	equ	0xFF7
  4313                           tblptrl	equ	0xFF6
  4314                           tablat	equ	0xFF5
  4315                           prodh	equ	0xFF4
  4316                           prodl	equ	0xFF3
  4317                           intcon	equ	0xFF2
  4318                           intcon2	equ	0xFF1
  4319                           intcon3	equ	0xFF0
  4320                           postinc0	equ	0xFEE
  4321                           wreg	equ	0xFE8
  4322                           postinc1	equ	0xFE6
  4323                           postdec1	equ	0xFE5
  4324                           fsr1h	equ	0xFE2
  4325                           fsr1l	equ	0xFE1
  4326                           postinc2	equ	0xFDE
  4327                           postdec2	equ	0xFDD
  4328                           fsr2h	equ	0xFDA
  4329                           fsr2l	equ	0xFD9
  4330                           status	equ	0xFD8
  4331                           
  4332 ;; *************** function _f_open *****************
  4333 ;; Defined at:
  4334 ;;		line 884 in file "bibliotecas/tff.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  fp              2   25[BANK1 ] PTR struct _FIL
  4337 ;;		 -> SDCard@fil(32), 
  4338 ;;  path            2   27[BANK1 ] PTR const unsigned char 
  4339 ;;		 -> STR_39(10), 
  4340 ;;  mode            1   29[BANK1 ] unsigned char 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  dw              4   72[BANK1 ] unsigned long 
  4343 ;;  rs              4   68[BANK1 ] unsigned long 
  4344 ;;  dj             18   77[BANK1 ] struct _DIR
  4345 ;;  fn             12   56[BANK1 ] unsigned char [12]
  4346 ;;  dir             2   95[BANK1 ] PTR unsigned char 
  4347 ;;		 -> fs(552), NULL(0), 
  4348 ;;  res             1   76[BANK1 ] enum E155
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      enum E155
  4351 ;; Registers used:
  4352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4358 ;;      Params:         0       0       5       0       0       0       0       0       0
  4359 ;;      Locals:         0       0      41       0       0       0       0       0       0
  4360 ;;      Temps:          0       0      26       0       0       0       0       0       0
  4361 ;;      Totals:         0       0      72       0       0       0       0       0       0
  4362 ;;Total ram usage:       72 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:   14
  4365 ;; This function calls:
  4366 ;;		_auto_mount
  4367 ;;		_get_fattime
  4368 ;;		_memcpy
  4369 ;;		_memset
  4370 ;;		_move_window
  4371 ;;		_remove_chain
  4372 ;;		_reserve_direntry
  4373 ;;		_trace_path
  4374 ;; This function is called by:
  4375 ;;		_SDCard
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           	psect	text15
  4380  000C64                     __ptext15:
  4381                           	opt stack 0
  4382  000C64                     _f_open:
  4383                           	opt stack 14
  4384                           
  4385                           ;tff.c: 890: FRESULT res;
  4386                           ;tff.c: 891: DIR_ dj;
  4387                           ;tff.c: 892: BYTE *dir;
  4388                           ;tff.c: 893: char fn[8+3+1];
  4389                           ;tff.c: 896: fp->fs = (0);
  4390                           
  4391                           ;incstack = 0
  4392  000C64  0101               	movlb	1	; () banked
  4393  000C66  EE20 F004          	lfsr	2,4
  4394  000C6A  5192               	movf	f_open@fp& (0+255),w,b
  4395  000C6C  26D9               	addwf	fsr2l,f,c
  4396  000C6E  5193               	movf	(f_open@fp+1)& (0+255),w,b
  4397  000C70  22DA               	addwfc	fsr2h,f,c
  4398  000C72  0E00               	movlw	0
  4399  000C74  6EDE               	movwf	postinc2,c
  4400  000C76  0E00               	movlw	0
  4401  000C78  6EDD               	movwf	postdec2,c
  4402                           
  4403                           ; BSR set to: 1
  4404                           ;tff.c: 898: mode &= (0x01|0x02|0x08|0x10|0x04);
  4405  000C7A  0E1F               	movlw	31
  4406  000C7C  0101               	movlb	1	; () banked
  4407  000C7E  1796               	andwf	f_open@mode& (0+255),f,b
  4408                           
  4409                           ; BSR set to: 1
  4410                           ;tff.c: 899: res = auto_mount(&path, (BYTE)(mode & (0x02|0x08|0x10|0x04)));
  4411  000C80  0E94               	movlw	low f_open@path
  4412  000C82  0100               	movlb	0	; () banked
  4413  000C84  6FA7               	movwf	auto_mount@path& (0+255),b
  4414  000C86  0E01               	movlw	high f_open@path
  4415  000C88  0100               	movlb	0	; () banked
  4416  000C8A  6FA8               	movwf	(auto_mount@path+1)& (0+255),b
  4417  000C8C  0101               	movlb	1	; () banked
  4418  000C8E  5196               	movf	f_open@mode& (0+255),w,b
  4419  000C90  0B1E               	andlw	30
  4420  000C92  0100               	movlb	0	; () banked
  4421  000C94  6FA9               	movwf	auto_mount@chk_wp& (0+255),b
  4422  000C96  EC09  F000         	call	_auto_mount	;wreg free
  4423  000C9A  0101               	movlb	1	; () banked
  4424  000C9C  6FC5               	movwf	f_open@res& (0+255),b
  4425                           
  4426                           ; BSR set to: 1
  4427                           ;tff.c: 904: if (res != FR_OK) return res;
  4428  000C9E  0101               	movlb	1	; () banked
  4429  000CA0  51C5               	movf	f_open@res& (0+255),w,b
  4430  000CA2  0101               	movlb	1	; () banked
  4431  000CA4  B4D8               	btfsc	status,2,c
  4432  000CA6  D003               	goto	l12489
  4433                           
  4434                           ; BSR set to: 1
  4435  000CA8  0101               	movlb	1	; () banked
  4436  000CAA  51C5               	movf	f_open@res& (0+255),w,b
  4437                           
  4438                           ; BSR set to: 1
  4439  000CAC  0012               	return	
  4440  000CAE                     l12489:
  4441                           
  4442                           ; BSR set to: 1
  4443                           ;tff.c: 905: res = trace_path(&dj, fn, path, &dir);
  4444  000CAE  0EC6               	movlw	low f_open@dj
  4445  000CB0  0100               	movlb	0	; () banked
  4446  000CB2  6FEE               	movwf	trace_path@dj& (0+255),b
  4447  000CB4  0E01               	movlw	high f_open@dj
  4448  000CB6  0100               	movlb	0	; () banked
  4449  000CB8  6FEF               	movwf	(trace_path@dj+1)& (0+255),b
  4450  000CBA  0EB1               	movlw	low f_open@fn
  4451  000CBC  0100               	movlb	0	; () banked
  4452  000CBE  6FF0               	movwf	trace_path@fn& (0+255),b
  4453  000CC0  0E01               	movlw	high f_open@fn
  4454  000CC2  0100               	movlb	0	; () banked
  4455  000CC4  6FF1               	movwf	(trace_path@fn+1)& (0+255),b
  4456  000CC6  C194  F0F2         	movff	f_open@path,trace_path@path
  4457  000CCA  C195  F0F3         	movff	f_open@path+1,trace_path@path+1
  4458  000CCE  0ED8               	movlw	low f_open@dir
  4459  000CD0  0100               	movlb	0	; () banked
  4460  000CD2  6FF4               	movwf	trace_path@dir& (0+255),b
  4461  000CD4  0E01               	movlw	high f_open@dir
  4462  000CD6  0100               	movlb	0	; () banked
  4463  000CD8  6FF5               	movwf	(trace_path@dir+1)& (0+255),b
  4464  000CDA  EC68  F012         	call	_trace_path	;wreg free
  4465  000CDE  0101               	movlb	1	; () banked
  4466  000CE0  6FC5               	movwf	f_open@res& (0+255),b
  4467                           
  4468                           ; BSR set to: 1
  4469                           ;tff.c: 909: if (mode & (0x08|0x10|0x04)) {
  4470  000CE2  C196  F197         	movff	f_open@mode,??_f_open
  4471  000CE6  0E1C               	movlw	28
  4472  000CE8  0101               	movlb	1	; () banked
  4473  000CEA  1797               	andwf	??_f_open& (0+255),f,b
  4474  000CEC  B4D8               	btfsc	status,2,c
  4475  000CEE  D1C5               	goto	l12559
  4476                           
  4477                           ; BSR set to: 1
  4478                           ;tff.c: 910: CLUST rs;
  4479                           ;tff.c: 911: DWORD dw;
  4480                           ;tff.c: 912: if (res != FR_OK) {
  4481  000CF0  0101               	movlb	1	; () banked
  4482  000CF2  51C5               	movf	f_open@res& (0+255),w,b
  4483  000CF4  0101               	movlb	1	; () banked
  4484  000CF6  B4D8               	btfsc	status,2,c
  4485  000CF8  D048               	goto	l803
  4486                           
  4487                           ; BSR set to: 1
  4488                           ;tff.c: 913: if (res != FR_NO_FILE) return res;
  4489  000CFA  0E02               	movlw	2
  4490  000CFC  0101               	movlb	1	; () banked
  4491  000CFE  19C5               	xorwf	f_open@res& (0+255),w,b
  4492  000D00  B4D8               	btfsc	status,2,c
  4493  000D02  D003               	goto	l12501
  4494                           
  4495                           ; BSR set to: 1
  4496  000D04  0101               	movlb	1	; () banked
  4497  000D06  51C5               	movf	f_open@res& (0+255),w,b
  4498                           
  4499                           ; BSR set to: 1
  4500  000D08  0012               	return	
  4501  000D0A                     l12501:
  4502                           
  4503                           ; BSR set to: 1
  4504                           ;tff.c: 914: res = reserve_direntry(&dj, &dir);
  4505  000D0A  0EC6               	movlw	low f_open@dj
  4506  000D0C  0100               	movlb	0	; () banked
  4507  000D0E  6FF9               	movwf	reserve_direntry@dj& (0+255),b
  4508  000D10  0E01               	movlw	high f_open@dj
  4509  000D12  0100               	movlb	0	; () banked
  4510  000D14  6FFA               	movwf	(reserve_direntry@dj+1)& (0+255),b
  4511  000D16  0ED8               	movlw	low f_open@dir
  4512  000D18  0100               	movlb	0	; () banked
  4513  000D1A  6FFB               	movwf	reserve_direntry@dir& (0+255),b
  4514  000D1C  0E01               	movlw	high f_open@dir
  4515  000D1E  0100               	movlb	0	; () banked
  4516  000D20  6FFC               	movwf	(reserve_direntry@dir+1)& (0+255),b
  4517  000D22  EC0C  F01A         	call	_reserve_direntry	;wreg free
  4518  000D26  0101               	movlb	1	; () banked
  4519  000D28  6FC5               	movwf	f_open@res& (0+255),b
  4520                           
  4521                           ; BSR set to: 1
  4522                           ;tff.c: 915: if (res != FR_OK) return res;
  4523  000D2A  0101               	movlb	1	; () banked
  4524  000D2C  51C5               	movf	f_open@res& (0+255),w,b
  4525  000D2E  0101               	movlb	1	; () banked
  4526  000D30  B4D8               	btfsc	status,2,c
  4527  000D32  D003               	goto	l12509
  4528                           
  4529                           ; BSR set to: 1
  4530  000D34  0101               	movlb	1	; () banked
  4531  000D36  51C5               	movf	f_open@res& (0+255),w,b
  4532                           
  4533                           ; BSR set to: 1
  4534  000D38  0012               	return	
  4535  000D3A                     l12509:
  4536                           
  4537                           ; BSR set to: 1
  4538                           ;tff.c: 916: memset(dir, 0, 32);
  4539  000D3A  C1D8  F016         	movff	f_open@dir,memset@p1
  4540  000D3E  C1D9  F017         	movff	f_open@dir+1,memset@p1+1
  4541  000D42  0E00               	movlw	0
  4542  000D44  6E19               	movwf	memset@c+1,c
  4543  000D46  0E00               	movlw	0
  4544  000D48  6E18               	movwf	memset@c,c
  4545  000D4A  0E00               	movlw	0
  4546  000D4C  6E1B               	movwf	memset@n+1,c
  4547  000D4E  0E20               	movlw	32
  4548  000D50  6E1A               	movwf	memset@n,c
  4549  000D52  EC02  F02B         	call	_memset	;wreg free
  4550                           
  4551                           ;tff.c: 917: memcpy(&dir[0], fn, 8+3);
  4552  000D56  C1D8  F016         	movff	f_open@dir,memcpy@d1
  4553  000D5A  C1D9  F017         	movff	f_open@dir+1,memcpy@d1+1
  4554  000D5E  0EB1               	movlw	low f_open@fn
  4555  000D60  6E18               	movwf	memcpy@s1,c
  4556  000D62  0E01               	movlw	high f_open@fn
  4557  000D64  6E19               	movwf	memcpy@s1+1,c
  4558  000D66  0E00               	movlw	0
  4559  000D68  6E1B               	movwf	memcpy@n+1,c
  4560  000D6A  0E0B               	movlw	11
  4561  000D6C  6E1A               	movwf	memcpy@n,c
  4562  000D6E  EC38  F02A         	call	_memcpy	;wreg free
  4563                           
  4564                           ;tff.c: 918: dir[12] = fn[11];
  4565  000D72  0101               	movlb	1	; () banked
  4566  000D74  EE20 F00C          	lfsr	2,12
  4567  000D78  51D8               	movf	f_open@dir& (0+255),w,b
  4568  000D7A  26D9               	addwf	fsr2l,f,c
  4569  000D7C  51D9               	movf	(f_open@dir+1)& (0+255),w,b
  4570  000D7E  22DA               	addwfc	fsr2h,f,c
  4571  000D80  C1BC  FFDF         	movff	f_open@fn+11,indf2
  4572                           
  4573                           ; BSR set to: 1
  4574                           ;tff.c: 919: mode |= 0x08;
  4575  000D84  0101               	movlb	1	; () banked
  4576  000D86  8796               	bsf	f_open@mode& (0+255),3,b
  4577                           
  4578                           ;tff.c: 920: }
  4579  000D88  D12D               	goto	l12541
  4580  000D8A                     l803:
  4581                           
  4582                           ; BSR set to: 1
  4583                           ;tff.c: 921: else {
  4584                           ;tff.c: 922: if (mode & 0x04)
  4585  000D8A  0101               	movlb	1	; () banked
  4586  000D8C  A596               	btfss	f_open@mode& (0+255),2,b
  4587  000D8E  D002               	goto	l12521
  4588                           
  4589                           ; BSR set to: 1
  4590                           ;tff.c: 923: return FR_EXIST;
  4591  000D90  0E07               	movlw	7
  4592                           
  4593                           ; BSR set to: 1
  4594  000D92  0012               	return	
  4595  000D94                     l12521:
  4596                           
  4597                           ; BSR set to: 1
  4598                           ;tff.c: 924: if (!dir || (dir[11] & (0x01|0x10)))
  4599  000D94  0101               	movlb	1	; () banked
  4600  000D96  51D8               	movf	f_open@dir& (0+255),w,b
  4601  000D98  0101               	movlb	1	; () banked
  4602  000D9A  11D9               	iorwf	(f_open@dir+1)& (0+255),w,b
  4603  000D9C  B4D8               	btfsc	status,2,c
  4604  000D9E  D00F               	goto	l12525
  4605                           
  4606                           ; BSR set to: 1
  4607  000DA0  0101               	movlb	1	; () banked
  4608  000DA2  EE20 F00B          	lfsr	2,11
  4609  000DA6  51D8               	movf	f_open@dir& (0+255),w,b
  4610  000DA8  26D9               	addwf	fsr2l,f,c
  4611  000DAA  51D9               	movf	(f_open@dir+1)& (0+255),w,b
  4612  000DAC  22DA               	addwfc	fsr2h,f,c
  4613  000DAE  50DF               	movf	indf2,w,c
  4614  000DB0  0101               	movlb	1	; () banked
  4615  000DB2  6F97               	movwf	??_f_open& (0+255),b
  4616  000DB4  0E11               	movlw	17
  4617  000DB6  0101               	movlb	1	; () banked
  4618  000DB8  1797               	andwf	??_f_open& (0+255),f,b
  4619  000DBA  B4D8               	btfsc	status,2,c
  4620  000DBC  D002               	goto	l808
  4621  000DBE                     l12525:
  4622                           
  4623                           ; BSR set to: 1
  4624                           ;tff.c: 925: return FR_DENIED;
  4625  000DBE  0E06               	movlw	6
  4626                           
  4627                           ; BSR set to: 1
  4628  000DC0  0012               	return	
  4629  000DC2                     l808:
  4630                           
  4631                           ; BSR set to: 1
  4632                           ;tff.c: 926: if (mode & 0x08) {
  4633  000DC2  0101               	movlb	1	; () banked
  4634  000DC4  A796               	btfss	f_open@mode& (0+255),3,b
  4635  000DC6  D10E               	goto	l12541
  4636                           
  4637                           ; BSR set to: 1
  4638                           ;tff.c: 928: rs = ((DWORD)(WORD)(((WORD)*(volatile BYTE*)((&dir[20])+1)<<8)|(WORD)*(vola
      +                          tile BYTE*)(&dir[20])) << 16) | (WORD)(((WORD)*(volatile BYTE*)((&dir[26])+1)<<8)|(WORD)
      +                          *(volatile BYTE*)(&dir[26]));
  4639  000DC8  0E1B               	movlw	27
  4640  000DCA  0101               	movlb	1	; () banked
  4641  000DCC  25D8               	addwf	f_open@dir& (0+255),w,b
  4642  000DCE  6ED9               	movwf	fsr2l,c
  4643  000DD0  0E00               	movlw	0
  4644  000DD2  0101               	movlb	1	; () banked
  4645  000DD4  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  4646  000DD6  6EDA               	movwf	fsr2h,c
  4647  000DD8  50DF               	movf	indf2,w,c
  4648  000DDA  0101               	movlb	1	; () banked
  4649  000DDC  6F97               	movwf	??_f_open& (0+255),b
  4650  000DDE  0101               	movlb	1	; () banked
  4651  000DE0  5197               	movf	??_f_open& (0+255),w,b
  4652  000DE2  0101               	movlb	1	; () banked
  4653  000DE4  6F99               	movwf	(??_f_open+2)& (0+255),b
  4654  000DE6  6B98               	clrf	(??_f_open+1)& (0+255),b
  4655  000DE8  0E1A               	movlw	26
  4656  000DEA  0101               	movlb	1	; () banked
  4657  000DEC  25D8               	addwf	f_open@dir& (0+255),w,b
  4658  000DEE  6ED9               	movwf	fsr2l,c
  4659  000DF0  0E00               	movlw	0
  4660  000DF2  0101               	movlb	1	; () banked
  4661  000DF4  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  4662  000DF6  6EDA               	movwf	fsr2h,c
  4663  000DF8  50DF               	movf	indf2,w,c
  4664  000DFA  0101               	movlb	1	; () banked
  4665  000DFC  6F9A               	movwf	(??_f_open+3)& (0+255),b
  4666  000DFE  0101               	movlb	1	; () banked
  4667  000E00  519A               	movf	(??_f_open+3)& (0+255),w,b
  4668  000E02  0101               	movlb	1	; () banked
  4669  000E04  1398               	iorwf	(??_f_open+1)& (0+255),f,b
  4670  000E06  0E00               	movlw	0
  4671  000E08  1399               	iorwf	(??_f_open+2)& (0+255),f,b
  4672  000E0A  0E15               	movlw	21
  4673  000E0C  0101               	movlb	1	; () banked
  4674  000E0E  25D8               	addwf	f_open@dir& (0+255),w,b
  4675  000E10  6ED9               	movwf	fsr2l,c
  4676  000E12  0E00               	movlw	0
  4677  000E14  0101               	movlb	1	; () banked
  4678  000E16  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  4679  000E18  6EDA               	movwf	fsr2h,c
  4680  000E1A  50DF               	movf	indf2,w,c
  4681  000E1C  0101               	movlb	1	; () banked
  4682  000E1E  6F9B               	movwf	(??_f_open+4)& (0+255),b
  4683  000E20  0101               	movlb	1	; () banked
  4684  000E22  519B               	movf	(??_f_open+4)& (0+255),w,b
  4685  000E24  0101               	movlb	1	; () banked
  4686  000E26  6F9D               	movwf	(??_f_open+6)& (0+255),b
  4687  000E28  6B9C               	clrf	(??_f_open+5)& (0+255),b
  4688  000E2A  0E14               	movlw	20
  4689  000E2C  0101               	movlb	1	; () banked
  4690  000E2E  25D8               	addwf	f_open@dir& (0+255),w,b
  4691  000E30  6ED9               	movwf	fsr2l,c
  4692  000E32  0E00               	movlw	0
  4693  000E34  0101               	movlb	1	; () banked
  4694  000E36  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  4695  000E38  6EDA               	movwf	fsr2h,c
  4696  000E3A  50DF               	movf	indf2,w,c
  4697  000E3C  0101               	movlb	1	; () banked
  4698  000E3E  6F9E               	movwf	(??_f_open+7)& (0+255),b
  4699  000E40  0101               	movlb	1	; () banked
  4700  000E42  519E               	movf	(??_f_open+7)& (0+255),w,b
  4701  000E44  0101               	movlb	1	; () banked
  4702  000E46  119C               	iorwf	(??_f_open+5)& (0+255),w,b
  4703  000E48  0101               	movlb	1	; () banked
  4704  000E4A  6F9F               	movwf	(??_f_open+8)& (0+255),b
  4705  000E4C  0101               	movlb	1	; () banked
  4706  000E4E  519D               	movf	(??_f_open+6)& (0+255),w,b
  4707  000E50  0101               	movlb	1	; () banked
  4708  000E52  6FA0               	movwf	(??_f_open+9)& (0+255),b
  4709  000E54  0101               	movlb	1	; () banked
  4710  000E56  6BA1               	clrf	(??_f_open+10)& (0+255),b
  4711  000E58  0101               	movlb	1	; () banked
  4712  000E5A  6BA2               	clrf	(??_f_open+11)& (0+255),b
  4713  000E5C  C1A0  F1A2         	movff	??_f_open+9,??_f_open+11
  4714  000E60  C19F  F1A1         	movff	??_f_open+8,??_f_open+10
  4715  000E64  0101               	movlb	1	; () banked
  4716  000E66  6BA0               	clrf	(??_f_open+9)& (0+255),b
  4717  000E68  6B9F               	clrf	(??_f_open+8)& (0+255),b
  4718  000E6A  0101               	movlb	1	; () banked
  4719  000E6C  5198               	movf	(??_f_open+1)& (0+255),w,b
  4720  000E6E  0101               	movlb	1	; () banked
  4721  000E70  119F               	iorwf	(??_f_open+8)& (0+255),w,b
  4722  000E72  0101               	movlb	1	; () banked
  4723  000E74  6FBD               	movwf	f_open@rs& (0+255),b
  4724  000E76  0101               	movlb	1	; () banked
  4725  000E78  5199               	movf	(??_f_open+2)& (0+255),w,b
  4726  000E7A  0101               	movlb	1	; () banked
  4727  000E7C  11A0               	iorwf	(??_f_open+9)& (0+255),w,b
  4728  000E7E  0101               	movlb	1	; () banked
  4729  000E80  6FBE               	movwf	(f_open@rs+1)& (0+255),b
  4730  000E82  0E00               	movlw	0
  4731  000E84  0101               	movlb	1	; () banked
  4732  000E86  11A1               	iorwf	(??_f_open+10)& (0+255),w,b
  4733  000E88  0101               	movlb	1	; () banked
  4734  000E8A  6FBF               	movwf	(f_open@rs+2)& (0+255),b
  4735  000E8C  0E00               	movlw	0
  4736  000E8E  0101               	movlb	1	; () banked
  4737  000E90  11A2               	iorwf	(??_f_open+11)& (0+255),w,b
  4738  000E92  0101               	movlb	1	; () banked
  4739  000E94  6FC0               	movwf	(f_open@rs+3)& (0+255),b
  4740                           
  4741                           ;tff.c: 929: *(volatile BYTE*)(&dir[20])=(BYTE)(0); *(volatile BYTE*)((&dir[20])+1)=(BYT
      +                          E)((WORD)(0)>>8);
  4742  000E96  0E14               	movlw	20
  4743  000E98  0101               	movlb	1	; () banked
  4744  000E9A  25D8               	addwf	f_open@dir& (0+255),w,b
  4745  000E9C  6ED9               	movwf	fsr2l,c
  4746  000E9E  0E00               	movlw	0
  4747  000EA0  0101               	movlb	1	; () banked
  4748  000EA2  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  4749  000EA4  6EDA               	movwf	fsr2h,c
  4750  000EA6  0E00               	movlw	0
  4751  000EA8  6EDF               	movwf	indf2,c
  4752  000EAA  0E15               	movlw	21
  4753  000EAC  0101               	movlb	1	; () banked
  4754  000EAE  25D8               	addwf	f_open@dir& (0+255),w,b
  4755  000EB0  6ED9               	movwf	fsr2l,c
  4756  000EB2  0E00               	movlw	0
  4757  000EB4  0101               	movlb	1	; () banked
  4758  000EB6  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  4759  000EB8  6EDA               	movwf	fsr2h,c
  4760  000EBA  0E00               	movlw	0
  4761  000EBC  6EDF               	movwf	indf2,c
  4762                           
  4763                           ;tff.c: 933: *(volatile BYTE*)(&dir[26])=(BYTE)(0); *(volatile BYTE*)((&dir[26])+1)=(BYT
      +                          E)((WORD)(0)>>8);
  4764  000EBE  0E1A               	movlw	26
  4765  000EC0  0101               	movlb	1	; () banked
  4766  000EC2  25D8               	addwf	f_open@dir& (0+255),w,b
  4767  000EC4  6ED9               	movwf	fsr2l,c
  4768  000EC6  0E00               	movlw	0
  4769  000EC8  0101               	movlb	1	; () banked
  4770  000ECA  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  4771  000ECC  6EDA               	movwf	fsr2h,c
  4772  000ECE  0E00               	movlw	0
  4773  000ED0  6EDF               	movwf	indf2,c
  4774  000ED2  0E1B               	movlw	27
  4775  000ED4  0101               	movlb	1	; () banked
  4776  000ED6  25D8               	addwf	f_open@dir& (0+255),w,b
  4777  000ED8  6ED9               	movwf	fsr2l,c
  4778  000EDA  0E00               	movlw	0
  4779  000EDC  0101               	movlb	1	; () banked
  4780  000EDE  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  4781  000EE0  6EDA               	movwf	fsr2h,c
  4782  000EE2  0E00               	movlw	0
  4783  000EE4  6EDF               	movwf	indf2,c
  4784                           
  4785                           ;tff.c: 934: *(volatile BYTE*)(&dir[28])=(BYTE)(0); *(volatile BYTE*)((&dir[28])+1)=(BYT
      +                          E)((WORD)(0)>>8); *(volatile BYTE*)((&dir[28])+2)=(BYTE)((DWORD)(0)>>16); *(volatile BYT
      +                          E*)((&dir[28])+3)=(BYTE)((DWORD)(0)>>24);
  4786  000EE6  0E1C               	movlw	28
  4787  000EE8  0101               	movlb	1	; () banked
  4788  000EEA  25D8               	addwf	f_open@dir& (0+255),w,b
  4789  000EEC  6ED9               	movwf	fsr2l,c
  4790  000EEE  0E00               	movlw	0
  4791  000EF0  0101               	movlb	1	; () banked
  4792  000EF2  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  4793  000EF4  6EDA               	movwf	fsr2h,c
  4794  000EF6  0E00               	movlw	0
  4795  000EF8  6EDF               	movwf	indf2,c
  4796  000EFA  0E1D               	movlw	29
  4797  000EFC  0101               	movlb	1	; () banked
  4798  000EFE  25D8               	addwf	f_open@dir& (0+255),w,b
  4799  000F00  6ED9               	movwf	fsr2l,c
  4800  000F02  0E00               	movlw	0
  4801  000F04  0101               	movlb	1	; () banked
  4802  000F06  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  4803  000F08  6EDA               	movwf	fsr2h,c
  4804  000F0A  0E00               	movlw	0
  4805  000F0C  6EDF               	movwf	indf2,c
  4806  000F0E  0E1E               	movlw	30
  4807  000F10  0101               	movlb	1	; () banked
  4808  000F12  25D8               	addwf	f_open@dir& (0+255),w,b
  4809  000F14  6ED9               	movwf	fsr2l,c
  4810  000F16  0E00               	movlw	0
  4811  000F18  0101               	movlb	1	; () banked
  4812  000F1A  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  4813  000F1C  6EDA               	movwf	fsr2h,c
  4814  000F1E  0E00               	movlw	0
  4815  000F20  6EDF               	movwf	indf2,c
  4816  000F22  0E1F               	movlw	31
  4817  000F24  0101               	movlb	1	; () banked
  4818  000F26  25D8               	addwf	f_open@dir& (0+255),w,b
  4819  000F28  6ED9               	movwf	fsr2l,c
  4820  000F2A  0E00               	movlw	0
  4821  000F2C  0101               	movlb	1	; () banked
  4822  000F2E  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  4823  000F30  6EDA               	movwf	fsr2h,c
  4824  000F32  0E00               	movlw	0
  4825  000F34  6EDF               	movwf	indf2,c
  4826                           
  4827                           ;tff.c: 935: dj.fs->winflag = 1;
  4828  000F36  0101               	movlb	1	; () banked
  4829  000F38  EE20 F027          	lfsr	2,39
  4830  000F3C  51CA               	movf	(f_open@dj+4)& (0+255),w,b
  4831  000F3E  26D9               	addwf	fsr2l,f,c
  4832  000F40  51CB               	movf	(f_open@dj+5)& (0+255),w,b
  4833  000F42  22DA               	addwfc	fsr2h,f,c
  4834  000F44  0E01               	movlw	1
  4835  000F46  6EDF               	movwf	indf2,c
  4836                           
  4837                           ;tff.c: 936: dw = dj.fs->winsect;
  4838  000F48  0101               	movlb	1	; () banked
  4839  000F4A  EE20 F004          	lfsr	2,4
  4840  000F4E  51CA               	movf	(f_open@dj+4)& (0+255),w,b
  4841  000F50  26D9               	addwf	fsr2l,f,c
  4842  000F52  51CB               	movf	(f_open@dj+5)& (0+255),w,b
  4843  000F54  22DA               	addwfc	fsr2h,f,c
  4844  000F56  CFDE F1C1          	movff	postinc2,f_open@dw
  4845  000F5A  CFDE F1C2          	movff	postinc2,f_open@dw+1
  4846  000F5E  CFDE F1C3          	movff	postinc2,f_open@dw+2
  4847  000F62  CFDE F1C4          	movff	postinc2,f_open@dw+3
  4848                           
  4849                           ; BSR set to: 1
  4850                           ;tff.c: 937: if (!remove_chain(rs) || !move_window(dw))
  4851  000F66  C1BD  F0DF         	movff	f_open@rs,remove_chain@clust
  4852  000F6A  C1BE  F0E0         	movff	f_open@rs+1,remove_chain@clust+1
  4853  000F6E  C1BF  F0E1         	movff	f_open@rs+2,remove_chain@clust+2
  4854  000F72  C1C0  F0E2         	movff	f_open@rs+3,remove_chain@clust+3
  4855  000F76  EC45  F023         	call	_remove_chain	;wreg free
  4856  000F7A  0900               	iorlw	0
  4857  000F7C  B4D8               	btfsc	status,2,c
  4858  000F7E  D00D               	goto	l12535
  4859  000F80  C1C1  F08E         	movff	f_open@dw,move_window@sector
  4860  000F84  C1C2  F08F         	movff	f_open@dw+1,move_window@sector+1
  4861  000F88  C1C3  F090         	movff	f_open@dw+2,move_window@sector+2
  4862  000F8C  C1C4  F091         	movff	f_open@dw+3,move_window@sector+3
  4863  000F90  EC28  F01D         	call	_move_window	;wreg free
  4864  000F94  0900               	iorlw	0
  4865  000F96  A4D8               	btfss	status,2,c
  4866  000F98  D002               	goto	l12539
  4867  000F9A                     l12535:
  4868                           
  4869                           ;tff.c: 938: return FR_RW_ERROR;
  4870  000F9A  0E08               	movlw	8
  4871  000F9C  0012               	return	
  4872  000F9E                     l12539:
  4873                           
  4874                           ;tff.c: 939: dj.fs->last_clust = rs - 1;
  4875  000F9E  0EFF               	movlw	255
  4876  000FA0  0101               	movlb	1	; () banked
  4877  000FA2  25BD               	addwf	f_open@rs& (0+255),w,b
  4878  000FA4  0101               	movlb	1	; () banked
  4879  000FA6  6F97               	movwf	??_f_open& (0+255),b
  4880  000FA8  0EFF               	movlw	255
  4881  000FAA  0101               	movlb	1	; () banked
  4882  000FAC  21BE               	addwfc	(f_open@rs+1)& (0+255),w,b
  4883  000FAE  0101               	movlb	1	; () banked
  4884  000FB0  6F98               	movwf	(??_f_open+1)& (0+255),b
  4885  000FB2  0EFF               	movlw	255
  4886  000FB4  0101               	movlb	1	; () banked
  4887  000FB6  21BF               	addwfc	(f_open@rs+2)& (0+255),w,b
  4888  000FB8  0101               	movlb	1	; () banked
  4889  000FBA  6F99               	movwf	(??_f_open+2)& (0+255),b
  4890  000FBC  0EFF               	movlw	255
  4891  000FBE  0101               	movlb	1	; () banked
  4892  000FC0  21C0               	addwfc	(f_open@rs+3)& (0+255),w,b
  4893  000FC2  0101               	movlb	1	; () banked
  4894  000FC4  6F9A               	movwf	(??_f_open+3)& (0+255),b
  4895  000FC6  0101               	movlb	1	; () banked
  4896  000FC8  EE20 F01C          	lfsr	2,28
  4897  000FCC  51CA               	movf	(f_open@dj+4)& (0+255),w,b
  4898  000FCE  26D9               	addwf	fsr2l,f,c
  4899  000FD0  51CB               	movf	(f_open@dj+5)& (0+255),w,b
  4900  000FD2  22DA               	addwfc	fsr2h,f,c
  4901  000FD4  C197  FFDE         	movff	??_f_open,postinc2
  4902  000FD8  C198  FFDE         	movff	??_f_open+1,postinc2
  4903  000FDC  C199  FFDE         	movff	??_f_open+2,postinc2
  4904  000FE0  C19A  FFDE         	movff	??_f_open+3,postinc2
  4905  000FE4                     l12541:
  4906                           
  4907                           ; BSR set to: 1
  4908                           ;tff.c: 940: }
  4909                           ;tff.c: 941: }
  4910                           ;tff.c: 942: if (mode & 0x08) {
  4911  000FE4  0101               	movlb	1	; () banked
  4912  000FE6  A796               	btfss	f_open@mode& (0+255),3,b
  4913  000FE8  D071               	goto	l12579
  4914                           
  4915                           ; BSR set to: 1
  4916                           ;tff.c: 943: dir[11] = 0;
  4917  000FEA  0101               	movlb	1	; () banked
  4918  000FEC  EE20 F00B          	lfsr	2,11
  4919  000FF0  51D8               	movf	f_open@dir& (0+255),w,b
  4920  000FF2  26D9               	addwf	fsr2l,f,c
  4921  000FF4  51D9               	movf	(f_open@dir+1)& (0+255),w,b
  4922  000FF6  22DA               	addwfc	fsr2h,f,c
  4923  000FF8  0E00               	movlw	0
  4924  000FFA  6EDF               	movwf	indf2,c
  4925                           
  4926                           ; BSR set to: 1
  4927                           ;tff.c: 944: dw = get_fattime();
  4928  000FFC  EC15  F021         	call	_get_fattime	;wreg free
  4929  001000  C016  F1C1         	movff	?_get_fattime,f_open@dw
  4930  001004  C017  F1C2         	movff	?_get_fattime+1,f_open@dw+1
  4931  001008  C018  F1C3         	movff	?_get_fattime+2,f_open@dw+2
  4932  00100C  C019  F1C4         	movff	?_get_fattime+3,f_open@dw+3
  4933                           
  4934                           ;tff.c: 945: *(volatile BYTE*)(&dir[14])=(BYTE)(dw); *(volatile BYTE*)((&dir[14])+1)=(BY
      +                          TE)((WORD)(dw)>>8); *(volatile BYTE*)((&dir[14])+2)=(BYTE)((DWORD)(dw)>>16); *(volatile 
      +                          BYTE*)((&dir[14])+3)=(BYTE)((DWORD)(dw)>>24);
  4935  001010  0E0E               	movlw	14
  4936  001012  0101               	movlb	1	; () banked
  4937  001014  25D8               	addwf	f_open@dir& (0+255),w,b
  4938  001016  6ED9               	movwf	fsr2l,c
  4939  001018  0E00               	movlw	0
  4940  00101A  0101               	movlb	1	; () banked
  4941  00101C  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  4942  00101E  6EDA               	movwf	fsr2h,c
  4943  001020  C1C1  FFDF         	movff	f_open@dw,indf2
  4944                           
  4945                           ; BSR set to: 1
  4946  001024  0E0F               	movlw	15
  4947  001026  0101               	movlb	1	; () banked
  4948  001028  25D8               	addwf	f_open@dir& (0+255),w,b
  4949  00102A  6ED9               	movwf	fsr2l,c
  4950  00102C  0E00               	movlw	0
  4951  00102E  0101               	movlb	1	; () banked
  4952  001030  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  4953  001032  6EDA               	movwf	fsr2h,c
  4954  001034  0101               	movlb	1	; () banked
  4955  001036  51C2               	movf	(f_open@dw+1)& (0+255),w,b
  4956  001038  6EDF               	movwf	indf2,c
  4957                           
  4958                           ; BSR set to: 1
  4959  00103A  0E10               	movlw	16
  4960  00103C  0101               	movlb	1	; () banked
  4961  00103E  25D8               	addwf	f_open@dir& (0+255),w,b
  4962  001040  6ED9               	movwf	fsr2l,c
  4963  001042  0E00               	movlw	0
  4964  001044  0101               	movlb	1	; () banked
  4965  001046  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  4966  001048  6EDA               	movwf	fsr2h,c
  4967  00104A  C1C3  FFDF         	movff	f_open@dw+2,indf2
  4968                           
  4969                           ; BSR set to: 1
  4970  00104E  0E11               	movlw	17
  4971  001050  0101               	movlb	1	; () banked
  4972  001052  25D8               	addwf	f_open@dir& (0+255),w,b
  4973  001054  6ED9               	movwf	fsr2l,c
  4974  001056  0E00               	movlw	0
  4975  001058  0101               	movlb	1	; () banked
  4976  00105A  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  4977  00105C  6EDA               	movwf	fsr2h,c
  4978  00105E  C1C4  FFDF         	movff	f_open@dw+3,indf2
  4979                           
  4980                           ; BSR set to: 1
  4981                           ;tff.c: 946: dj.fs->winflag = 1;
  4982  001062  0101               	movlb	1	; () banked
  4983  001064  EE20 F027          	lfsr	2,39
  4984  001068  51CA               	movf	(f_open@dj+4)& (0+255),w,b
  4985  00106A  26D9               	addwf	fsr2l,f,c
  4986  00106C  51CB               	movf	(f_open@dj+5)& (0+255),w,b
  4987  00106E  22DA               	addwfc	fsr2h,f,c
  4988  001070  0E01               	movlw	1
  4989  001072  6EDF               	movwf	indf2,c
  4990                           
  4991                           ; BSR set to: 1
  4992                           ;tff.c: 947: mode |= 0x20;
  4993  001074  0101               	movlb	1	; () banked
  4994  001076  8B96               	bsf	f_open@mode& (0+255),5,b
  4995                           
  4996                           ; BSR set to: 1
  4997                           ;tff.c: 948: }
  4998                           ;tff.c: 949: }
  4999  001078  D029               	goto	l12579
  5000  00107A                     l12559:
  5001                           
  5002                           ; BSR set to: 1
  5003                           ;tff.c: 951: else {
  5004                           ;tff.c: 953: if (res != FR_OK) return res;
  5005  00107A  0101               	movlb	1	; () banked
  5006  00107C  51C5               	movf	f_open@res& (0+255),w,b
  5007  00107E  0101               	movlb	1	; () banked
  5008  001080  B4D8               	btfsc	status,2,c
  5009  001082  D003               	goto	l12565
  5010                           
  5011                           ; BSR set to: 1
  5012  001084  0101               	movlb	1	; () banked
  5013  001086  51C5               	movf	f_open@res& (0+255),w,b
  5014                           
  5015                           ; BSR set to: 1
  5016  001088  0012               	return	
  5017  00108A                     l12565:
  5018                           
  5019                           ; BSR set to: 1
  5020                           ;tff.c: 954: if (!dir || (dir[11] & 0x10))
  5021  00108A  0101               	movlb	1	; () banked
  5022  00108C  51D8               	movf	f_open@dir& (0+255),w,b
  5023  00108E  0101               	movlb	1	; () banked
  5024  001090  11D9               	iorwf	(f_open@dir+1)& (0+255),w,b
  5025  001092  B4D8               	btfsc	status,2,c
  5026  001094  D00A               	goto	l12569
  5027                           
  5028                           ; BSR set to: 1
  5029  001096  0101               	movlb	1	; () banked
  5030  001098  EE20 F00B          	lfsr	2,11
  5031  00109C  51D8               	movf	f_open@dir& (0+255),w,b
  5032  00109E  26D9               	addwf	fsr2l,f,c
  5033  0010A0  51D9               	movf	(f_open@dir+1)& (0+255),w,b
  5034  0010A2  22DA               	addwfc	fsr2h,f,c
  5035  0010A4  0101               	movlb	1	; () banked
  5036  0010A6  A8DF               	btfss	indf2,4,c
  5037  0010A8  D002               	goto	l818
  5038  0010AA                     l12569:
  5039                           
  5040                           ; BSR set to: 1
  5041                           ;tff.c: 955: return FR_NO_FILE;
  5042  0010AA  0E02               	movlw	2
  5043                           
  5044                           ; BSR set to: 1
  5045  0010AC  0012               	return	
  5046  0010AE                     l818:
  5047                           
  5048                           ; BSR set to: 1
  5049                           ;tff.c: 957: if ((mode & 0x02) && (dir[11] & 0x01))
  5050  0010AE  0101               	movlb	1	; () banked
  5051  0010B0  A396               	btfss	f_open@mode& (0+255),1,b
  5052  0010B2  D00C               	goto	l12579
  5053                           
  5054                           ; BSR set to: 1
  5055  0010B4  0101               	movlb	1	; () banked
  5056  0010B6  EE20 F00B          	lfsr	2,11
  5057  0010BA  51D8               	movf	f_open@dir& (0+255),w,b
  5058  0010BC  26D9               	addwf	fsr2l,f,c
  5059  0010BE  51D9               	movf	(f_open@dir+1)& (0+255),w,b
  5060  0010C0  22DA               	addwfc	fsr2h,f,c
  5061  0010C2  0101               	movlb	1	; () banked
  5062  0010C4  A0DF               	btfss	indf2,0,c
  5063  0010C6  D002               	goto	l12579
  5064                           
  5065                           ; BSR set to: 1
  5066                           ;tff.c: 958: return FR_DENIED;
  5067  0010C8  0E06               	movlw	6
  5068                           
  5069                           ; BSR set to: 1
  5070  0010CA  0012               	return	
  5071  0010CC                     l12579:
  5072                           
  5073                           ; BSR set to: 1
  5074                           ;tff.c: 959: }
  5075                           ;tff.c: 960: fp->dir_sect = dj.fs->winsect;
  5076  0010CC  0101               	movlb	1	; () banked
  5077  0010CE  EE20 F004          	lfsr	2,4
  5078  0010D2  51CA               	movf	(f_open@dj+4)& (0+255),w,b
  5079  0010D4  26D9               	addwf	fsr2l,f,c
  5080  0010D6  51CB               	movf	(f_open@dj+5)& (0+255),w,b
  5081  0010D8  22DA               	addwfc	fsr2h,f,c
  5082  0010DA  0101               	movlb	1	; () banked
  5083  0010DC  EE10 F01A          	lfsr	1,26
  5084  0010E0  5192               	movf	f_open@fp& (0+255),w,b
  5085  0010E2  26E1               	addwf	fsr1l,f,c
  5086  0010E4  5193               	movf	(f_open@fp+1)& (0+255),w,b
  5087  0010E6  22E2               	addwfc	fsr1h,f,c
  5088  0010E8  CFDE FFE6          	movff	postinc2,postinc1
  5089  0010EC  CFDE FFE6          	movff	postinc2,postinc1
  5090  0010F0  CFDE FFE6          	movff	postinc2,postinc1
  5091  0010F4  CFDE FFE6          	movff	postinc2,postinc1
  5092                           
  5093                           ; BSR set to: 1
  5094                           ;tff.c: 961: fp->dir_ptr = dir;
  5095  0010F8  0101               	movlb	1	; () banked
  5096  0010FA  EE20 F01E          	lfsr	2,30
  5097  0010FE  5192               	movf	f_open@fp& (0+255),w,b
  5098  001100  26D9               	addwf	fsr2l,f,c
  5099  001102  5193               	movf	(f_open@fp+1)& (0+255),w,b
  5100  001104  22DA               	addwfc	fsr2h,f,c
  5101  001106  C1D8  FFDE         	movff	f_open@dir,postinc2
  5102  00110A  C1D9  FFDD         	movff	f_open@dir+1,postdec2
  5103                           
  5104                           ; BSR set to: 1
  5105                           ;tff.c: 963: fp->flag = mode;
  5106  00110E  0101               	movlb	1	; () banked
  5107  001110  EE20 F002          	lfsr	2,2
  5108  001114  5192               	movf	f_open@fp& (0+255),w,b
  5109  001116  26D9               	addwf	fsr2l,f,c
  5110  001118  5193               	movf	(f_open@fp+1)& (0+255),w,b
  5111  00111A  22DA               	addwfc	fsr2h,f,c
  5112  00111C  C196  FFDF         	movff	f_open@mode,indf2
  5113                           
  5114                           ; BSR set to: 1
  5115                           ;tff.c: 964: fp->org_clust =
  5116                           ;tff.c: 966: ((DWORD)(WORD)(((WORD)*(volatile BYTE*)((&dir[20])+1)<<8)|(WORD)*(volatile 
      +                          BYTE*)(&dir[20])) << 16) |
  5117                           ;tff.c: 968: (WORD)(((WORD)*(volatile BYTE*)((&dir[26])+1)<<8)|(WORD)*(volatile BYTE*)(&
      +                          dir[26]));
  5118  001120  0E1B               	movlw	27
  5119  001122  0101               	movlb	1	; () banked
  5120  001124  25D8               	addwf	f_open@dir& (0+255),w,b
  5121  001126  6ED9               	movwf	fsr2l,c
  5122  001128  0E00               	movlw	0
  5123  00112A  0101               	movlb	1	; () banked
  5124  00112C  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  5125  00112E  6EDA               	movwf	fsr2h,c
  5126  001130  50DF               	movf	indf2,w,c
  5127  001132  0101               	movlb	1	; () banked
  5128  001134  6F97               	movwf	??_f_open& (0+255),b
  5129  001136  0101               	movlb	1	; () banked
  5130  001138  5197               	movf	??_f_open& (0+255),w,b
  5131  00113A  0101               	movlb	1	; () banked
  5132  00113C  6F99               	movwf	(??_f_open+2)& (0+255),b
  5133  00113E  6B98               	clrf	(??_f_open+1)& (0+255),b
  5134  001140  0E1A               	movlw	26
  5135  001142  0101               	movlb	1	; () banked
  5136  001144  25D8               	addwf	f_open@dir& (0+255),w,b
  5137  001146  6ED9               	movwf	fsr2l,c
  5138  001148  0E00               	movlw	0
  5139  00114A  0101               	movlb	1	; () banked
  5140  00114C  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  5141  00114E  6EDA               	movwf	fsr2h,c
  5142  001150  50DF               	movf	indf2,w,c
  5143  001152  0101               	movlb	1	; () banked
  5144  001154  6F9A               	movwf	(??_f_open+3)& (0+255),b
  5145  001156  0101               	movlb	1	; () banked
  5146  001158  519A               	movf	(??_f_open+3)& (0+255),w,b
  5147  00115A  0101               	movlb	1	; () banked
  5148  00115C  1398               	iorwf	(??_f_open+1)& (0+255),f,b
  5149  00115E  0E00               	movlw	0
  5150  001160  1399               	iorwf	(??_f_open+2)& (0+255),f,b
  5151  001162  0E15               	movlw	21
  5152  001164  0101               	movlb	1	; () banked
  5153  001166  25D8               	addwf	f_open@dir& (0+255),w,b
  5154  001168  6ED9               	movwf	fsr2l,c
  5155  00116A  0E00               	movlw	0
  5156  00116C  0101               	movlb	1	; () banked
  5157  00116E  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  5158  001170  6EDA               	movwf	fsr2h,c
  5159  001172  50DF               	movf	indf2,w,c
  5160  001174  0101               	movlb	1	; () banked
  5161  001176  6F9B               	movwf	(??_f_open+4)& (0+255),b
  5162  001178  0101               	movlb	1	; () banked
  5163  00117A  519B               	movf	(??_f_open+4)& (0+255),w,b
  5164  00117C  0101               	movlb	1	; () banked
  5165  00117E  6F9D               	movwf	(??_f_open+6)& (0+255),b
  5166  001180  6B9C               	clrf	(??_f_open+5)& (0+255),b
  5167  001182  0E14               	movlw	20
  5168  001184  0101               	movlb	1	; () banked
  5169  001186  25D8               	addwf	f_open@dir& (0+255),w,b
  5170  001188  6ED9               	movwf	fsr2l,c
  5171  00118A  0E00               	movlw	0
  5172  00118C  0101               	movlb	1	; () banked
  5173  00118E  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  5174  001190  6EDA               	movwf	fsr2h,c
  5175  001192  50DF               	movf	indf2,w,c
  5176  001194  0101               	movlb	1	; () banked
  5177  001196  6F9E               	movwf	(??_f_open+7)& (0+255),b
  5178  001198  0101               	movlb	1	; () banked
  5179  00119A  519E               	movf	(??_f_open+7)& (0+255),w,b
  5180  00119C  0101               	movlb	1	; () banked
  5181  00119E  119C               	iorwf	(??_f_open+5)& (0+255),w,b
  5182  0011A0  0101               	movlb	1	; () banked
  5183  0011A2  6F9F               	movwf	(??_f_open+8)& (0+255),b
  5184  0011A4  0101               	movlb	1	; () banked
  5185  0011A6  519D               	movf	(??_f_open+6)& (0+255),w,b
  5186  0011A8  0101               	movlb	1	; () banked
  5187  0011AA  6FA0               	movwf	(??_f_open+9)& (0+255),b
  5188  0011AC  0101               	movlb	1	; () banked
  5189  0011AE  6BA1               	clrf	(??_f_open+10)& (0+255),b
  5190  0011B0  0101               	movlb	1	; () banked
  5191  0011B2  6BA2               	clrf	(??_f_open+11)& (0+255),b
  5192  0011B4  C1A0  F1A2         	movff	??_f_open+9,??_f_open+11
  5193  0011B8  C19F  F1A1         	movff	??_f_open+8,??_f_open+10
  5194  0011BC  0101               	movlb	1	; () banked
  5195  0011BE  6BA0               	clrf	(??_f_open+9)& (0+255),b
  5196  0011C0  6B9F               	clrf	(??_f_open+8)& (0+255),b
  5197  0011C2  0101               	movlb	1	; () banked
  5198  0011C4  5198               	movf	(??_f_open+1)& (0+255),w,b
  5199  0011C6  0101               	movlb	1	; () banked
  5200  0011C8  119F               	iorwf	(??_f_open+8)& (0+255),w,b
  5201  0011CA  0101               	movlb	1	; () banked
  5202  0011CC  6FA3               	movwf	(??_f_open+12)& (0+255),b
  5203  0011CE  0101               	movlb	1	; () banked
  5204  0011D0  5199               	movf	(??_f_open+2)& (0+255),w,b
  5205  0011D2  0101               	movlb	1	; () banked
  5206  0011D4  11A0               	iorwf	(??_f_open+9)& (0+255),w,b
  5207  0011D6  0101               	movlb	1	; () banked
  5208  0011D8  6FA4               	movwf	(??_f_open+13)& (0+255),b
  5209  0011DA  0E00               	movlw	0
  5210  0011DC  0101               	movlb	1	; () banked
  5211  0011DE  11A1               	iorwf	(??_f_open+10)& (0+255),w,b
  5212  0011E0  0101               	movlb	1	; () banked
  5213  0011E2  6FA5               	movwf	(??_f_open+14)& (0+255),b
  5214  0011E4  0E00               	movlw	0
  5215  0011E6  0101               	movlb	1	; () banked
  5216  0011E8  11A2               	iorwf	(??_f_open+11)& (0+255),w,b
  5217  0011EA  0101               	movlb	1	; () banked
  5218  0011EC  6FA6               	movwf	(??_f_open+15)& (0+255),b
  5219  0011EE  0101               	movlb	1	; () banked
  5220  0011F0  EE20 F00E          	lfsr	2,14
  5221  0011F4  5192               	movf	f_open@fp& (0+255),w,b
  5222  0011F6  26D9               	addwf	fsr2l,f,c
  5223  0011F8  5193               	movf	(f_open@fp+1)& (0+255),w,b
  5224  0011FA  22DA               	addwfc	fsr2h,f,c
  5225  0011FC  C1A3  FFDE         	movff	??_f_open+12,postinc2
  5226  001200  C1A4  FFDE         	movff	??_f_open+13,postinc2
  5227  001204  C1A5  FFDE         	movff	??_f_open+14,postinc2
  5228  001208  C1A6  FFDE         	movff	??_f_open+15,postinc2
  5229                           
  5230                           ; BSR set to: 1
  5231                           ;tff.c: 969: fp->fsize = (DWORD)(((DWORD)*(volatile BYTE*)((&dir[28])+3)<<24)|((DWORD)*(
      +                          volatile BYTE*)((&dir[28])+2)<<16)|((WORD)*(volatile BYTE*)((&dir[28])+1)<<8)|*(volatile
      +                           BYTE*)(&dir[28]));
  5232  00120C  0E1D               	movlw	29
  5233  00120E  0101               	movlb	1	; () banked
  5234  001210  25D8               	addwf	f_open@dir& (0+255),w,b
  5235  001212  6ED9               	movwf	fsr2l,c
  5236  001214  0E00               	movlw	0
  5237  001216  0101               	movlb	1	; () banked
  5238  001218  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  5239  00121A  6EDA               	movwf	fsr2h,c
  5240  00121C  50DF               	movf	indf2,w,c
  5241  00121E  0101               	movlb	1	; () banked
  5242  001220  6F97               	movwf	??_f_open& (0+255),b
  5243  001222  0101               	movlb	1	; () banked
  5244  001224  5197               	movf	??_f_open& (0+255),w,b
  5245  001226  0101               	movlb	1	; () banked
  5246  001228  6F99               	movwf	(??_f_open+2)& (0+255),b
  5247  00122A  6B98               	clrf	(??_f_open+1)& (0+255),b
  5248  00122C  0E1E               	movlw	30
  5249  00122E  0101               	movlb	1	; () banked
  5250  001230  25D8               	addwf	f_open@dir& (0+255),w,b
  5251  001232  6ED9               	movwf	fsr2l,c
  5252  001234  0E00               	movlw	0
  5253  001236  0101               	movlb	1	; () banked
  5254  001238  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  5255  00123A  6EDA               	movwf	fsr2h,c
  5256  00123C  50DF               	movf	indf2,w,c
  5257  00123E  0101               	movlb	1	; () banked
  5258  001240  6F9A               	movwf	(??_f_open+3)& (0+255),b
  5259  001242  C19A  F19B         	movff	??_f_open+3,??_f_open+4
  5260  001246  0101               	movlb	1	; () banked
  5261  001248  6B9C               	clrf	(??_f_open+5)& (0+255),b
  5262  00124A  6B9D               	clrf	(??_f_open+6)& (0+255),b
  5263  00124C  6B9E               	clrf	(??_f_open+7)& (0+255),b
  5264  00124E  C19C  F19E         	movff	??_f_open+5,??_f_open+7
  5265  001252  C19B  F19D         	movff	??_f_open+4,??_f_open+6
  5266  001256  0101               	movlb	1	; () banked
  5267  001258  6B9C               	clrf	(??_f_open+5)& (0+255),b
  5268  00125A  6B9B               	clrf	(??_f_open+4)& (0+255),b
  5269  00125C  0E1F               	movlw	31
  5270  00125E  0101               	movlb	1	; () banked
  5271  001260  25D8               	addwf	f_open@dir& (0+255),w,b
  5272  001262  6ED9               	movwf	fsr2l,c
  5273  001264  0E00               	movlw	0
  5274  001266  0101               	movlb	1	; () banked
  5275  001268  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  5276  00126A  6EDA               	movwf	fsr2h,c
  5277  00126C  50DF               	movf	indf2,w,c
  5278  00126E  0101               	movlb	1	; () banked
  5279  001270  6F9F               	movwf	(??_f_open+8)& (0+255),b
  5280  001272  C19F  F1A0         	movff	??_f_open+8,??_f_open+9
  5281  001276  0101               	movlb	1	; () banked
  5282  001278  6BA1               	clrf	(??_f_open+10)& (0+255),b
  5283  00127A  6BA2               	clrf	(??_f_open+11)& (0+255),b
  5284  00127C  6BA3               	clrf	(??_f_open+12)& (0+255),b
  5285  00127E  C1A0  F1A3         	movff	??_f_open+9,??_f_open+12
  5286  001282  0101               	movlb	1	; () banked
  5287  001284  6BA2               	clrf	(??_f_open+11)& (0+255),b
  5288  001286  6BA1               	clrf	(??_f_open+10)& (0+255),b
  5289  001288  6BA0               	clrf	(??_f_open+9)& (0+255),b
  5290  00128A  0101               	movlb	1	; () banked
  5291  00128C  519B               	movf	(??_f_open+4)& (0+255),w,b
  5292  00128E  0101               	movlb	1	; () banked
  5293  001290  11A0               	iorwf	(??_f_open+9)& (0+255),w,b
  5294  001292  0101               	movlb	1	; () banked
  5295  001294  6FA4               	movwf	(??_f_open+13)& (0+255),b
  5296  001296  0101               	movlb	1	; () banked
  5297  001298  519C               	movf	(??_f_open+5)& (0+255),w,b
  5298  00129A  0101               	movlb	1	; () banked
  5299  00129C  11A1               	iorwf	(??_f_open+10)& (0+255),w,b
  5300  00129E  0101               	movlb	1	; () banked
  5301  0012A0  6FA5               	movwf	(??_f_open+14)& (0+255),b
  5302  0012A2  0101               	movlb	1	; () banked
  5303  0012A4  519D               	movf	(??_f_open+6)& (0+255),w,b
  5304  0012A6  0101               	movlb	1	; () banked
  5305  0012A8  11A2               	iorwf	(??_f_open+11)& (0+255),w,b
  5306  0012AA  0101               	movlb	1	; () banked
  5307  0012AC  6FA6               	movwf	(??_f_open+15)& (0+255),b
  5308  0012AE  0101               	movlb	1	; () banked
  5309  0012B0  519E               	movf	(??_f_open+7)& (0+255),w,b
  5310  0012B2  0101               	movlb	1	; () banked
  5311  0012B4  11A3               	iorwf	(??_f_open+12)& (0+255),w,b
  5312  0012B6  0101               	movlb	1	; () banked
  5313  0012B8  6FA7               	movwf	(??_f_open+16)& (0+255),b
  5314  0012BA  0101               	movlb	1	; () banked
  5315  0012BC  5198               	movf	(??_f_open+1)& (0+255),w,b
  5316  0012BE  0101               	movlb	1	; () banked
  5317  0012C0  11A4               	iorwf	(??_f_open+13)& (0+255),w,b
  5318  0012C2  0101               	movlb	1	; () banked
  5319  0012C4  6FA8               	movwf	(??_f_open+17)& (0+255),b
  5320  0012C6  0101               	movlb	1	; () banked
  5321  0012C8  5199               	movf	(??_f_open+2)& (0+255),w,b
  5322  0012CA  0101               	movlb	1	; () banked
  5323  0012CC  11A5               	iorwf	(??_f_open+14)& (0+255),w,b
  5324  0012CE  0101               	movlb	1	; () banked
  5325  0012D0  6FA9               	movwf	(??_f_open+18)& (0+255),b
  5326  0012D2  0E00               	movlw	0
  5327  0012D4  0101               	movlb	1	; () banked
  5328  0012D6  11A6               	iorwf	(??_f_open+15)& (0+255),w,b
  5329  0012D8  0101               	movlb	1	; () banked
  5330  0012DA  6FAA               	movwf	(??_f_open+19)& (0+255),b
  5331  0012DC  0E00               	movlw	0
  5332  0012DE  0101               	movlb	1	; () banked
  5333  0012E0  11A7               	iorwf	(??_f_open+16)& (0+255),w,b
  5334  0012E2  0101               	movlb	1	; () banked
  5335  0012E4  6FAB               	movwf	(??_f_open+20)& (0+255),b
  5336  0012E6  0E1C               	movlw	28
  5337  0012E8  0101               	movlb	1	; () banked
  5338  0012EA  25D8               	addwf	f_open@dir& (0+255),w,b
  5339  0012EC  6ED9               	movwf	fsr2l,c
  5340  0012EE  0E00               	movlw	0
  5341  0012F0  0101               	movlb	1	; () banked
  5342  0012F2  21D9               	addwfc	(f_open@dir+1)& (0+255),w,b
  5343  0012F4  6EDA               	movwf	fsr2h,c
  5344  0012F6  50DF               	movf	indf2,w,c
  5345  0012F8  0101               	movlb	1	; () banked
  5346  0012FA  6FAC               	movwf	(??_f_open+21)& (0+255),b
  5347  0012FC  0101               	movlb	1	; () banked
  5348  0012FE  51AC               	movf	(??_f_open+21)& (0+255),w,b
  5349  001300  0101               	movlb	1	; () banked
  5350  001302  11A8               	iorwf	(??_f_open+17)& (0+255),w,b
  5351  001304  0101               	movlb	1	; () banked
  5352  001306  6FAD               	movwf	(??_f_open+22)& (0+255),b
  5353  001308  0101               	movlb	1	; () banked
  5354  00130A  51A9               	movf	(??_f_open+18)& (0+255),w,b
  5355  00130C  0101               	movlb	1	; () banked
  5356  00130E  6FAE               	movwf	(??_f_open+23)& (0+255),b
  5357  001310  0101               	movlb	1	; () banked
  5358  001312  51AA               	movf	(??_f_open+19)& (0+255),w,b
  5359  001314  0101               	movlb	1	; () banked
  5360  001316  6FAF               	movwf	(??_f_open+24)& (0+255),b
  5361  001318  0101               	movlb	1	; () banked
  5362  00131A  51AB               	movf	(??_f_open+20)& (0+255),w,b
  5363  00131C  0101               	movlb	1	; () banked
  5364  00131E  6FB0               	movwf	(??_f_open+25)& (0+255),b
  5365  001320  0101               	movlb	1	; () banked
  5366  001322  EE20 F00A          	lfsr	2,10
  5367  001326  5192               	movf	f_open@fp& (0+255),w,b
  5368  001328  26D9               	addwf	fsr2l,f,c
  5369  00132A  5193               	movf	(f_open@fp+1)& (0+255),w,b
  5370  00132C  22DA               	addwfc	fsr2h,f,c
  5371  00132E  C1AD  FFDE         	movff	??_f_open+22,postinc2
  5372  001332  C1AE  FFDE         	movff	??_f_open+23,postinc2
  5373  001336  C1AF  FFDE         	movff	??_f_open+24,postinc2
  5374  00133A  C1B0  FFDE         	movff	??_f_open+25,postinc2
  5375                           
  5376                           ; BSR set to: 1
  5377                           ;tff.c: 970: fp->fptr = 0; fp->csect = 255;
  5378  00133E  0101               	movlb	1	; () banked
  5379  001340  EE20 F006          	lfsr	2,6
  5380  001344  5192               	movf	f_open@fp& (0+255),w,b
  5381  001346  26D9               	addwf	fsr2l,f,c
  5382  001348  5193               	movf	(f_open@fp+1)& (0+255),w,b
  5383  00134A  22DA               	addwfc	fsr2h,f,c
  5384  00134C  6ADE               	clrf	postinc2,c
  5385  00134E  6ADE               	clrf	postinc2,c
  5386  001350  6ADE               	clrf	postinc2,c
  5387  001352  6ADD               	clrf	postdec2,c
  5388                           
  5389                           ; BSR set to: 1
  5390  001354  0101               	movlb	1	; () banked
  5391  001356  EE20 F003          	lfsr	2,3
  5392  00135A  5192               	movf	f_open@fp& (0+255),w,b
  5393  00135C  26D9               	addwf	fsr2l,f,c
  5394  00135E  5193               	movf	(f_open@fp+1)& (0+255),w,b
  5395  001360  22DA               	addwfc	fsr2h,f,c
  5396  001362  0EFF               	movlw	255
  5397  001364  6EDF               	movwf	indf2,c
  5398                           
  5399                           ; BSR set to: 1
  5400                           ;tff.c: 971: fp->fs = dj.fs; fp->id = dj.fs->id;
  5401  001366  0101               	movlb	1	; () banked
  5402  001368  EE20 F004          	lfsr	2,4
  5403  00136C  5192               	movf	f_open@fp& (0+255),w,b
  5404  00136E  26D9               	addwf	fsr2l,f,c
  5405  001370  5193               	movf	(f_open@fp+1)& (0+255),w,b
  5406  001372  22DA               	addwfc	fsr2h,f,c
  5407  001374  C1CA  FFDE         	movff	f_open@dj+4,postinc2
  5408  001378  C1CB  FFDD         	movff	f_open@dj+5,postdec2
  5409                           
  5410                           ; BSR set to: 1
  5411  00137C  C1CA  FFD9         	movff	f_open@dj+4,fsr2l
  5412  001380  C1CB  FFDA         	movff	f_open@dj+5,fsr2h
  5413  001384  C192  FFE1         	movff	f_open@fp,fsr1l
  5414  001388  C193  FFE2         	movff	f_open@fp+1,fsr1h
  5415  00138C  CFDE FFE6          	movff	postinc2,postinc1
  5416  001390  CFDD FFE5          	movff	postdec2,postdec1
  5417                           
  5418                           ; BSR set to: 1
  5419                           ;tff.c: 973: return FR_OK;
  5420  001394  0E00               	movlw	0
  5421  001396  0012               	return	
  5422  001398                     __end_of_f_open:
  5423                           	opt stack 0
  5424                           tosu	equ	0xFFF
  5425                           tosh	equ	0xFFE
  5426                           tosl	equ	0xFFD
  5427                           pclath	equ	0xFFA
  5428                           tblptru	equ	0xFF8
  5429                           tblptrh	equ	0xFF7
  5430                           tblptrl	equ	0xFF6
  5431                           tablat	equ	0xFF5
  5432                           prodh	equ	0xFF4
  5433                           prodl	equ	0xFF3
  5434                           intcon	equ	0xFF2
  5435                           intcon2	equ	0xFF1
  5436                           intcon3	equ	0xFF0
  5437                           postinc0	equ	0xFEE
  5438                           wreg	equ	0xFE8
  5439                           postinc1	equ	0xFE6
  5440                           postdec1	equ	0xFE5
  5441                           fsr1h	equ	0xFE2
  5442                           fsr1l	equ	0xFE1
  5443                           indf2	equ	0xFDF
  5444                           postinc2	equ	0xFDE
  5445                           postdec2	equ	0xFDD
  5446                           fsr2h	equ	0xFDA
  5447                           fsr2l	equ	0xFD9
  5448                           status	equ	0xFD8
  5449                           
  5450 ;; *************** function _trace_path *****************
  5451 ;; Defined at:
  5452 ;;		line 501 in file "bibliotecas/tff.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;  dj              2  142[BANK0 ] PTR struct _DIR
  5455 ;;		 -> f_rename@dj(18), f_utime@dj(18), f_chmod@dj(18), f_mkdir@dj(18), 
  5456 ;;		 -> f_unlink@dj(18), f_stat@dj(18), f_open@dj(18), 
  5457 ;;  fn              2  144[BANK0 ] PTR unsigned char 
  5458 ;;		 -> f_rename@fn(12), f_utime@fn(12), f_chmod@fn(12), f_mkdir@fn(12), 
  5459 ;;		 -> f_unlink@fn(12), f_stat@fn(12), f_opendir@fn(12), f_open@fn(12), 
  5460 ;;  path            2  146[BANK0 ] PTR const unsigned char 
  5461 ;;		 -> STR_39(10), 
  5462 ;;  dir             2  148[BANK0 ] PTR PTR unsigned char 
  5463 ;;		 -> f_rename@dir_new(2), f_rename@dir_old(2), f_utime@dir(2), f_chmod@dir(2), 
  5464 ;;		 -> f_mkdir@dir(2), f_unlink@dir(2), f_stat@dir(2), f_opendir@dir(2), 
  5465 ;;		 -> f_open@dir(2), 
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;  clust           4   19[BANK1 ] unsigned long 
  5468 ;;  dptr            2   23[BANK1 ] PTR unsigned char 
  5469 ;;		 -> fs.win(512), fs(552), NULL(0), 
  5470 ;;  fs              2   16[BANK1 ] PTR struct _FATFS
  5471 ;;		 -> fs(552), NULL(0), 
  5472 ;;  ds              1   18[BANK1 ] unsigned char 
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  1    wreg      enum E155
  5475 ;; Registers used:
  5476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5482 ;;      Params:         0       8       0       0       0       0       0       0       0
  5483 ;;      Locals:         0       0      13       0       0       0       0       0       0
  5484 ;;      Temps:          0       0      12       0       0       0       0       0       0
  5485 ;;      Totals:         0       8      25       0       0       0       0       0       0
  5486 ;;Total ram usage:       33 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:   13
  5489 ;; This function calls:
  5490 ;;		_clust2sect
  5491 ;;		_make_dirfile
  5492 ;;		_memcmp
  5493 ;;		_move_window
  5494 ;;		_next_dir_entry
  5495 ;; This function is called by:
  5496 ;;		_f_open
  5497 ;;		_f_opendir
  5498 ;;		_f_stat
  5499 ;;		_f_unlink
  5500 ;;		_f_mkdir
  5501 ;;		_f_chmod
  5502 ;;		_f_utime
  5503 ;;		_f_rename
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           	psect	text16
  5508  0024D0                     __ptext16:
  5509                           	opt stack 0
  5510  0024D0                     _trace_path:
  5511                           	opt stack 14
  5512                           
  5513                           ;tff.c: 508: CLUST clust;
  5514                           ;tff.c: 509: char ds;
  5515                           ;tff.c: 510: BYTE *dptr = (0);
  5516                           
  5517                           ;incstack = 0
  5518  0024D0  0E00               	movlw	0
  5519  0024D2  0101               	movlb	1	; () banked
  5520  0024D4  6F90               	movwf	trace_path@dptr& (0+255),b
  5521  0024D6  0E00               	movlw	0
  5522  0024D8  0101               	movlb	1	; () banked
  5523  0024DA  6F91               	movwf	(trace_path@dptr+1)& (0+255),b
  5524                           
  5525                           ;tff.c: 511: FATFS *fs = FatFs;
  5526  0024DC  C035  F189         	movff	_FatFs,trace_path@fs
  5527  0024E0  C036  F18A         	movff	_FatFs+1,trace_path@fs+1
  5528                           
  5529                           ; BSR set to: 1
  5530                           ;tff.c: 514: dj->fs = fs;
  5531  0024E4  0100               	movlb	0	; () banked
  5532  0024E6  EE20 F004          	lfsr	2,4
  5533  0024EA  51EE               	movf	trace_path@dj& (0+255),w,b
  5534  0024EC  26D9               	addwf	fsr2l,f,c
  5535  0024EE  51EF               	movf	(trace_path@dj+1)& (0+255),w,b
  5536  0024F0  22DA               	addwfc	fsr2h,f,c
  5537  0024F2  C189  FFDE         	movff	trace_path@fs,postinc2
  5538  0024F6  C18A  FFDD         	movff	trace_path@fs+1,postdec2
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;tff.c: 515: clust = fs->dirbase;
  5542  0024FA  0101               	movlb	1	; () banked
  5543  0024FC  EE20 F00C          	lfsr	2,12
  5544  002500  5189               	movf	trace_path@fs& (0+255),w,b
  5545  002502  26D9               	addwf	fsr2l,f,c
  5546  002504  518A               	movf	(trace_path@fs+1)& (0+255),w,b
  5547  002506  22DA               	addwfc	fsr2h,f,c
  5548  002508  CFDE F18C          	movff	postinc2,trace_path@clust
  5549  00250C  CFDE F18D          	movff	postinc2,trace_path@clust+1
  5550  002510  CFDE F18E          	movff	postinc2,trace_path@clust+2
  5551  002514  CFDE F18F          	movff	postinc2,trace_path@clust+3
  5552                           
  5553                           ; BSR set to: 1
  5554                           ;tff.c: 517: if (fs->fs_type == 3) {
  5555  002518  0101               	movlb	1	; () banked
  5556  00251A  EE20 F024          	lfsr	2,36
  5557  00251E  5189               	movf	trace_path@fs& (0+255),w,b
  5558  002520  26D9               	addwf	fsr2l,f,c
  5559  002522  518A               	movf	(trace_path@fs+1)& (0+255),w,b
  5560  002524  22DA               	addwfc	fsr2h,f,c
  5561  002526  0E03               	movlw	3
  5562  002528  18DE               	xorwf	postinc2,w,c
  5563  00252A  A4D8               	btfss	status,2,c
  5564  00252C  D03A               	goto	l12103
  5565                           
  5566                           ; BSR set to: 1
  5567                           ;tff.c: 518: dj->clust = dj->sclust = clust;
  5568  00252E  0100               	movlb	0	; () banked
  5569  002530  EE20 F006          	lfsr	2,6
  5570  002534  51EE               	movf	trace_path@dj& (0+255),w,b
  5571  002536  26D9               	addwf	fsr2l,f,c
  5572  002538  51EF               	movf	(trace_path@dj+1)& (0+255),w,b
  5573  00253A  22DA               	addwfc	fsr2h,f,c
  5574  00253C  C18C  FFDE         	movff	trace_path@clust,postinc2
  5575  002540  C18D  FFDE         	movff	trace_path@clust+1,postinc2
  5576  002544  C18E  FFDE         	movff	trace_path@clust+2,postinc2
  5577  002548  C18F  FFDD         	movff	trace_path@clust+3,postdec2
  5578  00254C  52DD               	movf	postdec2,f,c
  5579  00254E  52DD               	movf	postdec2,f,c
  5580  002550  0100               	movlb	0	; () banked
  5581  002552  EE10 F00A          	lfsr	1,10
  5582  002556  51EE               	movf	trace_path@dj& (0+255),w,b
  5583  002558  26E1               	addwf	fsr1l,f,c
  5584  00255A  51EF               	movf	(trace_path@dj+1)& (0+255),w,b
  5585  00255C  22E2               	addwfc	fsr1h,f,c
  5586  00255E  CFDE FFE6          	movff	postinc2,postinc1
  5587  002562  CFDE FFE6          	movff	postinc2,postinc1
  5588  002566  CFDE FFE6          	movff	postinc2,postinc1
  5589  00256A  CFDE FFE6          	movff	postinc2,postinc1
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;tff.c: 519: dj->sect = clust2sect(clust);
  5593  00256E  C18C  F022         	movff	trace_path@clust,clust2sect@clust
  5594  002572  C18D  F023         	movff	trace_path@clust+1,clust2sect@clust+1
  5595  002576  C18E  F024         	movff	trace_path@clust+2,clust2sect@clust+2
  5596  00257A  C18F  F025         	movff	trace_path@clust+3,clust2sect@clust+3
  5597  00257E  EC49  F024         	call	_clust2sect	;wreg free
  5598  002582  0100               	movlb	0	; () banked
  5599  002584  EE20 F00E          	lfsr	2,14
  5600  002588  51EE               	movf	trace_path@dj& (0+255),w,b
  5601  00258A  26D9               	addwf	fsr2l,f,c
  5602  00258C  51EF               	movf	(trace_path@dj+1)& (0+255),w,b
  5603  00258E  22DA               	addwfc	fsr2h,f,c
  5604  002590  C022  FFDE         	movff	?_clust2sect,postinc2
  5605  002594  C023  FFDE         	movff	?_clust2sect+1,postinc2
  5606  002598  C024  FFDE         	movff	?_clust2sect+2,postinc2
  5607  00259C  C025  FFDE         	movff	?_clust2sect+3,postinc2
  5608                           
  5609                           ;tff.c: 520: } else
  5610  0025A0  D02B               	goto	l12107
  5611  0025A2                     l12103:
  5612                           
  5613                           ;tff.c: 522: {
  5614                           ;tff.c: 523: dj->clust = dj->sclust = 0;
  5615  0025A2  0100               	movlb	0	; () banked
  5616  0025A4  EE20 F006          	lfsr	2,6
  5617  0025A8  51EE               	movf	trace_path@dj& (0+255),w,b
  5618  0025AA  26D9               	addwf	fsr2l,f,c
  5619  0025AC  51EF               	movf	(trace_path@dj+1)& (0+255),w,b
  5620  0025AE  22DA               	addwfc	fsr2h,f,c
  5621  0025B0  6ADE               	clrf	postinc2,c
  5622  0025B2  6ADE               	clrf	postinc2,c
  5623  0025B4  6ADE               	clrf	postinc2,c
  5624  0025B6  6ADD               	clrf	postdec2,c
  5625  0025B8  52DD               	movf	postdec2,f,c
  5626  0025BA  52DD               	movf	postdec2,f,c
  5627  0025BC  0100               	movlb	0	; () banked
  5628  0025BE  EE10 F00A          	lfsr	1,10
  5629  0025C2  51EE               	movf	trace_path@dj& (0+255),w,b
  5630  0025C4  26E1               	addwf	fsr1l,f,c
  5631  0025C6  51EF               	movf	(trace_path@dj+1)& (0+255),w,b
  5632  0025C8  22E2               	addwfc	fsr1h,f,c
  5633  0025CA  CFDE FFE6          	movff	postinc2,postinc1
  5634  0025CE  CFDE FFE6          	movff	postinc2,postinc1
  5635  0025D2  CFDE FFE6          	movff	postinc2,postinc1
  5636  0025D6  CFDE FFE6          	movff	postinc2,postinc1
  5637                           
  5638                           ; BSR set to: 0
  5639                           ;tff.c: 524: dj->sect = clust;
  5640  0025DA  0100               	movlb	0	; () banked
  5641  0025DC  EE20 F00E          	lfsr	2,14
  5642  0025E0  51EE               	movf	trace_path@dj& (0+255),w,b
  5643  0025E2  26D9               	addwf	fsr2l,f,c
  5644  0025E4  51EF               	movf	(trace_path@dj+1)& (0+255),w,b
  5645  0025E6  22DA               	addwfc	fsr2h,f,c
  5646  0025E8  C18C  FFDE         	movff	trace_path@clust,postinc2
  5647  0025EC  C18D  FFDE         	movff	trace_path@clust+1,postinc2
  5648  0025F0  C18E  FFDE         	movff	trace_path@clust+2,postinc2
  5649  0025F4  C18F  FFDE         	movff	trace_path@clust+3,postinc2
  5650  0025F8                     l12107:
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;tff.c: 525: }
  5654                           ;tff.c: 526: dj->index = 0;
  5655  0025F8  0100               	movlb	0	; () banked
  5656  0025FA  EE20 F002          	lfsr	2,2
  5657  0025FE  51EE               	movf	trace_path@dj& (0+255),w,b
  5658  002600  26D9               	addwf	fsr2l,f,c
  5659  002602  51EF               	movf	(trace_path@dj+1)& (0+255),w,b
  5660  002604  22DA               	addwfc	fsr2h,f,c
  5661  002606  0E00               	movlw	0
  5662  002608  6EDE               	movwf	postinc2,c
  5663  00260A  0E00               	movlw	0
  5664  00260C  6EDD               	movwf	postdec2,c
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;tff.c: 528: if (*path == '\0') {
  5668  00260E  C0F2  FFF6         	movff	trace_path@path,tblptrl
  5669  002612  C0F3  FFF7         	movff	trace_path@path+1,tblptrh
  5670  002616                     	if	0	;tblptru may be non-zero
  5671  002616                     	endif
  5672  002616                     	if	0	;tblptru may be non-zero
  5673  002616                     	endif
  5674  002616  0008               	tblrd		*
  5675  002618  50F5               	movf	tablat,w,c
  5676  00261A  0900               	iorlw	0
  5677  00261C  A4D8               	btfss	status,2,c
  5678  00261E  D00A               	goto	l12117
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;tff.c: 529: *dir = (0); return FR_OK;
  5682  002620  C0F4  FFD9         	movff	trace_path@dir,fsr2l
  5683  002624  C0F5  FFDA         	movff	trace_path@dir+1,fsr2h
  5684  002628  0E00               	movlw	0
  5685  00262A  6EDE               	movwf	postinc2,c
  5686  00262C  0E00               	movlw	0
  5687  00262E  6EDD               	movwf	postdec2,c
  5688                           
  5689                           ; BSR set to: 0
  5690  002630  0E00               	movlw	0
  5691                           
  5692                           ; BSR set to: 0
  5693  002632  0012               	return	
  5694  002634                     l12117:
  5695                           
  5696                           ; BSR set to: 0
  5697                           ;tff.c: 533: ds = make_dirfile(&path, fn);
  5698  002634  0EF2               	movlw	low trace_path@path
  5699  002636  6E1E               	movwf	make_dirfile@path,c
  5700  002638  0E00               	movlw	high trace_path@path
  5701  00263A  6E1F               	movwf	make_dirfile@path+1,c
  5702  00263C  C0F0  F020         	movff	trace_path@fn,make_dirfile@dirname
  5703  002640  C0F1  F021         	movff	trace_path@fn+1,make_dirfile@dirname+1
  5704  002644  ECE0  F021         	call	_make_dirfile	;wreg free
  5705  002648  0101               	movlb	1	; () banked
  5706  00264A  6F8B               	movwf	trace_path@ds& (0+255),b
  5707                           
  5708                           ; BSR set to: 1
  5709                           ;tff.c: 534: if (ds == 1) return FR_INVALID_NAME;
  5710  00264C  0101               	movlb	1	; () banked
  5711  00264E  058B               	decf	trace_path@ds& (0+255),w,b
  5712  002650  A4D8               	btfss	status,2,c
  5713  002652  D002               	goto	l12125
  5714                           
  5715                           ; BSR set to: 1
  5716  002654  0E04               	movlw	4
  5717                           
  5718                           ; BSR set to: 1
  5719  002656  0012               	return	
  5720  002658                     l12125:
  5721                           
  5722                           ;tff.c: 536: if (!move_window(dj->sect)) return FR_RW_ERROR;
  5723  002658  0100               	movlb	0	; () banked
  5724  00265A  EE20 F00E          	lfsr	2,14
  5725  00265E  51EE               	movf	trace_path@dj& (0+255),w,b
  5726  002660  26D9               	addwf	fsr2l,f,c
  5727  002662  51EF               	movf	(trace_path@dj+1)& (0+255),w,b
  5728  002664  22DA               	addwfc	fsr2h,f,c
  5729  002666  CFDE F08E          	movff	postinc2,move_window@sector
  5730  00266A  CFDE F08F          	movff	postinc2,move_window@sector+1
  5731  00266E  CFDE F090          	movff	postinc2,move_window@sector+2
  5732  002672  CFDE F091          	movff	postinc2,move_window@sector+3
  5733  002676  EC28  F01D         	call	_move_window	;wreg free
  5734  00267A  0900               	iorlw	0
  5735  00267C  A4D8               	btfss	status,2,c
  5736  00267E  D002               	goto	l12131
  5737  002680  0E08               	movlw	8
  5738  002682  0012               	return	
  5739  002684                     l12131:
  5740                           
  5741                           ;tff.c: 537: dptr = &fs->win[(dj->index & 15) * 32];
  5742  002684  0100               	movlb	0	; () banked
  5743  002686  EE20 F002          	lfsr	2,2
  5744  00268A  51EE               	movf	trace_path@dj& (0+255),w,b
  5745  00268C  26D9               	addwf	fsr2l,f,c
  5746  00268E  51EF               	movf	(trace_path@dj+1)& (0+255),w,b
  5747  002690  22DA               	addwfc	fsr2h,f,c
  5748  002692  CFDE F179          	movff	postinc2,??_trace_path
  5749  002696  CFDD F17A          	movff	postdec2,??_trace_path+1
  5750  00269A  0E0F               	movlw	15
  5751  00269C  0101               	movlb	1	; () banked
  5752  00269E  1779               	andwf	??_trace_path& (0+255),f,b
  5753  0026A0  0E00               	movlw	0
  5754  0026A2  177A               	andwf	(??_trace_path+1)& (0+255),f,b
  5755  0026A4  0E05               	movlw	5
  5756  0026A6                     u13445:
  5757  0026A6  90D8               	bcf	status,0,c
  5758  0026A8  0101               	movlb	1	; () banked
  5759  0026AA  3779               	rlcf	??_trace_path& (0+255),f,b
  5760  0026AC  377A               	rlcf	(??_trace_path+1)& (0+255),f,b
  5761  0026AE  2EE8               	decfsz	wreg,f,c
  5762  0026B0  D7FA               	goto	u13445
  5763  0026B2  0E28               	movlw	40
  5764  0026B4  0101               	movlb	1	; () banked
  5765  0026B6  2779               	addwf	??_trace_path& (0+255),f,b
  5766  0026B8  0E00               	movlw	0
  5767  0026BA  237A               	addwfc	(??_trace_path+1)& (0+255),f,b
  5768  0026BC  0101               	movlb	1	; () banked
  5769  0026BE  5179               	movf	??_trace_path& (0+255),w,b
  5770  0026C0  0101               	movlb	1	; () banked
  5771  0026C2  2589               	addwf	trace_path@fs& (0+255),w,b
  5772  0026C4  0101               	movlb	1	; () banked
  5773  0026C6  6F90               	movwf	trace_path@dptr& (0+255),b
  5774  0026C8  0101               	movlb	1	; () banked
  5775  0026CA  517A               	movf	(??_trace_path+1)& (0+255),w,b
  5776  0026CC  0101               	movlb	1	; () banked
  5777  0026CE  218A               	addwfc	(trace_path@fs+1)& (0+255),w,b
  5778  0026D0  0101               	movlb	1	; () banked
  5779  0026D2  6F91               	movwf	(trace_path@dptr+1)& (0+255),b
  5780                           
  5781                           ; BSR set to: 1
  5782                           ;tff.c: 538: if (dptr[0] == 0)
  5783  0026D4  C190  FFD9         	movff	trace_path@dptr,fsr2l
  5784  0026D8  C191  FFDA         	movff	trace_path@dptr+1,fsr2h
  5785  0026DC  50DF               	movf	indf2,w,c
  5786  0026DE  A4D8               	btfss	status,2,c
  5787  0026E0  D012               	goto	l12143
  5788                           
  5789                           ; BSR set to: 1
  5790                           ;tff.c: 539: return !ds ? FR_NO_FILE : FR_NO_PATH;
  5791  0026E2  0101               	movlb	1	; () banked
  5792  0026E4  518B               	movf	trace_path@ds& (0+255),w,b
  5793  0026E6  0101               	movlb	1	; () banked
  5794  0026E8  B4D8               	btfsc	status,2,c
  5795  0026EA  D005               	goto	l12139
  5796                           
  5797                           ; BSR set to: 1
  5798  0026EC  0E00               	movlw	0
  5799  0026EE  0101               	movlb	1	; () banked
  5800  0026F0  6F86               	movwf	(_trace_path$1121+1)& (0+255),b
  5801  0026F2  0E03               	movlw	3
  5802  0026F4  D004               	goto	L1
  5803  0026F6                     l12139:
  5804                           
  5805                           ; BSR set to: 1
  5806  0026F6  0E00               	movlw	0
  5807  0026F8  0101               	movlb	1	; () banked
  5808  0026FA  6F86               	movwf	(_trace_path$1121+1)& (0+255),b
  5809  0026FC  0E02               	movlw	2
  5810  0026FE                     L1:
  5811  0026FE  6F85               	movwf	_trace_path$1121& (0+255),b
  5812                           
  5813                           ; BSR set to: 1
  5814  002700  0101               	movlb	1	; () banked
  5815  002702  5185               	movf	_trace_path$1121& (0+255),w,b
  5816                           
  5817                           ; BSR set to: 1
  5818  002704  0012               	return	
  5819  002706                     l12143:
  5820                           
  5821                           ; BSR set to: 1
  5822                           ;tff.c: 540: if (dptr[0] != 0xE5
  5823                           ;tff.c: 541: && !(dptr[11] & 0x08)
  5824                           ;tff.c: 542: && !memcmp(&dptr[0], fn, 8+3) ) break;
  5825  002706  C190  FFD9         	movff	trace_path@dptr,fsr2l
  5826  00270A  C191  FFDA         	movff	trace_path@dptr+1,fsr2h
  5827  00270E  0EE5               	movlw	229
  5828  002710  18DE               	xorwf	postinc2,w,c
  5829  002712  B4D8               	btfsc	status,2,c
  5830  002714  D01C               	goto	l12151
  5831                           
  5832                           ; BSR set to: 1
  5833  002716  0101               	movlb	1	; () banked
  5834  002718  EE20 F00B          	lfsr	2,11
  5835  00271C  5190               	movf	trace_path@dptr& (0+255),w,b
  5836  00271E  26D9               	addwf	fsr2l,f,c
  5837  002720  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
  5838  002722  22DA               	addwfc	fsr2h,f,c
  5839  002724  0101               	movlb	1	; () banked
  5840  002726  B6DF               	btfsc	indf2,3,c
  5841  002728  D012               	goto	l12151
  5842                           
  5843                           ; BSR set to: 1
  5844  00272A  C190  F016         	movff	trace_path@dptr,memcmp@s1
  5845  00272E  C191  F017         	movff	trace_path@dptr+1,memcmp@s1+1
  5846  002732  C0F0  F018         	movff	trace_path@fn,memcmp@s2
  5847  002736  C0F1  F019         	movff	trace_path@fn+1,memcmp@s2+1
  5848  00273A  0E00               	movlw	0
  5849  00273C  6E1B               	movwf	memcmp@n+1,c
  5850  00273E  0E0B               	movlw	11
  5851  002740  6E1A               	movwf	memcmp@n,c
  5852  002742  ECA4  F025         	call	_memcmp	;wreg free
  5853  002746  5016               	movf	?_memcmp,w,c
  5854  002748  1017               	iorwf	?_memcmp+1,w,c
  5855  00274A  B4D8               	btfsc	status,2,c
  5856  00274C  D01B               	goto	l12161
  5857  00274E                     l12151:
  5858                           
  5859                           ;tff.c: 543: if (!next_dir_entry(dj))
  5860  00274E  C0EE  F0DF         	movff	trace_path@dj,next_dir_entry@dj
  5861  002752  C0EF  F0E0         	movff	trace_path@dj+1,next_dir_entry@dj+1
  5862  002756  EC3D  F01E         	call	_next_dir_entry	;wreg free
  5863  00275A  0900               	iorlw	0
  5864  00275C  A4D8               	btfss	status,2,c
  5865  00275E  D77C               	goto	l12125
  5866                           
  5867                           ;tff.c: 544: return !ds ? FR_NO_FILE : FR_NO_PATH;
  5868  002760  0101               	movlb	1	; () banked
  5869  002762  518B               	movf	trace_path@ds& (0+255),w,b
  5870  002764  0101               	movlb	1	; () banked
  5871  002766  B4D8               	btfsc	status,2,c
  5872  002768  D005               	goto	l12157
  5873                           
  5874                           ; BSR set to: 1
  5875  00276A  0E00               	movlw	0
  5876  00276C  0101               	movlb	1	; () banked
  5877  00276E  6F88               	movwf	(_trace_path$1123+1)& (0+255),b
  5878  002770  0E03               	movlw	3
  5879  002772  D004               	goto	L2
  5880  002774                     l12157:
  5881                           
  5882                           ; BSR set to: 1
  5883  002774  0E00               	movlw	0
  5884  002776  0101               	movlb	1	; () banked
  5885  002778  6F88               	movwf	(_trace_path$1123+1)& (0+255),b
  5886  00277A  0E02               	movlw	2
  5887  00277C                     L2:
  5888  00277C  6F87               	movwf	_trace_path$1123& (0+255),b
  5889                           
  5890                           ; BSR set to: 1
  5891  00277E  0101               	movlb	1	; () banked
  5892  002780  5187               	movf	_trace_path$1123& (0+255),w,b
  5893                           
  5894                           ; BSR set to: 1
  5895  002782  0012               	return	
  5896  002784                     l12161:
  5897                           
  5898                           ;tff.c: 546: if (!ds) { *dir = dptr; return FR_OK; }
  5899  002784  0101               	movlb	1	; () banked
  5900  002786  518B               	movf	trace_path@ds& (0+255),w,b
  5901  002788  0101               	movlb	1	; () banked
  5902  00278A  A4D8               	btfss	status,2,c
  5903  00278C  D00A               	goto	l12169
  5904                           
  5905                           ; BSR set to: 1
  5906  00278E  C0F4  FFD9         	movff	trace_path@dir,fsr2l
  5907  002792  C0F5  FFDA         	movff	trace_path@dir+1,fsr2h
  5908  002796  C190  FFDE         	movff	trace_path@dptr,postinc2
  5909  00279A  C191  FFDD         	movff	trace_path@dptr+1,postdec2
  5910                           
  5911                           ; BSR set to: 1
  5912  00279E  0E00               	movlw	0
  5913                           
  5914                           ; BSR set to: 1
  5915  0027A0  0012               	return	
  5916  0027A2                     l12169:
  5917                           
  5918                           ; BSR set to: 1
  5919                           ;tff.c: 547: if (!(dptr[11] & 0x10)) return FR_NO_PATH;
  5920  0027A2  0101               	movlb	1	; () banked
  5921  0027A4  EE20 F00B          	lfsr	2,11
  5922  0027A8  5190               	movf	trace_path@dptr& (0+255),w,b
  5923  0027AA  26D9               	addwf	fsr2l,f,c
  5924  0027AC  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
  5925  0027AE  22DA               	addwfc	fsr2h,f,c
  5926  0027B0  0101               	movlb	1	; () banked
  5927  0027B2  B8DF               	btfsc	indf2,4,c
  5928  0027B4  D002               	goto	l12175
  5929                           
  5930                           ; BSR set to: 1
  5931  0027B6  0E03               	movlw	3
  5932                           
  5933                           ; BSR set to: 1
  5934  0027B8  0012               	return	
  5935  0027BA                     l12175:
  5936                           
  5937                           ; BSR set to: 1
  5938                           ;tff.c: 548: clust =
  5939                           ;tff.c: 550: ((DWORD)(WORD)(((WORD)*(volatile BYTE*)((&dptr[20])+1)<<8)|(WORD)*(volatile
      +                           BYTE*)(&dptr[20])) << 16) |
  5940                           ;tff.c: 552: (WORD)(((WORD)*(volatile BYTE*)((&dptr[26])+1)<<8)|(WORD)*(volatile BYTE*)(
      +                          &dptr[26]));
  5941  0027BA  0E1B               	movlw	27
  5942  0027BC  0101               	movlb	1	; () banked
  5943  0027BE  2590               	addwf	trace_path@dptr& (0+255),w,b
  5944  0027C0  6ED9               	movwf	fsr2l,c
  5945  0027C2  0E00               	movlw	0
  5946  0027C4  0101               	movlb	1	; () banked
  5947  0027C6  2191               	addwfc	(trace_path@dptr+1)& (0+255),w,b
  5948  0027C8  6EDA               	movwf	fsr2h,c
  5949  0027CA  50DF               	movf	indf2,w,c
  5950  0027CC  0101               	movlb	1	; () banked
  5951  0027CE  6F79               	movwf	??_trace_path& (0+255),b
  5952  0027D0  0101               	movlb	1	; () banked
  5953  0027D2  5179               	movf	??_trace_path& (0+255),w,b
  5954  0027D4  0101               	movlb	1	; () banked
  5955  0027D6  6F7B               	movwf	(??_trace_path+2)& (0+255),b
  5956  0027D8  6B7A               	clrf	(??_trace_path+1)& (0+255),b
  5957  0027DA  0E1A               	movlw	26
  5958  0027DC  0101               	movlb	1	; () banked
  5959  0027DE  2590               	addwf	trace_path@dptr& (0+255),w,b
  5960  0027E0  6ED9               	movwf	fsr2l,c
  5961  0027E2  0E00               	movlw	0
  5962  0027E4  0101               	movlb	1	; () banked
  5963  0027E6  2191               	addwfc	(trace_path@dptr+1)& (0+255),w,b
  5964  0027E8  6EDA               	movwf	fsr2h,c
  5965  0027EA  50DF               	movf	indf2,w,c
  5966  0027EC  0101               	movlb	1	; () banked
  5967  0027EE  6F7C               	movwf	(??_trace_path+3)& (0+255),b
  5968  0027F0  0101               	movlb	1	; () banked
  5969  0027F2  517C               	movf	(??_trace_path+3)& (0+255),w,b
  5970  0027F4  0101               	movlb	1	; () banked
  5971  0027F6  137A               	iorwf	(??_trace_path+1)& (0+255),f,b
  5972  0027F8  0E00               	movlw	0
  5973  0027FA  137B               	iorwf	(??_trace_path+2)& (0+255),f,b
  5974  0027FC  0E15               	movlw	21
  5975  0027FE  0101               	movlb	1	; () banked
  5976  002800  2590               	addwf	trace_path@dptr& (0+255),w,b
  5977  002802  6ED9               	movwf	fsr2l,c
  5978  002804  0E00               	movlw	0
  5979  002806  0101               	movlb	1	; () banked
  5980  002808  2191               	addwfc	(trace_path@dptr+1)& (0+255),w,b
  5981  00280A  6EDA               	movwf	fsr2h,c
  5982  00280C  50DF               	movf	indf2,w,c
  5983  00280E  0101               	movlb	1	; () banked
  5984  002810  6F7D               	movwf	(??_trace_path+4)& (0+255),b
  5985  002812  0101               	movlb	1	; () banked
  5986  002814  517D               	movf	(??_trace_path+4)& (0+255),w,b
  5987  002816  0101               	movlb	1	; () banked
  5988  002818  6F7F               	movwf	(??_trace_path+6)& (0+255),b
  5989  00281A  6B7E               	clrf	(??_trace_path+5)& (0+255),b
  5990  00281C  0E14               	movlw	20
  5991  00281E  0101               	movlb	1	; () banked
  5992  002820  2590               	addwf	trace_path@dptr& (0+255),w,b
  5993  002822  6ED9               	movwf	fsr2l,c
  5994  002824  0E00               	movlw	0
  5995  002826  0101               	movlb	1	; () banked
  5996  002828  2191               	addwfc	(trace_path@dptr+1)& (0+255),w,b
  5997  00282A  6EDA               	movwf	fsr2h,c
  5998  00282C  50DF               	movf	indf2,w,c
  5999  00282E  0101               	movlb	1	; () banked
  6000  002830  6F80               	movwf	(??_trace_path+7)& (0+255),b
  6001  002832  0101               	movlb	1	; () banked
  6002  002834  5180               	movf	(??_trace_path+7)& (0+255),w,b
  6003  002836  0101               	movlb	1	; () banked
  6004  002838  117E               	iorwf	(??_trace_path+5)& (0+255),w,b
  6005  00283A  0101               	movlb	1	; () banked
  6006  00283C  6F81               	movwf	(??_trace_path+8)& (0+255),b
  6007  00283E  0101               	movlb	1	; () banked
  6008  002840  517F               	movf	(??_trace_path+6)& (0+255),w,b
  6009  002842  0101               	movlb	1	; () banked
  6010  002844  6F82               	movwf	(??_trace_path+9)& (0+255),b
  6011  002846  0101               	movlb	1	; () banked
  6012  002848  6B83               	clrf	(??_trace_path+10)& (0+255),b
  6013  00284A  0101               	movlb	1	; () banked
  6014  00284C  6B84               	clrf	(??_trace_path+11)& (0+255),b
  6015  00284E  C182  F184         	movff	??_trace_path+9,??_trace_path+11
  6016  002852  C181  F183         	movff	??_trace_path+8,??_trace_path+10
  6017  002856  0101               	movlb	1	; () banked
  6018  002858  6B82               	clrf	(??_trace_path+9)& (0+255),b
  6019  00285A  6B81               	clrf	(??_trace_path+8)& (0+255),b
  6020  00285C  0101               	movlb	1	; () banked
  6021  00285E  517A               	movf	(??_trace_path+1)& (0+255),w,b
  6022  002860  0101               	movlb	1	; () banked
  6023  002862  1181               	iorwf	(??_trace_path+8)& (0+255),w,b
  6024  002864  0101               	movlb	1	; () banked
  6025  002866  6F8C               	movwf	trace_path@clust& (0+255),b
  6026  002868  0101               	movlb	1	; () banked
  6027  00286A  517B               	movf	(??_trace_path+2)& (0+255),w,b
  6028  00286C  0101               	movlb	1	; () banked
  6029  00286E  1182               	iorwf	(??_trace_path+9)& (0+255),w,b
  6030  002870  0101               	movlb	1	; () banked
  6031  002872  6F8D               	movwf	(trace_path@clust+1)& (0+255),b
  6032  002874  0E00               	movlw	0
  6033  002876  0101               	movlb	1	; () banked
  6034  002878  1183               	iorwf	(??_trace_path+10)& (0+255),w,b
  6035  00287A  0101               	movlb	1	; () banked
  6036  00287C  6F8E               	movwf	(trace_path@clust+2)& (0+255),b
  6037  00287E  0E00               	movlw	0
  6038  002880  0101               	movlb	1	; () banked
  6039  002882  1184               	iorwf	(??_trace_path+11)& (0+255),w,b
  6040  002884  0101               	movlb	1	; () banked
  6041  002886  6F8F               	movwf	(trace_path@clust+3)& (0+255),b
  6042                           
  6043                           ; BSR set to: 1
  6044                           ;tff.c: 553: dj->clust = dj->sclust = clust;
  6045  002888  0100               	movlb	0	; () banked
  6046  00288A  EE20 F006          	lfsr	2,6
  6047  00288E  51EE               	movf	trace_path@dj& (0+255),w,b
  6048  002890  26D9               	addwf	fsr2l,f,c
  6049  002892  51EF               	movf	(trace_path@dj+1)& (0+255),w,b
  6050  002894  22DA               	addwfc	fsr2h,f,c
  6051  002896  C18C  FFDE         	movff	trace_path@clust,postinc2
  6052  00289A  C18D  FFDE         	movff	trace_path@clust+1,postinc2
  6053  00289E  C18E  FFDE         	movff	trace_path@clust+2,postinc2
  6054  0028A2  C18F  FFDD         	movff	trace_path@clust+3,postdec2
  6055  0028A6  52DD               	movf	postdec2,f,c
  6056  0028A8  52DD               	movf	postdec2,f,c
  6057  0028AA  0100               	movlb	0	; () banked
  6058  0028AC  EE10 F00A          	lfsr	1,10
  6059  0028B0  51EE               	movf	trace_path@dj& (0+255),w,b
  6060  0028B2  26E1               	addwf	fsr1l,f,c
  6061  0028B4  51EF               	movf	(trace_path@dj+1)& (0+255),w,b
  6062  0028B6  22E2               	addwfc	fsr1h,f,c
  6063  0028B8  CFDE FFE6          	movff	postinc2,postinc1
  6064  0028BC  CFDE FFE6          	movff	postinc2,postinc1
  6065  0028C0  CFDE FFE6          	movff	postinc2,postinc1
  6066  0028C4  CFDE FFE6          	movff	postinc2,postinc1
  6067                           
  6068                           ; BSR set to: 0
  6069                           ;tff.c: 554: dj->sect = clust2sect(clust);
  6070  0028C8  C18C  F022         	movff	trace_path@clust,clust2sect@clust
  6071  0028CC  C18D  F023         	movff	trace_path@clust+1,clust2sect@clust+1
  6072  0028D0  C18E  F024         	movff	trace_path@clust+2,clust2sect@clust+2
  6073  0028D4  C18F  F025         	movff	trace_path@clust+3,clust2sect@clust+3
  6074  0028D8  EC49  F024         	call	_clust2sect	;wreg free
  6075  0028DC  0100               	movlb	0	; () banked
  6076  0028DE  EE20 F00E          	lfsr	2,14
  6077  0028E2  51EE               	movf	trace_path@dj& (0+255),w,b
  6078  0028E4  26D9               	addwf	fsr2l,f,c
  6079  0028E6  51EF               	movf	(trace_path@dj+1)& (0+255),w,b
  6080  0028E8  22DA               	addwfc	fsr2h,f,c
  6081  0028EA  C022  FFDE         	movff	?_clust2sect,postinc2
  6082  0028EE  C023  FFDE         	movff	?_clust2sect+1,postinc2
  6083  0028F2  C024  FFDE         	movff	?_clust2sect+2,postinc2
  6084  0028F6  C025  FFDE         	movff	?_clust2sect+3,postinc2
  6085                           
  6086                           ; BSR set to: 0
  6087                           ;tff.c: 555: dj->index = 2;
  6088  0028FA  0100               	movlb	0	; () banked
  6089  0028FC  EE20 F002          	lfsr	2,2
  6090  002900  51EE               	movf	trace_path@dj& (0+255),w,b
  6091  002902  26D9               	addwf	fsr2l,f,c
  6092  002904  51EF               	movf	(trace_path@dj+1)& (0+255),w,b
  6093  002906  22DA               	addwfc	fsr2h,f,c
  6094  002908  0E02               	movlw	2
  6095  00290A  6EDE               	movwf	postinc2,c
  6096  00290C  0E00               	movlw	0
  6097  00290E  6EDD               	movwf	postdec2,c
  6098                           
  6099                           ;tff.c: 556: }
  6100  002910  D691               	goto	l12117
  6101  002912                     __end_of_trace_path:
  6102                           	opt stack 0
  6103                           tosu	equ	0xFFF
  6104                           tosh	equ	0xFFE
  6105                           tosl	equ	0xFFD
  6106                           pclath	equ	0xFFA
  6107                           tblptru	equ	0xFF8
  6108                           tblptrh	equ	0xFF7
  6109                           tblptrl	equ	0xFF6
  6110                           tablat	equ	0xFF5
  6111                           prodh	equ	0xFF4
  6112                           prodl	equ	0xFF3
  6113                           intcon	equ	0xFF2
  6114                           intcon2	equ	0xFF1
  6115                           intcon3	equ	0xFF0
  6116                           postinc0	equ	0xFEE
  6117                           wreg	equ	0xFE8
  6118                           postinc1	equ	0xFE6
  6119                           postdec1	equ	0xFE5
  6120                           fsr1h	equ	0xFE2
  6121                           fsr1l	equ	0xFE1
  6122                           indf2	equ	0xFDF
  6123                           postinc2	equ	0xFDE
  6124                           postdec2	equ	0xFDD
  6125                           fsr2h	equ	0xFDA
  6126                           fsr2l	equ	0xFD9
  6127                           status	equ	0xFD8
  6128                           
  6129 ;; *************** function _make_dirfile *****************
  6130 ;; Defined at:
  6131 ;;		line 438 in file "bibliotecas/tff.c"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;  path            2   29[COMRAM] PTR PTR const unsigned c
  6134 ;;		 -> trace_path@path(2), 
  6135 ;;  dirname         2   31[COMRAM] PTR unsigned char 
  6136 ;;		 -> f_rename@fn(12), f_utime@fn(12), f_chmod@fn(12), f_mkdir@fn(12), 
  6137 ;;		 -> f_unlink@fn(12), f_stat@fn(12), f_opendir@fn(12), f_open@fn(12), 
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;  c               1   41[COMRAM] unsigned char 
  6140 ;;  n               1   40[COMRAM] unsigned char 
  6141 ;;  a               1   39[COMRAM] unsigned char 
  6142 ;;  t               1   38[COMRAM] unsigned char 
  6143 ;;  b               1   37[COMRAM] unsigned char 
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  1    wreg      unsigned char 
  6146 ;; Registers used:
  6147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6153 ;;      Params:         4       0       0       0       0       0       0       0       0
  6154 ;;      Locals:         7       0       0       0       0       0       0       0       0
  6155 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6156 ;;      Totals:        13       0       0       0       0       0       0       0       0
  6157 ;;Total ram usage:       13 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; Hardware stack levels required when called:    3
  6160 ;; This function calls:
  6161 ;;		_memset
  6162 ;; This function is called by:
  6163 ;;		_trace_path
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           	psect	text17
  6168  0043C0                     __ptext17:
  6169                           	opt stack 0
  6170  0043C0                     _make_dirfile:
  6171                           	opt stack 23
  6172                           
  6173                           ;tff.c: 443: BYTE n, t, c, a, b;
  6174                           ;tff.c: 446: memset(dirname, ' ', 8+3);
  6175                           
  6176                           ;incstack = 0
  6177  0043C0  C020  F016         	movff	make_dirfile@dirname,memset@p1
  6178  0043C4  C021  F017         	movff	make_dirfile@dirname+1,memset@p1+1
  6179  0043C8  0E00               	movlw	0
  6180  0043CA  6E19               	movwf	memset@c+1,c
  6181  0043CC  0E20               	movlw	32
  6182  0043CE  6E18               	movwf	memset@c,c
  6183  0043D0  0E00               	movlw	0
  6184  0043D2  6E1B               	movwf	memset@n+1,c
  6185  0043D4  0E0B               	movlw	11
  6186  0043D6  6E1A               	movwf	memset@n,c
  6187  0043D8  EC02  F02B         	call	_memset	;wreg free
  6188                           
  6189                           ;tff.c: 447: a = 0; b = 0x18;
  6190  0043DC  0E00               	movlw	0
  6191  0043DE  6E28               	movwf	make_dirfile@a,c
  6192  0043E0  0E18               	movlw	24
  6193  0043E2  6E26               	movwf	make_dirfile@b,c
  6194                           
  6195                           ;tff.c: 448: n = 0; t = 8;
  6196  0043E4  0E00               	movlw	0
  6197  0043E6  6E29               	movwf	make_dirfile@n,c
  6198  0043E8  0E08               	movlw	8
  6199  0043EA  D043               	goto	L3
  6200  0043EC                     l11795:
  6201                           
  6202                           ;tff.c: 450: c = *(*path)++;
  6203  0043EC  C01E  FFD9         	movff	make_dirfile@path,fsr2l
  6204  0043F0  C01F  FFDA         	movff	make_dirfile@path+1,fsr2h
  6205  0043F4  CFDF F022          	movff	indf2,??_make_dirfile
  6206  0043F8  0E01               	movlw	1
  6207  0043FA  26DE               	addwf	postinc2,f,c
  6208  0043FC  CFDF F023          	movff	indf2,??_make_dirfile+1
  6209  004400  0E00               	movlw	0
  6210  004402  22DD               	addwfc	postdec2,f,c
  6211  004404  C022  FFF6         	movff	??_make_dirfile,tblptrl
  6212  004408  C023  FFF7         	movff	??_make_dirfile+1,tblptrh
  6213  00440C                     	if	0	;tblptru may be non-zero
  6214  00440C                     	endif
  6215  00440C                     	if	0	;tblptru may be non-zero
  6216  00440C                     	endif
  6217  00440C  0008               	tblrd		*
  6218  00440E  CFF5 F02A          	movff	tablat,make_dirfile@c
  6219                           
  6220                           ;tff.c: 451: if (c == '\0' || c == '/') {
  6221  004412  502A               	movf	make_dirfile@c,w,c
  6222  004414  B4D8               	btfsc	status,2,c
  6223  004416  D004               	goto	l11801
  6224  004418  0E2F               	movlw	47
  6225  00441A  182A               	xorwf	make_dirfile@c,w,c
  6226  00441C  A4D8               	btfss	status,2,c
  6227  00441E  D013               	goto	l11815
  6228  004420                     l11801:
  6229                           
  6230                           ;tff.c: 452: if (n == 0) break;
  6231  004420  5029               	movf	make_dirfile@n,w,c
  6232  004422  B4D8               	btfsc	status,2,c
  6233  004424  D08E               	goto	l11903
  6234                           
  6235                           ;tff.c: 453: dirname[11] = 1 ? (a & b) : 0;
  6236  004426  5028               	movf	make_dirfile@a,w,c
  6237  004428  1426               	andwf	make_dirfile@b,w,c
  6238  00442A  6E22               	movwf	??_make_dirfile& (0+255),c
  6239  00442C  5022               	movf	??_make_dirfile,w,c
  6240  00442E  6E24               	movwf	_make_dirfile$1074,c
  6241  004430  6A25               	clrf	_make_dirfile$1074+1,c
  6242  004432  EE20 F00B          	lfsr	2,11
  6243  004436  5020               	movf	make_dirfile@dirname,w,c
  6244  004438  26D9               	addwf	fsr2l,f,c
  6245  00443A  5021               	movf	make_dirfile@dirname+1,w,c
  6246  00443C  22DA               	addwfc	fsr2h,f,c
  6247  00443E  C024  FFDF         	movff	_make_dirfile$1074,indf2
  6248                           
  6249                           ;tff.c: 454: return c;
  6250  004442  502A               	movf	make_dirfile@c,w,c
  6251  004444  0012               	return	
  6252  004446                     l11815:
  6253                           
  6254                           ;tff.c: 455: }
  6255                           ;tff.c: 456: if (c <= ' ' || c == 0x7F) break;
  6256  004446  0E20               	movlw	32
  6257  004448  642A               	cpfsgt	make_dirfile@c,c
  6258  00444A  D07B               	goto	l11903
  6259  00444C  0E7F               	movlw	127
  6260  00444E  182A               	xorwf	make_dirfile@c,w,c
  6261  004450  B4D8               	btfsc	status,2,c
  6262  004452  D077               	goto	l11903
  6263                           
  6264                           ;tff.c: 457: if (c == '.') {
  6265  004454  0E2E               	movlw	46
  6266  004456  182A               	xorwf	make_dirfile@c,w,c
  6267  004458  A4D8               	btfss	status,2,c
  6268  00445A  D00D               	goto	l11829
  6269                           
  6270                           ;tff.c: 458: if (!(a & 1) && n >= 1 && n <= 8) {
  6271  00445C  B028               	btfsc	make_dirfile@a,0,c
  6272  00445E  D071               	goto	l11903
  6273  004460  5029               	movf	make_dirfile@n,w,c
  6274  004462  B4D8               	btfsc	status,2,c
  6275  004464  D06E               	goto	l11903
  6276  004466  0E09               	movlw	9
  6277  004468  6029               	cpfslt	make_dirfile@n,c
  6278  00446A  D06B               	goto	l11903
  6279                           
  6280                           ;tff.c: 459: n = 8; t = 11; continue;
  6281  00446C  0E08               	movlw	8
  6282  00446E  6E29               	movwf	make_dirfile@n,c
  6283  004470  0E0B               	movlw	11
  6284  004472                     L3:
  6285  004472  6E27               	movwf	make_dirfile@t,c
  6286  004474  D7BB               	goto	l11795
  6287  004476                     l11829:
  6288  004476  0E80               	movlw	128
  6289  004478  642A               	cpfsgt	make_dirfile@c,c
  6290  00447A  D003               	goto	l11833
  6291  00447C  0E9F               	movlw	159
  6292  00447E  642A               	cpfsgt	make_dirfile@c,c
  6293  004480  D006               	goto	l11837
  6294  004482                     l11833:
  6295  004482  0EDF               	movlw	223
  6296  004484  642A               	cpfsgt	make_dirfile@c,c
  6297  004486  D00F               	goto	l11845
  6298  004488  0EFD               	movlw	253
  6299  00448A  602A               	cpfslt	make_dirfile@c,c
  6300  00448C  D00C               	goto	l11845
  6301  00448E                     l11837:
  6302                           
  6303                           ;tff.c: 466: if (n == 0 && c == 0xE5)
  6304  00448E  5029               	movf	make_dirfile@n,w,c
  6305  004490  A4D8               	btfss	status,2,c
  6306  004492  D006               	goto	l11843
  6307  004494  0EE5               	movlw	229
  6308  004496  182A               	xorwf	make_dirfile@c,w,c
  6309  004498  A4D8               	btfss	status,2,c
  6310  00449A  D002               	goto	l11843
  6311                           
  6312                           ;tff.c: 467: c = 0x05;
  6313  00449C  0E05               	movlw	5
  6314  00449E  6E2A               	movwf	make_dirfile@c,c
  6315  0044A0                     l11843:
  6316                           
  6317                           ;tff.c: 468: a ^= 1; goto md_l2;
  6318  0044A0  0E01               	movlw	1
  6319  0044A2  1A28               	xorwf	make_dirfile@a,f,c
  6320  0044A4  D03E               	goto	l11895
  6321  0044A6                     l11845:
  6322                           
  6323                           ;tff.c: 469: }
  6324                           ;tff.c: 470: if (c == '"') break;
  6325  0044A6  0E22               	movlw	34
  6326  0044A8  182A               	xorwf	make_dirfile@c,w,c
  6327  0044AA  B4D8               	btfsc	status,2,c
  6328  0044AC  D04A               	goto	l11903
  6329                           
  6330                           ;tff.c: 471: if (c <= ')') goto md_l1;
  6331  0044AE  0E2A               	movlw	42
  6332  0044B0  602A               	cpfslt	make_dirfile@c,c
  6333  0044B2  D001               	goto	l11853
  6334  0044B4  D035               	goto	l684
  6335  0044B6                     l11853:
  6336                           
  6337                           ;tff.c: 472: if (c <= ',') break;
  6338  0044B6  0E2D               	movlw	45
  6339  0044B8  602A               	cpfslt	make_dirfile@c,c
  6340  0044BA  D001               	goto	l11857
  6341  0044BC  D042               	goto	l11903
  6342  0044BE                     l11857:
  6343                           
  6344                           ;tff.c: 473: if (c <= '9') goto md_l1;
  6345  0044BE  0E3A               	movlw	58
  6346  0044C0  602A               	cpfslt	make_dirfile@c,c
  6347  0044C2  D001               	goto	l11861
  6348  0044C4  D02D               	goto	l684
  6349  0044C6                     l11861:
  6350                           
  6351                           ;tff.c: 474: if (c <= '?') break;
  6352  0044C6  0E40               	movlw	64
  6353  0044C8  602A               	cpfslt	make_dirfile@c,c
  6354  0044CA  D001               	goto	l687
  6355  0044CC  D03A               	goto	l11903
  6356  0044CE                     l687:
  6357                           
  6358                           ;tff.c: 475: if (!(a & 1)) {
  6359  0044CE  B028               	btfsc	make_dirfile@a,0,c
  6360  0044D0  D027               	goto	l684
  6361                           
  6362                           ;tff.c: 476: if (c == '|') break;
  6363  0044D2  0E7C               	movlw	124
  6364  0044D4  182A               	xorwf	make_dirfile@c,w,c
  6365  0044D6  B4D8               	btfsc	status,2,c
  6366  0044D8  D034               	goto	l11903
  6367                           
  6368                           ;tff.c: 477: if (c >= '[' && c <= ']') break;
  6369  0044DA  0E5A               	movlw	90
  6370  0044DC  642A               	cpfsgt	make_dirfile@c,c
  6371  0044DE  D004               	goto	l11875
  6372  0044E0  0E5E               	movlw	94
  6373  0044E2  602A               	cpfslt	make_dirfile@c,c
  6374  0044E4  D001               	goto	l11875
  6375  0044E6  D02D               	goto	l11903
  6376  0044E8                     l11875:
  6377  0044E8  0E40               	movlw	64
  6378  0044EA  642A               	cpfsgt	make_dirfile@c,c
  6379  0044EC  D00A               	goto	l11885
  6380  0044EE  0E5B               	movlw	91
  6381  0044F0  602A               	cpfslt	make_dirfile@c,c
  6382  0044F2  D007               	goto	l11885
  6383                           
  6384                           ;tff.c: 479: (t == 8) ? (b &= 0xF7) : (b &= 0xEF);
  6385  0044F4  0E08               	movlw	8
  6386  0044F6  1827               	xorwf	make_dirfile@t,w,c
  6387  0044F8  A4D8               	btfss	status,2,c
  6388  0044FA  D002               	goto	l11883
  6389  0044FC  9626               	bcf	make_dirfile@b,3,c
  6390  0044FE  D001               	goto	l11885
  6391  004500                     l11883:
  6392  004500  9826               	bcf	make_dirfile@b,4,c
  6393  004502                     l11885:
  6394                           
  6395                           ;tff.c: 480: if (c >= 'a' && c <= 'z') {
  6396  004502  0E60               	movlw	96
  6397  004504  642A               	cpfsgt	make_dirfile@c,c
  6398  004506  D00C               	goto	l684
  6399  004508  0E7B               	movlw	123
  6400  00450A  602A               	cpfslt	make_dirfile@c,c
  6401  00450C  D009               	goto	l684
  6402                           
  6403                           ;tff.c: 482: if (1) (t == 8) ? (a |= 0x08) : (a |= 0x10);
  6404  00450E  0E20               	movlw	32
  6405  004510  5E2A               	subwf	make_dirfile@c,f,c
  6406  004512  0E08               	movlw	8
  6407  004514  1827               	xorwf	make_dirfile@t,w,c
  6408  004516  A4D8               	btfss	status,2,c
  6409  004518  D002               	goto	l11893
  6410  00451A  8628               	bsf	make_dirfile@a,3,c
  6411  00451C  D001               	goto	l684
  6412  00451E                     l11893:
  6413  00451E  8828               	bsf	make_dirfile@a,4,c
  6414  004520                     l684:
  6415                           
  6416                           ;tff.c: 486: a &= 0xFE;
  6417  004520  9028               	bcf	make_dirfile@a,0,c
  6418  004522                     l11895:
  6419                           
  6420                           ;tff.c: 488: if (n >= t) break;
  6421  004522  5027               	movf	make_dirfile@t,w,c
  6422  004524  5C29               	subwf	make_dirfile@n,w,c
  6423  004526  B0D8               	btfsc	status,0,c
  6424  004528  D00C               	goto	l11903
  6425                           
  6426                           ;tff.c: 489: dirname[n++] = c;
  6427  00452A  5029               	movf	make_dirfile@n,w,c
  6428  00452C  0D01               	mullw	1
  6429  00452E  50F3               	movf	prodl,w,c
  6430  004530  2420               	addwf	make_dirfile@dirname,w,c
  6431  004532  6ED9               	movwf	fsr2l,c
  6432  004534  50F4               	movf	prodh,w,c
  6433  004536  2021               	addwfc	make_dirfile@dirname+1,w,c
  6434  004538  6EDA               	movwf	fsr2h,c
  6435  00453A  C02A  FFDF         	movff	make_dirfile@c,indf2
  6436  00453E  2A29               	incf	make_dirfile@n,f,c
  6437                           
  6438                           ;tff.c: 490: }
  6439  004540  D755               	goto	l11795
  6440  004542                     l11903:
  6441                           
  6442                           ;tff.c: 491: return 1;
  6443  004542  0E01               	movlw	1
  6444  004544  0012               	return	
  6445  004546                     __end_of_make_dirfile:
  6446                           	opt stack 0
  6447                           tosu	equ	0xFFF
  6448                           tosh	equ	0xFFE
  6449                           tosl	equ	0xFFD
  6450                           pclath	equ	0xFFA
  6451                           tblptru	equ	0xFF8
  6452                           tblptrh	equ	0xFF7
  6453                           tblptrl	equ	0xFF6
  6454                           tablat	equ	0xFF5
  6455                           prodh	equ	0xFF4
  6456                           prodl	equ	0xFF3
  6457                           intcon	equ	0xFF2
  6458                           intcon2	equ	0xFF1
  6459                           intcon3	equ	0xFF0
  6460                           postinc0	equ	0xFEE
  6461                           wreg	equ	0xFE8
  6462                           postinc1	equ	0xFE6
  6463                           postdec1	equ	0xFE5
  6464                           fsr1h	equ	0xFE2
  6465                           fsr1l	equ	0xFE1
  6466                           indf2	equ	0xFDF
  6467                           postinc2	equ	0xFDE
  6468                           postdec2	equ	0xFDD
  6469                           fsr2h	equ	0xFDA
  6470                           fsr2l	equ	0xFD9
  6471                           status	equ	0xFD8
  6472                           
  6473 ;; *************** function _reserve_direntry *****************
  6474 ;; Defined at:
  6475 ;;		line 567 in file "bibliotecas/tff.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;  dj              2  153[BANK0 ] PTR struct _DIR
  6478 ;;		 -> f_rename@dj(18), f_mkdir@dj(18), f_open@dj(18), 
  6479 ;;  dir             2  155[BANK0 ] PTR PTR unsigned char 
  6480 ;;		 -> f_rename@dir_new(2), f_mkdir@dir(2), f_open@dir(2), 
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;  clust           4    8[BANK1 ] unsigned long 
  6483 ;;  sector          4    0[BANK1 ] unsigned long 
  6484 ;;  fs              2   12[BANK1 ] PTR struct _FATFS
  6485 ;;		 -> fs(552), NULL(0), 
  6486 ;;  dptr            2    5[BANK1 ] PTR unsigned char 
  6487 ;;		 -> fs.win(512), fs(552), NULL(0), 
  6488 ;;  c               1    7[BANK1 ] unsigned char 
  6489 ;;  n               1    4[BANK1 ] unsigned char 
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  1    wreg      enum E155
  6492 ;; Registers used:
  6493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6499 ;;      Params:         0       4       0       0       0       0       0       0       0
  6500 ;;      Locals:         0       0      14       0       0       0       0       0       0
  6501 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6502 ;;      Totals:         0       6      14       0       0       0       0       0       0
  6503 ;;Total ram usage:       20 bytes
  6504 ;; Hardware stack levels used:    1
  6505 ;; Hardware stack levels required when called:   13
  6506 ;; This function calls:
  6507 ;;		_clust2sect
  6508 ;;		_create_chain
  6509 ;;		_disk_write
  6510 ;;		_memset
  6511 ;;		_move_window
  6512 ;;		_next_dir_entry
  6513 ;; This function is called by:
  6514 ;;		_f_open
  6515 ;;		_f_mkdir
  6516 ;;		_f_rename
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text18
  6521  003418                     __ptext18:
  6522                           	opt stack 0
  6523  003418                     _reserve_direntry:
  6524                           	opt stack 14
  6525                           
  6526                           ;tff.c: 572: CLUST clust;
  6527                           ;tff.c: 573: DWORD sector;
  6528                           ;tff.c: 574: BYTE c, n, *dptr;
  6529                           ;tff.c: 575: FATFS *fs = dj->fs;
  6530                           
  6531                           ;incstack = 0
  6532  003418  0100               	movlb	0	; () banked
  6533  00341A  EE20 F004          	lfsr	2,4
  6534  00341E  51F9               	movf	reserve_direntry@dj& (0+255),w,b
  6535  003420  26D9               	addwf	fsr2l,f,c
  6536  003422  51FA               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6537  003424  22DA               	addwfc	fsr2h,f,c
  6538  003426  CFDE F185          	movff	postinc2,reserve_direntry@fs
  6539  00342A  CFDD F186          	movff	postdec2,reserve_direntry@fs+1
  6540                           
  6541                           ;tff.c: 579: clust = dj->sclust;
  6542  00342E  0100               	movlb	0	; () banked
  6543  003430  EE20 F006          	lfsr	2,6
  6544  003434  51F9               	movf	reserve_direntry@dj& (0+255),w,b
  6545  003436  26D9               	addwf	fsr2l,f,c
  6546  003438  51FA               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6547  00343A  22DA               	addwfc	fsr2h,f,c
  6548  00343C  CFDE F181          	movff	postinc2,reserve_direntry@clust
  6549  003440  CFDE F182          	movff	postinc2,reserve_direntry@clust+1
  6550  003444  CFDE F183          	movff	postinc2,reserve_direntry@clust+2
  6551  003448  CFDE F184          	movff	postinc2,reserve_direntry@clust+3
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;tff.c: 580: if (clust != 0) {
  6555  00344C  0101               	movlb	1	; () banked
  6556  00344E  5181               	movf	reserve_direntry@clust& (0+255),w,b
  6557  003450  0101               	movlb	1	; () banked
  6558  003452  1182               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
  6559  003454  0101               	movlb	1	; () banked
  6560  003456  1183               	iorwf	(reserve_direntry@clust+2)& (0+255),w,b
  6561  003458  0101               	movlb	1	; () banked
  6562  00345A  1184               	iorwf	(reserve_direntry@clust+3)& (0+255),w,b
  6563  00345C  B4D8               	btfsc	status,2,c
  6564  00345E  D029               	goto	l12191
  6565                           
  6566                           ; BSR set to: 1
  6567                           ;tff.c: 581: dj->clust = clust;
  6568  003460  0100               	movlb	0	; () banked
  6569  003462  EE20 F00A          	lfsr	2,10
  6570  003466  51F9               	movf	reserve_direntry@dj& (0+255),w,b
  6571  003468  26D9               	addwf	fsr2l,f,c
  6572  00346A  51FA               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6573  00346C  22DA               	addwfc	fsr2h,f,c
  6574  00346E  C181  FFDE         	movff	reserve_direntry@clust,postinc2
  6575  003472  C182  FFDE         	movff	reserve_direntry@clust+1,postinc2
  6576  003476  C183  FFDE         	movff	reserve_direntry@clust+2,postinc2
  6577  00347A  C184  FFDE         	movff	reserve_direntry@clust+3,postinc2
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;tff.c: 582: dj->sect = clust2sect(clust);
  6581  00347E  C181  F022         	movff	reserve_direntry@clust,clust2sect@clust
  6582  003482  C182  F023         	movff	reserve_direntry@clust+1,clust2sect@clust+1
  6583  003486  C183  F024         	movff	reserve_direntry@clust+2,clust2sect@clust+2
  6584  00348A  C184  F025         	movff	reserve_direntry@clust+3,clust2sect@clust+3
  6585  00348E  EC49  F024         	call	_clust2sect	;wreg free
  6586  003492  0100               	movlb	0	; () banked
  6587  003494  EE20 F00E          	lfsr	2,14
  6588  003498  51F9               	movf	reserve_direntry@dj& (0+255),w,b
  6589  00349A  26D9               	addwf	fsr2l,f,c
  6590  00349C  51FA               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6591  00349E  22DA               	addwfc	fsr2h,f,c
  6592  0034A0  C022  FFDE         	movff	?_clust2sect,postinc2
  6593  0034A4  C023  FFDE         	movff	?_clust2sect+1,postinc2
  6594  0034A8  C024  FFDE         	movff	?_clust2sect+2,postinc2
  6595  0034AC  C025  FFDE         	movff	?_clust2sect+3,postinc2
  6596                           
  6597                           ;tff.c: 583: } else {
  6598  0034B0  D016               	goto	l12193
  6599  0034B2                     l12191:
  6600                           
  6601                           ;tff.c: 584: dj->sect = fs->dirbase;
  6602  0034B2  0101               	movlb	1	; () banked
  6603  0034B4  EE20 F00C          	lfsr	2,12
  6604  0034B8  5185               	movf	reserve_direntry@fs& (0+255),w,b
  6605  0034BA  26D9               	addwf	fsr2l,f,c
  6606  0034BC  5186               	movf	(reserve_direntry@fs+1)& (0+255),w,b
  6607  0034BE  22DA               	addwfc	fsr2h,f,c
  6608  0034C0  0100               	movlb	0	; () banked
  6609  0034C2  EE10 F00E          	lfsr	1,14
  6610  0034C6  51F9               	movf	reserve_direntry@dj& (0+255),w,b
  6611  0034C8  26E1               	addwf	fsr1l,f,c
  6612  0034CA  51FA               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6613  0034CC  22E2               	addwfc	fsr1h,f,c
  6614  0034CE  CFDE FFE6          	movff	postinc2,postinc1
  6615  0034D2  CFDE FFE6          	movff	postinc2,postinc1
  6616  0034D6  CFDE FFE6          	movff	postinc2,postinc1
  6617  0034DA  CFDE FFE6          	movff	postinc2,postinc1
  6618  0034DE                     l12193:
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;tff.c: 585: }
  6622                           ;tff.c: 586: dj->index = 0;
  6623  0034DE  0100               	movlb	0	; () banked
  6624  0034E0  EE20 F002          	lfsr	2,2
  6625  0034E4  51F9               	movf	reserve_direntry@dj& (0+255),w,b
  6626  0034E6  26D9               	addwf	fsr2l,f,c
  6627  0034E8  51FA               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6628  0034EA  22DA               	addwfc	fsr2h,f,c
  6629  0034EC  0E00               	movlw	0
  6630  0034EE  6EDE               	movwf	postinc2,c
  6631  0034F0  0E00               	movlw	0
  6632  0034F2  6EDD               	movwf	postdec2,c
  6633  0034F4                     l12195:
  6634                           
  6635                           ;tff.c: 589: if (!move_window(dj->sect)) return FR_RW_ERROR;
  6636  0034F4  0100               	movlb	0	; () banked
  6637  0034F6  EE20 F00E          	lfsr	2,14
  6638  0034FA  51F9               	movf	reserve_direntry@dj& (0+255),w,b
  6639  0034FC  26D9               	addwf	fsr2l,f,c
  6640  0034FE  51FA               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6641  003500  22DA               	addwfc	fsr2h,f,c
  6642  003502  CFDE F08E          	movff	postinc2,move_window@sector
  6643  003506  CFDE F08F          	movff	postinc2,move_window@sector+1
  6644  00350A  CFDE F090          	movff	postinc2,move_window@sector+2
  6645  00350E  CFDE F091          	movff	postinc2,move_window@sector+3
  6646  003512  EC28  F01D         	call	_move_window	;wreg free
  6647  003516  0900               	iorlw	0
  6648  003518  A4D8               	btfss	status,2,c
  6649  00351A  D002               	goto	l12201
  6650  00351C  0E08               	movlw	8
  6651  00351E  0012               	return	
  6652  003520                     l12201:
  6653                           
  6654                           ;tff.c: 590: dptr = &fs->win[(dj->index & 15) * 32];
  6655  003520  0100               	movlb	0	; () banked
  6656  003522  EE20 F002          	lfsr	2,2
  6657  003526  51F9               	movf	reserve_direntry@dj& (0+255),w,b
  6658  003528  26D9               	addwf	fsr2l,f,c
  6659  00352A  51FA               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6660  00352C  22DA               	addwfc	fsr2h,f,c
  6661  00352E  CFDE F0FD          	movff	postinc2,??_reserve_direntry
  6662  003532  CFDD F0FE          	movff	postdec2,??_reserve_direntry+1
  6663  003536  0E0F               	movlw	15
  6664  003538  0100               	movlb	0	; () banked
  6665  00353A  17FD               	andwf	??_reserve_direntry& (0+255),f,b
  6666  00353C  0E00               	movlw	0
  6667  00353E  17FE               	andwf	(??_reserve_direntry+1)& (0+255),f,b
  6668  003540  0E05               	movlw	5
  6669  003542                     u13565:
  6670  003542  90D8               	bcf	status,0,c
  6671  003544  0100               	movlb	0	; () banked
  6672  003546  37FD               	rlcf	??_reserve_direntry& (0+255),f,b
  6673  003548  37FE               	rlcf	(??_reserve_direntry+1)& (0+255),f,b
  6674  00354A  2EE8               	decfsz	wreg,f,c
  6675  00354C  D7FA               	goto	u13565
  6676  00354E  0E28               	movlw	40
  6677  003550  0100               	movlb	0	; () banked
  6678  003552  27FD               	addwf	??_reserve_direntry& (0+255),f,b
  6679  003554  0E00               	movlw	0
  6680  003556  23FE               	addwfc	(??_reserve_direntry+1)& (0+255),f,b
  6681  003558  0100               	movlb	0	; () banked
  6682  00355A  51FD               	movf	??_reserve_direntry& (0+255),w,b
  6683  00355C  0101               	movlb	1	; () banked
  6684  00355E  2585               	addwf	reserve_direntry@fs& (0+255),w,b
  6685  003560  0101               	movlb	1	; () banked
  6686  003562  6F7E               	movwf	reserve_direntry@dptr& (0+255),b
  6687  003564  0100               	movlb	0	; () banked
  6688  003566  51FE               	movf	(??_reserve_direntry+1)& (0+255),w,b
  6689  003568  0101               	movlb	1	; () banked
  6690  00356A  2186               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
  6691  00356C  0101               	movlb	1	; () banked
  6692  00356E  6F7F               	movwf	(reserve_direntry@dptr+1)& (0+255),b
  6693                           
  6694                           ; BSR set to: 1
  6695                           ;tff.c: 591: c = dptr[0];
  6696  003570  C17E  FFD9         	movff	reserve_direntry@dptr,fsr2l
  6697  003574  C17F  FFDA         	movff	reserve_direntry@dptr+1,fsr2h
  6698  003578  50DF               	movf	indf2,w,c
  6699  00357A  0101               	movlb	1	; () banked
  6700  00357C  6F80               	movwf	reserve_direntry@c& (0+255),b
  6701                           
  6702                           ; BSR set to: 1
  6703                           ;tff.c: 592: if (c == 0 || c == 0xE5) {
  6704  00357E  0101               	movlb	1	; () banked
  6705  003580  5180               	movf	reserve_direntry@c& (0+255),w,b
  6706  003582  0101               	movlb	1	; () banked
  6707  003584  B4D8               	btfsc	status,2,c
  6708  003586  D005               	goto	l12209
  6709                           
  6710                           ; BSR set to: 1
  6711  003588  0EE5               	movlw	229
  6712  00358A  0101               	movlb	1	; () banked
  6713  00358C  1980               	xorwf	reserve_direntry@c& (0+255),w,b
  6714  00358E  A4D8               	btfss	status,2,c
  6715  003590  D00A               	goto	l12215
  6716  003592                     l12209:
  6717                           
  6718                           ; BSR set to: 1
  6719                           ;tff.c: 593: *dir = dptr; return FR_OK;
  6720  003592  C0FB  FFD9         	movff	reserve_direntry@dir,fsr2l
  6721  003596  C0FC  FFDA         	movff	reserve_direntry@dir+1,fsr2h
  6722  00359A  C17E  FFDE         	movff	reserve_direntry@dptr,postinc2
  6723  00359E  C17F  FFDD         	movff	reserve_direntry@dptr+1,postdec2
  6724                           
  6725                           ; BSR set to: 1
  6726  0035A2  0E00               	movlw	0
  6727                           
  6728                           ; BSR set to: 1
  6729  0035A4  0012               	return	
  6730  0035A6                     l12215:
  6731                           
  6732                           ; BSR set to: 1
  6733                           ;tff.c: 594: }
  6734                           ;tff.c: 595: } while (next_dir_entry(dj));
  6735  0035A6  C0F9  F0DF         	movff	reserve_direntry@dj,next_dir_entry@dj
  6736  0035AA  C0FA  F0E0         	movff	reserve_direntry@dj+1,next_dir_entry@dj+1
  6737  0035AE  EC3D  F01E         	call	_next_dir_entry	;wreg free
  6738  0035B2  0900               	iorlw	0
  6739  0035B4  A4D8               	btfss	status,2,c
  6740  0035B6  D79E               	goto	l12195
  6741                           
  6742                           ;tff.c: 599: if (clust == 0 || !(clust = create_chain(dj->clust))) return FR_DENIED;
  6743  0035B8  0101               	movlb	1	; () banked
  6744  0035BA  5181               	movf	reserve_direntry@clust& (0+255),w,b
  6745  0035BC  0101               	movlb	1	; () banked
  6746  0035BE  1182               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
  6747  0035C0  0101               	movlb	1	; () banked
  6748  0035C2  1183               	iorwf	(reserve_direntry@clust+2)& (0+255),w,b
  6749  0035C4  0101               	movlb	1	; () banked
  6750  0035C6  1184               	iorwf	(reserve_direntry@clust+3)& (0+255),w,b
  6751  0035C8  B4D8               	btfsc	status,2,c
  6752  0035CA  D023               	goto	l12221
  6753                           
  6754                           ; BSR set to: 1
  6755  0035CC  0100               	movlb	0	; () banked
  6756  0035CE  EE20 F00A          	lfsr	2,10
  6757  0035D2  51F9               	movf	reserve_direntry@dj& (0+255),w,b
  6758  0035D4  26D9               	addwf	fsr2l,f,c
  6759  0035D6  51FA               	movf	(reserve_direntry@dj+1)& (0+255),w,b
  6760  0035D8  22DA               	addwfc	fsr2h,f,c
  6761  0035DA  CFDE F0DF          	movff	postinc2,create_chain@clust
  6762  0035DE  CFDE F0E0          	movff	postinc2,create_chain@clust+1
  6763  0035E2  CFDE F0E1          	movff	postinc2,create_chain@clust+2
  6764  0035E6  CFDE F0E2          	movff	postinc2,create_chain@clust+3
  6765  0035EA  EC5B  F018         	call	_create_chain	;wreg free
  6766  0035EE  C0DF  F181         	movff	?_create_chain,reserve_direntry@clust
  6767  0035F2  C0E0  F182         	movff	?_create_chain+1,reserve_direntry@clust+1
  6768  0035F6  C0E1  F183         	movff	?_create_chain+2,reserve_direntry@clust+2
  6769  0035FA  C0E2  F184         	movff	?_create_chain+3,reserve_direntry@clust+3
  6770  0035FE  0101               	movlb	1	; () banked
  6771  003600  5181               	movf	reserve_direntry@clust& (0+255),w,b
  6772  003602  0101               	movlb	1	; () banked
  6773  003604  1182               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
  6774  003606  0101               	movlb	1	; () banked
  6775  003608  1183               	iorwf	(reserve_direntry@clust+2)& (0+255),w,b
  6776  00360A  0101               	movlb	1	; () banked
  6777  00360C  1184               	iorwf	(reserve_direntry@clust+3)& (0+255),w,b
  6778  00360E  A4D8               	btfss	status,2,c
  6779  003610  D002               	goto	l12225
  6780  003612                     l12221:
  6781                           
  6782                           ; BSR set to: 1
  6783  003612  0E06               	movlw	6
  6784                           
  6785                           ; BSR set to: 1
  6786  003614  0012               	return	
  6787  003616                     l12225:
  6788                           
  6789                           ; BSR set to: 1
  6790                           ;tff.c: 600: if (clust == 1 || !move_window(0)) return FR_RW_ERROR;
  6791  003616  0101               	movlb	1	; () banked
  6792  003618  0581               	decf	reserve_direntry@clust& (0+255),w,b
  6793  00361A  0101               	movlb	1	; () banked
  6794  00361C  1182               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
  6795  00361E  0101               	movlb	1	; () banked
  6796  003620  1183               	iorwf	(reserve_direntry@clust+2)& (0+255),w,b
  6797  003622  0101               	movlb	1	; () banked
  6798  003624  1184               	iorwf	(reserve_direntry@clust+3)& (0+255),w,b
  6799  003626  B4D8               	btfsc	status,2,c
  6800  003628  D00E               	goto	l12229
  6801                           
  6802                           ; BSR set to: 1
  6803  00362A  0E00               	movlw	0
  6804  00362C  0100               	movlb	0	; () banked
  6805  00362E  6F8E               	movwf	move_window@sector& (0+255),b
  6806  003630  0E00               	movlw	0
  6807  003632  6F8F               	movwf	(move_window@sector+1)& (0+255),b
  6808  003634  0E00               	movlw	0
  6809  003636  6F90               	movwf	(move_window@sector+2)& (0+255),b
  6810  003638  0E00               	movlw	0
  6811  00363A  6F91               	movwf	(move_window@sector+3)& (0+255),b
  6812  00363C  EC28  F01D         	call	_move_window	;wreg free
  6813  003640  0900               	iorlw	0
  6814  003642  A4D8               	btfss	status,2,c
  6815  003644  D002               	goto	l12233
  6816  003646                     l12229:
  6817  003646  0E08               	movlw	8
  6818  003648  0012               	return	
  6819  00364A                     l12233:
  6820                           
  6821                           ;tff.c: 602: fs->winsect = sector = clust2sect(clust);
  6822  00364A  C181  F022         	movff	reserve_direntry@clust,clust2sect@clust
  6823  00364E  C182  F023         	movff	reserve_direntry@clust+1,clust2sect@clust+1
  6824  003652  C183  F024         	movff	reserve_direntry@clust+2,clust2sect@clust+2
  6825  003656  C184  F025         	movff	reserve_direntry@clust+3,clust2sect@clust+3
  6826  00365A  EC49  F024         	call	_clust2sect	;wreg free
  6827  00365E  C022  F179         	movff	?_clust2sect,reserve_direntry@sector
  6828  003662  C023  F17A         	movff	?_clust2sect+1,reserve_direntry@sector+1
  6829  003666  C024  F17B         	movff	?_clust2sect+2,reserve_direntry@sector+2
  6830  00366A  C025  F17C         	movff	?_clust2sect+3,reserve_direntry@sector+3
  6831  00366E  0101               	movlb	1	; () banked
  6832  003670  EE20 F004          	lfsr	2,4
  6833  003674  5185               	movf	reserve_direntry@fs& (0+255),w,b
  6834  003676  26D9               	addwf	fsr2l,f,c
  6835  003678  5186               	movf	(reserve_direntry@fs+1)& (0+255),w,b
  6836  00367A  22DA               	addwfc	fsr2h,f,c
  6837  00367C  C179  FFDE         	movff	reserve_direntry@sector,postinc2
  6838  003680  C17A  FFDE         	movff	reserve_direntry@sector+1,postinc2
  6839  003684  C17B  FFDE         	movff	reserve_direntry@sector+2,postinc2
  6840  003688  C17C  FFDE         	movff	reserve_direntry@sector+3,postinc2
  6841                           
  6842                           ;tff.c: 603: memset(fs->win, 0, 512U);
  6843  00368C  0E28               	movlw	40
  6844  00368E  0101               	movlb	1	; () banked
  6845  003690  2585               	addwf	reserve_direntry@fs& (0+255),w,b
  6846  003692  6E16               	movwf	memset@p1,c
  6847  003694  0E00               	movlw	0
  6848  003696  0101               	movlb	1	; () banked
  6849  003698  2186               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
  6850  00369A  6E17               	movwf	memset@p1+1,c
  6851  00369C  0E00               	movlw	0
  6852  00369E  6E19               	movwf	memset@c+1,c
  6853  0036A0  0E00               	movlw	0
  6854  0036A2  6E18               	movwf	memset@c,c
  6855  0036A4  0E02               	movlw	2
  6856  0036A6  6E1B               	movwf	memset@n+1,c
  6857  0036A8  0E00               	movlw	0
  6858  0036AA  6E1A               	movwf	memset@n,c
  6859  0036AC  EC02  F02B         	call	_memset	;wreg free
  6860                           
  6861                           ;tff.c: 604: for (n = fs->csize; n; n--) {
  6862  0036B0  0101               	movlb	1	; () banked
  6863  0036B2  EE20 F025          	lfsr	2,37
  6864  0036B6  5185               	movf	reserve_direntry@fs& (0+255),w,b
  6865  0036B8  26D9               	addwf	fsr2l,f,c
  6866  0036BA  5186               	movf	(reserve_direntry@fs+1)& (0+255),w,b
  6867  0036BC  22DA               	addwfc	fsr2h,f,c
  6868  0036BE  50DF               	movf	indf2,w,c
  6869  0036C0  0101               	movlb	1	; () banked
  6870  0036C2  6F7D               	movwf	reserve_direntry@n& (0+255),b
  6871  0036C4  D026               	goto	l12247
  6872  0036C6                     l12237:
  6873                           
  6874                           ; BSR set to: 1
  6875                           ;tff.c: 605: if (disk_write(0, fs->win, sector, 1) != RES_OK)
  6876  0036C6  0E28               	movlw	40
  6877  0036C8  0101               	movlb	1	; () banked
  6878  0036CA  2585               	addwf	reserve_direntry@fs& (0+255),w,b
  6879  0036CC  0100               	movlb	0	; () banked
  6880  0036CE  6F7F               	movwf	disk_write@buff& (0+255),b
  6881  0036D0  0E00               	movlw	0
  6882  0036D2  0101               	movlb	1	; () banked
  6883  0036D4  2186               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
  6884  0036D6  0100               	movlb	0	; () banked
  6885  0036D8  6F80               	movwf	(disk_write@buff+1)& (0+255),b
  6886  0036DA  C179  F081         	movff	reserve_direntry@sector,disk_write@sector
  6887  0036DE  C17A  F082         	movff	reserve_direntry@sector+1,disk_write@sector+1
  6888  0036E2  C17B  F083         	movff	reserve_direntry@sector+2,disk_write@sector+2
  6889  0036E6  C17C  F084         	movff	reserve_direntry@sector+3,disk_write@sector+3
  6890  0036EA  0E01               	movlw	1
  6891  0036EC  0100               	movlb	0	; () banked
  6892  0036EE  6F85               	movwf	disk_write@count& (0+255),b
  6893  0036F0  0E00               	movlw	0
  6894  0036F2  EC83  F026         	call	_disk_write
  6895  0036F6  0900               	iorlw	0
  6896  0036F8  B4D8               	btfsc	status,2,c
  6897  0036FA  D002               	goto	l12243
  6898                           
  6899                           ;tff.c: 606: return FR_RW_ERROR;
  6900  0036FC  0E08               	movlw	8
  6901  0036FE  0012               	return	
  6902  003700                     l12243:
  6903                           
  6904                           ;tff.c: 607: sector++;
  6905  003700  0E01               	movlw	1
  6906  003702  0101               	movlb	1	; () banked
  6907  003704  2779               	addwf	reserve_direntry@sector& (0+255),f,b
  6908  003706  0E00               	movlw	0
  6909  003708  237A               	addwfc	(reserve_direntry@sector+1)& (0+255),f,b
  6910  00370A  237B               	addwfc	(reserve_direntry@sector+2)& (0+255),f,b
  6911  00370C  237C               	addwfc	(reserve_direntry@sector+3)& (0+255),f,b
  6912                           
  6913                           ; BSR set to: 1
  6914  00370E  0101               	movlb	1	; () banked
  6915  003710  077D               	decf	reserve_direntry@n& (0+255),f,b
  6916  003712                     l12247:
  6917                           
  6918                           ; BSR set to: 1
  6919  003712  0101               	movlb	1	; () banked
  6920  003714  517D               	movf	reserve_direntry@n& (0+255),w,b
  6921  003716  0101               	movlb	1	; () banked
  6922  003718  A4D8               	btfss	status,2,c
  6923  00371A  D7D5               	goto	l12237
  6924                           
  6925                           ; BSR set to: 1
  6926                           ;tff.c: 608: }
  6927                           ;tff.c: 609: fs->winflag = 1;
  6928                           
  6929                           ; BSR set to: 1
  6930  00371C  0101               	movlb	1	; () banked
  6931  00371E  EE20 F027          	lfsr	2,39
  6932  003722  5185               	movf	reserve_direntry@fs& (0+255),w,b
  6933  003724  26D9               	addwf	fsr2l,f,c
  6934  003726  5186               	movf	(reserve_direntry@fs+1)& (0+255),w,b
  6935  003728  22DA               	addwfc	fsr2h,f,c
  6936  00372A  0E01               	movlw	1
  6937  00372C  6EDF               	movwf	indf2,c
  6938                           
  6939                           ;tff.c: 610: *dir = fs->win;
  6940  00372E  0E28               	movlw	40
  6941  003730  0101               	movlb	1	; () banked
  6942  003732  2585               	addwf	reserve_direntry@fs& (0+255),w,b
  6943  003734  0100               	movlb	0	; () banked
  6944  003736  6FFD               	movwf	??_reserve_direntry& (0+255),b
  6945  003738  0E00               	movlw	0
  6946  00373A  0101               	movlb	1	; () banked
  6947  00373C  2186               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
  6948  00373E  0100               	movlb	0	; () banked
  6949  003740  6FFE               	movwf	(??_reserve_direntry+1)& (0+255),b
  6950  003742  C0FB  FFD9         	movff	reserve_direntry@dir,fsr2l
  6951  003746  C0FC  FFDA         	movff	reserve_direntry@dir+1,fsr2h
  6952  00374A  C0FD  FFDE         	movff	??_reserve_direntry,postinc2
  6953  00374E  C0FE  FFDD         	movff	??_reserve_direntry+1,postdec2
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;tff.c: 611: return FR_OK;
  6957  003752  0E00               	movlw	0
  6958  003754  0012               	return	
  6959  003756                     __end_of_reserve_direntry:
  6960                           	opt stack 0
  6961                           tosu	equ	0xFFF
  6962                           tosh	equ	0xFFE
  6963                           tosl	equ	0xFFD
  6964                           pclath	equ	0xFFA
  6965                           tblptru	equ	0xFF8
  6966                           tblptrh	equ	0xFF7
  6967                           tblptrl	equ	0xFF6
  6968                           tablat	equ	0xFF5
  6969                           prodh	equ	0xFF4
  6970                           prodl	equ	0xFF3
  6971                           intcon	equ	0xFF2
  6972                           intcon2	equ	0xFF1
  6973                           intcon3	equ	0xFF0
  6974                           postinc0	equ	0xFEE
  6975                           wreg	equ	0xFE8
  6976                           postinc1	equ	0xFE6
  6977                           postdec1	equ	0xFE5
  6978                           fsr1h	equ	0xFE2
  6979                           fsr1l	equ	0xFE1
  6980                           indf2	equ	0xFDF
  6981                           postinc2	equ	0xFDE
  6982                           postdec2	equ	0xFDD
  6983                           fsr2h	equ	0xFDA
  6984                           fsr2l	equ	0xFD9
  6985                           status	equ	0xFD8
  6986                           
  6987 ;; *************** function _next_dir_entry *****************
  6988 ;; Defined at:
  6989 ;;		line 358 in file "bibliotecas/tff.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;  dj              2  127[BANK0 ] PTR struct _DIR
  6992 ;;		 -> f_rename@dj(18), f_utime@dj(18), f_chmod@dj(18), f_mkdir@dj(18), 
  6993 ;;		 -> f_unlink@dj(18), f_stat@dj(18), f_open@dj(18), 
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;  clust           4  136[BANK0 ] unsigned long 
  6996 ;;  idx             2  140[BANK0 ] unsigned short 
  6997 ;; Return value:  Size  Location     Type
  6998 ;;                  1    wreg      enum E105
  6999 ;; Registers used:
  7000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7006 ;;      Params:         0       2       0       0       0       0       0       0       0
  7007 ;;      Locals:         0       6       0       0       0       0       0       0       0
  7008 ;;      Temps:          0       7       0       0       0       0       0       0       0
  7009 ;;      Totals:         0      15       0       0       0       0       0       0       0
  7010 ;;Total ram usage:       15 bytes
  7011 ;; Hardware stack levels used:    1
  7012 ;; Hardware stack levels required when called:   12
  7013 ;; This function calls:
  7014 ;;		_clust2sect
  7015 ;;		_get_cluster
  7016 ;; This function is called by:
  7017 ;;		_trace_path
  7018 ;;		_reserve_direntry
  7019 ;;		_f_readdir
  7020 ;;		_f_unlink
  7021 ;; This function uses a non-reentrant model
  7022 ;;
  7023                           
  7024                           	psect	text19
  7025  003C7A                     __ptext19:
  7026                           	opt stack 0
  7027  003C7A                     _next_dir_entry:
  7028                           	opt stack 14
  7029                           
  7030                           ;tff.c: 362: CLUST clust;
  7031                           ;tff.c: 363: WORD idx;
  7032                           ;tff.c: 366: idx = dj->index + 1;
  7033                           
  7034                           ;incstack = 0
  7035  003C7A  0100               	movlb	0	; () banked
  7036  003C7C  EE20 F002          	lfsr	2,2
  7037  003C80  51DF               	movf	next_dir_entry@dj& (0+255),w,b
  7038  003C82  26D9               	addwf	fsr2l,f,c
  7039  003C84  51E0               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  7040  003C86  22DA               	addwfc	fsr2h,f,c
  7041  003C88  CFDE F0E1          	movff	postinc2,??_next_dir_entry
  7042  003C8C  CFDD F0E2          	movff	postdec2,??_next_dir_entry+1
  7043  003C90  0E01               	movlw	1
  7044  003C92  0100               	movlb	0	; () banked
  7045  003C94  25E1               	addwf	??_next_dir_entry& (0+255),w,b
  7046  003C96  0100               	movlb	0	; () banked
  7047  003C98  6FEC               	movwf	next_dir_entry@idx& (0+255),b
  7048  003C9A  0E00               	movlw	0
  7049  003C9C  0100               	movlb	0	; () banked
  7050  003C9E  21E2               	addwfc	(??_next_dir_entry+1)& (0+255),w,b
  7051  003CA0  0100               	movlb	0	; () banked
  7052  003CA2  6FED               	movwf	(next_dir_entry@idx+1)& (0+255),b
  7053                           
  7054                           ; BSR set to: 0
  7055                           ;tff.c: 367: if ((idx & 15) == 0) {
  7056  003CA4  0E0F               	movlw	15
  7057  003CA6  0100               	movlb	0	; () banked
  7058  003CA8  15EC               	andwf	next_dir_entry@idx& (0+255),w,b
  7059  003CAA  0100               	movlb	0	; () banked
  7060  003CAC  6FE1               	movwf	??_next_dir_entry& (0+255),b
  7061  003CAE  0E00               	movlw	0
  7062  003CB0  0100               	movlb	0	; () banked
  7063  003CB2  15ED               	andwf	(next_dir_entry@idx+1)& (0+255),w,b
  7064  003CB4  0100               	movlb	0	; () banked
  7065  003CB6  6FE2               	movwf	(??_next_dir_entry+1)& (0+255),b
  7066  003CB8  0100               	movlb	0	; () banked
  7067  003CBA  51E1               	movf	??_next_dir_entry& (0+255),w,b
  7068  003CBC  0100               	movlb	0	; () banked
  7069  003CBE  11E2               	iorwf	(??_next_dir_entry+1)& (0+255),w,b
  7070  003CC0  A4D8               	btfss	status,2,c
  7071  003CC2  D0D5               	goto	l11779
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;tff.c: 368: dj->sect++;
  7075  003CC4  0100               	movlb	0	; () banked
  7076  003CC6  EE20 F00E          	lfsr	2,14
  7077  003CCA  51DF               	movf	next_dir_entry@dj& (0+255),w,b
  7078  003CCC  26D9               	addwf	fsr2l,f,c
  7079  003CCE  51E0               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  7080  003CD0  22DA               	addwfc	fsr2h,f,c
  7081  003CD2  2ADE               	incf	postinc2,f,c
  7082  003CD4  0E00               	movlw	0
  7083  003CD6  22DE               	addwfc	postinc2,f,c
  7084  003CD8  22DE               	addwfc	postinc2,f,c
  7085  003CDA  22DE               	addwfc	postinc2,f,c
  7086                           
  7087                           ;tff.c: 369: if (dj->clust == 0) {
  7088  003CDC  0100               	movlb	0	; () banked
  7089  003CDE  EE20 F00A          	lfsr	2,10
  7090  003CE2  51DF               	movf	next_dir_entry@dj& (0+255),w,b
  7091  003CE4  26D9               	addwf	fsr2l,f,c
  7092  003CE6  51E0               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  7093  003CE8  22DA               	addwfc	fsr2h,f,c
  7094  003CEA  50DE               	movf	postinc2,w,c
  7095  003CEC  10DE               	iorwf	postinc2,w,c
  7096  003CEE  10DE               	iorwf	postinc2,w,c
  7097  003CF0  10DE               	iorwf	postinc2,w,c
  7098  003CF2  A4D8               	btfss	status,2,c
  7099  003CF4  D017               	goto	l11763
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;tff.c: 370: if (idx >= dj->fs->n_rootdir) return FALSE;
  7103  003CF6  0100               	movlb	0	; () banked
  7104  003CF8  EE20 F004          	lfsr	2,4
  7105  003CFC  51DF               	movf	next_dir_entry@dj& (0+255),w,b
  7106  003CFE  26D9               	addwf	fsr2l,f,c
  7107  003D00  51E0               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  7108  003D02  22DA               	addwfc	fsr2h,f,c
  7109  003D04  EE10 F002          	lfsr	1,2
  7110  003D08  50DE               	movf	postinc2,w,c
  7111  003D0A  26E1               	addwf	fsr1l,f,c
  7112  003D0C  50DD               	movf	postdec2,w,c
  7113  003D0E  22E2               	addwfc	fsr1h,f,c
  7114  003D10  50E6               	movf	postinc1,w,c
  7115  003D12  0100               	movlb	0	; () banked
  7116  003D14  5DEC               	subwf	next_dir_entry@idx& (0+255),w,b
  7117  003D16  50E6               	movf	postinc1,w,c
  7118  003D18  0100               	movlb	0	; () banked
  7119  003D1A  59ED               	subwfb	(next_dir_entry@idx+1)& (0+255),w,b
  7120  003D1C  A0D8               	btfss	status,0,c
  7121  003D1E  D0A7               	goto	l11779
  7122                           
  7123                           ; BSR set to: 0
  7124  003D20  0E00               	movlw	0
  7125                           
  7126                           ; BSR set to: 0
  7127  003D22  0012               	return	
  7128  003D24                     l11763:
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;tff.c: 372: if (((idx / 16) & (dj->fs->csize - 1)) == 0) {
  7132  003D24  C0EC  F0E1         	movff	next_dir_entry@idx,??_next_dir_entry
  7133  003D28  C0ED  F0E2         	movff	next_dir_entry@idx+1,??_next_dir_entry+1
  7134  003D2C  0E04               	movlw	4
  7135  003D2E  0100               	movlb	0	; () banked
  7136  003D30  6FE3               	movwf	(??_next_dir_entry+2)& (0+255),b
  7137  003D32                     u12765:
  7138  003D32  0100               	movlb	0	; () banked
  7139  003D34  90D8               	bcf	status,0,c
  7140  003D36  33E2               	rrcf	(??_next_dir_entry+1)& (0+255),f,b
  7141  003D38  33E1               	rrcf	??_next_dir_entry& (0+255),f,b
  7142  003D3A  0100               	movlb	0	; () banked
  7143  003D3C  2FE3               	decfsz	(??_next_dir_entry+2)& (0+255),f,b
  7144  003D3E  D7F9               	goto	u12765
  7145  003D40  0EFF               	movlw	255
  7146  003D42  0100               	movlb	0	; () banked
  7147  003D44  6FE4               	movwf	(??_next_dir_entry+3)& (0+255),b
  7148  003D46  0EFF               	movlw	255
  7149  003D48  0100               	movlb	0	; () banked
  7150  003D4A  6FE5               	movwf	(??_next_dir_entry+4)& (0+255),b
  7151  003D4C  0100               	movlb	0	; () banked
  7152  003D4E  EE20 F004          	lfsr	2,4
  7153  003D52  51DF               	movf	next_dir_entry@dj& (0+255),w,b
  7154  003D54  26D9               	addwf	fsr2l,f,c
  7155  003D56  51E0               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  7156  003D58  22DA               	addwfc	fsr2h,f,c
  7157  003D5A  EE10 F025          	lfsr	1,37
  7158  003D5E  50DE               	movf	postinc2,w,c
  7159  003D60  26E1               	addwf	fsr1l,f,c
  7160  003D62  50DD               	movf	postdec2,w,c
  7161  003D64  22E2               	addwfc	fsr1h,f,c
  7162  003D66  50E7               	movf	indf1,w,c
  7163  003D68  0100               	movlb	0	; () banked
  7164  003D6A  6FE6               	movwf	(??_next_dir_entry+5)& (0+255),b
  7165  003D6C  6BE7               	clrf	(??_next_dir_entry+6)& (0+255),b
  7166  003D6E  0100               	movlb	0	; () banked
  7167  003D70  51E4               	movf	(??_next_dir_entry+3)& (0+255),w,b
  7168  003D72  0100               	movlb	0	; () banked
  7169  003D74  27E6               	addwf	(??_next_dir_entry+5)& (0+255),f,b
  7170  003D76  0100               	movlb	0	; () banked
  7171  003D78  51E5               	movf	(??_next_dir_entry+4)& (0+255),w,b
  7172  003D7A  0100               	movlb	0	; () banked
  7173  003D7C  23E7               	addwfc	(??_next_dir_entry+6)& (0+255),f,b
  7174  003D7E  0100               	movlb	0	; () banked
  7175  003D80  51E1               	movf	??_next_dir_entry& (0+255),w,b
  7176  003D82  0100               	movlb	0	; () banked
  7177  003D84  17E6               	andwf	(??_next_dir_entry+5)& (0+255),f,b
  7178  003D86  0100               	movlb	0	; () banked
  7179  003D88  51E2               	movf	(??_next_dir_entry+1)& (0+255),w,b
  7180  003D8A  0100               	movlb	0	; () banked
  7181  003D8C  17E7               	andwf	(??_next_dir_entry+6)& (0+255),f,b
  7182  003D8E  0100               	movlb	0	; () banked
  7183  003D90  51E6               	movf	(??_next_dir_entry+5)& (0+255),w,b
  7184  003D92  0100               	movlb	0	; () banked
  7185  003D94  11E7               	iorwf	(??_next_dir_entry+6)& (0+255),w,b
  7186  003D96  A4D8               	btfss	status,2,c
  7187  003D98  D06A               	goto	l11779
  7188                           
  7189                           ; BSR set to: 0
  7190                           ;tff.c: 373: clust = get_cluster(dj->clust);
  7191  003D9A  0100               	movlb	0	; () banked
  7192  003D9C  EE20 F00A          	lfsr	2,10
  7193  003DA0  51DF               	movf	next_dir_entry@dj& (0+255),w,b
  7194  003DA2  26D9               	addwf	fsr2l,f,c
  7195  003DA4  51E0               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  7196  003DA6  22DA               	addwfc	fsr2h,f,c
  7197  003DA8  CFDE F0A5          	movff	postinc2,get_cluster@clust
  7198  003DAC  CFDE F0A6          	movff	postinc2,get_cluster@clust+1
  7199  003DB0  CFDE F0A7          	movff	postinc2,get_cluster@clust+2
  7200  003DB4  CFDE F0A8          	movff	postinc2,get_cluster@clust+3
  7201  003DB8  ECCC  F009         	call	_get_cluster	;wreg free
  7202  003DBC  C0A5  F0E8         	movff	?_get_cluster,next_dir_entry@clust
  7203  003DC0  C0A6  F0E9         	movff	?_get_cluster+1,next_dir_entry@clust+1
  7204  003DC4  C0A7  F0EA         	movff	?_get_cluster+2,next_dir_entry@clust+2
  7205  003DC8  C0A8  F0EB         	movff	?_get_cluster+3,next_dir_entry@clust+3
  7206                           
  7207                           ;tff.c: 374: if (clust < 2 || clust >= dj->fs->max_clust)
  7208  003DCC  0100               	movlb	0	; () banked
  7209  003DCE  51EB               	movf	(next_dir_entry@clust+3)& (0+255),w,b
  7210  003DD0  0100               	movlb	0	; () banked
  7211  003DD2  11EA               	iorwf	(next_dir_entry@clust+2)& (0+255),w,b
  7212  003DD4  0100               	movlb	0	; () banked
  7213  003DD6  11E9               	iorwf	(next_dir_entry@clust+1)& (0+255),w,b
  7214  003DD8  E105               	bnz	u12780
  7215  003DDA  0E02               	movlw	2
  7216  003DDC  0100               	movlb	0	; () banked
  7217  003DDE  5DE8               	subwf	next_dir_entry@clust& (0+255),w,b
  7218  003DE0  A0D8               	btfss	status,0,c
  7219  003DE2  D01B               	goto	l11771
  7220  003DE4                     u12780:
  7221                           
  7222                           ; BSR set to: 0
  7223  003DE4  0100               	movlb	0	; () banked
  7224  003DE6  EE20 F004          	lfsr	2,4
  7225  003DEA  51DF               	movf	next_dir_entry@dj& (0+255),w,b
  7226  003DEC  26D9               	addwf	fsr2l,f,c
  7227  003DEE  51E0               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  7228  003DF0  22DA               	addwfc	fsr2h,f,c
  7229  003DF2  EE10 F018          	lfsr	1,24
  7230  003DF6  50DE               	movf	postinc2,w,c
  7231  003DF8  26E1               	addwf	fsr1l,f,c
  7232  003DFA  50DD               	movf	postdec2,w,c
  7233  003DFC  22E2               	addwfc	fsr1h,f,c
  7234  003DFE  50E6               	movf	postinc1,w,c
  7235  003E00  0100               	movlb	0	; () banked
  7236  003E02  5DE8               	subwf	next_dir_entry@clust& (0+255),w,b
  7237  003E04  50E6               	movf	postinc1,w,c
  7238  003E06  0100               	movlb	0	; () banked
  7239  003E08  59E9               	subwfb	(next_dir_entry@clust+1)& (0+255),w,b
  7240  003E0A  50E6               	movf	postinc1,w,c
  7241  003E0C  0100               	movlb	0	; () banked
  7242  003E0E  59EA               	subwfb	(next_dir_entry@clust+2)& (0+255),w,b
  7243  003E10  50E6               	movf	postinc1,w,c
  7244  003E12  0100               	movlb	0	; () banked
  7245  003E14  59EB               	subwfb	(next_dir_entry@clust+3)& (0+255),w,b
  7246  003E16  A0D8               	btfss	status,0,c
  7247  003E18  D002               	goto	l11775
  7248  003E1A                     l11771:
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;tff.c: 375: return FALSE;
  7252  003E1A  0E00               	movlw	0
  7253                           
  7254                           ; BSR set to: 0
  7255  003E1C  0012               	return	
  7256  003E1E                     l11775:
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;tff.c: 376: dj->clust = clust;
  7260  003E1E  0100               	movlb	0	; () banked
  7261  003E20  EE20 F00A          	lfsr	2,10
  7262  003E24  51DF               	movf	next_dir_entry@dj& (0+255),w,b
  7263  003E26  26D9               	addwf	fsr2l,f,c
  7264  003E28  51E0               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  7265  003E2A  22DA               	addwfc	fsr2h,f,c
  7266  003E2C  C0E8  FFDE         	movff	next_dir_entry@clust,postinc2
  7267  003E30  C0E9  FFDE         	movff	next_dir_entry@clust+1,postinc2
  7268  003E34  C0EA  FFDE         	movff	next_dir_entry@clust+2,postinc2
  7269  003E38  C0EB  FFDE         	movff	next_dir_entry@clust+3,postinc2
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;tff.c: 377: dj->sect = clust2sect(clust);
  7273  003E3C  C0E8  F022         	movff	next_dir_entry@clust,clust2sect@clust
  7274  003E40  C0E9  F023         	movff	next_dir_entry@clust+1,clust2sect@clust+1
  7275  003E44  C0EA  F024         	movff	next_dir_entry@clust+2,clust2sect@clust+2
  7276  003E48  C0EB  F025         	movff	next_dir_entry@clust+3,clust2sect@clust+3
  7277  003E4C  EC49  F024         	call	_clust2sect	;wreg free
  7278  003E50  0100               	movlb	0	; () banked
  7279  003E52  EE20 F00E          	lfsr	2,14
  7280  003E56  51DF               	movf	next_dir_entry@dj& (0+255),w,b
  7281  003E58  26D9               	addwf	fsr2l,f,c
  7282  003E5A  51E0               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  7283  003E5C  22DA               	addwfc	fsr2h,f,c
  7284  003E5E  C022  FFDE         	movff	?_clust2sect,postinc2
  7285  003E62  C023  FFDE         	movff	?_clust2sect+1,postinc2
  7286  003E66  C024  FFDE         	movff	?_clust2sect+2,postinc2
  7287  003E6A  C025  FFDE         	movff	?_clust2sect+3,postinc2
  7288  003E6E                     l11779:
  7289                           
  7290                           ; BSR set to: 0
  7291                           ;tff.c: 378: }
  7292                           ;tff.c: 379: }
  7293                           ;tff.c: 380: }
  7294                           ;tff.c: 381: dj->index = idx;
  7295  003E6E  0100               	movlb	0	; () banked
  7296  003E70  EE20 F002          	lfsr	2,2
  7297  003E74  51DF               	movf	next_dir_entry@dj& (0+255),w,b
  7298  003E76  26D9               	addwf	fsr2l,f,c
  7299  003E78  51E0               	movf	(next_dir_entry@dj+1)& (0+255),w,b
  7300  003E7A  22DA               	addwfc	fsr2h,f,c
  7301  003E7C  C0EC  FFDE         	movff	next_dir_entry@idx,postinc2
  7302  003E80  C0ED  FFDD         	movff	next_dir_entry@idx+1,postdec2
  7303                           
  7304                           ; BSR set to: 0
  7305                           ;tff.c: 382: return TRUE;
  7306  003E84  0E01               	movlw	1
  7307  003E86  0012               	return	
  7308  003E88                     __end_of_next_dir_entry:
  7309                           	opt stack 0
  7310                           tosu	equ	0xFFF
  7311                           tosh	equ	0xFFE
  7312                           tosl	equ	0xFFD
  7313                           pclath	equ	0xFFA
  7314                           tblptru	equ	0xFF8
  7315                           tblptrh	equ	0xFF7
  7316                           tblptrl	equ	0xFF6
  7317                           tablat	equ	0xFF5
  7318                           prodh	equ	0xFF4
  7319                           prodl	equ	0xFF3
  7320                           intcon	equ	0xFF2
  7321                           intcon2	equ	0xFF1
  7322                           intcon3	equ	0xFF0
  7323                           postinc0	equ	0xFEE
  7324                           wreg	equ	0xFE8
  7325                           indf1	equ	0xFE7
  7326                           postinc1	equ	0xFE6
  7327                           postdec1	equ	0xFE5
  7328                           fsr1h	equ	0xFE2
  7329                           fsr1l	equ	0xFE1
  7330                           indf2	equ	0xFDF
  7331                           postinc2	equ	0xFDE
  7332                           postdec2	equ	0xFDD
  7333                           fsr2h	equ	0xFDA
  7334                           fsr2l	equ	0xFD9
  7335                           status	equ	0xFD8
  7336                           
  7337 ;; *************** function _clust2sect *****************
  7338 ;; Defined at:
  7339 ;;		line 338 in file "bibliotecas/tff.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;  clust           4   33[COMRAM] unsigned long 
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;  fs              2   42[COMRAM] PTR struct _FATFS
  7344 ;;		 -> fs(552), NULL(0), 
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  4   33[COMRAM] unsigned long 
  7347 ;; Registers used:
  7348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7354 ;;      Params:         4       0       0       0       0       0       0       0       0
  7355 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7356 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7357 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7358 ;;Total ram usage:       11 bytes
  7359 ;; Hardware stack levels used:    1
  7360 ;; Hardware stack levels required when called:    3
  7361 ;; This function calls:
  7362 ;;		___lmul
  7363 ;; This function is called by:
  7364 ;;		_next_dir_entry
  7365 ;;		_trace_path
  7366 ;;		_reserve_direntry
  7367 ;;		_f_read
  7368 ;;		_f_write
  7369 ;;		_f_opendir
  7370 ;;		_f_unlink
  7371 ;;		_f_mkdir
  7372 ;; This function uses a non-reentrant model
  7373 ;;
  7374                           
  7375                           	psect	text20
  7376  004892                     __ptext20:
  7377                           	opt stack 0
  7378  004892                     _clust2sect:
  7379                           	opt stack 22
  7380                           
  7381                           ;tff.c: 342: FATFS *fs = FatFs;
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;incstack = 0
  7385  004892  C035  F02B         	movff	_FatFs,clust2sect@fs
  7386  004896  C036  F02C         	movff	_FatFs+1,clust2sect@fs+1
  7387                           
  7388                           ;tff.c: 345: clust -= 2;
  7389  00489A  0E02               	movlw	2
  7390  00489C  5E22               	subwf	clust2sect@clust,f,c
  7391  00489E  0E00               	movlw	0
  7392  0048A0  5A23               	subwfb	clust2sect@clust+1,f,c
  7393  0048A2  5A24               	subwfb	clust2sect@clust+2,f,c
  7394  0048A4  5A25               	subwfb	clust2sect@clust+3,f,c
  7395                           
  7396                           ;tff.c: 346: if (clust >= (fs->max_clust - 2)) return 0;
  7397  0048A6  EE20 F018          	lfsr	2,24
  7398  0048AA  502B               	movf	clust2sect@fs,w,c
  7399  0048AC  26D9               	addwf	fsr2l,f,c
  7400  0048AE  502C               	movf	clust2sect@fs+1,w,c
  7401  0048B0  22DA               	addwfc	fsr2h,f,c
  7402  0048B2  0EFE               	movlw	254
  7403  0048B4  24DE               	addwf	postinc2,w,c
  7404  0048B6  6E26               	movwf	??_clust2sect& (0+255),c
  7405  0048B8  0EFF               	movlw	255
  7406  0048BA  20DE               	addwfc	postinc2,w,c
  7407  0048BC  6E27               	movwf	(??_clust2sect+1)& (0+255),c
  7408  0048BE  0EFF               	movlw	255
  7409  0048C0  20DE               	addwfc	postinc2,w,c
  7410  0048C2  6E28               	movwf	(??_clust2sect+2)& (0+255),c
  7411  0048C4  0EFF               	movlw	255
  7412  0048C6  20DE               	addwfc	postinc2,w,c
  7413  0048C8  6E29               	movwf	(??_clust2sect+3)& (0+255),c
  7414  0048CA  5026               	movf	??_clust2sect,w,c
  7415  0048CC  5C22               	subwf	clust2sect@clust,w,c
  7416  0048CE  5027               	movf	??_clust2sect+1,w,c
  7417  0048D0  5823               	subwfb	clust2sect@clust+1,w,c
  7418  0048D2  5028               	movf	??_clust2sect+2,w,c
  7419  0048D4  5824               	subwfb	clust2sect@clust+2,w,c
  7420  0048D6  5029               	movf	??_clust2sect+3,w,c
  7421  0048D8  5825               	subwfb	clust2sect@clust+3,w,c
  7422  0048DA  A0D8               	btfss	status,0,c
  7423  0048DC  D009               	goto	l11609
  7424  0048DE  0E00               	movlw	0
  7425  0048E0  6E22               	movwf	?_clust2sect,c
  7426  0048E2  0E00               	movlw	0
  7427  0048E4  6E23               	movwf	?_clust2sect+1,c
  7428  0048E6  0E00               	movlw	0
  7429  0048E8  6E24               	movwf	?_clust2sect+2,c
  7430  0048EA  0E00               	movlw	0
  7431  0048EC  6E25               	movwf	?_clust2sect+3,c
  7432  0048EE  0012               	return	
  7433  0048F0                     l11609:
  7434                           
  7435                           ;tff.c: 347: return (DWORD)clust * fs->csize + fs->database;
  7436  0048F0  EE20 F010          	lfsr	2,16
  7437  0048F4  502B               	movf	clust2sect@fs,w,c
  7438  0048F6  26D9               	addwf	fsr2l,f,c
  7439  0048F8  502C               	movf	clust2sect@fs+1,w,c
  7440  0048FA  22DA               	addwfc	fsr2h,f,c
  7441  0048FC  CFDE F026          	movff	postinc2,??_clust2sect
  7442  004900  CFDE F027          	movff	postinc2,??_clust2sect+1
  7443  004904  CFDE F028          	movff	postinc2,??_clust2sect+2
  7444  004908  CFDE F029          	movff	postinc2,??_clust2sect+3
  7445  00490C  EE20 F025          	lfsr	2,37
  7446  004910  502B               	movf	clust2sect@fs,w,c
  7447  004912  26D9               	addwf	fsr2l,f,c
  7448  004914  502C               	movf	clust2sect@fs+1,w,c
  7449  004916  22DA               	addwfc	fsr2h,f,c
  7450  004918  50DF               	movf	indf2,w,c
  7451  00491A  6E2A               	movwf	(??_clust2sect+4)& (0+255),c
  7452  00491C  502A               	movf	??_clust2sect+4,w,c
  7453  00491E  6E16               	movwf	___lmul@multiplier,c
  7454  004920  6A17               	clrf	___lmul@multiplier+1,c
  7455  004922  6A18               	clrf	___lmul@multiplier+2,c
  7456  004924  6A19               	clrf	___lmul@multiplier+3,c
  7457  004926  C022  F01A         	movff	clust2sect@clust,___lmul@multiplicand
  7458  00492A  C023  F01B         	movff	clust2sect@clust+1,___lmul@multiplicand+1
  7459  00492E  C024  F01C         	movff	clust2sect@clust+2,___lmul@multiplicand+2
  7460  004932  C025  F01D         	movff	clust2sect@clust+3,___lmul@multiplicand+3
  7461  004936  ECC4  F028         	call	___lmul	;wreg free
  7462  00493A  5026               	movf	??_clust2sect,w,c
  7463  00493C  2416               	addwf	?___lmul,w,c
  7464  00493E  6E22               	movwf	?_clust2sect,c
  7465  004940  5027               	movf	??_clust2sect+1,w,c
  7466  004942  2017               	addwfc	?___lmul+1,w,c
  7467  004944  6E23               	movwf	?_clust2sect+1,c
  7468  004946  5028               	movf	??_clust2sect+2,w,c
  7469  004948  2018               	addwfc	?___lmul+2,w,c
  7470  00494A  6E24               	movwf	?_clust2sect+2,c
  7471  00494C  5029               	movf	??_clust2sect+3,w,c
  7472  00494E  2019               	addwfc	?___lmul+3,w,c
  7473  004950  6E25               	movwf	?_clust2sect+3,c
  7474  004952  0012               	return	
  7475  004954                     __end_of_clust2sect:
  7476                           	opt stack 0
  7477                           tosu	equ	0xFFF
  7478                           tosh	equ	0xFFE
  7479                           tosl	equ	0xFFD
  7480                           pclath	equ	0xFFA
  7481                           tblptru	equ	0xFF8
  7482                           tblptrh	equ	0xFF7
  7483                           tblptrl	equ	0xFF6
  7484                           tablat	equ	0xFF5
  7485                           prodh	equ	0xFF4
  7486                           prodl	equ	0xFF3
  7487                           intcon	equ	0xFF2
  7488                           intcon2	equ	0xFF1
  7489                           intcon3	equ	0xFF0
  7490                           postinc0	equ	0xFEE
  7491                           wreg	equ	0xFE8
  7492                           indf1	equ	0xFE7
  7493                           postinc1	equ	0xFE6
  7494                           postdec1	equ	0xFE5
  7495                           fsr1h	equ	0xFE2
  7496                           fsr1l	equ	0xFE1
  7497                           indf2	equ	0xFDF
  7498                           postinc2	equ	0xFDE
  7499                           postdec2	equ	0xFDD
  7500                           fsr2h	equ	0xFDA
  7501                           fsr2l	equ	0xFD9
  7502                           status	equ	0xFD8
  7503                           
  7504 ;; *************** function _create_chain *****************
  7505 ;; Defined at:
  7506 ;;		line 282 in file "bibliotecas/tff.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;  clust           4  127[BANK0 ] unsigned long 
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;  ncl             4  149[BANK0 ] unsigned long 
  7511 ;;  scl             4  145[BANK0 ] unsigned long 
  7512 ;;  cstat           4  141[BANK0 ] unsigned long 
  7513 ;;  mcl             4  135[BANK0 ] unsigned long 
  7514 ;;  fs              2  139[BANK0 ] PTR struct _FATFS
  7515 ;;		 -> fs(552), NULL(0), 
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  4  127[BANK0 ] unsigned long 
  7518 ;; Registers used:
  7519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7525 ;;      Params:         0       4       0       0       0       0       0       0       0
  7526 ;;      Locals:         0      18       0       0       0       0       0       0       0
  7527 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7528 ;;      Totals:         0      26       0       0       0       0       0       0       0
  7529 ;;Total ram usage:       26 bytes
  7530 ;; Hardware stack levels used:    1
  7531 ;; Hardware stack levels required when called:   12
  7532 ;; This function calls:
  7533 ;;		_get_cluster
  7534 ;;		_put_cluster
  7535 ;; This function is called by:
  7536 ;;		_reserve_direntry
  7537 ;;		_f_write
  7538 ;;		_f_lseek
  7539 ;;		_f_mkdir
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543                           	psect	text21
  7544  0030B6                     __ptext21:
  7545                           	opt stack 0
  7546  0030B6                     _create_chain:
  7547                           	opt stack 14
  7548                           
  7549                           ;tff.c: 286: CLUST cstat, ncl, scl, mcl;
  7550                           ;tff.c: 287: FATFS *fs = FatFs;
  7551                           
  7552                           ;incstack = 0
  7553  0030B6  C035  F0EB         	movff	_FatFs,create_chain@fs
  7554  0030BA  C036  F0EC         	movff	_FatFs+1,create_chain@fs+1
  7555                           
  7556                           ;tff.c: 290: mcl = fs->max_clust;
  7557  0030BE  0100               	movlb	0	; () banked
  7558  0030C0  EE20 F018          	lfsr	2,24
  7559  0030C4  51EB               	movf	create_chain@fs& (0+255),w,b
  7560  0030C6  26D9               	addwf	fsr2l,f,c
  7561  0030C8  51EC               	movf	(create_chain@fs+1)& (0+255),w,b
  7562  0030CA  22DA               	addwfc	fsr2h,f,c
  7563  0030CC  CFDE F0E7          	movff	postinc2,create_chain@mcl
  7564  0030D0  CFDE F0E8          	movff	postinc2,create_chain@mcl+1
  7565  0030D4  CFDE F0E9          	movff	postinc2,create_chain@mcl+2
  7566  0030D8  CFDE F0EA          	movff	postinc2,create_chain@mcl+3
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;tff.c: 291: if (clust == 0) {
  7570  0030DC  0100               	movlb	0	; () banked
  7571  0030DE  51DF               	movf	create_chain@clust& (0+255),w,b
  7572  0030E0  0100               	movlb	0	; () banked
  7573  0030E2  11E0               	iorwf	(create_chain@clust+1)& (0+255),w,b
  7574  0030E4  0100               	movlb	0	; () banked
  7575  0030E6  11E1               	iorwf	(create_chain@clust+2)& (0+255),w,b
  7576  0030E8  0100               	movlb	0	; () banked
  7577  0030EA  11E2               	iorwf	(create_chain@clust+3)& (0+255),w,b
  7578  0030EC  A4D8               	btfss	status,2,c
  7579  0030EE  D037               	goto	l11689
  7580                           
  7581                           ; BSR set to: 0
  7582                           ;tff.c: 292: scl = fs->last_clust;
  7583  0030F0  0100               	movlb	0	; () banked
  7584  0030F2  EE20 F01C          	lfsr	2,28
  7585  0030F6  51EB               	movf	create_chain@fs& (0+255),w,b
  7586  0030F8  26D9               	addwf	fsr2l,f,c
  7587  0030FA  51EC               	movf	(create_chain@fs+1)& (0+255),w,b
  7588  0030FC  22DA               	addwfc	fsr2h,f,c
  7589  0030FE  CFDE F0F1          	movff	postinc2,create_chain@scl
  7590  003102  CFDE F0F2          	movff	postinc2,create_chain@scl+1
  7591  003106  CFDE F0F3          	movff	postinc2,create_chain@scl+2
  7592  00310A  CFDE F0F4          	movff	postinc2,create_chain@scl+3
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;tff.c: 293: if (scl < 2 || scl >= mcl) scl = 1;
  7596  00310E  0100               	movlb	0	; () banked
  7597  003110  51F4               	movf	(create_chain@scl+3)& (0+255),w,b
  7598  003112  0100               	movlb	0	; () banked
  7599  003114  11F3               	iorwf	(create_chain@scl+2)& (0+255),w,b
  7600  003116  0100               	movlb	0	; () banked
  7601  003118  11F2               	iorwf	(create_chain@scl+1)& (0+255),w,b
  7602  00311A  E105               	bnz	u12600
  7603  00311C  0E02               	movlw	2
  7604  00311E  0100               	movlb	0	; () banked
  7605  003120  5DF1               	subwf	create_chain@scl& (0+255),w,b
  7606  003122  A0D8               	btfss	status,0,c
  7607  003124  D012               	goto	l11687
  7608  003126                     u12600:
  7609                           
  7610                           ; BSR set to: 0
  7611  003126  0100               	movlb	0	; () banked
  7612  003128  51E7               	movf	create_chain@mcl& (0+255),w,b
  7613  00312A  0100               	movlb	0	; () banked
  7614  00312C  5DF1               	subwf	create_chain@scl& (0+255),w,b
  7615  00312E  0100               	movlb	0	; () banked
  7616  003130  51E8               	movf	(create_chain@mcl+1)& (0+255),w,b
  7617  003132  0100               	movlb	0	; () banked
  7618  003134  59F2               	subwfb	(create_chain@scl+1)& (0+255),w,b
  7619  003136  0100               	movlb	0	; () banked
  7620  003138  51E9               	movf	(create_chain@mcl+2)& (0+255),w,b
  7621  00313A  0100               	movlb	0	; () banked
  7622  00313C  59F3               	subwfb	(create_chain@scl+2)& (0+255),w,b
  7623  00313E  0100               	movlb	0	; () banked
  7624  003140  51EA               	movf	(create_chain@mcl+3)& (0+255),w,b
  7625  003142  0100               	movlb	0	; () banked
  7626  003144  59F4               	subwfb	(create_chain@scl+3)& (0+255),w,b
  7627  003146  A0D8               	btfss	status,0,c
  7628  003148  D055               	goto	l610
  7629  00314A                     l11687:
  7630                           
  7631                           ; BSR set to: 0
  7632  00314A  0E01               	movlw	1
  7633  00314C  0100               	movlb	0	; () banked
  7634  00314E  6FF1               	movwf	create_chain@scl& (0+255),b
  7635  003150  0E00               	movlw	0
  7636  003152  6FF2               	movwf	(create_chain@scl+1)& (0+255),b
  7637  003154  0E00               	movlw	0
  7638  003156  6FF3               	movwf	(create_chain@scl+2)& (0+255),b
  7639  003158  0E00               	movlw	0
  7640  00315A  6FF4               	movwf	(create_chain@scl+3)& (0+255),b
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;tff.c: 294: }
  7644  00315C  D04B               	goto	l610
  7645  00315E                     l11689:
  7646                           
  7647                           ; BSR set to: 0
  7648                           ;tff.c: 295: else {
  7649                           ;tff.c: 296: cstat = get_cluster(clust);
  7650  00315E  C0DF  F0A5         	movff	create_chain@clust,get_cluster@clust
  7651  003162  C0E0  F0A6         	movff	create_chain@clust+1,get_cluster@clust+1
  7652  003166  C0E1  F0A7         	movff	create_chain@clust+2,get_cluster@clust+2
  7653  00316A  C0E2  F0A8         	movff	create_chain@clust+3,get_cluster@clust+3
  7654  00316E  ECCC  F009         	call	_get_cluster	;wreg free
  7655  003172  C0A5  F0ED         	movff	?_get_cluster,create_chain@cstat
  7656  003176  C0A6  F0EE         	movff	?_get_cluster+1,create_chain@cstat+1
  7657  00317A  C0A7  F0EF         	movff	?_get_cluster+2,create_chain@cstat+2
  7658  00317E  C0A8  F0F0         	movff	?_get_cluster+3,create_chain@cstat+3
  7659                           
  7660                           ;tff.c: 297: if (cstat < 2) return 1;
  7661  003182  0100               	movlb	0	; () banked
  7662  003184  51F0               	movf	(create_chain@cstat+3)& (0+255),w,b
  7663  003186  0100               	movlb	0	; () banked
  7664  003188  11EF               	iorwf	(create_chain@cstat+2)& (0+255),w,b
  7665  00318A  0100               	movlb	0	; () banked
  7666  00318C  11EE               	iorwf	(create_chain@cstat+1)& (0+255),w,b
  7667  00318E  E10F               	bnz	l11697
  7668  003190  0E02               	movlw	2
  7669  003192  0100               	movlb	0	; () banked
  7670  003194  5DED               	subwf	create_chain@cstat& (0+255),w,b
  7671  003196  B0D8               	btfsc	status,0,c
  7672  003198  D00A               	goto	l11697
  7673                           
  7674                           ; BSR set to: 0
  7675  00319A  0E01               	movlw	1
  7676  00319C  0100               	movlb	0	; () banked
  7677  00319E  6FDF               	movwf	?_create_chain& (0+255),b
  7678  0031A0  0E00               	movlw	0
  7679  0031A2  6FE0               	movwf	(?_create_chain+1)& (0+255),b
  7680  0031A4  0E00               	movlw	0
  7681  0031A6  6FE1               	movwf	(?_create_chain+2)& (0+255),b
  7682  0031A8  0E00               	movlw	0
  7683  0031AA  6FE2               	movwf	(?_create_chain+3)& (0+255),b
  7684                           
  7685                           ; BSR set to: 0
  7686  0031AC  0012               	return	
  7687  0031AE                     l11697:
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;tff.c: 298: if (cstat < mcl) return cstat;
  7691  0031AE  0100               	movlb	0	; () banked
  7692  0031B0  51E7               	movf	create_chain@mcl& (0+255),w,b
  7693  0031B2  0100               	movlb	0	; () banked
  7694  0031B4  5DED               	subwf	create_chain@cstat& (0+255),w,b
  7695  0031B6  0100               	movlb	0	; () banked
  7696  0031B8  51E8               	movf	(create_chain@mcl+1)& (0+255),w,b
  7697  0031BA  0100               	movlb	0	; () banked
  7698  0031BC  59EE               	subwfb	(create_chain@cstat+1)& (0+255),w,b
  7699  0031BE  0100               	movlb	0	; () banked
  7700  0031C0  51E9               	movf	(create_chain@mcl+2)& (0+255),w,b
  7701  0031C2  0100               	movlb	0	; () banked
  7702  0031C4  59EF               	subwfb	(create_chain@cstat+2)& (0+255),w,b
  7703  0031C6  0100               	movlb	0	; () banked
  7704  0031C8  51EA               	movf	(create_chain@mcl+3)& (0+255),w,b
  7705  0031CA  0100               	movlb	0	; () banked
  7706  0031CC  59F0               	subwfb	(create_chain@cstat+3)& (0+255),w,b
  7707  0031CE  B0D8               	btfsc	status,0,c
  7708  0031D0  D009               	goto	l613
  7709                           
  7710                           ; BSR set to: 0
  7711  0031D2  C0ED  F0DF         	movff	create_chain@cstat,?_create_chain
  7712  0031D6  C0EE  F0E0         	movff	create_chain@cstat+1,?_create_chain+1
  7713  0031DA  C0EF  F0E1         	movff	create_chain@cstat+2,?_create_chain+2
  7714  0031DE  C0F0  F0E2         	movff	create_chain@cstat+3,?_create_chain+3
  7715  0031E2  0012               	return	
  7716  0031E4                     l613:
  7717                           
  7718                           ; BSR set to: 0
  7719                           ;tff.c: 299: scl = clust;
  7720  0031E4  C0DF  F0F1         	movff	create_chain@clust,create_chain@scl
  7721  0031E8  C0E0  F0F2         	movff	create_chain@clust+1,create_chain@scl+1
  7722  0031EC  C0E1  F0F3         	movff	create_chain@clust+2,create_chain@scl+2
  7723  0031F0  C0E2  F0F4         	movff	create_chain@clust+3,create_chain@scl+3
  7724  0031F4                     l610:
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;tff.c: 300: }
  7728                           ;tff.c: 302: ncl = scl;
  7729  0031F4  C0F1  F0F5         	movff	create_chain@scl,create_chain@ncl
  7730  0031F8  C0F2  F0F6         	movff	create_chain@scl+1,create_chain@ncl+1
  7731  0031FC  C0F3  F0F7         	movff	create_chain@scl+2,create_chain@ncl+2
  7732  003200  C0F4  F0F8         	movff	create_chain@scl+3,create_chain@ncl+3
  7733  003204                     l11701:
  7734                           
  7735                           ; BSR set to: 0
  7736                           ;tff.c: 304: ncl++;
  7737  003204  0E01               	movlw	1
  7738  003206  0100               	movlb	0	; () banked
  7739  003208  27F5               	addwf	create_chain@ncl& (0+255),f,b
  7740  00320A  0E00               	movlw	0
  7741  00320C  23F6               	addwfc	(create_chain@ncl+1)& (0+255),f,b
  7742  00320E  23F7               	addwfc	(create_chain@ncl+2)& (0+255),f,b
  7743  003210  23F8               	addwfc	(create_chain@ncl+3)& (0+255),f,b
  7744                           
  7745                           ;tff.c: 305: if (ncl >= mcl) {
  7746  003212  0100               	movlb	0	; () banked
  7747  003214  51E7               	movf	create_chain@mcl& (0+255),w,b
  7748  003216  0100               	movlb	0	; () banked
  7749  003218  5DF5               	subwf	create_chain@ncl& (0+255),w,b
  7750  00321A  0100               	movlb	0	; () banked
  7751  00321C  51E8               	movf	(create_chain@mcl+1)& (0+255),w,b
  7752  00321E  0100               	movlb	0	; () banked
  7753  003220  59F6               	subwfb	(create_chain@ncl+1)& (0+255),w,b
  7754  003222  0100               	movlb	0	; () banked
  7755  003224  51E9               	movf	(create_chain@mcl+2)& (0+255),w,b
  7756  003226  0100               	movlb	0	; () banked
  7757  003228  59F7               	subwfb	(create_chain@ncl+2)& (0+255),w,b
  7758  00322A  0100               	movlb	0	; () banked
  7759  00322C  51EA               	movf	(create_chain@mcl+3)& (0+255),w,b
  7760  00322E  0100               	movlb	0	; () banked
  7761  003230  59F8               	subwfb	(create_chain@ncl+3)& (0+255),w,b
  7762  003232  A0D8               	btfss	status,0,c
  7763  003234  D025               	goto	l11711
  7764                           
  7765                           ; BSR set to: 0
  7766                           ;tff.c: 306: ncl = 2;
  7767  003236  0E02               	movlw	2
  7768  003238  0100               	movlb	0	; () banked
  7769  00323A  6FF5               	movwf	create_chain@ncl& (0+255),b
  7770  00323C  0E00               	movlw	0
  7771  00323E  6FF6               	movwf	(create_chain@ncl+1)& (0+255),b
  7772  003240  0E00               	movlw	0
  7773  003242  6FF7               	movwf	(create_chain@ncl+2)& (0+255),b
  7774  003244  0E00               	movlw	0
  7775  003246  6FF8               	movwf	(create_chain@ncl+3)& (0+255),b
  7776                           
  7777                           ; BSR set to: 0
  7778                           ;tff.c: 307: if (ncl > scl) return 0;
  7779  003248  0100               	movlb	0	; () banked
  7780  00324A  51F5               	movf	create_chain@ncl& (0+255),w,b
  7781  00324C  0100               	movlb	0	; () banked
  7782  00324E  5DF1               	subwf	create_chain@scl& (0+255),w,b
  7783  003250  0100               	movlb	0	; () banked
  7784  003252  51F6               	movf	(create_chain@ncl+1)& (0+255),w,b
  7785  003254  0100               	movlb	0	; () banked
  7786  003256  59F2               	subwfb	(create_chain@scl+1)& (0+255),w,b
  7787  003258  0100               	movlb	0	; () banked
  7788  00325A  51F7               	movf	(create_chain@ncl+2)& (0+255),w,b
  7789  00325C  0100               	movlb	0	; () banked
  7790  00325E  59F3               	subwfb	(create_chain@scl+2)& (0+255),w,b
  7791  003260  0100               	movlb	0	; () banked
  7792  003262  51F8               	movf	(create_chain@ncl+3)& (0+255),w,b
  7793  003264  0100               	movlb	0	; () banked
  7794  003266  59F4               	subwfb	(create_chain@scl+3)& (0+255),w,b
  7795  003268  B0D8               	btfsc	status,0,c
  7796  00326A  D00A               	goto	l11711
  7797                           
  7798                           ; BSR set to: 0
  7799  00326C  0E00               	movlw	0
  7800  00326E  0100               	movlb	0	; () banked
  7801  003270  6FDF               	movwf	?_create_chain& (0+255),b
  7802  003272  0E00               	movlw	0
  7803  003274  6FE0               	movwf	(?_create_chain+1)& (0+255),b
  7804  003276  0E00               	movlw	0
  7805  003278  6FE1               	movwf	(?_create_chain+2)& (0+255),b
  7806  00327A  0E00               	movlw	0
  7807  00327C  6FE2               	movwf	(?_create_chain+3)& (0+255),b
  7808                           
  7809                           ; BSR set to: 0
  7810  00327E  0012               	return	
  7811  003280                     l11711:
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;tff.c: 308: }
  7815                           ;tff.c: 309: cstat = get_cluster(ncl);
  7816  003280  C0F5  F0A5         	movff	create_chain@ncl,get_cluster@clust
  7817  003284  C0F6  F0A6         	movff	create_chain@ncl+1,get_cluster@clust+1
  7818  003288  C0F7  F0A7         	movff	create_chain@ncl+2,get_cluster@clust+2
  7819  00328C  C0F8  F0A8         	movff	create_chain@ncl+3,get_cluster@clust+3
  7820  003290  ECCC  F009         	call	_get_cluster	;wreg free
  7821  003294  C0A5  F0ED         	movff	?_get_cluster,create_chain@cstat
  7822  003298  C0A6  F0EE         	movff	?_get_cluster+1,create_chain@cstat+1
  7823  00329C  C0A7  F0EF         	movff	?_get_cluster+2,create_chain@cstat+2
  7824  0032A0  C0A8  F0F0         	movff	?_get_cluster+3,create_chain@cstat+3
  7825                           
  7826                           ;tff.c: 310: if (cstat == 0) break;
  7827  0032A4  0100               	movlb	0	; () banked
  7828  0032A6  51ED               	movf	create_chain@cstat& (0+255),w,b
  7829  0032A8  0100               	movlb	0	; () banked
  7830  0032AA  11EE               	iorwf	(create_chain@cstat+1)& (0+255),w,b
  7831  0032AC  0100               	movlb	0	; () banked
  7832  0032AE  11EF               	iorwf	(create_chain@cstat+2)& (0+255),w,b
  7833  0032B0  0100               	movlb	0	; () banked
  7834  0032B2  11F0               	iorwf	(create_chain@cstat+3)& (0+255),w,b
  7835  0032B4  B4D8               	btfsc	status,2,c
  7836  0032B6  D033               	goto	l11729
  7837                           
  7838                           ; BSR set to: 0
  7839                           ;tff.c: 311: if (cstat == 1) return 1;
  7840                           
  7841                           ; BSR set to: 0
  7842                           
  7843                           ; BSR set to: 0
  7844  0032B8  0100               	movlb	0	; () banked
  7845  0032BA  05ED               	decf	create_chain@cstat& (0+255),w,b
  7846  0032BC  0100               	movlb	0	; () banked
  7847  0032BE  11EE               	iorwf	(create_chain@cstat+1)& (0+255),w,b
  7848  0032C0  0100               	movlb	0	; () banked
  7849  0032C2  11EF               	iorwf	(create_chain@cstat+2)& (0+255),w,b
  7850  0032C4  0100               	movlb	0	; () banked
  7851  0032C6  11F0               	iorwf	(create_chain@cstat+3)& (0+255),w,b
  7852  0032C8  A4D8               	btfss	status,2,c
  7853  0032CA  D00A               	goto	l11723
  7854                           
  7855                           ; BSR set to: 0
  7856  0032CC  0E01               	movlw	1
  7857  0032CE  0100               	movlb	0	; () banked
  7858  0032D0  6FDF               	movwf	?_create_chain& (0+255),b
  7859  0032D2  0E00               	movlw	0
  7860  0032D4  6FE0               	movwf	(?_create_chain+1)& (0+255),b
  7861  0032D6  0E00               	movlw	0
  7862  0032D8  6FE1               	movwf	(?_create_chain+2)& (0+255),b
  7863  0032DA  0E00               	movlw	0
  7864  0032DC  6FE2               	movwf	(?_create_chain+3)& (0+255),b
  7865                           
  7866                           ; BSR set to: 0
  7867  0032DE  0012               	return	
  7868  0032E0                     l11723:
  7869                           
  7870                           ; BSR set to: 0
  7871                           ;tff.c: 312: if (ncl == scl) return 0;
  7872  0032E0  0100               	movlb	0	; () banked
  7873  0032E2  51F1               	movf	create_chain@scl& (0+255),w,b
  7874  0032E4  0100               	movlb	0	; () banked
  7875  0032E6  19F5               	xorwf	create_chain@ncl& (0+255),w,b
  7876  0032E8  E18D               	bnz	l11701
  7877  0032EA  0100               	movlb	0	; () banked
  7878  0032EC  51F2               	movf	(create_chain@scl+1)& (0+255),w,b
  7879  0032EE  0100               	movlb	0	; () banked
  7880  0032F0  19F6               	xorwf	(create_chain@ncl+1)& (0+255),w,b
  7881  0032F2  E188               	bnz	l11701
  7882  0032F4  0100               	movlb	0	; () banked
  7883  0032F6  51F3               	movf	(create_chain@scl+2)& (0+255),w,b
  7884  0032F8  0100               	movlb	0	; () banked
  7885  0032FA  19F7               	xorwf	(create_chain@ncl+2)& (0+255),w,b
  7886  0032FC  E183               	bnz	l11701
  7887  0032FE  0100               	movlb	0	; () banked
  7888  003300  51F4               	movf	(create_chain@scl+3)& (0+255),w,b
  7889  003302  0100               	movlb	0	; () banked
  7890  003304  19F8               	xorwf	(create_chain@ncl+3)& (0+255),w,b
  7891  003306  A4D8               	btfss	status,2,c
  7892  003308  D77D               	goto	l11701
  7893                           
  7894                           ; BSR set to: 0
  7895  00330A  0E00               	movlw	0
  7896  00330C  0100               	movlb	0	; () banked
  7897  00330E  6FDF               	movwf	?_create_chain& (0+255),b
  7898  003310  0E00               	movlw	0
  7899  003312  6FE0               	movwf	(?_create_chain+1)& (0+255),b
  7900  003314  0E00               	movlw	0
  7901  003316  6FE1               	movwf	(?_create_chain+2)& (0+255),b
  7902  003318  0E00               	movlw	0
  7903  00331A  6FE2               	movwf	(?_create_chain+3)& (0+255),b
  7904                           
  7905                           ; BSR set to: 0
  7906  00331C  0012               	return	
  7907  00331E                     l11729:
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;tff.c: 315: if (!put_cluster(ncl, (CLUST)0x0FFFFFFF)) return 1;
  7911  00331E  C0F5  F0A5         	movff	create_chain@ncl,put_cluster@clust
  7912  003322  C0F6  F0A6         	movff	create_chain@ncl+1,put_cluster@clust+1
  7913  003326  C0F7  F0A7         	movff	create_chain@ncl+2,put_cluster@clust+2
  7914  00332A  C0F8  F0A8         	movff	create_chain@ncl+3,put_cluster@clust+3
  7915  00332E  0EFF               	movlw	255
  7916  003330  0100               	movlb	0	; () banked
  7917  003332  6FA9               	movwf	put_cluster@val& (0+255),b
  7918  003334  0EFF               	movlw	255
  7919  003336  6FAA               	movwf	(put_cluster@val+1)& (0+255),b
  7920  003338  0EFF               	movlw	255
  7921  00333A  6FAB               	movwf	(put_cluster@val+2)& (0+255),b
  7922  00333C  0E0F               	movlw	15
  7923  00333E  6FAC               	movwf	(put_cluster@val+3)& (0+255),b
  7924  003340  ECA9  F00F         	call	_put_cluster	;wreg free
  7925  003344  0900               	iorlw	0
  7926  003346  A4D8               	btfss	status,2,c
  7927  003348  D00A               	goto	l11735
  7928  00334A  0E01               	movlw	1
  7929  00334C  0100               	movlb	0	; () banked
  7930  00334E  6FDF               	movwf	?_create_chain& (0+255),b
  7931  003350  0E00               	movlw	0
  7932  003352  6FE0               	movwf	(?_create_chain+1)& (0+255),b
  7933  003354  0E00               	movlw	0
  7934  003356  6FE1               	movwf	(?_create_chain+2)& (0+255),b
  7935  003358  0E00               	movlw	0
  7936  00335A  6FE2               	movwf	(?_create_chain+3)& (0+255),b
  7937                           
  7938                           ; BSR set to: 0
  7939  00335C  0012               	return	
  7940  00335E                     l11735:
  7941                           
  7942                           ;tff.c: 316: if (clust != 0 && !put_cluster(clust, ncl)) return 1;
  7943  00335E  0100               	movlb	0	; () banked
  7944  003360  51DF               	movf	create_chain@clust& (0+255),w,b
  7945  003362  0100               	movlb	0	; () banked
  7946  003364  11E0               	iorwf	(create_chain@clust+1)& (0+255),w,b
  7947  003366  0100               	movlb	0	; () banked
  7948  003368  11E1               	iorwf	(create_chain@clust+2)& (0+255),w,b
  7949  00336A  0100               	movlb	0	; () banked
  7950  00336C  11E2               	iorwf	(create_chain@clust+3)& (0+255),w,b
  7951  00336E  B4D8               	btfsc	status,2,c
  7952  003370  D01F               	goto	l11743
  7953                           
  7954                           ; BSR set to: 0
  7955  003372  C0DF  F0A5         	movff	create_chain@clust,put_cluster@clust
  7956  003376  C0E0  F0A6         	movff	create_chain@clust+1,put_cluster@clust+1
  7957  00337A  C0E1  F0A7         	movff	create_chain@clust+2,put_cluster@clust+2
  7958  00337E  C0E2  F0A8         	movff	create_chain@clust+3,put_cluster@clust+3
  7959  003382  C0F5  F0A9         	movff	create_chain@ncl,put_cluster@val
  7960  003386  C0F6  F0AA         	movff	create_chain@ncl+1,put_cluster@val+1
  7961  00338A  C0F7  F0AB         	movff	create_chain@ncl+2,put_cluster@val+2
  7962  00338E  C0F8  F0AC         	movff	create_chain@ncl+3,put_cluster@val+3
  7963  003392  ECA9  F00F         	call	_put_cluster	;wreg free
  7964  003396  0900               	iorlw	0
  7965  003398  A4D8               	btfss	status,2,c
  7966  00339A  D00A               	goto	l11743
  7967  00339C  0E01               	movlw	1
  7968  00339E  0100               	movlb	0	; () banked
  7969  0033A0  6FDF               	movwf	?_create_chain& (0+255),b
  7970  0033A2  0E00               	movlw	0
  7971  0033A4  6FE0               	movwf	(?_create_chain+1)& (0+255),b
  7972  0033A6  0E00               	movlw	0
  7973  0033A8  6FE1               	movwf	(?_create_chain+2)& (0+255),b
  7974  0033AA  0E00               	movlw	0
  7975  0033AC  6FE2               	movwf	(?_create_chain+3)& (0+255),b
  7976                           
  7977                           ; BSR set to: 0
  7978  0033AE  0012               	return	
  7979  0033B0                     l11743:
  7980                           
  7981                           ;tff.c: 318: fs->last_clust = ncl;
  7982  0033B0  0100               	movlb	0	; () banked
  7983  0033B2  EE20 F01C          	lfsr	2,28
  7984  0033B6  51EB               	movf	create_chain@fs& (0+255),w,b
  7985  0033B8  26D9               	addwf	fsr2l,f,c
  7986  0033BA  51EC               	movf	(create_chain@fs+1)& (0+255),w,b
  7987  0033BC  22DA               	addwfc	fsr2h,f,c
  7988  0033BE  C0F5  FFDE         	movff	create_chain@ncl,postinc2
  7989  0033C2  C0F6  FFDE         	movff	create_chain@ncl+1,postinc2
  7990  0033C6  C0F7  FFDE         	movff	create_chain@ncl+2,postinc2
  7991  0033CA  C0F8  FFDE         	movff	create_chain@ncl+3,postinc2
  7992                           
  7993                           ;tff.c: 319: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
  7994  0033CE  0100               	movlb	0	; () banked
  7995  0033D0  EE20 F020          	lfsr	2,32
  7996  0033D4  51EB               	movf	create_chain@fs& (0+255),w,b
  7997  0033D6  26D9               	addwf	fsr2l,f,c
  7998  0033D8  51EC               	movf	(create_chain@fs+1)& (0+255),w,b
  7999  0033DA  22DA               	addwfc	fsr2h,f,c
  8000  0033DC  28DE               	incf	postinc2,w,c
  8001  0033DE  E107               	bnz	u12720
  8002  0033E0  28DE               	incf	postinc2,w,c
  8003  0033E2  E105               	bnz	u12720
  8004  0033E4  28DE               	incf	postinc2,w,c
  8005  0033E6  E103               	bnz	u12720
  8006  0033E8  28DE               	incf	postinc2,w,c
  8007  0033EA  B4D8               	btfsc	status,2,c
  8008  0033EC  D00C               	goto	l11747
  8009  0033EE                     u12720:
  8010                           
  8011                           ; BSR set to: 0
  8012                           ;tff.c: 320: fs->free_clust--;
  8013  0033EE  0100               	movlb	0	; () banked
  8014  0033F0  EE20 F020          	lfsr	2,32
  8015  0033F4  51EB               	movf	create_chain@fs& (0+255),w,b
  8016  0033F6  26D9               	addwf	fsr2l,f,c
  8017  0033F8  51EC               	movf	(create_chain@fs+1)& (0+255),w,b
  8018  0033FA  22DA               	addwfc	fsr2h,f,c
  8019  0033FC  06DE               	decf	postinc2,f,c
  8020  0033FE  0E00               	movlw	0
  8021  003400  5ADE               	subwfb	postinc2,f,c
  8022  003402  5ADE               	subwfb	postinc2,f,c
  8023  003404  5ADE               	subwfb	postinc2,f,c
  8024  003406                     l11747:
  8025                           
  8026                           ; BSR set to: 0
  8027                           ;tff.c: 324: }
  8028                           ;tff.c: 326: return ncl;
  8029  003406  C0F5  F0DF         	movff	create_chain@ncl,?_create_chain
  8030  00340A  C0F6  F0E0         	movff	create_chain@ncl+1,?_create_chain+1
  8031  00340E  C0F7  F0E1         	movff	create_chain@ncl+2,?_create_chain+2
  8032  003412  C0F8  F0E2         	movff	create_chain@ncl+3,?_create_chain+3
  8033  003416  0012               	return	
  8034  003418                     __end_of_create_chain:
  8035                           	opt stack 0
  8036                           tosu	equ	0xFFF
  8037                           tosh	equ	0xFFE
  8038                           tosl	equ	0xFFD
  8039                           pclath	equ	0xFFA
  8040                           tblptru	equ	0xFF8
  8041                           tblptrh	equ	0xFF7
  8042                           tblptrl	equ	0xFF6
  8043                           tablat	equ	0xFF5
  8044                           prodh	equ	0xFF4
  8045                           prodl	equ	0xFF3
  8046                           intcon	equ	0xFF2
  8047                           intcon2	equ	0xFF1
  8048                           intcon3	equ	0xFF0
  8049                           postinc0	equ	0xFEE
  8050                           wreg	equ	0xFE8
  8051                           indf1	equ	0xFE7
  8052                           postinc1	equ	0xFE6
  8053                           postdec1	equ	0xFE5
  8054                           fsr1h	equ	0xFE2
  8055                           fsr1l	equ	0xFE1
  8056                           indf2	equ	0xFDF
  8057                           postinc2	equ	0xFDE
  8058                           postdec2	equ	0xFDD
  8059                           fsr2h	equ	0xFDA
  8060                           fsr2l	equ	0xFD9
  8061                           status	equ	0xFD8
  8062                           
  8063 ;; *************** function _remove_chain *****************
  8064 ;; Defined at:
  8065 ;;		line 249 in file "bibliotecas/tff.c"
  8066 ;; Parameters:    Size  Location     Type
  8067 ;;  clust           4  127[BANK0 ] unsigned long 
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;  nxt             4  135[BANK0 ] unsigned long 
  8070 ;;  fs              2  139[BANK0 ] PTR struct _FATFS
  8071 ;;		 -> fs(552), NULL(0), 
  8072 ;; Return value:  Size  Location     Type
  8073 ;;                  1    wreg      enum E105
  8074 ;; Registers used:
  8075 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8076 ;; Tracked objects:
  8077 ;;		On entry : 0/0
  8078 ;;		On exit  : 0/0
  8079 ;;		Unchanged: 0/0
  8080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8081 ;;      Params:         0       4       0       0       0       0       0       0       0
  8082 ;;      Locals:         0       6       0       0       0       0       0       0       0
  8083 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8084 ;;      Totals:         0      14       0       0       0       0       0       0       0
  8085 ;;Total ram usage:       14 bytes
  8086 ;; Hardware stack levels used:    1
  8087 ;; Hardware stack levels required when called:   12
  8088 ;; This function calls:
  8089 ;;		_get_cluster
  8090 ;;		_put_cluster
  8091 ;; This function is called by:
  8092 ;;		_f_open
  8093 ;;		_f_truncate
  8094 ;;		_f_unlink
  8095 ;; This function uses a non-reentrant model
  8096 ;;
  8097                           
  8098                           	psect	text22
  8099  00468A                     __ptext22:
  8100                           	opt stack 0
  8101  00468A                     _remove_chain:
  8102                           	opt stack 15
  8103                           
  8104                           ;tff.c: 253: CLUST nxt;
  8105                           ;tff.c: 254: FATFS *fs = FatFs;
  8106                           
  8107                           ; BSR set to: 0
  8108                           ;incstack = 0
  8109  00468A  C035  F0EB         	movff	_FatFs,remove_chain@fs
  8110  00468E  C036  F0EC         	movff	_FatFs+1,remove_chain@fs+1
  8111                           
  8112                           ;tff.c: 257: while (clust >= 2 && clust < fs->max_clust) {
  8113  004692  D05A               	goto	l12083
  8114  004694                     l12063:
  8115                           
  8116                           ;tff.c: 258: nxt = get_cluster(clust);
  8117  004694  C0DF  F0A5         	movff	remove_chain@clust,get_cluster@clust
  8118  004698  C0E0  F0A6         	movff	remove_chain@clust+1,get_cluster@clust+1
  8119  00469C  C0E1  F0A7         	movff	remove_chain@clust+2,get_cluster@clust+2
  8120  0046A0  C0E2  F0A8         	movff	remove_chain@clust+3,get_cluster@clust+3
  8121  0046A4  ECCC  F009         	call	_get_cluster	;wreg free
  8122  0046A8  C0A5  F0E7         	movff	?_get_cluster,remove_chain@nxt
  8123  0046AC  C0A6  F0E8         	movff	?_get_cluster+1,remove_chain@nxt+1
  8124  0046B0  C0A7  F0E9         	movff	?_get_cluster+2,remove_chain@nxt+2
  8125  0046B4  C0A8  F0EA         	movff	?_get_cluster+3,remove_chain@nxt+3
  8126                           
  8127                           ;tff.c: 259: if (nxt == 1) return FALSE;
  8128  0046B8  0100               	movlb	0	; () banked
  8129  0046BA  05E7               	decf	remove_chain@nxt& (0+255),w,b
  8130  0046BC  0100               	movlb	0	; () banked
  8131  0046BE  11E8               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  8132  0046C0  0100               	movlb	0	; () banked
  8133  0046C2  11E9               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  8134  0046C4  0100               	movlb	0	; () banked
  8135  0046C6  11EA               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  8136  0046C8  A4D8               	btfss	status,2,c
  8137  0046CA  D002               	goto	l12071
  8138                           
  8139                           ; BSR set to: 0
  8140  0046CC  0E00               	movlw	0
  8141                           
  8142                           ; BSR set to: 0
  8143  0046CE  0012               	return	
  8144  0046D0                     l12071:
  8145                           
  8146                           ; BSR set to: 0
  8147                           ;tff.c: 260: if (!put_cluster(clust, 0)) return FALSE;
  8148  0046D0  C0DF  F0A5         	movff	remove_chain@clust,put_cluster@clust
  8149  0046D4  C0E0  F0A6         	movff	remove_chain@clust+1,put_cluster@clust+1
  8150  0046D8  C0E1  F0A7         	movff	remove_chain@clust+2,put_cluster@clust+2
  8151  0046DC  C0E2  F0A8         	movff	remove_chain@clust+3,put_cluster@clust+3
  8152  0046E0  0E00               	movlw	0
  8153  0046E2  0100               	movlb	0	; () banked
  8154  0046E4  6FA9               	movwf	put_cluster@val& (0+255),b
  8155  0046E6  0E00               	movlw	0
  8156  0046E8  6FAA               	movwf	(put_cluster@val+1)& (0+255),b
  8157  0046EA  0E00               	movlw	0
  8158  0046EC  6FAB               	movwf	(put_cluster@val+2)& (0+255),b
  8159  0046EE  0E00               	movlw	0
  8160  0046F0  6FAC               	movwf	(put_cluster@val+3)& (0+255),b
  8161  0046F2  ECA9  F00F         	call	_put_cluster	;wreg free
  8162  0046F6  0900               	iorlw	0
  8163  0046F8  A4D8               	btfss	status,2,c
  8164  0046FA  D002               	goto	l12077
  8165  0046FC  0E00               	movlw	0
  8166  0046FE  0012               	return	
  8167  004700                     l12077:
  8168                           
  8169                           ;tff.c: 261: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
  8170  004700  0100               	movlb	0	; () banked
  8171  004702  EE20 F020          	lfsr	2,32
  8172  004706  51EB               	movf	remove_chain@fs& (0+255),w,b
  8173  004708  26D9               	addwf	fsr2l,f,c
  8174  00470A  51EC               	movf	(remove_chain@fs+1)& (0+255),w,b
  8175  00470C  22DA               	addwfc	fsr2h,f,c
  8176  00470E  28DE               	incf	postinc2,w,c
  8177  004710  E107               	bnz	u13370
  8178  004712  28DE               	incf	postinc2,w,c
  8179  004714  E105               	bnz	u13370
  8180  004716  28DE               	incf	postinc2,w,c
  8181  004718  E103               	bnz	u13370
  8182  00471A  28DE               	incf	postinc2,w,c
  8183  00471C  B4D8               	btfsc	status,2,c
  8184  00471E  D00C               	goto	l12081
  8185  004720                     u13370:
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;tff.c: 262: fs->free_clust++;
  8189  004720  0100               	movlb	0	; () banked
  8190  004722  EE20 F020          	lfsr	2,32
  8191  004726  51EB               	movf	remove_chain@fs& (0+255),w,b
  8192  004728  26D9               	addwf	fsr2l,f,c
  8193  00472A  51EC               	movf	(remove_chain@fs+1)& (0+255),w,b
  8194  00472C  22DA               	addwfc	fsr2h,f,c
  8195  00472E  2ADE               	incf	postinc2,f,c
  8196  004730  0E00               	movlw	0
  8197  004732  22DE               	addwfc	postinc2,f,c
  8198  004734  22DE               	addwfc	postinc2,f,c
  8199  004736  22DE               	addwfc	postinc2,f,c
  8200  004738                     l12081:
  8201                           
  8202                           ; BSR set to: 0
  8203                           ;tff.c: 266: }
  8204                           ;tff.c: 267: clust = nxt;
  8205  004738  C0E7  F0DF         	movff	remove_chain@nxt,remove_chain@clust
  8206  00473C  C0E8  F0E0         	movff	remove_chain@nxt+1,remove_chain@clust+1
  8207  004740  C0E9  F0E1         	movff	remove_chain@nxt+2,remove_chain@clust+2
  8208  004744  C0EA  F0E2         	movff	remove_chain@nxt+3,remove_chain@clust+3
  8209  004748                     l12083:
  8210  004748  0100               	movlb	0	; () banked
  8211  00474A  51E2               	movf	(remove_chain@clust+3)& (0+255),w,b
  8212  00474C  0100               	movlb	0	; () banked
  8213  00474E  11E1               	iorwf	(remove_chain@clust+2)& (0+255),w,b
  8214  004750  0100               	movlb	0	; () banked
  8215  004752  11E0               	iorwf	(remove_chain@clust+1)& (0+255),w,b
  8216  004754  E105               	bnz	u13380
  8217  004756  0E02               	movlw	2
  8218  004758  0100               	movlb	0	; () banked
  8219  00475A  5DDF               	subwf	remove_chain@clust& (0+255),w,b
  8220  00475C  A0D8               	btfss	status,0,c
  8221  00475E  D015               	goto	l12087
  8222  004760                     u13380:
  8223                           
  8224                           ; BSR set to: 0
  8225  004760  0100               	movlb	0	; () banked
  8226  004762  EE20 F018          	lfsr	2,24
  8227  004766  51EB               	movf	remove_chain@fs& (0+255),w,b
  8228  004768  26D9               	addwf	fsr2l,f,c
  8229  00476A  51EC               	movf	(remove_chain@fs+1)& (0+255),w,b
  8230  00476C  22DA               	addwfc	fsr2h,f,c
  8231  00476E  50DE               	movf	postinc2,w,c
  8232  004770  0100               	movlb	0	; () banked
  8233  004772  5DDF               	subwf	remove_chain@clust& (0+255),w,b
  8234  004774  50DE               	movf	postinc2,w,c
  8235  004776  0100               	movlb	0	; () banked
  8236  004778  59E0               	subwfb	(remove_chain@clust+1)& (0+255),w,b
  8237  00477A  50DE               	movf	postinc2,w,c
  8238  00477C  0100               	movlb	0	; () banked
  8239  00477E  59E1               	subwfb	(remove_chain@clust+2)& (0+255),w,b
  8240  004780  50DE               	movf	postinc2,w,c
  8241  004782  0100               	movlb	0	; () banked
  8242  004784  59E2               	subwfb	(remove_chain@clust+3)& (0+255),w,b
  8243  004786  A0D8               	btfss	status,0,c
  8244  004788  D785               	goto	l12063
  8245  00478A                     l12087:
  8246                           
  8247                           ; BSR set to: 0
  8248                           ;tff.c: 268: }
  8249                           ;tff.c: 269: return TRUE;
  8250  00478A  0E01               	movlw	1
  8251  00478C  0012               	return	
  8252  00478E                     __end_of_remove_chain:
  8253                           	opt stack 0
  8254                           tosu	equ	0xFFF
  8255                           tosh	equ	0xFFE
  8256                           tosl	equ	0xFFD
  8257                           pclath	equ	0xFFA
  8258                           tblptru	equ	0xFF8
  8259                           tblptrh	equ	0xFF7
  8260                           tblptrl	equ	0xFF6
  8261                           tablat	equ	0xFF5
  8262                           prodh	equ	0xFF4
  8263                           prodl	equ	0xFF3
  8264                           intcon	equ	0xFF2
  8265                           intcon2	equ	0xFF1
  8266                           intcon3	equ	0xFF0
  8267                           postinc0	equ	0xFEE
  8268                           wreg	equ	0xFE8
  8269                           indf1	equ	0xFE7
  8270                           postinc1	equ	0xFE6
  8271                           postdec1	equ	0xFE5
  8272                           fsr1h	equ	0xFE2
  8273                           fsr1l	equ	0xFE1
  8274                           indf2	equ	0xFDF
  8275                           postinc2	equ	0xFDE
  8276                           postdec2	equ	0xFDD
  8277                           fsr2h	equ	0xFDA
  8278                           fsr2l	equ	0xFD9
  8279                           status	equ	0xFD8
  8280                           
  8281 ;; *************** function _put_cluster *****************
  8282 ;; Defined at:
  8283 ;;		line 197 in file "bibliotecas/tff.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;  clust           4   69[BANK0 ] unsigned long 
  8286 ;;  val             4   73[BANK0 ] unsigned long 
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;  fatsect         4   86[BANK0 ] unsigned long 
  8289 ;;  fs              2   94[BANK0 ] PTR struct _FATFS
  8290 ;;		 -> fs(552), NULL(0), 
  8291 ;;  p               2   92[BANK0 ] PTR unsigned char 
  8292 ;;		 -> fs.win(512), fs(552), NULL(0), 
  8293 ;;  bc              2   90[BANK0 ] unsigned short 
  8294 ;; Return value:  Size  Location     Type
  8295 ;;                  1    wreg      enum E105
  8296 ;; Registers used:
  8297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8303 ;;      Params:         0       8       0       0       0       0       0       0       0
  8304 ;;      Locals:         0      14       0       0       0       0       0       0       0
  8305 ;;      Temps:          0       5       0       0       0       0       0       0       0
  8306 ;;      Totals:         0      27       0       0       0       0       0       0       0
  8307 ;;Total ram usage:       27 bytes
  8308 ;; Hardware stack levels used:    1
  8309 ;; Hardware stack levels required when called:   11
  8310 ;; This function calls:
  8311 ;;		___wmul
  8312 ;;		_move_window
  8313 ;; This function is called by:
  8314 ;;		_remove_chain
  8315 ;;		_create_chain
  8316 ;;		_f_truncate
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           	psect	text23
  8321  001F52                     __ptext23:
  8322                           	opt stack 0
  8323  001F52                     _put_cluster:
  8324                           	opt stack 14
  8325                           
  8326                           ;tff.c: 202: WORD bc;
  8327                           ;tff.c: 203: BYTE *p;
  8328                           ;tff.c: 204: DWORD fatsect;
  8329                           ;tff.c: 205: FATFS *fs = FatFs;
  8330                           
  8331                           ;incstack = 0
  8332  001F52  C035  F0BE         	movff	_FatFs,put_cluster@fs
  8333  001F56  C036  F0BF         	movff	_FatFs+1,put_cluster@fs+1
  8334                           
  8335                           ;tff.c: 208: fatsect = fs->fatbase;
  8336  001F5A  0100               	movlb	0	; () banked
  8337  001F5C  EE20 F008          	lfsr	2,8
  8338  001F60  51BE               	movf	put_cluster@fs& (0+255),w,b
  8339  001F62  26D9               	addwf	fsr2l,f,c
  8340  001F64  51BF               	movf	(put_cluster@fs+1)& (0+255),w,b
  8341  001F66  22DA               	addwfc	fsr2h,f,c
  8342  001F68  CFDE F0B6          	movff	postinc2,put_cluster@fatsect
  8343  001F6C  CFDE F0B7          	movff	postinc2,put_cluster@fatsect+1
  8344  001F70  CFDE F0B8          	movff	postinc2,put_cluster@fatsect+2
  8345  001F74  CFDE F0B9          	movff	postinc2,put_cluster@fatsect+3
  8346                           
  8347                           ;tff.c: 209: switch (fs->fs_type) {
  8348  001F78  D28E               	goto	l11593
  8349  001F7A                     l11533:
  8350                           
  8351                           ; BSR set to: 0
  8352                           ;tff.c: 211: bc = (WORD)clust * 3 / 2;
  8353  001F7A  C0A5  F016         	movff	put_cluster@clust,___wmul@multiplier
  8354  001F7E  C0A6  F017         	movff	put_cluster@clust+1,___wmul@multiplier+1
  8355  001F82  0E00               	movlw	0
  8356  001F84  6E19               	movwf	___wmul@multiplicand+1,c
  8357  001F86  0E03               	movlw	3
  8358  001F88  6E18               	movwf	___wmul@multiplicand,c
  8359  001F8A  EC2C  F02B         	call	___wmul	;wreg free
  8360  001F8E  90D8               	bcf	status,0,c
  8361  001F90  3017               	rrcf	?___wmul+1,w,c
  8362  001F92  0100               	movlb	0	; () banked
  8363  001F94  6FAD               	movwf	??_put_cluster& (0+255),b
  8364  001F96  3016               	rrcf	?___wmul,w,c
  8365  001F98  0100               	movlb	0	; () banked
  8366  001F9A  6FBA               	movwf	put_cluster@bc& (0+255),b
  8367  001F9C  C0AD  F0BB         	movff	??_put_cluster,put_cluster@bc+1
  8368                           
  8369                           ; BSR set to: 0
  8370                           ;tff.c: 212: if (!move_window(fatsect + bc / 512U)) return FALSE;
  8371  001FA0  C0BA  F0AD         	movff	put_cluster@bc,??_put_cluster
  8372  001FA4  C0BB  F0AE         	movff	put_cluster@bc+1,??_put_cluster+1
  8373  001FA8  0E09               	movlw	9
  8374  001FAA  0100               	movlb	0	; () banked
  8375  001FAC  6FAF               	movwf	(??_put_cluster+2)& (0+255),b
  8376  001FAE                     u12425:
  8377  001FAE  0100               	movlb	0	; () banked
  8378  001FB0  90D8               	bcf	status,0,c
  8379  001FB2  33AE               	rrcf	(??_put_cluster+1)& (0+255),f,b
  8380  001FB4  33AD               	rrcf	??_put_cluster& (0+255),f,b
  8381  001FB6  0100               	movlb	0	; () banked
  8382  001FB8  2FAF               	decfsz	(??_put_cluster+2)& (0+255),f,b
  8383  001FBA  D7F9               	goto	u12425
  8384  001FBC  0100               	movlb	0	; () banked
  8385  001FBE  51AD               	movf	??_put_cluster& (0+255),w,b
  8386  001FC0  0100               	movlb	0	; () banked
  8387  001FC2  25B6               	addwf	put_cluster@fatsect& (0+255),w,b
  8388  001FC4  0100               	movlb	0	; () banked
  8389  001FC6  6F8E               	movwf	move_window@sector& (0+255),b
  8390  001FC8  0100               	movlb	0	; () banked
  8391  001FCA  51AE               	movf	(??_put_cluster+1)& (0+255),w,b
  8392  001FCC  0100               	movlb	0	; () banked
  8393  001FCE  21B7               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
  8394  001FD0  0100               	movlb	0	; () banked
  8395  001FD2  6F8F               	movwf	(move_window@sector+1)& (0+255),b
  8396  001FD4  0E00               	movlw	0
  8397  001FD6  0100               	movlb	0	; () banked
  8398  001FD8  21B8               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
  8399  001FDA  0100               	movlb	0	; () banked
  8400  001FDC  6F90               	movwf	(move_window@sector+2)& (0+255),b
  8401  001FDE  0E00               	movlw	0
  8402  001FE0  0100               	movlb	0	; () banked
  8403  001FE2  21B9               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
  8404  001FE4  0100               	movlb	0	; () banked
  8405  001FE6  6F91               	movwf	(move_window@sector+3)& (0+255),b
  8406  001FE8  EC28  F01D         	call	_move_window	;wreg free
  8407  001FEC  0900               	iorlw	0
  8408  001FEE  A4D8               	btfss	status,2,c
  8409  001FF0  D002               	goto	l11541
  8410  001FF2  0E00               	movlw	0
  8411  001FF4  0012               	return	
  8412  001FF6                     l11541:
  8413                           
  8414                           ;tff.c: 213: p = &fs->win[bc % 512U];
  8415  001FF6  0EFF               	movlw	255
  8416  001FF8  0100               	movlb	0	; () banked
  8417  001FFA  6FAD               	movwf	??_put_cluster& (0+255),b
  8418  001FFC  0E01               	movlw	1
  8419  001FFE  0100               	movlb	0	; () banked
  8420  002000  6FAE               	movwf	(??_put_cluster+1)& (0+255),b
  8421  002002  C0BA  F0AF         	movff	put_cluster@bc,??_put_cluster+2
  8422  002006  C0BB  F0B0         	movff	put_cluster@bc+1,??_put_cluster+3
  8423  00200A  0100               	movlb	0	; () banked
  8424  00200C  51AD               	movf	??_put_cluster& (0+255),w,b
  8425  00200E  0100               	movlb	0	; () banked
  8426  002010  17AF               	andwf	(??_put_cluster+2)& (0+255),f,b
  8427  002012  0100               	movlb	0	; () banked
  8428  002014  51AE               	movf	(??_put_cluster+1)& (0+255),w,b
  8429  002016  0100               	movlb	0	; () banked
  8430  002018  17B0               	andwf	(??_put_cluster+3)& (0+255),f,b
  8431  00201A  0E28               	movlw	40
  8432  00201C  0100               	movlb	0	; () banked
  8433  00201E  27AF               	addwf	(??_put_cluster+2)& (0+255),f,b
  8434  002020  0E00               	movlw	0
  8435  002022  23B0               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8436  002024  0100               	movlb	0	; () banked
  8437  002026  51AF               	movf	(??_put_cluster+2)& (0+255),w,b
  8438  002028  0100               	movlb	0	; () banked
  8439  00202A  25BE               	addwf	put_cluster@fs& (0+255),w,b
  8440  00202C  0100               	movlb	0	; () banked
  8441  00202E  6FBC               	movwf	put_cluster@p& (0+255),b
  8442  002030  0100               	movlb	0	; () banked
  8443  002032  51B0               	movf	(??_put_cluster+3)& (0+255),w,b
  8444  002034  0100               	movlb	0	; () banked
  8445  002036  21BF               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8446  002038  0100               	movlb	0	; () banked
  8447  00203A  6FBD               	movwf	(put_cluster@p+1)& (0+255),b
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;tff.c: 214: *p = (clust & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
  8451  00203C  0100               	movlb	0	; () banked
  8452  00203E  B1A5               	btfsc	put_cluster@clust& (0+255),0,b
  8453  002040  D005               	goto	l11547
  8454                           
  8455                           ; BSR set to: 0
  8456  002042  C0A9  F0B2         	movff	put_cluster@val,_put_cluster$964
  8457  002046  0100               	movlb	0	; () banked
  8458  002048  6BB3               	clrf	(_put_cluster$964+1)& (0+255),b
  8459  00204A  D024               	goto	l11549
  8460  00204C                     l11547:
  8461                           
  8462                           ; BSR set to: 0
  8463  00204C  0100               	movlb	0	; () banked
  8464  00204E  51A9               	movf	put_cluster@val& (0+255),w,b
  8465  002050  0100               	movlb	0	; () banked
  8466  002052  6FAD               	movwf	??_put_cluster& (0+255),b
  8467  002054  6BAE               	clrf	(??_put_cluster+1)& (0+255),b
  8468  002056  0100               	movlb	0	; () banked
  8469  002058  3BAD               	swapf	??_put_cluster& (0+255),f,b
  8470  00205A  3BAE               	swapf	(??_put_cluster+1)& (0+255),f,b
  8471  00205C  0EF0               	movlw	240
  8472  00205E  17AE               	andwf	(??_put_cluster+1)& (0+255),f,b
  8473  002060  51AD               	movf	??_put_cluster& (0+255),w,b
  8474  002062  0B0F               	andlw	15
  8475  002064  13AE               	iorwf	(??_put_cluster+1)& (0+255),f,b
  8476  002066  0EF0               	movlw	240
  8477  002068  17AD               	andwf	??_put_cluster& (0+255),f,b
  8478  00206A  C0BC  FFD9         	movff	put_cluster@p,fsr2l
  8479  00206E  C0BD  FFDA         	movff	put_cluster@p+1,fsr2h
  8480  002072  50DF               	movf	indf2,w,c
  8481  002074  0B0F               	andlw	15
  8482  002076  0100               	movlb	0	; () banked
  8483  002078  6FAF               	movwf	(??_put_cluster+2)& (0+255),b
  8484  00207A  6BB0               	clrf	(??_put_cluster+3)& (0+255),b
  8485  00207C  0100               	movlb	0	; () banked
  8486  00207E  51AD               	movf	??_put_cluster& (0+255),w,b
  8487  002080  0100               	movlb	0	; () banked
  8488  002082  11AF               	iorwf	(??_put_cluster+2)& (0+255),w,b
  8489  002084  0100               	movlb	0	; () banked
  8490  002086  6FB2               	movwf	_put_cluster$964& (0+255),b
  8491  002088  0100               	movlb	0	; () banked
  8492  00208A  51AE               	movf	(??_put_cluster+1)& (0+255),w,b
  8493  00208C  0100               	movlb	0	; () banked
  8494  00208E  11B0               	iorwf	(??_put_cluster+3)& (0+255),w,b
  8495  002090  0100               	movlb	0	; () banked
  8496  002092  6FB3               	movwf	(_put_cluster$964+1)& (0+255),b
  8497  002094                     l11549:
  8498                           
  8499                           ; BSR set to: 0
  8500  002094  C0BC  FFD9         	movff	put_cluster@p,fsr2l
  8501  002098  C0BD  FFDA         	movff	put_cluster@p+1,fsr2h
  8502  00209C  C0B2  FFDF         	movff	_put_cluster$964,indf2
  8503                           
  8504                           ; BSR set to: 0
  8505                           ;tff.c: 215: bc++;
  8506  0020A0  0100               	movlb	0	; () banked
  8507  0020A2  4BBA               	infsnz	put_cluster@bc& (0+255),f,b
  8508  0020A4  2BBB               	incf	(put_cluster@bc+1)& (0+255),f,b
  8509                           
  8510                           ; BSR set to: 0
  8511                           ;tff.c: 216: fs->winflag = 1;
  8512  0020A6  0100               	movlb	0	; () banked
  8513  0020A8  EE20 F027          	lfsr	2,39
  8514  0020AC  51BE               	movf	put_cluster@fs& (0+255),w,b
  8515  0020AE  26D9               	addwf	fsr2l,f,c
  8516  0020B0  51BF               	movf	(put_cluster@fs+1)& (0+255),w,b
  8517  0020B2  22DA               	addwfc	fsr2h,f,c
  8518  0020B4  0E01               	movlw	1
  8519  0020B6  6EDF               	movwf	indf2,c
  8520                           
  8521                           ; BSR set to: 0
  8522                           ;tff.c: 217: if (!move_window(fatsect + bc / 512U)) return FALSE;
  8523  0020B8  C0BA  F0AD         	movff	put_cluster@bc,??_put_cluster
  8524  0020BC  C0BB  F0AE         	movff	put_cluster@bc+1,??_put_cluster+1
  8525  0020C0  0E09               	movlw	9
  8526  0020C2  0100               	movlb	0	; () banked
  8527  0020C4  6FAF               	movwf	(??_put_cluster+2)& (0+255),b
  8528  0020C6                     u12455:
  8529  0020C6  0100               	movlb	0	; () banked
  8530  0020C8  90D8               	bcf	status,0,c
  8531  0020CA  33AE               	rrcf	(??_put_cluster+1)& (0+255),f,b
  8532  0020CC  33AD               	rrcf	??_put_cluster& (0+255),f,b
  8533  0020CE  0100               	movlb	0	; () banked
  8534  0020D0  2FAF               	decfsz	(??_put_cluster+2)& (0+255),f,b
  8535  0020D2  D7F9               	goto	u12455
  8536  0020D4  0100               	movlb	0	; () banked
  8537  0020D6  51AD               	movf	??_put_cluster& (0+255),w,b
  8538  0020D8  0100               	movlb	0	; () banked
  8539  0020DA  25B6               	addwf	put_cluster@fatsect& (0+255),w,b
  8540  0020DC  0100               	movlb	0	; () banked
  8541  0020DE  6F8E               	movwf	move_window@sector& (0+255),b
  8542  0020E0  0100               	movlb	0	; () banked
  8543  0020E2  51AE               	movf	(??_put_cluster+1)& (0+255),w,b
  8544  0020E4  0100               	movlb	0	; () banked
  8545  0020E6  21B7               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
  8546  0020E8  0100               	movlb	0	; () banked
  8547  0020EA  6F8F               	movwf	(move_window@sector+1)& (0+255),b
  8548  0020EC  0E00               	movlw	0
  8549  0020EE  0100               	movlb	0	; () banked
  8550  0020F0  21B8               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
  8551  0020F2  0100               	movlb	0	; () banked
  8552  0020F4  6F90               	movwf	(move_window@sector+2)& (0+255),b
  8553  0020F6  0E00               	movlw	0
  8554  0020F8  0100               	movlb	0	; () banked
  8555  0020FA  21B9               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
  8556  0020FC  0100               	movlb	0	; () banked
  8557  0020FE  6F91               	movwf	(move_window@sector+3)& (0+255),b
  8558  002100  EC28  F01D         	call	_move_window	;wreg free
  8559  002104  0900               	iorlw	0
  8560  002106  A4D8               	btfss	status,2,c
  8561  002108  D002               	goto	l11561
  8562  00210A  0E00               	movlw	0
  8563  00210C  0012               	return	
  8564  00210E                     l11561:
  8565                           
  8566                           ;tff.c: 218: p = &fs->win[bc % 512U];
  8567  00210E  0EFF               	movlw	255
  8568  002110  0100               	movlb	0	; () banked
  8569  002112  6FAD               	movwf	??_put_cluster& (0+255),b
  8570  002114  0E01               	movlw	1
  8571  002116  0100               	movlb	0	; () banked
  8572  002118  6FAE               	movwf	(??_put_cluster+1)& (0+255),b
  8573  00211A  C0BA  F0AF         	movff	put_cluster@bc,??_put_cluster+2
  8574  00211E  C0BB  F0B0         	movff	put_cluster@bc+1,??_put_cluster+3
  8575  002122  0100               	movlb	0	; () banked
  8576  002124  51AD               	movf	??_put_cluster& (0+255),w,b
  8577  002126  0100               	movlb	0	; () banked
  8578  002128  17AF               	andwf	(??_put_cluster+2)& (0+255),f,b
  8579  00212A  0100               	movlb	0	; () banked
  8580  00212C  51AE               	movf	(??_put_cluster+1)& (0+255),w,b
  8581  00212E  0100               	movlb	0	; () banked
  8582  002130  17B0               	andwf	(??_put_cluster+3)& (0+255),f,b
  8583  002132  0E28               	movlw	40
  8584  002134  0100               	movlb	0	; () banked
  8585  002136  27AF               	addwf	(??_put_cluster+2)& (0+255),f,b
  8586  002138  0E00               	movlw	0
  8587  00213A  23B0               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8588  00213C  0100               	movlb	0	; () banked
  8589  00213E  51AF               	movf	(??_put_cluster+2)& (0+255),w,b
  8590  002140  0100               	movlb	0	; () banked
  8591  002142  25BE               	addwf	put_cluster@fs& (0+255),w,b
  8592  002144  0100               	movlb	0	; () banked
  8593  002146  6FBC               	movwf	put_cluster@p& (0+255),b
  8594  002148  0100               	movlb	0	; () banked
  8595  00214A  51B0               	movf	(??_put_cluster+3)& (0+255),w,b
  8596  00214C  0100               	movlb	0	; () banked
  8597  00214E  21BF               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8598  002150  0100               	movlb	0	; () banked
  8599  002152  6FBD               	movwf	(put_cluster@p+1)& (0+255),b
  8600                           
  8601                           ; BSR set to: 0
  8602                           ;tff.c: 219: *p = (clust & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x
      +                          0F));
  8603  002154  0100               	movlb	0	; () banked
  8604  002156  B1A5               	btfsc	put_cluster@clust& (0+255),0,b
  8605  002158  D020               	goto	l11567
  8606                           
  8607                           ; BSR set to: 0
  8608  00215A  C0A9  F0AD         	movff	put_cluster@val,??_put_cluster
  8609  00215E  C0AA  F0AE         	movff	put_cluster@val+1,??_put_cluster+1
  8610  002162  C0AB  F0AF         	movff	put_cluster@val+2,??_put_cluster+2
  8611  002166  C0AC  F0B0         	movff	put_cluster@val+3,??_put_cluster+3
  8612  00216A  C0AE  F0AD         	movff	??_put_cluster+1,??_put_cluster
  8613  00216E  C0AF  F0AE         	movff	??_put_cluster+2,??_put_cluster+1
  8614  002172  C0B0  F0AF         	movff	??_put_cluster+3,??_put_cluster+2
  8615  002176  0100               	movlb	0	; () banked
  8616  002178  6BB0               	clrf	(??_put_cluster+3)& (0+255),b
  8617  00217A  0E0F               	movlw	15
  8618  00217C  0100               	movlb	0	; () banked
  8619  00217E  17AD               	andwf	??_put_cluster& (0+255),f,b
  8620  002180  C0BC  FFD9         	movff	put_cluster@p,fsr2l
  8621  002184  C0BD  FFDA         	movff	put_cluster@p+1,fsr2h
  8622  002188  50DF               	movf	indf2,w,c
  8623  00218A  0BF0               	andlw	240
  8624  00218C  0100               	movlb	0	; () banked
  8625  00218E  11AD               	iorwf	??_put_cluster& (0+255),w,b
  8626  002190  0100               	movlb	0	; () banked
  8627  002192  6FB1               	movwf	(??_put_cluster+4)& (0+255),b
  8628  002194  0100               	movlb	0	; () banked
  8629  002196  51B1               	movf	(??_put_cluster+4)& (0+255),w,b
  8630  002198  D014               	goto	L4
  8631  00219A                     l11567:
  8632                           
  8633                           ; BSR set to: 0
  8634  00219A  C0A9  F0AD         	movff	put_cluster@val,??_put_cluster
  8635  00219E  C0AA  F0AE         	movff	put_cluster@val+1,??_put_cluster+1
  8636  0021A2  C0AB  F0AF         	movff	put_cluster@val+2,??_put_cluster+2
  8637  0021A6  C0AC  F0B0         	movff	put_cluster@val+3,??_put_cluster+3
  8638  0021AA  0E05               	movlw	5
  8639  0021AC  D006               	goto	u12480
  8640  0021AE                     u12485:
  8641  0021AE  0100               	movlb	0	; () banked
  8642  0021B0  90D8               	bcf	status,0,c
  8643  0021B2  33B0               	rrcf	(??_put_cluster+3)& (0+255),f,b
  8644  0021B4  33AF               	rrcf	(??_put_cluster+2)& (0+255),f,b
  8645  0021B6  33AE               	rrcf	(??_put_cluster+1)& (0+255),f,b
  8646  0021B8  33AD               	rrcf	??_put_cluster& (0+255),f,b
  8647  0021BA                     u12480:
  8648  0021BA  2EE8               	decfsz	wreg,f,c
  8649  0021BC  D7F8               	goto	u12485
  8650  0021BE  0100               	movlb	0	; () banked
  8651  0021C0  51AD               	movf	??_put_cluster& (0+255),w,b
  8652  0021C2                     L4:
  8653  0021C2  0100               	movlb	0	; () banked
  8654  0021C4  6FB4               	movwf	_put_cluster$965& (0+255),b
  8655  0021C6  6BB5               	clrf	(_put_cluster$965+1)& (0+255),b
  8656                           
  8657                           ; BSR set to: 0
  8658                           
  8659                           ; BSR set to: 0
  8660  0021C8  C0BC  FFD9         	movff	put_cluster@p,fsr2l
  8661  0021CC  C0BD  FFDA         	movff	put_cluster@p+1,fsr2h
  8662  0021D0  C0B4  FFDF         	movff	_put_cluster$965,indf2
  8663                           
  8664                           ;tff.c: 220: break;
  8665  0021D4  D172               	goto	l11595
  8666  0021D6                     l11571:
  8667                           
  8668                           ; BSR set to: 0
  8669                           ;tff.c: 223: if (!move_window(fatsect + clust / 256)) return FALSE;
  8670  0021D6  C0A5  F0AD         	movff	put_cluster@clust,??_put_cluster
  8671  0021DA  C0A6  F0AE         	movff	put_cluster@clust+1,??_put_cluster+1
  8672  0021DE  C0A7  F0AF         	movff	put_cluster@clust+2,??_put_cluster+2
  8673  0021E2  C0A8  F0B0         	movff	put_cluster@clust+3,??_put_cluster+3
  8674  0021E6  C0AE  F0AD         	movff	??_put_cluster+1,??_put_cluster
  8675  0021EA  C0AF  F0AE         	movff	??_put_cluster+2,??_put_cluster+1
  8676  0021EE  C0B0  F0AF         	movff	??_put_cluster+3,??_put_cluster+2
  8677  0021F2  0100               	movlb	0	; () banked
  8678  0021F4  6BB0               	clrf	(??_put_cluster+3)& (0+255),b
  8679  0021F6  0100               	movlb	0	; () banked
  8680  0021F8  51B6               	movf	put_cluster@fatsect& (0+255),w,b
  8681  0021FA  0100               	movlb	0	; () banked
  8682  0021FC  25AD               	addwf	??_put_cluster& (0+255),w,b
  8683  0021FE  0100               	movlb	0	; () banked
  8684  002200  6F8E               	movwf	move_window@sector& (0+255),b
  8685  002202  0100               	movlb	0	; () banked
  8686  002204  51B7               	movf	(put_cluster@fatsect+1)& (0+255),w,b
  8687  002206  0100               	movlb	0	; () banked
  8688  002208  21AE               	addwfc	(??_put_cluster+1)& (0+255),w,b
  8689  00220A  0100               	movlb	0	; () banked
  8690  00220C  6F8F               	movwf	(move_window@sector+1)& (0+255),b
  8691  00220E  0100               	movlb	0	; () banked
  8692  002210  51B8               	movf	(put_cluster@fatsect+2)& (0+255),w,b
  8693  002212  0100               	movlb	0	; () banked
  8694  002214  21AF               	addwfc	(??_put_cluster+2)& (0+255),w,b
  8695  002216  0100               	movlb	0	; () banked
  8696  002218  6F90               	movwf	(move_window@sector+2)& (0+255),b
  8697  00221A  0100               	movlb	0	; () banked
  8698  00221C  51B9               	movf	(put_cluster@fatsect+3)& (0+255),w,b
  8699  00221E  0100               	movlb	0	; () banked
  8700  002220  21B0               	addwfc	(??_put_cluster+3)& (0+255),w,b
  8701  002222  0100               	movlb	0	; () banked
  8702  002224  6F91               	movwf	(move_window@sector+3)& (0+255),b
  8703  002226  EC28  F01D         	call	_move_window	;wreg free
  8704  00222A  0900               	iorlw	0
  8705  00222C  A4D8               	btfss	status,2,c
  8706  00222E  D002               	goto	l11577
  8707  002230  0E00               	movlw	0
  8708  002232  0012               	return	
  8709  002234                     l11577:
  8710                           
  8711                           ;tff.c: 224: *(volatile BYTE*)(&fs->win[((WORD)clust * 2) % 512U])=(BYTE)((WORD)val); *(
      +                          volatile BYTE*)((&fs->win[((WORD)clust * 2) % 512U])+1)=(BYTE)((WORD)((WORD)val)>>8);
  8712  002234  0EFF               	movlw	255
  8713  002236  0100               	movlb	0	; () banked
  8714  002238  6FAD               	movwf	??_put_cluster& (0+255),b
  8715  00223A  0E01               	movlw	1
  8716  00223C  0100               	movlb	0	; () banked
  8717  00223E  6FAE               	movwf	(??_put_cluster+1)& (0+255),b
  8718  002240  C0A5  F0AF         	movff	put_cluster@clust,??_put_cluster+2
  8719  002244  C0A6  F0B0         	movff	put_cluster@clust+1,??_put_cluster+3
  8720  002248  90D8               	bcf	status,0,c
  8721  00224A  0100               	movlb	0	; () banked
  8722  00224C  37AF               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8723  00224E  37B0               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8724  002250  0100               	movlb	0	; () banked
  8725  002252  51AD               	movf	??_put_cluster& (0+255),w,b
  8726  002254  0100               	movlb	0	; () banked
  8727  002256  17AF               	andwf	(??_put_cluster+2)& (0+255),f,b
  8728  002258  0100               	movlb	0	; () banked
  8729  00225A  51AE               	movf	(??_put_cluster+1)& (0+255),w,b
  8730  00225C  0100               	movlb	0	; () banked
  8731  00225E  17B0               	andwf	(??_put_cluster+3)& (0+255),f,b
  8732  002260  0E28               	movlw	40
  8733  002262  0100               	movlb	0	; () banked
  8734  002264  27AF               	addwf	(??_put_cluster+2)& (0+255),f,b
  8735  002266  0E00               	movlw	0
  8736  002268  23B0               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8737  00226A  0100               	movlb	0	; () banked
  8738  00226C  51AF               	movf	(??_put_cluster+2)& (0+255),w,b
  8739  00226E  0100               	movlb	0	; () banked
  8740  002270  25BE               	addwf	put_cluster@fs& (0+255),w,b
  8741  002272  6ED9               	movwf	fsr2l,c
  8742  002274  0100               	movlb	0	; () banked
  8743  002276  51B0               	movf	(??_put_cluster+3)& (0+255),w,b
  8744  002278  0100               	movlb	0	; () banked
  8745  00227A  21BF               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8746  00227C  6EDA               	movwf	fsr2h,c
  8747  00227E  C0A9  FFDF         	movff	put_cluster@val,indf2
  8748  002282  0EFF               	movlw	255
  8749  002284  0100               	movlb	0	; () banked
  8750  002286  6FAD               	movwf	??_put_cluster& (0+255),b
  8751  002288  0E01               	movlw	1
  8752  00228A  0100               	movlb	0	; () banked
  8753  00228C  6FAE               	movwf	(??_put_cluster+1)& (0+255),b
  8754  00228E  C0A5  F0AF         	movff	put_cluster@clust,??_put_cluster+2
  8755  002292  C0A6  F0B0         	movff	put_cluster@clust+1,??_put_cluster+3
  8756  002296  90D8               	bcf	status,0,c
  8757  002298  0100               	movlb	0	; () banked
  8758  00229A  37AF               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8759  00229C  37B0               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8760  00229E  0100               	movlb	0	; () banked
  8761  0022A0  51AD               	movf	??_put_cluster& (0+255),w,b
  8762  0022A2  0100               	movlb	0	; () banked
  8763  0022A4  17AF               	andwf	(??_put_cluster+2)& (0+255),f,b
  8764  0022A6  0100               	movlb	0	; () banked
  8765  0022A8  51AE               	movf	(??_put_cluster+1)& (0+255),w,b
  8766  0022AA  0100               	movlb	0	; () banked
  8767  0022AC  17B0               	andwf	(??_put_cluster+3)& (0+255),f,b
  8768  0022AE  0E29               	movlw	41
  8769  0022B0  0100               	movlb	0	; () banked
  8770  0022B2  27AF               	addwf	(??_put_cluster+2)& (0+255),f,b
  8771  0022B4  0E00               	movlw	0
  8772  0022B6  23B0               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8773  0022B8  0100               	movlb	0	; () banked
  8774  0022BA  51AF               	movf	(??_put_cluster+2)& (0+255),w,b
  8775  0022BC  0100               	movlb	0	; () banked
  8776  0022BE  25BE               	addwf	put_cluster@fs& (0+255),w,b
  8777  0022C0  6ED9               	movwf	fsr2l,c
  8778  0022C2  0100               	movlb	0	; () banked
  8779  0022C4  51B0               	movf	(??_put_cluster+3)& (0+255),w,b
  8780  0022C6  0100               	movlb	0	; () banked
  8781  0022C8  21BF               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8782  0022CA  6EDA               	movwf	fsr2h,c
  8783  0022CC  0100               	movlb	0	; () banked
  8784  0022CE  51AA               	movf	(put_cluster@val+1)& (0+255),w,b
  8785  0022D0  6EDF               	movwf	indf2,c
  8786                           
  8787                           ;tff.c: 225: break;
  8788  0022D2  D0F3               	goto	l11595
  8789  0022D4                     l11579:
  8790                           
  8791                           ; BSR set to: 0
  8792                           ;tff.c: 228: if (!move_window(fatsect + clust / 128)) return FALSE;
  8793  0022D4  C0A5  F0AD         	movff	put_cluster@clust,??_put_cluster
  8794  0022D8  C0A6  F0AE         	movff	put_cluster@clust+1,??_put_cluster+1
  8795  0022DC  C0A7  F0AF         	movff	put_cluster@clust+2,??_put_cluster+2
  8796  0022E0  C0A8  F0B0         	movff	put_cluster@clust+3,??_put_cluster+3
  8797  0022E4  0E08               	movlw	8
  8798  0022E6  D006               	goto	u12500
  8799  0022E8                     u12505:
  8800  0022E8  0100               	movlb	0	; () banked
  8801  0022EA  90D8               	bcf	status,0,c
  8802  0022EC  33B0               	rrcf	(??_put_cluster+3)& (0+255),f,b
  8803  0022EE  33AF               	rrcf	(??_put_cluster+2)& (0+255),f,b
  8804  0022F0  33AE               	rrcf	(??_put_cluster+1)& (0+255),f,b
  8805  0022F2  33AD               	rrcf	??_put_cluster& (0+255),f,b
  8806  0022F4                     u12500:
  8807  0022F4  2EE8               	decfsz	wreg,f,c
  8808  0022F6  D7F8               	goto	u12505
  8809  0022F8  0100               	movlb	0	; () banked
  8810  0022FA  51B6               	movf	put_cluster@fatsect& (0+255),w,b
  8811  0022FC  0100               	movlb	0	; () banked
  8812  0022FE  25AD               	addwf	??_put_cluster& (0+255),w,b
  8813  002300  0100               	movlb	0	; () banked
  8814  002302  6F8E               	movwf	move_window@sector& (0+255),b
  8815  002304  0100               	movlb	0	; () banked
  8816  002306  51B7               	movf	(put_cluster@fatsect+1)& (0+255),w,b
  8817  002308  0100               	movlb	0	; () banked
  8818  00230A  21AE               	addwfc	(??_put_cluster+1)& (0+255),w,b
  8819  00230C  0100               	movlb	0	; () banked
  8820  00230E  6F8F               	movwf	(move_window@sector+1)& (0+255),b
  8821  002310  0100               	movlb	0	; () banked
  8822  002312  51B8               	movf	(put_cluster@fatsect+2)& (0+255),w,b
  8823  002314  0100               	movlb	0	; () banked
  8824  002316  21AF               	addwfc	(??_put_cluster+2)& (0+255),w,b
  8825  002318  0100               	movlb	0	; () banked
  8826  00231A  6F90               	movwf	(move_window@sector+2)& (0+255),b
  8827  00231C  0100               	movlb	0	; () banked
  8828  00231E  51B9               	movf	(put_cluster@fatsect+3)& (0+255),w,b
  8829  002320  0100               	movlb	0	; () banked
  8830  002322  21B0               	addwfc	(??_put_cluster+3)& (0+255),w,b
  8831  002324  0100               	movlb	0	; () banked
  8832  002326  6F91               	movwf	(move_window@sector+3)& (0+255),b
  8833  002328  EC28  F01D         	call	_move_window	;wreg free
  8834  00232C  0900               	iorlw	0
  8835  00232E  A4D8               	btfss	status,2,c
  8836  002330  D002               	goto	l11585
  8837  002332  0E00               	movlw	0
  8838  002334  0012               	return	
  8839  002336                     l11585:
  8840                           
  8841                           ;tff.c: 229: *(volatile BYTE*)(&fs->win[((WORD)clust * 4) % 512U])=(BYTE)(val); *(volati
      +                          le BYTE*)((&fs->win[((WORD)clust * 4) % 512U])+1)=(BYTE)((WORD)(val)>>8); *(volatile BYT
      +                          E*)((&fs->win[((WORD)clust * 4) % 512U])+2)=(BYTE)((DWORD)(val)>>16); *(volatile BYTE*)
  8842  002336  0EFF               	movlw	255
  8843  002338  0100               	movlb	0	; () banked
  8844  00233A  6FAD               	movwf	??_put_cluster& (0+255),b
  8845  00233C  0E01               	movlw	1
  8846  00233E  0100               	movlb	0	; () banked
  8847  002340  6FAE               	movwf	(??_put_cluster+1)& (0+255),b
  8848  002342  C0A5  F0AF         	movff	put_cluster@clust,??_put_cluster+2
  8849  002346  C0A6  F0B0         	movff	put_cluster@clust+1,??_put_cluster+3
  8850  00234A  0100               	movlb	0	; () banked
  8851  00234C  90D8               	bcf	status,0,c
  8852  00234E  37AF               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8853  002350  37B0               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8854  002352  0100               	movlb	0	; () banked
  8855  002354  90D8               	bcf	status,0,c
  8856  002356  37AF               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8857  002358  37B0               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8858  00235A  0100               	movlb	0	; () banked
  8859  00235C  51AD               	movf	??_put_cluster& (0+255),w,b
  8860  00235E  0100               	movlb	0	; () banked
  8861  002360  17AF               	andwf	(??_put_cluster+2)& (0+255),f,b
  8862  002362  0100               	movlb	0	; () banked
  8863  002364  51AE               	movf	(??_put_cluster+1)& (0+255),w,b
  8864  002366  0100               	movlb	0	; () banked
  8865  002368  17B0               	andwf	(??_put_cluster+3)& (0+255),f,b
  8866  00236A  0E28               	movlw	40
  8867  00236C  0100               	movlb	0	; () banked
  8868  00236E  27AF               	addwf	(??_put_cluster+2)& (0+255),f,b
  8869  002370  0E00               	movlw	0
  8870  002372  23B0               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8871  002374  0100               	movlb	0	; () banked
  8872  002376  51AF               	movf	(??_put_cluster+2)& (0+255),w,b
  8873  002378  0100               	movlb	0	; () banked
  8874  00237A  25BE               	addwf	put_cluster@fs& (0+255),w,b
  8875  00237C  6ED9               	movwf	fsr2l,c
  8876  00237E  0100               	movlb	0	; () banked
  8877  002380  51B0               	movf	(??_put_cluster+3)& (0+255),w,b
  8878  002382  0100               	movlb	0	; () banked
  8879  002384  21BF               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8880  002386  6EDA               	movwf	fsr2h,c
  8881  002388  C0A9  FFDF         	movff	put_cluster@val,indf2
  8882  00238C  0EFF               	movlw	255
  8883  00238E  0100               	movlb	0	; () banked
  8884  002390  6FAD               	movwf	??_put_cluster& (0+255),b
  8885  002392  0E01               	movlw	1
  8886  002394  0100               	movlb	0	; () banked
  8887  002396  6FAE               	movwf	(??_put_cluster+1)& (0+255),b
  8888  002398  C0A5  F0AF         	movff	put_cluster@clust,??_put_cluster+2
  8889  00239C  C0A6  F0B0         	movff	put_cluster@clust+1,??_put_cluster+3
  8890  0023A0  0100               	movlb	0	; () banked
  8891  0023A2  90D8               	bcf	status,0,c
  8892  0023A4  37AF               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8893  0023A6  37B0               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8894  0023A8  0100               	movlb	0	; () banked
  8895  0023AA  90D8               	bcf	status,0,c
  8896  0023AC  37AF               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8897  0023AE  37B0               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8898  0023B0  0100               	movlb	0	; () banked
  8899  0023B2  51AD               	movf	??_put_cluster& (0+255),w,b
  8900  0023B4  0100               	movlb	0	; () banked
  8901  0023B6  17AF               	andwf	(??_put_cluster+2)& (0+255),f,b
  8902  0023B8  0100               	movlb	0	; () banked
  8903  0023BA  51AE               	movf	(??_put_cluster+1)& (0+255),w,b
  8904  0023BC  0100               	movlb	0	; () banked
  8905  0023BE  17B0               	andwf	(??_put_cluster+3)& (0+255),f,b
  8906  0023C0  0E29               	movlw	41
  8907  0023C2  0100               	movlb	0	; () banked
  8908  0023C4  27AF               	addwf	(??_put_cluster+2)& (0+255),f,b
  8909  0023C6  0E00               	movlw	0
  8910  0023C8  23B0               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8911  0023CA  0100               	movlb	0	; () banked
  8912  0023CC  51AF               	movf	(??_put_cluster+2)& (0+255),w,b
  8913  0023CE  0100               	movlb	0	; () banked
  8914  0023D0  25BE               	addwf	put_cluster@fs& (0+255),w,b
  8915  0023D2  6ED9               	movwf	fsr2l,c
  8916  0023D4  0100               	movlb	0	; () banked
  8917  0023D6  51B0               	movf	(??_put_cluster+3)& (0+255),w,b
  8918  0023D8  0100               	movlb	0	; () banked
  8919  0023DA  21BF               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8920  0023DC  6EDA               	movwf	fsr2h,c
  8921  0023DE  0100               	movlb	0	; () banked
  8922  0023E0  51AA               	movf	(put_cluster@val+1)& (0+255),w,b
  8923  0023E2  6EDF               	movwf	indf2,c
  8924  0023E4  0EFF               	movlw	255
  8925  0023E6  0100               	movlb	0	; () banked
  8926  0023E8  6FAD               	movwf	??_put_cluster& (0+255),b
  8927  0023EA  0E01               	movlw	1
  8928  0023EC  0100               	movlb	0	; () banked
  8929  0023EE  6FAE               	movwf	(??_put_cluster+1)& (0+255),b
  8930  0023F0  C0A5  F0AF         	movff	put_cluster@clust,??_put_cluster+2
  8931  0023F4  C0A6  F0B0         	movff	put_cluster@clust+1,??_put_cluster+3
  8932  0023F8  0100               	movlb	0	; () banked
  8933  0023FA  90D8               	bcf	status,0,c
  8934  0023FC  37AF               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8935  0023FE  37B0               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8936  002400  0100               	movlb	0	; () banked
  8937  002402  90D8               	bcf	status,0,c
  8938  002404  37AF               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8939  002406  37B0               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8940  002408  0100               	movlb	0	; () banked
  8941  00240A  51AD               	movf	??_put_cluster& (0+255),w,b
  8942  00240C  0100               	movlb	0	; () banked
  8943  00240E  17AF               	andwf	(??_put_cluster+2)& (0+255),f,b
  8944  002410  0100               	movlb	0	; () banked
  8945  002412  51AE               	movf	(??_put_cluster+1)& (0+255),w,b
  8946  002414  0100               	movlb	0	; () banked
  8947  002416  17B0               	andwf	(??_put_cluster+3)& (0+255),f,b
  8948  002418  0E2A               	movlw	42
  8949  00241A  0100               	movlb	0	; () banked
  8950  00241C  27AF               	addwf	(??_put_cluster+2)& (0+255),f,b
  8951  00241E  0E00               	movlw	0
  8952  002420  23B0               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8953  002422  0100               	movlb	0	; () banked
  8954  002424  51AF               	movf	(??_put_cluster+2)& (0+255),w,b
  8955  002426  0100               	movlb	0	; () banked
  8956  002428  25BE               	addwf	put_cluster@fs& (0+255),w,b
  8957  00242A  6ED9               	movwf	fsr2l,c
  8958  00242C  0100               	movlb	0	; () banked
  8959  00242E  51B0               	movf	(??_put_cluster+3)& (0+255),w,b
  8960  002430  0100               	movlb	0	; () banked
  8961  002432  21BF               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  8962  002434  6EDA               	movwf	fsr2h,c
  8963  002436  C0AB  FFDF         	movff	put_cluster@val+2,indf2
  8964  00243A  0EFF               	movlw	255
  8965  00243C  0100               	movlb	0	; () banked
  8966  00243E  6FAD               	movwf	??_put_cluster& (0+255),b
  8967  002440  0E01               	movlw	1
  8968  002442  0100               	movlb	0	; () banked
  8969  002444  6FAE               	movwf	(??_put_cluster+1)& (0+255),b
  8970  002446  C0A5  F0AF         	movff	put_cluster@clust,??_put_cluster+2
  8971  00244A  C0A6  F0B0         	movff	put_cluster@clust+1,??_put_cluster+3
  8972  00244E  0100               	movlb	0	; () banked
  8973  002450  90D8               	bcf	status,0,c
  8974  002452  37AF               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8975  002454  37B0               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8976  002456  0100               	movlb	0	; () banked
  8977  002458  90D8               	bcf	status,0,c
  8978  00245A  37AF               	rlcf	(??_put_cluster+2)& (0+255),f,b
  8979  00245C  37B0               	rlcf	(??_put_cluster+3)& (0+255),f,b
  8980  00245E  0100               	movlb	0	; () banked
  8981  002460  51AD               	movf	??_put_cluster& (0+255),w,b
  8982  002462  0100               	movlb	0	; () banked
  8983  002464  17AF               	andwf	(??_put_cluster+2)& (0+255),f,b
  8984  002466  0100               	movlb	0	; () banked
  8985  002468  51AE               	movf	(??_put_cluster+1)& (0+255),w,b
  8986  00246A  0100               	movlb	0	; () banked
  8987  00246C  17B0               	andwf	(??_put_cluster+3)& (0+255),f,b
  8988  00246E  0E2B               	movlw	43
  8989  002470  0100               	movlb	0	; () banked
  8990  002472  27AF               	addwf	(??_put_cluster+2)& (0+255),f,b
  8991  002474  0E00               	movlw	0
  8992  002476  23B0               	addwfc	(??_put_cluster+3)& (0+255),f,b
  8993  002478  0100               	movlb	0	; () banked
  8994  00247A  51AF               	movf	(??_put_cluster+2)& (0+255),w,b
  8995  00247C  0100               	movlb	0	; () banked
  8996  00247E  25BE               	addwf	put_cluster@fs& (0+255),w,b
  8997  002480  6ED9               	movwf	fsr2l,c
  8998  002482  0100               	movlb	0	; () banked
  8999  002484  51B0               	movf	(??_put_cluster+3)& (0+255),w,b
  9000  002486  0100               	movlb	0	; () banked
  9001  002488  21BF               	addwfc	(put_cluster@fs+1)& (0+255),w,b
  9002  00248A  6EDA               	movwf	fsr2h,c
  9003  00248C  C0AC  FFDF         	movff	put_cluster@val+3,indf2
  9004                           
  9005                           ;tff.c: 230: break;
  9006  002490  D014               	goto	l11595
  9007  002492                     l11587:
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;tff.c: 233: return FALSE;
  9011  002492  0E00               	movlw	0
  9012                           
  9013                           ; BSR set to: 0
  9014  002494  0012               	return	
  9015  002496                     l11593:
  9016                           
  9017                           ; BSR set to: 0
  9018  002496  0100               	movlb	0	; () banked
  9019  002498  EE20 F024          	lfsr	2,36
  9020  00249C  51BE               	movf	put_cluster@fs& (0+255),w,b
  9021  00249E  26D9               	addwf	fsr2l,f,c
  9022  0024A0  51BF               	movf	(put_cluster@fs+1)& (0+255),w,b
  9023  0024A2  22DA               	addwfc	fsr2h,f,c
  9024  0024A4  50DF               	movf	indf2,w,c
  9025                           
  9026                           ; Switch size 1, requested type "space"
  9027                           ; Number of cases is 3, Range of values is 1 to 3
  9028                           ; switch strategies available:
  9029                           ; Name         Instructions Cycles
  9030                           ; simple_byte           10     6 (average)
  9031                           ;	Chosen strategy is simple_byte
  9032  0024A6  0A01               	xorlw	1	; case 1
  9033  0024A8  B4D8               	btfsc	status,2,c
  9034  0024AA  D567               	goto	l11533
  9035  0024AC  0A03               	xorlw	3	; case 2
  9036  0024AE  B4D8               	btfsc	status,2,c
  9037  0024B0  D692               	goto	l11571
  9038  0024B2  0A01               	xorlw	1	; case 3
  9039  0024B4  B4D8               	btfsc	status,2,c
  9040  0024B6  D70E               	goto	l11579
  9041  0024B8  D7EC               	goto	l11587
  9042  0024BA                     l11595:
  9043                           
  9044                           ; BSR set to: 0
  9045                           ;tff.c: 235: fs->winflag = 1;
  9046  0024BA  0100               	movlb	0	; () banked
  9047  0024BC  EE20 F027          	lfsr	2,39
  9048  0024C0  51BE               	movf	put_cluster@fs& (0+255),w,b
  9049  0024C2  26D9               	addwf	fsr2l,f,c
  9050  0024C4  51BF               	movf	(put_cluster@fs+1)& (0+255),w,b
  9051  0024C6  22DA               	addwfc	fsr2h,f,c
  9052  0024C8  0E01               	movlw	1
  9053  0024CA  6EDF               	movwf	indf2,c
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;tff.c: 236: return TRUE;
  9057  0024CC  0E01               	movlw	1
  9058  0024CE  0012               	return	
  9059  0024D0                     __end_of_put_cluster:
  9060                           	opt stack 0
  9061                           tosu	equ	0xFFF
  9062                           tosh	equ	0xFFE
  9063                           tosl	equ	0xFFD
  9064                           pclath	equ	0xFFA
  9065                           tblptru	equ	0xFF8
  9066                           tblptrh	equ	0xFF7
  9067                           tblptrl	equ	0xFF6
  9068                           tablat	equ	0xFF5
  9069                           prodh	equ	0xFF4
  9070                           prodl	equ	0xFF3
  9071                           intcon	equ	0xFF2
  9072                           intcon2	equ	0xFF1
  9073                           intcon3	equ	0xFF0
  9074                           postinc0	equ	0xFEE
  9075                           wreg	equ	0xFE8
  9076                           indf1	equ	0xFE7
  9077                           postinc1	equ	0xFE6
  9078                           postdec1	equ	0xFE5
  9079                           fsr1h	equ	0xFE2
  9080                           fsr1l	equ	0xFE1
  9081                           indf2	equ	0xFDF
  9082                           postinc2	equ	0xFDE
  9083                           postdec2	equ	0xFDD
  9084                           fsr2h	equ	0xFDA
  9085                           fsr2l	equ	0xFD9
  9086                           status	equ	0xFD8
  9087                           
  9088 ;; *************** function _get_cluster *****************
  9089 ;; Defined at:
  9090 ;;		line 154 in file "bibliotecas/tff.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;  clust           4   69[BANK0 ] unsigned long 
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;  fatsect         4  119[BANK0 ] unsigned long 
  9095 ;;  fs              2  125[BANK0 ] PTR struct _FATFS
  9096 ;;		 -> fs(552), NULL(0), 
  9097 ;;  bc              2  123[BANK0 ] unsigned short 
  9098 ;;  wc              2  117[BANK0 ] unsigned short 
  9099 ;; Return value:  Size  Location     Type
  9100 ;;                  4   69[BANK0 ] unsigned long 
  9101 ;; Registers used:
  9102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9103 ;; Tracked objects:
  9104 ;;		On entry : 0/0
  9105 ;;		On exit  : 0/0
  9106 ;;		Unchanged: 0/0
  9107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9108 ;;      Params:         0       4       0       0       0       0       0       0       0
  9109 ;;      Locals:         0      12       0       0       0       0       0       0       0
  9110 ;;      Temps:          0      42       0       0       0       0       0       0       0
  9111 ;;      Totals:         0      58       0       0       0       0       0       0       0
  9112 ;;Total ram usage:       58 bytes
  9113 ;; Hardware stack levels used:    1
  9114 ;; Hardware stack levels required when called:   11
  9115 ;; This function calls:
  9116 ;;		___wmul
  9117 ;;		_move_window
  9118 ;; This function is called by:
  9119 ;;		_remove_chain
  9120 ;;		_create_chain
  9121 ;;		_next_dir_entry
  9122 ;;		_f_read
  9123 ;;		_f_lseek
  9124 ;;		_f_truncate
  9125 ;;		_f_getfree
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129                           	psect	text24
  9130  001398                     __ptext24:
  9131                           	opt stack 0
  9132  001398                     _get_cluster:
  9133                           	opt stack 14
  9134                           
  9135                           ;tff.c: 158: WORD wc, bc;
  9136                           ;tff.c: 159: DWORD fatsect;
  9137                           ;tff.c: 160: FATFS *fs = FatFs;
  9138                           
  9139                           ;incstack = 0
  9140  001398  C035  F0DD         	movff	_FatFs,get_cluster@fs
  9141  00139C  C036  F0DE         	movff	_FatFs+1,get_cluster@fs+1
  9142                           
  9143                           ;tff.c: 163: if (clust >= 2 && clust < fs->max_clust) {
  9144  0013A0  0100               	movlb	0	; () banked
  9145  0013A2  51A8               	movf	(get_cluster@clust+3)& (0+255),w,b
  9146  0013A4  0100               	movlb	0	; () banked
  9147  0013A6  11A7               	iorwf	(get_cluster@clust+2)& (0+255),w,b
  9148  0013A8  0100               	movlb	0	; () banked
  9149  0013AA  11A6               	iorwf	(get_cluster@clust+1)& (0+255),w,b
  9150  0013AC  E105               	bnz	u12310
  9151  0013AE  0E02               	movlw	2
  9152  0013B0  0100               	movlb	0	; () banked
  9153  0013B2  5DA5               	subwf	get_cluster@clust& (0+255),w,b
  9154  0013B4  A0D8               	btfss	status,0,c
  9155  0013B6  D302               	goto	l11525
  9156  0013B8                     u12310:
  9157                           
  9158                           ; BSR set to: 0
  9159  0013B8  0100               	movlb	0	; () banked
  9160  0013BA  EE20 F018          	lfsr	2,24
  9161  0013BE  51DD               	movf	get_cluster@fs& (0+255),w,b
  9162  0013C0  26D9               	addwf	fsr2l,f,c
  9163  0013C2  51DE               	movf	(get_cluster@fs+1)& (0+255),w,b
  9164  0013C4  22DA               	addwfc	fsr2h,f,c
  9165  0013C6  50DE               	movf	postinc2,w,c
  9166  0013C8  0100               	movlb	0	; () banked
  9167  0013CA  5DA5               	subwf	get_cluster@clust& (0+255),w,b
  9168  0013CC  50DE               	movf	postinc2,w,c
  9169  0013CE  0100               	movlb	0	; () banked
  9170  0013D0  59A6               	subwfb	(get_cluster@clust+1)& (0+255),w,b
  9171  0013D2  50DE               	movf	postinc2,w,c
  9172  0013D4  0100               	movlb	0	; () banked
  9173  0013D6  59A7               	subwfb	(get_cluster@clust+2)& (0+255),w,b
  9174  0013D8  50DE               	movf	postinc2,w,c
  9175  0013DA  0100               	movlb	0	; () banked
  9176  0013DC  59A8               	subwfb	(get_cluster@clust+3)& (0+255),w,b
  9177  0013DE  B0D8               	btfsc	status,0,c
  9178  0013E0  D2ED               	goto	l11525
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;tff.c: 164: fatsect = fs->fatbase;
  9182  0013E2  0100               	movlb	0	; () banked
  9183  0013E4  EE20 F008          	lfsr	2,8
  9184  0013E8  51DD               	movf	get_cluster@fs& (0+255),w,b
  9185  0013EA  26D9               	addwf	fsr2l,f,c
  9186  0013EC  51DE               	movf	(get_cluster@fs+1)& (0+255),w,b
  9187  0013EE  22DA               	addwfc	fsr2h,f,c
  9188  0013F0  CFDE F0D7          	movff	postinc2,get_cluster@fatsect
  9189  0013F4  CFDE F0D8          	movff	postinc2,get_cluster@fatsect+1
  9190  0013F8  CFDE F0D9          	movff	postinc2,get_cluster@fatsect+2
  9191  0013FC  CFDE F0DA          	movff	postinc2,get_cluster@fatsect+3
  9192                           
  9193                           ;tff.c: 165: switch (fs->fs_type) {
  9194  001400  D2CC               	goto	l11523
  9195  001402                     l11479:
  9196                           
  9197                           ; BSR set to: 0
  9198                           ;tff.c: 167: bc = (WORD)clust * 3 / 2;
  9199  001402  C0A5  F016         	movff	get_cluster@clust,___wmul@multiplier
  9200  001406  C0A6  F017         	movff	get_cluster@clust+1,___wmul@multiplier+1
  9201  00140A  0E00               	movlw	0
  9202  00140C  6E19               	movwf	___wmul@multiplicand+1,c
  9203  00140E  0E03               	movlw	3
  9204  001410  6E18               	movwf	___wmul@multiplicand,c
  9205  001412  EC2C  F02B         	call	___wmul	;wreg free
  9206  001416  90D8               	bcf	status,0,c
  9207  001418  3017               	rrcf	?___wmul+1,w,c
  9208  00141A  0100               	movlb	0	; () banked
  9209  00141C  6FA9               	movwf	??_get_cluster& (0+255),b
  9210  00141E  3016               	rrcf	?___wmul,w,c
  9211  001420  0100               	movlb	0	; () banked
  9212  001422  6FDB               	movwf	get_cluster@bc& (0+255),b
  9213  001424  C0A9  F0DC         	movff	??_get_cluster,get_cluster@bc+1
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;tff.c: 168: if (!move_window(fatsect + bc / 512U)) break;
  9217  001428  C0DB  F0A9         	movff	get_cluster@bc,??_get_cluster
  9218  00142C  C0DC  F0AA         	movff	get_cluster@bc+1,??_get_cluster+1
  9219  001430  0E09               	movlw	9
  9220  001432  0100               	movlb	0	; () banked
  9221  001434  6FAB               	movwf	(??_get_cluster+2)& (0+255),b
  9222  001436                     u12335:
  9223  001436  0100               	movlb	0	; () banked
  9224  001438  90D8               	bcf	status,0,c
  9225  00143A  33AA               	rrcf	(??_get_cluster+1)& (0+255),f,b
  9226  00143C  33A9               	rrcf	??_get_cluster& (0+255),f,b
  9227  00143E  0100               	movlb	0	; () banked
  9228  001440  2FAB               	decfsz	(??_get_cluster+2)& (0+255),f,b
  9229  001442  D7F9               	goto	u12335
  9230  001444  0100               	movlb	0	; () banked
  9231  001446  51A9               	movf	??_get_cluster& (0+255),w,b
  9232  001448  0100               	movlb	0	; () banked
  9233  00144A  25D7               	addwf	get_cluster@fatsect& (0+255),w,b
  9234  00144C  0100               	movlb	0	; () banked
  9235  00144E  6F8E               	movwf	move_window@sector& (0+255),b
  9236  001450  0100               	movlb	0	; () banked
  9237  001452  51AA               	movf	(??_get_cluster+1)& (0+255),w,b
  9238  001454  0100               	movlb	0	; () banked
  9239  001456  21D8               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
  9240  001458  0100               	movlb	0	; () banked
  9241  00145A  6F8F               	movwf	(move_window@sector+1)& (0+255),b
  9242  00145C  0E00               	movlw	0
  9243  00145E  0100               	movlb	0	; () banked
  9244  001460  21D9               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
  9245  001462  0100               	movlb	0	; () banked
  9246  001464  6F90               	movwf	(move_window@sector+2)& (0+255),b
  9247  001466  0E00               	movlw	0
  9248  001468  0100               	movlb	0	; () banked
  9249  00146A  21DA               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
  9250  00146C  0100               	movlb	0	; () banked
  9251  00146E  6F91               	movwf	(move_window@sector+3)& (0+255),b
  9252  001470  EC28  F01D         	call	_move_window	;wreg free
  9253  001474  0900               	iorlw	0
  9254  001476  B4D8               	btfsc	status,2,c
  9255  001478  D2A1               	goto	l11525
  9256                           
  9257                           ;tff.c: 169: wc = fs->win[bc % 512U]; bc++;
  9258  00147A  0EFF               	movlw	255
  9259  00147C  0100               	movlb	0	; () banked
  9260  00147E  6FA9               	movwf	??_get_cluster& (0+255),b
  9261  001480  0E01               	movlw	1
  9262  001482  0100               	movlb	0	; () banked
  9263  001484  6FAA               	movwf	(??_get_cluster+1)& (0+255),b
  9264  001486  C0DB  F0AB         	movff	get_cluster@bc,??_get_cluster+2
  9265  00148A  C0DC  F0AC         	movff	get_cluster@bc+1,??_get_cluster+3
  9266  00148E  0100               	movlb	0	; () banked
  9267  001490  51A9               	movf	??_get_cluster& (0+255),w,b
  9268  001492  0100               	movlb	0	; () banked
  9269  001494  17AB               	andwf	(??_get_cluster+2)& (0+255),f,b
  9270  001496  0100               	movlb	0	; () banked
  9271  001498  51AA               	movf	(??_get_cluster+1)& (0+255),w,b
  9272  00149A  0100               	movlb	0	; () banked
  9273  00149C  17AC               	andwf	(??_get_cluster+3)& (0+255),f,b
  9274  00149E  0E28               	movlw	40
  9275  0014A0  0100               	movlb	0	; () banked
  9276  0014A2  27AB               	addwf	(??_get_cluster+2)& (0+255),f,b
  9277  0014A4  0E00               	movlw	0
  9278  0014A6  23AC               	addwfc	(??_get_cluster+3)& (0+255),f,b
  9279  0014A8  0100               	movlb	0	; () banked
  9280  0014AA  51AB               	movf	(??_get_cluster+2)& (0+255),w,b
  9281  0014AC  0100               	movlb	0	; () banked
  9282  0014AE  25DD               	addwf	get_cluster@fs& (0+255),w,b
  9283  0014B0  6ED9               	movwf	fsr2l,c
  9284  0014B2  0100               	movlb	0	; () banked
  9285  0014B4  51AC               	movf	(??_get_cluster+3)& (0+255),w,b
  9286  0014B6  0100               	movlb	0	; () banked
  9287  0014B8  21DE               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9288  0014BA  6EDA               	movwf	fsr2h,c
  9289  0014BC  50DF               	movf	indf2,w,c
  9290  0014BE  0100               	movlb	0	; () banked
  9291  0014C0  6FAD               	movwf	(??_get_cluster+4)& (0+255),b
  9292  0014C2  0100               	movlb	0	; () banked
  9293  0014C4  51AD               	movf	(??_get_cluster+4)& (0+255),w,b
  9294  0014C6  0100               	movlb	0	; () banked
  9295  0014C8  6FD5               	movwf	get_cluster@wc& (0+255),b
  9296  0014CA  6BD6               	clrf	(get_cluster@wc+1)& (0+255),b
  9297                           
  9298                           ; BSR set to: 0
  9299  0014CC  0100               	movlb	0	; () banked
  9300  0014CE  4BDB               	infsnz	get_cluster@bc& (0+255),f,b
  9301  0014D0  2BDC               	incf	(get_cluster@bc+1)& (0+255),f,b
  9302                           
  9303                           ; BSR set to: 0
  9304                           ;tff.c: 170: if (!move_window(fatsect + bc / 512U)) break;
  9305  0014D2  C0DB  F0A9         	movff	get_cluster@bc,??_get_cluster
  9306  0014D6  C0DC  F0AA         	movff	get_cluster@bc+1,??_get_cluster+1
  9307  0014DA  0E09               	movlw	9
  9308  0014DC  0100               	movlb	0	; () banked
  9309  0014DE  6FAB               	movwf	(??_get_cluster+2)& (0+255),b
  9310  0014E0                     u12355:
  9311  0014E0  0100               	movlb	0	; () banked
  9312  0014E2  90D8               	bcf	status,0,c
  9313  0014E4  33AA               	rrcf	(??_get_cluster+1)& (0+255),f,b
  9314  0014E6  33A9               	rrcf	??_get_cluster& (0+255),f,b
  9315  0014E8  0100               	movlb	0	; () banked
  9316  0014EA  2FAB               	decfsz	(??_get_cluster+2)& (0+255),f,b
  9317  0014EC  D7F9               	goto	u12355
  9318  0014EE  0100               	movlb	0	; () banked
  9319  0014F0  51A9               	movf	??_get_cluster& (0+255),w,b
  9320  0014F2  0100               	movlb	0	; () banked
  9321  0014F4  25D7               	addwf	get_cluster@fatsect& (0+255),w,b
  9322  0014F6  0100               	movlb	0	; () banked
  9323  0014F8  6F8E               	movwf	move_window@sector& (0+255),b
  9324  0014FA  0100               	movlb	0	; () banked
  9325  0014FC  51AA               	movf	(??_get_cluster+1)& (0+255),w,b
  9326  0014FE  0100               	movlb	0	; () banked
  9327  001500  21D8               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
  9328  001502  0100               	movlb	0	; () banked
  9329  001504  6F8F               	movwf	(move_window@sector+1)& (0+255),b
  9330  001506  0E00               	movlw	0
  9331  001508  0100               	movlb	0	; () banked
  9332  00150A  21D9               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
  9333  00150C  0100               	movlb	0	; () banked
  9334  00150E  6F90               	movwf	(move_window@sector+2)& (0+255),b
  9335  001510  0E00               	movlw	0
  9336  001512  0100               	movlb	0	; () banked
  9337  001514  21DA               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
  9338  001516  0100               	movlb	0	; () banked
  9339  001518  6F91               	movwf	(move_window@sector+3)& (0+255),b
  9340  00151A  EC28  F01D         	call	_move_window	;wreg free
  9341  00151E  0900               	iorlw	0
  9342  001520  B4D8               	btfsc	status,2,c
  9343  001522  D24C               	goto	l11525
  9344                           
  9345                           ;tff.c: 171: wc |= (WORD)fs->win[bc % 512U] << 8;
  9346  001524  0EFF               	movlw	255
  9347  001526  0100               	movlb	0	; () banked
  9348  001528  6FA9               	movwf	??_get_cluster& (0+255),b
  9349  00152A  0E01               	movlw	1
  9350  00152C  0100               	movlb	0	; () banked
  9351  00152E  6FAA               	movwf	(??_get_cluster+1)& (0+255),b
  9352  001530  C0DB  F0AB         	movff	get_cluster@bc,??_get_cluster+2
  9353  001534  C0DC  F0AC         	movff	get_cluster@bc+1,??_get_cluster+3
  9354  001538  0100               	movlb	0	; () banked
  9355  00153A  51A9               	movf	??_get_cluster& (0+255),w,b
  9356  00153C  0100               	movlb	0	; () banked
  9357  00153E  17AB               	andwf	(??_get_cluster+2)& (0+255),f,b
  9358  001540  0100               	movlb	0	; () banked
  9359  001542  51AA               	movf	(??_get_cluster+1)& (0+255),w,b
  9360  001544  0100               	movlb	0	; () banked
  9361  001546  17AC               	andwf	(??_get_cluster+3)& (0+255),f,b
  9362  001548  0E28               	movlw	40
  9363  00154A  0100               	movlb	0	; () banked
  9364  00154C  27AB               	addwf	(??_get_cluster+2)& (0+255),f,b
  9365  00154E  0E00               	movlw	0
  9366  001550  23AC               	addwfc	(??_get_cluster+3)& (0+255),f,b
  9367  001552  0100               	movlb	0	; () banked
  9368  001554  51AB               	movf	(??_get_cluster+2)& (0+255),w,b
  9369  001556  0100               	movlb	0	; () banked
  9370  001558  25DD               	addwf	get_cluster@fs& (0+255),w,b
  9371  00155A  6ED9               	movwf	fsr2l,c
  9372  00155C  0100               	movlb	0	; () banked
  9373  00155E  51AC               	movf	(??_get_cluster+3)& (0+255),w,b
  9374  001560  0100               	movlb	0	; () banked
  9375  001562  21DE               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9376  001564  6EDA               	movwf	fsr2h,c
  9377  001566  50DF               	movf	indf2,w,c
  9378  001568  0100               	movlb	0	; () banked
  9379  00156A  6FAD               	movwf	(??_get_cluster+4)& (0+255),b
  9380  00156C  0100               	movlb	0	; () banked
  9381  00156E  51AD               	movf	(??_get_cluster+4)& (0+255),w,b
  9382  001570  0100               	movlb	0	; () banked
  9383  001572  6FAF               	movwf	(??_get_cluster+6)& (0+255),b
  9384  001574  6BAE               	clrf	(??_get_cluster+5)& (0+255),b
  9385  001576  0100               	movlb	0	; () banked
  9386  001578  51AE               	movf	(??_get_cluster+5)& (0+255),w,b
  9387  00157A  0100               	movlb	0	; () banked
  9388  00157C  13D5               	iorwf	get_cluster@wc& (0+255),f,b
  9389  00157E  0100               	movlb	0	; () banked
  9390  001580  51AF               	movf	(??_get_cluster+6)& (0+255),w,b
  9391  001582  0100               	movlb	0	; () banked
  9392  001584  13D6               	iorwf	(get_cluster@wc+1)& (0+255),f,b
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;tff.c: 172: return (clust & 1) ? (wc >> 4) : (wc & 0xFFF);
  9396  001586  0100               	movlb	0	; () banked
  9397  001588  B1A5               	btfsc	get_cluster@clust& (0+255),0,b
  9398  00158A  D00B               	goto	l11499
  9399                           
  9400                           ; BSR set to: 0
  9401  00158C  0EFF               	movlw	255
  9402  00158E  0100               	movlb	0	; () banked
  9403  001590  15D5               	andwf	get_cluster@wc& (0+255),w,b
  9404  001592  0100               	movlb	0	; () banked
  9405  001594  6FD3               	movwf	_get_cluster$941& (0+255),b
  9406  001596  0E0F               	movlw	15
  9407  001598  0100               	movlb	0	; () banked
  9408  00159A  15D6               	andwf	(get_cluster@wc+1)& (0+255),w,b
  9409  00159C  0100               	movlb	0	; () banked
  9410  00159E  6FD4               	movwf	(_get_cluster$941+1)& (0+255),b
  9411  0015A0  D012               	goto	l11501
  9412  0015A2                     l11499:
  9413                           
  9414                           ; BSR set to: 0
  9415  0015A2  C0D5  F0A9         	movff	get_cluster@wc,??_get_cluster
  9416  0015A6  C0D6  F0AA         	movff	get_cluster@wc+1,??_get_cluster+1
  9417  0015AA  0E04               	movlw	4
  9418  0015AC  0100               	movlb	0	; () banked
  9419  0015AE  6FAB               	movwf	(??_get_cluster+2)& (0+255),b
  9420  0015B0                     u12385:
  9421  0015B0  0100               	movlb	0	; () banked
  9422  0015B2  90D8               	bcf	status,0,c
  9423  0015B4  33AA               	rrcf	(??_get_cluster+1)& (0+255),f,b
  9424  0015B6  33A9               	rrcf	??_get_cluster& (0+255),f,b
  9425  0015B8  0100               	movlb	0	; () banked
  9426  0015BA  2FAB               	decfsz	(??_get_cluster+2)& (0+255),f,b
  9427  0015BC  D7F9               	goto	u12385
  9428  0015BE  C0A9  F0D3         	movff	??_get_cluster,_get_cluster$941
  9429  0015C2  C0AA  F0D4         	movff	??_get_cluster+1,_get_cluster$941+1
  9430  0015C6                     l11501:
  9431                           
  9432                           ; BSR set to: 0
  9433  0015C6  C0D3  F0A5         	movff	_get_cluster$941,?_get_cluster
  9434  0015CA  C0D4  F0A6         	movff	_get_cluster$941+1,?_get_cluster+1
  9435  0015CE  0100               	movlb	0	; () banked
  9436  0015D0  6BA7               	clrf	(?_get_cluster+2)& (0+255),b
  9437  0015D2  6BA8               	clrf	(?_get_cluster+3)& (0+255),b
  9438                           
  9439                           ; BSR set to: 0
  9440  0015D4  0012               	return	
  9441  0015D6                     l11505:
  9442                           
  9443                           ; BSR set to: 0
  9444                           ;tff.c: 175: if (!move_window(fatsect + clust / 256)) break;
  9445  0015D6  C0A5  F0A9         	movff	get_cluster@clust,??_get_cluster
  9446  0015DA  C0A6  F0AA         	movff	get_cluster@clust+1,??_get_cluster+1
  9447  0015DE  C0A7  F0AB         	movff	get_cluster@clust+2,??_get_cluster+2
  9448  0015E2  C0A8  F0AC         	movff	get_cluster@clust+3,??_get_cluster+3
  9449  0015E6  C0AA  F0A9         	movff	??_get_cluster+1,??_get_cluster
  9450  0015EA  C0AB  F0AA         	movff	??_get_cluster+2,??_get_cluster+1
  9451  0015EE  C0AC  F0AB         	movff	??_get_cluster+3,??_get_cluster+2
  9452  0015F2  0100               	movlb	0	; () banked
  9453  0015F4  6BAC               	clrf	(??_get_cluster+3)& (0+255),b
  9454  0015F6  0100               	movlb	0	; () banked
  9455  0015F8  51D7               	movf	get_cluster@fatsect& (0+255),w,b
  9456  0015FA  0100               	movlb	0	; () banked
  9457  0015FC  25A9               	addwf	??_get_cluster& (0+255),w,b
  9458  0015FE  0100               	movlb	0	; () banked
  9459  001600  6F8E               	movwf	move_window@sector& (0+255),b
  9460  001602  0100               	movlb	0	; () banked
  9461  001604  51D8               	movf	(get_cluster@fatsect+1)& (0+255),w,b
  9462  001606  0100               	movlb	0	; () banked
  9463  001608  21AA               	addwfc	(??_get_cluster+1)& (0+255),w,b
  9464  00160A  0100               	movlb	0	; () banked
  9465  00160C  6F8F               	movwf	(move_window@sector+1)& (0+255),b
  9466  00160E  0100               	movlb	0	; () banked
  9467  001610  51D9               	movf	(get_cluster@fatsect+2)& (0+255),w,b
  9468  001612  0100               	movlb	0	; () banked
  9469  001614  21AB               	addwfc	(??_get_cluster+2)& (0+255),w,b
  9470  001616  0100               	movlb	0	; () banked
  9471  001618  6F90               	movwf	(move_window@sector+2)& (0+255),b
  9472  00161A  0100               	movlb	0	; () banked
  9473  00161C  51DA               	movf	(get_cluster@fatsect+3)& (0+255),w,b
  9474  00161E  0100               	movlb	0	; () banked
  9475  001620  21AC               	addwfc	(??_get_cluster+3)& (0+255),w,b
  9476  001622  0100               	movlb	0	; () banked
  9477  001624  6F91               	movwf	(move_window@sector+3)& (0+255),b
  9478  001626  EC28  F01D         	call	_move_window	;wreg free
  9479  00162A  0900               	iorlw	0
  9480  00162C  B4D8               	btfsc	status,2,c
  9481  00162E  D1C6               	goto	l11525
  9482                           
  9483                           ;tff.c: 176: return (WORD)(((WORD)*(volatile BYTE*)((&fs->win[((WORD)clust * 2) % 512U])
      +                          +1)<<8)|(WORD)*(volatile BYTE*)(&fs->win[((WORD)clust * 2) % 512U]));
  9484  001630  0EFF               	movlw	255
  9485  001632  0100               	movlb	0	; () banked
  9486  001634  6FA9               	movwf	??_get_cluster& (0+255),b
  9487  001636  0E01               	movlw	1
  9488  001638  0100               	movlb	0	; () banked
  9489  00163A  6FAA               	movwf	(??_get_cluster+1)& (0+255),b
  9490  00163C  C0A5  F0AB         	movff	get_cluster@clust,??_get_cluster+2
  9491  001640  C0A6  F0AC         	movff	get_cluster@clust+1,??_get_cluster+3
  9492  001644  90D8               	bcf	status,0,c
  9493  001646  0100               	movlb	0	; () banked
  9494  001648  37AB               	rlcf	(??_get_cluster+2)& (0+255),f,b
  9495  00164A  37AC               	rlcf	(??_get_cluster+3)& (0+255),f,b
  9496  00164C  0100               	movlb	0	; () banked
  9497  00164E  51A9               	movf	??_get_cluster& (0+255),w,b
  9498  001650  0100               	movlb	0	; () banked
  9499  001652  17AB               	andwf	(??_get_cluster+2)& (0+255),f,b
  9500  001654  0100               	movlb	0	; () banked
  9501  001656  51AA               	movf	(??_get_cluster+1)& (0+255),w,b
  9502  001658  0100               	movlb	0	; () banked
  9503  00165A  17AC               	andwf	(??_get_cluster+3)& (0+255),f,b
  9504  00165C  0E29               	movlw	41
  9505  00165E  0100               	movlb	0	; () banked
  9506  001660  27AB               	addwf	(??_get_cluster+2)& (0+255),f,b
  9507  001662  0E00               	movlw	0
  9508  001664  23AC               	addwfc	(??_get_cluster+3)& (0+255),f,b
  9509  001666  0100               	movlb	0	; () banked
  9510  001668  51AB               	movf	(??_get_cluster+2)& (0+255),w,b
  9511  00166A  0100               	movlb	0	; () banked
  9512  00166C  25DD               	addwf	get_cluster@fs& (0+255),w,b
  9513  00166E  6ED9               	movwf	fsr2l,c
  9514  001670  0100               	movlb	0	; () banked
  9515  001672  51AC               	movf	(??_get_cluster+3)& (0+255),w,b
  9516  001674  0100               	movlb	0	; () banked
  9517  001676  21DE               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9518  001678  6EDA               	movwf	fsr2h,c
  9519  00167A  50DF               	movf	indf2,w,c
  9520  00167C  0100               	movlb	0	; () banked
  9521  00167E  6FAD               	movwf	(??_get_cluster+4)& (0+255),b
  9522  001680  0100               	movlb	0	; () banked
  9523  001682  51AD               	movf	(??_get_cluster+4)& (0+255),w,b
  9524  001684  0100               	movlb	0	; () banked
  9525  001686  6FAF               	movwf	(??_get_cluster+6)& (0+255),b
  9526  001688  6BAE               	clrf	(??_get_cluster+5)& (0+255),b
  9527  00168A  0EFF               	movlw	255
  9528  00168C  0100               	movlb	0	; () banked
  9529  00168E  6FB0               	movwf	(??_get_cluster+7)& (0+255),b
  9530  001690  0E01               	movlw	1
  9531  001692  0100               	movlb	0	; () banked
  9532  001694  6FB1               	movwf	(??_get_cluster+8)& (0+255),b
  9533  001696  C0A5  F0B2         	movff	get_cluster@clust,??_get_cluster+9
  9534  00169A  C0A6  F0B3         	movff	get_cluster@clust+1,??_get_cluster+10
  9535  00169E  90D8               	bcf	status,0,c
  9536  0016A0  0100               	movlb	0	; () banked
  9537  0016A2  37B2               	rlcf	(??_get_cluster+9)& (0+255),f,b
  9538  0016A4  37B3               	rlcf	(??_get_cluster+10)& (0+255),f,b
  9539  0016A6  0100               	movlb	0	; () banked
  9540  0016A8  51B0               	movf	(??_get_cluster+7)& (0+255),w,b
  9541  0016AA  0100               	movlb	0	; () banked
  9542  0016AC  17B2               	andwf	(??_get_cluster+9)& (0+255),f,b
  9543  0016AE  0100               	movlb	0	; () banked
  9544  0016B0  51B1               	movf	(??_get_cluster+8)& (0+255),w,b
  9545  0016B2  0100               	movlb	0	; () banked
  9546  0016B4  17B3               	andwf	(??_get_cluster+10)& (0+255),f,b
  9547  0016B6  0E28               	movlw	40
  9548  0016B8  0100               	movlb	0	; () banked
  9549  0016BA  27B2               	addwf	(??_get_cluster+9)& (0+255),f,b
  9550  0016BC  0E00               	movlw	0
  9551  0016BE  23B3               	addwfc	(??_get_cluster+10)& (0+255),f,b
  9552  0016C0  0100               	movlb	0	; () banked
  9553  0016C2  51B2               	movf	(??_get_cluster+9)& (0+255),w,b
  9554  0016C4  0100               	movlb	0	; () banked
  9555  0016C6  25DD               	addwf	get_cluster@fs& (0+255),w,b
  9556  0016C8  6ED9               	movwf	fsr2l,c
  9557  0016CA  0100               	movlb	0	; () banked
  9558  0016CC  51B3               	movf	(??_get_cluster+10)& (0+255),w,b
  9559  0016CE  0100               	movlb	0	; () banked
  9560  0016D0  21DE               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9561  0016D2  6EDA               	movwf	fsr2h,c
  9562  0016D4  50DF               	movf	indf2,w,c
  9563  0016D6  0100               	movlb	0	; () banked
  9564  0016D8  6FB4               	movwf	(??_get_cluster+11)& (0+255),b
  9565  0016DA  0100               	movlb	0	; () banked
  9566  0016DC  51B4               	movf	(??_get_cluster+11)& (0+255),w,b
  9567  0016DE  0100               	movlb	0	; () banked
  9568  0016E0  13AE               	iorwf	(??_get_cluster+5)& (0+255),f,b
  9569  0016E2  0E00               	movlw	0
  9570  0016E4  13AF               	iorwf	(??_get_cluster+6)& (0+255),f,b
  9571  0016E6  C0AE  F0A5         	movff	??_get_cluster+5,?_get_cluster
  9572  0016EA  C0AF  F0A6         	movff	??_get_cluster+6,?_get_cluster+1
  9573  0016EE  0100               	movlb	0	; () banked
  9574  0016F0  6BA7               	clrf	(?_get_cluster+2)& (0+255),b
  9575  0016F2  6BA8               	clrf	(?_get_cluster+3)& (0+255),b
  9576                           
  9577                           ; BSR set to: 0
  9578  0016F4  0012               	return	
  9579  0016F6                     l11513:
  9580                           
  9581                           ; BSR set to: 0
  9582                           ;tff.c: 179: if (!move_window(fatsect + clust / 128)) break;
  9583  0016F6  C0A5  F0A9         	movff	get_cluster@clust,??_get_cluster
  9584  0016FA  C0A6  F0AA         	movff	get_cluster@clust+1,??_get_cluster+1
  9585  0016FE  C0A7  F0AB         	movff	get_cluster@clust+2,??_get_cluster+2
  9586  001702  C0A8  F0AC         	movff	get_cluster@clust+3,??_get_cluster+3
  9587  001706  0E08               	movlw	8
  9588  001708  D006               	goto	u12400
  9589  00170A                     u12405:
  9590  00170A  0100               	movlb	0	; () banked
  9591  00170C  90D8               	bcf	status,0,c
  9592  00170E  33AC               	rrcf	(??_get_cluster+3)& (0+255),f,b
  9593  001710  33AB               	rrcf	(??_get_cluster+2)& (0+255),f,b
  9594  001712  33AA               	rrcf	(??_get_cluster+1)& (0+255),f,b
  9595  001714  33A9               	rrcf	??_get_cluster& (0+255),f,b
  9596  001716                     u12400:
  9597  001716  2EE8               	decfsz	wreg,f,c
  9598  001718  D7F8               	goto	u12405
  9599  00171A  0100               	movlb	0	; () banked
  9600  00171C  51D7               	movf	get_cluster@fatsect& (0+255),w,b
  9601  00171E  0100               	movlb	0	; () banked
  9602  001720  25A9               	addwf	??_get_cluster& (0+255),w,b
  9603  001722  0100               	movlb	0	; () banked
  9604  001724  6F8E               	movwf	move_window@sector& (0+255),b
  9605  001726  0100               	movlb	0	; () banked
  9606  001728  51D8               	movf	(get_cluster@fatsect+1)& (0+255),w,b
  9607  00172A  0100               	movlb	0	; () banked
  9608  00172C  21AA               	addwfc	(??_get_cluster+1)& (0+255),w,b
  9609  00172E  0100               	movlb	0	; () banked
  9610  001730  6F8F               	movwf	(move_window@sector+1)& (0+255),b
  9611  001732  0100               	movlb	0	; () banked
  9612  001734  51D9               	movf	(get_cluster@fatsect+2)& (0+255),w,b
  9613  001736  0100               	movlb	0	; () banked
  9614  001738  21AB               	addwfc	(??_get_cluster+2)& (0+255),w,b
  9615  00173A  0100               	movlb	0	; () banked
  9616  00173C  6F90               	movwf	(move_window@sector+2)& (0+255),b
  9617  00173E  0100               	movlb	0	; () banked
  9618  001740  51DA               	movf	(get_cluster@fatsect+3)& (0+255),w,b
  9619  001742  0100               	movlb	0	; () banked
  9620  001744  21AC               	addwfc	(??_get_cluster+3)& (0+255),w,b
  9621  001746  0100               	movlb	0	; () banked
  9622  001748  6F91               	movwf	(move_window@sector+3)& (0+255),b
  9623  00174A  EC28  F01D         	call	_move_window	;wreg free
  9624  00174E  0900               	iorlw	0
  9625  001750  B4D8               	btfsc	status,2,c
  9626  001752  D134               	goto	l11525
  9627                           
  9628                           ;tff.c: 180: return (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[((WORD)clust * 4) % 512U
      +                          ])+3)<<24)|((DWORD)*(volatile BYTE*)((&fs->win[((WORD)clust * 4) % 512U])+2)<<16)|((WORD
      +                          )*(volatile BYTE*)((&fs->win[((WORD)clust * 4) % 512U])+1)<<8)|*(volatile BYTE*)(&fs->w
  9629  001754  0EFF               	movlw	255
  9630  001756  0100               	movlb	0	; () banked
  9631  001758  6FA9               	movwf	??_get_cluster& (0+255),b
  9632  00175A  0E01               	movlw	1
  9633  00175C  0100               	movlb	0	; () banked
  9634  00175E  6FAA               	movwf	(??_get_cluster+1)& (0+255),b
  9635  001760  C0A5  F0AB         	movff	get_cluster@clust,??_get_cluster+2
  9636  001764  C0A6  F0AC         	movff	get_cluster@clust+1,??_get_cluster+3
  9637  001768  0100               	movlb	0	; () banked
  9638  00176A  90D8               	bcf	status,0,c
  9639  00176C  37AB               	rlcf	(??_get_cluster+2)& (0+255),f,b
  9640  00176E  37AC               	rlcf	(??_get_cluster+3)& (0+255),f,b
  9641  001770  0100               	movlb	0	; () banked
  9642  001772  90D8               	bcf	status,0,c
  9643  001774  37AB               	rlcf	(??_get_cluster+2)& (0+255),f,b
  9644  001776  37AC               	rlcf	(??_get_cluster+3)& (0+255),f,b
  9645  001778  0100               	movlb	0	; () banked
  9646  00177A  51A9               	movf	??_get_cluster& (0+255),w,b
  9647  00177C  0100               	movlb	0	; () banked
  9648  00177E  17AB               	andwf	(??_get_cluster+2)& (0+255),f,b
  9649  001780  0100               	movlb	0	; () banked
  9650  001782  51AA               	movf	(??_get_cluster+1)& (0+255),w,b
  9651  001784  0100               	movlb	0	; () banked
  9652  001786  17AC               	andwf	(??_get_cluster+3)& (0+255),f,b
  9653  001788  0E29               	movlw	41
  9654  00178A  0100               	movlb	0	; () banked
  9655  00178C  27AB               	addwf	(??_get_cluster+2)& (0+255),f,b
  9656  00178E  0E00               	movlw	0
  9657  001790  23AC               	addwfc	(??_get_cluster+3)& (0+255),f,b
  9658  001792  0100               	movlb	0	; () banked
  9659  001794  51AB               	movf	(??_get_cluster+2)& (0+255),w,b
  9660  001796  0100               	movlb	0	; () banked
  9661  001798  25DD               	addwf	get_cluster@fs& (0+255),w,b
  9662  00179A  6ED9               	movwf	fsr2l,c
  9663  00179C  0100               	movlb	0	; () banked
  9664  00179E  51AC               	movf	(??_get_cluster+3)& (0+255),w,b
  9665  0017A0  0100               	movlb	0	; () banked
  9666  0017A2  21DE               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9667  0017A4  6EDA               	movwf	fsr2h,c
  9668  0017A6  50DF               	movf	indf2,w,c
  9669  0017A8  0100               	movlb	0	; () banked
  9670  0017AA  6FAD               	movwf	(??_get_cluster+4)& (0+255),b
  9671  0017AC  0100               	movlb	0	; () banked
  9672  0017AE  51AD               	movf	(??_get_cluster+4)& (0+255),w,b
  9673  0017B0  0100               	movlb	0	; () banked
  9674  0017B2  6FAF               	movwf	(??_get_cluster+6)& (0+255),b
  9675  0017B4  6BAE               	clrf	(??_get_cluster+5)& (0+255),b
  9676  0017B6  0EFF               	movlw	255
  9677  0017B8  0100               	movlb	0	; () banked
  9678  0017BA  6FB0               	movwf	(??_get_cluster+7)& (0+255),b
  9679  0017BC  0E01               	movlw	1
  9680  0017BE  0100               	movlb	0	; () banked
  9681  0017C0  6FB1               	movwf	(??_get_cluster+8)& (0+255),b
  9682  0017C2  C0A5  F0B2         	movff	get_cluster@clust,??_get_cluster+9
  9683  0017C6  C0A6  F0B3         	movff	get_cluster@clust+1,??_get_cluster+10
  9684  0017CA  0100               	movlb	0	; () banked
  9685  0017CC  90D8               	bcf	status,0,c
  9686  0017CE  37B2               	rlcf	(??_get_cluster+9)& (0+255),f,b
  9687  0017D0  37B3               	rlcf	(??_get_cluster+10)& (0+255),f,b
  9688  0017D2  0100               	movlb	0	; () banked
  9689  0017D4  90D8               	bcf	status,0,c
  9690  0017D6  37B2               	rlcf	(??_get_cluster+9)& (0+255),f,b
  9691  0017D8  37B3               	rlcf	(??_get_cluster+10)& (0+255),f,b
  9692  0017DA  0100               	movlb	0	; () banked
  9693  0017DC  51B0               	movf	(??_get_cluster+7)& (0+255),w,b
  9694  0017DE  0100               	movlb	0	; () banked
  9695  0017E0  17B2               	andwf	(??_get_cluster+9)& (0+255),f,b
  9696  0017E2  0100               	movlb	0	; () banked
  9697  0017E4  51B1               	movf	(??_get_cluster+8)& (0+255),w,b
  9698  0017E6  0100               	movlb	0	; () banked
  9699  0017E8  17B3               	andwf	(??_get_cluster+10)& (0+255),f,b
  9700  0017EA  0E2A               	movlw	42
  9701  0017EC  0100               	movlb	0	; () banked
  9702  0017EE  27B2               	addwf	(??_get_cluster+9)& (0+255),f,b
  9703  0017F0  0E00               	movlw	0
  9704  0017F2  23B3               	addwfc	(??_get_cluster+10)& (0+255),f,b
  9705  0017F4  0100               	movlb	0	; () banked
  9706  0017F6  51B2               	movf	(??_get_cluster+9)& (0+255),w,b
  9707  0017F8  0100               	movlb	0	; () banked
  9708  0017FA  25DD               	addwf	get_cluster@fs& (0+255),w,b
  9709  0017FC  6ED9               	movwf	fsr2l,c
  9710  0017FE  0100               	movlb	0	; () banked
  9711  001800  51B3               	movf	(??_get_cluster+10)& (0+255),w,b
  9712  001802  0100               	movlb	0	; () banked
  9713  001804  21DE               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9714  001806  6EDA               	movwf	fsr2h,c
  9715  001808  50DF               	movf	indf2,w,c
  9716  00180A  0100               	movlb	0	; () banked
  9717  00180C  6FB4               	movwf	(??_get_cluster+11)& (0+255),b
  9718  00180E  C0B4  F0B5         	movff	??_get_cluster+11,??_get_cluster+12
  9719  001812  0100               	movlb	0	; () banked
  9720  001814  6BB6               	clrf	(??_get_cluster+13)& (0+255),b
  9721  001816  6BB7               	clrf	(??_get_cluster+14)& (0+255),b
  9722  001818  6BB8               	clrf	(??_get_cluster+15)& (0+255),b
  9723  00181A  C0B6  F0B8         	movff	??_get_cluster+13,??_get_cluster+15
  9724  00181E  C0B5  F0B7         	movff	??_get_cluster+12,??_get_cluster+14
  9725  001822  0100               	movlb	0	; () banked
  9726  001824  6BB6               	clrf	(??_get_cluster+13)& (0+255),b
  9727  001826  6BB5               	clrf	(??_get_cluster+12)& (0+255),b
  9728  001828  0EFF               	movlw	255
  9729  00182A  0100               	movlb	0	; () banked
  9730  00182C  6FB9               	movwf	(??_get_cluster+16)& (0+255),b
  9731  00182E  0E01               	movlw	1
  9732  001830  0100               	movlb	0	; () banked
  9733  001832  6FBA               	movwf	(??_get_cluster+17)& (0+255),b
  9734  001834  C0A5  F0BB         	movff	get_cluster@clust,??_get_cluster+18
  9735  001838  C0A6  F0BC         	movff	get_cluster@clust+1,??_get_cluster+19
  9736  00183C  0100               	movlb	0	; () banked
  9737  00183E  90D8               	bcf	status,0,c
  9738  001840  37BB               	rlcf	(??_get_cluster+18)& (0+255),f,b
  9739  001842  37BC               	rlcf	(??_get_cluster+19)& (0+255),f,b
  9740  001844  0100               	movlb	0	; () banked
  9741  001846  90D8               	bcf	status,0,c
  9742  001848  37BB               	rlcf	(??_get_cluster+18)& (0+255),f,b
  9743  00184A  37BC               	rlcf	(??_get_cluster+19)& (0+255),f,b
  9744  00184C  0100               	movlb	0	; () banked
  9745  00184E  51B9               	movf	(??_get_cluster+16)& (0+255),w,b
  9746  001850  0100               	movlb	0	; () banked
  9747  001852  17BB               	andwf	(??_get_cluster+18)& (0+255),f,b
  9748  001854  0100               	movlb	0	; () banked
  9749  001856  51BA               	movf	(??_get_cluster+17)& (0+255),w,b
  9750  001858  0100               	movlb	0	; () banked
  9751  00185A  17BC               	andwf	(??_get_cluster+19)& (0+255),f,b
  9752  00185C  0E2B               	movlw	43
  9753  00185E  0100               	movlb	0	; () banked
  9754  001860  27BB               	addwf	(??_get_cluster+18)& (0+255),f,b
  9755  001862  0E00               	movlw	0
  9756  001864  23BC               	addwfc	(??_get_cluster+19)& (0+255),f,b
  9757  001866  0100               	movlb	0	; () banked
  9758  001868  51BB               	movf	(??_get_cluster+18)& (0+255),w,b
  9759  00186A  0100               	movlb	0	; () banked
  9760  00186C  25DD               	addwf	get_cluster@fs& (0+255),w,b
  9761  00186E  6ED9               	movwf	fsr2l,c
  9762  001870  0100               	movlb	0	; () banked
  9763  001872  51BC               	movf	(??_get_cluster+19)& (0+255),w,b
  9764  001874  0100               	movlb	0	; () banked
  9765  001876  21DE               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9766  001878  6EDA               	movwf	fsr2h,c
  9767  00187A  50DF               	movf	indf2,w,c
  9768  00187C  0100               	movlb	0	; () banked
  9769  00187E  6FBD               	movwf	(??_get_cluster+20)& (0+255),b
  9770  001880  C0BD  F0BE         	movff	??_get_cluster+20,??_get_cluster+21
  9771  001884  0100               	movlb	0	; () banked
  9772  001886  6BBF               	clrf	(??_get_cluster+22)& (0+255),b
  9773  001888  6BC0               	clrf	(??_get_cluster+23)& (0+255),b
  9774  00188A  6BC1               	clrf	(??_get_cluster+24)& (0+255),b
  9775  00188C  C0BE  F0C1         	movff	??_get_cluster+21,??_get_cluster+24
  9776  001890  0100               	movlb	0	; () banked
  9777  001892  6BC0               	clrf	(??_get_cluster+23)& (0+255),b
  9778  001894  6BBF               	clrf	(??_get_cluster+22)& (0+255),b
  9779  001896  6BBE               	clrf	(??_get_cluster+21)& (0+255),b
  9780  001898  0100               	movlb	0	; () banked
  9781  00189A  51B5               	movf	(??_get_cluster+12)& (0+255),w,b
  9782  00189C  0100               	movlb	0	; () banked
  9783  00189E  11BE               	iorwf	(??_get_cluster+21)& (0+255),w,b
  9784  0018A0  0100               	movlb	0	; () banked
  9785  0018A2  6FC2               	movwf	(??_get_cluster+25)& (0+255),b
  9786  0018A4  0100               	movlb	0	; () banked
  9787  0018A6  51B6               	movf	(??_get_cluster+13)& (0+255),w,b
  9788  0018A8  0100               	movlb	0	; () banked
  9789  0018AA  11BF               	iorwf	(??_get_cluster+22)& (0+255),w,b
  9790  0018AC  0100               	movlb	0	; () banked
  9791  0018AE  6FC3               	movwf	(??_get_cluster+26)& (0+255),b
  9792  0018B0  0100               	movlb	0	; () banked
  9793  0018B2  51B7               	movf	(??_get_cluster+14)& (0+255),w,b
  9794  0018B4  0100               	movlb	0	; () banked
  9795  0018B6  11C0               	iorwf	(??_get_cluster+23)& (0+255),w,b
  9796  0018B8  0100               	movlb	0	; () banked
  9797  0018BA  6FC4               	movwf	(??_get_cluster+27)& (0+255),b
  9798  0018BC  0100               	movlb	0	; () banked
  9799  0018BE  51B8               	movf	(??_get_cluster+15)& (0+255),w,b
  9800  0018C0  0100               	movlb	0	; () banked
  9801  0018C2  11C1               	iorwf	(??_get_cluster+24)& (0+255),w,b
  9802  0018C4  0100               	movlb	0	; () banked
  9803  0018C6  6FC5               	movwf	(??_get_cluster+28)& (0+255),b
  9804  0018C8  0100               	movlb	0	; () banked
  9805  0018CA  51AE               	movf	(??_get_cluster+5)& (0+255),w,b
  9806  0018CC  0100               	movlb	0	; () banked
  9807  0018CE  11C2               	iorwf	(??_get_cluster+25)& (0+255),w,b
  9808  0018D0  0100               	movlb	0	; () banked
  9809  0018D2  6FC6               	movwf	(??_get_cluster+29)& (0+255),b
  9810  0018D4  0100               	movlb	0	; () banked
  9811  0018D6  51AF               	movf	(??_get_cluster+6)& (0+255),w,b
  9812  0018D8  0100               	movlb	0	; () banked
  9813  0018DA  11C3               	iorwf	(??_get_cluster+26)& (0+255),w,b
  9814  0018DC  0100               	movlb	0	; () banked
  9815  0018DE  6FC7               	movwf	(??_get_cluster+30)& (0+255),b
  9816  0018E0  0E00               	movlw	0
  9817  0018E2  0100               	movlb	0	; () banked
  9818  0018E4  11C4               	iorwf	(??_get_cluster+27)& (0+255),w,b
  9819  0018E6  0100               	movlb	0	; () banked
  9820  0018E8  6FC8               	movwf	(??_get_cluster+31)& (0+255),b
  9821  0018EA  0E00               	movlw	0
  9822  0018EC  0100               	movlb	0	; () banked
  9823  0018EE  11C5               	iorwf	(??_get_cluster+28)& (0+255),w,b
  9824  0018F0  0100               	movlb	0	; () banked
  9825  0018F2  6FC9               	movwf	(??_get_cluster+32)& (0+255),b
  9826  0018F4  0EFF               	movlw	255
  9827  0018F6  0100               	movlb	0	; () banked
  9828  0018F8  6FCA               	movwf	(??_get_cluster+33)& (0+255),b
  9829  0018FA  0E01               	movlw	1
  9830  0018FC  0100               	movlb	0	; () banked
  9831  0018FE  6FCB               	movwf	(??_get_cluster+34)& (0+255),b
  9832  001900  C0A5  F0CC         	movff	get_cluster@clust,??_get_cluster+35
  9833  001904  C0A6  F0CD         	movff	get_cluster@clust+1,??_get_cluster+36
  9834  001908  0100               	movlb	0	; () banked
  9835  00190A  90D8               	bcf	status,0,c
  9836  00190C  37CC               	rlcf	(??_get_cluster+35)& (0+255),f,b
  9837  00190E  37CD               	rlcf	(??_get_cluster+36)& (0+255),f,b
  9838  001910  0100               	movlb	0	; () banked
  9839  001912  90D8               	bcf	status,0,c
  9840  001914  37CC               	rlcf	(??_get_cluster+35)& (0+255),f,b
  9841  001916  37CD               	rlcf	(??_get_cluster+36)& (0+255),f,b
  9842  001918  0100               	movlb	0	; () banked
  9843  00191A  51CA               	movf	(??_get_cluster+33)& (0+255),w,b
  9844  00191C  0100               	movlb	0	; () banked
  9845  00191E  17CC               	andwf	(??_get_cluster+35)& (0+255),f,b
  9846  001920  0100               	movlb	0	; () banked
  9847  001922  51CB               	movf	(??_get_cluster+34)& (0+255),w,b
  9848  001924  0100               	movlb	0	; () banked
  9849  001926  17CD               	andwf	(??_get_cluster+36)& (0+255),f,b
  9850  001928  0E28               	movlw	40
  9851  00192A  0100               	movlb	0	; () banked
  9852  00192C  27CC               	addwf	(??_get_cluster+35)& (0+255),f,b
  9853  00192E  0E00               	movlw	0
  9854  001930  23CD               	addwfc	(??_get_cluster+36)& (0+255),f,b
  9855  001932  0100               	movlb	0	; () banked
  9856  001934  51CC               	movf	(??_get_cluster+35)& (0+255),w,b
  9857  001936  0100               	movlb	0	; () banked
  9858  001938  25DD               	addwf	get_cluster@fs& (0+255),w,b
  9859  00193A  6ED9               	movwf	fsr2l,c
  9860  00193C  0100               	movlb	0	; () banked
  9861  00193E  51CD               	movf	(??_get_cluster+36)& (0+255),w,b
  9862  001940  0100               	movlb	0	; () banked
  9863  001942  21DE               	addwfc	(get_cluster@fs+1)& (0+255),w,b
  9864  001944  6EDA               	movwf	fsr2h,c
  9865  001946  50DF               	movf	indf2,w,c
  9866  001948  0100               	movlb	0	; () banked
  9867  00194A  6FCE               	movwf	(??_get_cluster+37)& (0+255),b
  9868  00194C  0100               	movlb	0	; () banked
  9869  00194E  51CE               	movf	(??_get_cluster+37)& (0+255),w,b
  9870  001950  0100               	movlb	0	; () banked
  9871  001952  11C6               	iorwf	(??_get_cluster+29)& (0+255),w,b
  9872  001954  0100               	movlb	0	; () banked
  9873  001956  6FCF               	movwf	(??_get_cluster+38)& (0+255),b
  9874  001958  0100               	movlb	0	; () banked
  9875  00195A  51C7               	movf	(??_get_cluster+30)& (0+255),w,b
  9876  00195C  0100               	movlb	0	; () banked
  9877  00195E  6FD0               	movwf	(??_get_cluster+39)& (0+255),b
  9878  001960  0100               	movlb	0	; () banked
  9879  001962  51C8               	movf	(??_get_cluster+31)& (0+255),w,b
  9880  001964  0100               	movlb	0	; () banked
  9881  001966  6FD1               	movwf	(??_get_cluster+40)& (0+255),b
  9882  001968  0100               	movlb	0	; () banked
  9883  00196A  51C9               	movf	(??_get_cluster+32)& (0+255),w,b
  9884  00196C  0100               	movlb	0	; () banked
  9885  00196E  6FD2               	movwf	(??_get_cluster+41)& (0+255),b
  9886  001970  0EFF               	movlw	255
  9887  001972  0100               	movlb	0	; () banked
  9888  001974  15CF               	andwf	(??_get_cluster+38)& (0+255),w,b
  9889  001976  0100               	movlb	0	; () banked
  9890  001978  6FA5               	movwf	?_get_cluster& (0+255),b
  9891  00197A  0EFF               	movlw	255
  9892  00197C  0100               	movlb	0	; () banked
  9893  00197E  15D0               	andwf	(??_get_cluster+39)& (0+255),w,b
  9894  001980  0100               	movlb	0	; () banked
  9895  001982  6FA6               	movwf	(?_get_cluster+1)& (0+255),b
  9896  001984  0EFF               	movlw	255
  9897  001986  0100               	movlb	0	; () banked
  9898  001988  15D1               	andwf	(??_get_cluster+40)& (0+255),w,b
  9899  00198A  0100               	movlb	0	; () banked
  9900  00198C  6FA7               	movwf	(?_get_cluster+2)& (0+255),b
  9901  00198E  0E0F               	movlw	15
  9902  001990  0100               	movlb	0	; () banked
  9903  001992  15D2               	andwf	(??_get_cluster+41)& (0+255),w,b
  9904  001994  0100               	movlb	0	; () banked
  9905  001996  6FA8               	movwf	(?_get_cluster+3)& (0+255),b
  9906                           
  9907                           ; BSR set to: 0
  9908  001998  0012               	return	
  9909  00199A                     l11523:
  9910                           
  9911                           ; BSR set to: 0
  9912  00199A  0100               	movlb	0	; () banked
  9913  00199C  EE20 F024          	lfsr	2,36
  9914  0019A0  51DD               	movf	get_cluster@fs& (0+255),w,b
  9915  0019A2  26D9               	addwf	fsr2l,f,c
  9916  0019A4  51DE               	movf	(get_cluster@fs+1)& (0+255),w,b
  9917  0019A6  22DA               	addwfc	fsr2h,f,c
  9918  0019A8  50DF               	movf	indf2,w,c
  9919                           
  9920                           ; Switch size 1, requested type "space"
  9921                           ; Number of cases is 3, Range of values is 1 to 3
  9922                           ; switch strategies available:
  9923                           ; Name         Instructions Cycles
  9924                           ; simple_byte           10     6 (average)
  9925                           ;	Chosen strategy is simple_byte
  9926  0019AA  0A01               	xorlw	1	; case 1
  9927  0019AC  B4D8               	btfsc	status,2,c
  9928  0019AE  D529               	goto	l11479
  9929  0019B0  0A03               	xorlw	3	; case 2
  9930  0019B2  B4D8               	btfsc	status,2,c
  9931  0019B4  D610               	goto	l11505
  9932  0019B6  0A01               	xorlw	1	; case 3
  9933  0019B8  B4D8               	btfsc	status,2,c
  9934  0019BA  D69D               	goto	l11513
  9935  0019BC                     l11525:
  9936                           
  9937                           ;tff.c: 183: }
  9938                           ;tff.c: 185: return 1;
  9939  0019BC  0E01               	movlw	1
  9940  0019BE  0100               	movlb	0	; () banked
  9941  0019C0  6FA5               	movwf	?_get_cluster& (0+255),b
  9942  0019C2  0E00               	movlw	0
  9943  0019C4  6FA6               	movwf	(?_get_cluster+1)& (0+255),b
  9944  0019C6  0E00               	movlw	0
  9945  0019C8  6FA7               	movwf	(?_get_cluster+2)& (0+255),b
  9946  0019CA  0E00               	movlw	0
  9947  0019CC  6FA8               	movwf	(?_get_cluster+3)& (0+255),b
  9948  0019CE  0012               	return	
  9949  0019D0                     __end_of_get_cluster:
  9950                           	opt stack 0
  9951                           tosu	equ	0xFFF
  9952                           tosh	equ	0xFFE
  9953                           tosl	equ	0xFFD
  9954                           pclath	equ	0xFFA
  9955                           tblptru	equ	0xFF8
  9956                           tblptrh	equ	0xFF7
  9957                           tblptrl	equ	0xFF6
  9958                           tablat	equ	0xFF5
  9959                           prodh	equ	0xFF4
  9960                           prodl	equ	0xFF3
  9961                           intcon	equ	0xFF2
  9962                           intcon2	equ	0xFF1
  9963                           intcon3	equ	0xFF0
  9964                           postinc0	equ	0xFEE
  9965                           wreg	equ	0xFE8
  9966                           indf1	equ	0xFE7
  9967                           postinc1	equ	0xFE6
  9968                           postdec1	equ	0xFE5
  9969                           fsr1h	equ	0xFE2
  9970                           fsr1l	equ	0xFE1
  9971                           indf2	equ	0xFDF
  9972                           postinc2	equ	0xFDE
  9973                           postdec2	equ	0xFDD
  9974                           fsr2h	equ	0xFDA
  9975                           fsr2l	equ	0xFD9
  9976                           status	equ	0xFD8
  9977                           
  9978 ;; *************** function ___wmul *****************
  9979 ;; Defined at:
  9980 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  9981 ;; Parameters:    Size  Location     Type
  9982 ;;  multiplier      2   21[COMRAM] unsigned int 
  9983 ;;  multiplicand    2   23[COMRAM] unsigned int 
  9984 ;; Auto vars:     Size  Location     Type
  9985 ;;  product         2   25[COMRAM] unsigned int 
  9986 ;; Return value:  Size  Location     Type
  9987 ;;                  2   21[COMRAM] unsigned int 
  9988 ;; Registers used:
  9989 ;;		wreg, status,2, status,0, prodl, prodh
  9990 ;; Tracked objects:
  9991 ;;		On entry : 0/0
  9992 ;;		On exit  : 0/0
  9993 ;;		Unchanged: 0/0
  9994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9995 ;;      Params:         4       0       0       0       0       0       0       0       0
  9996 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9998 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9999 ;;Total ram usage:        6 bytes
 10000 ;; Hardware stack levels used:    1
 10001 ;; Hardware stack levels required when called:    2
 10002 ;; This function calls:
 10003 ;;		Nothing
 10004 ;; This function is called by:
 10005 ;;		_get_cluster
 10006 ;;		_put_cluster
 10007 ;;		_sprintf
 10008 ;;		_scale
 10009 ;;		_fround
 10010 ;; This function uses a non-reentrant model
 10011 ;;
 10012                           
 10013                           	psect	text25
 10014  005658                     __ptext25:
 10015                           	opt stack 0
 10016  005658                     ___wmul:
 10017                           	opt stack 22
 10018                           
 10019                           ; BSR set to: 0
 10020                           ;incstack = 0
 10021  005658  5016               	movf	___wmul@multiplier,w,c
 10022  00565A  0218               	mulwf	___wmul@multiplicand,c
 10023  00565C  CFF3 F01A          	movff	prodl,___wmul@product
 10024  005660  CFF4 F01B          	movff	prodh,___wmul@product+1
 10025  005664  5016               	movf	___wmul@multiplier,w,c
 10026  005666  0219               	mulwf	___wmul@multiplicand+1,c
 10027  005668  50F3               	movf	prodl,w,c
 10028  00566A  261B               	addwf	___wmul@product+1,f,c
 10029  00566C  5017               	movf	___wmul@multiplier+1,w,c
 10030  00566E  0218               	mulwf	___wmul@multiplicand,c
 10031  005670  50F3               	movf	prodl,w,c
 10032  005672  261B               	addwf	___wmul@product+1,f,c
 10033  005674  C01A  F016         	movff	___wmul@product,?___wmul
 10034  005678  C01B  F017         	movff	___wmul@product+1,?___wmul+1
 10035  00567C  0012               	return	
 10036  00567E                     __end_of___wmul:
 10037                           	opt stack 0
 10038                           tosu	equ	0xFFF
 10039                           tosh	equ	0xFFE
 10040                           tosl	equ	0xFFD
 10041                           pclath	equ	0xFFA
 10042                           tblptru	equ	0xFF8
 10043                           tblptrh	equ	0xFF7
 10044                           tblptrl	equ	0xFF6
 10045                           tablat	equ	0xFF5
 10046                           prodh	equ	0xFF4
 10047                           prodl	equ	0xFF3
 10048                           intcon	equ	0xFF2
 10049                           intcon2	equ	0xFF1
 10050                           intcon3	equ	0xFF0
 10051                           postinc0	equ	0xFEE
 10052                           wreg	equ	0xFE8
 10053                           indf1	equ	0xFE7
 10054                           postinc1	equ	0xFE6
 10055                           postdec1	equ	0xFE5
 10056                           fsr1h	equ	0xFE2
 10057                           fsr1l	equ	0xFE1
 10058                           indf2	equ	0xFDF
 10059                           postinc2	equ	0xFDE
 10060                           postdec2	equ	0xFDD
 10061                           fsr2h	equ	0xFDA
 10062                           fsr2l	equ	0xFD9
 10063                           status	equ	0xFD8
 10064                           
 10065 ;; *************** function _memcpy *****************
 10066 ;; Defined at:
 10067 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memcpy.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;  d1              2   21[COMRAM] PTR void 
 10070 ;;		 -> fs.win(512), fs(552), f_rename@direntry(21), NULL(0), 
 10071 ;;  s1              2   23[COMRAM] PTR const void 
 10072 ;;		 -> fs.win(512), fs(552), f_rename@direntry(21), f_rename@fn(12), 
 10073 ;;		 -> f_mkdir@fn(12), f_open@fn(12), NULL(0), 
 10074 ;;  n               2   25[COMRAM] unsigned int 
 10075 ;; Auto vars:     Size  Location     Type
 10076 ;;  s               2   29[COMRAM] PTR const unsigned char 
 10077 ;;		 -> fs.win(512), fs(552), f_rename@direntry(21), f_rename@fn(12), 
 10078 ;;		 -> f_mkdir@fn(12), f_open@fn(12), NULL(0), 
 10079 ;;  d               2   27[COMRAM] PTR unsigned char 
 10080 ;;		 -> fs.win(512), fs(552), f_rename@direntry(21), NULL(0), 
 10081 ;; Return value:  Size  Location     Type
 10082 ;;                  2   21[COMRAM] PTR void 
 10083 ;; Registers used:
 10084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10085 ;; Tracked objects:
 10086 ;;		On entry : 0/0
 10087 ;;		On exit  : 0/0
 10088 ;;		Unchanged: 0/0
 10089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10090 ;;      Params:         6       0       0       0       0       0       0       0       0
 10091 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10092 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10093 ;;      Totals:        10       0       0       0       0       0       0       0       0
 10094 ;;Total ram usage:       10 bytes
 10095 ;; Hardware stack levels used:    1
 10096 ;; Hardware stack levels required when called:    2
 10097 ;; This function calls:
 10098 ;;		Nothing
 10099 ;; This function is called by:
 10100 ;;		_f_open
 10101 ;;		_f_read
 10102 ;;		_f_write
 10103 ;;		_f_mkdir
 10104 ;;		_f_rename
 10105 ;; This function uses a non-reentrant model
 10106 ;;
 10107                           
 10108                           	psect	text26
 10109  005470                     __ptext26:
 10110                           	opt stack 0
 10111  005470                     _memcpy:
 10112                           	opt stack 25
 10113                           
 10114                           ;incstack = 0
 10115  005470  C018  F01E         	movff	memcpy@s1,memcpy@s
 10116  005474  C019  F01F         	movff	memcpy@s1+1,memcpy@s+1
 10117  005478  C016  F01C         	movff	memcpy@d1,memcpy@d
 10118  00547C  C017  F01D         	movff	memcpy@d1+1,memcpy@d+1
 10119  005480  D00E               	goto	l12407
 10120  005482                     l12401:
 10121  005482  C01E  FFD9         	movff	memcpy@s,fsr2l
 10122  005486  C01F  FFDA         	movff	memcpy@s+1,fsr2h
 10123  00548A  C01C  FFE1         	movff	memcpy@d,fsr1l
 10124  00548E  C01D  FFE2         	movff	memcpy@d+1,fsr1h
 10125  005492  CFDF FFE7          	movff	indf2,indf1
 10126  005496  4A1E               	infsnz	memcpy@s,f,c
 10127  005498  2A1F               	incf	memcpy@s+1,f,c
 10128  00549A  4A1C               	infsnz	memcpy@d,f,c
 10129  00549C  2A1D               	incf	memcpy@d+1,f,c
 10130  00549E                     l12407:
 10131  00549E  061A               	decf	memcpy@n,f,c
 10132  0054A0  A0D8               	btfss	status,0,c
 10133  0054A2  061B               	decf	memcpy@n+1,f,c
 10134  0054A4  281A               	incf	memcpy@n,w,c
 10135  0054A6  E1ED               	bnz	l12401
 10136  0054A8  281B               	incf	memcpy@n+1,w,c
 10137  0054AA  B4D8               	btfsc	status,2,c
 10138  0054AC  0012               	return	
 10139  0054AE  D7E9               	goto	l12401
 10140  0054B0                     __end_of_memcpy:
 10141                           	opt stack 0
 10142                           tosu	equ	0xFFF
 10143                           tosh	equ	0xFFE
 10144                           tosl	equ	0xFFD
 10145                           pclath	equ	0xFFA
 10146                           tblptru	equ	0xFF8
 10147                           tblptrh	equ	0xFF7
 10148                           tblptrl	equ	0xFF6
 10149                           tablat	equ	0xFF5
 10150                           prodh	equ	0xFF4
 10151                           prodl	equ	0xFF3
 10152                           intcon	equ	0xFF2
 10153                           intcon2	equ	0xFF1
 10154                           intcon3	equ	0xFF0
 10155                           postinc0	equ	0xFEE
 10156                           wreg	equ	0xFE8
 10157                           indf1	equ	0xFE7
 10158                           postinc1	equ	0xFE6
 10159                           postdec1	equ	0xFE5
 10160                           fsr1h	equ	0xFE2
 10161                           fsr1l	equ	0xFE1
 10162                           indf2	equ	0xFDF
 10163                           postinc2	equ	0xFDE
 10164                           postdec2	equ	0xFDD
 10165                           fsr2h	equ	0xFDA
 10166                           fsr2l	equ	0xFD9
 10167                           status	equ	0xFD8
 10168                           
 10169 ;; *************** function _auto_mount *****************
 10170 ;; Defined at:
 10171 ;;		line 692 in file "bibliotecas/tff.c"
 10172 ;; Parameters:    Size  Location     Type
 10173 ;;  path            2   71[BANK0 ] PTR PTR const unsigned c
 10174 ;;		 -> f_rename@path_old(2), f_utime@path(2), f_chmod@path(2), f_mkdir@path(2), 
 10175 ;;		 -> f_unlink@path(2), f_getfree@drv(2), f_stat@path(2), f_opendir@path(2), 
 10176 ;;		 -> f_open@path(2), 
 10177 ;;  chk_wp          1   73[BANK0 ] unsigned char 
 10178 ;; Auto vars:     Size  Location     Type
 10179 ;;  fatsize         4  115[BANK0 ] unsigned long 
 10180 ;;  bootsect        4  108[BANK0 ] unsigned long 
 10181 ;;  totalsect       4  104[BANK0 ] unsigned long 
 10182 ;;  maxclust        4  100[BANK0 ] unsigned long 
 10183 ;;  fs              2  120[BANK0 ] PTR struct _FATFS
 10184 ;;		 -> fs(552), NULL(0), 
 10185 ;;  p               2  112[BANK0 ] PTR const unsigned char 
 10186 ;;		 -> STR_39(10), 
 10187 ;;  fmt             1  119[BANK0 ] unsigned char 
 10188 ;;  stat            1  114[BANK0 ] unsigned char 
 10189 ;; Return value:  Size  Location     Type
 10190 ;;                  1    wreg      enum E155
 10191 ;; Registers used:
 10192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10193 ;; Tracked objects:
 10194 ;;		On entry : 0/0
 10195 ;;		On exit  : 0/0
 10196 ;;		Unchanged: 0/0
 10197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10198 ;;      Params:         0       3       0       0       0       0       0       0       0
 10199 ;;      Locals:         0      22       0       0       0       0       0       0       0
 10200 ;;      Temps:          0      26       0       0       0       0       0       0       0
 10201 ;;      Totals:         0      51       0       0       0       0       0       0       0
 10202 ;;Total ram usage:       51 bytes
 10203 ;; Hardware stack levels used:    1
 10204 ;; Hardware stack levels required when called:   11
 10205 ;; This function calls:
 10206 ;;		___lldiv
 10207 ;;		___lmul
 10208 ;;		_check_fs
 10209 ;;		_disk_initialize
 10210 ;;		_escreve_frase_ram_lcd
 10211 ;;		_escreve_inteiro_lcd
 10212 ;;		_memset
 10213 ;;		_posicao_cursor_lcd
 10214 ;; This function is called by:
 10215 ;;		_f_open
 10216 ;;		_f_opendir
 10217 ;;		_f_stat
 10218 ;;		_f_getfree
 10219 ;;		_f_unlink
 10220 ;;		_f_mkdir
 10221 ;;		_f_chmod
 10222 ;;		_f_utime
 10223 ;;		_f_rename
 10224 ;; This function uses a non-reentrant model
 10225 ;;
 10226                           
 10227                           	psect	text27
 10228  000012                     __ptext27:
 10229                           	opt stack 0
 10230  000012                     _auto_mount:
 10231                           	opt stack 16
 10232                           
 10233                           ;tff.c: 697: BYTE fmt;
 10234                           ;tff.c: 698: DSTATUS stat;
 10235                           ;tff.c: 699: DWORD bootsect, fatsize, totalsect, maxclust;
 10236                           ;tff.c: 700: const char *p = *path;
 10237                           
 10238                           ;incstack = 0
 10239  000012  C0A7  FFD9         	movff	auto_mount@path,fsr2l
 10240  000016  C0A8  FFDA         	movff	auto_mount@path+1,fsr2h
 10241  00001A  CFDE F0D0          	movff	postinc2,auto_mount@p
 10242  00001E  CFDD F0D1          	movff	postdec2,auto_mount@p+1
 10243                           
 10244                           ;tff.c: 701: FATFS *fs;
 10245                           ;tff.c: 704: while (*p == ' ') p++;
 10246  000022  D003               	goto	l12259
 10247  000024                     l12257:
 10248  000024  0100               	movlb	0	; () banked
 10249  000026  4BD0               	infsnz	auto_mount@p& (0+255),f,b
 10250  000028  2BD1               	incf	(auto_mount@p+1)& (0+255),f,b
 10251  00002A                     l12259:
 10252  00002A  C0D0  FFF6         	movff	auto_mount@p,tblptrl
 10253  00002E  C0D1  FFF7         	movff	auto_mount@p+1,tblptrh
 10254  000032                     	if	0	;tblptru may be non-zero
 10255  000032                     	endif
 10256  000032                     	if	0	;tblptru may be non-zero
 10257  000032                     	endif
 10258  000032  0008               	tblrd		*
 10259  000034  50F5               	movf	tablat,w,c
 10260  000036  0A20               	xorlw	32
 10261  000038  B4D8               	btfsc	status,2,c
 10262  00003A  D7F4               	goto	l12257
 10263                           
 10264                           ;tff.c: 705: if (*p == '/') p++;
 10265  00003C  C0D0  FFF6         	movff	auto_mount@p,tblptrl
 10266  000040  C0D1  FFF7         	movff	auto_mount@p+1,tblptrh
 10267  000044                     	if	0	;tblptru may be non-zero
 10268  000044                     	endif
 10269  000044                     	if	0	;tblptru may be non-zero
 10270  000044                     	endif
 10271  000044  0008               	tblrd		*
 10272  000046  50F5               	movf	tablat,w,c
 10273  000048  0A2F               	xorlw	47
 10274  00004A  A4D8               	btfss	status,2,c
 10275  00004C  D003               	goto	l12265
 10276  00004E  0100               	movlb	0	; () banked
 10277  000050  4BD0               	infsnz	auto_mount@p& (0+255),f,b
 10278  000052  2BD1               	incf	(auto_mount@p+1)& (0+255),f,b
 10279  000054                     l12265:
 10280                           
 10281                           ;tff.c: 706: *path = p;
 10282  000054  C0A7  FFD9         	movff	auto_mount@path,fsr2l
 10283  000058  C0A8  FFDA         	movff	auto_mount@path+1,fsr2h
 10284  00005C  C0D0  FFDE         	movff	auto_mount@p,postinc2
 10285  000060  C0D1  FFDD         	movff	auto_mount@p+1,postdec2
 10286                           
 10287                           ;tff.c: 709: fs = FatFs;
 10288  000064  C035  F0D8         	movff	_FatFs,auto_mount@fs
 10289  000068  C036  F0D9         	movff	_FatFs+1,auto_mount@fs+1
 10290                           
 10291                           ;tff.c: 710: if (!fs) return FR_NOT_ENABLED;
 10292  00006C  0100               	movlb	0	; () banked
 10293  00006E  51D8               	movf	auto_mount@fs& (0+255),w,b
 10294  000070  0100               	movlb	0	; () banked
 10295  000072  11D9               	iorwf	(auto_mount@fs+1)& (0+255),w,b
 10296  000074  A4D8               	btfss	status,2,c
 10297  000076  D002               	goto	l12275
 10298                           
 10299                           ; BSR set to: 0
 10300  000078  0E0A               	movlw	10
 10301                           
 10302                           ; BSR set to: 0
 10303  00007A  0012               	return	
 10304  00007C                     l12275:
 10305                           
 10306                           ; BSR set to: 0
 10307                           ;tff.c: 712: if (fs->fs_type) {
 10308  00007C  0100               	movlb	0	; () banked
 10309  00007E  EE20 F024          	lfsr	2,36
 10310  000082  51D8               	movf	auto_mount@fs& (0+255),w,b
 10311  000084  26D9               	addwf	fsr2l,f,c
 10312  000086  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 10313  000088  22DA               	addwfc	fsr2h,f,c
 10314  00008A  50DF               	movf	indf2,w,c
 10315  00008C  B4D8               	btfsc	status,2,c
 10316  00008E  D012               	goto	l12293
 10317                           
 10318                           ; BSR set to: 0
 10319                           ;tff.c: 714: stat = 0;
 10320  000090  0E00               	movlw	0
 10321  000092  0100               	movlb	0	; () banked
 10322  000094  6FD2               	movwf	auto_mount@stat& (0+255),b
 10323                           
 10324                           ; BSR set to: 0
 10325                           ;tff.c: 715: if (!(stat & 0x01)) {
 10326  000096  0100               	movlb	0	; () banked
 10327  000098  B1D2               	btfsc	auto_mount@stat& (0+255),0,b
 10328  00009A  D00C               	goto	l12293
 10329                           
 10330                           ; BSR set to: 0
 10331                           ;tff.c: 717: if (chk_wp && (stat & 0x04))
 10332  00009C  0100               	movlb	0	; () banked
 10333  00009E  51A9               	movf	auto_mount@chk_wp& (0+255),w,b
 10334  0000A0  0100               	movlb	0	; () banked
 10335  0000A2  B4D8               	btfsc	status,2,c
 10336  0000A4  D005               	goto	l12289
 10337                           
 10338                           ; BSR set to: 0
 10339  0000A6  0100               	movlb	0	; () banked
 10340  0000A8  A5D2               	btfss	auto_mount@stat& (0+255),2,b
 10341  0000AA  D002               	goto	l12289
 10342                           
 10343                           ; BSR set to: 0
 10344                           ;tff.c: 718: return FR_WRITE_PROTECTED;
 10345  0000AC  0E09               	movlw	9
 10346                           
 10347                           ; BSR set to: 0
 10348  0000AE  0012               	return	
 10349  0000B0                     l12289:
 10350                           
 10351                           ; BSR set to: 0
 10352                           ;tff.c: 720: return FR_OK;
 10353  0000B0  0E00               	movlw	0
 10354                           
 10355                           ; BSR set to: 0
 10356  0000B2  0012               	return	
 10357  0000B4                     l12293:
 10358                           
 10359                           ; BSR set to: 0
 10360                           ;tff.c: 721: }
 10361                           ;tff.c: 722: }
 10362                           ;tff.c: 726: memset(fs, 0, sizeof(FATFS));
 10363  0000B4  C0D8  F016         	movff	auto_mount@fs,memset@p1
 10364  0000B8  C0D9  F017         	movff	auto_mount@fs+1,memset@p1+1
 10365  0000BC  0E00               	movlw	0
 10366  0000BE  6E19               	movwf	memset@c+1,c
 10367  0000C0  0E00               	movlw	0
 10368  0000C2  6E18               	movwf	memset@c,c
 10369  0000C4  0E02               	movlw	2
 10370  0000C6  6E1B               	movwf	memset@n+1,c
 10371  0000C8  0E28               	movlw	40
 10372  0000CA  6E1A               	movwf	memset@n,c
 10373  0000CC  EC02  F02B         	call	_memset	;wreg free
 10374                           
 10375                           ;tff.c: 727: stat = disk_initialize(0);
 10376  0000D0  0E00               	movlw	0
 10377  0000D2  ECD5  F029         	call	_disk_initialize
 10378  0000D6  0100               	movlb	0	; () banked
 10379  0000D8  6FD2               	movwf	auto_mount@stat& (0+255),b
 10380                           
 10381                           ; BSR set to: 0
 10382                           ;tff.c: 729: if (stat & 0x01)
 10383  0000DA  0100               	movlb	0	; () banked
 10384  0000DC  A1D2               	btfss	auto_mount@stat& (0+255),0,b
 10385  0000DE  D002               	goto	l12303
 10386                           
 10387                           ; BSR set to: 0
 10388                           ;tff.c: 730: return FR_NOT_READY;
 10389  0000E0  0E01               	movlw	1
 10390                           
 10391                           ; BSR set to: 0
 10392  0000E2  0012               	return	
 10393  0000E4                     l12303:
 10394                           
 10395                           ; BSR set to: 0
 10396                           ;tff.c: 732: if (chk_wp && (stat & 0x04))
 10397  0000E4  0100               	movlb	0	; () banked
 10398  0000E6  51A9               	movf	auto_mount@chk_wp& (0+255),w,b
 10399  0000E8  0100               	movlb	0	; () banked
 10400  0000EA  B4D8               	btfsc	status,2,c
 10401  0000EC  D005               	goto	l12311
 10402                           
 10403                           ; BSR set to: 0
 10404  0000EE  0100               	movlb	0	; () banked
 10405  0000F0  A5D2               	btfss	auto_mount@stat& (0+255),2,b
 10406  0000F2  D002               	goto	l12311
 10407                           
 10408                           ; BSR set to: 0
 10409                           ;tff.c: 733: return FR_WRITE_PROTECTED;
 10410  0000F4  0E09               	movlw	9
 10411                           
 10412                           ; BSR set to: 0
 10413  0000F6  0012               	return	
 10414  0000F8                     l12311:
 10415                           
 10416                           ; BSR set to: 0
 10417                           ;tff.c: 737: fmt = check_fs(bootsect = 0);
 10418  0000F8  0E00               	movlw	0
 10419  0000FA  0100               	movlb	0	; () banked
 10420  0000FC  6FCC               	movwf	auto_mount@bootsect& (0+255),b
 10421  0000FE  0E00               	movlw	0
 10422  000100  6FCD               	movwf	(auto_mount@bootsect+1)& (0+255),b
 10423  000102  0E00               	movlw	0
 10424  000104  6FCE               	movwf	(auto_mount@bootsect+2)& (0+255),b
 10425  000106  0E00               	movlw	0
 10426  000108  6FCF               	movwf	(auto_mount@bootsect+3)& (0+255),b
 10427  00010A  C0CC  F08E         	movff	auto_mount@bootsect,check_fs@sect
 10428  00010E  C0CD  F08F         	movff	auto_mount@bootsect+1,check_fs@sect+1
 10429  000112  C0CE  F090         	movff	auto_mount@bootsect+2,check_fs@sect+2
 10430  000116  C0CF  F091         	movff	auto_mount@bootsect+3,check_fs@sect+3
 10431  00011A  EC89  F014         	call	_check_fs	;wreg free
 10432  00011E  0100               	movlb	0	; () banked
 10433  000120  6FD7               	movwf	auto_mount@fmt& (0+255),b
 10434                           
 10435                           ; BSR set to: 0
 10436                           ;tff.c: 738: posicao_cursor_lcd(1,0);
 10437  000122  0E00               	movlw	0
 10438  000124  6E19               	movwf	posicao_cursor_lcd@coluna,c
 10439  000126  0E01               	movlw	1
 10440  000128  ECFA  F027         	call	_posicao_cursor_lcd
 10441                           
 10442                           ;tff.c: 739: escreve_frase_ram_lcd(" fmt1             ");
 10443  00012C  0E8C               	movlw	low STR_33
 10444  00012E  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 10445  000130  0E60               	movlw	high STR_33
 10446  000132  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 10447  000134  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 10448                           
 10449                           ;tff.c: 740: posicao_cursor_lcd(2,0);
 10450  000138  0E00               	movlw	0
 10451  00013A  6E19               	movwf	posicao_cursor_lcd@coluna,c
 10452  00013C  0E02               	movlw	2
 10453  00013E  ECFA  F027         	call	_posicao_cursor_lcd
 10454                           
 10455                           ;tff.c: 741: escreve_frase_ram_lcd("                  ");
 10456  000142  0E79               	movlw	low STR_34
 10457  000144  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 10458  000146  0E60               	movlw	high STR_34
 10459  000148  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 10460  00014A  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 10461                           
 10462                           ;tff.c: 742: posicao_cursor_lcd(1,12);
 10463  00014E  0E0C               	movlw	12
 10464  000150  6E19               	movwf	posicao_cursor_lcd@coluna,c
 10465  000152  0E01               	movlw	1
 10466  000154  ECFA  F027         	call	_posicao_cursor_lcd
 10467                           
 10468                           ;tff.c: 743: escreve_inteiro_lcd(fmt);
 10469  000158  C0D7  F02E         	movff	auto_mount@fmt,escreve_inteiro_lcd@valor
 10470  00015C  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 10471  00015E  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 10472                           
 10473                           ;tff.c: 744: _delay((unsigned long)((2000)*(48000000/4000.0)));
 10474  000162  0E7A               	movlw	122
 10475  000164  0100               	movlb	0	; () banked
 10476  000166  6FAB               	movwf	(??_auto_mount+1)& (0+255),b
 10477  000168  0EC1               	movlw	193
 10478  00016A  0100               	movlb	0	; () banked
 10479  00016C  6FAA               	movwf	??_auto_mount& (0+255),b
 10480  00016E  0E81               	movlw	129
 10481  000170                     u16737:
 10482  000170  2EE8               	decfsz	wreg,f,c
 10483  000172  D7FE               	bra	u16737
 10484  000174  2FAA               	decfsz	??_auto_mount& (0+255),f,b
 10485  000176  D7FC               	bra	u16737
 10486  000178  2FAB               	decfsz	(??_auto_mount+1)& (0+255),f,b
 10487  00017A  D7FA               	bra	u16737
 10488  00017C  D000               	nop2	
 10489                           
 10490                           ;tff.c: 745: if (fmt == 1) {
 10491  00017E  0100               	movlb	0	; () banked
 10492  000180  05D7               	decf	auto_mount@fmt& (0+255),w,b
 10493  000182  A4D8               	btfss	status,2,c
 10494  000184  D0D8               	goto	l12347
 10495                           
 10496                           ; BSR set to: 0
 10497                           ;tff.c: 747: if (fs->win[446+4]) {
 10498  000186  0100               	movlb	0	; () banked
 10499  000188  EE21 F0EA          	lfsr	2,490
 10500  00018C  51D8               	movf	auto_mount@fs& (0+255),w,b
 10501  00018E  26D9               	addwf	fsr2l,f,c
 10502  000190  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 10503  000192  22DA               	addwfc	fsr2h,f,c
 10504  000194  50DF               	movf	indf2,w,c
 10505  000196  B4D8               	btfsc	status,2,c
 10506  000198  D0CE               	goto	l12347
 10507                           
 10508                           ; BSR set to: 0
 10509                           ;tff.c: 748: bootsect = (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[446+8])+3)<<24)|((DW
      +                          ORD)*(volatile BYTE*)((&fs->win[446+8])+2)<<16)|((WORD)*(volatile BYTE*)((&fs->win[446+8
      +                          ])+1)<<8)|*(volatile BYTE*)(&fs->win[446+8]));
 10510  00019A  0EEF               	movlw	239
 10511  00019C  0100               	movlb	0	; () banked
 10512  00019E  25D8               	addwf	auto_mount@fs& (0+255),w,b
 10513  0001A0  6ED9               	movwf	fsr2l,c
 10514  0001A2  0E01               	movlw	1
 10515  0001A4  0100               	movlb	0	; () banked
 10516  0001A6  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10517  0001A8  6EDA               	movwf	fsr2h,c
 10518  0001AA  50DF               	movf	indf2,w,c
 10519  0001AC  0100               	movlb	0	; () banked
 10520  0001AE  6FAA               	movwf	??_auto_mount& (0+255),b
 10521  0001B0  0100               	movlb	0	; () banked
 10522  0001B2  51AA               	movf	??_auto_mount& (0+255),w,b
 10523  0001B4  0100               	movlb	0	; () banked
 10524  0001B6  6FAC               	movwf	(??_auto_mount+2)& (0+255),b
 10525  0001B8  6BAB               	clrf	(??_auto_mount+1)& (0+255),b
 10526  0001BA  0EF0               	movlw	240
 10527  0001BC  0100               	movlb	0	; () banked
 10528  0001BE  25D8               	addwf	auto_mount@fs& (0+255),w,b
 10529  0001C0  6ED9               	movwf	fsr2l,c
 10530  0001C2  0E01               	movlw	1
 10531  0001C4  0100               	movlb	0	; () banked
 10532  0001C6  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10533  0001C8  6EDA               	movwf	fsr2h,c
 10534  0001CA  50DF               	movf	indf2,w,c
 10535  0001CC  0100               	movlb	0	; () banked
 10536  0001CE  6FAD               	movwf	(??_auto_mount+3)& (0+255),b
 10537  0001D0  C0AD  F0AE         	movff	??_auto_mount+3,??_auto_mount+4
 10538  0001D4  0100               	movlb	0	; () banked
 10539  0001D6  6BAF               	clrf	(??_auto_mount+5)& (0+255),b
 10540  0001D8  6BB0               	clrf	(??_auto_mount+6)& (0+255),b
 10541  0001DA  6BB1               	clrf	(??_auto_mount+7)& (0+255),b
 10542  0001DC  C0AF  F0B1         	movff	??_auto_mount+5,??_auto_mount+7
 10543  0001E0  C0AE  F0B0         	movff	??_auto_mount+4,??_auto_mount+6
 10544  0001E4  0100               	movlb	0	; () banked
 10545  0001E6  6BAF               	clrf	(??_auto_mount+5)& (0+255),b
 10546  0001E8  6BAE               	clrf	(??_auto_mount+4)& (0+255),b
 10547  0001EA  0EF1               	movlw	241
 10548  0001EC  0100               	movlb	0	; () banked
 10549  0001EE  25D8               	addwf	auto_mount@fs& (0+255),w,b
 10550  0001F0  6ED9               	movwf	fsr2l,c
 10551  0001F2  0E01               	movlw	1
 10552  0001F4  0100               	movlb	0	; () banked
 10553  0001F6  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10554  0001F8  6EDA               	movwf	fsr2h,c
 10555  0001FA  50DF               	movf	indf2,w,c
 10556  0001FC  0100               	movlb	0	; () banked
 10557  0001FE  6FB2               	movwf	(??_auto_mount+8)& (0+255),b
 10558  000200  C0B2  F0B3         	movff	??_auto_mount+8,??_auto_mount+9
 10559  000204  0100               	movlb	0	; () banked
 10560  000206  6BB4               	clrf	(??_auto_mount+10)& (0+255),b
 10561  000208  6BB5               	clrf	(??_auto_mount+11)& (0+255),b
 10562  00020A  6BB6               	clrf	(??_auto_mount+12)& (0+255),b
 10563  00020C  C0B3  F0B6         	movff	??_auto_mount+9,??_auto_mount+12
 10564  000210  0100               	movlb	0	; () banked
 10565  000212  6BB5               	clrf	(??_auto_mount+11)& (0+255),b
 10566  000214  6BB4               	clrf	(??_auto_mount+10)& (0+255),b
 10567  000216  6BB3               	clrf	(??_auto_mount+9)& (0+255),b
 10568  000218  0100               	movlb	0	; () banked
 10569  00021A  51AE               	movf	(??_auto_mount+4)& (0+255),w,b
 10570  00021C  0100               	movlb	0	; () banked
 10571  00021E  11B3               	iorwf	(??_auto_mount+9)& (0+255),w,b
 10572  000220  0100               	movlb	0	; () banked
 10573  000222  6FB7               	movwf	(??_auto_mount+13)& (0+255),b
 10574  000224  0100               	movlb	0	; () banked
 10575  000226  51AF               	movf	(??_auto_mount+5)& (0+255),w,b
 10576  000228  0100               	movlb	0	; () banked
 10577  00022A  11B4               	iorwf	(??_auto_mount+10)& (0+255),w,b
 10578  00022C  0100               	movlb	0	; () banked
 10579  00022E  6FB8               	movwf	(??_auto_mount+14)& (0+255),b
 10580  000230  0100               	movlb	0	; () banked
 10581  000232  51B0               	movf	(??_auto_mount+6)& (0+255),w,b
 10582  000234  0100               	movlb	0	; () banked
 10583  000236  11B5               	iorwf	(??_auto_mount+11)& (0+255),w,b
 10584  000238  0100               	movlb	0	; () banked
 10585  00023A  6FB9               	movwf	(??_auto_mount+15)& (0+255),b
 10586  00023C  0100               	movlb	0	; () banked
 10587  00023E  51B1               	movf	(??_auto_mount+7)& (0+255),w,b
 10588  000240  0100               	movlb	0	; () banked
 10589  000242  11B6               	iorwf	(??_auto_mount+12)& (0+255),w,b
 10590  000244  0100               	movlb	0	; () banked
 10591  000246  6FBA               	movwf	(??_auto_mount+16)& (0+255),b
 10592  000248  0100               	movlb	0	; () banked
 10593  00024A  51AB               	movf	(??_auto_mount+1)& (0+255),w,b
 10594  00024C  0100               	movlb	0	; () banked
 10595  00024E  11B7               	iorwf	(??_auto_mount+13)& (0+255),w,b
 10596  000250  0100               	movlb	0	; () banked
 10597  000252  6FBB               	movwf	(??_auto_mount+17)& (0+255),b
 10598  000254  0100               	movlb	0	; () banked
 10599  000256  51AC               	movf	(??_auto_mount+2)& (0+255),w,b
 10600  000258  0100               	movlb	0	; () banked
 10601  00025A  11B8               	iorwf	(??_auto_mount+14)& (0+255),w,b
 10602  00025C  0100               	movlb	0	; () banked
 10603  00025E  6FBC               	movwf	(??_auto_mount+18)& (0+255),b
 10604  000260  0E00               	movlw	0
 10605  000262  0100               	movlb	0	; () banked
 10606  000264  11B9               	iorwf	(??_auto_mount+15)& (0+255),w,b
 10607  000266  0100               	movlb	0	; () banked
 10608  000268  6FBD               	movwf	(??_auto_mount+19)& (0+255),b
 10609  00026A  0E00               	movlw	0
 10610  00026C  0100               	movlb	0	; () banked
 10611  00026E  11BA               	iorwf	(??_auto_mount+16)& (0+255),w,b
 10612  000270  0100               	movlb	0	; () banked
 10613  000272  6FBE               	movwf	(??_auto_mount+20)& (0+255),b
 10614  000274  0EEE               	movlw	238
 10615  000276  0100               	movlb	0	; () banked
 10616  000278  25D8               	addwf	auto_mount@fs& (0+255),w,b
 10617  00027A  6ED9               	movwf	fsr2l,c
 10618  00027C  0E01               	movlw	1
 10619  00027E  0100               	movlb	0	; () banked
 10620  000280  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10621  000282  6EDA               	movwf	fsr2h,c
 10622  000284  50DF               	movf	indf2,w,c
 10623  000286  0100               	movlb	0	; () banked
 10624  000288  6FBF               	movwf	(??_auto_mount+21)& (0+255),b
 10625  00028A  0100               	movlb	0	; () banked
 10626  00028C  51BF               	movf	(??_auto_mount+21)& (0+255),w,b
 10627  00028E  0100               	movlb	0	; () banked
 10628  000290  11BB               	iorwf	(??_auto_mount+17)& (0+255),w,b
 10629  000292  0100               	movlb	0	; () banked
 10630  000294  6FCC               	movwf	auto_mount@bootsect& (0+255),b
 10631  000296  0100               	movlb	0	; () banked
 10632  000298  51BC               	movf	(??_auto_mount+18)& (0+255),w,b
 10633  00029A  0100               	movlb	0	; () banked
 10634  00029C  6FCD               	movwf	(auto_mount@bootsect+1)& (0+255),b
 10635  00029E  0100               	movlb	0	; () banked
 10636  0002A0  51BD               	movf	(??_auto_mount+19)& (0+255),w,b
 10637  0002A2  0100               	movlb	0	; () banked
 10638  0002A4  6FCE               	movwf	(auto_mount@bootsect+2)& (0+255),b
 10639  0002A6  0100               	movlb	0	; () banked
 10640  0002A8  51BE               	movf	(??_auto_mount+20)& (0+255),w,b
 10641  0002AA  0100               	movlb	0	; () banked
 10642  0002AC  6FCF               	movwf	(auto_mount@bootsect+3)& (0+255),b
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;tff.c: 749: fmt = check_fs(bootsect);
 10646  0002AE  C0CC  F08E         	movff	auto_mount@bootsect,check_fs@sect
 10647  0002B2  C0CD  F08F         	movff	auto_mount@bootsect+1,check_fs@sect+1
 10648  0002B6  C0CE  F090         	movff	auto_mount@bootsect+2,check_fs@sect+2
 10649  0002BA  C0CF  F091         	movff	auto_mount@bootsect+3,check_fs@sect+3
 10650  0002BE  EC89  F014         	call	_check_fs	;wreg free
 10651  0002C2  0100               	movlb	0	; () banked
 10652  0002C4  6FD7               	movwf	auto_mount@fmt& (0+255),b
 10653                           
 10654                           ; BSR set to: 0
 10655                           ;tff.c: 751: fmt = check_fs(bootsect = 0);
 10656  0002C6  0E00               	movlw	0
 10657  0002C8  0100               	movlb	0	; () banked
 10658  0002CA  6FCC               	movwf	auto_mount@bootsect& (0+255),b
 10659  0002CC  0E00               	movlw	0
 10660  0002CE  6FCD               	movwf	(auto_mount@bootsect+1)& (0+255),b
 10661  0002D0  0E00               	movlw	0
 10662  0002D2  6FCE               	movwf	(auto_mount@bootsect+2)& (0+255),b
 10663  0002D4  0E00               	movlw	0
 10664  0002D6  6FCF               	movwf	(auto_mount@bootsect+3)& (0+255),b
 10665  0002D8  C0CC  F08E         	movff	auto_mount@bootsect,check_fs@sect
 10666  0002DC  C0CD  F08F         	movff	auto_mount@bootsect+1,check_fs@sect+1
 10667  0002E0  C0CE  F090         	movff	auto_mount@bootsect+2,check_fs@sect+2
 10668  0002E4  C0CF  F091         	movff	auto_mount@bootsect+3,check_fs@sect+3
 10669  0002E8  EC89  F014         	call	_check_fs	;wreg free
 10670  0002EC  0100               	movlb	0	; () banked
 10671  0002EE  6FD7               	movwf	auto_mount@fmt& (0+255),b
 10672                           
 10673                           ; BSR set to: 0
 10674                           ;tff.c: 752: posicao_cursor_lcd(2,0);
 10675  0002F0  0E00               	movlw	0
 10676  0002F2  6E19               	movwf	posicao_cursor_lcd@coluna,c
 10677  0002F4  0E02               	movlw	2
 10678  0002F6  ECFA  F027         	call	_posicao_cursor_lcd
 10679                           
 10680                           ;tff.c: 753: escreve_frase_ram_lcd(" fmt2             ");
 10681  0002FA  0E9F               	movlw	low STR_35
 10682  0002FC  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 10683  0002FE  0E60               	movlw	high STR_35
 10684  000300  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 10685  000302  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 10686                           
 10687                           ;tff.c: 754: posicao_cursor_lcd(2,12);
 10688  000306  0E0C               	movlw	12
 10689  000308  6E19               	movwf	posicao_cursor_lcd@coluna,c
 10690  00030A  0E02               	movlw	2
 10691  00030C  ECFA  F027         	call	_posicao_cursor_lcd
 10692                           
 10693                           ;tff.c: 755: escreve_inteiro_lcd(fmt);
 10694  000310  C0D7  F02E         	movff	auto_mount@fmt,escreve_inteiro_lcd@valor
 10695  000314  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 10696  000316  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 10697                           
 10698                           ;tff.c: 756: _delay((unsigned long)((1000)*(48000000/4000.0)));
 10699  00031A  0E3D               	movlw	61
 10700  00031C  0100               	movlb	0	; () banked
 10701  00031E  6FAB               	movwf	(??_auto_mount+1)& (0+255),b
 10702  000320  0EE1               	movlw	225
 10703  000322  0100               	movlb	0	; () banked
 10704  000324  6FAA               	movwf	??_auto_mount& (0+255),b
 10705  000326  0E3F               	movlw	63
 10706  000328                     u16747:
 10707  000328  2EE8               	decfsz	wreg,f,c
 10708  00032A  D7FE               	bra	u16747
 10709  00032C  2FAA               	decfsz	??_auto_mount& (0+255),f,b
 10710  00032E  D7FC               	bra	u16747
 10711  000330  2FAB               	decfsz	(??_auto_mount+1)& (0+255),f,b
 10712  000332  D7FA               	bra	u16747
 10713  000334  D000               	nop2	
 10714  000336                     l12347:
 10715                           
 10716                           ;tff.c: 758: }
 10717                           ;tff.c: 759: }
 10718                           ;tff.c: 760: if (fmt || (WORD)(((WORD)*(volatile BYTE*)((&fs->win[11])+1)<<8)|(WORD)*(vo
      +                          latile BYTE*)(&fs->win[11])) != 512)
 10719  000336  0100               	movlb	0	; () banked
 10720  000338  51D7               	movf	auto_mount@fmt& (0+255),w,b
 10721  00033A  0100               	movlb	0	; () banked
 10722  00033C  A4D8               	btfss	status,2,c
 10723  00033E  D028               	goto	l12351
 10724                           
 10725                           ; BSR set to: 0
 10726  000340  0E34               	movlw	52
 10727  000342  0100               	movlb	0	; () banked
 10728  000344  25D8               	addwf	auto_mount@fs& (0+255),w,b
 10729  000346  6ED9               	movwf	fsr2l,c
 10730  000348  0E00               	movlw	0
 10731  00034A  0100               	movlb	0	; () banked
 10732  00034C  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10733  00034E  6EDA               	movwf	fsr2h,c
 10734  000350  50DF               	movf	indf2,w,c
 10735  000352  0100               	movlb	0	; () banked
 10736  000354  6FAA               	movwf	??_auto_mount& (0+255),b
 10737  000356  0100               	movlb	0	; () banked
 10738  000358  51AA               	movf	??_auto_mount& (0+255),w,b
 10739  00035A  0100               	movlb	0	; () banked
 10740  00035C  6FAC               	movwf	(??_auto_mount+2)& (0+255),b
 10741  00035E  6BAB               	clrf	(??_auto_mount+1)& (0+255),b
 10742  000360  0E33               	movlw	51
 10743  000362  0100               	movlb	0	; () banked
 10744  000364  25D8               	addwf	auto_mount@fs& (0+255),w,b
 10745  000366  6ED9               	movwf	fsr2l,c
 10746  000368  0E00               	movlw	0
 10747  00036A  0100               	movlb	0	; () banked
 10748  00036C  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10749  00036E  6EDA               	movwf	fsr2h,c
 10750  000370  50DF               	movf	indf2,w,c
 10751  000372  0100               	movlb	0	; () banked
 10752  000374  6FAD               	movwf	(??_auto_mount+3)& (0+255),b
 10753  000376  0100               	movlb	0	; () banked
 10754  000378  51AD               	movf	(??_auto_mount+3)& (0+255),w,b
 10755  00037A  0100               	movlb	0	; () banked
 10756  00037C  13AB               	iorwf	(??_auto_mount+1)& (0+255),f,b
 10757  00037E  0E00               	movlw	0
 10758  000380  13AC               	iorwf	(??_auto_mount+2)& (0+255),f,b
 10759  000382  0E02               	movlw	2
 10760  000384  0100               	movlb	0	; () banked
 10761  000386  19AC               	xorwf	(??_auto_mount+2)& (0+255),w,b
 10762  000388  0100               	movlb	0	; () banked
 10763  00038A  11AB               	iorwf	(??_auto_mount+1)& (0+255),w,b
 10764  00038C  B4D8               	btfsc	status,2,c
 10765  00038E  D002               	goto	l12355
 10766  000390                     l12351:
 10767                           
 10768                           ; BSR set to: 0
 10769                           ;tff.c: 761: return FR_NO_FILESYSTEM;
 10770  000390  0E0B               	movlw	11
 10771                           
 10772                           ; BSR set to: 0
 10773  000392  0012               	return	
 10774  000394                     l12355:
 10775                           
 10776                           ; BSR set to: 0
 10777                           ;tff.c: 764: fatsize = (WORD)(((WORD)*(volatile BYTE*)((&fs->win[22])+1)<<8)|(WORD)*(vol
      +                          atile BYTE*)(&fs->win[22]));
 10778  000394  0E3F               	movlw	63
 10779  000396  0100               	movlb	0	; () banked
 10780  000398  25D8               	addwf	auto_mount@fs& (0+255),w,b
 10781  00039A  6ED9               	movwf	fsr2l,c
 10782  00039C  0E00               	movlw	0
 10783  00039E  0100               	movlb	0	; () banked
 10784  0003A0  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10785  0003A2  6EDA               	movwf	fsr2h,c
 10786  0003A4  50DF               	movf	indf2,w,c
 10787  0003A6  0100               	movlb	0	; () banked
 10788  0003A8  6FAA               	movwf	??_auto_mount& (0+255),b
 10789  0003AA  0100               	movlb	0	; () banked
 10790  0003AC  51AA               	movf	??_auto_mount& (0+255),w,b
 10791  0003AE  0100               	movlb	0	; () banked
 10792  0003B0  6FAC               	movwf	(??_auto_mount+2)& (0+255),b
 10793  0003B2  6BAB               	clrf	(??_auto_mount+1)& (0+255),b
 10794  0003B4  0E3E               	movlw	62
 10795  0003B6  0100               	movlb	0	; () banked
 10796  0003B8  25D8               	addwf	auto_mount@fs& (0+255),w,b
 10797  0003BA  6ED9               	movwf	fsr2l,c
 10798  0003BC  0E00               	movlw	0
 10799  0003BE  0100               	movlb	0	; () banked
 10800  0003C0  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10801  0003C2  6EDA               	movwf	fsr2h,c
 10802  0003C4  50DF               	movf	indf2,w,c
 10803  0003C6  0100               	movlb	0	; () banked
 10804  0003C8  6FAD               	movwf	(??_auto_mount+3)& (0+255),b
 10805  0003CA  0100               	movlb	0	; () banked
 10806  0003CC  51AD               	movf	(??_auto_mount+3)& (0+255),w,b
 10807  0003CE  0100               	movlb	0	; () banked
 10808  0003D0  13AB               	iorwf	(??_auto_mount+1)& (0+255),f,b
 10809  0003D2  0E00               	movlw	0
 10810  0003D4  13AC               	iorwf	(??_auto_mount+2)& (0+255),f,b
 10811  0003D6  C0AB  F0D3         	movff	??_auto_mount+1,auto_mount@fatsize
 10812  0003DA  C0AC  F0D4         	movff	??_auto_mount+2,auto_mount@fatsize+1
 10813  0003DE  0100               	movlb	0	; () banked
 10814  0003E0  6BD5               	clrf	(auto_mount@fatsize+2)& (0+255),b
 10815  0003E2  6BD6               	clrf	(auto_mount@fatsize+3)& (0+255),b
 10816                           
 10817                           ; BSR set to: 0
 10818                           ;tff.c: 765: if (!fatsize) fatsize = (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[36])+3)
      +                          <<24)|((DWORD)*(volatile BYTE*)((&fs->win[36])+2)<<16)|((WORD)*(volatile BYTE*)((&fs->wi
      +                          n[36])+1)<<8)|*(volatile BYTE*)(&fs->win[36]));
 10819  0003E4  0100               	movlb	0	; () banked
 10820  0003E6  51D3               	movf	auto_mount@fatsize& (0+255),w,b
 10821  0003E8  0100               	movlb	0	; () banked
 10822  0003EA  11D4               	iorwf	(auto_mount@fatsize+1)& (0+255),w,b
 10823  0003EC  0100               	movlb	0	; () banked
 10824  0003EE  11D5               	iorwf	(auto_mount@fatsize+2)& (0+255),w,b
 10825  0003F0  0100               	movlb	0	; () banked
 10826  0003F2  11D6               	iorwf	(auto_mount@fatsize+3)& (0+255),w,b
 10827  0003F4  A4D8               	btfss	status,2,c
 10828  0003F6  D08A               	goto	l776
 10829                           
 10830                           ; BSR set to: 0
 10831  0003F8  0E4D               	movlw	77
 10832  0003FA  0100               	movlb	0	; () banked
 10833  0003FC  25D8               	addwf	auto_mount@fs& (0+255),w,b
 10834  0003FE  6ED9               	movwf	fsr2l,c
 10835  000400  0E00               	movlw	0
 10836  000402  0100               	movlb	0	; () banked
 10837  000404  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10838  000406  6EDA               	movwf	fsr2h,c
 10839  000408  50DF               	movf	indf2,w,c
 10840  00040A  0100               	movlb	0	; () banked
 10841  00040C  6FAA               	movwf	??_auto_mount& (0+255),b
 10842  00040E  0100               	movlb	0	; () banked
 10843  000410  51AA               	movf	??_auto_mount& (0+255),w,b
 10844  000412  0100               	movlb	0	; () banked
 10845  000414  6FAC               	movwf	(??_auto_mount+2)& (0+255),b
 10846  000416  6BAB               	clrf	(??_auto_mount+1)& (0+255),b
 10847  000418  0E4E               	movlw	78
 10848  00041A  0100               	movlb	0	; () banked
 10849  00041C  25D8               	addwf	auto_mount@fs& (0+255),w,b
 10850  00041E  6ED9               	movwf	fsr2l,c
 10851  000420  0E00               	movlw	0
 10852  000422  0100               	movlb	0	; () banked
 10853  000424  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10854  000426  6EDA               	movwf	fsr2h,c
 10855  000428  50DF               	movf	indf2,w,c
 10856  00042A  0100               	movlb	0	; () banked
 10857  00042C  6FAD               	movwf	(??_auto_mount+3)& (0+255),b
 10858  00042E  C0AD  F0AE         	movff	??_auto_mount+3,??_auto_mount+4
 10859  000432  0100               	movlb	0	; () banked
 10860  000434  6BAF               	clrf	(??_auto_mount+5)& (0+255),b
 10861  000436  6BB0               	clrf	(??_auto_mount+6)& (0+255),b
 10862  000438  6BB1               	clrf	(??_auto_mount+7)& (0+255),b
 10863  00043A  C0AF  F0B1         	movff	??_auto_mount+5,??_auto_mount+7
 10864  00043E  C0AE  F0B0         	movff	??_auto_mount+4,??_auto_mount+6
 10865  000442  0100               	movlb	0	; () banked
 10866  000444  6BAF               	clrf	(??_auto_mount+5)& (0+255),b
 10867  000446  6BAE               	clrf	(??_auto_mount+4)& (0+255),b
 10868  000448  0E4F               	movlw	79
 10869  00044A  0100               	movlb	0	; () banked
 10870  00044C  25D8               	addwf	auto_mount@fs& (0+255),w,b
 10871  00044E  6ED9               	movwf	fsr2l,c
 10872  000450  0E00               	movlw	0
 10873  000452  0100               	movlb	0	; () banked
 10874  000454  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10875  000456  6EDA               	movwf	fsr2h,c
 10876  000458  50DF               	movf	indf2,w,c
 10877  00045A  0100               	movlb	0	; () banked
 10878  00045C  6FB2               	movwf	(??_auto_mount+8)& (0+255),b
 10879  00045E  C0B2  F0B3         	movff	??_auto_mount+8,??_auto_mount+9
 10880  000462  0100               	movlb	0	; () banked
 10881  000464  6BB4               	clrf	(??_auto_mount+10)& (0+255),b
 10882  000466  6BB5               	clrf	(??_auto_mount+11)& (0+255),b
 10883  000468  6BB6               	clrf	(??_auto_mount+12)& (0+255),b
 10884  00046A  C0B3  F0B6         	movff	??_auto_mount+9,??_auto_mount+12
 10885  00046E  0100               	movlb	0	; () banked
 10886  000470  6BB5               	clrf	(??_auto_mount+11)& (0+255),b
 10887  000472  6BB4               	clrf	(??_auto_mount+10)& (0+255),b
 10888  000474  6BB3               	clrf	(??_auto_mount+9)& (0+255),b
 10889  000476  0100               	movlb	0	; () banked
 10890  000478  51AE               	movf	(??_auto_mount+4)& (0+255),w,b
 10891  00047A  0100               	movlb	0	; () banked
 10892  00047C  11B3               	iorwf	(??_auto_mount+9)& (0+255),w,b
 10893  00047E  0100               	movlb	0	; () banked
 10894  000480  6FB7               	movwf	(??_auto_mount+13)& (0+255),b
 10895  000482  0100               	movlb	0	; () banked
 10896  000484  51AF               	movf	(??_auto_mount+5)& (0+255),w,b
 10897  000486  0100               	movlb	0	; () banked
 10898  000488  11B4               	iorwf	(??_auto_mount+10)& (0+255),w,b
 10899  00048A  0100               	movlb	0	; () banked
 10900  00048C  6FB8               	movwf	(??_auto_mount+14)& (0+255),b
 10901  00048E  0100               	movlb	0	; () banked
 10902  000490  51B0               	movf	(??_auto_mount+6)& (0+255),w,b
 10903  000492  0100               	movlb	0	; () banked
 10904  000494  11B5               	iorwf	(??_auto_mount+11)& (0+255),w,b
 10905  000496  0100               	movlb	0	; () banked
 10906  000498  6FB9               	movwf	(??_auto_mount+15)& (0+255),b
 10907  00049A  0100               	movlb	0	; () banked
 10908  00049C  51B1               	movf	(??_auto_mount+7)& (0+255),w,b
 10909  00049E  0100               	movlb	0	; () banked
 10910  0004A0  11B6               	iorwf	(??_auto_mount+12)& (0+255),w,b
 10911  0004A2  0100               	movlb	0	; () banked
 10912  0004A4  6FBA               	movwf	(??_auto_mount+16)& (0+255),b
 10913  0004A6  0100               	movlb	0	; () banked
 10914  0004A8  51AB               	movf	(??_auto_mount+1)& (0+255),w,b
 10915  0004AA  0100               	movlb	0	; () banked
 10916  0004AC  11B7               	iorwf	(??_auto_mount+13)& (0+255),w,b
 10917  0004AE  0100               	movlb	0	; () banked
 10918  0004B0  6FBB               	movwf	(??_auto_mount+17)& (0+255),b
 10919  0004B2  0100               	movlb	0	; () banked
 10920  0004B4  51AC               	movf	(??_auto_mount+2)& (0+255),w,b
 10921  0004B6  0100               	movlb	0	; () banked
 10922  0004B8  11B8               	iorwf	(??_auto_mount+14)& (0+255),w,b
 10923  0004BA  0100               	movlb	0	; () banked
 10924  0004BC  6FBC               	movwf	(??_auto_mount+18)& (0+255),b
 10925  0004BE  0E00               	movlw	0
 10926  0004C0  0100               	movlb	0	; () banked
 10927  0004C2  11B9               	iorwf	(??_auto_mount+15)& (0+255),w,b
 10928  0004C4  0100               	movlb	0	; () banked
 10929  0004C6  6FBD               	movwf	(??_auto_mount+19)& (0+255),b
 10930  0004C8  0E00               	movlw	0
 10931  0004CA  0100               	movlb	0	; () banked
 10932  0004CC  11BA               	iorwf	(??_auto_mount+16)& (0+255),w,b
 10933  0004CE  0100               	movlb	0	; () banked
 10934  0004D0  6FBE               	movwf	(??_auto_mount+20)& (0+255),b
 10935  0004D2  0E4C               	movlw	76
 10936  0004D4  0100               	movlb	0	; () banked
 10937  0004D6  25D8               	addwf	auto_mount@fs& (0+255),w,b
 10938  0004D8  6ED9               	movwf	fsr2l,c
 10939  0004DA  0E00               	movlw	0
 10940  0004DC  0100               	movlb	0	; () banked
 10941  0004DE  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 10942  0004E0  6EDA               	movwf	fsr2h,c
 10943  0004E2  50DF               	movf	indf2,w,c
 10944  0004E4  0100               	movlb	0	; () banked
 10945  0004E6  6FBF               	movwf	(??_auto_mount+21)& (0+255),b
 10946  0004E8  0100               	movlb	0	; () banked
 10947  0004EA  51BF               	movf	(??_auto_mount+21)& (0+255),w,b
 10948  0004EC  0100               	movlb	0	; () banked
 10949  0004EE  11BB               	iorwf	(??_auto_mount+17)& (0+255),w,b
 10950  0004F0  0100               	movlb	0	; () banked
 10951  0004F2  6FD3               	movwf	auto_mount@fatsize& (0+255),b
 10952  0004F4  0100               	movlb	0	; () banked
 10953  0004F6  51BC               	movf	(??_auto_mount+18)& (0+255),w,b
 10954  0004F8  0100               	movlb	0	; () banked
 10955  0004FA  6FD4               	movwf	(auto_mount@fatsize+1)& (0+255),b
 10956  0004FC  0100               	movlb	0	; () banked
 10957  0004FE  51BD               	movf	(??_auto_mount+19)& (0+255),w,b
 10958  000500  0100               	movlb	0	; () banked
 10959  000502  6FD5               	movwf	(auto_mount@fatsize+2)& (0+255),b
 10960  000504  0100               	movlb	0	; () banked
 10961  000506  51BE               	movf	(??_auto_mount+20)& (0+255),w,b
 10962  000508  0100               	movlb	0	; () banked
 10963  00050A  6FD6               	movwf	(auto_mount@fatsize+3)& (0+255),b
 10964  00050C                     l776:
 10965                           
 10966                           ; BSR set to: 0
 10967                           ;tff.c: 766: fs->sects_fat = (CLUST)fatsize;
 10968  00050C  0100               	movlb	0	; () banked
 10969  00050E  EE20 F014          	lfsr	2,20
 10970  000512  51D8               	movf	auto_mount@fs& (0+255),w,b
 10971  000514  26D9               	addwf	fsr2l,f,c
 10972  000516  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 10973  000518  22DA               	addwfc	fsr2h,f,c
 10974  00051A  C0D3  FFDE         	movff	auto_mount@fatsize,postinc2
 10975  00051E  C0D4  FFDE         	movff	auto_mount@fatsize+1,postinc2
 10976  000522  C0D5  FFDE         	movff	auto_mount@fatsize+2,postinc2
 10977  000526  C0D6  FFDE         	movff	auto_mount@fatsize+3,postinc2
 10978                           
 10979                           ; BSR set to: 0
 10980                           ;tff.c: 767: fs->n_fats = fs->win[16];
 10981  00052A  0100               	movlb	0	; () banked
 10982  00052C  EE20 F038          	lfsr	2,56
 10983  000530  51D8               	movf	auto_mount@fs& (0+255),w,b
 10984  000532  26D9               	addwf	fsr2l,f,c
 10985  000534  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 10986  000536  22DA               	addwfc	fsr2h,f,c
 10987  000538  0100               	movlb	0	; () banked
 10988  00053A  EE10 F026          	lfsr	1,38
 10989  00053E  51D8               	movf	auto_mount@fs& (0+255),w,b
 10990  000540  26E1               	addwf	fsr1l,f,c
 10991  000542  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 10992  000544  22E2               	addwfc	fsr1h,f,c
 10993  000546  CFDF FFE7          	movff	indf2,indf1
 10994                           
 10995                           ; BSR set to: 0
 10996                           ;tff.c: 768: fatsize *= fs->n_fats;
 10997  00054A  C0D3  F016         	movff	auto_mount@fatsize,___lmul@multiplier
 10998  00054E  C0D4  F017         	movff	auto_mount@fatsize+1,___lmul@multiplier+1
 10999  000552  C0D5  F018         	movff	auto_mount@fatsize+2,___lmul@multiplier+2
 11000  000556  C0D6  F019         	movff	auto_mount@fatsize+3,___lmul@multiplier+3
 11001  00055A  0100               	movlb	0	; () banked
 11002  00055C  EE20 F026          	lfsr	2,38
 11003  000560  51D8               	movf	auto_mount@fs& (0+255),w,b
 11004  000562  26D9               	addwf	fsr2l,f,c
 11005  000564  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 11006  000566  22DA               	addwfc	fsr2h,f,c
 11007  000568  50DF               	movf	indf2,w,c
 11008  00056A  0100               	movlb	0	; () banked
 11009  00056C  6FAA               	movwf	??_auto_mount& (0+255),b
 11010  00056E  0100               	movlb	0	; () banked
 11011  000570  51AA               	movf	??_auto_mount& (0+255),w,b
 11012  000572  6E1A               	movwf	___lmul@multiplicand,c
 11013  000574  6A1B               	clrf	___lmul@multiplicand+1,c
 11014  000576  6A1C               	clrf	___lmul@multiplicand+2,c
 11015  000578  6A1D               	clrf	___lmul@multiplicand+3,c
 11016  00057A  ECC4  F028         	call	___lmul	;wreg free
 11017  00057E  C016  F0D3         	movff	?___lmul,auto_mount@fatsize
 11018  000582  C017  F0D4         	movff	?___lmul+1,auto_mount@fatsize+1
 11019  000586  C018  F0D5         	movff	?___lmul+2,auto_mount@fatsize+2
 11020  00058A  C019  F0D6         	movff	?___lmul+3,auto_mount@fatsize+3
 11021                           
 11022                           ;tff.c: 769: fs->fatbase = bootsect + (WORD)(((WORD)*(volatile BYTE*)((&fs->win[14])+1)<
      +                          <8)|(WORD)*(volatile BYTE*)(&fs->win[14]));
 11023  00058E  0E37               	movlw	55
 11024  000590  0100               	movlb	0	; () banked
 11025  000592  25D8               	addwf	auto_mount@fs& (0+255),w,b
 11026  000594  6ED9               	movwf	fsr2l,c
 11027  000596  0E00               	movlw	0
 11028  000598  0100               	movlb	0	; () banked
 11029  00059A  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11030  00059C  6EDA               	movwf	fsr2h,c
 11031  00059E  50DF               	movf	indf2,w,c
 11032  0005A0  0100               	movlb	0	; () banked
 11033  0005A2  6FAA               	movwf	??_auto_mount& (0+255),b
 11034  0005A4  0100               	movlb	0	; () banked
 11035  0005A6  51AA               	movf	??_auto_mount& (0+255),w,b
 11036  0005A8  0100               	movlb	0	; () banked
 11037  0005AA  6FAC               	movwf	(??_auto_mount+2)& (0+255),b
 11038  0005AC  6BAB               	clrf	(??_auto_mount+1)& (0+255),b
 11039  0005AE  0E36               	movlw	54
 11040  0005B0  0100               	movlb	0	; () banked
 11041  0005B2  25D8               	addwf	auto_mount@fs& (0+255),w,b
 11042  0005B4  6ED9               	movwf	fsr2l,c
 11043  0005B6  0E00               	movlw	0
 11044  0005B8  0100               	movlb	0	; () banked
 11045  0005BA  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11046  0005BC  6EDA               	movwf	fsr2h,c
 11047  0005BE  50DF               	movf	indf2,w,c
 11048  0005C0  0100               	movlb	0	; () banked
 11049  0005C2  6FAD               	movwf	(??_auto_mount+3)& (0+255),b
 11050  0005C4  0100               	movlb	0	; () banked
 11051  0005C6  51AD               	movf	(??_auto_mount+3)& (0+255),w,b
 11052  0005C8  0100               	movlb	0	; () banked
 11053  0005CA  13AB               	iorwf	(??_auto_mount+1)& (0+255),f,b
 11054  0005CC  0E00               	movlw	0
 11055  0005CE  13AC               	iorwf	(??_auto_mount+2)& (0+255),f,b
 11056  0005D0  0100               	movlb	0	; () banked
 11057  0005D2  51AB               	movf	(??_auto_mount+1)& (0+255),w,b
 11058  0005D4  0100               	movlb	0	; () banked
 11059  0005D6  25CC               	addwf	auto_mount@bootsect& (0+255),w,b
 11060  0005D8  0100               	movlb	0	; () banked
 11061  0005DA  6FAE               	movwf	(??_auto_mount+4)& (0+255),b
 11062  0005DC  0100               	movlb	0	; () banked
 11063  0005DE  51AC               	movf	(??_auto_mount+2)& (0+255),w,b
 11064  0005E0  0100               	movlb	0	; () banked
 11065  0005E2  21CD               	addwfc	(auto_mount@bootsect+1)& (0+255),w,b
 11066  0005E4  0100               	movlb	0	; () banked
 11067  0005E6  6FAF               	movwf	(??_auto_mount+5)& (0+255),b
 11068  0005E8  0E00               	movlw	0
 11069  0005EA  0100               	movlb	0	; () banked
 11070  0005EC  21CE               	addwfc	(auto_mount@bootsect+2)& (0+255),w,b
 11071  0005EE  0100               	movlb	0	; () banked
 11072  0005F0  6FB0               	movwf	(??_auto_mount+6)& (0+255),b
 11073  0005F2  0E00               	movlw	0
 11074  0005F4  0100               	movlb	0	; () banked
 11075  0005F6  21CF               	addwfc	(auto_mount@bootsect+3)& (0+255),w,b
 11076  0005F8  0100               	movlb	0	; () banked
 11077  0005FA  6FB1               	movwf	(??_auto_mount+7)& (0+255),b
 11078  0005FC  0100               	movlb	0	; () banked
 11079  0005FE  EE20 F008          	lfsr	2,8
 11080  000602  51D8               	movf	auto_mount@fs& (0+255),w,b
 11081  000604  26D9               	addwf	fsr2l,f,c
 11082  000606  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 11083  000608  22DA               	addwfc	fsr2h,f,c
 11084  00060A  C0AE  FFDE         	movff	??_auto_mount+4,postinc2
 11085  00060E  C0AF  FFDE         	movff	??_auto_mount+5,postinc2
 11086  000612  C0B0  FFDE         	movff	??_auto_mount+6,postinc2
 11087  000616  C0B1  FFDE         	movff	??_auto_mount+7,postinc2
 11088                           
 11089                           ; BSR set to: 0
 11090                           ;tff.c: 770: fs->csize = fs->win[13];
 11091  00061A  0100               	movlb	0	; () banked
 11092  00061C  EE20 F035          	lfsr	2,53
 11093  000620  51D8               	movf	auto_mount@fs& (0+255),w,b
 11094  000622  26D9               	addwf	fsr2l,f,c
 11095  000624  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 11096  000626  22DA               	addwfc	fsr2h,f,c
 11097  000628  0100               	movlb	0	; () banked
 11098  00062A  EE10 F025          	lfsr	1,37
 11099  00062E  51D8               	movf	auto_mount@fs& (0+255),w,b
 11100  000630  26E1               	addwf	fsr1l,f,c
 11101  000632  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 11102  000634  22E2               	addwfc	fsr1h,f,c
 11103  000636  CFDF FFE7          	movff	indf2,indf1
 11104                           
 11105                           ; BSR set to: 0
 11106                           ;tff.c: 771: fs->n_rootdir = (WORD)(((WORD)*(volatile BYTE*)((&fs->win[17])+1)<<8)|(WORD
      +                          )*(volatile BYTE*)(&fs->win[17]));
 11107  00063A  0E3A               	movlw	58
 11108  00063C  0100               	movlb	0	; () banked
 11109  00063E  25D8               	addwf	auto_mount@fs& (0+255),w,b
 11110  000640  6ED9               	movwf	fsr2l,c
 11111  000642  0E00               	movlw	0
 11112  000644  0100               	movlb	0	; () banked
 11113  000646  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11114  000648  6EDA               	movwf	fsr2h,c
 11115  00064A  50DF               	movf	indf2,w,c
 11116  00064C  0100               	movlb	0	; () banked
 11117  00064E  6FAA               	movwf	??_auto_mount& (0+255),b
 11118  000650  0100               	movlb	0	; () banked
 11119  000652  51AA               	movf	??_auto_mount& (0+255),w,b
 11120  000654  0100               	movlb	0	; () banked
 11121  000656  6FAC               	movwf	(??_auto_mount+2)& (0+255),b
 11122  000658  6BAB               	clrf	(??_auto_mount+1)& (0+255),b
 11123  00065A  0E39               	movlw	57
 11124  00065C  0100               	movlb	0	; () banked
 11125  00065E  25D8               	addwf	auto_mount@fs& (0+255),w,b
 11126  000660  6ED9               	movwf	fsr2l,c
 11127  000662  0E00               	movlw	0
 11128  000664  0100               	movlb	0	; () banked
 11129  000666  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11130  000668  6EDA               	movwf	fsr2h,c
 11131  00066A  50DF               	movf	indf2,w,c
 11132  00066C  0100               	movlb	0	; () banked
 11133  00066E  6FAD               	movwf	(??_auto_mount+3)& (0+255),b
 11134  000670  0100               	movlb	0	; () banked
 11135  000672  51AD               	movf	(??_auto_mount+3)& (0+255),w,b
 11136  000674  0100               	movlb	0	; () banked
 11137  000676  13AB               	iorwf	(??_auto_mount+1)& (0+255),f,b
 11138  000678  0E00               	movlw	0
 11139  00067A  13AC               	iorwf	(??_auto_mount+2)& (0+255),f,b
 11140  00067C  0100               	movlb	0	; () banked
 11141  00067E  EE20 F002          	lfsr	2,2
 11142  000682  51D8               	movf	auto_mount@fs& (0+255),w,b
 11143  000684  26D9               	addwf	fsr2l,f,c
 11144  000686  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 11145  000688  22DA               	addwfc	fsr2h,f,c
 11146  00068A  C0AB  FFDE         	movff	??_auto_mount+1,postinc2
 11147  00068E  C0AC  FFDD         	movff	??_auto_mount+2,postdec2
 11148                           
 11149                           ; BSR set to: 0
 11150                           ;tff.c: 772: totalsect = (WORD)(((WORD)*(volatile BYTE*)((&fs->win[19])+1)<<8)|(WORD)*(v
      +                          olatile BYTE*)(&fs->win[19]));
 11151  000692  0E3C               	movlw	60
 11152  000694  0100               	movlb	0	; () banked
 11153  000696  25D8               	addwf	auto_mount@fs& (0+255),w,b
 11154  000698  6ED9               	movwf	fsr2l,c
 11155  00069A  0E00               	movlw	0
 11156  00069C  0100               	movlb	0	; () banked
 11157  00069E  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11158  0006A0  6EDA               	movwf	fsr2h,c
 11159  0006A2  50DF               	movf	indf2,w,c
 11160  0006A4  0100               	movlb	0	; () banked
 11161  0006A6  6FAA               	movwf	??_auto_mount& (0+255),b
 11162  0006A8  0100               	movlb	0	; () banked
 11163  0006AA  51AA               	movf	??_auto_mount& (0+255),w,b
 11164  0006AC  0100               	movlb	0	; () banked
 11165  0006AE  6FAC               	movwf	(??_auto_mount+2)& (0+255),b
 11166  0006B0  6BAB               	clrf	(??_auto_mount+1)& (0+255),b
 11167  0006B2  0E3B               	movlw	59
 11168  0006B4  0100               	movlb	0	; () banked
 11169  0006B6  25D8               	addwf	auto_mount@fs& (0+255),w,b
 11170  0006B8  6ED9               	movwf	fsr2l,c
 11171  0006BA  0E00               	movlw	0
 11172  0006BC  0100               	movlb	0	; () banked
 11173  0006BE  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11174  0006C0  6EDA               	movwf	fsr2h,c
 11175  0006C2  50DF               	movf	indf2,w,c
 11176  0006C4  0100               	movlb	0	; () banked
 11177  0006C6  6FAD               	movwf	(??_auto_mount+3)& (0+255),b
 11178  0006C8  0100               	movlb	0	; () banked
 11179  0006CA  51AD               	movf	(??_auto_mount+3)& (0+255),w,b
 11180  0006CC  0100               	movlb	0	; () banked
 11181  0006CE  13AB               	iorwf	(??_auto_mount+1)& (0+255),f,b
 11182  0006D0  0E00               	movlw	0
 11183  0006D2  13AC               	iorwf	(??_auto_mount+2)& (0+255),f,b
 11184  0006D4  C0AB  F0C8         	movff	??_auto_mount+1,auto_mount@totalsect
 11185  0006D8  C0AC  F0C9         	movff	??_auto_mount+2,auto_mount@totalsect+1
 11186  0006DC  0100               	movlb	0	; () banked
 11187  0006DE  6BCA               	clrf	(auto_mount@totalsect+2)& (0+255),b
 11188  0006E0  6BCB               	clrf	(auto_mount@totalsect+3)& (0+255),b
 11189                           
 11190                           ; BSR set to: 0
 11191                           ;tff.c: 773: if (!totalsect) totalsect = (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[32]
      +                          )+3)<<24)|((DWORD)*(volatile BYTE*)((&fs->win[32])+2)<<16)|((WORD)*(volatile BYTE*)((&fs
      +                          ->win[32])+1)<<8)|*(volatile BYTE*)(&fs->win[32]));
 11192  0006E2  0100               	movlb	0	; () banked
 11193  0006E4  51C8               	movf	auto_mount@totalsect& (0+255),w,b
 11194  0006E6  0100               	movlb	0	; () banked
 11195  0006E8  11C9               	iorwf	(auto_mount@totalsect+1)& (0+255),w,b
 11196  0006EA  0100               	movlb	0	; () banked
 11197  0006EC  11CA               	iorwf	(auto_mount@totalsect+2)& (0+255),w,b
 11198  0006EE  0100               	movlb	0	; () banked
 11199  0006F0  11CB               	iorwf	(auto_mount@totalsect+3)& (0+255),w,b
 11200  0006F2  A4D8               	btfss	status,2,c
 11201  0006F4  D08A               	goto	l12377
 11202                           
 11203                           ; BSR set to: 0
 11204  0006F6  0E49               	movlw	73
 11205  0006F8  0100               	movlb	0	; () banked
 11206  0006FA  25D8               	addwf	auto_mount@fs& (0+255),w,b
 11207  0006FC  6ED9               	movwf	fsr2l,c
 11208  0006FE  0E00               	movlw	0
 11209  000700  0100               	movlb	0	; () banked
 11210  000702  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11211  000704  6EDA               	movwf	fsr2h,c
 11212  000706  50DF               	movf	indf2,w,c
 11213  000708  0100               	movlb	0	; () banked
 11214  00070A  6FAA               	movwf	??_auto_mount& (0+255),b
 11215  00070C  0100               	movlb	0	; () banked
 11216  00070E  51AA               	movf	??_auto_mount& (0+255),w,b
 11217  000710  0100               	movlb	0	; () banked
 11218  000712  6FAC               	movwf	(??_auto_mount+2)& (0+255),b
 11219  000714  6BAB               	clrf	(??_auto_mount+1)& (0+255),b
 11220  000716  0E4A               	movlw	74
 11221  000718  0100               	movlb	0	; () banked
 11222  00071A  25D8               	addwf	auto_mount@fs& (0+255),w,b
 11223  00071C  6ED9               	movwf	fsr2l,c
 11224  00071E  0E00               	movlw	0
 11225  000720  0100               	movlb	0	; () banked
 11226  000722  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11227  000724  6EDA               	movwf	fsr2h,c
 11228  000726  50DF               	movf	indf2,w,c
 11229  000728  0100               	movlb	0	; () banked
 11230  00072A  6FAD               	movwf	(??_auto_mount+3)& (0+255),b
 11231  00072C  C0AD  F0AE         	movff	??_auto_mount+3,??_auto_mount+4
 11232  000730  0100               	movlb	0	; () banked
 11233  000732  6BAF               	clrf	(??_auto_mount+5)& (0+255),b
 11234  000734  6BB0               	clrf	(??_auto_mount+6)& (0+255),b
 11235  000736  6BB1               	clrf	(??_auto_mount+7)& (0+255),b
 11236  000738  C0AF  F0B1         	movff	??_auto_mount+5,??_auto_mount+7
 11237  00073C  C0AE  F0B0         	movff	??_auto_mount+4,??_auto_mount+6
 11238  000740  0100               	movlb	0	; () banked
 11239  000742  6BAF               	clrf	(??_auto_mount+5)& (0+255),b
 11240  000744  6BAE               	clrf	(??_auto_mount+4)& (0+255),b
 11241  000746  0E4B               	movlw	75
 11242  000748  0100               	movlb	0	; () banked
 11243  00074A  25D8               	addwf	auto_mount@fs& (0+255),w,b
 11244  00074C  6ED9               	movwf	fsr2l,c
 11245  00074E  0E00               	movlw	0
 11246  000750  0100               	movlb	0	; () banked
 11247  000752  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11248  000754  6EDA               	movwf	fsr2h,c
 11249  000756  50DF               	movf	indf2,w,c
 11250  000758  0100               	movlb	0	; () banked
 11251  00075A  6FB2               	movwf	(??_auto_mount+8)& (0+255),b
 11252  00075C  C0B2  F0B3         	movff	??_auto_mount+8,??_auto_mount+9
 11253  000760  0100               	movlb	0	; () banked
 11254  000762  6BB4               	clrf	(??_auto_mount+10)& (0+255),b
 11255  000764  6BB5               	clrf	(??_auto_mount+11)& (0+255),b
 11256  000766  6BB6               	clrf	(??_auto_mount+12)& (0+255),b
 11257  000768  C0B3  F0B6         	movff	??_auto_mount+9,??_auto_mount+12
 11258  00076C  0100               	movlb	0	; () banked
 11259  00076E  6BB5               	clrf	(??_auto_mount+11)& (0+255),b
 11260  000770  6BB4               	clrf	(??_auto_mount+10)& (0+255),b
 11261  000772  6BB3               	clrf	(??_auto_mount+9)& (0+255),b
 11262  000774  0100               	movlb	0	; () banked
 11263  000776  51AE               	movf	(??_auto_mount+4)& (0+255),w,b
 11264  000778  0100               	movlb	0	; () banked
 11265  00077A  11B3               	iorwf	(??_auto_mount+9)& (0+255),w,b
 11266  00077C  0100               	movlb	0	; () banked
 11267  00077E  6FB7               	movwf	(??_auto_mount+13)& (0+255),b
 11268  000780  0100               	movlb	0	; () banked
 11269  000782  51AF               	movf	(??_auto_mount+5)& (0+255),w,b
 11270  000784  0100               	movlb	0	; () banked
 11271  000786  11B4               	iorwf	(??_auto_mount+10)& (0+255),w,b
 11272  000788  0100               	movlb	0	; () banked
 11273  00078A  6FB8               	movwf	(??_auto_mount+14)& (0+255),b
 11274  00078C  0100               	movlb	0	; () banked
 11275  00078E  51B0               	movf	(??_auto_mount+6)& (0+255),w,b
 11276  000790  0100               	movlb	0	; () banked
 11277  000792  11B5               	iorwf	(??_auto_mount+11)& (0+255),w,b
 11278  000794  0100               	movlb	0	; () banked
 11279  000796  6FB9               	movwf	(??_auto_mount+15)& (0+255),b
 11280  000798  0100               	movlb	0	; () banked
 11281  00079A  51B1               	movf	(??_auto_mount+7)& (0+255),w,b
 11282  00079C  0100               	movlb	0	; () banked
 11283  00079E  11B6               	iorwf	(??_auto_mount+12)& (0+255),w,b
 11284  0007A0  0100               	movlb	0	; () banked
 11285  0007A2  6FBA               	movwf	(??_auto_mount+16)& (0+255),b
 11286  0007A4  0100               	movlb	0	; () banked
 11287  0007A6  51AB               	movf	(??_auto_mount+1)& (0+255),w,b
 11288  0007A8  0100               	movlb	0	; () banked
 11289  0007AA  11B7               	iorwf	(??_auto_mount+13)& (0+255),w,b
 11290  0007AC  0100               	movlb	0	; () banked
 11291  0007AE  6FBB               	movwf	(??_auto_mount+17)& (0+255),b
 11292  0007B0  0100               	movlb	0	; () banked
 11293  0007B2  51AC               	movf	(??_auto_mount+2)& (0+255),w,b
 11294  0007B4  0100               	movlb	0	; () banked
 11295  0007B6  11B8               	iorwf	(??_auto_mount+14)& (0+255),w,b
 11296  0007B8  0100               	movlb	0	; () banked
 11297  0007BA  6FBC               	movwf	(??_auto_mount+18)& (0+255),b
 11298  0007BC  0E00               	movlw	0
 11299  0007BE  0100               	movlb	0	; () banked
 11300  0007C0  11B9               	iorwf	(??_auto_mount+15)& (0+255),w,b
 11301  0007C2  0100               	movlb	0	; () banked
 11302  0007C4  6FBD               	movwf	(??_auto_mount+19)& (0+255),b
 11303  0007C6  0E00               	movlw	0
 11304  0007C8  0100               	movlb	0	; () banked
 11305  0007CA  11BA               	iorwf	(??_auto_mount+16)& (0+255),w,b
 11306  0007CC  0100               	movlb	0	; () banked
 11307  0007CE  6FBE               	movwf	(??_auto_mount+20)& (0+255),b
 11308  0007D0  0E48               	movlw	72
 11309  0007D2  0100               	movlb	0	; () banked
 11310  0007D4  25D8               	addwf	auto_mount@fs& (0+255),w,b
 11311  0007D6  6ED9               	movwf	fsr2l,c
 11312  0007D8  0E00               	movlw	0
 11313  0007DA  0100               	movlb	0	; () banked
 11314  0007DC  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11315  0007DE  6EDA               	movwf	fsr2h,c
 11316  0007E0  50DF               	movf	indf2,w,c
 11317  0007E2  0100               	movlb	0	; () banked
 11318  0007E4  6FBF               	movwf	(??_auto_mount+21)& (0+255),b
 11319  0007E6  0100               	movlb	0	; () banked
 11320  0007E8  51BF               	movf	(??_auto_mount+21)& (0+255),w,b
 11321  0007EA  0100               	movlb	0	; () banked
 11322  0007EC  11BB               	iorwf	(??_auto_mount+17)& (0+255),w,b
 11323  0007EE  0100               	movlb	0	; () banked
 11324  0007F0  6FC8               	movwf	auto_mount@totalsect& (0+255),b
 11325  0007F2  0100               	movlb	0	; () banked
 11326  0007F4  51BC               	movf	(??_auto_mount+18)& (0+255),w,b
 11327  0007F6  0100               	movlb	0	; () banked
 11328  0007F8  6FC9               	movwf	(auto_mount@totalsect+1)& (0+255),b
 11329  0007FA  0100               	movlb	0	; () banked
 11330  0007FC  51BD               	movf	(??_auto_mount+19)& (0+255),w,b
 11331  0007FE  0100               	movlb	0	; () banked
 11332  000800  6FCA               	movwf	(auto_mount@totalsect+2)& (0+255),b
 11333  000802  0100               	movlb	0	; () banked
 11334  000804  51BE               	movf	(??_auto_mount+20)& (0+255),w,b
 11335  000806  0100               	movlb	0	; () banked
 11336  000808  6FCB               	movwf	(auto_mount@totalsect+3)& (0+255),b
 11337  00080A                     l12377:
 11338                           
 11339                           ; BSR set to: 0
 11340                           ;tff.c: 774: fs->max_clust = maxclust = (totalsect
 11341                           ;tff.c: 775: - (WORD)(((WORD)*(volatile BYTE*)((&fs->win[14])+1)<<8)|(WORD)*(volatile BY
      +                          TE*)(&fs->win[14])) - fatsize - fs->n_rootdir / 16
 11342                           ;tff.c: 776: ) / fs->csize + 2;
 11343  00080A  0100               	movlb	0	; () banked
 11344  00080C  EE20 F002          	lfsr	2,2
 11345  000810  51D8               	movf	auto_mount@fs& (0+255),w,b
 11346  000812  26D9               	addwf	fsr2l,f,c
 11347  000814  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 11348  000816  22DA               	addwfc	fsr2h,f,c
 11349  000818  CFDE F0AA          	movff	postinc2,??_auto_mount
 11350  00081C  CFDD F0AB          	movff	postdec2,??_auto_mount+1
 11351  000820  0E04               	movlw	4
 11352  000822  0100               	movlb	0	; () banked
 11353  000824  6FAC               	movwf	(??_auto_mount+2)& (0+255),b
 11354  000826                     u13825:
 11355  000826  0100               	movlb	0	; () banked
 11356  000828  90D8               	bcf	status,0,c
 11357  00082A  33AB               	rrcf	(??_auto_mount+1)& (0+255),f,b
 11358  00082C  33AA               	rrcf	??_auto_mount& (0+255),f,b
 11359  00082E  0100               	movlb	0	; () banked
 11360  000830  2FAC               	decfsz	(??_auto_mount+2)& (0+255),f,b
 11361  000832  D7F9               	goto	u13825
 11362  000834  0E37               	movlw	55
 11363  000836  0100               	movlb	0	; () banked
 11364  000838  25D8               	addwf	auto_mount@fs& (0+255),w,b
 11365  00083A  6ED9               	movwf	fsr2l,c
 11366  00083C  0E00               	movlw	0
 11367  00083E  0100               	movlb	0	; () banked
 11368  000840  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11369  000842  6EDA               	movwf	fsr2h,c
 11370  000844  50DF               	movf	indf2,w,c
 11371  000846  0100               	movlb	0	; () banked
 11372  000848  6FAD               	movwf	(??_auto_mount+3)& (0+255),b
 11373  00084A  0100               	movlb	0	; () banked
 11374  00084C  51AD               	movf	(??_auto_mount+3)& (0+255),w,b
 11375  00084E  0100               	movlb	0	; () banked
 11376  000850  6FAF               	movwf	(??_auto_mount+5)& (0+255),b
 11377  000852  6BAE               	clrf	(??_auto_mount+4)& (0+255),b
 11378  000854  0E36               	movlw	54
 11379  000856  0100               	movlb	0	; () banked
 11380  000858  25D8               	addwf	auto_mount@fs& (0+255),w,b
 11381  00085A  6ED9               	movwf	fsr2l,c
 11382  00085C  0E00               	movlw	0
 11383  00085E  0100               	movlb	0	; () banked
 11384  000860  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11385  000862  6EDA               	movwf	fsr2h,c
 11386  000864  50DF               	movf	indf2,w,c
 11387  000866  0100               	movlb	0	; () banked
 11388  000868  6FB0               	movwf	(??_auto_mount+6)& (0+255),b
 11389  00086A  0100               	movlb	0	; () banked
 11390  00086C  51B0               	movf	(??_auto_mount+6)& (0+255),w,b
 11391  00086E  0100               	movlb	0	; () banked
 11392  000870  13AE               	iorwf	(??_auto_mount+4)& (0+255),f,b
 11393  000872  0E00               	movlw	0
 11394  000874  13AF               	iorwf	(??_auto_mount+5)& (0+255),f,b
 11395  000876  0100               	movlb	0	; () banked
 11396  000878  51AE               	movf	(??_auto_mount+4)& (0+255),w,b
 11397  00087A  0100               	movlb	0	; () banked
 11398  00087C  25AA               	addwf	??_auto_mount& (0+255),w,b
 11399  00087E  0100               	movlb	0	; () banked
 11400  000880  6FB1               	movwf	(??_auto_mount+7)& (0+255),b
 11401  000882  0100               	movlb	0	; () banked
 11402  000884  51AF               	movf	(??_auto_mount+5)& (0+255),w,b
 11403  000886  0100               	movlb	0	; () banked
 11404  000888  21AB               	addwfc	(??_auto_mount+1)& (0+255),w,b
 11405  00088A  0100               	movlb	0	; () banked
 11406  00088C  6FB2               	movwf	(??_auto_mount+8)& (0+255),b
 11407  00088E  0100               	movlb	0	; () banked
 11408  000890  6BB3               	clrf	(??_auto_mount+9)& (0+255),b
 11409  000892  B0D8               	btfsc	status,0,c
 11410  000894  2BB3               	incf	(??_auto_mount+9)& (0+255),f,b
 11411  000896  0100               	movlb	0	; () banked
 11412  000898  6BB4               	clrf	(??_auto_mount+10)& (0+255),b
 11413  00089A  0100               	movlb	0	; () banked
 11414  00089C  51D3               	movf	auto_mount@fatsize& (0+255),w,b
 11415  00089E  0100               	movlb	0	; () banked
 11416  0008A0  25B1               	addwf	(??_auto_mount+7)& (0+255),w,b
 11417  0008A2  0100               	movlb	0	; () banked
 11418  0008A4  6FB5               	movwf	(??_auto_mount+11)& (0+255),b
 11419  0008A6  0100               	movlb	0	; () banked
 11420  0008A8  51D4               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 11421  0008AA  0100               	movlb	0	; () banked
 11422  0008AC  21B2               	addwfc	(??_auto_mount+8)& (0+255),w,b
 11423  0008AE  0100               	movlb	0	; () banked
 11424  0008B0  6FB6               	movwf	(??_auto_mount+12)& (0+255),b
 11425  0008B2  0100               	movlb	0	; () banked
 11426  0008B4  51D5               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 11427  0008B6  0100               	movlb	0	; () banked
 11428  0008B8  21B3               	addwfc	(??_auto_mount+9)& (0+255),w,b
 11429  0008BA  0100               	movlb	0	; () banked
 11430  0008BC  6FB7               	movwf	(??_auto_mount+13)& (0+255),b
 11431  0008BE  0100               	movlb	0	; () banked
 11432  0008C0  51D6               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 11433  0008C2  0100               	movlb	0	; () banked
 11434  0008C4  21B4               	addwfc	(??_auto_mount+10)& (0+255),w,b
 11435  0008C6  0100               	movlb	0	; () banked
 11436  0008C8  6FB8               	movwf	(??_auto_mount+14)& (0+255),b
 11437  0008CA  0100               	movlb	0	; () banked
 11438  0008CC  1FB5               	comf	(??_auto_mount+11)& (0+255),f,b
 11439  0008CE  1FB6               	comf	(??_auto_mount+12)& (0+255),f,b
 11440  0008D0  1FB7               	comf	(??_auto_mount+13)& (0+255),f,b
 11441  0008D2  1FB8               	comf	(??_auto_mount+14)& (0+255),f,b
 11442  0008D4  2BB5               	incf	(??_auto_mount+11)& (0+255),f,b
 11443  0008D6  0E00               	movlw	0
 11444  0008D8  23B6               	addwfc	(??_auto_mount+12)& (0+255),f,b
 11445  0008DA  23B7               	addwfc	(??_auto_mount+13)& (0+255),f,b
 11446  0008DC  23B8               	addwfc	(??_auto_mount+14)& (0+255),f,b
 11447  0008DE  0100               	movlb	0	; () banked
 11448  0008E0  51C8               	movf	auto_mount@totalsect& (0+255),w,b
 11449  0008E2  0100               	movlb	0	; () banked
 11450  0008E4  25B5               	addwf	(??_auto_mount+11)& (0+255),w,b
 11451  0008E6  6E16               	movwf	___lldiv@dividend,c
 11452  0008E8  0100               	movlb	0	; () banked
 11453  0008EA  51C9               	movf	(auto_mount@totalsect+1)& (0+255),w,b
 11454  0008EC  0100               	movlb	0	; () banked
 11455  0008EE  21B6               	addwfc	(??_auto_mount+12)& (0+255),w,b
 11456  0008F0  6E17               	movwf	___lldiv@dividend+1,c
 11457  0008F2  0100               	movlb	0	; () banked
 11458  0008F4  51CA               	movf	(auto_mount@totalsect+2)& (0+255),w,b
 11459  0008F6  0100               	movlb	0	; () banked
 11460  0008F8  21B7               	addwfc	(??_auto_mount+13)& (0+255),w,b
 11461  0008FA  6E18               	movwf	___lldiv@dividend+2,c
 11462  0008FC  0100               	movlb	0	; () banked
 11463  0008FE  51CB               	movf	(auto_mount@totalsect+3)& (0+255),w,b
 11464  000900  0100               	movlb	0	; () banked
 11465  000902  21B8               	addwfc	(??_auto_mount+14)& (0+255),w,b
 11466  000904  6E19               	movwf	___lldiv@dividend+3,c
 11467  000906  0100               	movlb	0	; () banked
 11468  000908  EE20 F025          	lfsr	2,37
 11469  00090C  51D8               	movf	auto_mount@fs& (0+255),w,b
 11470  00090E  26D9               	addwf	fsr2l,f,c
 11471  000910  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 11472  000912  22DA               	addwfc	fsr2h,f,c
 11473  000914  50DF               	movf	indf2,w,c
 11474  000916  0100               	movlb	0	; () banked
 11475  000918  6FB9               	movwf	(??_auto_mount+15)& (0+255),b
 11476  00091A  0100               	movlb	0	; () banked
 11477  00091C  51B9               	movf	(??_auto_mount+15)& (0+255),w,b
 11478  00091E  6E1A               	movwf	___lldiv@divisor,c
 11479  000920  6A1B               	clrf	___lldiv@divisor+1,c
 11480  000922  6A1C               	clrf	___lldiv@divisor+2,c
 11481  000924  6A1D               	clrf	___lldiv@divisor+3,c
 11482  000926  EC0A  F027         	call	___lldiv	;wreg free
 11483  00092A  0E02               	movlw	2
 11484  00092C  2416               	addwf	?___lldiv,w,c
 11485  00092E  0100               	movlb	0	; () banked
 11486  000930  6FC4               	movwf	auto_mount@maxclust& (0+255),b
 11487  000932  0E00               	movlw	0
 11488  000934  2017               	addwfc	?___lldiv+1,w,c
 11489  000936  0100               	movlb	0	; () banked
 11490  000938  6FC5               	movwf	(auto_mount@maxclust+1)& (0+255),b
 11491  00093A  0E00               	movlw	0
 11492  00093C  2018               	addwfc	?___lldiv+2,w,c
 11493  00093E  0100               	movlb	0	; () banked
 11494  000940  6FC6               	movwf	(auto_mount@maxclust+2)& (0+255),b
 11495  000942  0E00               	movlw	0
 11496  000944  2019               	addwfc	?___lldiv+3,w,c
 11497  000946  0100               	movlb	0	; () banked
 11498  000948  6FC7               	movwf	(auto_mount@maxclust+3)& (0+255),b
 11499  00094A  0100               	movlb	0	; () banked
 11500  00094C  EE20 F018          	lfsr	2,24
 11501  000950  51D8               	movf	auto_mount@fs& (0+255),w,b
 11502  000952  26D9               	addwf	fsr2l,f,c
 11503  000954  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 11504  000956  22DA               	addwfc	fsr2h,f,c
 11505  000958  C0C4  FFDE         	movff	auto_mount@maxclust,postinc2
 11506  00095C  C0C5  FFDE         	movff	auto_mount@maxclust+1,postinc2
 11507  000960  C0C6  FFDE         	movff	auto_mount@maxclust+2,postinc2
 11508  000964  C0C7  FFDE         	movff	auto_mount@maxclust+3,postinc2
 11509                           
 11510                           ; BSR set to: 0
 11511                           ;tff.c: 778: fmt = 1;
 11512  000968  0E01               	movlw	1
 11513  00096A  0100               	movlb	0	; () banked
 11514  00096C  6FD7               	movwf	auto_mount@fmt& (0+255),b
 11515                           
 11516                           ; BSR set to: 0
 11517                           ;tff.c: 779: if (maxclust >= 0xFF7) fmt = 2;
 11518  00096E  0100               	movlb	0	; () banked
 11519  000970  51C7               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 11520  000972  0100               	movlb	0	; () banked
 11521  000974  11C6               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 11522  000976  E108               	bnz	u13830
 11523  000978  0EF7               	movlw	247
 11524  00097A  0100               	movlb	0	; () banked
 11525  00097C  5DC4               	subwf	auto_mount@maxclust& (0+255),w,b
 11526  00097E  0E0F               	movlw	15
 11527  000980  0100               	movlb	0	; () banked
 11528  000982  59C5               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 11529  000984  A0D8               	btfss	status,0,c
 11530  000986  D003               	goto	l12385
 11531  000988                     u13830:
 11532                           
 11533                           ; BSR set to: 0
 11534  000988  0E02               	movlw	2
 11535  00098A  0100               	movlb	0	; () banked
 11536  00098C  6FD7               	movwf	auto_mount@fmt& (0+255),b
 11537  00098E                     l12385:
 11538                           
 11539                           ; BSR set to: 0
 11540                           ;tff.c: 780: if (maxclust >= 0xFFF7)
 11541  00098E  0100               	movlb	0	; () banked
 11542  000990  51C7               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 11543  000992  0100               	movlb	0	; () banked
 11544  000994  11C6               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 11545  000996  E108               	bnz	u13840
 11546  000998  0EF7               	movlw	247
 11547  00099A  0100               	movlb	0	; () banked
 11548  00099C  5DC4               	subwf	auto_mount@maxclust& (0+255),w,b
 11549  00099E  0EFF               	movlw	255
 11550  0009A0  0100               	movlb	0	; () banked
 11551  0009A2  59C5               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 11552  0009A4  A0D8               	btfss	status,0,c
 11553  0009A6  D003               	goto	l12389
 11554  0009A8                     u13840:
 11555                           
 11556                           ; BSR set to: 0
 11557                           ;tff.c: 784: fmt = 3;
 11558  0009A8  0E03               	movlw	3
 11559  0009AA  0100               	movlb	0	; () banked
 11560  0009AC  6FD7               	movwf	auto_mount@fmt& (0+255),b
 11561  0009AE                     l12389:
 11562                           
 11563                           ; BSR set to: 0
 11564                           ;tff.c: 785: if (fmt == 3)
 11565  0009AE  0E03               	movlw	3
 11566  0009B0  0100               	movlb	0	; () banked
 11567  0009B2  19D7               	xorwf	auto_mount@fmt& (0+255),w,b
 11568  0009B4  A4D8               	btfss	status,2,c
 11569  0009B6  D09A               	goto	l12393
 11570                           
 11571                           ; BSR set to: 0
 11572                           ;tff.c: 786: fs->dirbase = (DWORD)(((DWORD)*(volatile BYTE*)((&fs->win[44])+3)<<24)|((DW
      +                          ORD)*(volatile BYTE*)((&fs->win[44])+2)<<16)|((WORD)*(volatile BYTE*)((&fs->win[44])+1)<
      +                          <8)|*(volatile BYTE*)(&fs->win[44]));
 11573  0009B8  0E55               	movlw	85
 11574  0009BA  0100               	movlb	0	; () banked
 11575  0009BC  25D8               	addwf	auto_mount@fs& (0+255),w,b
 11576  0009BE  6ED9               	movwf	fsr2l,c
 11577  0009C0  0E00               	movlw	0
 11578  0009C2  0100               	movlb	0	; () banked
 11579  0009C4  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11580  0009C6  6EDA               	movwf	fsr2h,c
 11581  0009C8  50DF               	movf	indf2,w,c
 11582  0009CA  0100               	movlb	0	; () banked
 11583  0009CC  6FAA               	movwf	??_auto_mount& (0+255),b
 11584  0009CE  0100               	movlb	0	; () banked
 11585  0009D0  51AA               	movf	??_auto_mount& (0+255),w,b
 11586  0009D2  0100               	movlb	0	; () banked
 11587  0009D4  6FAC               	movwf	(??_auto_mount+2)& (0+255),b
 11588  0009D6  6BAB               	clrf	(??_auto_mount+1)& (0+255),b
 11589  0009D8  0E56               	movlw	86
 11590  0009DA  0100               	movlb	0	; () banked
 11591  0009DC  25D8               	addwf	auto_mount@fs& (0+255),w,b
 11592  0009DE  6ED9               	movwf	fsr2l,c
 11593  0009E0  0E00               	movlw	0
 11594  0009E2  0100               	movlb	0	; () banked
 11595  0009E4  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11596  0009E6  6EDA               	movwf	fsr2h,c
 11597  0009E8  50DF               	movf	indf2,w,c
 11598  0009EA  0100               	movlb	0	; () banked
 11599  0009EC  6FAD               	movwf	(??_auto_mount+3)& (0+255),b
 11600  0009EE  C0AD  F0AE         	movff	??_auto_mount+3,??_auto_mount+4
 11601  0009F2  0100               	movlb	0	; () banked
 11602  0009F4  6BAF               	clrf	(??_auto_mount+5)& (0+255),b
 11603  0009F6  6BB0               	clrf	(??_auto_mount+6)& (0+255),b
 11604  0009F8  6BB1               	clrf	(??_auto_mount+7)& (0+255),b
 11605  0009FA  C0AF  F0B1         	movff	??_auto_mount+5,??_auto_mount+7
 11606  0009FE  C0AE  F0B0         	movff	??_auto_mount+4,??_auto_mount+6
 11607  000A02  0100               	movlb	0	; () banked
 11608  000A04  6BAF               	clrf	(??_auto_mount+5)& (0+255),b
 11609  000A06  6BAE               	clrf	(??_auto_mount+4)& (0+255),b
 11610  000A08  0E57               	movlw	87
 11611  000A0A  0100               	movlb	0	; () banked
 11612  000A0C  25D8               	addwf	auto_mount@fs& (0+255),w,b
 11613  000A0E  6ED9               	movwf	fsr2l,c
 11614  000A10  0E00               	movlw	0
 11615  000A12  0100               	movlb	0	; () banked
 11616  000A14  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11617  000A16  6EDA               	movwf	fsr2h,c
 11618  000A18  50DF               	movf	indf2,w,c
 11619  000A1A  0100               	movlb	0	; () banked
 11620  000A1C  6FB2               	movwf	(??_auto_mount+8)& (0+255),b
 11621  000A1E  C0B2  F0B3         	movff	??_auto_mount+8,??_auto_mount+9
 11622  000A22  0100               	movlb	0	; () banked
 11623  000A24  6BB4               	clrf	(??_auto_mount+10)& (0+255),b
 11624  000A26  6BB5               	clrf	(??_auto_mount+11)& (0+255),b
 11625  000A28  6BB6               	clrf	(??_auto_mount+12)& (0+255),b
 11626  000A2A  C0B3  F0B6         	movff	??_auto_mount+9,??_auto_mount+12
 11627  000A2E  0100               	movlb	0	; () banked
 11628  000A30  6BB5               	clrf	(??_auto_mount+11)& (0+255),b
 11629  000A32  6BB4               	clrf	(??_auto_mount+10)& (0+255),b
 11630  000A34  6BB3               	clrf	(??_auto_mount+9)& (0+255),b
 11631  000A36  0100               	movlb	0	; () banked
 11632  000A38  51AE               	movf	(??_auto_mount+4)& (0+255),w,b
 11633  000A3A  0100               	movlb	0	; () banked
 11634  000A3C  11B3               	iorwf	(??_auto_mount+9)& (0+255),w,b
 11635  000A3E  0100               	movlb	0	; () banked
 11636  000A40  6FB7               	movwf	(??_auto_mount+13)& (0+255),b
 11637  000A42  0100               	movlb	0	; () banked
 11638  000A44  51AF               	movf	(??_auto_mount+5)& (0+255),w,b
 11639  000A46  0100               	movlb	0	; () banked
 11640  000A48  11B4               	iorwf	(??_auto_mount+10)& (0+255),w,b
 11641  000A4A  0100               	movlb	0	; () banked
 11642  000A4C  6FB8               	movwf	(??_auto_mount+14)& (0+255),b
 11643  000A4E  0100               	movlb	0	; () banked
 11644  000A50  51B0               	movf	(??_auto_mount+6)& (0+255),w,b
 11645  000A52  0100               	movlb	0	; () banked
 11646  000A54  11B5               	iorwf	(??_auto_mount+11)& (0+255),w,b
 11647  000A56  0100               	movlb	0	; () banked
 11648  000A58  6FB9               	movwf	(??_auto_mount+15)& (0+255),b
 11649  000A5A  0100               	movlb	0	; () banked
 11650  000A5C  51B1               	movf	(??_auto_mount+7)& (0+255),w,b
 11651  000A5E  0100               	movlb	0	; () banked
 11652  000A60  11B6               	iorwf	(??_auto_mount+12)& (0+255),w,b
 11653  000A62  0100               	movlb	0	; () banked
 11654  000A64  6FBA               	movwf	(??_auto_mount+16)& (0+255),b
 11655  000A66  0100               	movlb	0	; () banked
 11656  000A68  51AB               	movf	(??_auto_mount+1)& (0+255),w,b
 11657  000A6A  0100               	movlb	0	; () banked
 11658  000A6C  11B7               	iorwf	(??_auto_mount+13)& (0+255),w,b
 11659  000A6E  0100               	movlb	0	; () banked
 11660  000A70  6FBB               	movwf	(??_auto_mount+17)& (0+255),b
 11661  000A72  0100               	movlb	0	; () banked
 11662  000A74  51AC               	movf	(??_auto_mount+2)& (0+255),w,b
 11663  000A76  0100               	movlb	0	; () banked
 11664  000A78  11B8               	iorwf	(??_auto_mount+14)& (0+255),w,b
 11665  000A7A  0100               	movlb	0	; () banked
 11666  000A7C  6FBC               	movwf	(??_auto_mount+18)& (0+255),b
 11667  000A7E  0E00               	movlw	0
 11668  000A80  0100               	movlb	0	; () banked
 11669  000A82  11B9               	iorwf	(??_auto_mount+15)& (0+255),w,b
 11670  000A84  0100               	movlb	0	; () banked
 11671  000A86  6FBD               	movwf	(??_auto_mount+19)& (0+255),b
 11672  000A88  0E00               	movlw	0
 11673  000A8A  0100               	movlb	0	; () banked
 11674  000A8C  11BA               	iorwf	(??_auto_mount+16)& (0+255),w,b
 11675  000A8E  0100               	movlb	0	; () banked
 11676  000A90  6FBE               	movwf	(??_auto_mount+20)& (0+255),b
 11677  000A92  0E54               	movlw	84
 11678  000A94  0100               	movlb	0	; () banked
 11679  000A96  25D8               	addwf	auto_mount@fs& (0+255),w,b
 11680  000A98  6ED9               	movwf	fsr2l,c
 11681  000A9A  0E00               	movlw	0
 11682  000A9C  0100               	movlb	0	; () banked
 11683  000A9E  21D9               	addwfc	(auto_mount@fs+1)& (0+255),w,b
 11684  000AA0  6EDA               	movwf	fsr2h,c
 11685  000AA2  50DF               	movf	indf2,w,c
 11686  000AA4  0100               	movlb	0	; () banked
 11687  000AA6  6FBF               	movwf	(??_auto_mount+21)& (0+255),b
 11688  000AA8  0100               	movlb	0	; () banked
 11689  000AAA  51BF               	movf	(??_auto_mount+21)& (0+255),w,b
 11690  000AAC  0100               	movlb	0	; () banked
 11691  000AAE  11BB               	iorwf	(??_auto_mount+17)& (0+255),w,b
 11692  000AB0  0100               	movlb	0	; () banked
 11693  000AB2  6FC0               	movwf	(??_auto_mount+22)& (0+255),b
 11694  000AB4  0100               	movlb	0	; () banked
 11695  000AB6  51BC               	movf	(??_auto_mount+18)& (0+255),w,b
 11696  000AB8  0100               	movlb	0	; () banked
 11697  000ABA  6FC1               	movwf	(??_auto_mount+23)& (0+255),b
 11698  000ABC  0100               	movlb	0	; () banked
 11699  000ABE  51BD               	movf	(??_auto_mount+19)& (0+255),w,b
 11700  000AC0  0100               	movlb	0	; () banked
 11701  000AC2  6FC2               	movwf	(??_auto_mount+24)& (0+255),b
 11702  000AC4  0100               	movlb	0	; () banked
 11703  000AC6  51BE               	movf	(??_auto_mount+20)& (0+255),w,b
 11704  000AC8  0100               	movlb	0	; () banked
 11705  000ACA  6FC3               	movwf	(??_auto_mount+25)& (0+255),b
 11706  000ACC  0100               	movlb	0	; () banked
 11707  000ACE  EE20 F00C          	lfsr	2,12
 11708  000AD2  51D8               	movf	auto_mount@fs& (0+255),w,b
 11709  000AD4  26D9               	addwf	fsr2l,f,c
 11710  000AD6  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 11711  000AD8  22DA               	addwfc	fsr2h,f,c
 11712  000ADA  C0C0  FFDE         	movff	??_auto_mount+22,postinc2
 11713  000ADE  C0C1  FFDE         	movff	??_auto_mount+23,postinc2
 11714  000AE2  C0C2  FFDE         	movff	??_auto_mount+24,postinc2
 11715  000AE6  C0C3  FFDE         	movff	??_auto_mount+25,postinc2
 11716  000AEA  D036               	goto	l781
 11717  000AEC                     l12393:
 11718                           
 11719                           ; BSR set to: 0
 11720                           ;tff.c: 787: else
 11721                           ;tff.c: 789: fs->dirbase = fs->fatbase + fatsize;
 11722  000AEC  0100               	movlb	0	; () banked
 11723  000AEE  EE20 F008          	lfsr	2,8
 11724  000AF2  51D8               	movf	auto_mount@fs& (0+255),w,b
 11725  000AF4  26D9               	addwf	fsr2l,f,c
 11726  000AF6  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 11727  000AF8  22DA               	addwfc	fsr2h,f,c
 11728  000AFA  CFDE F0AA          	movff	postinc2,??_auto_mount
 11729  000AFE  CFDE F0AB          	movff	postinc2,??_auto_mount+1
 11730  000B02  CFDE F0AC          	movff	postinc2,??_auto_mount+2
 11731  000B06  CFDE F0AD          	movff	postinc2,??_auto_mount+3
 11732  000B0A  0100               	movlb	0	; () banked
 11733  000B0C  51D3               	movf	auto_mount@fatsize& (0+255),w,b
 11734  000B0E  0100               	movlb	0	; () banked
 11735  000B10  25AA               	addwf	??_auto_mount& (0+255),w,b
 11736  000B12  0100               	movlb	0	; () banked
 11737  000B14  6FAE               	movwf	(??_auto_mount+4)& (0+255),b
 11738  000B16  0100               	movlb	0	; () banked
 11739  000B18  51D4               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 11740  000B1A  0100               	movlb	0	; () banked
 11741  000B1C  21AB               	addwfc	(??_auto_mount+1)& (0+255),w,b
 11742  000B1E  0100               	movlb	0	; () banked
 11743  000B20  6FAF               	movwf	(??_auto_mount+5)& (0+255),b
 11744  000B22  0100               	movlb	0	; () banked
 11745  000B24  51D5               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 11746  000B26  0100               	movlb	0	; () banked
 11747  000B28  21AC               	addwfc	(??_auto_mount+2)& (0+255),w,b
 11748  000B2A  0100               	movlb	0	; () banked
 11749  000B2C  6FB0               	movwf	(??_auto_mount+6)& (0+255),b
 11750  000B2E  0100               	movlb	0	; () banked
 11751  000B30  51D6               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 11752  000B32  0100               	movlb	0	; () banked
 11753  000B34  21AD               	addwfc	(??_auto_mount+3)& (0+255),w,b
 11754  000B36  0100               	movlb	0	; () banked
 11755  000B38  6FB1               	movwf	(??_auto_mount+7)& (0+255),b
 11756  000B3A  0100               	movlb	0	; () banked
 11757  000B3C  EE20 F00C          	lfsr	2,12
 11758  000B40  51D8               	movf	auto_mount@fs& (0+255),w,b
 11759  000B42  26D9               	addwf	fsr2l,f,c
 11760  000B44  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 11761  000B46  22DA               	addwfc	fsr2h,f,c
 11762  000B48  C0AE  FFDE         	movff	??_auto_mount+4,postinc2
 11763  000B4C  C0AF  FFDE         	movff	??_auto_mount+5,postinc2
 11764  000B50  C0B0  FFDE         	movff	??_auto_mount+6,postinc2
 11765  000B54  C0B1  FFDE         	movff	??_auto_mount+7,postinc2
 11766  000B58                     l781:
 11767                           
 11768                           ; BSR set to: 0
 11769                           ;tff.c: 790: fs->database = fs->fatbase + fatsize + fs->n_rootdir / 16;
 11770  000B58  0100               	movlb	0	; () banked
 11771  000B5A  EE20 F008          	lfsr	2,8
 11772  000B5E  51D8               	movf	auto_mount@fs& (0+255),w,b
 11773  000B60  26D9               	addwf	fsr2l,f,c
 11774  000B62  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 11775  000B64  22DA               	addwfc	fsr2h,f,c
 11776  000B66  CFDE F0AA          	movff	postinc2,??_auto_mount
 11777  000B6A  CFDE F0AB          	movff	postinc2,??_auto_mount+1
 11778  000B6E  CFDE F0AC          	movff	postinc2,??_auto_mount+2
 11779  000B72  CFDE F0AD          	movff	postinc2,??_auto_mount+3
 11780  000B76  0100               	movlb	0	; () banked
 11781  000B78  EE20 F002          	lfsr	2,2
 11782  000B7C  51D8               	movf	auto_mount@fs& (0+255),w,b
 11783  000B7E  26D9               	addwf	fsr2l,f,c
 11784  000B80  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 11785  000B82  22DA               	addwfc	fsr2h,f,c
 11786  000B84  CFDE F0AE          	movff	postinc2,??_auto_mount+4
 11787  000B88  CFDD F0AF          	movff	postdec2,??_auto_mount+5
 11788  000B8C  0E04               	movlw	4
 11789  000B8E  0100               	movlb	0	; () banked
 11790  000B90  6FB0               	movwf	(??_auto_mount+6)& (0+255),b
 11791  000B92                     u13865:
 11792  000B92  0100               	movlb	0	; () banked
 11793  000B94  90D8               	bcf	status,0,c
 11794  000B96  33AF               	rrcf	(??_auto_mount+5)& (0+255),f,b
 11795  000B98  33AE               	rrcf	(??_auto_mount+4)& (0+255),f,b
 11796  000B9A  0100               	movlb	0	; () banked
 11797  000B9C  2FB0               	decfsz	(??_auto_mount+6)& (0+255),f,b
 11798  000B9E  D7F9               	goto	u13865
 11799  000BA0  0100               	movlb	0	; () banked
 11800  000BA2  51AE               	movf	(??_auto_mount+4)& (0+255),w,b
 11801  000BA4  0100               	movlb	0	; () banked
 11802  000BA6  25AA               	addwf	??_auto_mount& (0+255),w,b
 11803  000BA8  0100               	movlb	0	; () banked
 11804  000BAA  6FB1               	movwf	(??_auto_mount+7)& (0+255),b
 11805  000BAC  0100               	movlb	0	; () banked
 11806  000BAE  51AF               	movf	(??_auto_mount+5)& (0+255),w,b
 11807  000BB0  0100               	movlb	0	; () banked
 11808  000BB2  21AB               	addwfc	(??_auto_mount+1)& (0+255),w,b
 11809  000BB4  0100               	movlb	0	; () banked
 11810  000BB6  6FB2               	movwf	(??_auto_mount+8)& (0+255),b
 11811  000BB8  0E00               	movlw	0
 11812  000BBA  0100               	movlb	0	; () banked
 11813  000BBC  21AC               	addwfc	(??_auto_mount+2)& (0+255),w,b
 11814  000BBE  0100               	movlb	0	; () banked
 11815  000BC0  6FB3               	movwf	(??_auto_mount+9)& (0+255),b
 11816  000BC2  0E00               	movlw	0
 11817  000BC4  0100               	movlb	0	; () banked
 11818  000BC6  21AD               	addwfc	(??_auto_mount+3)& (0+255),w,b
 11819  000BC8  0100               	movlb	0	; () banked
 11820  000BCA  6FB4               	movwf	(??_auto_mount+10)& (0+255),b
 11821  000BCC  0100               	movlb	0	; () banked
 11822  000BCE  51D3               	movf	auto_mount@fatsize& (0+255),w,b
 11823  000BD0  0100               	movlb	0	; () banked
 11824  000BD2  25B1               	addwf	(??_auto_mount+7)& (0+255),w,b
 11825  000BD4  0100               	movlb	0	; () banked
 11826  000BD6  6FB5               	movwf	(??_auto_mount+11)& (0+255),b
 11827  000BD8  0100               	movlb	0	; () banked
 11828  000BDA  51D4               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 11829  000BDC  0100               	movlb	0	; () banked
 11830  000BDE  21B2               	addwfc	(??_auto_mount+8)& (0+255),w,b
 11831  000BE0  0100               	movlb	0	; () banked
 11832  000BE2  6FB6               	movwf	(??_auto_mount+12)& (0+255),b
 11833  000BE4  0100               	movlb	0	; () banked
 11834  000BE6  51D5               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 11835  000BE8  0100               	movlb	0	; () banked
 11836  000BEA  21B3               	addwfc	(??_auto_mount+9)& (0+255),w,b
 11837  000BEC  0100               	movlb	0	; () banked
 11838  000BEE  6FB7               	movwf	(??_auto_mount+13)& (0+255),b
 11839  000BF0  0100               	movlb	0	; () banked
 11840  000BF2  51D6               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 11841  000BF4  0100               	movlb	0	; () banked
 11842  000BF6  21B4               	addwfc	(??_auto_mount+10)& (0+255),w,b
 11843  000BF8  0100               	movlb	0	; () banked
 11844  000BFA  6FB8               	movwf	(??_auto_mount+14)& (0+255),b
 11845  000BFC  0100               	movlb	0	; () banked
 11846  000BFE  EE20 F010          	lfsr	2,16
 11847  000C02  51D8               	movf	auto_mount@fs& (0+255),w,b
 11848  000C04  26D9               	addwf	fsr2l,f,c
 11849  000C06  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 11850  000C08  22DA               	addwfc	fsr2h,f,c
 11851  000C0A  C0B5  FFDE         	movff	??_auto_mount+11,postinc2
 11852  000C0E  C0B6  FFDE         	movff	??_auto_mount+12,postinc2
 11853  000C12  C0B7  FFDE         	movff	??_auto_mount+13,postinc2
 11854  000C16  C0B8  FFDE         	movff	??_auto_mount+14,postinc2
 11855                           
 11856                           ;tff.c: 794: fs->free_clust = (CLUST)0xFFFFFFFF;
 11857  000C1A  0100               	movlb	0	; () banked
 11858  000C1C  EE20 F020          	lfsr	2,32
 11859  000C20  51D8               	movf	auto_mount@fs& (0+255),w,b
 11860  000C22  26D9               	addwf	fsr2l,f,c
 11861  000C24  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 11862  000C26  22DA               	addwfc	fsr2h,f,c
 11863  000C28  0EFF               	movlw	255
 11864  000C2A  6EDE               	movwf	postinc2,c
 11865  000C2C  0EFF               	movlw	255
 11866  000C2E  6EDE               	movwf	postinc2,c
 11867  000C30  0EFF               	movlw	255
 11868  000C32  6EDE               	movwf	postinc2,c
 11869  000C34  0EFF               	movlw	255
 11870  000C36  6EDD               	movwf	postdec2,c
 11871                           
 11872                           ;tff.c: 810: fs->fs_type = fmt;
 11873  000C38  0100               	movlb	0	; () banked
 11874  000C3A  EE20 F024          	lfsr	2,36
 11875  000C3E  51D8               	movf	auto_mount@fs& (0+255),w,b
 11876  000C40  26D9               	addwf	fsr2l,f,c
 11877  000C42  51D9               	movf	(auto_mount@fs+1)& (0+255),w,b
 11878  000C44  22DA               	addwfc	fsr2h,f,c
 11879  000C46  C0D7  FFDF         	movff	auto_mount@fmt,indf2
 11880                           
 11881                           ; BSR set to: 0
 11882                           ;tff.c: 811: fs->id = ++fsid;
 11883  000C4A  0101               	movlb	1	; () banked
 11884  000C4C  4B60               	infsnz	_fsid& (0+255),f,b
 11885  000C4E  2B61               	incf	(_fsid+1)& (0+255),f,b
 11886  000C50  C0D8  FFD9         	movff	auto_mount@fs,fsr2l
 11887  000C54  C0D9  FFDA         	movff	auto_mount@fs+1,fsr2h
 11888  000C58  C160  FFDE         	movff	_fsid,postinc2
 11889  000C5C  C161  FFDD         	movff	_fsid+1,postdec2
 11890                           
 11891                           ;tff.c: 812: return FR_OK;
 11892  000C60  0E00               	movlw	0
 11893  000C62  0012               	return	
 11894  000C64                     __end_of_auto_mount:
 11895                           	opt stack 0
 11896                           tosu	equ	0xFFF
 11897                           tosh	equ	0xFFE
 11898                           tosl	equ	0xFFD
 11899                           pclath	equ	0xFFA
 11900                           tblptru	equ	0xFF8
 11901                           tblptrh	equ	0xFF7
 11902                           tblptrl	equ	0xFF6
 11903                           tablat	equ	0xFF5
 11904                           prodh	equ	0xFF4
 11905                           prodl	equ	0xFF3
 11906                           intcon	equ	0xFF2
 11907                           intcon2	equ	0xFF1
 11908                           intcon3	equ	0xFF0
 11909                           postinc0	equ	0xFEE
 11910                           wreg	equ	0xFE8
 11911                           indf1	equ	0xFE7
 11912                           postinc1	equ	0xFE6
 11913                           postdec1	equ	0xFE5
 11914                           fsr1h	equ	0xFE2
 11915                           fsr1l	equ	0xFE1
 11916                           indf2	equ	0xFDF
 11917                           postinc2	equ	0xFDE
 11918                           postdec2	equ	0xFDD
 11919                           fsr2h	equ	0xFDA
 11920                           fsr2l	equ	0xFD9
 11921                           status	equ	0xFD8
 11922                           
 11923 ;; *************** function _memset *****************
 11924 ;; Defined at:
 11925 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
 11926 ;; Parameters:    Size  Location     Type
 11927 ;;  p1              2   21[COMRAM] PTR void 
 11928 ;;		 -> fs.win(512), fs(552), f_rename@fn(12), f_utime@fn(12), 
 11929 ;;		 -> f_chmod@fn(12), f_mkdir@fn(12), f_unlink@fn(12), f_stat@fn(12), 
 11930 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), gps@gps_buffer(15), 
 11931 ;;  c               2   23[COMRAM] int 
 11932 ;;  n               2   25[COMRAM] unsigned int 
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;  p               2   27[COMRAM] PTR unsigned char 
 11935 ;;		 -> fs.win(512), fs(552), f_rename@fn(12), f_utime@fn(12), 
 11936 ;;		 -> f_chmod@fn(12), f_mkdir@fn(12), f_unlink@fn(12), f_stat@fn(12), 
 11937 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), gps@gps_buffer(15), 
 11938 ;; Return value:  Size  Location     Type
 11939 ;;                  2   21[COMRAM] PTR void 
 11940 ;; Registers used:
 11941 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11942 ;; Tracked objects:
 11943 ;;		On entry : 0/0
 11944 ;;		On exit  : 0/0
 11945 ;;		Unchanged: 0/0
 11946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11947 ;;      Params:         6       0       0       0       0       0       0       0       0
 11948 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11949 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11950 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11951 ;;Total ram usage:        8 bytes
 11952 ;; Hardware stack levels used:    1
 11953 ;; Hardware stack levels required when called:    2
 11954 ;; This function calls:
 11955 ;;		Nothing
 11956 ;; This function is called by:
 11957 ;;		_make_dirfile
 11958 ;;		_reserve_direntry
 11959 ;;		_auto_mount
 11960 ;;		_f_open
 11961 ;;		_gps
 11962 ;;		_f_mkdir
 11963 ;; This function uses a non-reentrant model
 11964 ;;
 11965                           
 11966                           	psect	text28
 11967  005604                     __ptext28:
 11968                           	opt stack 0
 11969  005604                     _memset:
 11970                           	opt stack 23
 11971                           
 11972                           ;incstack = 0
 11973  005604  C016  F01C         	movff	memset@p1,memset@p
 11974  005608  C017  F01D         	movff	memset@p1+1,memset@p+1
 11975  00560C  D008               	goto	l11253
 11976  00560E                     l11249:
 11977  00560E  C01C  FFD9         	movff	memset@p,fsr2l
 11978  005612  C01D  FFDA         	movff	memset@p+1,fsr2h
 11979  005616  C018  FFDF         	movff	memset@c,indf2
 11980  00561A  4A1C               	infsnz	memset@p,f,c
 11981  00561C  2A1D               	incf	memset@p+1,f,c
 11982  00561E                     l11253:
 11983  00561E  061A               	decf	memset@n,f,c
 11984  005620  A0D8               	btfss	status,0,c
 11985  005622  061B               	decf	memset@n+1,f,c
 11986  005624  281A               	incf	memset@n,w,c
 11987  005626  E1F3               	bnz	l11249
 11988  005628  281B               	incf	memset@n+1,w,c
 11989  00562A  B4D8               	btfsc	status,2,c
 11990  00562C  0012               	return	
 11991  00562E  D7EF               	goto	l11249
 11992  005630                     __end_of_memset:
 11993                           	opt stack 0
 11994                           tosu	equ	0xFFF
 11995                           tosh	equ	0xFFE
 11996                           tosl	equ	0xFFD
 11997                           pclath	equ	0xFFA
 11998                           tblptru	equ	0xFF8
 11999                           tblptrh	equ	0xFF7
 12000                           tblptrl	equ	0xFF6
 12001                           tablat	equ	0xFF5
 12002                           prodh	equ	0xFF4
 12003                           prodl	equ	0xFF3
 12004                           intcon	equ	0xFF2
 12005                           intcon2	equ	0xFF1
 12006                           intcon3	equ	0xFF0
 12007                           postinc0	equ	0xFEE
 12008                           wreg	equ	0xFE8
 12009                           indf1	equ	0xFE7
 12010                           postinc1	equ	0xFE6
 12011                           postdec1	equ	0xFE5
 12012                           fsr1h	equ	0xFE2
 12013                           fsr1l	equ	0xFE1
 12014                           indf2	equ	0xFDF
 12015                           postinc2	equ	0xFDE
 12016                           postdec2	equ	0xFDD
 12017                           fsr2h	equ	0xFDA
 12018                           fsr2l	equ	0xFD9
 12019                           status	equ	0xFD8
 12020                           
 12021 ;; *************** function _disk_initialize *****************
 12022 ;; Defined at:
 12023 ;;		line 110 in file "bibliotecas/diskio.c"
 12024 ;; Parameters:    Size  Location     Type
 12025 ;;  pdrv            1    wreg     unsigned char 
 12026 ;; Auto vars:     Size  Location     Type
 12027 ;;  pdrv            1   22[BANK0 ] unsigned char 
 12028 ;;  result          2    0        int 
 12029 ;;  stat            1   23[BANK0 ] unsigned char 
 12030 ;; Return value:  Size  Location     Type
 12031 ;;                  1    wreg      unsigned char 
 12032 ;; Registers used:
 12033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12034 ;; Tracked objects:
 12035 ;;		On entry : 0/0
 12036 ;;		On exit  : 0/0
 12037 ;;		Unchanged: 0/0
 12038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12039 ;;      Params:         0       0       0       0       0       0       0       0       0
 12040 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12041 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12042 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12043 ;;Total ram usage:        2 bytes
 12044 ;; Hardware stack levels used:    1
 12045 ;; Hardware stack levels required when called:    9
 12046 ;; This function calls:
 12047 ;;		_sdc_disk_initialize
 12048 ;; This function is called by:
 12049 ;;		_auto_mount
 12050 ;; This function uses a non-reentrant model
 12051 ;;
 12052                           
 12053                           	psect	text29
 12054  0053AA                     __ptext29:
 12055                           	opt stack 0
 12056  0053AA                     _disk_initialize:
 12057                           	opt stack 17
 12058                           
 12059                           ;incstack = 0
 12060                           ;disk_initialize@pdrv stored from wreg
 12061  0053AA  0100               	movlb	0	; () banked
 12062  0053AC  6F76               	movwf	disk_initialize@pdrv& (0+255),b
 12063                           
 12064                           ;diskio.c: 114: DSTATUS stat;
 12065                           ;diskio.c: 115: int result;
 12066                           ;diskio.c: 117: switch (pdrv) {
 12067  0053AE  D011               	goto	l11649
 12068  0053B0                     l11631:
 12069                           
 12070                           ;diskio.c: 119: stat = sdc_disk_initialize();
 12071  0053B0  EC9E  F016         	call	_sdc_disk_initialize	;wreg free
 12072  0053B4  0100               	movlb	0	; () banked
 12073  0053B6  6F77               	movwf	disk_initialize@stat& (0+255),b
 12074                           
 12075                           ; BSR set to: 0
 12076                           ;diskio.c: 123: return stat;
 12077  0053B8  0100               	movlb	0	; () banked
 12078  0053BA  5177               	movf	disk_initialize@stat& (0+255),w,b
 12079                           
 12080                           ; BSR set to: 0
 12081  0053BC  0012               	return	
 12082  0053BE                     l11637:
 12083                           
 12084                           ; BSR set to: 0
 12085                           ;diskio.c: 126: stat = sdc_disk_initialize();
 12086  0053BE  EC9E  F016         	call	_sdc_disk_initialize	;wreg free
 12087  0053C2  0100               	movlb	0	; () banked
 12088  0053C4  6F77               	movwf	disk_initialize@stat& (0+255),b
 12089                           
 12090                           ; BSR set to: 0
 12091                           ;diskio.c: 130: return stat;
 12092  0053C6  0100               	movlb	0	; () banked
 12093  0053C8  5177               	movf	disk_initialize@stat& (0+255),w,b
 12094                           
 12095                           ; BSR set to: 0
 12096  0053CA  0012               	return	
 12097  0053CC                     l11643:
 12098                           
 12099                           ; BSR set to: 0
 12100                           ;diskio.c: 137: return stat;
 12101  0053CC  0100               	movlb	0	; () banked
 12102  0053CE  5177               	movf	disk_initialize@stat& (0+255),w,b
 12103                           
 12104                           ; BSR set to: 0
 12105  0053D0  0012               	return	
 12106  0053D2                     l11649:
 12107  0053D2  0100               	movlb	0	; () banked
 12108  0053D4  5176               	movf	disk_initialize@pdrv& (0+255),w,b
 12109                           
 12110                           ; Switch size 1, requested type "space"
 12111                           ; Number of cases is 3, Range of values is 0 to 2
 12112                           ; switch strategies available:
 12113                           ; Name         Instructions Cycles
 12114                           ; simple_byte           10     6 (average)
 12115                           ;	Chosen strategy is simple_byte
 12116  0053D6  0A00               	xorlw	0	; case 0
 12117  0053D8  B4D8               	btfsc	status,2,c
 12118  0053DA  D7F1               	goto	l11637
 12119  0053DC  0A01               	xorlw	1	; case 1
 12120  0053DE  B4D8               	btfsc	status,2,c
 12121  0053E0  D7E7               	goto	l11631
 12122  0053E2  0A03               	xorlw	3	; case 2
 12123  0053E4  B4D8               	btfsc	status,2,c
 12124  0053E6  D7F2               	goto	l11643
 12125                           
 12126                           ; BSR set to: 0
 12127                           ;diskio.c: 139: return 0x01;
 12128                           
 12129                           ; BSR set to: 0
 12130  0053E8  0E01               	movlw	1
 12131  0053EA  0012               	return	
 12132  0053EC                     __end_of_disk_initialize:
 12133                           	opt stack 0
 12134                           tosu	equ	0xFFF
 12135                           tosh	equ	0xFFE
 12136                           tosl	equ	0xFFD
 12137                           pclath	equ	0xFFA
 12138                           tblptru	equ	0xFF8
 12139                           tblptrh	equ	0xFF7
 12140                           tblptrl	equ	0xFF6
 12141                           tablat	equ	0xFF5
 12142                           prodh	equ	0xFF4
 12143                           prodl	equ	0xFF3
 12144                           intcon	equ	0xFF2
 12145                           intcon2	equ	0xFF1
 12146                           intcon3	equ	0xFF0
 12147                           postinc0	equ	0xFEE
 12148                           wreg	equ	0xFE8
 12149                           indf1	equ	0xFE7
 12150                           postinc1	equ	0xFE6
 12151                           postdec1	equ	0xFE5
 12152                           fsr1h	equ	0xFE2
 12153                           fsr1l	equ	0xFE1
 12154                           indf2	equ	0xFDF
 12155                           postinc2	equ	0xFDE
 12156                           postdec2	equ	0xFDD
 12157                           fsr2h	equ	0xFDA
 12158                           fsr2l	equ	0xFD9
 12159                           status	equ	0xFD8
 12160                           
 12161 ;; *************** function _sdc_disk_initialize *****************
 12162 ;; Defined at:
 12163 ;;		line 295 in file "bibliotecas/diskio.c"
 12164 ;; Parameters:    Size  Location     Type
 12165 ;;		None
 12166 ;; Auto vars:     Size  Location     Type
 12167 ;;  teste          10    0        unsigned char [10]
 12168 ;;  count           2   19[BANK0 ] int 
 12169 ;;  count_nosd      2   16[BANK0 ] int 
 12170 ;;  i               2   14[BANK0 ] int 
 12171 ;;  receive         2    0        unsigned int 
 12172 ;;  buff            1   21[BANK0 ] unsigned char 
 12173 ;;  stat            1   18[BANK0 ] unsigned char 
 12174 ;; Return value:  Size  Location     Type
 12175 ;;                  1    wreg      unsigned char 
 12176 ;; Registers used:
 12177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12178 ;; Tracked objects:
 12179 ;;		On entry : 0/0
 12180 ;;		On exit  : 0/0
 12181 ;;		Unchanged: 0/0
 12182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12183 ;;      Params:         0       0       0       0       0       0       0       0       0
 12184 ;;      Locals:         0       8       0       0       0       0       0       0       0
 12185 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12186 ;;      Totals:         1       8       0       0       0       0       0       0       0
 12187 ;;Total ram usage:        9 bytes
 12188 ;; Hardware stack levels used:    1
 12189 ;; Hardware stack levels required when called:    8
 12190 ;; This function calls:
 12191 ;;		_WriteSPI_
 12192 ;;		_command
 12193 ;;		_dummy_clocks
 12194 ;;		_escreve_frase_ram_lcd
 12195 ;;		_escreve_inteiro_lcd
 12196 ;;		_posicao_cursor_lcd
 12197 ;;		_proceed
 12198 ;;		_response
 12199 ;; This function is called by:
 12200 ;;		_disk_initialize
 12201 ;; This function uses a non-reentrant model
 12202 ;;
 12203                           
 12204                           	psect	text30
 12205  002D3C                     __ptext30:
 12206                           	opt stack 0
 12207  002D3C                     _sdc_disk_initialize:
 12208                           	opt stack 17
 12209                           
 12210                           ;diskio.c: 298: int i = 0, count = 0, count_nosd = 0;
 12211                           
 12212                           ; BSR set to: 0
 12213                           ;incstack = 0
 12214  002D3C  0E00               	movlw	0
 12215  002D3E  0100               	movlb	0	; () banked
 12216  002D40  6F6F               	movwf	(sdc_disk_initialize@i+1)& (0+255),b
 12217  002D42  0E00               	movlw	0
 12218  002D44  6F6E               	movwf	sdc_disk_initialize@i& (0+255),b
 12219  002D46  0E00               	movlw	0
 12220  002D48  0100               	movlb	0	; () banked
 12221  002D4A  6F74               	movwf	(sdc_disk_initialize@count+1)& (0+255),b
 12222  002D4C  0E00               	movlw	0
 12223  002D4E  6F73               	movwf	sdc_disk_initialize@count& (0+255),b
 12224  002D50  0E00               	movlw	0
 12225  002D52  0100               	movlb	0	; () banked
 12226  002D54  6F71               	movwf	(sdc_disk_initialize@count_nosd+1)& (0+255),b
 12227  002D56  0E00               	movlw	0
 12228  002D58  6F70               	movwf	sdc_disk_initialize@count_nosd& (0+255),b
 12229                           
 12230                           ; BSR set to: 0
 12231                           ;diskio.c: 299: unsigned char buff, teste[10];
 12232                           ;diskio.c: 300: DSTATUS stat;
 12233                           ;diskio.c: 301: unsigned int receive;
 12234                           ;diskio.c: 304: _delay((unsigned long)((10)*(48000000/4000.0)));
 12235  002D5A  0E9C               	movlw	156
 12236  002D5C  6E34               	movwf	??_sdc_disk_initialize& (0+255),c
 12237  002D5E  0ED7               	movlw	215
 12238  002D60                     u16757:
 12239  002D60  2EE8               	decfsz	wreg,f,c
 12240  002D62  D7FE               	bra	u16757
 12241  002D64  2E34               	decfsz	??_sdc_disk_initialize& (0+255),f,c
 12242  002D66  D7FC               	bra	u16757
 12243  002D68  F000               	nop	
 12244                           
 12245                           ;diskio.c: 307: buff = 0;
 12246  002D6A  0E00               	movlw	0
 12247  002D6C  0100               	movlb	0	; () banked
 12248  002D6E  6F75               	movwf	sdc_disk_initialize@buff& (0+255),b
 12249                           
 12250                           ; BSR set to: 0
 12251                           ;diskio.c: 308: LATCbits.LATC7 = 1;
 12252  002D70  8E8B               	bsf	3979,7,c	;volatile
 12253                           
 12254                           ; BSR set to: 0
 12255                           ;diskio.c: 309: LATBbits.LATB4 = 0;
 12256  002D72  988A               	bcf	3978,4,c	;volatile
 12257                           
 12258                           ; BSR set to: 0
 12259                           ;diskio.c: 311: WriteSPI_("0xFF");
 12260  002D74  0E69               	movlw	STR_8& (0+255)
 12261  002D76  EC67  F028         	call	_WriteSPI_
 12262                           
 12263                           ;diskio.c: 312: command(0x40, 0X00000000, 0X95);
 12264  002D7A  0E00               	movlw	0
 12265  002D7C  0100               	movlb	0	; () banked
 12266  002D7E  6F67               	movwf	command@arg& (0+255),b
 12267  002D80  0E00               	movlw	0
 12268  002D82  6F68               	movwf	(command@arg+1)& (0+255),b
 12269  002D84  0E00               	movlw	0
 12270  002D86  6F69               	movwf	(command@arg+2)& (0+255),b
 12271  002D88  0E00               	movlw	0
 12272  002D8A  6F6A               	movwf	(command@arg+3)& (0+255),b
 12273  002D8C  0E95               	movlw	149
 12274  002D8E  0100               	movlb	0	; () banked
 12275  002D90  6F6B               	movwf	command@CRC& (0+255),b
 12276  002D92  0E40               	movlw	64
 12277  002D94  ECB2  F029         	call	_command
 12278                           
 12279                           ;diskio.c: 313: dummy_clocks(8);
 12280  002D98  0E08               	movlw	8
 12281  002D9A  ECEF  F028         	call	_dummy_clocks
 12282                           
 12283                           ;diskio.c: 315: LATBbits.LATB4 = 1;
 12284  002D9E  888A               	bsf	3978,4,c	;volatile
 12285  002DA0                     l11299:
 12286                           
 12287                           ;diskio.c: 317: buff = response();
 12288  002DA0  ECC0  F02B         	call	_response	;wreg free
 12289  002DA4  0100               	movlb	0	; () banked
 12290  002DA6  6F75               	movwf	sdc_disk_initialize@buff& (0+255),b
 12291                           
 12292                           ; BSR set to: 0
 12293                           ;diskio.c: 318: count++;
 12294  002DA8  0100               	movlb	0	; () banked
 12295  002DAA  4B73               	infsnz	sdc_disk_initialize@count& (0+255),f,b
 12296  002DAC  2B74               	incf	(sdc_disk_initialize@count+1)& (0+255),f,b
 12297                           
 12298                           ;diskio.c: 319: if(buff != 0x01)
 12299  002DAE  0100               	movlb	0	; () banked
 12300  002DB0  0575               	decf	sdc_disk_initialize@buff& (0+255),w,b
 12301  002DB2  B4D8               	btfsc	status,2,c
 12302  002DB4  D02F               	goto	l11319
 12303                           
 12304                           ; BSR set to: 0
 12305                           ;diskio.c: 320: {
 12306                           ;diskio.c: 321: posicao_cursor_lcd(1,0);
 12307  002DB6  0E00               	movlw	0
 12308  002DB8  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12309  002DBA  0E01               	movlw	1
 12310  002DBC  ECFA  F027         	call	_posicao_cursor_lcd
 12311                           
 12312                           ;diskio.c: 322: escreve_frase_ram_lcd("Sem Cartao");
 12313  002DC0  0E1B               	movlw	low STR_9
 12314  002DC2  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12315  002DC4  0E62               	movlw	high STR_9
 12316  002DC6  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12317  002DC8  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 12318                           
 12319                           ;diskio.c: 323: posicao_cursor_lcd(1, 11);
 12320  002DCC  0E0B               	movlw	11
 12321  002DCE  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12322  002DD0  0E01               	movlw	1
 12323  002DD2  ECFA  F027         	call	_posicao_cursor_lcd
 12324                           
 12325                           ;diskio.c: 324: escreve_inteiro_lcd(buff);
 12326  002DD6  C075  F02E         	movff	sdc_disk_initialize@buff,escreve_inteiro_lcd@valor
 12327  002DDA  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 12328  002DDC  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 12329                           
 12330                           ;diskio.c: 325: posicao_cursor_lcd(2,0);
 12331  002DE0  0E00               	movlw	0
 12332  002DE2  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12333  002DE4  0E02               	movlw	2
 12334  002DE6  ECFA  F027         	call	_posicao_cursor_lcd
 12335                           
 12336                           ;diskio.c: 326: escreve_frase_ram_lcd("Ins. Cartao");
 12337  002DEA  0E0F               	movlw	low STR_10
 12338  002DEC  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12339  002DEE  0E62               	movlw	high STR_10
 12340  002DF0  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12341  002DF2  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 12342                           
 12343                           ;diskio.c: 327: posicao_cursor_lcd(2, 11);
 12344  002DF6  0E0B               	movlw	11
 12345  002DF8  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12346  002DFA  0E02               	movlw	2
 12347  002DFC  ECFA  F027         	call	_posicao_cursor_lcd
 12348                           
 12349                           ;diskio.c: 328: escreve_inteiro_lcd(count);
 12350  002E00  C073  F02E         	movff	sdc_disk_initialize@count,escreve_inteiro_lcd@valor
 12351  002E04  C074  F02F         	movff	sdc_disk_initialize@count+1,escreve_inteiro_lcd@valor+1
 12352  002E08  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 12353                           
 12354                           ;diskio.c: 329: count++;
 12355  002E0C  0100               	movlb	0	; () banked
 12356  002E0E  4B73               	infsnz	sdc_disk_initialize@count& (0+255),f,b
 12357  002E10  2B74               	incf	(sdc_disk_initialize@count+1)& (0+255),f,b
 12358                           
 12359                           ;diskio.c: 330: }
 12360  002E12  D016               	goto	l11325
 12361  002E14                     l11319:
 12362                           
 12363                           ; BSR set to: 0
 12364                           ;diskio.c: 331: else
 12365                           ;diskio.c: 332: {
 12366                           ;diskio.c: 333: posicao_cursor_lcd(1,0);
 12367  002E14  0E00               	movlw	0
 12368  002E16  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12369  002E18  0E01               	movlw	1
 12370  002E1A  ECFA  F027         	call	_posicao_cursor_lcd
 12371                           
 12372                           ;diskio.c: 334: escreve_frase_ram_lcd("                ");
 12373  002E1E  0E7B               	movlw	low (STR_34+2)
 12374  002E20  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12375  002E22  0E60               	movlw	high (STR_34+2)
 12376  002E24  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12377  002E26  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 12378                           
 12379                           ;diskio.c: 335: posicao_cursor_lcd(2,0);
 12380  002E2A  0E00               	movlw	0
 12381  002E2C  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12382  002E2E  0E02               	movlw	2
 12383  002E30  ECFA  F027         	call	_posicao_cursor_lcd
 12384                           
 12385                           ;diskio.c: 336: escreve_frase_ram_lcd("                ");
 12386  002E34  0E7B               	movlw	low (STR_34+2)
 12387  002E36  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12388  002E38  0E60               	movlw	high (STR_34+2)
 12389  002E3A  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12390  002E3C  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 12391  002E40                     l11325:
 12392                           
 12393                           ;diskio.c: 337: }
 12394                           ;diskio.c: 338: }while((buff!=0X01) && count<100);
 12395  002E40  0100               	movlb	0	; () banked
 12396  002E42  0575               	decf	sdc_disk_initialize@buff& (0+255),w,b
 12397  002E44  B4D8               	btfsc	status,2,c
 12398  002E46  D00B               	goto	l11329
 12399                           
 12400                           ; BSR set to: 0
 12401  002E48  0100               	movlb	0	; () banked
 12402  002E4A  BF74               	btfsc	(sdc_disk_initialize@count+1)& (0+255),7,b
 12403  002E4C  D7A9               	goto	l11299
 12404  002E4E  0100               	movlb	0	; () banked
 12405  002E50  5174               	movf	(sdc_disk_initialize@count+1)& (0+255),w,b
 12406  002E52  E105               	bnz	l11329
 12407  002E54  0E64               	movlw	100
 12408  002E56  0100               	movlb	0	; () banked
 12409  002E58  5D73               	subwf	sdc_disk_initialize@count& (0+255),w,b
 12410  002E5A  A0D8               	btfss	status,0,c
 12411  002E5C  D7A1               	goto	l11299
 12412  002E5E                     l11329:
 12413                           
 12414                           ; BSR set to: 0
 12415                           ;diskio.c: 339: count = 0;
 12416  002E5E  0E00               	movlw	0
 12417  002E60  0100               	movlb	0	; () banked
 12418  002E62  6F74               	movwf	(sdc_disk_initialize@count+1)& (0+255),b
 12419  002E64  0E00               	movlw	0
 12420  002E66  6F73               	movwf	sdc_disk_initialize@count& (0+255),b
 12421                           
 12422                           ; BSR set to: 0
 12423                           ;diskio.c: 342: buff = 0xFF;
 12424  002E68  0100               	movlb	0	; () banked
 12425  002E6A  6975               	setf	sdc_disk_initialize@buff& (0+255),b
 12426                           
 12427                           ; BSR set to: 0
 12428                           ;diskio.c: 343: LATBbits.LATB4 = 0;
 12429  002E6C  988A               	bcf	3978,4,c	;volatile
 12430                           
 12431                           ; BSR set to: 0
 12432                           ;diskio.c: 344: LATCbits.LATC7 = 1;
 12433  002E6E  8E8B               	bsf	3979,7,c	;volatile
 12434                           
 12435                           ; BSR set to: 0
 12436                           ;diskio.c: 345: dummy_clocks(10);
 12437  002E70  0E0A               	movlw	10
 12438  002E72  ECEF  F028         	call	_dummy_clocks
 12439                           
 12440                           ;diskio.c: 346: command(0x48, 0x000001AA, 0x87);
 12441  002E76  0EAA               	movlw	170
 12442  002E78  0100               	movlb	0	; () banked
 12443  002E7A  6F67               	movwf	command@arg& (0+255),b
 12444  002E7C  0E01               	movlw	1
 12445  002E7E  6F68               	movwf	(command@arg+1)& (0+255),b
 12446  002E80  0E00               	movlw	0
 12447  002E82  6F69               	movwf	(command@arg+2)& (0+255),b
 12448  002E84  0E00               	movlw	0
 12449  002E86  6F6A               	movwf	(command@arg+3)& (0+255),b
 12450  002E88  0E87               	movlw	135
 12451  002E8A  0100               	movlb	0	; () banked
 12452  002E8C  6F6B               	movwf	command@CRC& (0+255),b
 12453  002E8E  0E48               	movlw	72
 12454  002E90  ECB2  F029         	call	_command
 12455                           
 12456                           ;diskio.c: 347: proceed();
 12457  002E94  ECB9  F02B         	call	_proceed	;wreg free
 12458                           
 12459                           ;diskio.c: 348: LATBbits.LATB4 = 1;
 12460  002E98  888A               	bsf	3978,4,c	;volatile
 12461  002E9A                     l11345:
 12462                           
 12463                           ;diskio.c: 350: buff = response();
 12464  002E9A  ECC0  F02B         	call	_response	;wreg free
 12465  002E9E  0100               	movlb	0	; () banked
 12466  002EA0  6F75               	movwf	sdc_disk_initialize@buff& (0+255),b
 12467                           
 12468                           ; BSR set to: 0
 12469                           ;diskio.c: 351: posicao_cursor_lcd(1,0);
 12470  002EA2  0E00               	movlw	0
 12471  002EA4  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12472  002EA6  0E01               	movlw	1
 12473  002EA8  ECFA  F027         	call	_posicao_cursor_lcd
 12474                           
 12475                           ;diskio.c: 352: escreve_inteiro_lcd(buff);
 12476  002EAC  C075  F02E         	movff	sdc_disk_initialize@buff,escreve_inteiro_lcd@valor
 12477  002EB0  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 12478  002EB2  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 12479                           
 12480                           ;diskio.c: 353: }while((buff!=0X01));
 12481  002EB6  0100               	movlb	0	; () banked
 12482  002EB8  0575               	decf	sdc_disk_initialize@buff& (0+255),w,b
 12483  002EBA  A4D8               	btfss	status,2,c
 12484  002EBC  D7EE               	goto	l11345
 12485                           
 12486                           ; BSR set to: 0
 12487                           ;diskio.c: 354: _delay((unsigned long)((10)*(48000000/4000.0)));
 12488                           
 12489                           ; BSR set to: 0
 12490  002EBE  0E9C               	movlw	156
 12491  002EC0  6E34               	movwf	??_sdc_disk_initialize& (0+255),c
 12492  002EC2  0ED7               	movlw	215
 12493  002EC4                     u16767:
 12494  002EC4  2EE8               	decfsz	wreg,f,c
 12495  002EC6  D7FE               	bra	u16767
 12496  002EC8  2E34               	decfsz	??_sdc_disk_initialize& (0+255),f,c
 12497  002ECA  D7FC               	bra	u16767
 12498  002ECC  F000               	nop	
 12499                           
 12500                           ;diskio.c: 358: buff = 0xFF;
 12501  002ECE  0100               	movlb	0	; () banked
 12502  002ED0  6975               	setf	sdc_disk_initialize@buff& (0+255),b
 12503                           
 12504                           ; BSR set to: 0
 12505                           ;diskio.c: 359: LATBbits.LATB4 = 0;
 12506  002ED2  988A               	bcf	3978,4,c	;volatile
 12507                           
 12508                           ; BSR set to: 0
 12509                           ;diskio.c: 360: LATCbits.LATC7 = 1;
 12510  002ED4  8E8B               	bsf	3979,7,c	;volatile
 12511                           
 12512                           ; BSR set to: 0
 12513                           ;diskio.c: 361: dummy_clocks(10);
 12514  002ED6  0E0A               	movlw	10
 12515  002ED8  ECEF  F028         	call	_dummy_clocks
 12516                           
 12517                           ;diskio.c: 362: command(0x77, 0x00000000, 0x65);
 12518  002EDC  0E00               	movlw	0
 12519  002EDE  0100               	movlb	0	; () banked
 12520  002EE0  6F67               	movwf	command@arg& (0+255),b
 12521  002EE2  0E00               	movlw	0
 12522  002EE4  6F68               	movwf	(command@arg+1)& (0+255),b
 12523  002EE6  0E00               	movlw	0
 12524  002EE8  6F69               	movwf	(command@arg+2)& (0+255),b
 12525  002EEA  0E00               	movlw	0
 12526  002EEC  6F6A               	movwf	(command@arg+3)& (0+255),b
 12527  002EEE  0E65               	movlw	101
 12528  002EF0  0100               	movlb	0	; () banked
 12529  002EF2  6F6B               	movwf	command@CRC& (0+255),b
 12530  002EF4  0E77               	movlw	119
 12531  002EF6  ECB2  F029         	call	_command
 12532                           
 12533                           ;diskio.c: 363: proceed();
 12534  002EFA  ECB9  F02B         	call	_proceed	;wreg free
 12535                           
 12536                           ;diskio.c: 364: LATBbits.LATB4 = 1;
 12537  002EFE  888A               	bsf	3978,4,c	;volatile
 12538                           
 12539                           ;diskio.c: 366: _delay((unsigned long)((10)*(48000000/4000.0)));
 12540  002F00  0E9C               	movlw	156
 12541  002F02  6E34               	movwf	??_sdc_disk_initialize& (0+255),c
 12542  002F04  0ED7               	movlw	215
 12543  002F06                     u16777:
 12544  002F06  2EE8               	decfsz	wreg,f,c
 12545  002F08  D7FE               	bra	u16777
 12546  002F0A  2E34               	decfsz	??_sdc_disk_initialize& (0+255),f,c
 12547  002F0C  D7FC               	bra	u16777
 12548  002F0E  F000               	nop	
 12549                           
 12550                           ;diskio.c: 368: buff = 0xFF;
 12551  002F10  0100               	movlb	0	; () banked
 12552  002F12  6975               	setf	sdc_disk_initialize@buff& (0+255),b
 12553                           
 12554                           ; BSR set to: 0
 12555                           ;diskio.c: 369: count = 0;
 12556  002F14  0E00               	movlw	0
 12557  002F16  0100               	movlb	0	; () banked
 12558  002F18  6F74               	movwf	(sdc_disk_initialize@count+1)& (0+255),b
 12559  002F1A  0E00               	movlw	0
 12560  002F1C  6F73               	movwf	sdc_disk_initialize@count& (0+255),b
 12561                           
 12562                           ; BSR set to: 0
 12563                           ;diskio.c: 373: LATBbits.LATB4 = 0;
 12564  002F1E  988A               	bcf	3978,4,c	;volatile
 12565                           
 12566                           ; BSR set to: 0
 12567                           ;diskio.c: 374: LATCbits.LATC7 = 1;
 12568  002F20  8E8B               	bsf	3979,7,c	;volatile
 12569                           
 12570                           ; BSR set to: 0
 12571                           ;diskio.c: 375: dummy_clocks(10);
 12572  002F22  0E0A               	movlw	10
 12573  002F24  ECEF  F028         	call	_dummy_clocks
 12574                           
 12575                           ;diskio.c: 376: command(0X69, 0x00000000, 0x00);
 12576  002F28  0E00               	movlw	0
 12577  002F2A  0100               	movlb	0	; () banked
 12578  002F2C  6F67               	movwf	command@arg& (0+255),b
 12579  002F2E  0E00               	movlw	0
 12580  002F30  6F68               	movwf	(command@arg+1)& (0+255),b
 12581  002F32  0E00               	movlw	0
 12582  002F34  6F69               	movwf	(command@arg+2)& (0+255),b
 12583  002F36  0E00               	movlw	0
 12584  002F38  6F6A               	movwf	(command@arg+3)& (0+255),b
 12585  002F3A  0E00               	movlw	0
 12586  002F3C  0100               	movlb	0	; () banked
 12587  002F3E  6F6B               	movwf	command@CRC& (0+255),b
 12588  002F40  0E69               	movlw	105
 12589  002F42  ECB2  F029         	call	_command
 12590                           
 12591                           ;diskio.c: 377: proceed();
 12592  002F46  ECB9  F02B         	call	_proceed	;wreg free
 12593                           
 12594                           ;diskio.c: 378: LATBbits.LATB4 = 1;
 12595  002F4A  888A               	bsf	3978,4,c	;volatile
 12596                           
 12597                           ;diskio.c: 380: _delay((unsigned long)((10)*(48000000/4000.0)));
 12598  002F4C  0E9C               	movlw	156
 12599  002F4E  6E34               	movwf	??_sdc_disk_initialize& (0+255),c
 12600  002F50  0ED7               	movlw	215
 12601  002F52                     u16787:
 12602  002F52  2EE8               	decfsz	wreg,f,c
 12603  002F54  D7FE               	bra	u16787
 12604  002F56  2E34               	decfsz	??_sdc_disk_initialize& (0+255),f,c
 12605  002F58  D7FC               	bra	u16787
 12606  002F5A  F000               	nop	
 12607                           
 12608                           ;diskio.c: 381: LATBbits.LATB4 = 0;
 12609  002F5C  988A               	bcf	3978,4,c	;volatile
 12610                           
 12611                           ;diskio.c: 382: LATCbits.LATC7 = 1;
 12612  002F5E  8E8B               	bsf	3979,7,c	;volatile
 12613                           
 12614                           ;diskio.c: 383: dummy_clocks(10);
 12615  002F60  0E0A               	movlw	10
 12616  002F62  ECEF  F028         	call	_dummy_clocks
 12617                           
 12618                           ;diskio.c: 384: command(0x41, 0x00000000, 0x00);
 12619  002F66  0E00               	movlw	0
 12620  002F68  0100               	movlb	0	; () banked
 12621  002F6A  6F67               	movwf	command@arg& (0+255),b
 12622  002F6C  0E00               	movlw	0
 12623  002F6E  6F68               	movwf	(command@arg+1)& (0+255),b
 12624  002F70  0E00               	movlw	0
 12625  002F72  6F69               	movwf	(command@arg+2)& (0+255),b
 12626  002F74  0E00               	movlw	0
 12627  002F76  6F6A               	movwf	(command@arg+3)& (0+255),b
 12628  002F78  0E00               	movlw	0
 12629  002F7A  0100               	movlb	0	; () banked
 12630  002F7C  6F6B               	movwf	command@CRC& (0+255),b
 12631  002F7E  0E41               	movlw	65
 12632  002F80  ECB2  F029         	call	_command
 12633                           
 12634                           ;diskio.c: 385: proceed();
 12635  002F84  ECB9  F02B         	call	_proceed	;wreg free
 12636                           
 12637                           ;diskio.c: 386: LATBbits.LATB4 = 1;
 12638  002F88  888A               	bsf	3978,4,c	;volatile
 12639  002F8A                     l11401:
 12640                           
 12641                           ;diskio.c: 389: {
 12642                           ;diskio.c: 390: buff = response();
 12643  002F8A  ECC0  F02B         	call	_response	;wreg free
 12644  002F8E  0100               	movlb	0	; () banked
 12645  002F90  6F75               	movwf	sdc_disk_initialize@buff& (0+255),b
 12646                           
 12647                           ; BSR set to: 0
 12648                           ;diskio.c: 391: count++;
 12649  002F92  0100               	movlb	0	; () banked
 12650  002F94  4B73               	infsnz	sdc_disk_initialize@count& (0+255),f,b
 12651  002F96  2B74               	incf	(sdc_disk_initialize@count+1)& (0+255),f,b
 12652                           
 12653                           ; BSR set to: 0
 12654                           ;diskio.c: 393: if(buff != 0x00)
 12655  002F98  0100               	movlb	0	; () banked
 12656  002F9A  5175               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12657  002F9C  0100               	movlb	0	; () banked
 12658  002F9E  B4D8               	btfsc	status,2,c
 12659  002FA0  D01B               	goto	l11417
 12660                           
 12661                           ; BSR set to: 0
 12662                           ;diskio.c: 394: {
 12663                           ;diskio.c: 395: posicao_cursor_lcd(2,0);
 12664  002FA2  0E00               	movlw	0
 12665  002FA4  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12666  002FA6  0E02               	movlw	2
 12667  002FA8  ECFA  F027         	call	_posicao_cursor_lcd
 12668                           
 12669                           ;diskio.c: 396: escreve_frase_ram_lcd("Erro Idle St    ");
 12670  002FAC  0E74               	movlw	low STR_13
 12671  002FAE  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12672  002FB0  0E61               	movlw	high STR_13
 12673  002FB2  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12674  002FB4  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 12675                           
 12676                           ;diskio.c: 397: escreve_inteiro_lcd(buff);
 12677  002FB8  C075  F02E         	movff	sdc_disk_initialize@buff,escreve_inteiro_lcd@valor
 12678  002FBC  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 12679  002FBE  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 12680                           
 12681                           ;diskio.c: 398: posicao_cursor_lcd(2,13);
 12682  002FC2  0E0D               	movlw	13
 12683  002FC4  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12684  002FC6  0E02               	movlw	2
 12685  002FC8  ECFA  F027         	call	_posicao_cursor_lcd
 12686                           
 12687                           ;diskio.c: 399: escreve_inteiro_lcd(count);
 12688  002FCC  C073  F02E         	movff	sdc_disk_initialize@count,escreve_inteiro_lcd@valor
 12689  002FD0  C074  F02F         	movff	sdc_disk_initialize@count+1,escreve_inteiro_lcd@valor+1
 12690  002FD4  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 12691  002FD8                     l11417:
 12692                           
 12693                           ;diskio.c: 400: }
 12694                           ;diskio.c: 402: }while(buff != 0x00);
 12695  002FD8  0100               	movlb	0	; () banked
 12696  002FDA  5175               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12697  002FDC  0100               	movlb	0	; () banked
 12698  002FDE  A4D8               	btfss	status,2,c
 12699  002FE0  D7D4               	goto	l11401
 12700                           
 12701                           ; BSR set to: 0
 12702                           ;diskio.c: 404: _delay((unsigned long)((10)*(48000000/4000.0)));
 12703                           
 12704                           ; BSR set to: 0
 12705  002FE2  0E9C               	movlw	156
 12706  002FE4  6E34               	movwf	??_sdc_disk_initialize& (0+255),c
 12707  002FE6  0ED7               	movlw	215
 12708  002FE8                     u16797:
 12709  002FE8  2EE8               	decfsz	wreg,f,c
 12710  002FEA  D7FE               	bra	u16797
 12711  002FEC  2E34               	decfsz	??_sdc_disk_initialize& (0+255),f,c
 12712  002FEE  D7FC               	bra	u16797
 12713  002FF0  F000               	nop	
 12714                           
 12715                           ;diskio.c: 409: _delay((unsigned long)((10)*(48000000/4000.0)));
 12716  002FF2  0E9C               	movlw	156
 12717  002FF4  6E34               	movwf	??_sdc_disk_initialize& (0+255),c
 12718  002FF6  0ED7               	movlw	215
 12719  002FF8                     u16807:
 12720  002FF8  2EE8               	decfsz	wreg,f,c
 12721  002FFA  D7FE               	bra	u16807
 12722  002FFC  2E34               	decfsz	??_sdc_disk_initialize& (0+255),f,c
 12723  002FFE  D7FC               	bra	u16807
 12724  003000  F000               	nop	
 12725                           
 12726                           ;diskio.c: 411: LATBbits.LATB4 = 0;
 12727  003002  988A               	bcf	3978,4,c	;volatile
 12728                           
 12729                           ;diskio.c: 412: LATCbits.LATC7 = 1;
 12730  003004  8E8B               	bsf	3979,7,c	;volatile
 12731                           
 12732                           ;diskio.c: 413: dummy_clocks(10);
 12733  003006  0E0A               	movlw	10
 12734  003008  ECEF  F028         	call	_dummy_clocks
 12735                           
 12736                           ;diskio.c: 414: command(0x50, 0x00000200, 0xFF);
 12737  00300C  0E00               	movlw	0
 12738  00300E  0100               	movlb	0	; () banked
 12739  003010  6F67               	movwf	command@arg& (0+255),b
 12740  003012  0E02               	movlw	2
 12741  003014  6F68               	movwf	(command@arg+1)& (0+255),b
 12742  003016  0E00               	movlw	0
 12743  003018  6F69               	movwf	(command@arg+2)& (0+255),b
 12744  00301A  0E00               	movlw	0
 12745  00301C  6F6A               	movwf	(command@arg+3)& (0+255),b
 12746  00301E  0EFF               	movlw	255
 12747  003020  0100               	movlb	0	; () banked
 12748  003022  6F6B               	movwf	command@CRC& (0+255),b
 12749  003024  0E50               	movlw	80
 12750  003026  ECB2  F029         	call	_command
 12751                           
 12752                           ;diskio.c: 415: proceed();
 12753  00302A  ECB9  F02B         	call	_proceed	;wreg free
 12754                           
 12755                           ;diskio.c: 416: LATBbits.LATB4 = 1;
 12756  00302E  888A               	bsf	3978,4,c	;volatile
 12757                           
 12758                           ;diskio.c: 418: count = 0;
 12759  003030  0E00               	movlw	0
 12760  003032  0100               	movlb	0	; () banked
 12761  003034  6F74               	movwf	(sdc_disk_initialize@count+1)& (0+255),b
 12762  003036  0E00               	movlw	0
 12763  003038  6F73               	movwf	sdc_disk_initialize@count& (0+255),b
 12764  00303A                     l11435:
 12765                           
 12766                           ; BSR set to: 0
 12767                           ;diskio.c: 420: {
 12768                           ;diskio.c: 421: buff = response();
 12769  00303A  ECC0  F02B         	call	_response	;wreg free
 12770  00303E  0100               	movlb	0	; () banked
 12771  003040  6F75               	movwf	sdc_disk_initialize@buff& (0+255),b
 12772                           
 12773                           ; BSR set to: 0
 12774                           ;diskio.c: 422: count++;
 12775  003042  0100               	movlb	0	; () banked
 12776  003044  4B73               	infsnz	sdc_disk_initialize@count& (0+255),f,b
 12777  003046  2B74               	incf	(sdc_disk_initialize@count+1)& (0+255),f,b
 12778                           
 12779                           ; BSR set to: 0
 12780                           ;diskio.c: 423: if(buff != 0x00)
 12781  003048  0100               	movlb	0	; () banked
 12782  00304A  5175               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12783  00304C  0100               	movlb	0	; () banked
 12784  00304E  B4D8               	btfsc	status,2,c
 12785  003050  D020               	goto	l11453
 12786                           
 12787                           ; BSR set to: 0
 12788                           ;diskio.c: 424: {
 12789                           ;diskio.c: 425: posicao_cursor_lcd(2,0);
 12790  003052  0E00               	movlw	0
 12791  003054  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12792  003056  0E02               	movlw	2
 12793  003058  ECFA  F027         	call	_posicao_cursor_lcd
 12794                           
 12795                           ;diskio.c: 426: escreve_frase_ram_lcd("Set. 512b       ");
 12796  00305C  0E52               	movlw	low STR_14
 12797  00305E  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12798  003060  0E61               	movlw	high STR_14
 12799  003062  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12800  003064  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 12801                           
 12802                           ;diskio.c: 427: posicao_cursor_lcd(2,0);
 12803  003068  0E00               	movlw	0
 12804  00306A  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12805  00306C  0E02               	movlw	2
 12806  00306E  ECFA  F027         	call	_posicao_cursor_lcd
 12807                           
 12808                           ;diskio.c: 428: escreve_inteiro_lcd(buff);
 12809  003072  C075  F02E         	movff	sdc_disk_initialize@buff,escreve_inteiro_lcd@valor
 12810  003076  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 12811  003078  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 12812                           
 12813                           ;diskio.c: 429: posicao_cursor_lcd(2,10);
 12814  00307C  0E0A               	movlw	10
 12815  00307E  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12816  003080  0E02               	movlw	2
 12817  003082  ECFA  F027         	call	_posicao_cursor_lcd
 12818                           
 12819                           ;diskio.c: 430: escreve_inteiro_lcd(count);
 12820  003086  C073  F02E         	movff	sdc_disk_initialize@count,escreve_inteiro_lcd@valor
 12821  00308A  C074  F02F         	movff	sdc_disk_initialize@count+1,escreve_inteiro_lcd@valor+1
 12822  00308E  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 12823  003092                     l11453:
 12824                           
 12825                           ;diskio.c: 431: }
 12826                           ;diskio.c: 432: }while(buff != 0x00);
 12827  003092  0100               	movlb	0	; () banked
 12828  003094  5175               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12829  003096  0100               	movlb	0	; () banked
 12830  003098  A4D8               	btfss	status,2,c
 12831  00309A  D7CF               	goto	l11435
 12832                           
 12833                           ; BSR set to: 0
 12834                           ;diskio.c: 433: posicao_cursor_lcd(2,10);
 12835                           
 12836                           ; BSR set to: 0
 12837  00309C  0E0A               	movlw	10
 12838  00309E  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12839  0030A0  0E02               	movlw	2
 12840  0030A2  ECFA  F027         	call	_posicao_cursor_lcd
 12841                           
 12842                           ;diskio.c: 434: escreve_inteiro_lcd(stat);
 12843  0030A6  C072  F02E         	movff	sdc_disk_initialize@stat,escreve_inteiro_lcd@valor
 12844  0030AA  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 12845  0030AC  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 12846                           
 12847                           ;diskio.c: 436: return stat;
 12848  0030B0  0100               	movlb	0	; () banked
 12849  0030B2  5172               	movf	sdc_disk_initialize@stat& (0+255),w,b
 12850  0030B4  0012               	return	
 12851  0030B6                     __end_of_sdc_disk_initialize:
 12852                           	opt stack 0
 12853                           tosu	equ	0xFFF
 12854                           tosh	equ	0xFFE
 12855                           tosl	equ	0xFFD
 12856                           pclath	equ	0xFFA
 12857                           tblptru	equ	0xFF8
 12858                           tblptrh	equ	0xFF7
 12859                           tblptrl	equ	0xFF6
 12860                           tablat	equ	0xFF5
 12861                           prodh	equ	0xFF4
 12862                           prodl	equ	0xFF3
 12863                           intcon	equ	0xFF2
 12864                           intcon2	equ	0xFF1
 12865                           intcon3	equ	0xFF0
 12866                           postinc0	equ	0xFEE
 12867                           wreg	equ	0xFE8
 12868                           indf1	equ	0xFE7
 12869                           postinc1	equ	0xFE6
 12870                           postdec1	equ	0xFE5
 12871                           fsr1h	equ	0xFE2
 12872                           fsr1l	equ	0xFE1
 12873                           indf2	equ	0xFDF
 12874                           postinc2	equ	0xFDE
 12875                           postdec2	equ	0xFDD
 12876                           fsr2h	equ	0xFDA
 12877                           fsr2l	equ	0xFD9
 12878                           status	equ	0xFD8
 12879                           
 12880 ;; *************** function _check_fs *****************
 12881 ;; Defined at:
 12882 ;;		line 623 in file "bibliotecas/tff.c"
 12883 ;; Parameters:    Size  Location     Type
 12884 ;;  sect            4   46[BANK0 ] unsigned long 
 12885 ;; Auto vars:     Size  Location     Type
 12886 ;;  temp4           4   65[BANK0 ] unsigned long 
 12887 ;;  temp3           4   58[BANK0 ] unsigned long 
 12888 ;;  temp2           4   54[BANK0 ] unsigned long 
 12889 ;;  fs              2   69[BANK0 ] PTR struct _FATFS
 12890 ;;		 -> fs(552), NULL(0), 
 12891 ;;  temp            2   62[BANK0 ] int 
 12892 ;; Return value:  Size  Location     Type
 12893 ;;                  1    wreg      unsigned char 
 12894 ;; Registers used:
 12895 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12896 ;; Tracked objects:
 12897 ;;		On entry : 0/0
 12898 ;;		On exit  : 0/0
 12899 ;;		Unchanged: 0/0
 12900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12901 ;;      Params:         0       4       0       0       0       0       0       0       0
 12902 ;;      Locals:         0      17       0       0       0       0       0       0       0
 12903 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12904 ;;      Totals:         0      25       0       0       0       0       0       0       0
 12905 ;;Total ram usage:       25 bytes
 12906 ;; Hardware stack levels used:    1
 12907 ;; Hardware stack levels required when called:   10
 12908 ;; This function calls:
 12909 ;;		_disk_read
 12910 ;;		_escreve_frase_ram_lcd
 12911 ;;		_escreve_inteiro_lcd
 12912 ;;		_memcmp
 12913 ;;		_posicao_cursor_lcd
 12914 ;; This function is called by:
 12915 ;;		_auto_mount
 12916 ;; This function uses a non-reentrant model
 12917 ;;
 12918                           
 12919                           	psect	text31
 12920  002912                     __ptext31:
 12921                           	opt stack 0
 12922  002912                     _check_fs:
 12923                           	opt stack 16
 12924                           
 12925                           ;tff.c: 627: FATFS *fs = FatFs;
 12926                           
 12927                           ; BSR set to: 0
 12928                           ;incstack = 0
 12929  002912  C035  F0A5         	movff	_FatFs,check_fs@fs
 12930  002916  C036  F0A6         	movff	_FatFs+1,check_fs@fs+1
 12931                           
 12932                           ;tff.c: 628: if (disk_read(0, fs->win, sect, 1) != RES_OK)
 12933  00291A  0E28               	movlw	40
 12934  00291C  0100               	movlb	0	; () banked
 12935  00291E  25A5               	addwf	check_fs@fs& (0+255),w,b
 12936  002920  0100               	movlb	0	; () banked
 12937  002922  6F83               	movwf	disk_read@buff& (0+255),b
 12938  002924  0E00               	movlw	0
 12939  002926  0100               	movlb	0	; () banked
 12940  002928  21A6               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12941  00292A  0100               	movlb	0	; () banked
 12942  00292C  6F84               	movwf	(disk_read@buff+1)& (0+255),b
 12943  00292E  C08E  F085         	movff	check_fs@sect,disk_read@sector
 12944  002932  C08F  F086         	movff	check_fs@sect+1,disk_read@sector+1
 12945  002936  C090  F087         	movff	check_fs@sect+2,disk_read@sector+2
 12946  00293A  C091  F088         	movff	check_fs@sect+3,disk_read@sector+3
 12947  00293E  0E01               	movlw	1
 12948  002940  0100               	movlb	0	; () banked
 12949  002942  6F89               	movwf	disk_read@count& (0+255),b
 12950  002944  0E00               	movlw	0
 12951  002946  ECF2  F025         	call	_disk_read
 12952  00294A  0900               	iorlw	0
 12953  00294C  B4D8               	btfsc	status,2,c
 12954  00294E  D002               	goto	l11915
 12955                           
 12956                           ;tff.c: 629: {
 12957                           ;tff.c: 630: return 2;
 12958  002950  0E02               	movlw	2
 12959  002952  0012               	return	
 12960  002954                     l11915:
 12961                           
 12962                           ;tff.c: 631: }
 12963                           ;tff.c: 632: posicao_cursor_lcd(1,0);
 12964  002954  0E00               	movlw	0
 12965  002956  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12966  002958  0E01               	movlw	1
 12967  00295A  ECFA  F027         	call	_posicao_cursor_lcd
 12968                           
 12969                           ;tff.c: 633: escreve_frase_ram_lcd("Load Boot  ");
 12970  00295E  0E03               	movlw	low STR_22
 12971  002960  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 12972  002962  0E62               	movlw	high STR_22
 12973  002964  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 12974  002966  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 12975                           
 12976                           ;tff.c: 634: posicao_cursor_lcd(1,12);
 12977  00296A  0E0C               	movlw	12
 12978  00296C  6E19               	movwf	posicao_cursor_lcd@coluna,c
 12979  00296E  0E01               	movlw	1
 12980  002970  ECFA  F027         	call	_posicao_cursor_lcd
 12981                           
 12982                           ;tff.c: 635: int temp = disk_read(0, fs->win, sect, 1);
 12983  002974  0E28               	movlw	40
 12984  002976  0100               	movlb	0	; () banked
 12985  002978  25A5               	addwf	check_fs@fs& (0+255),w,b
 12986  00297A  0100               	movlb	0	; () banked
 12987  00297C  6F83               	movwf	disk_read@buff& (0+255),b
 12988  00297E  0E00               	movlw	0
 12989  002980  0100               	movlb	0	; () banked
 12990  002982  21A6               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12991  002984  0100               	movlb	0	; () banked
 12992  002986  6F84               	movwf	(disk_read@buff+1)& (0+255),b
 12993  002988  C08E  F085         	movff	check_fs@sect,disk_read@sector
 12994  00298C  C08F  F086         	movff	check_fs@sect+1,disk_read@sector+1
 12995  002990  C090  F087         	movff	check_fs@sect+2,disk_read@sector+2
 12996  002994  C091  F088         	movff	check_fs@sect+3,disk_read@sector+3
 12997  002998  0E01               	movlw	1
 12998  00299A  0100               	movlb	0	; () banked
 12999  00299C  6F89               	movwf	disk_read@count& (0+255),b
 13000  00299E  0E00               	movlw	0
 13001  0029A0  ECF2  F025         	call	_disk_read
 13002  0029A4  0100               	movlb	0	; () banked
 13003  0029A6  6F92               	movwf	??_check_fs& (0+255),b
 13004  0029A8  0100               	movlb	0	; () banked
 13005  0029AA  5192               	movf	??_check_fs& (0+255),w,b
 13006  0029AC  0100               	movlb	0	; () banked
 13007  0029AE  6F9E               	movwf	check_fs@temp& (0+255),b
 13008  0029B0  6B9F               	clrf	(check_fs@temp+1)& (0+255),b
 13009                           
 13010                           ; BSR set to: 0
 13011                           ;tff.c: 636: escreve_inteiro_lcd(temp);
 13012  0029B2  C09E  F02E         	movff	check_fs@temp,escreve_inteiro_lcd@valor
 13013  0029B6  C09F  F02F         	movff	check_fs@temp+1,escreve_inteiro_lcd@valor+1
 13014  0029BA  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 13015                           
 13016                           ;tff.c: 637: _delay((unsigned long)((2000)*(48000000/4000.0)));
 13017  0029BE  0E7A               	movlw	122
 13018  0029C0  0100               	movlb	0	; () banked
 13019  0029C2  6F93               	movwf	(??_check_fs+1)& (0+255),b
 13020  0029C4  0EC1               	movlw	193
 13021  0029C6  0100               	movlb	0	; () banked
 13022  0029C8  6F92               	movwf	??_check_fs& (0+255),b
 13023  0029CA  0E81               	movlw	129
 13024  0029CC                     u16817:
 13025  0029CC  2EE8               	decfsz	wreg,f,c
 13026  0029CE  D7FE               	bra	u16817
 13027  0029D0  2F92               	decfsz	??_check_fs& (0+255),f,b
 13028  0029D2  D7FC               	bra	u16817
 13029  0029D4  2F93               	decfsz	(??_check_fs+1)& (0+255),f,b
 13030  0029D6  D7FA               	bra	u16817
 13031  0029D8  D000               	nop2	
 13032                           
 13033                           ;tff.c: 638: if ((WORD)(((WORD)*(volatile BYTE*)((&fs->win[510])+1)<<8)|(WORD)*(volatile
      +                           BYTE*)(&fs->win[510])) != 0xAA55)
 13034  0029DA  0E27               	movlw	39
 13035  0029DC  0100               	movlb	0	; () banked
 13036  0029DE  25A5               	addwf	check_fs@fs& (0+255),w,b
 13037  0029E0  6ED9               	movwf	fsr2l,c
 13038  0029E2  0E02               	movlw	2
 13039  0029E4  0100               	movlb	0	; () banked
 13040  0029E6  21A6               	addwfc	(check_fs@fs+1)& (0+255),w,b
 13041  0029E8  6EDA               	movwf	fsr2h,c
 13042  0029EA  50DF               	movf	indf2,w,c
 13043  0029EC  0100               	movlb	0	; () banked
 13044  0029EE  6F92               	movwf	??_check_fs& (0+255),b
 13045  0029F0  0100               	movlb	0	; () banked
 13046  0029F2  5192               	movf	??_check_fs& (0+255),w,b
 13047  0029F4  0100               	movlb	0	; () banked
 13048  0029F6  6F94               	movwf	(??_check_fs+2)& (0+255),b
 13049  0029F8  6B93               	clrf	(??_check_fs+1)& (0+255),b
 13050  0029FA  0E26               	movlw	38
 13051  0029FC  0100               	movlb	0	; () banked
 13052  0029FE  25A5               	addwf	check_fs@fs& (0+255),w,b
 13053  002A00  6ED9               	movwf	fsr2l,c
 13054  002A02  0E02               	movlw	2
 13055  002A04  0100               	movlb	0	; () banked
 13056  002A06  21A6               	addwfc	(check_fs@fs+1)& (0+255),w,b
 13057  002A08  6EDA               	movwf	fsr2h,c
 13058  002A0A  50DF               	movf	indf2,w,c
 13059  002A0C  0100               	movlb	0	; () banked
 13060  002A0E  6F95               	movwf	(??_check_fs+3)& (0+255),b
 13061  002A10  0100               	movlb	0	; () banked
 13062  002A12  5195               	movf	(??_check_fs+3)& (0+255),w,b
 13063  002A14  0100               	movlb	0	; () banked
 13064  002A16  1393               	iorwf	(??_check_fs+1)& (0+255),f,b
 13065  002A18  0E00               	movlw	0
 13066  002A1A  1394               	iorwf	(??_check_fs+2)& (0+255),f,b
 13067  002A1C  0E55               	movlw	85
 13068  002A1E  0100               	movlb	0	; () banked
 13069  002A20  1993               	xorwf	(??_check_fs+1)& (0+255),w,b
 13070  002A22  E105               	bnz	u13120
 13071  002A24  0EAA               	movlw	170
 13072  002A26  0100               	movlb	0	; () banked
 13073  002A28  1994               	xorwf	(??_check_fs+2)& (0+255),w,b
 13074  002A2A  B4D8               	btfsc	status,2,c
 13075  002A2C  D002               	goto	l11933
 13076  002A2E                     u13120:
 13077                           
 13078                           ; BSR set to: 0
 13079                           ;tff.c: 639: {
 13080                           ;tff.c: 641: return 2;
 13081  002A2E  0E02               	movlw	2
 13082                           
 13083                           ; BSR set to: 0
 13084  002A30  0012               	return	
 13085  002A32                     l11933:
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;tff.c: 642: }
 13089                           ;tff.c: 643: posicao_cursor_lcd(2,0);
 13090  002A32  0E00               	movlw	0
 13091  002A34  6E19               	movwf	posicao_cursor_lcd@coluna,c
 13092  002A36  0E02               	movlw	2
 13093  002A38  ECFA  F027         	call	_posicao_cursor_lcd
 13094                           
 13095                           ;tff.c: 644: escreve_frase_ram_lcd("Rec. sig.         ");
 13096  002A3C  0EC5               	movlw	low STR_23
 13097  002A3E  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 13098  002A40  0E60               	movlw	high STR_23
 13099  002A42  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 13100  002A44  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 13101                           
 13102                           ;tff.c: 645: posicao_cursor_lcd(2,10);
 13103  002A48  0E0A               	movlw	10
 13104  002A4A  6E19               	movwf	posicao_cursor_lcd@coluna,c
 13105  002A4C  0E02               	movlw	2
 13106  002A4E  ECFA  F027         	call	_posicao_cursor_lcd
 13107                           
 13108                           ;tff.c: 646: unsigned long int temp2 = (WORD)(((WORD)*(volatile BYTE*)((&fs->win[510])+1
      +                          )<<8)|(WORD)*(volatile BYTE*)(&fs->win[510]));
 13109  002A52  0E27               	movlw	39
 13110  002A54  0100               	movlb	0	; () banked
 13111  002A56  25A5               	addwf	check_fs@fs& (0+255),w,b
 13112  002A58  6ED9               	movwf	fsr2l,c
 13113  002A5A  0E02               	movlw	2
 13114  002A5C  0100               	movlb	0	; () banked
 13115  002A5E  21A6               	addwfc	(check_fs@fs+1)& (0+255),w,b
 13116  002A60  6EDA               	movwf	fsr2h,c
 13117  002A62  50DF               	movf	indf2,w,c
 13118  002A64  0100               	movlb	0	; () banked
 13119  002A66  6F92               	movwf	??_check_fs& (0+255),b
 13120  002A68  0100               	movlb	0	; () banked
 13121  002A6A  5192               	movf	??_check_fs& (0+255),w,b
 13122  002A6C  0100               	movlb	0	; () banked
 13123  002A6E  6F94               	movwf	(??_check_fs+2)& (0+255),b
 13124  002A70  6B93               	clrf	(??_check_fs+1)& (0+255),b
 13125  002A72  0E26               	movlw	38
 13126  002A74  0100               	movlb	0	; () banked
 13127  002A76  25A5               	addwf	check_fs@fs& (0+255),w,b
 13128  002A78  6ED9               	movwf	fsr2l,c
 13129  002A7A  0E02               	movlw	2
 13130  002A7C  0100               	movlb	0	; () banked
 13131  002A7E  21A6               	addwfc	(check_fs@fs+1)& (0+255),w,b
 13132  002A80  6EDA               	movwf	fsr2h,c
 13133  002A82  50DF               	movf	indf2,w,c
 13134  002A84  0100               	movlb	0	; () banked
 13135  002A86  6F95               	movwf	(??_check_fs+3)& (0+255),b
 13136  002A88  0100               	movlb	0	; () banked
 13137  002A8A  5195               	movf	(??_check_fs+3)& (0+255),w,b
 13138  002A8C  0100               	movlb	0	; () banked
 13139  002A8E  1393               	iorwf	(??_check_fs+1)& (0+255),f,b
 13140  002A90  0E00               	movlw	0
 13141  002A92  1394               	iorwf	(??_check_fs+2)& (0+255),f,b
 13142  002A94  C093  F096         	movff	??_check_fs+1,check_fs@temp2
 13143  002A98  C094  F097         	movff	??_check_fs+2,check_fs@temp2+1
 13144  002A9C  0100               	movlb	0	; () banked
 13145  002A9E  6B98               	clrf	(check_fs@temp2+2)& (0+255),b
 13146  002AA0  6B99               	clrf	(check_fs@temp2+3)& (0+255),b
 13147                           
 13148                           ; BSR set to: 0
 13149                           ;tff.c: 647: escreve_inteiro_lcd(temp2);
 13150  002AA2  C096  F02E         	movff	check_fs@temp2,escreve_inteiro_lcd@valor
 13151  002AA6  C097  F02F         	movff	check_fs@temp2+1,escreve_inteiro_lcd@valor+1
 13152  002AAA  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 13153                           
 13154                           ;tff.c: 648: _delay((unsigned long)((3000)*(48000000/4000.0)));
 13155  002AAE  0EB7               	movlw	183
 13156  002AB0  0100               	movlb	0	; () banked
 13157  002AB2  6F93               	movwf	(??_check_fs+1)& (0+255),b
 13158  002AB4  0EA1               	movlw	161
 13159  002AB6  0100               	movlb	0	; () banked
 13160  002AB8  6F92               	movwf	??_check_fs& (0+255),b
 13161  002ABA  0EC3               	movlw	195
 13162  002ABC                     u16827:
 13163  002ABC  2EE8               	decfsz	wreg,f,c
 13164  002ABE  D7FE               	bra	u16827
 13165  002AC0  2F92               	decfsz	??_check_fs& (0+255),f,b
 13166  002AC2  D7FC               	bra	u16827
 13167  002AC4  2F93               	decfsz	(??_check_fs+1)& (0+255),f,b
 13168  002AC6  D7FA               	bra	u16827
 13169  002AC8  D000               	nop2	
 13170                           
 13171                           ;tff.c: 649: if (!memcmp(&fs->win[54], "FAT", 3))
 13172  002ACA  0E5E               	movlw	94
 13173  002ACC  0100               	movlb	0	; () banked
 13174  002ACE  25A5               	addwf	check_fs@fs& (0+255),w,b
 13175  002AD0  6E16               	movwf	memcmp@s1,c
 13176  002AD2  0E00               	movlw	0
 13177  002AD4  0100               	movlb	0	; () banked
 13178  002AD6  21A6               	addwfc	(check_fs@fs+1)& (0+255),w,b
 13179  002AD8  6E17               	movwf	memcmp@s1+1,c
 13180  002ADA  0E78               	movlw	low STR_24
 13181  002ADC  6E18               	movwf	memcmp@s2,c
 13182  002ADE  0E62               	movlw	high STR_24
 13183  002AE0  6E19               	movwf	memcmp@s2+1,c
 13184  002AE2  0E00               	movlw	0
 13185  002AE4  6E1B               	movwf	memcmp@n+1,c
 13186  002AE6  0E03               	movlw	3
 13187  002AE8  6E1A               	movwf	memcmp@n,c
 13188  002AEA  ECA4  F025         	call	_memcmp	;wreg free
 13189  002AEE  5016               	movf	?_memcmp,w,c
 13190  002AF0  1017               	iorwf	?_memcmp+1,w,c
 13191  002AF2  A4D8               	btfss	status,2,c
 13192  002AF4  D002               	goto	l11951
 13193                           
 13194                           ;tff.c: 650: return 0;
 13195  002AF6  0E00               	movlw	0
 13196  002AF8  0012               	return	
 13197  002AFA                     l11951:
 13198                           
 13199                           ;tff.c: 652: posicao_cursor_lcd(1,0);
 13200  002AFA  0E00               	movlw	0
 13201  002AFC  6E19               	movwf	posicao_cursor_lcd@coluna,c
 13202  002AFE  0E01               	movlw	1
 13203  002B00  ECFA  F027         	call	_posicao_cursor_lcd
 13204                           
 13205                           ;tff.c: 653: escreve_frase_ram_lcd("FAT >           ");
 13206  002B04  0E41               	movlw	low STR_25
 13207  002B06  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 13208  002B08  0E61               	movlw	high STR_25
 13209  002B0A  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 13210  002B0C  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 13211                           
 13212                           ;tff.c: 654: posicao_cursor_lcd(1,8);
 13213  002B10  0E08               	movlw	8
 13214  002B12  6E19               	movwf	posicao_cursor_lcd@coluna,c
 13215  002B14  0E01               	movlw	1
 13216  002B16  ECFA  F027         	call	_posicao_cursor_lcd
 13217                           
 13218                           ;tff.c: 655: unsigned long int temp3 = !memcmp(&fs->win[54], "FAT", 3);
 13219  002B1A  0E5E               	movlw	94
 13220  002B1C  0100               	movlb	0	; () banked
 13221  002B1E  25A5               	addwf	check_fs@fs& (0+255),w,b
 13222  002B20  6E16               	movwf	memcmp@s1,c
 13223  002B22  0E00               	movlw	0
 13224  002B24  0100               	movlb	0	; () banked
 13225  002B26  21A6               	addwfc	(check_fs@fs+1)& (0+255),w,b
 13226  002B28  6E17               	movwf	memcmp@s1+1,c
 13227  002B2A  0E78               	movlw	low STR_24
 13228  002B2C  6E18               	movwf	memcmp@s2,c
 13229  002B2E  0E62               	movlw	high STR_24
 13230  002B30  6E19               	movwf	memcmp@s2+1,c
 13231  002B32  0E00               	movlw	0
 13232  002B34  6E1B               	movwf	memcmp@n+1,c
 13233  002B36  0E03               	movlw	3
 13234  002B38  6E1A               	movwf	memcmp@n,c
 13235  002B3A  ECA4  F025         	call	_memcmp	;wreg free
 13236  002B3E  5016               	movf	?_memcmp,w,c
 13237  002B40  1017               	iorwf	?_memcmp+1,w,c
 13238  002B42  A4D8               	btfss	status,2,c
 13239  002B44  D002               	goto	u13140
 13240  002B46  0E01               	movlw	1
 13241  002B48  D001               	goto	u13150
 13242  002B4A                     u13140:
 13243  002B4A  0E00               	movlw	0
 13244  002B4C                     u13150:
 13245  002B4C  0100               	movlb	0	; () banked
 13246  002B4E  6F9A               	movwf	check_fs@temp3& (0+255),b
 13247  002B50  6B9B               	clrf	(check_fs@temp3+1)& (0+255),b
 13248  002B52  6B9C               	clrf	(check_fs@temp3+2)& (0+255),b
 13249  002B54  6B9D               	clrf	(check_fs@temp3+3)& (0+255),b
 13250                           
 13251                           ; BSR set to: 0
 13252                           ;tff.c: 656: escreve_inteiro_lcd(temp3);
 13253  002B56  C09A  F02E         	movff	check_fs@temp3,escreve_inteiro_lcd@valor
 13254  002B5A  C09B  F02F         	movff	check_fs@temp3+1,escreve_inteiro_lcd@valor+1
 13255  002B5E  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 13256                           
 13257                           ;tff.c: 657: _delay((unsigned long)((3000)*(48000000/4000.0)));
 13258  002B62  0EB7               	movlw	183
 13259  002B64  0100               	movlb	0	; () banked
 13260  002B66  6F93               	movwf	(??_check_fs+1)& (0+255),b
 13261  002B68  0EA1               	movlw	161
 13262  002B6A  0100               	movlb	0	; () banked
 13263  002B6C  6F92               	movwf	??_check_fs& (0+255),b
 13264  002B6E  0EC3               	movlw	195
 13265  002B70                     u16837:
 13266  002B70  2EE8               	decfsz	wreg,f,c
 13267  002B72  D7FE               	bra	u16837
 13268  002B74  2F92               	decfsz	??_check_fs& (0+255),f,b
 13269  002B76  D7FC               	bra	u16837
 13270  002B78  2F93               	decfsz	(??_check_fs+1)& (0+255),f,b
 13271  002B7A  D7FA               	bra	u16837
 13272  002B7C  D000               	nop2	
 13273                           
 13274                           ;tff.c: 659: if (!memcmp(&fs->win[82], "FAT32", 5) && !(fs->win[40] & 0x80))
 13275  002B7E  0E7A               	movlw	122
 13276  002B80  0100               	movlb	0	; () banked
 13277  002B82  25A5               	addwf	check_fs@fs& (0+255),w,b
 13278  002B84  6E16               	movwf	memcmp@s1,c
 13279  002B86  0E00               	movlw	0
 13280  002B88  0100               	movlb	0	; () banked
 13281  002B8A  21A6               	addwfc	(check_fs@fs+1)& (0+255),w,b
 13282  002B8C  6E17               	movwf	memcmp@s1+1,c
 13283  002B8E  0E4C               	movlw	low STR_27
 13284  002B90  6E18               	movwf	memcmp@s2,c
 13285  002B92  0E62               	movlw	high STR_27
 13286  002B94  6E19               	movwf	memcmp@s2+1,c
 13287  002B96  0E00               	movlw	0
 13288  002B98  6E1B               	movwf	memcmp@n+1,c
 13289  002B9A  0E05               	movlw	5
 13290  002B9C  6E1A               	movwf	memcmp@n,c
 13291  002B9E  ECA4  F025         	call	_memcmp	;wreg free
 13292  002BA2  5016               	movf	?_memcmp,w,c
 13293  002BA4  1017               	iorwf	?_memcmp+1,w,c
 13294  002BA6  A4D8               	btfss	status,2,c
 13295  002BA8  D00C               	goto	l11971
 13296  002BAA  0100               	movlb	0	; () banked
 13297  002BAC  EE20 F050          	lfsr	2,80
 13298  002BB0  51A5               	movf	check_fs@fs& (0+255),w,b
 13299  002BB2  26D9               	addwf	fsr2l,f,c
 13300  002BB4  51A6               	movf	(check_fs@fs+1)& (0+255),w,b
 13301  002BB6  22DA               	addwfc	fsr2h,f,c
 13302  002BB8  0100               	movlb	0	; () banked
 13303  002BBA  BEDF               	btfsc	indf2,7,c
 13304  002BBC  D002               	goto	l11971
 13305                           
 13306                           ; BSR set to: 0
 13307                           ;tff.c: 660: return 0;
 13308  002BBE  0E00               	movlw	0
 13309                           
 13310                           ; BSR set to: 0
 13311  002BC0  0012               	return	
 13312  002BC2                     l11971:
 13313                           
 13314                           ;tff.c: 662: posicao_cursor_lcd(1,0);
 13315  002BC2  0E00               	movlw	0
 13316  002BC4  6E19               	movwf	posicao_cursor_lcd@coluna,c
 13317  002BC6  0E01               	movlw	1
 13318  002BC8  ECFA  F027         	call	_posicao_cursor_lcd
 13319                           
 13320                           ;tff.c: 663: escreve_frase_ram_lcd("FAT32 >           ");
 13321  002BCC  0EB2               	movlw	low STR_28
 13322  002BCE  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 13323  002BD0  0E60               	movlw	high STR_28
 13324  002BD2  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 13325  002BD4  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 13326                           
 13327                           ;tff.c: 664: posicao_cursor_lcd(1,8);
 13328  002BD8  0E08               	movlw	8
 13329  002BDA  6E19               	movwf	posicao_cursor_lcd@coluna,c
 13330  002BDC  0E01               	movlw	1
 13331  002BDE  ECFA  F027         	call	_posicao_cursor_lcd
 13332                           
 13333                           ;tff.c: 665: unsigned long int temp4 = !memcmp(&fs->win[82], "FAT32", 5);
 13334  002BE2  0E7A               	movlw	122
 13335  002BE4  0100               	movlb	0	; () banked
 13336  002BE6  25A5               	addwf	check_fs@fs& (0+255),w,b
 13337  002BE8  6E16               	movwf	memcmp@s1,c
 13338  002BEA  0E00               	movlw	0
 13339  002BEC  0100               	movlb	0	; () banked
 13340  002BEE  21A6               	addwfc	(check_fs@fs+1)& (0+255),w,b
 13341  002BF0  6E17               	movwf	memcmp@s1+1,c
 13342  002BF2  0E4C               	movlw	low STR_27
 13343  002BF4  6E18               	movwf	memcmp@s2,c
 13344  002BF6  0E62               	movlw	high STR_27
 13345  002BF8  6E19               	movwf	memcmp@s2+1,c
 13346  002BFA  0E00               	movlw	0
 13347  002BFC  6E1B               	movwf	memcmp@n+1,c
 13348  002BFE  0E05               	movlw	5
 13349  002C00  6E1A               	movwf	memcmp@n,c
 13350  002C02  ECA4  F025         	call	_memcmp	;wreg free
 13351  002C06  5016               	movf	?_memcmp,w,c
 13352  002C08  1017               	iorwf	?_memcmp+1,w,c
 13353  002C0A  A4D8               	btfss	status,2,c
 13354  002C0C  D002               	goto	u13180
 13355  002C0E  0E01               	movlw	1
 13356  002C10  D001               	goto	u13190
 13357  002C12                     u13180:
 13358  002C12  0E00               	movlw	0
 13359  002C14                     u13190:
 13360  002C14  0100               	movlb	0	; () banked
 13361  002C16  6FA1               	movwf	check_fs@temp4& (0+255),b
 13362  002C18  6BA2               	clrf	(check_fs@temp4+1)& (0+255),b
 13363  002C1A  6BA3               	clrf	(check_fs@temp4+2)& (0+255),b
 13364  002C1C  6BA4               	clrf	(check_fs@temp4+3)& (0+255),b
 13365                           
 13366                           ; BSR set to: 0
 13367                           ;tff.c: 666: escreve_inteiro_lcd(temp4);
 13368  002C1E  C0A1  F02E         	movff	check_fs@temp4,escreve_inteiro_lcd@valor
 13369  002C22  C0A2  F02F         	movff	check_fs@temp4+1,escreve_inteiro_lcd@valor+1
 13370  002C26  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 13371                           
 13372                           ;tff.c: 667: posicao_cursor_lcd(2,0);
 13373  002C2A  0E00               	movlw	0
 13374  002C2C  6E19               	movwf	posicao_cursor_lcd@coluna,c
 13375  002C2E  0E02               	movlw	2
 13376  002C30  ECFA  F027         	call	_posicao_cursor_lcd
 13377                           
 13378                           ;tff.c: 668: escreve_frase_ram_lcd("BPB >          ");
 13379  002C34  0EA5               	movlw	low STR_30
 13380  002C36  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 13381  002C38  0E61               	movlw	high STR_30
 13382  002C3A  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 13383  002C3C  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 13384                           
 13385                           ;tff.c: 669: posicao_cursor_lcd(2,8);
 13386  002C40  0E08               	movlw	8
 13387  002C42  6E19               	movwf	posicao_cursor_lcd@coluna,c
 13388  002C44  0E02               	movlw	2
 13389  002C46  ECFA  F027         	call	_posicao_cursor_lcd
 13390                           
 13391                           ;tff.c: 670: temp4 = !(fs->win[40] & 0x80);
 13392  002C4A  0100               	movlb	0	; () banked
 13393  002C4C  EE20 F050          	lfsr	2,80
 13394  002C50  51A5               	movf	check_fs@fs& (0+255),w,b
 13395  002C52  26D9               	addwf	fsr2l,f,c
 13396  002C54  51A6               	movf	(check_fs@fs+1)& (0+255),w,b
 13397  002C56  22DA               	addwfc	fsr2h,f,c
 13398  002C58  0100               	movlb	0	; () banked
 13399  002C5A  BEDF               	btfsc	indf2,7,c
 13400  002C5C  D002               	goto	u13200
 13401  002C5E  0E01               	movlw	1
 13402  002C60  D001               	goto	u13210
 13403  002C62                     u13200:
 13404  002C62  0E00               	movlw	0
 13405  002C64                     u13210:
 13406  002C64  0100               	movlb	0	; () banked
 13407  002C66  6FA1               	movwf	check_fs@temp4& (0+255),b
 13408  002C68  6BA2               	clrf	(check_fs@temp4+1)& (0+255),b
 13409  002C6A  6BA3               	clrf	(check_fs@temp4+2)& (0+255),b
 13410  002C6C  6BA4               	clrf	(check_fs@temp4+3)& (0+255),b
 13411                           
 13412                           ; BSR set to: 0
 13413                           ;tff.c: 671: escreve_inteiro_lcd(temp4);
 13414  002C6E  C0A1  F02E         	movff	check_fs@temp4,escreve_inteiro_lcd@valor
 13415  002C72  C0A2  F02F         	movff	check_fs@temp4+1,escreve_inteiro_lcd@valor+1
 13416  002C76  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 13417                           
 13418                           ;tff.c: 672: _delay((unsigned long)((3000)*(48000000/4000.0)));
 13419  002C7A  0EB7               	movlw	183
 13420  002C7C  0100               	movlb	0	; () banked
 13421  002C7E  6F93               	movwf	(??_check_fs+1)& (0+255),b
 13422  002C80  0EA1               	movlw	161
 13423  002C82  0100               	movlb	0	; () banked
 13424  002C84  6F92               	movwf	??_check_fs& (0+255),b
 13425  002C86  0EC3               	movlw	195
 13426  002C88                     u16847:
 13427  002C88  2EE8               	decfsz	wreg,f,c
 13428  002C8A  D7FE               	bra	u16847
 13429  002C8C  2F92               	decfsz	??_check_fs& (0+255),f,b
 13430  002C8E  D7FC               	bra	u16847
 13431  002C90  2F93               	decfsz	(??_check_fs+1)& (0+255),f,b
 13432  002C92  D7FA               	bra	u16847
 13433  002C94  D000               	nop2	
 13434                           
 13435                           ;tff.c: 673: posicao_cursor_lcd(2,0);
 13436  002C96  0E00               	movlw	0
 13437  002C98  6E19               	movwf	posicao_cursor_lcd@coluna,c
 13438  002C9A  0E02               	movlw	2
 13439  002C9C  ECFA  F027         	call	_posicao_cursor_lcd
 13440                           
 13441                           ;tff.c: 674: escreve_frase_ram_lcd("IF    >        ");
 13442  002CA0  0EB5               	movlw	low STR_31
 13443  002CA2  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 13444  002CA4  0E61               	movlw	high STR_31
 13445  002CA6  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 13446  002CA8  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 13447                           
 13448                           ;tff.c: 675: posicao_cursor_lcd(2,8);
 13449  002CAC  0E08               	movlw	8
 13450  002CAE  6E19               	movwf	posicao_cursor_lcd@coluna,c
 13451  002CB0  0E02               	movlw	2
 13452  002CB2  ECFA  F027         	call	_posicao_cursor_lcd
 13453                           
 13454                           ;tff.c: 676: temp4 = !memcmp(&fs->win[82], "FAT32", 5) && !(fs->win[40] & 0x80);
 13455  002CB6  0E00               	movlw	0
 13456  002CB8  0100               	movlb	0	; () banked
 13457  002CBA  6FA0               	movwf	_check_fs$1188& (0+255),b
 13458                           
 13459                           ; BSR set to: 0
 13460  002CBC  0E7A               	movlw	122
 13461  002CBE  0100               	movlb	0	; () banked
 13462  002CC0  25A5               	addwf	check_fs@fs& (0+255),w,b
 13463  002CC2  6E16               	movwf	memcmp@s1,c
 13464  002CC4  0E00               	movlw	0
 13465  002CC6  0100               	movlb	0	; () banked
 13466  002CC8  21A6               	addwfc	(check_fs@fs+1)& (0+255),w,b
 13467  002CCA  6E17               	movwf	memcmp@s1+1,c
 13468  002CCC  0E4C               	movlw	low STR_27
 13469  002CCE  6E18               	movwf	memcmp@s2,c
 13470  002CD0  0E62               	movlw	high STR_27
 13471  002CD2  6E19               	movwf	memcmp@s2+1,c
 13472  002CD4  0E00               	movlw	0
 13473  002CD6  6E1B               	movwf	memcmp@n+1,c
 13474  002CD8  0E05               	movlw	5
 13475  002CDA  6E1A               	movwf	memcmp@n,c
 13476  002CDC  ECA4  F025         	call	_memcmp	;wreg free
 13477  002CE0  5016               	movf	?_memcmp,w,c
 13478  002CE2  1017               	iorwf	?_memcmp+1,w,c
 13479  002CE4  A4D8               	btfss	status,2,c
 13480  002CE6  D00D               	goto	l757
 13481  002CE8  0100               	movlb	0	; () banked
 13482  002CEA  EE20 F050          	lfsr	2,80
 13483  002CEE  51A5               	movf	check_fs@fs& (0+255),w,b
 13484  002CF0  26D9               	addwf	fsr2l,f,c
 13485  002CF2  51A6               	movf	(check_fs@fs+1)& (0+255),w,b
 13486  002CF4  22DA               	addwfc	fsr2h,f,c
 13487  002CF6  0100               	movlb	0	; () banked
 13488  002CF8  BEDF               	btfsc	indf2,7,c
 13489  002CFA  D003               	goto	l757
 13490                           
 13491                           ; BSR set to: 0
 13492  002CFC  0E01               	movlw	1
 13493  002CFE  0100               	movlb	0	; () banked
 13494  002D00  6FA0               	movwf	_check_fs$1188& (0+255),b
 13495  002D02                     l757:
 13496  002D02  0100               	movlb	0	; () banked
 13497  002D04  51A0               	movf	_check_fs$1188& (0+255),w,b
 13498  002D06  0100               	movlb	0	; () banked
 13499  002D08  6FA1               	movwf	check_fs@temp4& (0+255),b
 13500  002D0A  6BA2               	clrf	(check_fs@temp4+1)& (0+255),b
 13501  002D0C  6BA3               	clrf	(check_fs@temp4+2)& (0+255),b
 13502  002D0E  6BA4               	clrf	(check_fs@temp4+3)& (0+255),b
 13503                           
 13504                           ; BSR set to: 0
 13505                           ;tff.c: 677: escreve_inteiro_lcd(temp4);
 13506  002D10  C0A1  F02E         	movff	check_fs@temp4,escreve_inteiro_lcd@valor
 13507  002D14  C0A2  F02F         	movff	check_fs@temp4+1,escreve_inteiro_lcd@valor+1
 13508  002D18  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 13509                           
 13510                           ;tff.c: 678: _delay((unsigned long)((3000)*(48000000/4000.0)));
 13511  002D1C  0EB7               	movlw	183
 13512  002D1E  0100               	movlb	0	; () banked
 13513  002D20  6F93               	movwf	(??_check_fs+1)& (0+255),b
 13514  002D22  0EA1               	movlw	161
 13515  002D24  0100               	movlb	0	; () banked
 13516  002D26  6F92               	movwf	??_check_fs& (0+255),b
 13517  002D28  0EC3               	movlw	195
 13518  002D2A                     u16857:
 13519  002D2A  2EE8               	decfsz	wreg,f,c
 13520  002D2C  D7FE               	bra	u16857
 13521  002D2E  2F92               	decfsz	??_check_fs& (0+255),f,b
 13522  002D30  D7FC               	bra	u16857
 13523  002D32  2F93               	decfsz	(??_check_fs+1)& (0+255),f,b
 13524  002D34  D7FA               	bra	u16857
 13525  002D36  D000               	nop2	
 13526                           
 13527                           ;tff.c: 681: return 1;
 13528  002D38  0E01               	movlw	1
 13529  002D3A  0012               	return	
 13530  002D3C                     __end_of_check_fs:
 13531                           	opt stack 0
 13532                           tosu	equ	0xFFF
 13533                           tosh	equ	0xFFE
 13534                           tosl	equ	0xFFD
 13535                           pclath	equ	0xFFA
 13536                           tblptru	equ	0xFF8
 13537                           tblptrh	equ	0xFF7
 13538                           tblptrl	equ	0xFF6
 13539                           tablat	equ	0xFF5
 13540                           prodh	equ	0xFF4
 13541                           prodl	equ	0xFF3
 13542                           intcon	equ	0xFF2
 13543                           intcon2	equ	0xFF1
 13544                           intcon3	equ	0xFF0
 13545                           postinc0	equ	0xFEE
 13546                           wreg	equ	0xFE8
 13547                           indf1	equ	0xFE7
 13548                           postinc1	equ	0xFE6
 13549                           postdec1	equ	0xFE5
 13550                           fsr1h	equ	0xFE2
 13551                           fsr1l	equ	0xFE1
 13552                           indf2	equ	0xFDF
 13553                           postinc2	equ	0xFDE
 13554                           postdec2	equ	0xFDD
 13555                           fsr2h	equ	0xFDA
 13556                           fsr2l	equ	0xFD9
 13557                           status	equ	0xFD8
 13558                           
 13559 ;; *************** function _memcmp *****************
 13560 ;; Defined at:
 13561 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memcmp.c"
 13562 ;; Parameters:    Size  Location     Type
 13563 ;;  s1              2   21[COMRAM] PTR const void 
 13564 ;;		 -> fs.win(512), fs(552), NULL(0), 
 13565 ;;  s2              2   23[COMRAM] PTR const void 
 13566 ;;		 -> f_rename@fn(12), f_utime@fn(12), f_chmod@fn(12), f_mkdir@fn(12), 
 13567 ;;		 -> f_unlink@fn(12), f_stat@fn(12), f_opendir@fn(12), f_open@fn(12), 
 13568 ;;		 -> STR_32(6), STR_29(6), STR_27(6), STR_26(4), 
 13569 ;;		 -> STR_24(4), 
 13570 ;;  n               2   25[COMRAM] unsigned int 
 13571 ;; Auto vars:     Size  Location     Type
 13572 ;;		None
 13573 ;; Return value:  Size  Location     Type
 13574 ;;                  2   21[COMRAM] int 
 13575 ;; Registers used:
 13576 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13577 ;; Tracked objects:
 13578 ;;		On entry : 0/0
 13579 ;;		On exit  : 0/0
 13580 ;;		Unchanged: 0/0
 13581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13582 ;;      Params:         6       0       0       0       0       0       0       0       0
 13583 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13584 ;;      Temps:          3       0       0       0       0       0       0       0       0
 13585 ;;      Totals:         9       0       0       0       0       0       0       0       0
 13586 ;;Total ram usage:        9 bytes
 13587 ;; Hardware stack levels used:    1
 13588 ;; Hardware stack levels required when called:    2
 13589 ;; This function calls:
 13590 ;;		Nothing
 13591 ;; This function is called by:
 13592 ;;		_trace_path
 13593 ;;		_check_fs
 13594 ;; This function uses a non-reentrant model
 13595 ;;
 13596                           
 13597                           	psect	text32
 13598  004B48                     __ptext32:
 13599                           	opt stack 0
 13600  004B48                     _memcmp:
 13601                           	opt stack 24
 13602                           
 13603                           ;incstack = 0
 13604  004B48  D040               	goto	l11623
 13605  004B4A                     l11615:
 13606  004B4A  C016  FFD9         	movff	memcmp@s1,fsr2l
 13607  004B4E  C017  FFDA         	movff	memcmp@s1+1,fsr2h
 13608  004B52  50DF               	movf	indf2,w,c
 13609  004B54  6E1C               	movwf	??_memcmp& (0+255),c
 13610  004B56  C018  FFF6         	movff	memcmp@s2,tblptrl
 13611  004B5A  C019  FFF7         	movff	memcmp@s2+1,tblptrh
 13612  004B5E  6AF8               	clrf	tblptru,c
 13613  004B60  0E07               	movlw	(high __ramtop+-1)
 13614  004B62  64F7               	cpfsgt	tblptrh,c
 13615  004B64  D003               	bra	u12537
 13616  004B66  0008               	tblrd		*
 13617  004B68  50F5               	movf	tablat,w,c
 13618  004B6A  D005               	bra	u12530
 13619  004B6C                     u12537:
 13620  004B6C  CFF6 FFE9          	movff	tblptrl,fsr0l
 13621  004B70  CFF7 FFEA          	movff	tblptrh,fsr0h
 13622  004B74  50EF               	movf	indf0,w,c
 13623  004B76                     u12530:
 13624  004B76  181C               	xorwf	??_memcmp,w,c
 13625  004B78  B4D8               	btfsc	status,2,c
 13626  004B7A  D023               	goto	l11621
 13627  004B7C  C018  FFF6         	movff	memcmp@s2,tblptrl
 13628  004B80  C019  FFF7         	movff	memcmp@s2+1,tblptrh
 13629  004B84  6AF8               	clrf	tblptru,c
 13630  004B86  0E07               	movlw	(high __ramtop+-1)
 13631  004B88  64F7               	cpfsgt	tblptrh,c
 13632  004B8A  D003               	bra	u12557
 13633  004B8C  0008               	tblrd		*
 13634  004B8E  50F5               	movf	tablat,w,c
 13635  004B90  D005               	bra	u12550
 13636  004B92                     u12557:
 13637  004B92  CFF6 FFE9          	movff	tblptrl,fsr0l
 13638  004B96  CFF7 FFEA          	movff	tblptrh,fsr0h
 13639  004B9A  50EF               	movf	indf0,w,c
 13640  004B9C                     u12550:
 13641  004B9C  6E1C               	movwf	??_memcmp& (0+255),c
 13642  004B9E  6A1D               	clrf	(??_memcmp+1)& (0+255),c
 13643  004BA0  1E1C               	comf	??_memcmp,f,c
 13644  004BA2  1E1D               	comf	??_memcmp+1,f,c
 13645  004BA4  4A1C               	infsnz	??_memcmp,f,c
 13646  004BA6  2A1D               	incf	??_memcmp+1,f,c
 13647  004BA8  C016  FFD9         	movff	memcmp@s1,fsr2l
 13648  004BAC  C017  FFDA         	movff	memcmp@s1+1,fsr2h
 13649  004BB0  50DF               	movf	indf2,w,c
 13650  004BB2  6E1E               	movwf	(??_memcmp+2)& (0+255),c
 13651  004BB4  501E               	movf	??_memcmp+2,w,c
 13652  004BB6  241C               	addwf	??_memcmp,w,c
 13653  004BB8  6E16               	movwf	?_memcmp,c
 13654  004BBA  0E00               	movlw	0
 13655  004BBC  201D               	addwfc	??_memcmp+1,w,c
 13656  004BBE  6E17               	movwf	?_memcmp+1,c
 13657  004BC0  0012               	return	
 13658  004BC2                     l11621:
 13659  004BC2  4A16               	infsnz	memcmp@s1,f,c
 13660  004BC4  2A17               	incf	memcmp@s1+1,f,c
 13661  004BC6  4A18               	infsnz	memcmp@s2,f,c
 13662  004BC8  2A19               	incf	memcmp@s2+1,f,c
 13663  004BCA                     l11623:
 13664  004BCA  061A               	decf	memcmp@n,f,c
 13665  004BCC  A0D8               	btfss	status,0,c
 13666  004BCE  061B               	decf	memcmp@n+1,f,c
 13667  004BD0  281A               	incf	memcmp@n,w,c
 13668  004BD2  E1BB               	bnz	l11615
 13669  004BD4  281B               	incf	memcmp@n+1,w,c
 13670  004BD6  A4D8               	btfss	status,2,c
 13671  004BD8  D7B8               	goto	l11615
 13672  004BDA  0E00               	movlw	0
 13673  004BDC  6E17               	movwf	?_memcmp+1,c
 13674  004BDE  0E00               	movlw	0
 13675  004BE0  6E16               	movwf	?_memcmp,c
 13676  004BE2  0012               	return	
 13677  004BE4                     __end_of_memcmp:
 13678                           	opt stack 0
 13679                           tosu	equ	0xFFF
 13680                           tosh	equ	0xFFE
 13681                           tosl	equ	0xFFD
 13682                           pclath	equ	0xFFA
 13683                           tblptru	equ	0xFF8
 13684                           tblptrh	equ	0xFF7
 13685                           tblptrl	equ	0xFF6
 13686                           tablat	equ	0xFF5
 13687                           prodh	equ	0xFF4
 13688                           prodl	equ	0xFF3
 13689                           intcon	equ	0xFF2
 13690                           intcon2	equ	0xFF1
 13691                           intcon3	equ	0xFF0
 13692                           indf0	equ	0xFEF
 13693                           postinc0	equ	0xFEE
 13694                           fsr0h	equ	0xFEA
 13695                           fsr0l	equ	0xFE9
 13696                           wreg	equ	0xFE8
 13697                           indf1	equ	0xFE7
 13698                           postinc1	equ	0xFE6
 13699                           postdec1	equ	0xFE5
 13700                           fsr1h	equ	0xFE2
 13701                           fsr1l	equ	0xFE1
 13702                           indf2	equ	0xFDF
 13703                           postinc2	equ	0xFDE
 13704                           postdec2	equ	0xFDD
 13705                           fsr2h	equ	0xFDA
 13706                           fsr2l	equ	0xFD9
 13707                           status	equ	0xFD8
 13708                           
 13709 ;; *************** function ___lmul *****************
 13710 ;; Defined at:
 13711 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
 13712 ;; Parameters:    Size  Location     Type
 13713 ;;  multiplier      4   21[COMRAM] unsigned long 
 13714 ;;  multiplicand    4   25[COMRAM] unsigned long 
 13715 ;; Auto vars:     Size  Location     Type
 13716 ;;  product         4   29[COMRAM] unsigned long 
 13717 ;; Return value:  Size  Location     Type
 13718 ;;                  4   21[COMRAM] unsigned long 
 13719 ;; Registers used:
 13720 ;;		wreg, status,2, status,0
 13721 ;; Tracked objects:
 13722 ;;		On entry : 0/0
 13723 ;;		On exit  : 0/0
 13724 ;;		Unchanged: 0/0
 13725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13726 ;;      Params:         8       0       0       0       0       0       0       0       0
 13727 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13728 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13729 ;;      Totals:        12       0       0       0       0       0       0       0       0
 13730 ;;Total ram usage:       12 bytes
 13731 ;; Hardware stack levels used:    1
 13732 ;; Hardware stack levels required when called:    2
 13733 ;; This function calls:
 13734 ;;		Nothing
 13735 ;; This function is called by:
 13736 ;;		_clust2sect
 13737 ;;		_auto_mount
 13738 ;;		_strtod
 13739 ;;		_atol
 13740 ;; This function uses a non-reentrant model
 13741 ;;
 13742                           
 13743                           	psect	text33
 13744  005188                     __ptext33:
 13745                           	opt stack 0
 13746  005188                     ___lmul:
 13747                           	opt stack 22
 13748                           
 13749                           ;incstack = 0
 13750  005188  0E00               	movlw	0
 13751  00518A  6E1E               	movwf	___lmul@product,c
 13752  00518C  0E00               	movlw	0
 13753  00518E  6E1F               	movwf	___lmul@product+1,c
 13754  005190  0E00               	movlw	0
 13755  005192  6E20               	movwf	___lmul@product+2,c
 13756  005194  0E00               	movlw	0
 13757  005196  6E21               	movwf	___lmul@product+3,c
 13758  005198                     l11239:
 13759  005198  A016               	btfss	___lmul@multiplier,0,c
 13760  00519A  D008               	goto	l11243
 13761  00519C  501A               	movf	___lmul@multiplicand,w,c
 13762  00519E  261E               	addwf	___lmul@product,f,c
 13763  0051A0  501B               	movf	___lmul@multiplicand+1,w,c
 13764  0051A2  221F               	addwfc	___lmul@product+1,f,c
 13765  0051A4  501C               	movf	___lmul@multiplicand+2,w,c
 13766  0051A6  2220               	addwfc	___lmul@product+2,f,c
 13767  0051A8  501D               	movf	___lmul@multiplicand+3,w,c
 13768  0051AA  2221               	addwfc	___lmul@product+3,f,c
 13769  0051AC                     l11243:
 13770  0051AC  90D8               	bcf	status,0,c
 13771  0051AE  361A               	rlcf	___lmul@multiplicand,f,c
 13772  0051B0  361B               	rlcf	___lmul@multiplicand+1,f,c
 13773  0051B2  361C               	rlcf	___lmul@multiplicand+2,f,c
 13774  0051B4  361D               	rlcf	___lmul@multiplicand+3,f,c
 13775  0051B6  90D8               	bcf	status,0,c
 13776  0051B8  3219               	rrcf	___lmul@multiplier+3,f,c
 13777  0051BA  3218               	rrcf	___lmul@multiplier+2,f,c
 13778  0051BC  3217               	rrcf	___lmul@multiplier+1,f,c
 13779  0051BE  3216               	rrcf	___lmul@multiplier,f,c
 13780  0051C0  5016               	movf	___lmul@multiplier,w,c
 13781  0051C2  1017               	iorwf	___lmul@multiplier+1,w,c
 13782  0051C4  1018               	iorwf	___lmul@multiplier+2,w,c
 13783  0051C6  1019               	iorwf	___lmul@multiplier+3,w,c
 13784  0051C8  A4D8               	btfss	status,2,c
 13785  0051CA  D7E6               	goto	l11239
 13786  0051CC  C01E  F016         	movff	___lmul@product,?___lmul
 13787  0051D0  C01F  F017         	movff	___lmul@product+1,?___lmul+1
 13788  0051D4  C020  F018         	movff	___lmul@product+2,?___lmul+2
 13789  0051D8  C021  F019         	movff	___lmul@product+3,?___lmul+3
 13790  0051DC  0012               	return		;funcret
 13791  0051DE                     __end_of___lmul:
 13792                           	opt stack 0
 13793                           tosu	equ	0xFFF
 13794                           tosh	equ	0xFFE
 13795                           tosl	equ	0xFFD
 13796                           pclath	equ	0xFFA
 13797                           tblptru	equ	0xFF8
 13798                           tblptrh	equ	0xFF7
 13799                           tblptrl	equ	0xFF6
 13800                           tablat	equ	0xFF5
 13801                           prodh	equ	0xFF4
 13802                           prodl	equ	0xFF3
 13803                           intcon	equ	0xFF2
 13804                           intcon2	equ	0xFF1
 13805                           intcon3	equ	0xFF0
 13806                           indf0	equ	0xFEF
 13807                           postinc0	equ	0xFEE
 13808                           fsr0h	equ	0xFEA
 13809                           fsr0l	equ	0xFE9
 13810                           wreg	equ	0xFE8
 13811                           indf1	equ	0xFE7
 13812                           postinc1	equ	0xFE6
 13813                           postdec1	equ	0xFE5
 13814                           fsr1h	equ	0xFE2
 13815                           fsr1l	equ	0xFE1
 13816                           indf2	equ	0xFDF
 13817                           postinc2	equ	0xFDE
 13818                           postdec2	equ	0xFDD
 13819                           fsr2h	equ	0xFDA
 13820                           fsr2l	equ	0xFD9
 13821                           status	equ	0xFD8
 13822                           
 13823 ;; *************** function ___lldiv *****************
 13824 ;; Defined at:
 13825 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 13826 ;; Parameters:    Size  Location     Type
 13827 ;;  dividend        4   21[COMRAM] unsigned long 
 13828 ;;  divisor         4   25[COMRAM] unsigned long 
 13829 ;; Auto vars:     Size  Location     Type
 13830 ;;  quotient        4   29[COMRAM] unsigned long 
 13831 ;;  counter         1   33[COMRAM] unsigned char 
 13832 ;; Return value:  Size  Location     Type
 13833 ;;                  4   21[COMRAM] unsigned long 
 13834 ;; Registers used:
 13835 ;;		wreg, status,2, status,0
 13836 ;; Tracked objects:
 13837 ;;		On entry : 0/0
 13838 ;;		On exit  : 0/0
 13839 ;;		Unchanged: 0/0
 13840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13841 ;;      Params:         8       0       0       0       0       0       0       0       0
 13842 ;;      Locals:         5       0       0       0       0       0       0       0       0
 13843 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13844 ;;      Totals:        13       0       0       0       0       0       0       0       0
 13845 ;;Total ram usage:       13 bytes
 13846 ;; Hardware stack levels used:    1
 13847 ;; Hardware stack levels required when called:    2
 13848 ;; This function calls:
 13849 ;;		Nothing
 13850 ;; This function is called by:
 13851 ;;		_auto_mount
 13852 ;;		_convert_time_to_utc
 13853 ;;		_f_lseek
 13854 ;;		_sprintf
 13855 ;; This function uses a non-reentrant model
 13856 ;;
 13857                           
 13858                           	psect	text34
 13859  004E14                     __ptext34:
 13860                           	opt stack 0
 13861  004E14                     ___lldiv:
 13862                           	opt stack 24
 13863                           
 13864                           ;incstack = 0
 13865  004E14  0E00               	movlw	0
 13866  004E16  6E1E               	movwf	___lldiv@quotient,c
 13867  004E18  0E00               	movlw	0
 13868  004E1A  6E1F               	movwf	___lldiv@quotient+1,c
 13869  004E1C  0E00               	movlw	0
 13870  004E1E  6E20               	movwf	___lldiv@quotient+2,c
 13871  004E20  0E00               	movlw	0
 13872  004E22  6E21               	movwf	___lldiv@quotient+3,c
 13873  004E24  501A               	movf	___lldiv@divisor,w,c
 13874  004E26  101B               	iorwf	___lldiv@divisor+1,w,c
 13875  004E28  101C               	iorwf	___lldiv@divisor+2,w,c
 13876  004E2A  101D               	iorwf	___lldiv@divisor+3,w,c
 13877  004E2C  B4D8               	btfsc	status,2,c
 13878  004E2E  D02A               	goto	l1956
 13879  004E30  0E01               	movlw	1
 13880  004E32  6E22               	movwf	___lldiv@counter,c
 13881  004E34  D006               	goto	l12047
 13882  004E36                     l12045:
 13883  004E36  90D8               	bcf	status,0,c
 13884  004E38  361A               	rlcf	___lldiv@divisor,f,c
 13885  004E3A  361B               	rlcf	___lldiv@divisor+1,f,c
 13886  004E3C  361C               	rlcf	___lldiv@divisor+2,f,c
 13887  004E3E  361D               	rlcf	___lldiv@divisor+3,f,c
 13888  004E40  2A22               	incf	___lldiv@counter,f,c
 13889  004E42                     l12047:
 13890  004E42  AE1D               	btfss	___lldiv@divisor+3,7,c
 13891  004E44  D7F8               	goto	l12045
 13892  004E46                     l12049:
 13893  004E46  90D8               	bcf	status,0,c
 13894  004E48  361E               	rlcf	___lldiv@quotient,f,c
 13895  004E4A  361F               	rlcf	___lldiv@quotient+1,f,c
 13896  004E4C  3620               	rlcf	___lldiv@quotient+2,f,c
 13897  004E4E  3621               	rlcf	___lldiv@quotient+3,f,c
 13898  004E50  501A               	movf	___lldiv@divisor,w,c
 13899  004E52  5C16               	subwf	___lldiv@dividend,w,c
 13900  004E54  501B               	movf	___lldiv@divisor+1,w,c
 13901  004E56  5817               	subwfb	___lldiv@dividend+1,w,c
 13902  004E58  501C               	movf	___lldiv@divisor+2,w,c
 13903  004E5A  5818               	subwfb	___lldiv@dividend+2,w,c
 13904  004E5C  501D               	movf	___lldiv@divisor+3,w,c
 13905  004E5E  5819               	subwfb	___lldiv@dividend+3,w,c
 13906  004E60  A0D8               	btfss	status,0,c
 13907  004E62  D009               	goto	l12057
 13908  004E64  501A               	movf	___lldiv@divisor,w,c
 13909  004E66  5E16               	subwf	___lldiv@dividend,f,c
 13910  004E68  501B               	movf	___lldiv@divisor+1,w,c
 13911  004E6A  5A17               	subwfb	___lldiv@dividend+1,f,c
 13912  004E6C  501C               	movf	___lldiv@divisor+2,w,c
 13913  004E6E  5A18               	subwfb	___lldiv@dividend+2,f,c
 13914  004E70  501D               	movf	___lldiv@divisor+3,w,c
 13915  004E72  5A19               	subwfb	___lldiv@dividend+3,f,c
 13916  004E74  801E               	bsf	___lldiv@quotient,0,c
 13917  004E76                     l12057:
 13918  004E76  90D8               	bcf	status,0,c
 13919  004E78  321D               	rrcf	___lldiv@divisor+3,f,c
 13920  004E7A  321C               	rrcf	___lldiv@divisor+2,f,c
 13921  004E7C  321B               	rrcf	___lldiv@divisor+1,f,c
 13922  004E7E  321A               	rrcf	___lldiv@divisor,f,c
 13923  004E80  2E22               	decfsz	___lldiv@counter,f,c
 13924  004E82  D7E1               	goto	l12049
 13925  004E84                     l1956:
 13926  004E84  C01E  F016         	movff	___lldiv@quotient,?___lldiv
 13927  004E88  C01F  F017         	movff	___lldiv@quotient+1,?___lldiv+1
 13928  004E8C  C020  F018         	movff	___lldiv@quotient+2,?___lldiv+2
 13929  004E90  C021  F019         	movff	___lldiv@quotient+3,?___lldiv+3
 13930  004E94  0012               	return		;funcret
 13931  004E96                     __end_of___lldiv:
 13932                           	opt stack 0
 13933                           tosu	equ	0xFFF
 13934                           tosh	equ	0xFFE
 13935                           tosl	equ	0xFFD
 13936                           pclath	equ	0xFFA
 13937                           tblptru	equ	0xFF8
 13938                           tblptrh	equ	0xFF7
 13939                           tblptrl	equ	0xFF6
 13940                           tablat	equ	0xFF5
 13941                           prodh	equ	0xFF4
 13942                           prodl	equ	0xFF3
 13943                           intcon	equ	0xFF2
 13944                           intcon2	equ	0xFF1
 13945                           intcon3	equ	0xFF0
 13946                           indf0	equ	0xFEF
 13947                           postinc0	equ	0xFEE
 13948                           fsr0h	equ	0xFEA
 13949                           fsr0l	equ	0xFE9
 13950                           wreg	equ	0xFE8
 13951                           indf1	equ	0xFE7
 13952                           postinc1	equ	0xFE6
 13953                           postdec1	equ	0xFE5
 13954                           fsr1h	equ	0xFE2
 13955                           fsr1l	equ	0xFE1
 13956                           indf2	equ	0xFDF
 13957                           postinc2	equ	0xFDE
 13958                           postdec2	equ	0xFDD
 13959                           fsr2h	equ	0xFDA
 13960                           fsr2l	equ	0xFD9
 13961                           status	equ	0xFD8
 13962                           
 13963 ;; *************** function _f_mount *****************
 13964 ;; Defined at:
 13965 ;;		line 850 in file "bibliotecas/tff.c"
 13966 ;; Parameters:    Size  Location     Type
 13967 ;;  drv             1    wreg     unsigned char 
 13968 ;;  fs              2   21[COMRAM] PTR struct _FATFS
 13969 ;;		 -> fs(552), 
 13970 ;; Auto vars:     Size  Location     Type
 13971 ;;  drv             1   23[COMRAM] unsigned char 
 13972 ;; Return value:  Size  Location     Type
 13973 ;;                  1    wreg      enum E155
 13974 ;; Registers used:
 13975 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13976 ;; Tracked objects:
 13977 ;;		On entry : 0/0
 13978 ;;		On exit  : 0/0
 13979 ;;		Unchanged: 0/0
 13980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13981 ;;      Params:         2       0       0       0       0       0       0       0       0
 13982 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13983 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13984 ;;      Totals:         3       0       0       0       0       0       0       0       0
 13985 ;;Total ram usage:        3 bytes
 13986 ;; Hardware stack levels used:    1
 13987 ;; Hardware stack levels required when called:    2
 13988 ;; This function calls:
 13989 ;;		Nothing
 13990 ;; This function is called by:
 13991 ;;		_SDCard
 13992 ;; This function uses a non-reentrant model
 13993 ;;
 13994                           
 13995                           	psect	text35
 13996  0052D4                     __ptext35:
 13997                           	opt stack 0
 13998  0052D4                     _f_mount:
 13999                           	opt stack 26
 14000                           
 14001                           ;incstack = 0
 14002                           ;f_mount@drv stored from wreg
 14003  0052D4  6E18               	movwf	f_mount@drv,c
 14004                           
 14005                           ;tff.c: 855: if (drv) return FR_INVALID_DRIVE;
 14006  0052D6  5018               	movf	f_mount@drv,w,c
 14007  0052D8  B4D8               	btfsc	status,2,c
 14008  0052DA  D002               	goto	l12463
 14009  0052DC  0E05               	movlw	5
 14010  0052DE  0012               	return	
 14011  0052E0                     l12463:
 14012                           
 14013                           ;tff.c: 857: if (FatFs) FatFs->fs_type = 0;
 14014  0052E0  5035               	movf	_FatFs,w,c
 14015  0052E2  1036               	iorwf	_FatFs+1,w,c
 14016  0052E4  B4D8               	btfsc	status,2,c
 14017  0052E6  D008               	goto	l12467
 14018  0052E8  EE20 F024          	lfsr	2,36
 14019  0052EC  5035               	movf	_FatFs,w,c
 14020  0052EE  26D9               	addwf	fsr2l,f,c
 14021  0052F0  5036               	movf	_FatFs+1,w,c
 14022  0052F2  22DA               	addwfc	fsr2h,f,c
 14023  0052F4  0E00               	movlw	0
 14024  0052F6  6EDF               	movwf	indf2,c
 14025  0052F8                     l12467:
 14026                           
 14027                           ;tff.c: 859: FatFs = fs;
 14028  0052F8  C016  F035         	movff	f_mount@fs,_FatFs
 14029  0052FC  C017  F036         	movff	f_mount@fs+1,_FatFs+1
 14030                           
 14031                           ;tff.c: 860: if (fs) fs->fs_type = 0;
 14032  005300  5016               	movf	f_mount@fs,w,c
 14033  005302  1017               	iorwf	f_mount@fs+1,w,c
 14034  005304  B4D8               	btfsc	status,2,c
 14035  005306  D008               	goto	l12473
 14036  005308  EE20 F024          	lfsr	2,36
 14037  00530C  5016               	movf	f_mount@fs,w,c
 14038  00530E  26D9               	addwf	fsr2l,f,c
 14039  005310  5017               	movf	f_mount@fs+1,w,c
 14040  005312  22DA               	addwfc	fsr2h,f,c
 14041  005314  0E00               	movlw	0
 14042  005316  6EDF               	movwf	indf2,c
 14043  005318                     l12473:
 14044                           
 14045                           ;tff.c: 862: return FR_OK;
 14046  005318  0E00               	movlw	0
 14047  00531A  0012               	return	
 14048  00531C                     __end_of_f_mount:
 14049                           	opt stack 0
 14050                           tosu	equ	0xFFF
 14051                           tosh	equ	0xFFE
 14052                           tosl	equ	0xFFD
 14053                           pclath	equ	0xFFA
 14054                           tblptru	equ	0xFF8
 14055                           tblptrh	equ	0xFF7
 14056                           tblptrl	equ	0xFF6
 14057                           tablat	equ	0xFF5
 14058                           prodh	equ	0xFF4
 14059                           prodl	equ	0xFF3
 14060                           intcon	equ	0xFF2
 14061                           intcon2	equ	0xFF1
 14062                           intcon3	equ	0xFF0
 14063                           indf0	equ	0xFEF
 14064                           postinc0	equ	0xFEE
 14065                           fsr0h	equ	0xFEA
 14066                           fsr0l	equ	0xFE9
 14067                           wreg	equ	0xFE8
 14068                           indf1	equ	0xFE7
 14069                           postinc1	equ	0xFE6
 14070                           postdec1	equ	0xFE5
 14071                           fsr1h	equ	0xFE2
 14072                           fsr1l	equ	0xFE1
 14073                           indf2	equ	0xFDF
 14074                           postinc2	equ	0xFDE
 14075                           postdec2	equ	0xFDD
 14076                           fsr2h	equ	0xFDA
 14077                           fsr2l	equ	0xFD9
 14078                           status	equ	0xFD8
 14079                           
 14080 ;; *************** function _f_close *****************
 14081 ;; Defined at:
 14082 ;;		line 1167 in file "bibliotecas/tff.c"
 14083 ;; Parameters:    Size  Location     Type
 14084 ;;  fp              2   84[BANK0 ] PTR struct _FIL
 14085 ;;		 -> SDCard@fil(32), 
 14086 ;; Auto vars:     Size  Location     Type
 14087 ;;  res             1   86[BANK0 ] enum E155
 14088 ;; Return value:  Size  Location     Type
 14089 ;;                  1    wreg      enum E155
 14090 ;; Registers used:
 14091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14092 ;; Tracked objects:
 14093 ;;		On entry : 0/0
 14094 ;;		On exit  : 0/0
 14095 ;;		Unchanged: 0/0
 14096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14097 ;;      Params:         0       2       0       0       0       0       0       0       0
 14098 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14099 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14100 ;;      Totals:         0       3       0       0       0       0       0       0       0
 14101 ;;Total ram usage:        3 bytes
 14102 ;; Hardware stack levels used:    1
 14103 ;; Hardware stack levels required when called:   13
 14104 ;; This function calls:
 14105 ;;		_f_sync
 14106 ;; This function is called by:
 14107 ;;		_SDCard
 14108 ;; This function uses a non-reentrant model
 14109 ;;
 14110                           
 14111                           	psect	text36
 14112  0055D2                     __ptext36:
 14113                           	opt stack 0
 14114  0055D2                     _f_close:
 14115                           	opt stack 15
 14116                           
 14117                           ;tff.c: 1171: FRESULT res;
 14118                           ;tff.c: 1175: res = f_sync(fp);
 14119                           
 14120                           ;incstack = 0
 14121  0055D2  C0B4  F0A7         	movff	f_close@fp,f_sync@fp
 14122  0055D6  C0B5  F0A8         	movff	f_close@fp+1,f_sync@fp+1
 14123  0055DA  ECAB  F01B         	call	_f_sync	;wreg free
 14124  0055DE  0100               	movlb	0	; () banked
 14125  0055E0  6FB6               	movwf	f_close@res& (0+255),b
 14126                           
 14127                           ; BSR set to: 0
 14128                           ;tff.c: 1179: if (res == FR_OK) fp->fs = (0);
 14129  0055E2  0100               	movlb	0	; () banked
 14130  0055E4  51B6               	movf	f_close@res& (0+255),w,b
 14131  0055E6  0100               	movlb	0	; () banked
 14132  0055E8  A4D8               	btfss	status,2,c
 14133  0055EA  0012               	return	
 14134                           
 14135                           ; BSR set to: 0
 14136  0055EC  0100               	movlb	0	; () banked
 14137  0055EE  EE20 F004          	lfsr	2,4
 14138  0055F2  51B4               	movf	f_close@fp& (0+255),w,b
 14139  0055F4  26D9               	addwf	fsr2l,f,c
 14140  0055F6  51B5               	movf	(f_close@fp+1)& (0+255),w,b
 14141  0055F8  22DA               	addwfc	fsr2h,f,c
 14142  0055FA  0E00               	movlw	0
 14143  0055FC  6EDE               	movwf	postinc2,c
 14144  0055FE  0E00               	movlw	0
 14145  005600  6EDD               	movwf	postdec2,c
 14146                           
 14147                           ; BSR set to: 0
 14148  005602  0012               	return	
 14149  005604                     __end_of_f_close:
 14150                           	opt stack 0
 14151                           tosu	equ	0xFFF
 14152                           tosh	equ	0xFFE
 14153                           tosl	equ	0xFFD
 14154                           pclath	equ	0xFFA
 14155                           tblptru	equ	0xFF8
 14156                           tblptrh	equ	0xFF7
 14157                           tblptrl	equ	0xFF6
 14158                           tablat	equ	0xFF5
 14159                           prodh	equ	0xFF4
 14160                           prodl	equ	0xFF3
 14161                           intcon	equ	0xFF2
 14162                           intcon2	equ	0xFF1
 14163                           intcon3	equ	0xFF0
 14164                           indf0	equ	0xFEF
 14165                           postinc0	equ	0xFEE
 14166                           fsr0h	equ	0xFEA
 14167                           fsr0l	equ	0xFE9
 14168                           wreg	equ	0xFE8
 14169                           indf1	equ	0xFE7
 14170                           postinc1	equ	0xFE6
 14171                           postdec1	equ	0xFE5
 14172                           fsr1h	equ	0xFE2
 14173                           fsr1l	equ	0xFE1
 14174                           indf2	equ	0xFDF
 14175                           postinc2	equ	0xFDE
 14176                           postdec2	equ	0xFDD
 14177                           fsr2h	equ	0xFDA
 14178                           fsr2l	equ	0xFD9
 14179                           status	equ	0xFD8
 14180                           
 14181 ;; *************** function _f_sync *****************
 14182 ;; Defined at:
 14183 ;;		line 1128 in file "bibliotecas/tff.c"
 14184 ;; Parameters:    Size  Location     Type
 14185 ;;  fp              2   71[BANK0 ] PTR struct _FIL
 14186 ;;		 -> SDCard@fil(32), 
 14187 ;; Auto vars:     Size  Location     Type
 14188 ;;  tim             4   78[BANK0 ] unsigned long 
 14189 ;;  dir             2   82[BANK0 ] PTR unsigned char 
 14190 ;;		 -> fs(552), NULL(0), 
 14191 ;;  res             1   77[BANK0 ] enum E155
 14192 ;; Return value:  Size  Location     Type
 14193 ;;                  1    wreg      enum E155
 14194 ;; Registers used:
 14195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14196 ;; Tracked objects:
 14197 ;;		On entry : 0/0
 14198 ;;		On exit  : 0/0
 14199 ;;		Unchanged: 0/0
 14200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14201 ;;      Params:         0       2       0       0       0       0       0       0       0
 14202 ;;      Locals:         0       7       0       0       0       0       0       0       0
 14203 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14204 ;;      Totals:         0      13       0       0       0       0       0       0       0
 14205 ;;Total ram usage:       13 bytes
 14206 ;; Hardware stack levels used:    1
 14207 ;; Hardware stack levels required when called:   12
 14208 ;; This function calls:
 14209 ;;		_get_fattime
 14210 ;;		_move_window
 14211 ;;		_sync
 14212 ;;		_validate
 14213 ;; This function is called by:
 14214 ;;		_f_close
 14215 ;; This function uses a non-reentrant model
 14216 ;;
 14217                           
 14218                           	psect	text37
 14219  003756                     __ptext37:
 14220                           	opt stack 0
 14221  003756                     _f_sync:
 14222                           	opt stack 15
 14223                           
 14224                           ;tff.c: 1132: FRESULT res;
 14225                           ;tff.c: 1133: DWORD tim;
 14226                           ;tff.c: 1134: BYTE *dir;
 14227                           ;tff.c: 1137: res = validate(fp->fs, fp->id);
 14228                           
 14229                           ; BSR set to: 0
 14230                           ;incstack = 0
 14231  003756  0100               	movlb	0	; () banked
 14232  003758  EE20 F004          	lfsr	2,4
 14233  00375C  51A7               	movf	f_sync@fp& (0+255),w,b
 14234  00375E  26D9               	addwf	fsr2l,f,c
 14235  003760  51A8               	movf	(f_sync@fp+1)& (0+255),w,b
 14236  003762  22DA               	addwfc	fsr2h,f,c
 14237  003764  CFDE F01D          	movff	postinc2,validate@fs
 14238  003768  CFDD F01E          	movff	postdec2,validate@fs+1
 14239  00376C  C0A7  FFD9         	movff	f_sync@fp,fsr2l
 14240  003770  C0A8  FFDA         	movff	f_sync@fp+1,fsr2h
 14241  003774  CFDE F01F          	movff	postinc2,validate@id
 14242  003778  CFDD F020          	movff	postdec2,validate@id+1
 14243  00377C  EC8E  F029         	call	_validate	;wreg free
 14244  003780  0100               	movlb	0	; () banked
 14245  003782  6FAD               	movwf	f_sync@res& (0+255),b
 14246                           
 14247                           ; BSR set to: 0
 14248                           ;tff.c: 1138: if (res == FR_OK) {
 14249  003784  0100               	movlb	0	; () banked
 14250  003786  51AD               	movf	f_sync@res& (0+255),w,b
 14251  003788  0100               	movlb	0	; () banked
 14252  00378A  A4D8               	btfss	status,2,c
 14253  00378C  D15E               	goto	l12453
 14254                           
 14255                           ; BSR set to: 0
 14256                           ;tff.c: 1139: if (fp->flag & 0x20) {
 14257  00378E  0100               	movlb	0	; () banked
 14258  003790  EE20 F002          	lfsr	2,2
 14259  003794  51A7               	movf	f_sync@fp& (0+255),w,b
 14260  003796  26D9               	addwf	fsr2l,f,c
 14261  003798  51A8               	movf	(f_sync@fp+1)& (0+255),w,b
 14262  00379A  22DA               	addwfc	fsr2h,f,c
 14263  00379C  0100               	movlb	0	; () banked
 14264  00379E  AADF               	btfss	indf2,5,c
 14265  0037A0  D154               	goto	l12453
 14266                           
 14267                           ; BSR set to: 0
 14268                           ;tff.c: 1141: if (!move_window(fp->dir_sect))
 14269  0037A2  0100               	movlb	0	; () banked
 14270  0037A4  EE20 F01A          	lfsr	2,26
 14271  0037A8  51A7               	movf	f_sync@fp& (0+255),w,b
 14272  0037AA  26D9               	addwf	fsr2l,f,c
 14273  0037AC  51A8               	movf	(f_sync@fp+1)& (0+255),w,b
 14274  0037AE  22DA               	addwfc	fsr2h,f,c
 14275  0037B0  CFDE F08E          	movff	postinc2,move_window@sector
 14276  0037B4  CFDE F08F          	movff	postinc2,move_window@sector+1
 14277  0037B8  CFDE F090          	movff	postinc2,move_window@sector+2
 14278  0037BC  CFDE F091          	movff	postinc2,move_window@sector+3
 14279  0037C0  EC28  F01D         	call	_move_window	;wreg free
 14280  0037C4  0900               	iorlw	0
 14281  0037C6  A4D8               	btfss	status,2,c
 14282  0037C8  D002               	goto	l12421
 14283                           
 14284                           ;tff.c: 1142: return FR_RW_ERROR;
 14285  0037CA  0E08               	movlw	8
 14286  0037CC  0012               	return	
 14287  0037CE                     l12421:
 14288                           
 14289                           ;tff.c: 1143: dir = fp->dir_ptr;
 14290  0037CE  0100               	movlb	0	; () banked
 14291  0037D0  EE20 F01E          	lfsr	2,30
 14292  0037D4  51A7               	movf	f_sync@fp& (0+255),w,b
 14293  0037D6  26D9               	addwf	fsr2l,f,c
 14294  0037D8  51A8               	movf	(f_sync@fp+1)& (0+255),w,b
 14295  0037DA  22DA               	addwfc	fsr2h,f,c
 14296  0037DC  CFDE F0B2          	movff	postinc2,f_sync@dir
 14297  0037E0  CFDD F0B3          	movff	postdec2,f_sync@dir+1
 14298                           
 14299                           ;tff.c: 1144: dir[11] |= 0x20;
 14300  0037E4  0100               	movlb	0	; () banked
 14301  0037E6  EE20 F00B          	lfsr	2,11
 14302  0037EA  51B2               	movf	f_sync@dir& (0+255),w,b
 14303  0037EC  26D9               	addwf	fsr2l,f,c
 14304  0037EE  51B3               	movf	(f_sync@dir+1)& (0+255),w,b
 14305  0037F0  22DA               	addwfc	fsr2h,f,c
 14306  0037F2  0E00               	movlw	0
 14307  0037F4  8ADB               	bsf	plusw2,5,c
 14308                           
 14309                           ; BSR set to: 0
 14310                           ;tff.c: 1145: *(volatile BYTE*)(&dir[28])=(BYTE)(fp->fsize); *(volatile BYTE*)((&dir[28]
      +                          )+1)=(BYTE)((WORD)(fp->fsize)>>8); *(volatile BYTE*)((&dir[28])+2)=(BYTE)((DWORD)(fp->fs
      +                          ize)>>16); *(volatile BYTE*)((&dir[28])+3)=(BYTE)((DWORD)(fp->fsize)>>24);
 14311  0037F6  0100               	movlb	0	; () banked
 14312  0037F8  EE20 F00A          	lfsr	2,10
 14313  0037FC  51A7               	movf	f_sync@fp& (0+255),w,b
 14314  0037FE  26D9               	addwf	fsr2l,f,c
 14315  003800  51A8               	movf	(f_sync@fp+1)& (0+255),w,b
 14316  003802  22DA               	addwfc	fsr2h,f,c
 14317  003804  0E1C               	movlw	28
 14318  003806  0100               	movlb	0	; () banked
 14319  003808  25B2               	addwf	f_sync@dir& (0+255),w,b
 14320  00380A  6EE1               	movwf	fsr1l,c
 14321  00380C  0E00               	movlw	0
 14322  00380E  0100               	movlb	0	; () banked
 14323  003810  21B3               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14324  003812  6EE2               	movwf	fsr1h,c
 14325  003814  CFDF FFE7          	movff	indf2,indf1
 14326                           
 14327                           ; BSR set to: 0
 14328  003818  0E1D               	movlw	29
 14329  00381A  0100               	movlb	0	; () banked
 14330  00381C  25B2               	addwf	f_sync@dir& (0+255),w,b
 14331  00381E  6ED9               	movwf	fsr2l,c
 14332  003820  0E00               	movlw	0
 14333  003822  0100               	movlb	0	; () banked
 14334  003824  21B3               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14335  003826  6EDA               	movwf	fsr2h,c
 14336  003828  0100               	movlb	0	; () banked
 14337  00382A  EE10 F00A          	lfsr	1,10
 14338  00382E  51A7               	movf	f_sync@fp& (0+255),w,b
 14339  003830  26E1               	addwf	fsr1l,f,c
 14340  003832  51A8               	movf	(f_sync@fp+1)& (0+255),w,b
 14341  003834  22E2               	addwfc	fsr1h,f,c
 14342  003836  CFE6 F0A9          	movff	postinc1,??_f_sync
 14343  00383A  CFE5 F0AA          	movff	postdec1,??_f_sync+1
 14344  00383E  C0AA  F0A9         	movff	??_f_sync+1,??_f_sync
 14345  003842  0100               	movlb	0	; () banked
 14346  003844  6BAA               	clrf	(??_f_sync+1)& (0+255),b
 14347  003846  0100               	movlb	0	; () banked
 14348  003848  51A9               	movf	??_f_sync& (0+255),w,b
 14349  00384A  6EDF               	movwf	indf2,c
 14350                           
 14351                           ; BSR set to: 0
 14352  00384C  0E1E               	movlw	30
 14353  00384E  0100               	movlb	0	; () banked
 14354  003850  25B2               	addwf	f_sync@dir& (0+255),w,b
 14355  003852  6ED9               	movwf	fsr2l,c
 14356  003854  0E00               	movlw	0
 14357  003856  0100               	movlb	0	; () banked
 14358  003858  21B3               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14359  00385A  6EDA               	movwf	fsr2h,c
 14360  00385C  0100               	movlb	0	; () banked
 14361  00385E  EE10 F00A          	lfsr	1,10
 14362  003862  51A7               	movf	f_sync@fp& (0+255),w,b
 14363  003864  26E1               	addwf	fsr1l,f,c
 14364  003866  51A8               	movf	(f_sync@fp+1)& (0+255),w,b
 14365  003868  22E2               	addwfc	fsr1h,f,c
 14366  00386A  CFE6 F0A9          	movff	postinc1,??_f_sync
 14367  00386E  CFE6 F0AA          	movff	postinc1,??_f_sync+1
 14368  003872  CFE6 F0AB          	movff	postinc1,??_f_sync+2
 14369  003876  CFE6 F0AC          	movff	postinc1,??_f_sync+3
 14370  00387A  0E11               	movlw	17
 14371  00387C  D006               	goto	u13910
 14372  00387E                     u13915:
 14373  00387E  0100               	movlb	0	; () banked
 14374  003880  90D8               	bcf	status,0,c
 14375  003882  33AC               	rrcf	(??_f_sync+3)& (0+255),f,b
 14376  003884  33AB               	rrcf	(??_f_sync+2)& (0+255),f,b
 14377  003886  33AA               	rrcf	(??_f_sync+1)& (0+255),f,b
 14378  003888  33A9               	rrcf	??_f_sync& (0+255),f,b
 14379  00388A                     u13910:
 14380  00388A  2EE8               	decfsz	wreg,f,c
 14381  00388C  D7F8               	goto	u13915
 14382  00388E  0100               	movlb	0	; () banked
 14383  003890  51A9               	movf	??_f_sync& (0+255),w,b
 14384  003892  6EDF               	movwf	indf2,c
 14385                           
 14386                           ; BSR set to: 0
 14387  003894  0E1F               	movlw	31
 14388  003896  0100               	movlb	0	; () banked
 14389  003898  25B2               	addwf	f_sync@dir& (0+255),w,b
 14390  00389A  6ED9               	movwf	fsr2l,c
 14391  00389C  0E00               	movlw	0
 14392  00389E  0100               	movlb	0	; () banked
 14393  0038A0  21B3               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14394  0038A2  6EDA               	movwf	fsr2h,c
 14395  0038A4  0100               	movlb	0	; () banked
 14396  0038A6  EE10 F00A          	lfsr	1,10
 14397  0038AA  51A7               	movf	f_sync@fp& (0+255),w,b
 14398  0038AC  26E1               	addwf	fsr1l,f,c
 14399  0038AE  51A8               	movf	(f_sync@fp+1)& (0+255),w,b
 14400  0038B0  22E2               	addwfc	fsr1h,f,c
 14401  0038B2  CFE6 F0A9          	movff	postinc1,??_f_sync
 14402  0038B6  CFE6 F0AA          	movff	postinc1,??_f_sync+1
 14403  0038BA  CFE6 F0AB          	movff	postinc1,??_f_sync+2
 14404  0038BE  CFE6 F0AC          	movff	postinc1,??_f_sync+3
 14405  0038C2  0E19               	movlw	25
 14406  0038C4  D006               	goto	u13920
 14407  0038C6                     u13925:
 14408  0038C6  0100               	movlb	0	; () banked
 14409  0038C8  90D8               	bcf	status,0,c
 14410  0038CA  33AC               	rrcf	(??_f_sync+3)& (0+255),f,b
 14411  0038CC  33AB               	rrcf	(??_f_sync+2)& (0+255),f,b
 14412  0038CE  33AA               	rrcf	(??_f_sync+1)& (0+255),f,b
 14413  0038D0  33A9               	rrcf	??_f_sync& (0+255),f,b
 14414  0038D2                     u13920:
 14415  0038D2  2EE8               	decfsz	wreg,f,c
 14416  0038D4  D7F8               	goto	u13925
 14417  0038D6  0100               	movlb	0	; () banked
 14418  0038D8  51A9               	movf	??_f_sync& (0+255),w,b
 14419  0038DA  6EDF               	movwf	indf2,c
 14420                           
 14421                           ; BSR set to: 0
 14422                           ;tff.c: 1146: *(volatile BYTE*)(&dir[26])=(BYTE)(fp->org_clust); *(volatile BYTE*)((&dir
      +                          [26])+1)=(BYTE)((WORD)(fp->org_clust)>>8);
 14423  0038DC  0100               	movlb	0	; () banked
 14424  0038DE  EE20 F00E          	lfsr	2,14
 14425  0038E2  51A7               	movf	f_sync@fp& (0+255),w,b
 14426  0038E4  26D9               	addwf	fsr2l,f,c
 14427  0038E6  51A8               	movf	(f_sync@fp+1)& (0+255),w,b
 14428  0038E8  22DA               	addwfc	fsr2h,f,c
 14429  0038EA  0E1A               	movlw	26
 14430  0038EC  0100               	movlb	0	; () banked
 14431  0038EE  25B2               	addwf	f_sync@dir& (0+255),w,b
 14432  0038F0  6EE1               	movwf	fsr1l,c
 14433  0038F2  0E00               	movlw	0
 14434  0038F4  0100               	movlb	0	; () banked
 14435  0038F6  21B3               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14436  0038F8  6EE2               	movwf	fsr1h,c
 14437  0038FA  CFDF FFE7          	movff	indf2,indf1
 14438                           
 14439                           ; BSR set to: 0
 14440  0038FE  0E1B               	movlw	27
 14441  003900  0100               	movlb	0	; () banked
 14442  003902  25B2               	addwf	f_sync@dir& (0+255),w,b
 14443  003904  6ED9               	movwf	fsr2l,c
 14444  003906  0E00               	movlw	0
 14445  003908  0100               	movlb	0	; () banked
 14446  00390A  21B3               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14447  00390C  6EDA               	movwf	fsr2h,c
 14448  00390E  0100               	movlb	0	; () banked
 14449  003910  EE10 F00E          	lfsr	1,14
 14450  003914  51A7               	movf	f_sync@fp& (0+255),w,b
 14451  003916  26E1               	addwf	fsr1l,f,c
 14452  003918  51A8               	movf	(f_sync@fp+1)& (0+255),w,b
 14453  00391A  22E2               	addwfc	fsr1h,f,c
 14454  00391C  CFE6 F0A9          	movff	postinc1,??_f_sync
 14455  003920  CFE5 F0AA          	movff	postdec1,??_f_sync+1
 14456  003924  C0AA  F0A9         	movff	??_f_sync+1,??_f_sync
 14457  003928  0100               	movlb	0	; () banked
 14458  00392A  6BAA               	clrf	(??_f_sync+1)& (0+255),b
 14459  00392C  0100               	movlb	0	; () banked
 14460  00392E  51A9               	movf	??_f_sync& (0+255),w,b
 14461  003930  6EDF               	movwf	indf2,c
 14462                           
 14463                           ; BSR set to: 0
 14464                           ;tff.c: 1148: *(volatile BYTE*)(&dir[20])=(BYTE)(fp->org_clust >> 16); *(volatile BYTE*)
      +                          ((&dir[20])+1)=(BYTE)((WORD)(fp->org_clust >> 16)>>8);
 14465  003932  0E14               	movlw	20
 14466  003934  0100               	movlb	0	; () banked
 14467  003936  25B2               	addwf	f_sync@dir& (0+255),w,b
 14468  003938  6ED9               	movwf	fsr2l,c
 14469  00393A  0E00               	movlw	0
 14470  00393C  0100               	movlb	0	; () banked
 14471  00393E  21B3               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14472  003940  6EDA               	movwf	fsr2h,c
 14473  003942  0100               	movlb	0	; () banked
 14474  003944  EE10 F00E          	lfsr	1,14
 14475  003948  51A7               	movf	f_sync@fp& (0+255),w,b
 14476  00394A  26E1               	addwf	fsr1l,f,c
 14477  00394C  51A8               	movf	(f_sync@fp+1)& (0+255),w,b
 14478  00394E  22E2               	addwfc	fsr1h,f,c
 14479  003950  CFE6 F0A9          	movff	postinc1,??_f_sync
 14480  003954  CFE6 F0AA          	movff	postinc1,??_f_sync+1
 14481  003958  CFE6 F0AB          	movff	postinc1,??_f_sync+2
 14482  00395C  CFE6 F0AC          	movff	postinc1,??_f_sync+3
 14483  003960  0E11               	movlw	17
 14484  003962  D006               	goto	u13930
 14485  003964                     u13935:
 14486  003964  0100               	movlb	0	; () banked
 14487  003966  90D8               	bcf	status,0,c
 14488  003968  33AC               	rrcf	(??_f_sync+3)& (0+255),f,b
 14489  00396A  33AB               	rrcf	(??_f_sync+2)& (0+255),f,b
 14490  00396C  33AA               	rrcf	(??_f_sync+1)& (0+255),f,b
 14491  00396E  33A9               	rrcf	??_f_sync& (0+255),f,b
 14492  003970                     u13930:
 14493  003970  2EE8               	decfsz	wreg,f,c
 14494  003972  D7F8               	goto	u13935
 14495  003974  0100               	movlb	0	; () banked
 14496  003976  51A9               	movf	??_f_sync& (0+255),w,b
 14497  003978  6EDF               	movwf	indf2,c
 14498                           
 14499                           ; BSR set to: 0
 14500  00397A  0E15               	movlw	21
 14501  00397C  0100               	movlb	0	; () banked
 14502  00397E  25B2               	addwf	f_sync@dir& (0+255),w,b
 14503  003980  6ED9               	movwf	fsr2l,c
 14504  003982  0E00               	movlw	0
 14505  003984  0100               	movlb	0	; () banked
 14506  003986  21B3               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14507  003988  6EDA               	movwf	fsr2h,c
 14508  00398A  0100               	movlb	0	; () banked
 14509  00398C  EE10 F00E          	lfsr	1,14
 14510  003990  51A7               	movf	f_sync@fp& (0+255),w,b
 14511  003992  26E1               	addwf	fsr1l,f,c
 14512  003994  51A8               	movf	(f_sync@fp+1)& (0+255),w,b
 14513  003996  22E2               	addwfc	fsr1h,f,c
 14514  003998  CFE6 F0A9          	movff	postinc1,??_f_sync
 14515  00399C  CFE6 F0AA          	movff	postinc1,??_f_sync+1
 14516  0039A0  CFE6 F0AB          	movff	postinc1,??_f_sync+2
 14517  0039A4  CFE6 F0AC          	movff	postinc1,??_f_sync+3
 14518  0039A8  0E11               	movlw	17
 14519  0039AA  D006               	goto	u13940
 14520  0039AC                     u13945:
 14521  0039AC  0100               	movlb	0	; () banked
 14522  0039AE  90D8               	bcf	status,0,c
 14523  0039B0  33AC               	rrcf	(??_f_sync+3)& (0+255),f,b
 14524  0039B2  33AB               	rrcf	(??_f_sync+2)& (0+255),f,b
 14525  0039B4  33AA               	rrcf	(??_f_sync+1)& (0+255),f,b
 14526  0039B6  33A9               	rrcf	??_f_sync& (0+255),f,b
 14527  0039B8                     u13940:
 14528  0039B8  2EE8               	decfsz	wreg,f,c
 14529  0039BA  D7F8               	goto	u13945
 14530  0039BC  C0AA  F0A9         	movff	??_f_sync+1,??_f_sync
 14531  0039C0  0100               	movlb	0	; () banked
 14532  0039C2  6BAA               	clrf	(??_f_sync+1)& (0+255),b
 14533  0039C4  0100               	movlb	0	; () banked
 14534  0039C6  51A9               	movf	??_f_sync& (0+255),w,b
 14535  0039C8  6EDF               	movwf	indf2,c
 14536                           
 14537                           ; BSR set to: 0
 14538                           ;tff.c: 1150: tim = get_fattime();
 14539  0039CA  EC15  F021         	call	_get_fattime	;wreg free
 14540  0039CE  C016  F0AE         	movff	?_get_fattime,f_sync@tim
 14541  0039D2  C017  F0AF         	movff	?_get_fattime+1,f_sync@tim+1
 14542  0039D6  C018  F0B0         	movff	?_get_fattime+2,f_sync@tim+2
 14543  0039DA  C019  F0B1         	movff	?_get_fattime+3,f_sync@tim+3
 14544                           
 14545                           ;tff.c: 1151: *(volatile BYTE*)(&dir[22])=(BYTE)(tim); *(volatile BYTE*)((&dir[22])+1)=(
      +                          BYTE)((WORD)(tim)>>8); *(volatile BYTE*)((&dir[22])+2)=(BYTE)((DWORD)(tim)>>16); *(volat
      +                          ile BYTE*)((&dir[22])+3)=(BYTE)((DWORD)(tim)>>24);
 14546  0039DE  0E16               	movlw	22
 14547  0039E0  0100               	movlb	0	; () banked
 14548  0039E2  25B2               	addwf	f_sync@dir& (0+255),w,b
 14549  0039E4  6ED9               	movwf	fsr2l,c
 14550  0039E6  0E00               	movlw	0
 14551  0039E8  0100               	movlb	0	; () banked
 14552  0039EA  21B3               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14553  0039EC  6EDA               	movwf	fsr2h,c
 14554  0039EE  C0AE  FFDF         	movff	f_sync@tim,indf2
 14555                           
 14556                           ; BSR set to: 0
 14557  0039F2  0E17               	movlw	23
 14558  0039F4  0100               	movlb	0	; () banked
 14559  0039F6  25B2               	addwf	f_sync@dir& (0+255),w,b
 14560  0039F8  6ED9               	movwf	fsr2l,c
 14561  0039FA  0E00               	movlw	0
 14562  0039FC  0100               	movlb	0	; () banked
 14563  0039FE  21B3               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14564  003A00  6EDA               	movwf	fsr2h,c
 14565  003A02  0100               	movlb	0	; () banked
 14566  003A04  51AF               	movf	(f_sync@tim+1)& (0+255),w,b
 14567  003A06  6EDF               	movwf	indf2,c
 14568                           
 14569                           ; BSR set to: 0
 14570  003A08  0E18               	movlw	24
 14571  003A0A  0100               	movlb	0	; () banked
 14572  003A0C  25B2               	addwf	f_sync@dir& (0+255),w,b
 14573  003A0E  6ED9               	movwf	fsr2l,c
 14574  003A10  0E00               	movlw	0
 14575  003A12  0100               	movlb	0	; () banked
 14576  003A14  21B3               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14577  003A16  6EDA               	movwf	fsr2h,c
 14578  003A18  C0B0  FFDF         	movff	f_sync@tim+2,indf2
 14579                           
 14580                           ; BSR set to: 0
 14581  003A1C  0E19               	movlw	25
 14582  003A1E  0100               	movlb	0	; () banked
 14583  003A20  25B2               	addwf	f_sync@dir& (0+255),w,b
 14584  003A22  6ED9               	movwf	fsr2l,c
 14585  003A24  0E00               	movlw	0
 14586  003A26  0100               	movlb	0	; () banked
 14587  003A28  21B3               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14588  003A2A  6EDA               	movwf	fsr2h,c
 14589  003A2C  C0B1  FFDF         	movff	f_sync@tim+3,indf2
 14590                           
 14591                           ; BSR set to: 0
 14592                           ;tff.c: 1152: fp->flag &= (BYTE)~0x20;
 14593  003A30  0100               	movlb	0	; () banked
 14594  003A32  EE20 F002          	lfsr	2,2
 14595  003A36  51A7               	movf	f_sync@fp& (0+255),w,b
 14596  003A38  26D9               	addwf	fsr2l,f,c
 14597  003A3A  51A8               	movf	(f_sync@fp+1)& (0+255),w,b
 14598  003A3C  22DA               	addwfc	fsr2h,f,c
 14599  003A3E  0EDF               	movlw	223
 14600  003A40  16DF               	andwf	indf2,f,c
 14601                           
 14602                           ; BSR set to: 0
 14603                           ;tff.c: 1153: res = sync();
 14604  003A42  EC97  F028         	call	_sync	;wreg free
 14605  003A46  0100               	movlb	0	; () banked
 14606  003A48  6FAD               	movwf	f_sync@res& (0+255),b
 14607  003A4A                     l12453:
 14608                           
 14609                           ; BSR set to: 0
 14610                           ;tff.c: 1154: }
 14611                           ;tff.c: 1155: }
 14612                           ;tff.c: 1156: return res;
 14613  003A4A  0100               	movlb	0	; () banked
 14614  003A4C  51AD               	movf	f_sync@res& (0+255),w,b
 14615  003A4E  0012               	return	
 14616  003A50                     __end_of_f_sync:
 14617                           	opt stack 0
 14618                           tosu	equ	0xFFF
 14619                           tosh	equ	0xFFE
 14620                           tosl	equ	0xFFD
 14621                           pclath	equ	0xFFA
 14622                           tblptru	equ	0xFF8
 14623                           tblptrh	equ	0xFF7
 14624                           tblptrl	equ	0xFF6
 14625                           tablat	equ	0xFF5
 14626                           prodh	equ	0xFF4
 14627                           prodl	equ	0xFF3
 14628                           intcon	equ	0xFF2
 14629                           intcon2	equ	0xFF1
 14630                           intcon3	equ	0xFF0
 14631                           indf0	equ	0xFEF
 14632                           postinc0	equ	0xFEE
 14633                           fsr0h	equ	0xFEA
 14634                           fsr0l	equ	0xFE9
 14635                           wreg	equ	0xFE8
 14636                           indf1	equ	0xFE7
 14637                           postinc1	equ	0xFE6
 14638                           postdec1	equ	0xFE5
 14639                           fsr1h	equ	0xFE2
 14640                           fsr1l	equ	0xFE1
 14641                           indf2	equ	0xFDF
 14642                           postinc2	equ	0xFDE
 14643                           postdec2	equ	0xFDD
 14644                           plusw2	equ	0xFDB
 14645                           fsr2h	equ	0xFDA
 14646                           fsr2l	equ	0xFD9
 14647                           status	equ	0xFD8
 14648                           
 14649 ;; *************** function _validate *****************
 14650 ;; Defined at:
 14651 ;;		line 823 in file "bibliotecas/tff.c"
 14652 ;; Parameters:    Size  Location     Type
 14653 ;;  fs              2   28[COMRAM] PTR const struct _FATFS
 14654 ;;		 -> fs(552), NULL(0), 
 14655 ;;  id              2   30[COMRAM] unsigned short 
 14656 ;; Auto vars:     Size  Location     Type
 14657 ;;		None
 14658 ;; Return value:  Size  Location     Type
 14659 ;;                  1    wreg      enum E155
 14660 ;; Registers used:
 14661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14662 ;; Tracked objects:
 14663 ;;		On entry : 0/0
 14664 ;;		On exit  : 0/0
 14665 ;;		Unchanged: 0/0
 14666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14667 ;;      Params:         4       0       0       0       0       0       0       0       0
 14668 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14669 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14670 ;;      Totals:         6       0       0       0       0       0       0       0       0
 14671 ;;Total ram usage:        6 bytes
 14672 ;; Hardware stack levels used:    1
 14673 ;; Hardware stack levels required when called:    4
 14674 ;; This function calls:
 14675 ;;		_disk_status
 14676 ;; This function is called by:
 14677 ;;		_f_sync
 14678 ;;		_f_read
 14679 ;;		_f_write
 14680 ;;		_f_lseek
 14681 ;;		_f_readdir
 14682 ;;		_f_truncate
 14683 ;; This function uses a non-reentrant model
 14684 ;;
 14685                           
 14686                           	psect	text38
 14687  00531C                     __ptext38:
 14688                           	opt stack 0
 14689  00531C                     _validate:
 14690                           	opt stack 22
 14691                           
 14692                           ;tff.c: 828: if (!fs || !fs->fs_type || fs->id != id)
 14693                           
 14694                           ;incstack = 0
 14695  00531C  501D               	movf	validate@fs,w,c
 14696  00531E  101E               	iorwf	validate@fs+1,w,c
 14697  005320  B4D8               	btfsc	status,2,c
 14698  005322  D014               	goto	l12021
 14699  005324  EE20 F024          	lfsr	2,36
 14700  005328  501D               	movf	validate@fs,w,c
 14701  00532A  26D9               	addwf	fsr2l,f,c
 14702  00532C  501E               	movf	validate@fs+1,w,c
 14703  00532E  22DA               	addwfc	fsr2h,f,c
 14704  005330  50DF               	movf	indf2,w,c
 14705  005332  B4D8               	btfsc	status,2,c
 14706  005334  D00B               	goto	l12021
 14707  005336  C01D  FFD9         	movff	validate@fs,fsr2l
 14708  00533A  C01E  FFDA         	movff	validate@fs+1,fsr2h
 14709  00533E  501F               	movf	validate@id,w,c
 14710  005340  18DE               	xorwf	postinc2,w,c
 14711  005342  E104               	bnz	l12021
 14712  005344  5020               	movf	validate@id+1,w,c
 14713  005346  18DE               	xorwf	postinc2,w,c
 14714  005348  B4D8               	btfsc	status,2,c
 14715  00534A  D002               	goto	l12025
 14716  00534C                     l12021:
 14717                           
 14718                           ;tff.c: 829: return FR_INVALID_OBJECT;
 14719  00534C  0E0C               	movlw	12
 14720  00534E  0012               	return	
 14721  005350                     l12025:
 14722                           
 14723                           ;tff.c: 830: if (disk_status(0) & 0x01)
 14724  005350  0E00               	movlw	0
 14725  005352  EC58  F02A         	call	_disk_status
 14726  005356  6E21               	movwf	??_validate& (0+255),c
 14727  005358  A021               	btfss	??_validate,0,c
 14728  00535A  D002               	goto	l12031
 14729                           
 14730                           ;tff.c: 831: return FR_NOT_READY;
 14731  00535C  0E01               	movlw	1
 14732  00535E  0012               	return	
 14733  005360                     l12031:
 14734                           
 14735                           ;tff.c: 833: return FR_OK;
 14736  005360  0E00               	movlw	0
 14737  005362  0012               	return	
 14738  005364                     __end_of_validate:
 14739                           	opt stack 0
 14740                           tosu	equ	0xFFF
 14741                           tosh	equ	0xFFE
 14742                           tosl	equ	0xFFD
 14743                           pclath	equ	0xFFA
 14744                           tblptru	equ	0xFF8
 14745                           tblptrh	equ	0xFF7
 14746                           tblptrl	equ	0xFF6
 14747                           tablat	equ	0xFF5
 14748                           prodh	equ	0xFF4
 14749                           prodl	equ	0xFF3
 14750                           intcon	equ	0xFF2
 14751                           intcon2	equ	0xFF1
 14752                           intcon3	equ	0xFF0
 14753                           indf0	equ	0xFEF
 14754                           postinc0	equ	0xFEE
 14755                           fsr0h	equ	0xFEA
 14756                           fsr0l	equ	0xFE9
 14757                           wreg	equ	0xFE8
 14758                           indf1	equ	0xFE7
 14759                           postinc1	equ	0xFE6
 14760                           postdec1	equ	0xFE5
 14761                           fsr1h	equ	0xFE2
 14762                           fsr1l	equ	0xFE1
 14763                           indf2	equ	0xFDF
 14764                           postinc2	equ	0xFDE
 14765                           postdec2	equ	0xFDD
 14766                           plusw2	equ	0xFDB
 14767                           fsr2h	equ	0xFDA
 14768                           fsr2l	equ	0xFD9
 14769                           status	equ	0xFD8
 14770                           
 14771 ;; *************** function _disk_status *****************
 14772 ;; Defined at:
 14773 ;;		line 72 in file "bibliotecas/diskio.c"
 14774 ;; Parameters:    Size  Location     Type
 14775 ;;  pdrv            1    wreg     unsigned char 
 14776 ;; Auto vars:     Size  Location     Type
 14777 ;;  pdrv            1   26[COMRAM] unsigned char 
 14778 ;;  result          2   24[COMRAM] int 
 14779 ;;  stat            1   27[COMRAM] unsigned char 
 14780 ;; Return value:  Size  Location     Type
 14781 ;;                  1    wreg      unsigned char 
 14782 ;; Registers used:
 14783 ;;		wreg, status,2, status,0, cstack
 14784 ;; Tracked objects:
 14785 ;;		On entry : 0/0
 14786 ;;		On exit  : 0/0
 14787 ;;		Unchanged: 0/0
 14788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14789 ;;      Params:         0       0       0       0       0       0       0       0       0
 14790 ;;      Locals:         4       0       0       0       0       0       0       0       0
 14791 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14792 ;;      Totals:         5       0       0       0       0       0       0       0       0
 14793 ;;Total ram usage:        5 bytes
 14794 ;; Hardware stack levels used:    1
 14795 ;; Hardware stack levels required when called:    3
 14796 ;; This function calls:
 14797 ;;		_sdc_disk_status
 14798 ;; This function is called by:
 14799 ;;		_validate
 14800 ;; This function uses a non-reentrant model
 14801 ;;
 14802                           
 14803                           	psect	text39
 14804  0054B0                     __ptext39:
 14805                           	opt stack 0
 14806  0054B0                     _disk_status:
 14807                           	opt stack 22
 14808                           
 14809                           ;incstack = 0
 14810                           ;disk_status@pdrv stored from wreg
 14811  0054B0  6E1B               	movwf	disk_status@pdrv,c
 14812                           
 14813                           ;diskio.c: 76: DSTATUS stat;
 14814                           ;diskio.c: 77: int result;
 14815                           ;diskio.c: 79: switch (pdrv) {
 14816  0054B2  D011               	goto	l11275
 14817  0054B4                     l11257:
 14818                           
 14819                           ;diskio.c: 81: stat = sdc_disk_status(pdrv);
 14820  0054B4  501B               	movf	disk_status@pdrv,w,c
 14821  0054B6  EC84  F02B         	call	_sdc_disk_status
 14822  0054BA  6E1C               	movwf	disk_status@stat,c
 14823                           
 14824                           ;diskio.c: 85: return stat;
 14825  0054BC  501C               	movf	disk_status@stat,w,c
 14826  0054BE  0012               	return	
 14827  0054C0                     l11263:
 14828                           
 14829                           ;diskio.c: 88: result = sdc_disk_status(pdrv);
 14830  0054C0  501B               	movf	disk_status@pdrv,w,c
 14831  0054C2  EC84  F02B         	call	_sdc_disk_status
 14832  0054C6  6E18               	movwf	??_disk_status& (0+255),c
 14833  0054C8  5018               	movf	??_disk_status,w,c
 14834  0054CA  6E19               	movwf	disk_status@result,c
 14835  0054CC  6A1A               	clrf	disk_status@result+1,c
 14836                           
 14837                           ;diskio.c: 92: return stat;
 14838  0054CE  501C               	movf	disk_status@stat,w,c
 14839  0054D0  0012               	return	
 14840  0054D2                     l11269:
 14841                           
 14842                           ;diskio.c: 99: return stat;
 14843  0054D2  501C               	movf	disk_status@stat,w,c
 14844  0054D4  0012               	return	
 14845  0054D6                     l11275:
 14846  0054D6  501B               	movf	disk_status@pdrv,w,c
 14847                           
 14848                           ; Switch size 1, requested type "space"
 14849                           ; Number of cases is 3, Range of values is 0 to 2
 14850                           ; switch strategies available:
 14851                           ; Name         Instructions Cycles
 14852                           ; simple_byte           10     6 (average)
 14853                           ;	Chosen strategy is simple_byte
 14854  0054D8  0A00               	xorlw	0	; case 0
 14855  0054DA  B4D8               	btfsc	status,2,c
 14856  0054DC  D7F1               	goto	l11263
 14857  0054DE  0A01               	xorlw	1	; case 1
 14858  0054E0  B4D8               	btfsc	status,2,c
 14859  0054E2  D7E8               	goto	l11257
 14860  0054E4  0A03               	xorlw	3	; case 2
 14861  0054E6  B4D8               	btfsc	status,2,c
 14862  0054E8  D7F4               	goto	l11269
 14863                           
 14864                           ;diskio.c: 101: return 0x01;
 14865  0054EA  0E01               	movlw	1
 14866  0054EC  0012               	return	
 14867  0054EE                     __end_of_disk_status:
 14868                           	opt stack 0
 14869                           tosu	equ	0xFFF
 14870                           tosh	equ	0xFFE
 14871                           tosl	equ	0xFFD
 14872                           pclath	equ	0xFFA
 14873                           tblptru	equ	0xFF8
 14874                           tblptrh	equ	0xFF7
 14875                           tblptrl	equ	0xFF6
 14876                           tablat	equ	0xFF5
 14877                           prodh	equ	0xFF4
 14878                           prodl	equ	0xFF3
 14879                           intcon	equ	0xFF2
 14880                           intcon2	equ	0xFF1
 14881                           intcon3	equ	0xFF0
 14882                           indf0	equ	0xFEF
 14883                           postinc0	equ	0xFEE
 14884                           fsr0h	equ	0xFEA
 14885                           fsr0l	equ	0xFE9
 14886                           wreg	equ	0xFE8
 14887                           indf1	equ	0xFE7
 14888                           postinc1	equ	0xFE6
 14889                           postdec1	equ	0xFE5
 14890                           fsr1h	equ	0xFE2
 14891                           fsr1l	equ	0xFE1
 14892                           indf2	equ	0xFDF
 14893                           postinc2	equ	0xFDE
 14894                           postdec2	equ	0xFDD
 14895                           plusw2	equ	0xFDB
 14896                           fsr2h	equ	0xFDA
 14897                           fsr2l	equ	0xFD9
 14898                           status	equ	0xFD8
 14899                           
 14900 ;; *************** function _sdc_disk_status *****************
 14901 ;; Defined at:
 14902 ;;		line 747 in file "bibliotecas/diskio.c"
 14903 ;; Parameters:    Size  Location     Type
 14904 ;;  pdrv            1    wreg     unsigned char 
 14905 ;; Auto vars:     Size  Location     Type
 14906 ;;  pdrv            1   22[COMRAM] unsigned char 
 14907 ;;  stat            1   21[COMRAM] unsigned char 
 14908 ;;  cont            1    0        unsigned char 
 14909 ;;  buff            1    0        unsigned char 
 14910 ;; Return value:  Size  Location     Type
 14911 ;;                  1    wreg      unsigned char 
 14912 ;; Registers used:
 14913 ;;		wreg, status,2
 14914 ;; Tracked objects:
 14915 ;;		On entry : 0/0
 14916 ;;		On exit  : 0/0
 14917 ;;		Unchanged: 0/0
 14918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14919 ;;      Params:         0       0       0       0       0       0       0       0       0
 14920 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14921 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14922 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14923 ;;Total ram usage:        2 bytes
 14924 ;; Hardware stack levels used:    1
 14925 ;; Hardware stack levels required when called:    2
 14926 ;; This function calls:
 14927 ;;		Nothing
 14928 ;; This function is called by:
 14929 ;;		_disk_status
 14930 ;; This function uses a non-reentrant model
 14931 ;;
 14932                           
 14933                           	psect	text40
 14934  005708                     __ptext40:
 14935                           	opt stack 0
 14936  005708                     _sdc_disk_status:
 14937                           	opt stack 22
 14938                           
 14939                           ;incstack = 0
 14940                           ;sdc_disk_status@pdrv stored from wreg
 14941  005708  6E17               	movwf	sdc_disk_status@pdrv,c
 14942                           
 14943                           ;diskio.c: 749: DSTATUS stat = 0;
 14944  00570A  0E00               	movlw	0
 14945  00570C  6E16               	movwf	sdc_disk_status@stat,c
 14946                           
 14947                           ;diskio.c: 750: unsigned char buff, cont;
 14948                           ;diskio.c: 752: if (pdrv != 0) return 0x01;
 14949  00570E  5017               	movf	sdc_disk_status@pdrv,w,c
 14950  005710  B4D8               	btfsc	status,2,c
 14951  005712  D002               	goto	l11183
 14952  005714  0E01               	movlw	1
 14953  005716  0012               	return	
 14954  005718                     l11183:
 14955                           
 14956                           ;diskio.c: 754: return FR_OK;
 14957  005718  0E00               	movlw	0
 14958  00571A  0012               	return	
 14959  00571C                     __end_of_sdc_disk_status:
 14960                           	opt stack 0
 14961                           tosu	equ	0xFFF
 14962                           tosh	equ	0xFFE
 14963                           tosl	equ	0xFFD
 14964                           pclath	equ	0xFFA
 14965                           tblptru	equ	0xFF8
 14966                           tblptrh	equ	0xFF7
 14967                           tblptrl	equ	0xFF6
 14968                           tablat	equ	0xFF5
 14969                           prodh	equ	0xFF4
 14970                           prodl	equ	0xFF3
 14971                           intcon	equ	0xFF2
 14972                           intcon2	equ	0xFF1
 14973                           intcon3	equ	0xFF0
 14974                           indf0	equ	0xFEF
 14975                           postinc0	equ	0xFEE
 14976                           fsr0h	equ	0xFEA
 14977                           fsr0l	equ	0xFE9
 14978                           wreg	equ	0xFE8
 14979                           indf1	equ	0xFE7
 14980                           postinc1	equ	0xFE6
 14981                           postdec1	equ	0xFE5
 14982                           fsr1h	equ	0xFE2
 14983                           fsr1l	equ	0xFE1
 14984                           indf2	equ	0xFDF
 14985                           postinc2	equ	0xFDE
 14986                           postdec2	equ	0xFDD
 14987                           plusw2	equ	0xFDB
 14988                           fsr2h	equ	0xFDA
 14989                           fsr2l	equ	0xFD9
 14990                           status	equ	0xFD8
 14991                           
 14992 ;; *************** function _sync *****************
 14993 ;; Defined at:
 14994 ;;		line 118 in file "bibliotecas/tff.c"
 14995 ;; Parameters:    Size  Location     Type
 14996 ;;		None
 14997 ;; Auto vars:     Size  Location     Type
 14998 ;;  fs              2   69[BANK0 ] PTR struct _FATFS
 14999 ;;		 -> fs(552), NULL(0), 
 15000 ;; Return value:  Size  Location     Type
 15001 ;;                  1    wreg      enum E155
 15002 ;; Registers used:
 15003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15004 ;; Tracked objects:
 15005 ;;		On entry : 0/0
 15006 ;;		On exit  : 0/0
 15007 ;;		Unchanged: 0/0
 15008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15009 ;;      Params:         0       0       0       0       0       0       0       0       0
 15010 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15011 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15012 ;;      Totals:         0       2       0       0       0       0       0       0       0
 15013 ;;Total ram usage:        2 bytes
 15014 ;; Hardware stack levels used:    1
 15015 ;; Hardware stack levels required when called:   11
 15016 ;; This function calls:
 15017 ;;		_disk_ioctl
 15018 ;;		_move_window
 15019 ;; This function is called by:
 15020 ;;		_f_sync
 15021 ;;		_f_unlink
 15022 ;;		_f_mkdir
 15023 ;;		_f_chmod
 15024 ;;		_f_utime
 15025 ;;		_f_rename
 15026 ;; This function uses a non-reentrant model
 15027 ;;
 15028                           
 15029                           	psect	text41
 15030  00512E                     __ptext41:
 15031                           	opt stack 0
 15032  00512E                     _sync:
 15033                           	opt stack 15
 15034                           
 15035                           ;tff.c: 120: FATFS *fs = FatFs;
 15036                           
 15037                           ;incstack = 0
 15038  00512E  C035  F0A5         	movff	_FatFs,sync@fs
 15039  005132  C036  F0A6         	movff	_FatFs+1,sync@fs+1
 15040                           
 15041                           ;tff.c: 123: fs->winflag = 1;
 15042  005136  0100               	movlb	0	; () banked
 15043  005138  EE20 F027          	lfsr	2,39
 15044  00513C  51A5               	movf	sync@fs& (0+255),w,b
 15045  00513E  26D9               	addwf	fsr2l,f,c
 15046  005140  51A6               	movf	(sync@fs+1)& (0+255),w,b
 15047  005142  22DA               	addwfc	fsr2h,f,c
 15048  005144  0E01               	movlw	1
 15049  005146  6EDF               	movwf	indf2,c
 15050                           
 15051                           ; BSR set to: 0
 15052                           ;tff.c: 124: if (!move_window(0)) return FR_RW_ERROR;
 15053  005148  0E00               	movlw	0
 15054  00514A  0100               	movlb	0	; () banked
 15055  00514C  6F8E               	movwf	move_window@sector& (0+255),b
 15056  00514E  0E00               	movlw	0
 15057  005150  6F8F               	movwf	(move_window@sector+1)& (0+255),b
 15058  005152  0E00               	movlw	0
 15059  005154  6F90               	movwf	(move_window@sector+2)& (0+255),b
 15060  005156  0E00               	movlw	0
 15061  005158  6F91               	movwf	(move_window@sector+3)& (0+255),b
 15062  00515A  EC28  F01D         	call	_move_window	;wreg free
 15063  00515E  0900               	iorlw	0
 15064  005160  A4D8               	btfss	status,2,c
 15065  005162  D002               	goto	l11665
 15066  005164  0E08               	movlw	8
 15067  005166  0012               	return	
 15068  005168                     l11665:
 15069                           
 15070                           ;tff.c: 140: if (disk_ioctl(0, 0, (0)) != RES_OK)
 15071  005168  0E00               	movlw	0
 15072  00516A  6E16               	movwf	disk_ioctl@cmd,c
 15073  00516C  0E00               	movlw	0
 15074  00516E  6E17               	movwf	disk_ioctl@buff,c
 15075  005170  0E00               	movlw	0
 15076  005172  6E18               	movwf	disk_ioctl@buff+1,c
 15077  005174  0E00               	movlw	0
 15078  005176  EC18  F02B         	call	_disk_ioctl
 15079  00517A  0900               	iorlw	0
 15080  00517C  B4D8               	btfsc	status,2,c
 15081  00517E  D002               	goto	l11671
 15082                           
 15083                           ;tff.c: 141: return FR_RW_ERROR;
 15084  005180  0E08               	movlw	8
 15085  005182  0012               	return	
 15086  005184                     l11671:
 15087                           
 15088                           ;tff.c: 142: return FR_OK;
 15089  005184  0E00               	movlw	0
 15090  005186  0012               	return	
 15091  005188                     __end_of_sync:
 15092                           	opt stack 0
 15093                           tosu	equ	0xFFF
 15094                           tosh	equ	0xFFE
 15095                           tosl	equ	0xFFD
 15096                           pclath	equ	0xFFA
 15097                           tblptru	equ	0xFF8
 15098                           tblptrh	equ	0xFF7
 15099                           tblptrl	equ	0xFF6
 15100                           tablat	equ	0xFF5
 15101                           prodh	equ	0xFF4
 15102                           prodl	equ	0xFF3
 15103                           intcon	equ	0xFF2
 15104                           intcon2	equ	0xFF1
 15105                           intcon3	equ	0xFF0
 15106                           indf0	equ	0xFEF
 15107                           postinc0	equ	0xFEE
 15108                           fsr0h	equ	0xFEA
 15109                           fsr0l	equ	0xFE9
 15110                           wreg	equ	0xFE8
 15111                           indf1	equ	0xFE7
 15112                           postinc1	equ	0xFE6
 15113                           postdec1	equ	0xFE5
 15114                           fsr1h	equ	0xFE2
 15115                           fsr1l	equ	0xFE1
 15116                           indf2	equ	0xFDF
 15117                           postinc2	equ	0xFDE
 15118                           postdec2	equ	0xFDD
 15119                           plusw2	equ	0xFDB
 15120                           fsr2h	equ	0xFDA
 15121                           fsr2l	equ	0xFD9
 15122                           status	equ	0xFD8
 15123                           
 15124 ;; *************** function _move_window *****************
 15125 ;; Defined at:
 15126 ;;		line 76 in file "bibliotecas/tff.c"
 15127 ;; Parameters:    Size  Location     Type
 15128 ;;  sector          4   46[BANK0 ] unsigned long 
 15129 ;; Auto vars:     Size  Location     Type
 15130 ;;  n               1   62[BANK0 ] unsigned char 
 15131 ;;  wsect           4   63[BANK0 ] unsigned long 
 15132 ;;  fs              2   67[BANK0 ] PTR struct _FATFS
 15133 ;;		 -> fs(552), NULL(0), 
 15134 ;; Return value:  Size  Location     Type
 15135 ;;                  1    wreg      enum E105
 15136 ;; Registers used:
 15137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15138 ;; Tracked objects:
 15139 ;;		On entry : 0/0
 15140 ;;		On exit  : 0/0
 15141 ;;		Unchanged: 0/0
 15142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15143 ;;      Params:         0       4       0       0       0       0       0       0       0
 15144 ;;      Locals:         0       7       0       0       0       0       0       0       0
 15145 ;;      Temps:          0      12       0       0       0       0       0       0       0
 15146 ;;      Totals:         0      23       0       0       0       0       0       0       0
 15147 ;;Total ram usage:       23 bytes
 15148 ;; Hardware stack levels used:    1
 15149 ;; Hardware stack levels required when called:   10
 15150 ;; This function calls:
 15151 ;;		_disk_read
 15152 ;;		_disk_write
 15153 ;; This function is called by:
 15154 ;;		_sync
 15155 ;;		_get_cluster
 15156 ;;		_put_cluster
 15157 ;;		_trace_path
 15158 ;;		_reserve_direntry
 15159 ;;		_f_open
 15160 ;;		_f_sync
 15161 ;;		_f_read
 15162 ;;		_f_write
 15163 ;;		_f_readdir
 15164 ;;		_f_getfree
 15165 ;;		_f_unlink
 15166 ;;		_f_mkdir
 15167 ;;		_f_rename
 15168 ;; This function uses a non-reentrant model
 15169 ;;
 15170                           
 15171                           	psect	text42
 15172  003A50                     __ptext42:
 15173                           	opt stack 0
 15174  003A50                     _move_window:
 15175                           	opt stack 14
 15176                           
 15177                           ;tff.c: 80: DWORD wsect;
 15178                           ;tff.c: 81: FATFS *fs = FatFs;
 15179                           
 15180                           ;incstack = 0
 15181  003A50  C035  F0A3         	movff	_FatFs,move_window@fs
 15182  003A54  C036  F0A4         	movff	_FatFs+1,move_window@fs+1
 15183                           
 15184                           ;tff.c: 84: wsect = fs->winsect;
 15185  003A58  0100               	movlb	0	; () banked
 15186  003A5A  EE20 F004          	lfsr	2,4
 15187  003A5E  51A3               	movf	move_window@fs& (0+255),w,b
 15188  003A60  26D9               	addwf	fsr2l,f,c
 15189  003A62  51A4               	movf	(move_window@fs+1)& (0+255),w,b
 15190  003A64  22DA               	addwfc	fsr2h,f,c
 15191  003A66  CFDE F09F          	movff	postinc2,move_window@wsect
 15192  003A6A  CFDE F0A0          	movff	postinc2,move_window@wsect+1
 15193  003A6E  CFDE F0A1          	movff	postinc2,move_window@wsect+2
 15194  003A72  CFDE F0A2          	movff	postinc2,move_window@wsect+3
 15195                           
 15196                           ; BSR set to: 0
 15197                           ;tff.c: 85: if (wsect != sector) {
 15198  003A76  0100               	movlb	0	; () banked
 15199  003A78  518E               	movf	move_window@sector& (0+255),w,b
 15200  003A7A  0100               	movlb	0	; () banked
 15201  003A7C  199F               	xorwf	move_window@wsect& (0+255),w,b
 15202  003A7E  E110               	bnz	u12120
 15203  003A80  0100               	movlb	0	; () banked
 15204  003A82  518F               	movf	(move_window@sector+1)& (0+255),w,b
 15205  003A84  0100               	movlb	0	; () banked
 15206  003A86  19A0               	xorwf	(move_window@wsect+1)& (0+255),w,b
 15207  003A88  E10B               	bnz	u12120
 15208  003A8A  0100               	movlb	0	; () banked
 15209  003A8C  5190               	movf	(move_window@sector+2)& (0+255),w,b
 15210  003A8E  0100               	movlb	0	; () banked
 15211  003A90  19A1               	xorwf	(move_window@wsect+2)& (0+255),w,b
 15212  003A92  E106               	bnz	u12120
 15213  003A94  0100               	movlb	0	; () banked
 15214  003A96  5191               	movf	(move_window@sector+3)& (0+255),w,b
 15215  003A98  0100               	movlb	0	; () banked
 15216  003A9A  19A2               	xorwf	(move_window@wsect+3)& (0+255),w,b
 15217  003A9C  B4D8               	btfsc	status,2,c
 15218  003A9E  D0EB               	goto	l11227
 15219  003AA0                     u12120:
 15220                           
 15221                           ; BSR set to: 0
 15222                           ;tff.c: 87: BYTE n;
 15223                           ;tff.c: 88: if (fs->winflag) {
 15224  003AA0  0100               	movlb	0	; () banked
 15225  003AA2  EE20 F027          	lfsr	2,39
 15226  003AA6  51A3               	movf	move_window@fs& (0+255),w,b
 15227  003AA8  26D9               	addwf	fsr2l,f,c
 15228  003AAA  51A4               	movf	(move_window@fs+1)& (0+255),w,b
 15229  003AAC  22DA               	addwfc	fsr2h,f,c
 15230  003AAE  50DF               	movf	indf2,w,c
 15231  003AB0  B4D8               	btfsc	status,2,c
 15232  003AB2  D0AB               	goto	l11217
 15233                           
 15234                           ; BSR set to: 0
 15235                           ;tff.c: 89: if (disk_write(0, fs->win, wsect, 1) != RES_OK)
 15236  003AB4  0E28               	movlw	40
 15237  003AB6  0100               	movlb	0	; () banked
 15238  003AB8  25A3               	addwf	move_window@fs& (0+255),w,b
 15239  003ABA  0100               	movlb	0	; () banked
 15240  003ABC  6F7F               	movwf	disk_write@buff& (0+255),b
 15241  003ABE  0E00               	movlw	0
 15242  003AC0  0100               	movlb	0	; () banked
 15243  003AC2  21A4               	addwfc	(move_window@fs+1)& (0+255),w,b
 15244  003AC4  0100               	movlb	0	; () banked
 15245  003AC6  6F80               	movwf	(disk_write@buff+1)& (0+255),b
 15246  003AC8  C09F  F081         	movff	move_window@wsect,disk_write@sector
 15247  003ACC  C0A0  F082         	movff	move_window@wsect+1,disk_write@sector+1
 15248  003AD0  C0A1  F083         	movff	move_window@wsect+2,disk_write@sector+2
 15249  003AD4  C0A2  F084         	movff	move_window@wsect+3,disk_write@sector+3
 15250  003AD8  0E01               	movlw	1
 15251  003ADA  0100               	movlb	0	; () banked
 15252  003ADC  6F85               	movwf	disk_write@count& (0+255),b
 15253  003ADE  0E00               	movlw	0
 15254  003AE0  EC83  F026         	call	_disk_write
 15255  003AE4  0900               	iorlw	0
 15256  003AE6  B4D8               	btfsc	status,2,c
 15257  003AE8  D002               	goto	l11201
 15258                           
 15259                           ;tff.c: 90: return FALSE;
 15260  003AEA  0E00               	movlw	0
 15261  003AEC  0012               	return	
 15262  003AEE                     l11201:
 15263                           
 15264                           ;tff.c: 91: fs->winflag = 0;
 15265  003AEE  0100               	movlb	0	; () banked
 15266  003AF0  EE20 F027          	lfsr	2,39
 15267  003AF4  51A3               	movf	move_window@fs& (0+255),w,b
 15268  003AF6  26D9               	addwf	fsr2l,f,c
 15269  003AF8  51A4               	movf	(move_window@fs+1)& (0+255),w,b
 15270  003AFA  22DA               	addwfc	fsr2h,f,c
 15271  003AFC  0E00               	movlw	0
 15272  003AFE  6EDF               	movwf	indf2,c
 15273                           
 15274                           ;tff.c: 92: if (wsect < (fs->fatbase + fs->sects_fat)) {
 15275  003B00  0100               	movlb	0	; () banked
 15276  003B02  EE20 F014          	lfsr	2,20
 15277  003B06  51A3               	movf	move_window@fs& (0+255),w,b
 15278  003B08  26D9               	addwf	fsr2l,f,c
 15279  003B0A  51A4               	movf	(move_window@fs+1)& (0+255),w,b
 15280  003B0C  22DA               	addwfc	fsr2h,f,c
 15281  003B0E  CFDE F092          	movff	postinc2,??_move_window
 15282  003B12  CFDE F093          	movff	postinc2,??_move_window+1
 15283  003B16  CFDE F094          	movff	postinc2,??_move_window+2
 15284  003B1A  CFDE F095          	movff	postinc2,??_move_window+3
 15285  003B1E  0100               	movlb	0	; () banked
 15286  003B20  EE20 F008          	lfsr	2,8
 15287  003B24  51A3               	movf	move_window@fs& (0+255),w,b
 15288  003B26  26D9               	addwf	fsr2l,f,c
 15289  003B28  51A4               	movf	(move_window@fs+1)& (0+255),w,b
 15290  003B2A  22DA               	addwfc	fsr2h,f,c
 15291  003B2C  CFDE F096          	movff	postinc2,??_move_window+4
 15292  003B30  CFDE F097          	movff	postinc2,??_move_window+5
 15293  003B34  CFDE F098          	movff	postinc2,??_move_window+6
 15294  003B38  CFDE F099          	movff	postinc2,??_move_window+7
 15295  003B3C  0100               	movlb	0	; () banked
 15296  003B3E  5192               	movf	??_move_window& (0+255),w,b
 15297  003B40  0100               	movlb	0	; () banked
 15298  003B42  2596               	addwf	(??_move_window+4)& (0+255),w,b
 15299  003B44  0100               	movlb	0	; () banked
 15300  003B46  6F9A               	movwf	(??_move_window+8)& (0+255),b
 15301  003B48  0100               	movlb	0	; () banked
 15302  003B4A  5193               	movf	(??_move_window+1)& (0+255),w,b
 15303  003B4C  0100               	movlb	0	; () banked
 15304  003B4E  2197               	addwfc	(??_move_window+5)& (0+255),w,b
 15305  003B50  0100               	movlb	0	; () banked
 15306  003B52  6F9B               	movwf	(??_move_window+9)& (0+255),b
 15307  003B54  0100               	movlb	0	; () banked
 15308  003B56  5194               	movf	(??_move_window+2)& (0+255),w,b
 15309  003B58  0100               	movlb	0	; () banked
 15310  003B5A  2198               	addwfc	(??_move_window+6)& (0+255),w,b
 15311  003B5C  0100               	movlb	0	; () banked
 15312  003B5E  6F9C               	movwf	(??_move_window+10)& (0+255),b
 15313  003B60  0100               	movlb	0	; () banked
 15314  003B62  5195               	movf	(??_move_window+3)& (0+255),w,b
 15315  003B64  0100               	movlb	0	; () banked
 15316  003B66  2199               	addwfc	(??_move_window+7)& (0+255),w,b
 15317  003B68  0100               	movlb	0	; () banked
 15318  003B6A  6F9D               	movwf	(??_move_window+11)& (0+255),b
 15319  003B6C  0100               	movlb	0	; () banked
 15320  003B6E  519A               	movf	(??_move_window+8)& (0+255),w,b
 15321  003B70  0100               	movlb	0	; () banked
 15322  003B72  5D9F               	subwf	move_window@wsect& (0+255),w,b
 15323  003B74  0100               	movlb	0	; () banked
 15324  003B76  519B               	movf	(??_move_window+9)& (0+255),w,b
 15325  003B78  0100               	movlb	0	; () banked
 15326  003B7A  59A0               	subwfb	(move_window@wsect+1)& (0+255),w,b
 15327  003B7C  0100               	movlb	0	; () banked
 15328  003B7E  519C               	movf	(??_move_window+10)& (0+255),w,b
 15329  003B80  0100               	movlb	0	; () banked
 15330  003B82  59A1               	subwfb	(move_window@wsect+2)& (0+255),w,b
 15331  003B84  0100               	movlb	0	; () banked
 15332  003B86  519D               	movf	(??_move_window+11)& (0+255),w,b
 15333  003B88  0100               	movlb	0	; () banked
 15334  003B8A  59A2               	subwfb	(move_window@wsect+3)& (0+255),w,b
 15335  003B8C  B0D8               	btfsc	status,0,c
 15336  003B8E  D03D               	goto	l11217
 15337                           
 15338                           ; BSR set to: 0
 15339                           ;tff.c: 93: for (n = fs->n_fats; n >= 2; n--) {
 15340  003B90  0100               	movlb	0	; () banked
 15341  003B92  EE20 F026          	lfsr	2,38
 15342  003B96  51A3               	movf	move_window@fs& (0+255),w,b
 15343  003B98  26D9               	addwf	fsr2l,f,c
 15344  003B9A  51A4               	movf	(move_window@fs+1)& (0+255),w,b
 15345  003B9C  22DA               	addwfc	fsr2h,f,c
 15346  003B9E  50DF               	movf	indf2,w,c
 15347  003BA0  0100               	movlb	0	; () banked
 15348  003BA2  6F9E               	movwf	move_window@n& (0+255),b
 15349  003BA4                     l11205:
 15350                           
 15351                           ; BSR set to: 0
 15352  003BA4  0E02               	movlw	2
 15353  003BA6  0100               	movlb	0	; () banked
 15354  003BA8  619E               	cpfslt	move_window@n& (0+255),b
 15355  003BAA  D001               	goto	l11209
 15356  003BAC  D02E               	goto	l11217
 15357  003BAE                     l11209:
 15358                           
 15359                           ; BSR set to: 0
 15360                           ;tff.c: 94: wsect += fs->sects_fat;
 15361  003BAE  0100               	movlb	0	; () banked
 15362  003BB0  EE20 F014          	lfsr	2,20
 15363  003BB4  51A3               	movf	move_window@fs& (0+255),w,b
 15364  003BB6  26D9               	addwf	fsr2l,f,c
 15365  003BB8  51A4               	movf	(move_window@fs+1)& (0+255),w,b
 15366  003BBA  22DA               	addwfc	fsr2h,f,c
 15367  003BBC  50DE               	movf	postinc2,w,c
 15368  003BBE  0100               	movlb	0	; () banked
 15369  003BC0  279F               	addwf	move_window@wsect& (0+255),f,b
 15370  003BC2  50DE               	movf	postinc2,w,c
 15371  003BC4  0100               	movlb	0	; () banked
 15372  003BC6  23A0               	addwfc	(move_window@wsect+1)& (0+255),f,b
 15373  003BC8  50DE               	movf	postinc2,w,c
 15374  003BCA  0100               	movlb	0	; () banked
 15375  003BCC  23A1               	addwfc	(move_window@wsect+2)& (0+255),f,b
 15376  003BCE  50DD               	movf	postdec2,w,c
 15377  003BD0  0100               	movlb	0	; () banked
 15378  003BD2  23A2               	addwfc	(move_window@wsect+3)& (0+255),f,b
 15379                           
 15380                           ; BSR set to: 0
 15381                           ;tff.c: 95: disk_write(0, fs->win, wsect, 1);
 15382  003BD4  0E28               	movlw	40
 15383  003BD6  0100               	movlb	0	; () banked
 15384  003BD8  25A3               	addwf	move_window@fs& (0+255),w,b
 15385  003BDA  0100               	movlb	0	; () banked
 15386  003BDC  6F7F               	movwf	disk_write@buff& (0+255),b
 15387  003BDE  0E00               	movlw	0
 15388  003BE0  0100               	movlb	0	; () banked
 15389  003BE2  21A4               	addwfc	(move_window@fs+1)& (0+255),w,b
 15390  003BE4  0100               	movlb	0	; () banked
 15391  003BE6  6F80               	movwf	(disk_write@buff+1)& (0+255),b
 15392  003BE8  C09F  F081         	movff	move_window@wsect,disk_write@sector
 15393  003BEC  C0A0  F082         	movff	move_window@wsect+1,disk_write@sector+1
 15394  003BF0  C0A1  F083         	movff	move_window@wsect+2,disk_write@sector+2
 15395  003BF4  C0A2  F084         	movff	move_window@wsect+3,disk_write@sector+3
 15396  003BF8  0E01               	movlw	1
 15397  003BFA  0100               	movlb	0	; () banked
 15398  003BFC  6F85               	movwf	disk_write@count& (0+255),b
 15399  003BFE  0E00               	movlw	0
 15400  003C00  EC83  F026         	call	_disk_write
 15401  003C04  0100               	movlb	0	; () banked
 15402  003C06  079E               	decf	move_window@n& (0+255),f,b
 15403  003C08  D7CD               	goto	l11205
 15404  003C0A                     l11217:
 15405                           
 15406                           ; BSR set to: 0
 15407                           ;tff.c: 96: }
 15408                           ;tff.c: 97: }
 15409                           ;tff.c: 98: }
 15410                           ;tff.c: 100: if (sector) {
 15411  003C0A  0100               	movlb	0	; () banked
 15412  003C0C  518E               	movf	move_window@sector& (0+255),w,b
 15413  003C0E  0100               	movlb	0	; () banked
 15414  003C10  118F               	iorwf	(move_window@sector+1)& (0+255),w,b
 15415  003C12  0100               	movlb	0	; () banked
 15416  003C14  1190               	iorwf	(move_window@sector+2)& (0+255),w,b
 15417  003C16  0100               	movlb	0	; () banked
 15418  003C18  1191               	iorwf	(move_window@sector+3)& (0+255),w,b
 15419  003C1A  B4D8               	btfsc	status,2,c
 15420  003C1C  D02C               	goto	l11227
 15421                           
 15422                           ; BSR set to: 0
 15423                           ;tff.c: 101: if (disk_read(0, fs->win, sector, 1) != RES_OK)
 15424  003C1E  0E28               	movlw	40
 15425  003C20  0100               	movlb	0	; () banked
 15426  003C22  25A3               	addwf	move_window@fs& (0+255),w,b
 15427  003C24  0100               	movlb	0	; () banked
 15428  003C26  6F83               	movwf	disk_read@buff& (0+255),b
 15429  003C28  0E00               	movlw	0
 15430  003C2A  0100               	movlb	0	; () banked
 15431  003C2C  21A4               	addwfc	(move_window@fs+1)& (0+255),w,b
 15432  003C2E  0100               	movlb	0	; () banked
 15433  003C30  6F84               	movwf	(disk_read@buff+1)& (0+255),b
 15434  003C32  C08E  F085         	movff	move_window@sector,disk_read@sector
 15435  003C36  C08F  F086         	movff	move_window@sector+1,disk_read@sector+1
 15436  003C3A  C090  F087         	movff	move_window@sector+2,disk_read@sector+2
 15437  003C3E  C091  F088         	movff	move_window@sector+3,disk_read@sector+3
 15438  003C42  0E01               	movlw	1
 15439  003C44  0100               	movlb	0	; () banked
 15440  003C46  6F89               	movwf	disk_read@count& (0+255),b
 15441  003C48  0E00               	movlw	0
 15442  003C4A  ECF2  F025         	call	_disk_read
 15443  003C4E  0900               	iorlw	0
 15444  003C50  B4D8               	btfsc	status,2,c
 15445  003C52  D002               	goto	l11225
 15446                           
 15447                           ;tff.c: 102: return FALSE;
 15448  003C54  0E00               	movlw	0
 15449  003C56  0012               	return	
 15450  003C58                     l11225:
 15451                           
 15452                           ;tff.c: 103: fs->winsect = sector;
 15453  003C58  0100               	movlb	0	; () banked
 15454  003C5A  EE20 F004          	lfsr	2,4
 15455  003C5E  51A3               	movf	move_window@fs& (0+255),w,b
 15456  003C60  26D9               	addwf	fsr2l,f,c
 15457  003C62  51A4               	movf	(move_window@fs+1)& (0+255),w,b
 15458  003C64  22DA               	addwfc	fsr2h,f,c
 15459  003C66  C08E  FFDE         	movff	move_window@sector,postinc2
 15460  003C6A  C08F  FFDE         	movff	move_window@sector+1,postinc2
 15461  003C6E  C090  FFDE         	movff	move_window@sector+2,postinc2
 15462  003C72  C091  FFDE         	movff	move_window@sector+3,postinc2
 15463  003C76                     l11227:
 15464                           
 15465                           ; BSR set to: 0
 15466                           ;tff.c: 104: }
 15467                           ;tff.c: 105: }
 15468                           ;tff.c: 106: return TRUE;
 15469  003C76  0E01               	movlw	1
 15470  003C78  0012               	return	
 15471  003C7A                     __end_of_move_window:
 15472                           	opt stack 0
 15473                           tosu	equ	0xFFF
 15474                           tosh	equ	0xFFE
 15475                           tosl	equ	0xFFD
 15476                           pclath	equ	0xFFA
 15477                           tblptru	equ	0xFF8
 15478                           tblptrh	equ	0xFF7
 15479                           tblptrl	equ	0xFF6
 15480                           tablat	equ	0xFF5
 15481                           prodh	equ	0xFF4
 15482                           prodl	equ	0xFF3
 15483                           intcon	equ	0xFF2
 15484                           intcon2	equ	0xFF1
 15485                           intcon3	equ	0xFF0
 15486                           indf0	equ	0xFEF
 15487                           postinc0	equ	0xFEE
 15488                           fsr0h	equ	0xFEA
 15489                           fsr0l	equ	0xFE9
 15490                           wreg	equ	0xFE8
 15491                           indf1	equ	0xFE7
 15492                           postinc1	equ	0xFE6
 15493                           postdec1	equ	0xFE5
 15494                           fsr1h	equ	0xFE2
 15495                           fsr1l	equ	0xFE1
 15496                           indf2	equ	0xFDF
 15497                           postinc2	equ	0xFDE
 15498                           postdec2	equ	0xFDD
 15499                           plusw2	equ	0xFDB
 15500                           fsr2h	equ	0xFDA
 15501                           fsr2l	equ	0xFD9
 15502                           status	equ	0xFD8
 15503                           
 15504 ;; *************** function _disk_write *****************
 15505 ;; Defined at:
 15506 ;;		line 197 in file "bibliotecas/diskio.c"
 15507 ;; Parameters:    Size  Location     Type
 15508 ;;  pdrv            1    wreg     unsigned char 
 15509 ;;  buff            2   31[BANK0 ] PTR const unsigned char 
 15510 ;;		 -> fs.win(512), fs(552), NULL(0), 
 15511 ;;  sector          4   33[BANK0 ] unsigned long 
 15512 ;;  count           1   37[BANK0 ] unsigned char 
 15513 ;; Auto vars:     Size  Location     Type
 15514 ;;  pdrv            1   38[BANK0 ] unsigned char 
 15515 ;;  result          2   39[BANK0 ] int 
 15516 ;;  res             1   41[BANK0 ] enum E25
 15517 ;; Return value:  Size  Location     Type
 15518 ;;                  1    wreg      enum E25
 15519 ;; Registers used:
 15520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15521 ;; Tracked objects:
 15522 ;;		On entry : 0/0
 15523 ;;		On exit  : 0/0
 15524 ;;		Unchanged: 0/0
 15525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15526 ;;      Params:         0       7       0       0       0       0       0       0       0
 15527 ;;      Locals:         0       4       0       0       0       0       0       0       0
 15528 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15529 ;;      Totals:         1      11       0       0       0       0       0       0       0
 15530 ;;Total ram usage:       12 bytes
 15531 ;; Hardware stack levels used:    1
 15532 ;; Hardware stack levels required when called:    9
 15533 ;; This function calls:
 15534 ;;		_sdc_disk_write
 15535 ;; This function is called by:
 15536 ;;		_move_window
 15537 ;;		_reserve_direntry
 15538 ;;		_f_write
 15539 ;;		_f_mkdir
 15540 ;; This function uses a non-reentrant model
 15541 ;;
 15542                           
 15543                           	psect	text43
 15544  004D06                     __ptext43:
 15545                           	opt stack 0
 15546  004D06                     _disk_write:
 15547                           	opt stack 14
 15548                           
 15549                           ;incstack = 0
 15550                           ;disk_write@pdrv stored from wreg
 15551  004D06  0100               	movlb	0	; () banked
 15552  004D08  6F86               	movwf	disk_write@pdrv& (0+255),b
 15553                           
 15554                           ;diskio.c: 204: DRESULT res;
 15555                           ;diskio.c: 205: int result;
 15556                           ;diskio.c: 207: switch (pdrv) {
 15557  004D0A  D035               	goto	l11169
 15558  004D0C                     l11149:
 15559                           
 15560                           ;diskio.c: 210: result = sdc_disk_write(buff, sector, count);
 15561  004D0C  C07F  F06E         	movff	disk_write@buff,sdc_disk_write@p_buff
 15562  004D10  C080  F06F         	movff	disk_write@buff+1,sdc_disk_write@p_buff+1
 15563  004D14  C081  F070         	movff	disk_write@sector,sdc_disk_write@sector
 15564  004D18  C082  F071         	movff	disk_write@sector+1,sdc_disk_write@sector+1
 15565  004D1C  C083  F072         	movff	disk_write@sector+2,sdc_disk_write@sector+2
 15566  004D20  C084  F073         	movff	disk_write@sector+3,sdc_disk_write@sector+3
 15567  004D24  C085  F074         	movff	disk_write@count,sdc_disk_write@count
 15568  004D28  EC38  F020         	call	_sdc_disk_write	;wreg free
 15569  004D2C  6E34               	movwf	??_disk_write& (0+255),c
 15570  004D2E  5034               	movf	??_disk_write,w,c
 15571  004D30  0100               	movlb	0	; () banked
 15572  004D32  6F87               	movwf	disk_write@result& (0+255),b
 15573  004D34  6B88               	clrf	(disk_write@result+1)& (0+255),b
 15574                           
 15575                           ; BSR set to: 0
 15576                           ;diskio.c: 212: res = result;
 15577  004D36  C087  F089         	movff	disk_write@result,disk_write@res
 15578                           
 15579                           ; BSR set to: 0
 15580                           ;diskio.c: 215: return res;
 15581  004D3A  0100               	movlb	0	; () banked
 15582  004D3C  5189               	movf	disk_write@res& (0+255),w,b
 15583                           
 15584                           ; BSR set to: 0
 15585  004D3E  0012               	return	
 15586  004D40                     l11157:
 15587                           
 15588                           ; BSR set to: 0
 15589                           ;diskio.c: 219: result = sdc_disk_write(buff, sector, count);
 15590  004D40  C07F  F06E         	movff	disk_write@buff,sdc_disk_write@p_buff
 15591  004D44  C080  F06F         	movff	disk_write@buff+1,sdc_disk_write@p_buff+1
 15592  004D48  C081  F070         	movff	disk_write@sector,sdc_disk_write@sector
 15593  004D4C  C082  F071         	movff	disk_write@sector+1,sdc_disk_write@sector+1
 15594  004D50  C083  F072         	movff	disk_write@sector+2,sdc_disk_write@sector+2
 15595  004D54  C084  F073         	movff	disk_write@sector+3,sdc_disk_write@sector+3
 15596  004D58  C085  F074         	movff	disk_write@count,sdc_disk_write@count
 15597  004D5C  EC38  F020         	call	_sdc_disk_write	;wreg free
 15598  004D60  6E34               	movwf	??_disk_write& (0+255),c
 15599  004D62  5034               	movf	??_disk_write,w,c
 15600  004D64  0100               	movlb	0	; () banked
 15601  004D66  6F87               	movwf	disk_write@result& (0+255),b
 15602  004D68  6B88               	clrf	(disk_write@result+1)& (0+255),b
 15603                           
 15604                           ; BSR set to: 0
 15605                           ;diskio.c: 222: return res;
 15606  004D6A  0100               	movlb	0	; () banked
 15607  004D6C  5189               	movf	disk_write@res& (0+255),w,b
 15608                           
 15609                           ; BSR set to: 0
 15610  004D6E  0012               	return	
 15611  004D70                     l11163:
 15612                           
 15613                           ; BSR set to: 0
 15614                           ;diskio.c: 231: return res;
 15615  004D70  0100               	movlb	0	; () banked
 15616  004D72  5189               	movf	disk_write@res& (0+255),w,b
 15617                           
 15618                           ; BSR set to: 0
 15619  004D74  0012               	return	
 15620  004D76                     l11169:
 15621  004D76  0100               	movlb	0	; () banked
 15622  004D78  5186               	movf	disk_write@pdrv& (0+255),w,b
 15623                           
 15624                           ; Switch size 1, requested type "space"
 15625                           ; Number of cases is 3, Range of values is 0 to 2
 15626                           ; switch strategies available:
 15627                           ; Name         Instructions Cycles
 15628                           ; simple_byte           10     6 (average)
 15629                           ;	Chosen strategy is simple_byte
 15630  004D7A  0A00               	xorlw	0	; case 0
 15631  004D7C  B4D8               	btfsc	status,2,c
 15632  004D7E  D7E0               	goto	l11157
 15633  004D80  0A01               	xorlw	1	; case 1
 15634  004D82  B4D8               	btfsc	status,2,c
 15635  004D84  D7C3               	goto	l11149
 15636  004D86  0A03               	xorlw	3	; case 2
 15637  004D88  B4D8               	btfsc	status,2,c
 15638  004D8A  D7F2               	goto	l11163
 15639                           
 15640                           ; BSR set to: 0
 15641                           ;diskio.c: 234: return RES_PARERR;
 15642                           
 15643                           ; BSR set to: 0
 15644  004D8C  0E04               	movlw	4
 15645  004D8E  0012               	return	
 15646  004D90                     __end_of_disk_write:
 15647                           	opt stack 0
 15648                           tosu	equ	0xFFF
 15649                           tosh	equ	0xFFE
 15650                           tosl	equ	0xFFD
 15651                           pclath	equ	0xFFA
 15652                           tblptru	equ	0xFF8
 15653                           tblptrh	equ	0xFF7
 15654                           tblptrl	equ	0xFF6
 15655                           tablat	equ	0xFF5
 15656                           prodh	equ	0xFF4
 15657                           prodl	equ	0xFF3
 15658                           intcon	equ	0xFF2
 15659                           intcon2	equ	0xFF1
 15660                           intcon3	equ	0xFF0
 15661                           indf0	equ	0xFEF
 15662                           postinc0	equ	0xFEE
 15663                           fsr0h	equ	0xFEA
 15664                           fsr0l	equ	0xFE9
 15665                           wreg	equ	0xFE8
 15666                           indf1	equ	0xFE7
 15667                           postinc1	equ	0xFE6
 15668                           postdec1	equ	0xFE5
 15669                           fsr1h	equ	0xFE2
 15670                           fsr1l	equ	0xFE1
 15671                           indf2	equ	0xFDF
 15672                           postinc2	equ	0xFDE
 15673                           postdec2	equ	0xFDD
 15674                           plusw2	equ	0xFDB
 15675                           fsr2h	equ	0xFDA
 15676                           fsr2l	equ	0xFD9
 15677                           status	equ	0xFD8
 15678                           
 15679 ;; *************** function _sdc_disk_write *****************
 15680 ;; Defined at:
 15681 ;;		line 640 in file "bibliotecas/diskio.c"
 15682 ;; Parameters:    Size  Location     Type
 15683 ;;  p_buff          2   14[BANK0 ] PTR const unsigned char 
 15684 ;;		 -> fs.win(512), fs(552), NULL(0), 
 15685 ;;  sector          4   16[BANK0 ] unsigned long 
 15686 ;;  count           1   20[BANK0 ] unsigned char 
 15687 ;; Auto vars:     Size  Location     Type
 15688 ;;  i               1   28[BANK0 ] unsigned char 
 15689 ;;  count1          2   26[BANK0 ] int 
 15690 ;;  i               2   24[BANK0 ] int 
 15691 ;;  j               2    0        int 
 15692 ;;  buff            1   30[BANK0 ] unsigned char 
 15693 ;;  res             1   29[BANK0 ] enum E25
 15694 ;; Return value:  Size  Location     Type
 15695 ;;                  1    wreg      enum E25
 15696 ;; Registers used:
 15697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15698 ;; Tracked objects:
 15699 ;;		On entry : 0/0
 15700 ;;		On exit  : 0/0
 15701 ;;		Unchanged: 0/0
 15702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15703 ;;      Params:         0       7       0       0       0       0       0       0       0
 15704 ;;      Locals:         0       7       0       0       0       0       0       0       0
 15705 ;;      Temps:          0       3       0       0       0       0       0       0       0
 15706 ;;      Totals:         0      17       0       0       0       0       0       0       0
 15707 ;;Total ram usage:       17 bytes
 15708 ;; Hardware stack levels used:    1
 15709 ;; Hardware stack levels required when called:    8
 15710 ;; This function calls:
 15711 ;;		_WriteSPI_
 15712 ;;		___awdiv
 15713 ;;		_command
 15714 ;;		_dummy_clocks
 15715 ;;		_escreve_frase_ram_lcd
 15716 ;;		_posicao_cursor_lcd
 15717 ;;		_response
 15718 ;; This function is called by:
 15719 ;;		_disk_write
 15720 ;; This function uses a non-reentrant model
 15721 ;;
 15722                           
 15723                           	psect	text44
 15724  004070                     __ptext44:
 15725                           	opt stack 0
 15726  004070                     _sdc_disk_write:
 15727                           	opt stack 14
 15728                           
 15729                           ;diskio.c: 642: DRESULT res;
 15730                           ;diskio.c: 643: unsigned char buff;
 15731                           ;diskio.c: 644: int i=0,j, count1 = 0;
 15732                           
 15733                           ; BSR set to: 0
 15734                           ;incstack = 0
 15735  004070  0E00               	movlw	0
 15736  004072  0100               	movlb	0	; () banked
 15737  004074  6F79               	movwf	(sdc_disk_write@i+1)& (0+255),b
 15738  004076  0E00               	movlw	0
 15739  004078  6F78               	movwf	sdc_disk_write@i& (0+255),b
 15740  00407A  0E00               	movlw	0
 15741  00407C  0100               	movlb	0	; () banked
 15742  00407E  6F7B               	movwf	(sdc_disk_write@count1+1)& (0+255),b
 15743  004080  0E00               	movlw	0
 15744  004082  6F7A               	movwf	sdc_disk_write@count1& (0+255),b
 15745                           
 15746                           ; BSR set to: 0
 15747                           ;diskio.c: 646: LATCbits.LATC7 = 1;
 15748  004084  8E8B               	bsf	3979,7,c	;volatile
 15749                           
 15750                           ; BSR set to: 0
 15751                           ;diskio.c: 647: LATBbits.LATB4 = 0;
 15752  004086  988A               	bcf	3978,4,c	;volatile
 15753                           
 15754                           ; BSR set to: 0
 15755                           ;diskio.c: 649: if(count < 512)
 15756  004088  0E0A               	movlw	10
 15757  00408A  ECEF  F028         	call	_dummy_clocks
 15758                           
 15759                           ;diskio.c: 650: {
 15760                           ;diskio.c: 651: command(0X58, 0X00000000, 0X00);
 15761  00408E  0E00               	movlw	0
 15762  004090  0100               	movlb	0	; () banked
 15763  004092  6F67               	movwf	command@arg& (0+255),b
 15764  004094  0E00               	movlw	0
 15765  004096  6F68               	movwf	(command@arg+1)& (0+255),b
 15766  004098  0E00               	movlw	0
 15767  00409A  6F69               	movwf	(command@arg+2)& (0+255),b
 15768  00409C  0E00               	movlw	0
 15769  00409E  6F6A               	movwf	(command@arg+3)& (0+255),b
 15770  0040A0  0E00               	movlw	0
 15771  0040A2  0100               	movlb	0	; () banked
 15772  0040A4  6F6B               	movwf	command@CRC& (0+255),b
 15773  0040A6  0E58               	movlw	88
 15774  0040A8  ECB2  F029         	call	_command
 15775                           
 15776                           ;diskio.c: 652: LATBbits.LATB4 = 1;
 15777  0040AC  888A               	bsf	3978,4,c	;volatile
 15778  0040AE                     l11035:
 15779                           
 15780                           ;diskio.c: 654: {
 15781                           ;diskio.c: 655: buff = response();
 15782  0040AE  ECC0  F02B         	call	_response	;wreg free
 15783  0040B2  0100               	movlb	0	; () banked
 15784  0040B4  6F7E               	movwf	sdc_disk_write@buff& (0+255),b
 15785                           
 15786                           ; BSR set to: 0
 15787                           ;diskio.c: 657: }
 15788                           ;diskio.c: 658: while(buff != 0x00);
 15789  0040B6  0100               	movlb	0	; () banked
 15790  0040B8  517E               	movf	sdc_disk_write@buff& (0+255),w,b
 15791  0040BA  0100               	movlb	0	; () banked
 15792  0040BC  A4D8               	btfss	status,2,c
 15793  0040BE  D7F7               	goto	l11035
 15794                           
 15795                           ; BSR set to: 0
 15796                           ;diskio.c: 660: _delay((unsigned long)((1)*(48000000/4000.0)));
 15797                           
 15798                           ; BSR set to: 0
 15799  0040C0  0E10               	movlw	16
 15800  0040C2  0100               	movlb	0	; () banked
 15801  0040C4  6F75               	movwf	??_sdc_disk_write& (0+255),b
 15802  0040C6  0E94               	movlw	148
 15803  0040C8                     u16867:
 15804  0040C8  2EE8               	decfsz	wreg,f,c
 15805  0040CA  D7FE               	bra	u16867
 15806  0040CC  2F75               	decfsz	??_sdc_disk_write& (0+255),f,b
 15807  0040CE  D7FC               	bra	u16867
 15808  0040D0  F000               	nop	
 15809                           
 15810                           ;diskio.c: 661: LATCbits.LATC7 = 1;
 15811  0040D2  8E8B               	bsf	3979,7,c	;volatile
 15812                           
 15813                           ;diskio.c: 662: LATBbits.LATB4 = 0;
 15814  0040D4  988A               	bcf	3978,4,c	;volatile
 15815                           
 15816                           ;diskio.c: 663: WriteSPI_(0XFE);
 15817  0040D6  0EFE               	movlw	254
 15818  0040D8  EC67  F028         	call	_WriteSPI_
 15819                           
 15820                           ;diskio.c: 664: LATBbits.LATB4 = 1;
 15821  0040DC  888A               	bsf	3978,4,c	;volatile
 15822                           
 15823                           ;diskio.c: 667: _delay((unsigned long)((1)*(48000000/4000.0)));
 15824  0040DE  0E10               	movlw	16
 15825  0040E0  0100               	movlb	0	; () banked
 15826  0040E2  6F75               	movwf	??_sdc_disk_write& (0+255),b
 15827  0040E4  0E94               	movlw	148
 15828  0040E6                     u16877:
 15829  0040E6  2EE8               	decfsz	wreg,f,c
 15830  0040E8  D7FE               	bra	u16877
 15831  0040EA  2F75               	decfsz	??_sdc_disk_write& (0+255),f,b
 15832  0040EC  D7FC               	bra	u16877
 15833  0040EE  F000               	nop	
 15834                           
 15835                           ;diskio.c: 669: LATCbits.LATC7 = 1;
 15836  0040F0  8E8B               	bsf	3979,7,c	;volatile
 15837                           
 15838                           ;diskio.c: 670: LATBbits.LATB4 = 0;
 15839  0040F2  988A               	bcf	3978,4,c	;volatile
 15840                           
 15841                           ;diskio.c: 671: WriteSPI_(*p_buff);
 15842  0040F4  C06E  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 15843  0040F8  C06F  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 15844  0040FC  50DF               	movf	indf2,w,c
 15845  0040FE  EC67  F028         	call	_WriteSPI_
 15846                           
 15847                           ;diskio.c: 672: p_buff++;
 15848  004102  0100               	movlb	0	; () banked
 15849  004104  4B6E               	infsnz	sdc_disk_write@p_buff& (0+255),f,b
 15850  004106  2B6F               	incf	(sdc_disk_write@p_buff+1)& (0+255),f,b
 15851                           
 15852                           ; BSR set to: 0
 15853                           ;diskio.c: 673: LATBbits.LATB4 = 1;
 15854  004108  888A               	bsf	3978,4,c	;volatile
 15855                           
 15856                           ;diskio.c: 674: }
 15857  00410A  D047               	goto	l11089
 15858  00410C                     l254:
 15859                           
 15860                           ;diskio.c: 681: {
 15861                           ;diskio.c: 682: buff = response();
 15862  00410C  ECC0  F02B         	call	_response	;wreg free
 15863  004110  0100               	movlb	0	; () banked
 15864  004112  6F7E               	movwf	sdc_disk_write@buff& (0+255),b
 15865                           
 15866                           ; BSR set to: 0
 15867                           ;diskio.c: 684: }
 15868                           ;diskio.c: 685: while(buff != 0x00);
 15869  004114  0100               	movlb	0	; () banked
 15870  004116  517E               	movf	sdc_disk_write@buff& (0+255),w,b
 15871  004118  0100               	movlb	0	; () banked
 15872  00411A  A4D8               	btfss	status,2,c
 15873  00411C  D7F7               	goto	l254
 15874                           
 15875                           ; BSR set to: 0
 15876                           ;diskio.c: 689: for(char i = 0; i < count / 512; i++)
 15877                           
 15878                           ; BSR set to: 0
 15879  00411E  0E00               	movlw	0
 15880  004120  0100               	movlb	0	; () banked
 15881  004122  6F7C               	movwf	sdc_disk_write@i_405& (0+255),b
 15882  004124  D01E               	goto	l11087
 15883  004126                     l257:
 15884                           
 15885                           ; BSR set to: 0
 15886                           ;diskio.c: 690: {
 15887                           ;diskio.c: 692: LATCbits.LATC7 = 1;
 15888  004126  8E8B               	bsf	3979,7,c	;volatile
 15889                           
 15890                           ;diskio.c: 693: LATBbits.LATB4 = 0;
 15891  004128  988A               	bcf	3978,4,c	;volatile
 15892                           
 15893                           ; BSR set to: 0
 15894                           ;diskio.c: 694: dummy_clocks(2);
 15895  00412A  0E02               	movlw	2
 15896  00412C  ECEF  F028         	call	_dummy_clocks
 15897                           
 15898                           ;diskio.c: 695: WriteSPI_(0XFC);
 15899  004130  0EFC               	movlw	252
 15900  004132  EC67  F028         	call	_WriteSPI_
 15901                           
 15902                           ;diskio.c: 696: LATBbits.LATB4 = 1;
 15903  004136  888A               	bsf	3978,4,c	;volatile
 15904                           
 15905                           ;diskio.c: 698: LATCbits.LATC7 = 1;
 15906  004138  8E8B               	bsf	3979,7,c	;volatile
 15907                           
 15908                           ;diskio.c: 699: LATBbits.LATB4 = 0;
 15909  00413A  988A               	bcf	3978,4,c	;volatile
 15910                           
 15911                           ;diskio.c: 700: WriteSPI_(*p_buff);
 15912  00413C  C06E  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 15913  004140  C06F  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 15914  004144  50DF               	movf	indf2,w,c
 15915  004146  EC67  F028         	call	_WriteSPI_
 15916                           
 15917                           ;diskio.c: 701: p_buff++;
 15918  00414A  0100               	movlb	0	; () banked
 15919  00414C  4B6E               	infsnz	sdc_disk_write@p_buff& (0+255),f,b
 15920  00414E  2B6F               	incf	(sdc_disk_write@p_buff+1)& (0+255),f,b
 15921                           
 15922                           ; BSR set to: 0
 15923                           ;diskio.c: 702: LATBbits.LATB4 = 1;
 15924  004150  888A               	bsf	3978,4,c	;volatile
 15925                           
 15926                           ; BSR set to: 0
 15927                           ;diskio.c: 704: LATCbits.LATC7 = 1;
 15928  004152  8E8B               	bsf	3979,7,c	;volatile
 15929                           
 15930                           ; BSR set to: 0
 15931                           ;diskio.c: 705: LATBbits.LATB4 = 0;
 15932  004154  988A               	bcf	3978,4,c	;volatile
 15933                           
 15934                           ; BSR set to: 0
 15935                           ;diskio.c: 706: WriteSPI_(0XFD);
 15936  004156  0EFD               	movlw	253
 15937  004158  EC67  F028         	call	_WriteSPI_
 15938                           
 15939                           ;diskio.c: 707: LATBbits.LATB4 = 1;
 15940  00415C  888A               	bsf	3978,4,c	;volatile
 15941  00415E  0100               	movlb	0	; () banked
 15942  004160  2B7C               	incf	sdc_disk_write@i_405& (0+255),f,b
 15943  004162                     l11087:
 15944                           
 15945                           ; BSR set to: 0
 15946  004162  C074  F016         	movff	sdc_disk_write@count,___awdiv@dividend
 15947  004166  6A17               	clrf	___awdiv@dividend+1,c
 15948  004168  0E02               	movlw	2
 15949  00416A  6E19               	movwf	___awdiv@divisor+1,c
 15950  00416C  0E00               	movlw	0
 15951  00416E  6E18               	movwf	___awdiv@divisor,c
 15952  004170  ECC8  F026         	call	___awdiv	;wreg free
 15953  004174  0100               	movlb	0	; () banked
 15954  004176  517C               	movf	sdc_disk_write@i_405& (0+255),w,b
 15955  004178  0100               	movlb	0	; () banked
 15956  00417A  6F75               	movwf	??_sdc_disk_write& (0+255),b
 15957  00417C  6B76               	clrf	(??_sdc_disk_write+1)& (0+255),b
 15958  00417E  5016               	movf	?___awdiv,w,c
 15959  004180  0100               	movlb	0	; () banked
 15960  004182  5D75               	subwf	??_sdc_disk_write& (0+255),w,b
 15961  004184  0100               	movlb	0	; () banked
 15962  004186  5176               	movf	(??_sdc_disk_write+1)& (0+255),w,b
 15963  004188  0A80               	xorlw	128
 15964  00418A  0100               	movlb	0	; () banked
 15965  00418C  6F77               	movwf	(??_sdc_disk_write+2)& (0+255),b
 15966  00418E  5017               	movf	?___awdiv+1,w,c
 15967  004190  0A80               	xorlw	128
 15968  004192  0100               	movlb	0	; () banked
 15969  004194  5977               	subwfb	(??_sdc_disk_write+2)& (0+255),w,b
 15970  004196  A0D8               	btfss	status,0,c
 15971  004198  D7C6               	goto	l257
 15972  00419A                     l11089:
 15973                           
 15974                           ; BSR set to: 0
 15975                           ;diskio.c: 709: }
 15976                           ;diskio.c: 711: }
 15977                           ;diskio.c: 713: _delay((unsigned long)((1)*(48000000/4000.0)));
 15978  00419A  0E10               	movlw	16
 15979  00419C  0100               	movlb	0	; () banked
 15980  00419E  6F75               	movwf	??_sdc_disk_write& (0+255),b
 15981  0041A0  0E94               	movlw	148
 15982  0041A2                     u16887:
 15983  0041A2  2EE8               	decfsz	wreg,f,c
 15984  0041A4  D7FE               	bra	u16887
 15985  0041A6  2F75               	decfsz	??_sdc_disk_write& (0+255),f,b
 15986  0041A8  D7FC               	bra	u16887
 15987  0041AA  F000               	nop	
 15988                           
 15989                           ;diskio.c: 714: LATBbits.LATB4 = 0;
 15990  0041AC  988A               	bcf	3978,4,c	;volatile
 15991                           
 15992                           ;diskio.c: 715: LATCbits.LATC7 = 1;
 15993  0041AE  8E8B               	bsf	3979,7,c	;volatile
 15994                           
 15995                           ;diskio.c: 716: dummy_clocks(2);
 15996  0041B0  0E02               	movlw	2
 15997  0041B2  ECEF  F028         	call	_dummy_clocks
 15998                           
 15999                           ;diskio.c: 717: command(0X4D,0X00000000,0XFF);
 16000  0041B6  0E00               	movlw	0
 16001  0041B8  0100               	movlb	0	; () banked
 16002  0041BA  6F67               	movwf	command@arg& (0+255),b
 16003  0041BC  0E00               	movlw	0
 16004  0041BE  6F68               	movwf	(command@arg+1)& (0+255),b
 16005  0041C0  0E00               	movlw	0
 16006  0041C2  6F69               	movwf	(command@arg+2)& (0+255),b
 16007  0041C4  0E00               	movlw	0
 16008  0041C6  6F6A               	movwf	(command@arg+3)& (0+255),b
 16009  0041C8  0EFF               	movlw	255
 16010  0041CA  0100               	movlb	0	; () banked
 16011  0041CC  6F6B               	movwf	command@CRC& (0+255),b
 16012  0041CE  0E4D               	movlw	77
 16013  0041D0  ECB2  F029         	call	_command
 16014                           
 16015                           ;diskio.c: 718: LATBbits.LATB4 = 1;
 16016  0041D4  888A               	bsf	3978,4,c	;volatile
 16017  0041D6                     l11101:
 16018                           
 16019                           ;diskio.c: 722: buff = response();
 16020  0041D6  ECC0  F02B         	call	_response	;wreg free
 16021  0041DA  0100               	movlb	0	; () banked
 16022  0041DC  6F7E               	movwf	sdc_disk_write@buff& (0+255),b
 16023                           
 16024                           ; BSR set to: 0
 16025                           ;diskio.c: 728: }while(buff!=0X00 );
 16026  0041DE  0100               	movlb	0	; () banked
 16027  0041E0  517E               	movf	sdc_disk_write@buff& (0+255),w,b
 16028  0041E2  0100               	movlb	0	; () banked
 16029  0041E4  A4D8               	btfss	status,2,c
 16030  0041E6  D7F7               	goto	l11101
 16031                           
 16032                           ; BSR set to: 0
 16033                           ;diskio.c: 730: posicao_cursor_lcd(1,0);
 16034                           
 16035                           ; BSR set to: 0
 16036  0041E8  0E00               	movlw	0
 16037  0041EA  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16038  0041EC  0E01               	movlw	1
 16039  0041EE  ECFA  F027         	call	_posicao_cursor_lcd
 16040                           
 16041                           ;diskio.c: 731: escreve_frase_ram_lcd(res);
 16042  0041F2  0100               	movlb	0	; () banked
 16043  0041F4  517D               	movf	sdc_disk_write@res& (0+255),w,b
 16044  0041F6  0100               	movlb	0	; () banked
 16045  0041F8  6F75               	movwf	??_sdc_disk_write& (0+255),b
 16046  0041FA  6B76               	clrf	(??_sdc_disk_write+1)& (0+255),b
 16047  0041FC  C075  F019         	movff	??_sdc_disk_write,escreve_frase_ram_lcd@buffer
 16048  004200  C076  F01A         	movff	??_sdc_disk_write+1,escreve_frase_ram_lcd@buffer+1
 16049  004204  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 16050                           
 16051                           ;diskio.c: 732: _delay((unsigned long)((2000)*(48000000/4000.0)));
 16052  004208  0E7A               	movlw	122
 16053  00420A  0100               	movlb	0	; () banked
 16054  00420C  6F76               	movwf	(??_sdc_disk_write+1)& (0+255),b
 16055  00420E  0EC1               	movlw	193
 16056  004210  0100               	movlb	0	; () banked
 16057  004212  6F75               	movwf	??_sdc_disk_write& (0+255),b
 16058  004214  0E81               	movlw	129
 16059  004216                     u16897:
 16060  004216  2EE8               	decfsz	wreg,f,c
 16061  004218  D7FE               	bra	u16897
 16062  00421A  2F75               	decfsz	??_sdc_disk_write& (0+255),f,b
 16063  00421C  D7FC               	bra	u16897
 16064  00421E  2F76               	decfsz	(??_sdc_disk_write+1)& (0+255),f,b
 16065  004220  D7FA               	bra	u16897
 16066  004222  D000               	nop2	
 16067                           
 16068                           ;diskio.c: 736: return res;
 16069  004224  0100               	movlb	0	; () banked
 16070  004226  517D               	movf	sdc_disk_write@res& (0+255),w,b
 16071  004228  0012               	return	
 16072  00422A                     __end_of_sdc_disk_write:
 16073                           	opt stack 0
 16074                           tosu	equ	0xFFF
 16075                           tosh	equ	0xFFE
 16076                           tosl	equ	0xFFD
 16077                           pclath	equ	0xFFA
 16078                           tblptru	equ	0xFF8
 16079                           tblptrh	equ	0xFF7
 16080                           tblptrl	equ	0xFF6
 16081                           tablat	equ	0xFF5
 16082                           prodh	equ	0xFF4
 16083                           prodl	equ	0xFF3
 16084                           intcon	equ	0xFF2
 16085                           intcon2	equ	0xFF1
 16086                           intcon3	equ	0xFF0
 16087                           indf0	equ	0xFEF
 16088                           postinc0	equ	0xFEE
 16089                           fsr0h	equ	0xFEA
 16090                           fsr0l	equ	0xFE9
 16091                           wreg	equ	0xFE8
 16092                           indf1	equ	0xFE7
 16093                           postinc1	equ	0xFE6
 16094                           postdec1	equ	0xFE5
 16095                           fsr1h	equ	0xFE2
 16096                           fsr1l	equ	0xFE1
 16097                           indf2	equ	0xFDF
 16098                           postinc2	equ	0xFDE
 16099                           postdec2	equ	0xFDD
 16100                           plusw2	equ	0xFDB
 16101                           fsr2h	equ	0xFDA
 16102                           fsr2l	equ	0xFD9
 16103                           status	equ	0xFD8
 16104                           
 16105 ;; *************** function ___awdiv *****************
 16106 ;; Defined at:
 16107 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 16108 ;; Parameters:    Size  Location     Type
 16109 ;;  dividend        2   21[COMRAM] int 
 16110 ;;  divisor         2   23[COMRAM] int 
 16111 ;; Auto vars:     Size  Location     Type
 16112 ;;  quotient        2   27[COMRAM] int 
 16113 ;;  sign            1   26[COMRAM] unsigned char 
 16114 ;;  counter         1   25[COMRAM] unsigned char 
 16115 ;; Return value:  Size  Location     Type
 16116 ;;                  2   21[COMRAM] int 
 16117 ;; Registers used:
 16118 ;;		wreg, status,2, status,0
 16119 ;; Tracked objects:
 16120 ;;		On entry : 0/0
 16121 ;;		On exit  : 0/0
 16122 ;;		Unchanged: 0/0
 16123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16124 ;;      Params:         4       0       0       0       0       0       0       0       0
 16125 ;;      Locals:         4       0       0       0       0       0       0       0       0
 16126 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16127 ;;      Totals:         8       0       0       0       0       0       0       0       0
 16128 ;;Total ram usage:        8 bytes
 16129 ;; Hardware stack levels used:    1
 16130 ;; Hardware stack levels required when called:    2
 16131 ;; This function calls:
 16132 ;;		Nothing
 16133 ;; This function is called by:
 16134 ;;		_sdc_disk_write
 16135 ;;		_sprintf
 16136 ;;		_scale
 16137 ;;		_fround
 16138 ;; This function uses a non-reentrant model
 16139 ;;
 16140                           
 16141                           	psect	text45
 16142  004D90                     __ptext45:
 16143                           	opt stack 0
 16144  004D90                     ___awdiv:
 16145                           	opt stack 19
 16146                           
 16147                           ; BSR set to: 0
 16148                           ;incstack = 0
 16149  004D90  0E00               	movlw	0
 16150  004D92  6E1B               	movwf	___awdiv@sign,c
 16151  004D94  AE19               	btfss	___awdiv@divisor+1,7,c
 16152  004D96  D006               	goto	l10779
 16153  004D98  6C18               	negf	___awdiv@divisor,c
 16154  004D9A  1E19               	comf	___awdiv@divisor+1,f,c
 16155  004D9C  B0D8               	btfsc	status,0,c
 16156  004D9E  2A19               	incf	___awdiv@divisor+1,f,c
 16157  004DA0  0E01               	movlw	1
 16158  004DA2  6E1B               	movwf	___awdiv@sign,c
 16159  004DA4                     l10779:
 16160  004DA4  AE17               	btfss	___awdiv@dividend+1,7,c
 16161  004DA6  D006               	goto	l10785
 16162  004DA8  6C16               	negf	___awdiv@dividend,c
 16163  004DAA  1E17               	comf	___awdiv@dividend+1,f,c
 16164  004DAC  B0D8               	btfsc	status,0,c
 16165  004DAE  2A17               	incf	___awdiv@dividend+1,f,c
 16166  004DB0  0E01               	movlw	1
 16167  004DB2  1A1B               	xorwf	___awdiv@sign,f,c
 16168  004DB4                     l10785:
 16169  004DB4  0E00               	movlw	0
 16170  004DB6  6E1D               	movwf	___awdiv@quotient+1,c
 16171  004DB8  0E00               	movlw	0
 16172  004DBA  6E1C               	movwf	___awdiv@quotient,c
 16173  004DBC  5018               	movf	___awdiv@divisor,w,c
 16174  004DBE  1019               	iorwf	___awdiv@divisor+1,w,c
 16175  004DC0  B4D8               	btfsc	status,2,c
 16176  004DC2  D01C               	goto	l10807
 16177  004DC4  0E01               	movlw	1
 16178  004DC6  6E1A               	movwf	___awdiv@counter,c
 16179  004DC8  D004               	goto	l10793
 16180  004DCA                     l10791:
 16181  004DCA  90D8               	bcf	status,0,c
 16182  004DCC  3618               	rlcf	___awdiv@divisor,f,c
 16183  004DCE  3619               	rlcf	___awdiv@divisor+1,f,c
 16184  004DD0  2A1A               	incf	___awdiv@counter,f,c
 16185  004DD2                     l10793:
 16186  004DD2  AE19               	btfss	___awdiv@divisor+1,7,c
 16187  004DD4  D7FA               	goto	l10791
 16188  004DD6                     l10795:
 16189  004DD6  90D8               	bcf	status,0,c
 16190  004DD8  361C               	rlcf	___awdiv@quotient,f,c
 16191  004DDA  361D               	rlcf	___awdiv@quotient+1,f,c
 16192  004DDC  5018               	movf	___awdiv@divisor,w,c
 16193  004DDE  5C16               	subwf	___awdiv@dividend,w,c
 16194  004DE0  5019               	movf	___awdiv@divisor+1,w,c
 16195  004DE2  5817               	subwfb	___awdiv@dividend+1,w,c
 16196  004DE4  A0D8               	btfss	status,0,c
 16197  004DE6  D005               	goto	l10803
 16198  004DE8  5018               	movf	___awdiv@divisor,w,c
 16199  004DEA  5E16               	subwf	___awdiv@dividend,f,c
 16200  004DEC  5019               	movf	___awdiv@divisor+1,w,c
 16201  004DEE  5A17               	subwfb	___awdiv@dividend+1,f,c
 16202  004DF0  801C               	bsf	___awdiv@quotient,0,c
 16203  004DF2                     l10803:
 16204  004DF2  90D8               	bcf	status,0,c
 16205  004DF4  3219               	rrcf	___awdiv@divisor+1,f,c
 16206  004DF6  3218               	rrcf	___awdiv@divisor,f,c
 16207  004DF8  2E1A               	decfsz	___awdiv@counter,f,c
 16208  004DFA  D7ED               	goto	l10795
 16209  004DFC                     l10807:
 16210  004DFC  501B               	movf	___awdiv@sign,w,c
 16211  004DFE  B4D8               	btfsc	status,2,c
 16212  004E00  D004               	goto	l10811
 16213  004E02  6C1C               	negf	___awdiv@quotient,c
 16214  004E04  1E1D               	comf	___awdiv@quotient+1,f,c
 16215  004E06  B0D8               	btfsc	status,0,c
 16216  004E08  2A1D               	incf	___awdiv@quotient+1,f,c
 16217  004E0A                     l10811:
 16218  004E0A  C01C  F016         	movff	___awdiv@quotient,?___awdiv
 16219  004E0E  C01D  F017         	movff	___awdiv@quotient+1,?___awdiv+1
 16220  004E12  0012               	return	
 16221  004E14                     __end_of___awdiv:
 16222                           	opt stack 0
 16223                           tosu	equ	0xFFF
 16224                           tosh	equ	0xFFE
 16225                           tosl	equ	0xFFD
 16226                           pclath	equ	0xFFA
 16227                           tblptru	equ	0xFF8
 16228                           tblptrh	equ	0xFF7
 16229                           tblptrl	equ	0xFF6
 16230                           tablat	equ	0xFF5
 16231                           prodh	equ	0xFF4
 16232                           prodl	equ	0xFF3
 16233                           intcon	equ	0xFF2
 16234                           intcon2	equ	0xFF1
 16235                           intcon3	equ	0xFF0
 16236                           indf0	equ	0xFEF
 16237                           postinc0	equ	0xFEE
 16238                           fsr0h	equ	0xFEA
 16239                           fsr0l	equ	0xFE9
 16240                           wreg	equ	0xFE8
 16241                           indf1	equ	0xFE7
 16242                           postinc1	equ	0xFE6
 16243                           postdec1	equ	0xFE5
 16244                           fsr1h	equ	0xFE2
 16245                           fsr1l	equ	0xFE1
 16246                           indf2	equ	0xFDF
 16247                           postinc2	equ	0xFDE
 16248                           postdec2	equ	0xFDD
 16249                           plusw2	equ	0xFDB
 16250                           fsr2h	equ	0xFDA
 16251                           fsr2l	equ	0xFD9
 16252                           status	equ	0xFD8
 16253                           
 16254 ;; *************** function _disk_read *****************
 16255 ;; Defined at:
 16256 ;;		line 148 in file "bibliotecas/diskio.c"
 16257 ;; Parameters:    Size  Location     Type
 16258 ;;  pdrv            1    wreg     unsigned char 
 16259 ;;  buff            2   35[BANK0 ] PTR unsigned char 
 16260 ;;		 -> fs(552), NULL(0), 
 16261 ;;  sector          4   37[BANK0 ] unsigned long 
 16262 ;;  count           1   41[BANK0 ] unsigned char 
 16263 ;; Auto vars:     Size  Location     Type
 16264 ;;  pdrv            1   42[BANK0 ] unsigned char 
 16265 ;;  result          2   43[BANK0 ] int 
 16266 ;;  res             1   45[BANK0 ] enum E25
 16267 ;; Return value:  Size  Location     Type
 16268 ;;                  1    wreg      enum E25
 16269 ;; Registers used:
 16270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16271 ;; Tracked objects:
 16272 ;;		On entry : 0/0
 16273 ;;		On exit  : 0/0
 16274 ;;		Unchanged: 0/0
 16275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16276 ;;      Params:         0       7       0       0       0       0       0       0       0
 16277 ;;      Locals:         0       4       0       0       0       0       0       0       0
 16278 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16279 ;;      Totals:         1      11       0       0       0       0       0       0       0
 16280 ;;Total ram usage:       12 bytes
 16281 ;; Hardware stack levels used:    1
 16282 ;; Hardware stack levels required when called:    9
 16283 ;; This function calls:
 16284 ;;		_sdc_disk_read
 16285 ;; This function is called by:
 16286 ;;		_move_window
 16287 ;;		_check_fs
 16288 ;;		_f_read
 16289 ;; This function uses a non-reentrant model
 16290 ;;
 16291                           
 16292                           	psect	text46
 16293  004BE4                     __ptext46:
 16294                           	opt stack 0
 16295  004BE4                     _disk_read:
 16296                           	opt stack 14
 16297                           
 16298                           ;incstack = 0
 16299                           ;disk_read@pdrv stored from wreg
 16300  004BE4  0100               	movlb	0	; () banked
 16301  004BE6  6F8A               	movwf	disk_read@pdrv& (0+255),b
 16302                           
 16303                           ;diskio.c: 155: DRESULT res;
 16304                           ;diskio.c: 156: int result;
 16305                           ;diskio.c: 158: switch (pdrv) {
 16306  004BE8  D03B               	goto	l11141
 16307  004BEA                     l11117:
 16308                           
 16309                           ;diskio.c: 161: result = sdc_disk_read(buff, sector, count);
 16310  004BEA  C083  F06E         	movff	disk_read@buff,sdc_disk_read@p_buff
 16311  004BEE  C084  F06F         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 16312  004BF2  C085  F070         	movff	disk_read@sector,sdc_disk_read@sector
 16313  004BF6  C086  F071         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 16314  004BFA  C087  F072         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 16315  004BFE  C088  F073         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 16316  004C02  C089  F074         	movff	disk_read@count,sdc_disk_read@count
 16317  004C06  ECE8  F00C         	call	_sdc_disk_read	;wreg free
 16318  004C0A  6E34               	movwf	??_disk_read& (0+255),c
 16319  004C0C  5034               	movf	??_disk_read,w,c
 16320  004C0E  0100               	movlb	0	; () banked
 16321  004C10  6F8B               	movwf	disk_read@result& (0+255),b
 16322  004C12  6B8C               	clrf	(disk_read@result+1)& (0+255),b
 16323                           
 16324                           ; BSR set to: 0
 16325                           ;diskio.c: 162: res = result;
 16326  004C14  C08B  F08D         	movff	disk_read@result,disk_read@res
 16327                           
 16328                           ; BSR set to: 0
 16329                           ;diskio.c: 164: return res;
 16330  004C18  0100               	movlb	0	; () banked
 16331  004C1A  518D               	movf	disk_read@res& (0+255),w,b
 16332                           
 16333                           ; BSR set to: 0
 16334  004C1C  0012               	return	
 16335  004C1E                     l11125:
 16336                           
 16337                           ; BSR set to: 0
 16338                           ;diskio.c: 168: result = sdc_disk_read(buff, sector, count);
 16339  004C1E  C083  F06E         	movff	disk_read@buff,sdc_disk_read@p_buff
 16340  004C22  C084  F06F         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 16341  004C26  C085  F070         	movff	disk_read@sector,sdc_disk_read@sector
 16342  004C2A  C086  F071         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 16343  004C2E  C087  F072         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 16344  004C32  C088  F073         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 16345  004C36  C089  F074         	movff	disk_read@count,sdc_disk_read@count
 16346  004C3A  ECE8  F00C         	call	_sdc_disk_read	;wreg free
 16347  004C3E  6E34               	movwf	??_disk_read& (0+255),c
 16348  004C40  5034               	movf	??_disk_read,w,c
 16349  004C42  0100               	movlb	0	; () banked
 16350  004C44  6F8B               	movwf	disk_read@result& (0+255),b
 16351  004C46  6B8C               	clrf	(disk_read@result+1)& (0+255),b
 16352                           
 16353                           ; BSR set to: 0
 16354                           ;diskio.c: 169: res = result;
 16355  004C48  C08B  F08D         	movff	disk_read@result,disk_read@res
 16356                           
 16357                           ; BSR set to: 0
 16358                           ;diskio.c: 171: buff = data_buff;
 16359  004C4C  C037  F083         	movff	_data_buff,disk_read@buff
 16360  004C50  C038  F084         	movff	_data_buff+1,disk_read@buff+1
 16361                           
 16362                           ; BSR set to: 0
 16363                           ;diskio.c: 172: return res;
 16364  004C54  0100               	movlb	0	; () banked
 16365  004C56  518D               	movf	disk_read@res& (0+255),w,b
 16366                           
 16367                           ; BSR set to: 0
 16368  004C58  0012               	return	
 16369  004C5A                     l11135:
 16370                           
 16371                           ; BSR set to: 0
 16372                           ;diskio.c: 181: return res;
 16373  004C5A  0100               	movlb	0	; () banked
 16374  004C5C  518D               	movf	disk_read@res& (0+255),w,b
 16375                           
 16376                           ; BSR set to: 0
 16377  004C5E  0012               	return	
 16378  004C60                     l11141:
 16379  004C60  0100               	movlb	0	; () banked
 16380  004C62  518A               	movf	disk_read@pdrv& (0+255),w,b
 16381                           
 16382                           ; Switch size 1, requested type "space"
 16383                           ; Number of cases is 3, Range of values is 0 to 2
 16384                           ; switch strategies available:
 16385                           ; Name         Instructions Cycles
 16386                           ; simple_byte           10     6 (average)
 16387                           ;	Chosen strategy is simple_byte
 16388  004C64  0A00               	xorlw	0	; case 0
 16389  004C66  B4D8               	btfsc	status,2,c
 16390  004C68  D7DA               	goto	l11125
 16391  004C6A  0A01               	xorlw	1	; case 1
 16392  004C6C  B4D8               	btfsc	status,2,c
 16393  004C6E  D7BD               	goto	l11117
 16394  004C70  0A03               	xorlw	3	; case 2
 16395  004C72  B4D8               	btfsc	status,2,c
 16396  004C74  D7F2               	goto	l11135
 16397                           
 16398                           ; BSR set to: 0
 16399                           ;diskio.c: 188: return RES_PARERR;
 16400                           
 16401                           ; BSR set to: 0
 16402  004C76  0E04               	movlw	4
 16403  004C78  0012               	return	
 16404  004C7A                     __end_of_disk_read:
 16405                           	opt stack 0
 16406                           tosu	equ	0xFFF
 16407                           tosh	equ	0xFFE
 16408                           tosl	equ	0xFFD
 16409                           pclath	equ	0xFFA
 16410                           tblptru	equ	0xFF8
 16411                           tblptrh	equ	0xFF7
 16412                           tblptrl	equ	0xFF6
 16413                           tablat	equ	0xFF5
 16414                           prodh	equ	0xFF4
 16415                           prodl	equ	0xFF3
 16416                           intcon	equ	0xFF2
 16417                           intcon2	equ	0xFF1
 16418                           intcon3	equ	0xFF0
 16419                           indf0	equ	0xFEF
 16420                           postinc0	equ	0xFEE
 16421                           fsr0h	equ	0xFEA
 16422                           fsr0l	equ	0xFE9
 16423                           wreg	equ	0xFE8
 16424                           indf1	equ	0xFE7
 16425                           postinc1	equ	0xFE6
 16426                           postdec1	equ	0xFE5
 16427                           fsr1h	equ	0xFE2
 16428                           fsr1l	equ	0xFE1
 16429                           indf2	equ	0xFDF
 16430                           postinc2	equ	0xFDE
 16431                           postdec2	equ	0xFDD
 16432                           plusw2	equ	0xFDB
 16433                           fsr2h	equ	0xFDA
 16434                           fsr2l	equ	0xFD9
 16435                           status	equ	0xFD8
 16436                           
 16437 ;; *************** function _sdc_disk_read *****************
 16438 ;; Defined at:
 16439 ;;		line 449 in file "bibliotecas/diskio.c"
 16440 ;; Parameters:    Size  Location     Type
 16441 ;;  p_buff          2   14[BANK0 ] PTR unsigned char 
 16442 ;;		 -> fs(552), NULL(0), 
 16443 ;;  sector          4   16[BANK0 ] unsigned long 
 16444 ;;  count           1   20[BANK0 ] unsigned char 
 16445 ;; Auto vars:     Size  Location     Type
 16446 ;;  start_add       4   28[BANK0 ] unsigned long 
 16447 ;;  length          2   32[BANK0 ] int 
 16448 ;;  offset          2   26[BANK0 ] int 
 16449 ;;  count1          2    0        int 
 16450 ;;  i               2    0        int 
 16451 ;;  buff            1   34[BANK0 ] unsigned char 
 16452 ;;  ptr             1   25[BANK0 ] unsigned char 
 16453 ;;  res             1    0        enum E25
 16454 ;; Return value:  Size  Location     Type
 16455 ;;                  1    wreg      enum E25
 16456 ;; Registers used:
 16457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16458 ;; Tracked objects:
 16459 ;;		On entry : 0/0
 16460 ;;		On exit  : 0/0
 16461 ;;		Unchanged: 0/0
 16462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16463 ;;      Params:         0       7       0       0       0       0       0       0       0
 16464 ;;      Locals:         0      10       0       0       0       0       0       0       0
 16465 ;;      Temps:          0       4       0       0       0       0       0       0       0
 16466 ;;      Totals:         0      21       0       0       0       0       0       0       0
 16467 ;;Total ram usage:       21 bytes
 16468 ;; Hardware stack levels used:    1
 16469 ;; Hardware stack levels required when called:    8
 16470 ;; This function calls:
 16471 ;;		_command
 16472 ;;		_dummy_clocks
 16473 ;;		_escreve_frase_ram_lcd
 16474 ;;		_escreve_inteiro_lcd
 16475 ;;		_posicao_cursor_lcd
 16476 ;;		_proceed
 16477 ;;		_response
 16478 ;; This function is called by:
 16479 ;;		_disk_read
 16480 ;; This function uses a non-reentrant model
 16481 ;;
 16482                           
 16483                           	psect	text47
 16484  0019D0                     __ptext47:
 16485                           	opt stack 0
 16486  0019D0                     _sdc_disk_read:
 16487                           	opt stack 14
 16488                           
 16489                           ;diskio.c: 456: DRESULT res;
 16490                           ;diskio.c: 457: unsigned char ptr=0X00, buff;
 16491                           
 16492                           ; BSR set to: 0
 16493                           ;incstack = 0
 16494  0019D0  0E00               	movlw	0
 16495  0019D2  0100               	movlb	0	; () banked
 16496  0019D4  6F79               	movwf	sdc_disk_read@ptr& (0+255),b
 16497                           
 16498                           ;diskio.c: 458: unsigned long int start_add;
 16499                           ;diskio.c: 460: int length,i, count1, offset = 0;
 16500  0019D6  0E00               	movlw	0
 16501  0019D8  0100               	movlb	0	; () banked
 16502  0019DA  6F7B               	movwf	(sdc_disk_read@offset+1)& (0+255),b
 16503  0019DC  0E00               	movlw	0
 16504  0019DE  6F7A               	movwf	sdc_disk_read@offset& (0+255),b
 16505                           
 16506                           ; BSR set to: 0
 16507                           ;diskio.c: 472: if(offset == 0)
 16508  0019E0  0100               	movlb	0	; () banked
 16509  0019E2  517A               	movf	sdc_disk_read@offset& (0+255),w,b
 16510  0019E4  0100               	movlb	0	; () banked
 16511  0019E6  117B               	iorwf	(sdc_disk_read@offset+1)& (0+255),w,b
 16512  0019E8  A4D8               	btfss	status,2,c
 16513  0019EA  D154               	goto	l10927
 16514                           
 16515                           ; BSR set to: 0
 16516                           ;diskio.c: 473: {
 16517                           ;diskio.c: 474: start_add = ((sector*512));
 16518  0019EC  C070  F075         	movff	sdc_disk_read@sector,??_sdc_disk_read
 16519  0019F0  C071  F076         	movff	sdc_disk_read@sector+1,??_sdc_disk_read+1
 16520  0019F4  C072  F077         	movff	sdc_disk_read@sector+2,??_sdc_disk_read+2
 16521  0019F8  C073  F078         	movff	sdc_disk_read@sector+3,??_sdc_disk_read+3
 16522  0019FC  0E09               	movlw	9
 16523  0019FE                     u11905:
 16524  0019FE  90D8               	bcf	status,0,c
 16525  001A00  0100               	movlb	0	; () banked
 16526  001A02  3775               	rlcf	??_sdc_disk_read& (0+255),f,b
 16527  001A04  3776               	rlcf	(??_sdc_disk_read+1)& (0+255),f,b
 16528  001A06  3777               	rlcf	(??_sdc_disk_read+2)& (0+255),f,b
 16529  001A08  3778               	rlcf	(??_sdc_disk_read+3)& (0+255),f,b
 16530  001A0A  2EE8               	decfsz	wreg,f,c
 16531  001A0C  D7F8               	goto	u11905
 16532  001A0E  C075  F07C         	movff	??_sdc_disk_read,sdc_disk_read@start_add
 16533  001A12  C076  F07D         	movff	??_sdc_disk_read+1,sdc_disk_read@start_add+1
 16534  001A16  C077  F07E         	movff	??_sdc_disk_read+2,sdc_disk_read@start_add+2
 16535  001A1A  C078  F07F         	movff	??_sdc_disk_read+3,sdc_disk_read@start_add+3
 16536                           
 16537                           ; BSR set to: 0
 16538                           ;diskio.c: 475: _delay((unsigned long)((1)*(48000000/4000.0)));
 16539  001A1E  0E10               	movlw	16
 16540  001A20  0100               	movlb	0	; () banked
 16541  001A22  6F75               	movwf	??_sdc_disk_read& (0+255),b
 16542  001A24  0E94               	movlw	148
 16543  001A26                     u16907:
 16544  001A26  2EE8               	decfsz	wreg,f,c
 16545  001A28  D7FE               	bra	u16907
 16546  001A2A  2F75               	decfsz	??_sdc_disk_read& (0+255),f,b
 16547  001A2C  D7FC               	bra	u16907
 16548  001A2E  F000               	nop	
 16549                           
 16550                           ;diskio.c: 476: LATBbits.LATB4 = 0;
 16551  001A30  988A               	bcf	3978,4,c	;volatile
 16552                           
 16553                           ;diskio.c: 477: LATCbits.LATC7 = 1;
 16554  001A32  8E8B               	bsf	3979,7,c	;volatile
 16555                           
 16556                           ;diskio.c: 479: dummy_clocks(10);
 16557  001A34  0E0A               	movlw	10
 16558  001A36  ECEF  F028         	call	_dummy_clocks
 16559                           
 16560                           ;diskio.c: 480: command(0x52,start_add,0X00);
 16561  001A3A  C07C  F067         	movff	sdc_disk_read@start_add,command@arg
 16562  001A3E  C07D  F068         	movff	sdc_disk_read@start_add+1,command@arg+1
 16563  001A42  C07E  F069         	movff	sdc_disk_read@start_add+2,command@arg+2
 16564  001A46  C07F  F06A         	movff	sdc_disk_read@start_add+3,command@arg+3
 16565  001A4A  0E00               	movlw	0
 16566  001A4C  0100               	movlb	0	; () banked
 16567  001A4E  6F6B               	movwf	command@CRC& (0+255),b
 16568  001A50  0E52               	movlw	82
 16569  001A52  ECB2  F029         	call	_command
 16570                           
 16571                           ;diskio.c: 482: LATBbits.LATB4 = 1;
 16572  001A56  888A               	bsf	3978,4,c	;volatile
 16573                           
 16574                           ;diskio.c: 485: proceed();
 16575  001A58  ECB9  F02B         	call	_proceed	;wreg free
 16576  001A5C                     l10835:
 16577                           
 16578                           ;diskio.c: 487: {
 16579                           ;diskio.c: 488: buff = response();
 16580  001A5C  ECC0  F02B         	call	_response	;wreg free
 16581  001A60  0100               	movlb	0	; () banked
 16582  001A62  6F82               	movwf	sdc_disk_read@buff& (0+255),b
 16583                           
 16584                           ; BSR set to: 0
 16585                           ;diskio.c: 489: if(buff != 0x00)
 16586  001A64  0100               	movlb	0	; () banked
 16587  001A66  5182               	movf	sdc_disk_read@buff& (0+255),w,b
 16588  001A68  0100               	movlb	0	; () banked
 16589  001A6A  B4D8               	btfsc	status,2,c
 16590  001A6C  D015               	goto	l10847
 16591                           
 16592                           ; BSR set to: 0
 16593                           ;diskio.c: 490: {
 16594                           ;diskio.c: 491: posicao_cursor_lcd(1,0);
 16595  001A6E  0E00               	movlw	0
 16596  001A70  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16597  001A72  0E01               	movlw	1
 16598  001A74  ECFA  F027         	call	_posicao_cursor_lcd
 16599                           
 16600                           ;diskio.c: 492: escreve_frase_ram_lcd("buffer leit.   ");
 16601  001A78  0EE5               	movlw	low STR_15
 16602  001A7A  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 16603  001A7C  0E61               	movlw	high STR_15
 16604  001A7E  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 16605  001A80  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 16606                           
 16607                           ;diskio.c: 493: posicao_cursor_lcd(1,13);
 16608  001A84  0E0D               	movlw	13
 16609  001A86  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16610  001A88  0E01               	movlw	1
 16611  001A8A  ECFA  F027         	call	_posicao_cursor_lcd
 16612                           
 16613                           ;diskio.c: 494: escreve_inteiro_lcd(buff);
 16614  001A8E  C082  F02E         	movff	sdc_disk_read@buff,escreve_inteiro_lcd@valor
 16615  001A92  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 16616  001A94  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 16617  001A98                     l10847:
 16618                           
 16619                           ;diskio.c: 495: }
 16620                           ;diskio.c: 497: }while(buff!=0X00);
 16621  001A98  0100               	movlb	0	; () banked
 16622  001A9A  5182               	movf	sdc_disk_read@buff& (0+255),w,b
 16623  001A9C  0100               	movlb	0	; () banked
 16624  001A9E  A4D8               	btfss	status,2,c
 16625  001AA0  D7DD               	goto	l10835
 16626                           
 16627                           ; BSR set to: 0
 16628                           ;diskio.c: 499: proceed();
 16629                           
 16630                           ; BSR set to: 0
 16631  001AA2  ECB9  F02B         	call	_proceed	;wreg free
 16632  001AA6                     l214:
 16633                           
 16634                           ;diskio.c: 501: {
 16635                           ;diskio.c: 502: buff = response();
 16636  001AA6  ECC0  F02B         	call	_response	;wreg free
 16637  001AAA  0100               	movlb	0	; () banked
 16638  001AAC  6F82               	movwf	sdc_disk_read@buff& (0+255),b
 16639                           
 16640                           ; BSR set to: 0
 16641                           ;diskio.c: 503: posicao_cursor_lcd(2,13);
 16642  001AAE  0E0D               	movlw	13
 16643  001AB0  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16644  001AB2  0E02               	movlw	2
 16645  001AB4  ECFA  F027         	call	_posicao_cursor_lcd
 16646                           
 16647                           ;diskio.c: 504: escreve_inteiro_lcd(buff);
 16648  001AB8  C082  F02E         	movff	sdc_disk_read@buff,escreve_inteiro_lcd@valor
 16649  001ABC  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 16650  001ABE  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 16651                           
 16652                           ;diskio.c: 505: if(buff != 0xFE)
 16653  001AC2  0EFE               	movlw	254
 16654  001AC4  0100               	movlb	0	; () banked
 16655  001AC6  1982               	xorwf	sdc_disk_read@buff& (0+255),w,b
 16656  001AC8  B4D8               	btfsc	status,2,c
 16657  001ACA  D015               	goto	l10865
 16658                           
 16659                           ; BSR set to: 0
 16660                           ;diskio.c: 506: {
 16661                           ;diskio.c: 507: posicao_cursor_lcd(2,0);
 16662  001ACC  0E00               	movlw	0
 16663  001ACE  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16664  001AD0  0E02               	movlw	2
 16665  001AD2  ECFA  F027         	call	_posicao_cursor_lcd
 16666                           
 16667                           ;diskio.c: 508: escreve_frase_ram_lcd("Aguard 0XFE     ");
 16668  001AD6  0E63               	movlw	low STR_16
 16669  001AD8  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 16670  001ADA  0E61               	movlw	high STR_16
 16671  001ADC  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 16672  001ADE  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 16673                           
 16674                           ;diskio.c: 509: posicao_cursor_lcd(2,13);
 16675  001AE2  0E0D               	movlw	13
 16676  001AE4  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16677  001AE6  0E02               	movlw	2
 16678  001AE8  ECFA  F027         	call	_posicao_cursor_lcd
 16679                           
 16680                           ;diskio.c: 510: escreve_inteiro_lcd(buff);
 16681  001AEC  C082  F02E         	movff	sdc_disk_read@buff,escreve_inteiro_lcd@valor
 16682  001AF0  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 16683  001AF2  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 16684  001AF6                     l10865:
 16685                           
 16686                           ;diskio.c: 511: }
 16687                           ;diskio.c: 513: }while(buff!=0xFE);
 16688  001AF6  0EFE               	movlw	254
 16689  001AF8  0100               	movlb	0	; () banked
 16690  001AFA  1982               	xorwf	sdc_disk_read@buff& (0+255),w,b
 16691  001AFC  A4D8               	btfss	status,2,c
 16692  001AFE  D7D3               	goto	l214
 16693                           
 16694                           ; BSR set to: 0
 16695                           ;diskio.c: 514: length = 0;
 16696                           
 16697                           ; BSR set to: 0
 16698  001B00  0E00               	movlw	0
 16699  001B02  0100               	movlb	0	; () banked
 16700  001B04  6F81               	movwf	(sdc_disk_read@length+1)& (0+255),b
 16701  001B06  0E00               	movlw	0
 16702  001B08  6F80               	movwf	sdc_disk_read@length& (0+255),b
 16703                           
 16704                           ; BSR set to: 0
 16705                           ;diskio.c: 515: _delay((unsigned long)((1)*(48000000/4000.0)));
 16706  001B0A  0E10               	movlw	16
 16707  001B0C  0100               	movlb	0	; () banked
 16708  001B0E  6F75               	movwf	??_sdc_disk_read& (0+255),b
 16709  001B10  0E94               	movlw	148
 16710  001B12                     u16917:
 16711  001B12  2EE8               	decfsz	wreg,f,c
 16712  001B14  D7FE               	bra	u16917
 16713  001B16  2F75               	decfsz	??_sdc_disk_read& (0+255),f,b
 16714  001B18  D7FC               	bra	u16917
 16715  001B1A  F000               	nop	
 16716                           
 16717                           ;diskio.c: 516: while (length < 512)
 16718  001B1C  D02C               	goto	l10879
 16719  001B1E                     l10871:
 16720                           
 16721                           ;diskio.c: 517: {
 16722                           ;diskio.c: 518: p_buff[length] = response();
 16723  001B1E  ECC0  F02B         	call	_response	;wreg free
 16724  001B22  0100               	movlb	0	; () banked
 16725  001B24  6F75               	movwf	??_sdc_disk_read& (0+255),b
 16726  001B26  0100               	movlb	0	; () banked
 16727  001B28  5180               	movf	sdc_disk_read@length& (0+255),w,b
 16728  001B2A  0100               	movlb	0	; () banked
 16729  001B2C  256E               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 16730  001B2E  6ED9               	movwf	fsr2l,c
 16731  001B30  0100               	movlb	0	; () banked
 16732  001B32  5181               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 16733  001B34  0100               	movlb	0	; () banked
 16734  001B36  216F               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 16735  001B38  6EDA               	movwf	fsr2h,c
 16736  001B3A  C075  FFDF         	movff	??_sdc_disk_read,indf2
 16737                           
 16738                           ; BSR set to: 0
 16739                           ;diskio.c: 519: posicao_cursor_lcd(1,0);
 16740  001B3E  0E00               	movlw	0
 16741  001B40  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16742  001B42  0E01               	movlw	1
 16743  001B44  ECFA  F027         	call	_posicao_cursor_lcd
 16744                           
 16745                           ;diskio.c: 520: escreve_frase_ram_lcd(p_buff[length]);
 16746  001B48  0100               	movlb	0	; () banked
 16747  001B4A  5180               	movf	sdc_disk_read@length& (0+255),w,b
 16748  001B4C  0100               	movlb	0	; () banked
 16749  001B4E  256E               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 16750  001B50  6ED9               	movwf	fsr2l,c
 16751  001B52  0100               	movlb	0	; () banked
 16752  001B54  5181               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 16753  001B56  0100               	movlb	0	; () banked
 16754  001B58  216F               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 16755  001B5A  6EDA               	movwf	fsr2h,c
 16756  001B5C  50DF               	movf	indf2,w,c
 16757  001B5E  0100               	movlb	0	; () banked
 16758  001B60  6F75               	movwf	??_sdc_disk_read& (0+255),b
 16759  001B62  6B76               	clrf	(??_sdc_disk_read+1)& (0+255),b
 16760  001B64  C075  F019         	movff	??_sdc_disk_read,escreve_frase_ram_lcd@buffer
 16761  001B68  C076  F01A         	movff	??_sdc_disk_read+1,escreve_frase_ram_lcd@buffer+1
 16762  001B6C  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 16763                           
 16764                           ;diskio.c: 521: length++;
 16765  001B70  0100               	movlb	0	; () banked
 16766  001B72  4B80               	infsnz	sdc_disk_read@length& (0+255),f,b
 16767  001B74  2B81               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 16768  001B76                     l10879:
 16769  001B76  0100               	movlb	0	; () banked
 16770  001B78  BF81               	btfsc	(sdc_disk_read@length+1)& (0+255),7,b
 16771  001B7A  D7D1               	goto	l10871
 16772  001B7C  0E02               	movlw	2
 16773  001B7E  0100               	movlb	0	; () banked
 16774  001B80  5D81               	subwf	(sdc_disk_read@length+1)& (0+255),w,b
 16775  001B82  A0D8               	btfss	status,0,c
 16776  001B84  D7CC               	goto	l10871
 16777                           
 16778                           ; BSR set to: 0
 16779                           ;diskio.c: 522: }
 16780                           ;diskio.c: 523: LATBbits.LATB4 = 0;
 16781  001B86  988A               	bcf	3978,4,c	;volatile
 16782                           
 16783                           ; BSR set to: 0
 16784                           ;diskio.c: 524: length = 0;
 16785  001B88  0E00               	movlw	0
 16786  001B8A  0100               	movlb	0	; () banked
 16787  001B8C  6F81               	movwf	(sdc_disk_read@length+1)& (0+255),b
 16788  001B8E  0E00               	movlw	0
 16789  001B90  6F80               	movwf	sdc_disk_read@length& (0+255),b
 16790                           
 16791                           ; BSR set to: 0
 16792                           ;diskio.c: 525: dummy_clocks(10);
 16793  001B92  0E0A               	movlw	10
 16794  001B94  ECEF  F028         	call	_dummy_clocks
 16795                           
 16796                           ;diskio.c: 526: command(0X4C,0X00000000,0X00);
 16797  001B98  0E00               	movlw	0
 16798  001B9A  0100               	movlb	0	; () banked
 16799  001B9C  6F67               	movwf	command@arg& (0+255),b
 16800  001B9E  0E00               	movlw	0
 16801  001BA0  6F68               	movwf	(command@arg+1)& (0+255),b
 16802  001BA2  0E00               	movlw	0
 16803  001BA4  6F69               	movwf	(command@arg+2)& (0+255),b
 16804  001BA6  0E00               	movlw	0
 16805  001BA8  6F6A               	movwf	(command@arg+3)& (0+255),b
 16806  001BAA  0E00               	movlw	0
 16807  001BAC  0100               	movlb	0	; () banked
 16808  001BAE  6F6B               	movwf	command@CRC& (0+255),b
 16809  001BB0  0E4C               	movlw	76
 16810  001BB2  ECB2  F029         	call	_command
 16811                           
 16812                           ;diskio.c: 527: LATBbits.LATB4 = 1;
 16813  001BB6  888A               	bsf	3978,4,c	;volatile
 16814                           
 16815                           ;diskio.c: 529: proceed();
 16816  001BB8  ECB9  F02B         	call	_proceed	;wreg free
 16817  001BBC                     l10891:
 16818                           
 16819                           ;diskio.c: 531: buff = response();
 16820  001BBC  ECC0  F02B         	call	_response	;wreg free
 16821  001BC0  0100               	movlb	0	; () banked
 16822  001BC2  6F82               	movwf	sdc_disk_read@buff& (0+255),b
 16823                           
 16824                           ; BSR set to: 0
 16825                           ;diskio.c: 532: posicao_cursor_lcd(1,0);
 16826  001BC4  0E00               	movlw	0
 16827  001BC6  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16828  001BC8  0E01               	movlw	1
 16829  001BCA  ECFA  F027         	call	_posicao_cursor_lcd
 16830                           
 16831                           ;diskio.c: 533: escreve_frase_ram_lcd("aguard 0xFF       ");
 16832  001BCE  0ED8               	movlw	low STR_17
 16833  001BD0  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 16834  001BD2  0E60               	movlw	high STR_17
 16835  001BD4  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 16836  001BD6  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 16837                           
 16838                           ;diskio.c: 534: posicao_cursor_lcd(1,13);
 16839  001BDA  0E0D               	movlw	13
 16840  001BDC  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16841  001BDE  0E01               	movlw	1
 16842  001BE0  ECFA  F027         	call	_posicao_cursor_lcd
 16843                           
 16844                           ;diskio.c: 535: escreve_inteiro_lcd(buff);
 16845  001BE4  C082  F02E         	movff	sdc_disk_read@buff,escreve_inteiro_lcd@valor
 16846  001BE8  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 16847  001BEA  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 16848                           
 16849                           ;diskio.c: 538: }while(buff!=0xFF);
 16850  001BEE  0100               	movlb	0	; () banked
 16851  001BF0  2982               	incf	sdc_disk_read@buff& (0+255),w,b
 16852  001BF2  A4D8               	btfss	status,2,c
 16853  001BF4  D7E3               	goto	l10891
 16854                           
 16855                           ; BSR set to: 0
 16856                           ;diskio.c: 540: _delay((unsigned long)((500)*(48000000/4000.0)));
 16857                           
 16858                           ; BSR set to: 0
 16859  001BF6  0E1F               	movlw	31
 16860  001BF8  0100               	movlb	0	; () banked
 16861  001BFA  6F76               	movwf	(??_sdc_disk_read+1)& (0+255),b
 16862  001BFC  0E71               	movlw	113
 16863  001BFE  0100               	movlb	0	; () banked
 16864  001C00  6F75               	movwf	??_sdc_disk_read& (0+255),b
 16865  001C02  0E1E               	movlw	30
 16866  001C04                     u16927:
 16867  001C04  2EE8               	decfsz	wreg,f,c
 16868  001C06  D7FE               	bra	u16927
 16869  001C08  2F75               	decfsz	??_sdc_disk_read& (0+255),f,b
 16870  001C0A  D7FC               	bra	u16927
 16871  001C0C  2F76               	decfsz	(??_sdc_disk_read+1)& (0+255),f,b
 16872  001C0E  D7FA               	bra	u16927
 16873  001C10  F000               	nop	
 16874                           
 16875                           ;diskio.c: 541: length = 0;
 16876  001C12  0E00               	movlw	0
 16877  001C14  0100               	movlb	0	; () banked
 16878  001C16  6F81               	movwf	(sdc_disk_read@length+1)& (0+255),b
 16879  001C18  0E00               	movlw	0
 16880  001C1A  6F80               	movwf	sdc_disk_read@length& (0+255),b
 16881                           
 16882                           ;diskio.c: 542: while(p_buff[length]!='\0')
 16883  001C1C  D026               	goto	l10917
 16884  001C1E                     l10907:
 16885                           
 16886                           ; BSR set to: 0
 16887                           ;diskio.c: 543: {
 16888                           ;diskio.c: 545: posicao_cursor_lcd(1,0);
 16889  001C1E  0E00               	movlw	0
 16890  001C20  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16891  001C22  0E01               	movlw	1
 16892  001C24  ECFA  F027         	call	_posicao_cursor_lcd
 16893                           
 16894                           ;diskio.c: 546: escreve_frase_ram_lcd("\0 ->         ");
 16895  001C28  0EF5               	movlw	low STR_18
 16896  001C2A  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 16897  001C2C  0E61               	movlw	high STR_18
 16898  001C2E  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 16899  001C30  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 16900                           
 16901                           ;diskio.c: 547: posicao_cursor_lcd(1,14);
 16902  001C34  0E0E               	movlw	14
 16903  001C36  6E19               	movwf	posicao_cursor_lcd@coluna,c
 16904  001C38  0E01               	movlw	1
 16905  001C3A  ECFA  F027         	call	_posicao_cursor_lcd
 16906                           
 16907                           ;diskio.c: 548: escreve_inteiro_lcd(p_buff[length]);
 16908  001C3E  0100               	movlb	0	; () banked
 16909  001C40  5180               	movf	sdc_disk_read@length& (0+255),w,b
 16910  001C42  0100               	movlb	0	; () banked
 16911  001C44  256E               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 16912  001C46  6ED9               	movwf	fsr2l,c
 16913  001C48  0100               	movlb	0	; () banked
 16914  001C4A  5181               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 16915  001C4C  0100               	movlb	0	; () banked
 16916  001C4E  216F               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 16917  001C50  6EDA               	movwf	fsr2h,c
 16918  001C52  50DF               	movf	indf2,w,c
 16919  001C54  0100               	movlb	0	; () banked
 16920  001C56  6F75               	movwf	??_sdc_disk_read& (0+255),b
 16921  001C58  0100               	movlb	0	; () banked
 16922  001C5A  5175               	movf	??_sdc_disk_read& (0+255),w,b
 16923  001C5C  6E2E               	movwf	escreve_inteiro_lcd@valor,c
 16924  001C5E  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 16925  001C60  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 16926                           
 16927                           ;diskio.c: 549: length++;
 16928  001C64  0100               	movlb	0	; () banked
 16929  001C66  4B80               	infsnz	sdc_disk_read@length& (0+255),f,b
 16930  001C68  2B81               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 16931  001C6A                     l10917:
 16932                           
 16933                           ; BSR set to: 0
 16934  001C6A  0100               	movlb	0	; () banked
 16935  001C6C  5180               	movf	sdc_disk_read@length& (0+255),w,b
 16936  001C6E  0100               	movlb	0	; () banked
 16937  001C70  256E               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 16938  001C72  6ED9               	movwf	fsr2l,c
 16939  001C74  0100               	movlb	0	; () banked
 16940  001C76  5181               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 16941  001C78  0100               	movlb	0	; () banked
 16942  001C7A  216F               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 16943  001C7C  6EDA               	movwf	fsr2h,c
 16944  001C7E  50DF               	movf	indf2,w,c
 16945  001C80  A4D8               	btfss	status,2,c
 16946  001C82  D7CD               	goto	l10907
 16947                           
 16948                           ; BSR set to: 0
 16949                           ;diskio.c: 550: }
 16950                           ;diskio.c: 551: *p_buff = length;
 16951                           
 16952                           ; BSR set to: 0
 16953  001C84  C06E  FFD9         	movff	sdc_disk_read@p_buff,fsr2l
 16954  001C88  C06F  FFDA         	movff	sdc_disk_read@p_buff+1,fsr2h
 16955  001C8C  C080  FFDF         	movff	sdc_disk_read@length,indf2
 16956                           
 16957                           ; BSR set to: 0
 16958                           ;diskio.c: 554: return RES_OK;
 16959  001C90  0E00               	movlw	0
 16960                           
 16961                           ; BSR set to: 0
 16962  001C92  0012               	return	
 16963  001C94                     l10927:
 16964                           
 16965                           ; BSR set to: 0
 16966                           ;diskio.c: 556: else
 16967                           ;diskio.c: 557: {
 16968                           ;diskio.c: 558: start_add = (sector*512);
 16969  001C94  C070  F075         	movff	sdc_disk_read@sector,??_sdc_disk_read
 16970  001C98  C071  F076         	movff	sdc_disk_read@sector+1,??_sdc_disk_read+1
 16971  001C9C  C072  F077         	movff	sdc_disk_read@sector+2,??_sdc_disk_read+2
 16972  001CA0  C073  F078         	movff	sdc_disk_read@sector+3,??_sdc_disk_read+3
 16973  001CA4  0E09               	movlw	9
 16974  001CA6                     u11985:
 16975  001CA6  90D8               	bcf	status,0,c
 16976  001CA8  0100               	movlb	0	; () banked
 16977  001CAA  3775               	rlcf	??_sdc_disk_read& (0+255),f,b
 16978  001CAC  3776               	rlcf	(??_sdc_disk_read+1)& (0+255),f,b
 16979  001CAE  3777               	rlcf	(??_sdc_disk_read+2)& (0+255),f,b
 16980  001CB0  3778               	rlcf	(??_sdc_disk_read+3)& (0+255),f,b
 16981  001CB2  2EE8               	decfsz	wreg,f,c
 16982  001CB4  D7F8               	goto	u11985
 16983  001CB6  C075  F07C         	movff	??_sdc_disk_read,sdc_disk_read@start_add
 16984  001CBA  C076  F07D         	movff	??_sdc_disk_read+1,sdc_disk_read@start_add+1
 16985  001CBE  C077  F07E         	movff	??_sdc_disk_read+2,sdc_disk_read@start_add+2
 16986  001CC2  C078  F07F         	movff	??_sdc_disk_read+3,sdc_disk_read@start_add+3
 16987                           
 16988                           ; BSR set to: 0
 16989                           ;diskio.c: 560: length = 0;
 16990  001CC6  0E00               	movlw	0
 16991  001CC8  0100               	movlb	0	; () banked
 16992  001CCA  6F81               	movwf	(sdc_disk_read@length+1)& (0+255),b
 16993  001CCC  0E00               	movlw	0
 16994  001CCE  6F80               	movwf	sdc_disk_read@length& (0+255),b
 16995                           
 16996                           ;diskio.c: 561: while(length<512)
 16997  001CD0  D00F               	goto	l10935
 16998  001CD2                     l10931:
 16999                           
 17000                           ; BSR set to: 0
 17001                           ;diskio.c: 562: {
 17002                           ;diskio.c: 563: p_buff[length] = 0;
 17003  001CD2  0100               	movlb	0	; () banked
 17004  001CD4  5180               	movf	sdc_disk_read@length& (0+255),w,b
 17005  001CD6  0100               	movlb	0	; () banked
 17006  001CD8  256E               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 17007  001CDA  6ED9               	movwf	fsr2l,c
 17008  001CDC  0100               	movlb	0	; () banked
 17009  001CDE  5181               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 17010  001CE0  0100               	movlb	0	; () banked
 17011  001CE2  216F               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 17012  001CE4  6EDA               	movwf	fsr2h,c
 17013  001CE6  0E00               	movlw	0
 17014  001CE8  6EDF               	movwf	indf2,c
 17015                           
 17016                           ; BSR set to: 0
 17017                           ;diskio.c: 564: length++;
 17018  001CEA  0100               	movlb	0	; () banked
 17019  001CEC  4B80               	infsnz	sdc_disk_read@length& (0+255),f,b
 17020  001CEE  2B81               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 17021  001CF0                     l10935:
 17022                           
 17023                           ; BSR set to: 0
 17024  001CF0  0100               	movlb	0	; () banked
 17025  001CF2  BF81               	btfsc	(sdc_disk_read@length+1)& (0+255),7,b
 17026  001CF4  D7EE               	goto	l10931
 17027  001CF6  0E02               	movlw	2
 17028  001CF8  0100               	movlb	0	; () banked
 17029  001CFA  5D81               	subwf	(sdc_disk_read@length+1)& (0+255),w,b
 17030  001CFC  A0D8               	btfss	status,0,c
 17031  001CFE  D7E9               	goto	l10931
 17032                           
 17033                           ; BSR set to: 0
 17034                           ;diskio.c: 565: }
 17035                           ;diskio.c: 566: _delay((unsigned long)((1000)*(48000000/4000.0)));
 17036                           
 17037                           ; BSR set to: 0
 17038  001D00  0E3D               	movlw	61
 17039  001D02  0100               	movlb	0	; () banked
 17040  001D04  6F76               	movwf	(??_sdc_disk_read+1)& (0+255),b
 17041  001D06  0EE1               	movlw	225
 17042  001D08  0100               	movlb	0	; () banked
 17043  001D0A  6F75               	movwf	??_sdc_disk_read& (0+255),b
 17044  001D0C  0E3F               	movlw	63
 17045  001D0E                     u16937:
 17046  001D0E  2EE8               	decfsz	wreg,f,c
 17047  001D10  D7FE               	bra	u16937
 17048  001D12  2F75               	decfsz	??_sdc_disk_read& (0+255),f,b
 17049  001D14  D7FC               	bra	u16937
 17050  001D16  2F76               	decfsz	(??_sdc_disk_read+1)& (0+255),f,b
 17051  001D18  D7FA               	bra	u16937
 17052  001D1A  D000               	nop2	
 17053                           
 17054                           ;diskio.c: 567: dummy_clocks(10);
 17055  001D1C  0E0A               	movlw	10
 17056  001D1E  ECEF  F028         	call	_dummy_clocks
 17057                           
 17058                           ;diskio.c: 569: command(0X51,start_add,0X00);
 17059  001D22  C07C  F067         	movff	sdc_disk_read@start_add,command@arg
 17060  001D26  C07D  F068         	movff	sdc_disk_read@start_add+1,command@arg+1
 17061  001D2A  C07E  F069         	movff	sdc_disk_read@start_add+2,command@arg+2
 17062  001D2E  C07F  F06A         	movff	sdc_disk_read@start_add+3,command@arg+3
 17063  001D32  0E00               	movlw	0
 17064  001D34  0100               	movlb	0	; () banked
 17065  001D36  6F6B               	movwf	command@CRC& (0+255),b
 17066  001D38  0E51               	movlw	81
 17067  001D3A  ECB2  F029         	call	_command
 17068                           
 17069                           ;diskio.c: 570: proceed();
 17070  001D3E  ECB9  F02B         	call	_proceed	;wreg free
 17071  001D42                     l10945:
 17072                           
 17073                           ;diskio.c: 572: buff = response();
 17074  001D42  ECC0  F02B         	call	_response	;wreg free
 17075  001D46  0100               	movlb	0	; () banked
 17076  001D48  6F82               	movwf	sdc_disk_read@buff& (0+255),b
 17077                           
 17078                           ; BSR set to: 0
 17079                           ;diskio.c: 573: posicao_cursor_lcd(1,0);
 17080  001D4A  0E00               	movlw	0
 17081  001D4C  6E19               	movwf	posicao_cursor_lcd@coluna,c
 17082  001D4E  0E01               	movlw	1
 17083  001D50  ECFA  F027         	call	_posicao_cursor_lcd
 17084                           
 17085                           ;diskio.c: 574: escreve_frase_ram_lcd("aguard 0x00    ");
 17086  001D54  0EC5               	movlw	low STR_19
 17087  001D56  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 17088  001D58  0E61               	movlw	high STR_19
 17089  001D5A  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 17090  001D5C  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 17091                           
 17092                           ;diskio.c: 575: posicao_cursor_lcd(1,13);
 17093  001D60  0E0D               	movlw	13
 17094  001D62  6E19               	movwf	posicao_cursor_lcd@coluna,c
 17095  001D64  0E01               	movlw	1
 17096  001D66  ECFA  F027         	call	_posicao_cursor_lcd
 17097                           
 17098                           ;diskio.c: 576: escreve_inteiro_lcd(buff);
 17099  001D6A  C082  F02E         	movff	sdc_disk_read@buff,escreve_inteiro_lcd@valor
 17100  001D6E  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 17101  001D70  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 17102                           
 17103                           ;diskio.c: 577: }while(buff!=0x00);
 17104  001D74  0100               	movlb	0	; () banked
 17105  001D76  5182               	movf	sdc_disk_read@buff& (0+255),w,b
 17106  001D78  0100               	movlb	0	; () banked
 17107  001D7A  A4D8               	btfss	status,2,c
 17108  001D7C  D7E2               	goto	l10945
 17109  001D7E                     l10957:
 17110                           
 17111                           ; BSR set to: 0
 17112                           ;diskio.c: 579: buff = response();
 17113  001D7E  ECC0  F02B         	call	_response	;wreg free
 17114  001D82  0100               	movlb	0	; () banked
 17115  001D84  6F82               	movwf	sdc_disk_read@buff& (0+255),b
 17116                           
 17117                           ; BSR set to: 0
 17118                           ;diskio.c: 580: posicao_cursor_lcd(1,0);
 17119  001D86  0E00               	movlw	0
 17120  001D88  6E19               	movwf	posicao_cursor_lcd@coluna,c
 17121  001D8A  0E01               	movlw	1
 17122  001D8C  ECFA  F027         	call	_posicao_cursor_lcd
 17123                           
 17124                           ;diskio.c: 581: escreve_frase_ram_lcd("aguard 0xFE    ");
 17125  001D90  0ED5               	movlw	low STR_20
 17126  001D92  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 17127  001D94  0E61               	movlw	high STR_20
 17128  001D96  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 17129  001D98  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 17130                           
 17131                           ;diskio.c: 582: posicao_cursor_lcd(1,13);
 17132  001D9C  0E0D               	movlw	13
 17133  001D9E  6E19               	movwf	posicao_cursor_lcd@coluna,c
 17134  001DA0  0E01               	movlw	1
 17135  001DA2  ECFA  F027         	call	_posicao_cursor_lcd
 17136                           
 17137                           ;diskio.c: 583: escreve_inteiro_lcd(buff);
 17138  001DA6  C082  F02E         	movff	sdc_disk_read@buff,escreve_inteiro_lcd@valor
 17139  001DAA  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 17140  001DAC  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 17141                           
 17142                           ;diskio.c: 584: }while(buff!=0xFE);
 17143  001DB0  0EFE               	movlw	254
 17144  001DB2  0100               	movlb	0	; () banked
 17145  001DB4  1982               	xorwf	sdc_disk_read@buff& (0+255),w,b
 17146  001DB6  A4D8               	btfss	status,2,c
 17147  001DB8  D7E2               	goto	l10957
 17148                           
 17149                           ; BSR set to: 0
 17150                           ;diskio.c: 586: length = 0;
 17151                           
 17152                           ; BSR set to: 0
 17153  001DBA  0E00               	movlw	0
 17154  001DBC  0100               	movlb	0	; () banked
 17155  001DBE  6F81               	movwf	(sdc_disk_read@length+1)& (0+255),b
 17156  001DC0  0E00               	movlw	0
 17157  001DC2  6F80               	movwf	sdc_disk_read@length& (0+255),b
 17158                           
 17159                           ;diskio.c: 587: while ( length < 512 )
 17160  001DC4  D05E               	goto	l10993
 17161  001DC6                     l10971:
 17162                           
 17163                           ; BSR set to: 0
 17164                           ;diskio.c: 590: {
 17165                           ;diskio.c: 591: p_buff[length] = response();
 17166  001DC6  ECC0  F02B         	call	_response	;wreg free
 17167  001DCA  0100               	movlb	0	; () banked
 17168  001DCC  6F75               	movwf	??_sdc_disk_read& (0+255),b
 17169  001DCE  0100               	movlb	0	; () banked
 17170  001DD0  5180               	movf	sdc_disk_read@length& (0+255),w,b
 17171  001DD2  0100               	movlb	0	; () banked
 17172  001DD4  256E               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 17173  001DD6  6ED9               	movwf	fsr2l,c
 17174  001DD8  0100               	movlb	0	; () banked
 17175  001DDA  5181               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 17176  001DDC  0100               	movlb	0	; () banked
 17177  001DDE  216F               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 17178  001DE0  6EDA               	movwf	fsr2h,c
 17179  001DE2  C075  FFDF         	movff	??_sdc_disk_read,indf2
 17180                           
 17181                           ; BSR set to: 0
 17182                           ;diskio.c: 592: length++;
 17183  001DE6  0100               	movlb	0	; () banked
 17184  001DE8  4B80               	infsnz	sdc_disk_read@length& (0+255),f,b
 17185  001DEA  2B81               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 17186  001DEC                     l10975:
 17187                           
 17188                           ; BSR set to: 0
 17189  001DEC  0100               	movlb	0	; () banked
 17190  001DEE  077A               	decf	sdc_disk_read@offset& (0+255),f,b
 17191  001DF0  A0D8               	btfss	status,0,c
 17192  001DF2  077B               	decf	(sdc_disk_read@offset+1)& (0+255),f,b
 17193  001DF4  0100               	movlb	0	; () banked
 17194  001DF6  297A               	incf	sdc_disk_read@offset& (0+255),w,b
 17195  001DF8  E1E6               	bnz	l10971
 17196  001DFA  0100               	movlb	0	; () banked
 17197  001DFC  297B               	incf	(sdc_disk_read@offset+1)& (0+255),w,b
 17198  001DFE  B4D8               	btfsc	status,2,c
 17199  001E00  D01E               	goto	l10985
 17200  001E02  D7E1               	goto	l10971
 17201  001E04                     l10977:
 17202                           
 17203                           ; BSR set to: 0
 17204                           ;diskio.c: 595: {
 17205                           ;diskio.c: 596: *p_buff = response();
 17206  001E04  ECC0  F02B         	call	_response	;wreg free
 17207  001E08  C06E  FFD9         	movff	sdc_disk_read@p_buff,fsr2l
 17208  001E0C  C06F  FFDA         	movff	sdc_disk_read@p_buff+1,fsr2h
 17209  001E10  6EDF               	movwf	indf2,c
 17210                           
 17211                           ;diskio.c: 597: p_buff[length] = *p_buff;
 17212  001E12  C06E  FFD9         	movff	sdc_disk_read@p_buff,fsr2l
 17213  001E16  C06F  FFDA         	movff	sdc_disk_read@p_buff+1,fsr2h
 17214  001E1A  0100               	movlb	0	; () banked
 17215  001E1C  5180               	movf	sdc_disk_read@length& (0+255),w,b
 17216  001E1E  0100               	movlb	0	; () banked
 17217  001E20  256E               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 17218  001E22  6EE1               	movwf	fsr1l,c
 17219  001E24  0100               	movlb	0	; () banked
 17220  001E26  5181               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 17221  001E28  0100               	movlb	0	; () banked
 17222  001E2A  216F               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 17223  001E2C  6EE2               	movwf	fsr1h,c
 17224  001E2E  CFDF FFE7          	movff	indf2,indf1
 17225                           
 17226                           ; BSR set to: 0
 17227                           ;diskio.c: 598: p_buff++;
 17228  001E32  0100               	movlb	0	; () banked
 17229  001E34  4B6E               	infsnz	sdc_disk_read@p_buff& (0+255),f,b
 17230  001E36  2B6F               	incf	(sdc_disk_read@p_buff+1)& (0+255),f,b
 17231                           
 17232                           ; BSR set to: 0
 17233                           ;diskio.c: 599: length++;
 17234  001E38  0100               	movlb	0	; () banked
 17235  001E3A  4B80               	infsnz	sdc_disk_read@length& (0+255),f,b
 17236  001E3C  2B81               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 17237  001E3E                     l10985:
 17238                           
 17239                           ; BSR set to: 0
 17240  001E3E  0100               	movlb	0	; () banked
 17241  001E40  0774               	decf	sdc_disk_read@count& (0+255),f,b
 17242  001E42  0100               	movlb	0	; () banked
 17243  001E44  2974               	incf	sdc_disk_read@count& (0+255),w,b
 17244  001E46  B4D8               	btfsc	status,2,c
 17245  001E48  D014               	goto	l10991
 17246  001E4A  D7DC               	goto	l10977
 17247  001E4C                     l10987:
 17248                           
 17249                           ; BSR set to: 0
 17250                           ;diskio.c: 602: {
 17251                           ;diskio.c: 603: p_buff[length] = response();
 17252  001E4C  ECC0  F02B         	call	_response	;wreg free
 17253  001E50  0100               	movlb	0	; () banked
 17254  001E52  6F75               	movwf	??_sdc_disk_read& (0+255),b
 17255  001E54  0100               	movlb	0	; () banked
 17256  001E56  5180               	movf	sdc_disk_read@length& (0+255),w,b
 17257  001E58  0100               	movlb	0	; () banked
 17258  001E5A  256E               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 17259  001E5C  6ED9               	movwf	fsr2l,c
 17260  001E5E  0100               	movlb	0	; () banked
 17261  001E60  5181               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 17262  001E62  0100               	movlb	0	; () banked
 17263  001E64  216F               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 17264  001E66  6EDA               	movwf	fsr2h,c
 17265  001E68  C075  FFDF         	movff	??_sdc_disk_read,indf2
 17266                           
 17267                           ; BSR set to: 0
 17268                           ;diskio.c: 604: length++;
 17269  001E6C  0100               	movlb	0	; () banked
 17270  001E6E  4B80               	infsnz	sdc_disk_read@length& (0+255),f,b
 17271  001E70  2B81               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 17272  001E72                     l10991:
 17273                           
 17274                           ; BSR set to: 0
 17275  001E72  0100               	movlb	0	; () banked
 17276  001E74  BF81               	btfsc	(sdc_disk_read@length+1)& (0+255),7,b
 17277  001E76  D7EA               	goto	l10987
 17278  001E78  0E02               	movlw	2
 17279  001E7A  0100               	movlb	0	; () banked
 17280  001E7C  5D81               	subwf	(sdc_disk_read@length+1)& (0+255),w,b
 17281  001E7E  A0D8               	btfss	status,0,c
 17282  001E80  D7E5               	goto	l10987
 17283  001E82                     l10993:
 17284                           
 17285                           ; BSR set to: 0
 17286  001E82  0100               	movlb	0	; () banked
 17287  001E84  BF81               	btfsc	(sdc_disk_read@length+1)& (0+255),7,b
 17288  001E86  D7B2               	goto	l10975
 17289  001E88  0E02               	movlw	2
 17290  001E8A  0100               	movlb	0	; () banked
 17291  001E8C  5D81               	subwf	(sdc_disk_read@length+1)& (0+255),w,b
 17292  001E8E  A0D8               	btfss	status,0,c
 17293  001E90  D7AD               	goto	l10975
 17294                           
 17295                           ; BSR set to: 0
 17296                           ;diskio.c: 605: }
 17297                           ;diskio.c: 606: }
 17298                           ;diskio.c: 607: _delay((unsigned long)((1000)*(48000000/4000.0)));
 17299                           
 17300                           ; BSR set to: 0
 17301  001E92  0E3D               	movlw	61
 17302  001E94  0100               	movlb	0	; () banked
 17303  001E96  6F76               	movwf	(??_sdc_disk_read+1)& (0+255),b
 17304  001E98  0EE1               	movlw	225
 17305  001E9A  0100               	movlb	0	; () banked
 17306  001E9C  6F75               	movwf	??_sdc_disk_read& (0+255),b
 17307  001E9E  0E3F               	movlw	63
 17308  001EA0                     u16947:
 17309  001EA0  2EE8               	decfsz	wreg,f,c
 17310  001EA2  D7FE               	bra	u16947
 17311  001EA4  2F75               	decfsz	??_sdc_disk_read& (0+255),f,b
 17312  001EA6  D7FC               	bra	u16947
 17313  001EA8  2F76               	decfsz	(??_sdc_disk_read+1)& (0+255),f,b
 17314  001EAA  D7FA               	bra	u16947
 17315  001EAC  D000               	nop2	
 17316                           
 17317                           ;diskio.c: 610: command(0X4C,0X00000000,0X00);
 17318  001EAE  0E00               	movlw	0
 17319  001EB0  0100               	movlb	0	; () banked
 17320  001EB2  6F67               	movwf	command@arg& (0+255),b
 17321  001EB4  0E00               	movlw	0
 17322  001EB6  6F68               	movwf	(command@arg+1)& (0+255),b
 17323  001EB8  0E00               	movlw	0
 17324  001EBA  6F69               	movwf	(command@arg+2)& (0+255),b
 17325  001EBC  0E00               	movlw	0
 17326  001EBE  6F6A               	movwf	(command@arg+3)& (0+255),b
 17327  001EC0  0E00               	movlw	0
 17328  001EC2  0100               	movlb	0	; () banked
 17329  001EC4  6F6B               	movwf	command@CRC& (0+255),b
 17330  001EC6  0E4C               	movlw	76
 17331  001EC8  ECB2  F029         	call	_command
 17332                           
 17333                           ;diskio.c: 611: proceed();
 17334  001ECC  ECB9  F02B         	call	_proceed	;wreg free
 17335  001ED0                     l11001:
 17336                           
 17337                           ;diskio.c: 613: buff = response();
 17338  001ED0  ECC0  F02B         	call	_response	;wreg free
 17339  001ED4  0100               	movlb	0	; () banked
 17340  001ED6  6F82               	movwf	sdc_disk_read@buff& (0+255),b
 17341                           
 17342                           ; BSR set to: 0
 17343                           ;diskio.c: 614: posicao_cursor_lcd(1,0);
 17344  001ED8  0E00               	movlw	0
 17345  001EDA  6E19               	movwf	posicao_cursor_lcd@coluna,c
 17346  001EDC  0E01               	movlw	1
 17347  001EDE  ECFA  F027         	call	_posicao_cursor_lcd
 17348                           
 17349                           ;diskio.c: 615: escreve_frase_ram_lcd("aguard 0xFF       ");
 17350  001EE2  0ED8               	movlw	low STR_17
 17351  001EE4  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 17352  001EE6  0E60               	movlw	high STR_17
 17353  001EE8  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 17354  001EEA  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 17355                           
 17356                           ;diskio.c: 616: posicao_cursor_lcd(1,13);
 17357  001EEE  0E0D               	movlw	13
 17358  001EF0  6E19               	movwf	posicao_cursor_lcd@coluna,c
 17359  001EF2  0E01               	movlw	1
 17360  001EF4  ECFA  F027         	call	_posicao_cursor_lcd
 17361                           
 17362                           ;diskio.c: 617: escreve_inteiro_lcd(buff);
 17363  001EF8  C082  F02E         	movff	sdc_disk_read@buff,escreve_inteiro_lcd@valor
 17364  001EFC  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 17365  001EFE  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 17366                           
 17367                           ;diskio.c: 618: }while(buff!=0xFF);
 17368  001F02  0100               	movlb	0	; () banked
 17369  001F04  2982               	incf	sdc_disk_read@buff& (0+255),w,b
 17370  001F06  A4D8               	btfss	status,2,c
 17371  001F08  D7E3               	goto	l11001
 17372                           
 17373                           ; BSR set to: 0
 17374                           ;diskio.c: 620: length = 0;
 17375                           
 17376                           ; BSR set to: 0
 17377  001F0A  0E00               	movlw	0
 17378  001F0C  0100               	movlb	0	; () banked
 17379  001F0E  6F81               	movwf	(sdc_disk_read@length+1)& (0+255),b
 17380  001F10  0E00               	movlw	0
 17381  001F12  6F80               	movwf	sdc_disk_read@length& (0+255),b
 17382                           
 17383                           ; BSR set to: 0
 17384                           ;diskio.c: 625: _delay((unsigned long)((2000)*(48000000/4000.0)));
 17385  001F14  0E7A               	movlw	122
 17386  001F16  0100               	movlb	0	; () banked
 17387  001F18  6F76               	movwf	(??_sdc_disk_read+1)& (0+255),b
 17388  001F1A  0EC1               	movlw	193
 17389  001F1C  0100               	movlb	0	; () banked
 17390  001F1E  6F75               	movwf	??_sdc_disk_read& (0+255),b
 17391  001F20  0E81               	movlw	129
 17392  001F22                     u16957:
 17393  001F22  2EE8               	decfsz	wreg,f,c
 17394  001F24  D7FE               	bra	u16957
 17395  001F26  2F75               	decfsz	??_sdc_disk_read& (0+255),f,b
 17396  001F28  D7FC               	bra	u16957
 17397  001F2A  2F76               	decfsz	(??_sdc_disk_read+1)& (0+255),f,b
 17398  001F2C  D7FA               	bra	u16957
 17399  001F2E  D000               	nop2	
 17400                           
 17401                           ;diskio.c: 626: return RES_OK;
 17402  001F30  0E00               	movlw	0
 17403  001F32  0012               	return	
 17404                           
 17405                           ;diskio.c: 627: }
 17406                           ;diskio.c: 628: _delay((unsigned long)((2000)*(48000000/4000.0)));
 17407  001F34  0E7A               	movlw	122
 17408  001F36  0100               	movlb	0	; () banked
 17409  001F38  6F76               	movwf	(??_sdc_disk_read+1)& (0+255),b
 17410  001F3A  0EC1               	movlw	193
 17411  001F3C  0100               	movlb	0	; () banked
 17412  001F3E  6F75               	movwf	??_sdc_disk_read& (0+255),b
 17413  001F40  0E81               	movlw	129
 17414  001F42                     u16967:
 17415  001F42  2EE8               	decfsz	wreg,f,c
 17416  001F44  D7FE               	bra	u16967
 17417  001F46  2F75               	decfsz	??_sdc_disk_read& (0+255),f,b
 17418  001F48  D7FC               	bra	u16967
 17419  001F4A  2F76               	decfsz	(??_sdc_disk_read+1)& (0+255),f,b
 17420  001F4C  D7FA               	bra	u16967
 17421  001F4E  D000               	nop2	
 17422  001F50  0012               	return		;funcret
 17423  001F52                     __end_of_sdc_disk_read:
 17424                           	opt stack 0
 17425                           tosu	equ	0xFFF
 17426                           tosh	equ	0xFFE
 17427                           tosl	equ	0xFFD
 17428                           pclath	equ	0xFFA
 17429                           tblptru	equ	0xFF8
 17430                           tblptrh	equ	0xFF7
 17431                           tblptrl	equ	0xFF6
 17432                           tablat	equ	0xFF5
 17433                           prodh	equ	0xFF4
 17434                           prodl	equ	0xFF3
 17435                           intcon	equ	0xFF2
 17436                           intcon2	equ	0xFF1
 17437                           intcon3	equ	0xFF0
 17438                           indf0	equ	0xFEF
 17439                           postinc0	equ	0xFEE
 17440                           fsr0h	equ	0xFEA
 17441                           fsr0l	equ	0xFE9
 17442                           wreg	equ	0xFE8
 17443                           indf1	equ	0xFE7
 17444                           postinc1	equ	0xFE6
 17445                           postdec1	equ	0xFE5
 17446                           fsr1h	equ	0xFE2
 17447                           fsr1l	equ	0xFE1
 17448                           indf2	equ	0xFDF
 17449                           postinc2	equ	0xFDE
 17450                           postdec2	equ	0xFDD
 17451                           plusw2	equ	0xFDB
 17452                           fsr2h	equ	0xFDA
 17453                           fsr2l	equ	0xFD9
 17454                           status	equ	0xFD8
 17455                           
 17456 ;; *************** function _response *****************
 17457 ;; Defined at:
 17458 ;;		line 60 in file "bibliotecas/SDCard.c"
 17459 ;; Parameters:    Size  Location     Type
 17460 ;;		None
 17461 ;; Auto vars:     Size  Location     Type
 17462 ;;  buff            1   48[COMRAM] unsigned char 
 17463 ;; Return value:  Size  Location     Type
 17464 ;;                  1    wreg      unsigned char 
 17465 ;; Registers used:
 17466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17467 ;; Tracked objects:
 17468 ;;		On entry : 0/0
 17469 ;;		On exit  : 0/0
 17470 ;;		Unchanged: 0/0
 17471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17472 ;;      Params:         0       0       0       0       0       0       0       0       0
 17473 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17474 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17475 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17476 ;;Total ram usage:        1 bytes
 17477 ;; Hardware stack levels used:    1
 17478 ;; Hardware stack levels required when called:    7
 17479 ;; This function calls:
 17480 ;;		_ReadSPI_
 17481 ;; This function is called by:
 17482 ;;		_sdc_disk_initialize
 17483 ;;		_sdc_disk_read
 17484 ;;		_sdc_disk_write
 17485 ;; This function uses a non-reentrant model
 17486 ;;
 17487                           
 17488                           	psect	text48
 17489  005780                     __ptext48:
 17490                           	opt stack 0
 17491  005780                     _response:
 17492                           	opt stack 14
 17493                           
 17494                           ;SDCard.c: 62: unsigned char buff;
 17495                           ;SDCard.c: 63: LATBbits.LATB4 = 0;
 17496                           
 17497                           ;incstack = 0
 17498  005780  988A               	bcf	3978,4,c	;volatile
 17499                           
 17500                           ;SDCard.c: 64: buff= ReadSPI_();
 17501  005782  EC77  F02A         	call	_ReadSPI_	;wreg free
 17502  005786  6E31               	movwf	response@buff,c
 17503                           
 17504                           ;SDCard.c: 65: return buff;
 17505  005788  5031               	movf	response@buff,w,c
 17506  00578A  0012               	return	
 17507  00578C                     __end_of_response:
 17508                           	opt stack 0
 17509                           tosu	equ	0xFFF
 17510                           tosh	equ	0xFFE
 17511                           tosl	equ	0xFFD
 17512                           pclath	equ	0xFFA
 17513                           tblptru	equ	0xFF8
 17514                           tblptrh	equ	0xFF7
 17515                           tblptrl	equ	0xFF6
 17516                           tablat	equ	0xFF5
 17517                           prodh	equ	0xFF4
 17518                           prodl	equ	0xFF3
 17519                           intcon	equ	0xFF2
 17520                           intcon2	equ	0xFF1
 17521                           intcon3	equ	0xFF0
 17522                           indf0	equ	0xFEF
 17523                           postinc0	equ	0xFEE
 17524                           fsr0h	equ	0xFEA
 17525                           fsr0l	equ	0xFE9
 17526                           wreg	equ	0xFE8
 17527                           indf1	equ	0xFE7
 17528                           postinc1	equ	0xFE6
 17529                           postdec1	equ	0xFE5
 17530                           fsr1h	equ	0xFE2
 17531                           fsr1l	equ	0xFE1
 17532                           indf2	equ	0xFDF
 17533                           postinc2	equ	0xFDE
 17534                           postdec2	equ	0xFDD
 17535                           plusw2	equ	0xFDB
 17536                           fsr2h	equ	0xFDA
 17537                           fsr2l	equ	0xFD9
 17538                           status	equ	0xFD8
 17539                           
 17540 ;; *************** function _ReadSPI_ *****************
 17541 ;; Defined at:
 17542 ;;		line 133 in file "bibliotecas/SPI.c"
 17543 ;; Parameters:    Size  Location     Type
 17544 ;;		None
 17545 ;; Auto vars:     Size  Location     Type
 17546 ;;  temp_var        1   47[COMRAM] unsigned char 
 17547 ;; Return value:  Size  Location     Type
 17548 ;;                  1    wreg      unsigned char 
 17549 ;; Registers used:
 17550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17551 ;; Tracked objects:
 17552 ;;		On entry : 0/0
 17553 ;;		On exit  : 0/0
 17554 ;;		Unchanged: 0/0
 17555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17556 ;;      Params:         0       0       0       0       0       0       0       0       0
 17557 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17558 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17559 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17560 ;;Total ram usage:        1 bytes
 17561 ;; Hardware stack levels used:    1
 17562 ;; Hardware stack levels required when called:    6
 17563 ;; This function calls:
 17564 ;;		_escreve_inteiro_lcd
 17565 ;;		_posicao_cursor_lcd
 17566 ;; This function is called by:
 17567 ;;		_response
 17568 ;; This function uses a non-reentrant model
 17569 ;;
 17570                           
 17571                           	psect	text49
 17572  0054EE                     __ptext49:
 17573                           	opt stack 0
 17574  0054EE                     _ReadSPI_:
 17575                           	opt stack 14
 17576                           
 17577                           ;SPI.c: 135: PIR1bits.SSPIF = 0;
 17578                           
 17579                           ;incstack = 0
 17580  0054EE  969E               	bcf	3998,3,c	;volatile
 17581                           
 17582                           ;SPI.c: 136: unsigned char temp_var;
 17583                           ;SPI.c: 137: temp_var = SSPBUF;
 17584  0054F0  CFC9 F030          	movff	4041,ReadSPI_@temp_var	;volatile
 17585                           
 17586                           ;SPI.c: 139: SSPBUF = 0x00;
 17587  0054F4  0E00               	movlw	0
 17588  0054F6  6EC9               	movwf	4041,c	;volatile
 17589                           
 17590                           ;SPI.c: 141: while(!PIR1bits.SSPIF)
 17591  0054F8  D00A               	goto	l10725
 17592  0054FA                     l10721:
 17593                           
 17594                           ;SPI.c: 142: {
 17595                           ;SPI.c: 143: posicao_cursor_lcd(2,0);
 17596  0054FA  0E00               	movlw	0
 17597  0054FC  6E19               	movwf	posicao_cursor_lcd@coluna,c
 17598  0054FE  0E02               	movlw	2
 17599  005500  ECFA  F027         	call	_posicao_cursor_lcd
 17600                           
 17601                           ;SPI.c: 144: escreve_inteiro_lcd(SSPBUF);
 17602  005504  CFC9 F02E          	movff	4041,escreve_inteiro_lcd@valor	;volatile
 17603  005508  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 17604  00550A  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 17605  00550E                     l10725:
 17606  00550E  A69E               	btfss	3998,3,c	;volatile
 17607  005510  D7F4               	goto	l10721
 17608                           
 17609                           ;SPI.c: 145: }
 17610                           ;SPI.c: 146: posicao_cursor_lcd(2,4);
 17611  005512  0E04               	movlw	4
 17612  005514  6E19               	movwf	posicao_cursor_lcd@coluna,c
 17613  005516  0E02               	movlw	2
 17614  005518  ECFA  F027         	call	_posicao_cursor_lcd
 17615                           
 17616                           ;SPI.c: 147: escreve_inteiro_lcd(SSPBUF);
 17617  00551C  CFC9 F02E          	movff	4041,escreve_inteiro_lcd@valor	;volatile
 17618  005520  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 17619  005522  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 17620                           
 17621                           ;SPI.c: 148: return (SSPBUF);
 17622  005526  50C9               	movf	4041,w,c	;volatile
 17623  005528  0012               	return	
 17624  00552A                     __end_of_ReadSPI_:
 17625                           	opt stack 0
 17626                           tosu	equ	0xFFF
 17627                           tosh	equ	0xFFE
 17628                           tosl	equ	0xFFD
 17629                           pclath	equ	0xFFA
 17630                           tblptru	equ	0xFF8
 17631                           tblptrh	equ	0xFF7
 17632                           tblptrl	equ	0xFF6
 17633                           tablat	equ	0xFF5
 17634                           prodh	equ	0xFF4
 17635                           prodl	equ	0xFF3
 17636                           intcon	equ	0xFF2
 17637                           intcon2	equ	0xFF1
 17638                           intcon3	equ	0xFF0
 17639                           indf0	equ	0xFEF
 17640                           postinc0	equ	0xFEE
 17641                           fsr0h	equ	0xFEA
 17642                           fsr0l	equ	0xFE9
 17643                           wreg	equ	0xFE8
 17644                           indf1	equ	0xFE7
 17645                           postinc1	equ	0xFE6
 17646                           postdec1	equ	0xFE5
 17647                           fsr1h	equ	0xFE2
 17648                           fsr1l	equ	0xFE1
 17649                           indf2	equ	0xFDF
 17650                           postinc2	equ	0xFDE
 17651                           postdec2	equ	0xFDD
 17652                           plusw2	equ	0xFDB
 17653                           fsr2h	equ	0xFDA
 17654                           fsr2l	equ	0xFD9
 17655                           status	equ	0xFD8
 17656                           
 17657 ;; *************** function _proceed *****************
 17658 ;; Defined at:
 17659 ;;		line 97 in file "bibliotecas/SDCard.c"
 17660 ;; Parameters:    Size  Location     Type
 17661 ;;		None
 17662 ;; Auto vars:     Size  Location     Type
 17663 ;;		None
 17664 ;; Return value:  Size  Location     Type
 17665 ;;                  1    wreg      void 
 17666 ;; Registers used:
 17667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17668 ;; Tracked objects:
 17669 ;;		On entry : 0/0
 17670 ;;		On exit  : 0/0
 17671 ;;		Unchanged: 0/0
 17672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17673 ;;      Params:         0       0       0       0       0       0       0       0       0
 17674 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17675 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17676 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17677 ;;Total ram usage:        0 bytes
 17678 ;; Hardware stack levels used:    1
 17679 ;; Hardware stack levels required when called:    7
 17680 ;; This function calls:
 17681 ;;		_WriteSPI_
 17682 ;; This function is called by:
 17683 ;;		_sdc_disk_initialize
 17684 ;;		_sdc_disk_read
 17685 ;;		_SDCard
 17686 ;; This function uses a non-reentrant model
 17687 ;;
 17688                           
 17689                           	psect	text50
 17690  005772                     __ptext50:
 17691                           	opt stack 0
 17692  005772                     _proceed:
 17693                           	opt stack 21
 17694                           
 17695                           ;SDCard.c: 99: LATBbits.LATB4 = 0;
 17696                           
 17697                           ;incstack = 0
 17698  005772  988A               	bcf	3978,4,c	;volatile
 17699                           
 17700                           ;SDCard.c: 100: LATCbits.LATC7 = 1;
 17701  005774  8E8B               	bsf	3979,7,c	;volatile
 17702                           
 17703                           ;SDCard.c: 101: WriteSPI_(0xFF);
 17704  005776  0EFF               	movlw	255
 17705  005778  EC67  F028         	call	_WriteSPI_
 17706                           
 17707                           ;SDCard.c: 102: LATBbits.LATB4 = 1;
 17708  00577C  888A               	bsf	3978,4,c	;volatile
 17709  00577E  0012               	return		;funcret
 17710  005780                     __end_of_proceed:
 17711                           	opt stack 0
 17712                           tosu	equ	0xFFF
 17713                           tosh	equ	0xFFE
 17714                           tosl	equ	0xFFD
 17715                           pclath	equ	0xFFA
 17716                           tblptru	equ	0xFF8
 17717                           tblptrh	equ	0xFF7
 17718                           tblptrl	equ	0xFF6
 17719                           tablat	equ	0xFF5
 17720                           prodh	equ	0xFF4
 17721                           prodl	equ	0xFF3
 17722                           intcon	equ	0xFF2
 17723                           intcon2	equ	0xFF1
 17724                           intcon3	equ	0xFF0
 17725                           indf0	equ	0xFEF
 17726                           postinc0	equ	0xFEE
 17727                           fsr0h	equ	0xFEA
 17728                           fsr0l	equ	0xFE9
 17729                           wreg	equ	0xFE8
 17730                           indf1	equ	0xFE7
 17731                           postinc1	equ	0xFE6
 17732                           postdec1	equ	0xFE5
 17733                           fsr1h	equ	0xFE2
 17734                           fsr1l	equ	0xFE1
 17735                           indf2	equ	0xFDF
 17736                           postinc2	equ	0xFDE
 17737                           postdec2	equ	0xFDD
 17738                           plusw2	equ	0xFDB
 17739                           fsr2h	equ	0xFDA
 17740                           fsr2l	equ	0xFD9
 17741                           status	equ	0xFD8
 17742                           
 17743 ;; *************** function _dummy_clocks *****************
 17744 ;; Defined at:
 17745 ;;		line 76 in file "bibliotecas/SDCard.c"
 17746 ;; Parameters:    Size  Location     Type
 17747 ;;  n               1    wreg     unsigned char 
 17748 ;; Auto vars:     Size  Location     Type
 17749 ;;  n               1    9[BANK0 ] unsigned char 
 17750 ;;  i               2   10[BANK0 ] unsigned int 
 17751 ;; Return value:  Size  Location     Type
 17752 ;;                  1    wreg      void 
 17753 ;; Registers used:
 17754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17755 ;; Tracked objects:
 17756 ;;		On entry : 0/0
 17757 ;;		On exit  : 0/0
 17758 ;;		Unchanged: 0/0
 17759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17760 ;;      Params:         0       0       0       0       0       0       0       0       0
 17761 ;;      Locals:         0       3       0       0       0       0       0       0       0
 17762 ;;      Temps:          0       2       0       0       0       0       0       0       0
 17763 ;;      Totals:         0       5       0       0       0       0       0       0       0
 17764 ;;Total ram usage:        5 bytes
 17765 ;; Hardware stack levels used:    1
 17766 ;; Hardware stack levels required when called:    7
 17767 ;; This function calls:
 17768 ;;		_WriteSPI_
 17769 ;; This function is called by:
 17770 ;;		_sdc_disk_initialize
 17771 ;;		_sdc_disk_read
 17772 ;;		_sdc_disk_write
 17773 ;; This function uses a non-reentrant model
 17774 ;;
 17775                           
 17776                           	psect	text51
 17777  0051DE                     __ptext51:
 17778                           	opt stack 0
 17779  0051DE                     _dummy_clocks:
 17780                           	opt stack 14
 17781                           
 17782                           ;incstack = 0
 17783                           ;dummy_clocks@n stored from wreg
 17784  0051DE  0100               	movlb	0	; () banked
 17785  0051E0  6F69               	movwf	dummy_clocks@n& (0+255),b
 17786                           
 17787                           ;SDCard.c: 78: unsigned int i;
 17788                           ;SDCard.c: 79: _delay((unsigned long)((1)*(48000000/4000.0)));
 17789  0051E2  0E10               	movlw	16
 17790  0051E4  0100               	movlb	0	; () banked
 17791  0051E6  6F67               	movwf	??_dummy_clocks& (0+255),b
 17792  0051E8  0E94               	movlw	148
 17793  0051EA                     u16977:
 17794  0051EA  2EE8               	decfsz	wreg,f,c
 17795  0051EC  D7FE               	bra	u16977
 17796  0051EE  2F67               	decfsz	??_dummy_clocks& (0+255),f,b
 17797  0051F0  D7FC               	bra	u16977
 17798  0051F2  F000               	nop	
 17799                           
 17800                           ;SDCard.c: 81: for(i=0;i<n;i++)
 17801  0051F4  0E00               	movlw	0
 17802  0051F6  0100               	movlb	0	; () banked
 17803  0051F8  6F6B               	movwf	(dummy_clocks@i+1)& (0+255),b
 17804  0051FA  0E00               	movlw	0
 17805  0051FC  6F6A               	movwf	dummy_clocks@i& (0+255),b
 17806  0051FE  D008               	goto	l10755
 17807  005200                     l1287:
 17808                           
 17809                           ; BSR set to: 0
 17810                           ;SDCard.c: 82: {
 17811                           ;SDCard.c: 83: LATBbits.LATB4 = 1;
 17812  005200  888A               	bsf	3978,4,c	;volatile
 17813                           
 17814                           ; BSR set to: 0
 17815                           ;SDCard.c: 84: WriteSPI_(0XFF);
 17816  005202  0EFF               	movlw	255
 17817  005204  EC67  F028         	call	_WriteSPI_
 17818                           
 17819                           ;SDCard.c: 85: LATBbits.LATB4 = 0;
 17820  005208  988A               	bcf	3978,4,c	;volatile
 17821  00520A  0100               	movlb	0	; () banked
 17822  00520C  4B6A               	infsnz	dummy_clocks@i& (0+255),f,b
 17823  00520E  2B6B               	incf	(dummy_clocks@i+1)& (0+255),f,b
 17824  005210                     l10755:
 17825                           
 17826                           ; BSR set to: 0
 17827  005210  0100               	movlb	0	; () banked
 17828  005212  5169               	movf	dummy_clocks@n& (0+255),w,b
 17829  005214  0100               	movlb	0	; () banked
 17830  005216  6F67               	movwf	??_dummy_clocks& (0+255),b
 17831  005218  6B68               	clrf	(??_dummy_clocks+1)& (0+255),b
 17832  00521A  0100               	movlb	0	; () banked
 17833  00521C  5167               	movf	??_dummy_clocks& (0+255),w,b
 17834  00521E  0100               	movlb	0	; () banked
 17835  005220  5D6A               	subwf	dummy_clocks@i& (0+255),w,b
 17836  005222  0100               	movlb	0	; () banked
 17837  005224  5168               	movf	(??_dummy_clocks+1)& (0+255),w,b
 17838  005226  0100               	movlb	0	; () banked
 17839  005228  596B               	subwfb	(dummy_clocks@i+1)& (0+255),w,b
 17840  00522A  B0D8               	btfsc	status,0,c
 17841  00522C  0012               	return	
 17842  00522E  D7E8               	goto	l1287
 17843  005230                     __end_of_dummy_clocks:
 17844                           	opt stack 0
 17845                           tosu	equ	0xFFF
 17846                           tosh	equ	0xFFE
 17847                           tosl	equ	0xFFD
 17848                           pclath	equ	0xFFA
 17849                           tblptru	equ	0xFF8
 17850                           tblptrh	equ	0xFF7
 17851                           tblptrl	equ	0xFF6
 17852                           tablat	equ	0xFF5
 17853                           prodh	equ	0xFF4
 17854                           prodl	equ	0xFF3
 17855                           intcon	equ	0xFF2
 17856                           intcon2	equ	0xFF1
 17857                           intcon3	equ	0xFF0
 17858                           indf0	equ	0xFEF
 17859                           postinc0	equ	0xFEE
 17860                           fsr0h	equ	0xFEA
 17861                           fsr0l	equ	0xFE9
 17862                           wreg	equ	0xFE8
 17863                           indf1	equ	0xFE7
 17864                           postinc1	equ	0xFE6
 17865                           postdec1	equ	0xFE5
 17866                           fsr1h	equ	0xFE2
 17867                           fsr1l	equ	0xFE1
 17868                           indf2	equ	0xFDF
 17869                           postinc2	equ	0xFDE
 17870                           postdec2	equ	0xFDD
 17871                           plusw2	equ	0xFDB
 17872                           fsr2h	equ	0xFDA
 17873                           fsr2l	equ	0xFD9
 17874                           status	equ	0xFD8
 17875                           
 17876 ;; *************** function _command *****************
 17877 ;; Defined at:
 17878 ;;		line 115 in file "bibliotecas/SDCard.c"
 17879 ;; Parameters:    Size  Location     Type
 17880 ;;  CMD             1    wreg     unsigned char 
 17881 ;;  arg             4    7[BANK0 ] unsigned long 
 17882 ;;  CRC             1   11[BANK0 ] unsigned char 
 17883 ;; Auto vars:     Size  Location     Type
 17884 ;;  CMD             1   12[BANK0 ] unsigned char 
 17885 ;;  argument        1   13[BANK0 ] unsigned char 
 17886 ;; Return value:  Size  Location     Type
 17887 ;;                  1    wreg      void 
 17888 ;; Registers used:
 17889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17890 ;; Tracked objects:
 17891 ;;		On entry : 0/0
 17892 ;;		On exit  : 0/0
 17893 ;;		Unchanged: 0/0
 17894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17895 ;;      Params:         0       5       0       0       0       0       0       0       0
 17896 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17897 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17898 ;;      Totals:         0       7       0       0       0       0       0       0       0
 17899 ;;Total ram usage:        7 bytes
 17900 ;; Hardware stack levels used:    1
 17901 ;; Hardware stack levels required when called:    7
 17902 ;; This function calls:
 17903 ;;		_WriteSPI_
 17904 ;; This function is called by:
 17905 ;;		_sdc_disk_initialize
 17906 ;;		_sdc_disk_read
 17907 ;;		_sdc_disk_write
 17908 ;; This function uses a non-reentrant model
 17909 ;;
 17910                           
 17911                           	psect	text52
 17912  005364                     __ptext52:
 17913                           	opt stack 0
 17914  005364                     _command:
 17915                           	opt stack 14
 17916                           
 17917                           ; BSR set to: 0
 17918                           ;incstack = 0
 17919                           ;command@CMD stored from wreg
 17920  005364  0100               	movlb	0	; () banked
 17921  005366  6F6C               	movwf	command@CMD& (0+255),b
 17922                           
 17923                           ;SDCard.c: 117: unsigned char argument;
 17924                           ;SDCard.c: 119: WriteSPI_(CMD);
 17925  005368  0100               	movlb	0	; () banked
 17926  00536A  516C               	movf	command@CMD& (0+255),w,b
 17927  00536C  EC67  F028         	call	_WriteSPI_
 17928                           
 17929                           ;SDCard.c: 120: argument = arg>>24;
 17930  005370  C06A  F06D         	movff	command@arg+3,command@argument
 17931                           
 17932                           ;SDCard.c: 121: WriteSPI_(argument);
 17933  005374  0100               	movlb	0	; () banked
 17934  005376  516D               	movf	command@argument& (0+255),w,b
 17935  005378  EC67  F028         	call	_WriteSPI_
 17936                           
 17937                           ;SDCard.c: 122: argument = arg>>16;
 17938  00537C  C069  F06D         	movff	command@arg+2,command@argument
 17939                           
 17940                           ;SDCard.c: 123: WriteSPI_(argument);
 17941  005380  0100               	movlb	0	; () banked
 17942  005382  516D               	movf	command@argument& (0+255),w,b
 17943  005384  EC67  F028         	call	_WriteSPI_
 17944                           
 17945                           ;SDCard.c: 124: argument = arg>>8;
 17946  005388  C068  F06D         	movff	command@arg+1,command@argument
 17947                           
 17948                           ;SDCard.c: 125: WriteSPI_(argument);
 17949  00538C  0100               	movlb	0	; () banked
 17950  00538E  516D               	movf	command@argument& (0+255),w,b
 17951  005390  EC67  F028         	call	_WriteSPI_
 17952                           
 17953                           ;SDCard.c: 126: argument = arg;
 17954  005394  C067  F06D         	movff	command@arg,command@argument
 17955                           
 17956                           ;SDCard.c: 127: WriteSPI_(argument);
 17957  005398  0100               	movlb	0	; () banked
 17958  00539A  516D               	movf	command@argument& (0+255),w,b
 17959  00539C  EC67  F028         	call	_WriteSPI_
 17960                           
 17961                           ;SDCard.c: 128: WriteSPI_(CRC);
 17962  0053A0  0100               	movlb	0	; () banked
 17963  0053A2  516B               	movf	command@CRC& (0+255),w,b
 17964  0053A4  EC67  F028         	call	_WriteSPI_
 17965  0053A8  0012               	return		;funcret
 17966  0053AA                     __end_of_command:
 17967                           	opt stack 0
 17968                           tosu	equ	0xFFF
 17969                           tosh	equ	0xFFE
 17970                           tosl	equ	0xFFD
 17971                           pclath	equ	0xFFA
 17972                           tblptru	equ	0xFF8
 17973                           tblptrh	equ	0xFF7
 17974                           tblptrl	equ	0xFF6
 17975                           tablat	equ	0xFF5
 17976                           prodh	equ	0xFF4
 17977                           prodl	equ	0xFF3
 17978                           intcon	equ	0xFF2
 17979                           intcon2	equ	0xFF1
 17980                           intcon3	equ	0xFF0
 17981                           indf0	equ	0xFEF
 17982                           postinc0	equ	0xFEE
 17983                           fsr0h	equ	0xFEA
 17984                           fsr0l	equ	0xFE9
 17985                           wreg	equ	0xFE8
 17986                           indf1	equ	0xFE7
 17987                           postinc1	equ	0xFE6
 17988                           postdec1	equ	0xFE5
 17989                           fsr1h	equ	0xFE2
 17990                           fsr1l	equ	0xFE1
 17991                           indf2	equ	0xFDF
 17992                           postinc2	equ	0xFDE
 17993                           postdec2	equ	0xFDD
 17994                           plusw2	equ	0xFDB
 17995                           fsr2h	equ	0xFDA
 17996                           fsr2l	equ	0xFD9
 17997                           status	equ	0xFD8
 17998                           
 17999 ;; *************** function _WriteSPI_ *****************
 18000 ;; Defined at:
 18001 ;;		line 158 in file "bibliotecas/SPI.c"
 18002 ;; Parameters:    Size  Location     Type
 18003 ;;  dado            1    wreg     unsigned char 
 18004 ;; Auto vars:     Size  Location     Type
 18005 ;;  dado            1   50[COMRAM] unsigned char 
 18006 ;;  TempVar         1   49[COMRAM] unsigned char 
 18007 ;; Return value:  Size  Location     Type
 18008 ;;                  1    wreg      unsigned char 
 18009 ;; Registers used:
 18010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18011 ;; Tracked objects:
 18012 ;;		On entry : 0/0
 18013 ;;		On exit  : 0/0
 18014 ;;		Unchanged: 0/0
 18015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18016 ;;      Params:         0       0       0       0       0       0       0       0       0
 18017 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18018 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18019 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18020 ;;Total ram usage:        4 bytes
 18021 ;; Hardware stack levels used:    1
 18022 ;; Hardware stack levels required when called:    6
 18023 ;; This function calls:
 18024 ;;		_escreve_frase_ram_lcd
 18025 ;;		_escreve_inteiro_lcd
 18026 ;;		_posicao_cursor_lcd
 18027 ;; This function is called by:
 18028 ;;		_sdc_disk_initialize
 18029 ;;		_sdc_disk_write
 18030 ;;		_dummy_clocks
 18031 ;;		_proceed
 18032 ;;		_command
 18033 ;; This function uses a non-reentrant model
 18034 ;;
 18035                           
 18036                           	psect	text53
 18037  0050CE                     __ptext53:
 18038                           	opt stack 0
 18039  0050CE                     _WriteSPI_:
 18040                           	opt stack 21
 18041                           
 18042                           ;incstack = 0
 18043                           ;WriteSPI_@dado stored from wreg
 18044  0050CE  6E33               	movwf	WriteSPI_@dado,c
 18045                           
 18046                           ;SPI.c: 160: unsigned char TempVar;
 18047                           ;SPI.c: 161: TempVar = SSPBUF;
 18048  0050D0  CFC9 F032          	movff	4041,WriteSPI_@TempVar	;volatile
 18049                           
 18050                           ;SPI.c: 162: PIR1bits.SSPIF = 0;
 18051  0050D4  969E               	bcf	3998,3,c	;volatile
 18052                           
 18053                           ;SPI.c: 163: SSPCON1bits.WCOL = 0;
 18054  0050D6  9EC6               	bcf	4038,7,c	;volatile
 18055                           
 18056                           ;SPI.c: 164: SSPSTATbits.BF = 0;
 18057  0050D8  90C7               	bcf	4039,0,c	;volatile
 18058                           
 18059                           ;SPI.c: 165: SSPBUF = 0x00;
 18060  0050DA  0E00               	movlw	0
 18061  0050DC  6EC9               	movwf	4041,c	;volatile
 18062                           
 18063                           ;SPI.c: 166: _delay((unsigned long)((50)*(48000000/4000.0)));
 18064  0050DE  0E04               	movlw	4
 18065  0050E0  6E31               	movwf	(??_WriteSPI_+1)& (0+255),c
 18066  0050E2  0E0C               	movlw	12
 18067  0050E4  6E30               	movwf	??_WriteSPI_& (0+255),c
 18068  0050E6  0E34               	movlw	52
 18069  0050E8                     u16987:
 18070  0050E8  2EE8               	decfsz	wreg,f,c
 18071  0050EA  D7FE               	bra	u16987
 18072  0050EC  2E30               	decfsz	??_WriteSPI_& (0+255),f,c
 18073  0050EE  D7FC               	bra	u16987
 18074  0050F0  2E31               	decfsz	(??_WriteSPI_+1)& (0+255),f,c
 18075  0050F2  D7FA               	bra	u16987
 18076                           
 18077                           ;SPI.c: 167: SSPBUF = dado;
 18078  0050F4  C033  FFC9         	movff	WriteSPI_@dado,4041	;volatile
 18079                           
 18080                           ;SPI.c: 168: if (SSPCON1 & 0x80)
 18081  0050F8  BEC6               	btfsc	4038,7,c	;volatile
 18082  0050FA  0012               	return	
 18083  0050FC  D015               	goto	l10715
 18084  0050FE                     l10707:
 18085                           
 18086                           ;SPI.c: 175: {
 18087                           ;SPI.c: 176: posicao_cursor_lcd(1,0);
 18088  0050FE  0E00               	movlw	0
 18089  005100  6E19               	movwf	posicao_cursor_lcd@coluna,c
 18090  005102  0E01               	movlw	1
 18091  005104  ECFA  F027         	call	_posicao_cursor_lcd
 18092                           
 18093                           ;SPI.c: 177: escreve_frase_ram_lcd("!PIRBITS");
 18094  005108  0E3A               	movlw	low STR_47
 18095  00510A  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 18096  00510C  0E62               	movlw	high STR_47
 18097  00510E  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 18098  005110  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 18099                           
 18100                           ;SPI.c: 178: posicao_cursor_lcd(1,13);
 18101  005114  0E0D               	movlw	13
 18102  005116  6E19               	movwf	posicao_cursor_lcd@coluna,c
 18103  005118  0E01               	movlw	1
 18104  00511A  ECFA  F027         	call	_posicao_cursor_lcd
 18105                           
 18106                           ;SPI.c: 179: escreve_inteiro_lcd(SSPBUF);
 18107  00511E  CFC9 F02E          	movff	4041,escreve_inteiro_lcd@valor	;volatile
 18108  005122  6A2F               	clrf	escreve_inteiro_lcd@valor+1,c
 18109  005124  EC95  F02A         	call	_escreve_inteiro_lcd	;wreg free
 18110  005128                     l10715:
 18111  005128  B69E               	btfsc	3998,3,c	;volatile
 18112  00512A  0012               	return	
 18113  00512C  D7E8               	goto	l10707
 18114  00512E                     __end_of_WriteSPI_:
 18115                           	opt stack 0
 18116                           tosu	equ	0xFFF
 18117                           tosh	equ	0xFFE
 18118                           tosl	equ	0xFFD
 18119                           pclath	equ	0xFFA
 18120                           tblptru	equ	0xFF8
 18121                           tblptrh	equ	0xFF7
 18122                           tblptrl	equ	0xFF6
 18123                           tablat	equ	0xFF5
 18124                           prodh	equ	0xFF4
 18125                           prodl	equ	0xFF3
 18126                           intcon	equ	0xFF2
 18127                           intcon2	equ	0xFF1
 18128                           intcon3	equ	0xFF0
 18129                           indf0	equ	0xFEF
 18130                           postinc0	equ	0xFEE
 18131                           fsr0h	equ	0xFEA
 18132                           fsr0l	equ	0xFE9
 18133                           wreg	equ	0xFE8
 18134                           indf1	equ	0xFE7
 18135                           postinc1	equ	0xFE6
 18136                           postdec1	equ	0xFE5
 18137                           fsr1h	equ	0xFE2
 18138                           fsr1l	equ	0xFE1
 18139                           indf2	equ	0xFDF
 18140                           postinc2	equ	0xFDE
 18141                           postdec2	equ	0xFDD
 18142                           plusw2	equ	0xFDB
 18143                           fsr2h	equ	0xFDA
 18144                           fsr2l	equ	0xFD9
 18145                           status	equ	0xFD8
 18146                           
 18147 ;; *************** function _posicao_cursor_lcd *****************
 18148 ;; Defined at:
 18149 ;;		line 271 in file "bibliotecas/display_lcd.c"
 18150 ;; Parameters:    Size  Location     Type
 18151 ;;  linha           1    wreg     unsigned char 
 18152 ;;  coluna          1   24[COMRAM] unsigned char 
 18153 ;; Auto vars:     Size  Location     Type
 18154 ;;  linha           1   25[COMRAM] unsigned char 
 18155 ;;  endereco        1   26[COMRAM] unsigned char 
 18156 ;; Return value:  Size  Location     Type
 18157 ;;                  1    wreg      void 
 18158 ;; Registers used:
 18159 ;;		wreg, status,2, status,0, cstack
 18160 ;; Tracked objects:
 18161 ;;		On entry : 0/0
 18162 ;;		On exit  : 0/0
 18163 ;;		Unchanged: 0/0
 18164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18165 ;;      Params:         1       0       0       0       0       0       0       0       0
 18166 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18167 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18168 ;;      Totals:         3       0       0       0       0       0       0       0       0
 18169 ;;Total ram usage:        3 bytes
 18170 ;; Hardware stack levels used:    1
 18171 ;; Hardware stack levels required when called:    4
 18172 ;; This function calls:
 18173 ;;		_endereco_cursor_lcd
 18174 ;; This function is called by:
 18175 ;;		_sdc_disk_initialize
 18176 ;;		_sdc_disk_read
 18177 ;;		_sdc_disk_write
 18178 ;;		_check_fs
 18179 ;;		_auto_mount
 18180 ;;		_mensagem_inicial
 18181 ;;		_SDCard
 18182 ;;		_inicializa_SPI
 18183 ;;		_ReadSPI_
 18184 ;;		_WriteSPI_
 18185 ;;		_gps
 18186 ;; This function uses a non-reentrant model
 18187 ;;
 18188                           
 18189                           	psect	text54
 18190  004FF4                     __ptext54:
 18191                           	opt stack 0
 18192  004FF4                     _posicao_cursor_lcd:
 18193                           	opt stack 25
 18194                           
 18195                           ;incstack = 0
 18196                           ;posicao_cursor_lcd@linha stored from wreg
 18197  004FF4  6E1A               	movwf	posicao_cursor_lcd@linha,c
 18198                           
 18199                           ;display_lcd.c: 273: unsigned char endereco = 0x00;
 18200  004FF6  0E00               	movlw	0
 18201  004FF8  6E1B               	movwf	posicao_cursor_lcd@endereco,c
 18202                           
 18203                           ;display_lcd.c: 275: if(coluna <= 0x10U)
 18204  004FFA  0E11               	movlw	17
 18205  004FFC  6019               	cpfslt	posicao_cursor_lcd@coluna,c
 18206  004FFE  D02F               	goto	l10685
 18207  005000  D01E               	goto	l10681
 18208  005002                     l335:
 18209                           
 18210                           ;display_lcd.c: 282: endereco = 0x00U + coluna;
 18211  005002  C019  F01B         	movff	posicao_cursor_lcd@coluna,posicao_cursor_lcd@endereco
 18212                           
 18213                           ;display_lcd.c: 283: endereco_cursor_lcd(endereco);
 18214  005006  501B               	movf	posicao_cursor_lcd@endereco,w,c
 18215  005008  EC32  F028         	call	_endereco_cursor_lcd
 18216                           
 18217                           ;display_lcd.c: 284: break;
 18218  00500C  D026               	goto	l10683
 18219  00500E                     l10665:
 18220                           
 18221                           ;display_lcd.c: 287: endereco = 0x40U + coluna;
 18222  00500E  5019               	movf	posicao_cursor_lcd@coluna,w,c
 18223  005010  0F40               	addlw	64
 18224  005012  6E1B               	movwf	posicao_cursor_lcd@endereco,c
 18225                           
 18226                           ;display_lcd.c: 288: endereco_cursor_lcd(endereco);
 18227  005014  501B               	movf	posicao_cursor_lcd@endereco,w,c
 18228  005016  EC32  F028         	call	_endereco_cursor_lcd
 18229                           
 18230                           ;display_lcd.c: 289: break;
 18231  00501A  D01F               	goto	l10683
 18232  00501C                     l10669:
 18233                           
 18234                           ;display_lcd.c: 292: endereco = 0x14U + coluna;
 18235  00501C  5019               	movf	posicao_cursor_lcd@coluna,w,c
 18236  00501E  0F14               	addlw	20
 18237  005020  6E1B               	movwf	posicao_cursor_lcd@endereco,c
 18238                           
 18239                           ;display_lcd.c: 293: endereco_cursor_lcd(endereco);
 18240  005022  501B               	movf	posicao_cursor_lcd@endereco,w,c
 18241  005024  EC32  F028         	call	_endereco_cursor_lcd
 18242                           
 18243                           ;display_lcd.c: 294: break;
 18244  005028  D018               	goto	l10683
 18245  00502A                     l10673:
 18246                           
 18247                           ;display_lcd.c: 297: endereco = 0x54U + coluna;
 18248  00502A  5019               	movf	posicao_cursor_lcd@coluna,w,c
 18249  00502C  0F54               	addlw	84
 18250  00502E  6E1B               	movwf	posicao_cursor_lcd@endereco,c
 18251                           
 18252                           ;display_lcd.c: 298: endereco_cursor_lcd(endereco);
 18253  005030  501B               	movf	posicao_cursor_lcd@endereco,w,c
 18254  005032  EC32  F028         	call	_endereco_cursor_lcd
 18255                           
 18256                           ;display_lcd.c: 299: break;
 18257  005036  D011               	goto	l10683
 18258  005038                     l10677:
 18259                           
 18260                           ;display_lcd.c: 302: endereco = 0x00U;
 18261  005038  0E00               	movlw	0
 18262  00503A  6E1B               	movwf	posicao_cursor_lcd@endereco,c
 18263                           
 18264                           ;display_lcd.c: 304: }
 18265                           
 18266                           ;display_lcd.c: 303: break;
 18267  00503C  D00E               	goto	l10683
 18268  00503E                     l10681:
 18269  00503E  501A               	movf	posicao_cursor_lcd@linha,w,c
 18270                           
 18271                           ; Switch size 1, requested type "space"
 18272                           ; Number of cases is 4, Range of values is 1 to 4
 18273                           ; switch strategies available:
 18274                           ; Name         Instructions Cycles
 18275                           ; simple_byte           13     7 (average)
 18276                           ;	Chosen strategy is simple_byte
 18277  005040  0A01               	xorlw	1	; case 1
 18278  005042  B4D8               	btfsc	status,2,c
 18279  005044  D7DE               	goto	l335
 18280  005046  0A03               	xorlw	3	; case 2
 18281  005048  B4D8               	btfsc	status,2,c
 18282  00504A  D7E1               	goto	l10665
 18283  00504C  0A01               	xorlw	1	; case 3
 18284  00504E  B4D8               	btfsc	status,2,c
 18285  005050  D7E5               	goto	l10669
 18286  005052  0A07               	xorlw	7	; case 4
 18287  005054  B4D8               	btfsc	status,2,c
 18288  005056  D7E9               	goto	l10673
 18289  005058  D7EF               	goto	l10677
 18290  00505A                     l10683:
 18291                           
 18292                           ;display_lcd.c: 306: coluna++;
 18293  00505A  2A19               	incf	posicao_cursor_lcd@coluna,f,c
 18294                           
 18295                           ;display_lcd.c: 307: }
 18296  00505C  0012               	return	
 18297  00505E                     l10685:
 18298                           
 18299                           ;display_lcd.c: 308: else
 18300                           ;display_lcd.c: 309: {
 18301                           ;display_lcd.c: 310: endereco = 0x00U;
 18302  00505E  0E00               	movlw	0
 18303  005060  6E1B               	movwf	posicao_cursor_lcd@endereco,c
 18304  005062  0012               	return	
 18305  005064                     __end_of_posicao_cursor_lcd:
 18306                           	opt stack 0
 18307                           tosu	equ	0xFFF
 18308                           tosh	equ	0xFFE
 18309                           tosl	equ	0xFFD
 18310                           pclath	equ	0xFFA
 18311                           tblptru	equ	0xFF8
 18312                           tblptrh	equ	0xFF7
 18313                           tblptrl	equ	0xFF6
 18314                           tablat	equ	0xFF5
 18315                           prodh	equ	0xFF4
 18316                           prodl	equ	0xFF3
 18317                           intcon	equ	0xFF2
 18318                           intcon2	equ	0xFF1
 18319                           intcon3	equ	0xFF0
 18320                           indf0	equ	0xFEF
 18321                           postinc0	equ	0xFEE
 18322                           fsr0h	equ	0xFEA
 18323                           fsr0l	equ	0xFE9
 18324                           wreg	equ	0xFE8
 18325                           indf1	equ	0xFE7
 18326                           postinc1	equ	0xFE6
 18327                           postdec1	equ	0xFE5
 18328                           fsr1h	equ	0xFE2
 18329                           fsr1l	equ	0xFE1
 18330                           indf2	equ	0xFDF
 18331                           postinc2	equ	0xFDE
 18332                           postdec2	equ	0xFDD
 18333                           plusw2	equ	0xFDB
 18334                           fsr2h	equ	0xFDA
 18335                           fsr2l	equ	0xFD9
 18336                           status	equ	0xFD8
 18337                           
 18338 ;; *************** function _endereco_cursor_lcd *****************
 18339 ;; Defined at:
 18340 ;;		line 218 in file "bibliotecas/display_lcd.c"
 18341 ;; Parameters:    Size  Location     Type
 18342 ;;  endereco        1    wreg     unsigned char 
 18343 ;; Auto vars:     Size  Location     Type
 18344 ;;  endereco        1   23[COMRAM] unsigned char 
 18345 ;; Return value:  Size  Location     Type
 18346 ;;                  1    wreg      void 
 18347 ;; Registers used:
 18348 ;;		wreg, status,2, status,0, cstack
 18349 ;; Tracked objects:
 18350 ;;		On entry : 0/0
 18351 ;;		On exit  : 0/0
 18352 ;;		Unchanged: 0/0
 18353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18354 ;;      Params:         0       0       0       0       0       0       0       0       0
 18355 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18356 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18357 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18358 ;;Total ram usage:        1 bytes
 18359 ;; Hardware stack levels used:    1
 18360 ;; Hardware stack levels required when called:    3
 18361 ;; This function calls:
 18362 ;;		_delay
 18363 ;; This function is called by:
 18364 ;;		_posicao_cursor_lcd
 18365 ;;		_cria_caractere_lcd
 18366 ;; This function uses a non-reentrant model
 18367 ;;
 18368                           
 18369                           	psect	text55
 18370  005064                     __ptext55:
 18371                           	opt stack 0
 18372  005064                     _endereco_cursor_lcd:
 18373                           	opt stack 25
 18374                           
 18375                           ;incstack = 0
 18376                           ;endereco_cursor_lcd@endereco stored from wreg
 18377  005064  6E18               	movwf	endereco_cursor_lcd@endereco,c
 18378                           
 18379                           ;display_lcd.c: 221: PORTDbits.RD2 = 0;
 18380  005066  9483               	bcf	3971,2,c	;volatile
 18381                           
 18382                           ;display_lcd.c: 222: PORTDbits.RD1 = 0;
 18383  005068  9283               	bcf	3971,1,c	;volatile
 18384                           
 18385                           ;display_lcd.c: 223: PORTDbits.RD0 = 0;
 18386  00506A  9083               	bcf	3971,0,c	;volatile
 18387                           
 18388                           ;display_lcd.c: 226: PORTDbits.RD7 = 1;
 18389  00506C  8E83               	bsf	3971,7,c	;volatile
 18390                           
 18391                           ;display_lcd.c: 227: if(endereco&0b00010000){PORTDbits.RD4=1;}
 18392  00506E  A818               	btfss	endereco_cursor_lcd@endereco,4,c
 18393  005070  D002               	goto	l316
 18394  005072  8883               	bsf	3971,4,c	;volatile
 18395  005074  D001               	goto	l10619
 18396  005076                     l316:
 18397                           
 18398                           ;display_lcd.c: 228: else {PORTDbits.RD4=0;}
 18399  005076  9883               	bcf	3971,4,c	;volatile
 18400  005078                     l10619:
 18401                           
 18402                           ;display_lcd.c: 229: if(endereco&0b00100000){PORTDbits.RD5=1;}
 18403  005078  AA18               	btfss	endereco_cursor_lcd@endereco,5,c
 18404  00507A  D002               	goto	l318
 18405  00507C  8A83               	bsf	3971,5,c	;volatile
 18406  00507E  D001               	goto	l10623
 18407  005080                     l318:
 18408                           
 18409                           ;display_lcd.c: 230: else {PORTDbits.RD5=0;}
 18410  005080  9A83               	bcf	3971,5,c	;volatile
 18411  005082                     l10623:
 18412                           
 18413                           ;display_lcd.c: 231: if(endereco&0b01000000){PORTDbits.RD6=1;}
 18414  005082  AC18               	btfss	endereco_cursor_lcd@endereco,6,c
 18415  005084  D002               	goto	l320
 18416  005086  8C83               	bsf	3971,6,c	;volatile
 18417  005088  D001               	goto	l321
 18418  00508A                     l320:
 18419                           
 18420                           ;display_lcd.c: 232: else {PORTDbits.RD6=0;}
 18421  00508A  9C83               	bcf	3971,6,c	;volatile
 18422  00508C                     l321:
 18423                           
 18424                           ;display_lcd.c: 235: PORTDbits.RD0 = 1;
 18425  00508C  8083               	bsf	3971,0,c	;volatile
 18426                           
 18427                           ;display_lcd.c: 236: delay();
 18428  00508E  EC3F  F02B         	call	_delay	;wreg free
 18429                           
 18430                           ;display_lcd.c: 237: PORTDbits.RD0 = 0;
 18431  005092  9083               	bcf	3971,0,c	;volatile
 18432                           
 18433                           ;display_lcd.c: 238: delay();
 18434  005094  EC3F  F02B         	call	_delay	;wreg free
 18435                           
 18436                           ;display_lcd.c: 241: if(endereco&0b00000001){PORTDbits.RD4=1;}
 18437  005098  A018               	btfss	endereco_cursor_lcd@endereco,0,c
 18438  00509A  D002               	goto	l322
 18439  00509C  8883               	bsf	3971,4,c	;volatile
 18440  00509E  D001               	goto	l323
 18441  0050A0                     l322:
 18442                           
 18443                           ;display_lcd.c: 242: else {PORTDbits.RD4=0;}
 18444  0050A0  9883               	bcf	3971,4,c	;volatile
 18445  0050A2                     l323:
 18446                           
 18447                           ;display_lcd.c: 243: if(endereco&0b00000010){PORTDbits.RD5=1;}
 18448  0050A2  A218               	btfss	endereco_cursor_lcd@endereco,1,c
 18449  0050A4  D002               	goto	l324
 18450  0050A6  8A83               	bsf	3971,5,c	;volatile
 18451  0050A8  D001               	goto	l325
 18452  0050AA                     l324:
 18453                           
 18454                           ;display_lcd.c: 244: else {PORTDbits.RD5=0;}
 18455  0050AA  9A83               	bcf	3971,5,c	;volatile
 18456  0050AC                     l325:
 18457                           
 18458                           ;display_lcd.c: 245: if(endereco&0b00000100){PORTDbits.RD6=1;}
 18459  0050AC  A418               	btfss	endereco_cursor_lcd@endereco,2,c
 18460  0050AE  D002               	goto	l326
 18461  0050B0  8C83               	bsf	3971,6,c	;volatile
 18462  0050B2  D001               	goto	l327
 18463  0050B4                     l326:
 18464                           
 18465                           ;display_lcd.c: 246: else {PORTDbits.RD6=0;}
 18466  0050B4  9C83               	bcf	3971,6,c	;volatile
 18467  0050B6                     l327:
 18468                           
 18469                           ;display_lcd.c: 247: if(endereco&0b00001000){PORTDbits.RD7=1;}
 18470  0050B6  A618               	btfss	endereco_cursor_lcd@endereco,3,c
 18471  0050B8  D002               	goto	l328
 18472  0050BA  8E83               	bsf	3971,7,c	;volatile
 18473  0050BC  D001               	goto	l329
 18474  0050BE                     l328:
 18475                           
 18476                           ;display_lcd.c: 248: else {PORTDbits.RD7=0;}
 18477  0050BE  9E83               	bcf	3971,7,c	;volatile
 18478  0050C0                     l329:
 18479                           
 18480                           ;display_lcd.c: 251: PORTDbits.RD0 = 1;
 18481  0050C0  8083               	bsf	3971,0,c	;volatile
 18482                           
 18483                           ;display_lcd.c: 252: delay();
 18484  0050C2  EC3F  F02B         	call	_delay	;wreg free
 18485                           
 18486                           ;display_lcd.c: 253: PORTDbits.RD0 = 0;
 18487  0050C6  9083               	bcf	3971,0,c	;volatile
 18488                           
 18489                           ;display_lcd.c: 254: delay();
 18490  0050C8  EC3F  F02B         	call	_delay	;wreg free
 18491  0050CC  0012               	return		;funcret
 18492  0050CE                     __end_of_endereco_cursor_lcd:
 18493                           	opt stack 0
 18494                           tosu	equ	0xFFF
 18495                           tosh	equ	0xFFE
 18496                           tosl	equ	0xFFD
 18497                           pclath	equ	0xFFA
 18498                           tblptru	equ	0xFF8
 18499                           tblptrh	equ	0xFF7
 18500                           tblptrl	equ	0xFF6
 18501                           tablat	equ	0xFF5
 18502                           prodh	equ	0xFF4
 18503                           prodl	equ	0xFF3
 18504                           intcon	equ	0xFF2
 18505                           intcon2	equ	0xFF1
 18506                           intcon3	equ	0xFF0
 18507                           indf0	equ	0xFEF
 18508                           postinc0	equ	0xFEE
 18509                           fsr0h	equ	0xFEA
 18510                           fsr0l	equ	0xFE9
 18511                           wreg	equ	0xFE8
 18512                           indf1	equ	0xFE7
 18513                           postinc1	equ	0xFE6
 18514                           postdec1	equ	0xFE5
 18515                           fsr1h	equ	0xFE2
 18516                           fsr1l	equ	0xFE1
 18517                           indf2	equ	0xFDF
 18518                           postinc2	equ	0xFDE
 18519                           postdec2	equ	0xFDD
 18520                           plusw2	equ	0xFDB
 18521                           fsr2h	equ	0xFDA
 18522                           fsr2l	equ	0xFD9
 18523                           status	equ	0xFD8
 18524                           
 18525 ;; *************** function _escreve_inteiro_lcd *****************
 18526 ;; Defined at:
 18527 ;;		line 376 in file "bibliotecas/display_lcd.c"
 18528 ;; Parameters:    Size  Location     Type
 18529 ;;  valor           2   45[COMRAM] int 
 18530 ;; Auto vars:     Size  Location     Type
 18531 ;;  texto           7    0[BANK0 ] unsigned char [7]
 18532 ;; Return value:  Size  Location     Type
 18533 ;;                  1    wreg      void 
 18534 ;; Registers used:
 18535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18536 ;; Tracked objects:
 18537 ;;		On entry : 0/0
 18538 ;;		On exit  : 0/0
 18539 ;;		Unchanged: 0/0
 18540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18541 ;;      Params:         2       0       0       0       0       0       0       0       0
 18542 ;;      Locals:         0       7       0       0       0       0       0       0       0
 18543 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18544 ;;      Totals:         2       7       0       0       0       0       0       0       0
 18545 ;;Total ram usage:        9 bytes
 18546 ;; Hardware stack levels used:    1
 18547 ;; Hardware stack levels required when called:    5
 18548 ;; This function calls:
 18549 ;;		_escreve_frase_ram_lcd
 18550 ;;		_itoa
 18551 ;; This function is called by:
 18552 ;;		_sdc_disk_initialize
 18553 ;;		_sdc_disk_read
 18554 ;;		_check_fs
 18555 ;;		_auto_mount
 18556 ;;		_SDCard
 18557 ;;		_inicializa_SPI
 18558 ;;		_ReadSPI_
 18559 ;;		_WriteSPI_
 18560 ;;		_escreve_float_lcd
 18561 ;; This function uses a non-reentrant model
 18562 ;;
 18563                           
 18564                           	psect	text56
 18565  00552A                     __ptext56:
 18566                           	opt stack 0
 18567  00552A                     _escreve_inteiro_lcd:
 18568                           	opt stack 24
 18569                           
 18570                           ;display_lcd.c: 378: char texto[7] = "000000";
 18571                           
 18572                           ;incstack = 0
 18573  00552A  EE21  F0F4         	lfsr	2,escreve_inteiro_lcd@F3962
 18574  00552E  EE10  F060         	lfsr	1,escreve_inteiro_lcd@texto
 18575  005532  0E06               	movlw	6
 18576  005534                     u11781:
 18577  005534  CFDB FFE3          	movff	plusw2,plusw1
 18578  005538  06E8               	decf	wreg,f,c
 18579  00553A  E2FC               	bc	u11781
 18580                           
 18581                           ;display_lcd.c: 379: itoa(texto,valor, 10);
 18582  00553C  0E60               	movlw	low escreve_inteiro_lcd@texto
 18583  00553E  6E26               	movwf	itoa@buf,c
 18584  005540  0E00               	movlw	high escreve_inteiro_lcd@texto
 18585  005542  6E27               	movwf	itoa@buf+1,c
 18586  005544  C02E  F028         	movff	escreve_inteiro_lcd@valor,itoa@val
 18587  005548  C02F  F029         	movff	escreve_inteiro_lcd@valor+1,itoa@val+1
 18588  00554C  0E00               	movlw	0
 18589  00554E  6E2B               	movwf	itoa@base+1,c
 18590  005550  0E0A               	movlw	10
 18591  005552  6E2A               	movwf	itoa@base,c
 18592  005554  ECF6  F029         	call	_itoa	;wreg free
 18593                           
 18594                           ;display_lcd.c: 380: escreve_frase_ram_lcd(texto);
 18595  005558  0E60               	movlw	low escreve_inteiro_lcd@texto
 18596  00555A  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
 18597  00555C  0E00               	movlw	high escreve_inteiro_lcd@texto
 18598  00555E  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
 18599  005560  EC41  F029         	call	_escreve_frase_ram_lcd	;wreg free
 18600  005564  0012               	return		;funcret
 18601  005566                     __end_of_escreve_inteiro_lcd:
 18602                           	opt stack 0
 18603                           tosu	equ	0xFFF
 18604                           tosh	equ	0xFFE
 18605                           tosl	equ	0xFFD
 18606                           pclath	equ	0xFFA
 18607                           tblptru	equ	0xFF8
 18608                           tblptrh	equ	0xFF7
 18609                           tblptrl	equ	0xFF6
 18610                           tablat	equ	0xFF5
 18611                           prodh	equ	0xFF4
 18612                           prodl	equ	0xFF3
 18613                           intcon	equ	0xFF2
 18614                           intcon2	equ	0xFF1
 18615                           intcon3	equ	0xFF0
 18616                           indf0	equ	0xFEF
 18617                           postinc0	equ	0xFEE
 18618                           fsr0h	equ	0xFEA
 18619                           fsr0l	equ	0xFE9
 18620                           wreg	equ	0xFE8
 18621                           indf1	equ	0xFE7
 18622                           postinc1	equ	0xFE6
 18623                           postdec1	equ	0xFE5
 18624                           plusw1	equ	0xFE3
 18625                           fsr1h	equ	0xFE2
 18626                           fsr1l	equ	0xFE1
 18627                           indf2	equ	0xFDF
 18628                           postinc2	equ	0xFDE
 18629                           postdec2	equ	0xFDD
 18630                           plusw2	equ	0xFDB
 18631                           fsr2h	equ	0xFDA
 18632                           fsr2l	equ	0xFD9
 18633                           status	equ	0xFD8
 18634                           
 18635 ;; *************** function _itoa *****************
 18636 ;; Defined at:
 18637 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
 18638 ;; Parameters:    Size  Location     Type
 18639 ;;  buf             2   37[COMRAM] PTR unsigned char 
 18640 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
 18641 ;;  val             2   39[COMRAM] int 
 18642 ;;  base            2   41[COMRAM] int 
 18643 ;; Auto vars:     Size  Location     Type
 18644 ;;  cp              2   43[COMRAM] PTR unsigned char 
 18645 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
 18646 ;; Return value:  Size  Location     Type
 18647 ;;                  2   37[COMRAM] PTR unsigned char 
 18648 ;; Registers used:
 18649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18650 ;; Tracked objects:
 18651 ;;		On entry : 0/0
 18652 ;;		On exit  : 0/0
 18653 ;;		Unchanged: 0/0
 18654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18655 ;;      Params:         6       0       0       0       0       0       0       0       0
 18656 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18657 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18658 ;;      Totals:         8       0       0       0       0       0       0       0       0
 18659 ;;Total ram usage:        8 bytes
 18660 ;; Hardware stack levels used:    1
 18661 ;; Hardware stack levels required when called:    4
 18662 ;; This function calls:
 18663 ;;		_utoa
 18664 ;; This function is called by:
 18665 ;;		_escreve_inteiro_lcd
 18666 ;;		_escreve_inteiro_uart
 18667 ;; This function uses a non-reentrant model
 18668 ;;
 18669                           
 18670                           	psect	text57
 18671  0053EC                     __ptext57:
 18672                           	opt stack 0
 18673  0053EC                     _itoa:
 18674                           	opt stack 24
 18675                           
 18676                           ;incstack = 0
 18677  0053EC  C026  F02C         	movff	itoa@buf,itoa@cp
 18678  0053F0  C027  F02D         	movff	itoa@buf+1,itoa@cp+1
 18679  0053F4  AE29               	btfss	itoa@val+1,7,c
 18680  0053F6  D00C               	goto	l10653
 18681  0053F8  C026  FFD9         	movff	itoa@buf,fsr2l
 18682  0053FC  C027  FFDA         	movff	itoa@buf+1,fsr2h
 18683  005400  0E2D               	movlw	45
 18684  005402  6EDF               	movwf	indf2,c
 18685  005404  4A26               	infsnz	itoa@buf,f,c
 18686  005406  2A27               	incf	itoa@buf+1,f,c
 18687  005408  6C28               	negf	itoa@val,c
 18688  00540A  1E29               	comf	itoa@val+1,f,c
 18689  00540C  B0D8               	btfsc	status,0,c
 18690  00540E  2A29               	incf	itoa@val+1,f,c
 18691  005410                     l10653:
 18692  005410  C026  F01D         	movff	itoa@buf,utoa@buf
 18693  005414  C027  F01E         	movff	itoa@buf+1,utoa@buf+1
 18694  005418  C028  F01F         	movff	itoa@val,utoa@val
 18695  00541C  C029  F020         	movff	itoa@val+1,utoa@val+1
 18696  005420  C02A  F021         	movff	itoa@base,utoa@base
 18697  005424  C02B  F022         	movff	itoa@base+1,utoa@base+1
 18698  005428  EC03  F025         	call	_utoa	;wreg free
 18699  00542C  0012               	return	
 18700  00542E                     __end_of_itoa:
 18701                           	opt stack 0
 18702                           tosu	equ	0xFFF
 18703                           tosh	equ	0xFFE
 18704                           tosl	equ	0xFFD
 18705                           pclath	equ	0xFFA
 18706                           tblptru	equ	0xFF8
 18707                           tblptrh	equ	0xFF7
 18708                           tblptrl	equ	0xFF6
 18709                           tablat	equ	0xFF5
 18710                           prodh	equ	0xFF4
 18711                           prodl	equ	0xFF3
 18712                           intcon	equ	0xFF2
 18713                           intcon2	equ	0xFF1
 18714                           intcon3	equ	0xFF0
 18715                           indf0	equ	0xFEF
 18716                           postinc0	equ	0xFEE
 18717                           fsr0h	equ	0xFEA
 18718                           fsr0l	equ	0xFE9
 18719                           wreg	equ	0xFE8
 18720                           indf1	equ	0xFE7
 18721                           postinc1	equ	0xFE6
 18722                           postdec1	equ	0xFE5
 18723                           plusw1	equ	0xFE3
 18724                           fsr1h	equ	0xFE2
 18725                           fsr1l	equ	0xFE1
 18726                           indf2	equ	0xFDF
 18727                           postinc2	equ	0xFDE
 18728                           postdec2	equ	0xFDD
 18729                           plusw2	equ	0xFDB
 18730                           fsr2h	equ	0xFDA
 18731                           fsr2l	equ	0xFD9
 18732                           status	equ	0xFD8
 18733                           
 18734 ;; *************** function _utoa *****************
 18735 ;; Defined at:
 18736 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
 18737 ;; Parameters:    Size  Location     Type
 18738 ;;  buf             2   28[COMRAM] PTR unsigned char 
 18739 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
 18740 ;;  val             2   30[COMRAM] unsigned int 
 18741 ;;  base            2   32[COMRAM] int 
 18742 ;; Auto vars:     Size  Location     Type
 18743 ;;  v               2   34[COMRAM] unsigned int 
 18744 ;;  c               1   36[COMRAM] unsigned char 
 18745 ;; Return value:  Size  Location     Type
 18746 ;;                  2   28[COMRAM] PTR unsigned char 
 18747 ;; Registers used:
 18748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18749 ;; Tracked objects:
 18750 ;;		On entry : 0/0
 18751 ;;		On exit  : 0/0
 18752 ;;		Unchanged: 0/0
 18753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18754 ;;      Params:         6       0       0       0       0       0       0       0       0
 18755 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18756 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18757 ;;      Totals:         9       0       0       0       0       0       0       0       0
 18758 ;;Total ram usage:        9 bytes
 18759 ;; Hardware stack levels used:    1
 18760 ;; Hardware stack levels required when called:    3
 18761 ;; This function calls:
 18762 ;;		___lwdiv
 18763 ;;		___lwmod
 18764 ;; This function is called by:
 18765 ;;		_itoa
 18766 ;; This function uses a non-reentrant model
 18767 ;;
 18768                           
 18769                           	psect	text58
 18770  004A06                     __ptext58:
 18771                           	opt stack 0
 18772  004A06                     _utoa:
 18773                           	opt stack 24
 18774                           
 18775                           ;incstack = 0
 18776  004A06  C01F  F023         	movff	utoa@val,utoa@v
 18777  004A0A  C020  F024         	movff	utoa@val+1,utoa@v+1
 18778  004A0E                     l10577:
 18779  004A0E  C023  F016         	movff	utoa@v,___lwdiv@dividend
 18780  004A12  C024  F017         	movff	utoa@v+1,___lwdiv@dividend+1
 18781  004A16  C021  F018         	movff	utoa@base,___lwdiv@divisor
 18782  004A1A  C022  F019         	movff	utoa@base+1,___lwdiv@divisor+1
 18783  004A1E  EC18  F029         	call	___lwdiv	;wreg free
 18784  004A22  C016  F023         	movff	?___lwdiv,utoa@v
 18785  004A26  C017  F024         	movff	?___lwdiv+1,utoa@v+1
 18786  004A2A  4A1D               	infsnz	utoa@buf,f,c
 18787  004A2C  2A1E               	incf	utoa@buf+1,f,c
 18788  004A2E  5023               	movf	utoa@v,w,c
 18789  004A30  1024               	iorwf	utoa@v+1,w,c
 18790  004A32  A4D8               	btfss	status,2,c
 18791  004A34  D7EC               	goto	l10577
 18792  004A36  C01D  FFD9         	movff	utoa@buf,fsr2l
 18793  004A3A  C01E  FFDA         	movff	utoa@buf+1,fsr2h
 18794  004A3E  0E00               	movlw	0
 18795  004A40  6EDF               	movwf	indf2,c
 18796  004A42  061D               	decf	utoa@buf,f,c
 18797  004A44  A0D8               	btfss	status,0,c
 18798  004A46  061E               	decf	utoa@buf+1,f,c
 18799  004A48                     l10587:
 18800  004A48  C01F  F016         	movff	utoa@val,___lwmod@dividend
 18801  004A4C  C020  F017         	movff	utoa@val+1,___lwmod@dividend+1
 18802  004A50  C021  F018         	movff	utoa@base,___lwmod@divisor
 18803  004A54  C022  F019         	movff	utoa@base+1,___lwmod@divisor+1
 18804  004A58  EC17  F02A         	call	___lwmod	;wreg free
 18805  004A5C  5016               	movf	?___lwmod,w,c
 18806  004A5E  6E25               	movwf	utoa@c,c
 18807  004A60  C01F  F016         	movff	utoa@val,___lwdiv@dividend
 18808  004A64  C020  F017         	movff	utoa@val+1,___lwdiv@dividend+1
 18809  004A68  C021  F018         	movff	utoa@base,___lwdiv@divisor
 18810  004A6C  C022  F019         	movff	utoa@base+1,___lwdiv@divisor+1
 18811  004A70  EC18  F029         	call	___lwdiv	;wreg free
 18812  004A74  C016  F01F         	movff	?___lwdiv,utoa@val
 18813  004A78  C017  F020         	movff	?___lwdiv+1,utoa@val+1
 18814  004A7C  0E09               	movlw	9
 18815  004A7E  6425               	cpfsgt	utoa@c,c
 18816  004A80  D002               	goto	l1930
 18817  004A82  0E07               	movlw	7
 18818  004A84  2625               	addwf	utoa@c,f,c
 18819  004A86                     l1930:
 18820  004A86  0E30               	movlw	48
 18821  004A88  2625               	addwf	utoa@c,f,c
 18822  004A8A  C01D  FFD9         	movff	utoa@buf,fsr2l
 18823  004A8E  C01E  FFDA         	movff	utoa@buf+1,fsr2h
 18824  004A92  C025  FFDF         	movff	utoa@c,indf2
 18825  004A96  061D               	decf	utoa@buf,f,c
 18826  004A98  A0D8               	btfss	status,0,c
 18827  004A9A  061E               	decf	utoa@buf+1,f,c
 18828  004A9C  501F               	movf	utoa@val,w,c
 18829  004A9E  1020               	iorwf	utoa@val+1,w,c
 18830  004AA0  A4D8               	btfss	status,2,c
 18831  004AA2  D7D2               	goto	l10587
 18832                           
 18833                           ;	Return value of _utoa is never used
 18834  004AA4  4A1D               	infsnz	utoa@buf,f,c
 18835  004AA6  2A1E               	incf	utoa@buf+1,f,c
 18836  004AA8  0012               	return	
 18837  004AAA                     __end_of_utoa:
 18838                           	opt stack 0
 18839                           tosu	equ	0xFFF
 18840                           tosh	equ	0xFFE
 18841                           tosl	equ	0xFFD
 18842                           pclath	equ	0xFFA
 18843                           tblptru	equ	0xFF8
 18844                           tblptrh	equ	0xFF7
 18845                           tblptrl	equ	0xFF6
 18846                           tablat	equ	0xFF5
 18847                           prodh	equ	0xFF4
 18848                           prodl	equ	0xFF3
 18849                           intcon	equ	0xFF2
 18850                           intcon2	equ	0xFF1
 18851                           intcon3	equ	0xFF0
 18852                           indf0	equ	0xFEF
 18853                           postinc0	equ	0xFEE
 18854                           fsr0h	equ	0xFEA
 18855                           fsr0l	equ	0xFE9
 18856                           wreg	equ	0xFE8
 18857                           indf1	equ	0xFE7
 18858                           postinc1	equ	0xFE6
 18859                           postdec1	equ	0xFE5
 18860                           plusw1	equ	0xFE3
 18861                           fsr1h	equ	0xFE2
 18862                           fsr1l	equ	0xFE1
 18863                           indf2	equ	0xFDF
 18864                           postinc2	equ	0xFDE
 18865                           postdec2	equ	0xFDD
 18866                           plusw2	equ	0xFDB
 18867                           fsr2h	equ	0xFDA
 18868                           fsr2l	equ	0xFD9
 18869                           status	equ	0xFD8
 18870                           
 18871 ;; *************** function ___lwmod *****************
 18872 ;; Defined at:
 18873 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
 18874 ;; Parameters:    Size  Location     Type
 18875 ;;  dividend        2   21[COMRAM] unsigned int 
 18876 ;;  divisor         2   23[COMRAM] unsigned int 
 18877 ;; Auto vars:     Size  Location     Type
 18878 ;;  counter         1   25[COMRAM] unsigned char 
 18879 ;; Return value:  Size  Location     Type
 18880 ;;                  2   21[COMRAM] unsigned int 
 18881 ;; Registers used:
 18882 ;;		wreg, status,2, status,0
 18883 ;; Tracked objects:
 18884 ;;		On entry : 0/0
 18885 ;;		On exit  : 0/0
 18886 ;;		Unchanged: 0/0
 18887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18888 ;;      Params:         4       0       0       0       0       0       0       0       0
 18889 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18890 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18891 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18892 ;;Total ram usage:        5 bytes
 18893 ;; Hardware stack levels used:    1
 18894 ;; Hardware stack levels required when called:    2
 18895 ;; This function calls:
 18896 ;;		Nothing
 18897 ;; This function is called by:
 18898 ;;		_utoa
 18899 ;;		_converte_inteiro_matriz
 18900 ;; This function uses a non-reentrant model
 18901 ;;
 18902                           
 18903                           	psect	text59
 18904  00542E                     __ptext59:
 18905                           	opt stack 0
 18906  00542E                     ___lwmod:
 18907                           	opt stack 24
 18908                           
 18909                           ;incstack = 0
 18910  00542E  5018               	movf	___lwmod@divisor,w,c
 18911  005430  1019               	iorwf	___lwmod@divisor+1,w,c
 18912  005432  B4D8               	btfsc	status,2,c
 18913  005434  D018               	goto	l2019
 18914  005436  0E01               	movlw	1
 18915  005438  6E1A               	movwf	___lwmod@counter,c
 18916  00543A  D004               	goto	l10529
 18917  00543C                     l10527:
 18918  00543C  90D8               	bcf	status,0,c
 18919  00543E  3618               	rlcf	___lwmod@divisor,f,c
 18920  005440  3619               	rlcf	___lwmod@divisor+1,f,c
 18921  005442  2A1A               	incf	___lwmod@counter,f,c
 18922  005444                     l10529:
 18923  005444  AE19               	btfss	___lwmod@divisor+1,7,c
 18924  005446  D7FA               	goto	l10527
 18925  005448                     l10531:
 18926  005448  5018               	movf	___lwmod@divisor,w,c
 18927  00544A  5C16               	subwf	___lwmod@dividend,w,c
 18928  00544C  5019               	movf	___lwmod@divisor+1,w,c
 18929  00544E  5817               	subwfb	___lwmod@dividend+1,w,c
 18930  005450  A0D8               	btfss	status,0,c
 18931  005452  D004               	goto	l10535
 18932  005454  5018               	movf	___lwmod@divisor,w,c
 18933  005456  5E16               	subwf	___lwmod@dividend,f,c
 18934  005458  5019               	movf	___lwmod@divisor+1,w,c
 18935  00545A  5A17               	subwfb	___lwmod@dividend+1,f,c
 18936  00545C                     l10535:
 18937  00545C  90D8               	bcf	status,0,c
 18938  00545E  3219               	rrcf	___lwmod@divisor+1,f,c
 18939  005460  3218               	rrcf	___lwmod@divisor,f,c
 18940  005462  2E1A               	decfsz	___lwmod@counter,f,c
 18941  005464  D7F1               	goto	l10531
 18942  005466                     l2019:
 18943  005466  C016  F016         	movff	___lwmod@dividend,?___lwmod
 18944  00546A  C017  F017         	movff	___lwmod@dividend+1,?___lwmod+1
 18945  00546E  0012               	return		;funcret
 18946  005470                     __end_of___lwmod:
 18947                           	opt stack 0
 18948                           tosu	equ	0xFFF
 18949                           tosh	equ	0xFFE
 18950                           tosl	equ	0xFFD
 18951                           pclath	equ	0xFFA
 18952                           tblptru	equ	0xFF8
 18953                           tblptrh	equ	0xFF7
 18954                           tblptrl	equ	0xFF6
 18955                           tablat	equ	0xFF5
 18956                           prodh	equ	0xFF4
 18957                           prodl	equ	0xFF3
 18958                           intcon	equ	0xFF2
 18959                           intcon2	equ	0xFF1
 18960                           intcon3	equ	0xFF0
 18961                           indf0	equ	0xFEF
 18962                           postinc0	equ	0xFEE
 18963                           fsr0h	equ	0xFEA
 18964                           fsr0l	equ	0xFE9
 18965                           wreg	equ	0xFE8
 18966                           indf1	equ	0xFE7
 18967                           postinc1	equ	0xFE6
 18968                           postdec1	equ	0xFE5
 18969                           plusw1	equ	0xFE3
 18970                           fsr1h	equ	0xFE2
 18971                           fsr1l	equ	0xFE1
 18972                           indf2	equ	0xFDF
 18973                           postinc2	equ	0xFDE
 18974                           postdec2	equ	0xFDD
 18975                           plusw2	equ	0xFDB
 18976                           fsr2h	equ	0xFDA
 18977                           fsr2l	equ	0xFD9
 18978                           status	equ	0xFD8
 18979                           
 18980 ;; *************** function ___lwdiv *****************
 18981 ;; Defined at:
 18982 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
 18983 ;; Parameters:    Size  Location     Type
 18984 ;;  dividend        2   21[COMRAM] unsigned int 
 18985 ;;  divisor         2   23[COMRAM] unsigned int 
 18986 ;; Auto vars:     Size  Location     Type
 18987 ;;  quotient        2   26[COMRAM] unsigned int 
 18988 ;;  counter         1   25[COMRAM] unsigned char 
 18989 ;; Return value:  Size  Location     Type
 18990 ;;                  2   21[COMRAM] unsigned int 
 18991 ;; Registers used:
 18992 ;;		wreg, status,2, status,0
 18993 ;; Tracked objects:
 18994 ;;		On entry : 0/0
 18995 ;;		On exit  : 0/0
 18996 ;;		Unchanged: 0/0
 18997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18998 ;;      Params:         4       0       0       0       0       0       0       0       0
 18999 ;;      Locals:         3       0       0       0       0       0       0       0       0
 19000 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19001 ;;      Totals:         7       0       0       0       0       0       0       0       0
 19002 ;;Total ram usage:        7 bytes
 19003 ;; Hardware stack levels used:    1
 19004 ;; Hardware stack levels required when called:    2
 19005 ;; This function calls:
 19006 ;;		Nothing
 19007 ;; This function is called by:
 19008 ;;		_utoa
 19009 ;;		_converte_inteiro_matriz
 19010 ;; This function uses a non-reentrant model
 19011 ;;
 19012                           
 19013                           	psect	text60
 19014  005230                     __ptext60:
 19015                           	opt stack 0
 19016  005230                     ___lwdiv:
 19017                           	opt stack 24
 19018                           
 19019                           ;incstack = 0
 19020  005230  0E00               	movlw	0
 19021  005232  6E1C               	movwf	___lwdiv@quotient+1,c
 19022  005234  0E00               	movlw	0
 19023  005236  6E1B               	movwf	___lwdiv@quotient,c
 19024  005238  5018               	movf	___lwdiv@divisor,w,c
 19025  00523A  1019               	iorwf	___lwdiv@divisor+1,w,c
 19026  00523C  B4D8               	btfsc	status,2,c
 19027  00523E  D01C               	goto	l2009
 19028  005240  0E01               	movlw	1
 19029  005242  6E1A               	movwf	___lwdiv@counter,c
 19030  005244  D004               	goto	l10509
 19031  005246                     l10507:
 19032  005246  90D8               	bcf	status,0,c
 19033  005248  3618               	rlcf	___lwdiv@divisor,f,c
 19034  00524A  3619               	rlcf	___lwdiv@divisor+1,f,c
 19035  00524C  2A1A               	incf	___lwdiv@counter,f,c
 19036  00524E                     l10509:
 19037  00524E  AE19               	btfss	___lwdiv@divisor+1,7,c
 19038  005250  D7FA               	goto	l10507
 19039  005252                     l10511:
 19040  005252  90D8               	bcf	status,0,c
 19041  005254  361B               	rlcf	___lwdiv@quotient,f,c
 19042  005256  361C               	rlcf	___lwdiv@quotient+1,f,c
 19043  005258  5018               	movf	___lwdiv@divisor,w,c
 19044  00525A  5C16               	subwf	___lwdiv@dividend,w,c
 19045  00525C  5019               	movf	___lwdiv@divisor+1,w,c
 19046  00525E  5817               	subwfb	___lwdiv@dividend+1,w,c
 19047  005260  A0D8               	btfss	status,0,c
 19048  005262  D005               	goto	l10519
 19049  005264  5018               	movf	___lwdiv@divisor,w,c
 19050  005266  5E16               	subwf	___lwdiv@dividend,f,c
 19051  005268  5019               	movf	___lwdiv@divisor+1,w,c
 19052  00526A  5A17               	subwfb	___lwdiv@dividend+1,f,c
 19053  00526C  801B               	bsf	___lwdiv@quotient,0,c
 19054  00526E                     l10519:
 19055  00526E  90D8               	bcf	status,0,c
 19056  005270  3219               	rrcf	___lwdiv@divisor+1,f,c
 19057  005272  3218               	rrcf	___lwdiv@divisor,f,c
 19058  005274  2E1A               	decfsz	___lwdiv@counter,f,c
 19059  005276  D7ED               	goto	l10511
 19060  005278                     l2009:
 19061  005278  C01B  F016         	movff	___lwdiv@quotient,?___lwdiv
 19062  00527C  C01C  F017         	movff	___lwdiv@quotient+1,?___lwdiv+1
 19063  005280  0012               	return		;funcret
 19064  005282                     __end_of___lwdiv:
 19065                           	opt stack 0
 19066                           tosu	equ	0xFFF
 19067                           tosh	equ	0xFFE
 19068                           tosl	equ	0xFFD
 19069                           pclath	equ	0xFFA
 19070                           tblptru	equ	0xFF8
 19071                           tblptrh	equ	0xFF7
 19072                           tblptrl	equ	0xFF6
 19073                           tablat	equ	0xFF5
 19074                           prodh	equ	0xFF4
 19075                           prodl	equ	0xFF3
 19076                           intcon	equ	0xFF2
 19077                           intcon2	equ	0xFF1
 19078                           intcon3	equ	0xFF0
 19079                           indf0	equ	0xFEF
 19080                           postinc0	equ	0xFEE
 19081                           fsr0h	equ	0xFEA
 19082                           fsr0l	equ	0xFE9
 19083                           wreg	equ	0xFE8
 19084                           indf1	equ	0xFE7
 19085                           postinc1	equ	0xFE6
 19086                           postdec1	equ	0xFE5
 19087                           plusw1	equ	0xFE3
 19088                           fsr1h	equ	0xFE2
 19089                           fsr1l	equ	0xFE1
 19090                           indf2	equ	0xFDF
 19091                           postinc2	equ	0xFDE
 19092                           postdec2	equ	0xFDD
 19093                           plusw2	equ	0xFDB
 19094                           fsr2h	equ	0xFDA
 19095                           fsr2l	equ	0xFD9
 19096                           status	equ	0xFD8
 19097                           
 19098 ;; *************** function _escreve_frase_ram_lcd *****************
 19099 ;; Defined at:
 19100 ;;		line 445 in file "bibliotecas/display_lcd.c"
 19101 ;; Parameters:    Size  Location     Type
 19102 ;;  buffer          2   24[COMRAM] PTR unsigned char 
 19103 ;;		 -> STR_47(9), STR_46(17), STR_45(17), STR_44(17), 
 19104 ;;		 -> STR_43(17), STR_42(5), STR_41(18), buff(20), 
 19105 ;;		 -> STR_40(10), STR_38(16), STR_37(16), mensagem_inicial@msg_dois(17), 
 19106 ;;		 -> mensagem_inicial@msg_linha_um(17), STR_35(19), STR_34(19), STR_33(19), 
 19107 ;;		 -> STR_31(16), STR_30(16), STR_28(19), STR_25(17), 
 19108 ;;		 -> STR_23(19), STR_22(12), escreve_inteiro_lcd@texto(7), STR_21(19), 
 19109 ;;		 -> STR_20(16), STR_19(16), STR_18(14), STR_17(19), 
 19110 ;;		 -> RAM(2047), STR_16(17), STR_15(16), STR_14(17), 
 19111 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(12), 
 19112 ;;		 -> STR_9(11), STR_6(5), STR_4(5), gps@gps_buffer(15), 
 19113 ;;		 -> dado_buffer(7), STR_2(6), data_buffer(15), STR_1(6), 
 19114 ;; Auto vars:     Size  Location     Type
 19115 ;;		None
 19116 ;; Return value:  Size  Location     Type
 19117 ;;                  1    wreg      void 
 19118 ;; Registers used:
 19119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19120 ;; Tracked objects:
 19121 ;;		On entry : 0/0
 19122 ;;		On exit  : 0/0
 19123 ;;		Unchanged: 0/0
 19124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19125 ;;      Params:         2       0       0       0       0       0       0       0       0
 19126 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19127 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19128 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19129 ;;Total ram usage:        2 bytes
 19130 ;; Hardware stack levels used:    1
 19131 ;; Hardware stack levels required when called:    4
 19132 ;; This function calls:
 19133 ;;		_escreve_caractere_lcd
 19134 ;; This function is called by:
 19135 ;;		_sdc_disk_initialize
 19136 ;;		_sdc_disk_read
 19137 ;;		_sdc_disk_write
 19138 ;;		_escreve_inteiro_lcd
 19139 ;;		_check_fs
 19140 ;;		_auto_mount
 19141 ;;		_mensagem_inicial
 19142 ;;		_SDCard
 19143 ;;		_inicializa_SPI
 19144 ;;		_WriteSPI_
 19145 ;;		_gps
 19146 ;; This function uses a non-reentrant model
 19147 ;;
 19148                           
 19149                           	psect	text61
 19150  005282                     __ptext61:
 19151                           	opt stack 0
 19152  005282                     _escreve_frase_ram_lcd:
 19153                           	opt stack 25
 19154                           
 19155                           ;display_lcd.c: 447: while(*buffer)
 19156                           
 19157                           ;incstack = 0
 19158  005282  D014               	goto	l10611
 19159  005284                     l10607:
 19160                           
 19161                           ;display_lcd.c: 448: {
 19162                           ;display_lcd.c: 449: escreve_caractere_lcd(*buffer);
 19163  005284  C019  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 19164  005288  C01A  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 19165  00528C  6AF8               	clrf	tblptru,c
 19166  00528E  0E07               	movlw	(high __ramtop+-1)
 19167  005290  64F7               	cpfsgt	tblptrh,c
 19168  005292  D003               	bra	u11667
 19169  005294  0008               	tblrd		*
 19170  005296  50F5               	movf	tablat,w,c
 19171  005298  D005               	bra	u11660
 19172  00529A                     u11667:
 19173  00529A  CFF6 FFE9          	movff	tblptrl,fsr0l
 19174  00529E  CFF7 FFEA          	movff	tblptrh,fsr0h
 19175  0052A2  50EF               	movf	indf0,w,c
 19176  0052A4                     u11660:
 19177  0052A4  ECC1  F027         	call	_escreve_caractere_lcd
 19178                           
 19179                           ;display_lcd.c: 450: buffer++;
 19180  0052A8  4A19               	infsnz	escreve_frase_ram_lcd@buffer,f,c
 19181  0052AA  2A1A               	incf	escreve_frase_ram_lcd@buffer+1,f,c
 19182  0052AC                     l10611:
 19183  0052AC  C019  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 19184  0052B0  C01A  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 19185  0052B4  6AF8               	clrf	tblptru,c
 19186  0052B6  0E07               	movlw	(high __ramtop+-1)
 19187  0052B8  64F7               	cpfsgt	tblptrh,c
 19188  0052BA  D003               	bra	u11677
 19189  0052BC  0008               	tblrd		*
 19190  0052BE  50F5               	movf	tablat,w,c
 19191  0052C0  D005               	bra	u11670
 19192  0052C2                     u11677:
 19193  0052C2  CFF6 FFE9          	movff	tblptrl,fsr0l
 19194  0052C6  CFF7 FFEA          	movff	tblptrh,fsr0h
 19195  0052CA  50EF               	movf	indf0,w,c
 19196  0052CC                     u11670:
 19197  0052CC  0900               	iorlw	0
 19198  0052CE  B4D8               	btfsc	status,2,c
 19199  0052D0  0012               	return	
 19200  0052D2  D7D8               	goto	l10607
 19201  0052D4                     __end_of_escreve_frase_ram_lcd:
 19202                           	opt stack 0
 19203                           tosu	equ	0xFFF
 19204                           tosh	equ	0xFFE
 19205                           tosl	equ	0xFFD
 19206                           pclath	equ	0xFFA
 19207                           tblptru	equ	0xFF8
 19208                           tblptrh	equ	0xFF7
 19209                           tblptrl	equ	0xFF6
 19210                           tablat	equ	0xFF5
 19211                           prodh	equ	0xFF4
 19212                           prodl	equ	0xFF3
 19213                           intcon	equ	0xFF2
 19214                           intcon2	equ	0xFF1
 19215                           intcon3	equ	0xFF0
 19216                           indf0	equ	0xFEF
 19217                           postinc0	equ	0xFEE
 19218                           fsr0h	equ	0xFEA
 19219                           fsr0l	equ	0xFE9
 19220                           wreg	equ	0xFE8
 19221                           indf1	equ	0xFE7
 19222                           postinc1	equ	0xFE6
 19223                           postdec1	equ	0xFE5
 19224                           plusw1	equ	0xFE3
 19225                           fsr1h	equ	0xFE2
 19226                           fsr1l	equ	0xFE1
 19227                           indf2	equ	0xFDF
 19228                           postinc2	equ	0xFDE
 19229                           postdec2	equ	0xFDD
 19230                           plusw2	equ	0xFDB
 19231                           fsr2h	equ	0xFDA
 19232                           fsr2l	equ	0xFD9
 19233                           status	equ	0xFD8
 19234                           
 19235 ;; *************** function _escreve_caractere_lcd *****************
 19236 ;; Defined at:
 19237 ;;		line 323 in file "bibliotecas/display_lcd.c"
 19238 ;; Parameters:    Size  Location     Type
 19239 ;;  data            1    wreg     unsigned char 
 19240 ;; Auto vars:     Size  Location     Type
 19241 ;;  data            1   23[COMRAM] unsigned char 
 19242 ;; Return value:  Size  Location     Type
 19243 ;;                  1    wreg      void 
 19244 ;; Registers used:
 19245 ;;		wreg, status,2, status,0, cstack
 19246 ;; Tracked objects:
 19247 ;;		On entry : 0/0
 19248 ;;		On exit  : 0/0
 19249 ;;		Unchanged: 0/0
 19250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19251 ;;      Params:         0       0       0       0       0       0       0       0       0
 19252 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19253 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19254 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19255 ;;Total ram usage:        1 bytes
 19256 ;; Hardware stack levels used:    1
 19257 ;; Hardware stack levels required when called:    3
 19258 ;; This function calls:
 19259 ;;		_delay
 19260 ;; This function is called by:
 19261 ;;		_escreve_frase_ram_lcd
 19262 ;;		_escreve_float_lcd
 19263 ;;		_escreve_frase_lcd
 19264 ;;		_cria_caractere_lcd
 19265 ;; This function uses a non-reentrant model
 19266 ;;
 19267                           
 19268                           	psect	text62
 19269  004F82                     __ptext62:
 19270                           	opt stack 0
 19271  004F82                     _escreve_caractere_lcd:
 19272                           	opt stack 25
 19273                           
 19274                           ;incstack = 0
 19275                           ;escreve_caractere_lcd@data stored from wreg
 19276  004F82  6E18               	movwf	escreve_caractere_lcd@data,c
 19277                           
 19278                           ;display_lcd.c: 326: PORTDbits.RD2 = 0;
 19279  004F84  9483               	bcf	3971,2,c	;volatile
 19280                           
 19281                           ;display_lcd.c: 327: PORTDbits.RD1 = 1;
 19282  004F86  8283               	bsf	3971,1,c	;volatile
 19283                           
 19284                           ;display_lcd.c: 328: PORTDbits.RD0 = 0;
 19285  004F88  9083               	bcf	3971,0,c	;volatile
 19286                           
 19287                           ;display_lcd.c: 331: if(data&0b00010000){PORTDbits.RD4=1;}
 19288  004F8A  A818               	btfss	escreve_caractere_lcd@data,4,c
 19289  004F8C  D002               	goto	l345
 19290  004F8E  8883               	bsf	3971,4,c	;volatile
 19291  004F90  D001               	goto	l10545
 19292  004F92                     l345:
 19293                           
 19294                           ;display_lcd.c: 332: else {PORTDbits.RD4=0;}
 19295  004F92  9883               	bcf	3971,4,c	;volatile
 19296  004F94                     l10545:
 19297                           
 19298                           ;display_lcd.c: 333: if(data&0b00100000){PORTDbits.RD5=1;}
 19299  004F94  AA18               	btfss	escreve_caractere_lcd@data,5,c
 19300  004F96  D002               	goto	l347
 19301  004F98  8A83               	bsf	3971,5,c	;volatile
 19302  004F9A  D001               	goto	l10549
 19303  004F9C                     l347:
 19304                           
 19305                           ;display_lcd.c: 334: else {PORTDbits.RD5=0;}
 19306  004F9C  9A83               	bcf	3971,5,c	;volatile
 19307  004F9E                     l10549:
 19308                           
 19309                           ;display_lcd.c: 335: if(data&0b01000000){PORTDbits.RD6=1;}
 19310  004F9E  AC18               	btfss	escreve_caractere_lcd@data,6,c
 19311  004FA0  D002               	goto	l349
 19312  004FA2  8C83               	bsf	3971,6,c	;volatile
 19313  004FA4  D001               	goto	l10553
 19314  004FA6                     l349:
 19315                           
 19316                           ;display_lcd.c: 336: else {PORTDbits.RD6=0;}
 19317  004FA6  9C83               	bcf	3971,6,c	;volatile
 19318  004FA8                     l10553:
 19319                           
 19320                           ;display_lcd.c: 337: if(data&0b10000000){PORTDbits.RD7=1;}
 19321  004FA8  AE18               	btfss	escreve_caractere_lcd@data,7,c
 19322  004FAA  D002               	goto	l351
 19323  004FAC  8E83               	bsf	3971,7,c	;volatile
 19324  004FAE  D001               	goto	l352
 19325  004FB0                     l351:
 19326                           
 19327                           ;display_lcd.c: 338: else {PORTDbits.RD7=0;}
 19328  004FB0  9E83               	bcf	3971,7,c	;volatile
 19329  004FB2                     l352:
 19330                           
 19331                           ;display_lcd.c: 341: PORTDbits.RD0 = 1;
 19332  004FB2  8083               	bsf	3971,0,c	;volatile
 19333                           
 19334                           ;display_lcd.c: 342: delay();
 19335  004FB4  EC3F  F02B         	call	_delay	;wreg free
 19336                           
 19337                           ;display_lcd.c: 343: PORTDbits.RD0 = 0;
 19338  004FB8  9083               	bcf	3971,0,c	;volatile
 19339                           
 19340                           ;display_lcd.c: 344: delay();
 19341  004FBA  EC3F  F02B         	call	_delay	;wreg free
 19342                           
 19343                           ;display_lcd.c: 348: if(data&0b00000001){PORTDbits.RD4=1;}
 19344  004FBE  A018               	btfss	escreve_caractere_lcd@data,0,c
 19345  004FC0  D002               	goto	l353
 19346  004FC2  8883               	bsf	3971,4,c	;volatile
 19347  004FC4  D001               	goto	l354
 19348  004FC6                     l353:
 19349                           
 19350                           ;display_lcd.c: 349: else {PORTDbits.RD4=0;}
 19351  004FC6  9883               	bcf	3971,4,c	;volatile
 19352  004FC8                     l354:
 19353                           
 19354                           ;display_lcd.c: 350: if(data&0b00000010){PORTDbits.RD5=1;}
 19355  004FC8  A218               	btfss	escreve_caractere_lcd@data,1,c
 19356  004FCA  D002               	goto	l355
 19357  004FCC  8A83               	bsf	3971,5,c	;volatile
 19358  004FCE  D001               	goto	l356
 19359  004FD0                     l355:
 19360                           
 19361                           ;display_lcd.c: 351: else {PORTDbits.RD5=0;}
 19362  004FD0  9A83               	bcf	3971,5,c	;volatile
 19363  004FD2                     l356:
 19364                           
 19365                           ;display_lcd.c: 352: if(data&0b00000100){PORTDbits.RD6=1;}
 19366  004FD2  A418               	btfss	escreve_caractere_lcd@data,2,c
 19367  004FD4  D002               	goto	l357
 19368  004FD6  8C83               	bsf	3971,6,c	;volatile
 19369  004FD8  D001               	goto	l358
 19370  004FDA                     l357:
 19371                           
 19372                           ;display_lcd.c: 353: else {PORTDbits.RD6=0;}
 19373  004FDA  9C83               	bcf	3971,6,c	;volatile
 19374  004FDC                     l358:
 19375                           
 19376                           ;display_lcd.c: 354: if(data&0b00001000){PORTDbits.RD7=1;}
 19377  004FDC  A618               	btfss	escreve_caractere_lcd@data,3,c
 19378  004FDE  D002               	goto	l359
 19379  004FE0  8E83               	bsf	3971,7,c	;volatile
 19380  004FE2  D001               	goto	l360
 19381  004FE4                     l359:
 19382                           
 19383                           ;display_lcd.c: 355: else {PORTDbits.RD7=0;}
 19384  004FE4  9E83               	bcf	3971,7,c	;volatile
 19385  004FE6                     l360:
 19386                           
 19387                           ;display_lcd.c: 358: PORTDbits.RD0 = 1;
 19388  004FE6  8083               	bsf	3971,0,c	;volatile
 19389                           
 19390                           ;display_lcd.c: 359: delay();
 19391  004FE8  EC3F  F02B         	call	_delay	;wreg free
 19392                           
 19393                           ;display_lcd.c: 360: PORTDbits.RD0 = 0;
 19394  004FEC  9083               	bcf	3971,0,c	;volatile
 19395                           
 19396                           ;display_lcd.c: 361: delay();
 19397  004FEE  EC3F  F02B         	call	_delay	;wreg free
 19398  004FF2  0012               	return		;funcret
 19399  004FF4                     __end_of_escreve_caractere_lcd:
 19400                           	opt stack 0
 19401                           tosu	equ	0xFFF
 19402                           tosh	equ	0xFFE
 19403                           tosl	equ	0xFFD
 19404                           pclath	equ	0xFFA
 19405                           tblptru	equ	0xFF8
 19406                           tblptrh	equ	0xFF7
 19407                           tblptrl	equ	0xFF6
 19408                           tablat	equ	0xFF5
 19409                           prodh	equ	0xFF4
 19410                           prodl	equ	0xFF3
 19411                           intcon	equ	0xFF2
 19412                           intcon2	equ	0xFF1
 19413                           intcon3	equ	0xFF0
 19414                           indf0	equ	0xFEF
 19415                           postinc0	equ	0xFEE
 19416                           fsr0h	equ	0xFEA
 19417                           fsr0l	equ	0xFE9
 19418                           wreg	equ	0xFE8
 19419                           indf1	equ	0xFE7
 19420                           postinc1	equ	0xFE6
 19421                           postdec1	equ	0xFE5
 19422                           plusw1	equ	0xFE3
 19423                           fsr1h	equ	0xFE2
 19424                           fsr1l	equ	0xFE1
 19425                           indf2	equ	0xFDF
 19426                           postinc2	equ	0xFDE
 19427                           postdec2	equ	0xFDD
 19428                           plusw2	equ	0xFDB
 19429                           fsr2h	equ	0xFDA
 19430                           fsr2l	equ	0xFD9
 19431                           status	equ	0xFD8
 19432                           
 19433 ;; *************** function _delay *****************
 19434 ;; Defined at:
 19435 ;;		line 45 in file "bibliotecas/display_lcd.c"
 19436 ;; Parameters:    Size  Location     Type
 19437 ;;		None
 19438 ;; Auto vars:     Size  Location     Type
 19439 ;;  contador_int    1   22[COMRAM] unsigned char 
 19440 ;;  contador_ext    1   21[COMRAM] unsigned char 
 19441 ;; Return value:  Size  Location     Type
 19442 ;;                  1    wreg      void 
 19443 ;; Registers used:
 19444 ;;		wreg, status,2, status,0
 19445 ;; Tracked objects:
 19446 ;;		On entry : 0/0
 19447 ;;		On exit  : 0/0
 19448 ;;		Unchanged: 0/0
 19449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19450 ;;      Params:         0       0       0       0       0       0       0       0       0
 19451 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19452 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19453 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19454 ;;Total ram usage:        2 bytes
 19455 ;; Hardware stack levels used:    1
 19456 ;; Hardware stack levels required when called:    2
 19457 ;; This function calls:
 19458 ;;		Nothing
 19459 ;; This function is called by:
 19460 ;;		_init_lcd
 19461 ;;		_escreve_cmd_lcd
 19462 ;;		_endereco_cursor_lcd
 19463 ;;		_escreve_caractere_lcd
 19464 ;; This function uses a non-reentrant model
 19465 ;;
 19466                           
 19467                           	psect	text63
 19468  00567E                     __ptext63:
 19469                           	opt stack 0
 19470  00567E                     _delay:
 19471                           	opt stack 25
 19472                           
 19473                           ;display_lcd.c: 47: unsigned char contador_ext, contador_int;
 19474                           ;display_lcd.c: 49: for(contador_ext = 0; contador_ext<100; contador_ext++)
 19475                           
 19476                           ;incstack = 0
 19477  00567E  0E00               	movlw	0
 19478  005680  6E16               	movwf	delay@contador_ext,c
 19479  005682                     l10483:
 19480  005682  0E63               	movlw	99
 19481  005684  6416               	cpfsgt	delay@contador_ext,c
 19482  005686  D001               	goto	l284
 19483  005688  0012               	return	
 19484  00568A                     l284:
 19485                           
 19486                           ;display_lcd.c: 50: {
 19487                           ;display_lcd.c: 51: __nop();
 19488  00568A  F000               	nop	
 19489                           
 19490                           ;display_lcd.c: 52: for(contador_int = 0; contador_int<50; contador_int++)
 19491  00568C  0E00               	movlw	0
 19492  00568E  6E17               	movwf	delay@contador_int,c
 19493  005690                     l10489:
 19494  005690  0E31               	movlw	49
 19495  005692  6417               	cpfsgt	delay@contador_int,c
 19496  005694  D001               	goto	l286
 19497  005696  D003               	goto	l10497
 19498  005698                     l286:
 19499                           
 19500                           ;display_lcd.c: 53: {
 19501                           ;display_lcd.c: 54: __nop();
 19502  005698  F000               	nop	
 19503  00569A  2A17               	incf	delay@contador_int,f,c
 19504  00569C  D7F9               	goto	l10489
 19505  00569E                     l10497:
 19506  00569E  2A16               	incf	delay@contador_ext,f,c
 19507  0056A0  D7F0               	goto	l10483
 19508  0056A2                     __end_of_delay:
 19509                           	opt stack 0
 19510                           tosu	equ	0xFFF
 19511                           tosh	equ	0xFFE
 19512                           tosl	equ	0xFFD
 19513                           pclath	equ	0xFFA
 19514                           tblptru	equ	0xFF8
 19515                           tblptrh	equ	0xFF7
 19516                           tblptrl	equ	0xFF6
 19517                           tablat	equ	0xFF5
 19518                           prodh	equ	0xFF4
 19519                           prodl	equ	0xFF3
 19520                           intcon	equ	0xFF2
 19521                           intcon2	equ	0xFF1
 19522                           intcon3	equ	0xFF0
 19523                           indf0	equ	0xFEF
 19524                           postinc0	equ	0xFEE
 19525                           fsr0h	equ	0xFEA
 19526                           fsr0l	equ	0xFE9
 19527                           wreg	equ	0xFE8
 19528                           indf1	equ	0xFE7
 19529                           postinc1	equ	0xFE6
 19530                           postdec1	equ	0xFE5
 19531                           plusw1	equ	0xFE3
 19532                           fsr1h	equ	0xFE2
 19533                           fsr1l	equ	0xFE1
 19534                           indf2	equ	0xFDF
 19535                           postinc2	equ	0xFDE
 19536                           postdec2	equ	0xFDD
 19537                           plusw2	equ	0xFDB
 19538                           fsr2h	equ	0xFDA
 19539                           fsr2l	equ	0xFD9
 19540                           status	equ	0xFD8
 19541                           
 19542 ;; *************** function _disk_ioctl *****************
 19543 ;; Defined at:
 19544 ;;		line 243 in file "bibliotecas/diskio.c"
 19545 ;; Parameters:    Size  Location     Type
 19546 ;;  pdrv            1    wreg     unsigned char 
 19547 ;;  cmd             1   21[COMRAM] unsigned char 
 19548 ;;  buff            2   22[COMRAM] PTR void 
 19549 ;;		 -> NULL(0), 
 19550 ;; Auto vars:     Size  Location     Type
 19551 ;;  pdrv            1   24[COMRAM] unsigned char 
 19552 ;;  result          2    0        int 
 19553 ;;  res             1   25[COMRAM] enum E25
 19554 ;; Return value:  Size  Location     Type
 19555 ;;                  1    wreg      enum E25
 19556 ;; Registers used:
 19557 ;;		wreg, status,2, status,0
 19558 ;; Tracked objects:
 19559 ;;		On entry : 0/0
 19560 ;;		On exit  : 0/0
 19561 ;;		Unchanged: 0/0
 19562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19563 ;;      Params:         3       0       0       0       0       0       0       0       0
 19564 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19565 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19566 ;;      Totals:         5       0       0       0       0       0       0       0       0
 19567 ;;Total ram usage:        5 bytes
 19568 ;; Hardware stack levels used:    1
 19569 ;; Hardware stack levels required when called:    2
 19570 ;; This function calls:
 19571 ;;		Nothing
 19572 ;; This function is called by:
 19573 ;;		_sync
 19574 ;; This function uses a non-reentrant model
 19575 ;;
 19576                           
 19577                           	psect	text64
 19578  005630                     __ptext64:
 19579                           	opt stack 0
 19580  005630                     _disk_ioctl:
 19581                           	opt stack 23
 19582                           
 19583                           ;incstack = 0
 19584                           ;disk_ioctl@pdrv stored from wreg
 19585  005630  6E19               	movwf	disk_ioctl@pdrv,c
 19586                           
 19587                           ;diskio.c: 249: DRESULT res;
 19588                           ;diskio.c: 250: int result;
 19589                           ;diskio.c: 252: switch (pdrv) {
 19590  005632  D006               	goto	l11467
 19591  005634                     l183:
 19592                           
 19593                           ;diskio.c: 257: return res;
 19594  005634  501A               	movf	disk_ioctl@res,w,c
 19595  005636  0012               	return	
 19596  005638                     l185:
 19597                           
 19598                           ;diskio.c: 263: return res;
 19599  005638  501A               	movf	disk_ioctl@res,w,c
 19600  00563A  0012               	return	
 19601  00563C                     l186:
 19602                           
 19603                           ;diskio.c: 269: return res;
 19604  00563C  501A               	movf	disk_ioctl@res,w,c
 19605  00563E  0012               	return	
 19606  005640                     l11467:
 19607  005640  5019               	movf	disk_ioctl@pdrv,w,c
 19608                           
 19609                           ; Switch size 1, requested type "space"
 19610                           ; Number of cases is 3, Range of values is 0 to 2
 19611                           ; switch strategies available:
 19612                           ; Name         Instructions Cycles
 19613                           ; simple_byte           10     6 (average)
 19614                           ;	Chosen strategy is simple_byte
 19615  005642  0A00               	xorlw	0	; case 0
 19616  005644  B4D8               	btfsc	status,2,c
 19617  005646  D7F8               	goto	l185
 19618  005648  0A01               	xorlw	1	; case 1
 19619  00564A  B4D8               	btfsc	status,2,c
 19620  00564C  D7F3               	goto	l183
 19621  00564E  0A03               	xorlw	3	; case 2
 19622  005650  B4D8               	btfsc	status,2,c
 19623  005652  D7F4               	goto	l186
 19624                           
 19625                           ;diskio.c: 272: return RES_PARERR;
 19626  005654  0E04               	movlw	4
 19627  005656  0012               	return	
 19628  005658                     __end_of_disk_ioctl:
 19629                           	opt stack 0
 19630                           tosu	equ	0xFFF
 19631                           tosh	equ	0xFFE
 19632                           tosl	equ	0xFFD
 19633                           pclath	equ	0xFFA
 19634                           tblptru	equ	0xFF8
 19635                           tblptrh	equ	0xFF7
 19636                           tblptrl	equ	0xFF6
 19637                           tablat	equ	0xFF5
 19638                           prodh	equ	0xFF4
 19639                           prodl	equ	0xFF3
 19640                           intcon	equ	0xFF2
 19641                           intcon2	equ	0xFF1
 19642                           intcon3	equ	0xFF0
 19643                           indf0	equ	0xFEF
 19644                           postinc0	equ	0xFEE
 19645                           fsr0h	equ	0xFEA
 19646                           fsr0l	equ	0xFE9
 19647                           wreg	equ	0xFE8
 19648                           indf1	equ	0xFE7
 19649                           postinc1	equ	0xFE6
 19650                           postdec1	equ	0xFE5
 19651                           plusw1	equ	0xFE3
 19652                           fsr1h	equ	0xFE2
 19653                           fsr1l	equ	0xFE1
 19654                           indf2	equ	0xFDF
 19655                           postinc2	equ	0xFDE
 19656                           postdec2	equ	0xFDD
 19657                           plusw2	equ	0xFDB
 19658                           fsr2h	equ	0xFDA
 19659                           fsr2l	equ	0xFD9
 19660                           status	equ	0xFD8
 19661                           
 19662 ;; *************** function _get_fattime *****************
 19663 ;; Defined at:
 19664 ;;		line 866 in file "bibliotecas/tff.c"
 19665 ;; Parameters:    Size  Location     Type
 19666 ;;		None
 19667 ;; Auto vars:     Size  Location     Type
 19668 ;;  f_time          9   25[COMRAM] struct .
 19669 ;; Return value:  Size  Location     Type
 19670 ;;                  4   21[COMRAM] unsigned long 
 19671 ;; Registers used:
 19672 ;;		wreg, status,2, status,0
 19673 ;; Tracked objects:
 19674 ;;		On entry : 0/0
 19675 ;;		On exit  : 0/0
 19676 ;;		Unchanged: 0/0
 19677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19678 ;;      Params:         4       0       0       0       0       0       0       0       0
 19679 ;;      Locals:         9       0       0       0       0       0       0       0       0
 19680 ;;      Temps:          0      38       0       0       0       0       0       0       0
 19681 ;;      Totals:        13      38       0       0       0       0       0       0       0
 19682 ;;Total ram usage:       51 bytes
 19683 ;; Hardware stack levels used:    1
 19684 ;; Hardware stack levels required when called:    2
 19685 ;; This function calls:
 19686 ;;		Nothing
 19687 ;; This function is called by:
 19688 ;;		_f_open
 19689 ;;		_f_sync
 19690 ;;		_f_mkdir
 19691 ;; This function uses a non-reentrant model
 19692 ;;
 19693                           
 19694                           	psect	text65
 19695  00422A                     __ptext65:
 19696                           	opt stack 0
 19697  00422A                     _get_fattime:
 19698                           	opt stack 25
 19699                           
 19700                           ;tff.c: 868: fat_time f_time;
 19701                           ;tff.c: 870: return (DWORD)(f_time.ano ) << 25 |
 19702                           ;tff.c: 871: (DWORD)(f_time.mes) << 21 |
 19703                           ;tff.c: 872: (DWORD)(f_time.mes) << 16 |
 19704                           ;tff.c: 873: (DWORD)(f_time.hora) << 11 |
 19705                           ;tff.c: 874: (DWORD)(f_time.min) << 5 |
 19706                           ;tff.c: 875: (DWORD)(f_time.seg) >> 1;
 19707                           
 19708                           ;incstack = 0
 19709  00422A  90D8               	bcf	status,0,c
 19710  00422C  301F               	rrcf	get_fattime@f_time+5,w,c
 19711  00422E  0100               	movlb	0	; () banked
 19712  004230  6F61               	movwf	(??_get_fattime+1)& (0+255),b
 19713  004232  301E               	rrcf	get_fattime@f_time+4,w,c
 19714  004234  0100               	movlb	0	; () banked
 19715  004236  6F60               	movwf	??_get_fattime& (0+255),b
 19716  004238  501C               	movf	get_fattime@f_time+2,w,c
 19717  00423A  0100               	movlb	0	; () banked
 19718  00423C  6F62               	movwf	(??_get_fattime+2)& (0+255),b
 19719  00423E  501D               	movf	get_fattime@f_time+3,w,c
 19720  004240  0100               	movlb	0	; () banked
 19721  004242  6F63               	movwf	(??_get_fattime+3)& (0+255),b
 19722  004244  0100               	movlb	0	; () banked
 19723  004246  6B64               	clrf	(??_get_fattime+4)& (0+255),b
 19724  004248  0100               	movlb	0	; () banked
 19725  00424A  6B65               	clrf	(??_get_fattime+5)& (0+255),b
 19726  00424C  0E05               	movlw	5
 19727  00424E                     u13285:
 19728  00424E  90D8               	bcf	status,0,c
 19729  004250  0100               	movlb	0	; () banked
 19730  004252  3762               	rlcf	(??_get_fattime+2)& (0+255),f,b
 19731  004254  3763               	rlcf	(??_get_fattime+3)& (0+255),f,b
 19732  004256  3764               	rlcf	(??_get_fattime+4)& (0+255),f,b
 19733  004258  3765               	rlcf	(??_get_fattime+5)& (0+255),f,b
 19734  00425A  2EE8               	decfsz	wreg,f,c
 19735  00425C  D7F8               	goto	u13285
 19736  00425E  501A               	movf	get_fattime@f_time,w,c
 19737  004260  0100               	movlb	0	; () banked
 19738  004262  6F66               	movwf	(??_get_fattime+6)& (0+255),b
 19739  004264  501B               	movf	get_fattime@f_time+1,w,c
 19740  004266  0100               	movlb	0	; () banked
 19741  004268  6F67               	movwf	(??_get_fattime+7)& (0+255),b
 19742  00426A  0100               	movlb	0	; () banked
 19743  00426C  6B68               	clrf	(??_get_fattime+8)& (0+255),b
 19744  00426E  0100               	movlb	0	; () banked
 19745  004270  6B69               	clrf	(??_get_fattime+9)& (0+255),b
 19746  004272  0E0B               	movlw	11
 19747  004274                     u13295:
 19748  004274  90D8               	bcf	status,0,c
 19749  004276  0100               	movlb	0	; () banked
 19750  004278  3766               	rlcf	(??_get_fattime+6)& (0+255),f,b
 19751  00427A  3767               	rlcf	(??_get_fattime+7)& (0+255),f,b
 19752  00427C  3768               	rlcf	(??_get_fattime+8)& (0+255),f,b
 19753  00427E  3769               	rlcf	(??_get_fattime+9)& (0+255),f,b
 19754  004280  2EE8               	decfsz	wreg,f,c
 19755  004282  D7F8               	goto	u13295
 19756  004284  C021  F06A         	movff	get_fattime@f_time+7,??_get_fattime+10
 19757  004288  0100               	movlb	0	; () banked
 19758  00428A  6B6B               	clrf	(??_get_fattime+11)& (0+255),b
 19759  00428C  6B6C               	clrf	(??_get_fattime+12)& (0+255),b
 19760  00428E  6B6D               	clrf	(??_get_fattime+13)& (0+255),b
 19761  004290  C06B  F06D         	movff	??_get_fattime+11,??_get_fattime+13
 19762  004294  C06A  F06C         	movff	??_get_fattime+10,??_get_fattime+12
 19763  004298  0100               	movlb	0	; () banked
 19764  00429A  6B6B               	clrf	(??_get_fattime+11)& (0+255),b
 19765  00429C  6B6A               	clrf	(??_get_fattime+10)& (0+255),b
 19766  00429E  C021  F06E         	movff	get_fattime@f_time+7,??_get_fattime+14
 19767  0042A2  0100               	movlb	0	; () banked
 19768  0042A4  6B6F               	clrf	(??_get_fattime+15)& (0+255),b
 19769  0042A6  6B70               	clrf	(??_get_fattime+16)& (0+255),b
 19770  0042A8  6B71               	clrf	(??_get_fattime+17)& (0+255),b
 19771  0042AA  0E15               	movlw	21
 19772  0042AC                     u13305:
 19773  0042AC  90D8               	bcf	status,0,c
 19774  0042AE  0100               	movlb	0	; () banked
 19775  0042B0  376E               	rlcf	(??_get_fattime+14)& (0+255),f,b
 19776  0042B2  376F               	rlcf	(??_get_fattime+15)& (0+255),f,b
 19777  0042B4  3770               	rlcf	(??_get_fattime+16)& (0+255),f,b
 19778  0042B6  3771               	rlcf	(??_get_fattime+17)& (0+255),f,b
 19779  0042B8  2EE8               	decfsz	wreg,f,c
 19780  0042BA  D7F8               	goto	u13305
 19781  0042BC  C022  F072         	movff	get_fattime@f_time+8,??_get_fattime+18
 19782  0042C0  0100               	movlb	0	; () banked
 19783  0042C2  6B73               	clrf	(??_get_fattime+19)& (0+255),b
 19784  0042C4  6B74               	clrf	(??_get_fattime+20)& (0+255),b
 19785  0042C6  6B75               	clrf	(??_get_fattime+21)& (0+255),b
 19786  0042C8  0E19               	movlw	25
 19787  0042CA                     u13315:
 19788  0042CA  90D8               	bcf	status,0,c
 19789  0042CC  0100               	movlb	0	; () banked
 19790  0042CE  3772               	rlcf	(??_get_fattime+18)& (0+255),f,b
 19791  0042D0  3773               	rlcf	(??_get_fattime+19)& (0+255),f,b
 19792  0042D2  3774               	rlcf	(??_get_fattime+20)& (0+255),f,b
 19793  0042D4  3775               	rlcf	(??_get_fattime+21)& (0+255),f,b
 19794  0042D6  2EE8               	decfsz	wreg,f,c
 19795  0042D8  D7F8               	goto	u13315
 19796  0042DA  0100               	movlb	0	; () banked
 19797  0042DC  516E               	movf	(??_get_fattime+14)& (0+255),w,b
 19798  0042DE  0100               	movlb	0	; () banked
 19799  0042E0  1172               	iorwf	(??_get_fattime+18)& (0+255),w,b
 19800  0042E2  0100               	movlb	0	; () banked
 19801  0042E4  6F76               	movwf	(??_get_fattime+22)& (0+255),b
 19802  0042E6  0100               	movlb	0	; () banked
 19803  0042E8  516F               	movf	(??_get_fattime+15)& (0+255),w,b
 19804  0042EA  0100               	movlb	0	; () banked
 19805  0042EC  1173               	iorwf	(??_get_fattime+19)& (0+255),w,b
 19806  0042EE  0100               	movlb	0	; () banked
 19807  0042F0  6F77               	movwf	(??_get_fattime+23)& (0+255),b
 19808  0042F2  0100               	movlb	0	; () banked
 19809  0042F4  5170               	movf	(??_get_fattime+16)& (0+255),w,b
 19810  0042F6  0100               	movlb	0	; () banked
 19811  0042F8  1174               	iorwf	(??_get_fattime+20)& (0+255),w,b
 19812  0042FA  0100               	movlb	0	; () banked
 19813  0042FC  6F78               	movwf	(??_get_fattime+24)& (0+255),b
 19814  0042FE  0100               	movlb	0	; () banked
 19815  004300  5171               	movf	(??_get_fattime+17)& (0+255),w,b
 19816  004302  0100               	movlb	0	; () banked
 19817  004304  1175               	iorwf	(??_get_fattime+21)& (0+255),w,b
 19818  004306  0100               	movlb	0	; () banked
 19819  004308  6F79               	movwf	(??_get_fattime+25)& (0+255),b
 19820  00430A  0100               	movlb	0	; () banked
 19821  00430C  516A               	movf	(??_get_fattime+10)& (0+255),w,b
 19822  00430E  0100               	movlb	0	; () banked
 19823  004310  1176               	iorwf	(??_get_fattime+22)& (0+255),w,b
 19824  004312  0100               	movlb	0	; () banked
 19825  004314  6F7A               	movwf	(??_get_fattime+26)& (0+255),b
 19826  004316  0100               	movlb	0	; () banked
 19827  004318  516B               	movf	(??_get_fattime+11)& (0+255),w,b
 19828  00431A  0100               	movlb	0	; () banked
 19829  00431C  1177               	iorwf	(??_get_fattime+23)& (0+255),w,b
 19830  00431E  0100               	movlb	0	; () banked
 19831  004320  6F7B               	movwf	(??_get_fattime+27)& (0+255),b
 19832  004322  0100               	movlb	0	; () banked
 19833  004324  516C               	movf	(??_get_fattime+12)& (0+255),w,b
 19834  004326  0100               	movlb	0	; () banked
 19835  004328  1178               	iorwf	(??_get_fattime+24)& (0+255),w,b
 19836  00432A  0100               	movlb	0	; () banked
 19837  00432C  6F7C               	movwf	(??_get_fattime+28)& (0+255),b
 19838  00432E  0100               	movlb	0	; () banked
 19839  004330  516D               	movf	(??_get_fattime+13)& (0+255),w,b
 19840  004332  0100               	movlb	0	; () banked
 19841  004334  1179               	iorwf	(??_get_fattime+25)& (0+255),w,b
 19842  004336  0100               	movlb	0	; () banked
 19843  004338  6F7D               	movwf	(??_get_fattime+29)& (0+255),b
 19844  00433A  0100               	movlb	0	; () banked
 19845  00433C  5166               	movf	(??_get_fattime+6)& (0+255),w,b
 19846  00433E  0100               	movlb	0	; () banked
 19847  004340  117A               	iorwf	(??_get_fattime+26)& (0+255),w,b
 19848  004342  0100               	movlb	0	; () banked
 19849  004344  6F7E               	movwf	(??_get_fattime+30)& (0+255),b
 19850  004346  0100               	movlb	0	; () banked
 19851  004348  5167               	movf	(??_get_fattime+7)& (0+255),w,b
 19852  00434A  0100               	movlb	0	; () banked
 19853  00434C  117B               	iorwf	(??_get_fattime+27)& (0+255),w,b
 19854  00434E  0100               	movlb	0	; () banked
 19855  004350  6F7F               	movwf	(??_get_fattime+31)& (0+255),b
 19856  004352  0100               	movlb	0	; () banked
 19857  004354  5168               	movf	(??_get_fattime+8)& (0+255),w,b
 19858  004356  0100               	movlb	0	; () banked
 19859  004358  117C               	iorwf	(??_get_fattime+28)& (0+255),w,b
 19860  00435A  0100               	movlb	0	; () banked
 19861  00435C  6F80               	movwf	(??_get_fattime+32)& (0+255),b
 19862  00435E  0100               	movlb	0	; () banked
 19863  004360  5169               	movf	(??_get_fattime+9)& (0+255),w,b
 19864  004362  0100               	movlb	0	; () banked
 19865  004364  117D               	iorwf	(??_get_fattime+29)& (0+255),w,b
 19866  004366  0100               	movlb	0	; () banked
 19867  004368  6F81               	movwf	(??_get_fattime+33)& (0+255),b
 19868  00436A  0100               	movlb	0	; () banked
 19869  00436C  5162               	movf	(??_get_fattime+2)& (0+255),w,b
 19870  00436E  0100               	movlb	0	; () banked
 19871  004370  117E               	iorwf	(??_get_fattime+30)& (0+255),w,b
 19872  004372  0100               	movlb	0	; () banked
 19873  004374  6F82               	movwf	(??_get_fattime+34)& (0+255),b
 19874  004376  0100               	movlb	0	; () banked
 19875  004378  5163               	movf	(??_get_fattime+3)& (0+255),w,b
 19876  00437A  0100               	movlb	0	; () banked
 19877  00437C  117F               	iorwf	(??_get_fattime+31)& (0+255),w,b
 19878  00437E  0100               	movlb	0	; () banked
 19879  004380  6F83               	movwf	(??_get_fattime+35)& (0+255),b
 19880  004382  0100               	movlb	0	; () banked
 19881  004384  5164               	movf	(??_get_fattime+4)& (0+255),w,b
 19882  004386  0100               	movlb	0	; () banked
 19883  004388  1180               	iorwf	(??_get_fattime+32)& (0+255),w,b
 19884  00438A  0100               	movlb	0	; () banked
 19885  00438C  6F84               	movwf	(??_get_fattime+36)& (0+255),b
 19886  00438E  0100               	movlb	0	; () banked
 19887  004390  5165               	movf	(??_get_fattime+5)& (0+255),w,b
 19888  004392  0100               	movlb	0	; () banked
 19889  004394  1181               	iorwf	(??_get_fattime+33)& (0+255),w,b
 19890  004396  0100               	movlb	0	; () banked
 19891  004398  6F85               	movwf	(??_get_fattime+37)& (0+255),b
 19892  00439A  0100               	movlb	0	; () banked
 19893  00439C  5160               	movf	??_get_fattime& (0+255),w,b
 19894  00439E  0100               	movlb	0	; () banked
 19895  0043A0  1182               	iorwf	(??_get_fattime+34)& (0+255),w,b
 19896  0043A2  6E16               	movwf	?_get_fattime,c
 19897  0043A4  0100               	movlb	0	; () banked
 19898  0043A6  5161               	movf	(??_get_fattime+1)& (0+255),w,b
 19899  0043A8  0100               	movlb	0	; () banked
 19900  0043AA  1183               	iorwf	(??_get_fattime+35)& (0+255),w,b
 19901  0043AC  6E17               	movwf	?_get_fattime+1,c
 19902  0043AE  0E00               	movlw	0
 19903  0043B0  0100               	movlb	0	; () banked
 19904  0043B2  1184               	iorwf	(??_get_fattime+36)& (0+255),w,b
 19905  0043B4  6E18               	movwf	?_get_fattime+2,c
 19906  0043B6  0E00               	movlw	0
 19907  0043B8  0100               	movlb	0	; () banked
 19908  0043BA  1185               	iorwf	(??_get_fattime+37)& (0+255),w,b
 19909  0043BC  6E19               	movwf	?_get_fattime+3,c
 19910  0043BE  0012               	return	
 19911  0043C0                     __end_of_get_fattime:
 19912                           	opt stack 0
 19913                           tosu	equ	0xFFF
 19914                           tosh	equ	0xFFE
 19915                           tosl	equ	0xFFD
 19916                           pclath	equ	0xFFA
 19917                           tblptru	equ	0xFF8
 19918                           tblptrh	equ	0xFF7
 19919                           tblptrl	equ	0xFF6
 19920                           tablat	equ	0xFF5
 19921                           prodh	equ	0xFF4
 19922                           prodl	equ	0xFF3
 19923                           intcon	equ	0xFF2
 19924                           intcon2	equ	0xFF1
 19925                           intcon3	equ	0xFF0
 19926                           indf0	equ	0xFEF
 19927                           postinc0	equ	0xFEE
 19928                           fsr0h	equ	0xFEA
 19929                           fsr0l	equ	0xFE9
 19930                           wreg	equ	0xFE8
 19931                           indf1	equ	0xFE7
 19932                           postinc1	equ	0xFE6
 19933                           postdec1	equ	0xFE5
 19934                           plusw1	equ	0xFE3
 19935                           fsr1h	equ	0xFE2
 19936                           fsr1l	equ	0xFE1
 19937                           indf2	equ	0xFDF
 19938                           postinc2	equ	0xFDE
 19939                           postdec2	equ	0xFDD
 19940                           plusw2	equ	0xFDB
 19941                           fsr2h	equ	0xFDA
 19942                           fsr2l	equ	0xFD9
 19943                           status	equ	0xFD8
 19944                           
 19945 ;; *************** function _isr *****************
 19946 ;; Defined at:
 19947 ;;		line 96 in file "main.c"
 19948 ;; Parameters:    Size  Location     Type
 19949 ;;		None
 19950 ;; Auto vars:     Size  Location     Type
 19951 ;;  cont            1   20[COMRAM] unsigned char 
 19952 ;; Return value:  Size  Location     Type
 19953 ;;                  1    wreg      void 
 19954 ;; Registers used:
 19955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19956 ;; Tracked objects:
 19957 ;;		On entry : 0/0
 19958 ;;		On exit  : 0/0
 19959 ;;		Unchanged: 0/0
 19960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19961 ;;      Params:         0       0       0       0       0       0       0       0       0
 19962 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19963 ;;      Temps:         16       0       0       0       0       0       0       0       0
 19964 ;;      Totals:        17       0       0       0       0       0       0       0       0
 19965 ;;Total ram usage:       17 bytes
 19966 ;; Hardware stack levels used:    1
 19967 ;; Hardware stack levels required when called:    1
 19968 ;; This function calls:
 19969 ;;		_recebe_dado_uart
 19970 ;;		i2_write_timer_zero
 19971 ;; This function is called by:
 19972 ;;		Interrupt level 2
 19973 ;; This function uses a non-reentrant model
 19974 ;;
 19975                           
 19976                           	psect	intcode
 19977  000008                     __pintcode:
 19978                           	opt stack 0
 19979  000008                     _isr:
 19980                           	opt stack 14
 19981                           
 19982                           ; BSR set to: 0
 19983                           ;incstack = 0
 19984  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 19985  00000A  EDC7  F023         	call	int_func,f	;refresh shadow registers
 19986                           tosu	equ	0xFFF
 19987                           tosh	equ	0xFFE
 19988                           tosl	equ	0xFFD
 19989                           pclath	equ	0xFFA
 19990                           tblptru	equ	0xFF8
 19991                           tblptrh	equ	0xFF7
 19992                           tblptrl	equ	0xFF6
 19993                           tablat	equ	0xFF5
 19994                           prodh	equ	0xFF4
 19995                           prodl	equ	0xFF3
 19996                           intcon	equ	0xFF2
 19997                           intcon2	equ	0xFF1
 19998                           intcon3	equ	0xFF0
 19999                           indf0	equ	0xFEF
 20000                           postinc0	equ	0xFEE
 20001                           fsr0h	equ	0xFEA
 20002                           fsr0l	equ	0xFE9
 20003                           wreg	equ	0xFE8
 20004                           indf1	equ	0xFE7
 20005                           postinc1	equ	0xFE6
 20006                           postdec1	equ	0xFE5
 20007                           plusw1	equ	0xFE3
 20008                           fsr1h	equ	0xFE2
 20009                           fsr1l	equ	0xFE1
 20010                           indf2	equ	0xFDF
 20011                           postinc2	equ	0xFDE
 20012                           postdec2	equ	0xFDD
 20013                           plusw2	equ	0xFDB
 20014                           fsr2h	equ	0xFDA
 20015                           fsr2l	equ	0xFD9
 20016                           status	equ	0xFD8
 20017                           
 20018                           	psect	intcode_body
 20019  00478E                     __pintcode_body:
 20020                           	opt stack 14
 20021  00478E                     int_func:
 20022                           	opt stack 14
 20023  00478E  0006               	pop		; remove dummy address from shadow register refresh
 20024  004790  CFFA F007          	movff	pclath,??_isr+2
 20025  004794  CFFB F008          	movff	pclatu,??_isr+3
 20026  004798  CFE9 F009          	movff	fsr0l,??_isr+4
 20027  00479C  CFEA F00A          	movff	fsr0h,??_isr+5
 20028  0047A0  CFE1 F00B          	movff	fsr1l,??_isr+6
 20029  0047A4  CFE2 F00C          	movff	fsr1h,??_isr+7
 20030  0047A8  CFD9 F00D          	movff	fsr2l,??_isr+8
 20031  0047AC  CFDA F00E          	movff	fsr2h,??_isr+9
 20032  0047B0  CFF3 F00F          	movff	prodl,??_isr+10
 20033  0047B4  CFF4 F010          	movff	prodh,??_isr+11
 20034  0047B8  CFF6 F011          	movff	tblptrl,??_isr+12
 20035  0047BC  CFF7 F012          	movff	tblptrh,??_isr+13
 20036  0047C0  CFF8 F013          	movff	tblptru,??_isr+14
 20037  0047C4  CFF5 F014          	movff	tablat,??_isr+15
 20038                           
 20039                           ;main.c: 98: unsigned char cont;
 20040                           ;main.c: 101: if (PIE1bits.RCIE && PIR1bits.RCIF)
 20041  0047C8  BA9D               	btfsc	3997,5,c	;volatile
 20042  0047CA  AA9E               	btfss	3998,5,c	;volatile
 20043  0047CC  D004               	goto	i2l10017
 20044                           
 20045                           ;main.c: 102: {
 20046                           ;main.c: 103: data_uart_recebe = recebe_dado_uart();
 20047  0047CE  ECA9  F02B         	call	_recebe_dado_uart	;wreg free
 20048  0047D2  6E42               	movwf	_data_uart_recebe,c
 20049                           
 20050                           ;main.c: 104: PIR1bits.RCIF = 0;
 20051  0047D4  9A9E               	bcf	3998,5,c	;volatile
 20052  0047D6                     i2l10017:
 20053                           
 20054                           ;main.c: 109: }
 20055                           ;main.c: 112: unsigned char cont;
 20056                           ;main.c: 114: if (TMR0IF && T0IF)
 20057  0047D6  B4F2               	btfsc	intcon,2,c	;volatile
 20058  0047D8  A4F2               	btfss	intcon,2,c	;volatile
 20059  0047DA  D039               	goto	i2l10047
 20060                           
 20061                           ;main.c: 115: {
 20062                           ;main.c: 116: INTCONbits.TMR0IF = 0;
 20063  0047DC  94F2               	bcf	intcon,2,c	;volatile
 20064                           
 20065                           ;main.c: 117: sinaliza_int_timer = 1;
 20066  0047DE  0E01               	movlw	1
 20067  0047E0  6E41               	movwf	_sinaliza_int_timer,c
 20068                           
 20069                           ;main.c: 119: for(cont= 0; cont<2;cont++)
 20070  0047E2  0E00               	movlw	0
 20071  0047E4  6E15               	movwf	isr@cont,c
 20072  0047E6                     i2l10025:
 20073  0047E6  0E01               	movlw	1
 20074  0047E8  6415               	cpfsgt	isr@cont,c
 20075  0047EA  D001               	goto	i2l10029
 20076  0047EC  D019               	goto	i2l10037
 20077  0047EE                     i2l10029:
 20078                           
 20079                           ;main.c: 120: {
 20080                           ;main.c: 121: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
 20081  0047EE  5015               	movf	isr@cont,w,c
 20082  0047F0  0D02               	mullw	2
 20083  0047F2  0E4A               	movlw	low _tempo_tarefa
 20084  0047F4  24F3               	addwf	prodl,w,c
 20085  0047F6  6ED9               	movwf	fsr2l,c
 20086  0047F8  0E01               	movlw	high _tempo_tarefa
 20087  0047FA  20F4               	addwfc	prodh,w,c
 20088  0047FC  6EDA               	movwf	fsr2h,c
 20089  0047FE  50DE               	movf	postinc2,w,c
 20090  004800  10DE               	iorwf	postinc2,w,c
 20091  004802  B4D8               	btfsc	status,2,c
 20092  004804  D00B               	goto	i2l10033
 20093  004806  5015               	movf	isr@cont,w,c
 20094  004808  0D02               	mullw	2
 20095  00480A  0E4A               	movlw	low _tempo_tarefa
 20096  00480C  24F3               	addwf	prodl,w,c
 20097  00480E  6ED9               	movwf	fsr2l,c
 20098  004810  0E01               	movlw	high _tempo_tarefa
 20099  004812  20F4               	addwfc	prodh,w,c
 20100  004814  6EDA               	movwf	fsr2h,c
 20101  004816  06DE               	decf	postinc2,f,c
 20102  004818  0E00               	movlw	0
 20103  00481A  5ADD               	subwfb	postdec2,f,c
 20104  00481C                     i2l10033:
 20105  00481C  2A15               	incf	isr@cont,f,c
 20106  00481E  D7E3               	goto	i2l10025
 20107  004820                     i2l10037:
 20108                           
 20109                           ;main.c: 122: }
 20110                           ;main.c: 125: if(tarefa_em_execucao == 1)
 20111  004820  0440               	decf	_tarefa_em_execucao,w,c	;volatile
 20112  004822  A4D8               	btfss	status,2,c
 20113  004824  D00E               	goto	i2l10045
 20114                           
 20115                           ;main.c: 126: {
 20116                           ;main.c: 127: timeout_tarefa--;
 20117  004826  0101               	movlb	1	; () banked
 20118  004828  075E               	decf	_timeout_tarefa& (0+255),f,b
 20119  00482A  A0D8               	btfss	status,0,c
 20120  00482C  075F               	decf	(_timeout_tarefa+1)& (0+255),f,b
 20121                           
 20122                           ; BSR set to: 1
 20123                           ;main.c: 128: if(!timeout_tarefa)
 20124  00482E  0101               	movlb	1	; () banked
 20125  004830  515E               	movf	_timeout_tarefa& (0+255),w,b
 20126  004832  0101               	movlb	1	; () banked
 20127  004834  115F               	iorwf	(_timeout_tarefa+1)& (0+255),w,b
 20128  004836  A4D8               	btfss	status,2,c
 20129  004838  D004               	goto	i2l10045
 20130                           
 20131                           ; BSR set to: 1
 20132                           ;main.c: 129: {
 20133                           ;main.c: 131: PCLATH = 0;
 20134  00483A  0E00               	movlw	0
 20135  00483C  6EFA               	movwf	pclath,c	;volatile
 20136                           
 20137                           ;main.c: 132: PCL = 0;
 20138  00483E  0E00               	movlw	0
 20139  004840  6EF9               	movwf	pcl,c	;volatile
 20140  004842                     i2l10045:
 20141                           
 20142                           ;main.c: 133: }
 20143                           ;main.c: 134: }
 20144                           ;main.c: 137: write_timer_zero(0x0083);
 20145  004842  0E00               	movlw	0
 20146  004844  6E02               	movwf	i2write_timer_zero@timer0+1,c
 20147  004846  0E83               	movlw	131
 20148  004848  6E01               	movwf	i2write_timer_zero@timer0,c
 20149  00484A  ECA0  F02B         	call	i2_write_timer_zero	;wreg free
 20150  00484E                     i2l10047:
 20151                           
 20152                           ;main.c: 139: }
 20153                           ;main.c: 141: if (INT0IF && INT0IE)
 20154  00484E  B2F2               	btfsc	intcon,1,c	;volatile
 20155  004850  A8F2               	btfss	intcon,4,c	;volatile
 20156  004852  D001               	goto	i2l1176
 20157                           
 20158                           ;main.c: 142: {
 20159                           ;main.c: 143: INT0IF = 0;
 20160  004854  92F2               	bcf	intcon,1,c	;volatile
 20161  004856                     i2l1176:
 20162  004856  C014  FFF5         	movff	??_isr+15,tablat
 20163  00485A  C013  FFF8         	movff	??_isr+14,tblptru
 20164  00485E  C012  FFF7         	movff	??_isr+13,tblptrh
 20165  004862  C011  FFF6         	movff	??_isr+12,tblptrl
 20166  004866  C010  FFF4         	movff	??_isr+11,prodh
 20167  00486A  C00F  FFF3         	movff	??_isr+10,prodl
 20168  00486E  C00E  FFDA         	movff	??_isr+9,fsr2h
 20169  004872  C00D  FFD9         	movff	??_isr+8,fsr2l
 20170  004876  C00C  FFE2         	movff	??_isr+7,fsr1h
 20171  00487A  C00B  FFE1         	movff	??_isr+6,fsr1l
 20172  00487E  C00A  FFEA         	movff	??_isr+5,fsr0h
 20173  004882  C009  FFE9         	movff	??_isr+4,fsr0l
 20174  004886  C008  FFFB         	movff	??_isr+3,pclatu
 20175  00488A  C007  FFFA         	movff	??_isr+2,pclath
 20176  00488E  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 20177  004890  0011               	retfie		f
 20178  004892                     __end_of_isr:
 20179                           	opt stack 0
 20180                           tosu	equ	0xFFF
 20181                           tosh	equ	0xFFE
 20182                           tosl	equ	0xFFD
 20183                           pclatu	equ	0xFFB
 20184                           pclath	equ	0xFFA
 20185                           pcl	equ	0xFF9
 20186                           tblptru	equ	0xFF8
 20187                           tblptrh	equ	0xFF7
 20188                           tblptrl	equ	0xFF6
 20189                           tablat	equ	0xFF5
 20190                           prodh	equ	0xFF4
 20191                           prodl	equ	0xFF3
 20192                           intcon	equ	0xFF2
 20193                           intcon2	equ	0xFF1
 20194                           intcon3	equ	0xFF0
 20195                           indf0	equ	0xFEF
 20196                           postinc0	equ	0xFEE
 20197                           fsr0h	equ	0xFEA
 20198                           fsr0l	equ	0xFE9
 20199                           wreg	equ	0xFE8
 20200                           indf1	equ	0xFE7
 20201                           postinc1	equ	0xFE6
 20202                           postdec1	equ	0xFE5
 20203                           plusw1	equ	0xFE3
 20204                           fsr1h	equ	0xFE2
 20205                           fsr1l	equ	0xFE1
 20206                           indf2	equ	0xFDF
 20207                           postinc2	equ	0xFDE
 20208                           postdec2	equ	0xFDD
 20209                           plusw2	equ	0xFDB
 20210                           fsr2h	equ	0xFDA
 20211                           fsr2l	equ	0xFD9
 20212                           status	equ	0xFD8
 20213                           
 20214 ;; *************** function i2_write_timer_zero *****************
 20215 ;; Defined at:
 20216 ;;		line 139 in file "bibliotecas/hardware.c"
 20217 ;; Parameters:    Size  Location     Type
 20218 ;;  timer0          2    0[COMRAM] unsigned int 
 20219 ;; Auto vars:     Size  Location     Type
 20220 ;;  write_timer_    2    2[COMRAM] struct Timers
 20221 ;; Return value:  Size  Location     Type
 20222 ;;                  1    wreg      void 
 20223 ;; Registers used:
 20224 ;;		None
 20225 ;; Tracked objects:
 20226 ;;		On entry : 0/0
 20227 ;;		On exit  : 0/0
 20228 ;;		Unchanged: 0/0
 20229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20230 ;;      Params:         2       0       0       0       0       0       0       0       0
 20231 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20232 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20233 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20234 ;;Total ram usage:        4 bytes
 20235 ;; Hardware stack levels used:    1
 20236 ;; This function calls:
 20237 ;;		Nothing
 20238 ;; This function is called by:
 20239 ;;		_isr
 20240 ;; This function uses a non-reentrant model
 20241 ;;
 20242                           
 20243                           	psect	text67
 20244  005740                     __ptext67:
 20245                           	opt stack 0
 20246  005740                     i2_write_timer_zero:
 20247                           	opt stack 14
 20248                           
 20249                           ;hardware.c: 141: union Timers timer;
 20250                           ;hardware.c: 143: timer.lt = timer0;
 20251                           
 20252                           ;incstack = 0
 20253  005740  C001  F003         	movff	i2write_timer_zero@timer0,i2write_timer_zero@timer
 20254  005744  C002  F004         	movff	i2write_timer_zero@timer0+1,i2write_timer_zero@timer+1
 20255                           
 20256                           ;hardware.c: 145: TMR0H = timer.bt[1];
 20257  005748  C004  FFD7         	movff	i2write_timer_zero@timer+1,4055	;volatile
 20258                           
 20259                           ;hardware.c: 146: TMR0L = timer.bt[0];
 20260  00574C  C003  FFD6         	movff	i2write_timer_zero@timer,4054	;volatile
 20261  005750  0012               	return		;funcret
 20262  005752                     __end_ofi2_write_timer_zero:
 20263                           	opt stack 0
 20264                           tosu	equ	0xFFF
 20265                           tosh	equ	0xFFE
 20266                           tosl	equ	0xFFD
 20267                           pclatu	equ	0xFFB
 20268                           pclath	equ	0xFFA
 20269                           pcl	equ	0xFF9
 20270                           tblptru	equ	0xFF8
 20271                           tblptrh	equ	0xFF7
 20272                           tblptrl	equ	0xFF6
 20273                           tablat	equ	0xFF5
 20274                           prodh	equ	0xFF4
 20275                           prodl	equ	0xFF3
 20276                           intcon	equ	0xFF2
 20277                           intcon2	equ	0xFF1
 20278                           intcon3	equ	0xFF0
 20279                           indf0	equ	0xFEF
 20280                           postinc0	equ	0xFEE
 20281                           fsr0h	equ	0xFEA
 20282                           fsr0l	equ	0xFE9
 20283                           wreg	equ	0xFE8
 20284                           indf1	equ	0xFE7
 20285                           postinc1	equ	0xFE6
 20286                           postdec1	equ	0xFE5
 20287                           plusw1	equ	0xFE3
 20288                           fsr1h	equ	0xFE2
 20289                           fsr1l	equ	0xFE1
 20290                           indf2	equ	0xFDF
 20291                           postinc2	equ	0xFDE
 20292                           postdec2	equ	0xFDD
 20293                           plusw2	equ	0xFDB
 20294                           fsr2h	equ	0xFDA
 20295                           fsr2l	equ	0xFD9
 20296                           status	equ	0xFD8
 20297                           
 20298 ;; *************** function _recebe_dado_uart *****************
 20299 ;; Defined at:
 20300 ;;		line 138 in file "bibliotecas/uart.c"
 20301 ;; Parameters:    Size  Location     Type
 20302 ;;		None
 20303 ;; Auto vars:     Size  Location     Type
 20304 ;;		None
 20305 ;; Return value:  Size  Location     Type
 20306 ;;                  1    wreg      unsigned char 
 20307 ;; Registers used:
 20308 ;;		wreg, status,2
 20309 ;; Tracked objects:
 20310 ;;		On entry : 0/0
 20311 ;;		On exit  : 0/0
 20312 ;;		Unchanged: 0/0
 20313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20314 ;;      Params:         0       0       0       0       0       0       0       0       0
 20315 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20316 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20317 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20318 ;;Total ram usage:        0 bytes
 20319 ;; Hardware stack levels used:    1
 20320 ;; This function calls:
 20321 ;;		Nothing
 20322 ;; This function is called by:
 20323 ;;		_isr
 20324 ;;		_recebe_string_uart
 20325 ;; This function uses a non-reentrant model
 20326 ;;
 20327                           
 20328                           	psect	text68
 20329  005752                     __ptext68:
 20330                           	opt stack 0
 20331  005752                     _recebe_dado_uart:
 20332                           	opt stack 14
 20333  005752                     i2l1087:
 20334  005752  AA9E               	btfss	3998,5,c	;volatile
 20335  005754  D7FE               	goto	i2l1087
 20336                           
 20337                           ;uart.c: 141: if(RCSTAbits.OERR)
 20338  005756  A2AB               	btfss	4011,1,c	;volatile
 20339  005758  D003               	goto	i2l8301
 20340                           
 20341                           ;uart.c: 142: {
 20342                           ;uart.c: 143: CREN = 0;
 20343  00575A  98AB               	bcf	4011,4,c	;volatile
 20344                           
 20345                           ;uart.c: 144: __nop();
 20346  00575C  F000               	nop	
 20347                           
 20348                           ;uart.c: 145: CREN=1;
 20349  00575E  88AB               	bsf	4011,4,c	;volatile
 20350  005760                     i2l8301:
 20351                           
 20352                           ;uart.c: 146: }
 20353                           ;uart.c: 147: return(RCREG);
 20354  005760  50AE               	movf	4014,w,c	;volatile
 20355  005762  0012               	return	
 20356  005764                     __end_of_recebe_dado_uart:
 20357                           	opt stack 0
 20358                           tosu	equ	0xFFF
 20359                           tosh	equ	0xFFE
 20360                           tosl	equ	0xFFD
 20361                           pclatu	equ	0xFFB
 20362                           pclath	equ	0xFFA
 20363                           pcl	equ	0xFF9
 20364                           tblptru	equ	0xFF8
 20365                           tblptrh	equ	0xFF7
 20366                           tblptrl	equ	0xFF6
 20367                           tablat	equ	0xFF5
 20368                           prodh	equ	0xFF4
 20369                           prodl	equ	0xFF3
 20370                           intcon	equ	0xFF2
 20371                           intcon2	equ	0xFF1
 20372                           intcon3	equ	0xFF0
 20373                           indf0	equ	0xFEF
 20374                           postinc0	equ	0xFEE
 20375                           fsr0h	equ	0xFEA
 20376                           fsr0l	equ	0xFE9
 20377                           wreg	equ	0xFE8
 20378                           indf1	equ	0xFE7
 20379                           postinc1	equ	0xFE6
 20380                           postdec1	equ	0xFE5
 20381                           plusw1	equ	0xFE3
 20382                           fsr1h	equ	0xFE2
 20383                           fsr1l	equ	0xFE1
 20384                           indf2	equ	0xFDF
 20385                           postinc2	equ	0xFDE
 20386                           postdec2	equ	0xFDD
 20387                           plusw2	equ	0xFDB
 20388                           fsr2h	equ	0xFDA
 20389                           fsr2l	equ	0xFD9
 20390                           status	equ	0xFD8
 20391                           tosu	equ	0xFFF
 20392                           tosh	equ	0xFFE
 20393                           tosl	equ	0xFFD
 20394                           pclatu	equ	0xFFB
 20395                           pclath	equ	0xFFA
 20396                           pcl	equ	0xFF9
 20397                           tblptru	equ	0xFF8
 20398                           tblptrh	equ	0xFF7
 20399                           tblptrl	equ	0xFF6
 20400                           tablat	equ	0xFF5
 20401                           prodh	equ	0xFF4
 20402                           prodl	equ	0xFF3
 20403                           intcon	equ	0xFF2
 20404                           intcon2	equ	0xFF1
 20405                           intcon3	equ	0xFF0
 20406                           indf0	equ	0xFEF
 20407                           postinc0	equ	0xFEE
 20408                           fsr0h	equ	0xFEA
 20409                           fsr0l	equ	0xFE9
 20410                           wreg	equ	0xFE8
 20411                           indf1	equ	0xFE7
 20412                           postinc1	equ	0xFE6
 20413                           postdec1	equ	0xFE5
 20414                           plusw1	equ	0xFE3
 20415                           fsr1h	equ	0xFE2
 20416                           fsr1l	equ	0xFE1
 20417                           indf2	equ	0xFDF
 20418                           postinc2	equ	0xFDE
 20419                           postdec2	equ	0xFDD
 20420                           plusw2	equ	0xFDB
 20421                           fsr2h	equ	0xFDA
 20422                           fsr2l	equ	0xFD9
 20423                           status	equ	0xFD8
 20424                           
 20425                           	psect	text69
 20426  000000                     __ptext69:
 20427                           	opt stack 0
 20428                           tosu	equ	0xFFF
 20429                           tosh	equ	0xFFE
 20430                           tosl	equ	0xFFD
 20431                           pclatu	equ	0xFFB
 20432                           pclath	equ	0xFFA
 20433                           pcl	equ	0xFF9
 20434                           tblptru	equ	0xFF8
 20435                           tblptrh	equ	0xFF7
 20436                           tblptrl	equ	0xFF6
 20437                           tablat	equ	0xFF5
 20438                           prodh	equ	0xFF4
 20439                           prodl	equ	0xFF3
 20440                           intcon	equ	0xFF2
 20441                           intcon2	equ	0xFF1
 20442                           intcon3	equ	0xFF0
 20443                           indf0	equ	0xFEF
 20444                           postinc0	equ	0xFEE
 20445                           fsr0h	equ	0xFEA
 20446                           fsr0l	equ	0xFE9
 20447                           wreg	equ	0xFE8
 20448                           indf1	equ	0xFE7
 20449                           postinc1	equ	0xFE6
 20450                           postdec1	equ	0xFE5
 20451                           plusw1	equ	0xFE3
 20452                           fsr1h	equ	0xFE2
 20453                           fsr1l	equ	0xFE1
 20454                           indf2	equ	0xFDF
 20455                           postinc2	equ	0xFDE
 20456                           postdec2	equ	0xFDD
 20457                           plusw2	equ	0xFDB
 20458                           fsr2h	equ	0xFDA
 20459                           fsr2l	equ	0xFD9
 20460                           status	equ	0xFD8
 20461                           
 20462                           	psect	rparam
 20463  0000                     tosu	equ	0xFFF
 20464                           tosh	equ	0xFFE
 20465                           tosl	equ	0xFFD
 20466                           pclatu	equ	0xFFB
 20467                           pclath	equ	0xFFA
 20468                           pcl	equ	0xFF9
 20469                           tblptru	equ	0xFF8
 20470                           tblptrh	equ	0xFF7
 20471                           tblptrl	equ	0xFF6
 20472                           tablat	equ	0xFF5
 20473                           prodh	equ	0xFF4
 20474                           prodl	equ	0xFF3
 20475                           intcon	equ	0xFF2
 20476                           intcon2	equ	0xFF1
 20477                           intcon3	equ	0xFF0
 20478                           indf0	equ	0xFEF
 20479                           postinc0	equ	0xFEE
 20480                           fsr0h	equ	0xFEA
 20481                           fsr0l	equ	0xFE9
 20482                           wreg	equ	0xFE8
 20483                           indf1	equ	0xFE7
 20484                           postinc1	equ	0xFE6
 20485                           postdec1	equ	0xFE5
 20486                           plusw1	equ	0xFE3
 20487                           fsr1h	equ	0xFE2
 20488                           fsr1l	equ	0xFE1
 20489                           indf2	equ	0xFDF
 20490                           postinc2	equ	0xFDE
 20491                           postdec2	equ	0xFDD
 20492                           plusw2	equ	0xFDB
 20493                           fsr2h	equ	0xFDA
 20494                           fsr2l	equ	0xFD9
 20495                           status	equ	0xFD8
 20496                           
 20497                           	psect	temp
 20498  00004A                     btemp:
 20499                           	opt stack 0
 20500  00004A                     	ds	1
 20501  0000                     int$flags	set	btemp
 20502                           tosu	equ	0xFFF
 20503                           tosh	equ	0xFFE
 20504                           tosl	equ	0xFFD
 20505                           pclatu	equ	0xFFB
 20506                           pclath	equ	0xFFA
 20507                           pcl	equ	0xFF9
 20508                           tblptru	equ	0xFF8
 20509                           tblptrh	equ	0xFF7
 20510                           tblptrl	equ	0xFF6
 20511                           tablat	equ	0xFF5
 20512                           prodh	equ	0xFF4
 20513                           prodl	equ	0xFF3
 20514                           intcon	equ	0xFF2
 20515                           intcon2	equ	0xFF1
 20516                           intcon3	equ	0xFF0
 20517                           indf0	equ	0xFEF
 20518                           postinc0	equ	0xFEE
 20519                           fsr0h	equ	0xFEA
 20520                           fsr0l	equ	0xFE9
 20521                           wreg	equ	0xFE8
 20522                           indf1	equ	0xFE7
 20523                           postinc1	equ	0xFE6
 20524                           postdec1	equ	0xFE5
 20525                           plusw1	equ	0xFE3
 20526                           fsr1h	equ	0xFE2
 20527                           fsr1l	equ	0xFE1
 20528                           indf2	equ	0xFDF
 20529                           postinc2	equ	0xFDE
 20530                           postdec2	equ	0xFDD
 20531                           plusw2	equ	0xFDB
 20532                           fsr2h	equ	0xFDA
 20533                           fsr2l	equ	0xFD9
 20534                           status	equ	0xFD8


Data Sizes:
    Strings     518
    Constant    152
    Data        29
    BSS         964
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     52      73
    BANK0           160    160     160
    BANK1           256    101     251
    BANK2           256     33     255
    BANK3           256      0      48
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    escalonador$3565	PTR FTN()void  size(2) Largest target is 1
		 -> SDCard(), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rd	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@fn(COMRAM[12]), f_utime@fn(COMRAM[12]), 
		 -> f_chmod@fn(COMRAM[12]), f_mkdir@fn(COMRAM[12]), f_unlink@fn(COMRAM[12]), f_stat@fn(COMRAM[12]), 
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK1[12]), NULL(NULL[0]), gps@gps_buffer(COMRAM[15]), 

    memset@p	PTR unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@fn(COMRAM[12]), f_utime@fn(COMRAM[12]), 
		 -> f_chmod@fn(COMRAM[12]), f_mkdir@fn(COMRAM[12]), f_unlink@fn(COMRAM[12]), f_stat@fn(COMRAM[12]), 
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK1[12]), NULL(NULL[0]), gps@gps_buffer(COMRAM[15]), 

    memcpy@d1	PTR void  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@direntry(COMRAM[21]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@direntry(COMRAM[21]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@direntry(COMRAM[21]), f_rename@fn(COMRAM[12]), 
		 -> f_mkdir@fn(COMRAM[12]), f_open@fn(BANK1[12]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@direntry(COMRAM[21]), f_rename@fn(COMRAM[12]), 
		 -> f_mkdir@fn(COMRAM[12]), f_open@fn(BANK1[12]), NULL(NULL[0]), 

    memcmp@s2	PTR const void  size(2) Largest target is 12
		 -> f_rename@fn(COMRAM[12]), f_utime@fn(COMRAM[12]), f_chmod@fn(COMRAM[12]), f_mkdir@fn(COMRAM[12]), 
		 -> f_unlink@fn(COMRAM[12]), f_stat@fn(COMRAM[12]), f_opendir@fn(COMRAM[12]), f_open@fn(BANK1[12]), 
		 -> STR_32(CODE[6]), STR_29(CODE[6]), STR_27(CODE[6]), STR_26(CODE[4]), 
		 -> STR_24(CODE[4]), 

    memcmp@s1	PTR const void  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), NULL(NULL[0]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    fil.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    fil.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    p_tarefas	PTR FTN()void [2] size(2) Largest target is 1
		 -> SDCard(), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_truncate@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_truncate@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_readdir@dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_opendir@dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_lseek@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_close@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_close@fp	PTR struct _FIL size(2) Largest target is 34
		 -> SDCard@fil(BANK2[32]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_sync@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_sync@fp	PTR struct _FIL size(2) Largest target is 34
		 -> SDCard@fil(BANK2[32]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_write@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_read@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@direntry(COMRAM[21]), NULL(NULL[0]), 

    f_open@dir	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_39(CODE[10]), 

    S857_FIL$dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    S857_FIL$fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_open@fp.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_open@fp	PTR struct _FIL size(2) Largest target is 34
		 -> SDCard@fil(BANK2[32]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    f_mount@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), 

    validate@fs	PTR const struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    auto_mount@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    auto_mount@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_rename@path_old(COMRAM[2]), f_utime@path(COMRAM[2]), f_chmod@path(COMRAM[2]), f_mkdir@path(COMRAM[2]), 
		 -> f_unlink@path(COMRAM[2]), f_getfree@drv(COMRAM[2]), f_stat@path(COMRAM[2]), f_opendir@path(COMRAM[2]), 
		 -> f_open@path(BANK1[2]), 

    auto_mount@p	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_39(CODE[10]), 

    check_fs@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    reserve_direntry@dir	PTR PTR unsigned char  size(2) Largest target is 2
		 -> f_rename@dir_new(COMRAM[2]), f_mkdir@dir(COMRAM[2]), f_open@dir(BANK1[2]), 

    reserve_direntry@dptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), NULL(NULL[0]), 

    reserve_direntry@dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    reserve_direntry@dj	PTR struct _DIR size(2) Largest target is 19
		 -> f_rename@dj(COMRAM[18]), f_mkdir@dj(COMRAM[18]), f_open@dj(BANK1[18]), 

    reserve_direntry@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    trace_path@fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_rename@fn(COMRAM[12]), f_utime@fn(COMRAM[12]), f_chmod@fn(COMRAM[12]), f_mkdir@fn(COMRAM[12]), 
		 -> f_unlink@fn(COMRAM[12]), f_stat@fn(COMRAM[12]), f_opendir@fn(COMRAM[12]), f_open@fn(BANK1[12]), 

    trace_path@dir	PTR PTR unsigned char  size(2) Largest target is 2
		 -> f_rename@dir_new(COMRAM[2]), f_rename@dir_old(COMRAM[2]), f_utime@dir(COMRAM[2]), f_chmod@dir(COMRAM[2]), 
		 -> f_mkdir@dir(COMRAM[2]), f_unlink@dir(COMRAM[2]), f_stat@dir(COMRAM[2]), f_opendir@dir(COMRAM[2]), 
		 -> f_open@dir(BANK1[2]), 

    trace_path@path	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_39(CODE[10]), 

    trace_path@dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    trace_path@dj	PTR struct _DIR size(2) Largest target is 19
		 -> f_rename@dj(COMRAM[18]), f_utime@dj(COMRAM[18]), f_chmod@dj(COMRAM[18]), f_mkdir@dj(COMRAM[18]), 
		 -> f_unlink@dj(COMRAM[18]), f_stat@dj(COMRAM[18]), f_open@dj(BANK1[18]), 

    trace_path@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    trace_path@dptr	PTR unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), NULL(NULL[0]), 

    make_dirfile@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> trace_path@path(BANK0[2]), 

    make_dirfile@dirname	PTR unsigned char  size(2) Largest target is 12
		 -> f_rename@fn(COMRAM[12]), f_utime@fn(COMRAM[12]), f_chmod@fn(COMRAM[12]), f_mkdir@fn(COMRAM[12]), 
		 -> f_unlink@fn(COMRAM[12]), f_stat@fn(COMRAM[12]), f_opendir@fn(COMRAM[12]), f_open@fn(BANK1[12]), 

    S822_DIR$fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    next_dir_entry@dj.fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    next_dir_entry@dj	PTR struct _DIR size(2) Largest target is 19
		 -> f_rename@dj(COMRAM[18]), f_utime@dj(COMRAM[18]), f_chmod@dj(COMRAM[18]), f_mkdir@dj(COMRAM[18]), 
		 -> f_unlink@dj(COMRAM[18]), f_stat@dj(COMRAM[18]), f_open@dj(BANK1[18]), 

    clust2sect@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    create_chain@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    remove_chain@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    put_cluster@p	PTR unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), NULL(NULL[0]), 

    put_cluster@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    get_cluster@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    sync@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    FatFs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    move_window@fs	PTR struct _FATFS size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    escreve_frase_ram_lcd@buffer	PTR unsigned char  size(2) Largest target is 2047
		 -> STR_47(CODE[9]), STR_46(CODE[17]), STR_45(CODE[17]), STR_44(CODE[17]), 
		 -> STR_43(CODE[17]), STR_42(CODE[5]), STR_41(CODE[18]), buff(BANK2[20]), 
		 -> STR_40(CODE[10]), STR_38(CODE[16]), STR_37(CODE[16]), mensagem_inicial@msg_dois(BANK0[17]), 
		 -> mensagem_inicial@msg_linha_um(BANK0[17]), STR_35(CODE[19]), STR_34(CODE[19]), STR_33(CODE[19]), 
		 -> STR_31(CODE[16]), STR_30(CODE[16]), STR_28(CODE[19]), STR_25(CODE[17]), 
		 -> STR_23(CODE[19]), STR_22(CODE[12]), escreve_inteiro_lcd@texto(BANK0[7]), STR_21(CODE[19]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[14]), STR_17(CODE[19]), 
		 -> RAM(DATA[2047]), STR_16(CODE[17]), STR_15(CODE[16]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[12]), 
		 -> STR_9(CODE[11]), STR_6(CODE[5]), STR_4(CODE[5]), gps@gps_buffer(COMRAM[15]), 
		 -> dado_buffer(BANK1[7]), STR_2(CODE[6]), data_buffer(BANK1[15]), STR_1(CODE[6]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    sdc_disk_write@p_buff	PTR const unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), NULL(NULL[0]), 

    sdc_disk_read@p_buff	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), NULL(NULL[0]), 

    data_buff	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 552
		 -> fs(BIGRAM[552]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 552
		 -> fs.win(BIGRAM[512]), fs(BIGRAM[552]), f_rename@fn(COMRAM[12]), f_utime@fn(COMRAM[12]), 
		 -> f_chmod@fn(COMRAM[12]), f_mkdir@fn(COMRAM[12]), f_unlink@fn(COMRAM[12]), f_stat@fn(COMRAM[12]), 
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK1[12]), NULL(NULL[0]), gps@gps_buffer(COMRAM[15]), 


Critical Paths under _main in COMRAM

    _main->_inicializa_SPI
    _mensagem_inicial->_posicao_cursor_lcd
    _init_lcd->_escreve_cmd_lcd
    _config_timer_zero->_write_timer_zero
    _inicializa_SPI->_escreve_inteiro_lcd
    _escreve_cmd_lcd->_delay
    _make_dirfile->_memset
    _reserve_direntry->_disk_write
    _clust2sect->___lmul
    _disk_initialize->_sdc_disk_initialize
    _sdc_disk_initialize->_WriteSPI_
    _check_fs->_disk_read
    _validate->_disk_status
    _disk_status->_sdc_disk_status
    _move_window->_disk_read
    _move_window->_disk_write
    _sdc_disk_write->_WriteSPI_
    _response->_ReadSPI_
    _ReadSPI_->_escreve_inteiro_lcd
    _proceed->_WriteSPI_
    _dummy_clocks->_WriteSPI_
    _command->_WriteSPI_
    _WriteSPI_->_escreve_inteiro_lcd
    _posicao_cursor_lcd->_endereco_cursor_lcd
    _endereco_cursor_lcd->_delay
    _escreve_inteiro_lcd->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _escreve_frase_ram_lcd->_escreve_caractere_lcd
    _escreve_caractere_lcd->_delay

Critical Paths under _isr in COMRAM

    _isr->i2_write_timer_zero

Critical Paths under _main in BANK0

    _main->_escalonador
    _inicializa_SPI->_escreve_inteiro_lcd
    _f_open->_reserve_direntry
    _trace_path->_next_dir_entry
    _reserve_direntry->_create_chain
    _next_dir_entry->_get_cluster
    _create_chain->_get_cluster
    _remove_chain->_get_cluster
    _put_cluster->_move_window
    _get_cluster->_move_window
    _auto_mount->_check_fs
    _disk_initialize->_sdc_disk_initialize
    _sdc_disk_initialize->_command
    _check_fs->_disk_read
    _f_close->_f_sync
    _f_sync->_sync
    _sync->_move_window
    _move_window->_disk_read
    _disk_write->_sdc_disk_write
    _sdc_disk_write->_command
    _disk_read->_sdc_disk_read
    _sdc_disk_read->_command
    _ReadSPI_->_escreve_inteiro_lcd
    _WriteSPI_->_escreve_inteiro_lcd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_escalonador
    _escalonador->_SDCard
    _SDCard->_f_open
    _f_open->_trace_path

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _escalonador->_SDCard

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 3219397
                        _escalonador
                     _inicializa_SPI
                 _inicializa_tarefas
                      _init_hardware
                           _init_lcd
                   _mensagem_inicial
 ---------------------------------------------------------------------------------
 (1) _mensagem_inicial                                    36    36      0   12943
                                             27 COMRAM     2     2      0
                                              0 BANK0     34    34      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             1     1      0     613
                                             24 COMRAM     1     1      0
                              _delay
                    _escreve_cmd_lcd
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     195
                  _config_timer_dois
                  _config_timer_zero
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     195
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     4     2      2     195
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _config_timer_dois                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_SPI                                       5     3      2   25145
                                             47 COMRAM     5     3      2
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (2) _escreve_cmd_lcd                                      1     1      0     477
                                             23 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0 3180501
                                            159 BANK0      1     1      0
                                             99 BANK1      2     2      0
                             _SDCard *
 ---------------------------------------------------------------------------------
 (2) _SDCard                                              39    39      0 3180278
                                             97 BANK1      2     2      0
                                              0 BANK2     33    33      0
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                            _f_close
                            _f_mount
                             _f_open
                 _posicao_cursor_lcd
                            _proceed
 ---------------------------------------------------------------------------------
 (3) _f_open                                              72    67      5 2651406
                                             25 BANK1     72    67      5
                         _auto_mount
                        _get_fattime
                             _memcpy
                             _memset
                        _move_window
                       _remove_chain
                   _reserve_direntry
                         _trace_path
 ---------------------------------------------------------------------------------
 (4) _trace_path                                          33    25      8  497220
                                            142 BANK0      8     0      8
                                              0 BANK1     25    25      0
                         _clust2sect
                       _make_dirfile
                             _memcmp
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (5) _make_dirfile                                        13     9      4    4103
                                             29 COMRAM    13     9      4
                             _memset
 ---------------------------------------------------------------------------------
 (4) _reserve_direntry                                    20    16      4 1091851
                                            153 BANK0      6     2      4
                                              0 BANK1     14    14      0
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memset
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (5) _next_dir_entry                                      15    13      2  246397
                                            127 BANK0     15    13      2
                         _clust2sect
                        _get_cluster
 ---------------------------------------------------------------------------------
 (6) _clust2sect                                          11     7      4    2053
                                             33 COMRAM    11     7      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _create_chain                                        26    22      4  488780
                                            127 BANK0     26    22      4
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (4) _remove_chain                                        14    10      4  487897
                                            127 BANK0     14    10      4
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (6) _put_cluster                                         27    19      8  243829
                                             69 BANK0     27    19      8
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (6) _get_cluster                                         58    54      4  243420
                                             69 BANK0     58    54      4
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    3438
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6    2334
                                             21 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (4) _auto_mount                                          51    48      3  328039
                                             71 BANK0     51    48      3
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                             _memset
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2567
                                             21 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _disk_initialize                                      4     4      0  144561
                                             22 BANK0      2     2      0
                _sdc_disk_initialize
 ---------------------------------------------------------------------------------
 (6) _sdc_disk_initialize                                 21    21      0  144431
                                             51 COMRAM     1     1      0
                                             14 BANK0      8     8      0
                          _WriteSPI_
                            _command
                       _dummy_clocks
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (5) _check_fs                                            25    21      4  150109
                                             46 BANK0     25    21      4
                          _disk_read
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                             _memcmp
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (5) _memcmp                                               9     3      6    1781
                                             21 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8     812
                                             21 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1525
                                             21 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _f_mount                                              3     1      2     214
                                             21 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _f_close                                              3     1      2  479655
                                             84 BANK0      3     1      2
                             _f_sync
 ---------------------------------------------------------------------------------
 (4) _f_sync                                              13    11      2  479462
                                             71 BANK0     13    11      2
                        _get_fattime
                        _move_window
                               _sync
                           _validate
 ---------------------------------------------------------------------------------
 (5) _validate                                             6     2      4    1430
                                             28 COMRAM     6     2      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (6) _disk_status                                          5     5      0     226
                                             23 COMRAM     5     5      0
                    _sdc_disk_status
 ---------------------------------------------------------------------------------
 (7) _sdc_disk_status                                      4     4      0      34
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _sync                                                 2     2      0  238522
                                             69 BANK0      2     2      0
                         _disk_ioctl
                        _move_window
 ---------------------------------------------------------------------------------
 (7) _move_window                                         23    19      4  238184
                                             46 BANK0     23    19      4
                          _disk_read
                         _disk_write
 ---------------------------------------------------------------------------------
 (8) _disk_write                                          12     5      7  112311
                                             51 COMRAM     1     1      0
                                             31 BANK0     11     4      7
                     _sdc_disk_write
 ---------------------------------------------------------------------------------
 (9) _sdc_disk_write                                      19    12      7  110611
                                             14 BANK0     17    10      7
                          _WriteSPI_
                            ___awdiv
                            _command
                       _dummy_clocks
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                           _response
 ---------------------------------------------------------------------------------
 (10) ___awdiv                                             8     4      4    2105
                                             21 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) _disk_read                                           12     5      7  123047
                                             51 COMRAM     1     1      0
                                             35 BANK0     11     4      7
                      _sdc_disk_read
 ---------------------------------------------------------------------------------
 (9) _sdc_disk_read                                       26    19      7  121580
                                             14 BANK0     21    14      7
                            _command
                       _dummy_clocks
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (10) _response                                            1     1      0   19629
                                             48 COMRAM     1     1      0
                           _ReadSPI_
 ---------------------------------------------------------------------------------
 (11) _ReadSPI_                                            1     1      0   19595
                                             47 COMRAM     1     1      0
                _escreve_inteiro_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _proceed                                              0     0      0   24305
                          _WriteSPI_
 ---------------------------------------------------------------------------------
 (10) _dummy_clocks                                        5     5      0   24373
                                              7 BANK0      5     5      0
                          _WriteSPI_
 ---------------------------------------------------------------------------------
 (10) _command                                             7     2      5   26967
                                              7 BANK0      7     2      5
                          _WriteSPI_
 ---------------------------------------------------------------------------------
 (4) _WriteSPI_                                            4     4      0   24305
                                             47 COMRAM     4     4      0
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (2) _posicao_cursor_lcd                                   3     2      1    7707
                                             24 COMRAM     3     2      1
                _endereco_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _endereco_cursor_lcd                                  1     1      0     353
                                             23 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _escreve_inteiro_lcd                                  9     7      2   11885
                                             45 COMRAM     2     0      2
                                              0 BANK0      7     7      0
              _escreve_frase_ram_lcd
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    3936
                                             37 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    3163
                                             28 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4    1132
                                             21 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4    1321
                                             21 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _escreve_frase_ram_lcd                                2     0      2    4679
                                             24 COMRAM     2     0      2
              _escreve_caractere_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_caractere_lcd                                1     1      0     384
                                             23 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     2      0     136
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _disk_ioctl                                           7     4      3     304
                                             21 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (4) _get_fattime                                         51    47      4     201
                                             21 COMRAM    13     9      4
                                              0 BANK0     38    38      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _isr                                                17    17      0     183
                                              4 COMRAM    17    17      0
                   _recebe_dado_uart
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (17) i2_write_timer_zero                                  4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (17) _recebe_dado_uart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _escalonador
     _SDCard *
       _escreve_frase_ram_lcd
         _escreve_caractere_lcd
           _delay
       _escreve_inteiro_lcd
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
       _f_close
         _f_sync
           _get_fattime
           _move_window
             _disk_read
               _sdc_disk_read
                 _command
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                 _dummy_clocks
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _escreve_inteiro_lcd
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _itoa
                     _utoa
                       ___lwdiv
                       ___lwmod
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _proceed
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                 _response
                   _ReadSPI_
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
             _disk_write
               _sdc_disk_write
                 _WriteSPI_
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                 ___awdiv
                 _command
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                 _dummy_clocks
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _response
                   _ReadSPI_
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
           _sync
             _disk_ioctl
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                   _dummy_clocks
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                   _response
                     _ReadSPI_
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
               _disk_write
                 _sdc_disk_write
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                   ___awdiv
                   _command
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                   _dummy_clocks
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _response
                     _ReadSPI_
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
           _validate
             _disk_status
               _sdc_disk_status
       _f_mount
       _f_open
         _auto_mount
           ___lldiv
           ___lmul
           _check_fs
             _disk_read
               _sdc_disk_read
                 _command
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                 _dummy_clocks
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _escreve_inteiro_lcd
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _itoa
                     _utoa
                       ___lwdiv
                       ___lwmod
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _proceed
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                 _response
                   _ReadSPI_
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
             _escreve_frase_ram_lcd
               _escreve_caractere_lcd
                 _delay
             _escreve_inteiro_lcd
               _escreve_frase_ram_lcd
                 _escreve_caractere_lcd
                   _delay
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
             _memcmp
             _posicao_cursor_lcd
               _endereco_cursor_lcd
                 _delay
           _disk_initialize
             _sdc_disk_initialize
               _WriteSPI_
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _escreve_inteiro_lcd
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _itoa
                     _utoa
                       ___lwdiv
                       ___lwmod
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
               _command
                 _WriteSPI_
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
               _dummy_clocks
                 _WriteSPI_
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
               _escreve_frase_ram_lcd
                 _escreve_caractere_lcd
                   _delay
               _escreve_inteiro_lcd
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
               _posicao_cursor_lcd
                 _endereco_cursor_lcd
                   _delay
               _proceed
                 _WriteSPI_
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
               _response
                 _ReadSPI_
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
           _escreve_frase_ram_lcd
             _escreve_caractere_lcd
               _delay
           _escreve_inteiro_lcd
             _escreve_frase_ram_lcd
               _escreve_caractere_lcd
                 _delay
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
           _memset
           _posicao_cursor_lcd
             _endereco_cursor_lcd
               _delay
         _get_fattime
         _memcpy
         _memset
         _move_window
           _disk_read
             _sdc_disk_read
               _command
                 _WriteSPI_
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
               _dummy_clocks
                 _WriteSPI_
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
               _escreve_frase_ram_lcd
                 _escreve_caractere_lcd
                   _delay
               _escreve_inteiro_lcd
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
               _posicao_cursor_lcd
                 _endereco_cursor_lcd
                   _delay
               _proceed
                 _WriteSPI_
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
               _response
                 _ReadSPI_
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
           _disk_write
             _sdc_disk_write
               _WriteSPI_
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _escreve_inteiro_lcd
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _itoa
                     _utoa
                       ___lwdiv
                       ___lwmod
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
               ___awdiv
               _command
                 _WriteSPI_
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
               _dummy_clocks
                 _WriteSPI_
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
               _escreve_frase_ram_lcd
                 _escreve_caractere_lcd
                   _delay
               _posicao_cursor_lcd
                 _endereco_cursor_lcd
                   _delay
               _response
                 _ReadSPI_
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
         _remove_chain
           _get_cluster
             ___wmul
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                   _dummy_clocks
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                   _response
                     _ReadSPI_
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
               _disk_write
                 _sdc_disk_write
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                   ___awdiv
                   _command
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                   _dummy_clocks
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _response
                     _ReadSPI_
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
           _put_cluster
             ___wmul
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                   _dummy_clocks
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                   _response
                     _ReadSPI_
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
               _disk_write
                 _sdc_disk_write
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                   ___awdiv
                   _command
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                   _dummy_clocks
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _response
                     _ReadSPI_
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
         _reserve_direntry
           _clust2sect
             ___lmul
           _create_chain
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _dummy_clocks
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _response
                       _ReadSPI_
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                 _disk_write
                   _sdc_disk_write
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                     ___awdiv
                     _command
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _dummy_clocks
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _response
                       _ReadSPI_
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
             _put_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _dummy_clocks
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _response
                       _ReadSPI_
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                 _disk_write
                   _sdc_disk_write
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                     ___awdiv
                     _command
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _dummy_clocks
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _response
                       _ReadSPI_
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
           _disk_write
             _sdc_disk_write
               _WriteSPI_
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _escreve_inteiro_lcd
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _itoa
                     _utoa
                       ___lwdiv
                       ___lwmod
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
               ___awdiv
               _command
                 _WriteSPI_
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
               _dummy_clocks
                 _WriteSPI_
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
               _escreve_frase_ram_lcd
                 _escreve_caractere_lcd
                   _delay
               _posicao_cursor_lcd
                 _endereco_cursor_lcd
                   _delay
               _response
                 _ReadSPI_
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
           _memset
           _move_window
             _disk_read
               _sdc_disk_read
                 _command
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                 _dummy_clocks
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _escreve_inteiro_lcd
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _itoa
                     _utoa
                       ___lwdiv
                       ___lwmod
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _proceed
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                 _response
                   _ReadSPI_
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
             _disk_write
               _sdc_disk_write
                 _WriteSPI_
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                 ___awdiv
                 _command
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                 _dummy_clocks
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _response
                   _ReadSPI_
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
           _next_dir_entry
             _clust2sect
               ___lmul
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _dummy_clocks
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _response
                       _ReadSPI_
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                 _disk_write
                   _sdc_disk_write
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                     ___awdiv
                     _command
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _dummy_clocks
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _response
                       _ReadSPI_
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
         _trace_path
           _clust2sect
             ___lmul
           _make_dirfile
             _memset
           _memcmp
           _move_window
             _disk_read
               _sdc_disk_read
                 _command
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                 _dummy_clocks
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _escreve_inteiro_lcd
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _itoa
                     _utoa
                       ___lwdiv
                       ___lwmod
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _proceed
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                 _response
                   _ReadSPI_
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
             _disk_write
               _sdc_disk_write
                 _WriteSPI_
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _escreve_inteiro_lcd
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _itoa
                       _utoa
                         ___lwdiv
                         ___lwmod
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                 ___awdiv
                 _command
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                 _dummy_clocks
                   _WriteSPI_
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _response
                   _ReadSPI_
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
           _next_dir_entry
             _clust2sect
               ___lmul
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _dummy_clocks
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _escreve_inteiro_lcd
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _itoa
                         _utoa
                           ___lwdiv
                           ___lwmod
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _response
                       _ReadSPI_
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                 _disk_write
                   _sdc_disk_write
                     _WriteSPI_
                       _escreve_frase_ram_lcd
                         _escreve_caractere_lcd
                           _delay
                       _escreve_inteiro_lcd
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _itoa
                           _utoa
                             ___lwdiv
                             ___lwmod
                       _posicao_cursor_lcd
                         _endereco_cursor_lcd
                           _delay
                     ___awdiv
                     _command
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _dummy_clocks
                       _WriteSPI_
                         _escreve_frase_ram_lcd
                           _escreve_caractere_lcd
                             _delay
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _response
                       _ReadSPI_
                         _escreve_inteiro_lcd
                           _escreve_frase_ram_lcd
                             _escreve_caractere_lcd
                               _delay
                           _itoa
                             _utoa
                               ___lwdiv
                               ___lwmod
                         _posicao_cursor_lcd
                           _endereco_cursor_lcd
                             _delay
       _posicao_cursor_lcd
         _endereco_cursor_lcd
           _delay
       _proceed
         _WriteSPI_
           _escreve_frase_ram_lcd
             _escreve_caractere_lcd
               _delay
           _escreve_inteiro_lcd
             _escreve_frase_ram_lcd
               _escreve_caractere_lcd
                 _delay
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
           _posicao_cursor_lcd
             _endereco_cursor_lcd
               _delay
   _inicializa_SPI
     _escreve_cmd_lcd
       _delay
     _escreve_frase_ram_lcd
       _escreve_caractere_lcd
         _delay
     _escreve_inteiro_lcd
       _escreve_frase_ram_lcd
         _escreve_caractere_lcd
           _delay
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _posicao_cursor_lcd
       _endereco_cursor_lcd
         _delay
   _inicializa_tarefas
   _init_hardware
     _config_timer_dois
     _config_timer_zero
       _write_timer_zero
     _init_interrupt
     _init_oscilador
     _init_ports
   _init_lcd
     _delay
     _escreve_cmd_lcd
       _delay
   _mensagem_inicial
     _escreve_cmd_lcd
       _delay
     _escreve_frase_ram_lcd
       _escreve_caractere_lcd
         _delay
     _posicao_cursor_lcd
       _endereco_cursor_lcd
         _delay

 _isr (ROOT)
   _recebe_dado_uart
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     228      21       27.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      30      11       18.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100     21      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     65      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     34      49       1       77.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     313      20        0.0%
DATA                 0      0     53B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Mar 04 16:14:49 2022

             next_dir_entry@idx 00EC        __end_of_mensagem_inicial 4F10                               _s 003E  
           next_dir_entry@clust 00E8                     _SSPSTATbits 000FC7                ??_init_interrupt 0016  
  __size_of_escreve_inteiro_lcd 003C                    ___awdiv@sign 001B                     __CFG_BOR$ON 000000  
                            _fs 0330                              _rd 015C             ___wmul@multiplicand 0018  
                   __CFG_BORV$3 000000                     _put_cluster 1F52                disk_write@sector 0081  
 sdc_disk_initialize@count_nosd 0070                    ?_escalonador 0001                  create_chain@fs 00EB  
              disk_write@result 0087                             l300 4CA8                             l301 4CAA  
                           l214 1AA6                             l302 4CBE                             l303 4CC0  
                           l320 508A                             l304 4CC8                             l321 508C  
                           l305 4CCA                             l322 50A0                             l306 4CD2  
                           l323 50A2                             l307 4CD4                             l324 50AA  
                           l316 5076                             l308 4CDC                             l325 50AC  
                           l309 4CDE                             l326 50B4                             l318 5080  
                           l254 410C                             l183 5634                             l351 4FB0  
                           l327 50B6                             l335 5002                             l360 4FE6  
                           l352 4FB2                             l328 50BE                             l185 5638  
                           l353 4FC6                             l345 4F92                             l329 50C0  
                           l257 4126                             l186 563C                             l354 4FC8  
                           l610 31F4                             l355 4FD0                             l347 4F9C  
                           l284 568A                             l356 4FD2                             l357 4FDA  
                           l349 4FA6                             l613 31E4                             l286 5698  
                           l358 4FDC                             l294 4C8A                             l359 4FE4  
                           l296 4C94                             l298 4C9E                             l803 0D8A  
                           l808 0DC2                             l818 10AE                             l684 4520  
                           l757 2D02                             l781 0B58                             l687 44CE  
                           l776 050C                             _PCL 000FF9                             _PR2 000FCB  
                           _E_W 0048                ??_init_oscilador 0016                             _n_s 0049  
                           _isr 0008                             _txt 02B6                    disk_read@res 008D  
                           prod 000FF3                  ??_create_chain 00E3                             tosl 000FFD  
                           wreg 000FE8                    __CFG_FOSC$HS 000000       __size_of_write_timer_zero 0012  
               create_chain@mcl 00E7                 create_chain@ncl 00F5                 create_chain@scl 00F1  
                  __CFG_LVP$OFF 000000         ??_escreve_frase_ram_lcd 001B                    __CFG_WDT$OFF 000000  
                          l2009 5278                            l2019 5466                            l1307 406C  
                          l1350 45A2                            l1351 4584                            l1343 455E  
                          l1352 4588                            l1345 4562                            l1346 4564  
                          l1349 457E                            l1287 5200                            l1930 4A86  
                          l1956 4E84                            ?_isr 0001           _escreve_caractere_lcd 4F82  
                          STR_1 6252                            STR_2 6258                            STR_3 625E  
                          STR_4 6273                            STR_6 626E                            STR_7 6243  
                          STR_8 6269                            STR_9 621B                  timer_dois@flag 0043  
                          _BRGH 007D62                            _CREN 007D5C                            _T0IF 007F92  
                          _LATB 000F8A                            _PIE1 000F9D               _valor_leitura_adc 0100  
                          _RCIF 007CF5                            _TMR2 000FCC                            _SPEN 007D5F  
                          _TRMT 007D61                            _TXEN 007D65                            _SYNC 007D64  
                  trace_path@dj 00EE                    trace_path@fn 00F0                    trace_path@ds 018B  
                  trace_path@fs 0189                   ?_make_dirfile 001E                            _buff 02CA  
                          _main 55A0                            _fsid 0160                            _itoa 53EC  
                          fsr0h 000FEA                            fsr1h 000FE2                            indf0 000FEF  
                          fsr2h 000FDA                            fsr0l 000FE9                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            fsr2l 000FD9  
                          btemp 004A                            _utoa 4A06                            _sync 512E  
                 disk_ioctl@cmd 0016                   disk_read@buff 0083                   disk_ioctl@res 001A  
                 disk_read@pdrv 008A                            prodh 000FF4                            prodl 000FF3  
                          start 000E                   __CFG_IESO$OFF 000000                   __CFG_MCLRE$ON 000000  
                  ___param_bank 000000                           ??_isr 0005                   __CFG_PLLDIV$5 000000  
                         l11001 1ED0                           l11101 41D6                           l11201 3AEE  
                         l11035 40AE                           l11125 4C1E                           l11117 4BEA  
                         l11141 4C60                           l11205 3BA4                           l12021 534C  
                         l10511 5252                           l11135 4C5A                           l12031 5360  
                         l12103 25A2                           l11225 3C58                           l11209 3BAE  
                         l11217 3C0A                           l12025 5350                           l11401 2F8A  
                         l12201 3520                           l10611 52AC                           l10507 5246  
                         l10531 5448                           l11163 4D70                           l11227 3C76  
                         l11243 51AC                           l12131 2684                           l12107 25F8  
                         l10509 524E                           l11157 4D40                           l11149 4D0C  
                         l12045 4E36                           l11325 2E40                           l11253 561E  
                         l11501 15C6                           l12221 3612                           l12125 2658  
                         l12117 2634                           l10607 5284                           l10519 526E  
                         l10535 545C                           l10527 543C                           l10623 5082  
                         l11087 4162                           l11183 5718                           l11263 54C0  
                         l12047 4E42                           l11239 5198                           l11319 2E14  
                         l12311 00F8                           l12303 00E4                           l12071 46D0  
                         l12063 4694                           l12215 35A6                           l12151 274E  
                         l12143 2706                           l10553 4FA8                           l10545 4F94  
                         l10529 5444                           l10721 54FA                           l11089 419A  
                         l11169 4D76                           l11257 54B4                           l12057 4E76  
                         l12049 4E46                           l11417 2FD8                           l11345 2E9A  
                         l11329 2E5E                           l11249 560E                           l12401 5482  
                         l11513 16F6                           l11505 15D6                           l12081 4738  
                         l12233 364A                           l12225 3616                           l12209 3592  
                         l12161 2784                           l10483 5682                           l10619 5078  
                         l10707 50FE                           l10715 5128                           l10811 4E0A  
                         l10803 4DF2                           l11275 54D6                           l11435 303A  
                         l11523 199A                           l12083 4748                           l12243 3700  
                         l12139 26F6                           l10549 4F9E                           l10653 5410  
                         l10725 550E                           l11269 54D2                           l12421 37CE  
                         l11621 4BC2                           l11453 3092                           l11525 19BC  
                         l11541 1FF6                           l11533 1F7A                           l12077 4700  
                         l11701 3204                           l12237 36C6                           l12229 3646  
                         l12157 2774                           l12501 0D0A                           l10807 4DFC  
                         l11615 4B4A                           l11623 4BCA                           l11631 53B0  
                         l12351 0390                           l12407 549E                           l12087 478A  
                         l11711 3280                           l12247 3712                           l12191 34B2  
                         l12175 27BA                           l10497 569E                           l10489 5690  
                         l10577 4A0E                           l10673 502A                           l10665 500E  
                         l10681 503E                           l12265 0054                           l12257 0024  
                         l11561 210E                           l11609 48F0                           l12193 34DE  
                         l11801 4420                           l12169 27A2                           l12521 0D94  
                         l11467 5640                           l10587 4A48                           l10683 505A  
                         l10755 5210                           l10931 1CD2                           l10907 1C1E  
                         l10835 1A5C                           l11299 2DA0                           l11643 53CC  
                         l12355 0394                           l12347 0336                           l12275 007C  
                         l12259 002A                           l11571 21D6                           l11547 204C  
                         l11723 32E0                           l12195 34F4                           l10677 5038  
                         l10669 501C                           l10685 505E                           l10917 1C6A  
                         l12453 3A4A                           l11637 53BE                           l12293 00B4  
                         l11549 2094                           l12525 0DBE                           l12541 0FE4  
                         l12509 0D3A                           l10935 1CF0                           l10871 1B1E  
                         l10847 1A98                           l10927 1C94                           l10791 4DCA  
                         l11671 5184                           l12463 52E0                           l11479 1402  
                         l11567 219A                           l11743 33B0                           l11735 335E  
                         l11903 4542                           l11815 4446                           l12535 0F9A  
                         l12623 4CA0                           l12615 4C8C                           l10945 1D42  
                         l10865 1AF6                           l10793 4DD2                           l10785 4DB4  
                         l11665 5168                           l12473 5318                           l11649 53D2  
                         l12393 0AEC                           l12385 098E                           l12377 080A  
                         l12289 00B0                           l11585 2336                           l11577 2234  
                         l11593 2496                           l11729 331E                           l11833 4482  
                         l10971 1DC6                           l10891 1BBC                           l10795 4DD6  
                         l10779 4DA4                           l12467 52F8                           l11915 2954  
                         l11499 15A2                           l11587 2492                           l11579 22D4  
                         l11595 24BA                           l11747 3406                           l11771 3E1A  
                         l11763 3D24                           l11843 44A0                           l12539 0F9E  
                         l12811 4A00                           l12651 4D00                           l12619 4C96  
                         l10957 1D7E                           l11933 2A32                           l12389 09AE  
                         l11861 44C6                           l11853 44B6                           l11845 44A6  
                         l11837 448E                           l11829 4476                           l12565 108A  
                         l12717 4022                           l10991 1E72                           l10975 1DEC  
                         l10879 1B76                           l11951 2AFA                           l11687 314A  
                         l11775 3E1E                           l12559 107A                           l12807 49D0  
                         l14271 55C2                           l10977 1E04                           l10985 1E3E  
                         l10993 1E82                           l11697 31AE                           l11689 315E  
                         l11857 44BE                           l12569 10AA                           l12489 0CAE  
                         l10987 1E4C                           l11971 2BC2                           l11779 3E6E  
                         l11883 4500                           l11875 44E8                           l11795 43EC  
                         l12579 10CC                           l12843 4568                           l11893 451E  
                         l11885 4502                           l12677 3F0E                           l11895 4522  
                         l12847 458E                           l12795 495A                           l12799 4964  
                         ?_main 0001                           ?_itoa 0026                 __end_of___awdiv 4E14  
                         STR_10 620F                           STR_11 607B                           STR_12 607B  
                         STR_20 61D5                           STR_21 60D8                           STR_13 6174  
                         STR_22 6203                           STR_30 61A5                           STR_14 6152  
                         STR_15 61E5                           STR_31 61B5                           STR_23 60C5  
                         STR_32 624C                           STR_24 6278                           STR_40 6226  
                         STR_16 6163                           STR_25 6141                           STR_41 60EB  
                         STR_17 60D8                           STR_33 608C                           STR_26 6278  
                         STR_42 6264                           STR_18 61F5                           STR_34 6079  
                         STR_27 624C                           STR_19 61C5                           STR_43 6130  
                         STR_35 609F                           STR_36 627C                           STR_44 60FD  
                         STR_28 60B2                           STR_29 624C                           STR_37 6185  
                         STR_45 610E                           STR_38 6195                           STR_46 611F  
                         STR_47 623A                           STR_39 6230                 __end_of___lldiv 4E96  
                         ?_utoa 001D                           ?_sync 0001                           u12120 3AA0  
                         _T0CON 000FD5                 ___awdiv@divisor 0018                           u12310 13B8  
                         u13200 2C62                           u13120 2A2E                           u12400 1716  
                         u13210 2C64                           u13140 2B4A                           u12500 22F4  
                         u12405 170A                           u13150 2B4C                           u12335 1436  
                         u12600 3126                           _T2CON 000FCA                           u13305 42AC  
                         u12505 22E8                           u12425 1FAE                           u12530 4B76  
                         u13315 42CA                           u12355 14E0                           u11660 52A4  
                         u13180 2C12                           u11670 52CC                           u12550 4B9C  
                         u13190 2C14                           u12455 20C6                           u12480 21BA  
                         u12720 33EE                           u11905 19FE                           u12537 4B6C  
                         u12385 15B0                           u13370 4720                           u11667 529A  
                         u13380 4760                           u13285 424E                           u11677 52C2  
                         u11781 5534                           u12557 4B92                           u12485 21AE  
                         u13445 26A6                           u13295 4274                           u14370 4EA4  
                         u12780 3DE4                           u14380 4EBC                           u12765 3D32  
                         u13565 3542                           u13910 388A                           u13830 0988  
                         u14358 49BC                           u13920 38D2                           u13840 09A8  
                         u11985 1CA6                           u13825 0826                           u13930 3970  
                         u13915 387E                  _data_buffer_32 0296                           u13940 39B8  
                         u13925 38C6                           u13935 3964                           u13945 39AC  
                         u13865 0B92                           u16617 4EFC                           u16707 3F20  
                         u16627 4ACC                           u16717 4012                           u16637 4AE8  
                         u16807 2FF8                           u16727 405A                           u16647 4B04  
                         u16817 29CC                           u16737 0170                           u16657 45CC  
               __end_of___lwdiv 5282                           u16907 1A26                           u16827 2ABC  
                         u16747 0328                           u16667 4636                           u16917 1B12  
                         u16837 2B70                           u16757 2D60                           u16677 4676  
                         u16927 1C04                           u16847 2C88                           u16767 2EC4  
                         u16687 3EA0                           u16937 1D0E                           u16857 2D2A  
                         u16777 2F06                           u16697 3F00                           u16947 1EA0  
                         u16867 40C8                           u16787 2F52                           u16957 1F22  
                         u16877 40E6                           u16797 2FE8                           u16967 1F42  
                         u16887 41A2                           u16977 51EA                           u16897 4216  
                         u16987 50E8                 __end_of___lwmod 5470                 ___awdiv@counter 001A  
                         _RCREG 000FAE                           _RCSTA 000FAB                           _TMR0H 000FD7  
                         _TMR0L 000FD6                           _SPBRG 000FAF                   __CFG_USBDIV$1 000000  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                         _TRISD 000F95                           _TRISE 000F96                 __end_of_f_close 5604  
                         _TXREG 000FAD                   trace_path@dir 00F4                           _TXSTA 000FAC  
                         _FatFs 0035                   __CFG_PWRT$OFF 000000             ___lmul@multiplicand 001A  
    __size_of_config_timer_dois 000E                 __end_of_f_mount 531C                  __CFG_FCMEN$OFF 000000  
    __size_of_config_timer_zero 001A                   get_cluster@bc 00DB                   get_cluster@fs 00DD  
                 get_cluster@wc 00D5                 __end_of_command 53AA                           _delay 567E  
               clust2sect@clust 0022                 __end_of_dpowers 6009        __size_of_escreve_cmd_lcd 008C  
                ??_make_dirfile 0022                  disk_ioctl@buff 0017                           pclath 000FFA  
                disk_read@count 0089                           tablat 000FF5                  disk_ioctl@pdrv 0019  
               __end_of_proceed 5780                           plusw1 000FE3                           plusw2 000FDB  
                         utoa@c 0025                           utoa@v 0023                           status 000FD8  
                 disk_write@res 0089                 __initialization 4F10             disk_initialize@pdrv 0076  
           disk_initialize@stat 0077                    __end_of_main 55D2                    clust2sect@fs 002B  
                  __end_of_itoa 542E                    __end_of_utoa 4AAA                    __end_of_sync 5188  
            _inicializa_tarefas 5566                 escalonador@cont 00FF                __end_of_ReadSPI_ 552A  
           reserve_direntry@dir 00FB               create_chain@clust 00DF                     auto_mount@p 00D0  
             create_chain@cstat 00ED                          ??_main 0035                          ??_itoa 002C  
                        ??_utoa 0023                          ??_sync 0035                   __activetblptr 000002  
           ?_inicializa_tarefas 0001                 __CFG_CCP2MX$OFF 000000                  _next_dir_entry 3C7A  
             get_fattime@f_time 001A                ??_sdc_disk_write 0075                          ?_delay 0001  
        ?_escreve_caractere_lcd 0001                          _ADCON0 000FC2                          _ADCON1 000FC1  
                        _ADRESH 000FC4                          _ADRESL 000FC3                ___awdiv@dividend 0016  
            auto_mount@bootsect 00CC                          _INT0IE 007F94                          _INT0IF 007F91  
                 ?_dummy_clocks 0001                          i2l1087 5752                          i2l1176 4856  
                        _PCLATH 000FFA                          _INTCON 000FF2                          i2l8301 5760  
       __size_of_inicializa_SPI 0144                          _TMR0IF 007F92                          _TMR2IF 007CF1  
                        _SDCard 3E88              auto_mount@maxclust 00C4        __end_of_recebe_dado_uart 5764  
                        _SPPCFG 000F63                          _SPPCON 000F65                _is_it_gga_string 0045  
                        _SSPBUF 000FC9        __size_of_sdc_disk_status 0014                __end_of_check_fs 2D3C  
          ??_inicializa_tarefas 0016                  trace_path@dptr 0190                  trace_path@path 00F2  
        reserve_direntry@sector 0179        __size_of_disk_initialize 0042      __end_of_posicao_cursor_lcd 5064  
                auto_mount@path 00A7                    ?_move_window 008E            __end_of_create_chain 3418  
        __size_of_init_hardware 0016                __end_of__powers_ 6030                  auto_mount@stat 00D2  
                        _Result 003F            __size_of_get_fattime 0196                    put_cluster@p 00BC  
          __size_of_get_cluster 0638                          ___lmul 5188            __size_of_disk_status 003E  
                        ___wmul 5658                       ??___awdiv 001A                  __CFG_STVREN$ON 000000  
                     ??___lldiv 001E                          _f_open 0C64                       ??___lwdiv 001A  
                        _f_sync 3756                       ??___lwmod 001A                          _folder 0300  
                        _estado 003D                          _memcmp 4B48                          _memcpy 5470  
              __end_of_init_lcd 4B48                          _memset 5604                       ??_f_close 0035  
                        clear_0 4F38                          clear_1 4F4A                          clear_2 4F56  
                        clear_3 4F62                          clear_4 4F6E                ___awdiv@quotient 001C  
                     ??_f_mount 0018             _sdc_disk_initialize 2D3C                       ??_command 0034  
              put_cluster@clust 00A5              get_cluster@fatsect 00D7                          itoa@cp 002C  
      __end_of_reserve_direntry 3756                __end_of_validate 5364          __end_of_next_dir_entry 3E88  
          __size_of_escalonador 00B2                __end_of_response 578C                    __mediumconst 5FE0  
         write_timer_zero@timer 0018                 disk_read@sector 0085                 disk_read@result 008B  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                     ??_proceed 0034                _write_timer_zero 572E                          sync@fs 00A5  
      sdc_disk_initialize@count 0073       escreve_caractere_lcd@data 0018                  ??_dummy_clocks 0067  
           _escreve_inteiro_lcd 552A                 sdc_disk_write@i 0078                      __accesstop 0060  
       __end_of__initialization 4F74                 __CFG_PBADEN$OFF 000000            ?_sdc_disk_initialize 0001  
                disk_write@buff 007F              __size_of_WriteSPI_ 0060                  disk_write@pdrv 0086  
               _put_cluster$964 00B2                 _put_cluster$965 00B4                   ___rparam_used 000001  
             ??_escreve_cmd_lcd 0018                  __pcstackCOMRAM 0001     __end_of_endereco_cursor_lcd 50CE  
                  __pidataBANK1 56A2               ?_mensagem_inicial 0001                   __end_of_delay 56A2  
          ?_escreve_inteiro_lcd 002E                   check_fs@temp2 0096                   check_fs@temp3 009A  
                 check_fs@temp4 00A1              ??_mensagem_inicial 001C            __end_of_make_dirfile 4546  
                  ?_put_cluster 00A5               reserve_direntry@c 0180               reserve_direntry@n 017D  
            _tarefa_em_execucao 0040      __end_ofi2_write_timer_zero 5752                 ?_next_dir_entry 00DF  
        __size_of_sdc_disk_read 0582            reserve_direntry@dptr 017E                   _init_hardware 56F2  
                  auto_mount@fs 00D8              __size_of_disk_read 0096                         ??_delay 0016  
              _is_it_rmc_string 0044    mensagem_inicial@msg_linha_um 0060                      __pbssBANK1 0100  
                    __pbssBANK2 0200                      __pbssBANK3 0300  __size_of_escreve_frase_ram_lcd 0052  
                     ?_ReadSPI_ 0001   __end_of_escreve_frase_ram_lcd 52D4           ??_sdc_disk_initialize 0034  
                       ?_SDCard 0001       escreve_inteiro_uart@F3952 01ED                      _gga_buffer 0200  
                       ?___lmul 0016               ??_sdc_disk_status 0016                   make_dirfile@a 0028  
                 make_dirfile@b 0026                   make_dirfile@c 002A                   make_dirfile@n 0029  
                 make_dirfile@t 0027                         ?___wmul 0016           mensagem_inicial@F4096 6068  
         mensagem_inicial@F4098 6057           ??_escreve_inteiro_lcd 0030                         ?_f_open 0192  
                       ?_f_sync 00A7                       SDCard@fil 02DF               ??_disk_initialize 0035  
                       ?_memcmp 0016                         ?_memcpy 0016                         ?_memset 0016  
                ___lmul@product 001E                    _gga_pointers 0126               __end_of_WriteSPI_ 512E  
                       i2l10033 481C                         i2l10025 47E6                         i2l10017 47D6  
                       i2l10045 4842                         i2l10037 4820                         i2l10029 47EE  
                       i2l10047 484E                         _INTCON2 000FF1                         _INTCON3 000FF0  
                ?_init_hardware 0001                       ?_check_fs 008E                      _disk_ioctl 5630  
                    _disk_write 4D06                  remove_chain@fs 00EB                         _SSPCON1 000FC6  
                       _SSPSTAT 000FC7                      _clust2sect 4892                  _inicializa_SPI 4546  
               trace_path@clust 018C                      ??_ReadSPI_ 0030                 __CFG_VREGEN$OFF 000000  
                 ?_remove_chain 00DF           __size_of_create_chain 0362                       ?_init_lcd 0001  
               __size_of_SDCard 01E8                   _sdc_disk_read 19D0                      _auto_mount 0012  
             __end_of__npowers_ 6057                         __Hparam 0000                         __Lparam 0000  
                     ?_validate 001D               __end_of_disk_read 4C7A                   put_cluster@bc 00BA  
                     ?_response 0001                   put_cluster@fs 00BE                      f_close@res 00B6  
                       ___awdiv 4D90                 __size_of___lmul 0056                         ___lldiv 4E14  
               __size_of___wmul 0026            __size_of_move_window 022A                      check_fs@fs 00A5  
                       ___lwdiv 5230                         ___lwmod 542E                 __size_of_f_open 0734  
               __size_of_f_sync 02FA            __end_of_dummy_clocks 5230                         _f_close 55D2  
                       __pcinit 4F10                 __size_of_memcmp 009C                 __size_of_memcpy 0040  
               __size_of_memset 002C                      _init_ports 56DA                         __ramtop 0800  
                       _f_mount 52D4                         __ptext0 55A0                         __ptext1 4E96  
                       __ptext2 4AAA                         __ptext3 56F2                         __ptext4 56DA  
                       __ptext5 578C                         __ptext6 571C                         __ptext7 56C0  
                       __ptext8 572E                         __ptext9 5764                         _command 5364  
                     _T0CONbits 000FD5             auto_mount@totalsect 00C8         i2write_timer_zero@timer 0003  
   endereco_cursor_lcd@endereco 0018                         _dpowers 5FE1                    __size_of_isr 488A  
       ??_escreve_caractere_lcd 0018                      ??_check_fs 0092                    _create_chain 30B6  
                       _proceed 5772         __size_of_init_interrupt 0012          __end_of_inicializa_SPI 468A  
                __pintcode_body 478E            end_of_initialization 4F74                      f_open@mode 0196  
                    f_open@path 0194                  ??_remove_chain 00E3                         isr@cont 0015  
                       memcmp@n 001A                         memcpy@d 001C                         memcpy@n 001A  
                       memcpy@s 001E         __size_of_init_oscilador 0008                         itoa@buf 0026  
                       memset@c 0018                         itoa@val 0028                         memset@n 001A  
                 SDCard@FResult 02DE                         memset@p 001C            sdc_disk_initialize@i 006E  
                 __Lmediumconst 5FE0                      ??_init_lcd 0019                         int_func 478E  
                    _rmc_buffer 0250               ?_recebe_dado_uart 0001                 disk_status@pdrv 001B  
               disk_status@stat 001C                  ?_sdc_disk_read 006E          write_timer_zero@timer0 0016  
               ___lldiv@divisor 001A                      f_mount@drv 0018              ??_recebe_dado_uart 0001  
              sdc_disk_read@ptr 0079                 ___lldiv@counter 0022                ReadSPI_@temp_var 0030  
                    ??_validate 0021           __size_of_make_dirfile 0186                      ??_response 0031  
                     _RCSTAbits 000FAB        __end_of_write_timer_zero 5740                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                         utoa@buf 001D                         utoa@val 001F  
                 _check_fs$1188 00A0                       _PORTDbits 000F83                 ??_init_hardware 001A  
                    _trace_path 24D0              _posicao_cursor_lcd 4FF4            __size_of_put_cluster 057E  
                   ?_disk_ioctl 0016               ?_reserve_direntry 00F9                       _TRISBbits 000F93  
                   ?_disk_write 007F                       _TRISCbits 000F94                       _TRISDbits 000F95  
              next_dir_entry@dj 00DF                 _escreve_cmd_lcd 4C7A              ??_reserve_direntry 00FD  
           ?_posicao_cursor_lcd 0019                 ?_inicializa_SPI 0030                 disk_write@count 0085  
              WriteSPI_@TempVar 0032                     ?_clust2sect 0022                      command@CMD 006C  
                    command@CRC 006B                      command@arg 0067                    _make_dirfile 43C0  
                 ??_get_fattime 0060     __size_of_inicializa_tarefas 003A                  __end_of_SDCard 4070  
                 ??_get_cluster 00A9                   ??_disk_status 0018                     ?_auto_mount 00A7  
             _make_dirfile$1074 0024                 command@argument 006D            ??_posicao_cursor_lcd 001A  
                __end_of___lmul 51DE                ??_next_dir_entry 00E1                  __end_of___wmul 567E  
                __end_of_f_open 1398                   ??_escalonador 01DC                     ?_init_ports 0001  
                __end_of_f_sync 3A50                  __end_of_memcmp 4BE4                  __end_of_memcpy 54B0  
                __end_of_memset 5630             start_initialization 4F10                   WriteSPI_@dado 0033  
                   __end_of_isr 4892       __size_of_mensagem_inicial 007A              reserve_direntry@dj 00F9  
            reserve_direntry@fs 0185                 _sdc_disk_status 5708                 ??_sdc_disk_read 0075  
                      ??_SDCard 01DA               auto_mount@fatsize 00D3              i2_write_timer_zero 5740  
               _disk_initialize 53AA               __size_of_ReadSPI_ 003C           reserve_direntry@clust 0181  
       __size_of_sdc_disk_write 01BA                _data_uart_recebe 0042                     _dado_buffer 0172  
         __size_of_dummy_clocks 0052                   auto_mount@fmt 00D7             __size_of_disk_ioctl 0028  
           ?i2_write_timer_zero 0001             __size_of_disk_write 008A                        ??___lmul 001E  
                      ??___wmul 001A             __end_of_get_fattime 43C0                        ??_f_open 0197  
                      ??_f_sync 00A9                     __pdataBANK1 01DE             __end_of_get_cluster 19D0  
              __CFG_LPT1OSC$OFF 000000                        ??_memcmp 001C             __end_of_disk_status 54EE  
                      ??_memcpy 001C             __size_of_clust2sect 00C2                        ??_memset 001C  
        sdc_disk_read@start_add 007C            __end_of_remove_chain 478E         sdc_disk_initialize@buff 0075  
       __end_of_escreve_cmd_lcd 4D06         sdc_disk_initialize@stat 0072                     ?_trace_path 00EE  
  __size_of_endereco_cursor_lcd 006A                     __pbssBIGRAM 0330                 _trace_path$1121 0185  
               _trace_path$1123 0187                     __pbssCOMRAM 0035                   __pcstackBANK0 0060  
                 __pcstackBANK1 0179                   __pcstackBANK2 02DE                  _init_interrupt 571C  
           __size_of_auto_mount 0C52            ??i2_write_timer_zero 0003             __end_of_escalonador 4A06  
                     _WriteSPI_ 50CE     __end_of_sdc_disk_initialize 30B6                     _data_buffer 0163  
             __size_of_check_fs 042A                    check_fs@sect 008E                    check_fs@temp 009E  
                  _dummy_clocks 51DE                  _init_oscilador 578C                 _get_cluster$941 00D3  
           __size_of_init_ports 0018           _escreve_frase_ram_lcd 5282                       _data_buff 0037  
   __end_of_escreve_inteiro_lcd 5566               __size_of_init_lcd 009E                ___lwdiv@dividend 0016  
             delay@contador_int 0017               delay@contador_ext 0016                       _gga_index 003B  
                     __pintcode 0008                   __pmediumconst 5FE0                        ?___awdiv 0016  
                      ?___lldiv 0016               __size_of_validate 0048                       __npowers_ 6030  
                      ?___lwdiv 0016                        ?___lwmod 0016               __size_of_response 000C  
                      ?_f_close 00B4                       _disk_read 4BE4              _sinaliza_int_timer 0041  
                      ?_f_mount 0016                        ?_command 0067                      SDCard@init 0162  
        __end_of_init_interrupt 572E             sdc_disk_read@p_buff 006E             sdc_disk_read@length 0080  
           sdc_disk_read@offset 007A             sdc_disk_read@sector 0070         __end_of_sdc_disk_status 571C  
__size_of_escreve_caractere_lcd 0072                      ?_WriteSPI_ 0001   __end_of_escreve_caractere_lcd 4FF4  
                      ?_proceed 0001                       f_close@fp 00B4                ___lwdiv@quotient 001B  
                __size_of_delay 0024         __end_of_disk_initialize 53EC          __end_of_init_oscilador 5794  
           make_dirfile@dirname 0020                      validate@id 001F                      validate@fs 001D  
                     _p_tarefas 0152                make_dirfile@path 001E                  ___wmul@product 001A  
                      _LATBbits 000F8A                        _LATCbits 000F8B                       f_open@dir 01D8  
                     f_open@res 01C5                        _PIE1bits 000F9D                     _get_fattime 422A  
           __size_of_trace_path 0442                       _rmc_index 0039                     _get_cluster 1398  
                   _disk_status 54B0                   ??_move_window 0092                       f_mount@fs 0016  
                      _PIR1bits 000F9E                   move_window@fs 00A3               ?_write_timer_zero 0016  
               remove_chain@nxt 00E7                       f_sync@dir 00B2                       f_sync@res 00AD  
                     f_sync@tim 00AE        posicao_cursor_lcd@coluna 0019                      ?_disk_read 0083  
            ??_write_timer_zero 0018      posicao_cursor_lcd@endereco 001B       __size_of_recebe_dado_uart 0012  
                   _escalonador 4954                      _ADCON0bits 000FC2                      _ADCON1bits 000FC1  
                    _ADCON2bits 000FC0               ___wmul@multiplier 0016                ?_escreve_cmd_lcd 0001  
   escreve_frase_ram_lcd@buffer 0019                ??_inicializa_SPI 0032                 ?_init_interrupt 0001  
                  ??_disk_ioctl 0019                    ??_disk_write 0034                _mensagem_inicial 4E96  
               ?_init_oscilador 0001                    ??_clust2sect 0026               ___lmul@multiplier 0016  
                     copy_data0 4F24                        _ReadSPI_ 54EE          ?_escreve_frase_ram_lcd 0019  
              auto_mount@chk_wp 00A9               move_window@sector 008E                  _sdc_disk_write 4070  
     __size_of_reserve_direntry 033E        escreve_inteiro_lcd@F3962 01F4                    ??_auto_mount 00AA  
                      __Hrparam 0000                        __Lrparam 0000              __end_of_disk_ioctl 5658  
         __size_of_remove_chain 0104                  put_cluster@val 00A9                get_cluster@clust 00A5  
            __end_of_disk_write 4D90                __size_of___awdiv 0084                __size_of___lldiv 0082  
                 ??_put_cluster 00AD                __size_of___lwdiv 0052                __size_of___lwmod 0042  
                  ??_init_ports 0016             __end_of_move_window 3C7A              __end_of_clust2sect 4954  
      escreve_inteiro_lcd@valor 002E                __size_of_f_close 0032        escreve_inteiro_lcd@texto 0060  
              __size_of_f_mount 0048               disk_status@result 0019                __size_of_command 0046  
         __end_of_init_hardware 5708                        _check_fs 2912                        _gga_code 0159  
               ___lwdiv@divisor 0018                     ??_WriteSPI_ 0030                ?_sdc_disk_status 0001  
               ___lwdiv@counter 001A                        _fileName 01DE              __end_of_auto_mount 0C64  
                      __ptext10 5566                        __ptext11 4546                        __ptext20 4892  
                      __ptext12 4C7A                        __ptext21 30B6                        __ptext13 4954  
                      __ptext30 2D3C                        __ptext22 468A                        __ptext14 3E88  
                      __ptext31 2912                        __ptext23 1F52                        __ptext15 0C64  
                      __ptext40 5708                        __ptext32 4B48                        __ptext24 1398  
                      __ptext16 24D0                        __ptext41 512E                        __ptext33 5188  
                      __ptext25 5658                        __ptext17 43C0                        __ptext50 5772  
                      __ptext42 3A50                        __ptext34 4E14                        __ptext26 5470  
                      __ptext18 3418                        __ptext51 51DE                        __ptext43 4D06  
                      __ptext35 52D4                        __ptext27 0012                        __ptext19 3C7A  
                      __ptext60 5230                        __ptext52 5364                        __ptext44 4070  
                      __ptext36 55D2                        __ptext28 5604                        __ptext61 5282  
                      __ptext53 50CE                        __ptext45 4D90                        __ptext37 3756  
                      __ptext29 53AA                        __ptext62 4F82                        __ptext54 4FF4  
                      __ptext46 4BE4                        __ptext38 531C                        __ptext63 567E  
                      __ptext55 5064                        __ptext47 19D0                        __ptext39 54B0  
                      __ptext64 5630                        __ptext56 552A                        __ptext48 5780  
                      __ptext65 422A                        __ptext57 53EC                        __ptext49 54EE  
                      __ptext58 4A06                        __ptext67 5740                        __ptext59 542E  
                      __ptext68 5752                        __ptext69 0000                        _fileSize 0146  
                      __powers_ 6009                __size_of_proceed 000E                ?_disk_initialize 0001  
                _timeout_tarefa 015E                    _rmc_pointers 013A              sdc_disk_read@count 0074  
    __end_of_inicializa_tarefas 55A0        i2write_timer_zero@timer0 0001          __end_of_sdc_disk_write 422A  
                      _init_lcd 4AAA                   __size_of_main 0032                    _remove_chain 468A  
                 __size_of_itoa 0042                   __size_of_utoa 00A4                   __size_of_sync 005A  
           _endereco_cursor_lcd 5064              __end_of_init_ports 56F2               _comma_counter_gga 0047  
                 dummy_clocks@i 006A                        f_open@dj 01C6                   dummy_clocks@n 0069  
                      f_open@fn 01B1                        f_open@fp 0192                        f_open@dw 01C1  
                      f_open@rs 01BD               _comma_counter_rmc 0046                        _rmc_code 0156  
                      _validate 531C                    move_window@n 009E                        _response 5780  
                      f_sync@fp 00A7     __size_of_posicao_cursor_lcd 0070                        int$flags 004A  
       posicao_cursor_lcd@linha 001A         inicializa_SPI@smp_phase 0031                     ??_disk_read 0034  
         __CFG_CPUDIV$OSC1_PLL2 000000                    ??_trace_path 0179            ?_endereco_cursor_lcd 0001  
            put_cluster@fatsect 00B6                      _INTCONbits 000FF2                        memcmp@s1 0016  
                      memcmp@s2 0018         inicializa_SPI@sync_mode 0034                move_window@wsect 009F  
                      memcpy@d1 0016                        memcpy@s1 0018             __end_of_put_cluster 24D0  
                      itoa@base 002A                        memset@p1 0016               _config_timer_dois 5764  
                  _tempo_backup 014E               _config_timer_zero 56C0          inicializa_SPI@bus_mode 0030  
                      intlevel2 0000              ?_config_timer_dois 0001        mensagem_inicial@msg_dois 0071  
            ?_config_timer_zero 0001                    _tempo_tarefa 014A                 ?_sdc_disk_write 006E  
              ___lwmod@dividend 0016                ___lldiv@dividend 0016               sdc_disk_read@buff 0082  
         __end_of_sdc_disk_read 1F52             sdc_disk_status@pdrv 0017             sdc_disk_status@stat 0016  
           ??_config_timer_dois 0016                      _OSCCONbits 000FD3              __end_of_trace_path 2912  
           ??_config_timer_zero 001A                     _move_window 3A50            sdc_disk_write@count1 007A  
          sdc_disk_write@p_buff 006E                _recebe_dado_uart 5752                        utoa@base 0021  
          sdc_disk_write@sector 0070           ??_endereco_cursor_lcd 0018                    response@buff 0031  
              ___lldiv@quotient 001E                 ___lwmod@divisor 0018                 ___lwmod@counter 001A  
             remove_chain@clust 00DF       __end_of_config_timer_dois 5772                   ?_create_chain 00DF  
           sdc_disk_write@i_405 007C       __end_of_config_timer_zero 56DA     __size_ofi2_write_timer_zero 0012  
                   _SSPCON1bits 000FC6         __size_of_next_dir_entry 020E          escreve_cmd_lcd@comando 0018  
           sdc_disk_write@count 0074              sdc_disk_write@buff 007E    __size_of_sdc_disk_initialize 037A  
                  ?_get_fattime 0016                _reserve_direntry 3418               sdc_disk_write@res 007D  
                  ?_get_cluster 00A5                    ?_disk_status 0001   __end_ofmensagem_inicial@F4096 6079  
 __end_ofmensagem_inicial@F4098 6068  
