

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Feb 05 17:18:34 2022

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92  0000                     
    93                           ; Version 1.41
    94                           ; Generated 25/01/2017 GMT
    95                           ; 
    96                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    97                           ; All rights reserved.
    98                           ; 
    99                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   100                           ; 
   101                           ; Redistribution and use in source and binary forms, with or without modification, are
   102                           ; permitted provided that the following conditions are met:
   103                           ; 
   104                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   105                           ;        conditions and the following disclaimer.
   106                           ; 
   107                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   108                           ;        of conditions and the following disclaimer in the documentation and/or other
   109                           ;        materials provided with the distribution.
   110                           ; 
   111                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   112                           ;        software without specific prior written permission.
   113                           ; 
   114                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   115                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   116                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   117                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   118                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   119                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   120                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   121                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   122                           ; 
   123                           ; 
   124                           ; Code-generator required, PIC18F4550 Definitions
   125                           ; 
   126                           ; SFR Addresses
   127  0000                     
   128                           	psect	idataBANK0
   129  0035E2                     __pidataBANK0:
   130                           	opt stack 0
   131                           
   132                           ;initializer for escreve_inteiro_uart@F3952
   133  0035E2  30                 	db	48
   134  0035E3  30                 	db	48
   135  0035E4  30                 	db	48
   136  0035E5  30                 	db	48
   137  0035E6  30                 	db	48
   138  0035E7  30                 	db	48
   139  0035E8  00                 	db	0
   140                           
   141                           ;initializer for escreve_inteiro_lcd@F3962
   142  0035E9  30                 	db	48
   143  0035EA  30                 	db	48
   144  0035EB  30                 	db	48
   145  0035EC  30                 	db	48
   146  0035ED  30                 	db	48
   147  0035EE  30                 	db	48
   148  0035EF  00                 	db	0
   149                           
   150                           	psect	idataBANK1
   151  003608                     __pidataBANK1:
   152                           	opt stack 0
   153                           
   154                           ;initializer for _fileName
   155  003608  63                 	db	99
   156  003609  68                 	db	104
   157  00360A  65                 	db	101
   158  00360B  63                 	db	99
   159  00360C  6B                 	db	107
   160  00360D  2E                 	db	46
   161  00360E  74                 	db	116
   162  00360F  78                 	db	120
   163  003610  74                 	db	116
   164  003611  00                 	db	0
   165                           
   166                           	psect	mediumconst
   167  00602A                     __pmediumconst:
   168                           	opt stack 0
   169  00602A  00                 	db	0
   170  00602B                     create_name@cvt:
   171                           	opt stack 0
   172  00602B  80                 	db	128
   173  00602C  9A                 	db	154
   174  00602D  90                 	db	144
   175  00602E  41                 	db	65
   176  00602F  8E                 	db	142
   177  006030  41                 	db	65
   178  006031  8F                 	db	143
   179  006032  80                 	db	128
   180  006033  45                 	db	69
   181  006034  45                 	db	69
   182  006035  45                 	db	69
   183  006036  49                 	db	73
   184  006037  49                 	db	73
   185  006038  49                 	db	73
   186  006039  8E                 	db	142
   187  00603A  8F                 	db	143
   188  00603B  90                 	db	144
   189  00603C  92                 	db	146
   190  00603D  92                 	db	146
   191  00603E  4F                 	db	79
   192  00603F  99                 	db	153
   193  006040  4F                 	db	79
   194  006041  55                 	db	85
   195  006042  55                 	db	85
   196  006043  59                 	db	89
   197  006044  99                 	db	153
   198  006045  9A                 	db	154
   199  006046  9B                 	db	155
   200  006047  9C                 	db	156
   201  006048  9D                 	db	157
   202  006049  9E                 	db	158
   203  00604A  9F                 	db	159
   204  00604B  41                 	db	65
   205  00604C  49                 	db	73
   206  00604D  4F                 	db	79
   207  00604E  55                 	db	85
   208  00604F  A5                 	db	165
   209  006050  A5                 	db	165
   210  006051  A6                 	db	166
   211  006052  A7                 	db	167
   212  006053  A8                 	db	168
   213  006054  A9                 	db	169
   214  006055  AA                 	db	170
   215  006056  AB                 	db	171
   216  006057  AC                 	db	172
   217  006058  21                 	db	33
   218  006059  AE                 	db	174
   219  00605A  AF                 	db	175
   220  00605B  B0                 	db	176
   221  00605C  B1                 	db	177
   222  00605D  B2                 	db	178
   223  00605E  B3                 	db	179
   224  00605F  B4                 	db	180
   225  006060  B5                 	db	181
   226  006061  B6                 	db	182
   227  006062  B7                 	db	183
   228  006063  B8                 	db	184
   229  006064  B9                 	db	185
   230  006065  BA                 	db	186
   231  006066  BB                 	db	187
   232  006067  BC                 	db	188
   233  006068  BD                 	db	189
   234  006069  BE                 	db	190
   235  00606A  BF                 	db	191
   236  00606B  C0                 	db	192
   237  00606C  C1                 	db	193
   238  00606D  C2                 	db	194
   239  00606E  C3                 	db	195
   240  00606F  C4                 	db	196
   241  006070  C5                 	db	197
   242  006071  C6                 	db	198
   243  006072  C7                 	db	199
   244  006073  C8                 	db	200
   245  006074  C9                 	db	201
   246  006075  CA                 	db	202
   247  006076  CB                 	db	203
   248  006077  CC                 	db	204
   249  006078  CD                 	db	205
   250  006079  CE                 	db	206
   251  00607A  CF                 	db	207
   252  00607B  D0                 	db	208
   253  00607C  D1                 	db	209
   254  00607D  D2                 	db	210
   255  00607E  D3                 	db	211
   256  00607F  D4                 	db	212
   257  006080  D5                 	db	213
   258  006081  D6                 	db	214
   259  006082  D7                 	db	215
   260  006083  D8                 	db	216
   261  006084  D9                 	db	217
   262  006085  DA                 	db	218
   263  006086  DB                 	db	219
   264  006087  DC                 	db	220
   265  006088  DD                 	db	221
   266  006089  DE                 	db	222
   267  00608A  DF                 	db	223
   268  00608B  E0                 	db	224
   269  00608C  E1                 	db	225
   270  00608D  E2                 	db	226
   271  00608E  E3                 	db	227
   272  00608F  E4                 	db	228
   273  006090  E5                 	db	229
   274  006091  E6                 	db	230
   275  006092  E7                 	db	231
   276  006093  E8                 	db	232
   277  006094  E9                 	db	233
   278  006095  EA                 	db	234
   279  006096  EB                 	db	235
   280  006097  EC                 	db	236
   281  006098  ED                 	db	237
   282  006099  EE                 	db	238
   283  00609A  EF                 	db	239
   284  00609B  F0                 	db	240
   285  00609C  F1                 	db	241
   286  00609D  F2                 	db	242
   287  00609E  F3                 	db	243
   288  00609F  F4                 	db	244
   289  0060A0  F5                 	db	245
   290  0060A1  F6                 	db	246
   291  0060A2  F7                 	db	247
   292  0060A3  F8                 	db	248
   293  0060A4  F9                 	db	249
   294  0060A5  FA                 	db	250
   295  0060A6  FB                 	db	251
   296  0060A7  FC                 	db	252
   297  0060A8  FD                 	db	253
   298  0060A9  FE                 	db	254
   299  0060AA  FF                 	db	255
   300  0060AB                     __end_ofcreate_name@cvt:
   301                           	opt stack 0
   302  0060AB                     _dpowers:
   303                           	opt stack 0
   304  0060AB  0001               	dw	1
   305  0060AD  0000               	dw	0
   306  0060AF  000A               	dw	10
   307  0060B1  0000               	dw	0
   308  0060B3  0064               	dw	100
   309  0060B5  0000               	dw	0
   310  0060B7  03E8               	dw	1000
   311  0060B9  0000               	dw	0
   312  0060BB  2710               	dw	10000
   313  0060BD  0000               	dw	0
   314  0060BF  86A0               	dw	34464
   315  0060C1  0001               	dw	1
   316  0060C3  4240               	dw	16960
   317  0060C5  000F               	dw	15
   318  0060C7  9680               	dw	38528
   319  0060C9  0098               	dw	152
   320  0060CB  E100               	dw	57600
   321  0060CD  05F5               	dw	1525
   322  0060CF  CA00               	dw	51712
   323  0060D1  3B9A               	dw	15258
   324  0060D3                     __end_of_dpowers:
   325                           	opt stack 0
   326  0060D3                     __powers_:
   327                           	opt stack 0
   328  0060D3  00                 	db	0
   329  0060D4  80                 	db	128
   330  0060D5  3F                 	db	63
   331  0060D6  00                 	db	0
   332  0060D7  20                 	db	32
   333  0060D8  41                 	db	65
   334  0060D9  00                 	db	0
   335  0060DA  C8                 	db	200
   336  0060DB  42                 	db	66
   337  0060DC  00                 	db	0
   338  0060DD  7A                 	db	122
   339  0060DE  44                 	db	68
   340  0060DF  40                 	db	64
   341  0060E0  1C                 	db	28
   342  0060E1  46                 	db	70
   343  0060E2  50                 	db	80
   344  0060E3  C3                 	db	195
   345  0060E4  47                 	db	71
   346  0060E5  24                 	db	36
   347  0060E6  74                 	db	116
   348  0060E7  49                 	db	73
   349  0060E8  97                 	db	151
   350  0060E9  18                 	db	24
   351  0060EA  4B                 	db	75
   352  0060EB  BC                 	db	188
   353  0060EC  BE                 	db	190
   354  0060ED  4C                 	db	76
   355  0060EE  6B                 	db	107
   356  0060EF  6E                 	db	110
   357  0060F0  4E                 	db	78
   358  0060F1  03                 	db	3
   359  0060F2  15                 	db	21
   360  0060F3  50                 	db	80
   361  0060F4  79                 	db	121
   362  0060F5  AD                 	db	173
   363  0060F6  60                 	db	96
   364  0060F7  F3                 	db	243
   365  0060F8  49                 	db	73
   366  0060F9  71                 	db	113
   367  0060FA                     __end_of__powers_:
   368                           	opt stack 0
   369  0060FA                     __npowers_:
   370                           	opt stack 0
   371  0060FA  00                 	db	0
   372  0060FB  80                 	db	128
   373  0060FC  3F                 	db	63
   374  0060FD  CD                 	db	205
   375  0060FE  CC                 	db	204
   376  0060FF  3D                 	db	61
   377  006100  D7                 	db	215
   378  006101  23                 	db	35
   379  006102  3C                 	db	60
   380  006103  12                 	db	18
   381  006104  83                 	db	131
   382  006105  3A                 	db	58
   383  006106  B7                 	db	183
   384  006107  D1                 	db	209
   385  006108  38                 	db	56
   386  006109  C6                 	db	198
   387  00610A  27                 	db	39
   388  00610B  37                 	db	55
   389  00610C  38                 	db	56
   390  00610D  86                 	db	134
   391  00610E  35                 	db	53
   392  00610F  C0                 	db	192
   393  006110  D6                 	db	214
   394  006111  33                 	db	51
   395  006112  CC                 	db	204
   396  006113  2B                 	db	43
   397  006114  32                 	db	50
   398  006115  70                 	db	112
   399  006116  89                 	db	137
   400  006117  30                 	db	48
   401  006118  E7                 	db	231
   402  006119  DB                 	db	219
   403  00611A  2E                 	db	46
   404  00611B  E5                 	db	229
   405  00611C  3C                 	db	60
   406  00611D  1E                 	db	30
   407  00611E  42                 	db	66
   408  00611F  A2                 	db	162
   409  006120  0D                 	db	13
   410  006121                     __end_of__npowers_:
   411                           	opt stack 0
   412  006121                     leitura_chave@F3838:
   413                           	opt stack 0
   414  006121  20                 	db	32
   415  006122  49                 	db	73
   416  006123  67                 	db	103
   417  006124  6E                 	db	110
   418  006125  20                 	db	32
   419  006126  4F                 	db	79
   420  006127  6E                 	db	110
   421  006128  00                 	db	0
   422  006129  00                 	db	0
   423  00612A  00                 	db	0
   424  00612B  00                 	db	0
   425  00612C  00                 	db	0
   426  00612D  00                 	db	0
   427  00612E  00                 	db	0
   428  00612F  00                 	db	0
   429  006130  00                 	db	0
   430  006131  00                 	db	0
   431  006132                     __end_ofleitura_chave@F3838:
   432                           	opt stack 0
   433  006132                     leitura_chave@F3836:
   434                           	opt stack 0
   435  006132  20                 	db	32
   436  006133  49                 	db	73
   437  006134  67                 	db	103
   438  006135  6E                 	db	110
   439  006136  20                 	db	32
   440  006137  43                 	db	67
   441  006138  72                 	db	114
   442  006139  61                 	db	97
   443  00613A  6E                 	db	110
   444  00613B  6B                 	db	107
   445  00613C  00                 	db	0
   446  00613D  00                 	db	0
   447  00613E  00                 	db	0
   448  00613F  00                 	db	0
   449  006140  00                 	db	0
   450  006141  00                 	db	0
   451  006142  00                 	db	0
   452  006143                     __end_ofleitura_chave@F3836:
   453                           	opt stack 0
   454  006143                     leitura_chave@F3834:
   455                           	opt stack 0
   456  006143  20                 	db	32
   457  006144  49                 	db	73
   458  006145  67                 	db	103
   459  006146  6E                 	db	110
   460  006147  20                 	db	32
   461  006148  4F                 	db	79
   462  006149  66                 	db	102
   463  00614A  66                 	db	102
   464  00614B  00                 	db	0
   465  00614C  00                 	db	0
   466  00614D  00                 	db	0
   467  00614E  00                 	db	0
   468  00614F  00                 	db	0
   469  006150  00                 	db	0
   470  006151  00                 	db	0
   471  006152  00                 	db	0
   472  006153  00                 	db	0
   473  006154                     __end_ofleitura_chave@F3834:
   474                           	opt stack 0
   475  006154                     mensagem_inicial@F4020:
   476                           	opt stack 0
   477  006154  20                 	db	32
   478  006155  31                 	db	49
   479  006156  38                 	db	56
   480  006157  2F                 	db	47
   481  006158  30                 	db	48
   482  006159  31                 	db	49
   483  00615A  2F                 	db	47
   484  00615B  32                 	db	50
   485  00615C  30                 	db	48
   486  00615D  32                 	db	50
   487  00615E  32                 	db	50
   488  00615F  20                 	db	32
   489  006160  20                 	db	32
   490  006161  20                 	db	32
   491  006162  00                 	db	0
   492  006163  00                 	db	0
   493  006164  00                 	db	0
   494  006165                     __end_ofmensagem_inicial@F4020:
   495                           	opt stack 0
   496  006165                     mensagem_inicial@F4018:
   497                           	opt stack 0
   498  006165  53                 	db	83
   499  006166  44                 	db	68
   500  006167  43                 	db	67
   501  006168  61                 	db	97
   502  006169  72                 	db	114
   503  00616A  64                 	db	100
   504  00616B  20                 	db	32
   505  00616C  49                 	db	73
   506  00616D  6E                 	db	110
   507  00616E  69                 	db	105
   508  00616F  74                 	db	116
   509  006170  20                 	db	32
   510  006171  20                 	db	32
   511  006172  20                 	db	32
   512  006173  00                 	db	0
   513  006174  00                 	db	0
   514  006175  00                 	db	0
   515  006176                     __end_ofmensagem_inicial@F4018:
   516                           	opt stack 0
   517  0000                     _RCSTA	set	4011
   518  0000                     _TXSTA	set	4012
   519  0000                     _RCREG	set	4014
   520  0000                     _RCSTAbits	set	4011
   521  0000                     _TXREG	set	4013
   522  0000                     _SPBRG	set	4015
   523  0000                     _PIR2bits	set	4001
   524  0000                     _EECON2	set	4007
   525  0000                     _EECON1bits	set	4006
   526  0000                     _EEDATA	set	4008
   527  0000                     _EEADR	set	4009
   528  0000                     _PR2	set	4043
   529  0000                     _TMR2	set	4044
   530  0000                     _T2CON	set	4042
   531  0000                     _OSCCONbits	set	4051
   532  0000                     _TRISE	set	3990
   533  0000                     _TRISC	set	3988
   534  0000                     _TRISA	set	3986
   535  0000                     _TRISD	set	3989
   536  0000                     _LATB	set	3978
   537  0000                     _TRISB	set	3987
   538  0000                     _T0CONbits	set	4053
   539  0000                     _TMR0L	set	4054
   540  0000                     _TMR0H	set	4055
   541  0000                     _PIE1	set	3997
   542  0000                     _INTCON3	set	4080
   543  0000                     _INTCON2	set	4081
   544  0000                     _INTCON	set	4082
   545  0000                     _SPPCFG	set	3939
   546  0000                     _SPPCON	set	3941
   547  0000                     _T0CON	set	4053
   548  0000                     _PORTDbits	set	3971
   549  0000                     _TRISDbits	set	3989
   550  0000                     _PORTEbits	set	3972
   551  0000                     _PORTCbits	set	3970
   552  0000                     _ADRESL	set	4035
   553  0000                     _ADRESH	set	4036
   554  0000                     _ADCON0	set	4034
   555  0000                     _ADCON0bits	set	4034
   556  0000                     _ADCON2bits	set	4032
   557  0000                     _ADCON1bits	set	4033
   558  0000                     _ADCON1	set	4033
   559  0000                     _SSPBUF	set	4041
   560  0000                     _TRISCbits	set	3988
   561  0000                     _SSPSTATbits	set	4039
   562  0000                     _TRISBbits	set	3987
   563  0000                     _SSPCON1	set	4038
   564  0000                     _SSPSTAT	set	4039
   565  0000                     _SSPCON1bits	set	4038
   566  0000                     _PORTAbits	set	3968
   567  0000                     _TRISAbits	set	3986
   568  0000                     _PCL	set	4089
   569  0000                     _PCLATH	set	4090
   570  0000                     _INTCONbits	set	4082
   571  0000                     _LATBbits	set	3978
   572  0000                     _PIR1bits	set	3998
   573  0000                     _PIE1bits	set	3997
   574  0000                     _RCIF	set	31989
   575  0000                     _TRMT	set	32097
   576  0000                     _TXEN	set	32101
   577  0000                     _CREN	set	32092
   578  0000                     _SPEN	set	32095
   579  0000                     _SYNC	set	32100
   580  0000                     _BRGH	set	32098
   581  0000                     _TMR2IF	set	31985
   582  0000                     _INT0IE	set	32660
   583  0000                     _INT0IF	set	32657
   584  0000                     _T0IF	set	32658
   585  0000                     _TMR0IF	set	32658
   586  006176  53                 	db	83	;'S'
   587  006177  50                 	db	80	;'P'
   588  006178  49                 	db	73	;'I'
   589  006179  20                 	db	32
   590  00617A  63                 	db	99	;'c'
   591  00617B  6F                 	db	111	;'o'
   592  00617C  6E                 	db	110	;'n'
   593  00617D  66                 	db	102	;'f'
   594  00617E  69                 	db	105	;'i'
   595  00617F  67                 	db	103	;'g'
   596  006180  75                 	db	117	;'u'
   597  006181  72                 	db	114	;'r'
   598  006182  61                 	db	97	;'a'
   599  006183  64                 	db	100	;'d'
   600  006184  61                 	db	97	;'a'
   601  006185  21                 	db	33
   602  006186  00                 	db	0
   603  006187                     STR_12:
   604  006187  73                 	db	115	;'s'
   605  006188  79                 	db	121	;'y'
   606  006189  73                 	db	115	;'s'
   607  00618A  74                 	db	116	;'t'
   608  00618B  20                 	db	32
   609  00618C  69                 	db	105	;'i'
   610  00618D  6E                 	db	110	;'n'
   611  00618E  69                 	db	105	;'i'
   612  00618F  63                 	db	99	;'c'
   613  006190  69                 	db	105	;'i'
   614  006191  61                 	db	97	;'a'
   615  006192  6C                 	db	108	;'l'
   616  006193  69                 	db	105	;'i'
   617  006194  7A                 	db	122	;'z'
   618  006195  65                 	db	101	;'e'
   619  006196  64                 	db	100	;'d'
   620  006197  00                 	db	0
   621  006198  61                 	db	97	;'a'
   622  006199  62                 	db	98	;'b'
   623  00619A  72                 	db	114	;'r'
   624  00619B  69                 	db	105	;'i'
   625  00619C  72                 	db	114	;'r'
   626  00619D  20                 	db	32
   627  00619E  6F                 	db	111	;'o'
   628  00619F  20                 	db	32
   629  0061A0  61                 	db	97	;'a'
   630  0061A1  72                 	db	114	;'r'
   631  0061A2  71                 	db	113	;'q'
   632  0061A3  75                 	db	117	;'u'
   633  0061A4  69                 	db	105	;'i'
   634  0061A5  76                 	db	118	;'v'
   635  0061A6  6F                 	db	111	;'o'
   636  0061A7  00                 	db	0
   637  0061A8  6D                 	db	109	;'m'
   638  0061A9  6F                 	db	111	;'o'
   639  0061AA  75                 	db	117	;'u'
   640  0061AB  6E                 	db	110	;'n'
   641  0061AC  74                 	db	116	;'t'
   642  0061AD  20                 	db	32
   643  0061AE  66                 	db	102	;'f'
   644  0061AF  69                 	db	105	;'i'
   645  0061B0  6C                 	db	108	;'l'
   646  0061B1  65                 	db	101	;'e'
   647  0061B2  20                 	db	32
   648  0061B3  73                 	db	115	;'s'
   649  0061B4  79                 	db	121	;'y'
   650  0061B5  73                 	db	115	;'s'
   651  0061B6  00                 	db	0
   652  0061B7  42                 	db	66	;'B'
   653  0061B8  79                 	db	121	;'y'
   654  0061B9  74                 	db	116	;'t'
   655  0061BA  65                 	db	101	;'e'
   656  0061BB  73                 	db	115	;'s'
   657  0061BC  20                 	db	32
   658  0061BD  63                 	db	99	;'c'
   659  0061BE  72                 	db	114	;'r'
   660  0061BF  69                 	db	105	;'i'
   661  0061C0  61                 	db	97	;'a'
   662  0061C1  64                 	db	100	;'d'
   663  0061C2  6F                 	db	111	;'o'
   664  0061C3  21                 	db	33
   665  0061C4  00                 	db	0
   666  0061C5  43                 	db	67	;'C'
   667  0061C6  61                 	db	97	;'a'
   668  0061C7  72                 	db	114	;'r'
   669  0061C8  74                 	db	116	;'t'
   670  0061C9  E3                 	db	-29
   671  0061CA  6F                 	db	111	;'o'
   672  0061CB  20                 	db	32
   673  0061CC  41                 	db	65	;'A'
   674  0061CD  63                 	db	99	;'c'
   675  0061CE  65                 	db	101	;'e'
   676  0061CF  69                 	db	105	;'i'
   677  0061D0  74                 	db	116	;'t'
   678  0061D1  6F                 	db	111	;'o'
   679  0061D2  00                 	db	0
   680  0061D3                     STR_18:
   681  0061D3  45                 	db	69	;'E'
   682  0061D4  72                 	db	114	;'r'
   683  0061D5  72                 	db	114	;'r'
   684  0061D6  6F                 	db	111	;'o'
   685  0061D7  20                 	db	32
   686  0061D8  74                 	db	116	;'t'
   687  0061D9  65                 	db	101	;'e'
   688  0061DA  6E                 	db	110	;'n'
   689  0061DB  74                 	db	116	;'t'
   690  0061DC  61                 	db	97	;'a'
   691  0061DD  6E                 	db	110	;'n'
   692  0061DE  64                 	db	100	;'d'
   693  0061DF  6F                 	db	111	;'o'
   694  0061E0  00                 	db	0
   695  0061E1  41                 	db	65	;'A'
   696  0061E2  74                 	db	116	;'t'
   697  0061E3  74                 	db	116	;'t'
   698  0061E4  65                 	db	101	;'e'
   699  0061E5  6D                 	db	109	;'m'
   700  0061E6  70                 	db	112	;'p'
   701  0061E7  74                 	db	116	;'t'
   702  0061E8  69                 	db	105	;'i'
   703  0061E9  6E                 	db	110	;'n'
   704  0061EA  67                 	db	103	;'g'
   705  0061EB  20                 	db	32
   706  0061EC  74                 	db	116	;'t'
   707  0061ED  6F                 	db	111	;'o'
   708  0061EE  00                 	db	0
   709  0061EF  6C                 	db	108	;'l'
   710  0061F0  65                 	db	101	;'e'
   711  0061F1  72                 	db	114	;'r'
   712  0061F2  20                 	db	32
   713  0061F3  6F                 	db	111	;'o'
   714  0061F4  20                 	db	32
   715  0061F5  61                 	db	97	;'a'
   716  0061F6  72                 	db	114	;'r'
   717  0061F7  71                 	db	113	;'q'
   718  0061F8  75                 	db	117	;'u'
   719  0061F9  69                 	db	105	;'i'
   720  0061FA  76                 	db	118	;'v'
   721  0061FB  6F                 	db	111	;'o'
   722  0061FC  00                 	db	0
   723  0061FD  6C                 	db	108	;'l'
   724  0061FE  65                 	db	101	;'e'
   725  0061FF  6E                 	db	110	;'n'
   726  006200  64                 	db	100	;'d'
   727  006201  6F                 	db	111	;'o'
   728  006202  20                 	db	32
   729  006203  61                 	db	97	;'a'
   730  006204  72                 	db	114	;'r'
   731  006205  71                 	db	113	;'q'
   732  006206  75                 	db	117	;'u'
   733  006207  69                 	db	105	;'i'
   734  006208  76                 	db	118	;'v'
   735  006209  6F                 	db	111	;'o'
   736  00620A  00                 	db	0
   737  00620B  42                 	db	66	;'B'
   738  00620C  6C                 	db	108	;'l'
   739  00620D  6F                 	db	111	;'o'
   740  00620E  63                 	db	99	;'c'
   741  00620F  6F                 	db	111	;'o'
   742  006210  20                 	db	32
   743  006211  64                 	db	100	;'d'
   744  006212  65                 	db	101	;'e'
   745  006213  20                 	db	32
   746  006214  35                 	db	53	;'5'
   747  006215  31                 	db	49	;'1'
   748  006216  32                 	db	50	;'2'
   749  006217  00                 	db	0
   750  006218  53                 	db	83	;'S'
   751  006219  44                 	db	68	;'D'
   752  00621A  43                 	db	67	;'C'
   753  00621B  61                 	db	97	;'a'
   754  00621C  72                 	db	114	;'r'
   755  00621D  64                 	db	100	;'d'
   756  00621E  20                 	db	32
   757  00621F  65                 	db	101	;'e'
   758  006220  72                 	db	114	;'r'
   759  006221  72                 	db	114	;'r'
   760  006222  6F                 	db	111	;'o'
   761  006223  72                 	db	114	;'r'
   762  006224  00                 	db	0
   763  006225  63                 	db	99	;'c'
   764  006226  68                 	db	104	;'h'
   765  006227  65                 	db	101	;'e'
   766  006228  63                 	db	99	;'c'
   767  006229  6B                 	db	107	;'k'
   768  00622A  2E                 	db	46
   769  00622B  74                 	db	116	;'t'
   770  00622C  78                 	db	120	;'x'
   771  00622D  74                 	db	116	;'t'
   772  00622E  00                 	db	0
   773  00622F  45                 	db	69	;'E'
   774  006230  72                 	db	114	;'r'
   775  006231  72                 	db	114	;'r'
   776  006232  6F                 	db	111	;'o'
   777  006233  72                 	db	114	;'r'
   778  006234  21                 	db	33
   779  006235  21                 	db	33
   780  006236  21                 	db	33
   781  006237  00                 	db	0
   782  006238                     STR_9:
   783  006238  25                 	db	37
   784  006239  64                 	db	100	;'d'
   785  00623A  3A                 	db	58	;':'
   786  00623B  25                 	db	37
   787  00623C  64                 	db	100	;'d'
   788  00623D  3A                 	db	58	;':'
   789  00623E  25                 	db	37
   790  00623F  64                 	db	100	;'d'
   791  006240  00                 	db	0
   792  006241  49                 	db	73	;'I'
   793  006242  6E                 	db	110	;'n'
   794  006243  69                 	db	105	;'i'
   795  006244  74                 	db	116	;'t'
   796  006245  20                 	db	32
   797  006246  4F                 	db	79	;'O'
   798  006247  4B                 	db	75	;'K'
   799  006248  00                 	db	0
   800  006249  53                 	db	83	;'S'
   801  00624A  44                 	db	68	;'D'
   802  00624B  5F                 	db	95	;'_'
   803  00624C  43                 	db	67	;'C'
   804  00624D  61                 	db	97	;'a'
   805  00624E  72                 	db	114	;'r'
   806  00624F  64                 	db	100	;'d'
   807  006250  00                 	db	0
   808  006251                     STR_3:
   809  006251  48                 	db	72	;'H'
   810  006252  6F                 	db	111	;'o'
   811  006253  72                 	db	114	;'r'
   812  006254  61                 	db	97	;'a'
   813  006255  3A                 	db	58	;':'
   814  006256  00                 	db	0
   815  006257                     STR_4:
   816  006257  44                 	db	68	;'D'
   817  006258  61                 	db	97	;'a'
   818  006259  74                 	db	116	;'t'
   819  00625A  61                 	db	97	;'a'
   820  00625B  3A                 	db	58	;':'
   821  00625C  00                 	db	0
   822  00625D                     STR_5:
   823  00625D  25                 	db	37
   824  00625E  2E                 	db	46
   825  00625F  30                 	db	48	;'0'
   826  006260  37                 	db	55	;'7'
   827  006261  66                 	db	102	;'f'
   828  006262  00                 	db	0
   829  006263                     STR_2:
   830  006263  4C                 	db	76	;'L'
   831  006264  4F                 	db	79	;'O'
   832  006265  4E                 	db	78	;'N'
   833  006266  47                 	db	71	;'G'
   834  006267  3A                 	db	58	;':'
   835  006268  00                 	db	0
   836  006269                     STR_8:
   837  006269  4C                 	db	76	;'L'
   838  00626A  6F                 	db	111	;'o'
   839  00626B  6E                 	db	110	;'n'
   840  00626C  3A                 	db	58	;':'
   841  00626D  00                 	db	0
   842  00626E                     STR_6:
   843  00626E  4C                 	db	76	;'L'
   844  00626F  61                 	db	97	;'a'
   845  006270  74                 	db	116	;'t'
   846  006271  3A                 	db	58	;':'
   847  006272  00                 	db	0
   848  006273                     STR_1:
   849  006273  4C                 	db	76	;'L'
   850  006274  41                 	db	65	;'A'
   851  006275  54                 	db	84	;'T'
   852  006276  3A                 	db	58	;':'
   853  006277  00                 	db	0
   854  006278  0D                 	db	13
   855  006279  0A                 	db	10
   856  00627A  00                 	db	0
   857  00627B  2E                 	db	46
   858  00627C  2E                 	db	46
   859  00627D  00                 	db	0
   860  0000                     
   861                           ; #config settings
   862  00627E  00                 	db	0	; dummy byte at the end
   863  0000                     
   864                           	psect	cinit
   865  002ACC                     __pcinit:
   866                           	opt stack 0
   867  002ACC                     start_initialization:
   868                           	opt stack 0
   869  002ACC                     __initialization:
   870                           	opt stack 0
   871                           
   872                           ; Initialize objects allocated to BANK1 (10 bytes)
   873                           ; load TBLPTR registers with __pidataBANK1
   874  002ACC  0E08               	movlw	low __pidataBANK1
   875  002ACE  6EF6               	movwf	tblptrl,c
   876  002AD0  0E36               	movlw	high __pidataBANK1
   877  002AD2  6EF7               	movwf	tblptrh,c
   878  002AD4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   879  002AD6  6EF8               	movwf	tblptru,c
   880  002AD8  EE01  F0F6         	lfsr	0,__pdataBANK1
   881  002ADC  EE10 F00A          	lfsr	1,10
   882  002AE0                     copy_data0:
   883  002AE0  0009               	tblrd		*+
   884  002AE2  CFF5 FFEE          	movff	tablat,postinc0
   885  002AE6  50E5               	movf	postdec1,w,c
   886  002AE8  50E1               	movf	fsr1l,w,c
   887  002AEA  E1FA               	bnz	copy_data0
   888                           
   889                           ; Initialize objects allocated to BANK0 (14 bytes)
   890                           ; load TBLPTR registers with __pidataBANK0
   891  002AEC  0EE2               	movlw	low __pidataBANK0
   892  002AEE  6EF6               	movwf	tblptrl,c
   893  002AF0  0E35               	movlw	high __pidataBANK0
   894  002AF2  6EF7               	movwf	tblptrh,c
   895  002AF4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   896  002AF6  6EF8               	movwf	tblptru,c
   897  002AF8  EE00  F0E5         	lfsr	0,__pdataBANK0
   898  002AFC  EE10 F00E          	lfsr	1,14
   899  002B00                     copy_data1:
   900  002B00  0009               	tblrd		*+
   901  002B02  CFF5 FFEE          	movff	tablat,postinc0
   902  002B06  50E5               	movf	postdec1,w,c
   903  002B08  50E1               	movf	fsr1l,w,c
   904  002B0A  E1FA               	bnz	copy_data1
   905                           
   906                           ; Clear objects allocated to BIGRAM (512 bytes)
   907  002B0C  EE02  F076         	lfsr	0,__pbssBIGRAM
   908  002B10  EE12 F000          	lfsr	1,512
   909  002B14                     clear_0:
   910  002B14  6AEE               	clrf	postinc0,c
   911  002B16  50E5               	movf	postdec1,w,c
   912  002B18  50E1               	movf	fsr1l,w,c
   913  002B1A  E1FC               	bnz	clear_0
   914  002B1C  50E2               	movf	fsr1h,w,c
   915  002B1E  E1FA               	bnz	clear_0
   916                           
   917                           ; Clear objects allocated to BANK2 (118 bytes)
   918  002B20  EE02  F000         	lfsr	0,__pbssBANK2
   919  002B24  0E76               	movlw	118
   920  002B26                     clear_1:
   921  002B26  6AEE               	clrf	postinc0,c
   922  002B28  06E8               	decf	wreg,f,c
   923  002B2A  E1FD               	bnz	clear_1
   924                           
   925                           ; Clear objects allocated to BANK1 (217 bytes)
   926  002B2C  EE01  F000         	lfsr	0,__pbssBANK1
   927  002B30  0ED9               	movlw	217
   928  002B32                     clear_2:
   929  002B32  6AEE               	clrf	postinc0,c
   930  002B34  06E8               	decf	wreg,f,c
   931  002B36  E1FD               	bnz	clear_2
   932                           
   933                           ; Clear objects allocated to BANK0 (41 bytes)
   934  002B38  EE00  F0BC         	lfsr	0,__pbssBANK0
   935  002B3C  0E29               	movlw	41
   936  002B3E                     clear_3:
   937  002B3E  6AEE               	clrf	postinc0,c
   938  002B40  06E8               	decf	wreg,f,c
   939  002B42  E1FD               	bnz	clear_3
   940                           
   941                           ; Clear objects allocated to COMRAM (21 bytes)
   942  002B44  EE00  F035         	lfsr	0,__pbssCOMRAM
   943  002B48  0E15               	movlw	21
   944  002B4A                     clear_4:
   945  002B4A  6AEE               	clrf	postinc0,c
   946  002B4C  06E8               	decf	wreg,f,c
   947  002B4E  E1FD               	bnz	clear_4
   948  002B50                     end_of_initialization:
   949                           	opt stack 0
   950  002B50                     __end_of__initialization:
   951                           	opt stack 0
   952  002B50  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   953  002B52  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   954  002B54  0E00               	movlw	low (__Lmediumconst shr (0+16))
   955  002B56  6EF8               	movwf	tblptru,c
   956  002B58  0100               	movlb	0
   957  002B5A  EFD9  F019         	goto	_main	;jump to C main() function
   958                           tblptru	equ	0xFF8
   959                           tblptrh	equ	0xFF7
   960                           tblptrl	equ	0xFF6
   961                           tablat	equ	0xFF5
   962                           postinc0	equ	0xFEE
   963                           wreg	equ	0xFE8
   964                           postdec1	equ	0xFE5
   965                           fsr1h	equ	0xFE2
   966                           fsr1l	equ	0xFE1
   967                           
   968                           	psect	bssCOMRAM
   969  000035                     __pbssCOMRAM:
   970                           	opt stack 0
   971  000035                     _gga_code:
   972                           	opt stack 0
   973  000035                     	ds	3
   974  000038                     _FatFs:
   975                           	opt stack 0
   976  000038                     	ds	2
   977  00003A                     _rmc_index:
   978                           	opt stack 0
   979  00003A                     	ds	2
   980  00003C                     _gga_index:
   981                           	opt stack 0
   982  00003C                     	ds	2
   983  00003E                     timer_dois@flag:
   984                           	opt stack 0
   985  00003E                     	ds	1
   986  00003F                     _estado:
   987                           	opt stack 0
   988  00003F                     	ds	1
   989  000040                     _dado:
   990                           	opt stack 0
   991  000040                     	ds	1
   992  000041                     _s:
   993                           	opt stack 0
   994  000041                     	ds	1
   995  000042                     _Result:
   996                           	opt stack 0
   997  000042                     	ds	1
   998  000043                     _is_it_rmc_string:
   999                           	opt stack 0
  1000  000043                     	ds	1
  1001  000044                     _is_it_gga_string:
  1002                           	opt stack 0
  1003  000044                     	ds	1
  1004  000045                     _comma_counter_rmc:
  1005                           	opt stack 0
  1006  000045                     	ds	1
  1007  000046                     _comma_counter_gga:
  1008                           	opt stack 0
  1009  000046                     	ds	1
  1010  000047                     _tarefa_em_execucao:
  1011                           	opt stack 0
  1012  000047                     	ds	1
  1013  000048                     _sinaliza_int_timer:
  1014                           	opt stack 0
  1015  000048                     	ds	1
  1016  000049                     _data_uart_recebe:
  1017                           	opt stack 0
  1018  000049                     	ds	1
  1019                           tblptru	equ	0xFF8
  1020                           tblptrh	equ	0xFF7
  1021                           tblptrl	equ	0xFF6
  1022                           tablat	equ	0xFF5
  1023                           postinc0	equ	0xFEE
  1024                           wreg	equ	0xFE8
  1025                           postdec1	equ	0xFE5
  1026                           fsr1h	equ	0xFE2
  1027                           fsr1l	equ	0xFE1
  1028                           
  1029                           	psect	bssBANK0
  1030  0000BC                     __pbssBANK0:
  1031                           	opt stack 0
  1032  0000BC                     _info_chaves:
  1033                           	opt stack 0
  1034  0000BC                     	ds	7
  1035  0000C3                     _fileSize:
  1036                           	opt stack 0
  1037  0000C3                     	ds	4
  1038  0000C7                     _tempo_tarefa:
  1039                           	opt stack 0
  1040  0000C7                     	ds	4
  1041  0000CB                     _tempo_backup:
  1042                           	opt stack 0
  1043  0000CB                     	ds	4
  1044  0000CF                     _p_tarefas:
  1045                           	opt stack 0
  1046  0000CF                     	ds	4
  1047  0000D3                     _rmc_code:
  1048                           	opt stack 0
  1049  0000D3                     	ds	3
  1050  0000D6                     _flag:
  1051                           	opt stack 0
  1052  0000D6                     	ds	2
  1053  0000D8                     _rd:
  1054                           	opt stack 0
  1055  0000D8                     	ds	2
  1056  0000DA                     _timeout_tarefa:
  1057                           	opt stack 0
  1058  0000DA                     	ds	2
  1059  0000DC                     _E_W:
  1060                           	opt stack 0
  1061  0000DC                     	ds	1
  1062  0000DD                     _n_s:
  1063                           	opt stack 0
  1064  0000DD                     	ds	1
  1065  0000DE                     _dado_buffer:
  1066                           	opt stack 0
  1067  0000DE                     	ds	7
  1068                           tblptru	equ	0xFF8
  1069                           tblptrh	equ	0xFF7
  1070                           tblptrl	equ	0xFF6
  1071                           tablat	equ	0xFF5
  1072                           postinc0	equ	0xFEE
  1073                           wreg	equ	0xFE8
  1074                           postdec1	equ	0xFE5
  1075                           fsr1h	equ	0xFE2
  1076                           fsr1l	equ	0xFE1
  1077                           
  1078                           	psect	dataBANK0
  1079  0000E5                     __pdataBANK0:
  1080                           	opt stack 0
  1081  0000E5                     escreve_inteiro_uart@F3952:
  1082                           	opt stack 0
  1083  0000E5                     	ds	7
  1084  0000EC                     escreve_inteiro_lcd@F3962:
  1085                           	opt stack 0
  1086  0000EC                     	ds	7
  1087                           tblptru	equ	0xFF8
  1088                           tblptrh	equ	0xFF7
  1089                           tblptrl	equ	0xFF6
  1090                           tablat	equ	0xFF5
  1091                           postinc0	equ	0xFEE
  1092                           wreg	equ	0xFE8
  1093                           postdec1	equ	0xFE5
  1094                           fsr1h	equ	0xFE2
  1095                           fsr1l	equ	0xFE1
  1096                           
  1097                           	psect	bssBANK1
  1098  000100                     __pbssBANK1:
  1099                           	opt stack 0
  1100  000100                     _gga_buffer:
  1101                           	opt stack 0
  1102  000100                     	ds	80
  1103  000150                     _valor_leitura_adc:
  1104                           	opt stack 0
  1105  000150                     	ds	38
  1106  000176                     _txt:
  1107                           	opt stack 0
  1108  000176                     	ds	20
  1109  00018A                     _gga_pointers:
  1110                           	opt stack 0
  1111  00018A                     	ds	20
  1112  00019E                     _rmc_pointers:
  1113                           	opt stack 0
  1114  00019E                     	ds	12
  1115  0001AA                     _data_buffer_32:
  1116                           	opt stack 0
  1117  0001AA                     	ds	32
  1118  0001CA                     _data_buffer:
  1119                           	opt stack 0
  1120  0001CA                     	ds	15
  1121                           tblptru	equ	0xFF8
  1122                           tblptrh	equ	0xFF7
  1123                           tblptrl	equ	0xFF6
  1124                           tablat	equ	0xFF5
  1125                           postinc0	equ	0xFEE
  1126                           wreg	equ	0xFE8
  1127                           postdec1	equ	0xFE5
  1128                           fsr1h	equ	0xFE2
  1129                           fsr1l	equ	0xFE1
  1130                           
  1131                           	psect	dataBANK1
  1132  0001F6                     __pdataBANK1:
  1133                           	opt stack 0
  1134  0001F6                     _fileName:
  1135                           	opt stack 0
  1136  0001F6                     	ds	10
  1137                           tblptru	equ	0xFF8
  1138                           tblptrh	equ	0xFF7
  1139                           tblptrl	equ	0xFF6
  1140                           tablat	equ	0xFF5
  1141                           postinc0	equ	0xFEE
  1142                           wreg	equ	0xFE8
  1143                           postdec1	equ	0xFE5
  1144                           fsr1h	equ	0xFE2
  1145                           fsr1l	equ	0xFE1
  1146                           
  1147                           	psect	bssBANK2
  1148  000200                     __pbssBANK2:
  1149                           	opt stack 0
  1150  000200                     _rmc_buffer:
  1151                           	opt stack 0
  1152  000200                     	ds	70
  1153  000246                     _folder:
  1154                           	opt stack 0
  1155  000246                     	ds	48
  1156                           tblptru	equ	0xFF8
  1157                           tblptrh	equ	0xFF7
  1158                           tblptrl	equ	0xFF6
  1159                           tablat	equ	0xFF5
  1160                           postinc0	equ	0xFEE
  1161                           wreg	equ	0xFE8
  1162                           postdec1	equ	0xFE5
  1163                           fsr1h	equ	0xFE2
  1164                           fsr1l	equ	0xFE1
  1165                           
  1166                           	psect	bssBIGRAM
  1167  000276                     __pbssBIGRAM:
  1168                           	opt stack 0
  1169  000276                     disk_readp@arr:
  1170                           	opt stack 0
  1171  000276                     	ds	512
  1172                           tblptru	equ	0xFF8
  1173                           tblptrh	equ	0xFF7
  1174                           tblptrl	equ	0xFF6
  1175                           tablat	equ	0xFF5
  1176                           postinc0	equ	0xFEE
  1177                           wreg	equ	0xFE8
  1178                           postdec1	equ	0xFE5
  1179                           fsr1h	equ	0xFE2
  1180                           fsr1l	equ	0xFE1
  1181                           
  1182                           	psect	cstackBANK1
  1183  0001D9                     __pcstackBANK1:
  1184                           	opt stack 0
  1185  0001D9                     gps@date:
  1186                           	opt stack 0
  1187                           
  1188                           ; 4 bytes @ 0x0
  1189  0001D9                     	ds	4
  1190  0001DD                     gps@gps_buffer:
  1191                           	opt stack 0
  1192                           
  1193                           ; 15 bytes @ 0x4
  1194  0001DD                     	ds	15
  1195  0001EC                     gps@time:
  1196                           	opt stack 0
  1197                           
  1198                           ; 4 bytes @ 0x13
  1199  0001EC                     	ds	4
  1200  0001F0                     gps@latitude:
  1201                           	opt stack 0
  1202                           
  1203                           ; 3 bytes @ 0x17
  1204  0001F0                     	ds	3
  1205  0001F3                     gps@longitude:
  1206                           	opt stack 0
  1207                           
  1208                           ; 3 bytes @ 0x1A
  1209  0001F3                     	ds	3
  1210                           tblptru	equ	0xFF8
  1211                           tblptrh	equ	0xFF7
  1212                           tblptrl	equ	0xFF6
  1213                           tablat	equ	0xFF5
  1214                           postinc0	equ	0xFEE
  1215                           wreg	equ	0xFE8
  1216                           postdec1	equ	0xFE5
  1217                           fsr1h	equ	0xFE2
  1218                           fsr1l	equ	0xFE1
  1219                           
  1220                           	psect	cstackBANK0
  1221  000060                     __pcstackBANK0:
  1222                           	opt stack 0
  1223  000060                     ___ftmul@exp:
  1224                           	opt stack 0
  1225  000060                     get_gpstime@time_buffer:
  1226                           	opt stack 0
  1227  000060                     mensagem_inicial@msg_linha_um:
  1228                           	opt stack 0
  1229                           
  1230                           ; 17 bytes @ 0x0
  1231  000060                     	ds	1
  1232  000061                     ___ftmul@f3_as_product:
  1233                           	opt stack 0
  1234                           
  1235                           ; 3 bytes @ 0x1
  1236  000061                     	ds	3
  1237  000064                     ___ftmul@cntr:
  1238                           	opt stack 0
  1239                           
  1240                           ; 1 bytes @ 0x4
  1241  000064                     	ds	1
  1242  000065                     ___ftmul@sign:
  1243                           	opt stack 0
  1244                           
  1245                           ; 1 bytes @ 0x5
  1246  000065                     	ds	1
  1247  000066                     ?_fround:
  1248                           	opt stack 0
  1249  000066                     ?_scale:
  1250                           	opt stack 0
  1251  000066                     ?___ftneg:
  1252                           	opt stack 0
  1253  000066                     ___ftneg@f1:
  1254                           	opt stack 0
  1255                           
  1256                           ; 3 bytes @ 0x6
  1257  000066                     	ds	3
  1258  000069                     ?_strtod:
  1259                           	opt stack 0
  1260  000069                     strtod@s:
  1261                           	opt stack 0
  1262  000069                     _fround$3373:
  1263                           	opt stack 0
  1264  000069                     _scale$3374:
  1265                           	opt stack 0
  1266                           
  1267                           ; 3 bytes @ 0x9
  1268  000069                     	ds	2
  1269  00006B                     strtod@res:
  1270                           	opt stack 0
  1271                           
  1272                           ; 2 bytes @ 0xB
  1273  00006B                     	ds	1
  1274  00006C                     scale@scl:
  1275                           	opt stack 0
  1276  00006C                     _fround$3372:
  1277                           	opt stack 0
  1278                           
  1279                           ; 3 bytes @ 0xC
  1280  00006C                     	ds	1
  1281  00006D                     ?___fttol:
  1282                           	opt stack 0
  1283  00006D                     strtod@eexp:
  1284                           	opt stack 0
  1285  00006D                     ___fttol@f1:
  1286                           	opt stack 0
  1287                           
  1288                           ; 3 bytes @ 0xD
  1289  00006D                     	ds	1
  1290  00006E                     strtod@flags:
  1291                           	opt stack 0
  1292                           
  1293                           ; 1 bytes @ 0xE
  1294  00006E                     	ds	1
  1295  00006F                     fround@prec:
  1296                           	opt stack 0
  1297  00006F                     strtod@expon:
  1298                           	opt stack 0
  1299  00006F                     get_gpstime@_time:
  1300                           	opt stack 0
  1301                           
  1302                           ; 4 bytes @ 0xF
  1303  00006F                     	ds	1
  1304  000070                     ?___ftadd:
  1305                           	opt stack 0
  1306  000070                     ___ftadd@f1:
  1307                           	opt stack 0
  1308  000070                     strtod@_u:
  1309                           	opt stack 0
  1310                           
  1311                           ; 4 bytes @ 0x10
  1312  000070                     	ds	1
  1313  000071                     ??___fttol:
  1314  000071                     mensagem_inicial@msg_dois:
  1315                           	opt stack 0
  1316                           
  1317                           ; 17 bytes @ 0x11
  1318  000071                     	ds	2
  1319  000073                     get_gpstime@index:
  1320                           	opt stack 0
  1321  000073                     ___ftadd@f2:
  1322                           	opt stack 0
  1323                           
  1324                           ; 3 bytes @ 0x13
  1325  000073                     	ds	1
  1326  000074                     ?_atof:
  1327                           	opt stack 0
  1328  000074                     atof@s:
  1329                           	opt stack 0
  1330                           
  1331                           ; 2 bytes @ 0x14
  1332  000074                     	ds	2
  1333  000076                     ??___ftadd:
  1334  000076                     ___fttol@sign1:
  1335                           	opt stack 0
  1336                           
  1337                           ; 1 bytes @ 0x16
  1338  000076                     	ds	1
  1339  000077                     ?_get_latitude:
  1340                           	opt stack 0
  1341  000077                     ?_get_longitude:
  1342                           	opt stack 0
  1343  000077                     ___fttol@lval:
  1344                           	opt stack 0
  1345                           
  1346                           ; 4 bytes @ 0x17
  1347  000077                     	ds	2
  1348  000079                     ___ftadd@sign:
  1349                           	opt stack 0
  1350                           
  1351                           ; 1 bytes @ 0x19
  1352  000079                     	ds	1
  1353  00007A                     ___ftadd@exp2:
  1354                           	opt stack 0
  1355  00007A                     get_latitude@lat_buffer:
  1356                           	opt stack 0
  1357  00007A                     get_longitude@long_buffer:
  1358                           	opt stack 0
  1359                           
  1360                           ; 15 bytes @ 0x1A
  1361  00007A                     	ds	1
  1362  00007B                     ___ftadd@exp1:
  1363                           	opt stack 0
  1364  00007B                     ___fttol@exp1:
  1365                           	opt stack 0
  1366                           
  1367                           ; 1 bytes @ 0x1B
  1368  00007B                     	ds	1
  1369  00007C                     ?_convert_to_degrees:
  1370                           	opt stack 0
  1371  00007C                     ?___ftsub:
  1372                           	opt stack 0
  1373  00007C                     convert_to_degrees@nmea_lat_long:
  1374                           	opt stack 0
  1375  00007C                     ___ftsub@f1:
  1376                           	opt stack 0
  1377                           
  1378                           ; 3 bytes @ 0x1C
  1379  00007C                     	ds	3
  1380  00007F                     convert_to_degrees@minutes:
  1381                           	opt stack 0
  1382  00007F                     ___ftsub@f2:
  1383                           	opt stack 0
  1384                           
  1385                           ; 3 bytes @ 0x1F
  1386  00007F                     	ds	3
  1387  000082                     ?_sprintf:
  1388                           	opt stack 0
  1389  000082                     sprintf@sp:
  1390                           	opt stack 0
  1391  000082                     convert_to_degrees@dec_deg:
  1392                           	opt stack 0
  1393                           
  1394                           ; 3 bytes @ 0x22
  1395  000082                     	ds	2
  1396  000084                     sprintf@f:
  1397                           	opt stack 0
  1398                           
  1399                           ; 2 bytes @ 0x24
  1400  000084                     	ds	1
  1401  000085                     convert_to_degrees@degrees:
  1402                           	opt stack 0
  1403                           
  1404                           ; 2 bytes @ 0x25
  1405  000085                     	ds	2
  1406  000087                     convert_to_degrees@decimal:
  1407                           	opt stack 0
  1408                           
  1409                           ; 3 bytes @ 0x27
  1410  000087                     	ds	2
  1411  000089                     get_latitude@_latitude:
  1412                           	opt stack 0
  1413  000089                     get_longitude@_longitude:
  1414                           	opt stack 0
  1415                           
  1416                           ; 3 bytes @ 0x29
  1417  000089                     	ds	3
  1418  00008C                     ??_sprintf:
  1419  00008C                     get_latitude@lat_pointer:
  1420                           	opt stack 0
  1421  00008C                     get_longitude@long_pointer:
  1422                           	opt stack 0
  1423                           
  1424                           ; 1 bytes @ 0x2C
  1425  00008C                     	ds	1
  1426  00008D                     get_latitude@index:
  1427                           	opt stack 0
  1428  00008D                     get_longitude@index:
  1429                           	opt stack 0
  1430                           
  1431                           ; 1 bytes @ 0x2D
  1432  00008D                     	ds	1
  1433  00008E                     get_latitude@lat_index:
  1434                           	opt stack 0
  1435  00008E                     get_longitude@long_index:
  1436                           	opt stack 0
  1437                           
  1438                           ; 1 bytes @ 0x2E
  1439  00008E                     	ds	4
  1440  000092                     _sprintf$3375:
  1441                           	opt stack 0
  1442                           
  1443                           ; 3 bytes @ 0x32
  1444  000092                     	ds	3
  1445  000095                     sprintf@ap:
  1446                           	opt stack 0
  1447                           
  1448                           ; 2 bytes @ 0x35
  1449  000095                     	ds	2
  1450  000097                     sprintf@flag:
  1451                           	opt stack 0
  1452                           
  1453                           ; 2 bytes @ 0x37
  1454  000097                     	ds	2
  1455  000099                     sprintf@exp:
  1456                           	opt stack 0
  1457                           
  1458                           ; 2 bytes @ 0x39
  1459  000099                     	ds	2
  1460  00009B                     sprintf@tmpval:
  1461                           	opt stack 0
  1462                           
  1463                           ; 4 bytes @ 0x3B
  1464  00009B                     	ds	4
  1465  00009F                     sprintf@val:
  1466                           	opt stack 0
  1467                           
  1468                           ; 4 bytes @ 0x3F
  1469  00009F                     	ds	4
  1470  0000A3                     sprintf@prec:
  1471                           	opt stack 0
  1472                           
  1473                           ; 2 bytes @ 0x43
  1474  0000A3                     	ds	2
  1475  0000A5                     sprintf@fval:
  1476                           	opt stack 0
  1477                           
  1478                           ; 3 bytes @ 0x45
  1479  0000A5                     	ds	3
  1480  0000A8                     sprintf@c:
  1481                           	opt stack 0
  1482                           
  1483                           ; 1 bytes @ 0x48
  1484  0000A8                     	ds	1
  1485  0000A9                     convert_time_to_utc@utc_time:
  1486                           	opt stack 0
  1487                           
  1488                           ; 4 bytes @ 0x49
  1489  0000A9                     	ds	4
  1490  0000AD                     _convert_time_to_utc$3371:
  1491                           	opt stack 0
  1492                           
  1493                           ; 4 bytes @ 0x4D
  1494  0000AD                     	ds	4
  1495  0000B1                     convert_time_to_utc@hour:
  1496                           	opt stack 0
  1497                           
  1498                           ; 2 bytes @ 0x51
  1499  0000B1                     	ds	2
  1500  0000B3                     convert_time_to_utc@min:
  1501                           	opt stack 0
  1502                           
  1503                           ; 2 bytes @ 0x53
  1504  0000B3                     	ds	2
  1505  0000B5                     convert_time_to_utc@sec:
  1506                           	opt stack 0
  1507                           
  1508                           ; 2 bytes @ 0x55
  1509  0000B5                     	ds	2
  1510  0000B7                     ??_gps:
  1511                           
  1512                           ; 1 bytes @ 0x57
  1513  0000B7                     	ds	2
  1514  0000B9                     
  1515                           ; 1 bytes @ 0x59
  1516  0000B9                     	ds	2
  1517  0000BB                     escalonador@cont:
  1518                           	opt stack 0
  1519                           
  1520                           ; 1 bytes @ 0x5B
  1521  0000BB                     	ds	1
  1522                           tblptru	equ	0xFF8
  1523                           tblptrh	equ	0xFF7
  1524                           tblptrl	equ	0xFF6
  1525                           tablat	equ	0xFF5
  1526                           postinc0	equ	0xFEE
  1527                           wreg	equ	0xFE8
  1528                           postdec1	equ	0xFE5
  1529                           fsr1h	equ	0xFE2
  1530                           fsr1l	equ	0xFE1
  1531                           
  1532                           	psect	cstackCOMRAM
  1533  000001                     __pcstackCOMRAM:
  1534                           	opt stack 0
  1535  000001                     tratamento_uart@received_char:
  1536                           	opt stack 0
  1537  000001                     i2write_timer_zero@timer0:
  1538                           	opt stack 0
  1539                           
  1540                           ; 2 bytes @ 0x0
  1541  000001                     	ds	2
  1542  000003                     i2write_timer_zero@timer:
  1543                           	opt stack 0
  1544                           
  1545                           ; 2 bytes @ 0x2
  1546  000003                     	ds	2
  1547  000005                     ??_isr:
  1548                           
  1549                           ; 1 bytes @ 0x4
  1550  000005                     	ds	16
  1551  000015                     isr@cont:
  1552                           	opt stack 0
  1553                           
  1554                           ; 1 bytes @ 0x14
  1555  000015                     	ds	1
  1556  000016                     ??_isdigit:
  1557  000016                     ??_isspace:
  1558  000016                     ?_strlen:
  1559                           	opt stack 0
  1560  000016                     ?_leitura_adc:
  1561                           	opt stack 0
  1562  000016                     ?___awmod:
  1563                           	opt stack 0
  1564  000016                     ?___ftpack:
  1565                           	opt stack 0
  1566  000016                     ?__tdiv_to_l_:
  1567                           	opt stack 0
  1568  000016                     ?__div_to_l_:
  1569                           	opt stack 0
  1570  000016                     ?___lmul:
  1571                           	opt stack 0
  1572  000016                     ?___aldiv:
  1573                           	opt stack 0
  1574  000016                     ?___llmod:
  1575                           	opt stack 0
  1576  000016                     envia_dados_shrc@contador:
  1577                           	opt stack 0
  1578  000016                     delay@contador_ext:
  1579                           	opt stack 0
  1580  000016                     write_timer_zero@timer0:
  1581                           	opt stack 0
  1582  000016                     ___awmod@dividend:
  1583                           	opt stack 0
  1584  000016                     memset@p1:
  1585                           	opt stack 0
  1586  000016                     strlen@s:
  1587                           	opt stack 0
  1588  000016                     __div_to_l_@f1:
  1589                           	opt stack 0
  1590  000016                     ___ftpack@arg:
  1591                           	opt stack 0
  1592  000016                     __tdiv_to_l_@f1:
  1593                           	opt stack 0
  1594  000016                     ___ftge@ff1:
  1595                           	opt stack 0
  1596  000016                     ___lmul@multiplier:
  1597                           	opt stack 0
  1598  000016                     ___aldiv@dividend:
  1599                           	opt stack 0
  1600  000016                     ___llmod@dividend:
  1601                           	opt stack 0
  1602                           
  1603                           ; 4 bytes @ 0x15
  1604  000016                     	ds	1
  1605  000017                     envia_dados_shrc@data_to_shrc:
  1606                           	opt stack 0
  1607  000017                     delay@contador_int:
  1608                           	opt stack 0
  1609  000017                     _isdigit$2851:
  1610                           	opt stack 0
  1611  000017                     _isspace$2854:
  1612                           	opt stack 0
  1613                           
  1614                           ; 1 bytes @ 0x16
  1615  000017                     	ds	1
  1616  000018                     ??_strlen:
  1617  000018                     ??_leitura_adc:
  1618  000018                     escreve_cmd_lcd@comando:
  1619                           	opt stack 0
  1620  000018                     endereco_cursor_lcd@endereco:
  1621                           	opt stack 0
  1622  000018                     escreve_caractere_lcd@data:
  1623                           	opt stack 0
  1624  000018                     isdigit@c:
  1625                           	opt stack 0
  1626  000018                     isspace@c:
  1627                           	opt stack 0
  1628  000018                     write_timer_zero@timer:
  1629                           	opt stack 0
  1630  000018                     ___awmod@divisor:
  1631                           	opt stack 0
  1632  000018                     memset@c:
  1633                           	opt stack 0
  1634                           
  1635                           ; 2 bytes @ 0x17
  1636  000018                     	ds	1
  1637  000019                     ??_init_lcd:
  1638  000019                     posicao_cursor_lcd@coluna:
  1639                           	opt stack 0
  1640  000019                     ___ftpack@exp:
  1641                           	opt stack 0
  1642  000019                     escreve_frase_ram_lcd@buffer:
  1643                           	opt stack 0
  1644  000019                     __div_to_l_@f2:
  1645                           	opt stack 0
  1646  000019                     __tdiv_to_l_@f2:
  1647                           	opt stack 0
  1648  000019                     ___ftge@ff2:
  1649                           	opt stack 0
  1650                           
  1651                           ; 3 bytes @ 0x18
  1652  000019                     	ds	1
  1653  00001A                     posicao_cursor_lcd@linha:
  1654                           	opt stack 0
  1655  00001A                     ___awmod@counter:
  1656                           	opt stack 0
  1657  00001A                     ___ftpack@sign:
  1658                           	opt stack 0
  1659  00001A                     memset@n:
  1660                           	opt stack 0
  1661  00001A                     strlen@cp:
  1662                           	opt stack 0
  1663  00001A                     ___lmul@multiplicand:
  1664                           	opt stack 0
  1665  00001A                     ___aldiv@divisor:
  1666                           	opt stack 0
  1667  00001A                     ___llmod@divisor:
  1668                           	opt stack 0
  1669                           
  1670                           ; 4 bytes @ 0x19
  1671  00001A                     	ds	1
  1672  00001B                     ??___ftpack:
  1673  00001B                     posicao_cursor_lcd@endereco:
  1674                           	opt stack 0
  1675  00001B                     ___awmod@sign:
  1676                           	opt stack 0
  1677                           
  1678                           ; 1 bytes @ 0x1A
  1679  00001B                     	ds	1
  1680  00001C                     ??_mensagem_inicial:
  1681  00001C                     ??__tdiv_to_l_:
  1682  00001C                     ??___ftge:
  1683  00001C                     ?___awdiv:
  1684                           	opt stack 0
  1685  00001C                     ?_get_dt:
  1686  00001C                     leitura_adc@canal:
  1687                           	opt stack 0
  1688  00001C                     ___awdiv@dividend:
  1689                           	opt stack 0
  1690  00001C                     memset@p:
  1691                           	opt stack 0
  1692  00001C                     __div_to_l_@quot:
  1693                           	opt stack 0
  1694                           
  1695                           ; 4 bytes @ 0x1B
  1696  00001C                     	ds	1
  1697  00001D                     ??_leitura_continua_adc:
  1698                           
  1699                           ; 1 bytes @ 0x1C
  1700  00001D                     	ds	1
  1701  00001E                     ?___ftdiv:
  1702                           	opt stack 0
  1703  00001E                     ?___altoft:
  1704                           	opt stack 0
  1705  00001E                     ?___awtoft:
  1706                           	opt stack 0
  1707  00001E                     ?___lltoft:
  1708                           	opt stack 0
  1709  00001E                     ___aldiv@counter:
  1710                           	opt stack 0
  1711  00001E                     ___llmod@counter:
  1712                           	opt stack 0
  1713  00001E                     ___awdiv@divisor:
  1714                           	opt stack 0
  1715  00001E                     ___awtoft@c:
  1716                           	opt stack 0
  1717  00001E                     ___ftdiv@f1:
  1718                           	opt stack 0
  1719  00001E                     ___lmul@product:
  1720                           	opt stack 0
  1721  00001E                     ___altoft@c:
  1722                           	opt stack 0
  1723  00001E                     ___lltoft@c:
  1724                           	opt stack 0
  1725                           
  1726                           ; 4 bytes @ 0x1D
  1727  00001E                     	ds	1
  1728  00001F                     ?___lldiv:
  1729                           	opt stack 0
  1730  00001F                     ___aldiv@sign:
  1731                           	opt stack 0
  1732  00001F                     __tdiv_to_l_@quot:
  1733                           	opt stack 0
  1734  00001F                     ___lldiv@dividend:
  1735                           	opt stack 0
  1736                           
  1737                           ; 4 bytes @ 0x1E
  1738  00001F                     	ds	1
  1739  000020                     ___awdiv@counter:
  1740                           	opt stack 0
  1741  000020                     __div_to_l_@cntr:
  1742                           	opt stack 0
  1743  000020                     ___aldiv@quotient:
  1744                           	opt stack 0
  1745                           
  1746                           ; 4 bytes @ 0x1F
  1747  000020                     	ds	1
  1748  000021                     get_dt@dt_pointer:
  1749                           	opt stack 0
  1750  000021                     ___awdiv@sign:
  1751                           	opt stack 0
  1752  000021                     ___awtoft@sign:
  1753                           	opt stack 0
  1754  000021                     __div_to_l_@exp1:
  1755                           	opt stack 0
  1756  000021                     ___ftdiv@f2:
  1757                           	opt stack 0
  1758                           
  1759                           ; 3 bytes @ 0x20
  1760  000021                     	ds	1
  1761  000022                     ??___altoft:
  1762  000022                     ??___lltoft:
  1763  000022                     ?_atol:
  1764                           	opt stack 0
  1765  000022                     get_dt@index:
  1766                           	opt stack 0
  1767  000022                     atol@s:
  1768                           	opt stack 0
  1769  000022                     ___awdiv@quotient:
  1770                           	opt stack 0
  1771                           
  1772                           ; 2 bytes @ 0x21
  1773  000022                     	ds	1
  1774  000023                     get_dt@dt_index:
  1775                           	opt stack 0
  1776  000023                     leitura_continua_adc@cont_int:
  1777                           	opt stack 0
  1778  000023                     __tdiv_to_l_@cntr:
  1779                           	opt stack 0
  1780  000023                     ___lldiv@divisor:
  1781                           	opt stack 0
  1782                           
  1783                           ; 4 bytes @ 0x22
  1784  000023                     	ds	1
  1785  000024                     ??___ftdiv:
  1786  000024                     ?___wmul:
  1787                           	opt stack 0
  1788  000024                     leitura_continua_adc@cont:
  1789                           	opt stack 0
  1790  000024                     __tdiv_to_l_@exp1:
  1791                           	opt stack 0
  1792  000024                     ___wmul@multiplier:
  1793                           	opt stack 0
  1794  000024                     configura_baudrate_uart@baudrate:
  1795                           	opt stack 0
  1796                           
  1797                           ; 4 bytes @ 0x23
  1798  000024                     	ds	2
  1799  000026                     ??_atol:
  1800  000026                     ___altoft@exp:
  1801                           	opt stack 0
  1802  000026                     ___lltoft@exp:
  1803                           	opt stack 0
  1804  000026                     ___wmul@multiplicand:
  1805                           	opt stack 0
  1806                           
  1807                           ; 2 bytes @ 0x25
  1808  000026                     	ds	1
  1809  000027                     ___altoft@sign:
  1810                           	opt stack 0
  1811  000027                     ___ftdiv@cntr:
  1812                           	opt stack 0
  1813  000027                     ___lldiv@quotient:
  1814                           	opt stack 0
  1815                           
  1816                           ; 4 bytes @ 0x26
  1817  000027                     	ds	1
  1818  000028                     ??_configura_baudrate_uart:
  1819  000028                     ___wmul@product:
  1820                           	opt stack 0
  1821  000028                     ___ftdiv@f3:
  1822                           	opt stack 0
  1823                           
  1824                           ; 3 bytes @ 0x27
  1825  000028                     	ds	2
  1826  00002A                     ?___ftmul:
  1827                           	opt stack 0
  1828  00002A                     atol@sign:
  1829                           	opt stack 0
  1830  00002A                     ___ftmul@f1:
  1831                           	opt stack 0
  1832                           
  1833                           ; 3 bytes @ 0x29
  1834  00002A                     	ds	1
  1835  00002B                     ___ftdiv@exp:
  1836                           	opt stack 0
  1837  00002B                     ___lldiv@counter:
  1838                           	opt stack 0
  1839  00002B                     atol@a:
  1840                           	opt stack 0
  1841                           
  1842                           ; 4 bytes @ 0x2A
  1843  00002B                     	ds	1
  1844  00002C                     ___ftdiv@sign:
  1845                           	opt stack 0
  1846                           
  1847                           ; 1 bytes @ 0x2B
  1848  00002C                     	ds	1
  1849  00002D                     ___ftmul@f2:
  1850                           	opt stack 0
  1851                           
  1852                           ; 3 bytes @ 0x2C
  1853  00002D                     	ds	2
  1854  00002F                     atol@c:
  1855                           	opt stack 0
  1856                           
  1857                           ; 1 bytes @ 0x2E
  1858  00002F                     	ds	1
  1859  000030                     ??___ftmul:
  1860  000030                     ?_get_gpstime:
  1861                           	opt stack 0
  1862  000030                     configura_baudrate_uart@x:
  1863                           	opt stack 0
  1864                           
  1865                           ; 2 bytes @ 0x2F
  1866  000030                     	ds	2
  1867  000032                     
  1868                           ; 1 bytes @ 0x31
  1869  000032                     	ds	1
  1870  000033                     ??_strtod:
  1871  000033                     
  1872                           ; 1 bytes @ 0x32
  1873  000033                     	ds	1
  1874  000034                     
  1875                           ; 1 bytes @ 0x33
  1876  000034                     	ds	1
  1877  000035                     tblptru	equ	0xFF8
  1878                           tblptrh	equ	0xFF7
  1879                           tblptrl	equ	0xFF6
  1880                           tablat	equ	0xFF5
  1881                           postinc0	equ	0xFEE
  1882                           wreg	equ	0xFE8
  1883                           postdec1	equ	0xFE5
  1884                           fsr1h	equ	0xFE2
  1885                           fsr1l	equ	0xFE1
  1886                           
  1887                           ; 1 bytes @ 0x34
  1888 ;;
  1889 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1890 ;;
  1891 ;; *************** function _main *****************
  1892 ;; Defined at:
  1893 ;;		line 205 in file "main.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1907 ;;      Params:         0       0       0       0       0       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1910 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1911 ;;Total ram usage:        0 bytes
  1912 ;; Hardware stack levels required when called:    9
  1913 ;; This function calls:
  1914 ;;		_controle_shrc
  1915 ;;		_escalonador
  1916 ;;		_inicializa_shrc
  1917 ;;		_inicializa_tarefas
  1918 ;;		_inicializa_uart
  1919 ;;		_init_hardware
  1920 ;;		_init_lcd
  1921 ;;		_leitura_chaves_sistema
  1922 ;;		_leitura_continua_adc
  1923 ;;		_mensagem_inicial
  1924 ;; This function is called by:
  1925 ;;		Startup code after reset
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text0
  1930  0033B2                     __ptext0:
  1931                           	opt stack 0
  1932  0033B2                     _main:
  1933                           	opt stack 22
  1934                           
  1935                           ;main.c: 207: init_hardware();
  1936                           
  1937                           ;incstack = 0
  1938  0033B2  ECB8  F01A         	call	_init_hardware	;wreg free
  1939                           
  1940                           ;main.c: 208: inicializa_uart();
  1941  0033B6  EC7F  F01A         	call	_inicializa_uart	;wreg free
  1942                           
  1943                           ;main.c: 209: init_lcd();
  1944  0033BA  EC17  F015         	call	_init_lcd	;wreg free
  1945                           
  1946                           ;main.c: 210: inicializa_shrc();
  1947  0033BE  EC0D  F01B         	call	_inicializa_shrc	;wreg free
  1948                           
  1949                           ;main.c: 212: mensagem_inicial();
  1950  0033C2  EC20  F014         	call	_mensagem_inicial	;wreg free
  1951                           
  1952                           ;main.c: 213: inicializa_tarefas();
  1953  0033C6  EC21  F01A         	call	_inicializa_tarefas	;wreg free
  1954  0033CA                     l11264:
  1955                           
  1956                           ;main.c: 217: {
  1957                           ;main.c: 219: if ((sinaliza_int_timer == 1) && (2))
  1958  0033CA  0448               	decf	_sinaliza_int_timer,w,c
  1959  0033CC  A4D8               	btfss	status,2,c
  1960  0033CE  D004               	goto	l11270
  1961                           
  1962                           ;main.c: 220: {
  1963                           ;main.c: 221: sinaliza_int_timer = 0;
  1964  0033D0  0E00               	movlw	0
  1965  0033D2  6E48               	movwf	_sinaliza_int_timer,c
  1966                           
  1967                           ;main.c: 222: escalonador();
  1968  0033D4  EC70  F013         	call	_escalonador	;wreg free
  1969  0033D8                     l11270:
  1970                           
  1971                           ;main.c: 223: }
  1972                           ;main.c: 224: leitura_chaves_sistema();
  1973  0033D8  EC5A  F019         	call	_leitura_chaves_sistema	;wreg free
  1974                           
  1975                           ;main.c: 225: controle_shrc();
  1976  0033DC  ECFE  F01A         	call	_controle_shrc	;wreg free
  1977                           
  1978                           ;main.c: 226: leitura_continua_adc();
  1979  0033E0  ECB8  F00E         	call	_leitura_continua_adc	;wreg free
  1980  0033E4  D7F2               	goto	l11264
  1981  0033E6                     __end_of_main:
  1982                           	opt stack 0
  1983                           tblptru	equ	0xFF8
  1984                           tblptrh	equ	0xFF7
  1985                           tblptrl	equ	0xFF6
  1986                           tablat	equ	0xFF5
  1987                           postinc0	equ	0xFEE
  1988                           wreg	equ	0xFE8
  1989                           postdec1	equ	0xFE5
  1990                           fsr1h	equ	0xFE2
  1991                           fsr1l	equ	0xFE1
  1992                           status	equ	0xFD8
  1993                           
  1994 ;; *************** function _mensagem_inicial *****************
  1995 ;; Defined at:
  1996 ;;		line 236 in file "main.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;		None
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  msg_dois       17   17[BANK0 ] const unsigned char [17]
  2001 ;;  msg_linha_um   17    0[BANK0 ] const unsigned char [17]
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2011 ;;      Params:         0       0       0       0       0       0       0       0       0
  2012 ;;      Locals:         0      34       0       0       0       0       0       0       0
  2013 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2014 ;;      Totals:         2      34       0       0       0       0       0       0       0
  2015 ;;Total ram usage:       36 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    5
  2018 ;; This function calls:
  2019 ;;		_escreve_cmd_lcd
  2020 ;;		_escreve_frase_ram_lcd
  2021 ;;		_posicao_cursor_lcd
  2022 ;; This function is called by:
  2023 ;;		_main
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text1
  2028  002840                     __ptext1:
  2029                           	opt stack 0
  2030  002840                     _mensagem_inicial:
  2031                           	opt stack 25
  2032                           
  2033                           ;main.c: 238: const unsigned char msg_linha_um[17] = "SDCard Init   ";
  2034                           
  2035                           ;incstack = 0
  2036  002840  0E65               	movlw	low mensagem_inicial@F4018
  2037  002842  6EF6               	movwf	tblptrl,c
  2038  002844                     	if	1	;There is more than 1 active tblptr byte
  2039  002844  0E61               	movlw	high mensagem_inicial@F4018
  2040  002846  6EF7               	movwf	tblptrh,c
  2041  002848                     	endif
  2042  002848                     	if	0	;There are less than 3 active tblptr bytes
  2043  002848                     	endif
  2044  002848  EE20  F060         	lfsr	2,mensagem_inicial@msg_linha_um
  2045  00284C  0E10               	movlw	16
  2046  00284E                     u13180:
  2047  00284E  0009               	tblrd		*+
  2048  002850  CFF5 FFDE          	movff	tablat,postinc2
  2049  002854  06E8               	decf	wreg,f,c
  2050  002856  E2FB               	bc	u13180
  2051                           
  2052                           ;main.c: 239: const unsigned char msg_dois[17] = " 18/01/2022   ";
  2053  002858  0E54               	movlw	low mensagem_inicial@F4020
  2054  00285A  6EF6               	movwf	tblptrl,c
  2055  00285C                     	if	1	;There is more than 1 active tblptr byte
  2056  00285C  0E61               	movlw	high mensagem_inicial@F4020
  2057  00285E  6EF7               	movwf	tblptrh,c
  2058  002860                     	endif
  2059  002860                     	if	0	;There are less than 3 active tblptr bytes
  2060  002860                     	endif
  2061  002860  EE20  F071         	lfsr	2,mensagem_inicial@msg_dois
  2062  002864  0E10               	movlw	16
  2063  002866                     u13190:
  2064  002866  0009               	tblrd		*+
  2065  002868  CFF5 FFDE          	movff	tablat,postinc2
  2066  00286C  06E8               	decf	wreg,f,c
  2067  00286E  E2FB               	bc	u13190
  2068                           
  2069                           ;main.c: 241: posicao_cursor_lcd(1,0);
  2070  002870  0E00               	movlw	0
  2071  002872  6E19               	movwf	posicao_cursor_lcd@coluna,c
  2072  002874  0E01               	movlw	1
  2073  002876  EC73  F017         	call	_posicao_cursor_lcd
  2074                           
  2075                           ;main.c: 242: escreve_frase_ram_lcd(msg_linha_um);
  2076  00287A  0E60               	movlw	low mensagem_inicial@msg_linha_um
  2077  00287C  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  2078  00287E  0E00               	movlw	high mensagem_inicial@msg_linha_um
  2079  002880  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  2080  002882  EC0B  F019         	call	_escreve_frase_ram_lcd	;wreg free
  2081                           
  2082                           ;main.c: 244: posicao_cursor_lcd(2,0);
  2083  002886  0E00               	movlw	0
  2084  002888  6E19               	movwf	posicao_cursor_lcd@coluna,c
  2085  00288A  0E02               	movlw	2
  2086  00288C  EC73  F017         	call	_posicao_cursor_lcd
  2087                           
  2088                           ;main.c: 245: escreve_frase_ram_lcd(msg_dois);
  2089  002890  0E71               	movlw	low mensagem_inicial@msg_dois
  2090  002892  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  2091  002894  0E00               	movlw	high mensagem_inicial@msg_dois
  2092  002896  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  2093  002898  EC0B  F019         	call	_escreve_frase_ram_lcd	;wreg free
  2094                           
  2095                           ;main.c: 246: _delay((unsigned long)((1000)*(48000000/4000.0)));
  2096  00289C  0E3D               	movlw	61
  2097  00289E  6E1D               	movwf	(??_mensagem_inicial+1)& (0+255),c
  2098  0028A0  0EE1               	movlw	225
  2099  0028A2  6E1C               	movwf	??_mensagem_inicial& (0+255),c
  2100  0028A4  0E40               	movlw	64
  2101  0028A6                     u14567:
  2102  0028A6  2EE8               	decfsz	wreg,f,c
  2103  0028A8  D7FE               	bra	u14567
  2104  0028AA  2E1C               	decfsz	??_mensagem_inicial& (0+255),f,c
  2105  0028AC  D7FC               	bra	u14567
  2106  0028AE  2E1D               	decfsz	(??_mensagem_inicial+1)& (0+255),f,c
  2107  0028B0  D7FA               	bra	u14567
  2108                           
  2109                           ;main.c: 247: escreve_cmd_lcd(0b00000001);
  2110  0028B2  0E01               	movlw	1
  2111  0028B4  ECF7  F015         	call	_escreve_cmd_lcd
  2112                           
  2113                           ;main.c: 250: posicao_cursor_lcd(1,0);
  2114  0028B8  0E00               	movlw	0
  2115  0028BA  6E19               	movwf	posicao_cursor_lcd@coluna,c
  2116  0028BC  0E01               	movlw	1
  2117  0028BE  EC73  F017         	call	_posicao_cursor_lcd
  2118                           
  2119                           ;main.c: 251: escreve_frase_ram_lcd("LAT:");
  2120  0028C2  0E73               	movlw	low STR_1
  2121  0028C4  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  2122  0028C6  0E62               	movlw	high STR_1
  2123  0028C8  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  2124  0028CA  EC0B  F019         	call	_escreve_frase_ram_lcd	;wreg free
  2125                           
  2126                           ;main.c: 253: posicao_cursor_lcd(2,0);
  2127  0028CE  0E00               	movlw	0
  2128  0028D0  6E19               	movwf	posicao_cursor_lcd@coluna,c
  2129  0028D2  0E02               	movlw	2
  2130  0028D4  EC73  F017         	call	_posicao_cursor_lcd
  2131                           
  2132                           ;main.c: 254: escreve_frase_ram_lcd("LONG:");
  2133  0028D8  0E63               	movlw	low STR_2
  2134  0028DA  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  2135  0028DC  0E62               	movlw	high STR_2
  2136  0028DE  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  2137  0028E0  EC0B  F019         	call	_escreve_frase_ram_lcd	;wreg free
  2138  0028E4  0012               	return		;funcret
  2139  0028E6                     __end_of_mensagem_inicial:
  2140                           	opt stack 0
  2141                           tblptru	equ	0xFF8
  2142                           tblptrh	equ	0xFF7
  2143                           tblptrl	equ	0xFF6
  2144                           tablat	equ	0xFF5
  2145                           postinc0	equ	0xFEE
  2146                           wreg	equ	0xFE8
  2147                           postdec1	equ	0xFE5
  2148                           fsr1h	equ	0xFE2
  2149                           fsr1l	equ	0xFE1
  2150                           postinc2	equ	0xFDE
  2151                           status	equ	0xFD8
  2152                           
  2153 ;; *************** function _leitura_continua_adc *****************
  2154 ;; Defined at:
  2155 ;;		line 109 in file "bibliotecas/adc.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;		None
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  cont_int        1   34[COMRAM] unsigned char 
  2160 ;;  cont            1   35[COMRAM] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2170 ;;      Params:         0       0       0       0       0       0       0       0       0
  2171 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2172 ;;      Temps:          6       0       0       0       0       0       0       0       0
  2173 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2174 ;;Total ram usage:        8 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    3
  2177 ;; This function calls:
  2178 ;;		_leitura_adc
  2179 ;; This function is called by:
  2180 ;;		_main
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text2
  2185  001D70                     __ptext2:
  2186                           	opt stack 0
  2187  001D70                     _leitura_continua_adc:
  2188                           	opt stack 27
  2189                           
  2190                           ;adc.c: 111: for(unsigned char cont = 0; cont < 2; cont++)
  2191                           
  2192                           ;incstack = 0
  2193  001D70  0E00               	movlw	0
  2194  001D72  6E24               	movwf	leitura_continua_adc@cont,c
  2195  001D74                     l7956:
  2196  001D74  0E01               	movlw	1
  2197  001D76  6424               	cpfsgt	leitura_continua_adc@cont,c
  2198  001D78  D001               	goto	l7960
  2199  001D7A  0012               	return	
  2200  001D7C                     l7960:
  2201                           
  2202                           ;adc.c: 112: {
  2203                           ;adc.c: 113: for(unsigned char cont_int = 0; cont_int < 8; cont_int++)
  2204  001D7C  0E00               	movlw	0
  2205  001D7E  6E23               	movwf	leitura_continua_adc@cont_int,c
  2206  001D80                     l7962:
  2207  001D80  0E07               	movlw	7
  2208  001D82  6423               	cpfsgt	leitura_continua_adc@cont_int,c
  2209  001D84  D001               	goto	l7966
  2210  001D86  D05D               	goto	l7974
  2211  001D88                     l7966:
  2212                           
  2213                           ;adc.c: 114: {
  2214                           ;adc.c: 115: valor_leitura_adc[cont].leituras[cont_int] = leitura_adc(cont);
  2215  001D88  5024               	movf	leitura_continua_adc@cont,w,c
  2216  001D8A  EC80  F018         	call	_leitura_adc
  2217  001D8E  5023               	movf	leitura_continua_adc@cont_int,w,c
  2218  001D90  0D02               	mullw	2
  2219  001D92  0E01               	movlw	1
  2220  001D94  26F3               	addwf	prodl,f,c
  2221  001D96  0E00               	movlw	0
  2222  001D98  22F4               	addwfc	prodh,f,c
  2223  001D9A  0E50               	movlw	low _valor_leitura_adc
  2224  001D9C  6E1D               	movwf	??_leitura_continua_adc& (0+255),c
  2225  001D9E  0E01               	movlw	high _valor_leitura_adc
  2226  001DA0  6E1E               	movwf	(??_leitura_continua_adc+1)& (0+255),c
  2227  001DA2  50F3               	movf	prodl,w,c
  2228  001DA4  261D               	addwf	??_leitura_continua_adc,f,c
  2229  001DA6  50F4               	movf	prodh,w,c
  2230  001DA8  221E               	addwfc	??_leitura_continua_adc+1,f,c
  2231  001DAA  5024               	movf	leitura_continua_adc@cont,w,c
  2232  001DAC  0D13               	mullw	19
  2233  001DAE  50F3               	movf	prodl,w,c
  2234  001DB0  241D               	addwf	??_leitura_continua_adc,w,c
  2235  001DB2  6ED9               	movwf	fsr2l,c
  2236  001DB4  50F4               	movf	prodh,w,c
  2237  001DB6  201E               	addwfc	??_leitura_continua_adc+1,w,c
  2238  001DB8  6EDA               	movwf	fsr2h,c
  2239  001DBA  C016  FFDE         	movff	?_leitura_adc,postinc2
  2240  001DBE  C017  FFDD         	movff	?_leitura_adc+1,postdec2
  2241                           
  2242                           ;adc.c: 116: valor_leitura_adc[cont].media = valor_leitura_adc[cont].media + valor_leitu
      +                          ra_adc[cont].leituras[cont_int];
  2243  001DC2  5023               	movf	leitura_continua_adc@cont_int,w,c
  2244  001DC4  0D02               	mullw	2
  2245  001DC6  0E01               	movlw	1
  2246  001DC8  26F3               	addwf	prodl,f,c
  2247  001DCA  0E00               	movlw	0
  2248  001DCC  22F4               	addwfc	prodh,f,c
  2249  001DCE  0E50               	movlw	low _valor_leitura_adc
  2250  001DD0  6E1D               	movwf	??_leitura_continua_adc& (0+255),c
  2251  001DD2  0E01               	movlw	high _valor_leitura_adc
  2252  001DD4  6E1E               	movwf	(??_leitura_continua_adc+1)& (0+255),c
  2253  001DD6  50F3               	movf	prodl,w,c
  2254  001DD8  261D               	addwf	??_leitura_continua_adc,f,c
  2255  001DDA  50F4               	movf	prodh,w,c
  2256  001DDC  221E               	addwfc	??_leitura_continua_adc+1,f,c
  2257  001DDE  5024               	movf	leitura_continua_adc@cont,w,c
  2258  001DE0  0D13               	mullw	19
  2259  001DE2  50F3               	movf	prodl,w,c
  2260  001DE4  241D               	addwf	??_leitura_continua_adc,w,c
  2261  001DE6  6ED9               	movwf	fsr2l,c
  2262  001DE8  50F4               	movf	prodh,w,c
  2263  001DEA  201E               	addwfc	??_leitura_continua_adc+1,w,c
  2264  001DEC  6EDA               	movwf	fsr2h,c
  2265  001DEE  CFDE F01F          	movff	postinc2,??_leitura_continua_adc+2
  2266  001DF2  CFDD F020          	movff	postdec2,??_leitura_continua_adc+3
  2267  001DF6  5024               	movf	leitura_continua_adc@cont,w,c
  2268  001DF8  0D13               	mullw	19
  2269  001DFA  0E11               	movlw	17
  2270  001DFC  26F3               	addwf	prodl,f,c
  2271  001DFE  0E00               	movlw	0
  2272  001E00  22F4               	addwfc	prodh,f,c
  2273  001E02  0E50               	movlw	low _valor_leitura_adc
  2274  001E04  24F3               	addwf	prodl,w,c
  2275  001E06  6ED9               	movwf	fsr2l,c
  2276  001E08  0E01               	movlw	high _valor_leitura_adc
  2277  001E0A  20F4               	addwfc	prodh,w,c
  2278  001E0C  6EDA               	movwf	fsr2h,c
  2279  001E0E  CFDE F021          	movff	postinc2,??_leitura_continua_adc+4
  2280  001E12  CFDD F022          	movff	postdec2,??_leitura_continua_adc+5
  2281  001E16  501F               	movf	??_leitura_continua_adc+2,w,c
  2282  001E18  2621               	addwf	??_leitura_continua_adc+4,f,c
  2283  001E1A  5020               	movf	??_leitura_continua_adc+3,w,c
  2284  001E1C  2222               	addwfc	??_leitura_continua_adc+5,f,c
  2285  001E1E  5024               	movf	leitura_continua_adc@cont,w,c
  2286  001E20  0D13               	mullw	19
  2287  001E22  0E11               	movlw	17
  2288  001E24  26F3               	addwf	prodl,f,c
  2289  001E26  0E00               	movlw	0
  2290  001E28  22F4               	addwfc	prodh,f,c
  2291  001E2A  0E50               	movlw	low _valor_leitura_adc
  2292  001E2C  24F3               	addwf	prodl,w,c
  2293  001E2E  6ED9               	movwf	fsr2l,c
  2294  001E30  0E01               	movlw	high _valor_leitura_adc
  2295  001E32  20F4               	addwfc	prodh,w,c
  2296  001E34  6EDA               	movwf	fsr2h,c
  2297  001E36  C021  FFDE         	movff	??_leitura_continua_adc+4,postinc2
  2298  001E3A  C022  FFDD         	movff	??_leitura_continua_adc+5,postdec2
  2299  001E3E  2A23               	incf	leitura_continua_adc@cont_int,f,c
  2300  001E40  D79F               	goto	l7962
  2301  001E42                     l7974:
  2302                           
  2303                           ;adc.c: 117: }
  2304                           ;adc.c: 118: valor_leitura_adc[cont].media = valor_leitura_adc[cont].media / 8;
  2305  001E42  5024               	movf	leitura_continua_adc@cont,w,c
  2306  001E44  0D13               	mullw	19
  2307  001E46  0E11               	movlw	17
  2308  001E48  26F3               	addwf	prodl,f,c
  2309  001E4A  0E00               	movlw	0
  2310  001E4C  22F4               	addwfc	prodh,f,c
  2311  001E4E  0E50               	movlw	low _valor_leitura_adc
  2312  001E50  24F3               	addwf	prodl,w,c
  2313  001E52  6ED9               	movwf	fsr2l,c
  2314  001E54  0E01               	movlw	high _valor_leitura_adc
  2315  001E56  20F4               	addwfc	prodh,w,c
  2316  001E58  6EDA               	movwf	fsr2h,c
  2317  001E5A  CFDE F01D          	movff	postinc2,??_leitura_continua_adc
  2318  001E5E  CFDD F01E          	movff	postdec2,??_leitura_continua_adc+1
  2319  001E62  90D8               	bcf	status,0,c
  2320  001E64  321E               	rrcf	??_leitura_continua_adc+1,f,c
  2321  001E66  321D               	rrcf	??_leitura_continua_adc,f,c
  2322  001E68  90D8               	bcf	status,0,c
  2323  001E6A  321E               	rrcf	??_leitura_continua_adc+1,f,c
  2324  001E6C  321D               	rrcf	??_leitura_continua_adc,f,c
  2325  001E6E  90D8               	bcf	status,0,c
  2326  001E70  321E               	rrcf	??_leitura_continua_adc+1,f,c
  2327  001E72  321D               	rrcf	??_leitura_continua_adc,f,c
  2328  001E74  5024               	movf	leitura_continua_adc@cont,w,c
  2329  001E76  0D13               	mullw	19
  2330  001E78  0E11               	movlw	17
  2331  001E7A  26F3               	addwf	prodl,f,c
  2332  001E7C  0E00               	movlw	0
  2333  001E7E  22F4               	addwfc	prodh,f,c
  2334  001E80  0E50               	movlw	low _valor_leitura_adc
  2335  001E82  24F3               	addwf	prodl,w,c
  2336  001E84  6ED9               	movwf	fsr2l,c
  2337  001E86  0E01               	movlw	high _valor_leitura_adc
  2338  001E88  20F4               	addwfc	prodh,w,c
  2339  001E8A  6EDA               	movwf	fsr2h,c
  2340  001E8C  C01D  FFDE         	movff	??_leitura_continua_adc,postinc2
  2341  001E90  C01E  FFDD         	movff	??_leitura_continua_adc+1,postdec2
  2342  001E94  2A24               	incf	leitura_continua_adc@cont,f,c
  2343  001E96  D76E               	goto	l7956
  2344  001E98                     __end_of_leitura_continua_adc:
  2345                           	opt stack 0
  2346                           tblptru	equ	0xFF8
  2347                           tblptrh	equ	0xFF7
  2348                           tblptrl	equ	0xFF6
  2349                           tablat	equ	0xFF5
  2350                           prodh	equ	0xFF4
  2351                           prodl	equ	0xFF3
  2352                           postinc0	equ	0xFEE
  2353                           wreg	equ	0xFE8
  2354                           postdec1	equ	0xFE5
  2355                           fsr1h	equ	0xFE2
  2356                           fsr1l	equ	0xFE1
  2357                           postinc2	equ	0xFDE
  2358                           postdec2	equ	0xFDD
  2359                           fsr2h	equ	0xFDA
  2360                           fsr2l	equ	0xFD9
  2361                           status	equ	0xFD8
  2362                           
  2363 ;; *************** function _leitura_adc *****************
  2364 ;; Defined at:
  2365 ;;		line 76 in file "bibliotecas/adc.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  canal           1    wreg     unsigned char 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  canal           1   27[COMRAM] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  2   21[COMRAM] unsigned int 
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2379 ;;      Params:         2       0       0       0       0       0       0       0       0
  2380 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2381 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2382 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2383 ;;Total ram usage:        7 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    2
  2386 ;; This function calls:
  2387 ;;		Nothing
  2388 ;; This function is called by:
  2389 ;;		_leitura_continua_adc
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text3
  2394  003100                     __ptext3:
  2395                           	opt stack 0
  2396  003100                     _leitura_adc:
  2397                           	opt stack 27
  2398                           
  2399                           ;incstack = 0
  2400                           ;leitura_adc@canal stored from wreg
  2401  003100  6E1C               	movwf	leitura_adc@canal,c
  2402                           
  2403                           ;adc.c: 78: switch(canal)
  2404  003102  D009               	goto	l7568
  2405  003104                     l7558:
  2406                           
  2407                           ;adc.c: 81: ADCON0 = 0x01;
  2408  003104  0E01               	movlw	1
  2409  003106  D005               	goto	L3
  2410  003108                     l7560:
  2411                           
  2412                           ;adc.c: 85: ADCON0 = 0x05;
  2413  003108  0E05               	movlw	5
  2414  00310A  D003               	goto	L3
  2415  00310C                     l7562:
  2416                           
  2417                           ;adc.c: 89: ADCON0 = 0x09;
  2418  00310C  0E09               	movlw	9
  2419  00310E  D001               	goto	L3
  2420  003110                     l7564:
  2421                           
  2422                           ;adc.c: 93: ADCON0 = 0x0D;
  2423  003110  0E0D               	movlw	13
  2424  003112                     L3:
  2425  003112  6EC2               	movwf	4034,c	;volatile
  2426                           
  2427                           ;adc.c: 96: }
  2428                           
  2429                           ;adc.c: 94: break;
  2430  003114  D00D               	goto	l450
  2431  003116                     l7568:
  2432  003116  501C               	movf	leitura_adc@canal,w,c
  2433                           
  2434                           ; Switch size 1, requested type "space"
  2435                           ; Number of cases is 4, Range of values is 0 to 3
  2436                           ; switch strategies available:
  2437                           ; Name         Instructions Cycles
  2438                           ; simple_byte           13     7 (average)
  2439                           ;	Chosen strategy is simple_byte
  2440  003118  0A00               	xorlw	0	; case 0
  2441  00311A  B4D8               	btfsc	status,2,c
  2442  00311C  D7F3               	goto	l7558
  2443  00311E  0A01               	xorlw	1	; case 1
  2444  003120  B4D8               	btfsc	status,2,c
  2445  003122  D7F2               	goto	l7560
  2446  003124  0A03               	xorlw	3	; case 2
  2447  003126  B4D8               	btfsc	status,2,c
  2448  003128  D7F1               	goto	l7562
  2449  00312A  0A01               	xorlw	1	; case 3
  2450  00312C  B4D8               	btfsc	status,2,c
  2451  00312E  D7F0               	goto	l7564
  2452  003130                     l450:
  2453                           
  2454                           ;adc.c: 97: ADCON0bits.GO=1;
  2455  003130  82C2               	bsf	4034,1,c	;volatile
  2456  003132                     l454:
  2457  003132  B2C2               	btfsc	4034,1,c	;volatile
  2458  003134  D7FE               	goto	l454
  2459                           
  2460                           ;adc.c: 100: return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
  2461  003136  CFC3 F018          	movff	4035,??_leitura_adc	;volatile
  2462  00313A  0E06               	movlw	6
  2463  00313C  6E19               	movwf	(??_leitura_adc+1)& (0+255),c
  2464  00313E                     u8025:
  2465  00313E  90D8               	bcf	status,0,c
  2466  003140  3218               	rrcf	??_leitura_adc,f,c
  2467  003142  2E19               	decfsz	(??_leitura_adc+1)& (0+255),f,c
  2468  003144  D7FC               	goto	u8025
  2469  003146  5018               	movf	??_leitura_adc,w,c
  2470  003148  CFC4 F01A          	movff	4036,??_leitura_adc+2	;volatile
  2471  00314C  6A1B               	clrf	(??_leitura_adc+3)& (0+255),c
  2472  00314E  90D8               	bcf	status,0,c
  2473  003150  361A               	rlcf	??_leitura_adc+2,f,c
  2474  003152  361B               	rlcf	??_leitura_adc+3,f,c
  2475  003154  90D8               	bcf	status,0,c
  2476  003156  361A               	rlcf	??_leitura_adc+2,f,c
  2477  003158  361B               	rlcf	??_leitura_adc+3,f,c
  2478  00315A  101A               	iorwf	??_leitura_adc+2,w,c
  2479  00315C  6E16               	movwf	?_leitura_adc,c
  2480  00315E  501B               	movf	??_leitura_adc+3,w,c
  2481  003160  6E17               	movwf	?_leitura_adc+1,c
  2482  003162  0012               	return	
  2483  003164                     __end_of_leitura_adc:
  2484                           	opt stack 0
  2485                           tblptru	equ	0xFF8
  2486                           tblptrh	equ	0xFF7
  2487                           tblptrl	equ	0xFF6
  2488                           tablat	equ	0xFF5
  2489                           prodh	equ	0xFF4
  2490                           prodl	equ	0xFF3
  2491                           postinc0	equ	0xFEE
  2492                           wreg	equ	0xFE8
  2493                           postdec1	equ	0xFE5
  2494                           fsr1h	equ	0xFE2
  2495                           fsr1l	equ	0xFE1
  2496                           postinc2	equ	0xFDE
  2497                           postdec2	equ	0xFDD
  2498                           fsr2h	equ	0xFDA
  2499                           fsr2l	equ	0xFD9
  2500                           status	equ	0xFD8
  2501                           
  2502 ;; *************** function _leitura_chaves_sistema *****************
  2503 ;; Defined at:
  2504 ;;		line 47 in file "bibliotecas/chaves.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;		None
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;		None
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      void 
  2511 ;; Registers used:
  2512 ;;		wreg
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2518 ;;      Params:         0       0       0       0       0       0       0       0       0
  2519 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2520 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2521 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2522 ;;Total ram usage:        0 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    2
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_main
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text4
  2533  0032B4                     __ptext4:
  2534                           	opt stack 0
  2535  0032B4                     _leitura_chaves_sistema:
  2536                           	opt stack 28
  2537                           
  2538                           ;chaves.c: 49: info_chaves[0] = PORTCbits.RC0;
  2539                           
  2540                           ;incstack = 0
  2541  0032B4  0E00               	movlw	0
  2542  0032B6  B082               	btfsc	3970,0,c	;volatile
  2543  0032B8  0E01               	movlw	1
  2544  0032BA  0100               	movlb	0	; () banked
  2545  0032BC  6FBC               	movwf	_info_chaves& (0+255),b
  2546                           
  2547                           ;chaves.c: 50: info_chaves[1] = PORTCbits.RC1;
  2548  0032BE  0E00               	movlw	0
  2549  0032C0  B282               	btfsc	3970,1,c	;volatile
  2550  0032C2  0E01               	movlw	1
  2551  0032C4  0100               	movlb	0	; () banked
  2552  0032C6  6FBD               	movwf	(_info_chaves+1)& (0+255),b
  2553                           
  2554                           ;chaves.c: 51: info_chaves[2] = PORTCbits.RC2;
  2555  0032C8  0E00               	movlw	0
  2556  0032CA  B482               	btfsc	3970,2,c	;volatile
  2557  0032CC  0E01               	movlw	1
  2558  0032CE  0100               	movlb	0	; () banked
  2559  0032D0  6FBE               	movwf	(_info_chaves+2)& (0+255),b
  2560                           
  2561                           ;chaves.c: 52: info_chaves[3] = PORTAbits.RA2;
  2562  0032D2  0E00               	movlw	0
  2563  0032D4  B480               	btfsc	3968,2,c	;volatile
  2564  0032D6  0E01               	movlw	1
  2565  0032D8  0100               	movlb	0	; () banked
  2566  0032DA  6FBF               	movwf	(_info_chaves+3)& (0+255),b
  2567                           
  2568                           ;chaves.c: 53: info_chaves[4] = PORTAbits.RA5;
  2569  0032DC  0E00               	movlw	0
  2570  0032DE  BA80               	btfsc	3968,5,c	;volatile
  2571  0032E0  0E01               	movlw	1
  2572  0032E2  0100               	movlb	0	; () banked
  2573  0032E4  6FC0               	movwf	(_info_chaves+4)& (0+255),b
  2574                           
  2575                           ;chaves.c: 54: info_chaves[5] = PORTEbits.RE0;
  2576  0032E6  0E00               	movlw	0
  2577  0032E8  B084               	btfsc	3972,0,c	;volatile
  2578  0032EA  0E01               	movlw	1
  2579  0032EC  0100               	movlb	0	; () banked
  2580  0032EE  6FC1               	movwf	(_info_chaves+5)& (0+255),b
  2581                           
  2582                           ;chaves.c: 55: info_chaves[6] = PORTEbits.RE1;
  2583  0032F0  0E00               	movlw	0
  2584  0032F2  B284               	btfsc	3972,1,c	;volatile
  2585  0032F4  0E01               	movlw	1
  2586  0032F6  0100               	movlb	0	; () banked
  2587  0032F8  6FC2               	movwf	(_info_chaves+6)& (0+255),b
  2588                           
  2589                           ; BSR set to: 0
  2590  0032FA  0012               	return		;funcret
  2591  0032FC                     __end_of_leitura_chaves_sistema:
  2592                           	opt stack 0
  2593                           tblptru	equ	0xFF8
  2594                           tblptrh	equ	0xFF7
  2595                           tblptrl	equ	0xFF6
  2596                           tablat	equ	0xFF5
  2597                           prodh	equ	0xFF4
  2598                           prodl	equ	0xFF3
  2599                           postinc0	equ	0xFEE
  2600                           wreg	equ	0xFE8
  2601                           postdec1	equ	0xFE5
  2602                           fsr1h	equ	0xFE2
  2603                           fsr1l	equ	0xFE1
  2604                           postinc2	equ	0xFDE
  2605                           postdec2	equ	0xFDD
  2606                           fsr2h	equ	0xFDA
  2607                           fsr2l	equ	0xFD9
  2608                           status	equ	0xFD8
  2609                           
  2610 ;; *************** function _init_lcd *****************
  2611 ;; Defined at:
  2612 ;;		line 71 in file "bibliotecas/display_lcd.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2626 ;;      Params:         0       0       0       0       0       0       0       0       0
  2627 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2628 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2629 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2630 ;;Total ram usage:        1 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:    4
  2633 ;; This function calls:
  2634 ;;		_delay
  2635 ;;		_escreve_cmd_lcd
  2636 ;; This function is called by:
  2637 ;;		_main
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           	psect	text5
  2642  002A2E                     __ptext5:
  2643                           	opt stack 0
  2644  002A2E                     _init_lcd:
  2645                           	opt stack 26
  2646                           
  2647                           ;display_lcd.c: 74: TRISDbits.RD2 = 0;
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;incstack = 0
  2651  002A2E  9495               	bcf	3989,2,c	;volatile
  2652                           
  2653                           ;display_lcd.c: 75: TRISDbits.RD1 = 0;
  2654  002A30  9295               	bcf	3989,1,c	;volatile
  2655                           
  2656                           ;display_lcd.c: 76: TRISDbits.RD0 = 0;
  2657  002A32  9095               	bcf	3989,0,c	;volatile
  2658                           
  2659                           ;display_lcd.c: 79: TRISDbits.RD4=0;
  2660  002A34  9895               	bcf	3989,4,c	;volatile
  2661                           
  2662                           ;display_lcd.c: 80: TRISDbits.RD5=0;
  2663  002A36  9A95               	bcf	3989,5,c	;volatile
  2664                           
  2665                           ;display_lcd.c: 81: TRISDbits.RD6=0;
  2666  002A38  9C95               	bcf	3989,6,c	;volatile
  2667                           
  2668                           ;display_lcd.c: 82: TRISDbits.RD7=0;
  2669  002A3A  9E95               	bcf	3989,7,c	;volatile
  2670                           
  2671                           ;display_lcd.c: 89: PORTDbits.RD2 = 0;
  2672  002A3C  9483               	bcf	3971,2,c	;volatile
  2673                           
  2674                           ;display_lcd.c: 90: PORTDbits.RD1 = 0;
  2675  002A3E  9283               	bcf	3971,1,c	;volatile
  2676                           
  2677                           ;display_lcd.c: 91: PORTDbits.RD0 = 0;
  2678  002A40  9083               	bcf	3971,0,c	;volatile
  2679                           
  2680                           ;display_lcd.c: 95: PORTDbits.RD7=0;
  2681  002A42  9E83               	bcf	3971,7,c	;volatile
  2682                           
  2683                           ;display_lcd.c: 96: PORTDbits.RD6=0;
  2684  002A44  9C83               	bcf	3971,6,c	;volatile
  2685                           
  2686                           ;display_lcd.c: 97: PORTDbits.RD5=1;
  2687  002A46  8A83               	bsf	3971,5,c	;volatile
  2688                           
  2689                           ;display_lcd.c: 98: PORTDbits.RD4=1;
  2690  002A48  8883               	bsf	3971,4,c	;volatile
  2691                           
  2692                           ;display_lcd.c: 103: _delay((unsigned long)((15)*(48000000/4000.0)));
  2693  002A4A  0EEA               	movlw	234
  2694  002A4C  6E19               	movwf	??_init_lcd& (0+255),c
  2695  002A4E  0EC3               	movlw	195
  2696  002A50                     u14577:
  2697  002A50  2EE8               	decfsz	wreg,f,c
  2698  002A52  D7FE               	bra	u14577
  2699  002A54  2E19               	decfsz	??_init_lcd& (0+255),f,c
  2700  002A56  D7FC               	bra	u14577
  2701  002A58  F000               	nop	
  2702                           
  2703                           ;display_lcd.c: 107: PORTDbits.RD0 = 1;
  2704  002A5A  8083               	bsf	3971,0,c	;volatile
  2705                           
  2706                           ;display_lcd.c: 108: delay();
  2707  002A5C  EC6D  F01A         	call	_delay	;wreg free
  2708                           
  2709                           ;display_lcd.c: 109: PORTDbits.RD0 = 0;
  2710  002A60  9083               	bcf	3971,0,c	;volatile
  2711                           
  2712                           ;display_lcd.c: 110: delay();
  2713  002A62  EC6D  F01A         	call	_delay	;wreg free
  2714                           
  2715                           ;display_lcd.c: 115: _delay((unsigned long)((5)*(48000000/4000.0)));
  2716  002A66  0E4E               	movlw	78
  2717  002A68  6E19               	movwf	??_init_lcd& (0+255),c
  2718  002A6A  0EEB               	movlw	235
  2719  002A6C                     u14587:
  2720  002A6C  2EE8               	decfsz	wreg,f,c
  2721  002A6E  D7FE               	bra	u14587
  2722  002A70  2E19               	decfsz	??_init_lcd& (0+255),f,c
  2723  002A72  D7FC               	bra	u14587
  2724  002A74  F000               	nop	
  2725                           
  2726                           ;display_lcd.c: 118: PORTDbits.RD0 = 1;
  2727  002A76  8083               	bsf	3971,0,c	;volatile
  2728                           
  2729                           ;display_lcd.c: 119: delay();
  2730  002A78  EC6D  F01A         	call	_delay	;wreg free
  2731                           
  2732                           ;display_lcd.c: 120: PORTDbits.RD0 = 0;
  2733  002A7C  9083               	bcf	3971,0,c	;volatile
  2734                           
  2735                           ;display_lcd.c: 121: delay();
  2736  002A7E  EC6D  F01A         	call	_delay	;wreg free
  2737                           
  2738                           ;display_lcd.c: 126: _delay((unsigned long)((5)*(48000000/4000.0)));
  2739  002A82  0E4E               	movlw	78
  2740  002A84  6E19               	movwf	??_init_lcd& (0+255),c
  2741  002A86  0EEB               	movlw	235
  2742  002A88                     u14597:
  2743  002A88  2EE8               	decfsz	wreg,f,c
  2744  002A8A  D7FE               	bra	u14597
  2745  002A8C  2E19               	decfsz	??_init_lcd& (0+255),f,c
  2746  002A8E  D7FC               	bra	u14597
  2747  002A90  F000               	nop	
  2748                           
  2749                           ;display_lcd.c: 129: PORTDbits.RD0 = 1;
  2750  002A92  8083               	bsf	3971,0,c	;volatile
  2751                           
  2752                           ;display_lcd.c: 130: delay();
  2753  002A94  EC6D  F01A         	call	_delay	;wreg free
  2754                           
  2755                           ;display_lcd.c: 131: PORTDbits.RD0 = 0;
  2756  002A98  9083               	bcf	3971,0,c	;volatile
  2757                           
  2758                           ;display_lcd.c: 132: delay();
  2759  002A9A  EC6D  F01A         	call	_delay	;wreg free
  2760                           
  2761                           ;display_lcd.c: 135: PORTDbits.RD7=0;
  2762  002A9E  9E83               	bcf	3971,7,c	;volatile
  2763                           
  2764                           ;display_lcd.c: 136: PORTDbits.RD6=0;
  2765  002AA0  9C83               	bcf	3971,6,c	;volatile
  2766                           
  2767                           ;display_lcd.c: 137: PORTDbits.RD5=1;
  2768  002AA2  8A83               	bsf	3971,5,c	;volatile
  2769                           
  2770                           ;display_lcd.c: 138: PORTDbits.RD4=0;
  2771  002AA4  9883               	bcf	3971,4,c	;volatile
  2772                           
  2773                           ;display_lcd.c: 142: PORTDbits.RD0 = 1;
  2774  002AA6  8083               	bsf	3971,0,c	;volatile
  2775                           
  2776                           ;display_lcd.c: 143: delay();
  2777  002AA8  EC6D  F01A         	call	_delay	;wreg free
  2778                           
  2779                           ;display_lcd.c: 144: PORTDbits.RD0 = 0;
  2780  002AAC  9083               	bcf	3971,0,c	;volatile
  2781                           
  2782                           ;display_lcd.c: 145: delay();
  2783  002AAE  EC6D  F01A         	call	_delay	;wreg free
  2784                           
  2785                           ;display_lcd.c: 149: escreve_cmd_lcd(0b00101000);
  2786  002AB2  0E28               	movlw	40
  2787  002AB4  ECF7  F015         	call	_escreve_cmd_lcd
  2788                           
  2789                           ;display_lcd.c: 150: escreve_cmd_lcd(0b00000110);
  2790  002AB8  0E06               	movlw	6
  2791  002ABA  ECF7  F015         	call	_escreve_cmd_lcd
  2792                           
  2793                           ;display_lcd.c: 151: escreve_cmd_lcd(0b00001110);
  2794  002ABE  0E0E               	movlw	14
  2795  002AC0  ECF7  F015         	call	_escreve_cmd_lcd
  2796                           
  2797                           ;display_lcd.c: 152: escreve_cmd_lcd(0b00000001);
  2798  002AC4  0E01               	movlw	1
  2799  002AC6  ECF7  F015         	call	_escreve_cmd_lcd
  2800  002ACA  0012               	return		;funcret
  2801  002ACC                     __end_of_init_lcd:
  2802                           	opt stack 0
  2803                           tblptru	equ	0xFF8
  2804                           tblptrh	equ	0xFF7
  2805                           tblptrl	equ	0xFF6
  2806                           tablat	equ	0xFF5
  2807                           prodh	equ	0xFF4
  2808                           prodl	equ	0xFF3
  2809                           postinc0	equ	0xFEE
  2810                           wreg	equ	0xFE8
  2811                           postdec1	equ	0xFE5
  2812                           fsr1h	equ	0xFE2
  2813                           fsr1l	equ	0xFE1
  2814                           postinc2	equ	0xFDE
  2815                           postdec2	equ	0xFDD
  2816                           fsr2h	equ	0xFDA
  2817                           fsr2l	equ	0xFD9
  2818                           status	equ	0xFD8
  2819                           
  2820 ;; *************** function _init_hardware *****************
  2821 ;; Defined at:
  2822 ;;		line 55 in file "bibliotecas/hardware.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;		None
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;		None
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2836 ;;      Params:         0       0       0       0       0       0       0       0       0
  2837 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2838 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2839 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2840 ;;Total ram usage:        0 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    4
  2843 ;; This function calls:
  2844 ;;		_config_timer_dois
  2845 ;;		_config_timer_zero
  2846 ;;		_init_interrupt
  2847 ;;		_init_oscilador
  2848 ;;		_init_ports
  2849 ;; This function is called by:
  2850 ;;		_main
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text6
  2855  003570                     __ptext6:
  2856                           	opt stack 0
  2857  003570                     _init_hardware:
  2858                           	opt stack 26
  2859                           
  2860                           ;hardware.c: 58: init_oscilador();
  2861                           
  2862                           ;incstack = 0
  2863  003570  EC09  F01B         	call	_init_oscilador	;wreg free
  2864                           
  2865                           ;hardware.c: 61: init_ports();
  2866  003574  ECAC  F01A         	call	_init_ports	;wreg free
  2867                           
  2868                           ;hardware.c: 64: config_timer_zero();
  2869  003578  EC9F  F01A         	call	_config_timer_zero	;wreg free
  2870                           
  2871                           ;hardware.c: 67: config_timer_dois();
  2872  00357C  ECF8  F01A         	call	_config_timer_dois	;wreg free
  2873                           
  2874                           ;hardware.c: 70: init_interrupt();
  2875  003580  ECCD  F01A         	call	_init_interrupt	;wreg free
  2876  003584  0012               	return		;funcret
  2877  003586                     __end_of_init_hardware:
  2878                           	opt stack 0
  2879                           tblptru	equ	0xFF8
  2880                           tblptrh	equ	0xFF7
  2881                           tblptrl	equ	0xFF6
  2882                           tablat	equ	0xFF5
  2883                           prodh	equ	0xFF4
  2884                           prodl	equ	0xFF3
  2885                           postinc0	equ	0xFEE
  2886                           wreg	equ	0xFE8
  2887                           postdec1	equ	0xFE5
  2888                           fsr1h	equ	0xFE2
  2889                           fsr1l	equ	0xFE1
  2890                           postinc2	equ	0xFDE
  2891                           postdec2	equ	0xFDD
  2892                           fsr2h	equ	0xFDA
  2893                           fsr2l	equ	0xFD9
  2894                           status	equ	0xFD8
  2895                           
  2896 ;; *************** function _init_ports *****************
  2897 ;; Defined at:
  2898 ;;		line 154 in file "bibliotecas/hardware.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2912 ;;      Params:         0       0       0       0       0       0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2915 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2916 ;;Total ram usage:        0 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    2
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_init_hardware
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text7
  2927  003558                     __ptext7:
  2928                           	opt stack 0
  2929  003558                     _init_ports:
  2930                           	opt stack 27
  2931                           
  2932                           ;hardware.c: 156: TRISB = 0b00000001;
  2933                           
  2934                           ;incstack = 0
  2935  003558  0E01               	movlw	1
  2936  00355A  6E93               	movwf	3987,c	;volatile
  2937                           
  2938                           ;hardware.c: 157: LATB = 0xFF;
  2939  00355C  688A               	setf	3978,c	;volatile
  2940                           
  2941                           ;hardware.c: 158: TRISD = 0x00;
  2942  00355E  0E00               	movlw	0
  2943  003560  6E95               	movwf	3989,c	;volatile
  2944                           
  2945                           ;hardware.c: 159: TRISA = 0b00000111;
  2946  003562  0E07               	movlw	7
  2947  003564  6E92               	movwf	3986,c	;volatile
  2948                           
  2949                           ;hardware.c: 160: TRISC = 0x11111111;
  2950  003566  0E11               	movlw	17
  2951  003568  6E94               	movwf	3988,c	;volatile
  2952                           
  2953                           ;hardware.c: 161: TRISE = 0b00000011;
  2954  00356A  0E03               	movlw	3
  2955  00356C  6E96               	movwf	3990,c	;volatile
  2956  00356E  0012               	return		;funcret
  2957  003570                     __end_of_init_ports:
  2958                           	opt stack 0
  2959                           tblptru	equ	0xFF8
  2960                           tblptrh	equ	0xFF7
  2961                           tblptrl	equ	0xFF6
  2962                           tablat	equ	0xFF5
  2963                           prodh	equ	0xFF4
  2964                           prodl	equ	0xFF3
  2965                           postinc0	equ	0xFEE
  2966                           wreg	equ	0xFE8
  2967                           postdec1	equ	0xFE5
  2968                           fsr1h	equ	0xFE2
  2969                           fsr1l	equ	0xFE1
  2970                           postinc2	equ	0xFDE
  2971                           postdec2	equ	0xFDD
  2972                           fsr2h	equ	0xFDA
  2973                           fsr2l	equ	0xFD9
  2974                           status	equ	0xFD8
  2975                           
  2976 ;; *************** function _init_oscilador *****************
  2977 ;; Defined at:
  2978 ;;		line 171 in file "bibliotecas/hardware.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      void 
  2985 ;; Registers used:
  2986 ;;		None
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2992 ;;      Params:         0       0       0       0       0       0       0       0       0
  2993 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2994 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2995 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2996 ;;Total ram usage:        0 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:    2
  2999 ;; This function calls:
  3000 ;;		Nothing
  3001 ;; This function is called by:
  3002 ;;		_init_hardware
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text8
  3007  003612                     __ptext8:
  3008                           	opt stack 0
  3009  003612                     _init_oscilador:
  3010                           	opt stack 27
  3011                           
  3012                           ;hardware.c: 174: OSCCONbits.IRCF0 = 1;
  3013                           
  3014                           ;incstack = 0
  3015  003612  88D3               	bsf	4051,4,c	;volatile
  3016                           
  3017                           ;hardware.c: 175: OSCCONbits.IRCF1 = 1;
  3018  003614  8AD3               	bsf	4051,5,c	;volatile
  3019                           
  3020                           ;hardware.c: 176: OSCCONbits.IRCF2 = 1;
  3021  003616  8CD3               	bsf	4051,6,c	;volatile
  3022  003618  0012               	return		;funcret
  3023  00361A                     __end_of_init_oscilador:
  3024                           	opt stack 0
  3025                           tblptru	equ	0xFF8
  3026                           tblptrh	equ	0xFF7
  3027                           tblptrl	equ	0xFF6
  3028                           tablat	equ	0xFF5
  3029                           prodh	equ	0xFF4
  3030                           prodl	equ	0xFF3
  3031                           postinc0	equ	0xFEE
  3032                           wreg	equ	0xFE8
  3033                           postdec1	equ	0xFE5
  3034                           fsr1h	equ	0xFE2
  3035                           fsr1l	equ	0xFE1
  3036                           postinc2	equ	0xFDE
  3037                           postdec2	equ	0xFDD
  3038                           fsr2h	equ	0xFDA
  3039                           fsr2l	equ	0xFD9
  3040                           status	equ	0xFD8
  3041                           
  3042 ;; *************** function _init_interrupt *****************
  3043 ;; Defined at:
  3044 ;;		line 98 in file "bibliotecas/hardware.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;		None
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;		None
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  1    wreg      void 
  3051 ;; Registers used:
  3052 ;;		wreg, status,2
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3058 ;;      Params:         0       0       0       0       0       0       0       0       0
  3059 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3061 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3062 ;;Total ram usage:        0 bytes
  3063 ;; Hardware stack levels used:    1
  3064 ;; Hardware stack levels required when called:    2
  3065 ;; This function calls:
  3066 ;;		Nothing
  3067 ;; This function is called by:
  3068 ;;		_init_hardware
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           	psect	text9
  3073  00359A                     __ptext9:
  3074                           	opt stack 0
  3075  00359A                     _init_interrupt:
  3076                           	opt stack 27
  3077                           
  3078                           ;hardware.c: 100: INTCON = 0b11110000;
  3079                           
  3080                           ;incstack = 0
  3081  00359A  0EF0               	movlw	240
  3082  00359C  6EF2               	movwf	intcon,c	;volatile
  3083                           
  3084                           ;hardware.c: 101: INTCON2 = 0b00000000;
  3085  00359E  0E00               	movlw	0
  3086  0035A0  6EF1               	movwf	intcon2,c	;volatile
  3087                           
  3088                           ;hardware.c: 102: INTCON3 = 0b00000000;
  3089  0035A2  0E00               	movlw	0
  3090  0035A4  6EF0               	movwf	intcon3,c	;volatile
  3091                           
  3092                           ;hardware.c: 104: PIE1 = 0b00100000;
  3093  0035A6  0E20               	movlw	32
  3094  0035A8  6E9D               	movwf	3997,c	;volatile
  3095  0035AA  0012               	return		;funcret
  3096  0035AC                     __end_of_init_interrupt:
  3097                           	opt stack 0
  3098                           tblptru	equ	0xFF8
  3099                           tblptrh	equ	0xFF7
  3100                           tblptrl	equ	0xFF6
  3101                           tablat	equ	0xFF5
  3102                           prodh	equ	0xFF4
  3103                           prodl	equ	0xFF3
  3104                           intcon	equ	0xFF2
  3105                           intcon2	equ	0xFF1
  3106                           intcon3	equ	0xFF0
  3107                           postinc0	equ	0xFEE
  3108                           wreg	equ	0xFE8
  3109                           postdec1	equ	0xFE5
  3110                           fsr1h	equ	0xFE2
  3111                           fsr1l	equ	0xFE1
  3112                           postinc2	equ	0xFDE
  3113                           postdec2	equ	0xFDD
  3114                           fsr2h	equ	0xFDA
  3115                           fsr2l	equ	0xFD9
  3116                           status	equ	0xFD8
  3117                           
  3118 ;; *************** function _config_timer_zero *****************
  3119 ;; Defined at:
  3120 ;;		line 83 in file "bibliotecas/hardware.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;		None
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;		None
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3134 ;;      Params:         0       0       0       0       0       0       0       0       0
  3135 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3137 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3138 ;;Total ram usage:        0 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; Hardware stack levels required when called:    3
  3141 ;; This function calls:
  3142 ;;		_write_timer_zero
  3143 ;; This function is called by:
  3144 ;;		_init_hardware
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text10
  3149  00353E                     __ptext10:
  3150                           	opt stack 0
  3151  00353E                     _config_timer_zero:
  3152                           	opt stack 26
  3153                           
  3154                           ;hardware.c: 85: T0CON = 0b11000011;
  3155                           
  3156                           ;incstack = 0
  3157  00353E  0EC3               	movlw	195
  3158  003540  6ED5               	movwf	4053,c	;volatile
  3159                           
  3160                           ;hardware.c: 86: SPPCON = 0b00000000;
  3161  003542  0E00               	movlw	0
  3162  003544  6E65               	movwf	3941,c	;volatile
  3163                           
  3164                           ;hardware.c: 87: SPPCFG = 0b00000000;
  3165  003546  0E00               	movlw	0
  3166  003548  6E63               	movwf	3939,c	;volatile
  3167                           
  3168                           ;hardware.c: 88: write_timer_zero(0x0083);
  3169  00354A  0E00               	movlw	0
  3170  00354C  6E17               	movwf	write_timer_zero@timer0+1,c
  3171  00354E  0E83               	movlw	131
  3172  003550  6E16               	movwf	write_timer_zero@timer0,c
  3173  003552  ECD6  F01A         	call	_write_timer_zero	;wreg free
  3174  003556  0012               	return		;funcret
  3175  003558                     __end_of_config_timer_zero:
  3176                           	opt stack 0
  3177                           tblptru	equ	0xFF8
  3178                           tblptrh	equ	0xFF7
  3179                           tblptrl	equ	0xFF6
  3180                           tablat	equ	0xFF5
  3181                           prodh	equ	0xFF4
  3182                           prodl	equ	0xFF3
  3183                           intcon	equ	0xFF2
  3184                           intcon2	equ	0xFF1
  3185                           intcon3	equ	0xFF0
  3186                           postinc0	equ	0xFEE
  3187                           wreg	equ	0xFE8
  3188                           postdec1	equ	0xFE5
  3189                           fsr1h	equ	0xFE2
  3190                           fsr1l	equ	0xFE1
  3191                           postinc2	equ	0xFDE
  3192                           postdec2	equ	0xFDD
  3193                           fsr2h	equ	0xFDA
  3194                           fsr2l	equ	0xFD9
  3195                           status	equ	0xFD8
  3196                           
  3197 ;; *************** function _write_timer_zero *****************
  3198 ;; Defined at:
  3199 ;;		line 138 in file "bibliotecas/hardware.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  timer0          2   21[COMRAM] unsigned int 
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;  timer           2   23[COMRAM] struct Timers
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		None
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3213 ;;      Params:         2       0       0       0       0       0       0       0       0
  3214 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3216 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3217 ;;Total ram usage:        4 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    2
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_config_timer_zero
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text11
  3228  0035AC                     __ptext11:
  3229                           	opt stack 0
  3230  0035AC                     _write_timer_zero:
  3231                           	opt stack 26
  3232                           
  3233                           ;hardware.c: 140: union Timers timer;
  3234                           ;hardware.c: 142: timer.lt = timer0;
  3235                           
  3236                           ;incstack = 0
  3237  0035AC  C016  F018         	movff	write_timer_zero@timer0,write_timer_zero@timer
  3238  0035B0  C017  F019         	movff	write_timer_zero@timer0+1,write_timer_zero@timer+1
  3239                           
  3240                           ;hardware.c: 144: TMR0H = timer.bt[1];
  3241  0035B4  C019  FFD7         	movff	write_timer_zero@timer+1,4055	;volatile
  3242                           
  3243                           ;hardware.c: 145: TMR0L = timer.bt[0];
  3244  0035B8  C018  FFD6         	movff	write_timer_zero@timer,4054	;volatile
  3245  0035BC  0012               	return		;funcret
  3246  0035BE                     __end_of_write_timer_zero:
  3247                           	opt stack 0
  3248                           tblptru	equ	0xFF8
  3249                           tblptrh	equ	0xFF7
  3250                           tblptrl	equ	0xFF6
  3251                           tablat	equ	0xFF5
  3252                           prodh	equ	0xFF4
  3253                           prodl	equ	0xFF3
  3254                           intcon	equ	0xFF2
  3255                           intcon2	equ	0xFF1
  3256                           intcon3	equ	0xFF0
  3257                           postinc0	equ	0xFEE
  3258                           wreg	equ	0xFE8
  3259                           postdec1	equ	0xFE5
  3260                           fsr1h	equ	0xFE2
  3261                           fsr1l	equ	0xFE1
  3262                           postinc2	equ	0xFDE
  3263                           postdec2	equ	0xFDD
  3264                           fsr2h	equ	0xFDA
  3265                           fsr2l	equ	0xFD9
  3266                           status	equ	0xFD8
  3267                           
  3268 ;; *************** function _config_timer_dois *****************
  3269 ;; Defined at:
  3270 ;;		line 200 in file "bibliotecas/hardware.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;		None
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;		None
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		wreg, status,2
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3284 ;;      Params:         0       0       0       0       0       0       0       0       0
  3285 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3287 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3288 ;;Total ram usage:        0 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    2
  3291 ;; This function calls:
  3292 ;;		Nothing
  3293 ;; This function is called by:
  3294 ;;		_init_hardware
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text12
  3299  0035F0                     __ptext12:
  3300                           	opt stack 0
  3301  0035F0                     _config_timer_dois:
  3302                           	opt stack 27
  3303                           
  3304                           ;hardware.c: 202: T2CON = 0b00000100;
  3305                           
  3306                           ;incstack = 0
  3307  0035F0  0E04               	movlw	4
  3308  0035F2  6ECA               	movwf	4042,c	;volatile
  3309                           
  3310                           ;hardware.c: 203: TMR2 = 0;
  3311  0035F4  0E00               	movlw	0
  3312  0035F6  6ECC               	movwf	4044,c	;volatile
  3313                           
  3314                           ;hardware.c: 204: PR2 = 0xFF;
  3315  0035F8  68CB               	setf	4043,c	;volatile
  3316  0035FA  0012               	return		;funcret
  3317  0035FC                     __end_of_config_timer_dois:
  3318                           	opt stack 0
  3319                           tblptru	equ	0xFF8
  3320                           tblptrh	equ	0xFF7
  3321                           tblptrl	equ	0xFF6
  3322                           tablat	equ	0xFF5
  3323                           prodh	equ	0xFF4
  3324                           prodl	equ	0xFF3
  3325                           intcon	equ	0xFF2
  3326                           intcon2	equ	0xFF1
  3327                           intcon3	equ	0xFF0
  3328                           postinc0	equ	0xFEE
  3329                           wreg	equ	0xFE8
  3330                           postdec1	equ	0xFE5
  3331                           fsr1h	equ	0xFE2
  3332                           fsr1l	equ	0xFE1
  3333                           postinc2	equ	0xFDE
  3334                           postdec2	equ	0xFDD
  3335                           fsr2h	equ	0xFDA
  3336                           fsr2l	equ	0xFD9
  3337                           status	equ	0xFD8
  3338                           
  3339 ;; *************** function _inicializa_uart *****************
  3340 ;; Defined at:
  3341 ;;		line 206 in file "bibliotecas/uart.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      void 
  3348 ;; Registers used:
  3349 ;;		wreg, status,2, status,0, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3355 ;;      Params:         0       0       0       0       0       0       0       0       0
  3356 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3357 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3358 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3359 ;;Total ram usage:        0 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    4
  3362 ;; This function calls:
  3363 ;;		_configura_baudrate_uart
  3364 ;; This function is called by:
  3365 ;;		_main
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text13
  3370  0034FE                     __ptext13:
  3371                           	opt stack 0
  3372  0034FE                     _inicializa_uart:
  3373                           	opt stack 26
  3374                           
  3375                           ;uart.c: 208: TRISCbits.RC6 = 0;
  3376                           
  3377                           ;incstack = 0
  3378  0034FE  9C94               	bcf	3988,6,c	;volatile
  3379                           
  3380                           ;uart.c: 209: TRISCbits.RC7 = 0;
  3381  003500  9E94               	bcf	3988,7,c	;volatile
  3382                           
  3383                           ;uart.c: 211: (void)configura_baudrate_uart(9600);
  3384  003502  0E80               	movlw	128
  3385  003504  6E24               	movwf	configura_baudrate_uart@baudrate,c
  3386  003506  0E25               	movlw	37
  3387  003508  6E25               	movwf	configura_baudrate_uart@baudrate+1,c
  3388  00350A  0E00               	movlw	0
  3389  00350C  6E26               	movwf	configura_baudrate_uart@baudrate+2,c
  3390  00350E  0E00               	movlw	0
  3391  003510  6E27               	movwf	configura_baudrate_uart@baudrate+3,c
  3392  003512  EC22  F00E         	call	_configura_baudrate_uart	;wreg free
  3393                           
  3394                           ;uart.c: 213: TXSTA = 0x20;
  3395  003516  0E20               	movlw	32
  3396  003518  6EAC               	movwf	4012,c	;volatile
  3397                           
  3398                           ;uart.c: 214: RCSTA = 0x90;
  3399  00351A  0E90               	movlw	144
  3400  00351C  6EAB               	movwf	4011,c	;volatile
  3401  00351E  0012               	return		;funcret
  3402  003520                     __end_of_inicializa_uart:
  3403                           	opt stack 0
  3404                           tblptru	equ	0xFF8
  3405                           tblptrh	equ	0xFF7
  3406                           tblptrl	equ	0xFF6
  3407                           tablat	equ	0xFF5
  3408                           prodh	equ	0xFF4
  3409                           prodl	equ	0xFF3
  3410                           intcon	equ	0xFF2
  3411                           intcon2	equ	0xFF1
  3412                           intcon3	equ	0xFF0
  3413                           postinc0	equ	0xFEE
  3414                           wreg	equ	0xFE8
  3415                           postdec1	equ	0xFE5
  3416                           fsr1h	equ	0xFE2
  3417                           fsr1l	equ	0xFE1
  3418                           postinc2	equ	0xFDE
  3419                           postdec2	equ	0xFDD
  3420                           fsr2h	equ	0xFDA
  3421                           fsr2l	equ	0xFD9
  3422                           status	equ	0xFD8
  3423                           
  3424 ;; *************** function _configura_baudrate_uart *****************
  3425 ;; Defined at:
  3426 ;;		line 50 in file "bibliotecas/uart.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;  baudrate        4   35[COMRAM] const long 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  x               2   47[COMRAM] unsigned int 
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  1    wreg      unsigned char 
  3433 ;; Registers used:
  3434 ;;		wreg, status,2, status,0, cstack
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3440 ;;      Params:         4       0       0       0       0       0       0       0       0
  3441 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3442 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3443 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3444 ;;Total ram usage:       14 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; Hardware stack levels required when called:    3
  3447 ;; This function calls:
  3448 ;;		___aldiv
  3449 ;; This function is called by:
  3450 ;;		_inicializa_uart
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text14
  3455  001C44                     __ptext14:
  3456                           	opt stack 0
  3457  001C44                     _configura_baudrate_uart:
  3458                           	opt stack 26
  3459                           
  3460                           ;uart.c: 52: unsigned int x;
  3461                           ;uart.c: 54: x = (48000000 - baudrate*64)/(baudrate*64);
  3462                           
  3463                           ;incstack = 0
  3464  001C44  C024  F028         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  3465  001C48  C025  F029         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  3466  001C4C  C026  F02A         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  3467  001C50  C027  F02B         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  3468  001C54  0E06               	movlw	6
  3469  001C56                     u8385:
  3470  001C56  90D8               	bcf	status,0,c
  3471  001C58  3628               	rlcf	??_configura_baudrate_uart,f,c
  3472  001C5A  3629               	rlcf	??_configura_baudrate_uart+1,f,c
  3473  001C5C  362A               	rlcf	??_configura_baudrate_uart+2,f,c
  3474  001C5E  362B               	rlcf	??_configura_baudrate_uart+3,f,c
  3475  001C60  2EE8               	decfsz	wreg,f,c
  3476  001C62  D7F9               	goto	u8385
  3477  001C64  1E28               	comf	??_configura_baudrate_uart,f,c
  3478  001C66  1E29               	comf	??_configura_baudrate_uart+1,f,c
  3479  001C68  1E2A               	comf	??_configura_baudrate_uart+2,f,c
  3480  001C6A  1E2B               	comf	??_configura_baudrate_uart+3,f,c
  3481  001C6C  2A28               	incf	??_configura_baudrate_uart,f,c
  3482  001C6E  0E00               	movlw	0
  3483  001C70  2229               	addwfc	??_configura_baudrate_uart+1,f,c
  3484  001C72  222A               	addwfc	??_configura_baudrate_uart+2,f,c
  3485  001C74  222B               	addwfc	??_configura_baudrate_uart+3,f,c
  3486  001C76  0E00               	movlw	0
  3487  001C78  2428               	addwf	??_configura_baudrate_uart,w,c
  3488  001C7A  6E16               	movwf	___aldiv@dividend,c
  3489  001C7C  0E6C               	movlw	108
  3490  001C7E  2029               	addwfc	??_configura_baudrate_uart+1,w,c
  3491  001C80  6E17               	movwf	___aldiv@dividend+1,c
  3492  001C82  0EDC               	movlw	220
  3493  001C84  202A               	addwfc	??_configura_baudrate_uart+2,w,c
  3494  001C86  6E18               	movwf	___aldiv@dividend+2,c
  3495  001C88  0E02               	movlw	2
  3496  001C8A  202B               	addwfc	??_configura_baudrate_uart+3,w,c
  3497  001C8C  6E19               	movwf	___aldiv@dividend+3,c
  3498  001C8E  C024  F02C         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  3499  001C92  C025  F02D         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  3500  001C96  C026  F02E         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  3501  001C9A  C027  F02F         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  3502  001C9E  0E06               	movlw	6
  3503  001CA0                     u8395:
  3504  001CA0  90D8               	bcf	status,0,c
  3505  001CA2  362C               	rlcf	??_configura_baudrate_uart+4,f,c
  3506  001CA4  362D               	rlcf	??_configura_baudrate_uart+5,f,c
  3507  001CA6  362E               	rlcf	??_configura_baudrate_uart+6,f,c
  3508  001CA8  362F               	rlcf	??_configura_baudrate_uart+7,f,c
  3509  001CAA  2EE8               	decfsz	wreg,f,c
  3510  001CAC  D7F9               	goto	u8395
  3511  001CAE  C02C  F01A         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  3512  001CB2  C02D  F01B         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  3513  001CB6  C02E  F01C         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  3514  001CBA  C02F  F01D         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  3515  001CBE  EC0A  F013         	call	___aldiv	;wreg free
  3516  001CC2  C016  F030         	movff	?___aldiv,configura_baudrate_uart@x
  3517  001CC6  C017  F031         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  3518                           
  3519                           ;uart.c: 55: if(x > 255)
  3520  001CCA  0431               	decf	configura_baudrate_uart@x+1,w,c
  3521  001CCC  A0D8               	btfss	status,0,c
  3522  001CCE  D044               	goto	l7770
  3523                           
  3524                           ;uart.c: 56: {
  3525                           ;uart.c: 57: x = (48000000 - baudrate*16)/(baudrate*16);
  3526  001CD0  C024  F028         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  3527  001CD4  C025  F029         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  3528  001CD8  C026  F02A         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  3529  001CDC  C027  F02B         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  3530  001CE0  0E04               	movlw	4
  3531  001CE2                     u8415:
  3532  001CE2  90D8               	bcf	status,0,c
  3533  001CE4  3628               	rlcf	??_configura_baudrate_uart,f,c
  3534  001CE6  3629               	rlcf	??_configura_baudrate_uart+1,f,c
  3535  001CE8  362A               	rlcf	??_configura_baudrate_uart+2,f,c
  3536  001CEA  362B               	rlcf	??_configura_baudrate_uart+3,f,c
  3537  001CEC  2EE8               	decfsz	wreg,f,c
  3538  001CEE  D7F9               	goto	u8415
  3539  001CF0  1E28               	comf	??_configura_baudrate_uart,f,c
  3540  001CF2  1E29               	comf	??_configura_baudrate_uart+1,f,c
  3541  001CF4  1E2A               	comf	??_configura_baudrate_uart+2,f,c
  3542  001CF6  1E2B               	comf	??_configura_baudrate_uart+3,f,c
  3543  001CF8  2A28               	incf	??_configura_baudrate_uart,f,c
  3544  001CFA  0E00               	movlw	0
  3545  001CFC  2229               	addwfc	??_configura_baudrate_uart+1,f,c
  3546  001CFE  222A               	addwfc	??_configura_baudrate_uart+2,f,c
  3547  001D00  222B               	addwfc	??_configura_baudrate_uart+3,f,c
  3548  001D02  0E00               	movlw	0
  3549  001D04  2428               	addwf	??_configura_baudrate_uart,w,c
  3550  001D06  6E16               	movwf	___aldiv@dividend,c
  3551  001D08  0E6C               	movlw	108
  3552  001D0A  2029               	addwfc	??_configura_baudrate_uart+1,w,c
  3553  001D0C  6E17               	movwf	___aldiv@dividend+1,c
  3554  001D0E  0EDC               	movlw	220
  3555  001D10  202A               	addwfc	??_configura_baudrate_uart+2,w,c
  3556  001D12  6E18               	movwf	___aldiv@dividend+2,c
  3557  001D14  0E02               	movlw	2
  3558  001D16  202B               	addwfc	??_configura_baudrate_uart+3,w,c
  3559  001D18  6E19               	movwf	___aldiv@dividend+3,c
  3560  001D1A  C024  F02C         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  3561  001D1E  C025  F02D         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  3562  001D22  C026  F02E         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  3563  001D26  C027  F02F         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  3564  001D2A  0E04               	movlw	4
  3565  001D2C                     u8425:
  3566  001D2C  90D8               	bcf	status,0,c
  3567  001D2E  362C               	rlcf	??_configura_baudrate_uart+4,f,c
  3568  001D30  362D               	rlcf	??_configura_baudrate_uart+5,f,c
  3569  001D32  362E               	rlcf	??_configura_baudrate_uart+6,f,c
  3570  001D34  362F               	rlcf	??_configura_baudrate_uart+7,f,c
  3571  001D36  2EE8               	decfsz	wreg,f,c
  3572  001D38  D7F9               	goto	u8425
  3573  001D3A  C02C  F01A         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  3574  001D3E  C02D  F01B         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  3575  001D42  C02E  F01C         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  3576  001D46  C02F  F01D         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  3577  001D4A  EC0A  F013         	call	___aldiv	;wreg free
  3578  001D4E  C016  F030         	movff	?___aldiv,configura_baudrate_uart@x
  3579  001D52  C017  F031         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  3580                           
  3581                           ;uart.c: 58: BRGH = 1;
  3582  001D56  84AC               	bsf	4012,2,c	;volatile
  3583  001D58                     l7770:
  3584                           
  3585                           ;uart.c: 59: }
  3586                           ;uart.c: 60: if(x < 256)
  3587  001D58  0431               	decf	configura_baudrate_uart@x+1,w,c
  3588  001D5A  B0D8               	btfsc	status,0,c
  3589  001D5C  0012               	return	
  3590                           
  3591                           ;uart.c: 61: {
  3592                           ;uart.c: 62: SPBRG = x;
  3593  001D5E  C030  FFAF         	movff	configura_baudrate_uart@x,4015	;volatile
  3594                           
  3595                           ;uart.c: 63: SYNC = 0;
  3596  001D62  98AC               	bcf	4012,4,c	;volatile
  3597                           
  3598                           ;uart.c: 64: SPEN = 1;
  3599  001D64  8EAB               	bsf	4011,7,c	;volatile
  3600                           
  3601                           ;uart.c: 65: TRISCbits.RC7 = 1;
  3602  001D66  8E94               	bsf	3988,7,c	;volatile
  3603                           
  3604                           ;uart.c: 66: TRISCbits.RC6 = 0;
  3605  001D68  9C94               	bcf	3988,6,c	;volatile
  3606                           
  3607                           ;uart.c: 67: CREN = 1;
  3608  001D6A  88AB               	bsf	4011,4,c	;volatile
  3609                           
  3610                           ;uart.c: 68: TXEN = 1;
  3611  001D6C  8AAC               	bsf	4012,5,c	;volatile
  3612                           
  3613                           ;uart.c: 70: return (1);
  3614                           ;	Return value of _configura_baudrate_uart is never used
  3615  001D6E  0012               	return	
  3616  001D70                     __end_of_configura_baudrate_uart:
  3617                           	opt stack 0
  3618                           tblptru	equ	0xFF8
  3619                           tblptrh	equ	0xFF7
  3620                           tblptrl	equ	0xFF6
  3621                           tablat	equ	0xFF5
  3622                           prodh	equ	0xFF4
  3623                           prodl	equ	0xFF3
  3624                           intcon	equ	0xFF2
  3625                           intcon2	equ	0xFF1
  3626                           intcon3	equ	0xFF0
  3627                           postinc0	equ	0xFEE
  3628                           wreg	equ	0xFE8
  3629                           postdec1	equ	0xFE5
  3630                           fsr1h	equ	0xFE2
  3631                           fsr1l	equ	0xFE1
  3632                           postinc2	equ	0xFDE
  3633                           postdec2	equ	0xFDD
  3634                           fsr2h	equ	0xFDA
  3635                           fsr2l	equ	0xFD9
  3636                           status	equ	0xFD8
  3637                           
  3638 ;; *************** function ___aldiv *****************
  3639 ;; Defined at:
  3640 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  dividend        4   21[COMRAM] long 
  3643 ;;  divisor         4   25[COMRAM] long 
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;  quotient        4   31[COMRAM] long 
  3646 ;;  sign            1   30[COMRAM] unsigned char 
  3647 ;;  counter         1   29[COMRAM] unsigned char 
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  4   21[COMRAM] long 
  3650 ;; Registers used:
  3651 ;;		wreg, status,2, status,0
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3657 ;;      Params:         8       0       0       0       0       0       0       0       0
  3658 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3660 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3661 ;;Total ram usage:       14 bytes
  3662 ;; Hardware stack levels used:    1
  3663 ;; Hardware stack levels required when called:    2
  3664 ;; This function calls:
  3665 ;;		Nothing
  3666 ;; This function is called by:
  3667 ;;		_configura_baudrate_uart
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text15
  3672  002614                     __ptext15:
  3673                           	opt stack 0
  3674  002614                     ___aldiv:
  3675                           	opt stack 26
  3676                           
  3677                           ;incstack = 0
  3678  002614  0E00               	movlw	0
  3679  002616  6E1F               	movwf	___aldiv@sign,c
  3680  002618  AE1D               	btfss	___aldiv@divisor+3,7,c
  3681  00261A  D00A               	goto	l7458
  3682  00261C  1E1D               	comf	___aldiv@divisor+3,f,c
  3683  00261E  1E1C               	comf	___aldiv@divisor+2,f,c
  3684  002620  1E1B               	comf	___aldiv@divisor+1,f,c
  3685  002622  6C1A               	negf	___aldiv@divisor,c
  3686  002624  0E00               	movlw	0
  3687  002626  221B               	addwfc	___aldiv@divisor+1,f,c
  3688  002628  221C               	addwfc	___aldiv@divisor+2,f,c
  3689  00262A  221D               	addwfc	___aldiv@divisor+3,f,c
  3690  00262C  0E01               	movlw	1
  3691  00262E  6E1F               	movwf	___aldiv@sign,c
  3692  002630                     l7458:
  3693  002630  AE19               	btfss	___aldiv@dividend+3,7,c
  3694  002632  D00A               	goto	l7464
  3695  002634  1E19               	comf	___aldiv@dividend+3,f,c
  3696  002636  1E18               	comf	___aldiv@dividend+2,f,c
  3697  002638  1E17               	comf	___aldiv@dividend+1,f,c
  3698  00263A  6C16               	negf	___aldiv@dividend,c
  3699  00263C  0E00               	movlw	0
  3700  00263E  2217               	addwfc	___aldiv@dividend+1,f,c
  3701  002640  2218               	addwfc	___aldiv@dividend+2,f,c
  3702  002642  2219               	addwfc	___aldiv@dividend+3,f,c
  3703  002644  0E01               	movlw	1
  3704  002646  1A1F               	xorwf	___aldiv@sign,f,c
  3705  002648                     l7464:
  3706  002648  0E00               	movlw	0
  3707  00264A  6E20               	movwf	___aldiv@quotient,c
  3708  00264C  0E00               	movlw	0
  3709  00264E  6E21               	movwf	___aldiv@quotient+1,c
  3710  002650  0E00               	movlw	0
  3711  002652  6E22               	movwf	___aldiv@quotient+2,c
  3712  002654  0E00               	movlw	0
  3713  002656  6E23               	movwf	___aldiv@quotient+3,c
  3714  002658  501A               	movf	___aldiv@divisor,w,c
  3715  00265A  101B               	iorwf	___aldiv@divisor+1,w,c
  3716  00265C  101C               	iorwf	___aldiv@divisor+2,w,c
  3717  00265E  101D               	iorwf	___aldiv@divisor+3,w,c
  3718  002660  B4D8               	btfsc	status,2,c
  3719  002662  D02A               	goto	l7486
  3720  002664  0E01               	movlw	1
  3721  002666  6E1E               	movwf	___aldiv@counter,c
  3722  002668  D006               	goto	l7472
  3723  00266A                     l7470:
  3724  00266A  90D8               	bcf	status,0,c
  3725  00266C  361A               	rlcf	___aldiv@divisor,f,c
  3726  00266E  361B               	rlcf	___aldiv@divisor+1,f,c
  3727  002670  361C               	rlcf	___aldiv@divisor+2,f,c
  3728  002672  361D               	rlcf	___aldiv@divisor+3,f,c
  3729  002674  2A1E               	incf	___aldiv@counter,f,c
  3730  002676                     l7472:
  3731  002676  AE1D               	btfss	___aldiv@divisor+3,7,c
  3732  002678  D7F8               	goto	l7470
  3733  00267A                     l7474:
  3734  00267A  90D8               	bcf	status,0,c
  3735  00267C  3620               	rlcf	___aldiv@quotient,f,c
  3736  00267E  3621               	rlcf	___aldiv@quotient+1,f,c
  3737  002680  3622               	rlcf	___aldiv@quotient+2,f,c
  3738  002682  3623               	rlcf	___aldiv@quotient+3,f,c
  3739  002684  501A               	movf	___aldiv@divisor,w,c
  3740  002686  5C16               	subwf	___aldiv@dividend,w,c
  3741  002688  501B               	movf	___aldiv@divisor+1,w,c
  3742  00268A  5817               	subwfb	___aldiv@dividend+1,w,c
  3743  00268C  501C               	movf	___aldiv@divisor+2,w,c
  3744  00268E  5818               	subwfb	___aldiv@dividend+2,w,c
  3745  002690  501D               	movf	___aldiv@divisor+3,w,c
  3746  002692  5819               	subwfb	___aldiv@dividend+3,w,c
  3747  002694  A0D8               	btfss	status,0,c
  3748  002696  D009               	goto	l7482
  3749  002698  501A               	movf	___aldiv@divisor,w,c
  3750  00269A  5E16               	subwf	___aldiv@dividend,f,c
  3751  00269C  501B               	movf	___aldiv@divisor+1,w,c
  3752  00269E  5A17               	subwfb	___aldiv@dividend+1,f,c
  3753  0026A0  501C               	movf	___aldiv@divisor+2,w,c
  3754  0026A2  5A18               	subwfb	___aldiv@dividend+2,f,c
  3755  0026A4  501D               	movf	___aldiv@divisor+3,w,c
  3756  0026A6  5A19               	subwfb	___aldiv@dividend+3,f,c
  3757  0026A8  8020               	bsf	___aldiv@quotient,0,c
  3758  0026AA                     l7482:
  3759  0026AA  90D8               	bcf	status,0,c
  3760  0026AC  321D               	rrcf	___aldiv@divisor+3,f,c
  3761  0026AE  321C               	rrcf	___aldiv@divisor+2,f,c
  3762  0026B0  321B               	rrcf	___aldiv@divisor+1,f,c
  3763  0026B2  321A               	rrcf	___aldiv@divisor,f,c
  3764  0026B4  2E1E               	decfsz	___aldiv@counter,f,c
  3765  0026B6  D7E1               	goto	l7474
  3766  0026B8                     l7486:
  3767  0026B8  501F               	movf	___aldiv@sign,w,c
  3768  0026BA  B4D8               	btfsc	status,2,c
  3769  0026BC  D008               	goto	l7490
  3770  0026BE  1E23               	comf	___aldiv@quotient+3,f,c
  3771  0026C0  1E22               	comf	___aldiv@quotient+2,f,c
  3772  0026C2  1E21               	comf	___aldiv@quotient+1,f,c
  3773  0026C4  6C20               	negf	___aldiv@quotient,c
  3774  0026C6  0E00               	movlw	0
  3775  0026C8  2221               	addwfc	___aldiv@quotient+1,f,c
  3776  0026CA  2222               	addwfc	___aldiv@quotient+2,f,c
  3777  0026CC  2223               	addwfc	___aldiv@quotient+3,f,c
  3778  0026CE                     l7490:
  3779  0026CE  C020  F016         	movff	___aldiv@quotient,?___aldiv
  3780  0026D2  C021  F017         	movff	___aldiv@quotient+1,?___aldiv+1
  3781  0026D6  C022  F018         	movff	___aldiv@quotient+2,?___aldiv+2
  3782  0026DA  C023  F019         	movff	___aldiv@quotient+3,?___aldiv+3
  3783  0026DE  0012               	return	
  3784  0026E0                     __end_of___aldiv:
  3785                           	opt stack 0
  3786                           tblptru	equ	0xFF8
  3787                           tblptrh	equ	0xFF7
  3788                           tblptrl	equ	0xFF6
  3789                           tablat	equ	0xFF5
  3790                           prodh	equ	0xFF4
  3791                           prodl	equ	0xFF3
  3792                           intcon	equ	0xFF2
  3793                           intcon2	equ	0xFF1
  3794                           intcon3	equ	0xFF0
  3795                           postinc0	equ	0xFEE
  3796                           wreg	equ	0xFE8
  3797                           postdec1	equ	0xFE5
  3798                           fsr1h	equ	0xFE2
  3799                           fsr1l	equ	0xFE1
  3800                           postinc2	equ	0xFDE
  3801                           postdec2	equ	0xFDD
  3802                           fsr2h	equ	0xFDA
  3803                           fsr2l	equ	0xFD9
  3804                           status	equ	0xFD8
  3805                           
  3806 ;; *************** function _inicializa_tarefas *****************
  3807 ;; Defined at:
  3808 ;;		line 157 in file "main.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, status,2, status,0
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3822 ;;      Params:         0       0       0       0       0       0       0       0       0
  3823 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3824 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3825 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3826 ;;Total ram usage:        0 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    2
  3829 ;; This function calls:
  3830 ;;		Nothing
  3831 ;; This function is called by:
  3832 ;;		_main
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text16
  3837  003442                     __ptext16:
  3838                           	opt stack 0
  3839  003442                     _inicializa_tarefas:
  3840                           	opt stack 28
  3841                           
  3842                           ;main.c: 160: p_tarefas[0] = gps;
  3843                           
  3844                           ;incstack = 0
  3845  003442  0E76               	movlw	low _gps
  3846  003444  0100               	movlb	0	; () banked
  3847  003446  6FCF               	movwf	_p_tarefas& (0+255),b
  3848  003448  0E16               	movlw	high _gps
  3849  00344A  0100               	movlb	0	; () banked
  3850  00344C  6FD0               	movwf	(_p_tarefas+1)& (0+255),b
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;main.c: 164: tempo_backup[0] = 5000;
  3854  00344E  0E13               	movlw	19
  3855  003450  0100               	movlb	0	; () banked
  3856  003452  6FCC               	movwf	(_tempo_backup+1)& (0+255),b
  3857  003454  0E88               	movlw	136
  3858  003456  6FCB               	movwf	_tempo_backup& (0+255),b
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;main.c: 169: tempo_tarefa[0] = 5000;
  3862  003458  0E13               	movlw	19
  3863  00345A  0100               	movlb	0	; () banked
  3864  00345C  6FC8               	movwf	(_tempo_tarefa+1)& (0+255),b
  3865  00345E  0E88               	movlw	136
  3866  003460  6FC7               	movwf	_tempo_tarefa& (0+255),b
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;main.c: 173: tarefa_em_execucao = 0;
  3870  003462  0E00               	movlw	0
  3871  003464  6E47               	movwf	_tarefa_em_execucao,c	;volatile
  3872                           
  3873                           ; BSR set to: 0
  3874  003466  0012               	return		;funcret
  3875  003468                     __end_of_inicializa_tarefas:
  3876                           	opt stack 0
  3877                           tblptru	equ	0xFF8
  3878                           tblptrh	equ	0xFF7
  3879                           tblptrl	equ	0xFF6
  3880                           tablat	equ	0xFF5
  3881                           prodh	equ	0xFF4
  3882                           prodl	equ	0xFF3
  3883                           intcon	equ	0xFF2
  3884                           intcon2	equ	0xFF1
  3885                           intcon3	equ	0xFF0
  3886                           postinc0	equ	0xFEE
  3887                           wreg	equ	0xFE8
  3888                           postdec1	equ	0xFE5
  3889                           fsr1h	equ	0xFE2
  3890                           fsr1l	equ	0xFE1
  3891                           postinc2	equ	0xFDE
  3892                           postdec2	equ	0xFDD
  3893                           fsr2h	equ	0xFDA
  3894                           fsr2l	equ	0xFD9
  3895                           status	equ	0xFD8
  3896                           
  3897 ;; *************** function _inicializa_shrc *****************
  3898 ;; Defined at:
  3899 ;;		line 47 in file "bibliotecas/SHRC.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;		None
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;		None
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  1    wreg      void 
  3906 ;; Registers used:
  3907 ;;		None
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3913 ;;      Params:         0       0       0       0       0       0       0       0       0
  3914 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3915 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3916 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3917 ;;Total ram usage:        0 bytes
  3918 ;; Hardware stack levels used:    1
  3919 ;; Hardware stack levels required when called:    2
  3920 ;; This function calls:
  3921 ;;		Nothing
  3922 ;; This function is called by:
  3923 ;;		_main
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927                           	psect	text17
  3928  00361A                     __ptext17:
  3929                           	opt stack 0
  3930  00361A                     _inicializa_shrc:
  3931                           	opt stack 28
  3932                           
  3933                           ;SHRC.c: 49: LATBbits.LATB5 = 0;
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;incstack = 0
  3937  00361A  9A8A               	bcf	3978,5,c	;volatile
  3938                           
  3939                           ;SHRC.c: 50: LATBbits.LATB6 = 0;
  3940  00361C  9C8A               	bcf	3978,6,c	;volatile
  3941                           
  3942                           ;SHRC.c: 51: LATBbits.LATB7 = 0;
  3943  00361E  9E8A               	bcf	3978,7,c	;volatile
  3944  003620  0012               	return		;funcret
  3945  003622                     __end_of_inicializa_shrc:
  3946                           	opt stack 0
  3947                           tblptru	equ	0xFF8
  3948                           tblptrh	equ	0xFF7
  3949                           tblptrl	equ	0xFF6
  3950                           tablat	equ	0xFF5
  3951                           prodh	equ	0xFF4
  3952                           prodl	equ	0xFF3
  3953                           intcon	equ	0xFF2
  3954                           intcon2	equ	0xFF1
  3955                           intcon3	equ	0xFF0
  3956                           postinc0	equ	0xFEE
  3957                           wreg	equ	0xFE8
  3958                           postdec1	equ	0xFE5
  3959                           fsr1h	equ	0xFE2
  3960                           fsr1l	equ	0xFE1
  3961                           postinc2	equ	0xFDE
  3962                           postdec2	equ	0xFDD
  3963                           fsr2h	equ	0xFDA
  3964                           fsr2l	equ	0xFD9
  3965                           status	equ	0xFD8
  3966                           
  3967 ;; *************** function _escalonador *****************
  3968 ;; Defined at:
  3969 ;;		line 184 in file "main.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;		None
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  cont            1   91[BANK0 ] unsigned char 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      void 
  3976 ;; Registers used:
  3977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3983 ;;      Params:         0       0       0       0       0       0       0       0       0
  3984 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3985 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3986 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3987 ;;Total ram usage:        3 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    8
  3990 ;; This function calls:
  3991 ;;		_gps
  3992 ;; This function is called by:
  3993 ;;		_main
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text18
  3998  0026E0                     __ptext18:
  3999                           	opt stack 0
  4000  0026E0                     _escalonador:
  4001                           	opt stack 22
  4002                           
  4003                           ;main.c: 186: unsigned char cont;
  4004                           ;main.c: 187: for(cont = 0; cont<2;cont++)
  4005                           
  4006                           ;incstack = 0
  4007  0026E0  0E00               	movlw	0
  4008  0026E2  0100               	movlb	0	; () banked
  4009  0026E4  6FBB               	movwf	escalonador@cont& (0+255),b
  4010  0026E6                     l10886:
  4011                           
  4012                           ; BSR set to: 0
  4013  0026E6  0E01               	movlw	1
  4014  0026E8  0100               	movlb	0	; () banked
  4015  0026EA  65BB               	cpfsgt	escalonador@cont& (0+255),b
  4016  0026EC  D001               	goto	l10890
  4017  0026EE  0012               	return	
  4018  0026F0                     l10890:
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;main.c: 188: {
  4022                           ;main.c: 189: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  4023  0026F0  0100               	movlb	0	; () banked
  4024  0026F2  51BB               	movf	escalonador@cont& (0+255),w,b
  4025  0026F4  0D02               	mullw	2
  4026  0026F6  0ECF               	movlw	low _p_tarefas
  4027  0026F8  24F3               	addwf	prodl,w,c
  4028  0026FA  6ED9               	movwf	fsr2l,c
  4029  0026FC  0E00               	movlw	high _p_tarefas
  4030  0026FE  20F4               	addwfc	prodh,w,c
  4031  002700  6EDA               	movwf	fsr2h,c
  4032  002702  50DE               	movf	postinc2,w,c
  4033  002704  10DE               	iorwf	postinc2,w,c
  4034  002706  B4D8               	btfsc	status,2,c
  4035  002708  D041               	goto	l10902
  4036                           
  4037                           ; BSR set to: 0
  4038  00270A  0100               	movlb	0	; () banked
  4039  00270C  51BB               	movf	escalonador@cont& (0+255),w,b
  4040  00270E  0D02               	mullw	2
  4041  002710  0EC7               	movlw	low _tempo_tarefa
  4042  002712  24F3               	addwf	prodl,w,c
  4043  002714  6ED9               	movwf	fsr2l,c
  4044  002716  0E00               	movlw	high _tempo_tarefa
  4045  002718  20F4               	addwfc	prodh,w,c
  4046  00271A  6EDA               	movwf	fsr2h,c
  4047  00271C  50DE               	movf	postinc2,w,c
  4048  00271E  10DE               	iorwf	postinc2,w,c
  4049  002720  A4D8               	btfss	status,2,c
  4050  002722  D034               	goto	l10902
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;main.c: 190: {
  4054                           ;main.c: 191: tarefa_em_execucao = 1;
  4055  002724  0E01               	movlw	1
  4056  002726  6E47               	movwf	_tarefa_em_execucao,c	;volatile
  4057                           
  4058                           ;main.c: 192: timeout_tarefa = 65000;
  4059  002728  0EFD               	movlw	253
  4060  00272A  0100               	movlb	0	; () banked
  4061  00272C  6FDB               	movwf	(_timeout_tarefa+1)& (0+255),b
  4062  00272E  0EE8               	movlw	232
  4063  002730  6FDA               	movwf	_timeout_tarefa& (0+255),b
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;main.c: 193: p_tarefas[cont]();
  4067  002732  0100               	movlb	0	; () banked
  4068  002734  51BB               	movf	escalonador@cont& (0+255),w,b
  4069  002736  0D02               	mullw	2
  4070  002738  0ECF               	movlw	low _p_tarefas
  4071  00273A  24F3               	addwf	prodl,w,c
  4072  00273C  6ED9               	movwf	fsr2l,c
  4073  00273E  0E00               	movlw	high _p_tarefas
  4074  002740  20F4               	addwfc	prodh,w,c
  4075  002742  6EDA               	movwf	fsr2h,c
  4076  002744  D801               	call	u13168
  4077  002746  D00A               	goto	l10898
  4078  002748                     u13168:
  4079  002748  0005               	push	
  4080  00274A  6EFA               	movwf	pclath,c
  4081  00274C  50DE               	movf	postinc2,w,c
  4082  00274E  6EFD               	movwf	tosl,c
  4083  002750  50DE               	movf	postinc2,w,c
  4084  002752  6EFE               	movwf	tosh,c
  4085  002754  50F8               	movf	tblptru,w,c
  4086  002756  6EFF               	movwf	tosu,c
  4087  002758  50FA               	movf	pclath,w,c
  4088  00275A  0012               	return		;indir
  4089  00275C                     l10898:
  4090                           
  4091                           ;main.c: 194: tarefa_em_execucao = 0;
  4092  00275C  0E00               	movlw	0
  4093  00275E  6E47               	movwf	_tarefa_em_execucao,c	;volatile
  4094                           
  4095                           ;main.c: 195: tempo_tarefa[cont] = tempo_backup[cont];
  4096  002760  0100               	movlb	0	; () banked
  4097  002762  51BB               	movf	escalonador@cont& (0+255),w,b
  4098  002764  0D02               	mullw	2
  4099  002766  0ECB               	movlw	low _tempo_backup
  4100  002768  24F3               	addwf	prodl,w,c
  4101  00276A  6ED9               	movwf	fsr2l,c
  4102  00276C  0E00               	movlw	high _tempo_backup
  4103  00276E  20F4               	addwfc	prodh,w,c
  4104  002770  6EDA               	movwf	fsr2h,c
  4105  002772  0100               	movlb	0	; () banked
  4106  002774  51BB               	movf	escalonador@cont& (0+255),w,b
  4107  002776  0D02               	mullw	2
  4108  002778  0EC7               	movlw	low _tempo_tarefa
  4109  00277A  24F3               	addwf	prodl,w,c
  4110  00277C  6EE1               	movwf	fsr1l,c
  4111  00277E  0E00               	movlw	high _tempo_tarefa
  4112  002780  20F4               	addwfc	prodh,w,c
  4113  002782  6EE2               	movwf	fsr1h,c
  4114  002784  CFDE FFE6          	movff	postinc2,postinc1
  4115  002788  CFDD FFE5          	movff	postdec2,postdec1
  4116  00278C                     l10902:
  4117                           
  4118                           ; BSR set to: 0
  4119  00278C  0100               	movlb	0	; () banked
  4120  00278E  2BBB               	incf	escalonador@cont& (0+255),f,b
  4121  002790  D7AA               	goto	l10886
  4122  002792                     __end_of_escalonador:
  4123                           	opt stack 0
  4124                           tosu	equ	0xFFF
  4125                           tosh	equ	0xFFE
  4126                           tosl	equ	0xFFD
  4127                           pclath	equ	0xFFA
  4128                           tblptru	equ	0xFF8
  4129                           tblptrh	equ	0xFF7
  4130                           tblptrl	equ	0xFF6
  4131                           tablat	equ	0xFF5
  4132                           prodh	equ	0xFF4
  4133                           prodl	equ	0xFF3
  4134                           intcon	equ	0xFF2
  4135                           intcon2	equ	0xFF1
  4136                           intcon3	equ	0xFF0
  4137                           postinc0	equ	0xFEE
  4138                           wreg	equ	0xFE8
  4139                           postinc1	equ	0xFE6
  4140                           postdec1	equ	0xFE5
  4141                           fsr1h	equ	0xFE2
  4142                           fsr1l	equ	0xFE1
  4143                           postinc2	equ	0xFDE
  4144                           postdec2	equ	0xFDD
  4145                           fsr2h	equ	0xFDA
  4146                           fsr2l	equ	0xFD9
  4147                           status	equ	0xFD8
  4148                           
  4149 ;; *************** function _gps *****************
  4150 ;; Defined at:
  4151 ;;		line 52 in file "bibliotecas/GPS.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;		None
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;  data_out       34    0        unsigned char [34]
  4156 ;;  gps_buffer     15    4[BANK1 ] unsigned char [15]
  4157 ;;  time            4   19[BANK1 ] unsigned long 
  4158 ;;  date            4    0[BANK1 ] unsigned long 
  4159 ;;  longitude       3   26[BANK1 ] float 
  4160 ;;  latitude        3   23[BANK1 ] float 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      void 
  4163 ;; Registers used:
  4164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4170 ;;      Params:         0       0       0       0       0       0       0       0       0
  4171 ;;      Locals:         0       0      29       0       0       0       0       0       0
  4172 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4173 ;;      Totals:         0       2      29       0       0       0       0       0       0
  4174 ;;Total ram usage:       31 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    7
  4177 ;; This function calls:
  4178 ;;		_convert_time_to_utc
  4179 ;;		_convert_to_degrees
  4180 ;;		_escreve_cmd_lcd
  4181 ;;		_escreve_frase_ram_lcd
  4182 ;;		_get_dt
  4183 ;;		_get_gpstime
  4184 ;;		_get_latitude
  4185 ;;		_get_longitude
  4186 ;;		_memset
  4187 ;;		_posicao_cursor_lcd
  4188 ;;		_sprintf
  4189 ;; This function is called by:
  4190 ;;		_inicializa_tarefas
  4191 ;;		_escalonador
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text19
  4196  001676                     __ptext19:
  4197                           	opt stack 0
  4198  001676                     _gps:
  4199                           	opt stack 22
  4200                           
  4201                           ;GPS.c: 54: unsigned char data_out[34];
  4202                           ;GPS.c: 55: unsigned long int time;
  4203                           ;GPS.c: 56: unsigned long int date;
  4204                           ;GPS.c: 57: float latitude, longitude;
  4205                           ;GPS.c: 58: char gps_buffer[15];
  4206                           ;GPS.c: 62: time = get_gpstime();
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;incstack = 0
  4210  001676  ECC0  F016         	call	_get_gpstime	;wreg free
  4211  00167A  C030  F1EC         	movff	?_get_gpstime,gps@time
  4212  00167E  C031  F1ED         	movff	?_get_gpstime+1,gps@time+1
  4213  001682  C032  F1EE         	movff	?_get_gpstime+2,gps@time+2
  4214  001686  C033  F1EF         	movff	?_get_gpstime+3,gps@time+3
  4215                           
  4216                           ;GPS.c: 63: convert_time_to_utc(time);
  4217  00168A  C1EC  F0A9         	movff	gps@time,convert_time_to_utc@utc_time
  4218  00168E  C1ED  F0AA         	movff	gps@time+1,convert_time_to_utc@utc_time+1
  4219  001692  C1EE  F0AB         	movff	gps@time+2,convert_time_to_utc@utc_time+2
  4220  001696  C1EF  F0AC         	movff	gps@time+3,convert_time_to_utc@utc_time+3
  4221  00169A  EC02  F011         	call	_convert_time_to_utc	;wreg free
  4222                           
  4223                           ;GPS.c: 64: posicao_cursor_lcd(1,0);
  4224  00169E  0E00               	movlw	0
  4225  0016A0  6E19               	movwf	posicao_cursor_lcd@coluna,c
  4226  0016A2  0E01               	movlw	1
  4227  0016A4  EC73  F017         	call	_posicao_cursor_lcd
  4228                           
  4229                           ;GPS.c: 65: escreve_frase_ram_lcd("Hora:");
  4230  0016A8  0E51               	movlw	low STR_3
  4231  0016AA  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  4232  0016AC  0E62               	movlw	high STR_3
  4233  0016AE  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  4234  0016B0  EC0B  F019         	call	_escreve_frase_ram_lcd	;wreg free
  4235                           
  4236                           ;GPS.c: 66: posicao_cursor_lcd(1,7);
  4237  0016B4  0E07               	movlw	7
  4238  0016B6  6E19               	movwf	posicao_cursor_lcd@coluna,c
  4239  0016B8  0E01               	movlw	1
  4240  0016BA  EC73  F017         	call	_posicao_cursor_lcd
  4241                           
  4242                           ;GPS.c: 67: escreve_frase_ram_lcd(data_buffer);
  4243  0016BE  0ECA               	movlw	low _data_buffer
  4244  0016C0  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  4245  0016C2  0E01               	movlw	high _data_buffer
  4246  0016C4  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  4247  0016C6  EC0B  F019         	call	_escreve_frase_ram_lcd	;wreg free
  4248                           
  4249                           ;GPS.c: 70: date = get_dt(rmc_pointers[7]);
  4250  0016CA  0101               	movlb	1	; () banked
  4251  0016CC  51A5               	movf	(_rmc_pointers+7)& (0+255),w,b
  4252  0016CE  EC18  F018         	call	_get_dt
  4253  0016D2  C01C  F1D9         	movff	?_get_dt,gps@date
  4254  0016D6  C01D  F1DA         	movff	?_get_dt+1,gps@date+1
  4255  0016DA  C01E  F1DB         	movff	?_get_dt+2,gps@date+2
  4256  0016DE  C01F  F1DC         	movff	?_get_dt+3,gps@date+3
  4257                           
  4258                           ;GPS.c: 74: posicao_cursor_lcd(2,0);
  4259  0016E2  0E00               	movlw	0
  4260  0016E4  6E19               	movwf	posicao_cursor_lcd@coluna,c
  4261  0016E6  0E02               	movlw	2
  4262  0016E8  EC73  F017         	call	_posicao_cursor_lcd
  4263                           
  4264                           ;GPS.c: 75: escreve_frase_ram_lcd("Data:");
  4265  0016EC  0E57               	movlw	low STR_4
  4266  0016EE  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  4267  0016F0  0E62               	movlw	high STR_4
  4268  0016F2  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  4269  0016F4  EC0B  F019         	call	_escreve_frase_ram_lcd	;wreg free
  4270                           
  4271                           ;GPS.c: 77: posicao_cursor_lcd(2,7);
  4272  0016F8  0E07               	movlw	7
  4273  0016FA  6E19               	movwf	posicao_cursor_lcd@coluna,c
  4274  0016FC  0E02               	movlw	2
  4275  0016FE  EC73  F017         	call	_posicao_cursor_lcd
  4276                           
  4277                           ;GPS.c: 78: escreve_frase_ram_lcd(dado_buffer);
  4278  001702  0EDE               	movlw	low _dado_buffer
  4279  001704  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  4280  001706  0E00               	movlw	high _dado_buffer
  4281  001708  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  4282  00170A  EC0B  F019         	call	_escreve_frase_ram_lcd	;wreg free
  4283                           
  4284                           ;GPS.c: 81: _delay((unsigned long)((2000)*(48000000/4000.0)));
  4285  00170E  0E7A               	movlw	122
  4286  001710  0100               	movlb	0	; () banked
  4287  001712  6FB8               	movwf	(??_gps+1)& (0+255),b
  4288  001714  0EC1               	movlw	193
  4289  001716  0100               	movlb	0	; () banked
  4290  001718  6FB7               	movwf	??_gps& (0+255),b
  4291  00171A  0E81               	movlw	129
  4292  00171C                     u14607:
  4293  00171C  2EE8               	decfsz	wreg,f,c
  4294  00171E  D7FE               	bra	u14607
  4295  001720  2FB7               	decfsz	??_gps& (0+255),f,b
  4296  001722  D7FC               	bra	u14607
  4297  001724  2FB8               	decfsz	(??_gps+1)& (0+255),f,b
  4298  001726  D7FA               	bra	u14607
  4299  001728  D000               	nop2	
  4300                           
  4301                           ;GPS.c: 82: escreve_cmd_lcd(0b00000001);
  4302  00172A  0E01               	movlw	1
  4303  00172C  ECF7  F015         	call	_escreve_cmd_lcd
  4304                           
  4305                           ;GPS.c: 85: latitude = get_latitude(gga_pointers[0]);
  4306  001730  0101               	movlb	1	; () banked
  4307  001732  518A               	movf	_gga_pointers& (0+255),w,b
  4308  001734  ECC5  F014         	call	_get_latitude
  4309  001738  C077  F1F0         	movff	?_get_latitude,gps@latitude
  4310  00173C  C078  F1F1         	movff	?_get_latitude+1,gps@latitude+1
  4311  001740  C079  F1F2         	movff	?_get_latitude+2,gps@latitude+2
  4312                           
  4313                           ;GPS.c: 86: latitude = convert_to_degrees(latitude);
  4314  001744  C1F0  F07C         	movff	gps@latitude,convert_to_degrees@nmea_lat_long
  4315  001748  C1F1  F07D         	movff	gps@latitude+1,convert_to_degrees@nmea_lat_long+1
  4316  00174C  C1F2  F07E         	movff	gps@latitude+2,convert_to_degrees@nmea_lat_long+2
  4317  001750  ECEC  F00C         	call	_convert_to_degrees	;wreg free
  4318  001754  C07C  F1F0         	movff	?_convert_to_degrees,gps@latitude
  4319  001758  C07D  F1F1         	movff	?_convert_to_degrees+1,gps@latitude+1
  4320  00175C  C07E  F1F2         	movff	?_convert_to_degrees+2,gps@latitude+2
  4321                           
  4322                           ;GPS.c: 87: sprintf(gps_buffer,"%.07f",latitude);
  4323  001760  0EDD               	movlw	low gps@gps_buffer
  4324  001762  0100               	movlb	0	; () banked
  4325  001764  6F82               	movwf	sprintf@sp& (0+255),b
  4326  001766  0E01               	movlw	high gps@gps_buffer
  4327  001768  0100               	movlb	0	; () banked
  4328  00176A  6F83               	movwf	(sprintf@sp+1)& (0+255),b
  4329  00176C  0E5D               	movlw	low STR_5
  4330  00176E  0100               	movlb	0	; () banked
  4331  001770  6F84               	movwf	sprintf@f& (0+255),b
  4332  001772  0E62               	movlw	high STR_5
  4333  001774  0100               	movlb	0	; () banked
  4334  001776  6F85               	movwf	(sprintf@f+1)& (0+255),b
  4335  001778  C1F0  F086         	movff	gps@latitude,?_sprintf+4
  4336  00177C  C1F1  F087         	movff	gps@latitude+1,?_sprintf+5
  4337  001780  C1F2  F088         	movff	gps@latitude+2,?_sprintf+6
  4338  001784  EC09  F000         	call	_sprintf	;wreg free
  4339                           
  4340                           ;GPS.c: 90: posicao_cursor_lcd(1,0);
  4341  001788  0E00               	movlw	0
  4342  00178A  6E19               	movwf	posicao_cursor_lcd@coluna,c
  4343  00178C  0E01               	movlw	1
  4344  00178E  EC73  F017         	call	_posicao_cursor_lcd
  4345                           
  4346                           ;GPS.c: 91: escreve_frase_ram_lcd("Lat:");
  4347  001792  0E6E               	movlw	low STR_6
  4348  001794  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  4349  001796  0E62               	movlw	high STR_6
  4350  001798  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  4351  00179A  EC0B  F019         	call	_escreve_frase_ram_lcd	;wreg free
  4352                           
  4353                           ;GPS.c: 92: posicao_cursor_lcd(1,5);
  4354  00179E  0E05               	movlw	5
  4355  0017A0  6E19               	movwf	posicao_cursor_lcd@coluna,c
  4356  0017A2  0E01               	movlw	1
  4357  0017A4  EC73  F017         	call	_posicao_cursor_lcd
  4358                           
  4359                           ;GPS.c: 93: escreve_frase_ram_lcd(gps_buffer);
  4360  0017A8  0EDD               	movlw	low gps@gps_buffer
  4361  0017AA  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  4362  0017AC  0E01               	movlw	high gps@gps_buffer
  4363  0017AE  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  4364  0017B0  EC0B  F019         	call	_escreve_frase_ram_lcd	;wreg free
  4365                           
  4366                           ;GPS.c: 94: memset(gps_buffer,0,15);
  4367  0017B4  0EDD               	movlw	low gps@gps_buffer
  4368  0017B6  6E16               	movwf	memset@p1,c
  4369  0017B8  0E01               	movlw	high gps@gps_buffer
  4370  0017BA  6E17               	movwf	memset@p1+1,c
  4371  0017BC  0E00               	movlw	0
  4372  0017BE  6E19               	movwf	memset@c+1,c
  4373  0017C0  0E00               	movlw	0
  4374  0017C2  6E18               	movwf	memset@c,c
  4375  0017C4  0E00               	movlw	0
  4376  0017C6  6E1B               	movwf	memset@n+1,c
  4377  0017C8  0E0F               	movlw	15
  4378  0017CA  6E1A               	movwf	memset@n,c
  4379  0017CC  EC0B  F01A         	call	_memset	;wreg free
  4380                           
  4381                           ;GPS.c: 99: longitude = get_longitude(gga_pointers[2]);
  4382  0017D0  0101               	movlb	1	; () banked
  4383  0017D2  518C               	movf	(_gga_pointers+2)& (0+255),w,b
  4384  0017D4  EC73  F014         	call	_get_longitude
  4385  0017D8  C077  F1F3         	movff	?_get_longitude,gps@longitude
  4386  0017DC  C078  F1F4         	movff	?_get_longitude+1,gps@longitude+1
  4387  0017E0  C079  F1F5         	movff	?_get_longitude+2,gps@longitude+2
  4388                           
  4389                           ;GPS.c: 100: longitude = convert_to_degrees(longitude);
  4390  0017E4  C1F3  F07C         	movff	gps@longitude,convert_to_degrees@nmea_lat_long
  4391  0017E8  C1F4  F07D         	movff	gps@longitude+1,convert_to_degrees@nmea_lat_long+1
  4392  0017EC  C1F5  F07E         	movff	gps@longitude+2,convert_to_degrees@nmea_lat_long+2
  4393  0017F0  ECEC  F00C         	call	_convert_to_degrees	;wreg free
  4394  0017F4  C07C  F1F3         	movff	?_convert_to_degrees,gps@longitude
  4395  0017F8  C07D  F1F4         	movff	?_convert_to_degrees+1,gps@longitude+1
  4396  0017FC  C07E  F1F5         	movff	?_convert_to_degrees+2,gps@longitude+2
  4397                           
  4398                           ;GPS.c: 101: sprintf(gps_buffer,"%.07f",longitude);
  4399  001800  0EDD               	movlw	low gps@gps_buffer
  4400  001802  0100               	movlb	0	; () banked
  4401  001804  6F82               	movwf	sprintf@sp& (0+255),b
  4402  001806  0E01               	movlw	high gps@gps_buffer
  4403  001808  0100               	movlb	0	; () banked
  4404  00180A  6F83               	movwf	(sprintf@sp+1)& (0+255),b
  4405  00180C  0E5D               	movlw	low STR_5
  4406  00180E  0100               	movlb	0	; () banked
  4407  001810  6F84               	movwf	sprintf@f& (0+255),b
  4408  001812  0E62               	movlw	high STR_5
  4409  001814  0100               	movlb	0	; () banked
  4410  001816  6F85               	movwf	(sprintf@f+1)& (0+255),b
  4411  001818  C1F3  F086         	movff	gps@longitude,?_sprintf+4
  4412  00181C  C1F4  F087         	movff	gps@longitude+1,?_sprintf+5
  4413  001820  C1F5  F088         	movff	gps@longitude+2,?_sprintf+6
  4414  001824  EC09  F000         	call	_sprintf	;wreg free
  4415                           
  4416                           ;GPS.c: 103: posicao_cursor_lcd(2,0);
  4417  001828  0E00               	movlw	0
  4418  00182A  6E19               	movwf	posicao_cursor_lcd@coluna,c
  4419  00182C  0E02               	movlw	2
  4420  00182E  EC73  F017         	call	_posicao_cursor_lcd
  4421                           
  4422                           ;GPS.c: 104: escreve_frase_ram_lcd("Lon:");
  4423  001832  0E69               	movlw	low STR_8
  4424  001834  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  4425  001836  0E62               	movlw	high STR_8
  4426  001838  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  4427  00183A  EC0B  F019         	call	_escreve_frase_ram_lcd	;wreg free
  4428                           
  4429                           ;GPS.c: 105: posicao_cursor_lcd(2,5);
  4430  00183E  0E05               	movlw	5
  4431  001840  6E19               	movwf	posicao_cursor_lcd@coluna,c
  4432  001842  0E02               	movlw	2
  4433  001844  EC73  F017         	call	_posicao_cursor_lcd
  4434                           
  4435                           ;GPS.c: 106: escreve_frase_ram_lcd(gps_buffer);
  4436  001848  0EDD               	movlw	low gps@gps_buffer
  4437  00184A  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  4438  00184C  0E01               	movlw	high gps@gps_buffer
  4439  00184E  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  4440  001850  EC0B  F019         	call	_escreve_frase_ram_lcd	;wreg free
  4441                           
  4442                           ;GPS.c: 107: memset(gps_buffer,0,15);
  4443  001854  0EDD               	movlw	low gps@gps_buffer
  4444  001856  6E16               	movwf	memset@p1,c
  4445  001858  0E01               	movlw	high gps@gps_buffer
  4446  00185A  6E17               	movwf	memset@p1+1,c
  4447  00185C  0E00               	movlw	0
  4448  00185E  6E19               	movwf	memset@c+1,c
  4449  001860  0E00               	movlw	0
  4450  001862  6E18               	movwf	memset@c,c
  4451  001864  0E00               	movlw	0
  4452  001866  6E1B               	movwf	memset@n+1,c
  4453  001868  0E0F               	movlw	15
  4454  00186A  6E1A               	movwf	memset@n,c
  4455  00186C  EC0B  F01A         	call	_memset	;wreg free
  4456                           
  4457                           ;GPS.c: 109: _delay((unsigned long)((2000)*(48000000/4000.0)));
  4458  001870  0E7A               	movlw	122
  4459  001872  0100               	movlb	0	; () banked
  4460  001874  6FB8               	movwf	(??_gps+1)& (0+255),b
  4461  001876  0EC1               	movlw	193
  4462  001878  0100               	movlb	0	; () banked
  4463  00187A  6FB7               	movwf	??_gps& (0+255),b
  4464  00187C  0E81               	movlw	129
  4465  00187E                     u14617:
  4466  00187E  2EE8               	decfsz	wreg,f,c
  4467  001880  D7FE               	bra	u14617
  4468  001882  2FB7               	decfsz	??_gps& (0+255),f,b
  4469  001884  D7FC               	bra	u14617
  4470  001886  2FB8               	decfsz	(??_gps+1)& (0+255),f,b
  4471  001888  D7FA               	bra	u14617
  4472  00188A  D000               	nop2	
  4473                           
  4474                           ;GPS.c: 110: escreve_cmd_lcd(0b00000001);
  4475  00188C  0E01               	movlw	1
  4476  00188E  ECF7  F015         	call	_escreve_cmd_lcd
  4477  001892  0012               	return		;funcret
  4478  001894                     __end_of_gps:
  4479                           	opt stack 0
  4480                           tosu	equ	0xFFF
  4481                           tosh	equ	0xFFE
  4482                           tosl	equ	0xFFD
  4483                           pclath	equ	0xFFA
  4484                           tblptru	equ	0xFF8
  4485                           tblptrh	equ	0xFF7
  4486                           tblptrl	equ	0xFF6
  4487                           tablat	equ	0xFF5
  4488                           prodh	equ	0xFF4
  4489                           prodl	equ	0xFF3
  4490                           intcon	equ	0xFF2
  4491                           intcon2	equ	0xFF1
  4492                           intcon3	equ	0xFF0
  4493                           postinc0	equ	0xFEE
  4494                           wreg	equ	0xFE8
  4495                           postinc1	equ	0xFE6
  4496                           postdec1	equ	0xFE5
  4497                           fsr1h	equ	0xFE2
  4498                           fsr1l	equ	0xFE1
  4499                           postinc2	equ	0xFDE
  4500                           postdec2	equ	0xFDD
  4501                           fsr2h	equ	0xFDA
  4502                           fsr2l	equ	0xFD9
  4503                           status	equ	0xFD8
  4504                           
  4505 ;; *************** function _posicao_cursor_lcd *****************
  4506 ;; Defined at:
  4507 ;;		line 271 in file "bibliotecas/display_lcd.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  linha           1    wreg     unsigned char 
  4510 ;;  coluna          1   24[COMRAM] unsigned char 
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;  linha           1   25[COMRAM] unsigned char 
  4513 ;;  endereco        1   26[COMRAM] unsigned char 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1    wreg      void 
  4516 ;; Registers used:
  4517 ;;		wreg, status,2, status,0, cstack
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4523 ;;      Params:         1       0       0       0       0       0       0       0       0
  4524 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4526 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4527 ;;Total ram usage:        3 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; Hardware stack levels required when called:    4
  4530 ;; This function calls:
  4531 ;;		_endereco_cursor_lcd
  4532 ;; This function is called by:
  4533 ;;		_mensagem_inicial
  4534 ;;		_gps
  4535 ;;		_SDCard
  4536 ;;		_inicializa_SPI
  4537 ;;		_leitura_chave
  4538 ;;		_disk_initialize
  4539 ;;		_disk_readp
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text20
  4544  002EE6                     __ptext20:
  4545                           	opt stack 0
  4546  002EE6                     _posicao_cursor_lcd:
  4547                           	opt stack 25
  4548                           
  4549                           ;incstack = 0
  4550                           ;posicao_cursor_lcd@linha stored from wreg
  4551  002EE6  6E1A               	movwf	posicao_cursor_lcd@linha,c
  4552                           
  4553                           ;display_lcd.c: 273: unsigned char endereco = 0x00;
  4554  002EE8  0E00               	movlw	0
  4555  002EEA  6E1B               	movwf	posicao_cursor_lcd@endereco,c
  4556                           
  4557                           ;display_lcd.c: 275: if(coluna <= 0x10U)
  4558  002EEC  0E11               	movlw	17
  4559  002EEE  6019               	cpfslt	posicao_cursor_lcd@coluna,c
  4560  002EF0  D02F               	goto	l10512
  4561  002EF2  D01E               	goto	l10508
  4562  002EF4                     l688:
  4563                           
  4564                           ;display_lcd.c: 282: endereco = 0x00U + coluna;
  4565  002EF4  C019  F01B         	movff	posicao_cursor_lcd@coluna,posicao_cursor_lcd@endereco
  4566                           
  4567                           ;display_lcd.c: 283: endereco_cursor_lcd(endereco);
  4568  002EF8  501B               	movf	posicao_cursor_lcd@endereco,w,c
  4569  002EFA  ECE3  F017         	call	_endereco_cursor_lcd
  4570                           
  4571                           ;display_lcd.c: 284: break;
  4572  002EFE  D026               	goto	l10510
  4573  002F00                     l10492:
  4574                           
  4575                           ;display_lcd.c: 287: endereco = 0x40U + coluna;
  4576  002F00  5019               	movf	posicao_cursor_lcd@coluna,w,c
  4577  002F02  0F40               	addlw	64
  4578  002F04  6E1B               	movwf	posicao_cursor_lcd@endereco,c
  4579                           
  4580                           ;display_lcd.c: 288: endereco_cursor_lcd(endereco);
  4581  002F06  501B               	movf	posicao_cursor_lcd@endereco,w,c
  4582  002F08  ECE3  F017         	call	_endereco_cursor_lcd
  4583                           
  4584                           ;display_lcd.c: 289: break;
  4585  002F0C  D01F               	goto	l10510
  4586  002F0E                     l10496:
  4587                           
  4588                           ;display_lcd.c: 292: endereco = 0x14U + coluna;
  4589  002F0E  5019               	movf	posicao_cursor_lcd@coluna,w,c
  4590  002F10  0F14               	addlw	20
  4591  002F12  6E1B               	movwf	posicao_cursor_lcd@endereco,c
  4592                           
  4593                           ;display_lcd.c: 293: endereco_cursor_lcd(endereco);
  4594  002F14  501B               	movf	posicao_cursor_lcd@endereco,w,c
  4595  002F16  ECE3  F017         	call	_endereco_cursor_lcd
  4596                           
  4597                           ;display_lcd.c: 294: break;
  4598  002F1A  D018               	goto	l10510
  4599  002F1C                     l10500:
  4600                           
  4601                           ;display_lcd.c: 297: endereco = 0x54U + coluna;
  4602  002F1C  5019               	movf	posicao_cursor_lcd@coluna,w,c
  4603  002F1E  0F54               	addlw	84
  4604  002F20  6E1B               	movwf	posicao_cursor_lcd@endereco,c
  4605                           
  4606                           ;display_lcd.c: 298: endereco_cursor_lcd(endereco);
  4607  002F22  501B               	movf	posicao_cursor_lcd@endereco,w,c
  4608  002F24  ECE3  F017         	call	_endereco_cursor_lcd
  4609                           
  4610                           ;display_lcd.c: 299: break;
  4611  002F28  D011               	goto	l10510
  4612  002F2A                     l10504:
  4613                           
  4614                           ;display_lcd.c: 302: endereco = 0x00U;
  4615  002F2A  0E00               	movlw	0
  4616  002F2C  6E1B               	movwf	posicao_cursor_lcd@endereco,c
  4617                           
  4618                           ;display_lcd.c: 304: }
  4619                           
  4620                           ;display_lcd.c: 303: break;
  4621  002F2E  D00E               	goto	l10510
  4622  002F30                     l10508:
  4623  002F30  501A               	movf	posicao_cursor_lcd@linha,w,c
  4624                           
  4625                           ; Switch size 1, requested type "space"
  4626                           ; Number of cases is 4, Range of values is 1 to 4
  4627                           ; switch strategies available:
  4628                           ; Name         Instructions Cycles
  4629                           ; simple_byte           13     7 (average)
  4630                           ;	Chosen strategy is simple_byte
  4631  002F32  0A01               	xorlw	1	; case 1
  4632  002F34  B4D8               	btfsc	status,2,c
  4633  002F36  D7DE               	goto	l688
  4634  002F38  0A03               	xorlw	3	; case 2
  4635  002F3A  B4D8               	btfsc	status,2,c
  4636  002F3C  D7E1               	goto	l10492
  4637  002F3E  0A01               	xorlw	1	; case 3
  4638  002F40  B4D8               	btfsc	status,2,c
  4639  002F42  D7E5               	goto	l10496
  4640  002F44  0A07               	xorlw	7	; case 4
  4641  002F46  B4D8               	btfsc	status,2,c
  4642  002F48  D7E9               	goto	l10500
  4643  002F4A  D7EF               	goto	l10504
  4644  002F4C                     l10510:
  4645                           
  4646                           ;display_lcd.c: 306: coluna++;
  4647  002F4C  2A19               	incf	posicao_cursor_lcd@coluna,f,c
  4648                           
  4649                           ;display_lcd.c: 307: }
  4650  002F4E  0012               	return	
  4651  002F50                     l10512:
  4652                           
  4653                           ;display_lcd.c: 308: else
  4654                           ;display_lcd.c: 309: {
  4655                           ;display_lcd.c: 310: endereco = 0x00U;
  4656  002F50  0E00               	movlw	0
  4657  002F52  6E1B               	movwf	posicao_cursor_lcd@endereco,c
  4658  002F54  0012               	return	
  4659  002F56                     __end_of_posicao_cursor_lcd:
  4660                           	opt stack 0
  4661                           tosu	equ	0xFFF
  4662                           tosh	equ	0xFFE
  4663                           tosl	equ	0xFFD
  4664                           pclath	equ	0xFFA
  4665                           tblptru	equ	0xFF8
  4666                           tblptrh	equ	0xFF7
  4667                           tblptrl	equ	0xFF6
  4668                           tablat	equ	0xFF5
  4669                           prodh	equ	0xFF4
  4670                           prodl	equ	0xFF3
  4671                           intcon	equ	0xFF2
  4672                           intcon2	equ	0xFF1
  4673                           intcon3	equ	0xFF0
  4674                           postinc0	equ	0xFEE
  4675                           wreg	equ	0xFE8
  4676                           postinc1	equ	0xFE6
  4677                           postdec1	equ	0xFE5
  4678                           fsr1h	equ	0xFE2
  4679                           fsr1l	equ	0xFE1
  4680                           postinc2	equ	0xFDE
  4681                           postdec2	equ	0xFDD
  4682                           fsr2h	equ	0xFDA
  4683                           fsr2l	equ	0xFD9
  4684                           status	equ	0xFD8
  4685                           
  4686 ;; *************** function _endereco_cursor_lcd *****************
  4687 ;; Defined at:
  4688 ;;		line 218 in file "bibliotecas/display_lcd.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  endereco        1    wreg     unsigned char 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  endereco        1   23[COMRAM] unsigned char 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1    wreg      void 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2, status,0, cstack
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4702 ;;      Params:         0       0       0       0       0       0       0       0       0
  4703 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4704 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4705 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4706 ;;Total ram usage:        1 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:    3
  4709 ;; This function calls:
  4710 ;;		_delay
  4711 ;; This function is called by:
  4712 ;;		_posicao_cursor_lcd
  4713 ;;		_cria_caractere_lcd
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           	psect	text21
  4718  002FC6                     __ptext21:
  4719                           	opt stack 0
  4720  002FC6                     _endereco_cursor_lcd:
  4721                           	opt stack 25
  4722                           
  4723                           ;incstack = 0
  4724                           ;endereco_cursor_lcd@endereco stored from wreg
  4725  002FC6  6E18               	movwf	endereco_cursor_lcd@endereco,c
  4726                           
  4727                           ;display_lcd.c: 221: PORTDbits.RD2 = 0;
  4728  002FC8  9483               	bcf	3971,2,c	;volatile
  4729                           
  4730                           ;display_lcd.c: 222: PORTDbits.RD1 = 0;
  4731  002FCA  9283               	bcf	3971,1,c	;volatile
  4732                           
  4733                           ;display_lcd.c: 223: PORTDbits.RD0 = 0;
  4734  002FCC  9083               	bcf	3971,0,c	;volatile
  4735                           
  4736                           ;display_lcd.c: 226: PORTDbits.RD7 = 1;
  4737  002FCE  8E83               	bsf	3971,7,c	;volatile
  4738                           
  4739                           ;display_lcd.c: 227: if(endereco&0b00010000){PORTDbits.RD4=1;}
  4740  002FD0  A818               	btfss	endereco_cursor_lcd@endereco,4,c
  4741  002FD2  D002               	goto	l669
  4742  002FD4  8883               	bsf	3971,4,c	;volatile
  4743  002FD6  D001               	goto	l10410
  4744  002FD8                     l669:
  4745                           
  4746                           ;display_lcd.c: 228: else {PORTDbits.RD4=0;}
  4747  002FD8  9883               	bcf	3971,4,c	;volatile
  4748  002FDA                     l10410:
  4749                           
  4750                           ;display_lcd.c: 229: if(endereco&0b00100000){PORTDbits.RD5=1;}
  4751  002FDA  AA18               	btfss	endereco_cursor_lcd@endereco,5,c
  4752  002FDC  D002               	goto	l671
  4753  002FDE  8A83               	bsf	3971,5,c	;volatile
  4754  002FE0  D001               	goto	l10414
  4755  002FE2                     l671:
  4756                           
  4757                           ;display_lcd.c: 230: else {PORTDbits.RD5=0;}
  4758  002FE2  9A83               	bcf	3971,5,c	;volatile
  4759  002FE4                     l10414:
  4760                           
  4761                           ;display_lcd.c: 231: if(endereco&0b01000000){PORTDbits.RD6=1;}
  4762  002FE4  AC18               	btfss	endereco_cursor_lcd@endereco,6,c
  4763  002FE6  D002               	goto	l673
  4764  002FE8  8C83               	bsf	3971,6,c	;volatile
  4765  002FEA  D001               	goto	l674
  4766  002FEC                     l673:
  4767                           
  4768                           ;display_lcd.c: 232: else {PORTDbits.RD6=0;}
  4769  002FEC  9C83               	bcf	3971,6,c	;volatile
  4770  002FEE                     l674:
  4771                           
  4772                           ;display_lcd.c: 235: PORTDbits.RD0 = 1;
  4773  002FEE  8083               	bsf	3971,0,c	;volatile
  4774                           
  4775                           ;display_lcd.c: 236: delay();
  4776  002FF0  EC6D  F01A         	call	_delay	;wreg free
  4777                           
  4778                           ;display_lcd.c: 237: PORTDbits.RD0 = 0;
  4779  002FF4  9083               	bcf	3971,0,c	;volatile
  4780                           
  4781                           ;display_lcd.c: 238: delay();
  4782  002FF6  EC6D  F01A         	call	_delay	;wreg free
  4783                           
  4784                           ;display_lcd.c: 241: if(endereco&0b00000001){PORTDbits.RD4=1;}
  4785  002FFA  A018               	btfss	endereco_cursor_lcd@endereco,0,c
  4786  002FFC  D002               	goto	l675
  4787  002FFE  8883               	bsf	3971,4,c	;volatile
  4788  003000  D001               	goto	l676
  4789  003002                     l675:
  4790                           
  4791                           ;display_lcd.c: 242: else {PORTDbits.RD4=0;}
  4792  003002  9883               	bcf	3971,4,c	;volatile
  4793  003004                     l676:
  4794                           
  4795                           ;display_lcd.c: 243: if(endereco&0b00000010){PORTDbits.RD5=1;}
  4796  003004  A218               	btfss	endereco_cursor_lcd@endereco,1,c
  4797  003006  D002               	goto	l677
  4798  003008  8A83               	bsf	3971,5,c	;volatile
  4799  00300A  D001               	goto	l678
  4800  00300C                     l677:
  4801                           
  4802                           ;display_lcd.c: 244: else {PORTDbits.RD5=0;}
  4803  00300C  9A83               	bcf	3971,5,c	;volatile
  4804  00300E                     l678:
  4805                           
  4806                           ;display_lcd.c: 245: if(endereco&0b00000100){PORTDbits.RD6=1;}
  4807  00300E  A418               	btfss	endereco_cursor_lcd@endereco,2,c
  4808  003010  D002               	goto	l679
  4809  003012  8C83               	bsf	3971,6,c	;volatile
  4810  003014  D001               	goto	l680
  4811  003016                     l679:
  4812                           
  4813                           ;display_lcd.c: 246: else {PORTDbits.RD6=0;}
  4814  003016  9C83               	bcf	3971,6,c	;volatile
  4815  003018                     l680:
  4816                           
  4817                           ;display_lcd.c: 247: if(endereco&0b00001000){PORTDbits.RD7=1;}
  4818  003018  A618               	btfss	endereco_cursor_lcd@endereco,3,c
  4819  00301A  D002               	goto	l681
  4820  00301C  8E83               	bsf	3971,7,c	;volatile
  4821  00301E  D001               	goto	l682
  4822  003020                     l681:
  4823                           
  4824                           ;display_lcd.c: 248: else {PORTDbits.RD7=0;}
  4825  003020  9E83               	bcf	3971,7,c	;volatile
  4826  003022                     l682:
  4827                           
  4828                           ;display_lcd.c: 251: PORTDbits.RD0 = 1;
  4829  003022  8083               	bsf	3971,0,c	;volatile
  4830                           
  4831                           ;display_lcd.c: 252: delay();
  4832  003024  EC6D  F01A         	call	_delay	;wreg free
  4833                           
  4834                           ;display_lcd.c: 253: PORTDbits.RD0 = 0;
  4835  003028  9083               	bcf	3971,0,c	;volatile
  4836                           
  4837                           ;display_lcd.c: 254: delay();
  4838  00302A  EC6D  F01A         	call	_delay	;wreg free
  4839  00302E  0012               	return		;funcret
  4840  003030                     __end_of_endereco_cursor_lcd:
  4841                           	opt stack 0
  4842                           tosu	equ	0xFFF
  4843                           tosh	equ	0xFFE
  4844                           tosl	equ	0xFFD
  4845                           pclath	equ	0xFFA
  4846                           tblptru	equ	0xFF8
  4847                           tblptrh	equ	0xFF7
  4848                           tblptrl	equ	0xFF6
  4849                           tablat	equ	0xFF5
  4850                           prodh	equ	0xFF4
  4851                           prodl	equ	0xFF3
  4852                           intcon	equ	0xFF2
  4853                           intcon2	equ	0xFF1
  4854                           intcon3	equ	0xFF0
  4855                           postinc0	equ	0xFEE
  4856                           wreg	equ	0xFE8
  4857                           postinc1	equ	0xFE6
  4858                           postdec1	equ	0xFE5
  4859                           fsr1h	equ	0xFE2
  4860                           fsr1l	equ	0xFE1
  4861                           postinc2	equ	0xFDE
  4862                           postdec2	equ	0xFDD
  4863                           fsr2h	equ	0xFDA
  4864                           fsr2l	equ	0xFD9
  4865                           status	equ	0xFD8
  4866                           
  4867 ;; *************** function _memset *****************
  4868 ;; Defined at:
  4869 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;  p1              2   21[COMRAM] PTR void 
  4872 ;;		 -> gps@gps_buffer(15), 
  4873 ;;  c               2   23[COMRAM] int 
  4874 ;;  n               2   25[COMRAM] unsigned int 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  p               2   27[COMRAM] PTR unsigned char 
  4877 ;;		 -> gps@gps_buffer(15), 
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  2   21[COMRAM] PTR void 
  4880 ;; Registers used:
  4881 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4887 ;;      Params:         6       0       0       0       0       0       0       0       0
  4888 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4889 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4890 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4891 ;;Total ram usage:        8 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:    2
  4894 ;; This function calls:
  4895 ;;		Nothing
  4896 ;; This function is called by:
  4897 ;;		_gps
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           	psect	text22
  4902  003416                     __ptext22:
  4903                           	opt stack 0
  4904  003416                     _memset:
  4905                           	opt stack 26
  4906                           
  4907                           ;incstack = 0
  4908  003416  C016  F01C         	movff	memset@p1,memset@p
  4909  00341A  C017  F01D         	movff	memset@p1+1,memset@p+1
  4910  00341E  D008               	goto	l10638
  4911  003420                     l10634:
  4912  003420  C01C  FFD9         	movff	memset@p,fsr2l
  4913  003424  C01D  FFDA         	movff	memset@p+1,fsr2h
  4914  003428  C018  FFDF         	movff	memset@c,indf2
  4915  00342C  4A1C               	infsnz	memset@p,f,c
  4916  00342E  2A1D               	incf	memset@p+1,f,c
  4917  003430                     l10638:
  4918  003430  061A               	decf	memset@n,f,c
  4919  003432  A0D8               	btfss	status,0,c
  4920  003434  061B               	decf	memset@n+1,f,c
  4921  003436  281A               	incf	memset@n,w,c
  4922  003438  E1F3               	bnz	l10634
  4923  00343A  281B               	incf	memset@n+1,w,c
  4924  00343C  B4D8               	btfsc	status,2,c
  4925  00343E  0012               	return	
  4926  003440  D7EF               	goto	l10634
  4927  003442                     __end_of_memset:
  4928                           	opt stack 0
  4929                           tosu	equ	0xFFF
  4930                           tosh	equ	0xFFE
  4931                           tosl	equ	0xFFD
  4932                           pclath	equ	0xFFA
  4933                           tblptru	equ	0xFF8
  4934                           tblptrh	equ	0xFF7
  4935                           tblptrl	equ	0xFF6
  4936                           tablat	equ	0xFF5
  4937                           prodh	equ	0xFF4
  4938                           prodl	equ	0xFF3
  4939                           intcon	equ	0xFF2
  4940                           intcon2	equ	0xFF1
  4941                           intcon3	equ	0xFF0
  4942                           postinc0	equ	0xFEE
  4943                           wreg	equ	0xFE8
  4944                           postinc1	equ	0xFE6
  4945                           postdec1	equ	0xFE5
  4946                           fsr1h	equ	0xFE2
  4947                           fsr1l	equ	0xFE1
  4948                           indf2	equ	0xFDF
  4949                           postinc2	equ	0xFDE
  4950                           postdec2	equ	0xFDD
  4951                           fsr2h	equ	0xFDA
  4952                           fsr2l	equ	0xFD9
  4953                           status	equ	0xFD8
  4954                           
  4955 ;; *************** function _get_longitude *****************
  4956 ;; Defined at:
  4957 ;;		line 173 in file "bibliotecas/GPS.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  long_pointer    1    wreg     unsigned char 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  long_pointer    1   44[BANK0 ] unsigned char 
  4962 ;;  long_buffer    15   26[BANK0 ] unsigned char [15]
  4963 ;;  _longitude      3   41[BANK0 ] float 
  4964 ;;  long_index      1   46[BANK0 ] unsigned char 
  4965 ;;  index           1   45[BANK0 ] unsigned char 
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  3   23[BANK0 ] float 
  4968 ;; Registers used:
  4969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4975 ;;      Params:         0       3       0       0       0       0       0       0       0
  4976 ;;      Locals:         0      21       0       0       0       0       0       0       0
  4977 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4978 ;;      Totals:         1      24       0       0       0       0       0       0       0
  4979 ;;Total ram usage:       25 bytes
  4980 ;; Hardware stack levels used:    1
  4981 ;; Hardware stack levels required when called:    6
  4982 ;; This function calls:
  4983 ;;		_atof
  4984 ;; This function is called by:
  4985 ;;		_gps
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           	psect	text23
  4990  0028E6                     __ptext23:
  4991                           	opt stack 0
  4992  0028E6                     _get_longitude:
  4993                           	opt stack 22
  4994                           
  4995                           ;incstack = 0
  4996                           ;get_longitude@long_pointer stored from wreg
  4997  0028E6  0100               	movlb	0	; () banked
  4998  0028E8  6F8C               	movwf	get_longitude@long_pointer& (0+255),b
  4999                           
  5000                           ;GPS.c: 175: unsigned char long_index;
  5001                           ;GPS.c: 176: unsigned char index = long_pointer+1;
  5002  0028EA  0100               	movlb	0	; () banked
  5003  0028EC  298C               	incf	get_longitude@long_pointer& (0+255),w,b
  5004  0028EE  0100               	movlb	0	; () banked
  5005  0028F0  6F8D               	movwf	get_longitude@index& (0+255),b
  5006                           
  5007                           ; BSR set to: 0
  5008                           ;GPS.c: 177: char long_buffer[15];
  5009                           ;GPS.c: 178: float _longitude;
  5010                           ;GPS.c: 179: long_index=0;
  5011  0028F2  0E00               	movlw	0
  5012  0028F4  0100               	movlb	0	; () banked
  5013  0028F6  6F8E               	movwf	get_longitude@long_index& (0+255),b
  5014                           
  5015                           ;GPS.c: 182: for( ; gga_buffer[index]!=','; index++){
  5016  0028F8  D018               	goto	l10650
  5017  0028FA                     l10644:
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;GPS.c: 183: long_buffer[long_index]= gga_buffer[index];
  5021  0028FA  0100               	movlb	0	; () banked
  5022  0028FC  518D               	movf	get_longitude@index& (0+255),w,b
  5023  0028FE  0D01               	mullw	1
  5024  002900  0E00               	movlw	low _gga_buffer
  5025  002902  24F3               	addwf	prodl,w,c
  5026  002904  6ED9               	movwf	fsr2l,c
  5027  002906  0E01               	movlw	high _gga_buffer
  5028  002908  20F4               	addwfc	prodh,w,c
  5029  00290A  6EDA               	movwf	fsr2h,c
  5030  00290C  0100               	movlb	0	; () banked
  5031  00290E  518E               	movf	get_longitude@long_index& (0+255),w,b
  5032  002910  0D01               	mullw	1
  5033  002912  0E7A               	movlw	low get_longitude@long_buffer
  5034  002914  24F3               	addwf	prodl,w,c
  5035  002916  6EE1               	movwf	fsr1l,c
  5036  002918  0E00               	movlw	high get_longitude@long_buffer
  5037  00291A  20F4               	addwfc	prodh,w,c
  5038  00291C  6EE2               	movwf	fsr1h,c
  5039  00291E  CFDF FFE7          	movff	indf2,indf1
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;GPS.c: 184: long_index++;
  5043  002922  0100               	movlb	0	; () banked
  5044  002924  2B8E               	incf	get_longitude@long_index& (0+255),f,b
  5045                           
  5046                           ; BSR set to: 0
  5047  002926  0100               	movlb	0	; () banked
  5048  002928  2B8D               	incf	get_longitude@index& (0+255),f,b
  5049  00292A                     l10650:
  5050                           
  5051                           ; BSR set to: 0
  5052  00292A  0100               	movlb	0	; () banked
  5053  00292C  518D               	movf	get_longitude@index& (0+255),w,b
  5054  00292E  0D01               	mullw	1
  5055  002930  0E00               	movlw	low _gga_buffer
  5056  002932  24F3               	addwf	prodl,w,c
  5057  002934  6ED9               	movwf	fsr2l,c
  5058  002936  0E01               	movlw	high _gga_buffer
  5059  002938  20F4               	addwfc	prodh,w,c
  5060  00293A  6EDA               	movwf	fsr2h,c
  5061  00293C  0E2C               	movlw	44
  5062  00293E  18DE               	xorwf	postinc2,w,c
  5063  002940  A4D8               	btfss	status,2,c
  5064  002942  D7DB               	goto	l10644
  5065                           
  5066                           ; BSR set to: 0
  5067                           ;GPS.c: 185: }
  5068                           ;GPS.c: 186: long_index++;
  5069                           
  5070                           ; BSR set to: 0
  5071  002944  0100               	movlb	0	; () banked
  5072  002946  2B8E               	incf	get_longitude@long_index& (0+255),f,b
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;GPS.c: 187: E_W = gga_buffer[long_index];
  5076  002948  0100               	movlb	0	; () banked
  5077  00294A  518E               	movf	get_longitude@long_index& (0+255),w,b
  5078  00294C  0D01               	mullw	1
  5079  00294E  0E00               	movlw	low _gga_buffer
  5080  002950  24F3               	addwf	prodl,w,c
  5081  002952  6ED9               	movwf	fsr2l,c
  5082  002954  0E01               	movlw	high _gga_buffer
  5083  002956  20F4               	addwfc	prodh,w,c
  5084  002958  6EDA               	movwf	fsr2h,c
  5085  00295A  50DF               	movf	indf2,w,c
  5086  00295C  0100               	movlb	0	; () banked
  5087  00295E  6FDC               	movwf	_E_W& (0+255),b
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;GPS.c: 188: _longitude = atof(long_buffer);
  5091  002960  0E7A               	movlw	low get_longitude@long_buffer
  5092  002962  0100               	movlb	0	; () banked
  5093  002964  6F74               	movwf	atof@s& (0+255),b
  5094  002966  0E00               	movlw	high get_longitude@long_buffer
  5095  002968  0100               	movlb	0	; () banked
  5096  00296A  6F75               	movwf	(atof@s+1)& (0+255),b
  5097  00296C  EC34  F01A         	call	_atof	;wreg free
  5098  002970  C074  F089         	movff	?_atof,get_longitude@_longitude
  5099  002974  C075  F08A         	movff	?_atof+1,get_longitude@_longitude+1
  5100  002978  C076  F08B         	movff	?_atof+2,get_longitude@_longitude+2
  5101                           
  5102                           ;GPS.c: 189: return _longitude;
  5103  00297C  C089  F077         	movff	get_longitude@_longitude,?_get_longitude
  5104  002980  C08A  F078         	movff	get_longitude@_longitude+1,?_get_longitude+1
  5105  002984  C08B  F079         	movff	get_longitude@_longitude+2,?_get_longitude+2
  5106  002988  0012               	return	
  5107  00298A                     __end_of_get_longitude:
  5108                           	opt stack 0
  5109                           tosu	equ	0xFFF
  5110                           tosh	equ	0xFFE
  5111                           tosl	equ	0xFFD
  5112                           pclath	equ	0xFFA
  5113                           tblptru	equ	0xFF8
  5114                           tblptrh	equ	0xFF7
  5115                           tblptrl	equ	0xFF6
  5116                           tablat	equ	0xFF5
  5117                           prodh	equ	0xFF4
  5118                           prodl	equ	0xFF3
  5119                           intcon	equ	0xFF2
  5120                           intcon2	equ	0xFF1
  5121                           intcon3	equ	0xFF0
  5122                           postinc0	equ	0xFEE
  5123                           wreg	equ	0xFE8
  5124                           indf1	equ	0xFE7
  5125                           postinc1	equ	0xFE6
  5126                           postdec1	equ	0xFE5
  5127                           fsr1h	equ	0xFE2
  5128                           fsr1l	equ	0xFE1
  5129                           indf2	equ	0xFDF
  5130                           postinc2	equ	0xFDE
  5131                           postdec2	equ	0xFDD
  5132                           fsr2h	equ	0xFDA
  5133                           fsr2l	equ	0xFD9
  5134                           status	equ	0xFD8
  5135                           
  5136 ;; *************** function _get_latitude *****************
  5137 ;; Defined at:
  5138 ;;		line 147 in file "bibliotecas/GPS.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  lat_pointer     1    wreg     unsigned char 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  lat_pointer     1   44[BANK0 ] unsigned char 
  5143 ;;  lat_buffer     15   26[BANK0 ] unsigned char [15]
  5144 ;;  _latitude       3   41[BANK0 ] float 
  5145 ;;  lat_index       1   46[BANK0 ] unsigned char 
  5146 ;;  index           1   45[BANK0 ] unsigned char 
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  3   23[BANK0 ] float 
  5149 ;; Registers used:
  5150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5156 ;;      Params:         0       3       0       0       0       0       0       0       0
  5157 ;;      Locals:         0      21       0       0       0       0       0       0       0
  5158 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5159 ;;      Totals:         1      24       0       0       0       0       0       0       0
  5160 ;;Total ram usage:       25 bytes
  5161 ;; Hardware stack levels used:    1
  5162 ;; Hardware stack levels required when called:    6
  5163 ;; This function calls:
  5164 ;;		_atof
  5165 ;; This function is called by:
  5166 ;;		_gps
  5167 ;; This function uses a non-reentrant model
  5168 ;;
  5169                           
  5170                           	psect	text24
  5171  00298A                     __ptext24:
  5172                           	opt stack 0
  5173  00298A                     _get_latitude:
  5174                           	opt stack 22
  5175                           
  5176                           ;incstack = 0
  5177                           ;get_latitude@lat_pointer stored from wreg
  5178  00298A  0100               	movlb	0	; () banked
  5179  00298C  6F8C               	movwf	get_latitude@lat_pointer& (0+255),b
  5180                           
  5181                           ;GPS.c: 149: unsigned char lat_index = lat_pointer+1;
  5182  00298E  0100               	movlb	0	; () banked
  5183  002990  298C               	incf	get_latitude@lat_pointer& (0+255),w,b
  5184  002992  0100               	movlb	0	; () banked
  5185  002994  6F8E               	movwf	get_latitude@lat_index& (0+255),b
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;GPS.c: 150: unsigned char index = 0;
  5189  002996  0E00               	movlw	0
  5190  002998  0100               	movlb	0	; () banked
  5191  00299A  6F8D               	movwf	get_latitude@index& (0+255),b
  5192                           
  5193                           ;GPS.c: 151: char lat_buffer[15];
  5194                           ;GPS.c: 152: float _latitude;
  5195                           ;GPS.c: 155: for(;gga_buffer[lat_index]!=',';lat_index++){
  5196  00299C  D018               	goto	l10608
  5197  00299E                     l10602:
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;GPS.c: 156: lat_buffer[index]= gga_buffer[lat_index];
  5201  00299E  0100               	movlb	0	; () banked
  5202  0029A0  518E               	movf	get_latitude@lat_index& (0+255),w,b
  5203  0029A2  0D01               	mullw	1
  5204  0029A4  0E00               	movlw	low _gga_buffer
  5205  0029A6  24F3               	addwf	prodl,w,c
  5206  0029A8  6ED9               	movwf	fsr2l,c
  5207  0029AA  0E01               	movlw	high _gga_buffer
  5208  0029AC  20F4               	addwfc	prodh,w,c
  5209  0029AE  6EDA               	movwf	fsr2h,c
  5210  0029B0  0100               	movlb	0	; () banked
  5211  0029B2  518D               	movf	get_latitude@index& (0+255),w,b
  5212  0029B4  0D01               	mullw	1
  5213  0029B6  0E7A               	movlw	low get_latitude@lat_buffer
  5214  0029B8  24F3               	addwf	prodl,w,c
  5215  0029BA  6EE1               	movwf	fsr1l,c
  5216  0029BC  0E00               	movlw	high get_latitude@lat_buffer
  5217  0029BE  20F4               	addwfc	prodh,w,c
  5218  0029C0  6EE2               	movwf	fsr1h,c
  5219  0029C2  CFDF FFE7          	movff	indf2,indf1
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;GPS.c: 157: index++;
  5223  0029C6  0100               	movlb	0	; () banked
  5224  0029C8  2B8D               	incf	get_latitude@index& (0+255),f,b
  5225                           
  5226                           ; BSR set to: 0
  5227  0029CA  0100               	movlb	0	; () banked
  5228  0029CC  2B8E               	incf	get_latitude@lat_index& (0+255),f,b
  5229  0029CE                     l10608:
  5230                           
  5231                           ; BSR set to: 0
  5232  0029CE  0100               	movlb	0	; () banked
  5233  0029D0  518E               	movf	get_latitude@lat_index& (0+255),w,b
  5234  0029D2  0D01               	mullw	1
  5235  0029D4  0E00               	movlw	low _gga_buffer
  5236  0029D6  24F3               	addwf	prodl,w,c
  5237  0029D8  6ED9               	movwf	fsr2l,c
  5238  0029DA  0E01               	movlw	high _gga_buffer
  5239  0029DC  20F4               	addwfc	prodh,w,c
  5240  0029DE  6EDA               	movwf	fsr2h,c
  5241  0029E0  0E2C               	movlw	44
  5242  0029E2  18DE               	xorwf	postinc2,w,c
  5243  0029E4  A4D8               	btfss	status,2,c
  5244  0029E6  D7DB               	goto	l10602
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;GPS.c: 158: }
  5248                           ;GPS.c: 159: lat_index++;
  5249                           
  5250                           ; BSR set to: 0
  5251  0029E8  0100               	movlb	0	; () banked
  5252  0029EA  2B8E               	incf	get_latitude@lat_index& (0+255),f,b
  5253                           
  5254                           ; BSR set to: 0
  5255                           ;GPS.c: 160: n_s = gga_buffer[lat_index];
  5256  0029EC  0100               	movlb	0	; () banked
  5257  0029EE  518E               	movf	get_latitude@lat_index& (0+255),w,b
  5258  0029F0  0D01               	mullw	1
  5259  0029F2  0E00               	movlw	low _gga_buffer
  5260  0029F4  24F3               	addwf	prodl,w,c
  5261  0029F6  6ED9               	movwf	fsr2l,c
  5262  0029F8  0E01               	movlw	high _gga_buffer
  5263  0029FA  20F4               	addwfc	prodh,w,c
  5264  0029FC  6EDA               	movwf	fsr2h,c
  5265  0029FE  50DF               	movf	indf2,w,c
  5266  002A00  0100               	movlb	0	; () banked
  5267  002A02  6FDD               	movwf	_n_s& (0+255),b
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;GPS.c: 161: _latitude = atof(lat_buffer);
  5271  002A04  0E7A               	movlw	low get_latitude@lat_buffer
  5272  002A06  0100               	movlb	0	; () banked
  5273  002A08  6F74               	movwf	atof@s& (0+255),b
  5274  002A0A  0E00               	movlw	high get_latitude@lat_buffer
  5275  002A0C  0100               	movlb	0	; () banked
  5276  002A0E  6F75               	movwf	(atof@s+1)& (0+255),b
  5277  002A10  EC34  F01A         	call	_atof	;wreg free
  5278  002A14  C074  F089         	movff	?_atof,get_latitude@_latitude
  5279  002A18  C075  F08A         	movff	?_atof+1,get_latitude@_latitude+1
  5280  002A1C  C076  F08B         	movff	?_atof+2,get_latitude@_latitude+2
  5281                           
  5282                           ;GPS.c: 162: return _latitude;
  5283  002A20  C089  F077         	movff	get_latitude@_latitude,?_get_latitude
  5284  002A24  C08A  F078         	movff	get_latitude@_latitude+1,?_get_latitude+1
  5285  002A28  C08B  F079         	movff	get_latitude@_latitude+2,?_get_latitude+2
  5286  002A2C  0012               	return	
  5287  002A2E                     __end_of_get_latitude:
  5288                           	opt stack 0
  5289                           tosu	equ	0xFFF
  5290                           tosh	equ	0xFFE
  5291                           tosl	equ	0xFFD
  5292                           pclath	equ	0xFFA
  5293                           tblptru	equ	0xFF8
  5294                           tblptrh	equ	0xFF7
  5295                           tblptrl	equ	0xFF6
  5296                           tablat	equ	0xFF5
  5297                           prodh	equ	0xFF4
  5298                           prodl	equ	0xFF3
  5299                           intcon	equ	0xFF2
  5300                           intcon2	equ	0xFF1
  5301                           intcon3	equ	0xFF0
  5302                           postinc0	equ	0xFEE
  5303                           wreg	equ	0xFE8
  5304                           indf1	equ	0xFE7
  5305                           postinc1	equ	0xFE6
  5306                           postdec1	equ	0xFE5
  5307                           fsr1h	equ	0xFE2
  5308                           fsr1l	equ	0xFE1
  5309                           indf2	equ	0xFDF
  5310                           postinc2	equ	0xFDE
  5311                           postdec2	equ	0xFDD
  5312                           fsr2h	equ	0xFDA
  5313                           fsr2l	equ	0xFD9
  5314                           status	equ	0xFD8
  5315                           
  5316 ;; *************** function _atof *****************
  5317 ;; Defined at:
  5318 ;;		line 200 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\atof.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  s               2   20[BANK0 ] PTR const unsigned char 
  5321 ;;		 -> get_longitude@long_buffer(15), get_latitude@lat_buffer(15), 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;		None
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  3   20[BANK0 ] PTR const unsigned char 
  5326 ;; Registers used:
  5327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5333 ;;      Params:         0       3       0       0       0       0       0       0       0
  5334 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5335 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5336 ;;      Totals:         0       3       0       0       0       0       0       0       0
  5337 ;;Total ram usage:        3 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    5
  5340 ;; This function calls:
  5341 ;;		_strtod
  5342 ;; This function is called by:
  5343 ;;		_get_latitude
  5344 ;;		_get_longitude
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348                           	psect	text25
  5349  003468                     __ptext25:
  5350                           	opt stack 0
  5351  003468                     _atof:
  5352                           	opt stack 22
  5353                           
  5354                           ;incstack = 0
  5355  003468  C074  F069         	movff	atof@s,strtod@s
  5356  00346C  C075  F06A         	movff	atof@s+1,strtod@s+1
  5357  003470  0E00               	movlw	0
  5358  003472  0100               	movlb	0	; () banked
  5359  003474  6F6B               	movwf	strtod@res& (0+255),b
  5360  003476  0E00               	movlw	0
  5361  003478  0100               	movlb	0	; () banked
  5362  00347A  6F6C               	movwf	(strtod@res+1)& (0+255),b
  5363  00347C  ECAD  F004         	call	_strtod	;wreg free
  5364  003480  C069  F074         	movff	?_strtod,?_atof
  5365  003484  C06A  F075         	movff	?_strtod+1,?_atof+1
  5366  003488  C06B  F076         	movff	?_strtod+2,?_atof+2
  5367  00348C  0012               	return	
  5368  00348E                     __end_of_atof:
  5369                           	opt stack 0
  5370                           tosu	equ	0xFFF
  5371                           tosh	equ	0xFFE
  5372                           tosl	equ	0xFFD
  5373                           pclath	equ	0xFFA
  5374                           tblptru	equ	0xFF8
  5375                           tblptrh	equ	0xFF7
  5376                           tblptrl	equ	0xFF6
  5377                           tablat	equ	0xFF5
  5378                           prodh	equ	0xFF4
  5379                           prodl	equ	0xFF3
  5380                           intcon	equ	0xFF2
  5381                           intcon2	equ	0xFF1
  5382                           intcon3	equ	0xFF0
  5383                           postinc0	equ	0xFEE
  5384                           wreg	equ	0xFE8
  5385                           indf1	equ	0xFE7
  5386                           postinc1	equ	0xFE6
  5387                           postdec1	equ	0xFE5
  5388                           fsr1h	equ	0xFE2
  5389                           fsr1l	equ	0xFE1
  5390                           indf2	equ	0xFDF
  5391                           postinc2	equ	0xFDE
  5392                           postdec2	equ	0xFDD
  5393                           fsr2h	equ	0xFDA
  5394                           fsr2l	equ	0xFD9
  5395                           status	equ	0xFD8
  5396                           
  5397 ;; *************** function _strtod *****************
  5398 ;; Defined at:
  5399 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\atof.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  5402 ;;		 -> get_longitude@long_buffer(15), get_latitude@lat_buffer(15), 
  5403 ;;  res             2   11[BANK0 ] PTR PTR const unsigned c
  5404 ;;		 -> NULL(0), 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  _u              4   16[BANK0 ] struct .
  5407 ;;  expon           1   15[BANK0 ] char 
  5408 ;;  flags           1   14[BANK0 ] unsigned char 
  5409 ;;  eexp            1   13[BANK0 ] char 
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  3    9[BANK0 ] char 
  5412 ;; Registers used:
  5413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5419 ;;      Params:         0       4       0       0       0       0       0       0       0
  5420 ;;      Locals:         0       7       0       0       0       0       0       0       0
  5421 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5422 ;;      Totals:         1      11       0       0       0       0       0       0       0
  5423 ;;Total ram usage:       12 bytes
  5424 ;; Hardware stack levels used:    1
  5425 ;; Hardware stack levels required when called:    4
  5426 ;; This function calls:
  5427 ;;		___altoft
  5428 ;;		___ftdiv
  5429 ;;		___ftge
  5430 ;;		___ftmul
  5431 ;;		___ftneg
  5432 ;;		___lmul
  5433 ;;		_isdigit
  5434 ;;		_isspace
  5435 ;; This function is called by:
  5436 ;;		_atof
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           	psect	text26
  5441  00095A                     __ptext26:
  5442                           	opt stack 0
  5443  00095A                     _strtod:
  5444                           	opt stack 22
  5445                           
  5446                           ;incstack = 0
  5447  00095A  0100               	movlb	0	; () banked
  5448  00095C  516B               	movf	strtod@res& (0+255),w,b
  5449  00095E  0100               	movlb	0	; () banked
  5450  000960  116C               	iorwf	(strtod@res+1)& (0+255),w,b
  5451  000962  B4D8               	btfsc	status,2,c
  5452  000964  D00C               	goto	l9718
  5453                           
  5454                           ; BSR set to: 0
  5455  000966  C06B  FFD9         	movff	strtod@res,fsr2l
  5456  00096A  C06C  FFDA         	movff	strtod@res+1,fsr2h
  5457  00096E  C069  FFDE         	movff	strtod@s,postinc2
  5458  000972  C06A  FFDD         	movff	strtod@s+1,postdec2
  5459                           
  5460                           ; BSR set to: 0
  5461  000976  D003               	goto	l9718
  5462  000978                     l9716:
  5463  000978  0100               	movlb	0	; () banked
  5464  00097A  4B69               	infsnz	strtod@s& (0+255),f,b
  5465  00097C  2B6A               	incf	(strtod@s+1)& (0+255),f,b
  5466  00097E                     l9718:
  5467                           
  5468                           ; BSR set to: 0
  5469  00097E  C069  FFD9         	movff	strtod@s,fsr2l
  5470  000982  C06A  FFDA         	movff	strtod@s+1,fsr2h
  5471  000986  50DF               	movf	indf2,w,c
  5472  000988  0100               	movlb	0	; () banked
  5473  00098A  6F6D               	movwf	strtod@eexp& (0+255),b
  5474  00098C  0100               	movlb	0	; () banked
  5475  00098E  516D               	movf	strtod@eexp& (0+255),w,b
  5476  000990  EC47  F01A         	call	_isspace
  5477  000994  B0D8               	btfsc	status,0,c
  5478  000996  D7F0               	goto	l9716
  5479  000998  0E00               	movlw	0
  5480  00099A  0100               	movlb	0	; () banked
  5481  00099C  6F6E               	movwf	strtod@flags& (0+255),b
  5482                           
  5483                           ; BSR set to: 0
  5484  00099E  0E2D               	movlw	45
  5485  0009A0  0100               	movlb	0	; () banked
  5486  0009A2  196D               	xorwf	strtod@eexp& (0+255),w,b
  5487  0009A4  A4D8               	btfss	status,2,c
  5488  0009A6  D004               	goto	l9728
  5489                           
  5490                           ; BSR set to: 0
  5491  0009A8  0E01               	movlw	1
  5492  0009AA  0100               	movlb	0	; () banked
  5493  0009AC  6F6E               	movwf	strtod@flags& (0+255),b
  5494  0009AE  D005               	goto	l9730
  5495  0009B0                     l9728:
  5496                           
  5497                           ; BSR set to: 0
  5498  0009B0  0E2B               	movlw	43
  5499  0009B2  0100               	movlb	0	; () banked
  5500  0009B4  196D               	xorwf	strtod@eexp& (0+255),w,b
  5501  0009B6  A4D8               	btfss	status,2,c
  5502  0009B8  D003               	goto	l9732
  5503  0009BA                     l9730:
  5504                           
  5505                           ; BSR set to: 0
  5506  0009BA  0100               	movlb	0	; () banked
  5507  0009BC  4B69               	infsnz	strtod@s& (0+255),f,b
  5508  0009BE  2B6A               	incf	(strtod@s+1)& (0+255),f,b
  5509  0009C0                     l9732:
  5510                           
  5511                           ; BSR set to: 0
  5512  0009C0  0E00               	movlw	0
  5513  0009C2  0100               	movlb	0	; () banked
  5514  0009C4  6F6D               	movwf	strtod@eexp& (0+255),b
  5515                           
  5516                           ; BSR set to: 0
  5517  0009C6  0E00               	movlw	0
  5518  0009C8  0100               	movlb	0	; () banked
  5519  0009CA  6F70               	movwf	strtod@_u& (0+255),b
  5520  0009CC  0E00               	movlw	0
  5521  0009CE  6F71               	movwf	(strtod@_u+1)& (0+255),b
  5522  0009D0  0E00               	movlw	0
  5523  0009D2  6F72               	movwf	(strtod@_u+2)& (0+255),b
  5524  0009D4  0E00               	movlw	0
  5525  0009D6  6F73               	movwf	(strtod@_u+3)& (0+255),b
  5526                           
  5527                           ; BSR set to: 0
  5528  0009D8  0E00               	movlw	0
  5529  0009DA  0100               	movlb	0	; () banked
  5530  0009DC  6F6F               	movwf	strtod@expon& (0+255),b
  5531  0009DE                     l9738:
  5532                           
  5533                           ; BSR set to: 0
  5534  0009DE  0100               	movlb	0	; () banked
  5535  0009E0  B96E               	btfsc	strtod@flags& (0+255),4,b
  5536  0009E2  D00B               	goto	l9744
  5537                           
  5538                           ; BSR set to: 0
  5539  0009E4  C069  FFD9         	movff	strtod@s,fsr2l
  5540  0009E8  C06A  FFDA         	movff	strtod@s+1,fsr2h
  5541  0009EC  0E2E               	movlw	46
  5542  0009EE  18DE               	xorwf	postinc2,w,c
  5543  0009F0  A4D8               	btfss	status,2,c
  5544  0009F2  D003               	goto	l9744
  5545                           
  5546                           ; BSR set to: 0
  5547  0009F4  0100               	movlb	0	; () banked
  5548  0009F6  896E               	bsf	strtod@flags& (0+255),4,b
  5549  0009F8  D046               	goto	l1525
  5550  0009FA                     l9744:
  5551                           
  5552                           ; BSR set to: 0
  5553  0009FA  C069  FFD9         	movff	strtod@s,fsr2l
  5554  0009FE  C06A  FFDA         	movff	strtod@s+1,fsr2h
  5555  000A02  50DF               	movf	indf2,w,c
  5556  000A04  EC90  F01A         	call	_isdigit
  5557  000A08  A0D8               	btfss	status,0,c
  5558  000A0A  D041               	goto	l9762
  5559  000A0C  0100               	movlb	0	; () banked
  5560  000A0E  836E               	bsf	strtod@flags& (0+255),1,b
  5561                           
  5562                           ; BSR set to: 0
  5563  000A10  0E08               	movlw	8
  5564  000A12  0100               	movlb	0	; () banked
  5565  000A14  196D               	xorwf	strtod@eexp& (0+255),w,b
  5566  000A16  B4D8               	btfsc	status,2,c
  5567  000A18  D031               	goto	l1523
  5568                           
  5569                           ; BSR set to: 0
  5570  000A1A  0100               	movlb	0	; () banked
  5571  000A1C  A96E               	btfss	strtod@flags& (0+255),4,b
  5572  000A1E  D002               	goto	l1524
  5573                           
  5574                           ; BSR set to: 0
  5575  000A20  0100               	movlb	0	; () banked
  5576  000A22  076F               	decf	strtod@expon& (0+255),f,b
  5577  000A24                     l1524:
  5578                           
  5579                           ; BSR set to: 0
  5580  000A24  0100               	movlb	0	; () banked
  5581  000A26  2B6D               	incf	strtod@eexp& (0+255),f,b
  5582                           
  5583                           ; BSR set to: 0
  5584  000A28  C070  F016         	movff	strtod@_u,___lmul@multiplier
  5585  000A2C  C071  F017         	movff	strtod@_u+1,___lmul@multiplier+1
  5586  000A30  C072  F018         	movff	strtod@_u+2,___lmul@multiplier+2
  5587  000A34  C073  F019         	movff	strtod@_u+3,___lmul@multiplier+3
  5588  000A38  0E0A               	movlw	10
  5589  000A3A  6E1A               	movwf	___lmul@multiplicand,c
  5590  000A3C  0E00               	movlw	0
  5591  000A3E  6E1B               	movwf	___lmul@multiplicand+1,c
  5592  000A40  0E00               	movlw	0
  5593  000A42  6E1C               	movwf	___lmul@multiplicand+2,c
  5594  000A44  0E00               	movlw	0
  5595  000A46  6E1D               	movwf	___lmul@multiplicand+3,c
  5596  000A48  ECE0  F018         	call	___lmul	;wreg free
  5597  000A4C  C016  F070         	movff	?___lmul,strtod@_u
  5598  000A50  C017  F071         	movff	?___lmul+1,strtod@_u+1
  5599  000A54  C018  F072         	movff	?___lmul+2,strtod@_u+2
  5600  000A58  C019  F073         	movff	?___lmul+3,strtod@_u+3
  5601  000A5C  C069  FFD9         	movff	strtod@s,fsr2l
  5602  000A60  C06A  FFDA         	movff	strtod@s+1,fsr2h
  5603  000A64  50DF               	movf	indf2,w,c
  5604  000A66  6E33               	movwf	??_strtod& (0+255),c
  5605  000A68  0ED0               	movlw	208
  5606  000A6A  2633               	addwf	??_strtod,f,c
  5607  000A6C  5033               	movf	??_strtod,w,c
  5608  000A6E  0100               	movlb	0	; () banked
  5609  000A70  2770               	addwf	strtod@_u& (0+255),f,b
  5610  000A72  0E00               	movlw	0
  5611  000A74  2371               	addwfc	(strtod@_u+1)& (0+255),f,b
  5612  000A76  2372               	addwfc	(strtod@_u+2)& (0+255),f,b
  5613  000A78  2373               	addwfc	(strtod@_u+3)& (0+255),f,b
  5614  000A7A  D005               	goto	l1525
  5615  000A7C                     l1523:
  5616                           
  5617                           ; BSR set to: 0
  5618  000A7C  0100               	movlb	0	; () banked
  5619  000A7E  B96E               	btfsc	strtod@flags& (0+255),4,b
  5620  000A80  D002               	goto	l1525
  5621                           
  5622                           ; BSR set to: 0
  5623  000A82  0100               	movlb	0	; () banked
  5624  000A84  2B6F               	incf	strtod@expon& (0+255),f,b
  5625  000A86                     l1525:
  5626                           
  5627                           ; BSR set to: 0
  5628  000A86  0100               	movlb	0	; () banked
  5629  000A88  4B69               	infsnz	strtod@s& (0+255),f,b
  5630  000A8A  2B6A               	incf	(strtod@s+1)& (0+255),f,b
  5631                           
  5632                           ; BSR set to: 0
  5633  000A8C  D7A8               	goto	l9738
  5634  000A8E                     l9762:
  5635  000A8E  0E00               	movlw	0
  5636  000A90  0100               	movlb	0	; () banked
  5637  000A92  6F6D               	movwf	strtod@eexp& (0+255),b
  5638                           
  5639                           ; BSR set to: 0
  5640  000A94  C069  FFD9         	movff	strtod@s,fsr2l
  5641  000A98  C06A  FFDA         	movff	strtod@s+1,fsr2h
  5642  000A9C  0E65               	movlw	101
  5643  000A9E  18DE               	xorwf	postinc2,w,c
  5644  000AA0  B4D8               	btfsc	status,2,c
  5645  000AA2  D008               	goto	l9768
  5646                           
  5647                           ; BSR set to: 0
  5648  000AA4  C069  FFD9         	movff	strtod@s,fsr2l
  5649  000AA8  C06A  FFDA         	movff	strtod@s+1,fsr2h
  5650  000AAC  0E45               	movlw	69
  5651  000AAE  18DE               	xorwf	postinc2,w,c
  5652  000AB0  A4D8               	btfss	status,2,c
  5653  000AB2  D06B               	goto	l9800
  5654  000AB4                     l9768:
  5655                           
  5656                           ; BSR set to: 0
  5657  000AB4  0100               	movlb	0	; () banked
  5658  000AB6  4B69               	infsnz	strtod@s& (0+255),f,b
  5659  000AB8  2B6A               	incf	(strtod@s+1)& (0+255),f,b
  5660  000ABA  C069  FFD9         	movff	strtod@s,fsr2l
  5661  000ABE  C06A  FFDA         	movff	strtod@s+1,fsr2h
  5662  000AC2  0E2D               	movlw	45
  5663  000AC4  18DE               	xorwf	postinc2,w,c
  5664  000AC6  A4D8               	btfss	status,2,c
  5665  000AC8  D003               	goto	l9772
  5666                           
  5667                           ; BSR set to: 0
  5668  000ACA  0100               	movlb	0	; () banked
  5669  000ACC  876E               	bsf	strtod@flags& (0+255),3,b
  5670  000ACE  D008               	goto	l9776
  5671  000AD0                     l9772:
  5672                           
  5673                           ; BSR set to: 0
  5674  000AD0  C069  FFD9         	movff	strtod@s,fsr2l
  5675  000AD4  C06A  FFDA         	movff	strtod@s+1,fsr2h
  5676  000AD8  0E2B               	movlw	43
  5677  000ADA  18DE               	xorwf	postinc2,w,c
  5678  000ADC  A4D8               	btfss	status,2,c
  5679  000ADE  D003               	goto	l9778
  5680  000AE0                     l9776:
  5681                           
  5682                           ; BSR set to: 0
  5683  000AE0  0100               	movlb	0	; () banked
  5684  000AE2  4B69               	infsnz	strtod@s& (0+255),f,b
  5685  000AE4  2B6A               	incf	(strtod@s+1)& (0+255),f,b
  5686  000AE6                     l9778:
  5687                           
  5688                           ; BSR set to: 0
  5689  000AE6  C069  FFD9         	movff	strtod@s,fsr2l
  5690  000AEA  C06A  FFDA         	movff	strtod@s+1,fsr2h
  5691  000AEE  0E30               	movlw	48
  5692  000AF0  18DE               	xorwf	postinc2,w,c
  5693  000AF2  B4D8               	btfsc	status,2,c
  5694  000AF4  D7F5               	goto	l9776
  5695                           
  5696                           ; BSR set to: 0
  5697                           
  5698                           ; BSR set to: 0
  5699  000AF6  C069  FFD9         	movff	strtod@s,fsr2l
  5700  000AFA  C06A  FFDA         	movff	strtod@s+1,fsr2h
  5701  000AFE  50DF               	movf	indf2,w,c
  5702  000B00  EC90  F01A         	call	_isdigit
  5703  000B04  A0D8               	btfss	status,0,c
  5704  000B06  D03C               	goto	l9796
  5705  000B08  C069  FFD9         	movff	strtod@s,fsr2l
  5706  000B0C  C06A  FFDA         	movff	strtod@s+1,fsr2h
  5707  000B10  50DF               	movf	indf2,w,c
  5708  000B12  0FD0               	addlw	208
  5709  000B14  0100               	movlb	0	; () banked
  5710  000B16  6F6D               	movwf	strtod@eexp& (0+255),b
  5711                           
  5712                           ; BSR set to: 0
  5713  000B18  0100               	movlb	0	; () banked
  5714  000B1A  4B69               	infsnz	strtod@s& (0+255),f,b
  5715  000B1C  2B6A               	incf	(strtod@s+1)& (0+255),f,b
  5716                           
  5717                           ; BSR set to: 0
  5718  000B1E  C069  FFD9         	movff	strtod@s,fsr2l
  5719  000B22  C06A  FFDA         	movff	strtod@s+1,fsr2h
  5720  000B26  50DF               	movf	indf2,w,c
  5721  000B28  EC90  F01A         	call	_isdigit
  5722  000B2C  A0D8               	btfss	status,0,c
  5723  000B2E  D028               	goto	l9796
  5724  000B30  C069  FFD9         	movff	strtod@s,fsr2l
  5725  000B34  C06A  FFDA         	movff	strtod@s+1,fsr2h
  5726  000B38  50DF               	movf	indf2,w,c
  5727  000B3A  6E33               	movwf	??_strtod& (0+255),c
  5728  000B3C  0100               	movlb	0	; () banked
  5729  000B3E  516D               	movf	strtod@eexp& (0+255),w,b
  5730  000B40  0D0A               	mullw	10
  5731  000B42  50F3               	movf	prodl,w,c
  5732  000B44  2433               	addwf	??_strtod,w,c
  5733  000B46  0FD0               	addlw	208
  5734  000B48  0100               	movlb	0	; () banked
  5735  000B4A  6F6D               	movwf	strtod@eexp& (0+255),b
  5736                           
  5737                           ; BSR set to: 0
  5738  000B4C  0100               	movlb	0	; () banked
  5739  000B4E  4B69               	infsnz	strtod@s& (0+255),f,b
  5740  000B50  2B6A               	incf	(strtod@s+1)& (0+255),f,b
  5741                           
  5742                           ; BSR set to: 0
  5743  000B52  C069  FFD9         	movff	strtod@s,fsr2l
  5744  000B56  C06A  FFDA         	movff	strtod@s+1,fsr2h
  5745  000B5A  50DF               	movf	indf2,w,c
  5746  000B5C  EC90  F01A         	call	_isdigit
  5747  000B60  A0D8               	btfss	status,0,c
  5748  000B62  D00E               	goto	l9796
  5749  000B64  C069  FFD9         	movff	strtod@s,fsr2l
  5750  000B68  C06A  FFDA         	movff	strtod@s+1,fsr2h
  5751  000B6C  50DF               	movf	indf2,w,c
  5752  000B6E  6E33               	movwf	??_strtod& (0+255),c
  5753  000B70  0100               	movlb	0	; () banked
  5754  000B72  516D               	movf	strtod@eexp& (0+255),w,b
  5755  000B74  0D0A               	mullw	10
  5756  000B76  50F3               	movf	prodl,w,c
  5757  000B78  2433               	addwf	??_strtod,w,c
  5758  000B7A  0FD0               	addlw	208
  5759  000B7C  0100               	movlb	0	; () banked
  5760  000B7E  6F6D               	movwf	strtod@eexp& (0+255),b
  5761  000B80                     l9796:
  5762  000B80  0100               	movlb	0	; () banked
  5763  000B82  A76E               	btfss	strtod@flags& (0+255),3,b
  5764  000B84  D002               	goto	l9800
  5765                           
  5766                           ; BSR set to: 0
  5767  000B86  0100               	movlb	0	; () banked
  5768  000B88  6D6D               	negf	strtod@eexp& (0+255),b
  5769  000B8A                     l9800:
  5770                           
  5771                           ; BSR set to: 0
  5772  000B8A  0100               	movlb	0	; () banked
  5773  000B8C  516D               	movf	strtod@eexp& (0+255),w,b
  5774  000B8E  0100               	movlb	0	; () banked
  5775  000B90  276F               	addwf	strtod@expon& (0+255),f,b
  5776                           
  5777                           ; BSR set to: 0
  5778  000B92  0100               	movlb	0	; () banked
  5779  000B94  516B               	movf	strtod@res& (0+255),w,b
  5780  000B96  0100               	movlb	0	; () banked
  5781  000B98  116C               	iorwf	(strtod@res+1)& (0+255),w,b
  5782  000B9A  B4D8               	btfsc	status,2,c
  5783  000B9C  D00B               	goto	l9808
  5784                           
  5785                           ; BSR set to: 0
  5786  000B9E  0100               	movlb	0	; () banked
  5787  000BA0  A36E               	btfss	strtod@flags& (0+255),1,b
  5788  000BA2  D008               	goto	l9808
  5789                           
  5790                           ; BSR set to: 0
  5791  000BA4  C06B  FFD9         	movff	strtod@res,fsr2l
  5792  000BA8  C06C  FFDA         	movff	strtod@res+1,fsr2h
  5793  000BAC  C069  FFDE         	movff	strtod@s,postinc2
  5794  000BB0  C06A  FFDD         	movff	strtod@s+1,postdec2
  5795  000BB4                     l9808:
  5796                           
  5797                           ; BSR set to: 0
  5798  000BB4  C070  F01E         	movff	strtod@_u,___altoft@c
  5799  000BB8  C071  F01F         	movff	strtod@_u+1,___altoft@c+1
  5800  000BBC  C072  F020         	movff	strtod@_u+2,___altoft@c+2
  5801  000BC0  C073  F021         	movff	strtod@_u+3,___altoft@c+3
  5802  000BC4  ECFE  F016         	call	___altoft	;wreg free
  5803  000BC8  C01E  F070         	movff	?___altoft,strtod@_u
  5804  000BCC  C01F  F071         	movff	?___altoft+1,strtod@_u+1
  5805  000BD0  C020  F072         	movff	?___altoft+2,strtod@_u+2
  5806  000BD4  0100               	movlb	0	; () banked
  5807  000BD6  5170               	movf	strtod@_u& (0+255),w,b
  5808  000BD8  0100               	movlb	0	; () banked
  5809  000BDA  1171               	iorwf	(strtod@_u+1)& (0+255),w,b
  5810  000BDC  0100               	movlb	0	; () banked
  5811  000BDE  1172               	iorwf	(strtod@_u+2)& (0+255),w,b
  5812  000BE0  A4D8               	btfss	status,2,c
  5813  000BE2  D00A               	goto	l9816
  5814                           
  5815                           ; BSR set to: 0
  5816  000BE4  0E00               	movlw	0
  5817  000BE6  0100               	movlb	0	; () banked
  5818  000BE8  6F69               	movwf	?_strtod& (0+255),b
  5819  000BEA  0E00               	movlw	0
  5820  000BEC  0100               	movlb	0	; () banked
  5821  000BEE  6F6A               	movwf	(?_strtod+1)& (0+255),b
  5822  000BF0  0E00               	movlw	0
  5823  000BF2  0100               	movlb	0	; () banked
  5824  000BF4  6F6B               	movwf	(?_strtod+2)& (0+255),b
  5825                           
  5826                           ; BSR set to: 0
  5827  000BF6  0012               	return	
  5828  000BF8                     l9816:
  5829                           
  5830                           ; BSR set to: 0
  5831  000BF8  0100               	movlb	0	; () banked
  5832  000BFA  AF6F               	btfss	strtod@expon& (0+255),7,b
  5833  000BFC  D063               	goto	l9844
  5834                           
  5835                           ; BSR set to: 0
  5836  000BFE  0100               	movlb	0	; () banked
  5837  000C00  6D6F               	negf	strtod@expon& (0+255),b
  5838  000C02  D017               	goto	l9824
  5839  000C04                     l9820:
  5840                           
  5841                           ; BSR set to: 0
  5842  000C04  C070  F01E         	movff	strtod@_u,___ftdiv@f1
  5843  000C08  C071  F01F         	movff	strtod@_u+1,___ftdiv@f1+1
  5844  000C0C  C072  F020         	movff	strtod@_u+2,___ftdiv@f1+2
  5845  000C10  0E03               	movlw	3
  5846  000C12  6E21               	movwf	___ftdiv@f2,c
  5847  000C14  0E15               	movlw	21
  5848  000C16  6E22               	movwf	___ftdiv@f2+1,c
  5849  000C18  0E50               	movlw	80
  5850  000C1A  6E23               	movwf	___ftdiv@f2+2,c
  5851  000C1C  EC97  F012         	call	___ftdiv	;wreg free
  5852  000C20  C01E  F070         	movff	?___ftdiv,strtod@_u
  5853  000C24  C01F  F071         	movff	?___ftdiv+1,strtod@_u+1
  5854  000C28  C020  F072         	movff	?___ftdiv+2,strtod@_u+2
  5855  000C2C  0EF6               	movlw	246
  5856  000C2E  0100               	movlb	0	; () banked
  5857  000C30  276F               	addwf	strtod@expon& (0+255),f,b
  5858  000C32                     l9824:
  5859                           
  5860                           ; BSR set to: 0
  5861  000C32  0100               	movlb	0	; () banked
  5862  000C34  516F               	movf	strtod@expon& (0+255),w,b
  5863  000C36  0A80               	xorlw	128
  5864  000C38  0F76               	addlw	-138
  5865  000C3A  A0D8               	btfss	status,0,c
  5866  000C3C  D017               	goto	l9830
  5867  000C3E  D7E2               	goto	l9820
  5868  000C40                     l9826:
  5869                           
  5870                           ; BSR set to: 0
  5871  000C40  C070  F01E         	movff	strtod@_u,___ftdiv@f1
  5872  000C44  C071  F01F         	movff	strtod@_u+1,___ftdiv@f1+1
  5873  000C48  C072  F020         	movff	strtod@_u+2,___ftdiv@f1+2
  5874  000C4C  0E00               	movlw	0
  5875  000C4E  6E21               	movwf	___ftdiv@f2,c
  5876  000C50  0E20               	movlw	32
  5877  000C52  6E22               	movwf	___ftdiv@f2+1,c
  5878  000C54  0E41               	movlw	65
  5879  000C56  6E23               	movwf	___ftdiv@f2+2,c
  5880  000C58  EC97  F012         	call	___ftdiv	;wreg free
  5881  000C5C  C01E  F070         	movff	?___ftdiv,strtod@_u
  5882  000C60  C01F  F071         	movff	?___ftdiv+1,strtod@_u+1
  5883  000C64  C020  F072         	movff	?___ftdiv+2,strtod@_u+2
  5884  000C68  0100               	movlb	0	; () banked
  5885  000C6A  076F               	decf	strtod@expon& (0+255),f,b
  5886  000C6C                     l9830:
  5887                           
  5888                           ; BSR set to: 0
  5889  000C6C  0100               	movlb	0	; () banked
  5890  000C6E  516F               	movf	strtod@expon& (0+255),w,b
  5891  000C70  0100               	movlb	0	; () banked
  5892  000C72  A4D8               	btfss	status,2,c
  5893  000C74  D7E5               	goto	l9826
  5894                           
  5895                           ; BSR set to: 0
  5896                           
  5897                           ; BSR set to: 0
  5898  000C76  C070  F016         	movff	strtod@_u,___ftge@ff1
  5899  000C7A  C071  F017         	movff	strtod@_u+1,___ftge@ff1+1
  5900  000C7E  C072  F018         	movff	strtod@_u+2,___ftge@ff1+2
  5901  000C82  0E00               	movlw	0
  5902  000C84  6E19               	movwf	___ftge@ff2,c
  5903  000C86  0E80               	movlw	128
  5904  000C88  6E1A               	movwf	___ftge@ff2+1,c
  5905  000C8A  0E00               	movlw	0
  5906  000C8C  6E1B               	movwf	___ftge@ff2+2,c
  5907  000C8E  ECAF  F015         	call	___ftge	;wreg free
  5908  000C92  B0D8               	btfsc	status,0,c
  5909  000C94  D072               	goto	l1552
  5910  000C96  0100               	movlb	0	; () banked
  5911  000C98  A16E               	btfss	strtod@flags& (0+255),0,b
  5912  000C9A  D00A               	goto	l9840
  5913  000C9C                     l9836:
  5914                           
  5915                           ; BSR set to: 0
  5916  000C9C  0E00               	movlw	0
  5917  000C9E  0100               	movlb	0	; () banked
  5918  000CA0  6F69               	movwf	?_strtod& (0+255),b
  5919  000CA2  0E80               	movlw	128
  5920  000CA4  0100               	movlb	0	; () banked
  5921  000CA6  6F6A               	movwf	(?_strtod+1)& (0+255),b
  5922  000CA8  0E80               	movlw	128
  5923  000CAA  0100               	movlb	0	; () banked
  5924  000CAC  6F6B               	movwf	(?_strtod+2)& (0+255),b
  5925                           
  5926                           ; BSR set to: 0
  5927  000CAE  0012               	return	
  5928  000CB0                     l9840:
  5929                           
  5930                           ; BSR set to: 0
  5931  000CB0  0E00               	movlw	0
  5932  000CB2  0100               	movlb	0	; () banked
  5933  000CB4  6F69               	movwf	?_strtod& (0+255),b
  5934  000CB6  0E80               	movlw	128
  5935  000CB8  0100               	movlb	0	; () banked
  5936  000CBA  6F6A               	movwf	(?_strtod+1)& (0+255),b
  5937  000CBC  0E00               	movlw	0
  5938  000CBE  0100               	movlb	0	; () banked
  5939  000CC0  6F6B               	movwf	(?_strtod+2)& (0+255),b
  5940                           
  5941                           ; BSR set to: 0
  5942  000CC2  0012               	return	
  5943  000CC4                     l9844:
  5944                           
  5945                           ; BSR set to: 0
  5946  000CC4  0100               	movlb	0	; () banked
  5947  000CC6  516F               	movf	strtod@expon& (0+255),w,b
  5948  000CC8  0A80               	xorlw	128
  5949  000CCA  0F7F               	addlw	-129
  5950  000CCC  B0D8               	btfsc	status,0,c
  5951  000CCE  D018               	goto	l9852
  5952  000CD0  D054               	goto	l1552
  5953  000CD2                     l9848:
  5954                           
  5955                           ; BSR set to: 0
  5956  000CD2  C070  F02A         	movff	strtod@_u,___ftmul@f1
  5957  000CD6  C071  F02B         	movff	strtod@_u+1,___ftmul@f1+1
  5958  000CDA  C072  F02C         	movff	strtod@_u+2,___ftmul@f1+2
  5959  000CDE  0E03               	movlw	3
  5960  000CE0  6E2D               	movwf	___ftmul@f2,c
  5961  000CE2  0E15               	movlw	21
  5962  000CE4  6E2E               	movwf	___ftmul@f2+1,c
  5963  000CE6  0E50               	movlw	80
  5964  000CE8  6E2F               	movwf	___ftmul@f2+2,c
  5965  000CEA  EC72  F010         	call	___ftmul	;wreg free
  5966  000CEE  C02A  F070         	movff	?___ftmul,strtod@_u
  5967  000CF2  C02B  F071         	movff	?___ftmul+1,strtod@_u+1
  5968  000CF6  C02C  F072         	movff	?___ftmul+2,strtod@_u+2
  5969  000CFA  0EF6               	movlw	246
  5970  000CFC  0100               	movlb	0	; () banked
  5971  000CFE  276F               	addwf	strtod@expon& (0+255),f,b
  5972  000D00                     l9852:
  5973                           
  5974                           ; BSR set to: 0
  5975  000D00  0E0A               	movlw	10
  5976  000D02  0100               	movlb	0	; () banked
  5977  000D04  616F               	cpfslt	strtod@expon& (0+255),b
  5978  000D06  D7E5               	goto	l9848
  5979  000D08  D016               	goto	l9858
  5980  000D0A                     l9854:
  5981                           
  5982                           ; BSR set to: 0
  5983  000D0A  C070  F02A         	movff	strtod@_u,___ftmul@f1
  5984  000D0E  C071  F02B         	movff	strtod@_u+1,___ftmul@f1+1
  5985  000D12  C072  F02C         	movff	strtod@_u+2,___ftmul@f1+2
  5986  000D16  0E00               	movlw	0
  5987  000D18  6E2D               	movwf	___ftmul@f2,c
  5988  000D1A  0E20               	movlw	32
  5989  000D1C  6E2E               	movwf	___ftmul@f2+1,c
  5990  000D1E  0E41               	movlw	65
  5991  000D20  6E2F               	movwf	___ftmul@f2+2,c
  5992  000D22  EC72  F010         	call	___ftmul	;wreg free
  5993  000D26  C02A  F070         	movff	?___ftmul,strtod@_u
  5994  000D2A  C02B  F071         	movff	?___ftmul+1,strtod@_u+1
  5995  000D2E  C02C  F072         	movff	?___ftmul+2,strtod@_u+2
  5996  000D32  0100               	movlb	0	; () banked
  5997  000D34  076F               	decf	strtod@expon& (0+255),f,b
  5998  000D36                     l9858:
  5999                           
  6000                           ; BSR set to: 0
  6001  000D36  0100               	movlb	0	; () banked
  6002  000D38  516F               	movf	strtod@expon& (0+255),w,b
  6003  000D3A  0100               	movlb	0	; () banked
  6004  000D3C  A4D8               	btfss	status,2,c
  6005  000D3E  D7E5               	goto	l9854
  6006                           
  6007                           ; BSR set to: 0
  6008                           
  6009                           ; BSR set to: 0
  6010  000D40  0EFF               	movlw	255
  6011  000D42  6E16               	movwf	___ftge@ff1,c
  6012  000D44  0E7F               	movlw	127
  6013  000D46  6E17               	movwf	___ftge@ff1+1,c
  6014  000D48  0E7F               	movlw	127
  6015  000D4A  6E18               	movwf	___ftge@ff1+2,c
  6016  000D4C  C070  F019         	movff	strtod@_u,___ftge@ff2
  6017  000D50  C071  F01A         	movff	strtod@_u+1,___ftge@ff2+1
  6018  000D54  C072  F01B         	movff	strtod@_u+2,___ftge@ff2+2
  6019  000D58  ECAF  F015         	call	___ftge	;wreg free
  6020  000D5C  B0D8               	btfsc	status,0,c
  6021  000D5E  D00D               	goto	l1552
  6022  000D60  0100               	movlb	0	; () banked
  6023  000D62  B16E               	btfsc	strtod@flags& (0+255),0,b
  6024  000D64  D79B               	goto	l9836
  6025                           
  6026                           ; BSR set to: 0
  6027                           
  6028                           ; BSR set to: 0
  6029                           
  6030                           ; BSR set to: 0
  6031                           
  6032                           ; BSR set to: 0
  6033  000D66  0E00               	movlw	0
  6034  000D68  0100               	movlb	0	; () banked
  6035  000D6A  6F69               	movwf	?_strtod& (0+255),b
  6036  000D6C  0E80               	movlw	128
  6037  000D6E  0100               	movlb	0	; () banked
  6038  000D70  6F6A               	movwf	(?_strtod+1)& (0+255),b
  6039  000D72  0E00               	movlw	0
  6040  000D74  0100               	movlb	0	; () banked
  6041  000D76  6F6B               	movwf	(?_strtod+2)& (0+255),b
  6042                           
  6043                           ; BSR set to: 0
  6044  000D78  0012               	return	
  6045  000D7A                     l1552:
  6046  000D7A  0100               	movlb	0	; () banked
  6047  000D7C  A16E               	btfss	strtod@flags& (0+255),0,b
  6048  000D7E  D00E               	goto	l9874
  6049                           
  6050                           ; BSR set to: 0
  6051  000D80  C070  F066         	movff	strtod@_u,___ftneg@f1
  6052  000D84  C071  F067         	movff	strtod@_u+1,___ftneg@f1+1
  6053  000D88  C072  F068         	movff	strtod@_u+2,___ftneg@f1+2
  6054  000D8C  ECF3  F019         	call	___ftneg	;wreg free
  6055  000D90  C066  F070         	movff	?___ftneg,strtod@_u
  6056  000D94  C067  F071         	movff	?___ftneg+1,strtod@_u+1
  6057  000D98  C068  F072         	movff	?___ftneg+2,strtod@_u+2
  6058  000D9C                     l9874:
  6059  000D9C  C070  F069         	movff	strtod@_u,?_strtod
  6060  000DA0  C071  F06A         	movff	strtod@_u+1,?_strtod+1
  6061  000DA4  C072  F06B         	movff	strtod@_u+2,?_strtod+2
  6062  000DA8  0012               	return	
  6063  000DAA                     __end_of_strtod:
  6064                           	opt stack 0
  6065                           tosu	equ	0xFFF
  6066                           tosh	equ	0xFFE
  6067                           tosl	equ	0xFFD
  6068                           pclath	equ	0xFFA
  6069                           tblptru	equ	0xFF8
  6070                           tblptrh	equ	0xFF7
  6071                           tblptrl	equ	0xFF6
  6072                           tablat	equ	0xFF5
  6073                           prodh	equ	0xFF4
  6074                           prodl	equ	0xFF3
  6075                           intcon	equ	0xFF2
  6076                           intcon2	equ	0xFF1
  6077                           intcon3	equ	0xFF0
  6078                           postinc0	equ	0xFEE
  6079                           wreg	equ	0xFE8
  6080                           indf1	equ	0xFE7
  6081                           postinc1	equ	0xFE6
  6082                           postdec1	equ	0xFE5
  6083                           fsr1h	equ	0xFE2
  6084                           fsr1l	equ	0xFE1
  6085                           indf2	equ	0xFDF
  6086                           postinc2	equ	0xFDE
  6087                           postdec2	equ	0xFDD
  6088                           fsr2h	equ	0xFDA
  6089                           fsr2l	equ	0xFD9
  6090                           status	equ	0xFD8
  6091                           
  6092 ;; *************** function _isspace *****************
  6093 ;; Defined at:
  6094 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isspace.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  c               1    wreg     unsigned char 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  c               1   23[COMRAM] unsigned char 
  6099 ;; Return value:  Size  Location     Type
  6100 ;;		None               void
  6101 ;; Registers used:
  6102 ;;		wreg, status,2, status,0
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6108 ;;      Params:         0       0       0       0       0       0       0       0       0
  6109 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6110 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6111 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6112 ;;Total ram usage:        3 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:    2
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_strtod
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           	psect	text27
  6123  00348E                     __ptext27:
  6124                           	opt stack 0
  6125  00348E                     _isspace:
  6126                           	opt stack 23
  6127                           
  6128                           ;incstack = 0
  6129                           ;isspace@c stored from wreg
  6130  00348E  6E18               	movwf	isspace@c,c
  6131  003490  0E01               	movlw	1
  6132  003492  6E17               	movwf	_isspace$2854,c
  6133  003494  0E20               	movlw	32
  6134  003496  1818               	xorwf	isspace@c,w,c
  6135  003498  B4D8               	btfsc	status,2,c
  6136  00349A  D008               	goto	l9402
  6137  00349C  0E0E               	movlw	14
  6138  00349E  6018               	cpfslt	isspace@c,c
  6139  0034A0  D003               	goto	l9400
  6140  0034A2  0E09               	movlw	9
  6141  0034A4  6018               	cpfslt	isspace@c,c
  6142  0034A6  D002               	goto	l9402
  6143  0034A8                     l9400:
  6144  0034A8  0E00               	movlw	0
  6145  0034AA  6E17               	movwf	_isspace$2854,c
  6146  0034AC                     l9402:
  6147  0034AC  C017  F016         	movff	_isspace$2854,??_isspace
  6148  0034B0  3016               	rrcf	??_isspace,w,c
  6149  0034B2  0012               	return	
  6150  0034B4                     __end_of_isspace:
  6151                           	opt stack 0
  6152                           tosu	equ	0xFFF
  6153                           tosh	equ	0xFFE
  6154                           tosl	equ	0xFFD
  6155                           pclath	equ	0xFFA
  6156                           tblptru	equ	0xFF8
  6157                           tblptrh	equ	0xFF7
  6158                           tblptrl	equ	0xFF6
  6159                           tablat	equ	0xFF5
  6160                           prodh	equ	0xFF4
  6161                           prodl	equ	0xFF3
  6162                           intcon	equ	0xFF2
  6163                           intcon2	equ	0xFF1
  6164                           intcon3	equ	0xFF0
  6165                           postinc0	equ	0xFEE
  6166                           wreg	equ	0xFE8
  6167                           indf1	equ	0xFE7
  6168                           postinc1	equ	0xFE6
  6169                           postdec1	equ	0xFE5
  6170                           fsr1h	equ	0xFE2
  6171                           fsr1l	equ	0xFE1
  6172                           indf2	equ	0xFDF
  6173                           postinc2	equ	0xFDE
  6174                           postdec2	equ	0xFDD
  6175                           fsr2h	equ	0xFDA
  6176                           fsr2l	equ	0xFD9
  6177                           status	equ	0xFD8
  6178                           
  6179 ;; *************** function ___altoft *****************
  6180 ;; Defined at:
  6181 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\altoft.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  c               4   29[COMRAM] long 
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;  sign            1   38[COMRAM] unsigned char 
  6186 ;;  exp             1   37[COMRAM] unsigned char 
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  3   29[COMRAM] float 
  6189 ;; Registers used:
  6190 ;;		wreg, status,2, status,0, cstack
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6196 ;;      Params:         4       0       0       0       0       0       0       0       0
  6197 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6198 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6199 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6200 ;;Total ram usage:       10 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; Hardware stack levels required when called:    3
  6203 ;; This function calls:
  6204 ;;		___ftpack
  6205 ;; This function is called by:
  6206 ;;		_strtod
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text28
  6211  002DFC                     __ptext28:
  6212                           	opt stack 0
  6213  002DFC                     ___altoft:
  6214                           	opt stack 22
  6215                           
  6216                           ;incstack = 0
  6217  002DFC  0E00               	movlw	0
  6218  002DFE  6E27               	movwf	___altoft@sign,c
  6219  002E00  0E8E               	movlw	142
  6220  002E02  6E26               	movwf	___altoft@exp,c
  6221  002E04  AE21               	btfss	___altoft@c+3,7,c
  6222  002E06  D011               	goto	l9222
  6223  002E08  1E21               	comf	___altoft@c+3,f,c
  6224  002E0A  1E20               	comf	___altoft@c+2,f,c
  6225  002E0C  1E1F               	comf	___altoft@c+1,f,c
  6226  002E0E  6C1E               	negf	___altoft@c,c
  6227  002E10  0E00               	movlw	0
  6228  002E12  221F               	addwfc	___altoft@c+1,f,c
  6229  002E14  2220               	addwfc	___altoft@c+2,f,c
  6230  002E16  2221               	addwfc	___altoft@c+3,f,c
  6231  002E18  0E01               	movlw	1
  6232  002E1A  6E27               	movwf	___altoft@sign,c
  6233  002E1C  D006               	goto	l9222
  6234  002E1E                     l9220:
  6235  002E1E  90D8               	bcf	status,0,c
  6236  002E20  3221               	rrcf	___altoft@c+3,f,c
  6237  002E22  3220               	rrcf	___altoft@c+2,f,c
  6238  002E24  321F               	rrcf	___altoft@c+1,f,c
  6239  002E26  321E               	rrcf	___altoft@c,f,c
  6240  002E28  2A26               	incf	___altoft@exp,f,c
  6241  002E2A                     l9222:
  6242  002E2A  0E00               	movlw	0
  6243  002E2C  141E               	andwf	___altoft@c,w,c
  6244  002E2E  6E22               	movwf	??___altoft& (0+255),c
  6245  002E30  0E00               	movlw	0
  6246  002E32  141F               	andwf	___altoft@c+1,w,c
  6247  002E34  6E23               	movwf	(??___altoft+1)& (0+255),c
  6248  002E36  0E00               	movlw	0
  6249  002E38  1420               	andwf	___altoft@c+2,w,c
  6250  002E3A  6E24               	movwf	(??___altoft+2)& (0+255),c
  6251  002E3C  0EFF               	movlw	255
  6252  002E3E  1421               	andwf	___altoft@c+3,w,c
  6253  002E40  6E25               	movwf	(??___altoft+3)& (0+255),c
  6254  002E42  5022               	movf	??___altoft,w,c
  6255  002E44  1023               	iorwf	??___altoft+1,w,c
  6256  002E46  1024               	iorwf	??___altoft+2,w,c
  6257  002E48  1025               	iorwf	??___altoft+3,w,c
  6258  002E4A  A4D8               	btfss	status,2,c
  6259  002E4C  D7E8               	goto	l9220
  6260  002E4E  C01E  F016         	movff	___altoft@c,___ftpack@arg
  6261  002E52  C01F  F017         	movff	___altoft@c+1,___ftpack@arg+1
  6262  002E56  C020  F018         	movff	___altoft@c+2,___ftpack@arg+2
  6263  002E5A  C026  F019         	movff	___altoft@exp,___ftpack@exp
  6264  002E5E  C027  F01A         	movff	___altoft@sign,___ftpack@sign
  6265  002E62  ECC9  F013         	call	___ftpack	;wreg free
  6266  002E66  C016  F01E         	movff	?___ftpack,?___altoft
  6267  002E6A  C017  F01F         	movff	?___ftpack+1,?___altoft+1
  6268  002E6E  C018  F020         	movff	?___ftpack+2,?___altoft+2
  6269  002E72  0012               	return	
  6270  002E74                     __end_of___altoft:
  6271                           	opt stack 0
  6272                           tosu	equ	0xFFF
  6273                           tosh	equ	0xFFE
  6274                           tosl	equ	0xFFD
  6275                           pclath	equ	0xFFA
  6276                           tblptru	equ	0xFF8
  6277                           tblptrh	equ	0xFF7
  6278                           tblptrl	equ	0xFF6
  6279                           tablat	equ	0xFF5
  6280                           prodh	equ	0xFF4
  6281                           prodl	equ	0xFF3
  6282                           intcon	equ	0xFF2
  6283                           intcon2	equ	0xFF1
  6284                           intcon3	equ	0xFF0
  6285                           postinc0	equ	0xFEE
  6286                           wreg	equ	0xFE8
  6287                           indf1	equ	0xFE7
  6288                           postinc1	equ	0xFE6
  6289                           postdec1	equ	0xFE5
  6290                           fsr1h	equ	0xFE2
  6291                           fsr1l	equ	0xFE1
  6292                           indf2	equ	0xFDF
  6293                           postinc2	equ	0xFDE
  6294                           postdec2	equ	0xFDD
  6295                           fsr2h	equ	0xFDA
  6296                           fsr2l	equ	0xFD9
  6297                           status	equ	0xFD8
  6298                           
  6299 ;; *************** function _get_gpstime *****************
  6300 ;; Defined at:
  6301 ;;		line 124 in file "bibliotecas/GPS.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;		None
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;  time_buffer    15    0[BANK0 ] unsigned char [15]
  6306 ;;  _time           4   15[BANK0 ] unsigned long 
  6307 ;;  index           1   19[BANK0 ] unsigned char 
  6308 ;; Return value:  Size  Location     Type
  6309 ;;                  4   47[COMRAM] unsigned long 
  6310 ;; Registers used:
  6311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6317 ;;      Params:         4       0       0       0       0       0       0       0       0
  6318 ;;      Locals:         0      20       0       0       0       0       0       0       0
  6319 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6320 ;;      Totals:         5      20       0       0       0       0       0       0       0
  6321 ;;Total ram usage:       25 bytes
  6322 ;; Hardware stack levels used:    1
  6323 ;; Hardware stack levels required when called:    4
  6324 ;; This function calls:
  6325 ;;		_atol
  6326 ;; This function is called by:
  6327 ;;		_gps
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           	psect	text29
  6332  002D80                     __ptext29:
  6333                           	opt stack 0
  6334  002D80                     _get_gpstime:
  6335                           	opt stack 24
  6336                           
  6337                           ;GPS.c: 126: unsigned char index;
  6338                           ;GPS.c: 127: unsigned char time_buffer[15];
  6339                           ;GPS.c: 128: unsigned long int _time;
  6340                           ;GPS.c: 131: for(index = 0; gga_buffer[index]!=','; index++)
  6341                           
  6342                           ;incstack = 0
  6343  002D80  0E00               	movlw	0
  6344  002D82  0100               	movlb	0	; () banked
  6345  002D84  6F73               	movwf	get_gpstime@index& (0+255),b
  6346  002D86  D016               	goto	l10572
  6347  002D88                     l10568:
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;GPS.c: 132: {
  6351                           ;GPS.c: 133: time_buffer[index] = gga_buffer[index];
  6352  002D88  0100               	movlb	0	; () banked
  6353  002D8A  5173               	movf	get_gpstime@index& (0+255),w,b
  6354  002D8C  0D01               	mullw	1
  6355  002D8E  0E00               	movlw	low _gga_buffer
  6356  002D90  24F3               	addwf	prodl,w,c
  6357  002D92  6ED9               	movwf	fsr2l,c
  6358  002D94  0E01               	movlw	high _gga_buffer
  6359  002D96  20F4               	addwfc	prodh,w,c
  6360  002D98  6EDA               	movwf	fsr2h,c
  6361  002D9A  0100               	movlb	0	; () banked
  6362  002D9C  5173               	movf	get_gpstime@index& (0+255),w,b
  6363  002D9E  0D01               	mullw	1
  6364  002DA0  0E60               	movlw	low get_gpstime@time_buffer
  6365  002DA2  24F3               	addwf	prodl,w,c
  6366  002DA4  6EE1               	movwf	fsr1l,c
  6367  002DA6  0E00               	movlw	high get_gpstime@time_buffer
  6368  002DA8  20F4               	addwfc	prodh,w,c
  6369  002DAA  6EE2               	movwf	fsr1h,c
  6370  002DAC  CFDF FFE7          	movff	indf2,indf1
  6371                           
  6372                           ; BSR set to: 0
  6373  002DB0  0100               	movlb	0	; () banked
  6374  002DB2  2B73               	incf	get_gpstime@index& (0+255),f,b
  6375  002DB4                     l10572:
  6376                           
  6377                           ; BSR set to: 0
  6378  002DB4  0100               	movlb	0	; () banked
  6379  002DB6  5173               	movf	get_gpstime@index& (0+255),w,b
  6380  002DB8  0D01               	mullw	1
  6381  002DBA  0E00               	movlw	low _gga_buffer
  6382  002DBC  24F3               	addwf	prodl,w,c
  6383  002DBE  6ED9               	movwf	fsr2l,c
  6384  002DC0  0E01               	movlw	high _gga_buffer
  6385  002DC2  20F4               	addwfc	prodh,w,c
  6386  002DC4  6EDA               	movwf	fsr2h,c
  6387  002DC6  0E2C               	movlw	44
  6388  002DC8  18DE               	xorwf	postinc2,w,c
  6389  002DCA  A4D8               	btfss	status,2,c
  6390  002DCC  D7DD               	goto	l10568
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;GPS.c: 134: }
  6394                           ;GPS.c: 135: _time= atol(time_buffer);
  6395                           
  6396                           ; BSR set to: 0
  6397  002DCE  0E60               	movlw	low get_gpstime@time_buffer
  6398  002DD0  6E22               	movwf	atol@s,c
  6399  002DD2  0E00               	movlw	high get_gpstime@time_buffer
  6400  002DD4  6E23               	movwf	atol@s+1,c
  6401  002DD6  EC1B  F012         	call	_atol	;wreg free
  6402  002DDA  C022  F06F         	movff	?_atol,get_gpstime@_time
  6403  002DDE  C023  F070         	movff	?_atol+1,get_gpstime@_time+1
  6404  002DE2  C024  F071         	movff	?_atol+2,get_gpstime@_time+2
  6405  002DE6  C025  F072         	movff	?_atol+3,get_gpstime@_time+3
  6406                           
  6407                           ;GPS.c: 136: return _time;
  6408  002DEA  C06F  F030         	movff	get_gpstime@_time,?_get_gpstime
  6409  002DEE  C070  F031         	movff	get_gpstime@_time+1,?_get_gpstime+1
  6410  002DF2  C071  F032         	movff	get_gpstime@_time+2,?_get_gpstime+2
  6411  002DF6  C072  F033         	movff	get_gpstime@_time+3,?_get_gpstime+3
  6412  002DFA  0012               	return	
  6413  002DFC                     __end_of_get_gpstime:
  6414                           	opt stack 0
  6415                           tosu	equ	0xFFF
  6416                           tosh	equ	0xFFE
  6417                           tosl	equ	0xFFD
  6418                           pclath	equ	0xFFA
  6419                           tblptru	equ	0xFF8
  6420                           tblptrh	equ	0xFF7
  6421                           tblptrl	equ	0xFF6
  6422                           tablat	equ	0xFF5
  6423                           prodh	equ	0xFF4
  6424                           prodl	equ	0xFF3
  6425                           intcon	equ	0xFF2
  6426                           intcon2	equ	0xFF1
  6427                           intcon3	equ	0xFF0
  6428                           postinc0	equ	0xFEE
  6429                           wreg	equ	0xFE8
  6430                           indf1	equ	0xFE7
  6431                           postinc1	equ	0xFE6
  6432                           postdec1	equ	0xFE5
  6433                           fsr1h	equ	0xFE2
  6434                           fsr1l	equ	0xFE1
  6435                           indf2	equ	0xFDF
  6436                           postinc2	equ	0xFDE
  6437                           postdec2	equ	0xFDD
  6438                           fsr2h	equ	0xFDA
  6439                           fsr2l	equ	0xFD9
  6440                           status	equ	0xFD8
  6441                           
  6442 ;; *************** function _atol *****************
  6443 ;; Defined at:
  6444 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\atol.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;  s               2   33[COMRAM] PTR const unsigned char 
  6447 ;;		 -> get_gpstime@time_buffer(15), 
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;  a               4   42[COMRAM] long 
  6450 ;;  c               1   46[COMRAM] unsigned char 
  6451 ;;  sign            1   41[COMRAM] unsigned char 
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  4   33[COMRAM] long 
  6454 ;; Registers used:
  6455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6461 ;;      Params:         4       0       0       0       0       0       0       0       0
  6462 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6463 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6464 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6465 ;;Total ram usage:       14 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:    3
  6468 ;; This function calls:
  6469 ;;		___lmul
  6470 ;;		_isdigit
  6471 ;; This function is called by:
  6472 ;;		_get_gpstime
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           	psect	text30
  6477  002436                     __ptext30:
  6478                           	opt stack 0
  6479  002436                     _atol:
  6480                           	opt stack 24
  6481  002436  C022  FFD9         	movff	atol@s,fsr2l
  6482  00243A  C023  FFDA         	movff	atol@s+1,fsr2h
  6483  00243E  50DF               	movf	indf2,w,c
  6484  002440  6E2F               	movwf	atol@c,c
  6485  002442  4A22               	infsnz	atol@s,f,c
  6486  002444  2A23               	incf	atol@s+1,f,c
  6487  002446  0E20               	movlw	32
  6488  002448  182F               	xorwf	atol@c,w,c
  6489  00244A  B4D8               	btfsc	status,2,c
  6490  00244C  D7F4               	goto	l10210
  6491  00244E  0E09               	movlw	9
  6492  002450  182F               	xorwf	atol@c,w,c
  6493  002452  B4D8               	btfsc	status,2,c
  6494  002454  D7F0               	goto	l10210
  6495  002456  0E00               	movlw	0
  6496  002458  6E2B               	movwf	atol@a,c
  6497  00245A  0E00               	movlw	0
  6498  00245C  6E2C               	movwf	atol@a+1,c
  6499  00245E  0E00               	movlw	0
  6500  002460  6E2D               	movwf	atol@a+2,c
  6501  002462  0E00               	movlw	0
  6502  002464  6E2E               	movwf	atol@a+3,c
  6503  002466  0E00               	movlw	0
  6504  002468  6E2A               	movwf	atol@sign,c
  6505  00246A  0E2D               	movlw	45
  6506  00246C  182F               	xorwf	atol@c,w,c
  6507  00246E  A4D8               	btfss	status,2,c
  6508  002470  D005               	goto	l10228
  6509  002472  2A2A               	incf	atol@sign,f,c
  6510  002474  D02A               	goto	l10236
  6511  002476                     l10226:
  6512  002476  4A22               	infsnz	atol@s,f,c
  6513  002478  2A23               	incf	atol@s+1,f,c
  6514  00247A  D02E               	goto	l10240
  6515  00247C                     l10228:
  6516  00247C  0E2B               	movlw	43
  6517  00247E  182F               	xorwf	atol@c,w,c
  6518  002480  A4D8               	btfss	status,2,c
  6519  002482  D02A               	goto	l10240
  6520  002484  D022               	goto	l10236
  6521  002486                     l10234:
  6522  002486  C02B  F016         	movff	atol@a,___lmul@multiplier
  6523  00248A  C02C  F017         	movff	atol@a+1,___lmul@multiplier+1
  6524  00248E  C02D  F018         	movff	atol@a+2,___lmul@multiplier+2
  6525  002492  C02E  F019         	movff	atol@a+3,___lmul@multiplier+3
  6526  002496  0E0A               	movlw	10
  6527  002498  6E1A               	movwf	___lmul@multiplicand,c
  6528  00249A  0E00               	movlw	0
  6529  00249C  6E1B               	movwf	___lmul@multiplicand+1,c
  6530  00249E  0E00               	movlw	0
  6531  0024A0  6E1C               	movwf	___lmul@multiplicand+2,c
  6532  0024A2  0E00               	movlw	0
  6533  0024A4  6E1D               	movwf	___lmul@multiplicand+3,c
  6534  0024A6  ECE0  F018         	call	___lmul	;wreg free
  6535  0024AA  C02F  F026         	movff	atol@c,??_atol
  6536  0024AE  0ED0               	movlw	208
  6537  0024B0  2626               	addwf	??_atol,f,c
  6538  0024B2  5026               	movf	??_atol,w,c
  6539  0024B4  2416               	addwf	?___lmul,w,c
  6540  0024B6  6E2B               	movwf	atol@a,c
  6541  0024B8  0E00               	movlw	0
  6542  0024BA  2017               	addwfc	?___lmul+1,w,c
  6543  0024BC  6E2C               	movwf	atol@a+1,c
  6544  0024BE  0E00               	movlw	0
  6545  0024C0  2018               	addwfc	?___lmul+2,w,c
  6546  0024C2  6E2D               	movwf	atol@a+2,c
  6547  0024C4  0E00               	movlw	0
  6548  0024C6  2019               	addwfc	?___lmul+3,w,c
  6549  0024C8  6E2E               	movwf	atol@a+3,c
  6550  0024CA                     l10236:
  6551  0024CA  C022  FFD9         	movff	atol@s,fsr2l
  6552  0024CE  C023  FFDA         	movff	atol@s+1,fsr2h
  6553  0024D2  50DF               	movf	indf2,w,c
  6554  0024D4  6E2F               	movwf	atol@c,c
  6555  0024D6  D7CF               	goto	l10226
  6556  0024D8                     l10240:
  6557  0024D8  502F               	movf	atol@c,w,c
  6558  0024DA  EC90  F01A         	call	_isdigit
  6559  0024DE  B0D8               	btfsc	status,0,c
  6560  0024E0  D7D2               	goto	l10234
  6561  0024E2  502A               	movf	atol@sign,w,c
  6562  0024E4  B4D8               	btfsc	status,2,c
  6563  0024E6  D01A               	goto	l1578
  6564  0024E8  C02B  F026         	movff	atol@a,??_atol
  6565  0024EC  C02C  F027         	movff	atol@a+1,??_atol+1
  6566  0024F0  C02D  F028         	movff	atol@a+2,??_atol+2
  6567  0024F4  C02E  F029         	movff	atol@a+3,??_atol+3
  6568  0024F8  1E26               	comf	??_atol,f,c
  6569  0024FA  1E27               	comf	??_atol+1,f,c
  6570  0024FC  1E28               	comf	??_atol+2,f,c
  6571  0024FE  1E29               	comf	??_atol+3,f,c
  6572  002500  2A26               	incf	??_atol,f,c
  6573  002502  0E00               	movlw	0
  6574  002504  2227               	addwfc	??_atol+1,f,c
  6575  002506  2228               	addwfc	??_atol+2,f,c
  6576  002508  2229               	addwfc	??_atol+3,f,c
  6577  00250A  C026  F022         	movff	??_atol,?_atol
  6578  00250E  C027  F023         	movff	??_atol+1,?_atol+1
  6579  002512  C028  F024         	movff	??_atol+2,?_atol+2
  6580  002516  C029  F025         	movff	??_atol+3,?_atol+3
  6581  00251A  0012               	return	
  6582  00251C                     l1578:
  6583  00251C  C02B  F022         	movff	atol@a,?_atol
  6584  002520  C02C  F023         	movff	atol@a+1,?_atol+1
  6585  002524  C02D  F024         	movff	atol@a+2,?_atol+2
  6586  002528  C02E  F025         	movff	atol@a+3,?_atol+3
  6587  00252C  0012               	return		;funcret
  6588  00252E                     __end_of_atol:
  6589                           	opt stack 0
  6590                           tosu	equ	0xFFF
  6591                           tosh	equ	0xFFE
  6592                           tosl	equ	0xFFD
  6593                           pclath	equ	0xFFA
  6594                           tblptru	equ	0xFF8
  6595                           tblptrh	equ	0xFF7
  6596                           tblptrl	equ	0xFF6
  6597                           tablat	equ	0xFF5
  6598                           prodh	equ	0xFF4
  6599                           prodl	equ	0xFF3
  6600                           intcon	equ	0xFF2
  6601                           intcon2	equ	0xFF1
  6602                           intcon3	equ	0xFF0
  6603                           postinc0	equ	0xFEE
  6604                           wreg	equ	0xFE8
  6605                           indf1	equ	0xFE7
  6606                           postinc1	equ	0xFE6
  6607                           postdec1	equ	0xFE5
  6608                           fsr1h	equ	0xFE2
  6609                           fsr1l	equ	0xFE1
  6610                           indf2	equ	0xFDF
  6611                           postinc2	equ	0xFDE
  6612                           postdec2	equ	0xFDD
  6613                           fsr2h	equ	0xFDA
  6614                           fsr2l	equ	0xFD9
  6615                           status	equ	0xFD8
  6616                           
  6617 ;; *************** function ___lmul *****************
  6618 ;; Defined at:
  6619 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;  multiplier      4   21[COMRAM] unsigned long 
  6622 ;;  multiplicand    4   25[COMRAM] unsigned long 
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;  product         4   29[COMRAM] unsigned long 
  6625 ;; Return value:  Size  Location     Type
  6626 ;;                  4   21[COMRAM] unsigned long 
  6627 ;; Registers used:
  6628 ;;		wreg, status,2, status,0
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/0
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6634 ;;      Params:         8       0       0       0       0       0       0       0       0
  6635 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6637 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6638 ;;Total ram usage:       12 bytes
  6639 ;; Hardware stack levels used:    1
  6640 ;; Hardware stack levels required when called:    2
  6641 ;; This function calls:
  6642 ;;		Nothing
  6643 ;; This function is called by:
  6644 ;;		_strtod
  6645 ;;		_atol
  6646 ;;		_clust2sect
  6647 ;;		_pf_mount
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           	psect	text31
  6652  0031C0                     __ptext31:
  6653                           	opt stack 0
  6654  0031C0                     ___lmul:
  6655                           	opt stack 23
  6656                           
  6657                           ;incstack = 0
  6658  0031C0  0E00               	movlw	0
  6659  0031C2  6E1E               	movwf	___lmul@product,c
  6660  0031C4  0E00               	movlw	0
  6661  0031C6  6E1F               	movwf	___lmul@product+1,c
  6662  0031C8  0E00               	movlw	0
  6663  0031CA  6E20               	movwf	___lmul@product+2,c
  6664  0031CC  0E00               	movlw	0
  6665  0031CE  6E21               	movwf	___lmul@product+3,c
  6666  0031D0                     l9204:
  6667  0031D0  A016               	btfss	___lmul@multiplier,0,c
  6668  0031D2  D008               	goto	l9208
  6669  0031D4  501A               	movf	___lmul@multiplicand,w,c
  6670  0031D6  261E               	addwf	___lmul@product,f,c
  6671  0031D8  501B               	movf	___lmul@multiplicand+1,w,c
  6672  0031DA  221F               	addwfc	___lmul@product+1,f,c
  6673  0031DC  501C               	movf	___lmul@multiplicand+2,w,c
  6674  0031DE  2220               	addwfc	___lmul@product+2,f,c
  6675  0031E0  501D               	movf	___lmul@multiplicand+3,w,c
  6676  0031E2  2221               	addwfc	___lmul@product+3,f,c
  6677  0031E4                     l9208:
  6678  0031E4  90D8               	bcf	status,0,c
  6679  0031E6  361A               	rlcf	___lmul@multiplicand,f,c
  6680  0031E8  361B               	rlcf	___lmul@multiplicand+1,f,c
  6681  0031EA  361C               	rlcf	___lmul@multiplicand+2,f,c
  6682  0031EC  361D               	rlcf	___lmul@multiplicand+3,f,c
  6683  0031EE  90D8               	bcf	status,0,c
  6684  0031F0  3219               	rrcf	___lmul@multiplier+3,f,c
  6685  0031F2  3218               	rrcf	___lmul@multiplier+2,f,c
  6686  0031F4  3217               	rrcf	___lmul@multiplier+1,f,c
  6687  0031F6  3216               	rrcf	___lmul@multiplier,f,c
  6688  0031F8  5016               	movf	___lmul@multiplier,w,c
  6689  0031FA  1017               	iorwf	___lmul@multiplier+1,w,c
  6690  0031FC  1018               	iorwf	___lmul@multiplier+2,w,c
  6691  0031FE  1019               	iorwf	___lmul@multiplier+3,w,c
  6692  003200  A4D8               	btfss	status,2,c
  6693  003202  D7E6               	goto	l9204
  6694  003204  C01E  F016         	movff	___lmul@product,?___lmul
  6695  003208  C01F  F017         	movff	___lmul@product+1,?___lmul+1
  6696  00320C  C020  F018         	movff	___lmul@product+2,?___lmul+2
  6697  003210  C021  F019         	movff	___lmul@product+3,?___lmul+3
  6698  003214  0012               	return		;funcret
  6699  003216                     __end_of___lmul:
  6700                           	opt stack 0
  6701                           tosu	equ	0xFFF
  6702                           tosh	equ	0xFFE
  6703                           tosl	equ	0xFFD
  6704                           pclath	equ	0xFFA
  6705                           tblptru	equ	0xFF8
  6706                           tblptrh	equ	0xFF7
  6707                           tblptrl	equ	0xFF6
  6708                           tablat	equ	0xFF5
  6709                           prodh	equ	0xFF4
  6710                           prodl	equ	0xFF3
  6711                           intcon	equ	0xFF2
  6712                           intcon2	equ	0xFF1
  6713                           intcon3	equ	0xFF0
  6714                           postinc0	equ	0xFEE
  6715                           wreg	equ	0xFE8
  6716                           indf1	equ	0xFE7
  6717                           postinc1	equ	0xFE6
  6718                           postdec1	equ	0xFE5
  6719                           fsr1h	equ	0xFE2
  6720                           fsr1l	equ	0xFE1
  6721                           indf2	equ	0xFDF
  6722                           postinc2	equ	0xFDE
  6723                           postdec2	equ	0xFDD
  6724                           fsr2h	equ	0xFDA
  6725                           fsr2l	equ	0xFD9
  6726                           status	equ	0xFD8
  6727                           
  6728 ;; *************** function _get_dt *****************
  6729 ;; Defined at:
  6730 ;;		line 199 in file "bibliotecas/GPS.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  dt_pointer      1    wreg     unsigned char 
  6733 ;; Auto vars:     Size  Location     Type
  6734 ;;  dt_pointer      1   32[COMRAM] unsigned char 
  6735 ;;  _dt             4    0        unsigned long 
  6736 ;;  dt_index        1   34[COMRAM] unsigned char 
  6737 ;;  index           1   33[COMRAM] unsigned char 
  6738 ;; Return value:  Size  Location     Type
  6739 ;;                  4   27[COMRAM] unsigned long 
  6740 ;; Registers used:
  6741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6747 ;;      Params:         4       0       0       0       0       0       0       0       0
  6748 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6749 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6750 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6751 ;;Total ram usage:        8 bytes
  6752 ;; Hardware stack levels used:    1
  6753 ;; Hardware stack levels required when called:    3
  6754 ;; This function calls:
  6755 ;;		_strlen
  6756 ;; This function is called by:
  6757 ;;		_gps
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           	psect	text32
  6762  003030                     __ptext32:
  6763                           	opt stack 0
  6764  003030                     _get_dt:
  6765                           	opt stack 25
  6766                           
  6767                           ;incstack = 0
  6768                           ;get_dt@dt_pointer stored from wreg
  6769  003030  6E21               	movwf	get_dt@dt_pointer,c
  6770                           
  6771                           ;GPS.c: 201: unsigned char dt_index = dt_pointer + 1;
  6772  003032  2821               	incf	get_dt@dt_pointer,w,c
  6773  003034  6E23               	movwf	get_dt@dt_index,c
  6774                           
  6775                           ;GPS.c: 202: unsigned long int _dt;
  6776                           ;GPS.c: 203: unsigned char index;
  6777                           ;GPS.c: 204: index = 0;
  6778  003036  0E00               	movlw	0
  6779  003038  6E22               	movwf	get_dt@index,c
  6780                           
  6781                           ;GPS.c: 207: for(;rmc_buffer[dt_index]!=',';dt_index++){
  6782  00303A  D014               	goto	l10594
  6783  00303C                     l10588:
  6784                           
  6785                           ;GPS.c: 208: dado_buffer[index]= rmc_buffer[dt_index];
  6786  00303C  5023               	movf	get_dt@dt_index,w,c
  6787  00303E  0D01               	mullw	1
  6788  003040  0E00               	movlw	low _rmc_buffer
  6789  003042  24F3               	addwf	prodl,w,c
  6790  003044  6ED9               	movwf	fsr2l,c
  6791  003046  0E02               	movlw	high _rmc_buffer
  6792  003048  20F4               	addwfc	prodh,w,c
  6793  00304A  6EDA               	movwf	fsr2h,c
  6794  00304C  5022               	movf	get_dt@index,w,c
  6795  00304E  0D01               	mullw	1
  6796  003050  0EDE               	movlw	low _dado_buffer
  6797  003052  24F3               	addwf	prodl,w,c
  6798  003054  6EE1               	movwf	fsr1l,c
  6799  003056  0E00               	movlw	high _dado_buffer
  6800  003058  20F4               	addwfc	prodh,w,c
  6801  00305A  6EE2               	movwf	fsr1h,c
  6802  00305C  CFDF FFE7          	movff	indf2,indf1
  6803                           
  6804                           ;GPS.c: 209: index++;
  6805  003060  2A22               	incf	get_dt@index,f,c
  6806  003062  2A23               	incf	get_dt@dt_index,f,c
  6807  003064                     l10594:
  6808  003064  5023               	movf	get_dt@dt_index,w,c
  6809  003066  0D01               	mullw	1
  6810  003068  0E00               	movlw	low _rmc_buffer
  6811  00306A  24F3               	addwf	prodl,w,c
  6812  00306C  6ED9               	movwf	fsr2l,c
  6813  00306E  0E02               	movlw	high _rmc_buffer
  6814  003070  20F4               	addwfc	prodh,w,c
  6815  003072  6EDA               	movwf	fsr2h,c
  6816  003074  0E2C               	movlw	44
  6817  003076  18DE               	xorwf	postinc2,w,c
  6818  003078  A4D8               	btfss	status,2,c
  6819  00307A  D7E0               	goto	l10588
  6820                           
  6821                           ;GPS.c: 210: }
  6822                           ;GPS.c: 212: dado_buffer[strlen(dado_buffer) - 0] = '\0';
  6823  00307C  0EDE               	movlw	low _dado_buffer
  6824  00307E  6E16               	movwf	strlen@s,c
  6825  003080  0E00               	movlw	high _dado_buffer
  6826  003082  6E17               	movwf	strlen@s+1,c
  6827  003084  ECA0  F019         	call	_strlen	;wreg free
  6828  003088  0EDE               	movlw	low _dado_buffer
  6829  00308A  2416               	addwf	?_strlen,w,c
  6830  00308C  6ED9               	movwf	fsr2l,c
  6831  00308E  0E00               	movlw	high _dado_buffer
  6832  003090  2017               	addwfc	?_strlen+1,w,c
  6833  003092  6EDA               	movwf	fsr2h,c
  6834  003094  0E00               	movlw	0
  6835  003096  6EDF               	movwf	indf2,c
  6836  003098  0012               	return		;funcret
  6837  00309A                     __end_of_get_dt:
  6838                           	opt stack 0
  6839                           tosu	equ	0xFFF
  6840                           tosh	equ	0xFFE
  6841                           tosl	equ	0xFFD
  6842                           pclath	equ	0xFFA
  6843                           tblptru	equ	0xFF8
  6844                           tblptrh	equ	0xFF7
  6845                           tblptrl	equ	0xFF6
  6846                           tablat	equ	0xFF5
  6847                           prodh	equ	0xFF4
  6848                           prodl	equ	0xFF3
  6849                           intcon	equ	0xFF2
  6850                           intcon2	equ	0xFF1
  6851                           intcon3	equ	0xFF0
  6852                           postinc0	equ	0xFEE
  6853                           wreg	equ	0xFE8
  6854                           indf1	equ	0xFE7
  6855                           postinc1	equ	0xFE6
  6856                           postdec1	equ	0xFE5
  6857                           fsr1h	equ	0xFE2
  6858                           fsr1l	equ	0xFE1
  6859                           indf2	equ	0xFDF
  6860                           postinc2	equ	0xFDE
  6861                           postdec2	equ	0xFDD
  6862                           fsr2h	equ	0xFDA
  6863                           fsr2l	equ	0xFD9
  6864                           status	equ	0xFD8
  6865                           
  6866 ;; *************** function _strlen *****************
  6867 ;; Defined at:
  6868 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
  6869 ;; Parameters:    Size  Location     Type
  6870 ;;  s               2   21[COMRAM] PTR const unsigned char 
  6871 ;;		 -> dado_buffer(7), 
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;  cp              2   25[COMRAM] PTR const unsigned char 
  6874 ;;		 -> dado_buffer(7), 
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  2   21[COMRAM] unsigned int 
  6877 ;; Registers used:
  6878 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6884 ;;      Params:         2       0       0       0       0       0       0       0       0
  6885 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6886 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6887 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6888 ;;Total ram usage:        6 bytes
  6889 ;; Hardware stack levels used:    1
  6890 ;; Hardware stack levels required when called:    2
  6891 ;; This function calls:
  6892 ;;		Nothing
  6893 ;; This function is called by:
  6894 ;;		_get_dt
  6895 ;; This function uses a non-reentrant model
  6896 ;;
  6897                           
  6898                           	psect	text33
  6899  003340                     __ptext33:
  6900                           	opt stack 0
  6901  003340                     _strlen:
  6902                           	opt stack 25
  6903                           
  6904                           ;incstack = 0
  6905  003340  C016  F01A         	movff	strlen@s,strlen@cp
  6906  003344  C017  F01B         	movff	strlen@s+1,strlen@cp+1
  6907  003348  D002               	goto	l10256
  6908  00334A                     l10254:
  6909  00334A  4A1A               	infsnz	strlen@cp,f,c
  6910  00334C  2A1B               	incf	strlen@cp+1,f,c
  6911  00334E                     l10256:
  6912  00334E  C01A  FFD9         	movff	strlen@cp,fsr2l
  6913  003352  C01B  FFDA         	movff	strlen@cp+1,fsr2h
  6914  003356  50DF               	movf	indf2,w,c
  6915  003358  A4D8               	btfss	status,2,c
  6916  00335A  D7F7               	goto	l10254
  6917  00335C  C016  F018         	movff	strlen@s,??_strlen
  6918  003360  C017  F019         	movff	strlen@s+1,??_strlen+1
  6919  003364  1E18               	comf	??_strlen,f,c
  6920  003366  1E19               	comf	??_strlen+1,f,c
  6921  003368  4A18               	infsnz	??_strlen,f,c
  6922  00336A  2A19               	incf	??_strlen+1,f,c
  6923  00336C  501A               	movf	strlen@cp,w,c
  6924  00336E  2418               	addwf	??_strlen,w,c
  6925  003370  6E16               	movwf	?_strlen,c
  6926  003372  501B               	movf	strlen@cp+1,w,c
  6927  003374  2019               	addwfc	??_strlen+1,w,c
  6928  003376  6E17               	movwf	?_strlen+1,c
  6929  003378  0012               	return	
  6930  00337A                     __end_of_strlen:
  6931                           	opt stack 0
  6932                           tosu	equ	0xFFF
  6933                           tosh	equ	0xFFE
  6934                           tosl	equ	0xFFD
  6935                           pclath	equ	0xFFA
  6936                           tblptru	equ	0xFF8
  6937                           tblptrh	equ	0xFF7
  6938                           tblptrl	equ	0xFF6
  6939                           tablat	equ	0xFF5
  6940                           prodh	equ	0xFF4
  6941                           prodl	equ	0xFF3
  6942                           intcon	equ	0xFF2
  6943                           intcon2	equ	0xFF1
  6944                           intcon3	equ	0xFF0
  6945                           postinc0	equ	0xFEE
  6946                           wreg	equ	0xFE8
  6947                           indf1	equ	0xFE7
  6948                           postinc1	equ	0xFE6
  6949                           postdec1	equ	0xFE5
  6950                           fsr1h	equ	0xFE2
  6951                           fsr1l	equ	0xFE1
  6952                           indf2	equ	0xFDF
  6953                           postinc2	equ	0xFDE
  6954                           postdec2	equ	0xFDD
  6955                           fsr2h	equ	0xFDA
  6956                           fsr2l	equ	0xFD9
  6957                           status	equ	0xFD8
  6958                           
  6959 ;; *************** function _escreve_frase_ram_lcd *****************
  6960 ;; Defined at:
  6961 ;;		line 445 in file "bibliotecas/display_lcd.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  buffer          2   24[COMRAM] PTR unsigned char 
  6964 ;;		 -> escreve_inteiro_lcd@texto(7), STR_28(3), STR_27(8), STR_26(14), 
  6965 ;;		 -> STR_25(13), STR_24(9), STR_23(14), leitura_chave@pos_ignicao_on(17), 
  6966 ;;		 -> leitura_chave@pos_ignicao_crank(17), leitura_chave@pos_ignicao_off(17), STR_22(17), STR_21(16), 
  6967 ;;		 -> STR_20(14), STR_19(14), STR_18(14), STR_17(14), 
  6968 ;;		 -> STR_16(13), STR_15(17), STR_12(17), STR_11(15), 
  6969 ;;		 -> STR_10(14), STR_8(5), STR_6(5), gps@gps_buffer(15), 
  6970 ;;		 -> dado_buffer(7), STR_4(6), data_buffer(15), STR_3(6), 
  6971 ;;		 -> STR_2(6), STR_1(5), mensagem_inicial@msg_dois(17), mensagem_inicial@msg_linha_um(17), 
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;		None
  6974 ;; Return value:  Size  Location     Type
  6975 ;;                  1    wreg      void 
  6976 ;; Registers used:
  6977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6983 ;;      Params:         2       0       0       0       0       0       0       0       0
  6984 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6986 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6987 ;;Total ram usage:        2 bytes
  6988 ;; Hardware stack levels used:    1
  6989 ;; Hardware stack levels required when called:    4
  6990 ;; This function calls:
  6991 ;;		_escreve_caractere_lcd
  6992 ;; This function is called by:
  6993 ;;		_mensagem_inicial
  6994 ;;		_gps
  6995 ;;		_SDCard
  6996 ;;		_inicializa_SPI
  6997 ;;		_leitura_chave
  6998 ;;		_disk_initialize
  6999 ;;		_disk_readp
  7000 ;;		_escreve_inteiro_lcd
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004                           	psect	text34
  7005  003216                     __ptext34:
  7006                           	opt stack 0
  7007  003216                     _escreve_frase_ram_lcd:
  7008                           	opt stack 25
  7009                           
  7010                           ;display_lcd.c: 447: while(*buffer)
  7011                           
  7012                           ;incstack = 0
  7013  003216  D014               	goto	l10520
  7014  003218                     l10516:
  7015                           
  7016                           ;display_lcd.c: 448: {
  7017                           ;display_lcd.c: 449: escreve_caractere_lcd(*buffer);
  7018  003218  C019  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
  7019  00321C  C01A  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
  7020  003220  6AF8               	clrf	tblptru,c
  7021  003222  0E07               	movlw	(high __ramtop+-1)
  7022  003224  64F7               	cpfsgt	tblptrh,c
  7023  003226  D003               	bra	u12617
  7024  003228  0008               	tblrd		*
  7025  00322A  50F5               	movf	tablat,w,c
  7026  00322C  D005               	bra	u12610
  7027  00322E                     u12617:
  7028  00322E  CFF6 FFE9          	movff	tblptrl,fsr0l
  7029  003232  CFF7 FFEA          	movff	tblptrh,fsr0h
  7030  003236  50EF               	movf	indf0,w,c
  7031  003238                     u12610:
  7032  003238  EC3A  F017         	call	_escreve_caractere_lcd
  7033                           
  7034                           ;display_lcd.c: 450: buffer++;
  7035  00323C  4A19               	infsnz	escreve_frase_ram_lcd@buffer,f,c
  7036  00323E  2A1A               	incf	escreve_frase_ram_lcd@buffer+1,f,c
  7037  003240                     l10520:
  7038  003240  C019  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
  7039  003244  C01A  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
  7040  003248  6AF8               	clrf	tblptru,c
  7041  00324A  0E07               	movlw	(high __ramtop+-1)
  7042  00324C  64F7               	cpfsgt	tblptrh,c
  7043  00324E  D003               	bra	u12627
  7044  003250  0008               	tblrd		*
  7045  003252  50F5               	movf	tablat,w,c
  7046  003254  D005               	bra	u12620
  7047  003256                     u12627:
  7048  003256  CFF6 FFE9          	movff	tblptrl,fsr0l
  7049  00325A  CFF7 FFEA          	movff	tblptrh,fsr0h
  7050  00325E  50EF               	movf	indf0,w,c
  7051  003260                     u12620:
  7052  003260  0900               	iorlw	0
  7053  003262  B4D8               	btfsc	status,2,c
  7054  003264  0012               	return	
  7055  003266  D7D8               	goto	l10516
  7056  003268                     __end_of_escreve_frase_ram_lcd:
  7057                           	opt stack 0
  7058                           tosu	equ	0xFFF
  7059                           tosh	equ	0xFFE
  7060                           tosl	equ	0xFFD
  7061                           pclath	equ	0xFFA
  7062                           tblptru	equ	0xFF8
  7063                           tblptrh	equ	0xFF7
  7064                           tblptrl	equ	0xFF6
  7065                           tablat	equ	0xFF5
  7066                           prodh	equ	0xFF4
  7067                           prodl	equ	0xFF3
  7068                           intcon	equ	0xFF2
  7069                           intcon2	equ	0xFF1
  7070                           intcon3	equ	0xFF0
  7071                           indf0	equ	0xFEF
  7072                           postinc0	equ	0xFEE
  7073                           fsr0h	equ	0xFEA
  7074                           fsr0l	equ	0xFE9
  7075                           wreg	equ	0xFE8
  7076                           indf1	equ	0xFE7
  7077                           postinc1	equ	0xFE6
  7078                           postdec1	equ	0xFE5
  7079                           fsr1h	equ	0xFE2
  7080                           fsr1l	equ	0xFE1
  7081                           indf2	equ	0xFDF
  7082                           postinc2	equ	0xFDE
  7083                           postdec2	equ	0xFDD
  7084                           fsr2h	equ	0xFDA
  7085                           fsr2l	equ	0xFD9
  7086                           status	equ	0xFD8
  7087                           
  7088 ;; *************** function _escreve_caractere_lcd *****************
  7089 ;; Defined at:
  7090 ;;		line 323 in file "bibliotecas/display_lcd.c"
  7091 ;; Parameters:    Size  Location     Type
  7092 ;;  data            1    wreg     unsigned char 
  7093 ;; Auto vars:     Size  Location     Type
  7094 ;;  data            1   23[COMRAM] unsigned char 
  7095 ;; Return value:  Size  Location     Type
  7096 ;;                  1    wreg      void 
  7097 ;; Registers used:
  7098 ;;		wreg, status,2, status,0, cstack
  7099 ;; Tracked objects:
  7100 ;;		On entry : 0/0
  7101 ;;		On exit  : 0/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7104 ;;      Params:         0       0       0       0       0       0       0       0       0
  7105 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7107 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7108 ;;Total ram usage:        1 bytes
  7109 ;; Hardware stack levels used:    1
  7110 ;; Hardware stack levels required when called:    3
  7111 ;; This function calls:
  7112 ;;		_delay
  7113 ;; This function is called by:
  7114 ;;		_escreve_frase_ram_lcd
  7115 ;;		_escreve_float_lcd
  7116 ;;		_escreve_frase_lcd
  7117 ;;		_cria_caractere_lcd
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121                           	psect	text35
  7122  002E74                     __ptext35:
  7123                           	opt stack 0
  7124  002E74                     _escreve_caractere_lcd:
  7125                           	opt stack 25
  7126                           
  7127                           ;incstack = 0
  7128                           ;escreve_caractere_lcd@data stored from wreg
  7129  002E74  6E18               	movwf	escreve_caractere_lcd@data,c
  7130                           
  7131                           ;display_lcd.c: 326: PORTDbits.RD2 = 0;
  7132  002E76  9483               	bcf	3971,2,c	;volatile
  7133                           
  7134                           ;display_lcd.c: 327: PORTDbits.RD1 = 1;
  7135  002E78  8283               	bsf	3971,1,c	;volatile
  7136                           
  7137                           ;display_lcd.c: 328: PORTDbits.RD0 = 0;
  7138  002E7A  9083               	bcf	3971,0,c	;volatile
  7139                           
  7140                           ;display_lcd.c: 331: if(data&0b00010000){PORTDbits.RD4=1;}
  7141  002E7C  A818               	btfss	escreve_caractere_lcd@data,4,c
  7142  002E7E  D002               	goto	l698
  7143  002E80  8883               	bsf	3971,4,c	;volatile
  7144  002E82  D001               	goto	l10442
  7145  002E84                     l698:
  7146                           
  7147                           ;display_lcd.c: 332: else {PORTDbits.RD4=0;}
  7148  002E84  9883               	bcf	3971,4,c	;volatile
  7149  002E86                     l10442:
  7150                           
  7151                           ;display_lcd.c: 333: if(data&0b00100000){PORTDbits.RD5=1;}
  7152  002E86  AA18               	btfss	escreve_caractere_lcd@data,5,c
  7153  002E88  D002               	goto	l700
  7154  002E8A  8A83               	bsf	3971,5,c	;volatile
  7155  002E8C  D001               	goto	l10446
  7156  002E8E                     l700:
  7157                           
  7158                           ;display_lcd.c: 334: else {PORTDbits.RD5=0;}
  7159  002E8E  9A83               	bcf	3971,5,c	;volatile
  7160  002E90                     l10446:
  7161                           
  7162                           ;display_lcd.c: 335: if(data&0b01000000){PORTDbits.RD6=1;}
  7163  002E90  AC18               	btfss	escreve_caractere_lcd@data,6,c
  7164  002E92  D002               	goto	l702
  7165  002E94  8C83               	bsf	3971,6,c	;volatile
  7166  002E96  D001               	goto	l10450
  7167  002E98                     l702:
  7168                           
  7169                           ;display_lcd.c: 336: else {PORTDbits.RD6=0;}
  7170  002E98  9C83               	bcf	3971,6,c	;volatile
  7171  002E9A                     l10450:
  7172                           
  7173                           ;display_lcd.c: 337: if(data&0b10000000){PORTDbits.RD7=1;}
  7174  002E9A  AE18               	btfss	escreve_caractere_lcd@data,7,c
  7175  002E9C  D002               	goto	l704
  7176  002E9E  8E83               	bsf	3971,7,c	;volatile
  7177  002EA0  D001               	goto	l705
  7178  002EA2                     l704:
  7179                           
  7180                           ;display_lcd.c: 338: else {PORTDbits.RD7=0;}
  7181  002EA2  9E83               	bcf	3971,7,c	;volatile
  7182  002EA4                     l705:
  7183                           
  7184                           ;display_lcd.c: 341: PORTDbits.RD0 = 1;
  7185  002EA4  8083               	bsf	3971,0,c	;volatile
  7186                           
  7187                           ;display_lcd.c: 342: delay();
  7188  002EA6  EC6D  F01A         	call	_delay	;wreg free
  7189                           
  7190                           ;display_lcd.c: 343: PORTDbits.RD0 = 0;
  7191  002EAA  9083               	bcf	3971,0,c	;volatile
  7192                           
  7193                           ;display_lcd.c: 344: delay();
  7194  002EAC  EC6D  F01A         	call	_delay	;wreg free
  7195                           
  7196                           ;display_lcd.c: 348: if(data&0b00000001){PORTDbits.RD4=1;}
  7197  002EB0  A018               	btfss	escreve_caractere_lcd@data,0,c
  7198  002EB2  D002               	goto	l706
  7199  002EB4  8883               	bsf	3971,4,c	;volatile
  7200  002EB6  D001               	goto	l707
  7201  002EB8                     l706:
  7202                           
  7203                           ;display_lcd.c: 349: else {PORTDbits.RD4=0;}
  7204  002EB8  9883               	bcf	3971,4,c	;volatile
  7205  002EBA                     l707:
  7206                           
  7207                           ;display_lcd.c: 350: if(data&0b00000010){PORTDbits.RD5=1;}
  7208  002EBA  A218               	btfss	escreve_caractere_lcd@data,1,c
  7209  002EBC  D002               	goto	l708
  7210  002EBE  8A83               	bsf	3971,5,c	;volatile
  7211  002EC0  D001               	goto	l709
  7212  002EC2                     l708:
  7213                           
  7214                           ;display_lcd.c: 351: else {PORTDbits.RD5=0;}
  7215  002EC2  9A83               	bcf	3971,5,c	;volatile
  7216  002EC4                     l709:
  7217                           
  7218                           ;display_lcd.c: 352: if(data&0b00000100){PORTDbits.RD6=1;}
  7219  002EC4  A418               	btfss	escreve_caractere_lcd@data,2,c
  7220  002EC6  D002               	goto	l710
  7221  002EC8  8C83               	bsf	3971,6,c	;volatile
  7222  002ECA  D001               	goto	l711
  7223  002ECC                     l710:
  7224                           
  7225                           ;display_lcd.c: 353: else {PORTDbits.RD6=0;}
  7226  002ECC  9C83               	bcf	3971,6,c	;volatile
  7227  002ECE                     l711:
  7228                           
  7229                           ;display_lcd.c: 354: if(data&0b00001000){PORTDbits.RD7=1;}
  7230  002ECE  A618               	btfss	escreve_caractere_lcd@data,3,c
  7231  002ED0  D002               	goto	l712
  7232  002ED2  8E83               	bsf	3971,7,c	;volatile
  7233  002ED4  D001               	goto	l713
  7234  002ED6                     l712:
  7235                           
  7236                           ;display_lcd.c: 355: else {PORTDbits.RD7=0;}
  7237  002ED6  9E83               	bcf	3971,7,c	;volatile
  7238  002ED8                     l713:
  7239                           
  7240                           ;display_lcd.c: 358: PORTDbits.RD0 = 1;
  7241  002ED8  8083               	bsf	3971,0,c	;volatile
  7242                           
  7243                           ;display_lcd.c: 359: delay();
  7244  002EDA  EC6D  F01A         	call	_delay	;wreg free
  7245                           
  7246                           ;display_lcd.c: 360: PORTDbits.RD0 = 0;
  7247  002EDE  9083               	bcf	3971,0,c	;volatile
  7248                           
  7249                           ;display_lcd.c: 361: delay();
  7250  002EE0  EC6D  F01A         	call	_delay	;wreg free
  7251  002EE4  0012               	return		;funcret
  7252  002EE6                     __end_of_escreve_caractere_lcd:
  7253                           	opt stack 0
  7254                           tosu	equ	0xFFF
  7255                           tosh	equ	0xFFE
  7256                           tosl	equ	0xFFD
  7257                           pclath	equ	0xFFA
  7258                           tblptru	equ	0xFF8
  7259                           tblptrh	equ	0xFF7
  7260                           tblptrl	equ	0xFF6
  7261                           tablat	equ	0xFF5
  7262                           prodh	equ	0xFF4
  7263                           prodl	equ	0xFF3
  7264                           intcon	equ	0xFF2
  7265                           intcon2	equ	0xFF1
  7266                           intcon3	equ	0xFF0
  7267                           indf0	equ	0xFEF
  7268                           postinc0	equ	0xFEE
  7269                           fsr0h	equ	0xFEA
  7270                           fsr0l	equ	0xFE9
  7271                           wreg	equ	0xFE8
  7272                           indf1	equ	0xFE7
  7273                           postinc1	equ	0xFE6
  7274                           postdec1	equ	0xFE5
  7275                           fsr1h	equ	0xFE2
  7276                           fsr1l	equ	0xFE1
  7277                           indf2	equ	0xFDF
  7278                           postinc2	equ	0xFDE
  7279                           postdec2	equ	0xFDD
  7280                           fsr2h	equ	0xFDA
  7281                           fsr2l	equ	0xFD9
  7282                           status	equ	0xFD8
  7283                           
  7284 ;; *************** function _escreve_cmd_lcd *****************
  7285 ;; Defined at:
  7286 ;;		line 162 in file "bibliotecas/display_lcd.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  comando         1    wreg     unsigned char 
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;  comando         1   23[COMRAM] unsigned char 
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  1    wreg      void 
  7293 ;; Registers used:
  7294 ;;		wreg, status,2, status,0, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7300 ;;      Params:         0       0       0       0       0       0       0       0       0
  7301 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7303 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7304 ;;Total ram usage:        1 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:    3
  7307 ;; This function calls:
  7308 ;;		_delay
  7309 ;; This function is called by:
  7310 ;;		_mensagem_inicial
  7311 ;;		_gps
  7312 ;;		_init_lcd
  7313 ;;		_SDCard
  7314 ;;		_inicializa_SPI
  7315 ;;		_leitura_chave
  7316 ;;		_disk_initialize
  7317 ;;		_cria_caractere_lcd
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321                           	psect	text36
  7322  002BEE                     __ptext36:
  7323                           	opt stack 0
  7324  002BEE                     _escreve_cmd_lcd:
  7325                           	opt stack 26
  7326                           
  7327                           ;incstack = 0
  7328                           ;escreve_cmd_lcd@comando stored from wreg
  7329  002BEE  6E18               	movwf	escreve_cmd_lcd@comando,c
  7330                           
  7331                           ;display_lcd.c: 165: PORTDbits.RD2 = 0;
  7332  002BF0  9483               	bcf	3971,2,c	;volatile
  7333                           
  7334                           ;display_lcd.c: 166: PORTDbits.RD1 = 0;
  7335  002BF2  9283               	bcf	3971,1,c	;volatile
  7336                           
  7337                           ;display_lcd.c: 167: PORTDbits.RD0 = 0;
  7338  002BF4  9083               	bcf	3971,0,c	;volatile
  7339                           
  7340                           ;display_lcd.c: 170: if(comando&0b00010000){PORTDbits.RD4=1;}
  7341  002BF6  A818               	btfss	escreve_cmd_lcd@comando,4,c
  7342  002BF8  D002               	goto	l647
  7343  002BFA  8883               	bsf	3971,4,c	;volatile
  7344  002BFC  D001               	goto	l10528
  7345  002BFE                     l647:
  7346                           
  7347                           ;display_lcd.c: 171: else {PORTDbits.RD4=0;}
  7348  002BFE  9883               	bcf	3971,4,c	;volatile
  7349  002C00                     l10528:
  7350                           
  7351                           ;display_lcd.c: 172: if(comando&0b00100000){PORTDbits.RD5=1;}
  7352  002C00  AA18               	btfss	escreve_cmd_lcd@comando,5,c
  7353  002C02  D002               	goto	l649
  7354  002C04  8A83               	bsf	3971,5,c	;volatile
  7355  002C06  D001               	goto	l10532
  7356  002C08                     l649:
  7357                           
  7358                           ;display_lcd.c: 173: else {PORTDbits.RD5=0;}
  7359  002C08  9A83               	bcf	3971,5,c	;volatile
  7360  002C0A                     l10532:
  7361                           
  7362                           ;display_lcd.c: 174: if(comando&0b01000000){PORTDbits.RD6=1;}
  7363  002C0A  AC18               	btfss	escreve_cmd_lcd@comando,6,c
  7364  002C0C  D002               	goto	l651
  7365  002C0E  8C83               	bsf	3971,6,c	;volatile
  7366  002C10  D001               	goto	l10536
  7367  002C12                     l651:
  7368                           
  7369                           ;display_lcd.c: 175: else {PORTDbits.RD6=0;}
  7370  002C12  9C83               	bcf	3971,6,c	;volatile
  7371  002C14                     l10536:
  7372                           
  7373                           ;display_lcd.c: 176: if(comando&0b10000000){PORTDbits.RD7=1;}
  7374  002C14  AE18               	btfss	escreve_cmd_lcd@comando,7,c
  7375  002C16  D002               	goto	l653
  7376  002C18  8E83               	bsf	3971,7,c	;volatile
  7377  002C1A  D001               	goto	l654
  7378  002C1C                     l653:
  7379                           
  7380                           ;display_lcd.c: 177: else {PORTDbits.RD7=0;}
  7381  002C1C  9E83               	bcf	3971,7,c	;volatile
  7382  002C1E                     l654:
  7383                           
  7384                           ;display_lcd.c: 180: PORTDbits.RD0 = 1;
  7385  002C1E  8083               	bsf	3971,0,c	;volatile
  7386                           
  7387                           ;display_lcd.c: 181: delay();
  7388  002C20  EC6D  F01A         	call	_delay	;wreg free
  7389                           
  7390                           ;display_lcd.c: 182: PORTDbits.RD0 = 0;
  7391  002C24  9083               	bcf	3971,0,c	;volatile
  7392                           
  7393                           ;display_lcd.c: 183: delay();
  7394  002C26  EC6D  F01A         	call	_delay	;wreg free
  7395                           
  7396                           ;display_lcd.c: 186: if(comando&0b00000001){PORTDbits.RD4=1;}
  7397  002C2A  A018               	btfss	escreve_cmd_lcd@comando,0,c
  7398  002C2C  D002               	goto	l655
  7399  002C2E  8883               	bsf	3971,4,c	;volatile
  7400  002C30  D001               	goto	l656
  7401  002C32                     l655:
  7402                           
  7403                           ;display_lcd.c: 187: else {PORTDbits.RD4=0;}
  7404  002C32  9883               	bcf	3971,4,c	;volatile
  7405  002C34                     l656:
  7406                           
  7407                           ;display_lcd.c: 188: if(comando&0b00000010){PORTDbits.RD5=1;}
  7408  002C34  A218               	btfss	escreve_cmd_lcd@comando,1,c
  7409  002C36  D002               	goto	l657
  7410  002C38  8A83               	bsf	3971,5,c	;volatile
  7411  002C3A  D001               	goto	l658
  7412  002C3C                     l657:
  7413                           
  7414                           ;display_lcd.c: 189: else {PORTDbits.RD5=0;}
  7415  002C3C  9A83               	bcf	3971,5,c	;volatile
  7416  002C3E                     l658:
  7417                           
  7418                           ;display_lcd.c: 190: if(comando&0b00000100){PORTDbits.RD6=1;}
  7419  002C3E  A418               	btfss	escreve_cmd_lcd@comando,2,c
  7420  002C40  D002               	goto	l659
  7421  002C42  8C83               	bsf	3971,6,c	;volatile
  7422  002C44  D001               	goto	l660
  7423  002C46                     l659:
  7424                           
  7425                           ;display_lcd.c: 191: else {PORTDbits.RD6=0;}
  7426  002C46  9C83               	bcf	3971,6,c	;volatile
  7427  002C48                     l660:
  7428                           
  7429                           ;display_lcd.c: 192: if(comando&0b00001000){PORTDbits.RD7=1;}
  7430  002C48  A618               	btfss	escreve_cmd_lcd@comando,3,c
  7431  002C4A  D002               	goto	l661
  7432  002C4C  8E83               	bsf	3971,7,c	;volatile
  7433  002C4E  D001               	goto	l662
  7434  002C50                     l661:
  7435                           
  7436                           ;display_lcd.c: 193: else {PORTDbits.RD7=0;}
  7437  002C50  9E83               	bcf	3971,7,c	;volatile
  7438  002C52                     l662:
  7439                           
  7440                           ;display_lcd.c: 196: PORTDbits.RD0 = 1;
  7441  002C52  8083               	bsf	3971,0,c	;volatile
  7442                           
  7443                           ;display_lcd.c: 197: delay();
  7444  002C54  EC6D  F01A         	call	_delay	;wreg free
  7445                           
  7446                           ;display_lcd.c: 198: PORTDbits.RD0 = 0;
  7447  002C58  9083               	bcf	3971,0,c	;volatile
  7448                           
  7449                           ;display_lcd.c: 199: delay();
  7450  002C5A  EC6D  F01A         	call	_delay	;wreg free
  7451                           
  7452                           ;display_lcd.c: 204: if (comando==0x01 || comando==0x02 || comando==0x03)
  7453  002C5E  0418               	decf	escreve_cmd_lcd@comando,w,c
  7454  002C60  B4D8               	btfsc	status,2,c
  7455  002C62  D008               	goto	l10564
  7456  002C64  0E02               	movlw	2
  7457  002C66  1818               	xorwf	escreve_cmd_lcd@comando,w,c
  7458  002C68  B4D8               	btfsc	status,2,c
  7459  002C6A  D004               	goto	l10564
  7460  002C6C  0E03               	movlw	3
  7461  002C6E  1818               	xorwf	escreve_cmd_lcd@comando,w,c
  7462  002C70  A4D8               	btfss	status,2,c
  7463  002C72  0012               	return	
  7464  002C74                     l10564:
  7465                           
  7466                           ;display_lcd.c: 205: { delay(); }
  7467  002C74  EC6D  F01A         	call	_delay	;wreg free
  7468  002C78  0012               	return	
  7469  002C7A                     __end_of_escreve_cmd_lcd:
  7470                           	opt stack 0
  7471                           tosu	equ	0xFFF
  7472                           tosh	equ	0xFFE
  7473                           tosl	equ	0xFFD
  7474                           pclath	equ	0xFFA
  7475                           tblptru	equ	0xFF8
  7476                           tblptrh	equ	0xFF7
  7477                           tblptrl	equ	0xFF6
  7478                           tablat	equ	0xFF5
  7479                           prodh	equ	0xFF4
  7480                           prodl	equ	0xFF3
  7481                           intcon	equ	0xFF2
  7482                           intcon2	equ	0xFF1
  7483                           intcon3	equ	0xFF0
  7484                           indf0	equ	0xFEF
  7485                           postinc0	equ	0xFEE
  7486                           fsr0h	equ	0xFEA
  7487                           fsr0l	equ	0xFE9
  7488                           wreg	equ	0xFE8
  7489                           indf1	equ	0xFE7
  7490                           postinc1	equ	0xFE6
  7491                           postdec1	equ	0xFE5
  7492                           fsr1h	equ	0xFE2
  7493                           fsr1l	equ	0xFE1
  7494                           indf2	equ	0xFDF
  7495                           postinc2	equ	0xFDE
  7496                           postdec2	equ	0xFDD
  7497                           fsr2h	equ	0xFDA
  7498                           fsr2l	equ	0xFD9
  7499                           status	equ	0xFD8
  7500                           
  7501 ;; *************** function _delay *****************
  7502 ;; Defined at:
  7503 ;;		line 45 in file "bibliotecas/display_lcd.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;		None
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;  contador_int    1   22[COMRAM] unsigned char 
  7508 ;;  contador_ext    1   21[COMRAM] unsigned char 
  7509 ;; Return value:  Size  Location     Type
  7510 ;;                  1    wreg      void 
  7511 ;; Registers used:
  7512 ;;		wreg, status,2, status,0
  7513 ;; Tracked objects:
  7514 ;;		On entry : 0/0
  7515 ;;		On exit  : 0/0
  7516 ;;		Unchanged: 0/0
  7517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7518 ;;      Params:         0       0       0       0       0       0       0       0       0
  7519 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7520 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7521 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7522 ;;Total ram usage:        2 bytes
  7523 ;; Hardware stack levels used:    1
  7524 ;; Hardware stack levels required when called:    2
  7525 ;; This function calls:
  7526 ;;		Nothing
  7527 ;; This function is called by:
  7528 ;;		_init_lcd
  7529 ;;		_escreve_cmd_lcd
  7530 ;;		_endereco_cursor_lcd
  7531 ;;		_escreve_caractere_lcd
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           
  7535                           	psect	text37
  7536  0034DA                     __ptext37:
  7537                           	opt stack 0
  7538  0034DA                     _delay:
  7539                           	opt stack 25
  7540                           
  7541                           ;display_lcd.c: 47: unsigned char contador_ext, contador_int;
  7542                           ;display_lcd.c: 49: for(contador_ext = 0; contador_ext<100; contador_ext++)
  7543                           
  7544                           ;incstack = 0
  7545  0034DA  0E00               	movlw	0
  7546  0034DC  6E16               	movwf	delay@contador_ext,c
  7547  0034DE                     l9510:
  7548  0034DE  0E63               	movlw	99
  7549  0034E0  6416               	cpfsgt	delay@contador_ext,c
  7550  0034E2  D001               	goto	l637
  7551  0034E4  0012               	return	
  7552  0034E6                     l637:
  7553                           
  7554                           ;display_lcd.c: 50: {
  7555                           ;display_lcd.c: 51: __nop();
  7556  0034E6  F000               	nop	
  7557                           
  7558                           ;display_lcd.c: 52: for(contador_int = 0; contador_int<50; contador_int++)
  7559  0034E8  0E00               	movlw	0
  7560  0034EA  6E17               	movwf	delay@contador_int,c
  7561  0034EC                     l9516:
  7562  0034EC  0E31               	movlw	49
  7563  0034EE  6417               	cpfsgt	delay@contador_int,c
  7564  0034F0  D001               	goto	l639
  7565  0034F2  D003               	goto	l9524
  7566  0034F4                     l639:
  7567                           
  7568                           ;display_lcd.c: 53: {
  7569                           ;display_lcd.c: 54: __nop();
  7570  0034F4  F000               	nop	
  7571  0034F6  2A17               	incf	delay@contador_int,f,c
  7572  0034F8  D7F9               	goto	l9516
  7573  0034FA                     l9524:
  7574  0034FA  2A16               	incf	delay@contador_ext,f,c
  7575  0034FC  D7F0               	goto	l9510
  7576  0034FE                     __end_of_delay:
  7577                           	opt stack 0
  7578                           tosu	equ	0xFFF
  7579                           tosh	equ	0xFFE
  7580                           tosl	equ	0xFFD
  7581                           pclath	equ	0xFFA
  7582                           tblptru	equ	0xFF8
  7583                           tblptrh	equ	0xFF7
  7584                           tblptrl	equ	0xFF6
  7585                           tablat	equ	0xFF5
  7586                           prodh	equ	0xFF4
  7587                           prodl	equ	0xFF3
  7588                           intcon	equ	0xFF2
  7589                           intcon2	equ	0xFF1
  7590                           intcon3	equ	0xFF0
  7591                           indf0	equ	0xFEF
  7592                           postinc0	equ	0xFEE
  7593                           fsr0h	equ	0xFEA
  7594                           fsr0l	equ	0xFE9
  7595                           wreg	equ	0xFE8
  7596                           indf1	equ	0xFE7
  7597                           postinc1	equ	0xFE6
  7598                           postdec1	equ	0xFE5
  7599                           fsr1h	equ	0xFE2
  7600                           fsr1l	equ	0xFE1
  7601                           indf2	equ	0xFDF
  7602                           postinc2	equ	0xFDE
  7603                           postdec2	equ	0xFDD
  7604                           fsr2h	equ	0xFDA
  7605                           fsr2l	equ	0xFD9
  7606                           status	equ	0xFD8
  7607                           
  7608 ;; *************** function _convert_to_degrees *****************
  7609 ;; Defined at:
  7610 ;;		line 288 in file "bibliotecas/GPS.c"
  7611 ;; Parameters:    Size  Location     Type
  7612 ;;  nmea_lat_lon    3   28[BANK0 ] float 
  7613 ;; Auto vars:     Size  Location     Type
  7614 ;;  decimal         3   39[BANK0 ] float 
  7615 ;;  dec_deg         3   34[BANK0 ] float 
  7616 ;;  minutes         3   31[BANK0 ] float 
  7617 ;;  position        3    0        float 
  7618 ;;  degrees         2   37[BANK0 ] int 
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  3   28[BANK0 ] float 
  7621 ;; Registers used:
  7622 ;;		wreg, status,2, status,0, cstack
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7628 ;;      Params:         0       3       0       0       0       0       0       0       0
  7629 ;;      Locals:         0      11       0       0       0       0       0       0       0
  7630 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7631 ;;      Totals:         0      14       0       0       0       0       0       0       0
  7632 ;;Total ram usage:       14 bytes
  7633 ;; Hardware stack levels used:    1
  7634 ;; Hardware stack levels required when called:    4
  7635 ;; This function calls:
  7636 ;;		___awtoft
  7637 ;;		___ftadd
  7638 ;;		___ftdiv
  7639 ;;		___ftmul
  7640 ;;		___ftneg
  7641 ;;		___fttol
  7642 ;; This function is called by:
  7643 ;;		_gps
  7644 ;; This function uses a non-reentrant model
  7645 ;;
  7646                           
  7647                           	psect	text38
  7648  0019D8                     __ptext38:
  7649                           	opt stack 0
  7650  0019D8                     _convert_to_degrees:
  7651                           	opt stack 24
  7652                           
  7653                           ;GPS.c: 289: float minutes, dec_deg, decimal;
  7654                           ;GPS.c: 290: int degrees;
  7655                           ;GPS.c: 291: float position;
  7656                           ;GPS.c: 292: degrees = (int)(nmea_lat_long/100.00);
  7657                           
  7658                           ;incstack = 0
  7659  0019D8  0E00               	movlw	0
  7660  0019DA  6E21               	movwf	___ftdiv@f2,c
  7661  0019DC  0EC8               	movlw	200
  7662  0019DE  6E22               	movwf	___ftdiv@f2+1,c
  7663  0019E0  0E42               	movlw	66
  7664  0019E2  6E23               	movwf	___ftdiv@f2+2,c
  7665  0019E4  C07C  F01E         	movff	convert_to_degrees@nmea_lat_long,___ftdiv@f1
  7666  0019E8  C07D  F01F         	movff	convert_to_degrees@nmea_lat_long+1,___ftdiv@f1+1
  7667  0019EC  C07E  F020         	movff	convert_to_degrees@nmea_lat_long+2,___ftdiv@f1+2
  7668  0019F0  EC97  F012         	call	___ftdiv	;wreg free
  7669  0019F4  C01E  F06D         	movff	?___ftdiv,___fttol@f1
  7670  0019F8  C01F  F06E         	movff	?___ftdiv+1,___fttol@f1+1
  7671  0019FC  C020  F06F         	movff	?___ftdiv+2,___fttol@f1+2
  7672  001A00  EC4A  F00C         	call	___fttol	;wreg free
  7673  001A04  C06D  F085         	movff	?___fttol,convert_to_degrees@degrees
  7674  001A08  C06E  F086         	movff	?___fttol+1,convert_to_degrees@degrees+1
  7675                           
  7676                           ;GPS.c: 293: minutes = nmea_lat_long - degrees*100.00;
  7677  001A0C  0E00               	movlw	0
  7678  001A0E  6E2D               	movwf	___ftmul@f2,c
  7679  001A10  0EC8               	movlw	200
  7680  001A12  6E2E               	movwf	___ftmul@f2+1,c
  7681  001A14  0E42               	movlw	66
  7682  001A16  6E2F               	movwf	___ftmul@f2+2,c
  7683  001A18  C085  F01E         	movff	convert_to_degrees@degrees,___awtoft@c
  7684  001A1C  C086  F01F         	movff	convert_to_degrees@degrees+1,___awtoft@c+1
  7685  001A20  ECBD  F019         	call	___awtoft	;wreg free
  7686  001A24  C01E  F02A         	movff	?___awtoft,___ftmul@f1
  7687  001A28  C01F  F02B         	movff	?___awtoft+1,___ftmul@f1+1
  7688  001A2C  C020  F02C         	movff	?___awtoft+2,___ftmul@f1+2
  7689  001A30  EC72  F010         	call	___ftmul	;wreg free
  7690  001A34  C02A  F066         	movff	?___ftmul,___ftneg@f1
  7691  001A38  C02B  F067         	movff	?___ftmul+1,___ftneg@f1+1
  7692  001A3C  C02C  F068         	movff	?___ftmul+2,___ftneg@f1+2
  7693  001A40  ECF3  F019         	call	___ftneg	;wreg free
  7694  001A44  C066  F070         	movff	?___ftneg,___ftadd@f1
  7695  001A48  C067  F071         	movff	?___ftneg+1,___ftadd@f1+1
  7696  001A4C  C068  F072         	movff	?___ftneg+2,___ftadd@f1+2
  7697  001A50  C07C  F073         	movff	convert_to_degrees@nmea_lat_long,___ftadd@f2
  7698  001A54  C07D  F074         	movff	convert_to_degrees@nmea_lat_long+1,___ftadd@f2+1
  7699  001A58  C07E  F075         	movff	convert_to_degrees@nmea_lat_long+2,___ftadd@f2+2
  7700  001A5C  ECE0  F008         	call	___ftadd	;wreg free
  7701  001A60  C070  F07F         	movff	?___ftadd,convert_to_degrees@minutes
  7702  001A64  C071  F080         	movff	?___ftadd+1,convert_to_degrees@minutes+1
  7703  001A68  C072  F081         	movff	?___ftadd+2,convert_to_degrees@minutes+2
  7704                           
  7705                           ;GPS.c: 294: dec_deg = minutes / 60.00;
  7706  001A6C  C07F  F01E         	movff	convert_to_degrees@minutes,___ftdiv@f1
  7707  001A70  C080  F01F         	movff	convert_to_degrees@minutes+1,___ftdiv@f1+1
  7708  001A74  C081  F020         	movff	convert_to_degrees@minutes+2,___ftdiv@f1+2
  7709  001A78  0E00               	movlw	0
  7710  001A7A  6E21               	movwf	___ftdiv@f2,c
  7711  001A7C  0E70               	movlw	112
  7712  001A7E  6E22               	movwf	___ftdiv@f2+1,c
  7713  001A80  0E42               	movlw	66
  7714  001A82  6E23               	movwf	___ftdiv@f2+2,c
  7715  001A84  EC97  F012         	call	___ftdiv	;wreg free
  7716  001A88  C01E  F082         	movff	?___ftdiv,convert_to_degrees@dec_deg
  7717  001A8C  C01F  F083         	movff	?___ftdiv+1,convert_to_degrees@dec_deg+1
  7718  001A90  C020  F084         	movff	?___ftdiv+2,convert_to_degrees@dec_deg+2
  7719                           
  7720                           ;GPS.c: 295: decimal = degrees + dec_deg;
  7721  001A94  C085  F01E         	movff	convert_to_degrees@degrees,___awtoft@c
  7722  001A98  C086  F01F         	movff	convert_to_degrees@degrees+1,___awtoft@c+1
  7723  001A9C  ECBD  F019         	call	___awtoft	;wreg free
  7724  001AA0  C01E  F070         	movff	?___awtoft,___ftadd@f1
  7725  001AA4  C01F  F071         	movff	?___awtoft+1,___ftadd@f1+1
  7726  001AA8  C020  F072         	movff	?___awtoft+2,___ftadd@f1+2
  7727  001AAC  C082  F073         	movff	convert_to_degrees@dec_deg,___ftadd@f2
  7728  001AB0  C083  F074         	movff	convert_to_degrees@dec_deg+1,___ftadd@f2+1
  7729  001AB4  C084  F075         	movff	convert_to_degrees@dec_deg+2,___ftadd@f2+2
  7730  001AB8  ECE0  F008         	call	___ftadd	;wreg free
  7731  001ABC  C070  F087         	movff	?___ftadd,convert_to_degrees@decimal
  7732  001AC0  C071  F088         	movff	?___ftadd+1,convert_to_degrees@decimal+1
  7733  001AC4  C072  F089         	movff	?___ftadd+2,convert_to_degrees@decimal+2
  7734                           
  7735                           ;GPS.c: 296: if (n_s == 'S' || E_W == 'W') {
  7736  001AC8  0E53               	movlw	83
  7737  001ACA  0100               	movlb	0	; () banked
  7738  001ACC  19DD               	xorwf	_n_s& (0+255),w,b
  7739  001ACE  B4D8               	btfsc	status,2,c
  7740  001AD0  D005               	goto	l10626
  7741                           
  7742                           ; BSR set to: 0
  7743  001AD2  0E57               	movlw	87
  7744  001AD4  0100               	movlb	0	; () banked
  7745  001AD6  19DC               	xorwf	_E_W& (0+255),w,b
  7746  001AD8  A4D8               	btfss	status,2,c
  7747  001ADA  D014               	goto	l10628
  7748  001ADC                     l10626:
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;GPS.c: 297: decimal *= -1;
  7752  001ADC  C087  F02A         	movff	convert_to_degrees@decimal,___ftmul@f1
  7753  001AE0  C088  F02B         	movff	convert_to_degrees@decimal+1,___ftmul@f1+1
  7754  001AE4  C089  F02C         	movff	convert_to_degrees@decimal+2,___ftmul@f1+2
  7755  001AE8  0E00               	movlw	0
  7756  001AEA  6E2D               	movwf	___ftmul@f2,c
  7757  001AEC  0E80               	movlw	128
  7758  001AEE  6E2E               	movwf	___ftmul@f2+1,c
  7759  001AF0  0EBF               	movlw	191
  7760  001AF2  6E2F               	movwf	___ftmul@f2+2,c
  7761  001AF4  EC72  F010         	call	___ftmul	;wreg free
  7762  001AF8  C02A  F087         	movff	?___ftmul,convert_to_degrees@decimal
  7763  001AFC  C02B  F088         	movff	?___ftmul+1,convert_to_degrees@decimal+1
  7764  001B00  C02C  F089         	movff	?___ftmul+2,convert_to_degrees@decimal+2
  7765  001B04                     l10628:
  7766                           
  7767                           ;GPS.c: 298: }
  7768                           ;GPS.c: 300: return decimal;
  7769  001B04  C087  F07C         	movff	convert_to_degrees@decimal,?_convert_to_degrees
  7770  001B08  C088  F07D         	movff	convert_to_degrees@decimal+1,?_convert_to_degrees+1
  7771  001B0C  C089  F07E         	movff	convert_to_degrees@decimal+2,?_convert_to_degrees+2
  7772  001B10  0012               	return	
  7773  001B12                     __end_of_convert_to_degrees:
  7774                           	opt stack 0
  7775                           tosu	equ	0xFFF
  7776                           tosh	equ	0xFFE
  7777                           tosl	equ	0xFFD
  7778                           pclath	equ	0xFFA
  7779                           tblptru	equ	0xFF8
  7780                           tblptrh	equ	0xFF7
  7781                           tblptrl	equ	0xFF6
  7782                           tablat	equ	0xFF5
  7783                           prodh	equ	0xFF4
  7784                           prodl	equ	0xFF3
  7785                           intcon	equ	0xFF2
  7786                           intcon2	equ	0xFF1
  7787                           intcon3	equ	0xFF0
  7788                           indf0	equ	0xFEF
  7789                           postinc0	equ	0xFEE
  7790                           fsr0h	equ	0xFEA
  7791                           fsr0l	equ	0xFE9
  7792                           wreg	equ	0xFE8
  7793                           indf1	equ	0xFE7
  7794                           postinc1	equ	0xFE6
  7795                           postdec1	equ	0xFE5
  7796                           fsr1h	equ	0xFE2
  7797                           fsr1l	equ	0xFE1
  7798                           indf2	equ	0xFDF
  7799                           postinc2	equ	0xFDE
  7800                           postdec2	equ	0xFDD
  7801                           fsr2h	equ	0xFDA
  7802                           fsr2l	equ	0xFD9
  7803                           status	equ	0xFD8
  7804                           
  7805 ;; *************** function ___ftdiv *****************
  7806 ;; Defined at:
  7807 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;  f1              3   29[COMRAM] float 
  7810 ;;  f2              3   32[COMRAM] float 
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;  f3              3   39[COMRAM] float 
  7813 ;;  sign            1   43[COMRAM] unsigned char 
  7814 ;;  exp             1   42[COMRAM] unsigned char 
  7815 ;;  cntr            1   38[COMRAM] unsigned char 
  7816 ;; Return value:  Size  Location     Type
  7817 ;;                  3   29[COMRAM] float 
  7818 ;; Registers used:
  7819 ;;		wreg, status,2, status,0, cstack
  7820 ;; Tracked objects:
  7821 ;;		On entry : 0/0
  7822 ;;		On exit  : 0/0
  7823 ;;		Unchanged: 0/0
  7824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7825 ;;      Params:         6       0       0       0       0       0       0       0       0
  7826 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7827 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7828 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7829 ;;Total ram usage:       15 bytes
  7830 ;; Hardware stack levels used:    1
  7831 ;; Hardware stack levels required when called:    3
  7832 ;; This function calls:
  7833 ;;		___ftpack
  7834 ;; This function is called by:
  7835 ;;		_convert_to_degrees
  7836 ;;		_strtod
  7837 ;; This function uses a non-reentrant model
  7838 ;;
  7839                           
  7840                           	psect	text39
  7841  00252E                     __ptext39:
  7842                           	opt stack 0
  7843  00252E                     ___ftdiv:
  7844                           	opt stack 22
  7845                           
  7846                           ;incstack = 0
  7847  00252E  C020  F024         	movff	___ftdiv@f1+2,??___ftdiv
  7848  002532  6A25               	clrf	(??___ftdiv+1)& (0+255),c
  7849  002534  6A26               	clrf	(??___ftdiv+2)& (0+255),c
  7850  002536  341F               	rlcf	___ftdiv@f1+1,w,c
  7851  002538  3624               	rlcf	??___ftdiv& (0+255),f,c
  7852  00253A  E301               	bnc	u10751
  7853  00253C  8025               	bsf	(??___ftdiv+1)& (0+255),0,c
  7854  00253E                     u10751:
  7855  00253E  5024               	movf	??___ftdiv,w,c
  7856  002540  6E2B               	movwf	___ftdiv@exp,c
  7857  002542  502B               	movf	___ftdiv@exp,w,c
  7858  002544  A4D8               	btfss	status,2,c
  7859  002546  D007               	goto	l9304
  7860  002548  0E00               	movlw	0
  7861  00254A  6E1E               	movwf	?___ftdiv,c
  7862  00254C  0E00               	movlw	0
  7863  00254E  6E1F               	movwf	?___ftdiv+1,c
  7864  002550  0E00               	movlw	0
  7865  002552  6E20               	movwf	?___ftdiv+2,c
  7866  002554  0012               	return	
  7867  002556                     l9304:
  7868  002556  C023  F024         	movff	___ftdiv@f2+2,??___ftdiv
  7869  00255A  6A25               	clrf	(??___ftdiv+1)& (0+255),c
  7870  00255C  6A26               	clrf	(??___ftdiv+2)& (0+255),c
  7871  00255E  3422               	rlcf	___ftdiv@f2+1,w,c
  7872  002560  3624               	rlcf	??___ftdiv& (0+255),f,c
  7873  002562  E301               	bnc	u10771
  7874  002564  8025               	bsf	(??___ftdiv+1)& (0+255),0,c
  7875  002566                     u10771:
  7876  002566  5024               	movf	??___ftdiv,w,c
  7877  002568  6E2C               	movwf	___ftdiv@sign,c
  7878  00256A  502C               	movf	___ftdiv@sign,w,c
  7879  00256C  A4D8               	btfss	status,2,c
  7880  00256E  D007               	goto	l9310
  7881  002570  0E00               	movlw	0
  7882  002572  6E1E               	movwf	?___ftdiv,c
  7883  002574  0E00               	movlw	0
  7884  002576  6E1F               	movwf	?___ftdiv+1,c
  7885  002578  0E00               	movlw	0
  7886  00257A  6E20               	movwf	?___ftdiv+2,c
  7887  00257C  0012               	return	
  7888  00257E                     l9310:
  7889  00257E  0E00               	movlw	0
  7890  002580  6E28               	movwf	___ftdiv@f3,c
  7891  002582  0E00               	movlw	0
  7892  002584  6E29               	movwf	___ftdiv@f3+1,c
  7893  002586  0E00               	movlw	0
  7894  002588  6E2A               	movwf	___ftdiv@f3+2,c
  7895  00258A  502C               	movf	___ftdiv@sign,w,c
  7896  00258C  0F89               	addlw	137
  7897  00258E  5E2B               	subwf	___ftdiv@exp,f,c
  7898  002590  C020  F02C         	movff	___ftdiv@f1+2,___ftdiv@sign
  7899  002594  5023               	movf	___ftdiv@f2+2,w,c
  7900  002596  1A2C               	xorwf	___ftdiv@sign,f,c
  7901  002598  0E80               	movlw	128
  7902  00259A  162C               	andwf	___ftdiv@sign,f,c
  7903  00259C  8E1F               	bsf	___ftdiv@f1+1,7,c
  7904  00259E  0EFF               	movlw	255
  7905  0025A0  161E               	andwf	___ftdiv@f1,f,c
  7906  0025A2  0EFF               	movlw	255
  7907  0025A4  161F               	andwf	___ftdiv@f1+1,f,c
  7908  0025A6  0E00               	movlw	0
  7909  0025A8  1620               	andwf	___ftdiv@f1+2,f,c
  7910  0025AA  8E22               	bsf	___ftdiv@f2+1,7,c
  7911  0025AC  0EFF               	movlw	255
  7912  0025AE  1621               	andwf	___ftdiv@f2,f,c
  7913  0025B0  0EFF               	movlw	255
  7914  0025B2  1622               	andwf	___ftdiv@f2+1,f,c
  7915  0025B4  0E00               	movlw	0
  7916  0025B6  1623               	andwf	___ftdiv@f2+2,f,c
  7917  0025B8  0E18               	movlw	24
  7918  0025BA  6E27               	movwf	___ftdiv@cntr,c
  7919  0025BC                     l9330:
  7920  0025BC  90D8               	bcf	status,0,c
  7921  0025BE  3628               	rlcf	___ftdiv@f3,f,c
  7922  0025C0  3629               	rlcf	___ftdiv@f3+1,f,c
  7923  0025C2  362A               	rlcf	___ftdiv@f3+2,f,c
  7924  0025C4  5021               	movf	___ftdiv@f2,w,c
  7925  0025C6  5C1E               	subwf	___ftdiv@f1,w,c
  7926  0025C8  5022               	movf	___ftdiv@f2+1,w,c
  7927  0025CA  581F               	subwfb	___ftdiv@f1+1,w,c
  7928  0025CC  5023               	movf	___ftdiv@f2+2,w,c
  7929  0025CE  5820               	subwfb	___ftdiv@f1+2,w,c
  7930  0025D0  A0D8               	btfss	status,0,c
  7931  0025D2  D007               	goto	l1720
  7932  0025D4  5021               	movf	___ftdiv@f2,w,c
  7933  0025D6  5E1E               	subwf	___ftdiv@f1,f,c
  7934  0025D8  5022               	movf	___ftdiv@f2+1,w,c
  7935  0025DA  5A1F               	subwfb	___ftdiv@f1+1,f,c
  7936  0025DC  5023               	movf	___ftdiv@f2+2,w,c
  7937  0025DE  5A20               	subwfb	___ftdiv@f1+2,f,c
  7938  0025E0  8028               	bsf	___ftdiv@f3,0,c
  7939  0025E2                     l1720:
  7940  0025E2  90D8               	bcf	status,0,c
  7941  0025E4  361E               	rlcf	___ftdiv@f1,f,c
  7942  0025E6  361F               	rlcf	___ftdiv@f1+1,f,c
  7943  0025E8  3620               	rlcf	___ftdiv@f1+2,f,c
  7944  0025EA  2E27               	decfsz	___ftdiv@cntr,f,c
  7945  0025EC  D7E7               	goto	l9330
  7946  0025EE  C028  F016         	movff	___ftdiv@f3,___ftpack@arg
  7947  0025F2  C029  F017         	movff	___ftdiv@f3+1,___ftpack@arg+1
  7948  0025F6  C02A  F018         	movff	___ftdiv@f3+2,___ftpack@arg+2
  7949  0025FA  C02B  F019         	movff	___ftdiv@exp,___ftpack@exp
  7950  0025FE  C02C  F01A         	movff	___ftdiv@sign,___ftpack@sign
  7951  002602  ECC9  F013         	call	___ftpack	;wreg free
  7952  002606  C016  F01E         	movff	?___ftpack,?___ftdiv
  7953  00260A  C017  F01F         	movff	?___ftpack+1,?___ftdiv+1
  7954  00260E  C018  F020         	movff	?___ftpack+2,?___ftdiv+2
  7955  002612  0012               	return	
  7956  002614                     __end_of___ftdiv:
  7957                           	opt stack 0
  7958                           tosu	equ	0xFFF
  7959                           tosh	equ	0xFFE
  7960                           tosl	equ	0xFFD
  7961                           pclath	equ	0xFFA
  7962                           tblptru	equ	0xFF8
  7963                           tblptrh	equ	0xFF7
  7964                           tblptrl	equ	0xFF6
  7965                           tablat	equ	0xFF5
  7966                           prodh	equ	0xFF4
  7967                           prodl	equ	0xFF3
  7968                           intcon	equ	0xFF2
  7969                           intcon2	equ	0xFF1
  7970                           intcon3	equ	0xFF0
  7971                           indf0	equ	0xFEF
  7972                           postinc0	equ	0xFEE
  7973                           fsr0h	equ	0xFEA
  7974                           fsr0l	equ	0xFE9
  7975                           wreg	equ	0xFE8
  7976                           indf1	equ	0xFE7
  7977                           postinc1	equ	0xFE6
  7978                           postdec1	equ	0xFE5
  7979                           fsr1h	equ	0xFE2
  7980                           fsr1l	equ	0xFE1
  7981                           indf2	equ	0xFDF
  7982                           postinc2	equ	0xFDE
  7983                           postdec2	equ	0xFDD
  7984                           fsr2h	equ	0xFDA
  7985                           fsr2l	equ	0xFD9
  7986                           status	equ	0xFD8
  7987                           
  7988 ;; *************** function ___awtoft *****************
  7989 ;; Defined at:
  7990 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;  c               2   29[COMRAM] int 
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;  sign            1   32[COMRAM] unsigned char 
  7995 ;; Return value:  Size  Location     Type
  7996 ;;                  3   29[COMRAM] float 
  7997 ;; Registers used:
  7998 ;;		wreg, status,2, status,0, cstack
  7999 ;; Tracked objects:
  8000 ;;		On entry : 0/0
  8001 ;;		On exit  : 0/0
  8002 ;;		Unchanged: 0/0
  8003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8004 ;;      Params:         3       0       0       0       0       0       0       0       0
  8005 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8007 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8008 ;;Total ram usage:        4 bytes
  8009 ;; Hardware stack levels used:    1
  8010 ;; Hardware stack levels required when called:    3
  8011 ;; This function calls:
  8012 ;;		___ftpack
  8013 ;; This function is called by:
  8014 ;;		_convert_to_degrees
  8015 ;;		_escreve_float_lcd
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019                           	psect	text40
  8020  00337A                     __ptext40:
  8021                           	opt stack 0
  8022  00337A                     ___awtoft:
  8023                           	opt stack 24
  8024                           
  8025                           ;incstack = 0
  8026  00337A  0E00               	movlw	0
  8027  00337C  6E21               	movwf	___awtoft@sign,c
  8028  00337E  AE1F               	btfss	___awtoft@c+1,7,c
  8029  003380  D006               	goto	l10480
  8030  003382  6C1E               	negf	___awtoft@c,c
  8031  003384  1E1F               	comf	___awtoft@c+1,f,c
  8032  003386  B0D8               	btfsc	status,0,c
  8033  003388  2A1F               	incf	___awtoft@c+1,f,c
  8034  00338A  0E01               	movlw	1
  8035  00338C  6E21               	movwf	___awtoft@sign,c
  8036  00338E                     l10480:
  8037  00338E  C01E  F016         	movff	___awtoft@c,___ftpack@arg
  8038  003392  C01F  F017         	movff	___awtoft@c+1,___ftpack@arg+1
  8039  003396  6A18               	clrf	___ftpack@arg+2,c
  8040  003398  0E8E               	movlw	142
  8041  00339A  6E19               	movwf	___ftpack@exp,c
  8042  00339C  C021  F01A         	movff	___awtoft@sign,___ftpack@sign
  8043  0033A0  ECC9  F013         	call	___ftpack	;wreg free
  8044  0033A4  C016  F01E         	movff	?___ftpack,?___awtoft
  8045  0033A8  C017  F01F         	movff	?___ftpack+1,?___awtoft+1
  8046  0033AC  C018  F020         	movff	?___ftpack+2,?___awtoft+2
  8047  0033B0  0012               	return	
  8048  0033B2                     __end_of___awtoft:
  8049                           	opt stack 0
  8050                           tosu	equ	0xFFF
  8051                           tosh	equ	0xFFE
  8052                           tosl	equ	0xFFD
  8053                           pclath	equ	0xFFA
  8054                           tblptru	equ	0xFF8
  8055                           tblptrh	equ	0xFF7
  8056                           tblptrl	equ	0xFF6
  8057                           tablat	equ	0xFF5
  8058                           prodh	equ	0xFF4
  8059                           prodl	equ	0xFF3
  8060                           intcon	equ	0xFF2
  8061                           intcon2	equ	0xFF1
  8062                           intcon3	equ	0xFF0
  8063                           indf0	equ	0xFEF
  8064                           postinc0	equ	0xFEE
  8065                           fsr0h	equ	0xFEA
  8066                           fsr0l	equ	0xFE9
  8067                           wreg	equ	0xFE8
  8068                           indf1	equ	0xFE7
  8069                           postinc1	equ	0xFE6
  8070                           postdec1	equ	0xFE5
  8071                           fsr1h	equ	0xFE2
  8072                           fsr1l	equ	0xFE1
  8073                           indf2	equ	0xFDF
  8074                           postinc2	equ	0xFDE
  8075                           postdec2	equ	0xFDD
  8076                           fsr2h	equ	0xFDA
  8077                           fsr2l	equ	0xFD9
  8078                           status	equ	0xFD8
  8079                           
  8080 ;; *************** function _convert_time_to_utc *****************
  8081 ;; Defined at:
  8082 ;;		line 251 in file "bibliotecas/GPS.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;  utc_time        4   73[BANK0 ] unsigned long 
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;  sec             2   85[BANK0 ] unsigned int 
  8087 ;;  min             2   83[BANK0 ] unsigned int 
  8088 ;;  hour            2   81[BANK0 ] unsigned int 
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  1    wreg      void 
  8091 ;; Registers used:
  8092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8098 ;;      Params:         0       4       0       0       0       0       0       0       0
  8099 ;;      Locals:         0      10       0       0       0       0       0       0       0
  8100 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8101 ;;      Totals:         0      14       0       0       0       0       0       0       0
  8102 ;;Total ram usage:       14 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; Hardware stack levels required when called:    6
  8105 ;; This function calls:
  8106 ;;		___lldiv
  8107 ;;		___llmod
  8108 ;;		_sprintf
  8109 ;; This function is called by:
  8110 ;;		_gps
  8111 ;; This function uses a non-reentrant model
  8112 ;;
  8113                           
  8114                           	psect	text41
  8115  002204                     __ptext41:
  8116                           	opt stack 0
  8117  002204                     _convert_time_to_utc:
  8118                           	opt stack 22
  8119                           
  8120                           ;GPS.c: 253: unsigned int hour, min, sec;
  8121                           ;GPS.c: 254: hour = (utc_time / 10000) + -3;
  8122                           
  8123                           ;incstack = 0
  8124  002204  C0A9  F01F         	movff	convert_time_to_utc@utc_time,___lldiv@dividend
  8125  002208  C0AA  F020         	movff	convert_time_to_utc@utc_time+1,___lldiv@dividend+1
  8126  00220C  C0AB  F021         	movff	convert_time_to_utc@utc_time+2,___lldiv@dividend+2
  8127  002210  C0AC  F022         	movff	convert_time_to_utc@utc_time+3,___lldiv@dividend+3
  8128  002214  0E10               	movlw	16
  8129  002216  6E23               	movwf	___lldiv@divisor,c
  8130  002218  0E27               	movlw	39
  8131  00221A  6E24               	movwf	___lldiv@divisor+1,c
  8132  00221C  0E00               	movlw	0
  8133  00221E  6E25               	movwf	___lldiv@divisor+2,c
  8134  002220  0E00               	movlw	0
  8135  002222  6E26               	movwf	___lldiv@divisor+3,c
  8136  002224  EC7F  F016         	call	___lldiv	;wreg free
  8137  002228  0EFD               	movlw	253
  8138  00222A  241F               	addwf	?___lldiv,w,c
  8139  00222C  0100               	movlb	0	; () banked
  8140  00222E  6FB1               	movwf	convert_time_to_utc@hour& (0+255),b
  8141  002230  0EFF               	movlw	255
  8142  002232  2020               	addwfc	?___lldiv+1,w,c
  8143  002234  0100               	movlb	0	; () banked
  8144  002236  6FB2               	movwf	(convert_time_to_utc@hour+1)& (0+255),b
  8145                           
  8146                           ;GPS.c: 255: min = (utc_time % 10000) / 100;
  8147  002238  0E10               	movlw	16
  8148  00223A  6E1A               	movwf	___llmod@divisor,c
  8149  00223C  0E27               	movlw	39
  8150  00223E  6E1B               	movwf	___llmod@divisor+1,c
  8151  002240  0E00               	movlw	0
  8152  002242  6E1C               	movwf	___llmod@divisor+2,c
  8153  002244  0E00               	movlw	0
  8154  002246  6E1D               	movwf	___llmod@divisor+3,c
  8155  002248  C0A9  F016         	movff	convert_time_to_utc@utc_time,___llmod@dividend
  8156  00224C  C0AA  F017         	movff	convert_time_to_utc@utc_time+1,___llmod@dividend+1
  8157  002250  C0AB  F018         	movff	convert_time_to_utc@utc_time+2,___llmod@dividend+2
  8158  002254  C0AC  F019         	movff	convert_time_to_utc@utc_time+3,___llmod@dividend+3
  8159  002258  EC4D  F018         	call	___llmod	;wreg free
  8160  00225C  C016  F01F         	movff	?___llmod,___lldiv@dividend
  8161  002260  C017  F020         	movff	?___llmod+1,___lldiv@dividend+1
  8162  002264  C018  F021         	movff	?___llmod+2,___lldiv@dividend+2
  8163  002268  C019  F022         	movff	?___llmod+3,___lldiv@dividend+3
  8164  00226C  0E64               	movlw	100
  8165  00226E  6E23               	movwf	___lldiv@divisor,c
  8166  002270  0E00               	movlw	0
  8167  002272  6E24               	movwf	___lldiv@divisor+1,c
  8168  002274  0E00               	movlw	0
  8169  002276  6E25               	movwf	___lldiv@divisor+2,c
  8170  002278  0E00               	movlw	0
  8171  00227A  6E26               	movwf	___lldiv@divisor+3,c
  8172  00227C  EC7F  F016         	call	___lldiv	;wreg free
  8173  002280  C01F  F0B3         	movff	?___lldiv,convert_time_to_utc@min
  8174  002284  C020  F0B4         	movff	?___lldiv+1,convert_time_to_utc@min+1
  8175                           
  8176                           ;GPS.c: 256: sec = (utc_time % 10000) % 100;
  8177  002288  0E10               	movlw	16
  8178  00228A  6E1A               	movwf	___llmod@divisor,c
  8179  00228C  0E27               	movlw	39
  8180  00228E  6E1B               	movwf	___llmod@divisor+1,c
  8181  002290  0E00               	movlw	0
  8182  002292  6E1C               	movwf	___llmod@divisor+2,c
  8183  002294  0E00               	movlw	0
  8184  002296  6E1D               	movwf	___llmod@divisor+3,c
  8185  002298  C0A9  F016         	movff	convert_time_to_utc@utc_time,___llmod@dividend
  8186  00229C  C0AA  F017         	movff	convert_time_to_utc@utc_time+1,___llmod@dividend+1
  8187  0022A0  C0AB  F018         	movff	convert_time_to_utc@utc_time+2,___llmod@dividend+2
  8188  0022A4  C0AC  F019         	movff	convert_time_to_utc@utc_time+3,___llmod@dividend+3
  8189  0022A8  EC4D  F018         	call	___llmod	;wreg free
  8190  0022AC  C016  F0AD         	movff	?___llmod,_convert_time_to_utc$3371
  8191  0022B0  C017  F0AE         	movff	?___llmod+1,_convert_time_to_utc$3371+1
  8192  0022B4  C018  F0AF         	movff	?___llmod+2,_convert_time_to_utc$3371+2
  8193  0022B8  C019  F0B0         	movff	?___llmod+3,_convert_time_to_utc$3371+3
  8194                           
  8195                           ;GPS.c: 256: sec = (utc_time % 10000) % 100;
  8196  0022BC  C0AD  F016         	movff	_convert_time_to_utc$3371,___llmod@dividend
  8197  0022C0  C0AE  F017         	movff	_convert_time_to_utc$3371+1,___llmod@dividend+1
  8198  0022C4  C0AF  F018         	movff	_convert_time_to_utc$3371+2,___llmod@dividend+2
  8199  0022C8  C0B0  F019         	movff	_convert_time_to_utc$3371+3,___llmod@dividend+3
  8200  0022CC  0E64               	movlw	100
  8201  0022CE  6E1A               	movwf	___llmod@divisor,c
  8202  0022D0  0E00               	movlw	0
  8203  0022D2  6E1B               	movwf	___llmod@divisor+1,c
  8204  0022D4  0E00               	movlw	0
  8205  0022D6  6E1C               	movwf	___llmod@divisor+2,c
  8206  0022D8  0E00               	movlw	0
  8207  0022DA  6E1D               	movwf	___llmod@divisor+3,c
  8208  0022DC  EC4D  F018         	call	___llmod	;wreg free
  8209  0022E0  C016  F0B5         	movff	?___llmod,convert_time_to_utc@sec
  8210  0022E4  C017  F0B6         	movff	?___llmod+1,convert_time_to_utc@sec+1
  8211                           
  8212                           ;GPS.c: 257: sprintf(data_buffer, "%d:%d:%d", hour,min,sec);
  8213  0022E8  0ECA               	movlw	low _data_buffer
  8214  0022EA  0100               	movlb	0	; () banked
  8215  0022EC  6F82               	movwf	sprintf@sp& (0+255),b
  8216  0022EE  0E01               	movlw	high _data_buffer
  8217  0022F0  0100               	movlb	0	; () banked
  8218  0022F2  6F83               	movwf	(sprintf@sp+1)& (0+255),b
  8219  0022F4  0E38               	movlw	low STR_9
  8220  0022F6  0100               	movlb	0	; () banked
  8221  0022F8  6F84               	movwf	sprintf@f& (0+255),b
  8222  0022FA  0E62               	movlw	high STR_9
  8223  0022FC  0100               	movlb	0	; () banked
  8224  0022FE  6F85               	movwf	(sprintf@f+1)& (0+255),b
  8225  002300  C0B1  F086         	movff	convert_time_to_utc@hour,?_sprintf+4
  8226  002304  C0B2  F087         	movff	convert_time_to_utc@hour+1,?_sprintf+5
  8227  002308  C0B3  F088         	movff	convert_time_to_utc@min,?_sprintf+6
  8228  00230C  C0B4  F089         	movff	convert_time_to_utc@min+1,?_sprintf+7
  8229  002310  C0B5  F08A         	movff	convert_time_to_utc@sec,?_sprintf+8
  8230  002314  C0B6  F08B         	movff	convert_time_to_utc@sec+1,?_sprintf+9
  8231  002318  EC09  F000         	call	_sprintf	;wreg free
  8232  00231C  0012               	return		;funcret
  8233  00231E                     __end_of_convert_time_to_utc:
  8234                           	opt stack 0
  8235                           tosu	equ	0xFFF
  8236                           tosh	equ	0xFFE
  8237                           tosl	equ	0xFFD
  8238                           pclath	equ	0xFFA
  8239                           tblptru	equ	0xFF8
  8240                           tblptrh	equ	0xFF7
  8241                           tblptrl	equ	0xFF6
  8242                           tablat	equ	0xFF5
  8243                           prodh	equ	0xFF4
  8244                           prodl	equ	0xFF3
  8245                           intcon	equ	0xFF2
  8246                           intcon2	equ	0xFF1
  8247                           intcon3	equ	0xFF0
  8248                           indf0	equ	0xFEF
  8249                           postinc0	equ	0xFEE
  8250                           fsr0h	equ	0xFEA
  8251                           fsr0l	equ	0xFE9
  8252                           wreg	equ	0xFE8
  8253                           indf1	equ	0xFE7
  8254                           postinc1	equ	0xFE6
  8255                           postdec1	equ	0xFE5
  8256                           fsr1h	equ	0xFE2
  8257                           fsr1l	equ	0xFE1
  8258                           indf2	equ	0xFDF
  8259                           postinc2	equ	0xFDE
  8260                           postdec2	equ	0xFDD
  8261                           fsr2h	equ	0xFDA
  8262                           fsr2l	equ	0xFD9
  8263                           status	equ	0xFD8
  8264                           
  8265 ;; *************** function _sprintf *****************
  8266 ;; Defined at:
  8267 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;  sp              2   34[BANK0 ] PTR unsigned char 
  8270 ;;		 -> gps@gps_buffer(15), data_buffer(15), 
  8271 ;;  f               2   36[BANK0 ] PTR const unsigned char 
  8272 ;;		 -> STR_9(9), STR_7(6), STR_5(6), 
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;  val             4   63[BANK0 ] unsigned long 
  8275 ;;  tmpval          4   59[BANK0 ] struct .
  8276 ;;  fval            3   69[BANK0 ] struct .
  8277 ;;  cp              3    0        PTR const unsigned char 
  8278 ;;  prec            2   67[BANK0 ] int 
  8279 ;;  exp             2   57[BANK0 ] int 
  8280 ;;  flag            2   55[BANK0 ] unsigned short 
  8281 ;;  ap              2   53[BANK0 ] PTR void [1]
  8282 ;;		 -> ?_sprintf(2), 
  8283 ;;  len             2    0        unsigned int 
  8284 ;;  width           2    0        int 
  8285 ;;  c               1   72[BANK0 ] char 
  8286 ;;  d               1    0        unsigned char 
  8287 ;; Return value:  Size  Location     Type
  8288 ;;                  2   34[BANK0 ] int 
  8289 ;; Registers used:
  8290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8291 ;; Tracked objects:
  8292 ;;		On entry : 0/0
  8293 ;;		On exit  : 0/0
  8294 ;;		Unchanged: 0/0
  8295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8296 ;;      Params:         0      10       0       0       0       0       0       0       0
  8297 ;;      Locals:         0      23       0       0       0       0       0       0       0
  8298 ;;      Temps:          0       6       0       0       0       0       0       0       0
  8299 ;;      Totals:         0      39       0       0       0       0       0       0       0
  8300 ;;Total ram usage:       39 bytes
  8301 ;; Hardware stack levels used:    1
  8302 ;; Hardware stack levels required when called:    5
  8303 ;; This function calls:
  8304 ;;		___awdiv
  8305 ;;		___ftadd
  8306 ;;		___ftge
  8307 ;;		___ftmul
  8308 ;;		___ftneg
  8309 ;;		___ftsub
  8310 ;;		___fttol
  8311 ;;		___lldiv
  8312 ;;		___llmod
  8313 ;;		___lltoft
  8314 ;;		___wmul
  8315 ;;		__div_to_l_
  8316 ;;		__tdiv_to_l_
  8317 ;;		_fround
  8318 ;;		_isdigit
  8319 ;;		_scale
  8320 ;; This function is called by:
  8321 ;;		_gps
  8322 ;;		_convert_time_to_utc
  8323 ;; This function uses a non-reentrant model
  8324 ;;
  8325                           
  8326                           	psect	text42
  8327  000012                     __ptext42:
  8328                           	opt stack 0
  8329  000012                     _sprintf:
  8330                           	opt stack 23
  8331                           
  8332                           ;doprnt.c: 494: va_list ap;
  8333                           ;doprnt.c: 499: signed char c;
  8334                           ;doprnt.c: 501: int width;
  8335                           ;doprnt.c: 504: int prec;
  8336                           ;doprnt.c: 508: unsigned short flag;
  8337                           ;doprnt.c: 515: char d;
  8338                           ;doprnt.c: 516: double fval;
  8339                           ;doprnt.c: 517: int exp;
  8340                           ;doprnt.c: 523: union {
  8341                           ;doprnt.c: 524: unsigned long vd;
  8342                           ;doprnt.c: 525: double integ;
  8343                           ;doprnt.c: 526: } tmpval;
  8344                           ;doprnt.c: 528: unsigned long val;
  8345                           ;doprnt.c: 529: unsigned len;
  8346                           ;doprnt.c: 530: const char * cp;
  8347                           ;doprnt.c: 533: *ap = __va_start();
  8348                           
  8349                           ;incstack = 0
  8350  000012  0E86               	movlw	low (?_sprintf+4)
  8351  000014  0100               	movlb	0	; () banked
  8352  000016  6F95               	movwf	sprintf@ap& (0+255),b
  8353  000018  0E00               	movlw	high (?_sprintf+4)
  8354  00001A  0100               	movlb	0	; () banked
  8355  00001C  6F96               	movwf	(sprintf@ap+1)& (0+255),b
  8356                           
  8357                           ;doprnt.c: 536: while(c = *f++) {
  8358  00001E  EF97  F004         	goto	l10204
  8359  000022                     l9974:
  8360                           
  8361                           ; BSR set to: 0
  8362                           ;doprnt.c: 538: if(c != '%')
  8363  000022  0E25               	movlw	37
  8364  000024  0100               	movlb	0	; () banked
  8365  000026  19A8               	xorwf	sprintf@c& (0+255),w,b
  8366  000028  B4D8               	btfsc	status,2,c
  8367  00002A  D00B               	goto	l9980
  8368                           
  8369                           ; BSR set to: 0
  8370                           ;doprnt.c: 540: {
  8371                           ;doprnt.c: 541: ((*sp++ = (c)));
  8372  00002C  C082  FFD9         	movff	sprintf@sp,fsr2l
  8373  000030  C083  FFDA         	movff	sprintf@sp+1,fsr2h
  8374  000034  C0A8  FFDF         	movff	sprintf@c,indf2
  8375                           
  8376                           ; BSR set to: 0
  8377  000038  0100               	movlb	0	; () banked
  8378  00003A  4B82               	infsnz	sprintf@sp& (0+255),f,b
  8379  00003C  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
  8380                           
  8381                           ;doprnt.c: 542: continue;
  8382  00003E  EF97  F004         	goto	l10204
  8383  000042                     l9980:
  8384                           
  8385                           ; BSR set to: 0
  8386                           ;doprnt.c: 543: }
  8387                           ;doprnt.c: 548: flag = 0;
  8388  000042  0E00               	movlw	0
  8389  000044  0100               	movlb	0	; () banked
  8390  000046  6F98               	movwf	(sprintf@flag+1)& (0+255),b
  8391  000048  0E00               	movlw	0
  8392  00004A  6F97               	movwf	sprintf@flag& (0+255),b
  8393                           
  8394                           ; BSR set to: 0
  8395                           ;doprnt.c: 611: if(*f == '.') {
  8396  00004C  C084  FFF6         	movff	sprintf@f,tblptrl
  8397  000050  C085  FFF7         	movff	sprintf@f+1,tblptrh
  8398  000054                     	if	0	;tblptru may be non-zero
  8399  000054                     	endif
  8400  000054                     	if	0	;tblptru may be non-zero
  8401  000054                     	endif
  8402  000054  0008               	tblrd		*
  8403  000056  50F5               	movf	tablat,w,c
  8404  000058  0A2E               	xorlw	46
  8405  00005A  A4D8               	btfss	status,2,c
  8406  00005C  D034               	goto	l9994
  8407                           
  8408                           ; BSR set to: 0
  8409                           ;doprnt.c: 612: flag |= 0x4000;
  8410  00005E  0100               	movlb	0	; () banked
  8411  000060  8D98               	bsf	(sprintf@flag+1)& (0+255),6,b
  8412                           
  8413                           ;doprnt.c: 613: f++;
  8414  000062  0100               	movlb	0	; () banked
  8415  000064  4B84               	infsnz	sprintf@f& (0+255),f,b
  8416  000066  2B85               	incf	(sprintf@f+1)& (0+255),f,b
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;doprnt.c: 620: {
  8420                           ;doprnt.c: 621: prec = 0;
  8421  000068  0E00               	movlw	0
  8422  00006A  0100               	movlb	0	; () banked
  8423  00006C  6FA4               	movwf	(sprintf@prec+1)& (0+255),b
  8424  00006E  0E00               	movlw	0
  8425  000070  6FA3               	movwf	sprintf@prec& (0+255),b
  8426                           
  8427                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  8428  000072  D01E               	goto	l9992
  8429  000074                     l9988:
  8430                           
  8431                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  8432  000074  C0A3  F024         	movff	sprintf@prec,___wmul@multiplier
  8433  000078  C0A4  F025         	movff	sprintf@prec+1,___wmul@multiplier+1
  8434  00007C  0E00               	movlw	0
  8435  00007E  6E27               	movwf	___wmul@multiplicand+1,c
  8436  000080  0E0A               	movlw	10
  8437  000082  6E26               	movwf	___wmul@multiplicand,c
  8438  000084  EC5A  F01A         	call	___wmul	;wreg free
  8439  000088  C084  FFF6         	movff	sprintf@f,tblptrl
  8440  00008C  C085  FFF7         	movff	sprintf@f+1,tblptrh
  8441  000090                     	if	0	;tblptru may be non-zero
  8442  000090                     	endif
  8443  000090                     	if	0	;tblptru may be non-zero
  8444  000090                     	endif
  8445  000090  0008               	tblrd		*
  8446  000092  50F5               	movf	tablat,w,c
  8447  000094  2624               	addwf	?___wmul,f,c
  8448  000096  0E00               	movlw	0
  8449  000098  2225               	addwfc	?___wmul+1,f,c
  8450  00009A  0ED0               	movlw	208
  8451  00009C  2424               	addwf	?___wmul,w,c
  8452  00009E  0100               	movlb	0	; () banked
  8453  0000A0  6FA3               	movwf	sprintf@prec& (0+255),b
  8454  0000A2  0EFF               	movlw	255
  8455  0000A4  2025               	addwfc	?___wmul+1,w,c
  8456  0000A6  0100               	movlb	0	; () banked
  8457  0000A8  6FA4               	movwf	(sprintf@prec+1)& (0+255),b
  8458                           
  8459                           ; BSR set to: 0
  8460  0000AA  0100               	movlb	0	; () banked
  8461  0000AC  4B84               	infsnz	sprintf@f& (0+255),f,b
  8462  0000AE  2B85               	incf	(sprintf@f+1)& (0+255),f,b
  8463  0000B0                     l9992:
  8464                           
  8465                           ; BSR set to: 0
  8466  0000B0  C084  FFF6         	movff	sprintf@f,tblptrl
  8467  0000B4  C085  FFF7         	movff	sprintf@f+1,tblptrh
  8468  0000B8                     	if	0	;tblptru may be non-zero
  8469  0000B8                     	endif
  8470  0000B8                     	if	0	;tblptru may be non-zero
  8471  0000B8                     	endif
  8472  0000B8  0008               	tblrd		*
  8473  0000BA  50F5               	movf	tablat,w,c
  8474  0000BC  EC90  F01A         	call	_isdigit
  8475  0000C0  A0D8               	btfss	status,0,c
  8476  0000C2  D00C               	goto	l10002
  8477  0000C4  D7D7               	goto	l9988
  8478  0000C6                     l9994:
  8479                           
  8480                           ;doprnt.c: 626: prec = 0;
  8481  0000C6  0E00               	movlw	0
  8482  0000C8  0100               	movlb	0	; () banked
  8483  0000CA  6FA4               	movwf	(sprintf@prec+1)& (0+255),b
  8484  0000CC  0E00               	movlw	0
  8485  0000CE  6FA3               	movwf	sprintf@prec& (0+255),b
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;doprnt.c: 628: flag |= 0x1000;
  8489  0000D0  0100               	movlb	0	; () banked
  8490  0000D2  8998               	bsf	(sprintf@flag+1)& (0+255),4,b
  8491                           
  8492                           ; BSR set to: 0
  8493                           ;doprnt.c: 630: }
  8494                           ;doprnt.c: 635: switch(c = *f++) {
  8495  0000D4  D003               	goto	l10002
  8496  0000D6                     l9998:
  8497                           
  8498                           ; BSR set to: 0
  8499                           ;doprnt.c: 663: flag |= 0x400;
  8500  0000D6  0100               	movlb	0	; () banked
  8501  0000D8  8598               	bsf	(sprintf@flag+1)& (0+255),2,b
  8502                           
  8503                           ; BSR set to: 0
  8504                           ;doprnt.c: 698: case 'i':
  8505                           ;doprnt.c: 699: break;
  8506                           
  8507                           ; BSR set to: 0
  8508                           
  8509                           ;doprnt.c: 697: case 'd':
  8510                           
  8511                           ;doprnt.c: 664: break;
  8512  0000DA  D01A               	goto	l10004
  8513  0000DC                     l10002:
  8514  0000DC  C084  FFF6         	movff	sprintf@f,tblptrl
  8515  0000E0  C085  FFF7         	movff	sprintf@f+1,tblptrh
  8516  0000E4  0100               	movlb	0	; () banked
  8517  0000E6  4B84               	infsnz	sprintf@f& (0+255),f,b
  8518  0000E8  2B85               	incf	(sprintf@f+1)& (0+255),f,b
  8519  0000EA                     	if	0	;tblptru may be non-zero
  8520  0000EA                     	endif
  8521  0000EA                     	if	0	;tblptru may be non-zero
  8522  0000EA                     	endif
  8523  0000EA  0008               	tblrd		*
  8524  0000EC  CFF5 F0A8          	movff	tablat,sprintf@c
  8525  0000F0  0100               	movlb	0	; () banked
  8526  0000F2  51A8               	movf	sprintf@c& (0+255),w,b
  8527                           
  8528                           ; Switch size 1, requested type "space"
  8529                           ; Number of cases is 4, Range of values is 0 to 105
  8530                           ; switch strategies available:
  8531                           ; Name         Instructions Cycles
  8532                           ; simple_byte           13     7 (average)
  8533                           ;	Chosen strategy is simple_byte
  8534  0000F4  0A00               	xorlw	0	; case 0
  8535  0000F6  B4D8               	btfsc	status,2,c
  8536  0000F8  EFA6  F004         	goto	l10206
  8537  0000FC  0A64               	xorlw	100	; case 100
  8538  0000FE  B4D8               	btfsc	status,2,c
  8539  000100  D007               	goto	l10004
  8540  000102  0A02               	xorlw	2	; case 102
  8541  000104  B4D8               	btfsc	status,2,c
  8542  000106  D7E7               	goto	l9998
  8543  000108  0A0F               	xorlw	15	; case 105
  8544  00010A  A4D8               	btfss	status,2,c
  8545  00010C  EF97  F004         	goto	l10204
  8546  000110                     l10004:
  8547                           
  8548                           ; BSR set to: 0
  8549                           ;doprnt.c: 825: if(flag & (0x700)) {
  8550  000110  0E07               	movlw	7
  8551  000112  0100               	movlb	0	; () banked
  8552  000114  1598               	andwf	(sprintf@flag+1)& (0+255),w,b
  8553  000116  B4D8               	btfsc	status,2,c
  8554  000118  D319               	goto	l10152
  8555                           
  8556                           ; BSR set to: 0
  8557                           ;doprnt.c: 827: if(flag & 0x1000)
  8558  00011A  0100               	movlb	0	; () banked
  8559  00011C  A998               	btfss	(sprintf@flag+1)& (0+255),4,b
  8560  00011E  D005               	goto	l10010
  8561                           
  8562                           ; BSR set to: 0
  8563                           ;doprnt.c: 829: prec = 6;
  8564  000120  0E00               	movlw	0
  8565  000122  0100               	movlb	0	; () banked
  8566  000124  6FA4               	movwf	(sprintf@prec+1)& (0+255),b
  8567  000126  0E06               	movlw	6
  8568  000128  6FA3               	movwf	sprintf@prec& (0+255),b
  8569  00012A                     l10010:
  8570                           
  8571                           ; BSR set to: 0
  8572                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  8573  00012A  C095  FFD9         	movff	sprintf@ap,fsr2l
  8574  00012E  C096  FFDA         	movff	sprintf@ap+1,fsr2h
  8575  000132  CFDE F0A5          	movff	postinc2,sprintf@fval
  8576  000136  CFDE F0A6          	movff	postinc2,sprintf@fval+1
  8577  00013A  CFDD F0A7          	movff	postdec2,sprintf@fval+2
  8578                           
  8579                           ; BSR set to: 0
  8580  00013E  0E03               	movlw	3
  8581  000140  0100               	movlb	0	; () banked
  8582  000142  2795               	addwf	sprintf@ap& (0+255),f,b
  8583  000144  0E00               	movlw	0
  8584  000146  2396               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;doprnt.c: 831: if(fval < 0.0) {
  8588  000148  0100               	movlb	0	; () banked
  8589  00014A  AFA7               	btfss	(sprintf@fval+2)& (0+255),7,b
  8590  00014C  D011               	goto	l10020
  8591                           
  8592                           ; BSR set to: 0
  8593                           ;doprnt.c: 832: fval = -fval;
  8594  00014E  C0A5  F066         	movff	sprintf@fval,___ftneg@f1
  8595  000152  C0A6  F067         	movff	sprintf@fval+1,___ftneg@f1+1
  8596  000156  C0A7  F068         	movff	sprintf@fval+2,___ftneg@f1+2
  8597  00015A  ECF3  F019         	call	___ftneg	;wreg free
  8598  00015E  C066  F0A5         	movff	?___ftneg,sprintf@fval
  8599  000162  C067  F0A6         	movff	?___ftneg+1,sprintf@fval+1
  8600  000166  C068  F0A7         	movff	?___ftneg+2,sprintf@fval+2
  8601                           
  8602                           ;doprnt.c: 833: flag |= 0x03;
  8603  00016A  0E03               	movlw	3
  8604  00016C  0100               	movlb	0	; () banked
  8605  00016E  1397               	iorwf	sprintf@flag& (0+255),f,b
  8606  000170                     l10020:
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;doprnt.c: 834: }
  8610                           ;doprnt.c: 835: exp = 0;
  8611  000170  0E00               	movlw	0
  8612  000172  0100               	movlb	0	; () banked
  8613  000174  6F9A               	movwf	(sprintf@exp+1)& (0+255),b
  8614  000176  0E00               	movlw	0
  8615  000178  6F99               	movwf	sprintf@exp& (0+255),b
  8616                           
  8617                           ; BSR set to: 0
  8618                           ;doprnt.c: 836: if( fval!=0) {
  8619  00017A  0100               	movlb	0	; () banked
  8620  00017C  51A5               	movf	sprintf@fval& (0+255),w,b
  8621  00017E  0100               	movlb	0	; () banked
  8622  000180  11A6               	iorwf	(sprintf@fval+1)& (0+255),w,b
  8623  000182  0100               	movlb	0	; () banked
  8624  000184  11A7               	iorwf	(sprintf@fval+2)& (0+255),w,b
  8625  000186  B4D8               	btfsc	status,2,c
  8626  000188  D091               	goto	l10048
  8627                           
  8628                           ; BSR set to: 0
  8629                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  8630  00018A  0E82               	movlw	130
  8631  00018C  0100               	movlb	0	; () banked
  8632  00018E  6F8C               	movwf	??_sprintf& (0+255),b
  8633  000190  0EFF               	movlw	255
  8634  000192  0100               	movlb	0	; () banked
  8635  000194  6F8D               	movwf	(??_sprintf+1)& (0+255),b
  8636  000196  C0A5  F08E         	movff	sprintf@fval,??_sprintf+2
  8637  00019A  C0A6  F08F         	movff	sprintf@fval+1,??_sprintf+3
  8638  00019E  C0A7  F090         	movff	sprintf@fval+2,??_sprintf+4
  8639  0001A2  C0A8  F091         	movff	sprintf@fval+3,??_sprintf+5
  8640  0001A6  0E10               	movlw	16
  8641  0001A8  D006               	goto	u11880
  8642  0001AA                     u11885:
  8643  0001AA  0100               	movlb	0	; () banked
  8644  0001AC  90D8               	bcf	status,0,c
  8645  0001AE  3391               	rrcf	(??_sprintf+5)& (0+255),f,b
  8646  0001B0  3390               	rrcf	(??_sprintf+4)& (0+255),f,b
  8647  0001B2  338F               	rrcf	(??_sprintf+3)& (0+255),f,b
  8648  0001B4  338E               	rrcf	(??_sprintf+2)& (0+255),f,b
  8649  0001B6                     u11880:
  8650  0001B6  2EE8               	decfsz	wreg,f,c
  8651  0001B8  D7F8               	goto	u11885
  8652  0001BA  0100               	movlb	0	; () banked
  8653  0001BC  518E               	movf	(??_sprintf+2)& (0+255),w,b
  8654  0001BE  0100               	movlb	0	; () banked
  8655  0001C0  258C               	addwf	??_sprintf& (0+255),w,b
  8656  0001C2  0100               	movlb	0	; () banked
  8657  0001C4  6F99               	movwf	sprintf@exp& (0+255),b
  8658  0001C6  0E00               	movlw	0
  8659  0001C8  0100               	movlb	0	; () banked
  8660  0001CA  218D               	addwfc	(??_sprintf+1)& (0+255),w,b
  8661  0001CC  0100               	movlb	0	; () banked
  8662  0001CE  6F9A               	movwf	(sprintf@exp+1)& (0+255),b
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;doprnt.c: 838: exp--;
  8666  0001D0  0100               	movlb	0	; () banked
  8667  0001D2  0799               	decf	sprintf@exp& (0+255),f,b
  8668  0001D4  A0D8               	btfss	status,0,c
  8669  0001D6  079A               	decf	(sprintf@exp+1)& (0+255),f,b
  8670                           
  8671                           ; BSR set to: 0
  8672                           ;doprnt.c: 839: exp *= 3;
  8673  0001D8  C099  F024         	movff	sprintf@exp,___wmul@multiplier
  8674  0001DC  C09A  F025         	movff	sprintf@exp+1,___wmul@multiplier+1
  8675  0001E0  0E00               	movlw	0
  8676  0001E2  6E27               	movwf	___wmul@multiplicand+1,c
  8677  0001E4  0E03               	movlw	3
  8678  0001E6  6E26               	movwf	___wmul@multiplicand,c
  8679  0001E8  EC5A  F01A         	call	___wmul	;wreg free
  8680  0001EC  C024  F099         	movff	?___wmul,sprintf@exp
  8681  0001F0  C025  F09A         	movff	?___wmul+1,sprintf@exp+1
  8682                           
  8683                           ;doprnt.c: 840: exp /= 10;
  8684  0001F4  C099  F01C         	movff	sprintf@exp,___awdiv@dividend
  8685  0001F8  C09A  F01D         	movff	sprintf@exp+1,___awdiv@dividend+1
  8686  0001FC  0E00               	movlw	0
  8687  0001FE  6E1F               	movwf	___awdiv@divisor+1,c
  8688  000200  0E0A               	movlw	10
  8689  000202  6E1E               	movwf	___awdiv@divisor,c
  8690  000204  EC3D  F016         	call	___awdiv	;wreg free
  8691  000208  C01C  F099         	movff	?___awdiv,sprintf@exp
  8692  00020C  C01D  F09A         	movff	?___awdiv+1,sprintf@exp+1
  8693                           
  8694                           ;doprnt.c: 841: if(exp < 0)
  8695  000210  0100               	movlb	0	; () banked
  8696  000212  AF9A               	btfss	(sprintf@exp+1)& (0+255),7,b
  8697  000214  D004               	goto	l10036
  8698                           
  8699                           ; BSR set to: 0
  8700                           ;doprnt.c: 842: exp--;
  8701  000216  0100               	movlb	0	; () banked
  8702  000218  0799               	decf	sprintf@exp& (0+255),f,b
  8703  00021A  A0D8               	btfss	status,0,c
  8704  00021C  079A               	decf	(sprintf@exp+1)& (0+255),f,b
  8705  00021E                     l10036:
  8706                           
  8707                           ; BSR set to: 0
  8708                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  8709  00021E  0100               	movlb	0	; () banked
  8710  000220  5199               	movf	sprintf@exp& (0+255),w,b
  8711  000222  0800               	sublw	0
  8712  000224  ECD5  F006         	call	_scale
  8713  000228  C066  F09B         	movff	?_scale,sprintf@tmpval
  8714  00022C  C067  F09C         	movff	?_scale+1,sprintf@tmpval+1
  8715  000230  C068  F09D         	movff	?_scale+2,sprintf@tmpval+2
  8716                           
  8717                           ;doprnt.c: 847: tmpval.integ *= fval;
  8718  000234  C09B  F02A         	movff	sprintf@tmpval,___ftmul@f1
  8719  000238  C09C  F02B         	movff	sprintf@tmpval+1,___ftmul@f1+1
  8720  00023C  C09D  F02C         	movff	sprintf@tmpval+2,___ftmul@f1+2
  8721  000240  C0A5  F02D         	movff	sprintf@fval,___ftmul@f2
  8722  000244  C0A6  F02E         	movff	sprintf@fval+1,___ftmul@f2+1
  8723  000248  C0A7  F02F         	movff	sprintf@fval+2,___ftmul@f2+2
  8724  00024C  EC72  F010         	call	___ftmul	;wreg free
  8725  000250  C02A  F09B         	movff	?___ftmul,sprintf@tmpval
  8726  000254  C02B  F09C         	movff	?___ftmul+1,sprintf@tmpval+1
  8727  000258  C02C  F09D         	movff	?___ftmul+2,sprintf@tmpval+2
  8728                           
  8729                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  8730  00025C  C09B  F016         	movff	sprintf@tmpval,___ftge@ff1
  8731  000260  C09C  F017         	movff	sprintf@tmpval+1,___ftge@ff1+1
  8732  000264  C09D  F018         	movff	sprintf@tmpval+2,___ftge@ff1+2
  8733  000268  0E00               	movlw	0
  8734  00026A  6E19               	movwf	___ftge@ff2,c
  8735  00026C  0E80               	movlw	128
  8736  00026E  6E1A               	movwf	___ftge@ff2+1,c
  8737  000270  0E3F               	movlw	63
  8738  000272  6E1B               	movwf	___ftge@ff2+2,c
  8739  000274  ECAF  F015         	call	___ftge	;wreg free
  8740  000278  B0D8               	btfsc	status,0,c
  8741  00027A  D005               	goto	l10044
  8742                           
  8743                           ;doprnt.c: 849: exp--;
  8744  00027C  0100               	movlb	0	; () banked
  8745  00027E  0799               	decf	sprintf@exp& (0+255),f,b
  8746  000280  A0D8               	btfss	status,0,c
  8747  000282  079A               	decf	(sprintf@exp+1)& (0+255),f,b
  8748  000284  D013               	goto	l10048
  8749  000286                     l10044:
  8750                           
  8751                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  8752  000286  C09B  F016         	movff	sprintf@tmpval,___ftge@ff1
  8753  00028A  C09C  F017         	movff	sprintf@tmpval+1,___ftge@ff1+1
  8754  00028E  C09D  F018         	movff	sprintf@tmpval+2,___ftge@ff1+2
  8755  000292  0E00               	movlw	0
  8756  000294  6E19               	movwf	___ftge@ff2,c
  8757  000296  0E20               	movlw	32
  8758  000298  6E1A               	movwf	___ftge@ff2+1,c
  8759  00029A  0E41               	movlw	65
  8760  00029C  6E1B               	movwf	___ftge@ff2+2,c
  8761  00029E  ECAF  F015         	call	___ftge	;wreg free
  8762  0002A2  A0D8               	btfss	status,0,c
  8763  0002A4  D003               	goto	l10048
  8764                           
  8765                           ;doprnt.c: 851: exp++;
  8766  0002A6  0100               	movlb	0	; () banked
  8767  0002A8  4B99               	infsnz	sprintf@exp& (0+255),f,b
  8768  0002AA  2B9A               	incf	(sprintf@exp+1)& (0+255),f,b
  8769  0002AC                     l10048:
  8770                           
  8771                           ;doprnt.c: 852: }
  8772                           ;doprnt.c: 1112: if(prec <= 12)
  8773  0002AC  0100               	movlb	0	; () banked
  8774  0002AE  BFA4               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8775  0002B0  D008               	goto	l10050
  8776  0002B2  0100               	movlb	0	; () banked
  8777  0002B4  51A4               	movf	(sprintf@prec+1)& (0+255),w,b
  8778  0002B6  E11D               	bnz	l10052
  8779  0002B8  0E0D               	movlw	13
  8780  0002BA  0100               	movlb	0	; () banked
  8781  0002BC  5DA3               	subwf	sprintf@prec& (0+255),w,b
  8782  0002BE  B0D8               	btfsc	status,0,c
  8783  0002C0  D018               	goto	l10052
  8784  0002C2                     l10050:
  8785                           
  8786                           ; BSR set to: 0
  8787                           ;doprnt.c: 1113: fval += fround(prec);
  8788  0002C2  C0A5  F070         	movff	sprintf@fval,___ftadd@f1
  8789  0002C6  C0A6  F071         	movff	sprintf@fval+1,___ftadd@f1+1
  8790  0002CA  C0A7  F072         	movff	sprintf@fval+2,___ftadd@f1+2
  8791  0002CE  0100               	movlb	0	; () banked
  8792  0002D0  51A3               	movf	sprintf@prec& (0+255),w,b
  8793  0002D2  EC14  F00A         	call	_fround
  8794  0002D6  C066  F073         	movff	?_fround,___ftadd@f2
  8795  0002DA  C067  F074         	movff	?_fround+1,___ftadd@f2+1
  8796  0002DE  C068  F075         	movff	?_fround+2,___ftadd@f2+2
  8797  0002E2  ECE0  F008         	call	___ftadd	;wreg free
  8798  0002E6  C070  F0A5         	movff	?___ftadd,sprintf@fval
  8799  0002EA  C071  F0A6         	movff	?___ftadd+1,sprintf@fval+1
  8800  0002EE  C072  F0A7         	movff	?___ftadd+2,sprintf@fval+2
  8801  0002F2                     l10052:
  8802                           
  8803                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  8804  0002F2  0100               	movlb	0	; () banked
  8805  0002F4  BF9A               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8806  0002F6  D008               	goto	l10054
  8807  0002F8  0100               	movlb	0	; () banked
  8808  0002FA  519A               	movf	(sprintf@exp+1)& (0+255),w,b
  8809  0002FC  E12A               	bnz	l10060
  8810  0002FE  0E0A               	movlw	10
  8811  000300  0100               	movlb	0	; () banked
  8812  000302  5D99               	subwf	sprintf@exp& (0+255),w,b
  8813  000304  B0D8               	btfsc	status,0,c
  8814  000306  D025               	goto	l10060
  8815  000308                     l10054:
  8816                           
  8817                           ; BSR set to: 0
  8818  000308  0100               	movlb	0	; () banked
  8819  00030A  51A5               	movf	sprintf@fval& (0+255),w,b
  8820  00030C  0100               	movlb	0	; () banked
  8821  00030E  11A6               	iorwf	(sprintf@fval+1)& (0+255),w,b
  8822  000310  0100               	movlb	0	; () banked
  8823  000312  11A7               	iorwf	(sprintf@fval+2)& (0+255),w,b
  8824  000314  B4D8               	btfsc	status,2,c
  8825  000316  D05F               	goto	l10074
  8826                           
  8827                           ; BSR set to: 0
  8828  000318  C0A5  F06D         	movff	sprintf@fval,___fttol@f1
  8829  00031C  C0A6  F06E         	movff	sprintf@fval+1,___fttol@f1+1
  8830  000320  C0A7  F06F         	movff	sprintf@fval+2,___fttol@f1+2
  8831  000324  EC4A  F00C         	call	___fttol	;wreg free
  8832  000328  0100               	movlb	0	; () banked
  8833  00032A  516D               	movf	?___fttol& (0+255),w,b
  8834  00032C  0100               	movlb	0	; () banked
  8835  00032E  116E               	iorwf	(?___fttol+1)& (0+255),w,b
  8836  000330  0100               	movlb	0	; () banked
  8837  000332  116F               	iorwf	(?___fttol+2)& (0+255),w,b
  8838  000334  0100               	movlb	0	; () banked
  8839  000336  1170               	iorwf	(?___fttol+3)& (0+255),w,b
  8840  000338  A4D8               	btfss	status,2,c
  8841  00033A  D04D               	goto	l10074
  8842                           
  8843                           ; BSR set to: 0
  8844  00033C  0100               	movlb	0	; () banked
  8845  00033E  BF9A               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8846  000340  D04A               	goto	l10074
  8847  000342  0100               	movlb	0	; () banked
  8848  000344  519A               	movf	(sprintf@exp+1)& (0+255),w,b
  8849  000346  E105               	bnz	l10060
  8850  000348  0E02               	movlw	2
  8851  00034A  0100               	movlb	0	; () banked
  8852  00034C  5D99               	subwf	sprintf@exp& (0+255),w,b
  8853  00034E  A0D8               	btfss	status,0,c
  8854  000350  D042               	goto	l10074
  8855  000352                     l10060:
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  8859  000352  C09B  F016         	movff	sprintf@tmpval,___ftge@ff1
  8860  000356  C09C  F017         	movff	sprintf@tmpval+1,___ftge@ff1+1
  8861  00035A  C09D  F018         	movff	sprintf@tmpval+2,___ftge@ff1+2
  8862  00035E  0E70               	movlw	112
  8863  000360  6E19               	movwf	___ftge@ff2,c
  8864  000362  0E89               	movlw	137
  8865  000364  6E1A               	movwf	___ftge@ff2+1,c
  8866  000366  0E40               	movlw	64
  8867  000368  6E1B               	movwf	___ftge@ff2+2,c
  8868  00036A  ECAF  F015         	call	___ftge	;wreg free
  8869  00036E  B0D8               	btfsc	status,0,c
  8870  000370  D003               	goto	l10064
  8871                           
  8872                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  8873  000372  0100               	movlb	0	; () banked
  8874  000374  0EF7               	movlw	247
  8875  000376  D002               	goto	L4
  8876  000378                     l10064:
  8877                           
  8878                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  8879  000378  0100               	movlb	0	; () banked
  8880  00037A  0EF8               	movlw	248
  8881  00037C                     L4:
  8882  00037C  2799               	addwf	sprintf@exp& (0+255),f,b
  8883  00037E  0EFF               	movlw	255
  8884  000380  239A               	addwfc	(sprintf@exp+1)& (0+255),f,b
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;doprnt.c: 1124: }
  8888                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  8889                           
  8890                           ; BSR set to: 0
  8891  000382  0100               	movlb	0	; () banked
  8892  000384  5199               	movf	sprintf@exp& (0+255),w,b
  8893  000386  ECD5  F006         	call	_scale
  8894  00038A  C066  F09B         	movff	?_scale,sprintf@tmpval
  8895  00038E  C067  F09C         	movff	?_scale+1,sprintf@tmpval+1
  8896  000392  C068  F09D         	movff	?_scale+2,sprintf@tmpval+2
  8897                           
  8898                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  8899  000396  C0A5  F016         	movff	sprintf@fval,__tdiv_to_l_@f1
  8900  00039A  C0A6  F017         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  8901  00039E  C0A7  F018         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  8902  0003A2  C09B  F019         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  8903  0003A6  C09C  F01A         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  8904  0003AA  C09D  F01B         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  8905  0003AE  EC89  F00D         	call	__tdiv_to_l_	;wreg free
  8906  0003B2  C016  F09F         	movff	?__tdiv_to_l_,sprintf@val
  8907  0003B6  C017  F0A0         	movff	?__tdiv_to_l_+1,sprintf@val+1
  8908  0003BA  C018  F0A1         	movff	?__tdiv_to_l_+2,sprintf@val+2
  8909  0003BE  C019  F0A2         	movff	?__tdiv_to_l_+3,sprintf@val+3
  8910                           
  8911                           ;doprnt.c: 1129: fval = 0.0;
  8912  0003C2  0E00               	movlw	0
  8913  0003C4  0100               	movlb	0	; () banked
  8914  0003C6  6FA5               	movwf	sprintf@fval& (0+255),b
  8915  0003C8  0E00               	movlw	0
  8916  0003CA  0100               	movlb	0	; () banked
  8917  0003CC  6FA6               	movwf	(sprintf@fval+1)& (0+255),b
  8918  0003CE  0E00               	movlw	0
  8919  0003D0  0100               	movlb	0	; () banked
  8920  0003D2  6FA7               	movwf	(sprintf@fval+2)& (0+255),b
  8921                           
  8922                           ;doprnt.c: 1130: } else {
  8923  0003D4  D033               	goto	l10078
  8924  0003D6                     l10074:
  8925                           
  8926                           ; BSR set to: 0
  8927                           ;doprnt.c: 1131: val = (unsigned long)fval;
  8928  0003D6  C0A5  F06D         	movff	sprintf@fval,___fttol@f1
  8929  0003DA  C0A6  F06E         	movff	sprintf@fval+1,___fttol@f1+1
  8930  0003DE  C0A7  F06F         	movff	sprintf@fval+2,___fttol@f1+2
  8931  0003E2  EC4A  F00C         	call	___fttol	;wreg free
  8932  0003E6  C06D  F09F         	movff	?___fttol,sprintf@val
  8933  0003EA  C06E  F0A0         	movff	?___fttol+1,sprintf@val+1
  8934  0003EE  C06F  F0A1         	movff	?___fttol+2,sprintf@val+2
  8935  0003F2  C070  F0A2         	movff	?___fttol+3,sprintf@val+3
  8936                           
  8937                           ;doprnt.c: 1132: fval -= (double)val;
  8938  0003F6  C0A5  F07C         	movff	sprintf@fval,___ftsub@f1
  8939  0003FA  C0A6  F07D         	movff	sprintf@fval+1,___ftsub@f1+1
  8940  0003FE  C0A7  F07E         	movff	sprintf@fval+2,___ftsub@f1+2
  8941  000402  C09F  F01E         	movff	sprintf@val,___lltoft@c
  8942  000406  C0A0  F01F         	movff	sprintf@val+1,___lltoft@c+1
  8943  00040A  C0A1  F020         	movff	sprintf@val+2,___lltoft@c+2
  8944  00040E  C0A2  F021         	movff	sprintf@val+3,___lltoft@c+3
  8945  000412  ECB2  F018         	call	___lltoft	;wreg free
  8946  000416  C01E  F07F         	movff	?___lltoft,___ftsub@f2
  8947  00041A  C01F  F080         	movff	?___lltoft+1,___ftsub@f2+1
  8948  00041E  C020  F081         	movff	?___lltoft+2,___ftsub@f2+2
  8949  000422  EC34  F019         	call	___ftsub	;wreg free
  8950  000426  C07C  F0A5         	movff	?___ftsub,sprintf@fval
  8951  00042A  C07D  F0A6         	movff	?___ftsub+1,sprintf@fval+1
  8952  00042E  C07E  F0A7         	movff	?___ftsub+2,sprintf@fval+2
  8953                           
  8954                           ;doprnt.c: 1133: exp = 0;
  8955  000432  0E00               	movlw	0
  8956  000434  0100               	movlb	0	; () banked
  8957  000436  6F9A               	movwf	(sprintf@exp+1)& (0+255),b
  8958  000438  0E00               	movlw	0
  8959  00043A  6F99               	movwf	sprintf@exp& (0+255),b
  8960  00043C                     l10078:
  8961                           
  8962                           ; BSR set to: 0
  8963                           ;doprnt.c: 1134: }
  8964                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8965  00043C  0E01               	movlw	1
  8966  00043E  0100               	movlb	0	; () banked
  8967  000440  6FA8               	movwf	sprintf@c& (0+255),b
  8968  000442                     l10080:
  8969                           
  8970                           ; BSR set to: 0
  8971  000442  0E0A               	movlw	10
  8972  000444  0100               	movlb	0	; () banked
  8973  000446  19A8               	xorwf	sprintf@c& (0+255),w,b
  8974  000448  B4D8               	btfsc	status,2,c
  8975  00044A  D01E               	goto	l10092
  8976                           
  8977                           ; BSR set to: 0
  8978                           ;doprnt.c: 1137: if(val < dpowers[c])
  8979                           
  8980                           ; BSR set to: 0
  8981                           
  8982                           ; BSR set to: 0
  8983  00044C  0100               	movlb	0	; () banked
  8984  00044E  51A8               	movf	sprintf@c& (0+255),w,b
  8985  000450  0D04               	mullw	4
  8986  000452  0EAB               	movlw	low _dpowers
  8987  000454  24F3               	addwf	prodl,w,c
  8988  000456  6EF6               	movwf	tblptrl,c
  8989  000458  0E60               	movlw	high _dpowers
  8990  00045A  20F4               	addwfc	prodh,w,c
  8991  00045C  6EF7               	movwf	tblptrh,c
  8992  00045E                     	if	0	;There are less than 3 active tblptr bytes
  8993  00045E                     	endif
  8994  00045E  0009               	tblrd		*+
  8995  000460  50F5               	movf	tablat,w,c
  8996  000462  0100               	movlb	0	; () banked
  8997  000464  5D9F               	subwf	sprintf@val& (0+255),w,b
  8998  000466  0009               	tblrd		*+
  8999  000468  50F5               	movf	tablat,w,c
  9000  00046A  0100               	movlb	0	; () banked
  9001  00046C  59A0               	subwfb	(sprintf@val+1)& (0+255),w,b
  9002  00046E  0009               	tblrd		*+
  9003  000470  50F5               	movf	tablat,w,c
  9004  000472  0100               	movlb	0	; () banked
  9005  000474  59A1               	subwfb	(sprintf@val+2)& (0+255),w,b
  9006  000476  0009               	tblrd		*+
  9007  000478  50F5               	movf	tablat,w,c
  9008  00047A  0100               	movlb	0	; () banked
  9009  00047C  59A2               	subwfb	(sprintf@val+3)& (0+255),w,b
  9010  00047E  A0D8               	btfss	status,0,c
  9011  000480  D003               	goto	l10092
  9012                           
  9013                           ; BSR set to: 0
  9014                           
  9015                           ; BSR set to: 0
  9016                           
  9017                           ; BSR set to: 0
  9018                           ;doprnt.c: 1138: break;
  9019  000482  0100               	movlb	0	; () banked
  9020  000484  2BA8               	incf	sprintf@c& (0+255),f,b
  9021  000486  D7DD               	goto	l10080
  9022  000488                     l10092:
  9023                           
  9024                           ; BSR set to: 0
  9025                           ;doprnt.c: 1175: {
  9026                           ;doprnt.c: 1188: if(flag & 0x03)
  9027  000488  0E03               	movlw	3
  9028  00048A  0100               	movlb	0	; () banked
  9029  00048C  1597               	andwf	sprintf@flag& (0+255),w,b
  9030  00048E  0100               	movlb	0	; () banked
  9031  000490  6F8C               	movwf	??_sprintf& (0+255),b
  9032  000492  0E00               	movlw	0
  9033  000494  0100               	movlb	0	; () banked
  9034  000496  1598               	andwf	(sprintf@flag+1)& (0+255),w,b
  9035  000498  0100               	movlb	0	; () banked
  9036  00049A  6F8D               	movwf	(??_sprintf+1)& (0+255),b
  9037  00049C  0100               	movlb	0	; () banked
  9038  00049E  518C               	movf	??_sprintf& (0+255),w,b
  9039  0004A0  0100               	movlb	0	; () banked
  9040  0004A2  118D               	iorwf	(??_sprintf+1)& (0+255),w,b
  9041  0004A4  B4D8               	btfsc	status,2,c
  9042  0004A6  D054               	goto	l10106
  9043                           
  9044                           ; BSR set to: 0
  9045                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  9046  0004A8  C082  FFD9         	movff	sprintf@sp,fsr2l
  9047  0004AC  C083  FFDA         	movff	sprintf@sp+1,fsr2h
  9048  0004B0  0E2D               	movlw	45
  9049  0004B2  D04C               	goto	L5
  9050  0004B4                     l10096:
  9051                           
  9052                           ; BSR set to: 0
  9053  0004B4  0100               	movlb	0	; () banked
  9054  0004B6  4B82               	infsnz	sprintf@sp& (0+255),f,b
  9055  0004B8  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
  9056                           
  9057                           ; BSR set to: 0
  9058                           ;doprnt.c: 1195: }
  9059                           ;doprnt.c: 1196: while(c--) {
  9060  0004BA  D04A               	goto	l10106
  9061  0004BC                     l10098:
  9062                           
  9063                           ; BSR set to: 0
  9064                           ;doprnt.c: 1200: {
  9065                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  9066  0004BC  C09F  F01F         	movff	sprintf@val,___lldiv@dividend
  9067  0004C0  C0A0  F020         	movff	sprintf@val+1,___lldiv@dividend+1
  9068  0004C4  C0A1  F021         	movff	sprintf@val+2,___lldiv@dividend+2
  9069  0004C8  C0A2  F022         	movff	sprintf@val+3,___lldiv@dividend+3
  9070  0004CC  0100               	movlb	0	; () banked
  9071  0004CE  51A8               	movf	sprintf@c& (0+255),w,b
  9072  0004D0  0D04               	mullw	4
  9073  0004D2  0EAB               	movlw	low _dpowers
  9074  0004D4  24F3               	addwf	prodl,w,c
  9075  0004D6  6EF6               	movwf	tblptrl,c
  9076  0004D8  0E60               	movlw	high _dpowers
  9077  0004DA  20F4               	addwfc	prodh,w,c
  9078  0004DC  6EF7               	movwf	tblptrh,c
  9079  0004DE                     	if	0	;There are less than 3 active tblptr bytes
  9080  0004DE                     	endif
  9081  0004DE  0009               	tblrd		*+
  9082  0004E0  CFF5 F023          	movff	tablat,___lldiv@divisor
  9083  0004E4  0009               	tblrd		*+
  9084  0004E6  CFF5 F024          	movff	tablat,___lldiv@divisor+1
  9085  0004EA  0009               	tblrd		*+
  9086  0004EC  CFF5 F025          	movff	tablat,___lldiv@divisor+2
  9087  0004F0  000A               	tblrd		*-
  9088  0004F2  CFF5 F026          	movff	tablat,___lldiv@divisor+3
  9089  0004F6  EC7F  F016         	call	___lldiv	;wreg free
  9090  0004FA  C01F  F09B         	movff	?___lldiv,sprintf@tmpval
  9091  0004FE  C020  F09C         	movff	?___lldiv+1,sprintf@tmpval+1
  9092  000502  C021  F09D         	movff	?___lldiv+2,sprintf@tmpval+2
  9093  000506  C022  F09E         	movff	?___lldiv+3,sprintf@tmpval+3
  9094                           
  9095                           ;doprnt.c: 1202: tmpval.vd %= 10;
  9096  00050A  C09B  F016         	movff	sprintf@tmpval,___llmod@dividend
  9097  00050E  C09C  F017         	movff	sprintf@tmpval+1,___llmod@dividend+1
  9098  000512  C09D  F018         	movff	sprintf@tmpval+2,___llmod@dividend+2
  9099  000516  C09E  F019         	movff	sprintf@tmpval+3,___llmod@dividend+3
  9100  00051A  0E0A               	movlw	10
  9101  00051C  6E1A               	movwf	___llmod@divisor,c
  9102  00051E  0E00               	movlw	0
  9103  000520  6E1B               	movwf	___llmod@divisor+1,c
  9104  000522  0E00               	movlw	0
  9105  000524  6E1C               	movwf	___llmod@divisor+2,c
  9106  000526  0E00               	movlw	0
  9107  000528  6E1D               	movwf	___llmod@divisor+3,c
  9108  00052A  EC4D  F018         	call	___llmod	;wreg free
  9109  00052E  C016  F09B         	movff	?___llmod,sprintf@tmpval
  9110  000532  C017  F09C         	movff	?___llmod+1,sprintf@tmpval+1
  9111  000536  C018  F09D         	movff	?___llmod+2,sprintf@tmpval+2
  9112  00053A  C019  F09E         	movff	?___llmod+3,sprintf@tmpval+3
  9113                           
  9114                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  9115  00053E  0100               	movlb	0	; () banked
  9116  000540  519B               	movf	sprintf@tmpval& (0+255),w,b
  9117  000542  0F30               	addlw	48
  9118  000544  C082  FFD9         	movff	sprintf@sp,fsr2l
  9119  000548  C083  FFDA         	movff	sprintf@sp+1,fsr2h
  9120  00054C                     L5:
  9121  00054C  6EDF               	movwf	indf2,c
  9122  00054E  D7B2               	goto	l10096
  9123  000550                     l10106:
  9124                           
  9125                           ; BSR set to: 0
  9126  000550  0100               	movlb	0	; () banked
  9127  000552  07A8               	decf	sprintf@c& (0+255),f,b
  9128  000554  0100               	movlb	0	; () banked
  9129  000556  29A8               	incf	sprintf@c& (0+255),w,b
  9130  000558  B4D8               	btfsc	status,2,c
  9131  00055A  D00E               	goto	l10114
  9132  00055C  D7AF               	goto	l10098
  9133  00055E                     l10108:
  9134                           
  9135                           ; BSR set to: 0
  9136                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  9137  00055E  C082  FFD9         	movff	sprintf@sp,fsr2l
  9138  000562  C083  FFDA         	movff	sprintf@sp+1,fsr2h
  9139  000566  0E30               	movlw	48
  9140  000568  6EDF               	movwf	indf2,c
  9141                           
  9142                           ; BSR set to: 0
  9143  00056A  0100               	movlb	0	; () banked
  9144  00056C  4B82               	infsnz	sprintf@sp& (0+255),f,b
  9145  00056E  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
  9146                           
  9147                           ; BSR set to: 0
  9148                           ;doprnt.c: 1209: exp--;
  9149  000570  0100               	movlb	0	; () banked
  9150  000572  0799               	decf	sprintf@exp& (0+255),f,b
  9151  000574  A0D8               	btfss	status,0,c
  9152  000576  079A               	decf	(sprintf@exp+1)& (0+255),f,b
  9153  000578                     l10114:
  9154                           
  9155                           ; BSR set to: 0
  9156  000578  0100               	movlb	0	; () banked
  9157  00057A  BF9A               	btfsc	(sprintf@exp+1)& (0+255),7,b
  9158  00057C  D007               	goto	l10116
  9159  00057E  0100               	movlb	0	; () banked
  9160  000580  519A               	movf	(sprintf@exp+1)& (0+255),w,b
  9161  000582  E1ED               	bnz	l10108
  9162  000584  0100               	movlb	0	; () banked
  9163  000586  0599               	decf	sprintf@exp& (0+255),w,b
  9164  000588  B0D8               	btfsc	status,0,c
  9165  00058A  D7E9               	goto	l10108
  9166  00058C                     l10116:
  9167                           
  9168                           ; BSR set to: 0
  9169                           ;doprnt.c: 1210: }
  9170                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9171  00058C  0100               	movlb	0	; () banked
  9172  00058E  BFA4               	btfsc	(sprintf@prec+1)& (0+255),7,b
  9173  000590  D00C               	goto	l1319
  9174  000592  0100               	movlb	0	; () banked
  9175  000594  51A4               	movf	(sprintf@prec+1)& (0+255),w,b
  9176  000596  E105               	bnz	u12040
  9177  000598  0E09               	movlw	9
  9178  00059A  0100               	movlb	0	; () banked
  9179  00059C  5DA3               	subwf	sprintf@prec& (0+255),w,b
  9180  00059E  A0D8               	btfss	status,0,c
  9181  0005A0  D004               	goto	l1319
  9182  0005A2                     u12040:
  9183                           
  9184                           ; BSR set to: 0
  9185                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  9186  0005A2  0E08               	movlw	8
  9187  0005A4  0100               	movlb	0	; () banked
  9188  0005A6  6FA8               	movwf	sprintf@c& (0+255),b
  9189  0005A8  D002               	goto	l10120
  9190  0005AA                     l1319:
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;doprnt.c: 1213: else
  9194                           ;doprnt.c: 1214: c = prec;
  9195  0005AA  C0A3  F0A8         	movff	sprintf@prec,sprintf@c
  9196  0005AE                     l10120:
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;doprnt.c: 1215: prec -= c;
  9200  0005AE  0100               	movlb	0	; () banked
  9201  0005B0  51A8               	movf	sprintf@c& (0+255),w,b
  9202  0005B2  0100               	movlb	0	; () banked
  9203  0005B4  5FA3               	subwf	sprintf@prec& (0+255),f,b
  9204  0005B6  0E00               	movlw	0
  9205  0005B8  0100               	movlb	0	; () banked
  9206  0005BA  BFA8               	btfsc	sprintf@c& (0+255),7,b
  9207  0005BC  0EFF               	movlw	255
  9208  0005BE  0100               	movlb	0	; () banked
  9209  0005C0  5BA4               	subwfb	(sprintf@prec+1)& (0+255),f,b
  9210                           
  9211                           ; BSR set to: 0
  9212                           ;doprnt.c: 1219: if(c)
  9213  0005C2  0100               	movlb	0	; () banked
  9214  0005C4  51A8               	movf	sprintf@c& (0+255),w,b
  9215  0005C6  0100               	movlb	0	; () banked
  9216  0005C8  B4D8               	btfsc	status,2,c
  9217  0005CA  D009               	goto	l10128
  9218                           
  9219                           ; BSR set to: 0
  9220                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  9221  0005CC  C082  FFD9         	movff	sprintf@sp,fsr2l
  9222  0005D0  C083  FFDA         	movff	sprintf@sp+1,fsr2h
  9223  0005D4  0E2E               	movlw	46
  9224  0005D6  6EDF               	movwf	indf2,c
  9225                           
  9226                           ; BSR set to: 0
  9227  0005D8  0100               	movlb	0	; () banked
  9228  0005DA  4B82               	infsnz	sprintf@sp& (0+255),f,b
  9229  0005DC  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
  9230  0005DE                     l10128:
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9234  0005DE  0100               	movlb	0	; () banked
  9235  0005E0  51A8               	movf	sprintf@c& (0+255),w,b
  9236  0005E2  ECD5  F006         	call	_scale
  9237  0005E6  C066  F092         	movff	?_scale,_sprintf$3375
  9238  0005EA  C067  F093         	movff	?_scale+1,_sprintf$3375+1
  9239  0005EE  C068  F094         	movff	?_scale+2,_sprintf$3375+2
  9240                           
  9241                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9242  0005F2  C0A5  F02D         	movff	sprintf@fval,___ftmul@f2
  9243  0005F6  C0A6  F02E         	movff	sprintf@fval+1,___ftmul@f2+1
  9244  0005FA  C0A7  F02F         	movff	sprintf@fval+2,___ftmul@f2+2
  9245  0005FE  C092  F02A         	movff	_sprintf$3375,___ftmul@f1
  9246  000602  C093  F02B         	movff	_sprintf$3375+1,___ftmul@f1+1
  9247  000606  C094  F02C         	movff	_sprintf$3375+2,___ftmul@f1+2
  9248  00060A  EC72  F010         	call	___ftmul	;wreg free
  9249  00060E  C02A  F06D         	movff	?___ftmul,___fttol@f1
  9250  000612  C02B  F06E         	movff	?___ftmul+1,___fttol@f1+1
  9251  000616  C02C  F06F         	movff	?___ftmul+2,___fttol@f1+2
  9252  00061A  EC4A  F00C         	call	___fttol	;wreg free
  9253  00061E  C06D  F09F         	movff	?___fttol,sprintf@val
  9254  000622  C06E  F0A0         	movff	?___fttol+1,sprintf@val+1
  9255  000626  C06F  F0A1         	movff	?___fttol+2,sprintf@val+2
  9256  00062A  C070  F0A2         	movff	?___fttol+3,sprintf@val+3
  9257                           
  9258                           ;doprnt.c: 1228: while(c--) {
  9259  00062E  D073               	goto	l10142
  9260  000630                     l10132:
  9261                           
  9262                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  9263  000630  C09F  F01F         	movff	sprintf@val,___lldiv@dividend
  9264  000634  C0A0  F020         	movff	sprintf@val+1,___lldiv@dividend+1
  9265  000638  C0A1  F021         	movff	sprintf@val+2,___lldiv@dividend+2
  9266  00063C  C0A2  F022         	movff	sprintf@val+3,___lldiv@dividend+3
  9267  000640  0100               	movlb	0	; () banked
  9268  000642  51A8               	movf	sprintf@c& (0+255),w,b
  9269  000644  0D04               	mullw	4
  9270  000646  0EAB               	movlw	low _dpowers
  9271  000648  24F3               	addwf	prodl,w,c
  9272  00064A  6EF6               	movwf	tblptrl,c
  9273  00064C  0E60               	movlw	high _dpowers
  9274  00064E  20F4               	addwfc	prodh,w,c
  9275  000650  6EF7               	movwf	tblptrh,c
  9276  000652                     	if	0	;There are less than 3 active tblptr bytes
  9277  000652                     	endif
  9278  000652  0009               	tblrd		*+
  9279  000654  CFF5 F023          	movff	tablat,___lldiv@divisor
  9280  000658  0009               	tblrd		*+
  9281  00065A  CFF5 F024          	movff	tablat,___lldiv@divisor+1
  9282  00065E  0009               	tblrd		*+
  9283  000660  CFF5 F025          	movff	tablat,___lldiv@divisor+2
  9284  000664  000A               	tblrd		*-
  9285  000666  CFF5 F026          	movff	tablat,___lldiv@divisor+3
  9286  00066A  EC7F  F016         	call	___lldiv	;wreg free
  9287  00066E  C01F  F09B         	movff	?___lldiv,sprintf@tmpval
  9288  000672  C020  F09C         	movff	?___lldiv+1,sprintf@tmpval+1
  9289  000676  C021  F09D         	movff	?___lldiv+2,sprintf@tmpval+2
  9290  00067A  C022  F09E         	movff	?___lldiv+3,sprintf@tmpval+3
  9291                           
  9292                           ;doprnt.c: 1230: tmpval.vd %= 10;
  9293  00067E  C09B  F016         	movff	sprintf@tmpval,___llmod@dividend
  9294  000682  C09C  F017         	movff	sprintf@tmpval+1,___llmod@dividend+1
  9295  000686  C09D  F018         	movff	sprintf@tmpval+2,___llmod@dividend+2
  9296  00068A  C09E  F019         	movff	sprintf@tmpval+3,___llmod@dividend+3
  9297  00068E  0E0A               	movlw	10
  9298  000690  6E1A               	movwf	___llmod@divisor,c
  9299  000692  0E00               	movlw	0
  9300  000694  6E1B               	movwf	___llmod@divisor+1,c
  9301  000696  0E00               	movlw	0
  9302  000698  6E1C               	movwf	___llmod@divisor+2,c
  9303  00069A  0E00               	movlw	0
  9304  00069C  6E1D               	movwf	___llmod@divisor+3,c
  9305  00069E  EC4D  F018         	call	___llmod	;wreg free
  9306  0006A2  C016  F09B         	movff	?___llmod,sprintf@tmpval
  9307  0006A6  C017  F09C         	movff	?___llmod+1,sprintf@tmpval+1
  9308  0006AA  C018  F09D         	movff	?___llmod+2,sprintf@tmpval+2
  9309  0006AE  C019  F09E         	movff	?___llmod+3,sprintf@tmpval+3
  9310                           
  9311                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  9312  0006B2  0100               	movlb	0	; () banked
  9313  0006B4  519B               	movf	sprintf@tmpval& (0+255),w,b
  9314  0006B6  0F30               	addlw	48
  9315  0006B8  C082  FFD9         	movff	sprintf@sp,fsr2l
  9316  0006BC  C083  FFDA         	movff	sprintf@sp+1,fsr2h
  9317  0006C0  6EDF               	movwf	indf2,c
  9318                           
  9319                           ; BSR set to: 0
  9320  0006C2  0100               	movlb	0	; () banked
  9321  0006C4  4B82               	infsnz	sprintf@sp& (0+255),f,b
  9322  0006C6  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;doprnt.c: 1232: val %= dpowers[c];
  9326  0006C8  C09F  F016         	movff	sprintf@val,___llmod@dividend
  9327  0006CC  C0A0  F017         	movff	sprintf@val+1,___llmod@dividend+1
  9328  0006D0  C0A1  F018         	movff	sprintf@val+2,___llmod@dividend+2
  9329  0006D4  C0A2  F019         	movff	sprintf@val+3,___llmod@dividend+3
  9330  0006D8  0100               	movlb	0	; () banked
  9331  0006DA  51A8               	movf	sprintf@c& (0+255),w,b
  9332  0006DC  0D04               	mullw	4
  9333  0006DE  0EAB               	movlw	low _dpowers
  9334  0006E0  24F3               	addwf	prodl,w,c
  9335  0006E2  6EF6               	movwf	tblptrl,c
  9336  0006E4  0E60               	movlw	high _dpowers
  9337  0006E6  20F4               	addwfc	prodh,w,c
  9338  0006E8  6EF7               	movwf	tblptrh,c
  9339  0006EA                     	if	0	;There are less than 3 active tblptr bytes
  9340  0006EA                     	endif
  9341  0006EA  0009               	tblrd		*+
  9342  0006EC  CFF5 F01A          	movff	tablat,___llmod@divisor
  9343  0006F0  0009               	tblrd		*+
  9344  0006F2  CFF5 F01B          	movff	tablat,___llmod@divisor+1
  9345  0006F6  0009               	tblrd		*+
  9346  0006F8  CFF5 F01C          	movff	tablat,___llmod@divisor+2
  9347  0006FC  000A               	tblrd		*-
  9348  0006FE  CFF5 F01D          	movff	tablat,___llmod@divisor+3
  9349  000702  EC4D  F018         	call	___llmod	;wreg free
  9350  000706  C016  F09F         	movff	?___llmod,sprintf@val
  9351  00070A  C017  F0A0         	movff	?___llmod+1,sprintf@val+1
  9352  00070E  C018  F0A1         	movff	?___llmod+2,sprintf@val+2
  9353  000712  C019  F0A2         	movff	?___llmod+3,sprintf@val+3
  9354  000716                     l10142:
  9355  000716  0100               	movlb	0	; () banked
  9356  000718  07A8               	decf	sprintf@c& (0+255),f,b
  9357  00071A  0100               	movlb	0	; () banked
  9358  00071C  29A8               	incf	sprintf@c& (0+255),w,b
  9359  00071E  B4D8               	btfsc	status,2,c
  9360  000720  D00E               	goto	l10150
  9361  000722  D786               	goto	l10132
  9362  000724                     l10144:
  9363                           
  9364                           ; BSR set to: 0
  9365                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  9366  000724  C082  FFD9         	movff	sprintf@sp,fsr2l
  9367  000728  C083  FFDA         	movff	sprintf@sp+1,fsr2h
  9368  00072C  0E30               	movlw	48
  9369  00072E  6EDF               	movwf	indf2,c
  9370                           
  9371                           ; BSR set to: 0
  9372  000730  0100               	movlb	0	; () banked
  9373  000732  4B82               	infsnz	sprintf@sp& (0+255),f,b
  9374  000734  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
  9375                           
  9376                           ; BSR set to: 0
  9377                           ;doprnt.c: 1237: prec--;
  9378  000736  0100               	movlb	0	; () banked
  9379  000738  07A3               	decf	sprintf@prec& (0+255),f,b
  9380  00073A  A0D8               	btfss	status,0,c
  9381  00073C  07A4               	decf	(sprintf@prec+1)& (0+255),f,b
  9382  00073E                     l10150:
  9383                           
  9384                           ; BSR set to: 0
  9385  00073E  0100               	movlb	0	; () banked
  9386  000740  51A3               	movf	sprintf@prec& (0+255),w,b
  9387  000742  0100               	movlb	0	; () banked
  9388  000744  11A4               	iorwf	(sprintf@prec+1)& (0+255),w,b
  9389  000746  B4D8               	btfsc	status,2,c
  9390  000748  D0F2               	goto	l10204
  9391  00074A  D7EC               	goto	l10144
  9392  00074C                     l10152:
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;doprnt.c: 1246: }
  9396                           ;doprnt.c: 1253: {
  9397                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  9398  00074C  C095  FFD9         	movff	sprintf@ap,fsr2l
  9399  000750  C096  FFDA         	movff	sprintf@ap+1,fsr2h
  9400  000754  CFDE F09F          	movff	postinc2,sprintf@val
  9401  000758  CFDD F0A0          	movff	postdec2,sprintf@val+1
  9402  00075C  0100               	movlb	0	; () banked
  9403  00075E  0E00               	movlw	0
  9404  000760  BFA0               	btfsc	(sprintf@val+1)& (0+255),7,b
  9405  000762  0EFF               	movlw	-1
  9406  000764  6FA1               	movwf	(sprintf@val+2)& (0+255),b
  9407  000766  6FA2               	movwf	(sprintf@val+3)& (0+255),b
  9408                           
  9409                           ; BSR set to: 0
  9410  000768  0E02               	movlw	2
  9411  00076A  0100               	movlb	0	; () banked
  9412  00076C  2795               	addwf	sprintf@ap& (0+255),f,b
  9413  00076E  0E00               	movlw	0
  9414  000770  2396               	addwfc	(sprintf@ap+1)& (0+255),f,b
  9415                           
  9416                           ; BSR set to: 0
  9417                           ;doprnt.c: 1261: if((long)val < 0) {
  9418  000772  0100               	movlb	0	; () banked
  9419  000774  AFA2               	btfss	(sprintf@val+3)& (0+255),7,b
  9420  000776  D00C               	goto	l10162
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;doprnt.c: 1262: flag |= 0x03;
  9424  000778  0E03               	movlw	3
  9425  00077A  0100               	movlb	0	; () banked
  9426  00077C  1397               	iorwf	sprintf@flag& (0+255),f,b
  9427                           
  9428                           ; BSR set to: 0
  9429                           ;doprnt.c: 1263: val = -val;
  9430  00077E  0100               	movlb	0	; () banked
  9431  000780  1FA2               	comf	(sprintf@val+3)& (0+255),f,b
  9432  000782  1FA1               	comf	(sprintf@val+2)& (0+255),f,b
  9433  000784  1FA0               	comf	(sprintf@val+1)& (0+255),f,b
  9434  000786  6D9F               	negf	sprintf@val& (0+255),b
  9435  000788  0E00               	movlw	0
  9436  00078A  23A0               	addwfc	(sprintf@val+1)& (0+255),f,b
  9437  00078C  23A1               	addwfc	(sprintf@val+2)& (0+255),f,b
  9438  00078E  23A2               	addwfc	(sprintf@val+3)& (0+255),f,b
  9439  000790                     l10162:
  9440                           
  9441                           ; BSR set to: 0
  9442                           ;doprnt.c: 1264: }
  9443                           ;doprnt.c: 1266: }
  9444                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  9445  000790  0100               	movlb	0	; () banked
  9446  000792  51A3               	movf	sprintf@prec& (0+255),w,b
  9447  000794  0100               	movlb	0	; () banked
  9448  000796  11A4               	iorwf	(sprintf@prec+1)& (0+255),w,b
  9449  000798  A4D8               	btfss	status,2,c
  9450  00079A  D00D               	goto	l10168
  9451                           
  9452                           ; BSR set to: 0
  9453  00079C  0100               	movlb	0	; () banked
  9454  00079E  519F               	movf	sprintf@val& (0+255),w,b
  9455  0007A0  0100               	movlb	0	; () banked
  9456  0007A2  11A0               	iorwf	(sprintf@val+1)& (0+255),w,b
  9457  0007A4  0100               	movlb	0	; () banked
  9458  0007A6  11A1               	iorwf	(sprintf@val+2)& (0+255),w,b
  9459  0007A8  0100               	movlb	0	; () banked
  9460  0007AA  11A2               	iorwf	(sprintf@val+3)& (0+255),w,b
  9461  0007AC  A4D8               	btfss	status,2,c
  9462  0007AE  D003               	goto	l10168
  9463                           
  9464                           ; BSR set to: 0
  9465                           ;doprnt.c: 1291: prec++;
  9466  0007B0  0100               	movlb	0	; () banked
  9467  0007B2  4BA3               	infsnz	sprintf@prec& (0+255),f,b
  9468  0007B4  2BA4               	incf	(sprintf@prec+1)& (0+255),f,b
  9469  0007B6                     l10168:
  9470                           
  9471                           ; BSR set to: 0
  9472                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9473  0007B6  0E01               	movlw	1
  9474  0007B8  0100               	movlb	0	; () banked
  9475  0007BA  6FA8               	movwf	sprintf@c& (0+255),b
  9476  0007BC                     l10170:
  9477                           
  9478                           ; BSR set to: 0
  9479  0007BC  0E0A               	movlw	10
  9480  0007BE  0100               	movlb	0	; () banked
  9481  0007C0  19A8               	xorwf	sprintf@c& (0+255),w,b
  9482  0007C2  B4D8               	btfsc	status,2,c
  9483  0007C4  D01E               	goto	l10182
  9484                           
  9485                           ; BSR set to: 0
  9486                           ;doprnt.c: 1306: if(val < dpowers[c])
  9487                           
  9488                           ; BSR set to: 0
  9489                           
  9490                           ; BSR set to: 0
  9491  0007C6  0100               	movlb	0	; () banked
  9492  0007C8  51A8               	movf	sprintf@c& (0+255),w,b
  9493  0007CA  0D04               	mullw	4
  9494  0007CC  0EAB               	movlw	low _dpowers
  9495  0007CE  24F3               	addwf	prodl,w,c
  9496  0007D0  6EF6               	movwf	tblptrl,c
  9497  0007D2  0E60               	movlw	high _dpowers
  9498  0007D4  20F4               	addwfc	prodh,w,c
  9499  0007D6  6EF7               	movwf	tblptrh,c
  9500  0007D8                     	if	0	;There are less than 3 active tblptr bytes
  9501  0007D8                     	endif
  9502  0007D8  0009               	tblrd		*+
  9503  0007DA  50F5               	movf	tablat,w,c
  9504  0007DC  0100               	movlb	0	; () banked
  9505  0007DE  5D9F               	subwf	sprintf@val& (0+255),w,b
  9506  0007E0  0009               	tblrd		*+
  9507  0007E2  50F5               	movf	tablat,w,c
  9508  0007E4  0100               	movlb	0	; () banked
  9509  0007E6  59A0               	subwfb	(sprintf@val+1)& (0+255),w,b
  9510  0007E8  0009               	tblrd		*+
  9511  0007EA  50F5               	movf	tablat,w,c
  9512  0007EC  0100               	movlb	0	; () banked
  9513  0007EE  59A1               	subwfb	(sprintf@val+2)& (0+255),w,b
  9514  0007F0  0009               	tblrd		*+
  9515  0007F2  50F5               	movf	tablat,w,c
  9516  0007F4  0100               	movlb	0	; () banked
  9517  0007F6  59A2               	subwfb	(sprintf@val+3)& (0+255),w,b
  9518  0007F8  A0D8               	btfss	status,0,c
  9519  0007FA  D003               	goto	l10182
  9520                           
  9521                           ; BSR set to: 0
  9522                           
  9523                           ; BSR set to: 0
  9524                           
  9525                           ; BSR set to: 0
  9526                           ;doprnt.c: 1307: break;
  9527  0007FC  0100               	movlb	0	; () banked
  9528  0007FE  2BA8               	incf	sprintf@c& (0+255),f,b
  9529  000800  D7DD               	goto	l10170
  9530  000802                     l10182:
  9531                           
  9532                           ; BSR set to: 0
  9533                           ;doprnt.c: 1339: if(c < prec)
  9534  000802  0E80               	movlw	128
  9535  000804  0100               	movlb	0	; () banked
  9536  000806  BFA8               	btfsc	sprintf@c& (0+255),7,b
  9537  000808  0E7F               	movlw	127
  9538  00080A  0100               	movlb	0	; () banked
  9539  00080C  6F8C               	movwf	??_sprintf& (0+255),b
  9540  00080E  0100               	movlb	0	; () banked
  9541  000810  51A3               	movf	sprintf@prec& (0+255),w,b
  9542  000812  0100               	movlb	0	; () banked
  9543  000814  5DA8               	subwf	sprintf@c& (0+255),w,b
  9544  000816  0100               	movlb	0	; () banked
  9545  000818  51A4               	movf	(sprintf@prec+1)& (0+255),w,b
  9546  00081A  0A80               	xorlw	128
  9547  00081C  0100               	movlb	0	; () banked
  9548  00081E  598C               	subwfb	??_sprintf& (0+255),w,b
  9549  000820  B0D8               	btfsc	status,0,c
  9550  000822  D003               	goto	l10186
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;doprnt.c: 1340: c = prec;
  9554  000824  C0A3  F0A8         	movff	sprintf@prec,sprintf@c
  9555  000828  D018               	goto	l10190
  9556  00082A                     l10186:
  9557                           
  9558                           ; BSR set to: 0
  9559                           ;doprnt.c: 1341: else if(prec < c)
  9560  00082A  0100               	movlb	0	; () banked
  9561  00082C  51A4               	movf	(sprintf@prec+1)& (0+255),w,b
  9562  00082E  0A80               	xorlw	128
  9563  000830  0100               	movlb	0	; () banked
  9564  000832  6F8C               	movwf	??_sprintf& (0+255),b
  9565  000834  0100               	movlb	0	; () banked
  9566  000836  51A8               	movf	sprintf@c& (0+255),w,b
  9567  000838  0100               	movlb	0	; () banked
  9568  00083A  5DA3               	subwf	sprintf@prec& (0+255),w,b
  9569  00083C  0E80               	movlw	128
  9570  00083E  0100               	movlb	0	; () banked
  9571  000840  BFA8               	btfsc	sprintf@c& (0+255),7,b
  9572  000842  0E7F               	movlw	127
  9573  000844  0100               	movlb	0	; () banked
  9574  000846  598C               	subwfb	??_sprintf& (0+255),w,b
  9575  000848  B0D8               	btfsc	status,0,c
  9576  00084A  D007               	goto	l10190
  9577                           
  9578                           ; BSR set to: 0
  9579                           ;doprnt.c: 1342: prec = c;
  9580  00084C  0100               	movlb	0	; () banked
  9581  00084E  51A8               	movf	sprintf@c& (0+255),w,b
  9582  000850  0100               	movlb	0	; () banked
  9583  000852  6FA3               	movwf	sprintf@prec& (0+255),b
  9584  000854  6BA4               	clrf	(sprintf@prec+1)& (0+255),b
  9585  000856  BFA3               	btfsc	sprintf@prec& (0+255),7,b
  9586  000858  07A4               	decf	(sprintf@prec+1)& (0+255),f,b
  9587  00085A                     l10190:
  9588                           
  9589                           ; BSR set to: 0
  9590                           ;doprnt.c: 1422: {
  9591                           ;doprnt.c: 1438: if(flag & 0x03)
  9592  00085A  0E03               	movlw	3
  9593  00085C  0100               	movlb	0	; () banked
  9594  00085E  1597               	andwf	sprintf@flag& (0+255),w,b
  9595  000860  0100               	movlb	0	; () banked
  9596  000862  6F8C               	movwf	??_sprintf& (0+255),b
  9597  000864  0E00               	movlw	0
  9598  000866  0100               	movlb	0	; () banked
  9599  000868  1598               	andwf	(sprintf@flag+1)& (0+255),w,b
  9600  00086A  0100               	movlb	0	; () banked
  9601  00086C  6F8D               	movwf	(??_sprintf+1)& (0+255),b
  9602  00086E  0100               	movlb	0	; () banked
  9603  000870  518C               	movf	??_sprintf& (0+255),w,b
  9604  000872  0100               	movlb	0	; () banked
  9605  000874  118D               	iorwf	(??_sprintf+1)& (0+255),w,b
  9606  000876  B4D8               	btfsc	status,2,c
  9607  000878  D04F               	goto	l10202
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  9611  00087A  C082  FFD9         	movff	sprintf@sp,fsr2l
  9612  00087E  C083  FFDA         	movff	sprintf@sp+1,fsr2h
  9613  000882  0E2D               	movlw	45
  9614  000884  6EDF               	movwf	indf2,c
  9615  000886  D045               	goto	l10200
  9616  000888                     l10196:
  9617                           
  9618                           ; BSR set to: 0
  9619                           ;doprnt.c: 1478: {
  9620                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  9621  000888  C0A3  F08C         	movff	sprintf@prec,??_sprintf
  9622  00088C  C0A4  F08D         	movff	sprintf@prec+1,??_sprintf+1
  9623  000890  0100               	movlb	0	; () banked
  9624  000892  90D8               	bcf	status,0,c
  9625  000894  378C               	rlcf	??_sprintf& (0+255),f,b
  9626  000896  378D               	rlcf	(??_sprintf+1)& (0+255),f,b
  9627  000898  0100               	movlb	0	; () banked
  9628  00089A  90D8               	bcf	status,0,c
  9629  00089C  378C               	rlcf	??_sprintf& (0+255),f,b
  9630  00089E  378D               	rlcf	(??_sprintf+1)& (0+255),f,b
  9631  0008A0  0EAB               	movlw	low _dpowers
  9632  0008A2  0100               	movlb	0	; () banked
  9633  0008A4  258C               	addwf	??_sprintf& (0+255),w,b
  9634  0008A6  6EF6               	movwf	tblptrl,c
  9635  0008A8  0E60               	movlw	high _dpowers
  9636  0008AA  218D               	addwfc	(??_sprintf+1)& (0+255),w,b
  9637  0008AC  6EF7               	movwf	tblptrh,c
  9638  0008AE                     	if	0	;There are less than 3 active tblptr bytes
  9639  0008AE                     	endif
  9640  0008AE  0009               	tblrd		*+
  9641  0008B0  CFF5 F023          	movff	tablat,___lldiv@divisor
  9642  0008B4  0009               	tblrd		*+
  9643  0008B6  CFF5 F024          	movff	tablat,___lldiv@divisor+1
  9644  0008BA  0009               	tblrd		*+
  9645  0008BC  CFF5 F025          	movff	tablat,___lldiv@divisor+2
  9646  0008C0  000A               	tblrd		*-
  9647  0008C2  CFF5 F026          	movff	tablat,___lldiv@divisor+3
  9648  0008C6  C09F  F01F         	movff	sprintf@val,___lldiv@dividend
  9649  0008CA  C0A0  F020         	movff	sprintf@val+1,___lldiv@dividend+1
  9650  0008CE  C0A1  F021         	movff	sprintf@val+2,___lldiv@dividend+2
  9651  0008D2  C0A2  F022         	movff	sprintf@val+3,___lldiv@dividend+3
  9652  0008D6  EC7F  F016         	call	___lldiv	;wreg free
  9653  0008DA  C01F  F016         	movff	?___lldiv,___llmod@dividend
  9654  0008DE  C020  F017         	movff	?___lldiv+1,___llmod@dividend+1
  9655  0008E2  C021  F018         	movff	?___lldiv+2,___llmod@dividend+2
  9656  0008E6  C022  F019         	movff	?___lldiv+3,___llmod@dividend+3
  9657  0008EA  0E0A               	movlw	10
  9658  0008EC  6E1A               	movwf	___llmod@divisor,c
  9659  0008EE  0E00               	movlw	0
  9660  0008F0  6E1B               	movwf	___llmod@divisor+1,c
  9661  0008F2  0E00               	movlw	0
  9662  0008F4  6E1C               	movwf	___llmod@divisor+2,c
  9663  0008F6  0E00               	movlw	0
  9664  0008F8  6E1D               	movwf	___llmod@divisor+3,c
  9665  0008FA  EC4D  F018         	call	___llmod	;wreg free
  9666  0008FE  5016               	movf	?___llmod,w,c
  9667  000900  0F30               	addlw	48
  9668  000902  0100               	movlb	0	; () banked
  9669  000904  6FA8               	movwf	sprintf@c& (0+255),b
  9670                           
  9671                           ; BSR set to: 0
  9672                           ;doprnt.c: 1523: }
  9673                           ;doprnt.c: 1524: ((*sp++ = (c)));
  9674  000906  C082  FFD9         	movff	sprintf@sp,fsr2l
  9675  00090A  C083  FFDA         	movff	sprintf@sp+1,fsr2h
  9676  00090E  C0A8  FFDF         	movff	sprintf@c,indf2
  9677  000912                     l10200:
  9678                           
  9679                           ; BSR set to: 0
  9680  000912  0100               	movlb	0	; () banked
  9681  000914  4B82               	infsnz	sprintf@sp& (0+255),f,b
  9682  000916  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
  9683  000918                     l10202:
  9684                           
  9685                           ; BSR set to: 0
  9686  000918  0100               	movlb	0	; () banked
  9687  00091A  07A3               	decf	sprintf@prec& (0+255),f,b
  9688  00091C  A0D8               	btfss	status,0,c
  9689  00091E  07A4               	decf	(sprintf@prec+1)& (0+255),f,b
  9690  000920  0100               	movlb	0	; () banked
  9691  000922  29A3               	incf	sprintf@prec& (0+255),w,b
  9692  000924  E1B1               	bnz	l10196
  9693  000926  0100               	movlb	0	; () banked
  9694  000928  29A4               	incf	(sprintf@prec+1)& (0+255),w,b
  9695  00092A  A4D8               	btfss	status,2,c
  9696  00092C  D7AD               	goto	l10196
  9697  00092E                     l10204:
  9698                           
  9699                           ; BSR set to: 0
  9700  00092E  C084  FFF6         	movff	sprintf@f,tblptrl
  9701  000932  C085  FFF7         	movff	sprintf@f+1,tblptrh
  9702  000936  0100               	movlb	0	; () banked
  9703  000938  4B84               	infsnz	sprintf@f& (0+255),f,b
  9704  00093A  2B85               	incf	(sprintf@f+1)& (0+255),f,b
  9705  00093C                     	if	0	;tblptru may be non-zero
  9706  00093C                     	endif
  9707  00093C                     	if	0	;tblptru may be non-zero
  9708  00093C                     	endif
  9709  00093C  0008               	tblrd		*
  9710  00093E  CFF5 F0A8          	movff	tablat,sprintf@c
  9711  000942  0100               	movlb	0	; () banked
  9712  000944  51A8               	movf	sprintf@c& (0+255),w,b
  9713  000946  A4D8               	btfss	status,2,c
  9714  000948  EF11  F000         	goto	l9974
  9715  00094C                     l10206:
  9716                           
  9717                           ; BSR set to: 0
  9718                           ;doprnt.c: 1538: *sp = 0;
  9719  00094C  C082  FFD9         	movff	sprintf@sp,fsr2l
  9720  000950  C083  FFDA         	movff	sprintf@sp+1,fsr2h
  9721  000954  0E00               	movlw	0
  9722  000956  6EDF               	movwf	indf2,c
  9723  000958  0012               	return	
  9724  00095A                     __end_of_sprintf:
  9725                           	opt stack 0
  9726                           tosu	equ	0xFFF
  9727                           tosh	equ	0xFFE
  9728                           tosl	equ	0xFFD
  9729                           pclath	equ	0xFFA
  9730                           tblptru	equ	0xFF8
  9731                           tblptrh	equ	0xFF7
  9732                           tblptrl	equ	0xFF6
  9733                           tablat	equ	0xFF5
  9734                           prodh	equ	0xFF4
  9735                           prodl	equ	0xFF3
  9736                           intcon	equ	0xFF2
  9737                           intcon2	equ	0xFF1
  9738                           intcon3	equ	0xFF0
  9739                           indf0	equ	0xFEF
  9740                           postinc0	equ	0xFEE
  9741                           fsr0h	equ	0xFEA
  9742                           fsr0l	equ	0xFE9
  9743                           wreg	equ	0xFE8
  9744                           indf1	equ	0xFE7
  9745                           postinc1	equ	0xFE6
  9746                           postdec1	equ	0xFE5
  9747                           fsr1h	equ	0xFE2
  9748                           fsr1l	equ	0xFE1
  9749                           indf2	equ	0xFDF
  9750                           postinc2	equ	0xFDE
  9751                           postdec2	equ	0xFDD
  9752                           fsr2h	equ	0xFDA
  9753                           fsr2l	equ	0xFD9
  9754                           status	equ	0xFD8
  9755                           
  9756 ;; *************** function _scale *****************
  9757 ;; Defined at:
  9758 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  9759 ;; Parameters:    Size  Location     Type
  9760 ;;  scl             1    wreg     char 
  9761 ;; Auto vars:     Size  Location     Type
  9762 ;;  scl             1   12[BANK0 ] char 
  9763 ;; Return value:  Size  Location     Type
  9764 ;;                  3    6[BANK0 ] char 
  9765 ;; Registers used:
  9766 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9767 ;; Tracked objects:
  9768 ;;		On entry : 0/0
  9769 ;;		On exit  : 0/0
  9770 ;;		Unchanged: 0/0
  9771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9772 ;;      Params:         0       3       0       0       0       0       0       0       0
  9773 ;;      Locals:         0       4       0       0       0       0       0       0       0
  9774 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9775 ;;      Totals:         0       7       0       0       0       0       0       0       0
  9776 ;;Total ram usage:        7 bytes
  9777 ;; Hardware stack levels used:    1
  9778 ;; Hardware stack levels required when called:    4
  9779 ;; This function calls:
  9780 ;;		___awdiv
  9781 ;;		___awmod
  9782 ;;		___ftmul
  9783 ;;		___wmul
  9784 ;; This function is called by:
  9785 ;;		_sprintf
  9786 ;; This function uses a non-reentrant model
  9787 ;;
  9788                           
  9789                           	psect	text43
  9790  000DAA                     __ptext43:
  9791                           	opt stack 0
  9792  000DAA                     _scale:
  9793                           	opt stack 23
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;incstack = 0
  9797                           ;scale@scl stored from wreg
  9798  000DAA  0100               	movlb	0	; () banked
  9799  000DAC  6F6C               	movwf	scale@scl& (0+255),b
  9800                           
  9801                           ;doprnt.c: 428: if(scl < 0) {
  9802  000DAE  0100               	movlb	0	; () banked
  9803  000DB0  AF6C               	btfss	scale@scl& (0+255),7,b
  9804  000DB2  D104               	goto	l9570
  9805                           
  9806                           ; BSR set to: 0
  9807                           ;doprnt.c: 429: scl = -scl;
  9808  000DB4  0100               	movlb	0	; () banked
  9809  000DB6  6D6C               	negf	scale@scl& (0+255),b
  9810                           
  9811                           ;doprnt.c: 430: if(scl>=110)
  9812  000DB8  0100               	movlb	0	; () banked
  9813  000DBA  516C               	movf	scale@scl& (0+255),w,b
  9814  000DBC  0A80               	xorlw	128
  9815  000DBE  0F12               	addlw	-238
  9816  000DC0  A0D8               	btfss	status,0,c
  9817  000DC2  D094               	goto	l9560
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9821  000DC4  0E00               	movlw	0
  9822  000DC6  6E27               	movwf	___wmul@multiplicand+1,c
  9823  000DC8  0E03               	movlw	3
  9824  000DCA  6E26               	movwf	___wmul@multiplicand,c
  9825  000DCC  0E00               	movlw	0
  9826  000DCE  6E1F               	movwf	___awdiv@divisor+1,c
  9827  000DD0  0E0A               	movlw	10
  9828  000DD2  6E1E               	movwf	___awdiv@divisor,c
  9829  000DD4  0E00               	movlw	0
  9830  000DD6  6E19               	movwf	___awmod@divisor+1,c
  9831  000DD8  0E64               	movlw	100
  9832  000DDA  6E18               	movwf	___awmod@divisor,c
  9833  000DDC  0100               	movlb	0	; () banked
  9834  000DDE  516C               	movf	scale@scl& (0+255),w,b
  9835  000DE0  6E16               	movwf	___awmod@dividend,c
  9836  000DE2  6A17               	clrf	___awmod@dividend+1,c
  9837  000DE4  BE16               	btfsc	___awmod@dividend,7,c
  9838  000DE6  0617               	decf	___awmod@dividend+1,f,c
  9839  000DE8  ECAB  F017         	call	___awmod	;wreg free
  9840  000DEC  C016  F01C         	movff	?___awmod,___awdiv@dividend
  9841  000DF0  C017  F01D         	movff	?___awmod+1,___awdiv@dividend+1
  9842  000DF4  EC3D  F016         	call	___awdiv	;wreg free
  9843  000DF8  0E09               	movlw	9
  9844  000DFA  241C               	addwf	?___awdiv,w,c
  9845  000DFC  6E24               	movwf	___wmul@multiplier,c
  9846  000DFE  0E00               	movlw	0
  9847  000E00  201D               	addwfc	?___awdiv+1,w,c
  9848  000E02  6E25               	movwf	___wmul@multiplier+1,c
  9849  000E04  EC5A  F01A         	call	___wmul	;wreg free
  9850  000E08  0EFA               	movlw	low __npowers_
  9851  000E0A  2424               	addwf	?___wmul,w,c
  9852  000E0C  6EF6               	movwf	tblptrl,c
  9853  000E0E  0E60               	movlw	high __npowers_
  9854  000E10  2025               	addwfc	?___wmul+1,w,c
  9855  000E12  6EF7               	movwf	tblptrh,c
  9856  000E14                     	if	0	;There are less than 3 active tblptr bytes
  9857  000E14                     	endif
  9858  000E14  0009               	tblrd		*+
  9859  000E16  CFF5 F02D          	movff	tablat,___ftmul@f2
  9860  000E1A  0009               	tblrd		*+
  9861  000E1C  CFF5 F02E          	movff	tablat,___ftmul@f2+1
  9862  000E20  000A               	tblrd		*-
  9863  000E22  CFF5 F02F          	movff	tablat,___ftmul@f2+2
  9864  000E26  0E00               	movlw	0
  9865  000E28  6E1F               	movwf	___awdiv@divisor+1,c
  9866  000E2A  0E64               	movlw	100
  9867  000E2C  6E1E               	movwf	___awdiv@divisor,c
  9868  000E2E  0100               	movlb	0	; () banked
  9869  000E30  516C               	movf	scale@scl& (0+255),w,b
  9870  000E32  6E1C               	movwf	___awdiv@dividend,c
  9871  000E34  6A1D               	clrf	___awdiv@dividend+1,c
  9872  000E36  BE1C               	btfsc	___awdiv@dividend,7,c
  9873  000E38  061D               	decf	___awdiv@dividend+1,f,c
  9874  000E3A  EC3D  F016         	call	___awdiv	;wreg free
  9875  000E3E  0E12               	movlw	18
  9876  000E40  241C               	addwf	?___awdiv,w,c
  9877  000E42  6E24               	movwf	___wmul@multiplier,c
  9878  000E44  0E00               	movlw	0
  9879  000E46  201D               	addwfc	?___awdiv+1,w,c
  9880  000E48  6E25               	movwf	___wmul@multiplier+1,c
  9881  000E4A  0E00               	movlw	0
  9882  000E4C  6E27               	movwf	___wmul@multiplicand+1,c
  9883  000E4E  0E03               	movlw	3
  9884  000E50  6E26               	movwf	___wmul@multiplicand,c
  9885  000E52  EC5A  F01A         	call	___wmul	;wreg free
  9886  000E56  0EFA               	movlw	low __npowers_
  9887  000E58  2424               	addwf	?___wmul,w,c
  9888  000E5A  6EF6               	movwf	tblptrl,c
  9889  000E5C  0E60               	movlw	high __npowers_
  9890  000E5E  2025               	addwfc	?___wmul+1,w,c
  9891  000E60  6EF7               	movwf	tblptrh,c
  9892  000E62                     	if	0	;There are less than 3 active tblptr bytes
  9893  000E62                     	endif
  9894  000E62  0009               	tblrd		*+
  9895  000E64  CFF5 F02A          	movff	tablat,___ftmul@f1
  9896  000E68  0009               	tblrd		*+
  9897  000E6A  CFF5 F02B          	movff	tablat,___ftmul@f1+1
  9898  000E6E  000A               	tblrd		*-
  9899  000E70  CFF5 F02C          	movff	tablat,___ftmul@f1+2
  9900  000E74  EC72  F010         	call	___ftmul	;wreg free
  9901  000E78  C02A  F069         	movff	?___ftmul,_scale$3374
  9902  000E7C  C02B  F06A         	movff	?___ftmul+1,_scale$3374+1
  9903  000E80  C02C  F06B         	movff	?___ftmul+2,_scale$3374+2
  9904                           
  9905                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9906  000E84  C069  F02A         	movff	_scale$3374,___ftmul@f1
  9907  000E88  C06A  F02B         	movff	_scale$3374+1,___ftmul@f1+1
  9908  000E8C  C06B  F02C         	movff	_scale$3374+2,___ftmul@f1+2
  9909  000E90  0E00               	movlw	0
  9910  000E92  6E27               	movwf	___wmul@multiplicand+1,c
  9911  000E94  0E03               	movlw	3
  9912  000E96  6E26               	movwf	___wmul@multiplicand,c
  9913  000E98  0E00               	movlw	0
  9914  000E9A  6E19               	movwf	___awmod@divisor+1,c
  9915  000E9C  0E0A               	movlw	10
  9916  000E9E  6E18               	movwf	___awmod@divisor,c
  9917  000EA0  0100               	movlb	0	; () banked
  9918  000EA2  516C               	movf	scale@scl& (0+255),w,b
  9919  000EA4  6E16               	movwf	___awmod@dividend,c
  9920  000EA6  6A17               	clrf	___awmod@dividend+1,c
  9921  000EA8  BE16               	btfsc	___awmod@dividend,7,c
  9922  000EAA  0617               	decf	___awmod@dividend+1,f,c
  9923  000EAC  ECAB  F017         	call	___awmod	;wreg free
  9924  000EB0  C016  F024         	movff	?___awmod,___wmul@multiplier
  9925  000EB4  C017  F025         	movff	?___awmod+1,___wmul@multiplier+1
  9926  000EB8  EC5A  F01A         	call	___wmul	;wreg free
  9927  000EBC  0EFA               	movlw	low __npowers_
  9928  000EBE  2424               	addwf	?___wmul,w,c
  9929  000EC0  6EF6               	movwf	tblptrl,c
  9930  000EC2  0E60               	movlw	high __npowers_
  9931  000EC4  2025               	addwfc	?___wmul+1,w,c
  9932  000EC6  6EF7               	movwf	tblptrh,c
  9933  000EC8                     	if	0	;There are less than 3 active tblptr bytes
  9934  000EC8                     	endif
  9935  000EC8  0009               	tblrd		*+
  9936  000ECA  CFF5 F02D          	movff	tablat,___ftmul@f2
  9937  000ECE  0009               	tblrd		*+
  9938  000ED0  CFF5 F02E          	movff	tablat,___ftmul@f2+1
  9939  000ED4  000A               	tblrd		*-
  9940  000ED6  CFF5 F02F          	movff	tablat,___ftmul@f2+2
  9941  000EDA  EC72  F010         	call	___ftmul	;wreg free
  9942  000EDE  C02A  F066         	movff	?___ftmul,?_scale
  9943  000EE2  C02B  F067         	movff	?___ftmul+1,?_scale+1
  9944  000EE6  C02C  F068         	movff	?___ftmul+2,?_scale+2
  9945  000EEA  0012               	return	
  9946  000EEC                     l9560:
  9947                           
  9948                           ;doprnt.c: 432: else if(scl > 10)
  9949  000EEC  0100               	movlb	0	; () banked
  9950  000EEE  516C               	movf	scale@scl& (0+255),w,b
  9951  000EF0  0A80               	xorlw	128
  9952  000EF2  0F75               	addlw	-139
  9953  000EF4  A0D8               	btfss	status,0,c
  9954  000EF6  D04F               	goto	l9566
  9955                           
  9956                           ; BSR set to: 0
  9957                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  9958  000EF8  0E00               	movlw	0
  9959  000EFA  6E1F               	movwf	___awdiv@divisor+1,c
  9960  000EFC  0E0A               	movlw	10
  9961  000EFE  6E1E               	movwf	___awdiv@divisor,c
  9962  000F00  0100               	movlb	0	; () banked
  9963  000F02  516C               	movf	scale@scl& (0+255),w,b
  9964  000F04  6E1C               	movwf	___awdiv@dividend,c
  9965  000F06  6A1D               	clrf	___awdiv@dividend+1,c
  9966  000F08  BE1C               	btfsc	___awdiv@dividend,7,c
  9967  000F0A  061D               	decf	___awdiv@dividend+1,f,c
  9968  000F0C  EC3D  F016         	call	___awdiv	;wreg free
  9969  000F10  0E09               	movlw	9
  9970  000F12  241C               	addwf	?___awdiv,w,c
  9971  000F14  6E24               	movwf	___wmul@multiplier,c
  9972  000F16  0E00               	movlw	0
  9973  000F18  201D               	addwfc	?___awdiv+1,w,c
  9974  000F1A  6E25               	movwf	___wmul@multiplier+1,c
  9975  000F1C  0E00               	movlw	0
  9976  000F1E  6E27               	movwf	___wmul@multiplicand+1,c
  9977  000F20  0E03               	movlw	3
  9978  000F22  6E26               	movwf	___wmul@multiplicand,c
  9979  000F24  EC5A  F01A         	call	___wmul	;wreg free
  9980  000F28  0EFA               	movlw	low __npowers_
  9981  000F2A  2424               	addwf	?___wmul,w,c
  9982  000F2C  6EF6               	movwf	tblptrl,c
  9983  000F2E  0E60               	movlw	high __npowers_
  9984  000F30  2025               	addwfc	?___wmul+1,w,c
  9985  000F32  6EF7               	movwf	tblptrh,c
  9986  000F34                     	if	0	;There are less than 3 active tblptr bytes
  9987  000F34                     	endif
  9988  000F34  0009               	tblrd		*+
  9989  000F36  CFF5 F02A          	movff	tablat,___ftmul@f1
  9990  000F3A  0009               	tblrd		*+
  9991  000F3C  CFF5 F02B          	movff	tablat,___ftmul@f1+1
  9992  000F40  000A               	tblrd		*-
  9993  000F42  CFF5 F02C          	movff	tablat,___ftmul@f1+2
  9994  000F46  0E00               	movlw	0
  9995  000F48  6E27               	movwf	___wmul@multiplicand+1,c
  9996  000F4A  0E03               	movlw	3
  9997  000F4C  6E26               	movwf	___wmul@multiplicand,c
  9998  000F4E  0E00               	movlw	0
  9999  000F50  6E19               	movwf	___awmod@divisor+1,c
 10000  000F52  0E0A               	movlw	10
 10001  000F54  6E18               	movwf	___awmod@divisor,c
 10002  000F56  0100               	movlb	0	; () banked
 10003  000F58  516C               	movf	scale@scl& (0+255),w,b
 10004  000F5A  6E16               	movwf	___awmod@dividend,c
 10005  000F5C  6A17               	clrf	___awmod@dividend+1,c
 10006  000F5E  BE16               	btfsc	___awmod@dividend,7,c
 10007  000F60  0617               	decf	___awmod@dividend+1,f,c
 10008  000F62  ECAB  F017         	call	___awmod	;wreg free
 10009  000F66  C016  F024         	movff	?___awmod,___wmul@multiplier
 10010  000F6A  C017  F025         	movff	?___awmod+1,___wmul@multiplier+1
 10011  000F6E  EC5A  F01A         	call	___wmul	;wreg free
 10012  000F72  0EFA               	movlw	low __npowers_
 10013  000F74  2424               	addwf	?___wmul,w,c
 10014  000F76  6EF6               	movwf	tblptrl,c
 10015  000F78  0E60               	movlw	high __npowers_
 10016  000F7A  2025               	addwfc	?___wmul+1,w,c
 10017  000F7C  6EF7               	movwf	tblptrh,c
 10018  000F7E                     	if	0	;There are less than 3 active tblptr bytes
 10019  000F7E                     	endif
 10020  000F7E  0009               	tblrd		*+
 10021  000F80  CFF5 F02D          	movff	tablat,___ftmul@f2
 10022  000F84  0009               	tblrd		*+
 10023  000F86  CFF5 F02E          	movff	tablat,___ftmul@f2+1
 10024  000F8A  000A               	tblrd		*-
 10025  000F8C  CFF5 F02F          	movff	tablat,___ftmul@f2+2
 10026  000F90  EC72  F010         	call	___ftmul	;wreg free
 10027  000F94  D7A4               	goto	L6
 10028  000F96                     l9566:
 10029                           
 10030                           ;doprnt.c: 434: return _npowers_[scl];
 10031  000F96  0100               	movlb	0	; () banked
 10032  000F98  516C               	movf	scale@scl& (0+255),w,b
 10033  000F9A  0D03               	mullw	3
 10034  000F9C  0EFA               	movlw	low __npowers_
 10035  000F9E  24F3               	addwf	prodl,w,c
 10036  000FA0  6EF6               	movwf	tblptrl,c
 10037  000FA2  0E60               	movlw	high __npowers_
 10038  000FA4  20F4               	addwfc	prodh,w,c
 10039  000FA6  6EF7               	movwf	tblptrh,c
 10040  000FA8                     	if	0	;There are less than 3 active tblptr bytes
 10041  000FA8                     	endif
 10042  000FA8  0009               	tblrd		*+
 10043  000FAA  CFF5 F066          	movff	tablat,?_scale
 10044  000FAE  0009               	tblrd		*+
 10045  000FB0  CFF5 F067          	movff	tablat,?_scale+1
 10046  000FB4  000A               	tblrd		*-
 10047  000FB6  CFF5 F068          	movff	tablat,?_scale+2
 10048                           
 10049                           ; BSR set to: 0
 10050  000FBA  0012               	return	
 10051  000FBC                     l9570:
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;doprnt.c: 435: }
 10055                           ;doprnt.c: 436: if(scl>=110)
 10056  000FBC  0100               	movlb	0	; () banked
 10057  000FBE  516C               	movf	scale@scl& (0+255),w,b
 10058  000FC0  0A80               	xorlw	128
 10059  000FC2  0F12               	addlw	-238
 10060  000FC4  A0D8               	btfss	status,0,c
 10061  000FC6  D094               	goto	l9578
 10062                           
 10063                           ; BSR set to: 0
 10064                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10065  000FC8  0E00               	movlw	0
 10066  000FCA  6E27               	movwf	___wmul@multiplicand+1,c
 10067  000FCC  0E03               	movlw	3
 10068  000FCE  6E26               	movwf	___wmul@multiplicand,c
 10069  000FD0  0E00               	movlw	0
 10070  000FD2  6E1F               	movwf	___awdiv@divisor+1,c
 10071  000FD4  0E0A               	movlw	10
 10072  000FD6  6E1E               	movwf	___awdiv@divisor,c
 10073  000FD8  0E00               	movlw	0
 10074  000FDA  6E19               	movwf	___awmod@divisor+1,c
 10075  000FDC  0E64               	movlw	100
 10076  000FDE  6E18               	movwf	___awmod@divisor,c
 10077  000FE0  0100               	movlb	0	; () banked
 10078  000FE2  516C               	movf	scale@scl& (0+255),w,b
 10079  000FE4  6E16               	movwf	___awmod@dividend,c
 10080  000FE6  6A17               	clrf	___awmod@dividend+1,c
 10081  000FE8  BE16               	btfsc	___awmod@dividend,7,c
 10082  000FEA  0617               	decf	___awmod@dividend+1,f,c
 10083  000FEC  ECAB  F017         	call	___awmod	;wreg free
 10084  000FF0  C016  F01C         	movff	?___awmod,___awdiv@dividend
 10085  000FF4  C017  F01D         	movff	?___awmod+1,___awdiv@dividend+1
 10086  000FF8  EC3D  F016         	call	___awdiv	;wreg free
 10087  000FFC  0E09               	movlw	9
 10088  000FFE  241C               	addwf	?___awdiv,w,c
 10089  001000  6E24               	movwf	___wmul@multiplier,c
 10090  001002  0E00               	movlw	0
 10091  001004  201D               	addwfc	?___awdiv+1,w,c
 10092  001006  6E25               	movwf	___wmul@multiplier+1,c
 10093  001008  EC5A  F01A         	call	___wmul	;wreg free
 10094  00100C  0ED3               	movlw	low __powers_
 10095  00100E  2424               	addwf	?___wmul,w,c
 10096  001010  6EF6               	movwf	tblptrl,c
 10097  001012  0E60               	movlw	high __powers_
 10098  001014  2025               	addwfc	?___wmul+1,w,c
 10099  001016  6EF7               	movwf	tblptrh,c
 10100  001018                     	if	0	;There are less than 3 active tblptr bytes
 10101  001018                     	endif
 10102  001018  0009               	tblrd		*+
 10103  00101A  CFF5 F02D          	movff	tablat,___ftmul@f2
 10104  00101E  0009               	tblrd		*+
 10105  001020  CFF5 F02E          	movff	tablat,___ftmul@f2+1
 10106  001024  000A               	tblrd		*-
 10107  001026  CFF5 F02F          	movff	tablat,___ftmul@f2+2
 10108  00102A  0E00               	movlw	0
 10109  00102C  6E1F               	movwf	___awdiv@divisor+1,c
 10110  00102E  0E64               	movlw	100
 10111  001030  6E1E               	movwf	___awdiv@divisor,c
 10112  001032  0100               	movlb	0	; () banked
 10113  001034  516C               	movf	scale@scl& (0+255),w,b
 10114  001036  6E1C               	movwf	___awdiv@dividend,c
 10115  001038  6A1D               	clrf	___awdiv@dividend+1,c
 10116  00103A  BE1C               	btfsc	___awdiv@dividend,7,c
 10117  00103C  061D               	decf	___awdiv@dividend+1,f,c
 10118  00103E  EC3D  F016         	call	___awdiv	;wreg free
 10119  001042  0E12               	movlw	18
 10120  001044  241C               	addwf	?___awdiv,w,c
 10121  001046  6E24               	movwf	___wmul@multiplier,c
 10122  001048  0E00               	movlw	0
 10123  00104A  201D               	addwfc	?___awdiv+1,w,c
 10124  00104C  6E25               	movwf	___wmul@multiplier+1,c
 10125  00104E  0E00               	movlw	0
 10126  001050  6E27               	movwf	___wmul@multiplicand+1,c
 10127  001052  0E03               	movlw	3
 10128  001054  6E26               	movwf	___wmul@multiplicand,c
 10129  001056  EC5A  F01A         	call	___wmul	;wreg free
 10130  00105A  0ED3               	movlw	low __powers_
 10131  00105C  2424               	addwf	?___wmul,w,c
 10132  00105E  6EF6               	movwf	tblptrl,c
 10133  001060  0E60               	movlw	high __powers_
 10134  001062  2025               	addwfc	?___wmul+1,w,c
 10135  001064  6EF7               	movwf	tblptrh,c
 10136  001066                     	if	0	;There are less than 3 active tblptr bytes
 10137  001066                     	endif
 10138  001066  0009               	tblrd		*+
 10139  001068  CFF5 F02A          	movff	tablat,___ftmul@f1
 10140  00106C  0009               	tblrd		*+
 10141  00106E  CFF5 F02B          	movff	tablat,___ftmul@f1+1
 10142  001072  000A               	tblrd		*-
 10143  001074  CFF5 F02C          	movff	tablat,___ftmul@f1+2
 10144  001078  EC72  F010         	call	___ftmul	;wreg free
 10145  00107C  C02A  F069         	movff	?___ftmul,_scale$3374
 10146  001080  C02B  F06A         	movff	?___ftmul+1,_scale$3374+1
 10147  001084  C02C  F06B         	movff	?___ftmul+2,_scale$3374+2
 10148                           
 10149                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10150  001088  C069  F02A         	movff	_scale$3374,___ftmul@f1
 10151  00108C  C06A  F02B         	movff	_scale$3374+1,___ftmul@f1+1
 10152  001090  C06B  F02C         	movff	_scale$3374+2,___ftmul@f1+2
 10153  001094  0E00               	movlw	0
 10154  001096  6E27               	movwf	___wmul@multiplicand+1,c
 10155  001098  0E03               	movlw	3
 10156  00109A  6E26               	movwf	___wmul@multiplicand,c
 10157  00109C  0E00               	movlw	0
 10158  00109E  6E19               	movwf	___awmod@divisor+1,c
 10159  0010A0  0E0A               	movlw	10
 10160  0010A2  6E18               	movwf	___awmod@divisor,c
 10161  0010A4  0100               	movlb	0	; () banked
 10162  0010A6  516C               	movf	scale@scl& (0+255),w,b
 10163  0010A8  6E16               	movwf	___awmod@dividend,c
 10164  0010AA  6A17               	clrf	___awmod@dividend+1,c
 10165  0010AC  BE16               	btfsc	___awmod@dividend,7,c
 10166  0010AE  0617               	decf	___awmod@dividend+1,f,c
 10167  0010B0  ECAB  F017         	call	___awmod	;wreg free
 10168  0010B4  C016  F024         	movff	?___awmod,___wmul@multiplier
 10169  0010B8  C017  F025         	movff	?___awmod+1,___wmul@multiplier+1
 10170  0010BC  EC5A  F01A         	call	___wmul	;wreg free
 10171  0010C0  0ED3               	movlw	low __powers_
 10172  0010C2  2424               	addwf	?___wmul,w,c
 10173  0010C4  6EF6               	movwf	tblptrl,c
 10174  0010C6  0E60               	movlw	high __powers_
 10175  0010C8  2025               	addwfc	?___wmul+1,w,c
 10176  0010CA  6EF7               	movwf	tblptrh,c
 10177  0010CC                     	if	0	;There are less than 3 active tblptr bytes
 10178  0010CC                     	endif
 10179  0010CC  0009               	tblrd		*+
 10180  0010CE  CFF5 F02D          	movff	tablat,___ftmul@f2
 10181  0010D2  0009               	tblrd		*+
 10182  0010D4  CFF5 F02E          	movff	tablat,___ftmul@f2+1
 10183  0010D8  000A               	tblrd		*-
 10184  0010DA  CFF5 F02F          	movff	tablat,___ftmul@f2+2
 10185  0010DE  EC72  F010         	call	___ftmul	;wreg free
 10186  0010E2  C02A  F066         	movff	?___ftmul,?_scale
 10187  0010E6  C02B  F067         	movff	?___ftmul+1,?_scale+1
 10188  0010EA  C02C  F068         	movff	?___ftmul+2,?_scale+2
 10189  0010EE  0012               	return	
 10190  0010F0                     l9578:
 10191                           
 10192                           ;doprnt.c: 438: else if(scl > 10)
 10193  0010F0  0100               	movlb	0	; () banked
 10194  0010F2  516C               	movf	scale@scl& (0+255),w,b
 10195  0010F4  0A80               	xorlw	128
 10196  0010F6  0F75               	addlw	-139
 10197  0010F8  A0D8               	btfss	status,0,c
 10198  0010FA  D04F               	goto	l9584
 10199                           
 10200                           ; BSR set to: 0
 10201                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 10202  0010FC  0E00               	movlw	0
 10203  0010FE  6E1F               	movwf	___awdiv@divisor+1,c
 10204  001100  0E0A               	movlw	10
 10205  001102  6E1E               	movwf	___awdiv@divisor,c
 10206  001104  0100               	movlb	0	; () banked
 10207  001106  516C               	movf	scale@scl& (0+255),w,b
 10208  001108  6E1C               	movwf	___awdiv@dividend,c
 10209  00110A  6A1D               	clrf	___awdiv@dividend+1,c
 10210  00110C  BE1C               	btfsc	___awdiv@dividend,7,c
 10211  00110E  061D               	decf	___awdiv@dividend+1,f,c
 10212  001110  EC3D  F016         	call	___awdiv	;wreg free
 10213  001114  0E09               	movlw	9
 10214  001116  241C               	addwf	?___awdiv,w,c
 10215  001118  6E24               	movwf	___wmul@multiplier,c
 10216  00111A  0E00               	movlw	0
 10217  00111C  201D               	addwfc	?___awdiv+1,w,c
 10218  00111E  6E25               	movwf	___wmul@multiplier+1,c
 10219  001120  0E00               	movlw	0
 10220  001122  6E27               	movwf	___wmul@multiplicand+1,c
 10221  001124  0E03               	movlw	3
 10222  001126  6E26               	movwf	___wmul@multiplicand,c
 10223  001128  EC5A  F01A         	call	___wmul	;wreg free
 10224  00112C  0ED3               	movlw	low __powers_
 10225  00112E  2424               	addwf	?___wmul,w,c
 10226  001130  6EF6               	movwf	tblptrl,c
 10227  001132  0E60               	movlw	high __powers_
 10228  001134  2025               	addwfc	?___wmul+1,w,c
 10229  001136  6EF7               	movwf	tblptrh,c
 10230  001138                     	if	0	;There are less than 3 active tblptr bytes
 10231  001138                     	endif
 10232  001138  0009               	tblrd		*+
 10233  00113A  CFF5 F02A          	movff	tablat,___ftmul@f1
 10234  00113E  0009               	tblrd		*+
 10235  001140  CFF5 F02B          	movff	tablat,___ftmul@f1+1
 10236  001144  000A               	tblrd		*-
 10237  001146  CFF5 F02C          	movff	tablat,___ftmul@f1+2
 10238  00114A  0E00               	movlw	0
 10239  00114C  6E27               	movwf	___wmul@multiplicand+1,c
 10240  00114E  0E03               	movlw	3
 10241  001150  6E26               	movwf	___wmul@multiplicand,c
 10242  001152  0E00               	movlw	0
 10243  001154  6E19               	movwf	___awmod@divisor+1,c
 10244  001156  0E0A               	movlw	10
 10245  001158  6E18               	movwf	___awmod@divisor,c
 10246  00115A  0100               	movlb	0	; () banked
 10247  00115C  516C               	movf	scale@scl& (0+255),w,b
 10248  00115E  6E16               	movwf	___awmod@dividend,c
 10249  001160  6A17               	clrf	___awmod@dividend+1,c
 10250  001162  BE16               	btfsc	___awmod@dividend,7,c
 10251  001164  0617               	decf	___awmod@dividend+1,f,c
 10252  001166  ECAB  F017         	call	___awmod	;wreg free
 10253  00116A  C016  F024         	movff	?___awmod,___wmul@multiplier
 10254  00116E  C017  F025         	movff	?___awmod+1,___wmul@multiplier+1
 10255  001172  EC5A  F01A         	call	___wmul	;wreg free
 10256  001176  0ED3               	movlw	low __powers_
 10257  001178  2424               	addwf	?___wmul,w,c
 10258  00117A  6EF6               	movwf	tblptrl,c
 10259  00117C  0E60               	movlw	high __powers_
 10260  00117E  2025               	addwfc	?___wmul+1,w,c
 10261  001180  6EF7               	movwf	tblptrh,c
 10262  001182                     	if	0	;There are less than 3 active tblptr bytes
 10263  001182                     	endif
 10264  001182  0009               	tblrd		*+
 10265  001184  CFF5 F02D          	movff	tablat,___ftmul@f2
 10266  001188  0009               	tblrd		*+
 10267  00118A  CFF5 F02E          	movff	tablat,___ftmul@f2+1
 10268  00118E  000A               	tblrd		*-
 10269  001190  CFF5 F02F          	movff	tablat,___ftmul@f2+2
 10270  001194  EC72  F010         	call	___ftmul	;wreg free
 10271  001198  D7A4               	goto	L7
 10272  00119A                     l9584:
 10273                           
 10274                           ;doprnt.c: 440: return _powers_[scl];
 10275  00119A  0100               	movlb	0	; () banked
 10276  00119C  516C               	movf	scale@scl& (0+255),w,b
 10277  00119E  0D03               	mullw	3
 10278  0011A0  0ED3               	movlw	low __powers_
 10279  0011A2  24F3               	addwf	prodl,w,c
 10280  0011A4  6EF6               	movwf	tblptrl,c
 10281  0011A6  0E60               	movlw	high __powers_
 10282  0011A8  20F4               	addwfc	prodh,w,c
 10283  0011AA  6EF7               	movwf	tblptrh,c
 10284  0011AC                     	if	0	;There are less than 3 active tblptr bytes
 10285  0011AC                     	endif
 10286  0011AC  0009               	tblrd		*+
 10287  0011AE  CFF5 F066          	movff	tablat,?_scale
 10288  0011B2  0009               	tblrd		*+
 10289  0011B4  CFF5 F067          	movff	tablat,?_scale+1
 10290  0011B8  000A               	tblrd		*-
 10291  0011BA  CFF5 F068          	movff	tablat,?_scale+2
 10292  0011BE  0012               	return	
 10293  0011C0                     __end_of_scale:
 10294                           	opt stack 0
 10295                           tosu	equ	0xFFF
 10296                           tosh	equ	0xFFE
 10297                           tosl	equ	0xFFD
 10298                           pclath	equ	0xFFA
 10299                           tblptru	equ	0xFF8
 10300                           tblptrh	equ	0xFF7
 10301                           tblptrl	equ	0xFF6
 10302                           tablat	equ	0xFF5
 10303                           prodh	equ	0xFF4
 10304                           prodl	equ	0xFF3
 10305                           intcon	equ	0xFF2
 10306                           intcon2	equ	0xFF1
 10307                           intcon3	equ	0xFF0
 10308                           indf0	equ	0xFEF
 10309                           postinc0	equ	0xFEE
 10310                           fsr0h	equ	0xFEA
 10311                           fsr0l	equ	0xFE9
 10312                           wreg	equ	0xFE8
 10313                           indf1	equ	0xFE7
 10314                           postinc1	equ	0xFE6
 10315                           postdec1	equ	0xFE5
 10316                           fsr1h	equ	0xFE2
 10317                           fsr1l	equ	0xFE1
 10318                           indf2	equ	0xFDF
 10319                           postinc2	equ	0xFDE
 10320                           postdec2	equ	0xFDD
 10321                           fsr2h	equ	0xFDA
 10322                           fsr2l	equ	0xFD9
 10323                           status	equ	0xFD8
 10324                           
 10325 ;; *************** function _isdigit *****************
 10326 ;; Defined at:
 10327 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
 10328 ;; Parameters:    Size  Location     Type
 10329 ;;  c               1    wreg     unsigned char 
 10330 ;; Auto vars:     Size  Location     Type
 10331 ;;  c               1   23[COMRAM] unsigned char 
 10332 ;; Return value:  Size  Location     Type
 10333 ;;		None               void
 10334 ;; Registers used:
 10335 ;;		wreg, status,2, status,0
 10336 ;; Tracked objects:
 10337 ;;		On entry : 0/0
 10338 ;;		On exit  : 0/0
 10339 ;;		Unchanged: 0/0
 10340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10341 ;;      Params:         0       0       0       0       0       0       0       0       0
 10342 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10343 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10344 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10345 ;;Total ram usage:        3 bytes
 10346 ;; Hardware stack levels used:    1
 10347 ;; Hardware stack levels required when called:    2
 10348 ;; This function calls:
 10349 ;;		Nothing
 10350 ;; This function is called by:
 10351 ;;		_sprintf
 10352 ;;		_strtod
 10353 ;;		_atol
 10354 ;; This function uses a non-reentrant model
 10355 ;;
 10356                           
 10357                           	psect	text44
 10358  003520                     __ptext44:
 10359                           	opt stack 0
 10360  003520                     _isdigit:
 10361                           	opt stack 25
 10362                           
 10363                           ;incstack = 0
 10364                           ;isdigit@c stored from wreg
 10365  003520  6E18               	movwf	isdigit@c,c
 10366  003522  0E00               	movlw	0
 10367  003524  6E17               	movwf	_isdigit$2851,c
 10368  003526  0E3A               	movlw	58
 10369  003528  6018               	cpfslt	isdigit@c,c
 10370  00352A  D005               	goto	l9192
 10371  00352C  0E2F               	movlw	47
 10372  00352E  6418               	cpfsgt	isdigit@c,c
 10373  003530  D002               	goto	l9192
 10374  003532  0E01               	movlw	1
 10375  003534  6E17               	movwf	_isdigit$2851,c
 10376  003536                     l9192:
 10377  003536  C017  F016         	movff	_isdigit$2851,??_isdigit
 10378  00353A  3016               	rrcf	??_isdigit,w,c
 10379  00353C  0012               	return	
 10380  00353E                     __end_of_isdigit:
 10381                           	opt stack 0
 10382                           tosu	equ	0xFFF
 10383                           tosh	equ	0xFFE
 10384                           tosl	equ	0xFFD
 10385                           pclath	equ	0xFFA
 10386                           tblptru	equ	0xFF8
 10387                           tblptrh	equ	0xFF7
 10388                           tblptrl	equ	0xFF6
 10389                           tablat	equ	0xFF5
 10390                           prodh	equ	0xFF4
 10391                           prodl	equ	0xFF3
 10392                           intcon	equ	0xFF2
 10393                           intcon2	equ	0xFF1
 10394                           intcon3	equ	0xFF0
 10395                           indf0	equ	0xFEF
 10396                           postinc0	equ	0xFEE
 10397                           fsr0h	equ	0xFEA
 10398                           fsr0l	equ	0xFE9
 10399                           wreg	equ	0xFE8
 10400                           indf1	equ	0xFE7
 10401                           postinc1	equ	0xFE6
 10402                           postdec1	equ	0xFE5
 10403                           fsr1h	equ	0xFE2
 10404                           fsr1l	equ	0xFE1
 10405                           indf2	equ	0xFDF
 10406                           postinc2	equ	0xFDE
 10407                           postdec2	equ	0xFDD
 10408                           fsr2h	equ	0xFDA
 10409                           fsr2l	equ	0xFD9
 10410                           status	equ	0xFD8
 10411                           
 10412 ;; *************** function _fround *****************
 10413 ;; Defined at:
 10414 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
 10415 ;; Parameters:    Size  Location     Type
 10416 ;;  prec            1    wreg     unsigned char 
 10417 ;; Auto vars:     Size  Location     Type
 10418 ;;  prec            1   15[BANK0 ] unsigned char 
 10419 ;; Return value:  Size  Location     Type
 10420 ;;                  3    6[BANK0 ] unsigned char 
 10421 ;; Registers used:
 10422 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10423 ;; Tracked objects:
 10424 ;;		On entry : 0/0
 10425 ;;		On exit  : 0/0
 10426 ;;		Unchanged: 0/0
 10427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10428 ;;      Params:         0       3       0       0       0       0       0       0       0
 10429 ;;      Locals:         0       7       0       0       0       0       0       0       0
 10430 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10431 ;;      Totals:         0      10       0       0       0       0       0       0       0
 10432 ;;Total ram usage:       10 bytes
 10433 ;; Hardware stack levels used:    1
 10434 ;; Hardware stack levels required when called:    4
 10435 ;; This function calls:
 10436 ;;		___awdiv
 10437 ;;		___awmod
 10438 ;;		___ftmul
 10439 ;;		___wmul
 10440 ;; This function is called by:
 10441 ;;		_sprintf
 10442 ;; This function uses a non-reentrant model
 10443 ;;
 10444                           
 10445                           	psect	text45
 10446  001428                     __ptext45:
 10447                           	opt stack 0
 10448  001428                     _fround:
 10449                           	opt stack 23
 10450                           
 10451                           ;incstack = 0
 10452                           ;fround@prec stored from wreg
 10453  001428  0100               	movlb	0	; () banked
 10454  00142A  6F6F               	movwf	fround@prec& (0+255),b
 10455                           
 10456                           ;doprnt.c: 413: if(prec>=110)
 10457  00142C  0E6D               	movlw	109
 10458  00142E  0100               	movlb	0	; () banked
 10459  001430  656F               	cpfsgt	fround@prec& (0+255),b
 10460  001432  D09F               	goto	l9538
 10461                           
 10462                           ; BSR set to: 0
 10463                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10464  001434  0E00               	movlw	0
 10465  001436  6E27               	movwf	___wmul@multiplicand+1,c
 10466  001438  0E03               	movlw	3
 10467  00143A  6E26               	movwf	___wmul@multiplicand,c
 10468  00143C  0E00               	movlw	0
 10469  00143E  6E1F               	movwf	___awdiv@divisor+1,c
 10470  001440  0E0A               	movlw	10
 10471  001442  6E1E               	movwf	___awdiv@divisor,c
 10472  001444  0E00               	movlw	0
 10473  001446  6E19               	movwf	___awmod@divisor+1,c
 10474  001448  0E64               	movlw	100
 10475  00144A  6E18               	movwf	___awmod@divisor,c
 10476  00144C  C06F  F016         	movff	fround@prec,___awmod@dividend
 10477  001450  6A17               	clrf	___awmod@dividend+1,c
 10478  001452  ECAB  F017         	call	___awmod	;wreg free
 10479  001456  C016  F01C         	movff	?___awmod,___awdiv@dividend
 10480  00145A  C017  F01D         	movff	?___awmod+1,___awdiv@dividend+1
 10481  00145E  EC3D  F016         	call	___awdiv	;wreg free
 10482  001462  0E09               	movlw	9
 10483  001464  241C               	addwf	?___awdiv,w,c
 10484  001466  6E24               	movwf	___wmul@multiplier,c
 10485  001468  0E00               	movlw	0
 10486  00146A  201D               	addwfc	?___awdiv+1,w,c
 10487  00146C  6E25               	movwf	___wmul@multiplier+1,c
 10488  00146E  EC5A  F01A         	call	___wmul	;wreg free
 10489  001472  0EFA               	movlw	low __npowers_
 10490  001474  2424               	addwf	?___wmul,w,c
 10491  001476  6EF6               	movwf	tblptrl,c
 10492  001478  0E60               	movlw	high __npowers_
 10493  00147A  2025               	addwfc	?___wmul+1,w,c
 10494  00147C  6EF7               	movwf	tblptrh,c
 10495  00147E                     	if	0	;There are less than 3 active tblptr bytes
 10496  00147E                     	endif
 10497  00147E  0009               	tblrd		*+
 10498  001480  CFF5 F02D          	movff	tablat,___ftmul@f2
 10499  001484  0009               	tblrd		*+
 10500  001486  CFF5 F02E          	movff	tablat,___ftmul@f2+1
 10501  00148A  000A               	tblrd		*-
 10502  00148C  CFF5 F02F          	movff	tablat,___ftmul@f2+2
 10503  001490  0E00               	movlw	0
 10504  001492  6E1F               	movwf	___awdiv@divisor+1,c
 10505  001494  0E64               	movlw	100
 10506  001496  6E1E               	movwf	___awdiv@divisor,c
 10507  001498  C06F  F01C         	movff	fround@prec,___awdiv@dividend
 10508  00149C  6A1D               	clrf	___awdiv@dividend+1,c
 10509  00149E  EC3D  F016         	call	___awdiv	;wreg free
 10510  0014A2  0E12               	movlw	18
 10511  0014A4  241C               	addwf	?___awdiv,w,c
 10512  0014A6  6E24               	movwf	___wmul@multiplier,c
 10513  0014A8  0E00               	movlw	0
 10514  0014AA  201D               	addwfc	?___awdiv+1,w,c
 10515  0014AC  6E25               	movwf	___wmul@multiplier+1,c
 10516  0014AE  0E00               	movlw	0
 10517  0014B0  6E27               	movwf	___wmul@multiplicand+1,c
 10518  0014B2  0E03               	movlw	3
 10519  0014B4  6E26               	movwf	___wmul@multiplicand,c
 10520  0014B6  EC5A  F01A         	call	___wmul	;wreg free
 10521  0014BA  0EFA               	movlw	low __npowers_
 10522  0014BC  2424               	addwf	?___wmul,w,c
 10523  0014BE  6EF6               	movwf	tblptrl,c
 10524  0014C0  0E60               	movlw	high __npowers_
 10525  0014C2  2025               	addwfc	?___wmul+1,w,c
 10526  0014C4  6EF7               	movwf	tblptrh,c
 10527  0014C6                     	if	0	;There are less than 3 active tblptr bytes
 10528  0014C6                     	endif
 10529  0014C6  0009               	tblrd		*+
 10530  0014C8  CFF5 F02A          	movff	tablat,___ftmul@f1
 10531  0014CC  0009               	tblrd		*+
 10532  0014CE  CFF5 F02B          	movff	tablat,___ftmul@f1+1
 10533  0014D2  000A               	tblrd		*-
 10534  0014D4  CFF5 F02C          	movff	tablat,___ftmul@f1+2
 10535  0014D8  EC72  F010         	call	___ftmul	;wreg free
 10536  0014DC  C02A  F06C         	movff	?___ftmul,_fround$3372
 10537  0014E0  C02B  F06D         	movff	?___ftmul+1,_fround$3372+1
 10538  0014E4  C02C  F06E         	movff	?___ftmul+2,_fround$3372+2
 10539                           
 10540                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10541  0014E8  0E00               	movlw	0
 10542  0014EA  6E27               	movwf	___wmul@multiplicand+1,c
 10543  0014EC  0E03               	movlw	3
 10544  0014EE  6E26               	movwf	___wmul@multiplicand,c
 10545  0014F0  0E00               	movlw	0
 10546  0014F2  6E19               	movwf	___awmod@divisor+1,c
 10547  0014F4  0E0A               	movlw	10
 10548  0014F6  6E18               	movwf	___awmod@divisor,c
 10549  0014F8  C06F  F016         	movff	fround@prec,___awmod@dividend
 10550  0014FC  6A17               	clrf	___awmod@dividend+1,c
 10551  0014FE  ECAB  F017         	call	___awmod	;wreg free
 10552  001502  C016  F024         	movff	?___awmod,___wmul@multiplier
 10553  001506  C017  F025         	movff	?___awmod+1,___wmul@multiplier+1
 10554  00150A  EC5A  F01A         	call	___wmul	;wreg free
 10555  00150E  0EFA               	movlw	low __npowers_
 10556  001510  2424               	addwf	?___wmul,w,c
 10557  001512  6EF6               	movwf	tblptrl,c
 10558  001514  0E60               	movlw	high __npowers_
 10559  001516  2025               	addwfc	?___wmul+1,w,c
 10560  001518  6EF7               	movwf	tblptrh,c
 10561  00151A                     	if	0	;There are less than 3 active tblptr bytes
 10562  00151A                     	endif
 10563  00151A  0009               	tblrd		*+
 10564  00151C  CFF5 F02D          	movff	tablat,___ftmul@f2
 10565  001520  0009               	tblrd		*+
 10566  001522  CFF5 F02E          	movff	tablat,___ftmul@f2+1
 10567  001526  000A               	tblrd		*-
 10568  001528  CFF5 F02F          	movff	tablat,___ftmul@f2+2
 10569  00152C  C06C  F02A         	movff	_fround$3372,___ftmul@f1
 10570  001530  C06D  F02B         	movff	_fround$3372+1,___ftmul@f1+1
 10571  001534  C06E  F02C         	movff	_fround$3372+2,___ftmul@f1+2
 10572  001538  EC72  F010         	call	___ftmul	;wreg free
 10573  00153C  C02A  F069         	movff	?___ftmul,_fround$3373
 10574  001540  C02B  F06A         	movff	?___ftmul+1,_fround$3373+1
 10575  001544  C02C  F06B         	movff	?___ftmul+2,_fround$3373+2
 10576                           
 10577                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10578  001548  C069  F02A         	movff	_fround$3373,___ftmul@f1
 10579  00154C  C06A  F02B         	movff	_fround$3373+1,___ftmul@f1+1
 10580  001550  C06B  F02C         	movff	_fround$3373+2,___ftmul@f1+2
 10581  001554  0E00               	movlw	0
 10582  001556  6E2D               	movwf	___ftmul@f2,c
 10583  001558  0E00               	movlw	0
 10584  00155A  6E2E               	movwf	___ftmul@f2+1,c
 10585  00155C  0E3F               	movlw	63
 10586  00155E  6E2F               	movwf	___ftmul@f2+2,c
 10587  001560  EC72  F010         	call	___ftmul	;wreg free
 10588  001564  C02A  F066         	movff	?___ftmul,?_fround
 10589  001568  C02B  F067         	movff	?___ftmul+1,?_fround+1
 10590  00156C  C02C  F068         	movff	?___ftmul+2,?_fround+2
 10591  001570  0012               	return	
 10592  001572                     l9538:
 10593                           
 10594                           ;doprnt.c: 415: else if(prec > 10)
 10595  001572  0E0A               	movlw	10
 10596  001574  0100               	movlb	0	; () banked
 10597  001576  656F               	cpfsgt	fround@prec& (0+255),b
 10598  001578  D05D               	goto	l9546
 10599                           
 10600                           ; BSR set to: 0
 10601                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 10602  00157A  0E00               	movlw	0
 10603  00157C  6E27               	movwf	___wmul@multiplicand+1,c
 10604  00157E  0E03               	movlw	3
 10605  001580  6E26               	movwf	___wmul@multiplicand,c
 10606  001582  0E00               	movlw	0
 10607  001584  6E19               	movwf	___awmod@divisor+1,c
 10608  001586  0E0A               	movlw	10
 10609  001588  6E18               	movwf	___awmod@divisor,c
 10610  00158A  C06F  F016         	movff	fround@prec,___awmod@dividend
 10611  00158E  6A17               	clrf	___awmod@dividend+1,c
 10612  001590  ECAB  F017         	call	___awmod	;wreg free
 10613  001594  C016  F024         	movff	?___awmod,___wmul@multiplier
 10614  001598  C017  F025         	movff	?___awmod+1,___wmul@multiplier+1
 10615  00159C  EC5A  F01A         	call	___wmul	;wreg free
 10616  0015A0  0EFA               	movlw	low __npowers_
 10617  0015A2  2424               	addwf	?___wmul,w,c
 10618  0015A4  6EF6               	movwf	tblptrl,c
 10619  0015A6  0E60               	movlw	high __npowers_
 10620  0015A8  2025               	addwfc	?___wmul+1,w,c
 10621  0015AA  6EF7               	movwf	tblptrh,c
 10622  0015AC                     	if	0	;There are less than 3 active tblptr bytes
 10623  0015AC                     	endif
 10624  0015AC  0009               	tblrd		*+
 10625  0015AE  CFF5 F02D          	movff	tablat,___ftmul@f2
 10626  0015B2  0009               	tblrd		*+
 10627  0015B4  CFF5 F02E          	movff	tablat,___ftmul@f2+1
 10628  0015B8  000A               	tblrd		*-
 10629  0015BA  CFF5 F02F          	movff	tablat,___ftmul@f2+2
 10630  0015BE  0E00               	movlw	0
 10631  0015C0  6E1F               	movwf	___awdiv@divisor+1,c
 10632  0015C2  0E0A               	movlw	10
 10633  0015C4  6E1E               	movwf	___awdiv@divisor,c
 10634  0015C6  C06F  F01C         	movff	fround@prec,___awdiv@dividend
 10635  0015CA  6A1D               	clrf	___awdiv@dividend+1,c
 10636  0015CC  EC3D  F016         	call	___awdiv	;wreg free
 10637  0015D0  0E09               	movlw	9
 10638  0015D2  241C               	addwf	?___awdiv,w,c
 10639  0015D4  6E24               	movwf	___wmul@multiplier,c
 10640  0015D6  0E00               	movlw	0
 10641  0015D8  201D               	addwfc	?___awdiv+1,w,c
 10642  0015DA  6E25               	movwf	___wmul@multiplier+1,c
 10643  0015DC  0E00               	movlw	0
 10644  0015DE  6E27               	movwf	___wmul@multiplicand+1,c
 10645  0015E0  0E03               	movlw	3
 10646  0015E2  6E26               	movwf	___wmul@multiplicand,c
 10647  0015E4  EC5A  F01A         	call	___wmul	;wreg free
 10648  0015E8  0EFA               	movlw	low __npowers_
 10649  0015EA  2424               	addwf	?___wmul,w,c
 10650  0015EC  6EF6               	movwf	tblptrl,c
 10651  0015EE  0E60               	movlw	high __npowers_
 10652  0015F0  2025               	addwfc	?___wmul+1,w,c
 10653  0015F2  6EF7               	movwf	tblptrh,c
 10654  0015F4                     	if	0	;There are less than 3 active tblptr bytes
 10655  0015F4                     	endif
 10656  0015F4  0009               	tblrd		*+
 10657  0015F6  CFF5 F02A          	movff	tablat,___ftmul@f1
 10658  0015FA  0009               	tblrd		*+
 10659  0015FC  CFF5 F02B          	movff	tablat,___ftmul@f1+1
 10660  001600  000A               	tblrd		*-
 10661  001602  CFF5 F02C          	movff	tablat,___ftmul@f1+2
 10662  001606  EC72  F010         	call	___ftmul	;wreg free
 10663  00160A  C02A  F06C         	movff	?___ftmul,_fround$3372
 10664  00160E  C02B  F06D         	movff	?___ftmul+1,_fround$3372+1
 10665  001612  C02C  F06E         	movff	?___ftmul+2,_fround$3372+2
 10666                           
 10667                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 10668  001616  C06C  F02A         	movff	_fround$3372,___ftmul@f1
 10669  00161A  C06D  F02B         	movff	_fround$3372+1,___ftmul@f1+1
 10670  00161E  C06E  F02C         	movff	_fround$3372+2,___ftmul@f1+2
 10671  001622  0E00               	movlw	0
 10672  001624  6E2D               	movwf	___ftmul@f2,c
 10673  001626  0E00               	movlw	0
 10674  001628  6E2E               	movwf	___ftmul@f2+1,c
 10675  00162A  0E3F               	movlw	63
 10676  00162C  6E2F               	movwf	___ftmul@f2+2,c
 10677  00162E  EC72  F010         	call	___ftmul	;wreg free
 10678  001632  D798               	goto	L8
 10679  001634                     l9546:
 10680                           
 10681                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 10682  001634  0100               	movlb	0	; () banked
 10683  001636  516F               	movf	fround@prec& (0+255),w,b
 10684  001638  0D03               	mullw	3
 10685  00163A  0EFA               	movlw	low __npowers_
 10686  00163C  24F3               	addwf	prodl,w,c
 10687  00163E  6EF6               	movwf	tblptrl,c
 10688  001640  0E60               	movlw	high __npowers_
 10689  001642  20F4               	addwfc	prodh,w,c
 10690  001644  6EF7               	movwf	tblptrh,c
 10691  001646                     	if	0	;There are less than 3 active tblptr bytes
 10692  001646                     	endif
 10693  001646  0009               	tblrd		*+
 10694  001648  CFF5 F02A          	movff	tablat,___ftmul@f1
 10695  00164C  0009               	tblrd		*+
 10696  00164E  CFF5 F02B          	movff	tablat,___ftmul@f1+1
 10697  001652  000A               	tblrd		*-
 10698  001654  CFF5 F02C          	movff	tablat,___ftmul@f1+2
 10699  001658  0E00               	movlw	0
 10700  00165A  6E2D               	movwf	___ftmul@f2,c
 10701  00165C  0E00               	movlw	0
 10702  00165E  6E2E               	movwf	___ftmul@f2+1,c
 10703  001660  0E3F               	movlw	63
 10704  001662  6E2F               	movwf	___ftmul@f2+2,c
 10705  001664  EC72  F010         	call	___ftmul	;wreg free
 10706  001668  C02A  F066         	movff	?___ftmul,?_fround
 10707  00166C  C02B  F067         	movff	?___ftmul+1,?_fround+1
 10708  001670  C02C  F068         	movff	?___ftmul+2,?_fround+2
 10709  001674  0012               	return	
 10710  001676                     __end_of_fround:
 10711                           	opt stack 0
 10712                           tosu	equ	0xFFF
 10713                           tosh	equ	0xFFE
 10714                           tosl	equ	0xFFD
 10715                           pclath	equ	0xFFA
 10716                           tblptru	equ	0xFF8
 10717                           tblptrh	equ	0xFF7
 10718                           tblptrl	equ	0xFF6
 10719                           tablat	equ	0xFF5
 10720                           prodh	equ	0xFF4
 10721                           prodl	equ	0xFF3
 10722                           intcon	equ	0xFF2
 10723                           intcon2	equ	0xFF1
 10724                           intcon3	equ	0xFF0
 10725                           indf0	equ	0xFEF
 10726                           postinc0	equ	0xFEE
 10727                           fsr0h	equ	0xFEA
 10728                           fsr0l	equ	0xFE9
 10729                           wreg	equ	0xFE8
 10730                           indf1	equ	0xFE7
 10731                           postinc1	equ	0xFE6
 10732                           postdec1	equ	0xFE5
 10733                           fsr1h	equ	0xFE2
 10734                           fsr1l	equ	0xFE1
 10735                           indf2	equ	0xFDF
 10736                           postinc2	equ	0xFDE
 10737                           postdec2	equ	0xFDD
 10738                           fsr2h	equ	0xFDA
 10739                           fsr2l	equ	0xFD9
 10740                           status	equ	0xFD8
 10741                           
 10742 ;; *************** function ___wmul *****************
 10743 ;; Defined at:
 10744 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
 10745 ;; Parameters:    Size  Location     Type
 10746 ;;  multiplier      2   35[COMRAM] unsigned int 
 10747 ;;  multiplicand    2   37[COMRAM] unsigned int 
 10748 ;; Auto vars:     Size  Location     Type
 10749 ;;  product         2   39[COMRAM] unsigned int 
 10750 ;; Return value:  Size  Location     Type
 10751 ;;                  2   35[COMRAM] unsigned int 
 10752 ;; Registers used:
 10753 ;;		wreg, status,2, status,0, prodl, prodh
 10754 ;; Tracked objects:
 10755 ;;		On entry : 0/0
 10756 ;;		On exit  : 0/0
 10757 ;;		Unchanged: 0/0
 10758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10759 ;;      Params:         4       0       0       0       0       0       0       0       0
 10760 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10761 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10762 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10763 ;;Total ram usage:        6 bytes
 10764 ;; Hardware stack levels used:    1
 10765 ;; Hardware stack levels required when called:    2
 10766 ;; This function calls:
 10767 ;;		Nothing
 10768 ;; This function is called by:
 10769 ;;		_fround
 10770 ;;		_scale
 10771 ;;		_sprintf
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           
 10775                           	psect	text46
 10776  0034B4                     __ptext46:
 10777                           	opt stack 0
 10778  0034B4                     ___wmul:
 10779                           	opt stack 24
 10780                           
 10781                           ;incstack = 0
 10782  0034B4  5024               	movf	___wmul@multiplier,w,c
 10783  0034B6  0226               	mulwf	___wmul@multiplicand,c
 10784  0034B8  CFF3 F028          	movff	prodl,___wmul@product
 10785  0034BC  CFF4 F029          	movff	prodh,___wmul@product+1
 10786  0034C0  5024               	movf	___wmul@multiplier,w,c
 10787  0034C2  0227               	mulwf	___wmul@multiplicand+1,c
 10788  0034C4  50F3               	movf	prodl,w,c
 10789  0034C6  2629               	addwf	___wmul@product+1,f,c
 10790  0034C8  5025               	movf	___wmul@multiplier+1,w,c
 10791  0034CA  0226               	mulwf	___wmul@multiplicand,c
 10792  0034CC  50F3               	movf	prodl,w,c
 10793  0034CE  2629               	addwf	___wmul@product+1,f,c
 10794  0034D0  C028  F024         	movff	___wmul@product,?___wmul
 10795  0034D4  C029  F025         	movff	___wmul@product+1,?___wmul+1
 10796  0034D8  0012               	return	
 10797  0034DA                     __end_of___wmul:
 10798                           	opt stack 0
 10799                           tosu	equ	0xFFF
 10800                           tosh	equ	0xFFE
 10801                           tosl	equ	0xFFD
 10802                           pclath	equ	0xFFA
 10803                           tblptru	equ	0xFF8
 10804                           tblptrh	equ	0xFF7
 10805                           tblptrl	equ	0xFF6
 10806                           tablat	equ	0xFF5
 10807                           prodh	equ	0xFF4
 10808                           prodl	equ	0xFF3
 10809                           intcon	equ	0xFF2
 10810                           intcon2	equ	0xFF1
 10811                           intcon3	equ	0xFF0
 10812                           indf0	equ	0xFEF
 10813                           postinc0	equ	0xFEE
 10814                           fsr0h	equ	0xFEA
 10815                           fsr0l	equ	0xFE9
 10816                           wreg	equ	0xFE8
 10817                           indf1	equ	0xFE7
 10818                           postinc1	equ	0xFE6
 10819                           postdec1	equ	0xFE5
 10820                           fsr1h	equ	0xFE2
 10821                           fsr1l	equ	0xFE1
 10822                           indf2	equ	0xFDF
 10823                           postinc2	equ	0xFDE
 10824                           postdec2	equ	0xFDD
 10825                           fsr2h	equ	0xFDA
 10826                           fsr2l	equ	0xFD9
 10827                           status	equ	0xFD8
 10828                           
 10829 ;; *************** function ___ftmul *****************
 10830 ;; Defined at:
 10831 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
 10832 ;; Parameters:    Size  Location     Type
 10833 ;;  f1              3   41[COMRAM] float 
 10834 ;;  f2              3   44[COMRAM] float 
 10835 ;; Auto vars:     Size  Location     Type
 10836 ;;  f3_as_produc    3    1[BANK0 ] unsigned um
 10837 ;;  sign            1    5[BANK0 ] unsigned char 
 10838 ;;  cntr            1    4[BANK0 ] unsigned char 
 10839 ;;  exp             1    0[BANK0 ] unsigned char 
 10840 ;; Return value:  Size  Location     Type
 10841 ;;                  3   41[COMRAM] float 
 10842 ;; Registers used:
 10843 ;;		wreg, status,2, status,0, cstack
 10844 ;; Tracked objects:
 10845 ;;		On entry : 0/0
 10846 ;;		On exit  : 0/0
 10847 ;;		Unchanged: 0/0
 10848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10849 ;;      Params:         6       0       0       0       0       0       0       0       0
 10850 ;;      Locals:         0       6       0       0       0       0       0       0       0
 10851 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10852 ;;      Totals:         9       6       0       0       0       0       0       0       0
 10853 ;;Total ram usage:       15 bytes
 10854 ;; Hardware stack levels used:    1
 10855 ;; Hardware stack levels required when called:    3
 10856 ;; This function calls:
 10857 ;;		___ftpack
 10858 ;; This function is called by:
 10859 ;;		_convert_to_degrees
 10860 ;;		_fround
 10861 ;;		_scale
 10862 ;;		_sprintf
 10863 ;;		_strtod
 10864 ;;		_escreve_float_lcd
 10865 ;; This function uses a non-reentrant model
 10866 ;;
 10867                           
 10868                           	psect	text47
 10869  0020E4                     __ptext47:
 10870                           	opt stack 0
 10871  0020E4                     ___ftmul:
 10872                           	opt stack 23
 10873                           
 10874                           ;incstack = 0
 10875  0020E4  C02C  F030         	movff	___ftmul@f1+2,??___ftmul
 10876  0020E8  6A31               	clrf	(??___ftmul+1)& (0+255),c
 10877  0020EA  6A32               	clrf	(??___ftmul+2)& (0+255),c
 10878  0020EC  342B               	rlcf	___ftmul@f1+1,w,c
 10879  0020EE  3630               	rlcf	??___ftmul& (0+255),f,c
 10880  0020F0  E301               	bnc	u10801
 10881  0020F2  8031               	bsf	(??___ftmul+1)& (0+255),0,c
 10882  0020F4                     u10801:
 10883  0020F4  5030               	movf	??___ftmul,w,c
 10884  0020F6  0100               	movlb	0	; () banked
 10885  0020F8  6F60               	movwf	___ftmul@exp& (0+255),b
 10886  0020FA  0100               	movlb	0	; () banked
 10887  0020FC  5160               	movf	___ftmul@exp& (0+255),w,b
 10888  0020FE  A4D8               	btfss	status,2,c
 10889  002100  D007               	goto	l9350
 10890                           
 10891                           ; BSR set to: 0
 10892  002102  0E00               	movlw	0
 10893  002104  6E2A               	movwf	?___ftmul,c
 10894  002106  0E00               	movlw	0
 10895  002108  6E2B               	movwf	?___ftmul+1,c
 10896  00210A  0E00               	movlw	0
 10897  00210C  6E2C               	movwf	?___ftmul+2,c
 10898                           
 10899                           ; BSR set to: 0
 10900  00210E  0012               	return	
 10901  002110                     l9350:
 10902                           
 10903                           ; BSR set to: 0
 10904  002110  C02F  F030         	movff	___ftmul@f2+2,??___ftmul
 10905  002114  6A31               	clrf	(??___ftmul+1)& (0+255),c
 10906  002116  6A32               	clrf	(??___ftmul+2)& (0+255),c
 10907  002118  342E               	rlcf	___ftmul@f2+1,w,c
 10908  00211A  3630               	rlcf	??___ftmul& (0+255),f,c
 10909  00211C  E301               	bnc	u10821
 10910  00211E  8031               	bsf	(??___ftmul+1)& (0+255),0,c
 10911  002120                     u10821:
 10912  002120  5030               	movf	??___ftmul,w,c
 10913  002122  0100               	movlb	0	; () banked
 10914  002124  6F65               	movwf	___ftmul@sign& (0+255),b
 10915  002126  0100               	movlb	0	; () banked
 10916  002128  5165               	movf	___ftmul@sign& (0+255),w,b
 10917  00212A  A4D8               	btfss	status,2,c
 10918  00212C  D007               	goto	l9356
 10919                           
 10920                           ; BSR set to: 0
 10921  00212E  0E00               	movlw	0
 10922  002130  6E2A               	movwf	?___ftmul,c
 10923  002132  0E00               	movlw	0
 10924  002134  6E2B               	movwf	?___ftmul+1,c
 10925  002136  0E00               	movlw	0
 10926  002138  6E2C               	movwf	?___ftmul+2,c
 10927                           
 10928                           ; BSR set to: 0
 10929  00213A  0012               	return	
 10930  00213C                     l9356:
 10931                           
 10932                           ; BSR set to: 0
 10933  00213C  0100               	movlb	0	; () banked
 10934  00213E  5165               	movf	___ftmul@sign& (0+255),w,b
 10935  002140  0F7B               	addlw	123
 10936  002142  0100               	movlb	0	; () banked
 10937  002144  2760               	addwf	___ftmul@exp& (0+255),f,b
 10938                           
 10939                           ; BSR set to: 0
 10940  002146  C02C  F065         	movff	___ftmul@f1+2,___ftmul@sign
 10941  00214A  502F               	movf	___ftmul@f2+2,w,c
 10942  00214C  0100               	movlb	0	; () banked
 10943  00214E  1B65               	xorwf	___ftmul@sign& (0+255),f,b
 10944  002150  0E80               	movlw	128
 10945  002152  0100               	movlb	0	; () banked
 10946  002154  1765               	andwf	___ftmul@sign& (0+255),f,b
 10947                           
 10948                           ; BSR set to: 0
 10949  002156  8E2B               	bsf	___ftmul@f1+1,7,c
 10950                           
 10951                           ; BSR set to: 0
 10952  002158  8E2E               	bsf	___ftmul@f2+1,7,c
 10953                           
 10954                           ; BSR set to: 0
 10955  00215A  0EFF               	movlw	255
 10956  00215C  162D               	andwf	___ftmul@f2,f,c
 10957  00215E  0EFF               	movlw	255
 10958  002160  162E               	andwf	___ftmul@f2+1,f,c
 10959  002162  0E00               	movlw	0
 10960  002164  162F               	andwf	___ftmul@f2+2,f,c
 10961                           
 10962                           ; BSR set to: 0
 10963  002166  0E00               	movlw	0
 10964  002168  0100               	movlb	0	; () banked
 10965  00216A  6F61               	movwf	___ftmul@f3_as_product& (0+255),b
 10966  00216C  0E00               	movlw	0
 10967  00216E  0100               	movlb	0	; () banked
 10968  002170  6F62               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 10969  002172  0E00               	movlw	0
 10970  002174  0100               	movlb	0	; () banked
 10971  002176  6F63               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 10972                           
 10973                           ; BSR set to: 0
 10974  002178  0E07               	movlw	7
 10975  00217A  0100               	movlb	0	; () banked
 10976  00217C  6F64               	movwf	___ftmul@cntr& (0+255),b
 10977  00217E                     l9370:
 10978                           
 10979                           ; BSR set to: 0
 10980  00217E  A02A               	btfss	___ftmul@f1,0,c
 10981  002180  D009               	goto	l9374
 10982                           
 10983                           ; BSR set to: 0
 10984  002182  502D               	movf	___ftmul@f2,w,c
 10985  002184  0100               	movlb	0	; () banked
 10986  002186  2761               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10987  002188  502E               	movf	___ftmul@f2+1,w,c
 10988  00218A  0100               	movlb	0	; () banked
 10989  00218C  2362               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10990  00218E  502F               	movf	___ftmul@f2+2,w,c
 10991  002190  0100               	movlb	0	; () banked
 10992  002192  2363               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10993  002194                     l9374:
 10994                           
 10995                           ; BSR set to: 0
 10996  002194  90D8               	bcf	status,0,c
 10997  002196  322C               	rrcf	___ftmul@f1+2,f,c
 10998  002198  322B               	rrcf	___ftmul@f1+1,f,c
 10999  00219A  322A               	rrcf	___ftmul@f1,f,c
 11000  00219C  90D8               	bcf	status,0,c
 11001  00219E  362D               	rlcf	___ftmul@f2,f,c
 11002  0021A0  362E               	rlcf	___ftmul@f2+1,f,c
 11003  0021A2  362F               	rlcf	___ftmul@f2+2,f,c
 11004                           
 11005                           ; BSR set to: 0
 11006  0021A4  0100               	movlb	0	; () banked
 11007  0021A6  2F64               	decfsz	___ftmul@cntr& (0+255),f,b
 11008  0021A8  D7EA               	goto	l9370
 11009                           
 11010                           ; BSR set to: 0
 11011                           
 11012                           ; BSR set to: 0
 11013  0021AA  0E09               	movlw	9
 11014  0021AC  0100               	movlb	0	; () banked
 11015  0021AE  6F64               	movwf	___ftmul@cntr& (0+255),b
 11016  0021B0                     l9380:
 11017                           
 11018                           ; BSR set to: 0
 11019  0021B0  A02A               	btfss	___ftmul@f1,0,c
 11020  0021B2  D009               	goto	l9384
 11021                           
 11022                           ; BSR set to: 0
 11023  0021B4  502D               	movf	___ftmul@f2,w,c
 11024  0021B6  0100               	movlb	0	; () banked
 11025  0021B8  2761               	addwf	___ftmul@f3_as_product& (0+255),f,b
 11026  0021BA  502E               	movf	___ftmul@f2+1,w,c
 11027  0021BC  0100               	movlb	0	; () banked
 11028  0021BE  2362               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 11029  0021C0  502F               	movf	___ftmul@f2+2,w,c
 11030  0021C2  0100               	movlb	0	; () banked
 11031  0021C4  2363               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 11032  0021C6                     l9384:
 11033                           
 11034                           ; BSR set to: 0
 11035  0021C6  90D8               	bcf	status,0,c
 11036  0021C8  322C               	rrcf	___ftmul@f1+2,f,c
 11037  0021CA  322B               	rrcf	___ftmul@f1+1,f,c
 11038  0021CC  322A               	rrcf	___ftmul@f1,f,c
 11039  0021CE  0100               	movlb	0	; () banked
 11040  0021D0  90D8               	bcf	status,0,c
 11041  0021D2  3363               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 11042  0021D4  3362               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 11043  0021D6  3361               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 11044                           
 11045                           ; BSR set to: 0
 11046  0021D8  0100               	movlb	0	; () banked
 11047  0021DA  2F64               	decfsz	___ftmul@cntr& (0+255),f,b
 11048  0021DC  D7E9               	goto	l9380
 11049                           
 11050                           ; BSR set to: 0
 11051                           
 11052                           ; BSR set to: 0
 11053  0021DE  C061  F016         	movff	___ftmul@f3_as_product,___ftpack@arg
 11054  0021E2  C062  F017         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 11055  0021E6  C063  F018         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 11056  0021EA  C060  F019         	movff	___ftmul@exp,___ftpack@exp
 11057  0021EE  C065  F01A         	movff	___ftmul@sign,___ftpack@sign
 11058  0021F2  ECC9  F013         	call	___ftpack	;wreg free
 11059  0021F6  C016  F02A         	movff	?___ftpack,?___ftmul
 11060  0021FA  C017  F02B         	movff	?___ftpack+1,?___ftmul+1
 11061  0021FE  C018  F02C         	movff	?___ftpack+2,?___ftmul+2
 11062  002202  0012               	return	
 11063  002204                     __end_of___ftmul:
 11064                           	opt stack 0
 11065                           tosu	equ	0xFFF
 11066                           tosh	equ	0xFFE
 11067                           tosl	equ	0xFFD
 11068                           pclath	equ	0xFFA
 11069                           tblptru	equ	0xFF8
 11070                           tblptrh	equ	0xFF7
 11071                           tblptrl	equ	0xFF6
 11072                           tablat	equ	0xFF5
 11073                           prodh	equ	0xFF4
 11074                           prodl	equ	0xFF3
 11075                           intcon	equ	0xFF2
 11076                           intcon2	equ	0xFF1
 11077                           intcon3	equ	0xFF0
 11078                           indf0	equ	0xFEF
 11079                           postinc0	equ	0xFEE
 11080                           fsr0h	equ	0xFEA
 11081                           fsr0l	equ	0xFE9
 11082                           wreg	equ	0xFE8
 11083                           indf1	equ	0xFE7
 11084                           postinc1	equ	0xFE6
 11085                           postdec1	equ	0xFE5
 11086                           fsr1h	equ	0xFE2
 11087                           fsr1l	equ	0xFE1
 11088                           indf2	equ	0xFDF
 11089                           postinc2	equ	0xFDE
 11090                           postdec2	equ	0xFDD
 11091                           fsr2h	equ	0xFDA
 11092                           fsr2l	equ	0xFD9
 11093                           status	equ	0xFD8
 11094                           
 11095 ;; *************** function ___awmod *****************
 11096 ;; Defined at:
 11097 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
 11098 ;; Parameters:    Size  Location     Type
 11099 ;;  dividend        2   21[COMRAM] int 
 11100 ;;  divisor         2   23[COMRAM] int 
 11101 ;; Auto vars:     Size  Location     Type
 11102 ;;  sign            1   26[COMRAM] unsigned char 
 11103 ;;  counter         1   25[COMRAM] unsigned char 
 11104 ;; Return value:  Size  Location     Type
 11105 ;;                  2   21[COMRAM] int 
 11106 ;; Registers used:
 11107 ;;		wreg, status,2, status,0
 11108 ;; Tracked objects:
 11109 ;;		On entry : 0/0
 11110 ;;		On exit  : 0/0
 11111 ;;		Unchanged: 0/0
 11112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11113 ;;      Params:         4       0       0       0       0       0       0       0       0
 11114 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11115 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11116 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11117 ;;Total ram usage:        6 bytes
 11118 ;; Hardware stack levels used:    1
 11119 ;; Hardware stack levels required when called:    2
 11120 ;; This function calls:
 11121 ;;		Nothing
 11122 ;; This function is called by:
 11123 ;;		_fround
 11124 ;;		_scale
 11125 ;; This function uses a non-reentrant model
 11126 ;;
 11127                           
 11128                           	psect	text48
 11129  002F56                     __ptext48:
 11130                           	opt stack 0
 11131  002F56                     ___awmod:
 11132                           	opt stack 24
 11133                           
 11134                           ;incstack = 0
 11135  002F56  0E00               	movlw	0
 11136  002F58  6E1B               	movwf	___awmod@sign,c
 11137  002F5A  AE17               	btfss	___awmod@dividend+1,7,c
 11138  002F5C  D006               	goto	l9458
 11139  002F5E  6C16               	negf	___awmod@dividend,c
 11140  002F60  1E17               	comf	___awmod@dividend+1,f,c
 11141  002F62  B0D8               	btfsc	status,0,c
 11142  002F64  2A17               	incf	___awmod@dividend+1,f,c
 11143  002F66  0E01               	movlw	1
 11144  002F68  6E1B               	movwf	___awmod@sign,c
 11145  002F6A                     l9458:
 11146  002F6A  AE19               	btfss	___awmod@divisor+1,7,c
 11147  002F6C  D004               	goto	l9462
 11148  002F6E  6C18               	negf	___awmod@divisor,c
 11149  002F70  1E19               	comf	___awmod@divisor+1,f,c
 11150  002F72  B0D8               	btfsc	status,0,c
 11151  002F74  2A19               	incf	___awmod@divisor+1,f,c
 11152  002F76                     l9462:
 11153  002F76  5018               	movf	___awmod@divisor,w,c
 11154  002F78  1019               	iorwf	___awmod@divisor+1,w,c
 11155  002F7A  B4D8               	btfsc	status,2,c
 11156  002F7C  D018               	goto	l9478
 11157  002F7E  0E01               	movlw	1
 11158  002F80  6E1A               	movwf	___awmod@counter,c
 11159  002F82  D004               	goto	l9468
 11160  002F84                     l9466:
 11161  002F84  90D8               	bcf	status,0,c
 11162  002F86  3618               	rlcf	___awmod@divisor,f,c
 11163  002F88  3619               	rlcf	___awmod@divisor+1,f,c
 11164  002F8A  2A1A               	incf	___awmod@counter,f,c
 11165  002F8C                     l9468:
 11166  002F8C  AE19               	btfss	___awmod@divisor+1,7,c
 11167  002F8E  D7FA               	goto	l9466
 11168  002F90                     l9470:
 11169  002F90  5018               	movf	___awmod@divisor,w,c
 11170  002F92  5C16               	subwf	___awmod@dividend,w,c
 11171  002F94  5019               	movf	___awmod@divisor+1,w,c
 11172  002F96  5817               	subwfb	___awmod@dividend+1,w,c
 11173  002F98  A0D8               	btfss	status,0,c
 11174  002F9A  D004               	goto	l9474
 11175  002F9C  5018               	movf	___awmod@divisor,w,c
 11176  002F9E  5E16               	subwf	___awmod@dividend,f,c
 11177  002FA0  5019               	movf	___awmod@divisor+1,w,c
 11178  002FA2  5A17               	subwfb	___awmod@dividend+1,f,c
 11179  002FA4                     l9474:
 11180  002FA4  90D8               	bcf	status,0,c
 11181  002FA6  3219               	rrcf	___awmod@divisor+1,f,c
 11182  002FA8  3218               	rrcf	___awmod@divisor,f,c
 11183  002FAA  2E1A               	decfsz	___awmod@counter,f,c
 11184  002FAC  D7F1               	goto	l9470
 11185  002FAE                     l9478:
 11186  002FAE  501B               	movf	___awmod@sign,w,c
 11187  002FB0  B4D8               	btfsc	status,2,c
 11188  002FB2  D004               	goto	l9482
 11189  002FB4  6C16               	negf	___awmod@dividend,c
 11190  002FB6  1E17               	comf	___awmod@dividend+1,f,c
 11191  002FB8  B0D8               	btfsc	status,0,c
 11192  002FBA  2A17               	incf	___awmod@dividend+1,f,c
 11193  002FBC                     l9482:
 11194  002FBC  C016  F016         	movff	___awmod@dividend,?___awmod
 11195  002FC0  C017  F017         	movff	___awmod@dividend+1,?___awmod+1
 11196  002FC4  0012               	return	
 11197  002FC6                     __end_of___awmod:
 11198                           	opt stack 0
 11199                           tosu	equ	0xFFF
 11200                           tosh	equ	0xFFE
 11201                           tosl	equ	0xFFD
 11202                           pclath	equ	0xFFA
 11203                           tblptru	equ	0xFF8
 11204                           tblptrh	equ	0xFF7
 11205                           tblptrl	equ	0xFF6
 11206                           tablat	equ	0xFF5
 11207                           prodh	equ	0xFF4
 11208                           prodl	equ	0xFF3
 11209                           intcon	equ	0xFF2
 11210                           intcon2	equ	0xFF1
 11211                           intcon3	equ	0xFF0
 11212                           indf0	equ	0xFEF
 11213                           postinc0	equ	0xFEE
 11214                           fsr0h	equ	0xFEA
 11215                           fsr0l	equ	0xFE9
 11216                           wreg	equ	0xFE8
 11217                           indf1	equ	0xFE7
 11218                           postinc1	equ	0xFE6
 11219                           postdec1	equ	0xFE5
 11220                           fsr1h	equ	0xFE2
 11221                           fsr1l	equ	0xFE1
 11222                           indf2	equ	0xFDF
 11223                           postinc2	equ	0xFDE
 11224                           postdec2	equ	0xFDD
 11225                           fsr2h	equ	0xFDA
 11226                           fsr2l	equ	0xFD9
 11227                           status	equ	0xFD8
 11228                           
 11229 ;; *************** function ___awdiv *****************
 11230 ;; Defined at:
 11231 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 11232 ;; Parameters:    Size  Location     Type
 11233 ;;  dividend        2   27[COMRAM] int 
 11234 ;;  divisor         2   29[COMRAM] int 
 11235 ;; Auto vars:     Size  Location     Type
 11236 ;;  quotient        2   33[COMRAM] int 
 11237 ;;  sign            1   32[COMRAM] unsigned char 
 11238 ;;  counter         1   31[COMRAM] unsigned char 
 11239 ;; Return value:  Size  Location     Type
 11240 ;;                  2   27[COMRAM] int 
 11241 ;; Registers used:
 11242 ;;		wreg, status,2, status,0
 11243 ;; Tracked objects:
 11244 ;;		On entry : 0/0
 11245 ;;		On exit  : 0/0
 11246 ;;		Unchanged: 0/0
 11247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11248 ;;      Params:         4       0       0       0       0       0       0       0       0
 11249 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11250 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11251 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11252 ;;Total ram usage:        8 bytes
 11253 ;; Hardware stack levels used:    1
 11254 ;; Hardware stack levels required when called:    2
 11255 ;; This function calls:
 11256 ;;		Nothing
 11257 ;; This function is called by:
 11258 ;;		_fround
 11259 ;;		_scale
 11260 ;;		_sprintf
 11261 ;; This function uses a non-reentrant model
 11262 ;;
 11263                           
 11264                           	psect	text49
 11265  002C7A                     __ptext49:
 11266                           	opt stack 0
 11267  002C7A                     ___awdiv:
 11268                           	opt stack 24
 11269                           
 11270                           ;incstack = 0
 11271  002C7A  0E00               	movlw	0
 11272  002C7C  6E21               	movwf	___awdiv@sign,c
 11273  002C7E  AE1F               	btfss	___awdiv@divisor+1,7,c
 11274  002C80  D006               	goto	l9414
 11275  002C82  6C1E               	negf	___awdiv@divisor,c
 11276  002C84  1E1F               	comf	___awdiv@divisor+1,f,c
 11277  002C86  B0D8               	btfsc	status,0,c
 11278  002C88  2A1F               	incf	___awdiv@divisor+1,f,c
 11279  002C8A  0E01               	movlw	1
 11280  002C8C  6E21               	movwf	___awdiv@sign,c
 11281  002C8E                     l9414:
 11282  002C8E  AE1D               	btfss	___awdiv@dividend+1,7,c
 11283  002C90  D006               	goto	l9420
 11284  002C92  6C1C               	negf	___awdiv@dividend,c
 11285  002C94  1E1D               	comf	___awdiv@dividend+1,f,c
 11286  002C96  B0D8               	btfsc	status,0,c
 11287  002C98  2A1D               	incf	___awdiv@dividend+1,f,c
 11288  002C9A  0E01               	movlw	1
 11289  002C9C  1A21               	xorwf	___awdiv@sign,f,c
 11290  002C9E                     l9420:
 11291  002C9E  0E00               	movlw	0
 11292  002CA0  6E23               	movwf	___awdiv@quotient+1,c
 11293  002CA2  0E00               	movlw	0
 11294  002CA4  6E22               	movwf	___awdiv@quotient,c
 11295  002CA6  501E               	movf	___awdiv@divisor,w,c
 11296  002CA8  101F               	iorwf	___awdiv@divisor+1,w,c
 11297  002CAA  B4D8               	btfsc	status,2,c
 11298  002CAC  D01C               	goto	l9442
 11299  002CAE  0E01               	movlw	1
 11300  002CB0  6E20               	movwf	___awdiv@counter,c
 11301  002CB2  D004               	goto	l9428
 11302  002CB4                     l9426:
 11303  002CB4  90D8               	bcf	status,0,c
 11304  002CB6  361E               	rlcf	___awdiv@divisor,f,c
 11305  002CB8  361F               	rlcf	___awdiv@divisor+1,f,c
 11306  002CBA  2A20               	incf	___awdiv@counter,f,c
 11307  002CBC                     l9428:
 11308  002CBC  AE1F               	btfss	___awdiv@divisor+1,7,c
 11309  002CBE  D7FA               	goto	l9426
 11310  002CC0                     l9430:
 11311  002CC0  90D8               	bcf	status,0,c
 11312  002CC2  3622               	rlcf	___awdiv@quotient,f,c
 11313  002CC4  3623               	rlcf	___awdiv@quotient+1,f,c
 11314  002CC6  501E               	movf	___awdiv@divisor,w,c
 11315  002CC8  5C1C               	subwf	___awdiv@dividend,w,c
 11316  002CCA  501F               	movf	___awdiv@divisor+1,w,c
 11317  002CCC  581D               	subwfb	___awdiv@dividend+1,w,c
 11318  002CCE  A0D8               	btfss	status,0,c
 11319  002CD0  D005               	goto	l9438
 11320  002CD2  501E               	movf	___awdiv@divisor,w,c
 11321  002CD4  5E1C               	subwf	___awdiv@dividend,f,c
 11322  002CD6  501F               	movf	___awdiv@divisor+1,w,c
 11323  002CD8  5A1D               	subwfb	___awdiv@dividend+1,f,c
 11324  002CDA  8022               	bsf	___awdiv@quotient,0,c
 11325  002CDC                     l9438:
 11326  002CDC  90D8               	bcf	status,0,c
 11327  002CDE  321F               	rrcf	___awdiv@divisor+1,f,c
 11328  002CE0  321E               	rrcf	___awdiv@divisor,f,c
 11329  002CE2  2E20               	decfsz	___awdiv@counter,f,c
 11330  002CE4  D7ED               	goto	l9430
 11331  002CE6                     l9442:
 11332  002CE6  5021               	movf	___awdiv@sign,w,c
 11333  002CE8  B4D8               	btfsc	status,2,c
 11334  002CEA  D004               	goto	l9446
 11335  002CEC  6C22               	negf	___awdiv@quotient,c
 11336  002CEE  1E23               	comf	___awdiv@quotient+1,f,c
 11337  002CF0  B0D8               	btfsc	status,0,c
 11338  002CF2  2A23               	incf	___awdiv@quotient+1,f,c
 11339  002CF4                     l9446:
 11340  002CF4  C022  F01C         	movff	___awdiv@quotient,?___awdiv
 11341  002CF8  C023  F01D         	movff	___awdiv@quotient+1,?___awdiv+1
 11342  002CFC  0012               	return	
 11343  002CFE                     __end_of___awdiv:
 11344                           	opt stack 0
 11345                           tosu	equ	0xFFF
 11346                           tosh	equ	0xFFE
 11347                           tosl	equ	0xFFD
 11348                           pclath	equ	0xFFA
 11349                           tblptru	equ	0xFF8
 11350                           tblptrh	equ	0xFF7
 11351                           tblptrl	equ	0xFF6
 11352                           tablat	equ	0xFF5
 11353                           prodh	equ	0xFF4
 11354                           prodl	equ	0xFF3
 11355                           intcon	equ	0xFF2
 11356                           intcon2	equ	0xFF1
 11357                           intcon3	equ	0xFF0
 11358                           indf0	equ	0xFEF
 11359                           postinc0	equ	0xFEE
 11360                           fsr0h	equ	0xFEA
 11361                           fsr0l	equ	0xFE9
 11362                           wreg	equ	0xFE8
 11363                           indf1	equ	0xFE7
 11364                           postinc1	equ	0xFE6
 11365                           postdec1	equ	0xFE5
 11366                           fsr1h	equ	0xFE2
 11367                           fsr1l	equ	0xFE1
 11368                           indf2	equ	0xFDF
 11369                           postinc2	equ	0xFDE
 11370                           postdec2	equ	0xFDD
 11371                           fsr2h	equ	0xFDA
 11372                           fsr2l	equ	0xFD9
 11373                           status	equ	0xFD8
 11374                           
 11375 ;; *************** function __tdiv_to_l_ *****************
 11376 ;; Defined at:
 11377 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdivl.c"
 11378 ;; Parameters:    Size  Location     Type
 11379 ;;  f1              3   21[COMRAM] float 
 11380 ;;  f2              3   24[COMRAM] float 
 11381 ;; Auto vars:     Size  Location     Type
 11382 ;;  quot            4   30[COMRAM] unsigned long 
 11383 ;;  exp1            1   35[COMRAM] unsigned char 
 11384 ;;  cntr            1   34[COMRAM] unsigned char 
 11385 ;; Return value:  Size  Location     Type
 11386 ;;                  4   21[COMRAM] unsigned long 
 11387 ;; Registers used:
 11388 ;;		wreg, status,2, status,0
 11389 ;; Tracked objects:
 11390 ;;		On entry : 0/0
 11391 ;;		On exit  : 0/0
 11392 ;;		Unchanged: 0/0
 11393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11394 ;;      Params:         6       0       0       0       0       0       0       0       0
 11395 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11396 ;;      Temps:          3       0       0       0       0       0       0       0       0
 11397 ;;      Totals:        15       0       0       0       0       0       0       0       0
 11398 ;;Total ram usage:       15 bytes
 11399 ;; Hardware stack levels used:    1
 11400 ;; Hardware stack levels required when called:    2
 11401 ;; This function calls:
 11402 ;;		Nothing
 11403 ;; This function is called by:
 11404 ;;		_sprintf
 11405 ;; This function uses a non-reentrant model
 11406 ;;
 11407                           
 11408                           	psect	text50
 11409  001B12                     __ptext50:
 11410                           	opt stack 0
 11411  001B12                     __tdiv_to_l_:
 11412                           	opt stack 25
 11413                           
 11414                           ;incstack = 0
 11415  001B12  C018  F01C         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 11416  001B16  6A1D               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 11417  001B18  6A1E               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 11418  001B1A  3417               	rlcf	__tdiv_to_l_@f1+1,w,c
 11419  001B1C  361C               	rlcf	??__tdiv_to_l_& (0+255),f,c
 11420  001B1E  E301               	bnc	u11161
 11421  001B20  801D               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 11422  001B22                     u11161:
 11423  001B22  501C               	movf	??__tdiv_to_l_,w,c
 11424  001B24  6E24               	movwf	__tdiv_to_l_@exp1,c
 11425  001B26  5024               	movf	__tdiv_to_l_@exp1,w,c
 11426  001B28  A4D8               	btfss	status,2,c
 11427  001B2A  D009               	goto	l9594
 11428  001B2C  0E00               	movlw	0
 11429  001B2E  6E16               	movwf	?__tdiv_to_l_,c
 11430  001B30  0E00               	movlw	0
 11431  001B32  6E17               	movwf	?__tdiv_to_l_+1,c
 11432  001B34  0E00               	movlw	0
 11433  001B36  6E18               	movwf	?__tdiv_to_l_+2,c
 11434  001B38  0E00               	movlw	0
 11435  001B3A  6E19               	movwf	?__tdiv_to_l_+3,c
 11436  001B3C  0012               	return	
 11437  001B3E                     l9594:
 11438  001B3E  C01B  F01C         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 11439  001B42  6A1D               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 11440  001B44  6A1E               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 11441  001B46  341A               	rlcf	__tdiv_to_l_@f2+1,w,c
 11442  001B48  361C               	rlcf	??__tdiv_to_l_& (0+255),f,c
 11443  001B4A  E301               	bnc	u11181
 11444  001B4C  801D               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 11445  001B4E                     u11181:
 11446  001B4E  501C               	movf	??__tdiv_to_l_,w,c
 11447  001B50  6E23               	movwf	__tdiv_to_l_@cntr,c
 11448  001B52  5023               	movf	__tdiv_to_l_@cntr,w,c
 11449  001B54  A4D8               	btfss	status,2,c
 11450  001B56  D009               	goto	l9600
 11451  001B58  0E00               	movlw	0
 11452  001B5A  6E16               	movwf	?__tdiv_to_l_,c
 11453  001B5C  0E00               	movlw	0
 11454  001B5E  6E17               	movwf	?__tdiv_to_l_+1,c
 11455  001B60  0E00               	movlw	0
 11456  001B62  6E18               	movwf	?__tdiv_to_l_+2,c
 11457  001B64  0E00               	movlw	0
 11458  001B66  6E19               	movwf	?__tdiv_to_l_+3,c
 11459  001B68  0012               	return	
 11460  001B6A                     l9600:
 11461  001B6A  8E17               	bsf	__tdiv_to_l_@f1+1,7,c
 11462  001B6C  0EFF               	movlw	255
 11463  001B6E  1616               	andwf	__tdiv_to_l_@f1,f,c
 11464  001B70  0EFF               	movlw	255
 11465  001B72  1617               	andwf	__tdiv_to_l_@f1+1,f,c
 11466  001B74  0E00               	movlw	0
 11467  001B76  1618               	andwf	__tdiv_to_l_@f1+2,f,c
 11468  001B78  8E1A               	bsf	__tdiv_to_l_@f2+1,7,c
 11469  001B7A  0EFF               	movlw	255
 11470  001B7C  1619               	andwf	__tdiv_to_l_@f2,f,c
 11471  001B7E  0EFF               	movlw	255
 11472  001B80  161A               	andwf	__tdiv_to_l_@f2+1,f,c
 11473  001B82  0E00               	movlw	0
 11474  001B84  161B               	andwf	__tdiv_to_l_@f2+2,f,c
 11475  001B86  0E00               	movlw	0
 11476  001B88  6E1F               	movwf	__tdiv_to_l_@quot,c
 11477  001B8A  0E00               	movlw	0
 11478  001B8C  6E20               	movwf	__tdiv_to_l_@quot+1,c
 11479  001B8E  0E00               	movlw	0
 11480  001B90  6E21               	movwf	__tdiv_to_l_@quot+2,c
 11481  001B92  0E00               	movlw	0
 11482  001B94  6E22               	movwf	__tdiv_to_l_@quot+3,c
 11483  001B96  0E7F               	movlw	127
 11484  001B98  5E24               	subwf	__tdiv_to_l_@exp1,f,c
 11485  001B9A  5023               	movf	__tdiv_to_l_@cntr,w,c
 11486  001B9C  0F98               	addlw	152
 11487  001B9E  5E24               	subwf	__tdiv_to_l_@exp1,f,c
 11488  001BA0  0E18               	movlw	24
 11489  001BA2  6E23               	movwf	__tdiv_to_l_@cntr,c
 11490  001BA4                     l1727:
 11491  001BA4  90D8               	bcf	status,0,c
 11492  001BA6  361F               	rlcf	__tdiv_to_l_@quot,f,c
 11493  001BA8  3620               	rlcf	__tdiv_to_l_@quot+1,f,c
 11494  001BAA  3621               	rlcf	__tdiv_to_l_@quot+2,f,c
 11495  001BAC  3622               	rlcf	__tdiv_to_l_@quot+3,f,c
 11496  001BAE  5019               	movf	__tdiv_to_l_@f2,w,c
 11497  001BB0  5C16               	subwf	__tdiv_to_l_@f1,w,c
 11498  001BB2  501A               	movf	__tdiv_to_l_@f2+1,w,c
 11499  001BB4  5817               	subwfb	__tdiv_to_l_@f1+1,w,c
 11500  001BB6  501B               	movf	__tdiv_to_l_@f2+2,w,c
 11501  001BB8  5818               	subwfb	__tdiv_to_l_@f1+2,w,c
 11502  001BBA  A0D8               	btfss	status,0,c
 11503  001BBC  D007               	goto	l1728
 11504  001BBE  5019               	movf	__tdiv_to_l_@f2,w,c
 11505  001BC0  5E16               	subwf	__tdiv_to_l_@f1,f,c
 11506  001BC2  501A               	movf	__tdiv_to_l_@f2+1,w,c
 11507  001BC4  5A17               	subwfb	__tdiv_to_l_@f1+1,f,c
 11508  001BC6  501B               	movf	__tdiv_to_l_@f2+2,w,c
 11509  001BC8  5A18               	subwfb	__tdiv_to_l_@f1+2,f,c
 11510  001BCA  801F               	bsf	__tdiv_to_l_@quot,0,c
 11511  001BCC                     l1728:
 11512  001BCC  90D8               	bcf	status,0,c
 11513  001BCE  3616               	rlcf	__tdiv_to_l_@f1,f,c
 11514  001BD0  3617               	rlcf	__tdiv_to_l_@f1+1,f,c
 11515  001BD2  3618               	rlcf	__tdiv_to_l_@f1+2,f,c
 11516  001BD4  2E23               	decfsz	__tdiv_to_l_@cntr,f,c
 11517  001BD6  D7E6               	goto	l1727
 11518  001BD8  AE24               	btfss	__tdiv_to_l_@exp1,7,c
 11519  001BDA  D016               	goto	l9634
 11520  001BDC  5024               	movf	__tdiv_to_l_@exp1,w,c
 11521  001BDE  0A80               	xorlw	128
 11522  001BE0  0F97               	addlw	151
 11523  001BE2  B0D8               	btfsc	status,0,c
 11524  001BE4  D009               	goto	l9630
 11525  001BE6  0E00               	movlw	0
 11526  001BE8  6E16               	movwf	?__tdiv_to_l_,c
 11527  001BEA  0E00               	movlw	0
 11528  001BEC  6E17               	movwf	?__tdiv_to_l_+1,c
 11529  001BEE  0E00               	movlw	0
 11530  001BF0  6E18               	movwf	?__tdiv_to_l_+2,c
 11531  001BF2  0E00               	movlw	0
 11532  001BF4  6E19               	movwf	?__tdiv_to_l_+3,c
 11533  001BF6  0012               	return	
 11534  001BF8                     l9630:
 11535  001BF8  90D8               	bcf	status,0,c
 11536  001BFA  3222               	rrcf	__tdiv_to_l_@quot+3,f,c
 11537  001BFC  3221               	rrcf	__tdiv_to_l_@quot+2,f,c
 11538  001BFE  3220               	rrcf	__tdiv_to_l_@quot+1,f,c
 11539  001C00  321F               	rrcf	__tdiv_to_l_@quot,f,c
 11540  001C02  3E24               	incfsz	__tdiv_to_l_@exp1,f,c
 11541  001C04  D7F9               	goto	l9630
 11542  001C06  D015               	goto	l1734
 11543  001C08                     l9634:
 11544  001C08  0E17               	movlw	23
 11545  001C0A  6424               	cpfsgt	__tdiv_to_l_@exp1,c
 11546  001C0C  D00F               	goto	l9642
 11547  001C0E  0E00               	movlw	0
 11548  001C10  6E16               	movwf	?__tdiv_to_l_,c
 11549  001C12  0E00               	movlw	0
 11550  001C14  6E17               	movwf	?__tdiv_to_l_+1,c
 11551  001C16  0E00               	movlw	0
 11552  001C18  6E18               	movwf	?__tdiv_to_l_+2,c
 11553  001C1A  0E00               	movlw	0
 11554  001C1C  6E19               	movwf	?__tdiv_to_l_+3,c
 11555  001C1E  0012               	return	
 11556  001C20                     l9640:
 11557  001C20  90D8               	bcf	status,0,c
 11558  001C22  361F               	rlcf	__tdiv_to_l_@quot,f,c
 11559  001C24  3620               	rlcf	__tdiv_to_l_@quot+1,f,c
 11560  001C26  3621               	rlcf	__tdiv_to_l_@quot+2,f,c
 11561  001C28  3622               	rlcf	__tdiv_to_l_@quot+3,f,c
 11562  001C2A  0624               	decf	__tdiv_to_l_@exp1,f,c
 11563  001C2C                     l9642:
 11564  001C2C  5024               	movf	__tdiv_to_l_@exp1,w,c
 11565  001C2E  A4D8               	btfss	status,2,c
 11566  001C30  D7F7               	goto	l9640
 11567  001C32                     l1734:
 11568  001C32  C01F  F016         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 11569  001C36  C020  F017         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 11570  001C3A  C021  F018         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 11571  001C3E  C022  F019         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 11572  001C42  0012               	return		;funcret
 11573  001C44                     __end_of__tdiv_to_l_:
 11574                           	opt stack 0
 11575                           tosu	equ	0xFFF
 11576                           tosh	equ	0xFFE
 11577                           tosl	equ	0xFFD
 11578                           pclath	equ	0xFFA
 11579                           tblptru	equ	0xFF8
 11580                           tblptrh	equ	0xFF7
 11581                           tblptrl	equ	0xFF6
 11582                           tablat	equ	0xFF5
 11583                           prodh	equ	0xFF4
 11584                           prodl	equ	0xFF3
 11585                           intcon	equ	0xFF2
 11586                           intcon2	equ	0xFF1
 11587                           intcon3	equ	0xFF0
 11588                           indf0	equ	0xFEF
 11589                           postinc0	equ	0xFEE
 11590                           fsr0h	equ	0xFEA
 11591                           fsr0l	equ	0xFE9
 11592                           wreg	equ	0xFE8
 11593                           indf1	equ	0xFE7
 11594                           postinc1	equ	0xFE6
 11595                           postdec1	equ	0xFE5
 11596                           fsr1h	equ	0xFE2
 11597                           fsr1l	equ	0xFE1
 11598                           indf2	equ	0xFDF
 11599                           postinc2	equ	0xFDE
 11600                           postdec2	equ	0xFDD
 11601                           fsr2h	equ	0xFDA
 11602                           fsr2l	equ	0xFD9
 11603                           status	equ	0xFD8
 11604                           
 11605 ;; *************** function __div_to_l_ *****************
 11606 ;; Defined at:
 11607 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fldivl.c"
 11608 ;; Parameters:    Size  Location     Type
 11609 ;;  f1              3   21[COMRAM] unsigned long 
 11610 ;;  f2              3   24[COMRAM] unsigned long 
 11611 ;; Auto vars:     Size  Location     Type
 11612 ;;  quot            4   27[COMRAM] unsigned long 
 11613 ;;  exp1            1   32[COMRAM] unsigned char 
 11614 ;;  cntr            1   31[COMRAM] unsigned char 
 11615 ;; Return value:  Size  Location     Type
 11616 ;;                  4   21[COMRAM] unsigned long 
 11617 ;; Registers used:
 11618 ;;		wreg, status,2, status,0
 11619 ;; Tracked objects:
 11620 ;;		On entry : 0/0
 11621 ;;		On exit  : 0/0
 11622 ;;		Unchanged: 0/0
 11623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11624 ;;      Params:         6       0       0       0       0       0       0       0       0
 11625 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11626 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11627 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11628 ;;Total ram usage:       12 bytes
 11629 ;; Hardware stack levels used:    1
 11630 ;; Hardware stack levels required when called:    2
 11631 ;; This function calls:
 11632 ;;		Nothing
 11633 ;; This function is called by:
 11634 ;;		_sprintf
 11635 ;; This function uses a non-reentrant model
 11636 ;;
 11637                           
 11638                           	psect	text51
 11639  001E98                     __ptext51:
 11640                           	opt stack 0
 11641  001E98                     __div_to_l_:
 11642                           	opt stack 25
 11643                           
 11644                           ;incstack = 0
 11645  001E98  3418               	rlcf	__div_to_l_@f1+2,w,c
 11646  001E9A  3419               	rlcf	__div_to_l_@f1+3,w,c
 11647  001E9C  6E21               	movwf	__div_to_l_@exp1,c
 11648  001E9E  5021               	movf	__div_to_l_@exp1,w,c
 11649  001EA0  A4D8               	btfss	status,2,c
 11650  001EA2  D009               	goto	l9650
 11651  001EA4  0E00               	movlw	0
 11652  001EA6  6E16               	movwf	?__div_to_l_,c
 11653  001EA8  0E00               	movlw	0
 11654  001EAA  6E17               	movwf	?__div_to_l_+1,c
 11655  001EAC  0E00               	movlw	0
 11656  001EAE  6E18               	movwf	?__div_to_l_+2,c
 11657  001EB0  0E00               	movlw	0
 11658  001EB2  6E19               	movwf	?__div_to_l_+3,c
 11659  001EB4  0012               	return	
 11660  001EB6                     l9650:
 11661  001EB6  341B               	rlcf	__div_to_l_@f2+2,w,c
 11662  001EB8  341C               	rlcf	__div_to_l_@f2+3,w,c
 11663  001EBA  6E20               	movwf	__div_to_l_@cntr,c
 11664  001EBC  5020               	movf	__div_to_l_@cntr,w,c
 11665  001EBE  A4D8               	btfss	status,2,c
 11666  001EC0  D009               	goto	l9656
 11667  001EC2  0E00               	movlw	0
 11668  001EC4  6E16               	movwf	?__div_to_l_,c
 11669  001EC6  0E00               	movlw	0
 11670  001EC8  6E17               	movwf	?__div_to_l_+1,c
 11671  001ECA  0E00               	movlw	0
 11672  001ECC  6E18               	movwf	?__div_to_l_+2,c
 11673  001ECE  0E00               	movlw	0
 11674  001ED0  6E19               	movwf	?__div_to_l_+3,c
 11675  001ED2  0012               	return	
 11676  001ED4                     l9656:
 11677  001ED4  8E18               	bsf	__div_to_l_@f1+2,7,c
 11678  001ED6  0EFF               	movlw	255
 11679  001ED8  1616               	andwf	__div_to_l_@f1,f,c
 11680  001EDA  0EFF               	movlw	255
 11681  001EDC  1617               	andwf	__div_to_l_@f1+1,f,c
 11682  001EDE  0EFF               	movlw	255
 11683  001EE0  1618               	andwf	__div_to_l_@f1+2,f,c
 11684  001EE2  0E00               	movlw	0
 11685  001EE4  1619               	andwf	__div_to_l_@f1+3,f,c
 11686  001EE6  8E1B               	bsf	__div_to_l_@f2+2,7,c
 11687  001EE8  0EFF               	movlw	255
 11688  001EEA  1619               	andwf	__div_to_l_@f2,f,c
 11689  001EEC  0EFF               	movlw	255
 11690  001EEE  161A               	andwf	__div_to_l_@f2+1,f,c
 11691  001EF0  0EFF               	movlw	255
 11692  001EF2  161B               	andwf	__div_to_l_@f2+2,f,c
 11693  001EF4  0E00               	movlw	0
 11694  001EF6  161C               	andwf	__div_to_l_@f2+3,f,c
 11695  001EF8  0E00               	movlw	0
 11696  001EFA  6E1C               	movwf	__div_to_l_@quot,c
 11697  001EFC  0E00               	movlw	0
 11698  001EFE  6E1D               	movwf	__div_to_l_@quot+1,c
 11699  001F00  0E00               	movlw	0
 11700  001F02  6E1E               	movwf	__div_to_l_@quot+2,c
 11701  001F04  0E00               	movlw	0
 11702  001F06  6E1F               	movwf	__div_to_l_@quot+3,c
 11703  001F08  0E7F               	movlw	127
 11704  001F0A  5E21               	subwf	__div_to_l_@exp1,f,c
 11705  001F0C  5020               	movf	__div_to_l_@cntr,w,c
 11706  001F0E  0FA0               	addlw	160
 11707  001F10  5E21               	subwf	__div_to_l_@exp1,f,c
 11708  001F12  0E20               	movlw	32
 11709  001F14  6E20               	movwf	__div_to_l_@cntr,c
 11710  001F16                     l9670:
 11711  001F16  90D8               	bcf	status,0,c
 11712  001F18  361C               	rlcf	__div_to_l_@quot,f,c
 11713  001F1A  361D               	rlcf	__div_to_l_@quot+1,f,c
 11714  001F1C  361E               	rlcf	__div_to_l_@quot+2,f,c
 11715  001F1E  361F               	rlcf	__div_to_l_@quot+3,f,c
 11716  001F20  5019               	movf	__div_to_l_@f2,w,c
 11717  001F22  5C16               	subwf	__div_to_l_@f1,w,c
 11718  001F24  501A               	movf	__div_to_l_@f2+1,w,c
 11719  001F26  5817               	subwfb	__div_to_l_@f1+1,w,c
 11720  001F28  501B               	movf	__div_to_l_@f2+2,w,c
 11721  001F2A  5818               	subwfb	__div_to_l_@f1+2,w,c
 11722  001F2C  501C               	movf	__div_to_l_@f2+3,w,c
 11723  001F2E  5819               	subwfb	__div_to_l_@f1+3,w,c
 11724  001F30  A0D8               	btfss	status,0,c
 11725  001F32  D009               	goto	l9678
 11726  001F34  5019               	movf	__div_to_l_@f2,w,c
 11727  001F36  5E16               	subwf	__div_to_l_@f1,f,c
 11728  001F38  501A               	movf	__div_to_l_@f2+1,w,c
 11729  001F3A  5A17               	subwfb	__div_to_l_@f1+1,f,c
 11730  001F3C  501B               	movf	__div_to_l_@f2+2,w,c
 11731  001F3E  5A18               	subwfb	__div_to_l_@f1+2,f,c
 11732  001F40  501C               	movf	__div_to_l_@f2+3,w,c
 11733  001F42  5A19               	subwfb	__div_to_l_@f1+3,f,c
 11734  001F44  801C               	bsf	__div_to_l_@quot,0,c
 11735  001F46                     l9678:
 11736  001F46  90D8               	bcf	status,0,c
 11737  001F48  3616               	rlcf	__div_to_l_@f1,f,c
 11738  001F4A  3617               	rlcf	__div_to_l_@f1+1,f,c
 11739  001F4C  3618               	rlcf	__div_to_l_@f1+2,f,c
 11740  001F4E  3619               	rlcf	__div_to_l_@f1+3,f,c
 11741  001F50  2E20               	decfsz	__div_to_l_@cntr,f,c
 11742  001F52  D7E1               	goto	l9670
 11743  001F54  AE21               	btfss	__div_to_l_@exp1,7,c
 11744  001F56  D016               	goto	l9694
 11745  001F58  5021               	movf	__div_to_l_@exp1,w,c
 11746  001F5A  0A80               	xorlw	128
 11747  001F5C  0F9F               	addlw	159
 11748  001F5E  B0D8               	btfsc	status,0,c
 11749  001F60  D009               	goto	l9690
 11750  001F62  0E00               	movlw	0
 11751  001F64  6E16               	movwf	?__div_to_l_,c
 11752  001F66  0E00               	movlw	0
 11753  001F68  6E17               	movwf	?__div_to_l_+1,c
 11754  001F6A  0E00               	movlw	0
 11755  001F6C  6E18               	movwf	?__div_to_l_+2,c
 11756  001F6E  0E00               	movlw	0
 11757  001F70  6E19               	movwf	?__div_to_l_+3,c
 11758  001F72  0012               	return	
 11759  001F74                     l9690:
 11760  001F74  90D8               	bcf	status,0,c
 11761  001F76  321F               	rrcf	__div_to_l_@quot+3,f,c
 11762  001F78  321E               	rrcf	__div_to_l_@quot+2,f,c
 11763  001F7A  321D               	rrcf	__div_to_l_@quot+1,f,c
 11764  001F7C  321C               	rrcf	__div_to_l_@quot,f,c
 11765  001F7E  3E21               	incfsz	__div_to_l_@exp1,f,c
 11766  001F80  D7F9               	goto	l9690
 11767  001F82  D015               	goto	l1630
 11768  001F84                     l9694:
 11769  001F84  0E1F               	movlw	31
 11770  001F86  6421               	cpfsgt	__div_to_l_@exp1,c
 11771  001F88  D00F               	goto	l9702
 11772  001F8A  0E00               	movlw	0
 11773  001F8C  6E16               	movwf	?__div_to_l_,c
 11774  001F8E  0E00               	movlw	0
 11775  001F90  6E17               	movwf	?__div_to_l_+1,c
 11776  001F92  0E00               	movlw	0
 11777  001F94  6E18               	movwf	?__div_to_l_+2,c
 11778  001F96  0E00               	movlw	0
 11779  001F98  6E19               	movwf	?__div_to_l_+3,c
 11780  001F9A  0012               	return	
 11781  001F9C                     l9700:
 11782  001F9C  90D8               	bcf	status,0,c
 11783  001F9E  361C               	rlcf	__div_to_l_@quot,f,c
 11784  001FA0  361D               	rlcf	__div_to_l_@quot+1,f,c
 11785  001FA2  361E               	rlcf	__div_to_l_@quot+2,f,c
 11786  001FA4  361F               	rlcf	__div_to_l_@quot+3,f,c
 11787  001FA6  0621               	decf	__div_to_l_@exp1,f,c
 11788  001FA8                     l9702:
 11789  001FA8  5021               	movf	__div_to_l_@exp1,w,c
 11790  001FAA  A4D8               	btfss	status,2,c
 11791  001FAC  D7F7               	goto	l9700
 11792  001FAE                     l1630:
 11793  001FAE  C01C  F016         	movff	__div_to_l_@quot,?__div_to_l_
 11794  001FB2  C01D  F017         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 11795  001FB6  C01E  F018         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 11796  001FBA  C01F  F019         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11797  001FBE  0012               	return		;funcret
 11798  001FC0                     __end_of__div_to_l_:
 11799                           	opt stack 0
 11800                           tosu	equ	0xFFF
 11801                           tosh	equ	0xFFE
 11802                           tosl	equ	0xFFD
 11803                           pclath	equ	0xFFA
 11804                           tblptru	equ	0xFF8
 11805                           tblptrh	equ	0xFF7
 11806                           tblptrl	equ	0xFF6
 11807                           tablat	equ	0xFF5
 11808                           prodh	equ	0xFF4
 11809                           prodl	equ	0xFF3
 11810                           intcon	equ	0xFF2
 11811                           intcon2	equ	0xFF1
 11812                           intcon3	equ	0xFF0
 11813                           indf0	equ	0xFEF
 11814                           postinc0	equ	0xFEE
 11815                           fsr0h	equ	0xFEA
 11816                           fsr0l	equ	0xFE9
 11817                           wreg	equ	0xFE8
 11818                           indf1	equ	0xFE7
 11819                           postinc1	equ	0xFE6
 11820                           postdec1	equ	0xFE5
 11821                           fsr1h	equ	0xFE2
 11822                           fsr1l	equ	0xFE1
 11823                           indf2	equ	0xFDF
 11824                           postinc2	equ	0xFDE
 11825                           postdec2	equ	0xFDD
 11826                           fsr2h	equ	0xFDA
 11827                           fsr2l	equ	0xFD9
 11828                           status	equ	0xFD8
 11829                           
 11830 ;; *************** function ___lltoft *****************
 11831 ;; Defined at:
 11832 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lltoft.c"
 11833 ;; Parameters:    Size  Location     Type
 11834 ;;  c               4   29[COMRAM] unsigned long 
 11835 ;; Auto vars:     Size  Location     Type
 11836 ;;  exp             1   37[COMRAM] unsigned char 
 11837 ;; Return value:  Size  Location     Type
 11838 ;;                  3   29[COMRAM] float 
 11839 ;; Registers used:
 11840 ;;		wreg, status,2, status,0, cstack
 11841 ;; Tracked objects:
 11842 ;;		On entry : 0/0
 11843 ;;		On exit  : 0/0
 11844 ;;		Unchanged: 0/0
 11845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11846 ;;      Params:         4       0       0       0       0       0       0       0       0
 11847 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11848 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11849 ;;      Totals:         9       0       0       0       0       0       0       0       0
 11850 ;;Total ram usage:        9 bytes
 11851 ;; Hardware stack levels used:    1
 11852 ;; Hardware stack levels required when called:    3
 11853 ;; This function calls:
 11854 ;;		___ftpack
 11855 ;; This function is called by:
 11856 ;;		_sprintf
 11857 ;; This function uses a non-reentrant model
 11858 ;;
 11859                           
 11860                           	psect	text52
 11861  003164                     __ptext52:
 11862                           	opt stack 0
 11863  003164                     ___lltoft:
 11864                           	opt stack 24
 11865                           
 11866                           ;incstack = 0
 11867  003164  0E8E               	movlw	142
 11868  003166  6E26               	movwf	___lltoft@exp,c
 11869  003168  D006               	goto	l9966
 11870  00316A                     l9964:
 11871  00316A  90D8               	bcf	status,0,c
 11872  00316C  3221               	rrcf	___lltoft@c+3,f,c
 11873  00316E  3220               	rrcf	___lltoft@c+2,f,c
 11874  003170  321F               	rrcf	___lltoft@c+1,f,c
 11875  003172  321E               	rrcf	___lltoft@c,f,c
 11876  003174  2A26               	incf	___lltoft@exp,f,c
 11877  003176                     l9966:
 11878  003176  0E00               	movlw	0
 11879  003178  141E               	andwf	___lltoft@c,w,c
 11880  00317A  6E22               	movwf	??___lltoft& (0+255),c
 11881  00317C  0E00               	movlw	0
 11882  00317E  141F               	andwf	___lltoft@c+1,w,c
 11883  003180  6E23               	movwf	(??___lltoft+1)& (0+255),c
 11884  003182  0E00               	movlw	0
 11885  003184  1420               	andwf	___lltoft@c+2,w,c
 11886  003186  6E24               	movwf	(??___lltoft+2)& (0+255),c
 11887  003188  0EFF               	movlw	255
 11888  00318A  1421               	andwf	___lltoft@c+3,w,c
 11889  00318C  6E25               	movwf	(??___lltoft+3)& (0+255),c
 11890  00318E  5022               	movf	??___lltoft,w,c
 11891  003190  1023               	iorwf	??___lltoft+1,w,c
 11892  003192  1024               	iorwf	??___lltoft+2,w,c
 11893  003194  1025               	iorwf	??___lltoft+3,w,c
 11894  003196  A4D8               	btfss	status,2,c
 11895  003198  D7E8               	goto	l9964
 11896  00319A  C01E  F016         	movff	___lltoft@c,___ftpack@arg
 11897  00319E  C01F  F017         	movff	___lltoft@c+1,___ftpack@arg+1
 11898  0031A2  C020  F018         	movff	___lltoft@c+2,___ftpack@arg+2
 11899  0031A6  C026  F019         	movff	___lltoft@exp,___ftpack@exp
 11900  0031AA  0E00               	movlw	0
 11901  0031AC  6E1A               	movwf	___ftpack@sign,c
 11902  0031AE  ECC9  F013         	call	___ftpack	;wreg free
 11903  0031B2  C016  F01E         	movff	?___ftpack,?___lltoft
 11904  0031B6  C017  F01F         	movff	?___ftpack+1,?___lltoft+1
 11905  0031BA  C018  F020         	movff	?___ftpack+2,?___lltoft+2
 11906  0031BE  0012               	return	
 11907  0031C0                     __end_of___lltoft:
 11908                           	opt stack 0
 11909                           tosu	equ	0xFFF
 11910                           tosh	equ	0xFFE
 11911                           tosl	equ	0xFFD
 11912                           pclath	equ	0xFFA
 11913                           tblptru	equ	0xFF8
 11914                           tblptrh	equ	0xFF7
 11915                           tblptrl	equ	0xFF6
 11916                           tablat	equ	0xFF5
 11917                           prodh	equ	0xFF4
 11918                           prodl	equ	0xFF3
 11919                           intcon	equ	0xFF2
 11920                           intcon2	equ	0xFF1
 11921                           intcon3	equ	0xFF0
 11922                           indf0	equ	0xFEF
 11923                           postinc0	equ	0xFEE
 11924                           fsr0h	equ	0xFEA
 11925                           fsr0l	equ	0xFE9
 11926                           wreg	equ	0xFE8
 11927                           indf1	equ	0xFE7
 11928                           postinc1	equ	0xFE6
 11929                           postdec1	equ	0xFE5
 11930                           fsr1h	equ	0xFE2
 11931                           fsr1l	equ	0xFE1
 11932                           indf2	equ	0xFDF
 11933                           postinc2	equ	0xFDE
 11934                           postdec2	equ	0xFDD
 11935                           fsr2h	equ	0xFDA
 11936                           fsr2l	equ	0xFD9
 11937                           status	equ	0xFD8
 11938                           
 11939 ;; *************** function ___llmod *****************
 11940 ;; Defined at:
 11941 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\llmod.c"
 11942 ;; Parameters:    Size  Location     Type
 11943 ;;  dividend        4   21[COMRAM] unsigned long 
 11944 ;;  divisor         4   25[COMRAM] unsigned long 
 11945 ;; Auto vars:     Size  Location     Type
 11946 ;;  counter         1   29[COMRAM] unsigned char 
 11947 ;; Return value:  Size  Location     Type
 11948 ;;                  4   21[COMRAM] unsigned long 
 11949 ;; Registers used:
 11950 ;;		wreg, status,2, status,0
 11951 ;; Tracked objects:
 11952 ;;		On entry : 0/0
 11953 ;;		On exit  : 0/0
 11954 ;;		Unchanged: 0/0
 11955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11956 ;;      Params:         8       0       0       0       0       0       0       0       0
 11957 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11958 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11959 ;;      Totals:         9       0       0       0       0       0       0       0       0
 11960 ;;Total ram usage:        9 bytes
 11961 ;; Hardware stack levels used:    1
 11962 ;; Hardware stack levels required when called:    2
 11963 ;; This function calls:
 11964 ;;		Nothing
 11965 ;; This function is called by:
 11966 ;;		_convert_time_to_utc
 11967 ;;		_sprintf
 11968 ;; This function uses a non-reentrant model
 11969 ;;
 11970                           
 11971                           	psect	text53
 11972  00309A                     __ptext53:
 11973                           	opt stack 0
 11974  00309A                     ___llmod:
 11975                           	opt stack 25
 11976                           
 11977                           ;incstack = 0
 11978  00309A  501A               	movf	___llmod@divisor,w,c
 11979  00309C  101B               	iorwf	___llmod@divisor+1,w,c
 11980  00309E  101C               	iorwf	___llmod@divisor+2,w,c
 11981  0030A0  101D               	iorwf	___llmod@divisor+3,w,c
 11982  0030A2  B4D8               	btfsc	status,2,c
 11983  0030A4  D024               	goto	l1838
 11984  0030A6  0E01               	movlw	1
 11985  0030A8  6E1E               	movwf	___llmod@counter,c
 11986  0030AA  D006               	goto	l9952
 11987  0030AC                     l9950:
 11988  0030AC  90D8               	bcf	status,0,c
 11989  0030AE  361A               	rlcf	___llmod@divisor,f,c
 11990  0030B0  361B               	rlcf	___llmod@divisor+1,f,c
 11991  0030B2  361C               	rlcf	___llmod@divisor+2,f,c
 11992  0030B4  361D               	rlcf	___llmod@divisor+3,f,c
 11993  0030B6  2A1E               	incf	___llmod@counter,f,c
 11994  0030B8                     l9952:
 11995  0030B8  AE1D               	btfss	___llmod@divisor+3,7,c
 11996  0030BA  D7F8               	goto	l9950
 11997  0030BC                     l9954:
 11998  0030BC  501A               	movf	___llmod@divisor,w,c
 11999  0030BE  5C16               	subwf	___llmod@dividend,w,c
 12000  0030C0  501B               	movf	___llmod@divisor+1,w,c
 12001  0030C2  5817               	subwfb	___llmod@dividend+1,w,c
 12002  0030C4  501C               	movf	___llmod@divisor+2,w,c
 12003  0030C6  5818               	subwfb	___llmod@dividend+2,w,c
 12004  0030C8  501D               	movf	___llmod@divisor+3,w,c
 12005  0030CA  5819               	subwfb	___llmod@dividend+3,w,c
 12006  0030CC  A0D8               	btfss	status,0,c
 12007  0030CE  D008               	goto	l9958
 12008  0030D0  501A               	movf	___llmod@divisor,w,c
 12009  0030D2  5E16               	subwf	___llmod@dividend,f,c
 12010  0030D4  501B               	movf	___llmod@divisor+1,w,c
 12011  0030D6  5A17               	subwfb	___llmod@dividend+1,f,c
 12012  0030D8  501C               	movf	___llmod@divisor+2,w,c
 12013  0030DA  5A18               	subwfb	___llmod@dividend+2,f,c
 12014  0030DC  501D               	movf	___llmod@divisor+3,w,c
 12015  0030DE  5A19               	subwfb	___llmod@dividend+3,f,c
 12016  0030E0                     l9958:
 12017  0030E0  90D8               	bcf	status,0,c
 12018  0030E2  321D               	rrcf	___llmod@divisor+3,f,c
 12019  0030E4  321C               	rrcf	___llmod@divisor+2,f,c
 12020  0030E6  321B               	rrcf	___llmod@divisor+1,f,c
 12021  0030E8  321A               	rrcf	___llmod@divisor,f,c
 12022  0030EA  2E1E               	decfsz	___llmod@counter,f,c
 12023  0030EC  D7E7               	goto	l9954
 12024  0030EE                     l1838:
 12025  0030EE  C016  F016         	movff	___llmod@dividend,?___llmod
 12026  0030F2  C017  F017         	movff	___llmod@dividend+1,?___llmod+1
 12027  0030F6  C018  F018         	movff	___llmod@dividend+2,?___llmod+2
 12028  0030FA  C019  F019         	movff	___llmod@dividend+3,?___llmod+3
 12029  0030FE  0012               	return		;funcret
 12030  003100                     __end_of___llmod:
 12031                           	opt stack 0
 12032                           tosu	equ	0xFFF
 12033                           tosh	equ	0xFFE
 12034                           tosl	equ	0xFFD
 12035                           pclath	equ	0xFFA
 12036                           tblptru	equ	0xFF8
 12037                           tblptrh	equ	0xFF7
 12038                           tblptrl	equ	0xFF6
 12039                           tablat	equ	0xFF5
 12040                           prodh	equ	0xFF4
 12041                           prodl	equ	0xFF3
 12042                           intcon	equ	0xFF2
 12043                           intcon2	equ	0xFF1
 12044                           intcon3	equ	0xFF0
 12045                           indf0	equ	0xFEF
 12046                           postinc0	equ	0xFEE
 12047                           fsr0h	equ	0xFEA
 12048                           fsr0l	equ	0xFE9
 12049                           wreg	equ	0xFE8
 12050                           indf1	equ	0xFE7
 12051                           postinc1	equ	0xFE6
 12052                           postdec1	equ	0xFE5
 12053                           fsr1h	equ	0xFE2
 12054                           fsr1l	equ	0xFE1
 12055                           indf2	equ	0xFDF
 12056                           postinc2	equ	0xFDE
 12057                           postdec2	equ	0xFDD
 12058                           fsr2h	equ	0xFDA
 12059                           fsr2l	equ	0xFD9
 12060                           status	equ	0xFD8
 12061                           
 12062 ;; *************** function ___lldiv *****************
 12063 ;; Defined at:
 12064 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 12065 ;; Parameters:    Size  Location     Type
 12066 ;;  dividend        4   30[COMRAM] unsigned long 
 12067 ;;  divisor         4   34[COMRAM] unsigned long 
 12068 ;; Auto vars:     Size  Location     Type
 12069 ;;  quotient        4   38[COMRAM] unsigned long 
 12070 ;;  counter         1   42[COMRAM] unsigned char 
 12071 ;; Return value:  Size  Location     Type
 12072 ;;                  4   30[COMRAM] unsigned long 
 12073 ;; Registers used:
 12074 ;;		wreg, status,2, status,0
 12075 ;; Tracked objects:
 12076 ;;		On entry : 0/0
 12077 ;;		On exit  : 0/0
 12078 ;;		Unchanged: 0/0
 12079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12080 ;;      Params:         8       0       0       0       0       0       0       0       0
 12081 ;;      Locals:         5       0       0       0       0       0       0       0       0
 12082 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12083 ;;      Totals:        13       0       0       0       0       0       0       0       0
 12084 ;;Total ram usage:       13 bytes
 12085 ;; Hardware stack levels used:    1
 12086 ;; Hardware stack levels required when called:    2
 12087 ;; This function calls:
 12088 ;;		Nothing
 12089 ;; This function is called by:
 12090 ;;		_convert_time_to_utc
 12091 ;;		_sprintf
 12092 ;;		_pf_mount
 12093 ;;		_pf_lseek
 12094 ;; This function uses a non-reentrant model
 12095 ;;
 12096                           
 12097                           	psect	text54
 12098  002CFE                     __ptext54:
 12099                           	opt stack 0
 12100  002CFE                     ___lldiv:
 12101                           	opt stack 25
 12102                           
 12103                           ;incstack = 0
 12104  002CFE  0E00               	movlw	0
 12105  002D00  6E27               	movwf	___lldiv@quotient,c
 12106  002D02  0E00               	movlw	0
 12107  002D04  6E28               	movwf	___lldiv@quotient+1,c
 12108  002D06  0E00               	movlw	0
 12109  002D08  6E29               	movwf	___lldiv@quotient+2,c
 12110  002D0A  0E00               	movlw	0
 12111  002D0C  6E2A               	movwf	___lldiv@quotient+3,c
 12112  002D0E  5023               	movf	___lldiv@divisor,w,c
 12113  002D10  1024               	iorwf	___lldiv@divisor+1,w,c
 12114  002D12  1025               	iorwf	___lldiv@divisor+2,w,c
 12115  002D14  1026               	iorwf	___lldiv@divisor+3,w,c
 12116  002D16  B4D8               	btfsc	status,2,c
 12117  002D18  D02A               	goto	l1828
 12118  002D1A  0E01               	movlw	1
 12119  002D1C  6E2B               	movwf	___lldiv@counter,c
 12120  002D1E  D006               	goto	l9932
 12121  002D20                     l9930:
 12122  002D20  90D8               	bcf	status,0,c
 12123  002D22  3623               	rlcf	___lldiv@divisor,f,c
 12124  002D24  3624               	rlcf	___lldiv@divisor+1,f,c
 12125  002D26  3625               	rlcf	___lldiv@divisor+2,f,c
 12126  002D28  3626               	rlcf	___lldiv@divisor+3,f,c
 12127  002D2A  2A2B               	incf	___lldiv@counter,f,c
 12128  002D2C                     l9932:
 12129  002D2C  AE26               	btfss	___lldiv@divisor+3,7,c
 12130  002D2E  D7F8               	goto	l9930
 12131  002D30                     l9934:
 12132  002D30  90D8               	bcf	status,0,c
 12133  002D32  3627               	rlcf	___lldiv@quotient,f,c
 12134  002D34  3628               	rlcf	___lldiv@quotient+1,f,c
 12135  002D36  3629               	rlcf	___lldiv@quotient+2,f,c
 12136  002D38  362A               	rlcf	___lldiv@quotient+3,f,c
 12137  002D3A  5023               	movf	___lldiv@divisor,w,c
 12138  002D3C  5C1F               	subwf	___lldiv@dividend,w,c
 12139  002D3E  5024               	movf	___lldiv@divisor+1,w,c
 12140  002D40  5820               	subwfb	___lldiv@dividend+1,w,c
 12141  002D42  5025               	movf	___lldiv@divisor+2,w,c
 12142  002D44  5821               	subwfb	___lldiv@dividend+2,w,c
 12143  002D46  5026               	movf	___lldiv@divisor+3,w,c
 12144  002D48  5822               	subwfb	___lldiv@dividend+3,w,c
 12145  002D4A  A0D8               	btfss	status,0,c
 12146  002D4C  D009               	goto	l9942
 12147  002D4E  5023               	movf	___lldiv@divisor,w,c
 12148  002D50  5E1F               	subwf	___lldiv@dividend,f,c
 12149  002D52  5024               	movf	___lldiv@divisor+1,w,c
 12150  002D54  5A20               	subwfb	___lldiv@dividend+1,f,c
 12151  002D56  5025               	movf	___lldiv@divisor+2,w,c
 12152  002D58  5A21               	subwfb	___lldiv@dividend+2,f,c
 12153  002D5A  5026               	movf	___lldiv@divisor+3,w,c
 12154  002D5C  5A22               	subwfb	___lldiv@dividend+3,f,c
 12155  002D5E  8027               	bsf	___lldiv@quotient,0,c
 12156  002D60                     l9942:
 12157  002D60  90D8               	bcf	status,0,c
 12158  002D62  3226               	rrcf	___lldiv@divisor+3,f,c
 12159  002D64  3225               	rrcf	___lldiv@divisor+2,f,c
 12160  002D66  3224               	rrcf	___lldiv@divisor+1,f,c
 12161  002D68  3223               	rrcf	___lldiv@divisor,f,c
 12162  002D6A  2E2B               	decfsz	___lldiv@counter,f,c
 12163  002D6C  D7E1               	goto	l9934
 12164  002D6E                     l1828:
 12165  002D6E  C027  F01F         	movff	___lldiv@quotient,?___lldiv
 12166  002D72  C028  F020         	movff	___lldiv@quotient+1,?___lldiv+1
 12167  002D76  C029  F021         	movff	___lldiv@quotient+2,?___lldiv+2
 12168  002D7A  C02A  F022         	movff	___lldiv@quotient+3,?___lldiv+3
 12169  002D7E  0012               	return		;funcret
 12170  002D80                     __end_of___lldiv:
 12171                           	opt stack 0
 12172                           tosu	equ	0xFFF
 12173                           tosh	equ	0xFFE
 12174                           tosl	equ	0xFFD
 12175                           pclath	equ	0xFFA
 12176                           tblptru	equ	0xFF8
 12177                           tblptrh	equ	0xFF7
 12178                           tblptrl	equ	0xFF6
 12179                           tablat	equ	0xFF5
 12180                           prodh	equ	0xFF4
 12181                           prodl	equ	0xFF3
 12182                           intcon	equ	0xFF2
 12183                           intcon2	equ	0xFF1
 12184                           intcon3	equ	0xFF0
 12185                           indf0	equ	0xFEF
 12186                           postinc0	equ	0xFEE
 12187                           fsr0h	equ	0xFEA
 12188                           fsr0l	equ	0xFE9
 12189                           wreg	equ	0xFE8
 12190                           indf1	equ	0xFE7
 12191                           postinc1	equ	0xFE6
 12192                           postdec1	equ	0xFE5
 12193                           fsr1h	equ	0xFE2
 12194                           fsr1l	equ	0xFE1
 12195                           indf2	equ	0xFDF
 12196                           postinc2	equ	0xFDE
 12197                           postdec2	equ	0xFDD
 12198                           fsr2h	equ	0xFDA
 12199                           fsr2l	equ	0xFD9
 12200                           status	equ	0xFD8
 12201                           
 12202 ;; *************** function ___fttol *****************
 12203 ;; Defined at:
 12204 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
 12205 ;; Parameters:    Size  Location     Type
 12206 ;;  f1              3   13[BANK0 ] float 
 12207 ;; Auto vars:     Size  Location     Type
 12208 ;;  lval            4   23[BANK0 ] unsigned long 
 12209 ;;  exp1            1   27[BANK0 ] unsigned char 
 12210 ;;  sign1           1   22[BANK0 ] unsigned char 
 12211 ;; Return value:  Size  Location     Type
 12212 ;;                  4   13[BANK0 ] long 
 12213 ;; Registers used:
 12214 ;;		wreg, status,2, status,0
 12215 ;; Tracked objects:
 12216 ;;		On entry : 0/0
 12217 ;;		On exit  : 0/0
 12218 ;;		Unchanged: 0/0
 12219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12220 ;;      Params:         0       4       0       0       0       0       0       0       0
 12221 ;;      Locals:         0       6       0       0       0       0       0       0       0
 12222 ;;      Temps:          0       5       0       0       0       0       0       0       0
 12223 ;;      Totals:         0      15       0       0       0       0       0       0       0
 12224 ;;Total ram usage:       15 bytes
 12225 ;; Hardware stack levels used:    1
 12226 ;; Hardware stack levels required when called:    2
 12227 ;; This function calls:
 12228 ;;		Nothing
 12229 ;; This function is called by:
 12230 ;;		_convert_to_degrees
 12231 ;;		_sprintf
 12232 ;;		_escreve_float_lcd
 12233 ;; This function uses a non-reentrant model
 12234 ;;
 12235                           
 12236                           	psect	text55
 12237  001894                     __ptext55:
 12238                           	opt stack 0
 12239  001894                     ___fttol:
 12240                           	opt stack 25
 12241                           
 12242                           ;incstack = 0
 12243  001894  C06F  F071         	movff	___fttol@f1+2,??___fttol
 12244  001898  0100               	movlb	0	; () banked
 12245  00189A  6B72               	clrf	(??___fttol+1)& (0+255),b
 12246  00189C  6B73               	clrf	(??___fttol+2)& (0+255),b
 12247  00189E  0100               	movlb	0	; () banked
 12248  0018A0  356E               	rlcf	(___fttol@f1+1)& (0+255),w,b
 12249  0018A2  0100               	movlb	0	; () banked
 12250  0018A4  3771               	rlcf	??___fttol& (0+255),f,b
 12251  0018A6  E301               	bnc	u11661
 12252  0018A8  8172               	bsf	(??___fttol+1)& (0+255),0,b
 12253  0018AA                     u11661:
 12254  0018AA  0100               	movlb	0	; () banked
 12255  0018AC  5171               	movf	??___fttol& (0+255),w,b
 12256  0018AE  0100               	movlb	0	; () banked
 12257  0018B0  6F7B               	movwf	___fttol@exp1& (0+255),b
 12258  0018B2  0100               	movlb	0	; () banked
 12259  0018B4  517B               	movf	___fttol@exp1& (0+255),w,b
 12260  0018B6  A4D8               	btfss	status,2,c
 12261  0018B8  D00A               	goto	l9884
 12262                           
 12263                           ; BSR set to: 0
 12264  0018BA  0E00               	movlw	0
 12265  0018BC  0100               	movlb	0	; () banked
 12266  0018BE  6F6D               	movwf	?___fttol& (0+255),b
 12267  0018C0  0E00               	movlw	0
 12268  0018C2  6F6E               	movwf	(?___fttol+1)& (0+255),b
 12269  0018C4  0E00               	movlw	0
 12270  0018C6  6F6F               	movwf	(?___fttol+2)& (0+255),b
 12271  0018C8  0E00               	movlw	0
 12272  0018CA  6F70               	movwf	(?___fttol+3)& (0+255),b
 12273                           
 12274                           ; BSR set to: 0
 12275  0018CC  0012               	return	
 12276  0018CE                     l9884:
 12277                           
 12278                           ; BSR set to: 0
 12279  0018CE  0E17               	movlw	23
 12280  0018D0  0100               	movlb	0	; () banked
 12281  0018D2  6F71               	movwf	??___fttol& (0+255),b
 12282  0018D4  C06D  F072         	movff	___fttol@f1,??___fttol+1
 12283  0018D8  C06E  F073         	movff	___fttol@f1+1,??___fttol+2
 12284  0018DC  C06F  F074         	movff	___fttol@f1+2,??___fttol+3
 12285  0018E0  0100               	movlb	0	; () banked
 12286  0018E2  2971               	incf	??___fttol& (0+255),w,b
 12287  0018E4  0100               	movlb	0	; () banked
 12288  0018E6  6F75               	movwf	(??___fttol+4)& (0+255),b
 12289  0018E8  D005               	goto	u11680
 12290  0018EA                     u11685:
 12291  0018EA  0100               	movlb	0	; () banked
 12292  0018EC  90D8               	bcf	status,0,c
 12293  0018EE  3374               	rrcf	(??___fttol+3)& (0+255),f,b
 12294  0018F0  3373               	rrcf	(??___fttol+2)& (0+255),f,b
 12295  0018F2  3372               	rrcf	(??___fttol+1)& (0+255),f,b
 12296  0018F4                     u11680:
 12297  0018F4  0100               	movlb	0	; () banked
 12298  0018F6  2F75               	decfsz	(??___fttol+4)& (0+255),f,b
 12299  0018F8  D7F8               	goto	u11685
 12300  0018FA  0100               	movlb	0	; () banked
 12301  0018FC  5172               	movf	(??___fttol+1)& (0+255),w,b
 12302  0018FE  0100               	movlb	0	; () banked
 12303  001900  6F76               	movwf	___fttol@sign1& (0+255),b
 12304                           
 12305                           ; BSR set to: 0
 12306  001902  0100               	movlb	0	; () banked
 12307  001904  8F6E               	bsf	(___fttol@f1+1)& (0+255),7,b
 12308                           
 12309                           ; BSR set to: 0
 12310  001906  0EFF               	movlw	255
 12311  001908  0100               	movlb	0	; () banked
 12312  00190A  176D               	andwf	___fttol@f1& (0+255),f,b
 12313  00190C  0EFF               	movlw	255
 12314  00190E  0100               	movlb	0	; () banked
 12315  001910  176E               	andwf	(___fttol@f1+1)& (0+255),f,b
 12316  001912  0E00               	movlw	0
 12317  001914  0100               	movlb	0	; () banked
 12318  001916  176F               	andwf	(___fttol@f1+2)& (0+255),f,b
 12319                           
 12320                           ; BSR set to: 0
 12321  001918  0100               	movlb	0	; () banked
 12322  00191A  516D               	movf	___fttol@f1& (0+255),w,b
 12323  00191C  0100               	movlb	0	; () banked
 12324  00191E  6F77               	movwf	___fttol@lval& (0+255),b
 12325  001920  0100               	movlb	0	; () banked
 12326  001922  516E               	movf	(___fttol@f1+1)& (0+255),w,b
 12327  001924  0100               	movlb	0	; () banked
 12328  001926  6F78               	movwf	(___fttol@lval+1)& (0+255),b
 12329  001928  0100               	movlb	0	; () banked
 12330  00192A  516F               	movf	(___fttol@f1+2)& (0+255),w,b
 12331  00192C  0100               	movlb	0	; () banked
 12332  00192E  6F79               	movwf	(___fttol@lval+2)& (0+255),b
 12333  001930  0100               	movlb	0	; () banked
 12334  001932  6B7A               	clrf	(___fttol@lval+3)& (0+255),b
 12335                           
 12336                           ; BSR set to: 0
 12337  001934  0E8E               	movlw	142
 12338  001936  0100               	movlb	0	; () banked
 12339  001938  5F7B               	subwf	___fttol@exp1& (0+255),f,b
 12340                           
 12341                           ; BSR set to: 0
 12342  00193A  0100               	movlb	0	; () banked
 12343  00193C  AF7B               	btfss	___fttol@exp1& (0+255),7,b
 12344  00193E  D01A               	goto	l9906
 12345                           
 12346                           ; BSR set to: 0
 12347  001940  0100               	movlb	0	; () banked
 12348  001942  517B               	movf	___fttol@exp1& (0+255),w,b
 12349  001944  0A80               	xorlw	128
 12350  001946  0F8F               	addlw	143
 12351  001948  B0D8               	btfsc	status,0,c
 12352  00194A  D00A               	goto	l9902
 12353                           
 12354                           ; BSR set to: 0
 12355  00194C  0E00               	movlw	0
 12356  00194E  0100               	movlb	0	; () banked
 12357  001950  6F6D               	movwf	?___fttol& (0+255),b
 12358  001952  0E00               	movlw	0
 12359  001954  6F6E               	movwf	(?___fttol+1)& (0+255),b
 12360  001956  0E00               	movlw	0
 12361  001958  6F6F               	movwf	(?___fttol+2)& (0+255),b
 12362  00195A  0E00               	movlw	0
 12363  00195C  6F70               	movwf	(?___fttol+3)& (0+255),b
 12364                           
 12365                           ; BSR set to: 0
 12366  00195E  0012               	return	
 12367  001960                     l9902:
 12368                           
 12369                           ; BSR set to: 0
 12370  001960  0100               	movlb	0	; () banked
 12371  001962  90D8               	bcf	status,0,c
 12372  001964  337A               	rrcf	(___fttol@lval+3)& (0+255),f,b
 12373  001966  3379               	rrcf	(___fttol@lval+2)& (0+255),f,b
 12374  001968  3378               	rrcf	(___fttol@lval+1)& (0+255),f,b
 12375  00196A  3377               	rrcf	___fttol@lval& (0+255),f,b
 12376                           
 12377                           ; BSR set to: 0
 12378  00196C  0100               	movlb	0	; () banked
 12379  00196E  3F7B               	incfsz	___fttol@exp1& (0+255),f,b
 12380  001970  D7F7               	goto	l9902
 12381                           
 12382                           ; BSR set to: 0
 12383  001972  D01B               	goto	l9916
 12384  001974                     l9906:
 12385                           
 12386                           ; BSR set to: 0
 12387  001974  0E17               	movlw	23
 12388  001976  0100               	movlb	0	; () banked
 12389  001978  657B               	cpfsgt	___fttol@exp1& (0+255),b
 12390  00197A  D012               	goto	l9914
 12391                           
 12392                           ; BSR set to: 0
 12393  00197C  0E00               	movlw	0
 12394  00197E  0100               	movlb	0	; () banked
 12395  001980  6F6D               	movwf	?___fttol& (0+255),b
 12396  001982  0E00               	movlw	0
 12397  001984  6F6E               	movwf	(?___fttol+1)& (0+255),b
 12398  001986  0E00               	movlw	0
 12399  001988  6F6F               	movwf	(?___fttol+2)& (0+255),b
 12400  00198A  0E00               	movlw	0
 12401  00198C  6F70               	movwf	(?___fttol+3)& (0+255),b
 12402                           
 12403                           ; BSR set to: 0
 12404  00198E  0012               	return	
 12405  001990                     l9912:
 12406                           
 12407                           ; BSR set to: 0
 12408  001990  0100               	movlb	0	; () banked
 12409  001992  90D8               	bcf	status,0,c
 12410  001994  3777               	rlcf	___fttol@lval& (0+255),f,b
 12411  001996  3778               	rlcf	(___fttol@lval+1)& (0+255),f,b
 12412  001998  3779               	rlcf	(___fttol@lval+2)& (0+255),f,b
 12413  00199A  377A               	rlcf	(___fttol@lval+3)& (0+255),f,b
 12414  00199C  0100               	movlb	0	; () banked
 12415  00199E  077B               	decf	___fttol@exp1& (0+255),f,b
 12416  0019A0                     l9914:
 12417                           
 12418                           ; BSR set to: 0
 12419  0019A0  0100               	movlb	0	; () banked
 12420  0019A2  517B               	movf	___fttol@exp1& (0+255),w,b
 12421  0019A4  0100               	movlb	0	; () banked
 12422  0019A6  A4D8               	btfss	status,2,c
 12423  0019A8  D7F3               	goto	l9912
 12424  0019AA                     l9916:
 12425                           
 12426                           ; BSR set to: 0
 12427  0019AA  0100               	movlb	0	; () banked
 12428  0019AC  5176               	movf	___fttol@sign1& (0+255),w,b
 12429  0019AE  0100               	movlb	0	; () banked
 12430  0019B0  B4D8               	btfsc	status,2,c
 12431  0019B2  D009               	goto	l9920
 12432                           
 12433                           ; BSR set to: 0
 12434  0019B4  0100               	movlb	0	; () banked
 12435  0019B6  1F7A               	comf	(___fttol@lval+3)& (0+255),f,b
 12436  0019B8  1F79               	comf	(___fttol@lval+2)& (0+255),f,b
 12437  0019BA  1F78               	comf	(___fttol@lval+1)& (0+255),f,b
 12438  0019BC  6D77               	negf	___fttol@lval& (0+255),b
 12439  0019BE  0E00               	movlw	0
 12440  0019C0  2378               	addwfc	(___fttol@lval+1)& (0+255),f,b
 12441  0019C2  2379               	addwfc	(___fttol@lval+2)& (0+255),f,b
 12442  0019C4  237A               	addwfc	(___fttol@lval+3)& (0+255),f,b
 12443  0019C6                     l9920:
 12444                           
 12445                           ; BSR set to: 0
 12446  0019C6  C077  F06D         	movff	___fttol@lval,?___fttol
 12447  0019CA  C078  F06E         	movff	___fttol@lval+1,?___fttol+1
 12448  0019CE  C079  F06F         	movff	___fttol@lval+2,?___fttol+2
 12449  0019D2  C07A  F070         	movff	___fttol@lval+3,?___fttol+3
 12450  0019D6  0012               	return	
 12451  0019D8                     __end_of___fttol:
 12452                           	opt stack 0
 12453                           tosu	equ	0xFFF
 12454                           tosh	equ	0xFFE
 12455                           tosl	equ	0xFFD
 12456                           pclath	equ	0xFFA
 12457                           tblptru	equ	0xFF8
 12458                           tblptrh	equ	0xFF7
 12459                           tblptrl	equ	0xFF6
 12460                           tablat	equ	0xFF5
 12461                           prodh	equ	0xFF4
 12462                           prodl	equ	0xFF3
 12463                           intcon	equ	0xFF2
 12464                           intcon2	equ	0xFF1
 12465                           intcon3	equ	0xFF0
 12466                           indf0	equ	0xFEF
 12467                           postinc0	equ	0xFEE
 12468                           fsr0h	equ	0xFEA
 12469                           fsr0l	equ	0xFE9
 12470                           wreg	equ	0xFE8
 12471                           indf1	equ	0xFE7
 12472                           postinc1	equ	0xFE6
 12473                           postdec1	equ	0xFE5
 12474                           fsr1h	equ	0xFE2
 12475                           fsr1l	equ	0xFE1
 12476                           indf2	equ	0xFDF
 12477                           postinc2	equ	0xFDE
 12478                           postdec2	equ	0xFDD
 12479                           fsr2h	equ	0xFDA
 12480                           fsr2l	equ	0xFD9
 12481                           status	equ	0xFD8
 12482                           
 12483 ;; *************** function ___ftsub *****************
 12484 ;; Defined at:
 12485 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftsub.c"
 12486 ;; Parameters:    Size  Location     Type
 12487 ;;  f1              3   28[BANK0 ] float 
 12488 ;;  f2              3   31[BANK0 ] float 
 12489 ;; Auto vars:     Size  Location     Type
 12490 ;;		None
 12491 ;; Return value:  Size  Location     Type
 12492 ;;                  3   28[BANK0 ] float 
 12493 ;; Registers used:
 12494 ;;		wreg, status,2, status,0, cstack
 12495 ;; Tracked objects:
 12496 ;;		On entry : 0/0
 12497 ;;		On exit  : 0/0
 12498 ;;		Unchanged: 0/0
 12499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12500 ;;      Params:         0       6       0       0       0       0       0       0       0
 12501 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12502 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12503 ;;      Totals:         0       6       0       0       0       0       0       0       0
 12504 ;;Total ram usage:        6 bytes
 12505 ;; Hardware stack levels used:    1
 12506 ;; Hardware stack levels required when called:    4
 12507 ;; This function calls:
 12508 ;;		___ftadd
 12509 ;; This function is called by:
 12510 ;;		_sprintf
 12511 ;; This function uses a non-reentrant model
 12512 ;;
 12513                           
 12514                           	psect	text56
 12515  003268                     __ptext56:
 12516                           	opt stack 0
 12517  003268                     ___ftsub:
 12518                           	opt stack 23
 12519                           
 12520                           ; BSR set to: 0
 12521                           ;incstack = 0
 12522  003268  0100               	movlb	0	; () banked
 12523  00326A  517F               	movf	___ftsub@f2& (0+255),w,b
 12524  00326C  0100               	movlb	0	; () banked
 12525  00326E  1180               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 12526  003270  0100               	movlb	0	; () banked
 12527  003272  1181               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 12528  003274  B4D8               	btfsc	status,2,c
 12529  003276  D009               	goto	l9708
 12530                           
 12531                           ; BSR set to: 0
 12532  003278  0E00               	movlw	0
 12533  00327A  0100               	movlb	0	; () banked
 12534  00327C  1B7F               	xorwf	___ftsub@f2& (0+255),f,b
 12535  00327E  0E00               	movlw	0
 12536  003280  0100               	movlb	0	; () banked
 12537  003282  1B80               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 12538  003284  0E80               	movlw	128
 12539  003286  0100               	movlb	0	; () banked
 12540  003288  1B81               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 12541  00328A                     l9708:
 12542                           
 12543                           ; BSR set to: 0
 12544  00328A  C07C  F070         	movff	___ftsub@f1,___ftadd@f1
 12545  00328E  C07D  F071         	movff	___ftsub@f1+1,___ftadd@f1+1
 12546  003292  C07E  F072         	movff	___ftsub@f1+2,___ftadd@f1+2
 12547  003296  C07F  F073         	movff	___ftsub@f2,___ftadd@f2
 12548  00329A  C080  F074         	movff	___ftsub@f2+1,___ftadd@f2+1
 12549  00329E  C081  F075         	movff	___ftsub@f2+2,___ftadd@f2+2
 12550  0032A2  ECE0  F008         	call	___ftadd	;wreg free
 12551  0032A6  C070  F07C         	movff	?___ftadd,?___ftsub
 12552  0032AA  C071  F07D         	movff	?___ftadd+1,?___ftsub+1
 12553  0032AE  C072  F07E         	movff	?___ftadd+2,?___ftsub+2
 12554  0032B2  0012               	return	
 12555  0032B4                     __end_of___ftsub:
 12556                           	opt stack 0
 12557                           tosu	equ	0xFFF
 12558                           tosh	equ	0xFFE
 12559                           tosl	equ	0xFFD
 12560                           pclath	equ	0xFFA
 12561                           tblptru	equ	0xFF8
 12562                           tblptrh	equ	0xFF7
 12563                           tblptrl	equ	0xFF6
 12564                           tablat	equ	0xFF5
 12565                           prodh	equ	0xFF4
 12566                           prodl	equ	0xFF3
 12567                           intcon	equ	0xFF2
 12568                           intcon2	equ	0xFF1
 12569                           intcon3	equ	0xFF0
 12570                           indf0	equ	0xFEF
 12571                           postinc0	equ	0xFEE
 12572                           fsr0h	equ	0xFEA
 12573                           fsr0l	equ	0xFE9
 12574                           wreg	equ	0xFE8
 12575                           indf1	equ	0xFE7
 12576                           postinc1	equ	0xFE6
 12577                           postdec1	equ	0xFE5
 12578                           fsr1h	equ	0xFE2
 12579                           fsr1l	equ	0xFE1
 12580                           indf2	equ	0xFDF
 12581                           postinc2	equ	0xFDE
 12582                           postdec2	equ	0xFDD
 12583                           fsr2h	equ	0xFDA
 12584                           fsr2l	equ	0xFD9
 12585                           status	equ	0xFD8
 12586                           
 12587 ;; *************** function ___ftadd *****************
 12588 ;; Defined at:
 12589 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
 12590 ;; Parameters:    Size  Location     Type
 12591 ;;  f1              3   16[BANK0 ] float 
 12592 ;;  f2              3   19[BANK0 ] float 
 12593 ;; Auto vars:     Size  Location     Type
 12594 ;;  exp1            1   27[BANK0 ] unsigned char 
 12595 ;;  exp2            1   26[BANK0 ] unsigned char 
 12596 ;;  sign            1   25[BANK0 ] unsigned char 
 12597 ;; Return value:  Size  Location     Type
 12598 ;;                  3   16[BANK0 ] float 
 12599 ;; Registers used:
 12600 ;;		wreg, status,2, status,0, cstack
 12601 ;; Tracked objects:
 12602 ;;		On entry : 0/0
 12603 ;;		On exit  : 0/0
 12604 ;;		Unchanged: 0/0
 12605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12606 ;;      Params:         0       6       0       0       0       0       0       0       0
 12607 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12608 ;;      Temps:          0       3       0       0       0       0       0       0       0
 12609 ;;      Totals:         0      12       0       0       0       0       0       0       0
 12610 ;;Total ram usage:       12 bytes
 12611 ;; Hardware stack levels used:    1
 12612 ;; Hardware stack levels required when called:    3
 12613 ;; This function calls:
 12614 ;;		___ftpack
 12615 ;; This function is called by:
 12616 ;;		_convert_to_degrees
 12617 ;;		_sprintf
 12618 ;;		___ftsub
 12619 ;;		_escreve_float_lcd
 12620 ;; This function uses a non-reentrant model
 12621 ;;
 12622                           
 12623                           	psect	text57
 12624  0011C0                     __ptext57:
 12625                           	opt stack 0
 12626  0011C0                     ___ftadd:
 12627                           	opt stack 23
 12628                           
 12629                           ;incstack = 0
 12630  0011C0  C072  F076         	movff	___ftadd@f1+2,??___ftadd
 12631  0011C4  0100               	movlb	0	; () banked
 12632  0011C6  6B77               	clrf	(??___ftadd+1)& (0+255),b
 12633  0011C8  6B78               	clrf	(??___ftadd+2)& (0+255),b
 12634  0011CA  0100               	movlb	0	; () banked
 12635  0011CC  3571               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 12636  0011CE  0100               	movlb	0	; () banked
 12637  0011D0  3776               	rlcf	??___ftadd& (0+255),f,b
 12638  0011D2  E301               	bnc	u10541
 12639  0011D4  8177               	bsf	(??___ftadd+1)& (0+255),0,b
 12640  0011D6                     u10541:
 12641  0011D6  0100               	movlb	0	; () banked
 12642  0011D8  5176               	movf	??___ftadd& (0+255),w,b
 12643  0011DA  0100               	movlb	0	; () banked
 12644  0011DC  6F7B               	movwf	___ftadd@exp1& (0+255),b
 12645  0011DE  C075  F076         	movff	___ftadd@f2+2,??___ftadd
 12646  0011E2  0100               	movlb	0	; () banked
 12647  0011E4  6B77               	clrf	(??___ftadd+1)& (0+255),b
 12648  0011E6  6B78               	clrf	(??___ftadd+2)& (0+255),b
 12649  0011E8  0100               	movlb	0	; () banked
 12650  0011EA  3574               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 12651  0011EC  0100               	movlb	0	; () banked
 12652  0011EE  3776               	rlcf	??___ftadd& (0+255),f,b
 12653  0011F0  E301               	bnc	u10551
 12654  0011F2  8177               	bsf	(??___ftadd+1)& (0+255),0,b
 12655  0011F4                     u10551:
 12656  0011F4  0100               	movlb	0	; () banked
 12657  0011F6  5176               	movf	??___ftadd& (0+255),w,b
 12658  0011F8  0100               	movlb	0	; () banked
 12659  0011FA  6F7A               	movwf	___ftadd@exp2& (0+255),b
 12660                           
 12661                           ; BSR set to: 0
 12662  0011FC  0100               	movlb	0	; () banked
 12663  0011FE  517B               	movf	___ftadd@exp1& (0+255),w,b
 12664  001200  0100               	movlb	0	; () banked
 12665  001202  B4D8               	btfsc	status,2,c
 12666  001204  D011               	goto	l1685
 12667                           
 12668                           ; BSR set to: 0
 12669  001206  0100               	movlb	0	; () banked
 12670  001208  517A               	movf	___ftadd@exp2& (0+255),w,b
 12671  00120A  0100               	movlb	0	; () banked
 12672  00120C  5D7B               	subwf	___ftadd@exp1& (0+255),w,b
 12673  00120E  B0D8               	btfsc	status,0,c
 12674  001210  D012               	goto	l9236
 12675                           
 12676                           ; BSR set to: 0
 12677  001212  0100               	movlb	0	; () banked
 12678  001214  517B               	movf	___ftadd@exp1& (0+255),w,b
 12679  001216  0800               	sublw	0
 12680  001218  0100               	movlb	0	; () banked
 12681  00121A  257A               	addwf	___ftadd@exp2& (0+255),w,b
 12682  00121C  0100               	movlb	0	; () banked
 12683  00121E  6F76               	movwf	??___ftadd& (0+255),b
 12684  001220  0E18               	movlw	24
 12685  001222  0100               	movlb	0	; () banked
 12686  001224  6576               	cpfsgt	??___ftadd& (0+255),b
 12687  001226  D007               	goto	l9236
 12688  001228                     l1685:
 12689                           
 12690                           ; BSR set to: 0
 12691  001228  C073  F070         	movff	___ftadd@f2,?___ftadd
 12692  00122C  C074  F071         	movff	___ftadd@f2+1,?___ftadd+1
 12693  001230  C075  F072         	movff	___ftadd@f2+2,?___ftadd+2
 12694  001234  0012               	return	
 12695  001236                     l9236:
 12696                           
 12697                           ; BSR set to: 0
 12698  001236  0100               	movlb	0	; () banked
 12699  001238  517A               	movf	___ftadd@exp2& (0+255),w,b
 12700  00123A  0100               	movlb	0	; () banked
 12701  00123C  B4D8               	btfsc	status,2,c
 12702  00123E  D011               	goto	l1689
 12703                           
 12704                           ; BSR set to: 0
 12705  001240  0100               	movlb	0	; () banked
 12706  001242  517B               	movf	___ftadd@exp1& (0+255),w,b
 12707  001244  0100               	movlb	0	; () banked
 12708  001246  5D7A               	subwf	___ftadd@exp2& (0+255),w,b
 12709  001248  B0D8               	btfsc	status,0,c
 12710  00124A  D012               	goto	l9242
 12711                           
 12712                           ; BSR set to: 0
 12713  00124C  0100               	movlb	0	; () banked
 12714  00124E  517A               	movf	___ftadd@exp2& (0+255),w,b
 12715  001250  0800               	sublw	0
 12716  001252  0100               	movlb	0	; () banked
 12717  001254  257B               	addwf	___ftadd@exp1& (0+255),w,b
 12718  001256  0100               	movlb	0	; () banked
 12719  001258  6F76               	movwf	??___ftadd& (0+255),b
 12720  00125A  0E18               	movlw	24
 12721  00125C  0100               	movlb	0	; () banked
 12722  00125E  6576               	cpfsgt	??___ftadd& (0+255),b
 12723  001260  D007               	goto	l9242
 12724  001262                     l1689:
 12725                           
 12726                           ; BSR set to: 0
 12727  001262  C070  F070         	movff	___ftadd@f1,?___ftadd
 12728  001266  C071  F071         	movff	___ftadd@f1+1,?___ftadd+1
 12729  00126A  C072  F072         	movff	___ftadd@f1+2,?___ftadd+2
 12730  00126E  0012               	return	
 12731  001270                     l9242:
 12732                           
 12733                           ; BSR set to: 0
 12734  001270  0E06               	movlw	6
 12735  001272  0100               	movlb	0	; () banked
 12736  001274  6F79               	movwf	___ftadd@sign& (0+255),b
 12737                           
 12738                           ; BSR set to: 0
 12739  001276  0100               	movlb	0	; () banked
 12740  001278  AF72               	btfss	(___ftadd@f1+2)& (0+255),7,b
 12741  00127A  D002               	goto	l9248
 12742                           
 12743                           ; BSR set to: 0
 12744  00127C  0100               	movlb	0	; () banked
 12745  00127E  8F79               	bsf	___ftadd@sign& (0+255),7,b
 12746  001280                     l9248:
 12747                           
 12748                           ; BSR set to: 0
 12749  001280  0100               	movlb	0	; () banked
 12750  001282  AF75               	btfss	(___ftadd@f2+2)& (0+255),7,b
 12751  001284  D002               	goto	l1691
 12752                           
 12753                           ; BSR set to: 0
 12754  001286  0100               	movlb	0	; () banked
 12755  001288  8D79               	bsf	___ftadd@sign& (0+255),6,b
 12756  00128A                     l1691:
 12757                           
 12758                           ; BSR set to: 0
 12759  00128A  0100               	movlb	0	; () banked
 12760  00128C  8F71               	bsf	(___ftadd@f1+1)& (0+255),7,b
 12761                           
 12762                           ; BSR set to: 0
 12763  00128E  0EFF               	movlw	255
 12764  001290  0100               	movlb	0	; () banked
 12765  001292  1770               	andwf	___ftadd@f1& (0+255),f,b
 12766  001294  0EFF               	movlw	255
 12767  001296  0100               	movlb	0	; () banked
 12768  001298  1771               	andwf	(___ftadd@f1+1)& (0+255),f,b
 12769  00129A  0E00               	movlw	0
 12770  00129C  0100               	movlb	0	; () banked
 12771  00129E  1772               	andwf	(___ftadd@f1+2)& (0+255),f,b
 12772  0012A0  0100               	movlb	0	; () banked
 12773  0012A2  8F74               	bsf	(___ftadd@f2+1)& (0+255),7,b
 12774                           
 12775                           ; BSR set to: 0
 12776  0012A4  0EFF               	movlw	255
 12777  0012A6  0100               	movlb	0	; () banked
 12778  0012A8  1773               	andwf	___ftadd@f2& (0+255),f,b
 12779  0012AA  0EFF               	movlw	255
 12780  0012AC  0100               	movlb	0	; () banked
 12781  0012AE  1774               	andwf	(___ftadd@f2+1)& (0+255),f,b
 12782  0012B0  0E00               	movlw	0
 12783  0012B2  0100               	movlb	0	; () banked
 12784  0012B4  1775               	andwf	(___ftadd@f2+2)& (0+255),f,b
 12785                           
 12786                           ; BSR set to: 0
 12787  0012B6  0100               	movlb	0	; () banked
 12788  0012B8  517A               	movf	___ftadd@exp2& (0+255),w,b
 12789  0012BA  0100               	movlb	0	; () banked
 12790  0012BC  5D7B               	subwf	___ftadd@exp1& (0+255),w,b
 12791  0012BE  B0D8               	btfsc	status,0,c
 12792  0012C0  D025               	goto	l9268
 12793  0012C2                     l9258:
 12794                           
 12795                           ; BSR set to: 0
 12796  0012C2  0100               	movlb	0	; () banked
 12797  0012C4  90D8               	bcf	status,0,c
 12798  0012C6  3773               	rlcf	___ftadd@f2& (0+255),f,b
 12799  0012C8  3774               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 12800  0012CA  3775               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 12801  0012CC  0100               	movlb	0	; () banked
 12802  0012CE  077A               	decf	___ftadd@exp2& (0+255),f,b
 12803                           
 12804                           ; BSR set to: 0
 12805  0012D0  0100               	movlb	0	; () banked
 12806  0012D2  517B               	movf	___ftadd@exp1& (0+255),w,b
 12807  0012D4  0100               	movlb	0	; () banked
 12808  0012D6  197A               	xorwf	___ftadd@exp2& (0+255),w,b
 12809  0012D8  B4D8               	btfsc	status,2,c
 12810  0012DA  D011               	goto	l9266
 12811                           
 12812                           ; BSR set to: 0
 12813  0012DC  0100               	movlb	0	; () banked
 12814  0012DE  0779               	decf	___ftadd@sign& (0+255),f,b
 12815  0012E0  C079  F076         	movff	___ftadd@sign,??___ftadd
 12816  0012E4  0E07               	movlw	7
 12817  0012E6  0100               	movlb	0	; () banked
 12818  0012E8  1776               	andwf	??___ftadd& (0+255),f,b
 12819  0012EA  B4D8               	btfsc	status,2,c
 12820  0012EC  D008               	goto	l9266
 12821  0012EE  D7E9               	goto	l9258
 12822  0012F0                     l9264:
 12823                           
 12824                           ; BSR set to: 0
 12825  0012F0  0100               	movlb	0	; () banked
 12826  0012F2  90D8               	bcf	status,0,c
 12827  0012F4  3372               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 12828  0012F6  3371               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 12829  0012F8  3370               	rrcf	___ftadd@f1& (0+255),f,b
 12830  0012FA  0100               	movlb	0	; () banked
 12831  0012FC  2B7B               	incf	___ftadd@exp1& (0+255),f,b
 12832  0012FE                     l9266:
 12833                           
 12834                           ; BSR set to: 0
 12835  0012FE  0100               	movlb	0	; () banked
 12836  001300  517A               	movf	___ftadd@exp2& (0+255),w,b
 12837  001302  0100               	movlb	0	; () banked
 12838  001304  197B               	xorwf	___ftadd@exp1& (0+255),w,b
 12839  001306  B4D8               	btfsc	status,2,c
 12840  001308  D02B               	goto	l1700
 12841  00130A  D7F2               	goto	l9264
 12842  00130C                     l9268:
 12843                           
 12844                           ; BSR set to: 0
 12845  00130C  0100               	movlb	0	; () banked
 12846  00130E  517B               	movf	___ftadd@exp1& (0+255),w,b
 12847  001310  0100               	movlb	0	; () banked
 12848  001312  5D7A               	subwf	___ftadd@exp2& (0+255),w,b
 12849  001314  B0D8               	btfsc	status,0,c
 12850  001316  D024               	goto	l1700
 12851  001318                     l9270:
 12852                           
 12853                           ; BSR set to: 0
 12854  001318  0100               	movlb	0	; () banked
 12855  00131A  90D8               	bcf	status,0,c
 12856  00131C  3770               	rlcf	___ftadd@f1& (0+255),f,b
 12857  00131E  3771               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 12858  001320  3772               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 12859  001322  0100               	movlb	0	; () banked
 12860  001324  077B               	decf	___ftadd@exp1& (0+255),f,b
 12861                           
 12862                           ; BSR set to: 0
 12863  001326  0100               	movlb	0	; () banked
 12864  001328  517B               	movf	___ftadd@exp1& (0+255),w,b
 12865  00132A  0100               	movlb	0	; () banked
 12866  00132C  197A               	xorwf	___ftadd@exp2& (0+255),w,b
 12867  00132E  B4D8               	btfsc	status,2,c
 12868  001330  D011               	goto	l9278
 12869                           
 12870                           ; BSR set to: 0
 12871  001332  0100               	movlb	0	; () banked
 12872  001334  0779               	decf	___ftadd@sign& (0+255),f,b
 12873  001336  C079  F076         	movff	___ftadd@sign,??___ftadd
 12874  00133A  0E07               	movlw	7
 12875  00133C  0100               	movlb	0	; () banked
 12876  00133E  1776               	andwf	??___ftadd& (0+255),f,b
 12877  001340  B4D8               	btfsc	status,2,c
 12878  001342  D008               	goto	l9278
 12879  001344  D7E9               	goto	l9270
 12880  001346                     l9276:
 12881                           
 12882                           ; BSR set to: 0
 12883  001346  0100               	movlb	0	; () banked
 12884  001348  90D8               	bcf	status,0,c
 12885  00134A  3375               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 12886  00134C  3374               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 12887  00134E  3373               	rrcf	___ftadd@f2& (0+255),f,b
 12888  001350  0100               	movlb	0	; () banked
 12889  001352  2B7A               	incf	___ftadd@exp2& (0+255),f,b
 12890  001354                     l9278:
 12891                           
 12892                           ; BSR set to: 0
 12893  001354  0100               	movlb	0	; () banked
 12894  001356  517A               	movf	___ftadd@exp2& (0+255),w,b
 12895  001358  0100               	movlb	0	; () banked
 12896  00135A  197B               	xorwf	___ftadd@exp1& (0+255),w,b
 12897  00135C  A4D8               	btfss	status,2,c
 12898  00135E  D7F3               	goto	l9276
 12899  001360                     l1700:
 12900                           
 12901                           ; BSR set to: 0
 12902  001360  0100               	movlb	0	; () banked
 12903  001362  AF79               	btfss	___ftadd@sign& (0+255),7,b
 12904  001364  D012               	goto	l1709
 12905                           
 12906                           ; BSR set to: 0
 12907  001366  0EFF               	movlw	255
 12908  001368  0100               	movlb	0	; () banked
 12909  00136A  1B70               	xorwf	___ftadd@f1& (0+255),f,b
 12910  00136C  0EFF               	movlw	255
 12911  00136E  0100               	movlb	0	; () banked
 12912  001370  1B71               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 12913  001372  0EFF               	movlw	255
 12914  001374  0100               	movlb	0	; () banked
 12915  001376  1B72               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 12916  001378  0E01               	movlw	1
 12917  00137A  0100               	movlb	0	; () banked
 12918  00137C  2770               	addwf	___ftadd@f1& (0+255),f,b
 12919  00137E  0E00               	movlw	0
 12920  001380  0100               	movlb	0	; () banked
 12921  001382  2371               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 12922  001384  0E00               	movlw	0
 12923  001386  0100               	movlb	0	; () banked
 12924  001388  2372               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 12925  00138A                     l1709:
 12926                           
 12927                           ; BSR set to: 0
 12928  00138A  0100               	movlb	0	; () banked
 12929  00138C  AD79               	btfss	___ftadd@sign& (0+255),6,b
 12930  00138E  D012               	goto	l9284
 12931                           
 12932                           ; BSR set to: 0
 12933  001390  0EFF               	movlw	255
 12934  001392  0100               	movlb	0	; () banked
 12935  001394  1B73               	xorwf	___ftadd@f2& (0+255),f,b
 12936  001396  0EFF               	movlw	255
 12937  001398  0100               	movlb	0	; () banked
 12938  00139A  1B74               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12939  00139C  0EFF               	movlw	255
 12940  00139E  0100               	movlb	0	; () banked
 12941  0013A0  1B75               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12942  0013A2  0E01               	movlw	1
 12943  0013A4  0100               	movlb	0	; () banked
 12944  0013A6  2773               	addwf	___ftadd@f2& (0+255),f,b
 12945  0013A8  0E00               	movlw	0
 12946  0013AA  0100               	movlb	0	; () banked
 12947  0013AC  2374               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12948  0013AE  0E00               	movlw	0
 12949  0013B0  0100               	movlb	0	; () banked
 12950  0013B2  2375               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12951  0013B4                     l9284:
 12952                           
 12953                           ; BSR set to: 0
 12954  0013B4  0E00               	movlw	0
 12955  0013B6  0100               	movlb	0	; () banked
 12956  0013B8  6F79               	movwf	___ftadd@sign& (0+255),b
 12957                           
 12958                           ; BSR set to: 0
 12959  0013BA  0100               	movlb	0	; () banked
 12960  0013BC  5170               	movf	___ftadd@f1& (0+255),w,b
 12961  0013BE  0100               	movlb	0	; () banked
 12962  0013C0  2773               	addwf	___ftadd@f2& (0+255),f,b
 12963  0013C2  0100               	movlb	0	; () banked
 12964  0013C4  5171               	movf	(___ftadd@f1+1)& (0+255),w,b
 12965  0013C6  0100               	movlb	0	; () banked
 12966  0013C8  2374               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12967  0013CA  0100               	movlb	0	; () banked
 12968  0013CC  5172               	movf	(___ftadd@f1+2)& (0+255),w,b
 12969  0013CE  0100               	movlb	0	; () banked
 12970  0013D0  2375               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12971                           
 12972                           ; BSR set to: 0
 12973  0013D2  0100               	movlb	0	; () banked
 12974  0013D4  AF75               	btfss	(___ftadd@f2+2)& (0+255),7,b
 12975  0013D6  D015               	goto	l9294
 12976                           
 12977                           ; BSR set to: 0
 12978  0013D8  0EFF               	movlw	255
 12979  0013DA  0100               	movlb	0	; () banked
 12980  0013DC  1B73               	xorwf	___ftadd@f2& (0+255),f,b
 12981  0013DE  0EFF               	movlw	255
 12982  0013E0  0100               	movlb	0	; () banked
 12983  0013E2  1B74               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12984  0013E4  0EFF               	movlw	255
 12985  0013E6  0100               	movlb	0	; () banked
 12986  0013E8  1B75               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12987  0013EA  0E01               	movlw	1
 12988  0013EC  0100               	movlb	0	; () banked
 12989  0013EE  2773               	addwf	___ftadd@f2& (0+255),f,b
 12990  0013F0  0E00               	movlw	0
 12991  0013F2  0100               	movlb	0	; () banked
 12992  0013F4  2374               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12993  0013F6  0E00               	movlw	0
 12994  0013F8  0100               	movlb	0	; () banked
 12995  0013FA  2375               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12996                           
 12997                           ; BSR set to: 0
 12998  0013FC  0E01               	movlw	1
 12999  0013FE  0100               	movlb	0	; () banked
 13000  001400  6F79               	movwf	___ftadd@sign& (0+255),b
 13001  001402                     l9294:
 13002                           
 13003                           ; BSR set to: 0
 13004  001402  C073  F016         	movff	___ftadd@f2,___ftpack@arg
 13005  001406  C074  F017         	movff	___ftadd@f2+1,___ftpack@arg+1
 13006  00140A  C075  F018         	movff	___ftadd@f2+2,___ftpack@arg+2
 13007  00140E  C07B  F019         	movff	___ftadd@exp1,___ftpack@exp
 13008  001412  C079  F01A         	movff	___ftadd@sign,___ftpack@sign
 13009  001416  ECC9  F013         	call	___ftpack	;wreg free
 13010  00141A  C016  F070         	movff	?___ftpack,?___ftadd
 13011  00141E  C017  F071         	movff	?___ftpack+1,?___ftadd+1
 13012  001422  C018  F072         	movff	?___ftpack+2,?___ftadd+2
 13013  001426  0012               	return	
 13014  001428                     __end_of___ftadd:
 13015                           	opt stack 0
 13016                           tosu	equ	0xFFF
 13017                           tosh	equ	0xFFE
 13018                           tosl	equ	0xFFD
 13019                           pclath	equ	0xFFA
 13020                           tblptru	equ	0xFF8
 13021                           tblptrh	equ	0xFF7
 13022                           tblptrl	equ	0xFF6
 13023                           tablat	equ	0xFF5
 13024                           prodh	equ	0xFF4
 13025                           prodl	equ	0xFF3
 13026                           intcon	equ	0xFF2
 13027                           intcon2	equ	0xFF1
 13028                           intcon3	equ	0xFF0
 13029                           indf0	equ	0xFEF
 13030                           postinc0	equ	0xFEE
 13031                           fsr0h	equ	0xFEA
 13032                           fsr0l	equ	0xFE9
 13033                           wreg	equ	0xFE8
 13034                           indf1	equ	0xFE7
 13035                           postinc1	equ	0xFE6
 13036                           postdec1	equ	0xFE5
 13037                           fsr1h	equ	0xFE2
 13038                           fsr1l	equ	0xFE1
 13039                           indf2	equ	0xFDF
 13040                           postinc2	equ	0xFDE
 13041                           postdec2	equ	0xFDD
 13042                           fsr2h	equ	0xFDA
 13043                           fsr2l	equ	0xFD9
 13044                           status	equ	0xFD8
 13045                           
 13046 ;; *************** function ___ftpack *****************
 13047 ;; Defined at:
 13048 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
 13049 ;; Parameters:    Size  Location     Type
 13050 ;;  arg             3   21[COMRAM] unsigned um
 13051 ;;  exp             1   24[COMRAM] unsigned char 
 13052 ;;  sign            1   25[COMRAM] unsigned char 
 13053 ;; Auto vars:     Size  Location     Type
 13054 ;;		None
 13055 ;; Return value:  Size  Location     Type
 13056 ;;                  3   21[COMRAM] float 
 13057 ;; Registers used:
 13058 ;;		wreg, status,2, status,0
 13059 ;; Tracked objects:
 13060 ;;		On entry : 0/0
 13061 ;;		On exit  : 0/0
 13062 ;;		Unchanged: 0/0
 13063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13064 ;;      Params:         5       0       0       0       0       0       0       0       0
 13065 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13066 ;;      Temps:          3       0       0       0       0       0       0       0       0
 13067 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13068 ;;Total ram usage:        8 bytes
 13069 ;; Hardware stack levels used:    1
 13070 ;; Hardware stack levels required when called:    2
 13071 ;; This function calls:
 13072 ;;		Nothing
 13073 ;; This function is called by:
 13074 ;;		___altoft
 13075 ;;		___awtoft
 13076 ;;		___ftadd
 13077 ;;		___ftdiv
 13078 ;;		___ftmul
 13079 ;;		___lltoft
 13080 ;; This function uses a non-reentrant model
 13081 ;;
 13082                           
 13083                           	psect	text58
 13084  002792                     __ptext58:
 13085                           	opt stack 0
 13086  002792                     ___ftpack:
 13087                           	opt stack 23
 13088                           
 13089                           ;incstack = 0
 13090  002792  5019               	movf	___ftpack@exp,w,c
 13091  002794  B4D8               	btfsc	status,2,c
 13092  002796  D005               	goto	l9152
 13093  002798  5016               	movf	___ftpack@arg,w,c
 13094  00279A  1017               	iorwf	___ftpack@arg+1,w,c
 13095  00279C  1018               	iorwf	___ftpack@arg+2,w,c
 13096  00279E  A4D8               	btfss	status,2,c
 13097  0027A0  D00C               	goto	l9158
 13098  0027A2                     l9152:
 13099  0027A2  0E00               	movlw	0
 13100  0027A4  6E16               	movwf	?___ftpack,c
 13101  0027A6  0E00               	movlw	0
 13102  0027A8  6E17               	movwf	?___ftpack+1,c
 13103  0027AA  0E00               	movlw	0
 13104  0027AC  6E18               	movwf	?___ftpack+2,c
 13105  0027AE  0012               	return	
 13106  0027B0                     l9156:
 13107  0027B0  2A19               	incf	___ftpack@exp,f,c
 13108  0027B2  90D8               	bcf	status,0,c
 13109  0027B4  3218               	rrcf	___ftpack@arg+2,f,c
 13110  0027B6  3217               	rrcf	___ftpack@arg+1,f,c
 13111  0027B8  3216               	rrcf	___ftpack@arg,f,c
 13112  0027BA                     l9158:
 13113  0027BA  0E00               	movlw	0
 13114  0027BC  1416               	andwf	___ftpack@arg,w,c
 13115  0027BE  6E1B               	movwf	??___ftpack& (0+255),c
 13116  0027C0  0E00               	movlw	0
 13117  0027C2  1417               	andwf	___ftpack@arg+1,w,c
 13118  0027C4  6E1C               	movwf	(??___ftpack+1)& (0+255),c
 13119  0027C6  0EFE               	movlw	254
 13120  0027C8  1418               	andwf	___ftpack@arg+2,w,c
 13121  0027CA  6E1D               	movwf	(??___ftpack+2)& (0+255),c
 13122  0027CC  501B               	movf	??___ftpack,w,c
 13123  0027CE  101C               	iorwf	??___ftpack+1,w,c
 13124  0027D0  101D               	iorwf	??___ftpack+2,w,c
 13125  0027D2  B4D8               	btfsc	status,2,c
 13126  0027D4  D00C               	goto	l9164
 13127  0027D6  D7EC               	goto	l9156
 13128  0027D8                     l9160:
 13129  0027D8  2A19               	incf	___ftpack@exp,f,c
 13130  0027DA  0E01               	movlw	1
 13131  0027DC  2616               	addwf	___ftpack@arg,f,c
 13132  0027DE  0E00               	movlw	0
 13133  0027E0  2217               	addwfc	___ftpack@arg+1,f,c
 13134  0027E2  0E00               	movlw	0
 13135  0027E4  2218               	addwfc	___ftpack@arg+2,f,c
 13136  0027E6  90D8               	bcf	status,0,c
 13137  0027E8  3218               	rrcf	___ftpack@arg+2,f,c
 13138  0027EA  3217               	rrcf	___ftpack@arg+1,f,c
 13139  0027EC  3216               	rrcf	___ftpack@arg,f,c
 13140  0027EE                     l9164:
 13141  0027EE  0E00               	movlw	0
 13142  0027F0  1416               	andwf	___ftpack@arg,w,c
 13143  0027F2  6E1B               	movwf	??___ftpack& (0+255),c
 13144  0027F4  0E00               	movlw	0
 13145  0027F6  1417               	andwf	___ftpack@arg+1,w,c
 13146  0027F8  6E1C               	movwf	(??___ftpack+1)& (0+255),c
 13147  0027FA  0EFF               	movlw	255
 13148  0027FC  1418               	andwf	___ftpack@arg+2,w,c
 13149  0027FE  6E1D               	movwf	(??___ftpack+2)& (0+255),c
 13150  002800  501B               	movf	??___ftpack,w,c
 13151  002802  101C               	iorwf	??___ftpack+1,w,c
 13152  002804  101D               	iorwf	??___ftpack+2,w,c
 13153  002806  B4D8               	btfsc	status,2,c
 13154  002808  D006               	goto	l9168
 13155  00280A  D7E6               	goto	l9160
 13156  00280C                     l9166:
 13157  00280C  0619               	decf	___ftpack@exp,f,c
 13158  00280E  90D8               	bcf	status,0,c
 13159  002810  3616               	rlcf	___ftpack@arg,f,c
 13160  002812  3617               	rlcf	___ftpack@arg+1,f,c
 13161  002814  3618               	rlcf	___ftpack@arg+2,f,c
 13162  002816                     l9168:
 13163  002816  BE17               	btfsc	___ftpack@arg+1,7,c
 13164  002818  D003               	goto	l1662
 13165  00281A  0E02               	movlw	2
 13166  00281C  6019               	cpfslt	___ftpack@exp,c
 13167  00281E  D7F6               	goto	l9166
 13168  002820                     l1662:
 13169  002820  A019               	btfss	___ftpack@exp,0,c
 13170  002822  9E17               	bcf	___ftpack@arg+1,7,c
 13171  002824  90D8               	bcf	status,0,c
 13172  002826  3219               	rrcf	___ftpack@exp,f,c
 13173  002828  5019               	movf	___ftpack@exp,w,c
 13174  00282A  1218               	iorwf	___ftpack@arg+2,f,c
 13175  00282C  501A               	movf	___ftpack@sign,w,c
 13176  00282E  A4D8               	btfss	status,2,c
 13177  002830  8E18               	bsf	___ftpack@arg+2,7,c
 13178  002832  C016  F016         	movff	___ftpack@arg,?___ftpack
 13179  002836  C017  F017         	movff	___ftpack@arg+1,?___ftpack+1
 13180  00283A  C018  F018         	movff	___ftpack@arg+2,?___ftpack+2
 13181  00283E  0012               	return	
 13182  002840                     __end_of___ftpack:
 13183                           	opt stack 0
 13184                           tosu	equ	0xFFF
 13185                           tosh	equ	0xFFE
 13186                           tosl	equ	0xFFD
 13187                           pclath	equ	0xFFA
 13188                           tblptru	equ	0xFF8
 13189                           tblptrh	equ	0xFF7
 13190                           tblptrl	equ	0xFF6
 13191                           tablat	equ	0xFF5
 13192                           prodh	equ	0xFF4
 13193                           prodl	equ	0xFF3
 13194                           intcon	equ	0xFF2
 13195                           intcon2	equ	0xFF1
 13196                           intcon3	equ	0xFF0
 13197                           indf0	equ	0xFEF
 13198                           postinc0	equ	0xFEE
 13199                           fsr0h	equ	0xFEA
 13200                           fsr0l	equ	0xFE9
 13201                           wreg	equ	0xFE8
 13202                           indf1	equ	0xFE7
 13203                           postinc1	equ	0xFE6
 13204                           postdec1	equ	0xFE5
 13205                           fsr1h	equ	0xFE2
 13206                           fsr1l	equ	0xFE1
 13207                           indf2	equ	0xFDF
 13208                           postinc2	equ	0xFDE
 13209                           postdec2	equ	0xFDD
 13210                           fsr2h	equ	0xFDA
 13211                           fsr2l	equ	0xFD9
 13212                           status	equ	0xFD8
 13213                           
 13214 ;; *************** function ___ftneg *****************
 13215 ;; Defined at:
 13216 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftneg.c"
 13217 ;; Parameters:    Size  Location     Type
 13218 ;;  f1              3    6[BANK0 ] float 
 13219 ;; Auto vars:     Size  Location     Type
 13220 ;;		None
 13221 ;; Return value:  Size  Location     Type
 13222 ;;                  3    6[BANK0 ] float 
 13223 ;; Registers used:
 13224 ;;		wreg, status,2, status,0
 13225 ;; Tracked objects:
 13226 ;;		On entry : 0/0
 13227 ;;		On exit  : 0/0
 13228 ;;		Unchanged: 0/0
 13229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13230 ;;      Params:         0       3       0       0       0       0       0       0       0
 13231 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13232 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13233 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13234 ;;Total ram usage:        3 bytes
 13235 ;; Hardware stack levels used:    1
 13236 ;; Hardware stack levels required when called:    2
 13237 ;; This function calls:
 13238 ;;		Nothing
 13239 ;; This function is called by:
 13240 ;;		_convert_to_degrees
 13241 ;;		_sprintf
 13242 ;;		_strtod
 13243 ;;		_escreve_float_lcd
 13244 ;; This function uses a non-reentrant model
 13245 ;;
 13246                           
 13247                           	psect	text59
 13248  0033E6                     __ptext59:
 13249                           	opt stack 0
 13250  0033E6                     ___ftneg:
 13251                           	opt stack 25
 13252                           
 13253                           ;incstack = 0
 13254  0033E6  0100               	movlb	0	; () banked
 13255  0033E8  5166               	movf	___ftneg@f1& (0+255),w,b
 13256  0033EA  0100               	movlb	0	; () banked
 13257  0033EC  1167               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 13258  0033EE  0100               	movlb	0	; () banked
 13259  0033F0  1168               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 13260  0033F2  B4D8               	btfsc	status,2,c
 13261  0033F4  D009               	goto	l1759
 13262                           
 13263                           ; BSR set to: 0
 13264  0033F6  0E00               	movlw	0
 13265  0033F8  0100               	movlb	0	; () banked
 13266  0033FA  1B66               	xorwf	___ftneg@f1& (0+255),f,b
 13267  0033FC  0E00               	movlw	0
 13268  0033FE  0100               	movlb	0	; () banked
 13269  003400  1B67               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 13270  003402  0E80               	movlw	128
 13271  003404  0100               	movlb	0	; () banked
 13272  003406  1B68               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 13273  003408                     l1759:
 13274                           
 13275                           ; BSR set to: 0
 13276  003408  C066  F066         	movff	___ftneg@f1,?___ftneg
 13277  00340C  C067  F067         	movff	___ftneg@f1+1,?___ftneg+1
 13278  003410  C068  F068         	movff	___ftneg@f1+2,?___ftneg+2
 13279                           
 13280                           ; BSR set to: 0
 13281  003414  0012               	return		;funcret
 13282  003416                     __end_of___ftneg:
 13283                           	opt stack 0
 13284                           tosu	equ	0xFFF
 13285                           tosh	equ	0xFFE
 13286                           tosl	equ	0xFFD
 13287                           pclath	equ	0xFFA
 13288                           tblptru	equ	0xFF8
 13289                           tblptrh	equ	0xFF7
 13290                           tblptrl	equ	0xFF6
 13291                           tablat	equ	0xFF5
 13292                           prodh	equ	0xFF4
 13293                           prodl	equ	0xFF3
 13294                           intcon	equ	0xFF2
 13295                           intcon2	equ	0xFF1
 13296                           intcon3	equ	0xFF0
 13297                           indf0	equ	0xFEF
 13298                           postinc0	equ	0xFEE
 13299                           fsr0h	equ	0xFEA
 13300                           fsr0l	equ	0xFE9
 13301                           wreg	equ	0xFE8
 13302                           indf1	equ	0xFE7
 13303                           postinc1	equ	0xFE6
 13304                           postdec1	equ	0xFE5
 13305                           fsr1h	equ	0xFE2
 13306                           fsr1l	equ	0xFE1
 13307                           indf2	equ	0xFDF
 13308                           postinc2	equ	0xFDE
 13309                           postdec2	equ	0xFDD
 13310                           fsr2h	equ	0xFDA
 13311                           fsr2l	equ	0xFD9
 13312                           status	equ	0xFD8
 13313                           
 13314 ;; *************** function ___ftge *****************
 13315 ;; Defined at:
 13316 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
 13317 ;; Parameters:    Size  Location     Type
 13318 ;;  ff1             3   21[COMRAM] float 
 13319 ;;  ff2             3   24[COMRAM] float 
 13320 ;; Auto vars:     Size  Location     Type
 13321 ;;		None
 13322 ;; Return value:  Size  Location     Type
 13323 ;;		None               void
 13324 ;; Registers used:
 13325 ;;		wreg, status,2, status,0
 13326 ;; Tracked objects:
 13327 ;;		On entry : 0/0
 13328 ;;		On exit  : 0/0
 13329 ;;		Unchanged: 0/0
 13330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13331 ;;      Params:         6       0       0       0       0       0       0       0       0
 13332 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13333 ;;      Temps:          3       0       0       0       0       0       0       0       0
 13334 ;;      Totals:         9       0       0       0       0       0       0       0       0
 13335 ;;Total ram usage:        9 bytes
 13336 ;; Hardware stack levels used:    1
 13337 ;; Hardware stack levels required when called:    2
 13338 ;; This function calls:
 13339 ;;		Nothing
 13340 ;; This function is called by:
 13341 ;;		_sprintf
 13342 ;;		_strtod
 13343 ;;		_escreve_float_lcd
 13344 ;; This function uses a non-reentrant model
 13345 ;;
 13346                           
 13347                           	psect	text60
 13348  002B5E                     __ptext60:
 13349                           	opt stack 0
 13350  002B5E                     ___ftge:
 13351                           	opt stack 25
 13352                           
 13353                           ; BSR set to: 0
 13354                           ;incstack = 0
 13355  002B5E  AE18               	btfss	___ftge@ff1+2,7,c
 13356  002B60  D016               	goto	l9490
 13357  002B62  C016  F01C         	movff	___ftge@ff1,??___ftge
 13358  002B66  C017  F01D         	movff	___ftge@ff1+1,??___ftge+1
 13359  002B6A  C018  F01E         	movff	___ftge@ff1+2,??___ftge+2
 13360  002B6E  1E1C               	comf	??___ftge,f,c
 13361  002B70  1E1D               	comf	??___ftge+1,f,c
 13362  002B72  1E1E               	comf	??___ftge+2,f,c
 13363  002B74  2A1C               	incf	??___ftge,f,c
 13364  002B76  0E00               	movlw	0
 13365  002B78  221D               	addwfc	??___ftge+1,f,c
 13366  002B7A  221E               	addwfc	??___ftge+2,f,c
 13367  002B7C  0E00               	movlw	0
 13368  002B7E  241C               	addwf	??___ftge,w,c
 13369  002B80  6E16               	movwf	___ftge@ff1,c
 13370  002B82  0E00               	movlw	0
 13371  002B84  201D               	addwfc	??___ftge+1,w,c
 13372  002B86  6E17               	movwf	___ftge@ff1+1,c
 13373  002B88  0E80               	movlw	128
 13374  002B8A  201E               	addwfc	??___ftge+2,w,c
 13375  002B8C  6E18               	movwf	___ftge@ff1+2,c
 13376  002B8E                     l9490:
 13377  002B8E  AE1B               	btfss	___ftge@ff2+2,7,c
 13378  002B90  D016               	goto	l9494
 13379  002B92  C019  F01C         	movff	___ftge@ff2,??___ftge
 13380  002B96  C01A  F01D         	movff	___ftge@ff2+1,??___ftge+1
 13381  002B9A  C01B  F01E         	movff	___ftge@ff2+2,??___ftge+2
 13382  002B9E  1E1C               	comf	??___ftge,f,c
 13383  002BA0  1E1D               	comf	??___ftge+1,f,c
 13384  002BA2  1E1E               	comf	??___ftge+2,f,c
 13385  002BA4  2A1C               	incf	??___ftge,f,c
 13386  002BA6  0E00               	movlw	0
 13387  002BA8  221D               	addwfc	??___ftge+1,f,c
 13388  002BAA  221E               	addwfc	??___ftge+2,f,c
 13389  002BAC  0E00               	movlw	0
 13390  002BAE  241C               	addwf	??___ftge,w,c
 13391  002BB0  6E19               	movwf	___ftge@ff2,c
 13392  002BB2  0E00               	movlw	0
 13393  002BB4  201D               	addwfc	??___ftge+1,w,c
 13394  002BB6  6E1A               	movwf	___ftge@ff2+1,c
 13395  002BB8  0E80               	movlw	128
 13396  002BBA  201E               	addwfc	??___ftge+2,w,c
 13397  002BBC  6E1B               	movwf	___ftge@ff2+2,c
 13398  002BBE                     l9494:
 13399  002BBE  0E00               	movlw	0
 13400  002BC0  1A16               	xorwf	___ftge@ff1,f,c
 13401  002BC2  0E00               	movlw	0
 13402  002BC4  1A17               	xorwf	___ftge@ff1+1,f,c
 13403  002BC6  0E80               	movlw	128
 13404  002BC8  1A18               	xorwf	___ftge@ff1+2,f,c
 13405  002BCA  0E00               	movlw	0
 13406  002BCC  1A19               	xorwf	___ftge@ff2,f,c
 13407  002BCE  0E00               	movlw	0
 13408  002BD0  1A1A               	xorwf	___ftge@ff2+1,f,c
 13409  002BD2  0E80               	movlw	128
 13410  002BD4  1A1B               	xorwf	___ftge@ff2+2,f,c
 13411  002BD6  5019               	movf	___ftge@ff2,w,c
 13412  002BD8  5C16               	subwf	___ftge@ff1,w,c
 13413  002BDA  501A               	movf	___ftge@ff2+1,w,c
 13414  002BDC  5817               	subwfb	___ftge@ff1+1,w,c
 13415  002BDE  501B               	movf	___ftge@ff2+2,w,c
 13416  002BE0  5818               	subwfb	___ftge@ff1+2,w,c
 13417  002BE2  B0D8               	btfsc	status,0,c
 13418  002BE4  D002               	goto	l9500
 13419  002BE6  90D8               	bcf	status,0,c
 13420  002BE8  0012               	return	
 13421  002BEA                     l9500:
 13422  002BEA  80D8               	bsf	status,0,c
 13423  002BEC  0012               	return	
 13424  002BEE                     __end_of___ftge:
 13425                           	opt stack 0
 13426                           tosu	equ	0xFFF
 13427                           tosh	equ	0xFFE
 13428                           tosl	equ	0xFFD
 13429                           pclath	equ	0xFFA
 13430                           tblptru	equ	0xFF8
 13431                           tblptrh	equ	0xFF7
 13432                           tblptrl	equ	0xFF6
 13433                           tablat	equ	0xFF5
 13434                           prodh	equ	0xFF4
 13435                           prodl	equ	0xFF3
 13436                           intcon	equ	0xFF2
 13437                           intcon2	equ	0xFF1
 13438                           intcon3	equ	0xFF0
 13439                           indf0	equ	0xFEF
 13440                           postinc0	equ	0xFEE
 13441                           fsr0h	equ	0xFEA
 13442                           fsr0l	equ	0xFE9
 13443                           wreg	equ	0xFE8
 13444                           indf1	equ	0xFE7
 13445                           postinc1	equ	0xFE6
 13446                           postdec1	equ	0xFE5
 13447                           fsr1h	equ	0xFE2
 13448                           fsr1l	equ	0xFE1
 13449                           indf2	equ	0xFDF
 13450                           postinc2	equ	0xFDE
 13451                           postdec2	equ	0xFDD
 13452                           fsr2h	equ	0xFDA
 13453                           fsr2l	equ	0xFD9
 13454                           status	equ	0xFD8
 13455                           
 13456 ;; *************** function _controle_shrc *****************
 13457 ;; Defined at:
 13458 ;;		line 112 in file "bibliotecas/SHRC.c"
 13459 ;; Parameters:    Size  Location     Type
 13460 ;;		None
 13461 ;; Auto vars:     Size  Location     Type
 13462 ;;		None
 13463 ;; Return value:  Size  Location     Type
 13464 ;;                  1    wreg      void 
 13465 ;; Registers used:
 13466 ;;		wreg, status,2, status,0, cstack
 13467 ;; Tracked objects:
 13468 ;;		On entry : 0/0
 13469 ;;		On exit  : 0/0
 13470 ;;		Unchanged: 0/0
 13471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13472 ;;      Params:         0       0       0       0       0       0       0       0       0
 13473 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13474 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13475 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13476 ;;Total ram usage:        0 bytes
 13477 ;; Hardware stack levels used:    1
 13478 ;; Hardware stack levels required when called:    3
 13479 ;; This function calls:
 13480 ;;		_ativa_latch_shrc
 13481 ;;		_envia_dados_shrc
 13482 ;; This function is called by:
 13483 ;;		_main
 13484 ;;		_timer_dois
 13485 ;; This function uses a non-reentrant model
 13486 ;;
 13487                           
 13488                           	psect	text61
 13489  0035FC                     __ptext61:
 13490                           	opt stack 0
 13491  0035FC                     _controle_shrc:
 13492                           	opt stack 27
 13493                           
 13494                           ;SHRC.c: 115: envia_dados_shrc(dado);
 13495                           
 13496                           ;incstack = 0
 13497  0035FC  5040               	movf	_dado,w,c
 13498  0035FE  EC7E  F019         	call	_envia_dados_shrc
 13499                           
 13500                           ;SHRC.c: 116: ativa_latch_shrc();
 13501  003602  ECC3  F01A         	call	_ativa_latch_shrc	;wreg free
 13502  003606  0012               	return		;funcret
 13503  003608                     __end_of_controle_shrc:
 13504                           	opt stack 0
 13505                           tosu	equ	0xFFF
 13506                           tosh	equ	0xFFE
 13507                           tosl	equ	0xFFD
 13508                           pclath	equ	0xFFA
 13509                           tblptru	equ	0xFF8
 13510                           tblptrh	equ	0xFF7
 13511                           tblptrl	equ	0xFF6
 13512                           tablat	equ	0xFF5
 13513                           prodh	equ	0xFF4
 13514                           prodl	equ	0xFF3
 13515                           intcon	equ	0xFF2
 13516                           intcon2	equ	0xFF1
 13517                           intcon3	equ	0xFF0
 13518                           indf0	equ	0xFEF
 13519                           postinc0	equ	0xFEE
 13520                           fsr0h	equ	0xFEA
 13521                           fsr0l	equ	0xFE9
 13522                           wreg	equ	0xFE8
 13523                           indf1	equ	0xFE7
 13524                           postinc1	equ	0xFE6
 13525                           postdec1	equ	0xFE5
 13526                           fsr1h	equ	0xFE2
 13527                           fsr1l	equ	0xFE1
 13528                           indf2	equ	0xFDF
 13529                           postinc2	equ	0xFDE
 13530                           postdec2	equ	0xFDD
 13531                           fsr2h	equ	0xFDA
 13532                           fsr2l	equ	0xFD9
 13533                           status	equ	0xFD8
 13534                           
 13535 ;; *************** function _envia_dados_shrc *****************
 13536 ;; Defined at:
 13537 ;;		line 62 in file "bibliotecas/SHRC.c"
 13538 ;; Parameters:    Size  Location     Type
 13539 ;;  data_to_shrc    1    wreg     unsigned char 
 13540 ;; Auto vars:     Size  Location     Type
 13541 ;;  data_to_shrc    1   22[COMRAM] unsigned char 
 13542 ;;  contador        1   21[COMRAM] unsigned char 
 13543 ;; Return value:  Size  Location     Type
 13544 ;;                  1    wreg      void 
 13545 ;; Registers used:
 13546 ;;		wreg, status,2, status,0
 13547 ;; Tracked objects:
 13548 ;;		On entry : 0/0
 13549 ;;		On exit  : 0/0
 13550 ;;		Unchanged: 0/0
 13551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13552 ;;      Params:         0       0       0       0       0       0       0       0       0
 13553 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13554 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13555 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13556 ;;Total ram usage:        2 bytes
 13557 ;; Hardware stack levels used:    1
 13558 ;; Hardware stack levels required when called:    2
 13559 ;; This function calls:
 13560 ;;		Nothing
 13561 ;; This function is called by:
 13562 ;;		_controle_shrc
 13563 ;; This function uses a non-reentrant model
 13564 ;;
 13565                           
 13566                           	psect	text62
 13567  0032FC                     __ptext62:
 13568                           	opt stack 0
 13569  0032FC                     _envia_dados_shrc:
 13570                           	opt stack 27
 13571                           
 13572                           ;incstack = 0
 13573                           ;envia_dados_shrc@data_to_shrc stored from wreg
 13574  0032FC  6E17               	movwf	envia_dados_shrc@data_to_shrc,c
 13575                           
 13576                           ;SHRC.c: 64: unsigned char contador=0;
 13577  0032FE  0E00               	movlw	0
 13578  003300  6E16               	movwf	envia_dados_shrc@contador,c
 13579                           
 13580                           ;SHRC.c: 65: (INTCONbits.GIE = 0);
 13581  003302  9EF2               	bcf	intcon,7,c	;volatile
 13582                           
 13583                           ;SHRC.c: 67: while(contador<=7)
 13584  003304  D018               	goto	l4024
 13585  003306                     l4002:
 13586                           
 13587                           ;SHRC.c: 68: {
 13588                           ;SHRC.c: 69: if((data_to_shrc & 0x80) == 0)
 13589  003306  BE17               	btfsc	envia_dados_shrc@data_to_shrc,7,c
 13590  003308  D002               	goto	l354
 13591                           
 13592                           ;SHRC.c: 70: {
 13593                           ;SHRC.c: 71: LATBbits.LATB7 = 0;
 13594  00330A  9E8A               	bcf	3978,7,c	;volatile
 13595                           
 13596                           ;SHRC.c: 72: }
 13597  00330C  D001               	goto	l4006
 13598  00330E                     l354:
 13599                           
 13600                           ;SHRC.c: 73: else
 13601                           ;SHRC.c: 74: {
 13602                           ;SHRC.c: 75: LATBbits.LATB7 = 1;
 13603  00330E  8E8A               	bsf	3978,7,c	;volatile
 13604  003310                     l4006:
 13605                           
 13606                           ;SHRC.c: 76: }
 13607                           ;SHRC.c: 77: data_to_shrc = data_to_shrc << 1;
 13608  003310  5017               	movf	envia_dados_shrc@data_to_shrc,w,c
 13609  003312  2417               	addwf	envia_dados_shrc@data_to_shrc,w,c
 13610  003314  6E17               	movwf	envia_dados_shrc@data_to_shrc,c
 13611                           
 13612                           ;SHRC.c: 78: _delay((unsigned long)((30)*(48000000/4000000.0)));
 13613  003316  0E78               	movlw	120
 13614  003318                     u14627:
 13615  003318  2EE8               	decfsz	wreg,f,c
 13616  00331A  D7FE               	bra	u14627
 13617                           
 13618                           ;SHRC.c: 79: LATBbits.LATB6 = 1;
 13619  00331C  8C8A               	bsf	3978,6,c	;volatile
 13620                           
 13621                           ;SHRC.c: 80: _delay((unsigned long)((30)*(48000000/4000000.0)));
 13622  00331E  0E78               	movlw	120
 13623  003320                     u14637:
 13624  003320  2EE8               	decfsz	wreg,f,c
 13625  003322  D7FE               	bra	u14637
 13626                           
 13627                           ;SHRC.c: 81: LATBbits.LATB7 = 0;
 13628  003324  9E8A               	bcf	3978,7,c	;volatile
 13629                           
 13630                           ;SHRC.c: 82: _delay((unsigned long)((30)*(48000000/4000000.0)));
 13631  003326  0E78               	movlw	120
 13632  003328                     u14647:
 13633  003328  2EE8               	decfsz	wreg,f,c
 13634  00332A  D7FE               	bra	u14647
 13635                           
 13636                           ;SHRC.c: 83: LATBbits.LATB6 = 0;
 13637  00332C  9C8A               	bcf	3978,6,c	;volatile
 13638                           
 13639                           ;SHRC.c: 84: _delay((unsigned long)((30)*(48000000/4000000.0)));
 13640  00332E  0E78               	movlw	120
 13641  003330                     u14657:
 13642  003330  2EE8               	decfsz	wreg,f,c
 13643  003332  D7FE               	bra	u14657
 13644                           
 13645                           ;SHRC.c: 85: contador++;
 13646  003334  2A16               	incf	envia_dados_shrc@contador,f,c
 13647  003336                     l4024:
 13648  003336  0E07               	movlw	7
 13649  003338  6416               	cpfsgt	envia_dados_shrc@contador,c
 13650  00333A  D7E5               	goto	l4002
 13651                           
 13652                           ;SHRC.c: 86: }
 13653                           ;SHRC.c: 87: (INTCONbits.GIE = 1);
 13654  00333C  8EF2               	bsf	intcon,7,c	;volatile
 13655  00333E  0012               	return		;funcret
 13656  003340                     __end_of_envia_dados_shrc:
 13657                           	opt stack 0
 13658                           tosu	equ	0xFFF
 13659                           tosh	equ	0xFFE
 13660                           tosl	equ	0xFFD
 13661                           pclath	equ	0xFFA
 13662                           tblptru	equ	0xFF8
 13663                           tblptrh	equ	0xFF7
 13664                           tblptrl	equ	0xFF6
 13665                           tablat	equ	0xFF5
 13666                           prodh	equ	0xFF4
 13667                           prodl	equ	0xFF3
 13668                           intcon	equ	0xFF2
 13669                           intcon2	equ	0xFF1
 13670                           intcon3	equ	0xFF0
 13671                           indf0	equ	0xFEF
 13672                           postinc0	equ	0xFEE
 13673                           fsr0h	equ	0xFEA
 13674                           fsr0l	equ	0xFE9
 13675                           wreg	equ	0xFE8
 13676                           indf1	equ	0xFE7
 13677                           postinc1	equ	0xFE6
 13678                           postdec1	equ	0xFE5
 13679                           fsr1h	equ	0xFE2
 13680                           fsr1l	equ	0xFE1
 13681                           indf2	equ	0xFDF
 13682                           postinc2	equ	0xFDE
 13683                           postdec2	equ	0xFDD
 13684                           fsr2h	equ	0xFDA
 13685                           fsr2l	equ	0xFD9
 13686                           status	equ	0xFD8
 13687                           
 13688 ;; *************** function _ativa_latch_shrc *****************
 13689 ;; Defined at:
 13690 ;;		line 96 in file "bibliotecas/SHRC.c"
 13691 ;; Parameters:    Size  Location     Type
 13692 ;;		None
 13693 ;; Auto vars:     Size  Location     Type
 13694 ;;		None
 13695 ;; Return value:  Size  Location     Type
 13696 ;;                  1    wreg      void 
 13697 ;; Registers used:
 13698 ;;		wreg
 13699 ;; Tracked objects:
 13700 ;;		On entry : 0/0
 13701 ;;		On exit  : 0/0
 13702 ;;		Unchanged: 0/0
 13703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13704 ;;      Params:         0       0       0       0       0       0       0       0       0
 13705 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13706 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13707 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13708 ;;Total ram usage:        0 bytes
 13709 ;; Hardware stack levels used:    1
 13710 ;; Hardware stack levels required when called:    2
 13711 ;; This function calls:
 13712 ;;		Nothing
 13713 ;; This function is called by:
 13714 ;;		_controle_shrc
 13715 ;; This function uses a non-reentrant model
 13716 ;;
 13717                           
 13718                           	psect	text63
 13719  003586                     __ptext63:
 13720                           	opt stack 0
 13721  003586                     _ativa_latch_shrc:
 13722                           	opt stack 27
 13723                           
 13724                           ;SHRC.c: 99: LATBbits.LATB5 = 0;
 13725                           
 13726                           ;incstack = 0
 13727  003586  9A8A               	bcf	3978,5,c	;volatile
 13728                           
 13729                           ;SHRC.c: 100: _delay((unsigned long)((30)*(48000000/4000000.0)));
 13730  003588  0E78               	movlw	120
 13731  00358A                     u14667:
 13732  00358A  2EE8               	decfsz	wreg,f,c
 13733  00358C  D7FE               	bra	u14667
 13734                           
 13735                           ;SHRC.c: 101: LATBbits.LATB5 = 1;
 13736  00358E  8A8A               	bsf	3978,5,c	;volatile
 13737                           
 13738                           ;SHRC.c: 102: _delay((unsigned long)((60)*(48000000/4000000.0)));
 13739  003590  0EF0               	movlw	240
 13740  003592                     u14677:
 13741  003592  2EE8               	decfsz	wreg,f,c
 13742  003594  D7FE               	bra	u14677
 13743                           
 13744                           ;SHRC.c: 103: LATBbits.LATB5 = 0;
 13745  003596  9A8A               	bcf	3978,5,c	;volatile
 13746  003598  0012               	return		;funcret
 13747  00359A                     __end_of_ativa_latch_shrc:
 13748                           	opt stack 0
 13749                           tosu	equ	0xFFF
 13750                           tosh	equ	0xFFE
 13751                           tosl	equ	0xFFD
 13752                           pclath	equ	0xFFA
 13753                           tblptru	equ	0xFF8
 13754                           tblptrh	equ	0xFF7
 13755                           tblptrl	equ	0xFF6
 13756                           tablat	equ	0xFF5
 13757                           prodh	equ	0xFF4
 13758                           prodl	equ	0xFF3
 13759                           intcon	equ	0xFF2
 13760                           intcon2	equ	0xFF1
 13761                           intcon3	equ	0xFF0
 13762                           indf0	equ	0xFEF
 13763                           postinc0	equ	0xFEE
 13764                           fsr0h	equ	0xFEA
 13765                           fsr0l	equ	0xFE9
 13766                           wreg	equ	0xFE8
 13767                           indf1	equ	0xFE7
 13768                           postinc1	equ	0xFE6
 13769                           postdec1	equ	0xFE5
 13770                           fsr1h	equ	0xFE2
 13771                           fsr1l	equ	0xFE1
 13772                           indf2	equ	0xFDF
 13773                           postinc2	equ	0xFDE
 13774                           postdec2	equ	0xFDD
 13775                           fsr2h	equ	0xFDA
 13776                           fsr2l	equ	0xFD9
 13777                           status	equ	0xFD8
 13778                           
 13779 ;; *************** function _isr *****************
 13780 ;; Defined at:
 13781 ;;		line 96 in file "main.c"
 13782 ;; Parameters:    Size  Location     Type
 13783 ;;		None
 13784 ;; Auto vars:     Size  Location     Type
 13785 ;;  cont            1   20[COMRAM] unsigned char 
 13786 ;; Return value:  Size  Location     Type
 13787 ;;                  1    wreg      void 
 13788 ;; Registers used:
 13789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13790 ;; Tracked objects:
 13791 ;;		On entry : 0/0
 13792 ;;		On exit  : 0/0
 13793 ;;		Unchanged: 0/0
 13794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13795 ;;      Params:         0       0       0       0       0       0       0       0       0
 13796 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13797 ;;      Temps:         16       0       0       0       0       0       0       0       0
 13798 ;;      Totals:        17       0       0       0       0       0       0       0       0
 13799 ;;Total ram usage:       17 bytes
 13800 ;; Hardware stack levels used:    1
 13801 ;; Hardware stack levels required when called:    1
 13802 ;; This function calls:
 13803 ;;		_recebe_dado_uart
 13804 ;;		_tratamento_uart
 13805 ;;		i2_write_timer_zero
 13806 ;; This function is called by:
 13807 ;;		Interrupt level 2
 13808 ;; This function uses a non-reentrant model
 13809 ;;
 13810                           
 13811                           	psect	intcode
 13812  000008                     __pintcode:
 13813                           	opt stack 0
 13814  000008                     _isr:
 13815                           	opt stack 22
 13816                           
 13817                           ;incstack = 0
 13818  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13819  00000A  EDE0  F00F         	call	int_func,f	;refresh shadow registers
 13820                           tosu	equ	0xFFF
 13821                           tosh	equ	0xFFE
 13822                           tosl	equ	0xFFD
 13823                           pclath	equ	0xFFA
 13824                           tblptru	equ	0xFF8
 13825                           tblptrh	equ	0xFF7
 13826                           tblptrl	equ	0xFF6
 13827                           tablat	equ	0xFF5
 13828                           prodh	equ	0xFF4
 13829                           prodl	equ	0xFF3
 13830                           intcon	equ	0xFF2
 13831                           intcon2	equ	0xFF1
 13832                           intcon3	equ	0xFF0
 13833                           indf0	equ	0xFEF
 13834                           postinc0	equ	0xFEE
 13835                           fsr0h	equ	0xFEA
 13836                           fsr0l	equ	0xFE9
 13837                           wreg	equ	0xFE8
 13838                           indf1	equ	0xFE7
 13839                           postinc1	equ	0xFE6
 13840                           postdec1	equ	0xFE5
 13841                           fsr1h	equ	0xFE2
 13842                           fsr1l	equ	0xFE1
 13843                           indf2	equ	0xFDF
 13844                           postinc2	equ	0xFDE
 13845                           postdec2	equ	0xFDD
 13846                           fsr2h	equ	0xFDA
 13847                           fsr2l	equ	0xFD9
 13848                           status	equ	0xFD8
 13849                           
 13850                           	psect	intcode_body
 13851  001FC0                     __pintcode_body:
 13852                           	opt stack 22
 13853  001FC0                     int_func:
 13854                           	opt stack 22
 13855  001FC0  0006               	pop		; remove dummy address from shadow register refresh
 13856  001FC2  CFFA F007          	movff	pclath,??_isr+2
 13857  001FC6  CFFB F008          	movff	pclatu,??_isr+3
 13858  001FCA  CFE9 F009          	movff	fsr0l,??_isr+4
 13859  001FCE  CFEA F00A          	movff	fsr0h,??_isr+5
 13860  001FD2  CFE1 F00B          	movff	fsr1l,??_isr+6
 13861  001FD6  CFE2 F00C          	movff	fsr1h,??_isr+7
 13862  001FDA  CFD9 F00D          	movff	fsr2l,??_isr+8
 13863  001FDE  CFDA F00E          	movff	fsr2h,??_isr+9
 13864  001FE2  CFF3 F00F          	movff	prodl,??_isr+10
 13865  001FE6  CFF4 F010          	movff	prodh,??_isr+11
 13866  001FEA  CFF6 F011          	movff	tblptrl,??_isr+12
 13867  001FEE  CFF7 F012          	movff	tblptrh,??_isr+13
 13868  001FF2  CFF8 F013          	movff	tblptru,??_isr+14
 13869  001FF6  CFF5 F014          	movff	tablat,??_isr+15
 13870                           
 13871                           ;main.c: 98: unsigned char cont;
 13872                           ;main.c: 101: if (PIE1bits.RCIE && PIR1bits.RCIF)
 13873  001FFA  BA9D               	btfsc	3997,5,c	;volatile
 13874  001FFC  AA9E               	btfss	3998,5,c	;volatile
 13875  001FFE  D014               	goto	i2l8326
 13876                           
 13877                           ;main.c: 102: {
 13878                           ;main.c: 103: data_uart_recebe = recebe_dado_uart();
 13879  002000  ECE8  F01A         	call	_recebe_dado_uart	;wreg free
 13880  002004  6E49               	movwf	_data_uart_recebe,c
 13881                           
 13882                           ;main.c: 104: PIR1bits.RCIF = 0;
 13883  002006  9A9E               	bcf	3998,5,c	;volatile
 13884                           
 13885                           ;main.c: 105: tratamento_uart(data_uart_recebe);
 13886  002008  5049               	movf	_data_uart_recebe,w,c
 13887  00200A  EC8F  F011         	call	_tratamento_uart
 13888                           
 13889                           ;main.c: 106: LATBbits.LATB4 = ~LATBbits.LATB4;
 13890  00200E  A88A               	btfss	3978,4,c	;volatile
 13891  002010  D002               	goto	i2u918_40
 13892  002012  0E01               	movlw	1
 13893  002014  D001               	goto	i2u918_46
 13894  002016                     i2u918_40:
 13895  002016  0E00               	movlw	0
 13896  002018                     i2u918_46:
 13897  002018  0AFF               	xorlw	255
 13898  00201A  6E05               	movwf	??_isr& (0+255),c
 13899  00201C  3A05               	swapf	??_isr,f,c
 13900  00201E  508A               	movf	3978,w,c	;volatile
 13901  002020  1805               	xorwf	??_isr,w,c
 13902  002022  0BEF               	andlw	-17
 13903  002024  1805               	xorwf	??_isr,w,c
 13904  002026  6E8A               	movwf	3978,c	;volatile
 13905  002028                     i2l8326:
 13906                           
 13907                           ;main.c: 109: }
 13908                           ;main.c: 112: unsigned char cont;
 13909                           ;main.c: 114: if (TMR0IF && T0IF)
 13910  002028  B4F2               	btfsc	intcon,2,c	;volatile
 13911  00202A  A4F2               	btfss	intcon,2,c	;volatile
 13912  00202C  D039               	goto	i2l8356
 13913                           
 13914                           ;main.c: 115: {
 13915                           ;main.c: 116: INTCONbits.TMR0IF = 0;
 13916  00202E  94F2               	bcf	intcon,2,c	;volatile
 13917                           
 13918                           ;main.c: 117: sinaliza_int_timer = 1;
 13919  002030  0E01               	movlw	1
 13920  002032  6E48               	movwf	_sinaliza_int_timer,c
 13921                           
 13922                           ;main.c: 119: for(cont= 0; cont<2;cont++)
 13923  002034  0E00               	movlw	0
 13924  002036  6E15               	movwf	isr@cont,c
 13925  002038                     i2l8334:
 13926  002038  0E01               	movlw	1
 13927  00203A  6415               	cpfsgt	isr@cont,c
 13928  00203C  D001               	goto	i2l8338
 13929  00203E  D019               	goto	i2l8346
 13930  002040                     i2l8338:
 13931                           
 13932                           ;main.c: 120: {
 13933                           ;main.c: 121: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
 13934  002040  5015               	movf	isr@cont,w,c
 13935  002042  0D02               	mullw	2
 13936  002044  0EC7               	movlw	low _tempo_tarefa
 13937  002046  24F3               	addwf	prodl,w,c
 13938  002048  6ED9               	movwf	fsr2l,c
 13939  00204A  0E00               	movlw	high _tempo_tarefa
 13940  00204C  20F4               	addwfc	prodh,w,c
 13941  00204E  6EDA               	movwf	fsr2h,c
 13942  002050  50DE               	movf	postinc2,w,c
 13943  002052  10DE               	iorwf	postinc2,w,c
 13944  002054  B4D8               	btfsc	status,2,c
 13945  002056  D00B               	goto	i2l8342
 13946  002058  5015               	movf	isr@cont,w,c
 13947  00205A  0D02               	mullw	2
 13948  00205C  0EC7               	movlw	low _tempo_tarefa
 13949  00205E  24F3               	addwf	prodl,w,c
 13950  002060  6ED9               	movwf	fsr2l,c
 13951  002062  0E00               	movlw	high _tempo_tarefa
 13952  002064  20F4               	addwfc	prodh,w,c
 13953  002066  6EDA               	movwf	fsr2h,c
 13954  002068  06DE               	decf	postinc2,f,c
 13955  00206A  0E00               	movlw	0
 13956  00206C  5ADD               	subwfb	postdec2,f,c
 13957  00206E                     i2l8342:
 13958  00206E  2A15               	incf	isr@cont,f,c
 13959  002070  D7E3               	goto	i2l8334
 13960  002072                     i2l8346:
 13961                           
 13962                           ;main.c: 122: }
 13963                           ;main.c: 125: if(tarefa_em_execucao == 1)
 13964  002072  0447               	decf	_tarefa_em_execucao,w,c	;volatile
 13965  002074  A4D8               	btfss	status,2,c
 13966  002076  D00E               	goto	i2l8354
 13967                           
 13968                           ;main.c: 126: {
 13969                           ;main.c: 127: timeout_tarefa--;
 13970  002078  0100               	movlb	0	; () banked
 13971  00207A  07DA               	decf	_timeout_tarefa& (0+255),f,b
 13972  00207C  A0D8               	btfss	status,0,c
 13973  00207E  07DB               	decf	(_timeout_tarefa+1)& (0+255),f,b
 13974                           
 13975                           ; BSR set to: 0
 13976                           ;main.c: 128: if(!timeout_tarefa)
 13977  002080  0100               	movlb	0	; () banked
 13978  002082  51DA               	movf	_timeout_tarefa& (0+255),w,b
 13979  002084  0100               	movlb	0	; () banked
 13980  002086  11DB               	iorwf	(_timeout_tarefa+1)& (0+255),w,b
 13981  002088  A4D8               	btfss	status,2,c
 13982  00208A  D004               	goto	i2l8354
 13983                           
 13984                           ; BSR set to: 0
 13985                           ;main.c: 129: {
 13986                           ;main.c: 131: PCLATH = 0;
 13987  00208C  0E00               	movlw	0
 13988  00208E  6EFA               	movwf	pclath,c	;volatile
 13989                           
 13990                           ;main.c: 132: PCL = 0;
 13991  002090  0E00               	movlw	0
 13992  002092  6EF9               	movwf	pcl,c	;volatile
 13993  002094                     i2l8354:
 13994                           
 13995                           ;main.c: 133: }
 13996                           ;main.c: 134: }
 13997                           ;main.c: 137: write_timer_zero(0x0083);
 13998  002094  0E00               	movlw	0
 13999  002096  6E02               	movwf	i2write_timer_zero@timer0+1,c
 14000  002098  0E83               	movlw	131
 14001  00209A  6E01               	movwf	i2write_timer_zero@timer0,c
 14002  00209C  ECDF  F01A         	call	i2_write_timer_zero	;wreg free
 14003  0020A0                     i2l8356:
 14004                           
 14005                           ;main.c: 139: }
 14006                           ;main.c: 141: if (INT0IF && INT0IE)
 14007  0020A0  B2F2               	btfsc	intcon,1,c	;volatile
 14008  0020A2  A8F2               	btfss	intcon,4,c	;volatile
 14009  0020A4  D001               	goto	i2l77
 14010                           
 14011                           ;main.c: 142: {
 14012                           ;main.c: 143: INT0IF = 0;
 14013  0020A6  92F2               	bcf	intcon,1,c	;volatile
 14014  0020A8                     i2l77:
 14015  0020A8  C014  FFF5         	movff	??_isr+15,tablat
 14016  0020AC  C013  FFF8         	movff	??_isr+14,tblptru
 14017  0020B0  C012  FFF7         	movff	??_isr+13,tblptrh
 14018  0020B4  C011  FFF6         	movff	??_isr+12,tblptrl
 14019  0020B8  C010  FFF4         	movff	??_isr+11,prodh
 14020  0020BC  C00F  FFF3         	movff	??_isr+10,prodl
 14021  0020C0  C00E  FFDA         	movff	??_isr+9,fsr2h
 14022  0020C4  C00D  FFD9         	movff	??_isr+8,fsr2l
 14023  0020C8  C00C  FFE2         	movff	??_isr+7,fsr1h
 14024  0020CC  C00B  FFE1         	movff	??_isr+6,fsr1l
 14025  0020D0  C00A  FFEA         	movff	??_isr+5,fsr0h
 14026  0020D4  C009  FFE9         	movff	??_isr+4,fsr0l
 14027  0020D8  C008  FFFB         	movff	??_isr+3,pclatu
 14028  0020DC  C007  FFFA         	movff	??_isr+2,pclath
 14029  0020E0  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14030  0020E2  0011               	retfie		f
 14031  0020E4                     __end_of_isr:
 14032                           	opt stack 0
 14033                           tosu	equ	0xFFF
 14034                           tosh	equ	0xFFE
 14035                           tosl	equ	0xFFD
 14036                           pclatu	equ	0xFFB
 14037                           pclath	equ	0xFFA
 14038                           pcl	equ	0xFF9
 14039                           tblptru	equ	0xFF8
 14040                           tblptrh	equ	0xFF7
 14041                           tblptrl	equ	0xFF6
 14042                           tablat	equ	0xFF5
 14043                           prodh	equ	0xFF4
 14044                           prodl	equ	0xFF3
 14045                           intcon	equ	0xFF2
 14046                           intcon2	equ	0xFF1
 14047                           intcon3	equ	0xFF0
 14048                           indf0	equ	0xFEF
 14049                           postinc0	equ	0xFEE
 14050                           fsr0h	equ	0xFEA
 14051                           fsr0l	equ	0xFE9
 14052                           wreg	equ	0xFE8
 14053                           indf1	equ	0xFE7
 14054                           postinc1	equ	0xFE6
 14055                           postdec1	equ	0xFE5
 14056                           fsr1h	equ	0xFE2
 14057                           fsr1l	equ	0xFE1
 14058                           indf2	equ	0xFDF
 14059                           postinc2	equ	0xFDE
 14060                           postdec2	equ	0xFDD
 14061                           fsr2h	equ	0xFDA
 14062                           fsr2l	equ	0xFD9
 14063                           status	equ	0xFD8
 14064                           
 14065 ;; *************** function i2_write_timer_zero *****************
 14066 ;; Defined at:
 14067 ;;		line 138 in file "bibliotecas/hardware.c"
 14068 ;; Parameters:    Size  Location     Type
 14069 ;;  timer0          2    0[COMRAM] unsigned int 
 14070 ;; Auto vars:     Size  Location     Type
 14071 ;;  write_timer_    2    2[COMRAM] struct Timers
 14072 ;; Return value:  Size  Location     Type
 14073 ;;                  1    wreg      void 
 14074 ;; Registers used:
 14075 ;;		None
 14076 ;; Tracked objects:
 14077 ;;		On entry : 0/0
 14078 ;;		On exit  : 0/0
 14079 ;;		Unchanged: 0/0
 14080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14081 ;;      Params:         2       0       0       0       0       0       0       0       0
 14082 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14083 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14084 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14085 ;;Total ram usage:        4 bytes
 14086 ;; Hardware stack levels used:    1
 14087 ;; This function calls:
 14088 ;;		Nothing
 14089 ;; This function is called by:
 14090 ;;		_isr
 14091 ;; This function uses a non-reentrant model
 14092 ;;
 14093                           
 14094                           	psect	text65
 14095  0035BE                     __ptext65:
 14096                           	opt stack 0
 14097  0035BE                     i2_write_timer_zero:
 14098                           	opt stack 22
 14099                           
 14100                           ;hardware.c: 140: union Timers timer;
 14101                           ;hardware.c: 142: timer.lt = timer0;
 14102                           
 14103                           ;incstack = 0
 14104  0035BE  C001  F003         	movff	i2write_timer_zero@timer0,i2write_timer_zero@timer
 14105  0035C2  C002  F004         	movff	i2write_timer_zero@timer0+1,i2write_timer_zero@timer+1
 14106                           
 14107                           ;hardware.c: 144: TMR0H = timer.bt[1];
 14108  0035C6  C004  FFD7         	movff	i2write_timer_zero@timer+1,4055	;volatile
 14109                           
 14110                           ;hardware.c: 145: TMR0L = timer.bt[0];
 14111  0035CA  C003  FFD6         	movff	i2write_timer_zero@timer,4054	;volatile
 14112  0035CE  0012               	return		;funcret
 14113  0035D0                     __end_ofi2_write_timer_zero:
 14114                           	opt stack 0
 14115                           tosu	equ	0xFFF
 14116                           tosh	equ	0xFFE
 14117                           tosl	equ	0xFFD
 14118                           pclatu	equ	0xFFB
 14119                           pclath	equ	0xFFA
 14120                           pcl	equ	0xFF9
 14121                           tblptru	equ	0xFF8
 14122                           tblptrh	equ	0xFF7
 14123                           tblptrl	equ	0xFF6
 14124                           tablat	equ	0xFF5
 14125                           prodh	equ	0xFF4
 14126                           prodl	equ	0xFF3
 14127                           intcon	equ	0xFF2
 14128                           intcon2	equ	0xFF1
 14129                           intcon3	equ	0xFF0
 14130                           indf0	equ	0xFEF
 14131                           postinc0	equ	0xFEE
 14132                           fsr0h	equ	0xFEA
 14133                           fsr0l	equ	0xFE9
 14134                           wreg	equ	0xFE8
 14135                           indf1	equ	0xFE7
 14136                           postinc1	equ	0xFE6
 14137                           postdec1	equ	0xFE5
 14138                           fsr1h	equ	0xFE2
 14139                           fsr1l	equ	0xFE1
 14140                           indf2	equ	0xFDF
 14141                           postinc2	equ	0xFDE
 14142                           postdec2	equ	0xFDD
 14143                           fsr2h	equ	0xFDA
 14144                           fsr2l	equ	0xFD9
 14145                           status	equ	0xFD8
 14146                           
 14147 ;; *************** function _tratamento_uart *****************
 14148 ;; Defined at:
 14149 ;;		line 312 in file "bibliotecas/GPS.c"
 14150 ;; Parameters:    Size  Location     Type
 14151 ;;  received_cha    1    wreg     unsigned char 
 14152 ;; Auto vars:     Size  Location     Type
 14153 ;;  received_cha    1    0[COMRAM] unsigned char 
 14154 ;; Return value:  Size  Location     Type
 14155 ;;                  1    wreg      void 
 14156 ;; Registers used:
 14157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14158 ;; Tracked objects:
 14159 ;;		On entry : 0/0
 14160 ;;		On exit  : 0/0
 14161 ;;		Unchanged: 0/0
 14162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14163 ;;      Params:         0       0       0       0       0       0       0       0       0
 14164 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14165 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14166 ;;      Totals:         1       0       0       0       0       0       0       0       0
 14167 ;;Total ram usage:        1 bytes
 14168 ;; Hardware stack levels used:    1
 14169 ;; This function calls:
 14170 ;;		Nothing
 14171 ;; This function is called by:
 14172 ;;		_isr
 14173 ;; This function uses a non-reentrant model
 14174 ;;
 14175                           
 14176                           	psect	text66
 14177  00231E                     __ptext66:
 14178                           	opt stack 0
 14179  00231E                     _tratamento_uart:
 14180                           	opt stack 22
 14181                           
 14182                           ;incstack = 0
 14183                           ;tratamento_uart@received_char stored from wreg
 14184  00231E  6E01               	movwf	tratamento_uart@received_char,c
 14185                           
 14186                           ;GPS.c: 314: if(received_char =='$'){
 14187  002320  0E24               	movlw	36
 14188  002322  1801               	xorwf	tratamento_uart@received_char,w,c
 14189  002324  A4D8               	btfss	status,2,c
 14190  002326  D010               	goto	i2l7790
 14191                           
 14192                           ;GPS.c: 315: gga_index = 0;
 14193  002328  0E00               	movlw	0
 14194  00232A  6E3D               	movwf	_gga_index+1,c	;volatile
 14195  00232C  0E00               	movlw	0
 14196  00232E  6E3C               	movwf	_gga_index,c	;volatile
 14197                           
 14198                           ;GPS.c: 316: rmc_index = 0;
 14199  002330  0E00               	movlw	0
 14200  002332  6E3B               	movwf	_rmc_index+1,c	;volatile
 14201  002334  0E00               	movlw	0
 14202  002336  6E3A               	movwf	_rmc_index,c	;volatile
 14203                           
 14204                           ;GPS.c: 317: is_it_gga_string = 0;
 14205  002338  0E00               	movlw	0
 14206  00233A  6E44               	movwf	_is_it_gga_string,c	;volatile
 14207                           
 14208                           ;GPS.c: 318: is_it_rmc_string = 0;
 14209  00233C  0E00               	movlw	0
 14210  00233E  6E43               	movwf	_is_it_rmc_string,c	;volatile
 14211                           
 14212                           ;GPS.c: 319: comma_counter_gga = 0;
 14213  002340  0E00               	movlw	0
 14214  002342  6E46               	movwf	_comma_counter_gga,c
 14215                           
 14216                           ;GPS.c: 320: comma_counter_rmc = 0;
 14217  002344  0E00               	movlw	0
 14218  002346  6E45               	movwf	_comma_counter_rmc,c
 14219  002348                     i2l7790:
 14220                           
 14221                           ;GPS.c: 321: }
 14222                           ;GPS.c: 323: if(is_it_gga_string == 1)
 14223  002348  0444               	decf	_is_it_gga_string,w,c	;volatile
 14224  00234A  A4D8               	btfss	status,2,c
 14225  00234C  D01A               	goto	i2l7802
 14226                           
 14227                           ;GPS.c: 324: {
 14228                           ;GPS.c: 325: if(received_char == ',' )
 14229  00234E  0E2C               	movlw	44
 14230  002350  1801               	xorwf	tratamento_uart@received_char,w,c
 14231  002352  A4D8               	btfss	status,2,c
 14232  002354  D00B               	goto	i2l7798
 14233                           
 14234                           ;GPS.c: 326: {
 14235                           ;GPS.c: 327: gga_pointers[comma_counter_gga++] = gga_index;
 14236  002356  5046               	movf	_comma_counter_gga,w,c
 14237  002358  0D01               	mullw	1
 14238  00235A  0E8A               	movlw	low _gga_pointers
 14239  00235C  24F3               	addwf	prodl,w,c
 14240  00235E  6ED9               	movwf	fsr2l,c
 14241  002360  0E01               	movlw	high _gga_pointers
 14242  002362  20F4               	addwfc	prodh,w,c
 14243  002364  6EDA               	movwf	fsr2h,c
 14244  002366  C03C  FFDF         	movff	_gga_index,indf2	;volatile
 14245  00236A  2A46               	incf	_comma_counter_gga,f,c
 14246  00236C                     i2l7798:
 14247                           
 14248                           ;GPS.c: 328: }
 14249                           ;GPS.c: 329: gga_buffer[gga_index++] = received_char;
 14250  00236C  0E00               	movlw	low _gga_buffer
 14251  00236E  243C               	addwf	_gga_index,w,c	;volatile
 14252  002370  6ED9               	movwf	fsr2l,c
 14253  002372  0E01               	movlw	high _gga_buffer
 14254  002374  203D               	addwfc	_gga_index+1,w,c	;volatile
 14255  002376  6EDA               	movwf	fsr2h,c
 14256  002378  C001  FFDF         	movff	tratamento_uart@received_char,indf2
 14257  00237C  4A3C               	infsnz	_gga_index,f,c	;volatile
 14258  00237E  2A3D               	incf	_gga_index+1,f,c	;volatile
 14259                           
 14260                           ;GPS.c: 330: }
 14261  002380  D01B               	goto	i2l7810
 14262  002382                     i2l7802:
 14263                           
 14264                           ;GPS.c: 331: else if(gga_code[0] == 'G' && gga_code[1] == 'G' && gga_code[2] == 'A'){
 14265  002382  0E47               	movlw	71
 14266  002384  1835               	xorwf	_gga_code,w,c
 14267  002386  A4D8               	btfss	status,2,c
 14268  002388  D011               	goto	i2l208
 14269  00238A  0E47               	movlw	71
 14270  00238C  1836               	xorwf	_gga_code+1,w,c
 14271  00238E  A4D8               	btfss	status,2,c
 14272  002390  D00D               	goto	i2l208
 14273  002392  0E41               	movlw	65
 14274  002394  1837               	xorwf	_gga_code+2,w,c
 14275  002396  A4D8               	btfss	status,2,c
 14276  002398  D009               	goto	i2l208
 14277                           
 14278                           ;GPS.c: 332: is_it_gga_string = 1;
 14279  00239A  0E01               	movlw	1
 14280  00239C  6E44               	movwf	_is_it_gga_string,c	;volatile
 14281                           
 14282                           ;GPS.c: 333: gga_code[0] = 0;
 14283  00239E  0E00               	movlw	0
 14284  0023A0  6E35               	movwf	_gga_code,c
 14285                           
 14286                           ;GPS.c: 334: gga_code[1] = 0;
 14287  0023A2  0E00               	movlw	0
 14288  0023A4  6E36               	movwf	_gga_code+1,c
 14289                           
 14290                           ;GPS.c: 335: gga_code[2] = 0;
 14291  0023A6  0E00               	movlw	0
 14292  0023A8  6E37               	movwf	_gga_code+2,c
 14293                           
 14294                           ;GPS.c: 336: }
 14295  0023AA  D006               	goto	i2l7810
 14296  0023AC                     i2l208:
 14297                           
 14298                           ;GPS.c: 337: else{
 14299                           ;GPS.c: 338: gga_code[0] = gga_code[1];
 14300  0023AC  C036  F035         	movff	_gga_code+1,_gga_code
 14301                           
 14302                           ;GPS.c: 339: gga_code[1] = gga_code[2];
 14303  0023B0  C037  F036         	movff	_gga_code+2,_gga_code+1
 14304                           
 14305                           ;GPS.c: 340: gga_code[2] = received_char;
 14306  0023B4  C001  F037         	movff	tratamento_uart@received_char,_gga_code+2
 14307  0023B8                     i2l7810:
 14308                           
 14309                           ;GPS.c: 341: }
 14310                           ;GPS.c: 343: if(is_it_rmc_string == 1)
 14311  0023B8  0443               	decf	_is_it_rmc_string,w,c	;volatile
 14312  0023BA  A4D8               	btfss	status,2,c
 14313  0023BC  D01A               	goto	i2l7822
 14314                           
 14315                           ;GPS.c: 344: {
 14316                           ;GPS.c: 345: if(received_char == ',' )
 14317  0023BE  0E2C               	movlw	44
 14318  0023C0  1801               	xorwf	tratamento_uart@received_char,w,c
 14319  0023C2  A4D8               	btfss	status,2,c
 14320  0023C4  D00B               	goto	i2l7818
 14321                           
 14322                           ;GPS.c: 346: {
 14323                           ;GPS.c: 347: rmc_pointers[comma_counter_rmc++] = rmc_index;
 14324  0023C6  5045               	movf	_comma_counter_rmc,w,c
 14325  0023C8  0D01               	mullw	1
 14326  0023CA  0E9E               	movlw	low _rmc_pointers
 14327  0023CC  24F3               	addwf	prodl,w,c
 14328  0023CE  6ED9               	movwf	fsr2l,c
 14329  0023D0  0E01               	movlw	high _rmc_pointers
 14330  0023D2  20F4               	addwfc	prodh,w,c
 14331  0023D4  6EDA               	movwf	fsr2h,c
 14332  0023D6  C03A  FFDF         	movff	_rmc_index,indf2	;volatile
 14333  0023DA  2A45               	incf	_comma_counter_rmc,f,c
 14334  0023DC                     i2l7818:
 14335                           
 14336                           ;GPS.c: 348: }
 14337                           ;GPS.c: 349: rmc_buffer[rmc_index++] = received_char;
 14338  0023DC  0E00               	movlw	low _rmc_buffer
 14339  0023DE  243A               	addwf	_rmc_index,w,c	;volatile
 14340  0023E0  6ED9               	movwf	fsr2l,c
 14341  0023E2  0E02               	movlw	high _rmc_buffer
 14342  0023E4  203B               	addwfc	_rmc_index+1,w,c	;volatile
 14343  0023E6  6EDA               	movwf	fsr2h,c
 14344  0023E8  C001  FFDF         	movff	tratamento_uart@received_char,indf2
 14345  0023EC  4A3A               	infsnz	_rmc_index,f,c	;volatile
 14346  0023EE  2A3B               	incf	_rmc_index+1,f,c	;volatile
 14347                           
 14348                           ;GPS.c: 350: }
 14349  0023F0  0012               	return	
 14350  0023F2                     i2l7822:
 14351                           
 14352                           ;GPS.c: 351: else if(rmc_code[0] == 'R' && rmc_code[1] == 'M' && rmc_code[2] == 'C'){
 14353  0023F2  0E52               	movlw	82
 14354  0023F4  0100               	movlb	0	; () banked
 14355  0023F6  19D3               	xorwf	_rmc_code& (0+255),w,b
 14356  0023F8  A4D8               	btfss	status,2,c
 14357  0023FA  D016               	goto	i2l213
 14358                           
 14359                           ; BSR set to: 0
 14360  0023FC  0E4D               	movlw	77
 14361  0023FE  0100               	movlb	0	; () banked
 14362  002400  19D4               	xorwf	(_rmc_code+1)& (0+255),w,b
 14363  002402  A4D8               	btfss	status,2,c
 14364  002404  D011               	goto	i2l213
 14365                           
 14366                           ; BSR set to: 0
 14367  002406  0E43               	movlw	67
 14368  002408  0100               	movlb	0	; () banked
 14369  00240A  19D5               	xorwf	(_rmc_code+2)& (0+255),w,b
 14370  00240C  A4D8               	btfss	status,2,c
 14371  00240E  D00C               	goto	i2l213
 14372                           
 14373                           ; BSR set to: 0
 14374                           ;GPS.c: 352: is_it_rmc_string = 1;
 14375  002410  0E01               	movlw	1
 14376  002412  6E43               	movwf	_is_it_rmc_string,c	;volatile
 14377                           
 14378                           ;GPS.c: 353: rmc_code[0] = 0;
 14379  002414  0E00               	movlw	0
 14380  002416  0100               	movlb	0	; () banked
 14381  002418  6FD3               	movwf	_rmc_code& (0+255),b
 14382                           
 14383                           ;GPS.c: 354: rmc_code[1] = 0;
 14384  00241A  0E00               	movlw	0
 14385  00241C  0100               	movlb	0	; () banked
 14386  00241E  6FD4               	movwf	(_rmc_code+1)& (0+255),b
 14387                           
 14388                           ;GPS.c: 355: rmc_code[2] = 0;
 14389  002420  0E00               	movlw	0
 14390  002422  0100               	movlb	0	; () banked
 14391  002424  6FD5               	movwf	(_rmc_code+2)& (0+255),b
 14392                           
 14393                           ;GPS.c: 356: }
 14394  002426  0012               	return	
 14395  002428                     i2l213:
 14396                           
 14397                           ; BSR set to: 0
 14398                           ;GPS.c: 357: else{
 14399                           ;GPS.c: 358: rmc_code[0] = rmc_code[1];
 14400  002428  C0D4  F0D3         	movff	_rmc_code+1,_rmc_code
 14401                           
 14402                           ;GPS.c: 359: rmc_code[1] = rmc_code[2];
 14403  00242C  C0D5  F0D4         	movff	_rmc_code+2,_rmc_code+1
 14404                           
 14405                           ;GPS.c: 360: rmc_code[2] = received_char;
 14406  002430  C001  F0D5         	movff	tratamento_uart@received_char,_rmc_code+2
 14407                           
 14408                           ; BSR set to: 0
 14409  002434  0012               	return	
 14410  002436                     __end_of_tratamento_uart:
 14411                           	opt stack 0
 14412                           tosu	equ	0xFFF
 14413                           tosh	equ	0xFFE
 14414                           tosl	equ	0xFFD
 14415                           pclatu	equ	0xFFB
 14416                           pclath	equ	0xFFA
 14417                           pcl	equ	0xFF9
 14418                           tblptru	equ	0xFF8
 14419                           tblptrh	equ	0xFF7
 14420                           tblptrl	equ	0xFF6
 14421                           tablat	equ	0xFF5
 14422                           prodh	equ	0xFF4
 14423                           prodl	equ	0xFF3
 14424                           intcon	equ	0xFF2
 14425                           intcon2	equ	0xFF1
 14426                           intcon3	equ	0xFF0
 14427                           indf0	equ	0xFEF
 14428                           postinc0	equ	0xFEE
 14429                           fsr0h	equ	0xFEA
 14430                           fsr0l	equ	0xFE9
 14431                           wreg	equ	0xFE8
 14432                           indf1	equ	0xFE7
 14433                           postinc1	equ	0xFE6
 14434                           postdec1	equ	0xFE5
 14435                           fsr1h	equ	0xFE2
 14436                           fsr1l	equ	0xFE1
 14437                           indf2	equ	0xFDF
 14438                           postinc2	equ	0xFDE
 14439                           postdec2	equ	0xFDD
 14440                           fsr2h	equ	0xFDA
 14441                           fsr2l	equ	0xFD9
 14442                           status	equ	0xFD8
 14443                           
 14444 ;; *************** function _recebe_dado_uart *****************
 14445 ;; Defined at:
 14446 ;;		line 138 in file "bibliotecas/uart.c"
 14447 ;; Parameters:    Size  Location     Type
 14448 ;;		None
 14449 ;; Auto vars:     Size  Location     Type
 14450 ;;		None
 14451 ;; Return value:  Size  Location     Type
 14452 ;;                  1    wreg      unsigned char 
 14453 ;; Registers used:
 14454 ;;		wreg, status,2
 14455 ;; Tracked objects:
 14456 ;;		On entry : 0/0
 14457 ;;		On exit  : 0/0
 14458 ;;		Unchanged: 0/0
 14459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14460 ;;      Params:         0       0       0       0       0       0       0       0       0
 14461 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14462 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14463 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14464 ;;Total ram usage:        0 bytes
 14465 ;; Hardware stack levels used:    1
 14466 ;; This function calls:
 14467 ;;		Nothing
 14468 ;; This function is called by:
 14469 ;;		_isr
 14470 ;;		_recebe_string_uart
 14471 ;; This function uses a non-reentrant model
 14472 ;;
 14473                           
 14474                           	psect	text67
 14475  0035D0                     __ptext67:
 14476                           	opt stack 0
 14477  0035D0                     _recebe_dado_uart:
 14478                           	opt stack 22
 14479  0035D0                     i2l1217:
 14480  0035D0  AA9E               	btfss	3998,5,c	;volatile
 14481  0035D2  D7FE               	goto	i2l1217
 14482                           
 14483                           ;uart.c: 141: if(RCSTAbits.OERR)
 14484  0035D4  A2AB               	btfss	4011,1,c	;volatile
 14485  0035D6  D003               	goto	i2l7782
 14486                           
 14487                           ;uart.c: 142: {
 14488                           ;uart.c: 143: CREN = 0;
 14489  0035D8  98AB               	bcf	4011,4,c	;volatile
 14490                           
 14491                           ;uart.c: 144: __nop();
 14492  0035DA  F000               	nop	
 14493                           
 14494                           ;uart.c: 145: CREN=1;
 14495  0035DC  88AB               	bsf	4011,4,c	;volatile
 14496  0035DE                     i2l7782:
 14497                           
 14498                           ;uart.c: 146: }
 14499                           ;uart.c: 147: return(RCREG);
 14500  0035DE  50AE               	movf	4014,w,c	;volatile
 14501  0035E0  0012               	return	
 14502  0035E2                     __end_of_recebe_dado_uart:
 14503                           	opt stack 0
 14504                           tosu	equ	0xFFF
 14505                           tosh	equ	0xFFE
 14506                           tosl	equ	0xFFD
 14507                           pclatu	equ	0xFFB
 14508                           pclath	equ	0xFFA
 14509                           pcl	equ	0xFF9
 14510                           tblptru	equ	0xFF8
 14511                           tblptrh	equ	0xFF7
 14512                           tblptrl	equ	0xFF6
 14513                           tablat	equ	0xFF5
 14514                           prodh	equ	0xFF4
 14515                           prodl	equ	0xFF3
 14516                           intcon	equ	0xFF2
 14517                           intcon2	equ	0xFF1
 14518                           intcon3	equ	0xFF0
 14519                           indf0	equ	0xFEF
 14520                           postinc0	equ	0xFEE
 14521                           fsr0h	equ	0xFEA
 14522                           fsr0l	equ	0xFE9
 14523                           wreg	equ	0xFE8
 14524                           indf1	equ	0xFE7
 14525                           postinc1	equ	0xFE6
 14526                           postdec1	equ	0xFE5
 14527                           fsr1h	equ	0xFE2
 14528                           fsr1l	equ	0xFE1
 14529                           indf2	equ	0xFDF
 14530                           postinc2	equ	0xFDE
 14531                           postdec2	equ	0xFDD
 14532                           fsr2h	equ	0xFDA
 14533                           fsr2l	equ	0xFD9
 14534                           status	equ	0xFD8
 14535                           tosu	equ	0xFFF
 14536                           tosh	equ	0xFFE
 14537                           tosl	equ	0xFFD
 14538                           pclatu	equ	0xFFB
 14539                           pclath	equ	0xFFA
 14540                           pcl	equ	0xFF9
 14541                           tblptru	equ	0xFF8
 14542                           tblptrh	equ	0xFF7
 14543                           tblptrl	equ	0xFF6
 14544                           tablat	equ	0xFF5
 14545                           prodh	equ	0xFF4
 14546                           prodl	equ	0xFF3
 14547                           intcon	equ	0xFF2
 14548                           intcon2	equ	0xFF1
 14549                           intcon3	equ	0xFF0
 14550                           indf0	equ	0xFEF
 14551                           postinc0	equ	0xFEE
 14552                           fsr0h	equ	0xFEA
 14553                           fsr0l	equ	0xFE9
 14554                           wreg	equ	0xFE8
 14555                           indf1	equ	0xFE7
 14556                           postinc1	equ	0xFE6
 14557                           postdec1	equ	0xFE5
 14558                           fsr1h	equ	0xFE2
 14559                           fsr1l	equ	0xFE1
 14560                           indf2	equ	0xFDF
 14561                           postinc2	equ	0xFDE
 14562                           postdec2	equ	0xFDD
 14563                           fsr2h	equ	0xFDA
 14564                           fsr2l	equ	0xFD9
 14565                           status	equ	0xFD8
 14566                           
 14567                           	psect	text68
 14568  000000                     __ptext68:
 14569                           	opt stack 0
 14570                           tosu	equ	0xFFF
 14571                           tosh	equ	0xFFE
 14572                           tosl	equ	0xFFD
 14573                           pclatu	equ	0xFFB
 14574                           pclath	equ	0xFFA
 14575                           pcl	equ	0xFF9
 14576                           tblptru	equ	0xFF8
 14577                           tblptrh	equ	0xFF7
 14578                           tblptrl	equ	0xFF6
 14579                           tablat	equ	0xFF5
 14580                           prodh	equ	0xFF4
 14581                           prodl	equ	0xFF3
 14582                           intcon	equ	0xFF2
 14583                           intcon2	equ	0xFF1
 14584                           intcon3	equ	0xFF0
 14585                           indf0	equ	0xFEF
 14586                           postinc0	equ	0xFEE
 14587                           fsr0h	equ	0xFEA
 14588                           fsr0l	equ	0xFE9
 14589                           wreg	equ	0xFE8
 14590                           indf1	equ	0xFE7
 14591                           postinc1	equ	0xFE6
 14592                           postdec1	equ	0xFE5
 14593                           fsr1h	equ	0xFE2
 14594                           fsr1l	equ	0xFE1
 14595                           indf2	equ	0xFDF
 14596                           postinc2	equ	0xFDE
 14597                           postdec2	equ	0xFDD
 14598                           fsr2h	equ	0xFDA
 14599                           fsr2l	equ	0xFD9
 14600                           status	equ	0xFD8
 14601                           
 14602                           	psect	rparam
 14603  0000                     tosu	equ	0xFFF
 14604                           tosh	equ	0xFFE
 14605                           tosl	equ	0xFFD
 14606                           pclatu	equ	0xFFB
 14607                           pclath	equ	0xFFA
 14608                           pcl	equ	0xFF9
 14609                           tblptru	equ	0xFF8
 14610                           tblptrh	equ	0xFF7
 14611                           tblptrl	equ	0xFF6
 14612                           tablat	equ	0xFF5
 14613                           prodh	equ	0xFF4
 14614                           prodl	equ	0xFF3
 14615                           intcon	equ	0xFF2
 14616                           intcon2	equ	0xFF1
 14617                           intcon3	equ	0xFF0
 14618                           indf0	equ	0xFEF
 14619                           postinc0	equ	0xFEE
 14620                           fsr0h	equ	0xFEA
 14621                           fsr0l	equ	0xFE9
 14622                           wreg	equ	0xFE8
 14623                           indf1	equ	0xFE7
 14624                           postinc1	equ	0xFE6
 14625                           postdec1	equ	0xFE5
 14626                           fsr1h	equ	0xFE2
 14627                           fsr1l	equ	0xFE1
 14628                           indf2	equ	0xFDF
 14629                           postinc2	equ	0xFDE
 14630                           postdec2	equ	0xFDD
 14631                           fsr2h	equ	0xFDA
 14632                           fsr2l	equ	0xFD9
 14633                           status	equ	0xFD8
 14634                           
 14635                           	psect	temp
 14636  00004A                     btemp:
 14637                           	opt stack 0
 14638  00004A                     	ds	1
 14639  0000                     int$flags	set	btemp
 14640                           tosu	equ	0xFFF
 14641                           tosh	equ	0xFFE
 14642                           tosl	equ	0xFFD
 14643                           pclatu	equ	0xFFB
 14644                           pclath	equ	0xFFA
 14645                           pcl	equ	0xFF9
 14646                           tblptru	equ	0xFF8
 14647                           tblptrh	equ	0xFF7
 14648                           tblptrl	equ	0xFF6
 14649                           tablat	equ	0xFF5
 14650                           prodh	equ	0xFF4
 14651                           prodl	equ	0xFF3
 14652                           intcon	equ	0xFF2
 14653                           intcon2	equ	0xFF1
 14654                           intcon3	equ	0xFF0
 14655                           indf0	equ	0xFEF
 14656                           postinc0	equ	0xFEE
 14657                           fsr0h	equ	0xFEA
 14658                           fsr0l	equ	0xFE9
 14659                           wreg	equ	0xFE8
 14660                           indf1	equ	0xFE7
 14661                           postinc1	equ	0xFE6
 14662                           postdec1	equ	0xFE5
 14663                           fsr1h	equ	0xFE2
 14664                           fsr1l	equ	0xFE1
 14665                           indf2	equ	0xFDF
 14666                           postinc2	equ	0xFDE
 14667                           postdec2	equ	0xFDD
 14668                           fsr2h	equ	0xFDA
 14669                           fsr2l	equ	0xFD9
 14670                           status	equ	0xFD8


Data Sizes:
    Strings     264
    Constant    331
    Data        24
    BSS         909
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     52      73
    BANK0           160     92     147
    BANK1           256     29     256
    BANK2           256      0     118
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    escalonador$3376	PTR FTN()void  size(2) Largest target is 1
		 -> gps(), 

    rd	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> dado_buffer(BANK0[7]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> dado_buffer(BANK0[7]), 

    memset@p1	PTR void  size(2) Largest target is 15
		 -> gps@gps_buffer(BANK1[15]), 

    memset@p	PTR unsigned char  size(2) Largest target is 15
		 -> gps@gps_buffer(BANK1[15]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(COMRAM[7]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 15
		 -> get_gpstime@time_buffer(BANK0[15]), 

    atof@s	PTR const unsigned char  size(2) Largest target is 15
		 -> get_longitude@long_buffer(BANK0[15]), get_latitude@lat_buffer(BANK0[15]), 

    strtod@s	PTR const unsigned char  size(2) Largest target is 15
		 -> get_longitude@long_buffer(BANK0[15]), get_latitude@lat_buffer(BANK0[15]), 

    strtod@res	PTR PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_9(CODE[9]), STR_7(CODE[6]), STR_5(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 15
		 -> gps@gps_buffer(BANK1[15]), data_buffer(BANK1[15]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    pf_readdir@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    pf_opendir@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    follow_path@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    get_fileinfo@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    create_name@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dir_read@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dir_find@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dir_next@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    S1992$fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dir_rewind@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    FatFs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), SDCard@fs(COMRAM[42]), 

    escreve_frase_ram_lcd@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), STR_28(CODE[3]), STR_27(CODE[8]), STR_26(CODE[14]), 
		 -> STR_25(CODE[13]), STR_24(CODE[9]), STR_23(CODE[14]), leitura_chave@pos_ignicao_on(COMRAM[17]), 
		 -> leitura_chave@pos_ignicao_crank(COMRAM[17]), leitura_chave@pos_ignicao_off(COMRAM[17]), STR_22(CODE[17]), STR_21(CODE[16]), 
		 -> STR_20(CODE[14]), STR_19(CODE[14]), STR_18(CODE[14]), STR_17(CODE[14]), 
		 -> STR_16(CODE[13]), STR_15(CODE[17]), STR_12(CODE[17]), STR_11(CODE[15]), 
		 -> STR_10(CODE[14]), STR_8(CODE[5]), STR_6(CODE[5]), gps@gps_buffer(BANK1[15]), 
		 -> dado_buffer(BANK0[7]), STR_4(CODE[6]), data_buffer(BANK1[15]), STR_3(CODE[6]), 
		 -> STR_2(CODE[6]), STR_1(CODE[5]), mensagem_inicial@msg_dois(BANK0[17]), mensagem_inicial@msg_linha_um(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(COMRAM[7]), 

    sp__memset	PTR void  size(2) Largest target is 15
		 -> gps@gps_buffer(BANK1[15]), 

    p_tarefas	PTR FTN()void [2] size(2) Largest target is 1
		 -> gps(), 


Critical Paths under _main in COMRAM

    _mensagem_inicial->_posicao_cursor_lcd
    _leitura_continua_adc->_leitura_adc
    _init_lcd->_escreve_cmd_lcd
    _config_timer_zero->_write_timer_zero
    _inicializa_uart->_configura_baudrate_uart
    _configura_baudrate_uart->___aldiv
    _gps->_get_gpstime
    _gps->_get_latitude
    _gps->_get_longitude
    _posicao_cursor_lcd->_endereco_cursor_lcd
    _endereco_cursor_lcd->_delay
    _atof->_strtod
    _strtod->___ftmul
    ___altoft->___ftpack
    _get_gpstime->_atol
    _atol->___lmul
    _get_dt->_strlen
    _escreve_frase_ram_lcd->_escreve_caractere_lcd
    _escreve_caractere_lcd->_delay
    _escreve_cmd_lcd->_delay
    _convert_to_degrees->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    _sprintf->___ftmul
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___lldiv->___llmod
    ___fttol->___ftmul
    ___ftadd->___ftmul
    ___ftneg->___ftmul
    _controle_shrc->_envia_dados_shrc

Critical Paths under _isr in COMRAM

    _isr->i2_write_timer_zero

Critical Paths under _main in BANK0

    _main->_escalonador
    _escalonador->_gps
    _gps->_convert_time_to_utc
    _get_longitude->_atof
    _get_latitude->_atof
    _atof->_strtod
    _strtod->___ftneg
    _convert_to_degrees->___ftadd
    _convert_to_degrees->___fttol
    _convert_time_to_utc->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftneg->___ftmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _escalonador->_gps

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  198597
                      _controle_shrc
                        _escalonador
                    _inicializa_shrc
                 _inicializa_tarefas
                    _inicializa_uart
                      _init_hardware
                           _init_lcd
             _leitura_chaves_sistema
               _leitura_continua_adc
                   _mensagem_inicial
 ---------------------------------------------------------------------------------
 (1) _mensagem_inicial                                    36    36      0    6698
                                             27 COMRAM     2     2      0
                                              0 BANK0     34    34      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _leitura_continua_adc                                 8     8      0     312
                                             28 COMRAM     8     8      0
                        _leitura_adc
 ---------------------------------------------------------------------------------
 (2) _leitura_adc                                          7     5      2      22
                                             21 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _leitura_chaves_sistema                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             1     1      0     613
                                             24 COMRAM     1     1      0
                              _delay
                    _escreve_cmd_lcd
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     171
                  _config_timer_dois
                  _config_timer_zero
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     171
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     4     2      2     171
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _config_timer_dois                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_uart                                      0     0      0     776
            _configura_baudrate_uart
 ---------------------------------------------------------------------------------
 (2) _configura_baudrate_uart                             14    10      4     776
                                             35 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     556
                                             21 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_shrc                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0  189982
                                             89 BANK0      3     3      0
                                _gps *
 ---------------------------------------------------------------------------------
 (2) _gps                                                 65    65      0  189759
                                             87 BANK0      2     2      0
                                              0 BANK1     29    29      0
                _convert_time_to_utc
                 _convert_to_degrees
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                             _get_dt
                        _get_gpstime
                       _get_latitude
                      _get_longitude
                             _memset
                 _posicao_cursor_lcd
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _posicao_cursor_lcd                                   3     2      1    3151
                                             24 COMRAM     3     2      1
                _endereco_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _endereco_cursor_lcd                                  1     1      0     353
                                             23 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     599
                                             21 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (3) _get_longitude                                       25    22      3   17716
                                             51 COMRAM     1     1      0
                                             23 BANK0     24    21      3
                               _atof
 ---------------------------------------------------------------------------------
 (3) _get_latitude                                        25    22      3   17716
                                             51 COMRAM     1     1      0
                                             23 BANK0     24    21      3
                               _atof
 ---------------------------------------------------------------------------------
 (4) _atof                                                 3     0      3   17399
                                             20 BANK0      3     0      3
                             _strtod
 ---------------------------------------------------------------------------------
 (5) _strtod                                              12     8      4   17214
                                             50 COMRAM     1     1      0
                                              9 BANK0     11     7      4
                           ___altoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                             ___lmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              3     3      0     130
                                             21 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) ___altoft                                            10     6      4    2865
                                             29 COMRAM    10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _get_gpstime                                         25    21      4    1687
                                             47 COMRAM     5     1      4
                                              0 BANK0     20    20      0
                               _atol
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1474
                                             33 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     828
                                             21 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _get_dt                                              12     8      4     343
                                             27 COMRAM     8     4      4
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               6     4      2     207
                                             21 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _escreve_frase_ram_lcd                                2     0      2    2990
                                             24 COMRAM     2     0      2
              _escreve_caractere_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_caractere_lcd                                1     1      0     384
                                             23 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _escreve_cmd_lcd                                      1     1      0     477
                                             23 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     2      0     136
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _convert_to_degrees                                  17    14      3   19264
                                             28 BANK0     14    11      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             15     9      6    3734
                                             29 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    3025
                                             29 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _convert_time_to_utc                                 14    10      4   64218
                                             73 BANK0     14    10      4
                            ___lldiv
                            ___llmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             47    37     10   61167
                                             34 BANK0     39    29     10
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               10     7      3   13715
                                              6 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             21 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13    10      3   13436
                                              6 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3102
                                             35 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    6112
                                             41 COMRAM     9     3      6
                                              0 BANK0      6     6      0
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1819
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1985
                                             27 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     608
                                             21 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     827
                                             21 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2763
                                             29 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1310
                                             21 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1435
                                             30 COMRAM    13     5      8
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     910
                                             13 BANK0     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    5057
                                             28 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    4693
                                             16 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2584
                                             21 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     373
                                              6 BANK0      3     0      3
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6    1122
                                             21 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _controle_shrc                                        0     0      0      45
                   _ativa_latch_shrc
                   _envia_dados_shrc
 ---------------------------------------------------------------------------------
 (2) _envia_dados_shrc                                     2     2      0      45
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ativa_latch_shrc                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                 17    17      0     337
                                              4 COMRAM    17    17      0
                   _recebe_dado_uart
                    _tratamento_uart
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (9) i2_write_timer_zero                                   4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _tratamento_uart                                      1     1      0     154
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _recebe_dado_uart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _controle_shrc
     _ativa_latch_shrc
     _envia_dados_shrc
   _escalonador
     _gps *
       _convert_time_to_utc
         ___lldiv
           ___llmod (ARG)
         ___llmod
         _sprintf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftsub
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftpack (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftdiv (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
             ___llmod (ARG)
           ___llmod
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _convert_to_degrees
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftdiv
           ___ftpack
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___fttol
           ___ftdiv (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _escreve_cmd_lcd
         _delay
       _escreve_frase_ram_lcd
         _escreve_caractere_lcd
           _delay
       _get_dt
         _strlen
       _get_gpstime
         _atol
           ___lmul
           _isdigit
       _get_latitude
         _atof
           _strtod
             ___altoft
               ___ftpack
             ___ftdiv
               ___ftpack
             ___ftge
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lmul
             _isdigit
             _isspace
       _get_longitude
         _atof
           _strtod
             ___altoft
               ___ftpack
             ___ftdiv
               ___ftpack
             ___ftge
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lmul
             _isdigit
             _isspace
       _memset
       _posicao_cursor_lcd
         _endereco_cursor_lcd
           _delay
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftdiv (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
           ___llmod (ARG)
         ___llmod
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
   _inicializa_shrc
   _inicializa_tarefas
   _inicializa_uart
     _configura_baudrate_uart
       ___aldiv
   _init_hardware
     _config_timer_dois
     _config_timer_zero
       _write_timer_zero
     _init_interrupt
     _init_oscilador
     _init_ports
   _init_lcd
     _delay
     _escreve_cmd_lcd
       _delay
   _leitura_chaves_sistema
   _leitura_continua_adc
     _leitura_adc
   _mensagem_inicial
     _escreve_cmd_lcd
       _delay
     _escreve_frase_ram_lcd
       _escreve_caractere_lcd
         _delay
     _posicao_cursor_lcd
       _endereco_cursor_lcd
         _delay

 _isr (ROOT)
   _recebe_dado_uart
   _tratamento_uart
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     200      21       25.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      76       9       46.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1D     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5C      93       5       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     34      49       1       77.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     252      20        0.0%
DATA                 0      0     452       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Feb 05 17:18:34 2022

        __end_of_mensagem_inicial 28E6                       get_dt@index 0022  
                    ___altoft@exp 0026                                 _s 0041  
                  ?_get_longitude 0077            __size_of_controle_shrc 000C  
                     _SSPSTATbits 000FC7                     ___altoft@sign 0027  
                ??_init_interrupt 0016                      ___awdiv@sign 0021  
                     __CFG_BOR$ON 000000                                _rd 00D8  
             ___wmul@multiplicand 0026                       __CFG_BORV$3 000000  
           get_latitude@_latitude 0089                      ?_escalonador 0001  
                    ___ftadd@exp1 007B                      ___ftadd@exp2 007A  
                ?_inicializa_shrc 0001                  ?_inicializa_uart 0001  
                    ___ftadd@sign 0079                               l354 330E  
                             l450 3130                               l700 2E8E  
                             l710 2ECC                               l702 2E98  
                             l454 3132                               l711 2ECE  
                             l712 2ED6                               l704 2EA2  
                             l713 2ED8                               l705 2EA4  
                             l706 2EB8                               l651 2C12  
                             l707 2EBA                               l660 2C48  
                             l708 2EC2                               l637 34E6  
                             l661 2C50                               l653 2C1C  
                             l709 2EC4                               l662 2C52  
                             l654 2C1E                               l639 34F4  
                             l655 2C32                               l647 2BFE  
                             l671 2FE2                               l656 2C34  
                             l680 3018                               l657 2C3C  
                             l649 2C08                               l681 3020  
                             l673 2FEC                               l658 2C3E  
                             l682 3022                               l674 2FEE  
                             l659 2C46                               l675 3002  
                             l676 3004                               l677 300C  
                             l669 2FD8                               l678 300E  
                             l679 3016                               l688 2EF4  
                             l698 2E84                               _PCL 000FF9  
                             _PR2 000FCB                               _E_W 00DC  
                ??_init_oscilador 0016                               _n_s 00DD  
                             _gps 1676                               _isr 0008  
               ??_tratamento_uart 0001                               _txt 0176  
                    ___awmod@sign 001B                               prod 000FF3  
                             tosl 000FFD                               wreg 000FE8  
                  get_dt@dt_index 0023         convert_to_degrees@dec_deg 0082  
                    __CFG_FOSC$HS 000000         convert_to_degrees@decimal 0087  
       convert_to_degrees@degrees 0085                    create_name@cvt 602B  
       __size_of_write_timer_zero 0012                      __CFG_LVP$OFF 000000  
                    ___ftdiv@cntr 0027           ??_escreve_frase_ram_lcd 001B  
                    ___ftdiv@sign 002C                      __CFG_WDT$OFF 000000  
                            l1319 05AA                              l4002 3306  
                            l1523 0A7C                              l1700 1360  
                            l1524 0A24                              l1525 0A86  
                            l4006 3310                              l1630 1FAE  
                            l4024 3336                              l1720 25E2  
                            l1552 0D7A                              l1709 138A  
                            l1662 2820                              l1734 1C32  
                            l1727 1BA4                              l1728 1BCC  
                            l1578 251C                              l1691 128A  
                            l1828 2D6E                              l1685 1228  
                            l1838 30EE                              l1759 3408  
                            l1689 1262                              ?_gps 0001  
                            l9204 31D0                              l9220 2E1E  
                            ?_isr 0001                              l9310 257E  
                            l9222 2E2A                              l7470 266A  
                            l9160 27D8                              l9152 27A2  
                            l9304 2556                              l9208 31E4  
                            l9400 34A8                              l7472 2676  
                            l7464 2648                              l7560 3108  
                            l9242 1270                              l9330 25BC  
                            l9402 34AC                              l7490 26CE  
                            l7482 26AA                              l7474 267A  
                            l7458 2630                              l7562 310C  
                            l9500 2BEA                              l9164 27EE  
                            l9156 27B0                              l9236 1236  
                            l9420 2C9E                              l7564 3110  
                            l9166 280C                              l9158 27BA  
                            l9270 1318                              l9430 2CC0  
                            l9414 2C8E                              l9350 2110  
                            l9510 34DE                              l7486 26B8  
                            l7558 3104                              l9168 2816  
                            l9264 12F0                              l9248 1280  
                            l9600 1B6A                              l9192 3536  
                            l7568 3116                              l9266 12FE  
                            l9258 12C2                              l9426 2CB4  
                            l9442 2CE6                              l9370 217E  
                            l7770 1D58                              l9284 13B4  
                            l9276 1346                              l9268 130C  
                            l9700 1F9C                              l9428 2CBC  
                            l9380 21B0                              l9356 213C  
                            l9524 34FA                              l9516 34EC  
                            l9294 1402                              l9278 1354  
                            l9702 1FA8                              l9630 1BF8  
                            l9446 2CF4                              l9438 2CDC  
                            l9470 2F90                              l9462 2F76  
                            l9374 2194                              l9640 1C20  
                            l9384 21C6                              l9560 0EEC  
                            l9800 0B8A                              l7960 1D7C  
                            l9490 2B8E                              l9650 1EB6  
                            l9642 1C2C                              l9634 1C08  
                            l9482 2FBC                              l9474 2FA4  
                            l9466 2F84                              l9458 2F6A  
                            l9546 1634                              l9538 1572  
                            l9570 0FBC                              l9730 09BA  
                            l7962 1D80                              l9708 328A  
                            l9468 2F8C                              l9820 0C04  
                            l9732 09C0                              l9716 0978  
                            l7956 1D74                              l9494 2BBE  
                            l9902 1960                              l9670 1F16  
                            l9478 2FAE                              l9566 0F96  
                            l9830 0C6C                              l9718 097E  
                            l7974 1E42                              l7966 1D88  
                            l9920 19C6                              l9912 1990  
                            l9656 1ED4                              l9584 119A  
                            l9840 0CB0                              l9824 0C32  
                            l9816 0BF8                              l9808 0BB4  
                            l9744 09FA                              l9728 09B0  
                            l9914 19A0                              l9906 1974  
                            l9930 2D20                              l9690 1F74  
                            l9594 1B3E                              l9578 10F0  
                            l9826 0C40                              l9762 0A8E  
                            l9738 09DE             _escreve_caractere_lcd 2E74  
                            l9916 19AA                              l9932 2D2C  
                            l9852 0D00                              l9836 0C9C  
                            l9844 0CC4                              l9772 0AD0  
                            l9942 2D60                              l9934 2D30  
                            l9950 30AC                              l9694 1F84  
                            l9678 1F46                              l9854 0D0A  
                            STR_1 6273                              l9952 30B8  
                            l9848 0CD2                              l9776 0AE0  
                            l9768 0AB4                              STR_2 6263  
                            STR_3 6251                              l9954 30BC  
                            l9874 0D9C                              l9858 0D36  
                            l9778 0AE6                              STR_4 6257  
                            STR_5 625D                              l9884 18CE  
                            l9964 316A                              l9980 0042  
                            l9796 0B80                              STR_6 626E  
                            STR_7 625D                              l9958 30E0  
                            l9966 3176                              l9974 0022  
                            STR_8 6269                              STR_9 6238  
                            l9992 00B0                              l9994 00C6  
                            l9988 0074                              l9998 00D6  
                  timer_dois@flag 003E                              _BRGH 007D62  
                            _T0IF 007F92                              _CREN 007D5C  
                            _LATB 000F8A                              _PIE1 000F9D  
               _valor_leitura_adc 0150                              _RCIF 007CF5  
                            u8025 313E                              i2l77 20A8  
                            u8415 1CE2                              u8425 1D2C  
                            u8385 1C56                              u8395 1CA0  
                            _TMR2 000FCC                              _SPEN 007D5F  
                            _TRMT 007D61                              _TXEN 007D65  
                            _SYNC 007D64         convert_to_degrees@minutes 007F  
                            _dado 0040                              _flag 00D6  
                            _atof 3468                              _atol 2436  
                            _main 33B2                      ___ftpack@arg 0016  
                    ___ftpack@exp 0019                              fsr0h 000FEA  
                            fsr1h 000FE2                              indf0 000FEF  
                            fsr2h 000FDA                              fsr0l 000FE9  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 004A             get_latitude@lat_index 008E  
   __size_of_leitura_continua_adc 0128                    ??_get_latitude 0034  
                            prodh 000FF4                              prodl 000FF3  
    tratamento_uart@received_char 0001                              start 000E  
                   __CFG_IESO$OFF 000000                     disk_readp@arr 0276  
                    _sprintf$3375 0092                     __CFG_MCLRE$ON 000000  
                    ___ftmul@cntr 0064                      ___param_bank 000000  
                    ___ftmul@sign 0065                      ___fttol@exp1 007B  
                           ??_gps 00B7                      ___fttol@lval 0077  
                           ??_isr 0005                       gps@latitude 01F0  
__size_of_configura_baudrate_uart 012C                     __CFG_PLLDIV$5 000000  
                           l10010 012A                             l10002 00DC  
                           l10020 0170                             l10004 0110  
                           l10200 0912                             l10120 05AE  
                           l10202 0918                             l10114 0578  
                           l10106 0550                             l10050 02C2  
                           l10210 2436                             l10132 0630  
                           l10116 058C                             l10108 055E  
                           l10060 0352                             l10052 02F2  
                           l10044 0286                             l10036 021E  
                           l10204 092E                             l10150 073E  
                           l10142 0716                             l10054 0308  
                           l10206 094C                             l10144 0724  
                           l10128 05DE                             l10080 0442  
                           l10064 0378                             l10048 02AC  
                           l10152 074C                             l10240 24D8  
                           l10170 07BC                             l10162 0790  
                           l10074 03D6                             l10234 2486  
                           l10226 2476                             l10410 2FDA  
                           l10092 0488                             l10236 24CA  
                           l10228 247C                             l10500 2F1C  
                           l10190 085A                             l10182 0802  
                           l10078 043C                             l10254 334A  
                           l10414 2FE4                             l10510 2F4C  
                           l10168 07B6                             l10096 04B4  
                           l10520 3240                             l10256 334E  
                           l10504 2F2A                             l10512 2F50  
                           l10186 082A                             l10098 04BC  
                           l10450 2E9A                             l10442 2E86  
                           l10602 299E                             l10196 0888  
                           l10532 2C0A                             l10516 3218  
                           l10508 2F30                             l10446 2E90  
                           l11270 33D8                             l10480 338E  
                           l10536 2C14                             l10528 2C00  
                           l10608 29CE                             l11264 33CA  
                           l10626 1ADC                             l10650 292A  
                           l10634 3420                             l10628 1B04  
                           l10564 2C74                             l10572 2DB4  
                           l10644 28FA                             l10492 2F00  
                           l10638 3430                             l10902 278C  
                           l10568 2D88                             l10496 2F0E  
                           l10594 3064                             l10588 303C  
                           l10890 26F0                             l10886 26E6  
                           l10898 275C                   __end_of___aldiv 26E0  
                           ?_atof 0074                             ?_atol 0022  
                           ?_main 0001                   __end_of___awdiv 2CFE  
                           _EEADR 000FA9                   __end_of___ftadd 1428  
                           STR_10 61E1                             STR_11 61A8  
                           STR_12 6187                             STR_13 6225  
                           STR_21 6198                             STR_14 6249  
                           STR_22 6176                             STR_23 61C5  
                           STR_24 622F                             STR_16 6218  
                           STR_25 620B                             STR_17 61FD  
                           STR_18 61D3                             STR_26 61B7  
                           STR_27 6241                             STR_19 61EF  
                           STR_28 627B                   __end_of___awmod 2FC6  
                           STR_29 6278                   __end_of___ftdiv 2614  
                 __end_of___ftneg 3416                   __end_of___lldiv 2D80  
                 __end_of___ftmul 2204                             u12040 05A2  
                           _T0CON 000FD5                             u11161 1B22  
                 ___awdiv@divisor 001E                             u10541 11D6  
                           u11181 1B4E                             u10551 11F4  
                 __end_of___llmod 3100                             u10801 20F4  
                 __end_of___ftsub 32B4                   __end_of___fttol 19D8  
                           u10821 2120                             u10751 253E  
                           _T2CON 000FCA                             u12610 3238  
                           u10771 2566                             u12620 3260  
                           u13180 284E                             u11661 18AA  
                           u13190 2866                             u11680 18F4  
                           u13168 2748                             u12617 322E  
                           u12627 3256                             u11685 18EA  
                           u11880 01B6                             u11885 01AA  
                           u14607 171C                             u14617 187E  
                           u14627 3318                    _data_buffer_32 01AA  
                           u14637 3320                             u14647 3328  
                           u14567 28A6                             u14657 3330  
                           u14577 2A50                             u14667 358A  
                           u14587 2A6C                             u14677 3592  
                           u14597 2A88                      ?_leitura_adc 0016  
 __size_of_leitura_chaves_sistema 0048                             i2l213 2428  
                           i2l208 23AC                   ___awdiv@counter 0020  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                     __CFG_USBDIV$1 000000  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                             _TXREG 000FAD  
                           _TXSTA 000FAC                             _FatFs 0038  
          __end_ofcreate_name@cvt 60AB                     __CFG_PWRT$OFF 000000  
             ___lmul@multiplicand 001A        __size_of_config_timer_dois 000C  
                    ___lltoft@exp 0026                    __CFG_FCMEN$OFF 000000  
      __size_of_config_timer_zero 001A                     ___awtoft@sign 0021  
                           _delay 34DA                  _envia_dados_shrc 32FC  
                 __end_of_dpowers 60D3                             _scale 0DAA  
                 __end_of_isdigit 353E          __size_of_escreve_cmd_lcd 008C  
                   ___ftpack@sign 001A                             atof@s 0074  
                           atol@a 002B                             atol@c 002F  
                   _controle_shrc 35FC                             atol@s 0022  
          get_latitude@lat_buffer 007A                   __end_of_isspace 34B4  
                           pclath 000FFA                             tablat 000FF5  
                           status 000FD8                   __end_of_sprintf 095A  
                get_dt@dt_pointer 0021                   __initialization 2ACC  
                 ??_get_longitude 0034                      __end_of_atof 348E  
                    __end_of_atol 252E                      __end_of_main 33E6  
              _inicializa_tarefas 3442                   escalonador@cont 00BB  
                get_gpstime@_time 006F                  get_gpstime@index 0073  
                          ??_atof 0034                            ??_atol 0026  
                          ??_main 0035                     ___fttol@sign1 0076  
                   __activetblptr 000002               ?_inicializa_tarefas 0001  
            __size_of__tdiv_to_l_ 0132   convert_to_degrees@nmea_lat_long 007C  
     __size_of_convert_to_degrees 013A                   __CFG_CCP2MX$OFF 000000  
                          ?_delay 0001            ?_escreve_caractere_lcd 0001  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                  ?_controle_shrc 0001                  __end_of___altoft 2E74  
                ___llmod@dividend 0016                            ?_scale 0066  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                          _EEDATA 000FA8                            _EECON2 000FA7  
                    gps@longitude 01F3                  ___awdiv@dividend 001C  
                __end_of___awtoft 33B2                  __end_of___ftpack 2840  
                __end_of___lltoft 31C0                            _INT0IE 007F94  
                          _INT0IF 007F91                            i2l1217 35D0  
                          _PCLATH 000FFA                            _INTCON 000FF2  
                          i2l8342 206E                            i2l8334 2038  
                          i2l8326 2028                            i2l7810 23B8  
                          i2l7802 2382                            i2l8354 2094  
                          i2l8346 2072                            i2l8338 2040  
                          i2l8356 20A0                            i2l7822 23F2  
                          i2l7818 23DC                            i2l7782 35DE  
                          i2l7790 2348                            i2l7798 236C  
                          _TMR0IF 007F92                            _TMR2IF 007CF1  
        __end_of_recebe_dado_uart 35E2                            _SPPCFG 000F63  
                          _SPPCON 000F65                  _is_it_gga_string 0044  
                          _SSPBUF 000FC9            _leitura_chaves_sistema 32B4  
            ??_inicializa_tarefas 0016                get_longitude@index 008D  
      __end_of_posicao_cursor_lcd 2F56            __size_of_init_hardware 0016  
                __end_of__powers_ 60FA                            _Result 0042  
                          ___ftge 2B5E                            ___lmul 31C0  
                       ??___aldiv 001E                            ___wmul 34B4  
                       ??___awdiv 0020                         ??___ftadd 0076  
                  __CFG_STVREN$ON 000000                         ??___awmod 001A  
                       ??___ftdiv 0024                         ??___ftneg 0033  
                       ??___lldiv 0027                         ??___ftmul 0030  
                       ??___llmod 001E                         ??___ftsub 0033  
                       ??___fttol 0071              __size_of_get_gpstime 007C  
                          _get_dt 3030                            _folder 0246  
                          _estado 003F                  __end_of_init_lcd 2ACC  
                          _memset 3416                            _fround 1428  
                          clear_0 2B14                            clear_1 2B26  
                          clear_2 2B32                            clear_3 2B3E  
                          clear_4 2B4A                  ___awdiv@quotient 0022  
                 ___awmod@divisor 0018                   ___awmod@counter 001A  
        configura_baudrate_uart@x 0030                            _strlen 3340  
                          _strtod 095A             ___ftmul@f3_as_product 0061  
         get_longitude@_longitude 0089                         ??_isdigit 0016  
            __size_of_escalonador 00B2              __end_of_get_latitude 2A2E  
                    __mediumconst 602A                         ??_isspace 0016  
           write_timer_zero@timer 0018                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
         get_latitude@lat_pointer 008C                  _write_timer_zero 35AC  
       escreve_caractere_lcd@data 0018                         ??_sprintf 008C  
                      __accesstop 0060           __end_of__initialization 2B50  
                      ___altoft@c 001E                   __CFG_PBADEN$OFF 000000  
                      ___ftadd@f1 0070                        ___ftadd@f2 0073  
                      ___ftge@ff1 0016                        ___ftge@ff2 0019  
                   ___rparam_used 000001                 ??_escreve_cmd_lcd 0018  
                      ___ftdiv@f1 001E                        ___ftdiv@f2 0021  
                      ___ftdiv@f3 0028                        ___ftneg@f1 0066  
                      ___awtoft@c 001E                        ___ftmul@f1 002A  
                      ___ftmul@f2 002D                        ___ftsub@f1 007C  
                      ___ftsub@f2 007F                        ___fttol@f1 006D  
                  __pcstackCOMRAM 0001                 ?_ativa_latch_shrc 0001  
                 _tratamento_uart 231E       __end_of_endereco_cursor_lcd 3030  
                    __pidataBANK0 35E2                      __pidataBANK1 3608  
               ?_mensagem_inicial 0001           _configura_baudrate_uart 1C44  
                   __end_of_delay 34FE                        ___lltoft@c 001E  
                   __end_of_scale 11C0                ??_ativa_latch_shrc 0016  
              ??_mensagem_inicial 001C                        __div_to_l_ 1E98  
              _tarefa_em_execucao 0047        __end_ofi2_write_timer_zero 35D0  
 configura_baudrate_uart@baudrate 0024                   ??_controle_shrc 0018  
                   _init_hardware 3570              __size_of_leitura_adc 0064  
                         ??_delay 0016                   __div_to_l_@exp1 0021  
                 __div_to_l_@cntr 0020                           ??_scale 0033  
                   gps@gps_buffer 01DD                   __div_to_l_@quot 001C  
                _is_it_rmc_string 0043      mensagem_inicial@msg_linha_um 0060  
                      __pbssBANK0 00BC                        __pbssBANK1 0100  
                      __pbssBANK2 0200    __size_of_escreve_frase_ram_lcd 0052  
   __end_of_escreve_frase_ram_lcd 3268                     __div_to_l_@f1 0016  
                   __div_to_l_@f2 0019         escreve_inteiro_uart@F3952 00E5  
                      _gga_buffer 0100           get_longitude@long_index 008E  
                         ?___ftge 0016                           ?___lmul 0016  
        __end_of_envia_dados_shrc 3340                           ?___wmul 0024  
           mensagem_inicial@F4020 6154             mensagem_inicial@F4018 6165  
    __size_of_convert_time_to_utc 011A                           ?_get_dt 001C  
                       ?___altoft 001E                           ?_memset 0016  
                         ?_fround 0066                    ___lmul@product 001E  
                       ?___awtoft 001E                         ?___ftpack 0016  
                       ?___lltoft 001E      __end_of_leitura_continua_adc 1E98  
                         ?_strlen 0016                      _gga_pointers 018A  
                         ?_strtod 0069                           _INTCON2 000FF1  
                         _INTCON3 000FF0                    ?_init_hardware 0001  
                         _SSPCON1 000FC6          __size_of_inicializa_shrc 0008  
        __size_of_inicializa_uart 0022                           _SSPSTAT 000FC7  
        _convert_time_to_utc$3371 00AD                   __CFG_VREGEN$OFF 000000  
                       ?_init_lcd 0001           __end_of_tratamento_uart 2436  
               __end_of__npowers_ 6121                           __Hparam 0000  
       ??_configura_baudrate_uart 0028                        _scale$3374 0069  
                         __Lparam 0000                           ___aldiv 2614  
                 __size_of___ftge 0090                           ___awdiv 2C7A  
                 __size_of___lmul 0056                           ___ftadd 11C0  
                         ___awmod 2F56                           ___ftdiv 252E  
                         ___ftneg 33E6                           ___lldiv 2CFE  
                 __size_of___wmul 0026                           ___ftmul 20E4  
                         ___llmod 309A                           ___ftsub 3268  
                         ___fttol 1894                   __size_of_get_dt 006A  
                      ??___altoft 0022             __size_of_get_latitude 00A4  
                         __pcinit 2ACC                        ??___awtoft 0021  
                      ??___ftpack 001B                   __size_of_memset 002C  
                 __size_of_fround 024E                        _init_ports 3558  
                         __ramtop 0800                        ??___lltoft 0022  
                         __ptext0 33B2                           __ptext1 2840  
                         __ptext2 1D70                           __ptext3 3100  
                         __ptext4 32B4                           __ptext5 2A2E  
                         __ptext6 3570                           __ptext7 3558  
                         __ptext8 3612                           __ptext9 359A  
                       _T0CONbits 000FD5                   __size_of_strlen 003A  
                     ?__div_to_l_ 0016                   __size_of_strtod 0450  
         i2write_timer_zero@timer 0003       endereco_cursor_lcd@endereco 0018  
                         _dpowers 60AB                      __size_of_gps 021E  
                         _isdigit 3520                      __size_of_isr 20DC  
         ??_escreve_caractere_lcd 0018                  ___awmod@dividend 0016  
                ___aldiv@dividend 0016                           _isspace 348E  
         __size_of_init_interrupt 0012                           _sprintf 0012  
                         gps@date 01D9                    __pintcode_body 1FC0  
         ?_leitura_chaves_sistema 0001                           gps@time 01EC  
            end_of_initialization 2B50            get_gpstime@time_buffer 0060  
                         isr@cont 0015        __end_ofleitura_chave@F3834 6154  
      __end_ofleitura_chave@F3836 6143        __end_ofleitura_chave@F3838 6132  
         __size_of_init_oscilador 0008                           memset@c 0018  
                         memset@n 001A                           memset@p 001C  
                   __Lmediumconst 602A                        ??_init_lcd 0019  
                         int_func 1FC0                        _rmc_buffer 0200  
               ?_recebe_dado_uart 0001            write_timer_zero@timer0 0016  
                 ___lldiv@divisor 0023                ??_recebe_dado_uart 0001  
                    _get_latitude 298A                   ___lldiv@counter 002B  
        envia_dados_shrc@contador 0016                         _RCSTAbits 000FAB  
        __end_of_write_timer_zero 35BE                  ___aldiv@quotient 0020  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE             __end_of_get_longitude 298A  
                  __tdiv_to_l_@f1 0016                    __tdiv_to_l_@f2 0019  
          convert_time_to_utc@min 00B3            convert_time_to_utc@sec 00B5  
                         strlen@s 0016                     ??__tdiv_to_l_ 001C  
                         strtod@s 0069                         _PORTAbits 000F80  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                       _PORTEbits 000F84                   ??_init_hardware 001A  
              _posicao_cursor_lcd 2EE6        __end_of_convert_to_degrees 1B12  
 __end_of_configura_baudrate_uart 1D70                         _TRISAbits 000F92  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
                       _TRISDbits 000F95                   _escreve_cmd_lcd 2BEE  
  __end_of_leitura_chaves_sistema 32FC               ?_posicao_cursor_lcd 0019  
                     ___ftdiv@exp 002B                  ?_tratamento_uart 0001  
            _leitura_continua_adc 1D70                 ??_inicializa_shrc 0016  
               ??_inicializa_uart 0032       __size_of_inicializa_tarefas 0026  
             __size_of__div_to_l_ 0128                     ??_get_gpstime 0034  
                     ___ftmul@exp 0060              ??_posicao_cursor_lcd 001A  
                  __end_of___ftge 2BEE                    __end_of___lmul 3216  
                  __end_of___wmul 34DA                     ??_escalonador 00B9  
                     ?_init_ports 0001                    __end_of_get_dt 309A  
                  __end_of_memset 3442                    __end_of_fround 1676  
                  __end_of_strlen 337A                    __end_of_strtod 0DAA  
             start_initialization 2ACC         __size_of_ativa_latch_shrc 0014  
             __end_of__tdiv_to_l_ 1C44                       __end_of_gps 1894  
                     __end_of_isr 20E4         __size_of_mensagem_inicial 00A6  
             _convert_time_to_utc 2204                i2_write_timer_zero 35BE  
           ?_leitura_continua_adc 0001                   ___llmod@divisor 001A  
                 ___llmod@counter 001E                  _data_uart_recebe 0049  
                     _dado_buffer 00DE               ?i2_write_timer_zero 0001  
                        ??___ftge 001C                          ??___lmul 001E  
                        ??___wmul 0028              ?_convert_time_to_utc 00A9  
               ?_envia_dados_shrc 0001                          ??_get_dt 0020  
                     __pdataBANK0 00E5                       __pdataBANK1 01F6  
                __CFG_LPT1OSC$OFF 000000                          ??_memset 001C  
                        ??_fround 0033                ??_envia_dados_shrc 0016  
             __end_of_get_gpstime 2DFC                     sprintf@tmpval 009B  
         __end_of_escreve_cmd_lcd 2C7A                          ??_strlen 0018  
                   ??_leitura_adc 0018                          ??_strtod 0033  
               __size_of___altoft 0078      __size_of_endereco_cursor_lcd 006A  
                      fround@prec 006F                 __size_of___awtoft 0038  
               __size_of___ftpack 00AE                       __pbssBIGRAM 0276  
               __size_of___lltoft 005C                       __pbssCOMRAM 0035  
                   __pcstackBANK0 0060                     __pcstackBANK1 01D9  
                  _init_interrupt 359A              ??i2_write_timer_zero 0003  
             __end_of_escalonador 2792                       _data_buffer 01CA  
           __end_of_controle_shrc 3608                      _isdigit$2851 0017  
                  _init_oscilador 3612                       sprintf@flag 0097  
                     sprintf@fval 00A5                       sprintf@prec 00A3  
             __size_of_init_ports 0018             _escreve_frase_ram_lcd 3216  
               __size_of_init_lcd 009E                 delay@contador_int 0017  
               delay@contador_ext 0016          get_longitude@long_buffer 007A  
                       _gga_index 003C                         __pintcode 0008  
           ??_convert_time_to_utc 0033                     __pmediumconst 602A  
                        ?___aldiv 0016                          ?___awdiv 001C  
                        ?___ftadd 0070                          ?___awmod 0016  
                        ?___ftdiv 001E                          ?___ftneg 0066  
                        ?___lldiv 001F                          ?___ftmul 002A  
                        ?___llmod 0016                          ?___ftsub 007C  
                       __npowers_ 60FA                          ?___fttol 006D  
              _sinaliza_int_timer 0048                       __tdiv_to_l_ 1B12  
                    ??__div_to_l_ 001C            __end_of_init_interrupt 35AC  
                        ?_isdigit 0001                          ?_isspace 0001  
  __size_of_escreve_caractere_lcd 0072     __end_of_escreve_caractere_lcd 2EE6  
                  __size_of_delay 0024               __end_of_leitura_adc 3164  
          __end_of_init_oscilador 361A                          ?_sprintf 0082  
                  __size_of_scale 0416                         _p_tarefas 00CF  
          ??_leitura_continua_adc 001D                   ___aldiv@divisor 001A  
                 ___aldiv@counter 001E                    ___wmul@product 0028  
                        _LATBbits 000F8A                          _PIE1bits 000F9D  
                       _rmc_index 003A                          _PIR1bits 000F9E  
              __end_of__div_to_l_ 1FC0                          _PIR2bits 000FA1  
                     _get_gpstime 2D80                          i2u918_40 2016  
                        i2u918_46 2018                 ?_write_timer_zero 0016  
                     strtod@flags 006E                leitura_chave@F3834 6143  
              leitura_chave@F3836 6132                leitura_chave@F3838 6121  
                     strtod@expon 006F          posicao_cursor_lcd@coluna 0019  
              ??_write_timer_zero 0018        posicao_cursor_lcd@endereco 001B  
       __size_of_recebe_dado_uart 0012                       _escalonador 26E0  
                      _ADCON0bits 000FC2                        _ADCON1bits 000FC1  
                      _ADCON2bits 000FC0                 ___wmul@multiplier 0024  
                ?_escreve_cmd_lcd 0001       escreve_frase_ram_lcd@buffer 0019  
                 ?_init_interrupt 0001                  _ativa_latch_shrc 3586  
                 _inicializa_shrc 361A                   _inicializa_uart 34FE  
                    _isspace$2854 0017                  _mensagem_inicial 2840  
                 ?_init_oscilador 0001                 ___lmul@multiplier 0016  
                       copy_data0 2AE0                         copy_data1 2B00  
              _convert_to_degrees 19D8          ?_configura_baudrate_uart 0024  
          ?_escreve_frase_ram_lcd 0019                        _EECON1bits 000FA6  
    leitura_continua_adc@cont_int 0023          escreve_inteiro_lcd@F3962 00EC  
                        __Hrparam 0000               ?_convert_to_degrees 007C  
                     _info_chaves 00BC                          __Lrparam 0000  
                __size_of___aldiv 00CC                  __size_of___awdiv 0084  
                __size_of___ftadd 0268                  __size_of___awmod 0070  
                __size_of___ftdiv 00E6                  __size_of___ftneg 0030  
                __size_of___lldiv 0082                          ___altoft 2DFC  
                __size_of___ftmul 0120                  __size_of___llmod 0066  
                __size_of___ftsub 004C                  __size_of___fttol 0144  
                    ??_init_ports 0016                          ___awtoft 337A  
                        ___ftpack 2792                       _fround$3372 006C  
                     _fround$3373 0069                          ___lltoft 3164  
                     _leitura_adc 3100                        sprintf@exp 0099  
                      sprintf@val 009F             __end_of_init_hardware 3586  
            ??_convert_to_degrees 0033                  __size_of_isdigit 001E  
                        _gga_code 0035                  __size_of_isspace 0026  
                        _fileName 01F6                          __ptext10 353E  
                        __ptext11 35AC                          __ptext20 2EE6  
                        __ptext12 35F0                          __ptext21 2FC6  
                        __ptext13 34FE                          __ptext30 2436  
                        __ptext22 3416                          __ptext14 1C44  
                        __ptext31 31C0                          __ptext23 28E6  
                        __ptext15 2614                          __ptext40 337A  
                        __ptext32 3030                          __ptext24 298A  
                        __ptext16 3442                          __ptext41 2204  
                        __ptext33 3340                          __ptext25 3468  
                        __ptext17 361A                          __ptext50 1B12  
                        __ptext42 0012                          __ptext34 3216  
                        __ptext26 095A                          __ptext18 26E0  
                        __ptext51 1E98                          __ptext43 0DAA  
                        __ptext35 2E74                          __ptext27 348E  
                        __ptext19 1676                          __ptext60 2B5E  
                        __ptext52 3164                          __ptext44 3520  
                        __ptext36 2BEE                          __ptext28 2DFC  
                        __ptext61 35FC                          __ptext53 309A  
                        __ptext45 1428                          __ptext37 34DA  
                        __ptext29 2D80                          __ptext62 32FC  
                        __ptext54 2CFE                          __ptext46 34B4  
                        __ptext38 19D8                          __ptext63 3586  
                        __ptext55 1894                          __ptext47 20E4  
                        __ptext39 252E                          __ptext56 3268  
                        __ptext48 2F56                          __ptext65 35BE  
                        __ptext57 11C0                          __ptext49 2C7A  
                        __ptext66 231E                          __ptext58 2792  
                        __ptext67 35D0                          __ptext59 33E6  
                        __ptext68 0000                          _fileSize 00C3  
                        __powers_ 60D3                    _timeout_tarefa 00DA  
                __size_of_sprintf 0948                      _rmc_pointers 019E  
          __size_of_get_longitude 00A4        __end_of_inicializa_tarefas 3468  
        i2write_timer_zero@timer0 0001                          _init_lcd 2A2E  
                   __size_of_atof 0026                     __size_of_atol 00F8  
                   __size_of_main 0034               _endereco_cursor_lcd 2FC6  
              __end_of_init_ports 3570                 _comma_counter_gga 0046  
               _comma_counter_rmc 0045                          _rmc_code 00D3  
                      strtod@eexp 006D       __size_of_posicao_cursor_lcd 0070  
                        int$flags 004A           posicao_cursor_lcd@linha 001A  
        __size_of_tratamento_uart 0118                          atol@sign 002A  
        leitura_continua_adc@cont 0024           __end_of_inicializa_shrc 3622  
         __end_of_inicializa_uart 3520             __CFG_CPUDIV$OSC1_PLL2 000000  
            ?_endereco_cursor_lcd 0001                        _INTCONbits 000FF2  
                leitura_adc@canal 001C                          isdigit@c 0018  
                        memset@p1 0016         __size_of_envia_dados_shrc 0044  
                        scale@scl 006C                 _config_timer_dois 35F0  
                    _tempo_backup 00CB                 _config_timer_zero 353E  
                        intlevel2 0000                         sprintf@ap 0095  
                __tdiv_to_l_@exp1 0024                  __tdiv_to_l_@cntr 0023  
                       sprintf@sp 0082                ?_config_timer_dois 0001  
        mensagem_inicial@msg_dois 0071                  __tdiv_to_l_@quot 001F  
              ?_config_timer_zero 0001                      _tempo_tarefa 00C7  
    envia_dados_shrc@data_to_shrc 0017                          isspace@c 0018  
                ___lldiv@dividend 001F               ??_config_timer_dois 0016  
                      _OSCCONbits 000FD3               ??_config_timer_zero 001A  
                       strtod@res 006B       convert_time_to_utc@utc_time 00A9  
       get_longitude@long_pointer 008C                 get_latitude@index 008D  
                   _get_longitude 28E6                  _recebe_dado_uart 35D0  
                    ?__tdiv_to_l_ 0016             ??_endereco_cursor_lcd 0018  
        ??_leitura_chaves_sistema 0016                          sprintf@c 00A8  
                        sprintf@f 0084                  ___lldiv@quotient 0027  
         convert_time_to_utc@hour 00B1                          strlen@cp 001A  
       __end_of_config_timer_dois 35FC                      ___aldiv@sign 001F  
       __end_of_config_timer_zero 3558                          strtod@_u 0070  
     __size_ofi2_write_timer_zero 0012                       _SSPCON1bits 000FC6  
          escreve_cmd_lcd@comando 0018       __end_of_convert_time_to_utc 231E  
                   ?_get_latitude 0077     __end_ofmensagem_inicial@F4020 6165  
   __end_ofmensagem_inicial@F4018 6176          __end_of_ativa_latch_shrc 359A  
                    ?_get_gpstime 0030  
