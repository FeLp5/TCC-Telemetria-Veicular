

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Feb 04 16:34:40 2022

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           ; Version 1.41
    67                           ; Generated 25/01/2017 GMT
    68                           ; 
    69                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F4550 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     
   101                           	psect	idataBANK0
   102  001192                     __pidataBANK0:
   103                           	opt stack 0
   104                           
   105                           ;initializer for _fileName
   106  001192  63                 	db	99
   107  001193  68                 	db	104
   108  001194  65                 	db	101
   109  001195  63                 	db	99
   110  001196  6B                 	db	107
   111  001197  2E                 	db	46
   112  001198  74                 	db	116
   113  001199  78                 	db	120
   114  00119A  74                 	db	116
   115  00119B  00                 	db	0
   116                           
   117                           ;initializer for escreve_inteiro_uart@F3952
   118  00119C  30                 	db	48
   119  00119D  30                 	db	48
   120  00119E  30                 	db	48
   121  00119F  30                 	db	48
   122  0011A0  30                 	db	48
   123  0011A1  30                 	db	48
   124  0011A2  00                 	db	0
   125                           
   126                           ;initializer for escreve_inteiro_lcd@F3962
   127  0011A3  30                 	db	48
   128  0011A4  30                 	db	48
   129  0011A5  30                 	db	48
   130  0011A6  30                 	db	48
   131  0011A7  30                 	db	48
   132  0011A8  30                 	db	48
   133  0011A9  00                 	db	0
   134                           
   135                           	psect	mediumconst
   136  0060AA                     __pmediumconst:
   137                           	opt stack 0
   138  0060AA  00                 	db	0
   139  0060AB                     create_name@cvt:
   140                           	opt stack 0
   141  0060AB  80                 	db	128
   142  0060AC  9A                 	db	154
   143  0060AD  90                 	db	144
   144  0060AE  41                 	db	65
   145  0060AF  8E                 	db	142
   146  0060B0  41                 	db	65
   147  0060B1  8F                 	db	143
   148  0060B2  80                 	db	128
   149  0060B3  45                 	db	69
   150  0060B4  45                 	db	69
   151  0060B5  45                 	db	69
   152  0060B6  49                 	db	73
   153  0060B7  49                 	db	73
   154  0060B8  49                 	db	73
   155  0060B9  8E                 	db	142
   156  0060BA  8F                 	db	143
   157  0060BB  90                 	db	144
   158  0060BC  92                 	db	146
   159  0060BD  92                 	db	146
   160  0060BE  4F                 	db	79
   161  0060BF  99                 	db	153
   162  0060C0  4F                 	db	79
   163  0060C1  55                 	db	85
   164  0060C2  55                 	db	85
   165  0060C3  59                 	db	89
   166  0060C4  99                 	db	153
   167  0060C5  9A                 	db	154
   168  0060C6  9B                 	db	155
   169  0060C7  9C                 	db	156
   170  0060C8  9D                 	db	157
   171  0060C9  9E                 	db	158
   172  0060CA  9F                 	db	159
   173  0060CB  41                 	db	65
   174  0060CC  49                 	db	73
   175  0060CD  4F                 	db	79
   176  0060CE  55                 	db	85
   177  0060CF  A5                 	db	165
   178  0060D0  A5                 	db	165
   179  0060D1  A6                 	db	166
   180  0060D2  A7                 	db	167
   181  0060D3  A8                 	db	168
   182  0060D4  A9                 	db	169
   183  0060D5  AA                 	db	170
   184  0060D6  AB                 	db	171
   185  0060D7  AC                 	db	172
   186  0060D8  21                 	db	33
   187  0060D9  AE                 	db	174
   188  0060DA  AF                 	db	175
   189  0060DB  B0                 	db	176
   190  0060DC  B1                 	db	177
   191  0060DD  B2                 	db	178
   192  0060DE  B3                 	db	179
   193  0060DF  B4                 	db	180
   194  0060E0  B5                 	db	181
   195  0060E1  B6                 	db	182
   196  0060E2  B7                 	db	183
   197  0060E3  B8                 	db	184
   198  0060E4  B9                 	db	185
   199  0060E5  BA                 	db	186
   200  0060E6  BB                 	db	187
   201  0060E7  BC                 	db	188
   202  0060E8  BD                 	db	189
   203  0060E9  BE                 	db	190
   204  0060EA  BF                 	db	191
   205  0060EB  C0                 	db	192
   206  0060EC  C1                 	db	193
   207  0060ED  C2                 	db	194
   208  0060EE  C3                 	db	195
   209  0060EF  C4                 	db	196
   210  0060F0  C5                 	db	197
   211  0060F1  C6                 	db	198
   212  0060F2  C7                 	db	199
   213  0060F3  C8                 	db	200
   214  0060F4  C9                 	db	201
   215  0060F5  CA                 	db	202
   216  0060F6  CB                 	db	203
   217  0060F7  CC                 	db	204
   218  0060F8  CD                 	db	205
   219  0060F9  CE                 	db	206
   220  0060FA  CF                 	db	207
   221  0060FB  D0                 	db	208
   222  0060FC  D1                 	db	209
   223  0060FD  D2                 	db	210
   224  0060FE  D3                 	db	211
   225  0060FF  D4                 	db	212
   226  006100  D5                 	db	213
   227  006101  D6                 	db	214
   228  006102  D7                 	db	215
   229  006103  D8                 	db	216
   230  006104  D9                 	db	217
   231  006105  DA                 	db	218
   232  006106  DB                 	db	219
   233  006107  DC                 	db	220
   234  006108  DD                 	db	221
   235  006109  DE                 	db	222
   236  00610A  DF                 	db	223
   237  00610B  E0                 	db	224
   238  00610C  E1                 	db	225
   239  00610D  E2                 	db	226
   240  00610E  E3                 	db	227
   241  00610F  E4                 	db	228
   242  006110  E5                 	db	229
   243  006111  E6                 	db	230
   244  006112  E7                 	db	231
   245  006113  E8                 	db	232
   246  006114  E9                 	db	233
   247  006115  EA                 	db	234
   248  006116  EB                 	db	235
   249  006117  EC                 	db	236
   250  006118  ED                 	db	237
   251  006119  EE                 	db	238
   252  00611A  EF                 	db	239
   253  00611B  F0                 	db	240
   254  00611C  F1                 	db	241
   255  00611D  F2                 	db	242
   256  00611E  F3                 	db	243
   257  00611F  F4                 	db	244
   258  006120  F5                 	db	245
   259  006121  F6                 	db	246
   260  006122  F7                 	db	247
   261  006123  F8                 	db	248
   262  006124  F9                 	db	249
   263  006125  FA                 	db	250
   264  006126  FB                 	db	251
   265  006127  FC                 	db	252
   266  006128  FD                 	db	253
   267  006129  FE                 	db	254
   268  00612A  FF                 	db	255
   269  00612B                     __end_ofcreate_name@cvt:
   270                           	opt stack 0
   271  00612B                     leitura_chave@F3838:
   272                           	opt stack 0
   273  00612B  20                 	db	32
   274  00612C  49                 	db	73
   275  00612D  67                 	db	103
   276  00612E  6E                 	db	110
   277  00612F  20                 	db	32
   278  006130  4F                 	db	79
   279  006131  6E                 	db	110
   280  006132  00                 	db	0
   281  006133  00                 	db	0
   282  006134  00                 	db	0
   283  006135  00                 	db	0
   284  006136  00                 	db	0
   285  006137  00                 	db	0
   286  006138  00                 	db	0
   287  006139  00                 	db	0
   288  00613A  00                 	db	0
   289  00613B  00                 	db	0
   290  00613C                     __end_ofleitura_chave@F3838:
   291                           	opt stack 0
   292  00613C                     leitura_chave@F3836:
   293                           	opt stack 0
   294  00613C  20                 	db	32
   295  00613D  49                 	db	73
   296  00613E  67                 	db	103
   297  00613F  6E                 	db	110
   298  006140  20                 	db	32
   299  006141  43                 	db	67
   300  006142  72                 	db	114
   301  006143  61                 	db	97
   302  006144  6E                 	db	110
   303  006145  6B                 	db	107
   304  006146  00                 	db	0
   305  006147  00                 	db	0
   306  006148  00                 	db	0
   307  006149  00                 	db	0
   308  00614A  00                 	db	0
   309  00614B  00                 	db	0
   310  00614C  00                 	db	0
   311  00614D                     __end_ofleitura_chave@F3836:
   312                           	opt stack 0
   313  00614D                     leitura_chave@F3834:
   314                           	opt stack 0
   315  00614D  20                 	db	32
   316  00614E  49                 	db	73
   317  00614F  67                 	db	103
   318  006150  6E                 	db	110
   319  006151  20                 	db	32
   320  006152  4F                 	db	79
   321  006153  66                 	db	102
   322  006154  66                 	db	102
   323  006155  00                 	db	0
   324  006156  00                 	db	0
   325  006157  00                 	db	0
   326  006158  00                 	db	0
   327  006159  00                 	db	0
   328  00615A  00                 	db	0
   329  00615B  00                 	db	0
   330  00615C  00                 	db	0
   331  00615D  00                 	db	0
   332  00615E                     __end_ofleitura_chave@F3834:
   333                           	opt stack 0
   334  00615E                     mensagem_inicial@F4020:
   335                           	opt stack 0
   336  00615E  20                 	db	32
   337  00615F  31                 	db	49
   338  006160  38                 	db	56
   339  006161  2F                 	db	47
   340  006162  30                 	db	48
   341  006163  31                 	db	49
   342  006164  2F                 	db	47
   343  006165  32                 	db	50
   344  006166  30                 	db	48
   345  006167  32                 	db	50
   346  006168  32                 	db	50
   347  006169  20                 	db	32
   348  00616A  20                 	db	32
   349  00616B  20                 	db	32
   350  00616C  00                 	db	0
   351  00616D  00                 	db	0
   352  00616E  00                 	db	0
   353  00616F                     __end_ofmensagem_inicial@F4020:
   354                           	opt stack 0
   355  00616F                     mensagem_inicial@F4018:
   356                           	opt stack 0
   357  00616F  53                 	db	83
   358  006170  44                 	db	68
   359  006171  43                 	db	67
   360  006172  61                 	db	97
   361  006173  72                 	db	114
   362  006174  64                 	db	100
   363  006175  20                 	db	32
   364  006176  49                 	db	73
   365  006177  6E                 	db	110
   366  006178  69                 	db	105
   367  006179  74                 	db	116
   368  00617A  20                 	db	32
   369  00617B  20                 	db	32
   370  00617C  20                 	db	32
   371  00617D  00                 	db	0
   372  00617E  00                 	db	0
   373  00617F  00                 	db	0
   374  006180                     __end_ofmensagem_inicial@F4018:
   375                           	opt stack 0
   376  006180                     _dpowers:
   377                           	opt stack 0
   378  006180  0001               	dw	1
   379  006182  000A               	dw	10
   380  006184  0064               	dw	100
   381  006186  03E8               	dw	1000
   382  006188  2710               	dw	10000
   383  00618A                     __end_of_dpowers:
   384                           	opt stack 0
   385  0000                     _RCSTA	set	4011
   386  0000                     _TXSTA	set	4012
   387  0000                     _RCREG	set	4014
   388  0000                     _RCSTAbits	set	4011
   389  0000                     _TXREG	set	4013
   390  0000                     _SPBRG	set	4015
   391  0000                     _PIR2bits	set	4001
   392  0000                     _EECON2	set	4007
   393  0000                     _EECON1bits	set	4006
   394  0000                     _EEDATA	set	4008
   395  0000                     _EEADR	set	4009
   396  0000                     _PR2	set	4043
   397  0000                     _TMR2	set	4044
   398  0000                     _T2CON	set	4042
   399  0000                     _OSCCONbits	set	4051
   400  0000                     _TRISE	set	3990
   401  0000                     _TRISC	set	3988
   402  0000                     _TRISA	set	3986
   403  0000                     _TRISD	set	3989
   404  0000                     _LATB	set	3978
   405  0000                     _TRISB	set	3987
   406  0000                     _T0CONbits	set	4053
   407  0000                     _TMR0L	set	4054
   408  0000                     _TMR0H	set	4055
   409  0000                     _PIE1	set	3997
   410  0000                     _INTCON3	set	4080
   411  0000                     _INTCON2	set	4081
   412  0000                     _INTCON	set	4082
   413  0000                     _SPPCFG	set	3939
   414  0000                     _SPPCON	set	3941
   415  0000                     _T0CON	set	4053
   416  0000                     _PORTDbits	set	3971
   417  0000                     _TRISDbits	set	3989
   418  0000                     _PORTEbits	set	3972
   419  0000                     _PORTCbits	set	3970
   420  0000                     _ADRESL	set	4035
   421  0000                     _ADRESH	set	4036
   422  0000                     _ADCON0	set	4034
   423  0000                     _ADCON0bits	set	4034
   424  0000                     _ADCON2bits	set	4032
   425  0000                     _ADCON1bits	set	4033
   426  0000                     _ADCON1	set	4033
   427  0000                     _SSPBUF	set	4041
   428  0000                     _TRISCbits	set	3988
   429  0000                     _SSPSTATbits	set	4039
   430  0000                     _TRISBbits	set	3987
   431  0000                     _SSPCON1	set	4038
   432  0000                     _SSPSTAT	set	4039
   433  0000                     _SSPCON1bits	set	4038
   434  0000                     _PORTAbits	set	3968
   435  0000                     _TRISAbits	set	3986
   436  0000                     _PCL	set	4089
   437  0000                     _PCLATH	set	4090
   438  0000                     _INTCONbits	set	4082
   439  0000                     _LATBbits	set	3978
   440  0000                     _PIR1bits	set	3998
   441  0000                     _PIE1bits	set	3997
   442  0000                     _RCIF	set	31989
   443  0000                     _TRMT	set	32097
   444  0000                     _TXEN	set	32101
   445  0000                     _CREN	set	32092
   446  0000                     _SPEN	set	32095
   447  0000                     _SYNC	set	32100
   448  0000                     _BRGH	set	32098
   449  0000                     _TMR2IF	set	31985
   450  0000                     _INT0IE	set	32660
   451  0000                     _INT0IF	set	32657
   452  0000                     _T0IF	set	32658
   453  0000                     _TMR0IF	set	32658
   454  00618A  53                 	db	83	;'S'
   455  00618B  50                 	db	80	;'P'
   456  00618C  49                 	db	73	;'I'
   457  00618D  20                 	db	32
   458  00618E  63                 	db	99	;'c'
   459  00618F  6F                 	db	111	;'o'
   460  006190  6E                 	db	110	;'n'
   461  006191  66                 	db	102	;'f'
   462  006192  69                 	db	105	;'i'
   463  006193  67                 	db	103	;'g'
   464  006194  75                 	db	117	;'u'
   465  006195  72                 	db	114	;'r'
   466  006196  61                 	db	97	;'a'
   467  006197  64                 	db	100	;'d'
   468  006198  61                 	db	97	;'a'
   469  006199  21                 	db	33
   470  00619A  00                 	db	0
   471  00619B                     STR_7:
   472  00619B  73                 	db	115	;'s'
   473  00619C  79                 	db	121	;'y'
   474  00619D  73                 	db	115	;'s'
   475  00619E  74                 	db	116	;'t'
   476  00619F  20                 	db	32
   477  0061A0  69                 	db	105	;'i'
   478  0061A1  6E                 	db	110	;'n'
   479  0061A2  69                 	db	105	;'i'
   480  0061A3  63                 	db	99	;'c'
   481  0061A4  69                 	db	105	;'i'
   482  0061A5  61                 	db	97	;'a'
   483  0061A6  6C                 	db	108	;'l'
   484  0061A7  69                 	db	105	;'i'
   485  0061A8  7A                 	db	122	;'z'
   486  0061A9  65                 	db	101	;'e'
   487  0061AA  64                 	db	100	;'d'
   488  0061AB  00                 	db	0
   489  0061AC  61                 	db	97	;'a'
   490  0061AD  62                 	db	98	;'b'
   491  0061AE  72                 	db	114	;'r'
   492  0061AF  69                 	db	105	;'i'
   493  0061B0  72                 	db	114	;'r'
   494  0061B1  20                 	db	32
   495  0061B2  6F                 	db	111	;'o'
   496  0061B3  20                 	db	32
   497  0061B4  61                 	db	97	;'a'
   498  0061B5  72                 	db	114	;'r'
   499  0061B6  71                 	db	113	;'q'
   500  0061B7  75                 	db	117	;'u'
   501  0061B8  69                 	db	105	;'i'
   502  0061B9  76                 	db	118	;'v'
   503  0061BA  6F                 	db	111	;'o'
   504  0061BB  00                 	db	0
   505  0061BC  6D                 	db	109	;'m'
   506  0061BD  6F                 	db	111	;'o'
   507  0061BE  75                 	db	117	;'u'
   508  0061BF  6E                 	db	110	;'n'
   509  0061C0  74                 	db	116	;'t'
   510  0061C1  20                 	db	32
   511  0061C2  66                 	db	102	;'f'
   512  0061C3  69                 	db	105	;'i'
   513  0061C4  6C                 	db	108	;'l'
   514  0061C5  65                 	db	101	;'e'
   515  0061C6  20                 	db	32
   516  0061C7  73                 	db	115	;'s'
   517  0061C8  79                 	db	121	;'y'
   518  0061C9  73                 	db	115	;'s'
   519  0061CA  00                 	db	0
   520  0061CB  42                 	db	66	;'B'
   521  0061CC  79                 	db	121	;'y'
   522  0061CD  74                 	db	116	;'t'
   523  0061CE  65                 	db	101	;'e'
   524  0061CF  73                 	db	115	;'s'
   525  0061D0  20                 	db	32
   526  0061D1  63                 	db	99	;'c'
   527  0061D2  72                 	db	114	;'r'
   528  0061D3  69                 	db	105	;'i'
   529  0061D4  61                 	db	97	;'a'
   530  0061D5  64                 	db	100	;'d'
   531  0061D6  6F                 	db	111	;'o'
   532  0061D7  21                 	db	33
   533  0061D8  00                 	db	0
   534  0061D9  43                 	db	67	;'C'
   535  0061DA  61                 	db	97	;'a'
   536  0061DB  72                 	db	114	;'r'
   537  0061DC  74                 	db	116	;'t'
   538  0061DD  E3                 	db	-29
   539  0061DE  6F                 	db	111	;'o'
   540  0061DF  20                 	db	32
   541  0061E0  41                 	db	65	;'A'
   542  0061E1  63                 	db	99	;'c'
   543  0061E2  65                 	db	101	;'e'
   544  0061E3  69                 	db	105	;'i'
   545  0061E4  74                 	db	116	;'t'
   546  0061E5  6F                 	db	111	;'o'
   547  0061E6  00                 	db	0
   548  0061E7                     STR_13:
   549  0061E7  45                 	db	69	;'E'
   550  0061E8  72                 	db	114	;'r'
   551  0061E9  72                 	db	114	;'r'
   552  0061EA  6F                 	db	111	;'o'
   553  0061EB  20                 	db	32
   554  0061EC  74                 	db	116	;'t'
   555  0061ED  65                 	db	101	;'e'
   556  0061EE  6E                 	db	110	;'n'
   557  0061EF  74                 	db	116	;'t'
   558  0061F0  61                 	db	97	;'a'
   559  0061F1  6E                 	db	110	;'n'
   560  0061F2  64                 	db	100	;'d'
   561  0061F3  6F                 	db	111	;'o'
   562  0061F4  00                 	db	0
   563  0061F5  41                 	db	65	;'A'
   564  0061F6  74                 	db	116	;'t'
   565  0061F7  74                 	db	116	;'t'
   566  0061F8  65                 	db	101	;'e'
   567  0061F9  6D                 	db	109	;'m'
   568  0061FA  70                 	db	112	;'p'
   569  0061FB  74                 	db	116	;'t'
   570  0061FC  69                 	db	105	;'i'
   571  0061FD  6E                 	db	110	;'n'
   572  0061FE  67                 	db	103	;'g'
   573  0061FF  20                 	db	32
   574  006200  74                 	db	116	;'t'
   575  006201  6F                 	db	111	;'o'
   576  006202  00                 	db	0
   577  006203  6C                 	db	108	;'l'
   578  006204  65                 	db	101	;'e'
   579  006205  72                 	db	114	;'r'
   580  006206  20                 	db	32
   581  006207  6F                 	db	111	;'o'
   582  006208  20                 	db	32
   583  006209  61                 	db	97	;'a'
   584  00620A  72                 	db	114	;'r'
   585  00620B  71                 	db	113	;'q'
   586  00620C  75                 	db	117	;'u'
   587  00620D  69                 	db	105	;'i'
   588  00620E  76                 	db	118	;'v'
   589  00620F  6F                 	db	111	;'o'
   590  006210  00                 	db	0
   591  006211  6C                 	db	108	;'l'
   592  006212  65                 	db	101	;'e'
   593  006213  6E                 	db	110	;'n'
   594  006214  64                 	db	100	;'d'
   595  006215  6F                 	db	111	;'o'
   596  006216  20                 	db	32
   597  006217  61                 	db	97	;'a'
   598  006218  72                 	db	114	;'r'
   599  006219  71                 	db	113	;'q'
   600  00621A  75                 	db	117	;'u'
   601  00621B  69                 	db	105	;'i'
   602  00621C  76                 	db	118	;'v'
   603  00621D  6F                 	db	111	;'o'
   604  00621E  00                 	db	0
   605  00621F  42                 	db	66	;'B'
   606  006220  6C                 	db	108	;'l'
   607  006221  6F                 	db	111	;'o'
   608  006222  63                 	db	99	;'c'
   609  006223  6F                 	db	111	;'o'
   610  006224  20                 	db	32
   611  006225  64                 	db	100	;'d'
   612  006226  65                 	db	101	;'e'
   613  006227  20                 	db	32
   614  006228  35                 	db	53	;'5'
   615  006229  31                 	db	49	;'1'
   616  00622A  32                 	db	50	;'2'
   617  00622B  00                 	db	0
   618  00622C  53                 	db	83	;'S'
   619  00622D  44                 	db	68	;'D'
   620  00622E  43                 	db	67	;'C'
   621  00622F  61                 	db	97	;'a'
   622  006230  72                 	db	114	;'r'
   623  006231  64                 	db	100	;'d'
   624  006232  20                 	db	32
   625  006233  65                 	db	101	;'e'
   626  006234  72                 	db	114	;'r'
   627  006235  72                 	db	114	;'r'
   628  006236  6F                 	db	111	;'o'
   629  006237  72                 	db	114	;'r'
   630  006238  00                 	db	0
   631  006239  63                 	db	99	;'c'
   632  00623A  68                 	db	104	;'h'
   633  00623B  65                 	db	101	;'e'
   634  00623C  63                 	db	99	;'c'
   635  00623D  6B                 	db	107	;'k'
   636  00623E  2E                 	db	46
   637  00623F  74                 	db	116	;'t'
   638  006240  78                 	db	120	;'x'
   639  006241  74                 	db	116	;'t'
   640  006242  00                 	db	0
   641  006243  45                 	db	69	;'E'
   642  006244  72                 	db	114	;'r'
   643  006245  72                 	db	114	;'r'
   644  006246  6F                 	db	111	;'o'
   645  006247  72                 	db	114	;'r'
   646  006248  21                 	db	33
   647  006249  21                 	db	33
   648  00624A  21                 	db	33
   649  00624B  00                 	db	0
   650  00624C                     STR_4:
   651  00624C  25                 	db	37
   652  00624D  64                 	db	100	;'d'
   653  00624E  2F                 	db	47
   654  00624F  25                 	db	37
   655  006250  64                 	db	100	;'d'
   656  006251  2F                 	db	47
   657  006252  25                 	db	37
   658  006253  64                 	db	100	;'d'
   659  006254  00                 	db	0
   660  006255  25                 	db	37
   661  006256  64                 	db	100	;'d'
   662  006257  3A                 	db	58	;':'
   663  006258  25                 	db	37
   664  006259  64                 	db	100	;'d'
   665  00625A  3A                 	db	58	;':'
   666  00625B  25                 	db	37
   667  00625C  64                 	db	100	;'d'
   668  00625D  00                 	db	0
   669  00625E  49                 	db	73	;'I'
   670  00625F  6E                 	db	110	;'n'
   671  006260  69                 	db	105	;'i'
   672  006261  74                 	db	116	;'t'
   673  006262  20                 	db	32
   674  006263  4F                 	db	79	;'O'
   675  006264  4B                 	db	75	;'K'
   676  006265  00                 	db	0
   677  006266  53                 	db	83	;'S'
   678  006267  44                 	db	68	;'D'
   679  006268  5F                 	db	95	;'_'
   680  006269  43                 	db	67	;'C'
   681  00626A  61                 	db	97	;'a'
   682  00626B  72                 	db	114	;'r'
   683  00626C  64                 	db	100	;'d'
   684  00626D  00                 	db	0
   685  00626E                     STR_2:
   686  00626E  4C                 	db	76	;'L'
   687  00626F  4F                 	db	79	;'O'
   688  006270  4E                 	db	78	;'N'
   689  006271  47                 	db	71	;'G'
   690  006272  3A                 	db	58	;':'
   691  006273  00                 	db	0
   692  006274                     STR_1:
   693  006274  4C                 	db	76	;'L'
   694  006275  41                 	db	65	;'A'
   695  006276  54                 	db	84	;'T'
   696  006277  3A                 	db	58	;':'
   697  006278  00                 	db	0
   698  006279  0D                 	db	13
   699  00627A  0A                 	db	10
   700  00627B  00                 	db	0
   701  00627C  2E                 	db	46
   702  00627D  2E                 	db	46
   703  00627E  00                 	db	0
   704  0000                     
   705                           ; #config settings
   706  00627F  00                 	db	0	; dummy byte at the end
   707  0000                     
   708                           	psect	cinit
   709  000E02                     __pcinit:
   710                           	opt stack 0
   711  000E02                     start_initialization:
   712                           	opt stack 0
   713  000E02                     __initialization:
   714                           	opt stack 0
   715                           
   716                           ; Initialize objects allocated to BANK0 (24 bytes)
   717                           ; load TBLPTR registers with __pidataBANK0
   718  000E02  0E92               	movlw	low __pidataBANK0
   719  000E04  6EF6               	movwf	tblptrl,c
   720  000E06  0E11               	movlw	high __pidataBANK0
   721  000E08  6EF7               	movwf	tblptrh,c
   722  000E0A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   723  000E0C  6EF8               	movwf	tblptru,c
   724  000E0E  EE00  F0DD         	lfsr	0,__pdataBANK0
   725  000E12  EE10 F018          	lfsr	1,24
   726  000E16                     copy_data0:
   727  000E16  0009               	tblrd		*+
   728  000E18  CFF5 FFEE          	movff	tablat,postinc0
   729  000E1C  50E5               	movf	postdec1,w,c
   730  000E1E  50E1               	movf	fsr1l,w,c
   731  000E20  E1FA               	bnz	copy_data0
   732                           
   733                           ; Clear objects allocated to BIGRAM (512 bytes)
   734  000E22  EE02  F022         	lfsr	0,__pbssBIGRAM
   735  000E26  EE12 F000          	lfsr	1,512
   736  000E2A                     clear_0:
   737  000E2A  6AEE               	clrf	postinc0,c
   738  000E2C  50E5               	movf	postdec1,w,c
   739  000E2E  50E1               	movf	fsr1l,w,c
   740  000E30  E1FC               	bnz	clear_0
   741  000E32  50E2               	movf	fsr1h,w,c
   742  000E34  E1FA               	bnz	clear_0
   743                           
   744                           ; Clear objects allocated to BANK1 (250 bytes)
   745  000E36  EE01  F000         	lfsr	0,__pbssBANK1
   746  000E3A  0EFA               	movlw	250
   747  000E3C                     clear_1:
   748  000E3C  6AEE               	clrf	postinc0,c
   749  000E3E  06E8               	decf	wreg,f,c
   750  000E40  E1FD               	bnz	clear_1
   751                           
   752                           ; Clear objects allocated to BANK0 (125 bytes)
   753  000E42  EE00  F060         	lfsr	0,__pbssBANK0
   754  000E46  0E7D               	movlw	125
   755  000E48                     clear_2:
   756  000E48  6AEE               	clrf	postinc0,c
   757  000E4A  06E8               	decf	wreg,f,c
   758  000E4C  E1FD               	bnz	clear_2
   759                           
   760                           ; Clear objects allocated to COMRAM (21 bytes)
   761  000E4E  EE00  F035         	lfsr	0,__pbssCOMRAM
   762  000E52  0E15               	movlw	21
   763  000E54                     clear_3:
   764  000E54  6AEE               	clrf	postinc0,c
   765  000E56  06E8               	decf	wreg,f,c
   766  000E58  E1FD               	bnz	clear_3
   767  000E5A                     end_of_initialization:
   768                           	opt stack 0
   769  000E5A                     __end_of__initialization:
   770                           	opt stack 0
   771  000E5A  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   772  000E5C  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   773  000E5E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   774  000E60  6EF8               	movwf	tblptru,c
   775  000E62  0100               	movlb	0
   776  000E64  EF4A  F008         	goto	_main	;jump to C main() function
   777                           tblptru	equ	0xFF8
   778                           tblptrh	equ	0xFF7
   779                           tblptrl	equ	0xFF6
   780                           tablat	equ	0xFF5
   781                           postinc0	equ	0xFEE
   782                           wreg	equ	0xFE8
   783                           postdec1	equ	0xFE5
   784                           fsr1h	equ	0xFE2
   785                           fsr1l	equ	0xFE1
   786                           
   787                           	psect	bssCOMRAM
   788  000035                     __pbssCOMRAM:
   789                           	opt stack 0
   790  000035                     _rmc_code:
   791                           	opt stack 0
   792  000035                     	ds	3
   793  000038                     _FatFs:
   794                           	opt stack 0
   795  000038                     	ds	2
   796  00003A                     _rmc_index:
   797                           	opt stack 0
   798  00003A                     	ds	2
   799  00003C                     timer_dois@flag:
   800                           	opt stack 0
   801  00003C                     	ds	1
   802  00003D                     _estado:
   803                           	opt stack 0
   804  00003D                     	ds	1
   805  00003E                     _dado:
   806                           	opt stack 0
   807  00003E                     	ds	1
   808  00003F                     _s:
   809                           	opt stack 0
   810  00003F                     	ds	1
   811  000040                     _Result:
   812                           	opt stack 0
   813  000040                     	ds	1
   814  000041                     _is_it_rmc_string:
   815                           	opt stack 0
   816  000041                     	ds	1
   817  000042                     _is_it_gga_string:
   818                           	opt stack 0
   819  000042                     	ds	1
   820  000043                     _comma_counter_rmc:
   821                           	opt stack 0
   822  000043                     	ds	1
   823  000044                     _comma_counter_gga:
   824                           	opt stack 0
   825  000044                     	ds	1
   826  000045                     _E_W:
   827                           	opt stack 0
   828  000045                     	ds	1
   829  000046                     _n_s:
   830                           	opt stack 0
   831  000046                     	ds	1
   832  000047                     _tarefa_em_execucao:
   833                           	opt stack 0
   834  000047                     	ds	1
   835  000048                     _sinaliza_int_timer:
   836                           	opt stack 0
   837  000048                     	ds	1
   838  000049                     _data_uart_recebe:
   839                           	opt stack 0
   840  000049                     	ds	1
   841                           tblptru	equ	0xFF8
   842                           tblptrh	equ	0xFF7
   843                           tblptrl	equ	0xFF6
   844                           tablat	equ	0xFF5
   845                           postinc0	equ	0xFEE
   846                           wreg	equ	0xFE8
   847                           postdec1	equ	0xFE5
   848                           fsr1h	equ	0xFE2
   849                           fsr1l	equ	0xFE1
   850                           
   851                           	psect	bssBANK0
   852  000060                     __pbssBANK0:
   853                           	opt stack 0
   854  000060                     _valor_leitura_adc:
   855                           	opt stack 0
   856  000060                     	ds	38
   857  000086                     _gga_pointers:
   858                           	opt stack 0
   859  000086                     	ds	20
   860  00009A                     _rmc_pointers:
   861                           	opt stack 0
   862  00009A                     	ds	12
   863  0000A6                     _info_chaves:
   864                           	opt stack 0
   865  0000A6                     	ds	7
   866  0000AD                     _fileSize:
   867                           	opt stack 0
   868  0000AD                     	ds	4
   869  0000B1                     _tempo_tarefa:
   870                           	opt stack 0
   871  0000B1                     	ds	4
   872  0000B5                     _tempo_backup:
   873                           	opt stack 0
   874  0000B5                     	ds	4
   875  0000B9                     _p_tarefas:
   876                           	opt stack 0
   877  0000B9                     	ds	4
   878  0000BD                     _gga_code:
   879                           	opt stack 0
   880  0000BD                     	ds	3
   881  0000C0                     _flag:
   882                           	opt stack 0
   883  0000C0                     	ds	2
   884  0000C2                     _rd:
   885                           	opt stack 0
   886  0000C2                     	ds	2
   887  0000C4                     _gga_index:
   888                           	opt stack 0
   889  0000C4                     	ds	2
   890  0000C6                     _timeout_tarefa:
   891                           	opt stack 0
   892  0000C6                     	ds	2
   893  0000C8                     _data_buffer:
   894                           	opt stack 0
   895  0000C8                     	ds	15
   896  0000D7                     _dt_buffer:
   897                           	opt stack 0
   898  0000D7                     	ds	6
   899                           tblptru	equ	0xFF8
   900                           tblptrh	equ	0xFF7
   901                           tblptrl	equ	0xFF6
   902                           tablat	equ	0xFF5
   903                           postinc0	equ	0xFEE
   904                           wreg	equ	0xFE8
   905                           postdec1	equ	0xFE5
   906                           fsr1h	equ	0xFE2
   907                           fsr1l	equ	0xFE1
   908                           
   909                           	psect	dataBANK0
   910  0000DD                     __pdataBANK0:
   911                           	opt stack 0
   912  0000DD                     _fileName:
   913                           	opt stack 0
   914  0000DD                     	ds	10
   915  0000E7                     escreve_inteiro_uart@F3952:
   916                           	opt stack 0
   917  0000E7                     	ds	7
   918  0000EE                     escreve_inteiro_lcd@F3962:
   919                           	opt stack 0
   920  0000EE                     	ds	7
   921                           tblptru	equ	0xFF8
   922                           tblptrh	equ	0xFF7
   923                           tblptrl	equ	0xFF6
   924                           tablat	equ	0xFF5
   925                           postinc0	equ	0xFEE
   926                           wreg	equ	0xFE8
   927                           postdec1	equ	0xFE5
   928                           fsr1h	equ	0xFE2
   929                           fsr1l	equ	0xFE1
   930                           
   931                           	psect	bssBANK1
   932  000100                     __pbssBANK1:
   933                           	opt stack 0
   934  000100                     _gga_buffer:
   935                           	opt stack 0
   936  000100                     	ds	80
   937  000150                     _folder:
   938                           	opt stack 0
   939  000150                     	ds	48
   940  000180                     _txt:
   941                           	opt stack 0
   942  000180                     	ds	20
   943  000194                     _rmc_buffer:
   944                           	opt stack 0
   945  000194                     	ds	70
   946  0001DA                     _data_buffer_32:
   947                           	opt stack 0
   948  0001DA                     	ds	32
   949                           tblptru	equ	0xFF8
   950                           tblptrh	equ	0xFF7
   951                           tblptrl	equ	0xFF6
   952                           tablat	equ	0xFF5
   953                           postinc0	equ	0xFEE
   954                           wreg	equ	0xFE8
   955                           postdec1	equ	0xFE5
   956                           fsr1h	equ	0xFE2
   957                           fsr1l	equ	0xFE1
   958                           
   959                           	psect	bssBIGRAM
   960  000222                     __pbssBIGRAM:
   961                           	opt stack 0
   962  000222                     disk_readp@arr:
   963                           	opt stack 0
   964  000222                     	ds	512
   965                           tblptru	equ	0xFF8
   966                           tblptrh	equ	0xFF7
   967                           tblptrl	equ	0xFF6
   968                           tablat	equ	0xFF5
   969                           postinc0	equ	0xFEE
   970                           wreg	equ	0xFE8
   971                           postdec1	equ	0xFE5
   972                           fsr1h	equ	0xFE2
   973                           fsr1l	equ	0xFE1
   974                           
   975                           	psect	cstackBANK2
   976  000200                     __pcstackBANK2:
   977                           	opt stack 0
   978  000200                     convert_to_date@mes:
   979                           	opt stack 0
   980  000200                     get_dt@dado_buffer:
   981                           	opt stack 0
   982  000200                     mensagem_inicial@msg_linha_um:
   983                           	opt stack 0
   984                           
   985                           ; 17 bytes @ 0x0
   986  000200                     	ds	2
   987  000202                     convert_to_date@ano:
   988                           	opt stack 0
   989                           
   990                           ; 2 bytes @ 0x2
   991  000202                     	ds	2
   992  000204                     convert_to_date@dia:
   993                           	opt stack 0
   994                           
   995                           ; 2 bytes @ 0x4
   996  000204                     	ds	2
   997  000206                     convert_to_date@temp:
   998                           	opt stack 0
   999                           
  1000                           ; 4 bytes @ 0x6
  1001  000206                     	ds	6
  1002  00020C                     get_dt@_dt:
  1003                           	opt stack 0
  1004                           
  1005                           ; 4 bytes @ 0xC
  1006  00020C                     	ds	4
  1007  000210                     get_dt@dt_pointer:
  1008                           	opt stack 0
  1009                           
  1010                           ; 1 bytes @ 0x10
  1011  000210                     	ds	1
  1012  000211                     get_dt@index:
  1013                           	opt stack 0
  1014  000211                     mensagem_inicial@msg_dois:
  1015                           	opt stack 0
  1016                           
  1017                           ; 17 bytes @ 0x11
  1018  000211                     	ds	1
  1019  000212                     get_dt@dt_index:
  1020                           	opt stack 0
  1021                           
  1022                           ; 1 bytes @ 0x12
  1023  000212                     	ds	16
  1024                           tblptru	equ	0xFF8
  1025                           tblptrh	equ	0xFF7
  1026                           tblptrl	equ	0xFF6
  1027                           tablat	equ	0xFF5
  1028                           postinc0	equ	0xFEE
  1029                           wreg	equ	0xFE8
  1030                           postdec1	equ	0xFE5
  1031                           fsr1h	equ	0xFE2
  1032                           fsr1l	equ	0xFE1
  1033                           
  1034                           	psect	cstackBANK1
  1035  0001FA                     __pcstackBANK1:
  1036                           	opt stack 0
  1037  0001FA                     gps@date:
  1038                           	opt stack 0
  1039                           
  1040                           ; 4 bytes @ 0x0
  1041  0001FA                     	ds	4
  1042  0001FE                     
  1043                           ; 1 bytes @ 0x4
  1044  0001FE                     	ds	2
  1045                           tblptru	equ	0xFF8
  1046                           tblptrh	equ	0xFF7
  1047                           tblptrl	equ	0xFF6
  1048                           tablat	equ	0xFF5
  1049                           postinc0	equ	0xFEE
  1050                           wreg	equ	0xFE8
  1051                           postdec1	equ	0xFE5
  1052                           fsr1h	equ	0xFE2
  1053                           fsr1l	equ	0xFE1
  1054                           
  1055                           	psect	cstackBANK0
  1056  0000F5                     __pcstackBANK0:
  1057                           	opt stack 0
  1058  0000F5                     ??_get_dt:
  1059  0000F5                     convert_to_date@dt:
  1060                           	opt stack 0
  1061                           
  1062                           ; 4 bytes @ 0x0
  1063  0000F5                     	ds	4
  1064  0000F9                     ??_convert_to_date:
  1065                           
  1066                           ; 1 bytes @ 0x4
  1067  0000F9                     	ds	4
  1068  0000FD                     ??_gps:
  1069                           
  1070                           ; 1 bytes @ 0x8
  1071  0000FD                     	ds	2
  1072                           tblptru	equ	0xFF8
  1073                           tblptrh	equ	0xFF7
  1074                           tblptrl	equ	0xFF6
  1075                           tablat	equ	0xFF5
  1076                           postinc0	equ	0xFEE
  1077                           wreg	equ	0xFE8
  1078                           postdec1	equ	0xFE5
  1079                           fsr1h	equ	0xFE2
  1080                           fsr1l	equ	0xFE1
  1081                           
  1082                           	psect	cstackCOMRAM
  1083  000001                     __pcstackCOMRAM:
  1084                           	opt stack 0
  1085  000001                     tratamento_uart@received_char:
  1086                           	opt stack 0
  1087  000001                     i2write_timer_zero@timer0:
  1088                           	opt stack 0
  1089                           
  1090                           ; 2 bytes @ 0x0
  1091  000001                     	ds	2
  1092  000003                     i2write_timer_zero@timer:
  1093                           	opt stack 0
  1094                           
  1095                           ; 2 bytes @ 0x2
  1096  000003                     	ds	2
  1097  000005                     ??_isr:
  1098                           
  1099                           ; 1 bytes @ 0x4
  1100  000005                     	ds	16
  1101  000015                     isr@cont:
  1102                           	opt stack 0
  1103                           
  1104                           ; 1 bytes @ 0x14
  1105  000015                     	ds	1
  1106  000016                     ??_isdigit:
  1107  000016                     ?_leitura_adc:
  1108                           	opt stack 0
  1109  000016                     ?___wmul:
  1110                           	opt stack 0
  1111  000016                     ?___lwdiv:
  1112                           	opt stack 0
  1113  000016                     ?___lmul:
  1114                           	opt stack 0
  1115  000016                     ?___aldiv:
  1116                           	opt stack 0
  1117  000016                     ?___lldiv:
  1118                           	opt stack 0
  1119  000016                     envia_dados_shrc@contador:
  1120                           	opt stack 0
  1121  000016                     delay@contador_ext:
  1122                           	opt stack 0
  1123  000016                     write_timer_zero@timer0:
  1124                           	opt stack 0
  1125  000016                     ___wmul@multiplier:
  1126                           	opt stack 0
  1127  000016                     ___lwdiv@dividend:
  1128                           	opt stack 0
  1129  000016                     ___lmul@multiplier:
  1130                           	opt stack 0
  1131  000016                     ___aldiv@dividend:
  1132                           	opt stack 0
  1133  000016                     ___lldiv@dividend:
  1134                           	opt stack 0
  1135                           
  1136                           ; 4 bytes @ 0x15
  1137  000016                     	ds	1
  1138  000017                     envia_dados_shrc@data_to_shrc:
  1139                           	opt stack 0
  1140  000017                     delay@contador_int:
  1141                           	opt stack 0
  1142  000017                     _isdigit$2783:
  1143                           	opt stack 0
  1144                           
  1145                           ; 1 bytes @ 0x16
  1146  000017                     	ds	1
  1147  000018                     ??_leitura_adc:
  1148  000018                     escreve_cmd_lcd@comando:
  1149                           	opt stack 0
  1150  000018                     endereco_cursor_lcd@endereco:
  1151                           	opt stack 0
  1152  000018                     escreve_caractere_lcd@data:
  1153                           	opt stack 0
  1154  000018                     isdigit@c:
  1155                           	opt stack 0
  1156  000018                     write_timer_zero@timer:
  1157                           	opt stack 0
  1158  000018                     ___wmul@multiplicand:
  1159                           	opt stack 0
  1160  000018                     ___lwdiv@divisor:
  1161                           	opt stack 0
  1162                           
  1163                           ; 2 bytes @ 0x17
  1164  000018                     	ds	1
  1165  000019                     ??_init_lcd:
  1166  000019                     posicao_cursor_lcd@coluna:
  1167                           	opt stack 0
  1168  000019                     escreve_frase_ram_lcd@buffer:
  1169                           	opt stack 0
  1170                           
  1171                           ; 2 bytes @ 0x18
  1172  000019                     	ds	1
  1173  00001A                     posicao_cursor_lcd@linha:
  1174                           	opt stack 0
  1175  00001A                     ___lwdiv@counter:
  1176                           	opt stack 0
  1177  00001A                     ___wmul@product:
  1178                           	opt stack 0
  1179  00001A                     ___lmul@multiplicand:
  1180                           	opt stack 0
  1181  00001A                     ___aldiv@divisor:
  1182                           	opt stack 0
  1183  00001A                     ___lldiv@divisor:
  1184                           	opt stack 0
  1185                           
  1186                           ; 4 bytes @ 0x19
  1187  00001A                     	ds	1
  1188  00001B                     posicao_cursor_lcd@endereco:
  1189                           	opt stack 0
  1190  00001B                     ___lwdiv@quotient:
  1191                           	opt stack 0
  1192                           
  1193                           ; 2 bytes @ 0x1A
  1194  00001B                     	ds	1
  1195  00001C                     ??_mensagem_inicial:
  1196  00001C                     leitura_adc@canal:
  1197                           	opt stack 0
  1198                           
  1199                           ; 1 bytes @ 0x1B
  1200  00001C                     	ds	1
  1201  00001D                     ??_leitura_continua_adc:
  1202  00001D                     ?___lwmod:
  1203                           	opt stack 0
  1204  00001D                     ___lwmod@dividend:
  1205                           	opt stack 0
  1206                           
  1207                           ; 2 bytes @ 0x1C
  1208  00001D                     	ds	1
  1209  00001E                     ___aldiv@counter:
  1210                           	opt stack 0
  1211  00001E                     ___lmul@product:
  1212                           	opt stack 0
  1213  00001E                     ___lldiv@quotient:
  1214                           	opt stack 0
  1215                           
  1216                           ; 4 bytes @ 0x1D
  1217  00001E                     	ds	1
  1218  00001F                     ___aldiv@sign:
  1219                           	opt stack 0
  1220  00001F                     ___lwmod@divisor:
  1221                           	opt stack 0
  1222                           
  1223                           ; 2 bytes @ 0x1E
  1224  00001F                     	ds	1
  1225  000020                     ___aldiv@quotient:
  1226                           	opt stack 0
  1227                           
  1228                           ; 4 bytes @ 0x1F
  1229  000020                     	ds	1
  1230  000021                     ___lwmod@counter:
  1231                           	opt stack 0
  1232                           
  1233                           ; 1 bytes @ 0x20
  1234  000021                     	ds	1
  1235  000022                     ?_sprintf:
  1236                           	opt stack 0
  1237  000022                     ?_atol:
  1238                           	opt stack 0
  1239  000022                     ___lldiv@counter:
  1240                           	opt stack 0
  1241  000022                     sprintf@sp:
  1242                           	opt stack 0
  1243  000022                     atol@s:
  1244                           	opt stack 0
  1245                           
  1246                           ; 2 bytes @ 0x21
  1247  000022                     	ds	1
  1248  000023                     leitura_continua_adc@cont_int:
  1249                           	opt stack 0
  1250                           
  1251                           ; 1 bytes @ 0x22
  1252  000023                     	ds	1
  1253  000024                     leitura_continua_adc@cont:
  1254                           	opt stack 0
  1255  000024                     sprintf@f:
  1256                           	opt stack 0
  1257  000024                     configura_baudrate_uart@baudrate:
  1258                           	opt stack 0
  1259                           
  1260                           ; 4 bytes @ 0x23
  1261  000024                     	ds	2
  1262  000026                     ??_atol:
  1263                           
  1264                           ; 1 bytes @ 0x25
  1265  000026                     	ds	2
  1266  000028                     ??_configura_baudrate_uart:
  1267                           
  1268                           ; 1 bytes @ 0x27
  1269  000028                     	ds	2
  1270  00002A                     atol@sign:
  1271                           	opt stack 0
  1272                           
  1273                           ; 1 bytes @ 0x29
  1274  00002A                     	ds	1
  1275  00002B                     atol@a:
  1276                           	opt stack 0
  1277                           
  1278                           ; 4 bytes @ 0x2A
  1279  00002B                     	ds	1
  1280  00002C                     ??_sprintf:
  1281                           
  1282                           ; 1 bytes @ 0x2B
  1283  00002C                     	ds	1
  1284  00002D                     sprintf@ap:
  1285                           	opt stack 0
  1286                           
  1287                           ; 2 bytes @ 0x2C
  1288  00002D                     	ds	2
  1289  00002F                     sprintf@flag:
  1290                           	opt stack 0
  1291  00002F                     atol@c:
  1292                           	opt stack 0
  1293                           
  1294                           ; 1 bytes @ 0x2E
  1295  00002F                     	ds	1
  1296  000030                     ?_get_dt:
  1297                           	opt stack 0
  1298  000030                     sprintf@prec:
  1299                           	opt stack 0
  1300  000030                     configura_baudrate_uart@x:
  1301                           	opt stack 0
  1302                           
  1303                           ; 2 bytes @ 0x2F
  1304  000030                     	ds	1
  1305  000031                     sprintf@val:
  1306                           	opt stack 0
  1307                           
  1308                           ; 2 bytes @ 0x30
  1309  000031                     	ds	1
  1310  000032                     
  1311                           ; 1 bytes @ 0x31
  1312  000032                     	ds	1
  1313  000033                     sprintf@c:
  1314                           	opt stack 0
  1315                           
  1316                           ; 1 bytes @ 0x32
  1317  000033                     	ds	1
  1318  000034                     escalonador@cont:
  1319                           	opt stack 0
  1320                           
  1321                           ; 1 bytes @ 0x33
  1322  000034                     	ds	1
  1323  000035                     tblptru	equ	0xFF8
  1324                           tblptrh	equ	0xFF7
  1325                           tblptrl	equ	0xFF6
  1326                           tablat	equ	0xFF5
  1327                           postinc0	equ	0xFEE
  1328                           wreg	equ	0xFE8
  1329                           postdec1	equ	0xFE5
  1330                           fsr1h	equ	0xFE2
  1331                           fsr1l	equ	0xFE1
  1332                           
  1333                           ; 1 bytes @ 0x34
  1334 ;;
  1335 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1336 ;;
  1337 ;; *************** function _main *****************
  1338 ;; Defined at:
  1339 ;;		line 205 in file "main.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;		None
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1353 ;;      Params:         0       0       0       0       0       0       0       0       0
  1354 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1356 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1357 ;;Total ram usage:        0 bytes
  1358 ;; Hardware stack levels required when called:    8
  1359 ;; This function calls:
  1360 ;;		_controle_shrc
  1361 ;;		_escalonador
  1362 ;;		_inicializa_shrc
  1363 ;;		_inicializa_tarefas
  1364 ;;		_inicializa_uart
  1365 ;;		_init_hardware
  1366 ;;		_init_lcd
  1367 ;;		_leitura_chaves_sistema
  1368 ;;		_leitura_continua_adc
  1369 ;;		_mensagem_inicial
  1370 ;; This function is called by:
  1371 ;;		Startup code after reset
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	text0
  1376  001094                     __ptext0:
  1377                           	opt stack 0
  1378  001094                     _main:
  1379                           	opt stack 23
  1380                           
  1381                           ;main.c: 207: init_hardware();
  1382                           
  1383                           ;incstack = 0
  1384  001094  ECE1  F008         	call	_init_hardware	;wreg free
  1385                           
  1386                           ;main.c: 208: inicializa_uart();
  1387  001098  EC9C  F008         	call	_inicializa_uart	;wreg free
  1388                           
  1389                           ;main.c: 209: init_lcd();
  1390  00109C  ECF2  F004         	call	_init_lcd	;wreg free
  1391                           
  1392                           ;main.c: 210: inicializa_shrc();
  1393  0010A0  EC2A  F009         	call	_inicializa_shrc	;wreg free
  1394                           
  1395                           ;main.c: 212: mensagem_inicial();
  1396  0010A4  EC4E  F004         	call	_mensagem_inicial	;wreg free
  1397                           
  1398                           ;main.c: 213: inicializa_tarefas();
  1399  0010A8  EC64  F008         	call	_inicializa_tarefas	;wreg free
  1400  0010AC                     l8621:
  1401                           
  1402                           ;main.c: 217: {
  1403                           ;main.c: 219: if ((sinaliza_int_timer == 1) && (2))
  1404  0010AC  0448               	decf	_sinaliza_int_timer,w,c
  1405  0010AE  A4D8               	btfss	status,2,c
  1406  0010B0  D004               	goto	l8627
  1407                           
  1408                           ;main.c: 220: {
  1409                           ;main.c: 221: sinaliza_int_timer = 0;
  1410  0010B2  0E00               	movlw	0
  1411  0010B4  6E48               	movwf	_sinaliza_int_timer,c
  1412                           
  1413                           ;main.c: 222: escalonador();
  1414  0010B6  ECA1  F004         	call	_escalonador	;wreg free
  1415  0010BA                     l8627:
  1416                           
  1417                           ;main.c: 223: }
  1418                           ;main.c: 224: leitura_chaves_sistema();
  1419  0010BA  ECE3  F007         	call	_leitura_chaves_sistema	;wreg free
  1420                           
  1421                           ;main.c: 225: controle_shrc();
  1422  0010BE  EC20  F009         	call	_controle_shrc	;wreg free
  1423                           
  1424                           ;main.c: 226: leitura_continua_adc();
  1425  0010C2  ECE4  F001         	call	_leitura_continua_adc	;wreg free
  1426  0010C6  D7F2               	goto	l8621
  1427  0010C8                     __end_of_main:
  1428                           	opt stack 0
  1429                           tblptru	equ	0xFF8
  1430                           tblptrh	equ	0xFF7
  1431                           tblptrl	equ	0xFF6
  1432                           tablat	equ	0xFF5
  1433                           postinc0	equ	0xFEE
  1434                           wreg	equ	0xFE8
  1435                           postdec1	equ	0xFE5
  1436                           fsr1h	equ	0xFE2
  1437                           fsr1l	equ	0xFE1
  1438                           status	equ	0xFD8
  1439                           
  1440 ;; *************** function _mensagem_inicial *****************
  1441 ;; Defined at:
  1442 ;;		line 236 in file "main.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;  msg_dois       17   17[BANK2 ] const unsigned char [17]
  1447 ;;  msg_linha_um   17    0[BANK2 ] const unsigned char [17]
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1457 ;;      Params:         0       0       0       0       0       0       0       0       0
  1458 ;;      Locals:         0       0       0      34       0       0       0       0       0
  1459 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1460 ;;      Totals:         2       0       0      34       0       0       0       0       0
  1461 ;;Total ram usage:       36 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    5
  1464 ;; This function calls:
  1465 ;;		_escreve_cmd_lcd
  1466 ;;		_escreve_frase_ram_lcd
  1467 ;;		_posicao_cursor_lcd
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text1
  1474  00089C                     __ptext1:
  1475                           	opt stack 0
  1476  00089C                     _mensagem_inicial:
  1477                           	opt stack 25
  1478                           
  1479                           ;main.c: 238: const unsigned char msg_linha_um[17] = "SDCard Init   ";
  1480                           
  1481                           ;incstack = 0
  1482  00089C  0E6F               	movlw	low mensagem_inicial@F4018
  1483  00089E  6EF6               	movwf	tblptrl,c
  1484  0008A0                     	if	1	;There is more than 1 active tblptr byte
  1485  0008A0  0E61               	movlw	high mensagem_inicial@F4018
  1486  0008A2  6EF7               	movwf	tblptrh,c
  1487  0008A4                     	endif
  1488  0008A4                     	if	0	;There are less than 3 active tblptr bytes
  1489  0008A4                     	endif
  1490  0008A4  EE22  F000         	lfsr	2,mensagem_inicial@msg_linha_um
  1491  0008A8  0E10               	movlw	16
  1492  0008AA                     u8900:
  1493  0008AA  0009               	tblrd		*+
  1494  0008AC  CFF5 FFDE          	movff	tablat,postinc2
  1495  0008B0  06E8               	decf	wreg,f,c
  1496  0008B2  E2FB               	bc	u8900
  1497                           
  1498                           ;main.c: 239: const unsigned char msg_dois[17] = " 18/01/2022   ";
  1499  0008B4  0E5E               	movlw	low mensagem_inicial@F4020
  1500  0008B6  6EF6               	movwf	tblptrl,c
  1501  0008B8                     	if	1	;There is more than 1 active tblptr byte
  1502  0008B8  0E61               	movlw	high mensagem_inicial@F4020
  1503  0008BA  6EF7               	movwf	tblptrh,c
  1504  0008BC                     	endif
  1505  0008BC                     	if	0	;There are less than 3 active tblptr bytes
  1506  0008BC                     	endif
  1507  0008BC  EE22  F011         	lfsr	2,mensagem_inicial@msg_dois
  1508  0008C0  0E10               	movlw	16
  1509  0008C2                     u8910:
  1510  0008C2  0009               	tblrd		*+
  1511  0008C4  CFF5 FFDE          	movff	tablat,postinc2
  1512  0008C8  06E8               	decf	wreg,f,c
  1513  0008CA  E2FB               	bc	u8910
  1514                           
  1515                           ;main.c: 241: posicao_cursor_lcd(1,0);
  1516  0008CC  0E00               	movlw	0
  1517  0008CE  6E19               	movwf	posicao_cursor_lcd@coluna,c
  1518  0008D0  0E01               	movlw	1
  1519  0008D2  EC94  F006         	call	_posicao_cursor_lcd
  1520                           
  1521                           ;main.c: 242: escreve_frase_ram_lcd(msg_linha_um);
  1522  0008D6  0E00               	movlw	low mensagem_inicial@msg_linha_um
  1523  0008D8  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  1524  0008DA  0E02               	movlw	high mensagem_inicial@msg_linha_um
  1525  0008DC  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  1526  0008DE  EC91  F007         	call	_escreve_frase_ram_lcd	;wreg free
  1527                           
  1528                           ;main.c: 244: posicao_cursor_lcd(2,0);
  1529  0008E2  0E00               	movlw	0
  1530  0008E4  6E19               	movwf	posicao_cursor_lcd@coluna,c
  1531  0008E6  0E02               	movlw	2
  1532  0008E8  EC94  F006         	call	_posicao_cursor_lcd
  1533                           
  1534                           ;main.c: 245: escreve_frase_ram_lcd(msg_dois);
  1535  0008EC  0E11               	movlw	low mensagem_inicial@msg_dois
  1536  0008EE  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  1537  0008F0  0E02               	movlw	high mensagem_inicial@msg_dois
  1538  0008F2  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  1539  0008F4  EC91  F007         	call	_escreve_frase_ram_lcd	;wreg free
  1540                           
  1541                           ;main.c: 246: _delay((unsigned long)((1000)*(48000000/4000.0)));
  1542  0008F8  0E3D               	movlw	61
  1543  0008FA  6E1D               	movwf	(??_mensagem_inicial+1)& (0+255),c
  1544  0008FC  0EE1               	movlw	225
  1545  0008FE  6E1C               	movwf	??_mensagem_inicial& (0+255),c
  1546  000900  0E40               	movlw	64
  1547  000902                     u10697:
  1548  000902  2EE8               	decfsz	wreg,f,c
  1549  000904  D7FE               	bra	u10697
  1550  000906  2E1C               	decfsz	??_mensagem_inicial& (0+255),f,c
  1551  000908  D7FC               	bra	u10697
  1552  00090A  2E1D               	decfsz	(??_mensagem_inicial+1)& (0+255),f,c
  1553  00090C  D7FA               	bra	u10697
  1554                           
  1555                           ;main.c: 247: escreve_cmd_lcd(0b00000001);
  1556  00090E  0E01               	movlw	1
  1557  000910  EC90  F005         	call	_escreve_cmd_lcd
  1558                           
  1559                           ;main.c: 250: posicao_cursor_lcd(1,0);
  1560  000914  0E00               	movlw	0
  1561  000916  6E19               	movwf	posicao_cursor_lcd@coluna,c
  1562  000918  0E01               	movlw	1
  1563  00091A  EC94  F006         	call	_posicao_cursor_lcd
  1564                           
  1565                           ;main.c: 251: escreve_frase_ram_lcd("LAT:");
  1566  00091E  0E74               	movlw	low STR_1
  1567  000920  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  1568  000922  0E62               	movlw	high STR_1
  1569  000924  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  1570  000926  EC91  F007         	call	_escreve_frase_ram_lcd	;wreg free
  1571                           
  1572                           ;main.c: 253: posicao_cursor_lcd(2,0);
  1573  00092A  0E00               	movlw	0
  1574  00092C  6E19               	movwf	posicao_cursor_lcd@coluna,c
  1575  00092E  0E02               	movlw	2
  1576  000930  EC94  F006         	call	_posicao_cursor_lcd
  1577                           
  1578                           ;main.c: 254: escreve_frase_ram_lcd("LONG:");
  1579  000934  0E6E               	movlw	low STR_2
  1580  000936  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  1581  000938  0E62               	movlw	high STR_2
  1582  00093A  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  1583  00093C  EC91  F007         	call	_escreve_frase_ram_lcd	;wreg free
  1584  000940  0012               	return		;funcret
  1585  000942                     __end_of_mensagem_inicial:
  1586                           	opt stack 0
  1587                           tblptru	equ	0xFF8
  1588                           tblptrh	equ	0xFF7
  1589                           tblptrl	equ	0xFF6
  1590                           tablat	equ	0xFF5
  1591                           postinc0	equ	0xFEE
  1592                           wreg	equ	0xFE8
  1593                           postdec1	equ	0xFE5
  1594                           fsr1h	equ	0xFE2
  1595                           fsr1l	equ	0xFE1
  1596                           postinc2	equ	0xFDE
  1597                           status	equ	0xFD8
  1598                           
  1599 ;; *************** function _leitura_continua_adc *****************
  1600 ;; Defined at:
  1601 ;;		line 109 in file "bibliotecas/adc.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  cont_int        1   34[COMRAM] unsigned char 
  1606 ;;  cont            1   35[COMRAM] unsigned char 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1616 ;;      Params:         0       0       0       0       0       0       0       0       0
  1617 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1618 ;;      Temps:          6       0       0       0       0       0       0       0       0
  1619 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1620 ;;Total ram usage:        8 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    3
  1623 ;; This function calls:
  1624 ;;		_leitura_adc
  1625 ;; This function is called by:
  1626 ;;		_main
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           	psect	text2
  1631  0003C8                     __ptext2:
  1632                           	opt stack 0
  1633  0003C8                     _leitura_continua_adc:
  1634                           	opt stack 27
  1635                           
  1636                           ;adc.c: 111: for(unsigned char cont = 0; cont < 2; cont++)
  1637                           
  1638                           ;incstack = 0
  1639  0003C8  0E00               	movlw	0
  1640  0003CA  6E24               	movwf	leitura_continua_adc@cont,c
  1641  0003CC                     l5795:
  1642  0003CC  0E01               	movlw	1
  1643  0003CE  6424               	cpfsgt	leitura_continua_adc@cont,c
  1644  0003D0  D001               	goto	l5799
  1645  0003D2  0012               	return	
  1646  0003D4                     l5799:
  1647                           
  1648                           ;adc.c: 112: {
  1649                           ;adc.c: 113: for(unsigned char cont_int = 0; cont_int < 8; cont_int++)
  1650  0003D4  0E00               	movlw	0
  1651  0003D6  6E23               	movwf	leitura_continua_adc@cont_int,c
  1652  0003D8                     l5801:
  1653  0003D8  0E07               	movlw	7
  1654  0003DA  6423               	cpfsgt	leitura_continua_adc@cont_int,c
  1655  0003DC  D001               	goto	l5805
  1656  0003DE  D05D               	goto	l5813
  1657  0003E0                     l5805:
  1658                           
  1659                           ;adc.c: 114: {
  1660                           ;adc.c: 115: valor_leitura_adc[cont].leituras[cont_int] = leitura_adc(cont);
  1661  0003E0  5024               	movf	leitura_continua_adc@cont,w,c
  1662  0003E2  EC34  F007         	call	_leitura_adc
  1663  0003E6  5023               	movf	leitura_continua_adc@cont_int,w,c
  1664  0003E8  0D02               	mullw	2
  1665  0003EA  0E01               	movlw	1
  1666  0003EC  26F3               	addwf	prodl,f,c
  1667  0003EE  0E00               	movlw	0
  1668  0003F0  22F4               	addwfc	prodh,f,c
  1669  0003F2  0E60               	movlw	low _valor_leitura_adc
  1670  0003F4  6E1D               	movwf	??_leitura_continua_adc& (0+255),c
  1671  0003F6  0E00               	movlw	high _valor_leitura_adc
  1672  0003F8  6E1E               	movwf	(??_leitura_continua_adc+1)& (0+255),c
  1673  0003FA  50F3               	movf	prodl,w,c
  1674  0003FC  261D               	addwf	??_leitura_continua_adc,f,c
  1675  0003FE  50F4               	movf	prodh,w,c
  1676  000400  221E               	addwfc	??_leitura_continua_adc+1,f,c
  1677  000402  5024               	movf	leitura_continua_adc@cont,w,c
  1678  000404  0D13               	mullw	19
  1679  000406  50F3               	movf	prodl,w,c
  1680  000408  241D               	addwf	??_leitura_continua_adc,w,c
  1681  00040A  6ED9               	movwf	fsr2l,c
  1682  00040C  50F4               	movf	prodh,w,c
  1683  00040E  201E               	addwfc	??_leitura_continua_adc+1,w,c
  1684  000410  6EDA               	movwf	fsr2h,c
  1685  000412  C016  FFDE         	movff	?_leitura_adc,postinc2
  1686  000416  C017  FFDD         	movff	?_leitura_adc+1,postdec2
  1687                           
  1688                           ;adc.c: 116: valor_leitura_adc[cont].media = valor_leitura_adc[cont].media + valor_leitu
      +                          ra_adc[cont].leituras[cont_int];
  1689  00041A  5023               	movf	leitura_continua_adc@cont_int,w,c
  1690  00041C  0D02               	mullw	2
  1691  00041E  0E01               	movlw	1
  1692  000420  26F3               	addwf	prodl,f,c
  1693  000422  0E00               	movlw	0
  1694  000424  22F4               	addwfc	prodh,f,c
  1695  000426  0E60               	movlw	low _valor_leitura_adc
  1696  000428  6E1D               	movwf	??_leitura_continua_adc& (0+255),c
  1697  00042A  0E00               	movlw	high _valor_leitura_adc
  1698  00042C  6E1E               	movwf	(??_leitura_continua_adc+1)& (0+255),c
  1699  00042E  50F3               	movf	prodl,w,c
  1700  000430  261D               	addwf	??_leitura_continua_adc,f,c
  1701  000432  50F4               	movf	prodh,w,c
  1702  000434  221E               	addwfc	??_leitura_continua_adc+1,f,c
  1703  000436  5024               	movf	leitura_continua_adc@cont,w,c
  1704  000438  0D13               	mullw	19
  1705  00043A  50F3               	movf	prodl,w,c
  1706  00043C  241D               	addwf	??_leitura_continua_adc,w,c
  1707  00043E  6ED9               	movwf	fsr2l,c
  1708  000440  50F4               	movf	prodh,w,c
  1709  000442  201E               	addwfc	??_leitura_continua_adc+1,w,c
  1710  000444  6EDA               	movwf	fsr2h,c
  1711  000446  CFDE F01F          	movff	postinc2,??_leitura_continua_adc+2
  1712  00044A  CFDD F020          	movff	postdec2,??_leitura_continua_adc+3
  1713  00044E  5024               	movf	leitura_continua_adc@cont,w,c
  1714  000450  0D13               	mullw	19
  1715  000452  0E11               	movlw	17
  1716  000454  26F3               	addwf	prodl,f,c
  1717  000456  0E00               	movlw	0
  1718  000458  22F4               	addwfc	prodh,f,c
  1719  00045A  0E60               	movlw	low _valor_leitura_adc
  1720  00045C  24F3               	addwf	prodl,w,c
  1721  00045E  6ED9               	movwf	fsr2l,c
  1722  000460  0E00               	movlw	high _valor_leitura_adc
  1723  000462  20F4               	addwfc	prodh,w,c
  1724  000464  6EDA               	movwf	fsr2h,c
  1725  000466  CFDE F021          	movff	postinc2,??_leitura_continua_adc+4
  1726  00046A  CFDD F022          	movff	postdec2,??_leitura_continua_adc+5
  1727  00046E  501F               	movf	??_leitura_continua_adc+2,w,c
  1728  000470  2621               	addwf	??_leitura_continua_adc+4,f,c
  1729  000472  5020               	movf	??_leitura_continua_adc+3,w,c
  1730  000474  2222               	addwfc	??_leitura_continua_adc+5,f,c
  1731  000476  5024               	movf	leitura_continua_adc@cont,w,c
  1732  000478  0D13               	mullw	19
  1733  00047A  0E11               	movlw	17
  1734  00047C  26F3               	addwf	prodl,f,c
  1735  00047E  0E00               	movlw	0
  1736  000480  22F4               	addwfc	prodh,f,c
  1737  000482  0E60               	movlw	low _valor_leitura_adc
  1738  000484  24F3               	addwf	prodl,w,c
  1739  000486  6ED9               	movwf	fsr2l,c
  1740  000488  0E00               	movlw	high _valor_leitura_adc
  1741  00048A  20F4               	addwfc	prodh,w,c
  1742  00048C  6EDA               	movwf	fsr2h,c
  1743  00048E  C021  FFDE         	movff	??_leitura_continua_adc+4,postinc2
  1744  000492  C022  FFDD         	movff	??_leitura_continua_adc+5,postdec2
  1745  000496  2A23               	incf	leitura_continua_adc@cont_int,f,c
  1746  000498  D79F               	goto	l5801
  1747  00049A                     l5813:
  1748                           
  1749                           ;adc.c: 117: }
  1750                           ;adc.c: 118: valor_leitura_adc[cont].media = valor_leitura_adc[cont].media / 8;
  1751  00049A  5024               	movf	leitura_continua_adc@cont,w,c
  1752  00049C  0D13               	mullw	19
  1753  00049E  0E11               	movlw	17
  1754  0004A0  26F3               	addwf	prodl,f,c
  1755  0004A2  0E00               	movlw	0
  1756  0004A4  22F4               	addwfc	prodh,f,c
  1757  0004A6  0E60               	movlw	low _valor_leitura_adc
  1758  0004A8  24F3               	addwf	prodl,w,c
  1759  0004AA  6ED9               	movwf	fsr2l,c
  1760  0004AC  0E00               	movlw	high _valor_leitura_adc
  1761  0004AE  20F4               	addwfc	prodh,w,c
  1762  0004B0  6EDA               	movwf	fsr2h,c
  1763  0004B2  CFDE F01D          	movff	postinc2,??_leitura_continua_adc
  1764  0004B6  CFDD F01E          	movff	postdec2,??_leitura_continua_adc+1
  1765  0004BA  90D8               	bcf	status,0,c
  1766  0004BC  321E               	rrcf	??_leitura_continua_adc+1,f,c
  1767  0004BE  321D               	rrcf	??_leitura_continua_adc,f,c
  1768  0004C0  90D8               	bcf	status,0,c
  1769  0004C2  321E               	rrcf	??_leitura_continua_adc+1,f,c
  1770  0004C4  321D               	rrcf	??_leitura_continua_adc,f,c
  1771  0004C6  90D8               	bcf	status,0,c
  1772  0004C8  321E               	rrcf	??_leitura_continua_adc+1,f,c
  1773  0004CA  321D               	rrcf	??_leitura_continua_adc,f,c
  1774  0004CC  5024               	movf	leitura_continua_adc@cont,w,c
  1775  0004CE  0D13               	mullw	19
  1776  0004D0  0E11               	movlw	17
  1777  0004D2  26F3               	addwf	prodl,f,c
  1778  0004D4  0E00               	movlw	0
  1779  0004D6  22F4               	addwfc	prodh,f,c
  1780  0004D8  0E60               	movlw	low _valor_leitura_adc
  1781  0004DA  24F3               	addwf	prodl,w,c
  1782  0004DC  6ED9               	movwf	fsr2l,c
  1783  0004DE  0E00               	movlw	high _valor_leitura_adc
  1784  0004E0  20F4               	addwfc	prodh,w,c
  1785  0004E2  6EDA               	movwf	fsr2h,c
  1786  0004E4  C01D  FFDE         	movff	??_leitura_continua_adc,postinc2
  1787  0004E8  C01E  FFDD         	movff	??_leitura_continua_adc+1,postdec2
  1788  0004EC  2A24               	incf	leitura_continua_adc@cont,f,c
  1789  0004EE  D76E               	goto	l5795
  1790  0004F0                     __end_of_leitura_continua_adc:
  1791                           	opt stack 0
  1792                           tblptru	equ	0xFF8
  1793                           tblptrh	equ	0xFF7
  1794                           tblptrl	equ	0xFF6
  1795                           tablat	equ	0xFF5
  1796                           prodh	equ	0xFF4
  1797                           prodl	equ	0xFF3
  1798                           postinc0	equ	0xFEE
  1799                           wreg	equ	0xFE8
  1800                           postdec1	equ	0xFE5
  1801                           fsr1h	equ	0xFE2
  1802                           fsr1l	equ	0xFE1
  1803                           postinc2	equ	0xFDE
  1804                           postdec2	equ	0xFDD
  1805                           fsr2h	equ	0xFDA
  1806                           fsr2l	equ	0xFD9
  1807                           status	equ	0xFD8
  1808                           
  1809 ;; *************** function _leitura_adc *****************
  1810 ;; Defined at:
  1811 ;;		line 76 in file "bibliotecas/adc.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;  canal           1    wreg     unsigned char 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  canal           1   27[COMRAM] unsigned char 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  2   21[COMRAM] unsigned int 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1825 ;;      Params:         2       0       0       0       0       0       0       0       0
  1826 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1827 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1828 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1829 ;;Total ram usage:        7 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    2
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_leitura_continua_adc
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text3
  1840  000E68                     __ptext3:
  1841                           	opt stack 0
  1842  000E68                     _leitura_adc:
  1843                           	opt stack 27
  1844                           
  1845                           ;incstack = 0
  1846                           ;leitura_adc@canal stored from wreg
  1847  000E68  6E1C               	movwf	leitura_adc@canal,c
  1848                           
  1849                           ;adc.c: 78: switch(canal)
  1850  000E6A  D009               	goto	l5411
  1851  000E6C                     l5401:
  1852                           
  1853                           ;adc.c: 81: ADCON0 = 0x01;
  1854  000E6C  0E01               	movlw	1
  1855  000E6E  D005               	goto	L3
  1856  000E70                     l5403:
  1857                           
  1858                           ;adc.c: 85: ADCON0 = 0x05;
  1859  000E70  0E05               	movlw	5
  1860  000E72  D003               	goto	L3
  1861  000E74                     l5405:
  1862                           
  1863                           ;adc.c: 89: ADCON0 = 0x09;
  1864  000E74  0E09               	movlw	9
  1865  000E76  D001               	goto	L3
  1866  000E78                     l5407:
  1867                           
  1868                           ;adc.c: 93: ADCON0 = 0x0D;
  1869  000E78  0E0D               	movlw	13
  1870  000E7A                     L3:
  1871  000E7A  6EC2               	movwf	4034,c	;volatile
  1872                           
  1873                           ;adc.c: 96: }
  1874                           
  1875                           ;adc.c: 94: break;
  1876  000E7C  D00D               	goto	l433
  1877  000E7E                     l5411:
  1878  000E7E  501C               	movf	leitura_adc@canal,w,c
  1879                           
  1880                           ; Switch size 1, requested type "space"
  1881                           ; Number of cases is 4, Range of values is 0 to 3
  1882                           ; switch strategies available:
  1883                           ; Name         Instructions Cycles
  1884                           ; simple_byte           13     7 (average)
  1885                           ;	Chosen strategy is simple_byte
  1886  000E80  0A00               	xorlw	0	; case 0
  1887  000E82  B4D8               	btfsc	status,2,c
  1888  000E84  D7F3               	goto	l5401
  1889  000E86  0A01               	xorlw	1	; case 1
  1890  000E88  B4D8               	btfsc	status,2,c
  1891  000E8A  D7F2               	goto	l5403
  1892  000E8C  0A03               	xorlw	3	; case 2
  1893  000E8E  B4D8               	btfsc	status,2,c
  1894  000E90  D7F1               	goto	l5405
  1895  000E92  0A01               	xorlw	1	; case 3
  1896  000E94  B4D8               	btfsc	status,2,c
  1897  000E96  D7F0               	goto	l5407
  1898  000E98                     l433:
  1899                           
  1900                           ;adc.c: 97: ADCON0bits.GO=1;
  1901  000E98  82C2               	bsf	4034,1,c	;volatile
  1902  000E9A                     l437:
  1903  000E9A  B2C2               	btfsc	4034,1,c	;volatile
  1904  000E9C  D7FE               	goto	l437
  1905                           
  1906                           ;adc.c: 100: return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
  1907  000E9E  CFC3 F018          	movff	4035,??_leitura_adc	;volatile
  1908  000EA2  0E06               	movlw	6
  1909  000EA4  6E19               	movwf	(??_leitura_adc+1)& (0+255),c
  1910  000EA6                     u4785:
  1911  000EA6  90D8               	bcf	status,0,c
  1912  000EA8  3218               	rrcf	??_leitura_adc,f,c
  1913  000EAA  2E19               	decfsz	(??_leitura_adc+1)& (0+255),f,c
  1914  000EAC  D7FC               	goto	u4785
  1915  000EAE  5018               	movf	??_leitura_adc,w,c
  1916  000EB0  CFC4 F01A          	movff	4036,??_leitura_adc+2	;volatile
  1917  000EB4  6A1B               	clrf	(??_leitura_adc+3)& (0+255),c
  1918  000EB6  90D8               	bcf	status,0,c
  1919  000EB8  361A               	rlcf	??_leitura_adc+2,f,c
  1920  000EBA  361B               	rlcf	??_leitura_adc+3,f,c
  1921  000EBC  90D8               	bcf	status,0,c
  1922  000EBE  361A               	rlcf	??_leitura_adc+2,f,c
  1923  000EC0  361B               	rlcf	??_leitura_adc+3,f,c
  1924  000EC2  101A               	iorwf	??_leitura_adc+2,w,c
  1925  000EC4  6E16               	movwf	?_leitura_adc,c
  1926  000EC6  501B               	movf	??_leitura_adc+3,w,c
  1927  000EC8  6E17               	movwf	?_leitura_adc+1,c
  1928  000ECA  0012               	return	
  1929  000ECC                     __end_of_leitura_adc:
  1930                           	opt stack 0
  1931                           tblptru	equ	0xFF8
  1932                           tblptrh	equ	0xFF7
  1933                           tblptrl	equ	0xFF6
  1934                           tablat	equ	0xFF5
  1935                           prodh	equ	0xFF4
  1936                           prodl	equ	0xFF3
  1937                           postinc0	equ	0xFEE
  1938                           wreg	equ	0xFE8
  1939                           postdec1	equ	0xFE5
  1940                           fsr1h	equ	0xFE2
  1941                           fsr1l	equ	0xFE1
  1942                           postinc2	equ	0xFDE
  1943                           postdec2	equ	0xFDD
  1944                           fsr2h	equ	0xFDA
  1945                           fsr2l	equ	0xFD9
  1946                           status	equ	0xFD8
  1947                           
  1948 ;; *************** function _leitura_chaves_sistema *****************
  1949 ;; Defined at:
  1950 ;;		line 47 in file "bibliotecas/chaves.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;		None
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;		None
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1964 ;;      Params:         0       0       0       0       0       0       0       0       0
  1965 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1967 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1968 ;;Total ram usage:        0 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    2
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_main
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text4
  1979  000FC6                     __ptext4:
  1980                           	opt stack 0
  1981  000FC6                     _leitura_chaves_sistema:
  1982                           	opt stack 28
  1983                           
  1984                           ;chaves.c: 49: info_chaves[0] = PORTCbits.RC0;
  1985                           
  1986                           ;incstack = 0
  1987  000FC6  0E00               	movlw	0
  1988  000FC8  B082               	btfsc	3970,0,c	;volatile
  1989  000FCA  0E01               	movlw	1
  1990  000FCC  0100               	movlb	0	; () banked
  1991  000FCE  6FA6               	movwf	_info_chaves& (0+255),b
  1992                           
  1993                           ;chaves.c: 50: info_chaves[1] = PORTCbits.RC1;
  1994  000FD0  0E00               	movlw	0
  1995  000FD2  B282               	btfsc	3970,1,c	;volatile
  1996  000FD4  0E01               	movlw	1
  1997  000FD6  0100               	movlb	0	; () banked
  1998  000FD8  6FA7               	movwf	(_info_chaves+1)& (0+255),b
  1999                           
  2000                           ;chaves.c: 51: info_chaves[2] = PORTCbits.RC2;
  2001  000FDA  0E00               	movlw	0
  2002  000FDC  B482               	btfsc	3970,2,c	;volatile
  2003  000FDE  0E01               	movlw	1
  2004  000FE0  0100               	movlb	0	; () banked
  2005  000FE2  6FA8               	movwf	(_info_chaves+2)& (0+255),b
  2006                           
  2007                           ;chaves.c: 52: info_chaves[3] = PORTAbits.RA2;
  2008  000FE4  0E00               	movlw	0
  2009  000FE6  B480               	btfsc	3968,2,c	;volatile
  2010  000FE8  0E01               	movlw	1
  2011  000FEA  0100               	movlb	0	; () banked
  2012  000FEC  6FA9               	movwf	(_info_chaves+3)& (0+255),b
  2013                           
  2014                           ;chaves.c: 53: info_chaves[4] = PORTAbits.RA5;
  2015  000FEE  0E00               	movlw	0
  2016  000FF0  BA80               	btfsc	3968,5,c	;volatile
  2017  000FF2  0E01               	movlw	1
  2018  000FF4  0100               	movlb	0	; () banked
  2019  000FF6  6FAA               	movwf	(_info_chaves+4)& (0+255),b
  2020                           
  2021                           ;chaves.c: 54: info_chaves[5] = PORTEbits.RE0;
  2022  000FF8  0E00               	movlw	0
  2023  000FFA  B084               	btfsc	3972,0,c	;volatile
  2024  000FFC  0E01               	movlw	1
  2025  000FFE  0100               	movlb	0	; () banked
  2026  001000  6FAB               	movwf	(_info_chaves+5)& (0+255),b
  2027                           
  2028                           ;chaves.c: 55: info_chaves[6] = PORTEbits.RE1;
  2029  001002  0E00               	movlw	0
  2030  001004  B284               	btfsc	3972,1,c	;volatile
  2031  001006  0E01               	movlw	1
  2032  001008  0100               	movlb	0	; () banked
  2033  00100A  6FAC               	movwf	(_info_chaves+6)& (0+255),b
  2034                           
  2035                           ; BSR set to: 0
  2036  00100C  0012               	return		;funcret
  2037  00100E                     __end_of_leitura_chaves_sistema:
  2038                           	opt stack 0
  2039                           tblptru	equ	0xFF8
  2040                           tblptrh	equ	0xFF7
  2041                           tblptrl	equ	0xFF6
  2042                           tablat	equ	0xFF5
  2043                           prodh	equ	0xFF4
  2044                           prodl	equ	0xFF3
  2045                           postinc0	equ	0xFEE
  2046                           wreg	equ	0xFE8
  2047                           postdec1	equ	0xFE5
  2048                           fsr1h	equ	0xFE2
  2049                           fsr1l	equ	0xFE1
  2050                           postinc2	equ	0xFDE
  2051                           postdec2	equ	0xFDD
  2052                           fsr2h	equ	0xFDA
  2053                           fsr2l	equ	0xFD9
  2054                           status	equ	0xFD8
  2055                           
  2056 ;; *************** function _init_lcd *****************
  2057 ;; Defined at:
  2058 ;;		line 71 in file "bibliotecas/display_lcd.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;		None
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;		None
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg, status,2, status,0, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2072 ;;      Params:         0       0       0       0       0       0       0       0       0
  2073 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2074 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2075 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2076 ;;Total ram usage:        1 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; Hardware stack levels required when called:    4
  2079 ;; This function calls:
  2080 ;;		_delay
  2081 ;;		_escreve_cmd_lcd
  2082 ;; This function is called by:
  2083 ;;		_main
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text5
  2088  0009E4                     __ptext5:
  2089                           	opt stack 0
  2090  0009E4                     _init_lcd:
  2091                           	opt stack 26
  2092                           
  2093                           ;display_lcd.c: 74: TRISDbits.RD2 = 0;
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;incstack = 0
  2097  0009E4  9495               	bcf	3989,2,c	;volatile
  2098                           
  2099                           ;display_lcd.c: 75: TRISDbits.RD1 = 0;
  2100  0009E6  9295               	bcf	3989,1,c	;volatile
  2101                           
  2102                           ;display_lcd.c: 76: TRISDbits.RD0 = 0;
  2103  0009E8  9095               	bcf	3989,0,c	;volatile
  2104                           
  2105                           ;display_lcd.c: 79: TRISDbits.RD4=0;
  2106  0009EA  9895               	bcf	3989,4,c	;volatile
  2107                           
  2108                           ;display_lcd.c: 80: TRISDbits.RD5=0;
  2109  0009EC  9A95               	bcf	3989,5,c	;volatile
  2110                           
  2111                           ;display_lcd.c: 81: TRISDbits.RD6=0;
  2112  0009EE  9C95               	bcf	3989,6,c	;volatile
  2113                           
  2114                           ;display_lcd.c: 82: TRISDbits.RD7=0;
  2115  0009F0  9E95               	bcf	3989,7,c	;volatile
  2116                           
  2117                           ;display_lcd.c: 89: PORTDbits.RD2 = 0;
  2118  0009F2  9483               	bcf	3971,2,c	;volatile
  2119                           
  2120                           ;display_lcd.c: 90: PORTDbits.RD1 = 0;
  2121  0009F4  9283               	bcf	3971,1,c	;volatile
  2122                           
  2123                           ;display_lcd.c: 91: PORTDbits.RD0 = 0;
  2124  0009F6  9083               	bcf	3971,0,c	;volatile
  2125                           
  2126                           ;display_lcd.c: 95: PORTDbits.RD7=0;
  2127  0009F8  9E83               	bcf	3971,7,c	;volatile
  2128                           
  2129                           ;display_lcd.c: 96: PORTDbits.RD6=0;
  2130  0009FA  9C83               	bcf	3971,6,c	;volatile
  2131                           
  2132                           ;display_lcd.c: 97: PORTDbits.RD5=1;
  2133  0009FC  8A83               	bsf	3971,5,c	;volatile
  2134                           
  2135                           ;display_lcd.c: 98: PORTDbits.RD4=1;
  2136  0009FE  8883               	bsf	3971,4,c	;volatile
  2137                           
  2138                           ;display_lcd.c: 103: _delay((unsigned long)((15)*(48000000/4000.0)));
  2139  000A00  0EEA               	movlw	234
  2140  000A02  6E19               	movwf	??_init_lcd& (0+255),c
  2141  000A04  0EC3               	movlw	195
  2142  000A06                     u10707:
  2143  000A06  2EE8               	decfsz	wreg,f,c
  2144  000A08  D7FE               	bra	u10707
  2145  000A0A  2E19               	decfsz	??_init_lcd& (0+255),f,c
  2146  000A0C  D7FC               	bra	u10707
  2147  000A0E  F000               	nop	
  2148                           
  2149                           ;display_lcd.c: 107: PORTDbits.RD0 = 1;
  2150  000A10  8083               	bsf	3971,0,c	;volatile
  2151                           
  2152                           ;display_lcd.c: 108: delay();
  2153  000A12  EC8A  F008         	call	_delay	;wreg free
  2154                           
  2155                           ;display_lcd.c: 109: PORTDbits.RD0 = 0;
  2156  000A16  9083               	bcf	3971,0,c	;volatile
  2157                           
  2158                           ;display_lcd.c: 110: delay();
  2159  000A18  EC8A  F008         	call	_delay	;wreg free
  2160                           
  2161                           ;display_lcd.c: 115: _delay((unsigned long)((5)*(48000000/4000.0)));
  2162  000A1C  0E4E               	movlw	78
  2163  000A1E  6E19               	movwf	??_init_lcd& (0+255),c
  2164  000A20  0EEB               	movlw	235
  2165  000A22                     u10717:
  2166  000A22  2EE8               	decfsz	wreg,f,c
  2167  000A24  D7FE               	bra	u10717
  2168  000A26  2E19               	decfsz	??_init_lcd& (0+255),f,c
  2169  000A28  D7FC               	bra	u10717
  2170  000A2A  F000               	nop	
  2171                           
  2172                           ;display_lcd.c: 118: PORTDbits.RD0 = 1;
  2173  000A2C  8083               	bsf	3971,0,c	;volatile
  2174                           
  2175                           ;display_lcd.c: 119: delay();
  2176  000A2E  EC8A  F008         	call	_delay	;wreg free
  2177                           
  2178                           ;display_lcd.c: 120: PORTDbits.RD0 = 0;
  2179  000A32  9083               	bcf	3971,0,c	;volatile
  2180                           
  2181                           ;display_lcd.c: 121: delay();
  2182  000A34  EC8A  F008         	call	_delay	;wreg free
  2183                           
  2184                           ;display_lcd.c: 126: _delay((unsigned long)((5)*(48000000/4000.0)));
  2185  000A38  0E4E               	movlw	78
  2186  000A3A  6E19               	movwf	??_init_lcd& (0+255),c
  2187  000A3C  0EEB               	movlw	235
  2188  000A3E                     u10727:
  2189  000A3E  2EE8               	decfsz	wreg,f,c
  2190  000A40  D7FE               	bra	u10727
  2191  000A42  2E19               	decfsz	??_init_lcd& (0+255),f,c
  2192  000A44  D7FC               	bra	u10727
  2193  000A46  F000               	nop	
  2194                           
  2195                           ;display_lcd.c: 129: PORTDbits.RD0 = 1;
  2196  000A48  8083               	bsf	3971,0,c	;volatile
  2197                           
  2198                           ;display_lcd.c: 130: delay();
  2199  000A4A  EC8A  F008         	call	_delay	;wreg free
  2200                           
  2201                           ;display_lcd.c: 131: PORTDbits.RD0 = 0;
  2202  000A4E  9083               	bcf	3971,0,c	;volatile
  2203                           
  2204                           ;display_lcd.c: 132: delay();
  2205  000A50  EC8A  F008         	call	_delay	;wreg free
  2206                           
  2207                           ;display_lcd.c: 135: PORTDbits.RD7=0;
  2208  000A54  9E83               	bcf	3971,7,c	;volatile
  2209                           
  2210                           ;display_lcd.c: 136: PORTDbits.RD6=0;
  2211  000A56  9C83               	bcf	3971,6,c	;volatile
  2212                           
  2213                           ;display_lcd.c: 137: PORTDbits.RD5=1;
  2214  000A58  8A83               	bsf	3971,5,c	;volatile
  2215                           
  2216                           ;display_lcd.c: 138: PORTDbits.RD4=0;
  2217  000A5A  9883               	bcf	3971,4,c	;volatile
  2218                           
  2219                           ;display_lcd.c: 142: PORTDbits.RD0 = 1;
  2220  000A5C  8083               	bsf	3971,0,c	;volatile
  2221                           
  2222                           ;display_lcd.c: 143: delay();
  2223  000A5E  EC8A  F008         	call	_delay	;wreg free
  2224                           
  2225                           ;display_lcd.c: 144: PORTDbits.RD0 = 0;
  2226  000A62  9083               	bcf	3971,0,c	;volatile
  2227                           
  2228                           ;display_lcd.c: 145: delay();
  2229  000A64  EC8A  F008         	call	_delay	;wreg free
  2230                           
  2231                           ;display_lcd.c: 149: escreve_cmd_lcd(0b00101000);
  2232  000A68  0E28               	movlw	40
  2233  000A6A  EC90  F005         	call	_escreve_cmd_lcd
  2234                           
  2235                           ;display_lcd.c: 150: escreve_cmd_lcd(0b00000110);
  2236  000A6E  0E06               	movlw	6
  2237  000A70  EC90  F005         	call	_escreve_cmd_lcd
  2238                           
  2239                           ;display_lcd.c: 151: escreve_cmd_lcd(0b00001110);
  2240  000A74  0E0E               	movlw	14
  2241  000A76  EC90  F005         	call	_escreve_cmd_lcd
  2242                           
  2243                           ;display_lcd.c: 152: escreve_cmd_lcd(0b00000001);
  2244  000A7A  0E01               	movlw	1
  2245  000A7C  EC90  F005         	call	_escreve_cmd_lcd
  2246  000A80  0012               	return		;funcret
  2247  000A82                     __end_of_init_lcd:
  2248                           	opt stack 0
  2249                           tblptru	equ	0xFF8
  2250                           tblptrh	equ	0xFF7
  2251                           tblptrl	equ	0xFF6
  2252                           tablat	equ	0xFF5
  2253                           prodh	equ	0xFF4
  2254                           prodl	equ	0xFF3
  2255                           postinc0	equ	0xFEE
  2256                           wreg	equ	0xFE8
  2257                           postdec1	equ	0xFE5
  2258                           fsr1h	equ	0xFE2
  2259                           fsr1l	equ	0xFE1
  2260                           postinc2	equ	0xFDE
  2261                           postdec2	equ	0xFDD
  2262                           fsr2h	equ	0xFDA
  2263                           fsr2l	equ	0xFD9
  2264                           status	equ	0xFD8
  2265                           
  2266 ;; *************** function _init_hardware *****************
  2267 ;; Defined at:
  2268 ;;		line 55 in file "bibliotecas/hardware.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;		None
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, status,2, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2282 ;;      Params:         0       0       0       0       0       0       0       0       0
  2283 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2284 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2285 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2286 ;;Total ram usage:        0 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    4
  2289 ;; This function calls:
  2290 ;;		_config_timer_dois
  2291 ;;		_config_timer_zero
  2292 ;;		_init_interrupt
  2293 ;;		_init_oscilador
  2294 ;;		_init_ports
  2295 ;; This function is called by:
  2296 ;;		_main
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text6
  2301  0011C2                     __ptext6:
  2302                           	opt stack 0
  2303  0011C2                     _init_hardware:
  2304                           	opt stack 26
  2305                           
  2306                           ;hardware.c: 58: init_oscilador();
  2307                           
  2308                           ;incstack = 0
  2309  0011C2  EC26  F009         	call	_init_oscilador	;wreg free
  2310                           
  2311                           ;hardware.c: 61: init_ports();
  2312  0011C6  ECD5  F008         	call	_init_ports	;wreg free
  2313                           
  2314                           ;hardware.c: 64: config_timer_zero();
  2315  0011CA  ECBC  F008         	call	_config_timer_zero	;wreg free
  2316                           
  2317                           ;hardware.c: 67: config_timer_dois();
  2318  0011CE  EC1A  F009         	call	_config_timer_dois	;wreg free
  2319                           
  2320                           ;hardware.c: 70: init_interrupt();
  2321  0011D2  ECF6  F008         	call	_init_interrupt	;wreg free
  2322  0011D6  0012               	return		;funcret
  2323  0011D8                     __end_of_init_hardware:
  2324                           	opt stack 0
  2325                           tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           prodh	equ	0xFF4
  2330                           prodl	equ	0xFF3
  2331                           postinc0	equ	0xFEE
  2332                           wreg	equ	0xFE8
  2333                           postdec1	equ	0xFE5
  2334                           fsr1h	equ	0xFE2
  2335                           fsr1l	equ	0xFE1
  2336                           postinc2	equ	0xFDE
  2337                           postdec2	equ	0xFDD
  2338                           fsr2h	equ	0xFDA
  2339                           fsr2l	equ	0xFD9
  2340                           status	equ	0xFD8
  2341                           
  2342 ;; *************** function _init_ports *****************
  2343 ;; Defined at:
  2344 ;;		line 154 in file "bibliotecas/hardware.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2358 ;;      Params:         0       0       0       0       0       0       0       0       0
  2359 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2361 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2362 ;;Total ram usage:        0 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    2
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_init_hardware
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text7
  2373  0011AA                     __ptext7:
  2374                           	opt stack 0
  2375  0011AA                     _init_ports:
  2376                           	opt stack 27
  2377                           
  2378                           ;hardware.c: 156: TRISB = 0b00000001;
  2379                           
  2380                           ;incstack = 0
  2381  0011AA  0E01               	movlw	1
  2382  0011AC  6E93               	movwf	3987,c	;volatile
  2383                           
  2384                           ;hardware.c: 157: LATB = 0xFF;
  2385  0011AE  688A               	setf	3978,c	;volatile
  2386                           
  2387                           ;hardware.c: 158: TRISD = 0x00;
  2388  0011B0  0E00               	movlw	0
  2389  0011B2  6E95               	movwf	3989,c	;volatile
  2390                           
  2391                           ;hardware.c: 159: TRISA = 0b00000111;
  2392  0011B4  0E07               	movlw	7
  2393  0011B6  6E92               	movwf	3986,c	;volatile
  2394                           
  2395                           ;hardware.c: 160: TRISC = 0x11111111;
  2396  0011B8  0E11               	movlw	17
  2397  0011BA  6E94               	movwf	3988,c	;volatile
  2398                           
  2399                           ;hardware.c: 161: TRISE = 0b00000011;
  2400  0011BC  0E03               	movlw	3
  2401  0011BE  6E96               	movwf	3990,c	;volatile
  2402  0011C0  0012               	return		;funcret
  2403  0011C2                     __end_of_init_ports:
  2404                           	opt stack 0
  2405                           tblptru	equ	0xFF8
  2406                           tblptrh	equ	0xFF7
  2407                           tblptrl	equ	0xFF6
  2408                           tablat	equ	0xFF5
  2409                           prodh	equ	0xFF4
  2410                           prodl	equ	0xFF3
  2411                           postinc0	equ	0xFEE
  2412                           wreg	equ	0xFE8
  2413                           postdec1	equ	0xFE5
  2414                           fsr1h	equ	0xFE2
  2415                           fsr1l	equ	0xFE1
  2416                           postinc2	equ	0xFDE
  2417                           postdec2	equ	0xFDD
  2418                           fsr2h	equ	0xFDA
  2419                           fsr2l	equ	0xFD9
  2420                           status	equ	0xFD8
  2421                           
  2422 ;; *************** function _init_oscilador *****************
  2423 ;; Defined at:
  2424 ;;		line 171 in file "bibliotecas/hardware.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;		None
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;		None
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		None
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2438 ;;      Params:         0       0       0       0       0       0       0       0       0
  2439 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2441 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2442 ;;Total ram usage:        0 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; Hardware stack levels required when called:    2
  2445 ;; This function calls:
  2446 ;;		Nothing
  2447 ;; This function is called by:
  2448 ;;		_init_hardware
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text8
  2453  00124C                     __ptext8:
  2454                           	opt stack 0
  2455  00124C                     _init_oscilador:
  2456                           	opt stack 27
  2457                           
  2458                           ;hardware.c: 174: OSCCONbits.IRCF0 = 1;
  2459                           
  2460                           ;incstack = 0
  2461  00124C  88D3               	bsf	4051,4,c	;volatile
  2462                           
  2463                           ;hardware.c: 175: OSCCONbits.IRCF1 = 1;
  2464  00124E  8AD3               	bsf	4051,5,c	;volatile
  2465                           
  2466                           ;hardware.c: 176: OSCCONbits.IRCF2 = 1;
  2467  001250  8CD3               	bsf	4051,6,c	;volatile
  2468  001252  0012               	return		;funcret
  2469  001254                     __end_of_init_oscilador:
  2470                           	opt stack 0
  2471                           tblptru	equ	0xFF8
  2472                           tblptrh	equ	0xFF7
  2473                           tblptrl	equ	0xFF6
  2474                           tablat	equ	0xFF5
  2475                           prodh	equ	0xFF4
  2476                           prodl	equ	0xFF3
  2477                           postinc0	equ	0xFEE
  2478                           wreg	equ	0xFE8
  2479                           postdec1	equ	0xFE5
  2480                           fsr1h	equ	0xFE2
  2481                           fsr1l	equ	0xFE1
  2482                           postinc2	equ	0xFDE
  2483                           postdec2	equ	0xFDD
  2484                           fsr2h	equ	0xFDA
  2485                           fsr2l	equ	0xFD9
  2486                           status	equ	0xFD8
  2487                           
  2488 ;; *************** function _init_interrupt *****************
  2489 ;; Defined at:
  2490 ;;		line 98 in file "bibliotecas/hardware.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2504 ;;      Params:         0       0       0       0       0       0       0       0       0
  2505 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2506 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2507 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2508 ;;Total ram usage:        0 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    2
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_init_hardware
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text9
  2519  0011EC                     __ptext9:
  2520                           	opt stack 0
  2521  0011EC                     _init_interrupt:
  2522                           	opt stack 27
  2523                           
  2524                           ;hardware.c: 100: INTCON = 0b11110000;
  2525                           
  2526                           ;incstack = 0
  2527  0011EC  0EF0               	movlw	240
  2528  0011EE  6EF2               	movwf	intcon,c	;volatile
  2529                           
  2530                           ;hardware.c: 101: INTCON2 = 0b00000000;
  2531  0011F0  0E00               	movlw	0
  2532  0011F2  6EF1               	movwf	intcon2,c	;volatile
  2533                           
  2534                           ;hardware.c: 102: INTCON3 = 0b00000000;
  2535  0011F4  0E00               	movlw	0
  2536  0011F6  6EF0               	movwf	intcon3,c	;volatile
  2537                           
  2538                           ;hardware.c: 104: PIE1 = 0b00100000;
  2539  0011F8  0E20               	movlw	32
  2540  0011FA  6E9D               	movwf	3997,c	;volatile
  2541  0011FC  0012               	return		;funcret
  2542  0011FE                     __end_of_init_interrupt:
  2543                           	opt stack 0
  2544                           tblptru	equ	0xFF8
  2545                           tblptrh	equ	0xFF7
  2546                           tblptrl	equ	0xFF6
  2547                           tablat	equ	0xFF5
  2548                           prodh	equ	0xFF4
  2549                           prodl	equ	0xFF3
  2550                           intcon	equ	0xFF2
  2551                           intcon2	equ	0xFF1
  2552                           intcon3	equ	0xFF0
  2553                           postinc0	equ	0xFEE
  2554                           wreg	equ	0xFE8
  2555                           postdec1	equ	0xFE5
  2556                           fsr1h	equ	0xFE2
  2557                           fsr1l	equ	0xFE1
  2558                           postinc2	equ	0xFDE
  2559                           postdec2	equ	0xFDD
  2560                           fsr2h	equ	0xFDA
  2561                           fsr2l	equ	0xFD9
  2562                           status	equ	0xFD8
  2563                           
  2564 ;; *************** function _config_timer_zero *****************
  2565 ;; Defined at:
  2566 ;;		line 83 in file "bibliotecas/hardware.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;		None
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;		None
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg, status,2, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2580 ;;      Params:         0       0       0       0       0       0       0       0       0
  2581 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2583 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2584 ;;Total ram usage:        0 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    3
  2587 ;; This function calls:
  2588 ;;		_write_timer_zero
  2589 ;; This function is called by:
  2590 ;;		_init_hardware
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text10
  2595  001178                     __ptext10:
  2596                           	opt stack 0
  2597  001178                     _config_timer_zero:
  2598                           	opt stack 26
  2599                           
  2600                           ;hardware.c: 85: T0CON = 0b11000011;
  2601                           
  2602                           ;incstack = 0
  2603  001178  0EC3               	movlw	195
  2604  00117A  6ED5               	movwf	4053,c	;volatile
  2605                           
  2606                           ;hardware.c: 86: SPPCON = 0b00000000;
  2607  00117C  0E00               	movlw	0
  2608  00117E  6E65               	movwf	3941,c	;volatile
  2609                           
  2610                           ;hardware.c: 87: SPPCFG = 0b00000000;
  2611  001180  0E00               	movlw	0
  2612  001182  6E63               	movwf	3939,c	;volatile
  2613                           
  2614                           ;hardware.c: 88: write_timer_zero(0x0083);
  2615  001184  0E00               	movlw	0
  2616  001186  6E17               	movwf	write_timer_zero@timer0+1,c
  2617  001188  0E83               	movlw	131
  2618  00118A  6E16               	movwf	write_timer_zero@timer0,c
  2619  00118C  ECFF  F008         	call	_write_timer_zero	;wreg free
  2620  001190  0012               	return		;funcret
  2621  001192                     __end_of_config_timer_zero:
  2622                           	opt stack 0
  2623                           tblptru	equ	0xFF8
  2624                           tblptrh	equ	0xFF7
  2625                           tblptrl	equ	0xFF6
  2626                           tablat	equ	0xFF5
  2627                           prodh	equ	0xFF4
  2628                           prodl	equ	0xFF3
  2629                           intcon	equ	0xFF2
  2630                           intcon2	equ	0xFF1
  2631                           intcon3	equ	0xFF0
  2632                           postinc0	equ	0xFEE
  2633                           wreg	equ	0xFE8
  2634                           postdec1	equ	0xFE5
  2635                           fsr1h	equ	0xFE2
  2636                           fsr1l	equ	0xFE1
  2637                           postinc2	equ	0xFDE
  2638                           postdec2	equ	0xFDD
  2639                           fsr2h	equ	0xFDA
  2640                           fsr2l	equ	0xFD9
  2641                           status	equ	0xFD8
  2642                           
  2643 ;; *************** function _write_timer_zero *****************
  2644 ;; Defined at:
  2645 ;;		line 138 in file "bibliotecas/hardware.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  timer0          2   21[COMRAM] unsigned int 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  timer           2   23[COMRAM] struct Timers
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		None
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2659 ;;      Params:         2       0       0       0       0       0       0       0       0
  2660 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2661 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2662 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2663 ;;Total ram usage:        4 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    2
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_config_timer_zero
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text11
  2674  0011FE                     __ptext11:
  2675                           	opt stack 0
  2676  0011FE                     _write_timer_zero:
  2677                           	opt stack 26
  2678                           
  2679                           ;hardware.c: 140: union Timers timer;
  2680                           ;hardware.c: 142: timer.lt = timer0;
  2681                           
  2682                           ;incstack = 0
  2683  0011FE  C016  F018         	movff	write_timer_zero@timer0,write_timer_zero@timer
  2684  001202  C017  F019         	movff	write_timer_zero@timer0+1,write_timer_zero@timer+1
  2685                           
  2686                           ;hardware.c: 144: TMR0H = timer.bt[1];
  2687  001206  C019  FFD7         	movff	write_timer_zero@timer+1,4055	;volatile
  2688                           
  2689                           ;hardware.c: 145: TMR0L = timer.bt[0];
  2690  00120A  C018  FFD6         	movff	write_timer_zero@timer,4054	;volatile
  2691  00120E  0012               	return		;funcret
  2692  001210                     __end_of_write_timer_zero:
  2693                           	opt stack 0
  2694                           tblptru	equ	0xFF8
  2695                           tblptrh	equ	0xFF7
  2696                           tblptrl	equ	0xFF6
  2697                           tablat	equ	0xFF5
  2698                           prodh	equ	0xFF4
  2699                           prodl	equ	0xFF3
  2700                           intcon	equ	0xFF2
  2701                           intcon2	equ	0xFF1
  2702                           intcon3	equ	0xFF0
  2703                           postinc0	equ	0xFEE
  2704                           wreg	equ	0xFE8
  2705                           postdec1	equ	0xFE5
  2706                           fsr1h	equ	0xFE2
  2707                           fsr1l	equ	0xFE1
  2708                           postinc2	equ	0xFDE
  2709                           postdec2	equ	0xFDD
  2710                           fsr2h	equ	0xFDA
  2711                           fsr2l	equ	0xFD9
  2712                           status	equ	0xFD8
  2713                           
  2714 ;; *************** function _config_timer_dois *****************
  2715 ;; Defined at:
  2716 ;;		line 200 in file "bibliotecas/hardware.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;		None
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;		None
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      void 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2730 ;;      Params:         0       0       0       0       0       0       0       0       0
  2731 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2732 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2733 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2734 ;;Total ram usage:        0 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; Hardware stack levels required when called:    2
  2737 ;; This function calls:
  2738 ;;		Nothing
  2739 ;; This function is called by:
  2740 ;;		_init_hardware
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           	psect	text12
  2745  001234                     __ptext12:
  2746                           	opt stack 0
  2747  001234                     _config_timer_dois:
  2748                           	opt stack 27
  2749                           
  2750                           ;hardware.c: 202: T2CON = 0b00000100;
  2751                           
  2752                           ;incstack = 0
  2753  001234  0E04               	movlw	4
  2754  001236  6ECA               	movwf	4042,c	;volatile
  2755                           
  2756                           ;hardware.c: 203: TMR2 = 0;
  2757  001238  0E00               	movlw	0
  2758  00123A  6ECC               	movwf	4044,c	;volatile
  2759                           
  2760                           ;hardware.c: 204: PR2 = 0xFF;
  2761  00123C  68CB               	setf	4043,c	;volatile
  2762  00123E  0012               	return		;funcret
  2763  001240                     __end_of_config_timer_dois:
  2764                           	opt stack 0
  2765                           tblptru	equ	0xFF8
  2766                           tblptrh	equ	0xFF7
  2767                           tblptrl	equ	0xFF6
  2768                           tablat	equ	0xFF5
  2769                           prodh	equ	0xFF4
  2770                           prodl	equ	0xFF3
  2771                           intcon	equ	0xFF2
  2772                           intcon2	equ	0xFF1
  2773                           intcon3	equ	0xFF0
  2774                           postinc0	equ	0xFEE
  2775                           wreg	equ	0xFE8
  2776                           postdec1	equ	0xFE5
  2777                           fsr1h	equ	0xFE2
  2778                           fsr1l	equ	0xFE1
  2779                           postinc2	equ	0xFDE
  2780                           postdec2	equ	0xFDD
  2781                           fsr2h	equ	0xFDA
  2782                           fsr2l	equ	0xFD9
  2783                           status	equ	0xFD8
  2784                           
  2785 ;; *************** function _inicializa_uart *****************
  2786 ;; Defined at:
  2787 ;;		line 206 in file "bibliotecas/uart.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, status,2, status,0, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2801 ;;      Params:         0       0       0       0       0       0       0       0       0
  2802 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2804 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2805 ;;Total ram usage:        0 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    4
  2808 ;; This function calls:
  2809 ;;		_configura_baudrate_uart
  2810 ;; This function is called by:
  2811 ;;		_main
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text13
  2816  001138                     __ptext13:
  2817                           	opt stack 0
  2818  001138                     _inicializa_uart:
  2819                           	opt stack 26
  2820                           
  2821                           ;uart.c: 208: TRISCbits.RC6 = 0;
  2822                           
  2823                           ;incstack = 0
  2824  001138  9C94               	bcf	3988,6,c	;volatile
  2825                           
  2826                           ;uart.c: 209: TRISCbits.RC7 = 0;
  2827  00113A  9E94               	bcf	3988,7,c	;volatile
  2828                           
  2829                           ;uart.c: 211: (void)configura_baudrate_uart(9600);
  2830  00113C  0E80               	movlw	128
  2831  00113E  6E24               	movwf	configura_baudrate_uart@baudrate,c
  2832  001140  0E25               	movlw	37
  2833  001142  6E25               	movwf	configura_baudrate_uart@baudrate+1,c
  2834  001144  0E00               	movlw	0
  2835  001146  6E26               	movwf	configura_baudrate_uart@baudrate+2,c
  2836  001148  0E00               	movlw	0
  2837  00114A  6E27               	movwf	configura_baudrate_uart@baudrate+3,c
  2838  00114C  EC4E  F001         	call	_configura_baudrate_uart	;wreg free
  2839                           
  2840                           ;uart.c: 213: TXSTA = 0x20;
  2841  001150  0E20               	movlw	32
  2842  001152  6EAC               	movwf	4012,c	;volatile
  2843                           
  2844                           ;uart.c: 214: RCSTA = 0x90;
  2845  001154  0E90               	movlw	144
  2846  001156  6EAB               	movwf	4011,c	;volatile
  2847  001158  0012               	return		;funcret
  2848  00115A                     __end_of_inicializa_uart:
  2849                           	opt stack 0
  2850                           tblptru	equ	0xFF8
  2851                           tblptrh	equ	0xFF7
  2852                           tblptrl	equ	0xFF6
  2853                           tablat	equ	0xFF5
  2854                           prodh	equ	0xFF4
  2855                           prodl	equ	0xFF3
  2856                           intcon	equ	0xFF2
  2857                           intcon2	equ	0xFF1
  2858                           intcon3	equ	0xFF0
  2859                           postinc0	equ	0xFEE
  2860                           wreg	equ	0xFE8
  2861                           postdec1	equ	0xFE5
  2862                           fsr1h	equ	0xFE2
  2863                           fsr1l	equ	0xFE1
  2864                           postinc2	equ	0xFDE
  2865                           postdec2	equ	0xFDD
  2866                           fsr2h	equ	0xFDA
  2867                           fsr2l	equ	0xFD9
  2868                           status	equ	0xFD8
  2869                           
  2870 ;; *************** function _configura_baudrate_uart *****************
  2871 ;; Defined at:
  2872 ;;		line 50 in file "bibliotecas/uart.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;  baudrate        4   35[COMRAM] const long 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  x               2   47[COMRAM] unsigned int 
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  1    wreg      unsigned char 
  2879 ;; Registers used:
  2880 ;;		wreg, status,2, status,0, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2886 ;;      Params:         4       0       0       0       0       0       0       0       0
  2887 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2888 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2889 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2890 ;;Total ram usage:       14 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; Hardware stack levels required when called:    3
  2893 ;; This function calls:
  2894 ;;		___aldiv
  2895 ;; This function is called by:
  2896 ;;		_inicializa_uart
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text14
  2901  00029C                     __ptext14:
  2902                           	opt stack 0
  2903  00029C                     _configura_baudrate_uart:
  2904                           	opt stack 26
  2905                           
  2906                           ;uart.c: 52: unsigned int x;
  2907                           ;uart.c: 54: x = (48000000 - baudrate*64)/(baudrate*64);
  2908                           
  2909                           ;incstack = 0
  2910  00029C  C024  F028         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  2911  0002A0  C025  F029         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  2912  0002A4  C026  F02A         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  2913  0002A8  C027  F02B         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  2914  0002AC  0E06               	movlw	6
  2915  0002AE                     u5145:
  2916  0002AE  90D8               	bcf	status,0,c
  2917  0002B0  3628               	rlcf	??_configura_baudrate_uart,f,c
  2918  0002B2  3629               	rlcf	??_configura_baudrate_uart+1,f,c
  2919  0002B4  362A               	rlcf	??_configura_baudrate_uart+2,f,c
  2920  0002B6  362B               	rlcf	??_configura_baudrate_uart+3,f,c
  2921  0002B8  2EE8               	decfsz	wreg,f,c
  2922  0002BA  D7F9               	goto	u5145
  2923  0002BC  1E28               	comf	??_configura_baudrate_uart,f,c
  2924  0002BE  1E29               	comf	??_configura_baudrate_uart+1,f,c
  2925  0002C0  1E2A               	comf	??_configura_baudrate_uart+2,f,c
  2926  0002C2  1E2B               	comf	??_configura_baudrate_uart+3,f,c
  2927  0002C4  2A28               	incf	??_configura_baudrate_uart,f,c
  2928  0002C6  0E00               	movlw	0
  2929  0002C8  2229               	addwfc	??_configura_baudrate_uart+1,f,c
  2930  0002CA  222A               	addwfc	??_configura_baudrate_uart+2,f,c
  2931  0002CC  222B               	addwfc	??_configura_baudrate_uart+3,f,c
  2932  0002CE  0E00               	movlw	0
  2933  0002D0  2428               	addwf	??_configura_baudrate_uart,w,c
  2934  0002D2  6E16               	movwf	___aldiv@dividend,c
  2935  0002D4  0E6C               	movlw	108
  2936  0002D6  2029               	addwfc	??_configura_baudrate_uart+1,w,c
  2937  0002D8  6E17               	movwf	___aldiv@dividend+1,c
  2938  0002DA  0EDC               	movlw	220
  2939  0002DC  202A               	addwfc	??_configura_baudrate_uart+2,w,c
  2940  0002DE  6E18               	movwf	___aldiv@dividend+2,c
  2941  0002E0  0E02               	movlw	2
  2942  0002E2  202B               	addwfc	??_configura_baudrate_uart+3,w,c
  2943  0002E4  6E19               	movwf	___aldiv@dividend+3,c
  2944  0002E6  C024  F02C         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  2945  0002EA  C025  F02D         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  2946  0002EE  C026  F02E         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  2947  0002F2  C027  F02F         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  2948  0002F6  0E06               	movlw	6
  2949  0002F8                     u5155:
  2950  0002F8  90D8               	bcf	status,0,c
  2951  0002FA  362C               	rlcf	??_configura_baudrate_uart+4,f,c
  2952  0002FC  362D               	rlcf	??_configura_baudrate_uart+5,f,c
  2953  0002FE  362E               	rlcf	??_configura_baudrate_uart+6,f,c
  2954  000300  362F               	rlcf	??_configura_baudrate_uart+7,f,c
  2955  000302  2EE8               	decfsz	wreg,f,c
  2956  000304  D7F9               	goto	u5155
  2957  000306  C02C  F01A         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  2958  00030A  C02D  F01B         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  2959  00030E  C02E  F01C         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  2960  000312  C02F  F01D         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  2961  000316  EC86  F003         	call	___aldiv	;wreg free
  2962  00031A  C016  F030         	movff	?___aldiv,configura_baudrate_uart@x
  2963  00031E  C017  F031         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  2964                           
  2965                           ;uart.c: 55: if(x > 255)
  2966  000322  0431               	decf	configura_baudrate_uart@x+1,w,c
  2967  000324  A0D8               	btfss	status,0,c
  2968  000326  D044               	goto	l5613
  2969                           
  2970                           ;uart.c: 56: {
  2971                           ;uart.c: 57: x = (48000000 - baudrate*16)/(baudrate*16);
  2972  000328  C024  F028         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  2973  00032C  C025  F029         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  2974  000330  C026  F02A         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  2975  000334  C027  F02B         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  2976  000338  0E04               	movlw	4
  2977  00033A                     u5175:
  2978  00033A  90D8               	bcf	status,0,c
  2979  00033C  3628               	rlcf	??_configura_baudrate_uart,f,c
  2980  00033E  3629               	rlcf	??_configura_baudrate_uart+1,f,c
  2981  000340  362A               	rlcf	??_configura_baudrate_uart+2,f,c
  2982  000342  362B               	rlcf	??_configura_baudrate_uart+3,f,c
  2983  000344  2EE8               	decfsz	wreg,f,c
  2984  000346  D7F9               	goto	u5175
  2985  000348  1E28               	comf	??_configura_baudrate_uart,f,c
  2986  00034A  1E29               	comf	??_configura_baudrate_uart+1,f,c
  2987  00034C  1E2A               	comf	??_configura_baudrate_uart+2,f,c
  2988  00034E  1E2B               	comf	??_configura_baudrate_uart+3,f,c
  2989  000350  2A28               	incf	??_configura_baudrate_uart,f,c
  2990  000352  0E00               	movlw	0
  2991  000354  2229               	addwfc	??_configura_baudrate_uart+1,f,c
  2992  000356  222A               	addwfc	??_configura_baudrate_uart+2,f,c
  2993  000358  222B               	addwfc	??_configura_baudrate_uart+3,f,c
  2994  00035A  0E00               	movlw	0
  2995  00035C  2428               	addwf	??_configura_baudrate_uart,w,c
  2996  00035E  6E16               	movwf	___aldiv@dividend,c
  2997  000360  0E6C               	movlw	108
  2998  000362  2029               	addwfc	??_configura_baudrate_uart+1,w,c
  2999  000364  6E17               	movwf	___aldiv@dividend+1,c
  3000  000366  0EDC               	movlw	220
  3001  000368  202A               	addwfc	??_configura_baudrate_uart+2,w,c
  3002  00036A  6E18               	movwf	___aldiv@dividend+2,c
  3003  00036C  0E02               	movlw	2
  3004  00036E  202B               	addwfc	??_configura_baudrate_uart+3,w,c
  3005  000370  6E19               	movwf	___aldiv@dividend+3,c
  3006  000372  C024  F02C         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  3007  000376  C025  F02D         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  3008  00037A  C026  F02E         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  3009  00037E  C027  F02F         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  3010  000382  0E04               	movlw	4
  3011  000384                     u5185:
  3012  000384  90D8               	bcf	status,0,c
  3013  000386  362C               	rlcf	??_configura_baudrate_uart+4,f,c
  3014  000388  362D               	rlcf	??_configura_baudrate_uart+5,f,c
  3015  00038A  362E               	rlcf	??_configura_baudrate_uart+6,f,c
  3016  00038C  362F               	rlcf	??_configura_baudrate_uart+7,f,c
  3017  00038E  2EE8               	decfsz	wreg,f,c
  3018  000390  D7F9               	goto	u5185
  3019  000392  C02C  F01A         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  3020  000396  C02D  F01B         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  3021  00039A  C02E  F01C         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  3022  00039E  C02F  F01D         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  3023  0003A2  EC86  F003         	call	___aldiv	;wreg free
  3024  0003A6  C016  F030         	movff	?___aldiv,configura_baudrate_uart@x
  3025  0003AA  C017  F031         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  3026                           
  3027                           ;uart.c: 58: BRGH = 1;
  3028  0003AE  84AC               	bsf	4012,2,c	;volatile
  3029  0003B0                     l5613:
  3030                           
  3031                           ;uart.c: 59: }
  3032                           ;uart.c: 60: if(x < 256)
  3033  0003B0  0431               	decf	configura_baudrate_uart@x+1,w,c
  3034  0003B2  B0D8               	btfsc	status,0,c
  3035  0003B4  0012               	return	
  3036                           
  3037                           ;uart.c: 61: {
  3038                           ;uart.c: 62: SPBRG = x;
  3039  0003B6  C030  FFAF         	movff	configura_baudrate_uart@x,4015	;volatile
  3040                           
  3041                           ;uart.c: 63: SYNC = 0;
  3042  0003BA  98AC               	bcf	4012,4,c	;volatile
  3043                           
  3044                           ;uart.c: 64: SPEN = 1;
  3045  0003BC  8EAB               	bsf	4011,7,c	;volatile
  3046                           
  3047                           ;uart.c: 65: TRISCbits.RC7 = 1;
  3048  0003BE  8E94               	bsf	3988,7,c	;volatile
  3049                           
  3050                           ;uart.c: 66: TRISCbits.RC6 = 0;
  3051  0003C0  9C94               	bcf	3988,6,c	;volatile
  3052                           
  3053                           ;uart.c: 67: CREN = 1;
  3054  0003C2  88AB               	bsf	4011,4,c	;volatile
  3055                           
  3056                           ;uart.c: 68: TXEN = 1;
  3057  0003C4  8AAC               	bsf	4012,5,c	;volatile
  3058                           
  3059                           ;uart.c: 70: return (1);
  3060                           ;	Return value of _configura_baudrate_uart is never used
  3061  0003C6  0012               	return	
  3062  0003C8                     __end_of_configura_baudrate_uart:
  3063                           	opt stack 0
  3064                           tblptru	equ	0xFF8
  3065                           tblptrh	equ	0xFF7
  3066                           tblptrl	equ	0xFF6
  3067                           tablat	equ	0xFF5
  3068                           prodh	equ	0xFF4
  3069                           prodl	equ	0xFF3
  3070                           intcon	equ	0xFF2
  3071                           intcon2	equ	0xFF1
  3072                           intcon3	equ	0xFF0
  3073                           postinc0	equ	0xFEE
  3074                           wreg	equ	0xFE8
  3075                           postdec1	equ	0xFE5
  3076                           fsr1h	equ	0xFE2
  3077                           fsr1l	equ	0xFE1
  3078                           postinc2	equ	0xFDE
  3079                           postdec2	equ	0xFDD
  3080                           fsr2h	equ	0xFDA
  3081                           fsr2l	equ	0xFD9
  3082                           status	equ	0xFD8
  3083                           
  3084 ;; *************** function ___aldiv *****************
  3085 ;; Defined at:
  3086 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  dividend        4   21[COMRAM] long 
  3089 ;;  divisor         4   25[COMRAM] long 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;  quotient        4   31[COMRAM] long 
  3092 ;;  sign            1   30[COMRAM] unsigned char 
  3093 ;;  counter         1   29[COMRAM] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  4   21[COMRAM] long 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3103 ;;      Params:         8       0       0       0       0       0       0       0       0
  3104 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3106 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3107 ;;Total ram usage:       14 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    2
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_configura_baudrate_uart
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text15
  3118  00070C                     __ptext15:
  3119                           	opt stack 0
  3120  00070C                     ___aldiv:
  3121                           	opt stack 26
  3122                           
  3123                           ;incstack = 0
  3124  00070C  0E00               	movlw	0
  3125  00070E  6E1F               	movwf	___aldiv@sign,c
  3126  000710  AE1D               	btfss	___aldiv@divisor+3,7,c
  3127  000712  D00A               	goto	l5347
  3128  000714  1E1D               	comf	___aldiv@divisor+3,f,c
  3129  000716  1E1C               	comf	___aldiv@divisor+2,f,c
  3130  000718  1E1B               	comf	___aldiv@divisor+1,f,c
  3131  00071A  6C1A               	negf	___aldiv@divisor,c
  3132  00071C  0E00               	movlw	0
  3133  00071E  221B               	addwfc	___aldiv@divisor+1,f,c
  3134  000720  221C               	addwfc	___aldiv@divisor+2,f,c
  3135  000722  221D               	addwfc	___aldiv@divisor+3,f,c
  3136  000724  0E01               	movlw	1
  3137  000726  6E1F               	movwf	___aldiv@sign,c
  3138  000728                     l5347:
  3139  000728  AE19               	btfss	___aldiv@dividend+3,7,c
  3140  00072A  D00A               	goto	l5353
  3141  00072C  1E19               	comf	___aldiv@dividend+3,f,c
  3142  00072E  1E18               	comf	___aldiv@dividend+2,f,c
  3143  000730  1E17               	comf	___aldiv@dividend+1,f,c
  3144  000732  6C16               	negf	___aldiv@dividend,c
  3145  000734  0E00               	movlw	0
  3146  000736  2217               	addwfc	___aldiv@dividend+1,f,c
  3147  000738  2218               	addwfc	___aldiv@dividend+2,f,c
  3148  00073A  2219               	addwfc	___aldiv@dividend+3,f,c
  3149  00073C  0E01               	movlw	1
  3150  00073E  1A1F               	xorwf	___aldiv@sign,f,c
  3151  000740                     l5353:
  3152  000740  0E00               	movlw	0
  3153  000742  6E20               	movwf	___aldiv@quotient,c
  3154  000744  0E00               	movlw	0
  3155  000746  6E21               	movwf	___aldiv@quotient+1,c
  3156  000748  0E00               	movlw	0
  3157  00074A  6E22               	movwf	___aldiv@quotient+2,c
  3158  00074C  0E00               	movlw	0
  3159  00074E  6E23               	movwf	___aldiv@quotient+3,c
  3160  000750  501A               	movf	___aldiv@divisor,w,c
  3161  000752  101B               	iorwf	___aldiv@divisor+1,w,c
  3162  000754  101C               	iorwf	___aldiv@divisor+2,w,c
  3163  000756  101D               	iorwf	___aldiv@divisor+3,w,c
  3164  000758  B4D8               	btfsc	status,2,c
  3165  00075A  D02A               	goto	l5375
  3166  00075C  0E01               	movlw	1
  3167  00075E  6E1E               	movwf	___aldiv@counter,c
  3168  000760  D006               	goto	l5361
  3169  000762                     l5359:
  3170  000762  90D8               	bcf	status,0,c
  3171  000764  361A               	rlcf	___aldiv@divisor,f,c
  3172  000766  361B               	rlcf	___aldiv@divisor+1,f,c
  3173  000768  361C               	rlcf	___aldiv@divisor+2,f,c
  3174  00076A  361D               	rlcf	___aldiv@divisor+3,f,c
  3175  00076C  2A1E               	incf	___aldiv@counter,f,c
  3176  00076E                     l5361:
  3177  00076E  AE1D               	btfss	___aldiv@divisor+3,7,c
  3178  000770  D7F8               	goto	l5359
  3179  000772                     l5363:
  3180  000772  90D8               	bcf	status,0,c
  3181  000774  3620               	rlcf	___aldiv@quotient,f,c
  3182  000776  3621               	rlcf	___aldiv@quotient+1,f,c
  3183  000778  3622               	rlcf	___aldiv@quotient+2,f,c
  3184  00077A  3623               	rlcf	___aldiv@quotient+3,f,c
  3185  00077C  501A               	movf	___aldiv@divisor,w,c
  3186  00077E  5C16               	subwf	___aldiv@dividend,w,c
  3187  000780  501B               	movf	___aldiv@divisor+1,w,c
  3188  000782  5817               	subwfb	___aldiv@dividend+1,w,c
  3189  000784  501C               	movf	___aldiv@divisor+2,w,c
  3190  000786  5818               	subwfb	___aldiv@dividend+2,w,c
  3191  000788  501D               	movf	___aldiv@divisor+3,w,c
  3192  00078A  5819               	subwfb	___aldiv@dividend+3,w,c
  3193  00078C  A0D8               	btfss	status,0,c
  3194  00078E  D009               	goto	l5371
  3195  000790  501A               	movf	___aldiv@divisor,w,c
  3196  000792  5E16               	subwf	___aldiv@dividend,f,c
  3197  000794  501B               	movf	___aldiv@divisor+1,w,c
  3198  000796  5A17               	subwfb	___aldiv@dividend+1,f,c
  3199  000798  501C               	movf	___aldiv@divisor+2,w,c
  3200  00079A  5A18               	subwfb	___aldiv@dividend+2,f,c
  3201  00079C  501D               	movf	___aldiv@divisor+3,w,c
  3202  00079E  5A19               	subwfb	___aldiv@dividend+3,f,c
  3203  0007A0  8020               	bsf	___aldiv@quotient,0,c
  3204  0007A2                     l5371:
  3205  0007A2  90D8               	bcf	status,0,c
  3206  0007A4  321D               	rrcf	___aldiv@divisor+3,f,c
  3207  0007A6  321C               	rrcf	___aldiv@divisor+2,f,c
  3208  0007A8  321B               	rrcf	___aldiv@divisor+1,f,c
  3209  0007AA  321A               	rrcf	___aldiv@divisor,f,c
  3210  0007AC  2E1E               	decfsz	___aldiv@counter,f,c
  3211  0007AE  D7E1               	goto	l5363
  3212  0007B0                     l5375:
  3213  0007B0  501F               	movf	___aldiv@sign,w,c
  3214  0007B2  B4D8               	btfsc	status,2,c
  3215  0007B4  D008               	goto	l5379
  3216  0007B6  1E23               	comf	___aldiv@quotient+3,f,c
  3217  0007B8  1E22               	comf	___aldiv@quotient+2,f,c
  3218  0007BA  1E21               	comf	___aldiv@quotient+1,f,c
  3219  0007BC  6C20               	negf	___aldiv@quotient,c
  3220  0007BE  0E00               	movlw	0
  3221  0007C0  2221               	addwfc	___aldiv@quotient+1,f,c
  3222  0007C2  2222               	addwfc	___aldiv@quotient+2,f,c
  3223  0007C4  2223               	addwfc	___aldiv@quotient+3,f,c
  3224  0007C6                     l5379:
  3225  0007C6  C020  F016         	movff	___aldiv@quotient,?___aldiv
  3226  0007CA  C021  F017         	movff	___aldiv@quotient+1,?___aldiv+1
  3227  0007CE  C022  F018         	movff	___aldiv@quotient+2,?___aldiv+2
  3228  0007D2  C023  F019         	movff	___aldiv@quotient+3,?___aldiv+3
  3229  0007D6  0012               	return	
  3230  0007D8                     __end_of___aldiv:
  3231                           	opt stack 0
  3232                           tblptru	equ	0xFF8
  3233                           tblptrh	equ	0xFF7
  3234                           tblptrl	equ	0xFF6
  3235                           tablat	equ	0xFF5
  3236                           prodh	equ	0xFF4
  3237                           prodl	equ	0xFF3
  3238                           intcon	equ	0xFF2
  3239                           intcon2	equ	0xFF1
  3240                           intcon3	equ	0xFF0
  3241                           postinc0	equ	0xFEE
  3242                           wreg	equ	0xFE8
  3243                           postdec1	equ	0xFE5
  3244                           fsr1h	equ	0xFE2
  3245                           fsr1l	equ	0xFE1
  3246                           postinc2	equ	0xFDE
  3247                           postdec2	equ	0xFDD
  3248                           fsr2h	equ	0xFDA
  3249                           fsr2l	equ	0xFD9
  3250                           status	equ	0xFD8
  3251                           
  3252 ;; *************** function _inicializa_tarefas *****************
  3253 ;; Defined at:
  3254 ;;		line 157 in file "main.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;		None
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;		None
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  1    wreg      void 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3268 ;;      Params:         0       0       0       0       0       0       0       0       0
  3269 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3271 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3272 ;;Total ram usage:        0 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:    2
  3275 ;; This function calls:
  3276 ;;		Nothing
  3277 ;; This function is called by:
  3278 ;;		_main
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text16
  3283  0010C8                     __ptext16:
  3284                           	opt stack 0
  3285  0010C8                     _inicializa_tarefas:
  3286                           	opt stack 28
  3287                           
  3288                           ;main.c: 160: p_tarefas[0] = gps;
  3289                           
  3290                           ;incstack = 0
  3291  0010C8  0EAC               	movlw	low _gps
  3292  0010CA  0100               	movlb	0	; () banked
  3293  0010CC  6FB9               	movwf	_p_tarefas& (0+255),b
  3294  0010CE  0E0B               	movlw	high _gps
  3295  0010D0  0100               	movlb	0	; () banked
  3296  0010D2  6FBA               	movwf	(_p_tarefas+1)& (0+255),b
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;main.c: 164: tempo_backup[0] = 5000;
  3300  0010D4  0E13               	movlw	19
  3301  0010D6  0100               	movlb	0	; () banked
  3302  0010D8  6FB6               	movwf	(_tempo_backup+1)& (0+255),b
  3303  0010DA  0E88               	movlw	136
  3304  0010DC  6FB5               	movwf	_tempo_backup& (0+255),b
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;main.c: 169: tempo_tarefa[0] = 5000;
  3308  0010DE  0E13               	movlw	19
  3309  0010E0  0100               	movlb	0	; () banked
  3310  0010E2  6FB2               	movwf	(_tempo_tarefa+1)& (0+255),b
  3311  0010E4  0E88               	movlw	136
  3312  0010E6  6FB1               	movwf	_tempo_tarefa& (0+255),b
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;main.c: 173: tarefa_em_execucao = 0;
  3316  0010E8  0E00               	movlw	0
  3317  0010EA  6E47               	movwf	_tarefa_em_execucao,c	;volatile
  3318                           
  3319                           ; BSR set to: 0
  3320  0010EC  0012               	return		;funcret
  3321  0010EE                     __end_of_inicializa_tarefas:
  3322                           	opt stack 0
  3323                           tblptru	equ	0xFF8
  3324                           tblptrh	equ	0xFF7
  3325                           tblptrl	equ	0xFF6
  3326                           tablat	equ	0xFF5
  3327                           prodh	equ	0xFF4
  3328                           prodl	equ	0xFF3
  3329                           intcon	equ	0xFF2
  3330                           intcon2	equ	0xFF1
  3331                           intcon3	equ	0xFF0
  3332                           postinc0	equ	0xFEE
  3333                           wreg	equ	0xFE8
  3334                           postdec1	equ	0xFE5
  3335                           fsr1h	equ	0xFE2
  3336                           fsr1l	equ	0xFE1
  3337                           postinc2	equ	0xFDE
  3338                           postdec2	equ	0xFDD
  3339                           fsr2h	equ	0xFDA
  3340                           fsr2l	equ	0xFD9
  3341                           status	equ	0xFD8
  3342                           
  3343 ;; *************** function _inicializa_shrc *****************
  3344 ;; Defined at:
  3345 ;;		line 47 in file "bibliotecas/SHRC.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		None
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3359 ;;      Params:         0       0       0       0       0       0       0       0       0
  3360 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3361 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3362 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3363 ;;Total ram usage:        0 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:    2
  3366 ;; This function calls:
  3367 ;;		Nothing
  3368 ;; This function is called by:
  3369 ;;		_main
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text17
  3374  001254                     __ptext17:
  3375                           	opt stack 0
  3376  001254                     _inicializa_shrc:
  3377                           	opt stack 28
  3378                           
  3379                           ;SHRC.c: 49: LATBbits.LATB5 = 0;
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;incstack = 0
  3383  001254  9A8A               	bcf	3978,5,c	;volatile
  3384                           
  3385                           ;SHRC.c: 50: LATBbits.LATB6 = 0;
  3386  001256  9C8A               	bcf	3978,6,c	;volatile
  3387                           
  3388                           ;SHRC.c: 51: LATBbits.LATB7 = 0;
  3389  001258  9E8A               	bcf	3978,7,c	;volatile
  3390  00125A  0012               	return		;funcret
  3391  00125C                     __end_of_inicializa_shrc:
  3392                           	opt stack 0
  3393                           tblptru	equ	0xFF8
  3394                           tblptrh	equ	0xFF7
  3395                           tblptrl	equ	0xFF6
  3396                           tablat	equ	0xFF5
  3397                           prodh	equ	0xFF4
  3398                           prodl	equ	0xFF3
  3399                           intcon	equ	0xFF2
  3400                           intcon2	equ	0xFF1
  3401                           intcon3	equ	0xFF0
  3402                           postinc0	equ	0xFEE
  3403                           wreg	equ	0xFE8
  3404                           postdec1	equ	0xFE5
  3405                           fsr1h	equ	0xFE2
  3406                           fsr1l	equ	0xFE1
  3407                           postinc2	equ	0xFDE
  3408                           postdec2	equ	0xFDD
  3409                           fsr2h	equ	0xFDA
  3410                           fsr2l	equ	0xFD9
  3411                           status	equ	0xFD8
  3412                           
  3413 ;; *************** function _escalonador *****************
  3414 ;; Defined at:
  3415 ;;		line 184 in file "main.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;		None
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  cont            1   51[COMRAM] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3429 ;;      Params:         0       0       0       0       0       0       0       0       0
  3430 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3431 ;;      Temps:          0       0       2       0       0       0       0       0       0
  3432 ;;      Totals:         1       0       2       0       0       0       0       0       0
  3433 ;;Total ram usage:        3 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    7
  3436 ;; This function calls:
  3437 ;;		_gps
  3438 ;; This function is called by:
  3439 ;;		_main
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text18
  3444  000942                     __ptext18:
  3445                           	opt stack 0
  3446  000942                     _escalonador:
  3447                           	opt stack 23
  3448                           
  3449                           ;main.c: 186: unsigned char cont;
  3450                           ;main.c: 187: for(cont = 0; cont<2;cont++)
  3451                           
  3452                           ;incstack = 0
  3453  000942  0E00               	movlw	0
  3454  000944  6E34               	movwf	escalonador@cont,c
  3455  000946                     l8077:
  3456  000946  0E01               	movlw	1
  3457  000948  6434               	cpfsgt	escalonador@cont,c
  3458  00094A  D001               	goto	l8081
  3459  00094C  0012               	return	
  3460  00094E                     l8081:
  3461                           
  3462                           ;main.c: 188: {
  3463                           ;main.c: 189: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  3464  00094E  5034               	movf	escalonador@cont,w,c
  3465  000950  0D02               	mullw	2
  3466  000952  0EB9               	movlw	low _p_tarefas
  3467  000954  24F3               	addwf	prodl,w,c
  3468  000956  6ED9               	movwf	fsr2l,c
  3469  000958  0E00               	movlw	high _p_tarefas
  3470  00095A  20F4               	addwfc	prodh,w,c
  3471  00095C  6EDA               	movwf	fsr2h,c
  3472  00095E  50DE               	movf	postinc2,w,c
  3473  000960  10DE               	iorwf	postinc2,w,c
  3474  000962  B4D8               	btfsc	status,2,c
  3475  000964  D03D               	goto	l8093
  3476  000966  5034               	movf	escalonador@cont,w,c
  3477  000968  0D02               	mullw	2
  3478  00096A  0EB1               	movlw	low _tempo_tarefa
  3479  00096C  24F3               	addwf	prodl,w,c
  3480  00096E  6ED9               	movwf	fsr2l,c
  3481  000970  0E00               	movlw	high _tempo_tarefa
  3482  000972  20F4               	addwfc	prodh,w,c
  3483  000974  6EDA               	movwf	fsr2h,c
  3484  000976  50DE               	movf	postinc2,w,c
  3485  000978  10DE               	iorwf	postinc2,w,c
  3486  00097A  A4D8               	btfss	status,2,c
  3487  00097C  D031               	goto	l8093
  3488                           
  3489                           ;main.c: 190: {
  3490                           ;main.c: 191: tarefa_em_execucao = 1;
  3491  00097E  0E01               	movlw	1
  3492  000980  6E47               	movwf	_tarefa_em_execucao,c	;volatile
  3493                           
  3494                           ;main.c: 192: timeout_tarefa = 65000;
  3495  000982  0EFD               	movlw	253
  3496  000984  0100               	movlb	0	; () banked
  3497  000986  6FC7               	movwf	(_timeout_tarefa+1)& (0+255),b
  3498  000988  0EE8               	movlw	232
  3499  00098A  6FC6               	movwf	_timeout_tarefa& (0+255),b
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;main.c: 193: p_tarefas[cont]();
  3503  00098C  5034               	movf	escalonador@cont,w,c
  3504  00098E  0D02               	mullw	2
  3505  000990  0EB9               	movlw	low _p_tarefas
  3506  000992  24F3               	addwf	prodl,w,c
  3507  000994  6ED9               	movwf	fsr2l,c
  3508  000996  0E00               	movlw	high _p_tarefas
  3509  000998  20F4               	addwfc	prodh,w,c
  3510  00099A  6EDA               	movwf	fsr2h,c
  3511  00099C  D801               	call	u8888
  3512  00099E  D00A               	goto	l8089
  3513  0009A0                     u8888:
  3514  0009A0  0005               	push	
  3515  0009A2  6EFA               	movwf	pclath,c
  3516  0009A4  50DE               	movf	postinc2,w,c
  3517  0009A6  6EFD               	movwf	tosl,c
  3518  0009A8  50DE               	movf	postinc2,w,c
  3519  0009AA  6EFE               	movwf	tosh,c
  3520  0009AC  50F8               	movf	tblptru,w,c
  3521  0009AE  6EFF               	movwf	tosu,c
  3522  0009B0  50FA               	movf	pclath,w,c
  3523  0009B2  0012               	return		;indir
  3524  0009B4                     l8089:
  3525                           
  3526                           ;main.c: 194: tarefa_em_execucao = 0;
  3527  0009B4  0E00               	movlw	0
  3528  0009B6  6E47               	movwf	_tarefa_em_execucao,c	;volatile
  3529                           
  3530                           ;main.c: 195: tempo_tarefa[cont] = tempo_backup[cont];
  3531  0009B8  5034               	movf	escalonador@cont,w,c
  3532  0009BA  0D02               	mullw	2
  3533  0009BC  0EB5               	movlw	low _tempo_backup
  3534  0009BE  24F3               	addwf	prodl,w,c
  3535  0009C0  6ED9               	movwf	fsr2l,c
  3536  0009C2  0E00               	movlw	high _tempo_backup
  3537  0009C4  20F4               	addwfc	prodh,w,c
  3538  0009C6  6EDA               	movwf	fsr2h,c
  3539  0009C8  5034               	movf	escalonador@cont,w,c
  3540  0009CA  0D02               	mullw	2
  3541  0009CC  0EB1               	movlw	low _tempo_tarefa
  3542  0009CE  24F3               	addwf	prodl,w,c
  3543  0009D0  6EE1               	movwf	fsr1l,c
  3544  0009D2  0E00               	movlw	high _tempo_tarefa
  3545  0009D4  20F4               	addwfc	prodh,w,c
  3546  0009D6  6EE2               	movwf	fsr1h,c
  3547  0009D8  CFDE FFE6          	movff	postinc2,postinc1
  3548  0009DC  CFDD FFE5          	movff	postdec2,postdec1
  3549  0009E0                     l8093:
  3550  0009E0  2A34               	incf	escalonador@cont,f,c
  3551  0009E2  D7B1               	goto	l8077
  3552  0009E4                     __end_of_escalonador:
  3553                           	opt stack 0
  3554                           tosu	equ	0xFFF
  3555                           tosh	equ	0xFFE
  3556                           tosl	equ	0xFFD
  3557                           pclath	equ	0xFFA
  3558                           tblptru	equ	0xFF8
  3559                           tblptrh	equ	0xFF7
  3560                           tblptrl	equ	0xFF6
  3561                           tablat	equ	0xFF5
  3562                           prodh	equ	0xFF4
  3563                           prodl	equ	0xFF3
  3564                           intcon	equ	0xFF2
  3565                           intcon2	equ	0xFF1
  3566                           intcon3	equ	0xFF0
  3567                           postinc0	equ	0xFEE
  3568                           wreg	equ	0xFE8
  3569                           postinc1	equ	0xFE6
  3570                           postdec1	equ	0xFE5
  3571                           fsr1h	equ	0xFE2
  3572                           fsr1l	equ	0xFE1
  3573                           postinc2	equ	0xFDE
  3574                           postdec2	equ	0xFDD
  3575                           fsr2h	equ	0xFDA
  3576                           fsr2l	equ	0xFD9
  3577                           status	equ	0xFD8
  3578                           
  3579 ;; *************** function _gps *****************
  3580 ;; Defined at:
  3581 ;;		line 50 in file "bibliotecas/GPS.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;		None
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  data_out       34    0        unsigned char [34]
  3586 ;;  gps_buffer     15    0        unsigned char [15]
  3587 ;;  date            4    0[BANK1 ] unsigned long 
  3588 ;;  time            4    0        unsigned long 
  3589 ;;  longitude       3    0        float 
  3590 ;;  latitude        3    0        float 
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      void 
  3593 ;; Registers used:
  3594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3600 ;;      Params:         0       0       0       0       0       0       0       0       0
  3601 ;;      Locals:         0       0       4       0       0       0       0       0       0
  3602 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3603 ;;      Totals:         0       2       4       0       0       0       0       0       0
  3604 ;;Total ram usage:        6 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:    6
  3607 ;; This function calls:
  3608 ;;		_convert_to_date
  3609 ;;		_escreve_cmd_lcd
  3610 ;;		_escreve_frase_ram_lcd
  3611 ;;		_get_dt
  3612 ;;		_posicao_cursor_lcd
  3613 ;; This function is called by:
  3614 ;;		_inicializa_tarefas
  3615 ;;		_escalonador
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           	psect	text19
  3620  000BAC                     __ptext19:
  3621                           	opt stack 0
  3622  000BAC                     _gps:
  3623                           	opt stack 23
  3624                           
  3625                           ;GPS.c: 52: unsigned char data_out[34];
  3626                           ;GPS.c: 53: unsigned long int time;
  3627                           ;GPS.c: 54: unsigned long int date;
  3628                           ;GPS.c: 55: float latitude, longitude;
  3629                           ;GPS.c: 56: char gps_buffer[15];
  3630                           ;GPS.c: 87: _delay((unsigned long)((3000)*(48000000/4000.0)));
  3631                           
  3632                           ;incstack = 0
  3633  000BAC  0EB7               	movlw	183
  3634  000BAE  0100               	movlb	0	; () banked
  3635  000BB0  6FFE               	movwf	(??_gps+1)& (0+255),b
  3636  000BB2  0EA1               	movlw	161
  3637  000BB4  0100               	movlb	0	; () banked
  3638  000BB6  6FFD               	movwf	??_gps& (0+255),b
  3639  000BB8  0EC3               	movlw	195
  3640  000BBA                     u10737:
  3641  000BBA  2EE8               	decfsz	wreg,f,c
  3642  000BBC  D7FE               	bra	u10737
  3643  000BBE  2FFD               	decfsz	??_gps& (0+255),f,b
  3644  000BC0  D7FC               	bra	u10737
  3645  000BC2  2FFE               	decfsz	(??_gps+1)& (0+255),f,b
  3646  000BC4  D7FA               	bra	u10737
  3647  000BC6  D000               	nop2	
  3648                           
  3649                           ;GPS.c: 88: escreve_cmd_lcd(0b00000001);
  3650  000BC8  0E01               	movlw	1
  3651  000BCA  EC90  F005         	call	_escreve_cmd_lcd
  3652                           
  3653                           ;GPS.c: 89: date = get_dt(rmc_pointers[7]);
  3654  000BCE  0100               	movlb	0	; () banked
  3655  000BD0  51A1               	movf	(_rmc_pointers+7)& (0+255),w,b
  3656  000BD2  ECEC  F003         	call	_get_dt
  3657  000BD6  C030  F1FA         	movff	?_get_dt,gps@date
  3658  000BDA  C031  F1FB         	movff	?_get_dt+1,gps@date+1
  3659  000BDE  C032  F1FC         	movff	?_get_dt+2,gps@date+2
  3660  000BE2  C033  F1FD         	movff	?_get_dt+3,gps@date+3
  3661                           
  3662                           ;GPS.c: 90: convert_to_date(date);
  3663  000BE6  C1FA  F0F5         	movff	gps@date,convert_to_date@dt
  3664  000BEA  C1FB  F0F6         	movff	gps@date+1,convert_to_date@dt+1
  3665  000BEE  C1FC  F0F7         	movff	gps@date+2,convert_to_date@dt+2
  3666  000BF2  C1FD  F0F8         	movff	gps@date+3,convert_to_date@dt+3
  3667  000BF6  ECAD  F000         	call	_convert_to_date	;wreg free
  3668                           
  3669                           ;GPS.c: 92: posicao_cursor_lcd(1,5);
  3670  000BFA  0E05               	movlw	5
  3671  000BFC  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3672  000BFE  0E01               	movlw	1
  3673  000C00  EC94  F006         	call	_posicao_cursor_lcd
  3674                           
  3675                           ;GPS.c: 93: escreve_frase_ram_lcd(dt_buffer);
  3676  000C04  0ED7               	movlw	low _dt_buffer
  3677  000C06  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  3678  000C08  0E00               	movlw	high _dt_buffer
  3679  000C0A  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  3680  000C0C  EC91  F007         	call	_escreve_frase_ram_lcd	;wreg free
  3681                           
  3682                           ;GPS.c: 94: _delay((unsigned long)((3000)*(48000000/4000.0)));
  3683  000C10  0EB7               	movlw	183
  3684  000C12  0100               	movlb	0	; () banked
  3685  000C14  6FFE               	movwf	(??_gps+1)& (0+255),b
  3686  000C16  0EA1               	movlw	161
  3687  000C18  0100               	movlb	0	; () banked
  3688  000C1A  6FFD               	movwf	??_gps& (0+255),b
  3689  000C1C  0EC3               	movlw	195
  3690  000C1E                     u10747:
  3691  000C1E  2EE8               	decfsz	wreg,f,c
  3692  000C20  D7FE               	bra	u10747
  3693  000C22  2FFD               	decfsz	??_gps& (0+255),f,b
  3694  000C24  D7FC               	bra	u10747
  3695  000C26  2FFE               	decfsz	(??_gps+1)& (0+255),f,b
  3696  000C28  D7FA               	bra	u10747
  3697  000C2A  D000               	nop2	
  3698                           
  3699                           ;GPS.c: 95: escreve_cmd_lcd(0b00000001);
  3700  000C2C  0E01               	movlw	1
  3701  000C2E  EC90  F005         	call	_escreve_cmd_lcd
  3702  000C32  0012               	return		;funcret
  3703  000C34                     __end_of_gps:
  3704                           	opt stack 0
  3705                           tosu	equ	0xFFF
  3706                           tosh	equ	0xFFE
  3707                           tosl	equ	0xFFD
  3708                           pclath	equ	0xFFA
  3709                           tblptru	equ	0xFF8
  3710                           tblptrh	equ	0xFF7
  3711                           tblptrl	equ	0xFF6
  3712                           tablat	equ	0xFF5
  3713                           prodh	equ	0xFF4
  3714                           prodl	equ	0xFF3
  3715                           intcon	equ	0xFF2
  3716                           intcon2	equ	0xFF1
  3717                           intcon3	equ	0xFF0
  3718                           postinc0	equ	0xFEE
  3719                           wreg	equ	0xFE8
  3720                           postinc1	equ	0xFE6
  3721                           postdec1	equ	0xFE5
  3722                           fsr1h	equ	0xFE2
  3723                           fsr1l	equ	0xFE1
  3724                           postinc2	equ	0xFDE
  3725                           postdec2	equ	0xFDD
  3726                           fsr2h	equ	0xFDA
  3727                           fsr2l	equ	0xFD9
  3728                           status	equ	0xFD8
  3729                           
  3730 ;; *************** function _get_dt *****************
  3731 ;; Defined at:
  3732 ;;		line 183 in file "bibliotecas/GPS.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  dt_pointer      1    wreg     unsigned char 
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;  dt_pointer      1   16[BANK2 ] unsigned char 
  3737 ;;  dado_buffer    12    0[BANK2 ] unsigned char [12]
  3738 ;;  _dt             4   12[BANK2 ] unsigned long 
  3739 ;;  dt_index        1   18[BANK2 ] unsigned char 
  3740 ;;  index           1   17[BANK2 ] unsigned char 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  4   47[COMRAM] unsigned long 
  3743 ;; Registers used:
  3744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3750 ;;      Params:         4       0       0       0       0       0       0       0       0
  3751 ;;      Locals:         0       0       0      19       0       0       0       0       0
  3752 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3753 ;;      Totals:         4       2       0      19       0       0       0       0       0
  3754 ;;Total ram usage:       25 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; Hardware stack levels required when called:    5
  3757 ;; This function calls:
  3758 ;;		_atol
  3759 ;;		_escreve_cmd_lcd
  3760 ;;		_escreve_frase_ram_lcd
  3761 ;;		_posicao_cursor_lcd
  3762 ;; This function is called by:
  3763 ;;		_gps
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           	psect	text20
  3768  0007D8                     __ptext20:
  3769                           	opt stack 0
  3770  0007D8                     _get_dt:
  3771                           	opt stack 23
  3772                           
  3773                           ;incstack = 0
  3774                           ;get_dt@dt_pointer stored from wreg
  3775  0007D8  0102               	movlb	2	; () banked
  3776  0007DA  6F10               	movwf	get_dt@dt_pointer& (0+255),b
  3777                           
  3778                           ;GPS.c: 185: unsigned char dado_buffer[12];
  3779                           ;GPS.c: 186: unsigned char dt_index = dt_pointer + 1;
  3780  0007DC  0102               	movlb	2	; () banked
  3781  0007DE  2910               	incf	get_dt@dt_pointer& (0+255),w,b
  3782  0007E0  0102               	movlb	2	; () banked
  3783  0007E2  6F12               	movwf	get_dt@dt_index& (0+255),b
  3784                           
  3785                           ; BSR set to: 2
  3786                           ;GPS.c: 187: unsigned long int _dt;
  3787                           ;GPS.c: 188: unsigned char index;
  3788                           ;GPS.c: 189: index = 0;
  3789  0007E4  0E00               	movlw	0
  3790  0007E6  0102               	movlb	2	; () banked
  3791  0007E8  6F11               	movwf	get_dt@index& (0+255),b
  3792                           
  3793                           ;GPS.c: 192: for(;rmc_buffer[dt_index]!=',';dt_index++){
  3794  0007EA  D018               	goto	l7873
  3795  0007EC                     l7867:
  3796                           
  3797                           ; BSR set to: 2
  3798                           ;GPS.c: 193: dado_buffer[index]= rmc_buffer[dt_index];
  3799  0007EC  0102               	movlb	2	; () banked
  3800  0007EE  5112               	movf	get_dt@dt_index& (0+255),w,b
  3801  0007F0  0D01               	mullw	1
  3802  0007F2  0E94               	movlw	low _rmc_buffer
  3803  0007F4  24F3               	addwf	prodl,w,c
  3804  0007F6  6ED9               	movwf	fsr2l,c
  3805  0007F8  0E01               	movlw	high _rmc_buffer
  3806  0007FA  20F4               	addwfc	prodh,w,c
  3807  0007FC  6EDA               	movwf	fsr2h,c
  3808  0007FE  0102               	movlb	2	; () banked
  3809  000800  5111               	movf	get_dt@index& (0+255),w,b
  3810  000802  0D01               	mullw	1
  3811  000804  0E00               	movlw	low get_dt@dado_buffer
  3812  000806  24F3               	addwf	prodl,w,c
  3813  000808  6EE1               	movwf	fsr1l,c
  3814  00080A  0E02               	movlw	high get_dt@dado_buffer
  3815  00080C  20F4               	addwfc	prodh,w,c
  3816  00080E  6EE2               	movwf	fsr1h,c
  3817  000810  CFDF FFE7          	movff	indf2,indf1
  3818                           
  3819                           ; BSR set to: 2
  3820                           ;GPS.c: 194: index++;
  3821  000814  0102               	movlb	2	; () banked
  3822  000816  2B11               	incf	get_dt@index& (0+255),f,b
  3823                           
  3824                           ; BSR set to: 2
  3825  000818  0102               	movlb	2	; () banked
  3826  00081A  2B12               	incf	get_dt@dt_index& (0+255),f,b
  3827  00081C                     l7873:
  3828                           
  3829                           ; BSR set to: 2
  3830  00081C  0102               	movlb	2	; () banked
  3831  00081E  5112               	movf	get_dt@dt_index& (0+255),w,b
  3832  000820  0D01               	mullw	1
  3833  000822  0E94               	movlw	low _rmc_buffer
  3834  000824  24F3               	addwf	prodl,w,c
  3835  000826  6ED9               	movwf	fsr2l,c
  3836  000828  0E01               	movlw	high _rmc_buffer
  3837  00082A  20F4               	addwfc	prodh,w,c
  3838  00082C  6EDA               	movwf	fsr2h,c
  3839  00082E  0E2C               	movlw	44
  3840  000830  18DE               	xorwf	postinc2,w,c
  3841  000832  A4D8               	btfss	status,2,c
  3842  000834  D7DB               	goto	l7867
  3843                           
  3844                           ; BSR set to: 2
  3845                           ;GPS.c: 195: }
  3846                           ;GPS.c: 198: escreve_cmd_lcd(0b00000001);
  3847                           
  3848                           ; BSR set to: 2
  3849  000836  0E01               	movlw	1
  3850  000838  EC90  F005         	call	_escreve_cmd_lcd
  3851                           
  3852                           ;GPS.c: 199: posicao_cursor_lcd(1,0);
  3853  00083C  0E00               	movlw	0
  3854  00083E  6E19               	movwf	posicao_cursor_lcd@coluna,c
  3855  000840  0E01               	movlw	1
  3856  000842  EC94  F006         	call	_posicao_cursor_lcd
  3857                           
  3858                           ;GPS.c: 200: escreve_frase_ram_lcd(rmc_buffer);
  3859  000846  0E94               	movlw	low _rmc_buffer
  3860  000848  6E19               	movwf	escreve_frase_ram_lcd@buffer,c
  3861  00084A  0E01               	movlw	high _rmc_buffer
  3862  00084C  6E1A               	movwf	escreve_frase_ram_lcd@buffer+1,c
  3863  00084E  EC91  F007         	call	_escreve_frase_ram_lcd	;wreg free
  3864                           
  3865                           ;GPS.c: 201: _delay((unsigned long)((1000)*(48000000/4000.0)));
  3866  000852  0E3D               	movlw	61
  3867  000854  0100               	movlb	0	; () banked
  3868  000856  6FF6               	movwf	(??_get_dt+1)& (0+255),b
  3869  000858  0EE1               	movlw	225
  3870  00085A  0100               	movlb	0	; () banked
  3871  00085C  6FF5               	movwf	??_get_dt& (0+255),b
  3872  00085E  0E3F               	movlw	63
  3873  000860                     u10757:
  3874  000860  2EE8               	decfsz	wreg,f,c
  3875  000862  D7FE               	bra	u10757
  3876  000864  2FF5               	decfsz	??_get_dt& (0+255),f,b
  3877  000866  D7FC               	bra	u10757
  3878  000868  2FF6               	decfsz	(??_get_dt+1)& (0+255),f,b
  3879  00086A  D7FA               	bra	u10757
  3880  00086C  D000               	nop2	
  3881                           
  3882                           ;GPS.c: 208: _dt = atol(dado_buffer);
  3883  00086E  0E00               	movlw	low get_dt@dado_buffer
  3884  000870  6E22               	movwf	atol@s,c
  3885  000872  0E02               	movlw	high get_dt@dado_buffer
  3886  000874  6E23               	movwf	atol@s+1,c
  3887  000876  EC0A  F003         	call	_atol	;wreg free
  3888  00087A  C022  F20C         	movff	?_atol,get_dt@_dt
  3889  00087E  C023  F20D         	movff	?_atol+1,get_dt@_dt+1
  3890  000882  C024  F20E         	movff	?_atol+2,get_dt@_dt+2
  3891  000886  C025  F20F         	movff	?_atol+3,get_dt@_dt+3
  3892                           
  3893                           ;GPS.c: 209: return _dt;
  3894  00088A  C20C  F030         	movff	get_dt@_dt,?_get_dt
  3895  00088E  C20D  F031         	movff	get_dt@_dt+1,?_get_dt+1
  3896  000892  C20E  F032         	movff	get_dt@_dt+2,?_get_dt+2
  3897  000896  C20F  F033         	movff	get_dt@_dt+3,?_get_dt+3
  3898  00089A  0012               	return	
  3899  00089C                     __end_of_get_dt:
  3900                           	opt stack 0
  3901                           tosu	equ	0xFFF
  3902                           tosh	equ	0xFFE
  3903                           tosl	equ	0xFFD
  3904                           pclath	equ	0xFFA
  3905                           tblptru	equ	0xFF8
  3906                           tblptrh	equ	0xFF7
  3907                           tblptrl	equ	0xFF6
  3908                           tablat	equ	0xFF5
  3909                           prodh	equ	0xFF4
  3910                           prodl	equ	0xFF3
  3911                           intcon	equ	0xFF2
  3912                           intcon2	equ	0xFF1
  3913                           intcon3	equ	0xFF0
  3914                           postinc0	equ	0xFEE
  3915                           wreg	equ	0xFE8
  3916                           indf1	equ	0xFE7
  3917                           postinc1	equ	0xFE6
  3918                           postdec1	equ	0xFE5
  3919                           fsr1h	equ	0xFE2
  3920                           fsr1l	equ	0xFE1
  3921                           indf2	equ	0xFDF
  3922                           postinc2	equ	0xFDE
  3923                           postdec2	equ	0xFDD
  3924                           fsr2h	equ	0xFDA
  3925                           fsr2l	equ	0xFD9
  3926                           status	equ	0xFD8
  3927                           
  3928 ;; *************** function _posicao_cursor_lcd *****************
  3929 ;; Defined at:
  3930 ;;		line 271 in file "bibliotecas/display_lcd.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  linha           1    wreg     unsigned char 
  3933 ;;  coluna          1   24[COMRAM] unsigned char 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  linha           1   25[COMRAM] unsigned char 
  3936 ;;  endereco        1   26[COMRAM] unsigned char 
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      void 
  3939 ;; Registers used:
  3940 ;;		wreg, status,2, status,0, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3946 ;;      Params:         1       0       0       0       0       0       0       0       0
  3947 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3948 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3949 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3950 ;;Total ram usage:        3 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; Hardware stack levels required when called:    4
  3953 ;; This function calls:
  3954 ;;		_endereco_cursor_lcd
  3955 ;; This function is called by:
  3956 ;;		_mensagem_inicial
  3957 ;;		_gps
  3958 ;;		_get_dt
  3959 ;;		_SDCard
  3960 ;;		_inicializa_SPI
  3961 ;;		_leitura_chave
  3962 ;;		_disk_initialize
  3963 ;;		_disk_readp
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text21
  3968  000D28                     __ptext21:
  3969                           	opt stack 0
  3970  000D28                     _posicao_cursor_lcd:
  3971                           	opt stack 25
  3972                           
  3973                           ;incstack = 0
  3974                           ;posicao_cursor_lcd@linha stored from wreg
  3975  000D28  6E1A               	movwf	posicao_cursor_lcd@linha,c
  3976                           
  3977                           ;display_lcd.c: 273: unsigned char endereco = 0x00;
  3978  000D2A  0E00               	movlw	0
  3979  000D2C  6E1B               	movwf	posicao_cursor_lcd@endereco,c
  3980                           
  3981                           ;display_lcd.c: 275: if(coluna <= 0x10U)
  3982  000D2E  0E11               	movlw	17
  3983  000D30  6019               	cpfslt	posicao_cursor_lcd@coluna,c
  3984  000D32  D02F               	goto	l7541
  3985  000D34  D01E               	goto	l7537
  3986  000D36                     l671:
  3987                           
  3988                           ;display_lcd.c: 282: endereco = 0x00U + coluna;
  3989  000D36  C019  F01B         	movff	posicao_cursor_lcd@coluna,posicao_cursor_lcd@endereco
  3990                           
  3991                           ;display_lcd.c: 283: endereco_cursor_lcd(endereco);
  3992  000D3A  501B               	movf	posicao_cursor_lcd@endereco,w,c
  3993  000D3C  ECCC  F006         	call	_endereco_cursor_lcd
  3994                           
  3995                           ;display_lcd.c: 284: break;
  3996  000D40  D026               	goto	l7539
  3997  000D42                     l7521:
  3998                           
  3999                           ;display_lcd.c: 287: endereco = 0x40U + coluna;
  4000  000D42  5019               	movf	posicao_cursor_lcd@coluna,w,c
  4001  000D44  0F40               	addlw	64
  4002  000D46  6E1B               	movwf	posicao_cursor_lcd@endereco,c
  4003                           
  4004                           ;display_lcd.c: 288: endereco_cursor_lcd(endereco);
  4005  000D48  501B               	movf	posicao_cursor_lcd@endereco,w,c
  4006  000D4A  ECCC  F006         	call	_endereco_cursor_lcd
  4007                           
  4008                           ;display_lcd.c: 289: break;
  4009  000D4E  D01F               	goto	l7539
  4010  000D50                     l7525:
  4011                           
  4012                           ;display_lcd.c: 292: endereco = 0x14U + coluna;
  4013  000D50  5019               	movf	posicao_cursor_lcd@coluna,w,c
  4014  000D52  0F14               	addlw	20
  4015  000D54  6E1B               	movwf	posicao_cursor_lcd@endereco,c
  4016                           
  4017                           ;display_lcd.c: 293: endereco_cursor_lcd(endereco);
  4018  000D56  501B               	movf	posicao_cursor_lcd@endereco,w,c
  4019  000D58  ECCC  F006         	call	_endereco_cursor_lcd
  4020                           
  4021                           ;display_lcd.c: 294: break;
  4022  000D5C  D018               	goto	l7539
  4023  000D5E                     l7529:
  4024                           
  4025                           ;display_lcd.c: 297: endereco = 0x54U + coluna;
  4026  000D5E  5019               	movf	posicao_cursor_lcd@coluna,w,c
  4027  000D60  0F54               	addlw	84
  4028  000D62  6E1B               	movwf	posicao_cursor_lcd@endereco,c
  4029                           
  4030                           ;display_lcd.c: 298: endereco_cursor_lcd(endereco);
  4031  000D64  501B               	movf	posicao_cursor_lcd@endereco,w,c
  4032  000D66  ECCC  F006         	call	_endereco_cursor_lcd
  4033                           
  4034                           ;display_lcd.c: 299: break;
  4035  000D6A  D011               	goto	l7539
  4036  000D6C                     l7533:
  4037                           
  4038                           ;display_lcd.c: 302: endereco = 0x00U;
  4039  000D6C  0E00               	movlw	0
  4040  000D6E  6E1B               	movwf	posicao_cursor_lcd@endereco,c
  4041                           
  4042                           ;display_lcd.c: 304: }
  4043                           
  4044                           ;display_lcd.c: 303: break;
  4045  000D70  D00E               	goto	l7539
  4046  000D72                     l7537:
  4047  000D72  501A               	movf	posicao_cursor_lcd@linha,w,c
  4048                           
  4049                           ; Switch size 1, requested type "space"
  4050                           ; Number of cases is 4, Range of values is 1 to 4
  4051                           ; switch strategies available:
  4052                           ; Name         Instructions Cycles
  4053                           ; simple_byte           13     7 (average)
  4054                           ;	Chosen strategy is simple_byte
  4055  000D74  0A01               	xorlw	1	; case 1
  4056  000D76  B4D8               	btfsc	status,2,c
  4057  000D78  D7DE               	goto	l671
  4058  000D7A  0A03               	xorlw	3	; case 2
  4059  000D7C  B4D8               	btfsc	status,2,c
  4060  000D7E  D7E1               	goto	l7521
  4061  000D80  0A01               	xorlw	1	; case 3
  4062  000D82  B4D8               	btfsc	status,2,c
  4063  000D84  D7E5               	goto	l7525
  4064  000D86  0A07               	xorlw	7	; case 4
  4065  000D88  B4D8               	btfsc	status,2,c
  4066  000D8A  D7E9               	goto	l7529
  4067  000D8C  D7EF               	goto	l7533
  4068  000D8E                     l7539:
  4069                           
  4070                           ;display_lcd.c: 306: coluna++;
  4071  000D8E  2A19               	incf	posicao_cursor_lcd@coluna,f,c
  4072                           
  4073                           ;display_lcd.c: 307: }
  4074  000D90  0012               	return	
  4075  000D92                     l7541:
  4076                           
  4077                           ;display_lcd.c: 308: else
  4078                           ;display_lcd.c: 309: {
  4079                           ;display_lcd.c: 310: endereco = 0x00U;
  4080  000D92  0E00               	movlw	0
  4081  000D94  6E1B               	movwf	posicao_cursor_lcd@endereco,c
  4082  000D96  0012               	return	
  4083  000D98                     __end_of_posicao_cursor_lcd:
  4084                           	opt stack 0
  4085                           tosu	equ	0xFFF
  4086                           tosh	equ	0xFFE
  4087                           tosl	equ	0xFFD
  4088                           pclath	equ	0xFFA
  4089                           tblptru	equ	0xFF8
  4090                           tblptrh	equ	0xFF7
  4091                           tblptrl	equ	0xFF6
  4092                           tablat	equ	0xFF5
  4093                           prodh	equ	0xFF4
  4094                           prodl	equ	0xFF3
  4095                           intcon	equ	0xFF2
  4096                           intcon2	equ	0xFF1
  4097                           intcon3	equ	0xFF0
  4098                           postinc0	equ	0xFEE
  4099                           wreg	equ	0xFE8
  4100                           indf1	equ	0xFE7
  4101                           postinc1	equ	0xFE6
  4102                           postdec1	equ	0xFE5
  4103                           fsr1h	equ	0xFE2
  4104                           fsr1l	equ	0xFE1
  4105                           indf2	equ	0xFDF
  4106                           postinc2	equ	0xFDE
  4107                           postdec2	equ	0xFDD
  4108                           fsr2h	equ	0xFDA
  4109                           fsr2l	equ	0xFD9
  4110                           status	equ	0xFD8
  4111                           
  4112 ;; *************** function _endereco_cursor_lcd *****************
  4113 ;; Defined at:
  4114 ;;		line 218 in file "bibliotecas/display_lcd.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  endereco        1    wreg     unsigned char 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  endereco        1   23[COMRAM] unsigned char 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  1    wreg      void 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4128 ;;      Params:         0       0       0       0       0       0       0       0       0
  4129 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4131 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4132 ;;Total ram usage:        1 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; Hardware stack levels required when called:    3
  4135 ;; This function calls:
  4136 ;;		_delay
  4137 ;; This function is called by:
  4138 ;;		_posicao_cursor_lcd
  4139 ;;		_cria_caractere_lcd
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text22
  4144  000D98                     __ptext22:
  4145                           	opt stack 0
  4146  000D98                     _endereco_cursor_lcd:
  4147                           	opt stack 25
  4148                           
  4149                           ;incstack = 0
  4150                           ;endereco_cursor_lcd@endereco stored from wreg
  4151  000D98  6E18               	movwf	endereco_cursor_lcd@endereco,c
  4152                           
  4153                           ;display_lcd.c: 221: PORTDbits.RD2 = 0;
  4154  000D9A  9483               	bcf	3971,2,c	;volatile
  4155                           
  4156                           ;display_lcd.c: 222: PORTDbits.RD1 = 0;
  4157  000D9C  9283               	bcf	3971,1,c	;volatile
  4158                           
  4159                           ;display_lcd.c: 223: PORTDbits.RD0 = 0;
  4160  000D9E  9083               	bcf	3971,0,c	;volatile
  4161                           
  4162                           ;display_lcd.c: 226: PORTDbits.RD7 = 1;
  4163  000DA0  8E83               	bsf	3971,7,c	;volatile
  4164                           
  4165                           ;display_lcd.c: 227: if(endereco&0b00010000){PORTDbits.RD4=1;}
  4166  000DA2  A818               	btfss	endereco_cursor_lcd@endereco,4,c
  4167  000DA4  D002               	goto	l652
  4168  000DA6  8883               	bsf	3971,4,c	;volatile
  4169  000DA8  D001               	goto	l7391
  4170  000DAA                     l652:
  4171                           
  4172                           ;display_lcd.c: 228: else {PORTDbits.RD4=0;}
  4173  000DAA  9883               	bcf	3971,4,c	;volatile
  4174  000DAC                     l7391:
  4175                           
  4176                           ;display_lcd.c: 229: if(endereco&0b00100000){PORTDbits.RD5=1;}
  4177  000DAC  AA18               	btfss	endereco_cursor_lcd@endereco,5,c
  4178  000DAE  D002               	goto	l654
  4179  000DB0  8A83               	bsf	3971,5,c	;volatile
  4180  000DB2  D001               	goto	l7395
  4181  000DB4                     l654:
  4182                           
  4183                           ;display_lcd.c: 230: else {PORTDbits.RD5=0;}
  4184  000DB4  9A83               	bcf	3971,5,c	;volatile
  4185  000DB6                     l7395:
  4186                           
  4187                           ;display_lcd.c: 231: if(endereco&0b01000000){PORTDbits.RD6=1;}
  4188  000DB6  AC18               	btfss	endereco_cursor_lcd@endereco,6,c
  4189  000DB8  D002               	goto	l656
  4190  000DBA  8C83               	bsf	3971,6,c	;volatile
  4191  000DBC  D001               	goto	l657
  4192  000DBE                     l656:
  4193                           
  4194                           ;display_lcd.c: 232: else {PORTDbits.RD6=0;}
  4195  000DBE  9C83               	bcf	3971,6,c	;volatile
  4196  000DC0                     l657:
  4197                           
  4198                           ;display_lcd.c: 235: PORTDbits.RD0 = 1;
  4199  000DC0  8083               	bsf	3971,0,c	;volatile
  4200                           
  4201                           ;display_lcd.c: 236: delay();
  4202  000DC2  EC8A  F008         	call	_delay	;wreg free
  4203                           
  4204                           ;display_lcd.c: 237: PORTDbits.RD0 = 0;
  4205  000DC6  9083               	bcf	3971,0,c	;volatile
  4206                           
  4207                           ;display_lcd.c: 238: delay();
  4208  000DC8  EC8A  F008         	call	_delay	;wreg free
  4209                           
  4210                           ;display_lcd.c: 241: if(endereco&0b00000001){PORTDbits.RD4=1;}
  4211  000DCC  A018               	btfss	endereco_cursor_lcd@endereco,0,c
  4212  000DCE  D002               	goto	l658
  4213  000DD0  8883               	bsf	3971,4,c	;volatile
  4214  000DD2  D001               	goto	l659
  4215  000DD4                     l658:
  4216                           
  4217                           ;display_lcd.c: 242: else {PORTDbits.RD4=0;}
  4218  000DD4  9883               	bcf	3971,4,c	;volatile
  4219  000DD6                     l659:
  4220                           
  4221                           ;display_lcd.c: 243: if(endereco&0b00000010){PORTDbits.RD5=1;}
  4222  000DD6  A218               	btfss	endereco_cursor_lcd@endereco,1,c
  4223  000DD8  D002               	goto	l660
  4224  000DDA  8A83               	bsf	3971,5,c	;volatile
  4225  000DDC  D001               	goto	l661
  4226  000DDE                     l660:
  4227                           
  4228                           ;display_lcd.c: 244: else {PORTDbits.RD5=0;}
  4229  000DDE  9A83               	bcf	3971,5,c	;volatile
  4230  000DE0                     l661:
  4231                           
  4232                           ;display_lcd.c: 245: if(endereco&0b00000100){PORTDbits.RD6=1;}
  4233  000DE0  A418               	btfss	endereco_cursor_lcd@endereco,2,c
  4234  000DE2  D002               	goto	l662
  4235  000DE4  8C83               	bsf	3971,6,c	;volatile
  4236  000DE6  D001               	goto	l663
  4237  000DE8                     l662:
  4238                           
  4239                           ;display_lcd.c: 246: else {PORTDbits.RD6=0;}
  4240  000DE8  9C83               	bcf	3971,6,c	;volatile
  4241  000DEA                     l663:
  4242                           
  4243                           ;display_lcd.c: 247: if(endereco&0b00001000){PORTDbits.RD7=1;}
  4244  000DEA  A618               	btfss	endereco_cursor_lcd@endereco,3,c
  4245  000DEC  D002               	goto	l664
  4246  000DEE  8E83               	bsf	3971,7,c	;volatile
  4247  000DF0  D001               	goto	l665
  4248  000DF2                     l664:
  4249                           
  4250                           ;display_lcd.c: 248: else {PORTDbits.RD7=0;}
  4251  000DF2  9E83               	bcf	3971,7,c	;volatile
  4252  000DF4                     l665:
  4253                           
  4254                           ;display_lcd.c: 251: PORTDbits.RD0 = 1;
  4255  000DF4  8083               	bsf	3971,0,c	;volatile
  4256                           
  4257                           ;display_lcd.c: 252: delay();
  4258  000DF6  EC8A  F008         	call	_delay	;wreg free
  4259                           
  4260                           ;display_lcd.c: 253: PORTDbits.RD0 = 0;
  4261  000DFA  9083               	bcf	3971,0,c	;volatile
  4262                           
  4263                           ;display_lcd.c: 254: delay();
  4264  000DFC  EC8A  F008         	call	_delay	;wreg free
  4265  000E00  0012               	return		;funcret
  4266  000E02                     __end_of_endereco_cursor_lcd:
  4267                           	opt stack 0
  4268                           tosu	equ	0xFFF
  4269                           tosh	equ	0xFFE
  4270                           tosl	equ	0xFFD
  4271                           pclath	equ	0xFFA
  4272                           tblptru	equ	0xFF8
  4273                           tblptrh	equ	0xFF7
  4274                           tblptrl	equ	0xFF6
  4275                           tablat	equ	0xFF5
  4276                           prodh	equ	0xFF4
  4277                           prodl	equ	0xFF3
  4278                           intcon	equ	0xFF2
  4279                           intcon2	equ	0xFF1
  4280                           intcon3	equ	0xFF0
  4281                           postinc0	equ	0xFEE
  4282                           wreg	equ	0xFE8
  4283                           indf1	equ	0xFE7
  4284                           postinc1	equ	0xFE6
  4285                           postdec1	equ	0xFE5
  4286                           fsr1h	equ	0xFE2
  4287                           fsr1l	equ	0xFE1
  4288                           indf2	equ	0xFDF
  4289                           postinc2	equ	0xFDE
  4290                           postdec2	equ	0xFDD
  4291                           fsr2h	equ	0xFDA
  4292                           fsr2l	equ	0xFD9
  4293                           status	equ	0xFD8
  4294                           
  4295 ;; *************** function _escreve_frase_ram_lcd *****************
  4296 ;; Defined at:
  4297 ;;		line 445 in file "bibliotecas/display_lcd.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;  buffer          2   24[COMRAM] PTR unsigned char 
  4300 ;;		 -> escreve_inteiro_lcd@texto(7), STR_23(3), STR_22(8), STR_21(14), 
  4301 ;;		 -> STR_20(13), STR_19(9), STR_18(14), leitura_chave@pos_ignicao_on(17), 
  4302 ;;		 -> leitura_chave@pos_ignicao_crank(17), leitura_chave@pos_ignicao_off(17), STR_17(17), STR_16(16), 
  4303 ;;		 -> STR_15(14), STR_14(14), STR_13(14), STR_12(14), 
  4304 ;;		 -> STR_11(13), STR_10(17), STR_7(17), STR_6(15), 
  4305 ;;		 -> STR_5(14), rmc_buffer(70), dt_buffer(6), STR_2(6), 
  4306 ;;		 -> STR_1(5), mensagem_inicial@msg_dois(17), mensagem_inicial@msg_linha_um(17), 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4318 ;;      Params:         2       0       0       0       0       0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4321 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4322 ;;Total ram usage:        2 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    4
  4325 ;; This function calls:
  4326 ;;		_escreve_caractere_lcd
  4327 ;; This function is called by:
  4328 ;;		_mensagem_inicial
  4329 ;;		_gps
  4330 ;;		_get_dt
  4331 ;;		_SDCard
  4332 ;;		_inicializa_SPI
  4333 ;;		_leitura_chave
  4334 ;;		_disk_initialize
  4335 ;;		_disk_readp
  4336 ;;		_escreve_inteiro_lcd
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text23
  4341  000F22                     __ptext23:
  4342                           	opt stack 0
  4343  000F22                     _escreve_frase_ram_lcd:
  4344                           	opt stack 25
  4345                           
  4346                           ;display_lcd.c: 447: while(*buffer)
  4347                           
  4348                           ;incstack = 0
  4349  000F22  D014               	goto	l7549
  4350  000F24                     l7545:
  4351                           
  4352                           ;display_lcd.c: 448: {
  4353                           ;display_lcd.c: 449: escreve_caractere_lcd(*buffer);
  4354  000F24  C019  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
  4355  000F28  C01A  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
  4356  000F2C  6AF8               	clrf	tblptru,c
  4357  000F2E  0E07               	movlw	(high __ramtop+-1)
  4358  000F30  64F7               	cpfsgt	tblptrh,c
  4359  000F32  D003               	bra	u8047
  4360  000F34  0008               	tblrd		*
  4361  000F36  50F5               	movf	tablat,w,c
  4362  000F38  D005               	bra	u8040
  4363  000F3A                     u8047:
  4364  000F3A  CFF6 FFE9          	movff	tblptrl,fsr0l
  4365  000F3E  CFF7 FFEA          	movff	tblptrh,fsr0h
  4366  000F42  50EF               	movf	indf0,w,c
  4367  000F44                     u8040:
  4368  000F44  EC5B  F006         	call	_escreve_caractere_lcd
  4369                           
  4370                           ;display_lcd.c: 450: buffer++;
  4371  000F48  4A19               	infsnz	escreve_frase_ram_lcd@buffer,f,c
  4372  000F4A  2A1A               	incf	escreve_frase_ram_lcd@buffer+1,f,c
  4373  000F4C                     l7549:
  4374  000F4C  C019  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
  4375  000F50  C01A  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
  4376  000F54  6AF8               	clrf	tblptru,c
  4377  000F56  0E07               	movlw	(high __ramtop+-1)
  4378  000F58  64F7               	cpfsgt	tblptrh,c
  4379  000F5A  D003               	bra	u8057
  4380  000F5C  0008               	tblrd		*
  4381  000F5E  50F5               	movf	tablat,w,c
  4382  000F60  D005               	bra	u8050
  4383  000F62                     u8057:
  4384  000F62  CFF6 FFE9          	movff	tblptrl,fsr0l
  4385  000F66  CFF7 FFEA          	movff	tblptrh,fsr0h
  4386  000F6A  50EF               	movf	indf0,w,c
  4387  000F6C                     u8050:
  4388  000F6C  0900               	iorlw	0
  4389  000F6E  B4D8               	btfsc	status,2,c
  4390  000F70  0012               	return	
  4391  000F72  D7D8               	goto	l7545
  4392  000F74                     __end_of_escreve_frase_ram_lcd:
  4393                           	opt stack 0
  4394                           tosu	equ	0xFFF
  4395                           tosh	equ	0xFFE
  4396                           tosl	equ	0xFFD
  4397                           pclath	equ	0xFFA
  4398                           tblptru	equ	0xFF8
  4399                           tblptrh	equ	0xFF7
  4400                           tblptrl	equ	0xFF6
  4401                           tablat	equ	0xFF5
  4402                           prodh	equ	0xFF4
  4403                           prodl	equ	0xFF3
  4404                           intcon	equ	0xFF2
  4405                           intcon2	equ	0xFF1
  4406                           intcon3	equ	0xFF0
  4407                           indf0	equ	0xFEF
  4408                           postinc0	equ	0xFEE
  4409                           fsr0h	equ	0xFEA
  4410                           fsr0l	equ	0xFE9
  4411                           wreg	equ	0xFE8
  4412                           indf1	equ	0xFE7
  4413                           postinc1	equ	0xFE6
  4414                           postdec1	equ	0xFE5
  4415                           fsr1h	equ	0xFE2
  4416                           fsr1l	equ	0xFE1
  4417                           indf2	equ	0xFDF
  4418                           postinc2	equ	0xFDE
  4419                           postdec2	equ	0xFDD
  4420                           fsr2h	equ	0xFDA
  4421                           fsr2l	equ	0xFD9
  4422                           status	equ	0xFD8
  4423                           
  4424 ;; *************** function _escreve_caractere_lcd *****************
  4425 ;; Defined at:
  4426 ;;		line 323 in file "bibliotecas/display_lcd.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  data            1    wreg     unsigned char 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  data            1   23[COMRAM] unsigned char 
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      void 
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0, cstack
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4440 ;;      Params:         0       0       0       0       0       0       0       0       0
  4441 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4443 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4444 ;;Total ram usage:        1 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:    3
  4447 ;; This function calls:
  4448 ;;		_delay
  4449 ;; This function is called by:
  4450 ;;		_escreve_frase_ram_lcd
  4451 ;;		_escreve_float_lcd
  4452 ;;		_escreve_frase_lcd
  4453 ;;		_cria_caractere_lcd
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text24
  4458  000CB6                     __ptext24:
  4459                           	opt stack 0
  4460  000CB6                     _escreve_caractere_lcd:
  4461                           	opt stack 25
  4462                           
  4463                           ;incstack = 0
  4464                           ;escreve_caractere_lcd@data stored from wreg
  4465  000CB6  6E18               	movwf	escreve_caractere_lcd@data,c
  4466                           
  4467                           ;display_lcd.c: 326: PORTDbits.RD2 = 0;
  4468  000CB8  9483               	bcf	3971,2,c	;volatile
  4469                           
  4470                           ;display_lcd.c: 327: PORTDbits.RD1 = 1;
  4471  000CBA  8283               	bsf	3971,1,c	;volatile
  4472                           
  4473                           ;display_lcd.c: 328: PORTDbits.RD0 = 0;
  4474  000CBC  9083               	bcf	3971,0,c	;volatile
  4475                           
  4476                           ;display_lcd.c: 331: if(data&0b00010000){PORTDbits.RD4=1;}
  4477  000CBE  A818               	btfss	escreve_caractere_lcd@data,4,c
  4478  000CC0  D002               	goto	l681
  4479  000CC2  8883               	bsf	3971,4,c	;volatile
  4480  000CC4  D001               	goto	l7423
  4481  000CC6                     l681:
  4482                           
  4483                           ;display_lcd.c: 332: else {PORTDbits.RD4=0;}
  4484  000CC6  9883               	bcf	3971,4,c	;volatile
  4485  000CC8                     l7423:
  4486                           
  4487                           ;display_lcd.c: 333: if(data&0b00100000){PORTDbits.RD5=1;}
  4488  000CC8  AA18               	btfss	escreve_caractere_lcd@data,5,c
  4489  000CCA  D002               	goto	l683
  4490  000CCC  8A83               	bsf	3971,5,c	;volatile
  4491  000CCE  D001               	goto	l7427
  4492  000CD0                     l683:
  4493                           
  4494                           ;display_lcd.c: 334: else {PORTDbits.RD5=0;}
  4495  000CD0  9A83               	bcf	3971,5,c	;volatile
  4496  000CD2                     l7427:
  4497                           
  4498                           ;display_lcd.c: 335: if(data&0b01000000){PORTDbits.RD6=1;}
  4499  000CD2  AC18               	btfss	escreve_caractere_lcd@data,6,c
  4500  000CD4  D002               	goto	l685
  4501  000CD6  8C83               	bsf	3971,6,c	;volatile
  4502  000CD8  D001               	goto	l7431
  4503  000CDA                     l685:
  4504                           
  4505                           ;display_lcd.c: 336: else {PORTDbits.RD6=0;}
  4506  000CDA  9C83               	bcf	3971,6,c	;volatile
  4507  000CDC                     l7431:
  4508                           
  4509                           ;display_lcd.c: 337: if(data&0b10000000){PORTDbits.RD7=1;}
  4510  000CDC  AE18               	btfss	escreve_caractere_lcd@data,7,c
  4511  000CDE  D002               	goto	l687
  4512  000CE0  8E83               	bsf	3971,7,c	;volatile
  4513  000CE2  D001               	goto	l688
  4514  000CE4                     l687:
  4515                           
  4516                           ;display_lcd.c: 338: else {PORTDbits.RD7=0;}
  4517  000CE4  9E83               	bcf	3971,7,c	;volatile
  4518  000CE6                     l688:
  4519                           
  4520                           ;display_lcd.c: 341: PORTDbits.RD0 = 1;
  4521  000CE6  8083               	bsf	3971,0,c	;volatile
  4522                           
  4523                           ;display_lcd.c: 342: delay();
  4524  000CE8  EC8A  F008         	call	_delay	;wreg free
  4525                           
  4526                           ;display_lcd.c: 343: PORTDbits.RD0 = 0;
  4527  000CEC  9083               	bcf	3971,0,c	;volatile
  4528                           
  4529                           ;display_lcd.c: 344: delay();
  4530  000CEE  EC8A  F008         	call	_delay	;wreg free
  4531                           
  4532                           ;display_lcd.c: 348: if(data&0b00000001){PORTDbits.RD4=1;}
  4533  000CF2  A018               	btfss	escreve_caractere_lcd@data,0,c
  4534  000CF4  D002               	goto	l689
  4535  000CF6  8883               	bsf	3971,4,c	;volatile
  4536  000CF8  D001               	goto	l690
  4537  000CFA                     l689:
  4538                           
  4539                           ;display_lcd.c: 349: else {PORTDbits.RD4=0;}
  4540  000CFA  9883               	bcf	3971,4,c	;volatile
  4541  000CFC                     l690:
  4542                           
  4543                           ;display_lcd.c: 350: if(data&0b00000010){PORTDbits.RD5=1;}
  4544  000CFC  A218               	btfss	escreve_caractere_lcd@data,1,c
  4545  000CFE  D002               	goto	l691
  4546  000D00  8A83               	bsf	3971,5,c	;volatile
  4547  000D02  D001               	goto	l692
  4548  000D04                     l691:
  4549                           
  4550                           ;display_lcd.c: 351: else {PORTDbits.RD5=0;}
  4551  000D04  9A83               	bcf	3971,5,c	;volatile
  4552  000D06                     l692:
  4553                           
  4554                           ;display_lcd.c: 352: if(data&0b00000100){PORTDbits.RD6=1;}
  4555  000D06  A418               	btfss	escreve_caractere_lcd@data,2,c
  4556  000D08  D002               	goto	l693
  4557  000D0A  8C83               	bsf	3971,6,c	;volatile
  4558  000D0C  D001               	goto	l694
  4559  000D0E                     l693:
  4560                           
  4561                           ;display_lcd.c: 353: else {PORTDbits.RD6=0;}
  4562  000D0E  9C83               	bcf	3971,6,c	;volatile
  4563  000D10                     l694:
  4564                           
  4565                           ;display_lcd.c: 354: if(data&0b00001000){PORTDbits.RD7=1;}
  4566  000D10  A618               	btfss	escreve_caractere_lcd@data,3,c
  4567  000D12  D002               	goto	l695
  4568  000D14  8E83               	bsf	3971,7,c	;volatile
  4569  000D16  D001               	goto	l696
  4570  000D18                     l695:
  4571                           
  4572                           ;display_lcd.c: 355: else {PORTDbits.RD7=0;}
  4573  000D18  9E83               	bcf	3971,7,c	;volatile
  4574  000D1A                     l696:
  4575                           
  4576                           ;display_lcd.c: 358: PORTDbits.RD0 = 1;
  4577  000D1A  8083               	bsf	3971,0,c	;volatile
  4578                           
  4579                           ;display_lcd.c: 359: delay();
  4580  000D1C  EC8A  F008         	call	_delay	;wreg free
  4581                           
  4582                           ;display_lcd.c: 360: PORTDbits.RD0 = 0;
  4583  000D20  9083               	bcf	3971,0,c	;volatile
  4584                           
  4585                           ;display_lcd.c: 361: delay();
  4586  000D22  EC8A  F008         	call	_delay	;wreg free
  4587  000D26  0012               	return		;funcret
  4588  000D28                     __end_of_escreve_caractere_lcd:
  4589                           	opt stack 0
  4590                           tosu	equ	0xFFF
  4591                           tosh	equ	0xFFE
  4592                           tosl	equ	0xFFD
  4593                           pclath	equ	0xFFA
  4594                           tblptru	equ	0xFF8
  4595                           tblptrh	equ	0xFF7
  4596                           tblptrl	equ	0xFF6
  4597                           tablat	equ	0xFF5
  4598                           prodh	equ	0xFF4
  4599                           prodl	equ	0xFF3
  4600                           intcon	equ	0xFF2
  4601                           intcon2	equ	0xFF1
  4602                           intcon3	equ	0xFF0
  4603                           indf0	equ	0xFEF
  4604                           postinc0	equ	0xFEE
  4605                           fsr0h	equ	0xFEA
  4606                           fsr0l	equ	0xFE9
  4607                           wreg	equ	0xFE8
  4608                           indf1	equ	0xFE7
  4609                           postinc1	equ	0xFE6
  4610                           postdec1	equ	0xFE5
  4611                           fsr1h	equ	0xFE2
  4612                           fsr1l	equ	0xFE1
  4613                           indf2	equ	0xFDF
  4614                           postinc2	equ	0xFDE
  4615                           postdec2	equ	0xFDD
  4616                           fsr2h	equ	0xFDA
  4617                           fsr2l	equ	0xFD9
  4618                           status	equ	0xFD8
  4619                           
  4620 ;; *************** function _escreve_cmd_lcd *****************
  4621 ;; Defined at:
  4622 ;;		line 162 in file "bibliotecas/display_lcd.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  comando         1    wreg     unsigned char 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  comando         1   23[COMRAM] unsigned char 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  1    wreg      void 
  4629 ;; Registers used:
  4630 ;;		wreg, status,2, status,0, cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4636 ;;      Params:         0       0       0       0       0       0       0       0       0
  4637 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4638 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4639 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4640 ;;Total ram usage:        1 bytes
  4641 ;; Hardware stack levels used:    1
  4642 ;; Hardware stack levels required when called:    3
  4643 ;; This function calls:
  4644 ;;		_delay
  4645 ;; This function is called by:
  4646 ;;		_mensagem_inicial
  4647 ;;		_gps
  4648 ;;		_get_dt
  4649 ;;		_init_lcd
  4650 ;;		_SDCard
  4651 ;;		_inicializa_SPI
  4652 ;;		_leitura_chave
  4653 ;;		_disk_initialize
  4654 ;;		_cria_caractere_lcd
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text25
  4659  000B20                     __ptext25:
  4660                           	opt stack 0
  4661  000B20                     _escreve_cmd_lcd:
  4662                           	opt stack 26
  4663                           
  4664                           ;incstack = 0
  4665                           ;escreve_cmd_lcd@comando stored from wreg
  4666  000B20  6E18               	movwf	escreve_cmd_lcd@comando,c
  4667                           
  4668                           ;display_lcd.c: 165: PORTDbits.RD2 = 0;
  4669  000B22  9483               	bcf	3971,2,c	;volatile
  4670                           
  4671                           ;display_lcd.c: 166: PORTDbits.RD1 = 0;
  4672  000B24  9283               	bcf	3971,1,c	;volatile
  4673                           
  4674                           ;display_lcd.c: 167: PORTDbits.RD0 = 0;
  4675  000B26  9083               	bcf	3971,0,c	;volatile
  4676                           
  4677                           ;display_lcd.c: 170: if(comando&0b00010000){PORTDbits.RD4=1;}
  4678  000B28  A818               	btfss	escreve_cmd_lcd@comando,4,c
  4679  000B2A  D002               	goto	l630
  4680  000B2C  8883               	bsf	3971,4,c	;volatile
  4681  000B2E  D001               	goto	l7557
  4682  000B30                     l630:
  4683                           
  4684                           ;display_lcd.c: 171: else {PORTDbits.RD4=0;}
  4685  000B30  9883               	bcf	3971,4,c	;volatile
  4686  000B32                     l7557:
  4687                           
  4688                           ;display_lcd.c: 172: if(comando&0b00100000){PORTDbits.RD5=1;}
  4689  000B32  AA18               	btfss	escreve_cmd_lcd@comando,5,c
  4690  000B34  D002               	goto	l632
  4691  000B36  8A83               	bsf	3971,5,c	;volatile
  4692  000B38  D001               	goto	l7561
  4693  000B3A                     l632:
  4694                           
  4695                           ;display_lcd.c: 173: else {PORTDbits.RD5=0;}
  4696  000B3A  9A83               	bcf	3971,5,c	;volatile
  4697  000B3C                     l7561:
  4698                           
  4699                           ;display_lcd.c: 174: if(comando&0b01000000){PORTDbits.RD6=1;}
  4700  000B3C  AC18               	btfss	escreve_cmd_lcd@comando,6,c
  4701  000B3E  D002               	goto	l634
  4702  000B40  8C83               	bsf	3971,6,c	;volatile
  4703  000B42  D001               	goto	l7565
  4704  000B44                     l634:
  4705                           
  4706                           ;display_lcd.c: 175: else {PORTDbits.RD6=0;}
  4707  000B44  9C83               	bcf	3971,6,c	;volatile
  4708  000B46                     l7565:
  4709                           
  4710                           ;display_lcd.c: 176: if(comando&0b10000000){PORTDbits.RD7=1;}
  4711  000B46  AE18               	btfss	escreve_cmd_lcd@comando,7,c
  4712  000B48  D002               	goto	l636
  4713  000B4A  8E83               	bsf	3971,7,c	;volatile
  4714  000B4C  D001               	goto	l637
  4715  000B4E                     l636:
  4716                           
  4717                           ;display_lcd.c: 177: else {PORTDbits.RD7=0;}
  4718  000B4E  9E83               	bcf	3971,7,c	;volatile
  4719  000B50                     l637:
  4720                           
  4721                           ;display_lcd.c: 180: PORTDbits.RD0 = 1;
  4722  000B50  8083               	bsf	3971,0,c	;volatile
  4723                           
  4724                           ;display_lcd.c: 181: delay();
  4725  000B52  EC8A  F008         	call	_delay	;wreg free
  4726                           
  4727                           ;display_lcd.c: 182: PORTDbits.RD0 = 0;
  4728  000B56  9083               	bcf	3971,0,c	;volatile
  4729                           
  4730                           ;display_lcd.c: 183: delay();
  4731  000B58  EC8A  F008         	call	_delay	;wreg free
  4732                           
  4733                           ;display_lcd.c: 186: if(comando&0b00000001){PORTDbits.RD4=1;}
  4734  000B5C  A018               	btfss	escreve_cmd_lcd@comando,0,c
  4735  000B5E  D002               	goto	l638
  4736  000B60  8883               	bsf	3971,4,c	;volatile
  4737  000B62  D001               	goto	l639
  4738  000B64                     l638:
  4739                           
  4740                           ;display_lcd.c: 187: else {PORTDbits.RD4=0;}
  4741  000B64  9883               	bcf	3971,4,c	;volatile
  4742  000B66                     l639:
  4743                           
  4744                           ;display_lcd.c: 188: if(comando&0b00000010){PORTDbits.RD5=1;}
  4745  000B66  A218               	btfss	escreve_cmd_lcd@comando,1,c
  4746  000B68  D002               	goto	l640
  4747  000B6A  8A83               	bsf	3971,5,c	;volatile
  4748  000B6C  D001               	goto	l641
  4749  000B6E                     l640:
  4750                           
  4751                           ;display_lcd.c: 189: else {PORTDbits.RD5=0;}
  4752  000B6E  9A83               	bcf	3971,5,c	;volatile
  4753  000B70                     l641:
  4754                           
  4755                           ;display_lcd.c: 190: if(comando&0b00000100){PORTDbits.RD6=1;}
  4756  000B70  A418               	btfss	escreve_cmd_lcd@comando,2,c
  4757  000B72  D002               	goto	l642
  4758  000B74  8C83               	bsf	3971,6,c	;volatile
  4759  000B76  D001               	goto	l643
  4760  000B78                     l642:
  4761                           
  4762                           ;display_lcd.c: 191: else {PORTDbits.RD6=0;}
  4763  000B78  9C83               	bcf	3971,6,c	;volatile
  4764  000B7A                     l643:
  4765                           
  4766                           ;display_lcd.c: 192: if(comando&0b00001000){PORTDbits.RD7=1;}
  4767  000B7A  A618               	btfss	escreve_cmd_lcd@comando,3,c
  4768  000B7C  D002               	goto	l644
  4769  000B7E  8E83               	bsf	3971,7,c	;volatile
  4770  000B80  D001               	goto	l645
  4771  000B82                     l644:
  4772                           
  4773                           ;display_lcd.c: 193: else {PORTDbits.RD7=0;}
  4774  000B82  9E83               	bcf	3971,7,c	;volatile
  4775  000B84                     l645:
  4776                           
  4777                           ;display_lcd.c: 196: PORTDbits.RD0 = 1;
  4778  000B84  8083               	bsf	3971,0,c	;volatile
  4779                           
  4780                           ;display_lcd.c: 197: delay();
  4781  000B86  EC8A  F008         	call	_delay	;wreg free
  4782                           
  4783                           ;display_lcd.c: 198: PORTDbits.RD0 = 0;
  4784  000B8A  9083               	bcf	3971,0,c	;volatile
  4785                           
  4786                           ;display_lcd.c: 199: delay();
  4787  000B8C  EC8A  F008         	call	_delay	;wreg free
  4788                           
  4789                           ;display_lcd.c: 204: if (comando==0x01 || comando==0x02 || comando==0x03)
  4790  000B90  0418               	decf	escreve_cmd_lcd@comando,w,c
  4791  000B92  B4D8               	btfsc	status,2,c
  4792  000B94  D008               	goto	l7593
  4793  000B96  0E02               	movlw	2
  4794  000B98  1818               	xorwf	escreve_cmd_lcd@comando,w,c
  4795  000B9A  B4D8               	btfsc	status,2,c
  4796  000B9C  D004               	goto	l7593
  4797  000B9E  0E03               	movlw	3
  4798  000BA0  1818               	xorwf	escreve_cmd_lcd@comando,w,c
  4799  000BA2  A4D8               	btfss	status,2,c
  4800  000BA4  0012               	return	
  4801  000BA6                     l7593:
  4802                           
  4803                           ;display_lcd.c: 205: { delay(); }
  4804  000BA6  EC8A  F008         	call	_delay	;wreg free
  4805  000BAA  0012               	return	
  4806  000BAC                     __end_of_escreve_cmd_lcd:
  4807                           	opt stack 0
  4808                           tosu	equ	0xFFF
  4809                           tosh	equ	0xFFE
  4810                           tosl	equ	0xFFD
  4811                           pclath	equ	0xFFA
  4812                           tblptru	equ	0xFF8
  4813                           tblptrh	equ	0xFF7
  4814                           tblptrl	equ	0xFF6
  4815                           tablat	equ	0xFF5
  4816                           prodh	equ	0xFF4
  4817                           prodl	equ	0xFF3
  4818                           intcon	equ	0xFF2
  4819                           intcon2	equ	0xFF1
  4820                           intcon3	equ	0xFF0
  4821                           indf0	equ	0xFEF
  4822                           postinc0	equ	0xFEE
  4823                           fsr0h	equ	0xFEA
  4824                           fsr0l	equ	0xFE9
  4825                           wreg	equ	0xFE8
  4826                           indf1	equ	0xFE7
  4827                           postinc1	equ	0xFE6
  4828                           postdec1	equ	0xFE5
  4829                           fsr1h	equ	0xFE2
  4830                           fsr1l	equ	0xFE1
  4831                           indf2	equ	0xFDF
  4832                           postinc2	equ	0xFDE
  4833                           postdec2	equ	0xFDD
  4834                           fsr2h	equ	0xFDA
  4835                           fsr2l	equ	0xFD9
  4836                           status	equ	0xFD8
  4837                           
  4838 ;; *************** function _delay *****************
  4839 ;; Defined at:
  4840 ;;		line 45 in file "bibliotecas/display_lcd.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;		None
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  contador_int    1   22[COMRAM] unsigned char 
  4845 ;;  contador_ext    1   21[COMRAM] unsigned char 
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      void 
  4848 ;; Registers used:
  4849 ;;		wreg, status,2, status,0
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4855 ;;      Params:         0       0       0       0       0       0       0       0       0
  4856 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4857 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4858 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4859 ;;Total ram usage:        2 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; Hardware stack levels required when called:    2
  4862 ;; This function calls:
  4863 ;;		Nothing
  4864 ;; This function is called by:
  4865 ;;		_init_lcd
  4866 ;;		_escreve_cmd_lcd
  4867 ;;		_endereco_cursor_lcd
  4868 ;;		_escreve_caractere_lcd
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           	psect	text26
  4873  001114                     __ptext26:
  4874                           	opt stack 0
  4875  001114                     _delay:
  4876                           	opt stack 25
  4877                           
  4878                           ;display_lcd.c: 47: unsigned char contador_ext, contador_int;
  4879                           ;display_lcd.c: 49: for(contador_ext = 0; contador_ext<100; contador_ext++)
  4880                           
  4881                           ;incstack = 0
  4882  001114  0E00               	movlw	0
  4883  001116  6E16               	movwf	delay@contador_ext,c
  4884  001118                     l7367:
  4885  001118  0E63               	movlw	99
  4886  00111A  6416               	cpfsgt	delay@contador_ext,c
  4887  00111C  D001               	goto	l620
  4888  00111E  0012               	return	
  4889  001120                     l620:
  4890                           
  4891                           ;display_lcd.c: 50: {
  4892                           ;display_lcd.c: 51: __nop();
  4893  001120  F000               	nop	
  4894                           
  4895                           ;display_lcd.c: 52: for(contador_int = 0; contador_int<50; contador_int++)
  4896  001122  0E00               	movlw	0
  4897  001124  6E17               	movwf	delay@contador_int,c
  4898  001126                     l7373:
  4899  001126  0E31               	movlw	49
  4900  001128  6417               	cpfsgt	delay@contador_int,c
  4901  00112A  D001               	goto	l622
  4902  00112C  D003               	goto	l7381
  4903  00112E                     l622:
  4904                           
  4905                           ;display_lcd.c: 53: {
  4906                           ;display_lcd.c: 54: __nop();
  4907  00112E  F000               	nop	
  4908  001130  2A17               	incf	delay@contador_int,f,c
  4909  001132  D7F9               	goto	l7373
  4910  001134                     l7381:
  4911  001134  2A16               	incf	delay@contador_ext,f,c
  4912  001136  D7F0               	goto	l7367
  4913  001138                     __end_of_delay:
  4914                           	opt stack 0
  4915                           tosu	equ	0xFFF
  4916                           tosh	equ	0xFFE
  4917                           tosl	equ	0xFFD
  4918                           pclath	equ	0xFFA
  4919                           tblptru	equ	0xFF8
  4920                           tblptrh	equ	0xFF7
  4921                           tblptrl	equ	0xFF6
  4922                           tablat	equ	0xFF5
  4923                           prodh	equ	0xFF4
  4924                           prodl	equ	0xFF3
  4925                           intcon	equ	0xFF2
  4926                           intcon2	equ	0xFF1
  4927                           intcon3	equ	0xFF0
  4928                           indf0	equ	0xFEF
  4929                           postinc0	equ	0xFEE
  4930                           fsr0h	equ	0xFEA
  4931                           fsr0l	equ	0xFE9
  4932                           wreg	equ	0xFE8
  4933                           indf1	equ	0xFE7
  4934                           postinc1	equ	0xFE6
  4935                           postdec1	equ	0xFE5
  4936                           fsr1h	equ	0xFE2
  4937                           fsr1l	equ	0xFE1
  4938                           indf2	equ	0xFDF
  4939                           postinc2	equ	0xFDE
  4940                           postdec2	equ	0xFDD
  4941                           fsr2h	equ	0xFDA
  4942                           fsr2l	equ	0xFD9
  4943                           status	equ	0xFD8
  4944                           
  4945 ;; *************** function _atol *****************
  4946 ;; Defined at:
  4947 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\atol.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;  s               2   33[COMRAM] PTR const unsigned char 
  4950 ;;		 -> get_dt@dado_buffer(12), get_gpstime@time_buffer(15), 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;  a               4   42[COMRAM] long 
  4953 ;;  c               1   46[COMRAM] unsigned char 
  4954 ;;  sign            1   41[COMRAM] unsigned char 
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  4   33[COMRAM] long 
  4957 ;; Registers used:
  4958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4964 ;;      Params:         4       0       0       0       0       0       0       0       0
  4965 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4966 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4967 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4968 ;;Total ram usage:       14 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:    3
  4971 ;; This function calls:
  4972 ;;		___lmul
  4973 ;;		_isdigit
  4974 ;; This function is called by:
  4975 ;;		_get_dt
  4976 ;;		_get_gpstime
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text27
  4981  000614                     __ptext27:
  4982                           	opt stack 0
  4983  000614                     _atol:
  4984                           	opt stack 24
  4985  000614  C022  FFD9         	movff	atol@s,fsr2l
  4986  000618  C023  FFDA         	movff	atol@s+1,fsr2h
  4987  00061C  50DF               	movf	indf2,w,c
  4988  00061E  6E2F               	movwf	atol@c,c
  4989  000620  4A22               	infsnz	atol@s,f,c
  4990  000622  2A23               	incf	atol@s+1,f,c
  4991  000624  0E20               	movlw	32
  4992  000626  182F               	xorwf	atol@c,w,c
  4993  000628  B4D8               	btfsc	status,2,c
  4994  00062A  D7F4               	goto	l7595
  4995  00062C  0E09               	movlw	9
  4996  00062E  182F               	xorwf	atol@c,w,c
  4997  000630  B4D8               	btfsc	status,2,c
  4998  000632  D7F0               	goto	l7595
  4999  000634  0E00               	movlw	0
  5000  000636  6E2B               	movwf	atol@a,c
  5001  000638  0E00               	movlw	0
  5002  00063A  6E2C               	movwf	atol@a+1,c
  5003  00063C  0E00               	movlw	0
  5004  00063E  6E2D               	movwf	atol@a+2,c
  5005  000640  0E00               	movlw	0
  5006  000642  6E2E               	movwf	atol@a+3,c
  5007  000644  0E00               	movlw	0
  5008  000646  6E2A               	movwf	atol@sign,c
  5009  000648  0E2D               	movlw	45
  5010  00064A  182F               	xorwf	atol@c,w,c
  5011  00064C  A4D8               	btfss	status,2,c
  5012  00064E  D005               	goto	l7613
  5013  000650  2A2A               	incf	atol@sign,f,c
  5014  000652  D02A               	goto	l7621
  5015  000654                     l7611:
  5016  000654  4A22               	infsnz	atol@s,f,c
  5017  000656  2A23               	incf	atol@s+1,f,c
  5018  000658  D02E               	goto	l7625
  5019  00065A                     l7613:
  5020  00065A  0E2B               	movlw	43
  5021  00065C  182F               	xorwf	atol@c,w,c
  5022  00065E  A4D8               	btfss	status,2,c
  5023  000660  D02A               	goto	l7625
  5024  000662  D022               	goto	l7621
  5025  000664                     l7619:
  5026  000664  C02B  F016         	movff	atol@a,___lmul@multiplier
  5027  000668  C02C  F017         	movff	atol@a+1,___lmul@multiplier+1
  5028  00066C  C02D  F018         	movff	atol@a+2,___lmul@multiplier+2
  5029  000670  C02E  F019         	movff	atol@a+3,___lmul@multiplier+3
  5030  000674  0E0A               	movlw	10
  5031  000676  6E1A               	movwf	___lmul@multiplicand,c
  5032  000678  0E00               	movlw	0
  5033  00067A  6E1B               	movwf	___lmul@multiplicand+1,c
  5034  00067C  0E00               	movlw	0
  5035  00067E  6E1C               	movwf	___lmul@multiplicand+2,c
  5036  000680  0E00               	movlw	0
  5037  000682  6E1D               	movwf	___lmul@multiplicand+3,c
  5038  000684  EC66  F007         	call	___lmul	;wreg free
  5039  000688  C02F  F026         	movff	atol@c,??_atol
  5040  00068C  0ED0               	movlw	208
  5041  00068E  2626               	addwf	??_atol,f,c
  5042  000690  5026               	movf	??_atol,w,c
  5043  000692  2416               	addwf	?___lmul,w,c
  5044  000694  6E2B               	movwf	atol@a,c
  5045  000696  0E00               	movlw	0
  5046  000698  2017               	addwfc	?___lmul+1,w,c
  5047  00069A  6E2C               	movwf	atol@a+1,c
  5048  00069C  0E00               	movlw	0
  5049  00069E  2018               	addwfc	?___lmul+2,w,c
  5050  0006A0  6E2D               	movwf	atol@a+2,c
  5051  0006A2  0E00               	movlw	0
  5052  0006A4  2019               	addwfc	?___lmul+3,w,c
  5053  0006A6  6E2E               	movwf	atol@a+3,c
  5054  0006A8                     l7621:
  5055  0006A8  C022  FFD9         	movff	atol@s,fsr2l
  5056  0006AC  C023  FFDA         	movff	atol@s+1,fsr2h
  5057  0006B0  50DF               	movf	indf2,w,c
  5058  0006B2  6E2F               	movwf	atol@c,c
  5059  0006B4  D7CF               	goto	l7611
  5060  0006B6                     l7625:
  5061  0006B6  502F               	movf	atol@c,w,c
  5062  0006B8  ECAD  F008         	call	_isdigit
  5063  0006BC  B0D8               	btfsc	status,0,c
  5064  0006BE  D7D2               	goto	l7619
  5065  0006C0  502A               	movf	atol@sign,w,c
  5066  0006C2  B4D8               	btfsc	status,2,c
  5067  0006C4  D01A               	goto	l1487
  5068  0006C6  C02B  F026         	movff	atol@a,??_atol
  5069  0006CA  C02C  F027         	movff	atol@a+1,??_atol+1
  5070  0006CE  C02D  F028         	movff	atol@a+2,??_atol+2
  5071  0006D2  C02E  F029         	movff	atol@a+3,??_atol+3
  5072  0006D6  1E26               	comf	??_atol,f,c
  5073  0006D8  1E27               	comf	??_atol+1,f,c
  5074  0006DA  1E28               	comf	??_atol+2,f,c
  5075  0006DC  1E29               	comf	??_atol+3,f,c
  5076  0006DE  2A26               	incf	??_atol,f,c
  5077  0006E0  0E00               	movlw	0
  5078  0006E2  2227               	addwfc	??_atol+1,f,c
  5079  0006E4  2228               	addwfc	??_atol+2,f,c
  5080  0006E6  2229               	addwfc	??_atol+3,f,c
  5081  0006E8  C026  F022         	movff	??_atol,?_atol
  5082  0006EC  C027  F023         	movff	??_atol+1,?_atol+1
  5083  0006F0  C028  F024         	movff	??_atol+2,?_atol+2
  5084  0006F4  C029  F025         	movff	??_atol+3,?_atol+3
  5085  0006F8  0012               	return	
  5086  0006FA                     l1487:
  5087  0006FA  C02B  F022         	movff	atol@a,?_atol
  5088  0006FE  C02C  F023         	movff	atol@a+1,?_atol+1
  5089  000702  C02D  F024         	movff	atol@a+2,?_atol+2
  5090  000706  C02E  F025         	movff	atol@a+3,?_atol+3
  5091  00070A  0012               	return		;funcret
  5092  00070C                     __end_of_atol:
  5093                           	opt stack 0
  5094                           tosu	equ	0xFFF
  5095                           tosh	equ	0xFFE
  5096                           tosl	equ	0xFFD
  5097                           pclath	equ	0xFFA
  5098                           tblptru	equ	0xFF8
  5099                           tblptrh	equ	0xFF7
  5100                           tblptrl	equ	0xFF6
  5101                           tablat	equ	0xFF5
  5102                           prodh	equ	0xFF4
  5103                           prodl	equ	0xFF3
  5104                           intcon	equ	0xFF2
  5105                           intcon2	equ	0xFF1
  5106                           intcon3	equ	0xFF0
  5107                           indf0	equ	0xFEF
  5108                           postinc0	equ	0xFEE
  5109                           fsr0h	equ	0xFEA
  5110                           fsr0l	equ	0xFE9
  5111                           wreg	equ	0xFE8
  5112                           indf1	equ	0xFE7
  5113                           postinc1	equ	0xFE6
  5114                           postdec1	equ	0xFE5
  5115                           fsr1h	equ	0xFE2
  5116                           fsr1l	equ	0xFE1
  5117                           indf2	equ	0xFDF
  5118                           postinc2	equ	0xFDE
  5119                           postdec2	equ	0xFDD
  5120                           fsr2h	equ	0xFDA
  5121                           fsr2l	equ	0xFD9
  5122                           status	equ	0xFD8
  5123                           
  5124 ;; *************** function _isdigit *****************
  5125 ;; Defined at:
  5126 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;  c               1    wreg     unsigned char 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  c               1   23[COMRAM] unsigned char 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;		None               void
  5133 ;; Registers used:
  5134 ;;		wreg, status,2, status,0
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5140 ;;      Params:         0       0       0       0       0       0       0       0       0
  5141 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5142 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5143 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5144 ;;Total ram usage:        3 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:    2
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_atol
  5151 ;;		_strtod
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           	psect	text28
  5156  00115A                     __ptext28:
  5157                           	opt stack 0
  5158  00115A                     _isdigit:
  5159                           	opt stack 24
  5160                           
  5161                           ;incstack = 0
  5162                           ;isdigit@c stored from wreg
  5163  00115A  6E18               	movwf	isdigit@c,c
  5164  00115C  0E00               	movlw	0
  5165  00115E  6E17               	movwf	_isdigit$2783,c
  5166  001160  0E3A               	movlw	58
  5167  001162  6018               	cpfslt	isdigit@c,c
  5168  001164  D005               	goto	l7471
  5169  001166  0E2F               	movlw	47
  5170  001168  6418               	cpfsgt	isdigit@c,c
  5171  00116A  D002               	goto	l7471
  5172  00116C  0E01               	movlw	1
  5173  00116E  6E17               	movwf	_isdigit$2783,c
  5174  001170                     l7471:
  5175  001170  C017  F016         	movff	_isdigit$2783,??_isdigit
  5176  001174  3016               	rrcf	??_isdigit,w,c
  5177  001176  0012               	return	
  5178  001178                     __end_of_isdigit:
  5179                           	opt stack 0
  5180                           tosu	equ	0xFFF
  5181                           tosh	equ	0xFFE
  5182                           tosl	equ	0xFFD
  5183                           pclath	equ	0xFFA
  5184                           tblptru	equ	0xFF8
  5185                           tblptrh	equ	0xFF7
  5186                           tblptrl	equ	0xFF6
  5187                           tablat	equ	0xFF5
  5188                           prodh	equ	0xFF4
  5189                           prodl	equ	0xFF3
  5190                           intcon	equ	0xFF2
  5191                           intcon2	equ	0xFF1
  5192                           intcon3	equ	0xFF0
  5193                           indf0	equ	0xFEF
  5194                           postinc0	equ	0xFEE
  5195                           fsr0h	equ	0xFEA
  5196                           fsr0l	equ	0xFE9
  5197                           wreg	equ	0xFE8
  5198                           indf1	equ	0xFE7
  5199                           postinc1	equ	0xFE6
  5200                           postdec1	equ	0xFE5
  5201                           fsr1h	equ	0xFE2
  5202                           fsr1l	equ	0xFE1
  5203                           indf2	equ	0xFDF
  5204                           postinc2	equ	0xFDE
  5205                           postdec2	equ	0xFDD
  5206                           fsr2h	equ	0xFDA
  5207                           fsr2l	equ	0xFD9
  5208                           status	equ	0xFD8
  5209                           
  5210 ;; *************** function _convert_to_date *****************
  5211 ;; Defined at:
  5212 ;;		line 229 in file "bibliotecas/GPS.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;  dt              4    0[BANK0 ] unsigned long 
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;  temp            4    6[BANK2 ] unsigned long 
  5217 ;;  dia             2    4[BANK2 ] unsigned int 
  5218 ;;  ano             2    2[BANK2 ] unsigned int 
  5219 ;;  mes             2    0[BANK2 ] unsigned int 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5229 ;;      Params:         0       4       0       0       0       0       0       0       0
  5230 ;;      Locals:         0       0       0      10       0       0       0       0       0
  5231 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5232 ;;      Totals:         0       8       0      10       0       0       0       0       0
  5233 ;;Total ram usage:       18 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:    4
  5236 ;; This function calls:
  5237 ;;		___lldiv
  5238 ;;		___lmul
  5239 ;;		___wmul
  5240 ;;		_sprintf
  5241 ;; This function is called by:
  5242 ;;		_gps
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           	psect	text29
  5247  00015A                     __ptext29:
  5248                           	opt stack 0
  5249  00015A                     _convert_to_date:
  5250                           	opt stack 24
  5251                           
  5252                           ;GPS.c: 231: unsigned int dia, mes, ano;
  5253                           ;GPS.c: 232: dia = dt/10000;
  5254                           
  5255                           ;incstack = 0
  5256  00015A  C0F5  F016         	movff	convert_to_date@dt,___lldiv@dividend
  5257  00015E  C0F6  F017         	movff	convert_to_date@dt+1,___lldiv@dividend+1
  5258  000162  C0F7  F018         	movff	convert_to_date@dt+2,___lldiv@dividend+2
  5259  000166  C0F8  F019         	movff	convert_to_date@dt+3,___lldiv@dividend+3
  5260  00016A  0E10               	movlw	16
  5261  00016C  6E1A               	movwf	___lldiv@divisor,c
  5262  00016E  0E27               	movlw	39
  5263  000170  6E1B               	movwf	___lldiv@divisor+1,c
  5264  000172  0E00               	movlw	0
  5265  000174  6E1C               	movwf	___lldiv@divisor+2,c
  5266  000176  0E00               	movlw	0
  5267  000178  6E1D               	movwf	___lldiv@divisor+3,c
  5268  00017A  EC1A  F006         	call	___lldiv	;wreg free
  5269  00017E  C016  F204         	movff	?___lldiv,convert_to_date@dia
  5270  000182  C017  F205         	movff	?___lldiv+1,convert_to_date@dia+1
  5271                           
  5272                           ;GPS.c: 233: unsigned long int temp = dia * 10000;
  5273  000186  C204  F016         	movff	convert_to_date@dia,___wmul@multiplier
  5274  00018A  C205  F017         	movff	convert_to_date@dia+1,___wmul@multiplier+1
  5275  00018E  0E27               	movlw	39
  5276  000190  6E19               	movwf	___wmul@multiplicand+1,c
  5277  000192  0E10               	movlw	16
  5278  000194  6E18               	movwf	___wmul@multiplicand,c
  5279  000196  EC77  F008         	call	___wmul	;wreg free
  5280  00019A  C016  F206         	movff	?___wmul,convert_to_date@temp
  5281  00019E  C017  F207         	movff	?___wmul+1,convert_to_date@temp+1
  5282  0001A2  0102               	movlb	2	; () banked
  5283  0001A4  6B08               	clrf	(convert_to_date@temp+2)& (0+255),b
  5284  0001A6  6B09               	clrf	(convert_to_date@temp+3)& (0+255),b
  5285                           
  5286                           ; BSR set to: 2
  5287                           ;GPS.c: 234: mes = (dt - temp) / 100 ;
  5288  0001A8  C206  F0F9         	movff	convert_to_date@temp,??_convert_to_date
  5289  0001AC  C207  F0FA         	movff	convert_to_date@temp+1,??_convert_to_date+1
  5290  0001B0  C208  F0FB         	movff	convert_to_date@temp+2,??_convert_to_date+2
  5291  0001B4  C209  F0FC         	movff	convert_to_date@temp+3,??_convert_to_date+3
  5292  0001B8  0100               	movlb	0	; () banked
  5293  0001BA  1FF9               	comf	??_convert_to_date& (0+255),f,b
  5294  0001BC  1FFA               	comf	(??_convert_to_date+1)& (0+255),f,b
  5295  0001BE  1FFB               	comf	(??_convert_to_date+2)& (0+255),f,b
  5296  0001C0  1FFC               	comf	(??_convert_to_date+3)& (0+255),f,b
  5297  0001C2  2BF9               	incf	??_convert_to_date& (0+255),f,b
  5298  0001C4  0E00               	movlw	0
  5299  0001C6  23FA               	addwfc	(??_convert_to_date+1)& (0+255),f,b
  5300  0001C8  23FB               	addwfc	(??_convert_to_date+2)& (0+255),f,b
  5301  0001CA  23FC               	addwfc	(??_convert_to_date+3)& (0+255),f,b
  5302  0001CC  0100               	movlb	0	; () banked
  5303  0001CE  51F5               	movf	convert_to_date@dt& (0+255),w,b
  5304  0001D0  0100               	movlb	0	; () banked
  5305  0001D2  25F9               	addwf	??_convert_to_date& (0+255),w,b
  5306  0001D4  6E16               	movwf	___lldiv@dividend,c
  5307  0001D6  0100               	movlb	0	; () banked
  5308  0001D8  51F6               	movf	(convert_to_date@dt+1)& (0+255),w,b
  5309  0001DA  0100               	movlb	0	; () banked
  5310  0001DC  21FA               	addwfc	(??_convert_to_date+1)& (0+255),w,b
  5311  0001DE  6E17               	movwf	___lldiv@dividend+1,c
  5312  0001E0  0100               	movlb	0	; () banked
  5313  0001E2  51F7               	movf	(convert_to_date@dt+2)& (0+255),w,b
  5314  0001E4  0100               	movlb	0	; () banked
  5315  0001E6  21FB               	addwfc	(??_convert_to_date+2)& (0+255),w,b
  5316  0001E8  6E18               	movwf	___lldiv@dividend+2,c
  5317  0001EA  0100               	movlb	0	; () banked
  5318  0001EC  51F8               	movf	(convert_to_date@dt+3)& (0+255),w,b
  5319  0001EE  0100               	movlb	0	; () banked
  5320  0001F0  21FC               	addwfc	(??_convert_to_date+3)& (0+255),w,b
  5321  0001F2  6E19               	movwf	___lldiv@dividend+3,c
  5322  0001F4  0E64               	movlw	100
  5323  0001F6  6E1A               	movwf	___lldiv@divisor,c
  5324  0001F8  0E00               	movlw	0
  5325  0001FA  6E1B               	movwf	___lldiv@divisor+1,c
  5326  0001FC  0E00               	movlw	0
  5327  0001FE  6E1C               	movwf	___lldiv@divisor+2,c
  5328  000200  0E00               	movlw	0
  5329  000202  6E1D               	movwf	___lldiv@divisor+3,c
  5330  000204  EC1A  F006         	call	___lldiv	;wreg free
  5331  000208  C016  F200         	movff	?___lldiv,convert_to_date@mes
  5332  00020C  C017  F201         	movff	?___lldiv+1,convert_to_date@mes+1
  5333                           
  5334                           ;GPS.c: 235: temp = dt * 100;
  5335  000210  C0F5  F016         	movff	convert_to_date@dt,___lmul@multiplier
  5336  000214  C0F6  F017         	movff	convert_to_date@dt+1,___lmul@multiplier+1
  5337  000218  C0F7  F018         	movff	convert_to_date@dt+2,___lmul@multiplier+2
  5338  00021C  C0F8  F019         	movff	convert_to_date@dt+3,___lmul@multiplier+3
  5339  000220  0E64               	movlw	100
  5340  000222  6E1A               	movwf	___lmul@multiplicand,c
  5341  000224  0E00               	movlw	0
  5342  000226  6E1B               	movwf	___lmul@multiplicand+1,c
  5343  000228  0E00               	movlw	0
  5344  00022A  6E1C               	movwf	___lmul@multiplicand+2,c
  5345  00022C  0E00               	movlw	0
  5346  00022E  6E1D               	movwf	___lmul@multiplicand+3,c
  5347  000230  EC66  F007         	call	___lmul	;wreg free
  5348  000234  C016  F206         	movff	?___lmul,convert_to_date@temp
  5349  000238  C017  F207         	movff	?___lmul+1,convert_to_date@temp+1
  5350  00023C  C018  F208         	movff	?___lmul+2,convert_to_date@temp+2
  5351  000240  C019  F209         	movff	?___lmul+3,convert_to_date@temp+3
  5352                           
  5353                           ;GPS.c: 236: ano = dt - temp;
  5354  000244  C206  F0F9         	movff	convert_to_date@temp,??_convert_to_date
  5355  000248  C207  F0FA         	movff	convert_to_date@temp+1,??_convert_to_date+1
  5356  00024C  0100               	movlb	0	; () banked
  5357  00024E  1FF9               	comf	??_convert_to_date& (0+255),f,b
  5358  000250  1FFA               	comf	(??_convert_to_date+1)& (0+255),f,b
  5359  000252  4BF9               	infsnz	??_convert_to_date& (0+255),f,b
  5360  000254  2BFA               	incf	(??_convert_to_date+1)& (0+255),f,b
  5361  000256  0100               	movlb	0	; () banked
  5362  000258  51F5               	movf	convert_to_date@dt& (0+255),w,b
  5363  00025A  0100               	movlb	0	; () banked
  5364  00025C  25F9               	addwf	??_convert_to_date& (0+255),w,b
  5365  00025E  0102               	movlb	2	; () banked
  5366  000260  6F02               	movwf	convert_to_date@ano& (0+255),b
  5367  000262  0100               	movlb	0	; () banked
  5368  000264  51F6               	movf	(convert_to_date@dt+1)& (0+255),w,b
  5369  000266  0100               	movlb	0	; () banked
  5370  000268  21FA               	addwfc	(??_convert_to_date+1)& (0+255),w,b
  5371  00026A  0102               	movlb	2	; () banked
  5372  00026C  6F03               	movwf	(convert_to_date@ano+1)& (0+255),b
  5373                           
  5374                           ; BSR set to: 2
  5375                           ;GPS.c: 237: sprintf(dt_buffer, "%d/%d/%d", dia,mes,ano);
  5376  00026E  0ED7               	movlw	low _dt_buffer
  5377  000270  6E22               	movwf	sprintf@sp,c
  5378  000272  0E00               	movlw	high _dt_buffer
  5379  000274  6E23               	movwf	sprintf@sp+1,c
  5380  000276  0E4C               	movlw	low STR_4
  5381  000278  6E24               	movwf	sprintf@f,c
  5382  00027A  0E62               	movlw	high STR_4
  5383  00027C  6E25               	movwf	sprintf@f+1,c
  5384  00027E  C204  F026         	movff	convert_to_date@dia,?_sprintf+4
  5385  000282  C205  F027         	movff	convert_to_date@dia+1,?_sprintf+5
  5386  000286  C200  F028         	movff	convert_to_date@mes,?_sprintf+6
  5387  00028A  C201  F029         	movff	convert_to_date@mes+1,?_sprintf+7
  5388  00028E  C202  F02A         	movff	convert_to_date@ano,?_sprintf+8
  5389  000292  C203  F02B         	movff	convert_to_date@ano+1,?_sprintf+9
  5390  000296  EC09  F000         	call	_sprintf	;wreg free
  5391  00029A  0012               	return		;funcret
  5392  00029C                     __end_of_convert_to_date:
  5393                           	opt stack 0
  5394                           tosu	equ	0xFFF
  5395                           tosh	equ	0xFFE
  5396                           tosl	equ	0xFFD
  5397                           pclath	equ	0xFFA
  5398                           tblptru	equ	0xFF8
  5399                           tblptrh	equ	0xFF7
  5400                           tblptrl	equ	0xFF6
  5401                           tablat	equ	0xFF5
  5402                           prodh	equ	0xFF4
  5403                           prodl	equ	0xFF3
  5404                           intcon	equ	0xFF2
  5405                           intcon2	equ	0xFF1
  5406                           intcon3	equ	0xFF0
  5407                           indf0	equ	0xFEF
  5408                           postinc0	equ	0xFEE
  5409                           fsr0h	equ	0xFEA
  5410                           fsr0l	equ	0xFE9
  5411                           wreg	equ	0xFE8
  5412                           indf1	equ	0xFE7
  5413                           postinc1	equ	0xFE6
  5414                           postdec1	equ	0xFE5
  5415                           fsr1h	equ	0xFE2
  5416                           fsr1l	equ	0xFE1
  5417                           indf2	equ	0xFDF
  5418                           postinc2	equ	0xFDE
  5419                           postdec2	equ	0xFDD
  5420                           fsr2h	equ	0xFDA
  5421                           fsr2l	equ	0xFD9
  5422                           status	equ	0xFD8
  5423                           
  5424 ;; *************** function _sprintf *****************
  5425 ;; Defined at:
  5426 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;  sp              2   33[COMRAM] PTR unsigned char 
  5429 ;;		 -> data_buffer(15), dt_buffer(6), 
  5430 ;;  f               2   35[COMRAM] PTR const unsigned char 
  5431 ;;		 -> STR_4(9), STR_3(9), 
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;  tmpval          4    0        struct .
  5434 ;;  cp              3    0        PTR const unsigned char 
  5435 ;;  val             2   48[COMRAM] unsigned int 
  5436 ;;  ap              2   44[COMRAM] PTR void [1]
  5437 ;;		 -> ?_sprintf(2), 
  5438 ;;  len             2    0        unsigned int 
  5439 ;;  c               1   50[COMRAM] char 
  5440 ;;  prec            1   47[COMRAM] char 
  5441 ;;  flag            1   46[COMRAM] unsigned char 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  2   33[COMRAM] int 
  5444 ;; Registers used:
  5445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5451 ;;      Params:        10       0       0       0       0       0       0       0       0
  5452 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5453 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5454 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5455 ;;Total ram usage:       18 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:    3
  5458 ;; This function calls:
  5459 ;;		___lwdiv
  5460 ;;		___lwmod
  5461 ;; This function is called by:
  5462 ;;		_convert_to_date
  5463 ;;		_convert_time_to_utc
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text30
  5468  000012                     __ptext30:
  5469                           	opt stack 0
  5470  000012                     _sprintf:
  5471                           	opt stack 24
  5472                           
  5473                           ;doprnt.c: 494: va_list ap;
  5474                           ;doprnt.c: 499: signed char c;
  5475                           ;doprnt.c: 506: signed char prec;
  5476                           ;doprnt.c: 508: unsigned char flag;
  5477                           ;doprnt.c: 523: union {
  5478                           ;doprnt.c: 524: unsigned long vd;
  5479                           ;doprnt.c: 525: double integ;
  5480                           ;doprnt.c: 526: } tmpval;
  5481                           ;doprnt.c: 528: unsigned int val;
  5482                           ;doprnt.c: 529: unsigned len;
  5483                           ;doprnt.c: 530: const char * cp;
  5484                           ;doprnt.c: 533: *ap = __va_start();
  5485                           
  5486                           ;incstack = 0
  5487  000012  0E26               	movlw	low (?_sprintf+4)
  5488  000014  6E2D               	movwf	sprintf@ap,c
  5489  000016  0E00               	movlw	high (?_sprintf+4)
  5490  000018  6E2E               	movwf	sprintf@ap+1,c
  5491                           
  5492                           ;doprnt.c: 536: while(c = *f++) {
  5493  00001A  D08C               	goto	l7687
  5494  00001C                     l7635:
  5495                           
  5496                           ;doprnt.c: 538: if(c != '%')
  5497  00001C  0E25               	movlw	37
  5498  00001E  1833               	xorwf	sprintf@c,w,c
  5499  000020  B4D8               	btfsc	status,2,c
  5500  000022  D009               	goto	l7641
  5501                           
  5502                           ;doprnt.c: 540: {
  5503                           ;doprnt.c: 541: ((*sp++ = (c)));
  5504  000024  C022  FFD9         	movff	sprintf@sp,fsr2l
  5505  000028  C023  FFDA         	movff	sprintf@sp+1,fsr2h
  5506  00002C  C033  FFDF         	movff	sprintf@c,indf2
  5507  000030  4A22               	infsnz	sprintf@sp,f,c
  5508  000032  2A23               	incf	sprintf@sp+1,f,c
  5509                           
  5510                           ;doprnt.c: 542: continue;
  5511  000034  D07F               	goto	l7687
  5512  000036                     l7641:
  5513                           
  5514                           ;doprnt.c: 543: }
  5515                           ;doprnt.c: 548: flag = 0;
  5516  000036  0E00               	movlw	0
  5517  000038  6E2F               	movwf	sprintf@flag,c
  5518                           
  5519                           ;doprnt.c: 822: }
  5520                           
  5521                           ;doprnt.c: 813: continue;
  5522                           
  5523                           ;doprnt.c: 802: default:
  5524                           
  5525                           ;doprnt.c: 698: case 'i':
  5526                           ;doprnt.c: 699: break;
  5527                           
  5528                           ;doprnt.c: 697: case 'd':
  5529                           
  5530                           ;doprnt.c: 638: goto alldone;
  5531                           
  5532                           ;doprnt.c: 637: case 0:
  5533                           
  5534                           ;doprnt.c: 635: switch(c = *f++) {
  5535  00003A  C024  FFF6         	movff	sprintf@f,tblptrl
  5536  00003E  C025  FFF7         	movff	sprintf@f+1,tblptrh
  5537  000042  4A24               	infsnz	sprintf@f,f,c
  5538  000044  2A25               	incf	sprintf@f+1,f,c
  5539  000046                     	if	0	;tblptru may be non-zero
  5540  000046                     	endif
  5541  000046                     	if	0	;tblptru may be non-zero
  5542  000046                     	endif
  5543  000046  0008               	tblrd		*
  5544  000048  CFF5 F033          	movff	tablat,sprintf@c
  5545  00004C  5033               	movf	sprintf@c,w,c
  5546                           
  5547                           ; Switch size 1, requested type "space"
  5548                           ; Number of cases is 3, Range of values is 0 to 105
  5549                           ; switch strategies available:
  5550                           ; Name         Instructions Cycles
  5551                           ; simple_byte           10     6 (average)
  5552                           ;	Chosen strategy is simple_byte
  5553  00004E  0A00               	xorlw	0	; case 0
  5554  000050  B4D8               	btfsc	status,2,c
  5555  000052  D07C               	goto	l7689
  5556  000054  0A64               	xorlw	100	; case 100
  5557  000056  B4D8               	btfsc	status,2,c
  5558  000058  D003               	goto	l7647
  5559  00005A  0A0D               	xorlw	13	; case 105
  5560  00005C  A4D8               	btfss	status,2,c
  5561  00005E  D06A               	goto	l7687
  5562  000060                     l7647:
  5563                           
  5564                           ;doprnt.c: 1253: {
  5565                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5566  000060  C02D  FFD9         	movff	sprintf@ap,fsr2l
  5567  000064  C02E  FFDA         	movff	sprintf@ap+1,fsr2h
  5568  000068  CFDE F031          	movff	postinc2,sprintf@val
  5569  00006C  CFDD F032          	movff	postdec2,sprintf@val+1
  5570  000070  0E02               	movlw	2
  5571  000072  262D               	addwf	sprintf@ap,f,c
  5572  000074  0E00               	movlw	0
  5573  000076  222E               	addwfc	sprintf@ap+1,f,c
  5574                           
  5575                           ;doprnt.c: 1261: if((int)val < 0) {
  5576  000078  AE32               	btfss	sprintf@val+1,7,c
  5577  00007A  D006               	goto	l7657
  5578                           
  5579                           ;doprnt.c: 1262: flag |= 0x03;
  5580  00007C  0E03               	movlw	3
  5581  00007E  122F               	iorwf	sprintf@flag,f,c
  5582                           
  5583                           ;doprnt.c: 1263: val = -val;
  5584  000080  6C31               	negf	sprintf@val,c
  5585  000082  1E32               	comf	sprintf@val+1,f,c
  5586  000084  B0D8               	btfsc	status,0,c
  5587  000086  2A32               	incf	sprintf@val+1,f,c
  5588  000088                     l7657:
  5589                           
  5590                           ;doprnt.c: 1264: }
  5591                           ;doprnt.c: 1266: }
  5592                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5593  000088  0E01               	movlw	1
  5594  00008A  6E33               	movwf	sprintf@c,c
  5595  00008C                     l7659:
  5596  00008C  0E05               	movlw	5
  5597  00008E  1833               	xorwf	sprintf@c,w,c
  5598  000090  B4D8               	btfsc	status,2,c
  5599  000092  D012               	goto	l7671
  5600                           
  5601                           ;doprnt.c: 1306: if(val < dpowers[c])
  5602  000094  5033               	movf	sprintf@c,w,c
  5603  000096  0D02               	mullw	2
  5604  000098  0E80               	movlw	low _dpowers
  5605  00009A  24F3               	addwf	prodl,w,c
  5606  00009C  6EF6               	movwf	tblptrl,c
  5607  00009E  0E61               	movlw	high _dpowers
  5608  0000A0  20F4               	addwfc	prodh,w,c
  5609  0000A2  6EF7               	movwf	tblptrh,c
  5610  0000A4                     	if	0	;There are less than 3 active tblptr bytes
  5611  0000A4                     	endif
  5612  0000A4  0009               	tblrd		*+
  5613  0000A6  50F5               	movf	tablat,w,c
  5614  0000A8  5C31               	subwf	sprintf@val,w,c
  5615  0000AA  0009               	tblrd		*+
  5616  0000AC  50F5               	movf	tablat,w,c
  5617  0000AE  5832               	subwfb	sprintf@val+1,w,c
  5618  0000B0  A0D8               	btfss	status,0,c
  5619  0000B2  D002               	goto	l7671
  5620                           
  5621                           ;doprnt.c: 1307: break;
  5622  0000B4  2A33               	incf	sprintf@c,f,c
  5623  0000B6  D7EA               	goto	l7659
  5624  0000B8                     l7671:
  5625                           
  5626                           ;doprnt.c: 1422: {
  5627                           ;doprnt.c: 1438: if(flag & 0x03)
  5628  0000B8  C02F  F02C         	movff	sprintf@flag,??_sprintf
  5629  0000BC  0E03               	movlw	3
  5630  0000BE  162C               	andwf	??_sprintf,f,c
  5631  0000C0  B4D8               	btfsc	status,2,c
  5632  0000C2  D008               	goto	l7677
  5633                           
  5634                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  5635  0000C4  C022  FFD9         	movff	sprintf@sp,fsr2l
  5636  0000C8  C023  FFDA         	movff	sprintf@sp+1,fsr2h
  5637  0000CC  0E2D               	movlw	45
  5638  0000CE  6EDF               	movwf	indf2,c
  5639  0000D0  4A22               	infsnz	sprintf@sp,f,c
  5640  0000D2  2A23               	incf	sprintf@sp+1,f,c
  5641  0000D4                     l7677:
  5642                           
  5643                           ;doprnt.c: 1469: }
  5644                           ;doprnt.c: 1472: prec = c;
  5645  0000D4  C033  F030         	movff	sprintf@c,sprintf@prec
  5646                           
  5647                           ;doprnt.c: 1474: while(prec--) {
  5648  0000D8  D029               	goto	l7685
  5649  0000DA                     l7679:
  5650                           
  5651                           ;doprnt.c: 1478: {
  5652                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5653  0000DA  5030               	movf	sprintf@prec,w,c
  5654  0000DC  0D02               	mullw	2
  5655  0000DE  0E80               	movlw	low _dpowers
  5656  0000E0  24F3               	addwf	prodl,w,c
  5657  0000E2  6EF6               	movwf	tblptrl,c
  5658  0000E4  0E61               	movlw	high _dpowers
  5659  0000E6  20F4               	addwfc	prodh,w,c
  5660  0000E8  6EF7               	movwf	tblptrh,c
  5661  0000EA                     	if	0	;There are less than 3 active tblptr bytes
  5662  0000EA                     	endif
  5663  0000EA  0009               	tblrd		*+
  5664  0000EC  CFF5 F018          	movff	tablat,___lwdiv@divisor
  5665  0000F0  000A               	tblrd		*-
  5666  0000F2  CFF5 F019          	movff	tablat,___lwdiv@divisor+1
  5667  0000F6  C031  F016         	movff	sprintf@val,___lwdiv@dividend
  5668  0000FA  C032  F017         	movff	sprintf@val+1,___lwdiv@dividend+1
  5669  0000FE  ECBA  F007         	call	___lwdiv	;wreg free
  5670  000102  C016  F01D         	movff	?___lwdiv,___lwmod@dividend
  5671  000106  C017  F01E         	movff	?___lwdiv+1,___lwmod@dividend+1
  5672  00010A  0E00               	movlw	0
  5673  00010C  6E20               	movwf	___lwmod@divisor+1,c
  5674  00010E  0E0A               	movlw	10
  5675  000110  6E1F               	movwf	___lwmod@divisor,c
  5676  000112  EC29  F008         	call	___lwmod	;wreg free
  5677  000116  501D               	movf	?___lwmod,w,c
  5678  000118  0F30               	addlw	48
  5679  00011A  6E33               	movwf	sprintf@c,c
  5680                           
  5681                           ;doprnt.c: 1523: }
  5682                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5683  00011C  C022  FFD9         	movff	sprintf@sp,fsr2l
  5684  000120  C023  FFDA         	movff	sprintf@sp+1,fsr2h
  5685  000124  C033  FFDF         	movff	sprintf@c,indf2
  5686  000128  4A22               	infsnz	sprintf@sp,f,c
  5687  00012A  2A23               	incf	sprintf@sp+1,f,c
  5688  00012C                     l7685:
  5689  00012C  0630               	decf	sprintf@prec,f,c
  5690  00012E  2830               	incf	sprintf@prec,w,c
  5691  000130  A4D8               	btfss	status,2,c
  5692  000132  D7D3               	goto	l7679
  5693  000134                     l7687:
  5694  000134  C024  FFF6         	movff	sprintf@f,tblptrl
  5695  000138  C025  FFF7         	movff	sprintf@f+1,tblptrh
  5696  00013C  4A24               	infsnz	sprintf@f,f,c
  5697  00013E  2A25               	incf	sprintf@f+1,f,c
  5698  000140                     	if	0	;tblptru may be non-zero
  5699  000140                     	endif
  5700  000140                     	if	0	;tblptru may be non-zero
  5701  000140                     	endif
  5702  000140  0008               	tblrd		*
  5703  000142  CFF5 F033          	movff	tablat,sprintf@c
  5704  000146  5033               	movf	sprintf@c,w,c
  5705  000148  A4D8               	btfss	status,2,c
  5706  00014A  D768               	goto	l7635
  5707  00014C                     l7689:
  5708                           
  5709                           ;doprnt.c: 1538: *sp = 0;
  5710  00014C  C022  FFD9         	movff	sprintf@sp,fsr2l
  5711  000150  C023  FFDA         	movff	sprintf@sp+1,fsr2h
  5712  000154  0E00               	movlw	0
  5713  000156  6EDF               	movwf	indf2,c
  5714  000158  0012               	return	
  5715  00015A                     __end_of_sprintf:
  5716                           	opt stack 0
  5717                           tosu	equ	0xFFF
  5718                           tosh	equ	0xFFE
  5719                           tosl	equ	0xFFD
  5720                           pclath	equ	0xFFA
  5721                           tblptru	equ	0xFF8
  5722                           tblptrh	equ	0xFF7
  5723                           tblptrl	equ	0xFF6
  5724                           tablat	equ	0xFF5
  5725                           prodh	equ	0xFF4
  5726                           prodl	equ	0xFF3
  5727                           intcon	equ	0xFF2
  5728                           intcon2	equ	0xFF1
  5729                           intcon3	equ	0xFF0
  5730                           indf0	equ	0xFEF
  5731                           postinc0	equ	0xFEE
  5732                           fsr0h	equ	0xFEA
  5733                           fsr0l	equ	0xFE9
  5734                           wreg	equ	0xFE8
  5735                           indf1	equ	0xFE7
  5736                           postinc1	equ	0xFE6
  5737                           postdec1	equ	0xFE5
  5738                           fsr1h	equ	0xFE2
  5739                           fsr1l	equ	0xFE1
  5740                           indf2	equ	0xFDF
  5741                           postinc2	equ	0xFDE
  5742                           postdec2	equ	0xFDD
  5743                           fsr2h	equ	0xFDA
  5744                           fsr2l	equ	0xFD9
  5745                           status	equ	0xFD8
  5746                           
  5747 ;; *************** function ___lwmod *****************
  5748 ;; Defined at:
  5749 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  dividend        2   28[COMRAM] unsigned int 
  5752 ;;  divisor         2   30[COMRAM] unsigned int 
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;  counter         1   32[COMRAM] unsigned char 
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  2   28[COMRAM] unsigned int 
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5764 ;;      Params:         4       0       0       0       0       0       0       0       0
  5765 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5767 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5768 ;;Total ram usage:        5 bytes
  5769 ;; Hardware stack levels used:    1
  5770 ;; Hardware stack levels required when called:    2
  5771 ;; This function calls:
  5772 ;;		Nothing
  5773 ;; This function is called by:
  5774 ;;		_sprintf
  5775 ;;		_converte_inteiro_matriz
  5776 ;;		_utoa
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text31
  5781  001052                     __ptext31:
  5782                           	opt stack 0
  5783  001052                     ___lwmod:
  5784                           	opt stack 24
  5785                           
  5786                           ;incstack = 0
  5787  001052  501F               	movf	___lwmod@divisor,w,c
  5788  001054  1020               	iorwf	___lwmod@divisor+1,w,c
  5789  001056  B4D8               	btfsc	status,2,c
  5790  001058  D018               	goto	l1766
  5791  00105A  0E01               	movlw	1
  5792  00105C  6E21               	movwf	___lwmod@counter,c
  5793  00105E  D004               	goto	l7503
  5794  001060                     l7501:
  5795  001060  90D8               	bcf	status,0,c
  5796  001062  361F               	rlcf	___lwmod@divisor,f,c
  5797  001064  3620               	rlcf	___lwmod@divisor+1,f,c
  5798  001066  2A21               	incf	___lwmod@counter,f,c
  5799  001068                     l7503:
  5800  001068  AE20               	btfss	___lwmod@divisor+1,7,c
  5801  00106A  D7FA               	goto	l7501
  5802  00106C                     l7505:
  5803  00106C  501F               	movf	___lwmod@divisor,w,c
  5804  00106E  5C1D               	subwf	___lwmod@dividend,w,c
  5805  001070  5020               	movf	___lwmod@divisor+1,w,c
  5806  001072  581E               	subwfb	___lwmod@dividend+1,w,c
  5807  001074  A0D8               	btfss	status,0,c
  5808  001076  D004               	goto	l7509
  5809  001078  501F               	movf	___lwmod@divisor,w,c
  5810  00107A  5E1D               	subwf	___lwmod@dividend,f,c
  5811  00107C  5020               	movf	___lwmod@divisor+1,w,c
  5812  00107E  5A1E               	subwfb	___lwmod@dividend+1,f,c
  5813  001080                     l7509:
  5814  001080  90D8               	bcf	status,0,c
  5815  001082  3220               	rrcf	___lwmod@divisor+1,f,c
  5816  001084  321F               	rrcf	___lwmod@divisor,f,c
  5817  001086  2E21               	decfsz	___lwmod@counter,f,c
  5818  001088  D7F1               	goto	l7505
  5819  00108A                     l1766:
  5820  00108A  C01D  F01D         	movff	___lwmod@dividend,?___lwmod
  5821  00108E  C01E  F01E         	movff	___lwmod@dividend+1,?___lwmod+1
  5822  001092  0012               	return		;funcret
  5823  001094                     __end_of___lwmod:
  5824                           	opt stack 0
  5825                           tosu	equ	0xFFF
  5826                           tosh	equ	0xFFE
  5827                           tosl	equ	0xFFD
  5828                           pclath	equ	0xFFA
  5829                           tblptru	equ	0xFF8
  5830                           tblptrh	equ	0xFF7
  5831                           tblptrl	equ	0xFF6
  5832                           tablat	equ	0xFF5
  5833                           prodh	equ	0xFF4
  5834                           prodl	equ	0xFF3
  5835                           intcon	equ	0xFF2
  5836                           intcon2	equ	0xFF1
  5837                           intcon3	equ	0xFF0
  5838                           indf0	equ	0xFEF
  5839                           postinc0	equ	0xFEE
  5840                           fsr0h	equ	0xFEA
  5841                           fsr0l	equ	0xFE9
  5842                           wreg	equ	0xFE8
  5843                           indf1	equ	0xFE7
  5844                           postinc1	equ	0xFE6
  5845                           postdec1	equ	0xFE5
  5846                           fsr1h	equ	0xFE2
  5847                           fsr1l	equ	0xFE1
  5848                           indf2	equ	0xFDF
  5849                           postinc2	equ	0xFDE
  5850                           postdec2	equ	0xFDD
  5851                           fsr2h	equ	0xFDA
  5852                           fsr2l	equ	0xFD9
  5853                           status	equ	0xFD8
  5854                           
  5855 ;; *************** function ___lwdiv *****************
  5856 ;; Defined at:
  5857 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;  dividend        2   21[COMRAM] unsigned int 
  5860 ;;  divisor         2   23[COMRAM] unsigned int 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  quotient        2   26[COMRAM] unsigned int 
  5863 ;;  counter         1   25[COMRAM] unsigned char 
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  2   21[COMRAM] unsigned int 
  5866 ;; Registers used:
  5867 ;;		wreg, status,2, status,0
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5873 ;;      Params:         4       0       0       0       0       0       0       0       0
  5874 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5875 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5876 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5877 ;;Total ram usage:        7 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; Hardware stack levels required when called:    2
  5880 ;; This function calls:
  5881 ;;		Nothing
  5882 ;; This function is called by:
  5883 ;;		_sprintf
  5884 ;;		_converte_inteiro_matriz
  5885 ;;		_utoa
  5886 ;; This function uses a non-reentrant model
  5887 ;;
  5888                           
  5889                           	psect	text32
  5890  000F74                     __ptext32:
  5891                           	opt stack 0
  5892  000F74                     ___lwdiv:
  5893                           	opt stack 24
  5894                           
  5895                           ;incstack = 0
  5896  000F74  0E00               	movlw	0
  5897  000F76  6E1C               	movwf	___lwdiv@quotient+1,c
  5898  000F78  0E00               	movlw	0
  5899  000F7A  6E1B               	movwf	___lwdiv@quotient,c
  5900  000F7C  5018               	movf	___lwdiv@divisor,w,c
  5901  000F7E  1019               	iorwf	___lwdiv@divisor+1,w,c
  5902  000F80  B4D8               	btfsc	status,2,c
  5903  000F82  D01C               	goto	l1756
  5904  000F84  0E01               	movlw	1
  5905  000F86  6E1A               	movwf	___lwdiv@counter,c
  5906  000F88  D004               	goto	l7483
  5907  000F8A                     l7481:
  5908  000F8A  90D8               	bcf	status,0,c
  5909  000F8C  3618               	rlcf	___lwdiv@divisor,f,c
  5910  000F8E  3619               	rlcf	___lwdiv@divisor+1,f,c
  5911  000F90  2A1A               	incf	___lwdiv@counter,f,c
  5912  000F92                     l7483:
  5913  000F92  AE19               	btfss	___lwdiv@divisor+1,7,c
  5914  000F94  D7FA               	goto	l7481
  5915  000F96                     l7485:
  5916  000F96  90D8               	bcf	status,0,c
  5917  000F98  361B               	rlcf	___lwdiv@quotient,f,c
  5918  000F9A  361C               	rlcf	___lwdiv@quotient+1,f,c
  5919  000F9C  5018               	movf	___lwdiv@divisor,w,c
  5920  000F9E  5C16               	subwf	___lwdiv@dividend,w,c
  5921  000FA0  5019               	movf	___lwdiv@divisor+1,w,c
  5922  000FA2  5817               	subwfb	___lwdiv@dividend+1,w,c
  5923  000FA4  A0D8               	btfss	status,0,c
  5924  000FA6  D005               	goto	l7493
  5925  000FA8  5018               	movf	___lwdiv@divisor,w,c
  5926  000FAA  5E16               	subwf	___lwdiv@dividend,f,c
  5927  000FAC  5019               	movf	___lwdiv@divisor+1,w,c
  5928  000FAE  5A17               	subwfb	___lwdiv@dividend+1,f,c
  5929  000FB0  801B               	bsf	___lwdiv@quotient,0,c
  5930  000FB2                     l7493:
  5931  000FB2  90D8               	bcf	status,0,c
  5932  000FB4  3219               	rrcf	___lwdiv@divisor+1,f,c
  5933  000FB6  3218               	rrcf	___lwdiv@divisor,f,c
  5934  000FB8  2E1A               	decfsz	___lwdiv@counter,f,c
  5935  000FBA  D7ED               	goto	l7485
  5936  000FBC                     l1756:
  5937  000FBC  C01B  F016         	movff	___lwdiv@quotient,?___lwdiv
  5938  000FC0  C01C  F017         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5939  000FC4  0012               	return		;funcret
  5940  000FC6                     __end_of___lwdiv:
  5941                           	opt stack 0
  5942                           tosu	equ	0xFFF
  5943                           tosh	equ	0xFFE
  5944                           tosl	equ	0xFFD
  5945                           pclath	equ	0xFFA
  5946                           tblptru	equ	0xFF8
  5947                           tblptrh	equ	0xFF7
  5948                           tblptrl	equ	0xFF6
  5949                           tablat	equ	0xFF5
  5950                           prodh	equ	0xFF4
  5951                           prodl	equ	0xFF3
  5952                           intcon	equ	0xFF2
  5953                           intcon2	equ	0xFF1
  5954                           intcon3	equ	0xFF0
  5955                           indf0	equ	0xFEF
  5956                           postinc0	equ	0xFEE
  5957                           fsr0h	equ	0xFEA
  5958                           fsr0l	equ	0xFE9
  5959                           wreg	equ	0xFE8
  5960                           indf1	equ	0xFE7
  5961                           postinc1	equ	0xFE6
  5962                           postdec1	equ	0xFE5
  5963                           fsr1h	equ	0xFE2
  5964                           fsr1l	equ	0xFE1
  5965                           indf2	equ	0xFDF
  5966                           postinc2	equ	0xFDE
  5967                           postdec2	equ	0xFDD
  5968                           fsr2h	equ	0xFDA
  5969                           fsr2l	equ	0xFD9
  5970                           status	equ	0xFD8
  5971                           
  5972 ;; *************** function ___wmul *****************
  5973 ;; Defined at:
  5974 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;  multiplier      2   21[COMRAM] unsigned int 
  5977 ;;  multiplicand    2   23[COMRAM] unsigned int 
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;  product         2   25[COMRAM] unsigned int 
  5980 ;; Return value:  Size  Location     Type
  5981 ;;                  2   21[COMRAM] unsigned int 
  5982 ;; Registers used:
  5983 ;;		wreg, status,2, status,0, prodl, prodh
  5984 ;; Tracked objects:
  5985 ;;		On entry : 0/0
  5986 ;;		On exit  : 0/0
  5987 ;;		Unchanged: 0/0
  5988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5989 ;;      Params:         4       0       0       0       0       0       0       0       0
  5990 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5991 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5992 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5993 ;;Total ram usage:        6 bytes
  5994 ;; Hardware stack levels used:    1
  5995 ;; Hardware stack levels required when called:    2
  5996 ;; This function calls:
  5997 ;;		Nothing
  5998 ;; This function is called by:
  5999 ;;		_convert_to_date
  6000 ;; This function uses a non-reentrant model
  6001 ;;
  6002                           
  6003                           	psect	text33
  6004  0010EE                     __ptext33:
  6005                           	opt stack 0
  6006  0010EE                     ___wmul:
  6007                           	opt stack 25
  6008                           
  6009                           ;incstack = 0
  6010  0010EE  5016               	movf	___wmul@multiplier,w,c
  6011  0010F0  0218               	mulwf	___wmul@multiplicand,c
  6012  0010F2  CFF3 F01A          	movff	prodl,___wmul@product
  6013  0010F6  CFF4 F01B          	movff	prodh,___wmul@product+1
  6014  0010FA  5016               	movf	___wmul@multiplier,w,c
  6015  0010FC  0219               	mulwf	___wmul@multiplicand+1,c
  6016  0010FE  50F3               	movf	prodl,w,c
  6017  001100  261B               	addwf	___wmul@product+1,f,c
  6018  001102  5017               	movf	___wmul@multiplier+1,w,c
  6019  001104  0218               	mulwf	___wmul@multiplicand,c
  6020  001106  50F3               	movf	prodl,w,c
  6021  001108  261B               	addwf	___wmul@product+1,f,c
  6022  00110A  C01A  F016         	movff	___wmul@product,?___wmul
  6023  00110E  C01B  F017         	movff	___wmul@product+1,?___wmul+1
  6024  001112  0012               	return	
  6025  001114                     __end_of___wmul:
  6026                           	opt stack 0
  6027                           tosu	equ	0xFFF
  6028                           tosh	equ	0xFFE
  6029                           tosl	equ	0xFFD
  6030                           pclath	equ	0xFFA
  6031                           tblptru	equ	0xFF8
  6032                           tblptrh	equ	0xFF7
  6033                           tblptrl	equ	0xFF6
  6034                           tablat	equ	0xFF5
  6035                           prodh	equ	0xFF4
  6036                           prodl	equ	0xFF3
  6037                           intcon	equ	0xFF2
  6038                           intcon2	equ	0xFF1
  6039                           intcon3	equ	0xFF0
  6040                           indf0	equ	0xFEF
  6041                           postinc0	equ	0xFEE
  6042                           fsr0h	equ	0xFEA
  6043                           fsr0l	equ	0xFE9
  6044                           wreg	equ	0xFE8
  6045                           indf1	equ	0xFE7
  6046                           postinc1	equ	0xFE6
  6047                           postdec1	equ	0xFE5
  6048                           fsr1h	equ	0xFE2
  6049                           fsr1l	equ	0xFE1
  6050                           indf2	equ	0xFDF
  6051                           postinc2	equ	0xFDE
  6052                           postdec2	equ	0xFDD
  6053                           fsr2h	equ	0xFDA
  6054                           fsr2l	equ	0xFD9
  6055                           status	equ	0xFD8
  6056                           
  6057 ;; *************** function ___lmul *****************
  6058 ;; Defined at:
  6059 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;  multiplier      4   21[COMRAM] unsigned long 
  6062 ;;  multiplicand    4   25[COMRAM] unsigned long 
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;  product         4   29[COMRAM] unsigned long 
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  4   21[COMRAM] unsigned long 
  6067 ;; Registers used:
  6068 ;;		wreg, status,2, status,0
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6074 ;;      Params:         8       0       0       0       0       0       0       0       0
  6075 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6077 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6078 ;;Total ram usage:       12 bytes
  6079 ;; Hardware stack levels used:    1
  6080 ;; Hardware stack levels required when called:    2
  6081 ;; This function calls:
  6082 ;;		Nothing
  6083 ;; This function is called by:
  6084 ;;		_convert_to_date
  6085 ;;		_atol
  6086 ;;		_clust2sect
  6087 ;;		_pf_mount
  6088 ;;		_strtod
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           	psect	text34
  6093  000ECC                     __ptext34:
  6094                           	opt stack 0
  6095  000ECC                     ___lmul:
  6096                           	opt stack 24
  6097                           
  6098                           ;incstack = 0
  6099  000ECC  0E00               	movlw	0
  6100  000ECE  6E1E               	movwf	___lmul@product,c
  6101  000ED0  0E00               	movlw	0
  6102  000ED2  6E1F               	movwf	___lmul@product+1,c
  6103  000ED4  0E00               	movlw	0
  6104  000ED6  6E20               	movwf	___lmul@product+2,c
  6105  000ED8  0E00               	movlw	0
  6106  000EDA  6E21               	movwf	___lmul@product+3,c
  6107  000EDC                     l7455:
  6108  000EDC  A016               	btfss	___lmul@multiplier,0,c
  6109  000EDE  D008               	goto	l7459
  6110  000EE0  501A               	movf	___lmul@multiplicand,w,c
  6111  000EE2  261E               	addwf	___lmul@product,f,c
  6112  000EE4  501B               	movf	___lmul@multiplicand+1,w,c
  6113  000EE6  221F               	addwfc	___lmul@product+1,f,c
  6114  000EE8  501C               	movf	___lmul@multiplicand+2,w,c
  6115  000EEA  2220               	addwfc	___lmul@product+2,f,c
  6116  000EEC  501D               	movf	___lmul@multiplicand+3,w,c
  6117  000EEE  2221               	addwfc	___lmul@product+3,f,c
  6118  000EF0                     l7459:
  6119  000EF0  90D8               	bcf	status,0,c
  6120  000EF2  361A               	rlcf	___lmul@multiplicand,f,c
  6121  000EF4  361B               	rlcf	___lmul@multiplicand+1,f,c
  6122  000EF6  361C               	rlcf	___lmul@multiplicand+2,f,c
  6123  000EF8  361D               	rlcf	___lmul@multiplicand+3,f,c
  6124  000EFA  90D8               	bcf	status,0,c
  6125  000EFC  3219               	rrcf	___lmul@multiplier+3,f,c
  6126  000EFE  3218               	rrcf	___lmul@multiplier+2,f,c
  6127  000F00  3217               	rrcf	___lmul@multiplier+1,f,c
  6128  000F02  3216               	rrcf	___lmul@multiplier,f,c
  6129  000F04  5016               	movf	___lmul@multiplier,w,c
  6130  000F06  1017               	iorwf	___lmul@multiplier+1,w,c
  6131  000F08  1018               	iorwf	___lmul@multiplier+2,w,c
  6132  000F0A  1019               	iorwf	___lmul@multiplier+3,w,c
  6133  000F0C  A4D8               	btfss	status,2,c
  6134  000F0E  D7E6               	goto	l7455
  6135  000F10  C01E  F016         	movff	___lmul@product,?___lmul
  6136  000F14  C01F  F017         	movff	___lmul@product+1,?___lmul+1
  6137  000F18  C020  F018         	movff	___lmul@product+2,?___lmul+2
  6138  000F1C  C021  F019         	movff	___lmul@product+3,?___lmul+3
  6139  000F20  0012               	return		;funcret
  6140  000F22                     __end_of___lmul:
  6141                           	opt stack 0
  6142                           tosu	equ	0xFFF
  6143                           tosh	equ	0xFFE
  6144                           tosl	equ	0xFFD
  6145                           pclath	equ	0xFFA
  6146                           tblptru	equ	0xFF8
  6147                           tblptrh	equ	0xFF7
  6148                           tblptrl	equ	0xFF6
  6149                           tablat	equ	0xFF5
  6150                           prodh	equ	0xFF4
  6151                           prodl	equ	0xFF3
  6152                           intcon	equ	0xFF2
  6153                           intcon2	equ	0xFF1
  6154                           intcon3	equ	0xFF0
  6155                           indf0	equ	0xFEF
  6156                           postinc0	equ	0xFEE
  6157                           fsr0h	equ	0xFEA
  6158                           fsr0l	equ	0xFE9
  6159                           wreg	equ	0xFE8
  6160                           indf1	equ	0xFE7
  6161                           postinc1	equ	0xFE6
  6162                           postdec1	equ	0xFE5
  6163                           fsr1h	equ	0xFE2
  6164                           fsr1l	equ	0xFE1
  6165                           indf2	equ	0xFDF
  6166                           postinc2	equ	0xFDE
  6167                           postdec2	equ	0xFDD
  6168                           fsr2h	equ	0xFDA
  6169                           fsr2l	equ	0xFD9
  6170                           status	equ	0xFD8
  6171                           
  6172 ;; *************** function ___lldiv *****************
  6173 ;; Defined at:
  6174 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;  dividend        4   21[COMRAM] unsigned long 
  6177 ;;  divisor         4   25[COMRAM] unsigned long 
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;  quotient        4   29[COMRAM] unsigned long 
  6180 ;;  counter         1   33[COMRAM] unsigned char 
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  4   21[COMRAM] unsigned long 
  6183 ;; Registers used:
  6184 ;;		wreg, status,2, status,0
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/0
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6190 ;;      Params:         8       0       0       0       0       0       0       0       0
  6191 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6192 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6193 ;;      Totals:        13       0       0       0       0       0       0       0       0
  6194 ;;Total ram usage:       13 bytes
  6195 ;; Hardware stack levels used:    1
  6196 ;; Hardware stack levels required when called:    2
  6197 ;; This function calls:
  6198 ;;		Nothing
  6199 ;; This function is called by:
  6200 ;;		_convert_to_date
  6201 ;;		_convert_time_to_utc
  6202 ;;		_pf_mount
  6203 ;;		_pf_lseek
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           	psect	text35
  6208  000C34                     __ptext35:
  6209                           	opt stack 0
  6210  000C34                     ___lldiv:
  6211                           	opt stack 25
  6212                           
  6213                           ;incstack = 0
  6214  000C34  0E00               	movlw	0
  6215  000C36  6E1E               	movwf	___lldiv@quotient,c
  6216  000C38  0E00               	movlw	0
  6217  000C3A  6E1F               	movwf	___lldiv@quotient+1,c
  6218  000C3C  0E00               	movlw	0
  6219  000C3E  6E20               	movwf	___lldiv@quotient+2,c
  6220  000C40  0E00               	movlw	0
  6221  000C42  6E21               	movwf	___lldiv@quotient+3,c
  6222  000C44  501A               	movf	___lldiv@divisor,w,c
  6223  000C46  101B               	iorwf	___lldiv@divisor+1,w,c
  6224  000C48  101C               	iorwf	___lldiv@divisor+2,w,c
  6225  000C4A  101D               	iorwf	___lldiv@divisor+3,w,c
  6226  000C4C  B4D8               	btfsc	status,2,c
  6227  000C4E  D02A               	goto	l1703
  6228  000C50  0E01               	movlw	1
  6229  000C52  6E22               	movwf	___lldiv@counter,c
  6230  000C54  D006               	goto	l7849
  6231  000C56                     l7847:
  6232  000C56  90D8               	bcf	status,0,c
  6233  000C58  361A               	rlcf	___lldiv@divisor,f,c
  6234  000C5A  361B               	rlcf	___lldiv@divisor+1,f,c
  6235  000C5C  361C               	rlcf	___lldiv@divisor+2,f,c
  6236  000C5E  361D               	rlcf	___lldiv@divisor+3,f,c
  6237  000C60  2A22               	incf	___lldiv@counter,f,c
  6238  000C62                     l7849:
  6239  000C62  AE1D               	btfss	___lldiv@divisor+3,7,c
  6240  000C64  D7F8               	goto	l7847
  6241  000C66                     l7851:
  6242  000C66  90D8               	bcf	status,0,c
  6243  000C68  361E               	rlcf	___lldiv@quotient,f,c
  6244  000C6A  361F               	rlcf	___lldiv@quotient+1,f,c
  6245  000C6C  3620               	rlcf	___lldiv@quotient+2,f,c
  6246  000C6E  3621               	rlcf	___lldiv@quotient+3,f,c
  6247  000C70  501A               	movf	___lldiv@divisor,w,c
  6248  000C72  5C16               	subwf	___lldiv@dividend,w,c
  6249  000C74  501B               	movf	___lldiv@divisor+1,w,c
  6250  000C76  5817               	subwfb	___lldiv@dividend+1,w,c
  6251  000C78  501C               	movf	___lldiv@divisor+2,w,c
  6252  000C7A  5818               	subwfb	___lldiv@dividend+2,w,c
  6253  000C7C  501D               	movf	___lldiv@divisor+3,w,c
  6254  000C7E  5819               	subwfb	___lldiv@dividend+3,w,c
  6255  000C80  A0D8               	btfss	status,0,c
  6256  000C82  D009               	goto	l7859
  6257  000C84  501A               	movf	___lldiv@divisor,w,c
  6258  000C86  5E16               	subwf	___lldiv@dividend,f,c
  6259  000C88  501B               	movf	___lldiv@divisor+1,w,c
  6260  000C8A  5A17               	subwfb	___lldiv@dividend+1,f,c
  6261  000C8C  501C               	movf	___lldiv@divisor+2,w,c
  6262  000C8E  5A18               	subwfb	___lldiv@dividend+2,f,c
  6263  000C90  501D               	movf	___lldiv@divisor+3,w,c
  6264  000C92  5A19               	subwfb	___lldiv@dividend+3,f,c
  6265  000C94  801E               	bsf	___lldiv@quotient,0,c
  6266  000C96                     l7859:
  6267  000C96  90D8               	bcf	status,0,c
  6268  000C98  321D               	rrcf	___lldiv@divisor+3,f,c
  6269  000C9A  321C               	rrcf	___lldiv@divisor+2,f,c
  6270  000C9C  321B               	rrcf	___lldiv@divisor+1,f,c
  6271  000C9E  321A               	rrcf	___lldiv@divisor,f,c
  6272  000CA0  2E22               	decfsz	___lldiv@counter,f,c
  6273  000CA2  D7E1               	goto	l7851
  6274  000CA4                     l1703:
  6275  000CA4  C01E  F016         	movff	___lldiv@quotient,?___lldiv
  6276  000CA8  C01F  F017         	movff	___lldiv@quotient+1,?___lldiv+1
  6277  000CAC  C020  F018         	movff	___lldiv@quotient+2,?___lldiv+2
  6278  000CB0  C021  F019         	movff	___lldiv@quotient+3,?___lldiv+3
  6279  000CB4  0012               	return		;funcret
  6280  000CB6                     __end_of___lldiv:
  6281                           	opt stack 0
  6282                           tosu	equ	0xFFF
  6283                           tosh	equ	0xFFE
  6284                           tosl	equ	0xFFD
  6285                           pclath	equ	0xFFA
  6286                           tblptru	equ	0xFF8
  6287                           tblptrh	equ	0xFF7
  6288                           tblptrl	equ	0xFF6
  6289                           tablat	equ	0xFF5
  6290                           prodh	equ	0xFF4
  6291                           prodl	equ	0xFF3
  6292                           intcon	equ	0xFF2
  6293                           intcon2	equ	0xFF1
  6294                           intcon3	equ	0xFF0
  6295                           indf0	equ	0xFEF
  6296                           postinc0	equ	0xFEE
  6297                           fsr0h	equ	0xFEA
  6298                           fsr0l	equ	0xFE9
  6299                           wreg	equ	0xFE8
  6300                           indf1	equ	0xFE7
  6301                           postinc1	equ	0xFE6
  6302                           postdec1	equ	0xFE5
  6303                           fsr1h	equ	0xFE2
  6304                           fsr1l	equ	0xFE1
  6305                           indf2	equ	0xFDF
  6306                           postinc2	equ	0xFDE
  6307                           postdec2	equ	0xFDD
  6308                           fsr2h	equ	0xFDA
  6309                           fsr2l	equ	0xFD9
  6310                           status	equ	0xFD8
  6311                           
  6312 ;; *************** function _controle_shrc *****************
  6313 ;; Defined at:
  6314 ;;		line 112 in file "bibliotecas/SHRC.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;		None
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;		None
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      void 
  6321 ;; Registers used:
  6322 ;;		wreg, status,2, status,0, cstack
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6328 ;;      Params:         0       0       0       0       0       0       0       0       0
  6329 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6330 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6331 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6332 ;;Total ram usage:        0 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    3
  6335 ;; This function calls:
  6336 ;;		_ativa_latch_shrc
  6337 ;;		_envia_dados_shrc
  6338 ;; This function is called by:
  6339 ;;		_main
  6340 ;;		_timer_dois
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text36
  6345  001240                     __ptext36:
  6346                           	opt stack 0
  6347  001240                     _controle_shrc:
  6348                           	opt stack 27
  6349                           
  6350                           ;SHRC.c: 115: envia_dados_shrc(dado);
  6351                           
  6352                           ;incstack = 0
  6353  001240  503E               	movf	_dado,w,c
  6354  001242  EC07  F008         	call	_envia_dados_shrc
  6355                           
  6356                           ;SHRC.c: 116: ativa_latch_shrc();
  6357  001246  ECEC  F008         	call	_ativa_latch_shrc	;wreg free
  6358  00124A  0012               	return		;funcret
  6359  00124C                     __end_of_controle_shrc:
  6360                           	opt stack 0
  6361                           tosu	equ	0xFFF
  6362                           tosh	equ	0xFFE
  6363                           tosl	equ	0xFFD
  6364                           pclath	equ	0xFFA
  6365                           tblptru	equ	0xFF8
  6366                           tblptrh	equ	0xFF7
  6367                           tblptrl	equ	0xFF6
  6368                           tablat	equ	0xFF5
  6369                           prodh	equ	0xFF4
  6370                           prodl	equ	0xFF3
  6371                           intcon	equ	0xFF2
  6372                           intcon2	equ	0xFF1
  6373                           intcon3	equ	0xFF0
  6374                           indf0	equ	0xFEF
  6375                           postinc0	equ	0xFEE
  6376                           fsr0h	equ	0xFEA
  6377                           fsr0l	equ	0xFE9
  6378                           wreg	equ	0xFE8
  6379                           indf1	equ	0xFE7
  6380                           postinc1	equ	0xFE6
  6381                           postdec1	equ	0xFE5
  6382                           fsr1h	equ	0xFE2
  6383                           fsr1l	equ	0xFE1
  6384                           indf2	equ	0xFDF
  6385                           postinc2	equ	0xFDE
  6386                           postdec2	equ	0xFDD
  6387                           fsr2h	equ	0xFDA
  6388                           fsr2l	equ	0xFD9
  6389                           status	equ	0xFD8
  6390                           
  6391 ;; *************** function _envia_dados_shrc *****************
  6392 ;; Defined at:
  6393 ;;		line 62 in file "bibliotecas/SHRC.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  data_to_shrc    1    wreg     unsigned char 
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;  data_to_shrc    1   22[COMRAM] unsigned char 
  6398 ;;  contador        1   21[COMRAM] unsigned char 
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  1    wreg      void 
  6401 ;; Registers used:
  6402 ;;		wreg, status,2, status,0
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6408 ;;      Params:         0       0       0       0       0       0       0       0       0
  6409 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6411 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6412 ;;Total ram usage:        2 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; Hardware stack levels required when called:    2
  6415 ;; This function calls:
  6416 ;;		Nothing
  6417 ;; This function is called by:
  6418 ;;		_controle_shrc
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           	psect	text37
  6423  00100E                     __ptext37:
  6424                           	opt stack 0
  6425  00100E                     _envia_dados_shrc:
  6426                           	opt stack 27
  6427                           
  6428                           ;incstack = 0
  6429                           ;envia_dados_shrc@data_to_shrc stored from wreg
  6430  00100E  6E17               	movwf	envia_dados_shrc@data_to_shrc,c
  6431                           
  6432                           ;SHRC.c: 64: unsigned char contador=0;
  6433  001010  0E00               	movlw	0
  6434  001012  6E16               	movwf	envia_dados_shrc@contador,c
  6435                           
  6436                           ;SHRC.c: 65: (INTCONbits.GIE = 0);
  6437  001014  9EF2               	bcf	intcon,7,c	;volatile
  6438                           
  6439                           ;SHRC.c: 67: while(contador<=7)
  6440  001016  D018               	goto	l2841
  6441  001018                     l2819:
  6442                           
  6443                           ;SHRC.c: 68: {
  6444                           ;SHRC.c: 69: if((data_to_shrc & 0x80) == 0)
  6445  001018  BE17               	btfsc	envia_dados_shrc@data_to_shrc,7,c
  6446  00101A  D002               	goto	l337
  6447                           
  6448                           ;SHRC.c: 70: {
  6449                           ;SHRC.c: 71: LATBbits.LATB7 = 0;
  6450  00101C  9E8A               	bcf	3978,7,c	;volatile
  6451                           
  6452                           ;SHRC.c: 72: }
  6453  00101E  D001               	goto	l2823
  6454  001020                     l337:
  6455                           
  6456                           ;SHRC.c: 73: else
  6457                           ;SHRC.c: 74: {
  6458                           ;SHRC.c: 75: LATBbits.LATB7 = 1;
  6459  001020  8E8A               	bsf	3978,7,c	;volatile
  6460  001022                     l2823:
  6461                           
  6462                           ;SHRC.c: 76: }
  6463                           ;SHRC.c: 77: data_to_shrc = data_to_shrc << 1;
  6464  001022  5017               	movf	envia_dados_shrc@data_to_shrc,w,c
  6465  001024  2417               	addwf	envia_dados_shrc@data_to_shrc,w,c
  6466  001026  6E17               	movwf	envia_dados_shrc@data_to_shrc,c
  6467                           
  6468                           ;SHRC.c: 78: _delay((unsigned long)((30)*(48000000/4000000.0)));
  6469  001028  0E78               	movlw	120
  6470  00102A                     u10767:
  6471  00102A  2EE8               	decfsz	wreg,f,c
  6472  00102C  D7FE               	bra	u10767
  6473                           
  6474                           ;SHRC.c: 79: LATBbits.LATB6 = 1;
  6475  00102E  8C8A               	bsf	3978,6,c	;volatile
  6476                           
  6477                           ;SHRC.c: 80: _delay((unsigned long)((30)*(48000000/4000000.0)));
  6478  001030  0E78               	movlw	120
  6479  001032                     u10777:
  6480  001032  2EE8               	decfsz	wreg,f,c
  6481  001034  D7FE               	bra	u10777
  6482                           
  6483                           ;SHRC.c: 81: LATBbits.LATB7 = 0;
  6484  001036  9E8A               	bcf	3978,7,c	;volatile
  6485                           
  6486                           ;SHRC.c: 82: _delay((unsigned long)((30)*(48000000/4000000.0)));
  6487  001038  0E78               	movlw	120
  6488  00103A                     u10787:
  6489  00103A  2EE8               	decfsz	wreg,f,c
  6490  00103C  D7FE               	bra	u10787
  6491                           
  6492                           ;SHRC.c: 83: LATBbits.LATB6 = 0;
  6493  00103E  9C8A               	bcf	3978,6,c	;volatile
  6494                           
  6495                           ;SHRC.c: 84: _delay((unsigned long)((30)*(48000000/4000000.0)));
  6496  001040  0E78               	movlw	120
  6497  001042                     u10797:
  6498  001042  2EE8               	decfsz	wreg,f,c
  6499  001044  D7FE               	bra	u10797
  6500                           
  6501                           ;SHRC.c: 85: contador++;
  6502  001046  2A16               	incf	envia_dados_shrc@contador,f,c
  6503  001048                     l2841:
  6504  001048  0E07               	movlw	7
  6505  00104A  6416               	cpfsgt	envia_dados_shrc@contador,c
  6506  00104C  D7E5               	goto	l2819
  6507                           
  6508                           ;SHRC.c: 86: }
  6509                           ;SHRC.c: 87: (INTCONbits.GIE = 1);
  6510  00104E  8EF2               	bsf	intcon,7,c	;volatile
  6511  001050  0012               	return		;funcret
  6512  001052                     __end_of_envia_dados_shrc:
  6513                           	opt stack 0
  6514                           tosu	equ	0xFFF
  6515                           tosh	equ	0xFFE
  6516                           tosl	equ	0xFFD
  6517                           pclath	equ	0xFFA
  6518                           tblptru	equ	0xFF8
  6519                           tblptrh	equ	0xFF7
  6520                           tblptrl	equ	0xFF6
  6521                           tablat	equ	0xFF5
  6522                           prodh	equ	0xFF4
  6523                           prodl	equ	0xFF3
  6524                           intcon	equ	0xFF2
  6525                           intcon2	equ	0xFF1
  6526                           intcon3	equ	0xFF0
  6527                           indf0	equ	0xFEF
  6528                           postinc0	equ	0xFEE
  6529                           fsr0h	equ	0xFEA
  6530                           fsr0l	equ	0xFE9
  6531                           wreg	equ	0xFE8
  6532                           indf1	equ	0xFE7
  6533                           postinc1	equ	0xFE6
  6534                           postdec1	equ	0xFE5
  6535                           fsr1h	equ	0xFE2
  6536                           fsr1l	equ	0xFE1
  6537                           indf2	equ	0xFDF
  6538                           postinc2	equ	0xFDE
  6539                           postdec2	equ	0xFDD
  6540                           fsr2h	equ	0xFDA
  6541                           fsr2l	equ	0xFD9
  6542                           status	equ	0xFD8
  6543                           
  6544 ;; *************** function _ativa_latch_shrc *****************
  6545 ;; Defined at:
  6546 ;;		line 96 in file "bibliotecas/SHRC.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;		None
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;		None
  6551 ;; Return value:  Size  Location     Type
  6552 ;;                  1    wreg      void 
  6553 ;; Registers used:
  6554 ;;		wreg
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6560 ;;      Params:         0       0       0       0       0       0       0       0       0
  6561 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6562 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6563 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6564 ;;Total ram usage:        0 bytes
  6565 ;; Hardware stack levels used:    1
  6566 ;; Hardware stack levels required when called:    2
  6567 ;; This function calls:
  6568 ;;		Nothing
  6569 ;; This function is called by:
  6570 ;;		_controle_shrc
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574                           	psect	text38
  6575  0011D8                     __ptext38:
  6576                           	opt stack 0
  6577  0011D8                     _ativa_latch_shrc:
  6578                           	opt stack 27
  6579                           
  6580                           ;SHRC.c: 99: LATBbits.LATB5 = 0;
  6581                           
  6582                           ;incstack = 0
  6583  0011D8  9A8A               	bcf	3978,5,c	;volatile
  6584                           
  6585                           ;SHRC.c: 100: _delay((unsigned long)((30)*(48000000/4000000.0)));
  6586  0011DA  0E78               	movlw	120
  6587  0011DC                     u10807:
  6588  0011DC  2EE8               	decfsz	wreg,f,c
  6589  0011DE  D7FE               	bra	u10807
  6590                           
  6591                           ;SHRC.c: 101: LATBbits.LATB5 = 1;
  6592  0011E0  8A8A               	bsf	3978,5,c	;volatile
  6593                           
  6594                           ;SHRC.c: 102: _delay((unsigned long)((60)*(48000000/4000000.0)));
  6595  0011E2  0EF0               	movlw	240
  6596  0011E4                     u10817:
  6597  0011E4  2EE8               	decfsz	wreg,f,c
  6598  0011E6  D7FE               	bra	u10817
  6599                           
  6600                           ;SHRC.c: 103: LATBbits.LATB5 = 0;
  6601  0011E8  9A8A               	bcf	3978,5,c	;volatile
  6602  0011EA  0012               	return		;funcret
  6603  0011EC                     __end_of_ativa_latch_shrc:
  6604                           	opt stack 0
  6605                           tosu	equ	0xFFF
  6606                           tosh	equ	0xFFE
  6607                           tosl	equ	0xFFD
  6608                           pclath	equ	0xFFA
  6609                           tblptru	equ	0xFF8
  6610                           tblptrh	equ	0xFF7
  6611                           tblptrl	equ	0xFF6
  6612                           tablat	equ	0xFF5
  6613                           prodh	equ	0xFF4
  6614                           prodl	equ	0xFF3
  6615                           intcon	equ	0xFF2
  6616                           intcon2	equ	0xFF1
  6617                           intcon3	equ	0xFF0
  6618                           indf0	equ	0xFEF
  6619                           postinc0	equ	0xFEE
  6620                           fsr0h	equ	0xFEA
  6621                           fsr0l	equ	0xFE9
  6622                           wreg	equ	0xFE8
  6623                           indf1	equ	0xFE7
  6624                           postinc1	equ	0xFE6
  6625                           postdec1	equ	0xFE5
  6626                           fsr1h	equ	0xFE2
  6627                           fsr1l	equ	0xFE1
  6628                           indf2	equ	0xFDF
  6629                           postinc2	equ	0xFDE
  6630                           postdec2	equ	0xFDD
  6631                           fsr2h	equ	0xFDA
  6632                           fsr2l	equ	0xFD9
  6633                           status	equ	0xFD8
  6634                           
  6635 ;; *************** function _isr *****************
  6636 ;; Defined at:
  6637 ;;		line 96 in file "main.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;		None
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  cont            1   20[COMRAM] unsigned char 
  6642 ;; Return value:  Size  Location     Type
  6643 ;;                  1    wreg      void 
  6644 ;; Registers used:
  6645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6651 ;;      Params:         0       0       0       0       0       0       0       0       0
  6652 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6653 ;;      Temps:         16       0       0       0       0       0       0       0       0
  6654 ;;      Totals:        17       0       0       0       0       0       0       0       0
  6655 ;;Total ram usage:       17 bytes
  6656 ;; Hardware stack levels used:    1
  6657 ;; Hardware stack levels required when called:    1
  6658 ;; This function calls:
  6659 ;;		_recebe_dado_uart
  6660 ;;		_tratamento_uart
  6661 ;;		i2_write_timer_zero
  6662 ;; This function is called by:
  6663 ;;		Interrupt level 2
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           	psect	intcode
  6668  000008                     __pintcode:
  6669                           	opt stack 0
  6670  000008                     _isr:
  6671                           	opt stack 23
  6672                           
  6673                           ;incstack = 0
  6674  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6675  00000A  ED78  F002         	call	int_func,f	;refresh shadow registers
  6676                           tosu	equ	0xFFF
  6677                           tosh	equ	0xFFE
  6678                           tosl	equ	0xFFD
  6679                           pclath	equ	0xFFA
  6680                           tblptru	equ	0xFF8
  6681                           tblptrh	equ	0xFF7
  6682                           tblptrl	equ	0xFF6
  6683                           tablat	equ	0xFF5
  6684                           prodh	equ	0xFF4
  6685                           prodl	equ	0xFF3
  6686                           intcon	equ	0xFF2
  6687                           intcon2	equ	0xFF1
  6688                           intcon3	equ	0xFF0
  6689                           indf0	equ	0xFEF
  6690                           postinc0	equ	0xFEE
  6691                           fsr0h	equ	0xFEA
  6692                           fsr0l	equ	0xFE9
  6693                           wreg	equ	0xFE8
  6694                           indf1	equ	0xFE7
  6695                           postinc1	equ	0xFE6
  6696                           postdec1	equ	0xFE5
  6697                           fsr1h	equ	0xFE2
  6698                           fsr1l	equ	0xFE1
  6699                           indf2	equ	0xFDF
  6700                           postinc2	equ	0xFDE
  6701                           postdec2	equ	0xFDD
  6702                           fsr2h	equ	0xFDA
  6703                           fsr2l	equ	0xFD9
  6704                           status	equ	0xFD8
  6705                           
  6706                           	psect	intcode_body
  6707  0004F0                     __pintcode_body:
  6708                           	opt stack 23
  6709  0004F0                     int_func:
  6710                           	opt stack 23
  6711  0004F0  0006               	pop		; remove dummy address from shadow register refresh
  6712  0004F2  CFFA F007          	movff	pclath,??_isr+2
  6713  0004F6  CFFB F008          	movff	pclatu,??_isr+3
  6714  0004FA  CFE9 F009          	movff	fsr0l,??_isr+4
  6715  0004FE  CFEA F00A          	movff	fsr0h,??_isr+5
  6716  000502  CFE1 F00B          	movff	fsr1l,??_isr+6
  6717  000506  CFE2 F00C          	movff	fsr1h,??_isr+7
  6718  00050A  CFD9 F00D          	movff	fsr2l,??_isr+8
  6719  00050E  CFDA F00E          	movff	fsr2h,??_isr+9
  6720  000512  CFF3 F00F          	movff	prodl,??_isr+10
  6721  000516  CFF4 F010          	movff	prodh,??_isr+11
  6722  00051A  CFF6 F011          	movff	tblptrl,??_isr+12
  6723  00051E  CFF7 F012          	movff	tblptrh,??_isr+13
  6724  000522  CFF8 F013          	movff	tblptru,??_isr+14
  6725  000526  CFF5 F014          	movff	tablat,??_isr+15
  6726                           
  6727                           ;main.c: 98: unsigned char cont;
  6728                           ;main.c: 101: if (PIE1bits.RCIE && PIR1bits.RCIF)
  6729  00052A  BA9D               	btfsc	3997,5,c	;volatile
  6730  00052C  AA9E               	btfss	3998,5,c	;volatile
  6731  00052E  D014               	goto	i2l6367
  6732                           
  6733                           ;main.c: 102: {
  6734                           ;main.c: 103: data_uart_recebe = recebe_dado_uart();
  6735  000530  EC11  F009         	call	_recebe_dado_uart	;wreg free
  6736  000534  6E49               	movwf	_data_uart_recebe,c
  6737                           
  6738                           ;main.c: 104: PIR1bits.RCIF = 0;
  6739  000536  9A9E               	bcf	3998,5,c	;volatile
  6740                           
  6741                           ;main.c: 105: tratamento_uart(data_uart_recebe);
  6742  000538  5049               	movf	_data_uart_recebe,w,c
  6743  00053A  EC41  F005         	call	_tratamento_uart
  6744                           
  6745                           ;main.c: 106: LATBbits.LATB4 = ~LATBbits.LATB4;
  6746  00053E  A88A               	btfss	3978,4,c	;volatile
  6747  000540  D002               	goto	i2u632_40
  6748  000542  0E01               	movlw	1
  6749  000544  D001               	goto	i2u632_46
  6750  000546                     i2u632_40:
  6751  000546  0E00               	movlw	0
  6752  000548                     i2u632_46:
  6753  000548  0AFF               	xorlw	255
  6754  00054A  6E05               	movwf	??_isr& (0+255),c
  6755  00054C  3A05               	swapf	??_isr,f,c
  6756  00054E  508A               	movf	3978,w,c	;volatile
  6757  000550  1805               	xorwf	??_isr,w,c
  6758  000552  0BEF               	andlw	-17
  6759  000554  1805               	xorwf	??_isr,w,c
  6760  000556  6E8A               	movwf	3978,c	;volatile
  6761  000558                     i2l6367:
  6762                           
  6763                           ;main.c: 109: }
  6764                           ;main.c: 112: unsigned char cont;
  6765                           ;main.c: 114: if (TMR0IF && T0IF)
  6766  000558  B4F2               	btfsc	intcon,2,c	;volatile
  6767  00055A  A4F2               	btfss	intcon,2,c	;volatile
  6768  00055C  D039               	goto	i2l6397
  6769                           
  6770                           ;main.c: 115: {
  6771                           ;main.c: 116: INTCONbits.TMR0IF = 0;
  6772  00055E  94F2               	bcf	intcon,2,c	;volatile
  6773                           
  6774                           ;main.c: 117: sinaliza_int_timer = 1;
  6775  000560  0E01               	movlw	1
  6776  000562  6E48               	movwf	_sinaliza_int_timer,c
  6777                           
  6778                           ;main.c: 119: for(cont= 0; cont<2;cont++)
  6779  000564  0E00               	movlw	0
  6780  000566  6E15               	movwf	isr@cont,c
  6781  000568                     i2l6375:
  6782  000568  0E01               	movlw	1
  6783  00056A  6415               	cpfsgt	isr@cont,c
  6784  00056C  D001               	goto	i2l6379
  6785  00056E  D019               	goto	i2l6387
  6786  000570                     i2l6379:
  6787                           
  6788                           ;main.c: 120: {
  6789                           ;main.c: 121: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
  6790  000570  5015               	movf	isr@cont,w,c
  6791  000572  0D02               	mullw	2
  6792  000574  0EB1               	movlw	low _tempo_tarefa
  6793  000576  24F3               	addwf	prodl,w,c
  6794  000578  6ED9               	movwf	fsr2l,c
  6795  00057A  0E00               	movlw	high _tempo_tarefa
  6796  00057C  20F4               	addwfc	prodh,w,c
  6797  00057E  6EDA               	movwf	fsr2h,c
  6798  000580  50DE               	movf	postinc2,w,c
  6799  000582  10DE               	iorwf	postinc2,w,c
  6800  000584  B4D8               	btfsc	status,2,c
  6801  000586  D00B               	goto	i2l6383
  6802  000588  5015               	movf	isr@cont,w,c
  6803  00058A  0D02               	mullw	2
  6804  00058C  0EB1               	movlw	low _tempo_tarefa
  6805  00058E  24F3               	addwf	prodl,w,c
  6806  000590  6ED9               	movwf	fsr2l,c
  6807  000592  0E00               	movlw	high _tempo_tarefa
  6808  000594  20F4               	addwfc	prodh,w,c
  6809  000596  6EDA               	movwf	fsr2h,c
  6810  000598  06DE               	decf	postinc2,f,c
  6811  00059A  0E00               	movlw	0
  6812  00059C  5ADD               	subwfb	postdec2,f,c
  6813  00059E                     i2l6383:
  6814  00059E  2A15               	incf	isr@cont,f,c
  6815  0005A0  D7E3               	goto	i2l6375
  6816  0005A2                     i2l6387:
  6817                           
  6818                           ;main.c: 122: }
  6819                           ;main.c: 125: if(tarefa_em_execucao == 1)
  6820  0005A2  0447               	decf	_tarefa_em_execucao,w,c	;volatile
  6821  0005A4  A4D8               	btfss	status,2,c
  6822  0005A6  D00E               	goto	i2l6395
  6823                           
  6824                           ;main.c: 126: {
  6825                           ;main.c: 127: timeout_tarefa--;
  6826  0005A8  0100               	movlb	0	; () banked
  6827  0005AA  07C6               	decf	_timeout_tarefa& (0+255),f,b
  6828  0005AC  A0D8               	btfss	status,0,c
  6829  0005AE  07C7               	decf	(_timeout_tarefa+1)& (0+255),f,b
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;main.c: 128: if(!timeout_tarefa)
  6833  0005B0  0100               	movlb	0	; () banked
  6834  0005B2  51C6               	movf	_timeout_tarefa& (0+255),w,b
  6835  0005B4  0100               	movlb	0	; () banked
  6836  0005B6  11C7               	iorwf	(_timeout_tarefa+1)& (0+255),w,b
  6837  0005B8  A4D8               	btfss	status,2,c
  6838  0005BA  D004               	goto	i2l6395
  6839                           
  6840                           ; BSR set to: 0
  6841                           ;main.c: 129: {
  6842                           ;main.c: 131: PCLATH = 0;
  6843  0005BC  0E00               	movlw	0
  6844  0005BE  6EFA               	movwf	pclath,c	;volatile
  6845                           
  6846                           ;main.c: 132: PCL = 0;
  6847  0005C0  0E00               	movlw	0
  6848  0005C2  6EF9               	movwf	pcl,c	;volatile
  6849  0005C4                     i2l6395:
  6850                           
  6851                           ;main.c: 133: }
  6852                           ;main.c: 134: }
  6853                           ;main.c: 137: write_timer_zero(0x0083);
  6854  0005C4  0E00               	movlw	0
  6855  0005C6  6E02               	movwf	i2write_timer_zero@timer0+1,c
  6856  0005C8  0E83               	movlw	131
  6857  0005CA  6E01               	movwf	i2write_timer_zero@timer0,c
  6858  0005CC  EC08  F009         	call	i2_write_timer_zero	;wreg free
  6859  0005D0                     i2l6397:
  6860                           
  6861                           ;main.c: 139: }
  6862                           ;main.c: 141: if (INT0IF && INT0IE)
  6863  0005D0  B2F2               	btfsc	intcon,1,c	;volatile
  6864  0005D2  A8F2               	btfss	intcon,4,c	;volatile
  6865  0005D4  D001               	goto	i2l77
  6866                           
  6867                           ;main.c: 142: {
  6868                           ;main.c: 143: INT0IF = 0;
  6869  0005D6  92F2               	bcf	intcon,1,c	;volatile
  6870  0005D8                     i2l77:
  6871  0005D8  C014  FFF5         	movff	??_isr+15,tablat
  6872  0005DC  C013  FFF8         	movff	??_isr+14,tblptru
  6873  0005E0  C012  FFF7         	movff	??_isr+13,tblptrh
  6874  0005E4  C011  FFF6         	movff	??_isr+12,tblptrl
  6875  0005E8  C010  FFF4         	movff	??_isr+11,prodh
  6876  0005EC  C00F  FFF3         	movff	??_isr+10,prodl
  6877  0005F0  C00E  FFDA         	movff	??_isr+9,fsr2h
  6878  0005F4  C00D  FFD9         	movff	??_isr+8,fsr2l
  6879  0005F8  C00C  FFE2         	movff	??_isr+7,fsr1h
  6880  0005FC  C00B  FFE1         	movff	??_isr+6,fsr1l
  6881  000600  C00A  FFEA         	movff	??_isr+5,fsr0h
  6882  000604  C009  FFE9         	movff	??_isr+4,fsr0l
  6883  000608  C008  FFFB         	movff	??_isr+3,pclatu
  6884  00060C  C007  FFFA         	movff	??_isr+2,pclath
  6885  000610  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6886  000612  0011               	retfie		f
  6887  000614                     __end_of_isr:
  6888                           	opt stack 0
  6889                           tosu	equ	0xFFF
  6890                           tosh	equ	0xFFE
  6891                           tosl	equ	0xFFD
  6892                           pclatu	equ	0xFFB
  6893                           pclath	equ	0xFFA
  6894                           pcl	equ	0xFF9
  6895                           tblptru	equ	0xFF8
  6896                           tblptrh	equ	0xFF7
  6897                           tblptrl	equ	0xFF6
  6898                           tablat	equ	0xFF5
  6899                           prodh	equ	0xFF4
  6900                           prodl	equ	0xFF3
  6901                           intcon	equ	0xFF2
  6902                           intcon2	equ	0xFF1
  6903                           intcon3	equ	0xFF0
  6904                           indf0	equ	0xFEF
  6905                           postinc0	equ	0xFEE
  6906                           fsr0h	equ	0xFEA
  6907                           fsr0l	equ	0xFE9
  6908                           wreg	equ	0xFE8
  6909                           indf1	equ	0xFE7
  6910                           postinc1	equ	0xFE6
  6911                           postdec1	equ	0xFE5
  6912                           fsr1h	equ	0xFE2
  6913                           fsr1l	equ	0xFE1
  6914                           indf2	equ	0xFDF
  6915                           postinc2	equ	0xFDE
  6916                           postdec2	equ	0xFDD
  6917                           fsr2h	equ	0xFDA
  6918                           fsr2l	equ	0xFD9
  6919                           status	equ	0xFD8
  6920                           
  6921 ;; *************** function i2_write_timer_zero *****************
  6922 ;; Defined at:
  6923 ;;		line 138 in file "bibliotecas/hardware.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;  timer0          2    0[COMRAM] unsigned int 
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;  write_timer_    2    2[COMRAM] struct Timers
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      void 
  6930 ;; Registers used:
  6931 ;;		None
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6937 ;;      Params:         2       0       0       0       0       0       0       0       0
  6938 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6939 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6940 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6941 ;;Total ram usage:        4 bytes
  6942 ;; Hardware stack levels used:    1
  6943 ;; This function calls:
  6944 ;;		Nothing
  6945 ;; This function is called by:
  6946 ;;		_isr
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950                           	psect	text40
  6951  001210                     __ptext40:
  6952                           	opt stack 0
  6953  001210                     i2_write_timer_zero:
  6954                           	opt stack 23
  6955                           
  6956                           ;hardware.c: 140: union Timers timer;
  6957                           ;hardware.c: 142: timer.lt = timer0;
  6958                           
  6959                           ;incstack = 0
  6960  001210  C001  F003         	movff	i2write_timer_zero@timer0,i2write_timer_zero@timer
  6961  001214  C002  F004         	movff	i2write_timer_zero@timer0+1,i2write_timer_zero@timer+1
  6962                           
  6963                           ;hardware.c: 144: TMR0H = timer.bt[1];
  6964  001218  C004  FFD7         	movff	i2write_timer_zero@timer+1,4055	;volatile
  6965                           
  6966                           ;hardware.c: 145: TMR0L = timer.bt[0];
  6967  00121C  C003  FFD6         	movff	i2write_timer_zero@timer,4054	;volatile
  6968  001220  0012               	return		;funcret
  6969  001222                     __end_ofi2_write_timer_zero:
  6970                           	opt stack 0
  6971                           tosu	equ	0xFFF
  6972                           tosh	equ	0xFFE
  6973                           tosl	equ	0xFFD
  6974                           pclatu	equ	0xFFB
  6975                           pclath	equ	0xFFA
  6976                           pcl	equ	0xFF9
  6977                           tblptru	equ	0xFF8
  6978                           tblptrh	equ	0xFF7
  6979                           tblptrl	equ	0xFF6
  6980                           tablat	equ	0xFF5
  6981                           prodh	equ	0xFF4
  6982                           prodl	equ	0xFF3
  6983                           intcon	equ	0xFF2
  6984                           intcon2	equ	0xFF1
  6985                           intcon3	equ	0xFF0
  6986                           indf0	equ	0xFEF
  6987                           postinc0	equ	0xFEE
  6988                           fsr0h	equ	0xFEA
  6989                           fsr0l	equ	0xFE9
  6990                           wreg	equ	0xFE8
  6991                           indf1	equ	0xFE7
  6992                           postinc1	equ	0xFE6
  6993                           postdec1	equ	0xFE5
  6994                           fsr1h	equ	0xFE2
  6995                           fsr1l	equ	0xFE1
  6996                           indf2	equ	0xFDF
  6997                           postinc2	equ	0xFDE
  6998                           postdec2	equ	0xFDD
  6999                           fsr2h	equ	0xFDA
  7000                           fsr2l	equ	0xFD9
  7001                           status	equ	0xFD8
  7002                           
  7003 ;; *************** function _tratamento_uart *****************
  7004 ;; Defined at:
  7005 ;;		line 266 in file "bibliotecas/GPS.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;  received_cha    1    wreg     unsigned char 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;  received_cha    1    0[COMRAM] unsigned char 
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  1    wreg      void 
  7012 ;; Registers used:
  7013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7019 ;;      Params:         0       0       0       0       0       0       0       0       0
  7020 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7022 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7023 ;;Total ram usage:        1 bytes
  7024 ;; Hardware stack levels used:    1
  7025 ;; This function calls:
  7026 ;;		Nothing
  7027 ;; This function is called by:
  7028 ;;		_isr
  7029 ;; This function uses a non-reentrant model
  7030 ;;
  7031                           
  7032                           	psect	text41
  7033  000A82                     __ptext41:
  7034                           	opt stack 0
  7035  000A82                     _tratamento_uart:
  7036                           	opt stack 23
  7037                           
  7038                           ;incstack = 0
  7039                           ;tratamento_uart@received_char stored from wreg
  7040  000A82  6E01               	movwf	tratamento_uart@received_char,c
  7041                           
  7042                           ;GPS.c: 268: if(received_char =='$'){
  7043  000A84  0E24               	movlw	36
  7044  000A86  1801               	xorwf	tratamento_uart@received_char,w,c
  7045  000A88  A4D8               	btfss	status,2,c
  7046  000A8A  D011               	goto	i2l5649
  7047                           
  7048                           ;GPS.c: 269: gga_index = 0;
  7049  000A8C  0E00               	movlw	0
  7050  000A8E  0100               	movlb	0	; () banked
  7051  000A90  6FC5               	movwf	(_gga_index+1)& (0+255),b	;volatile
  7052  000A92  0E00               	movlw	0
  7053  000A94  6FC4               	movwf	_gga_index& (0+255),b	;volatile
  7054                           
  7055                           ;GPS.c: 270: rmc_index = 0;
  7056  000A96  0E00               	movlw	0
  7057  000A98  6E3B               	movwf	_rmc_index+1,c	;volatile
  7058  000A9A  0E00               	movlw	0
  7059  000A9C  6E3A               	movwf	_rmc_index,c	;volatile
  7060                           
  7061                           ;GPS.c: 271: is_it_gga_string = 0;
  7062  000A9E  0E00               	movlw	0
  7063  000AA0  6E42               	movwf	_is_it_gga_string,c	;volatile
  7064                           
  7065                           ;GPS.c: 272: is_it_rmc_string = 0;
  7066  000AA2  0E00               	movlw	0
  7067  000AA4  6E41               	movwf	_is_it_rmc_string,c	;volatile
  7068                           
  7069                           ;GPS.c: 273: comma_counter_gga = 0;
  7070  000AA6  0E00               	movlw	0
  7071  000AA8  6E44               	movwf	_comma_counter_gga,c
  7072                           
  7073                           ;GPS.c: 274: comma_counter_rmc = 0;
  7074  000AAA  0E00               	movlw	0
  7075  000AAC  6E43               	movwf	_comma_counter_rmc,c
  7076  000AAE                     i2l5649:
  7077                           
  7078                           ;GPS.c: 275: }
  7079                           ;GPS.c: 297: if(is_it_rmc_string == 1)
  7080  000AAE  0441               	decf	_is_it_rmc_string,w,c	;volatile
  7081  000AB0  A4D8               	btfss	status,2,c
  7082  000AB2  D01A               	goto	i2l5661
  7083                           
  7084                           ;GPS.c: 298: {
  7085                           ;GPS.c: 299: if(received_char == ',' )
  7086  000AB4  0E2C               	movlw	44
  7087  000AB6  1801               	xorwf	tratamento_uart@received_char,w,c
  7088  000AB8  A4D8               	btfss	status,2,c
  7089  000ABA  D00B               	goto	i2l5657
  7090                           
  7091                           ;GPS.c: 300: {
  7092                           ;GPS.c: 301: rmc_pointers[comma_counter_rmc++] = rmc_index;
  7093  000ABC  5043               	movf	_comma_counter_rmc,w,c
  7094  000ABE  0D01               	mullw	1
  7095  000AC0  0E9A               	movlw	low _rmc_pointers
  7096  000AC2  24F3               	addwf	prodl,w,c
  7097  000AC4  6ED9               	movwf	fsr2l,c
  7098  000AC6  0E00               	movlw	high _rmc_pointers
  7099  000AC8  20F4               	addwfc	prodh,w,c
  7100  000ACA  6EDA               	movwf	fsr2h,c
  7101  000ACC  C03A  FFDF         	movff	_rmc_index,indf2	;volatile
  7102  000AD0  2A43               	incf	_comma_counter_rmc,f,c
  7103  000AD2                     i2l5657:
  7104                           
  7105                           ;GPS.c: 302: }
  7106                           ;GPS.c: 303: rmc_buffer[rmc_index++] = received_char;
  7107  000AD2  0E94               	movlw	low _rmc_buffer
  7108  000AD4  243A               	addwf	_rmc_index,w,c	;volatile
  7109  000AD6  6ED9               	movwf	fsr2l,c
  7110  000AD8  0E01               	movlw	high _rmc_buffer
  7111  000ADA  203B               	addwfc	_rmc_index+1,w,c	;volatile
  7112  000ADC  6EDA               	movwf	fsr2h,c
  7113  000ADE  C001  FFDF         	movff	tratamento_uart@received_char,indf2
  7114  000AE2  4A3A               	infsnz	_rmc_index,f,c	;volatile
  7115  000AE4  2A3B               	incf	_rmc_index+1,f,c	;volatile
  7116                           
  7117                           ;GPS.c: 304: }
  7118  000AE6  0012               	return	
  7119  000AE8                     i2l5661:
  7120                           
  7121                           ;GPS.c: 305: else if(rmc_code[0] == 'R' && rmc_code[1] == 'M' && rmc_code[2] == 'C'){
  7122  000AE8  0E52               	movlw	82
  7123  000AEA  1835               	xorwf	_rmc_code,w,c
  7124  000AEC  A4D8               	btfss	status,2,c
  7125  000AEE  D011               	goto	i2l196
  7126  000AF0  0E4D               	movlw	77
  7127  000AF2  1836               	xorwf	_rmc_code+1,w,c
  7128  000AF4  A4D8               	btfss	status,2,c
  7129  000AF6  D00D               	goto	i2l196
  7130  000AF8  0E43               	movlw	67
  7131  000AFA  1837               	xorwf	_rmc_code+2,w,c
  7132  000AFC  A4D8               	btfss	status,2,c
  7133  000AFE  D009               	goto	i2l196
  7134                           
  7135                           ;GPS.c: 306: is_it_rmc_string = 1;
  7136  000B00  0E01               	movlw	1
  7137  000B02  6E41               	movwf	_is_it_rmc_string,c	;volatile
  7138                           
  7139                           ;GPS.c: 307: rmc_code[0] = 0;
  7140  000B04  0E00               	movlw	0
  7141  000B06  6E35               	movwf	_rmc_code,c
  7142                           
  7143                           ;GPS.c: 308: rmc_code[1] = 0;
  7144  000B08  0E00               	movlw	0
  7145  000B0A  6E36               	movwf	_rmc_code+1,c
  7146                           
  7147                           ;GPS.c: 309: rmc_code[2] = 0;
  7148  000B0C  0E00               	movlw	0
  7149  000B0E  6E37               	movwf	_rmc_code+2,c
  7150                           
  7151                           ;GPS.c: 310: }
  7152  000B10  0012               	return	
  7153  000B12                     i2l196:
  7154                           
  7155                           ;GPS.c: 311: else{
  7156                           ;GPS.c: 312: rmc_code[0] = rmc_code[1];
  7157  000B12  C036  F035         	movff	_rmc_code+1,_rmc_code
  7158                           
  7159                           ;GPS.c: 313: rmc_code[1] = rmc_code[2];
  7160  000B16  C037  F036         	movff	_rmc_code+2,_rmc_code+1
  7161                           
  7162                           ;GPS.c: 314: rmc_code[2] = received_char;
  7163  000B1A  C001  F037         	movff	tratamento_uart@received_char,_rmc_code+2
  7164  000B1E  0012               	return	
  7165  000B20                     __end_of_tratamento_uart:
  7166                           	opt stack 0
  7167                           tosu	equ	0xFFF
  7168                           tosh	equ	0xFFE
  7169                           tosl	equ	0xFFD
  7170                           pclatu	equ	0xFFB
  7171                           pclath	equ	0xFFA
  7172                           pcl	equ	0xFF9
  7173                           tblptru	equ	0xFF8
  7174                           tblptrh	equ	0xFF7
  7175                           tblptrl	equ	0xFF6
  7176                           tablat	equ	0xFF5
  7177                           prodh	equ	0xFF4
  7178                           prodl	equ	0xFF3
  7179                           intcon	equ	0xFF2
  7180                           intcon2	equ	0xFF1
  7181                           intcon3	equ	0xFF0
  7182                           indf0	equ	0xFEF
  7183                           postinc0	equ	0xFEE
  7184                           fsr0h	equ	0xFEA
  7185                           fsr0l	equ	0xFE9
  7186                           wreg	equ	0xFE8
  7187                           indf1	equ	0xFE7
  7188                           postinc1	equ	0xFE6
  7189                           postdec1	equ	0xFE5
  7190                           fsr1h	equ	0xFE2
  7191                           fsr1l	equ	0xFE1
  7192                           indf2	equ	0xFDF
  7193                           postinc2	equ	0xFDE
  7194                           postdec2	equ	0xFDD
  7195                           fsr2h	equ	0xFDA
  7196                           fsr2l	equ	0xFD9
  7197                           status	equ	0xFD8
  7198                           
  7199 ;; *************** function _recebe_dado_uart *****************
  7200 ;; Defined at:
  7201 ;;		line 138 in file "bibliotecas/uart.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;		None
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;		None
  7206 ;; Return value:  Size  Location     Type
  7207 ;;                  1    wreg      unsigned char 
  7208 ;; Registers used:
  7209 ;;		wreg, status,2
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7215 ;;      Params:         0       0       0       0       0       0       0       0       0
  7216 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7217 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7218 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7219 ;;Total ram usage:        0 bytes
  7220 ;; Hardware stack levels used:    1
  7221 ;; This function calls:
  7222 ;;		Nothing
  7223 ;; This function is called by:
  7224 ;;		_isr
  7225 ;;		_recebe_string_uart
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229                           	psect	text42
  7230  001222                     __ptext42:
  7231                           	opt stack 0
  7232  001222                     _recebe_dado_uart:
  7233                           	opt stack 23
  7234  001222                     i2l1200:
  7235  001222  AA9E               	btfss	3998,5,c	;volatile
  7236  001224  D7FE               	goto	i2l1200
  7237                           
  7238                           ;uart.c: 141: if(RCSTAbits.OERR)
  7239  001226  A2AB               	btfss	4011,1,c	;volatile
  7240  001228  D003               	goto	i2l5641
  7241                           
  7242                           ;uart.c: 142: {
  7243                           ;uart.c: 143: CREN = 0;
  7244  00122A  98AB               	bcf	4011,4,c	;volatile
  7245                           
  7246                           ;uart.c: 144: __nop();
  7247  00122C  F000               	nop	
  7248                           
  7249                           ;uart.c: 145: CREN=1;
  7250  00122E  88AB               	bsf	4011,4,c	;volatile
  7251  001230                     i2l5641:
  7252                           
  7253                           ;uart.c: 146: }
  7254                           ;uart.c: 147: return(RCREG);
  7255  001230  50AE               	movf	4014,w,c	;volatile
  7256  001232  0012               	return	
  7257  001234                     __end_of_recebe_dado_uart:
  7258                           	opt stack 0
  7259                           tosu	equ	0xFFF
  7260                           tosh	equ	0xFFE
  7261                           tosl	equ	0xFFD
  7262                           pclatu	equ	0xFFB
  7263                           pclath	equ	0xFFA
  7264                           pcl	equ	0xFF9
  7265                           tblptru	equ	0xFF8
  7266                           tblptrh	equ	0xFF7
  7267                           tblptrl	equ	0xFF6
  7268                           tablat	equ	0xFF5
  7269                           prodh	equ	0xFF4
  7270                           prodl	equ	0xFF3
  7271                           intcon	equ	0xFF2
  7272                           intcon2	equ	0xFF1
  7273                           intcon3	equ	0xFF0
  7274                           indf0	equ	0xFEF
  7275                           postinc0	equ	0xFEE
  7276                           fsr0h	equ	0xFEA
  7277                           fsr0l	equ	0xFE9
  7278                           wreg	equ	0xFE8
  7279                           indf1	equ	0xFE7
  7280                           postinc1	equ	0xFE6
  7281                           postdec1	equ	0xFE5
  7282                           fsr1h	equ	0xFE2
  7283                           fsr1l	equ	0xFE1
  7284                           indf2	equ	0xFDF
  7285                           postinc2	equ	0xFDE
  7286                           postdec2	equ	0xFDD
  7287                           fsr2h	equ	0xFDA
  7288                           fsr2l	equ	0xFD9
  7289                           status	equ	0xFD8
  7290                           tosu	equ	0xFFF
  7291                           tosh	equ	0xFFE
  7292                           tosl	equ	0xFFD
  7293                           pclatu	equ	0xFFB
  7294                           pclath	equ	0xFFA
  7295                           pcl	equ	0xFF9
  7296                           tblptru	equ	0xFF8
  7297                           tblptrh	equ	0xFF7
  7298                           tblptrl	equ	0xFF6
  7299                           tablat	equ	0xFF5
  7300                           prodh	equ	0xFF4
  7301                           prodl	equ	0xFF3
  7302                           intcon	equ	0xFF2
  7303                           intcon2	equ	0xFF1
  7304                           intcon3	equ	0xFF0
  7305                           indf0	equ	0xFEF
  7306                           postinc0	equ	0xFEE
  7307                           fsr0h	equ	0xFEA
  7308                           fsr0l	equ	0xFE9
  7309                           wreg	equ	0xFE8
  7310                           indf1	equ	0xFE7
  7311                           postinc1	equ	0xFE6
  7312                           postdec1	equ	0xFE5
  7313                           fsr1h	equ	0xFE2
  7314                           fsr1l	equ	0xFE1
  7315                           indf2	equ	0xFDF
  7316                           postinc2	equ	0xFDE
  7317                           postdec2	equ	0xFDD
  7318                           fsr2h	equ	0xFDA
  7319                           fsr2l	equ	0xFD9
  7320                           status	equ	0xFD8
  7321                           
  7322                           	psect	text43
  7323  000000                     __ptext43:
  7324                           	opt stack 0
  7325                           tosu	equ	0xFFF
  7326                           tosh	equ	0xFFE
  7327                           tosl	equ	0xFFD
  7328                           pclatu	equ	0xFFB
  7329                           pclath	equ	0xFFA
  7330                           pcl	equ	0xFF9
  7331                           tblptru	equ	0xFF8
  7332                           tblptrh	equ	0xFF7
  7333                           tblptrl	equ	0xFF6
  7334                           tablat	equ	0xFF5
  7335                           prodh	equ	0xFF4
  7336                           prodl	equ	0xFF3
  7337                           intcon	equ	0xFF2
  7338                           intcon2	equ	0xFF1
  7339                           intcon3	equ	0xFF0
  7340                           indf0	equ	0xFEF
  7341                           postinc0	equ	0xFEE
  7342                           fsr0h	equ	0xFEA
  7343                           fsr0l	equ	0xFE9
  7344                           wreg	equ	0xFE8
  7345                           indf1	equ	0xFE7
  7346                           postinc1	equ	0xFE6
  7347                           postdec1	equ	0xFE5
  7348                           fsr1h	equ	0xFE2
  7349                           fsr1l	equ	0xFE1
  7350                           indf2	equ	0xFDF
  7351                           postinc2	equ	0xFDE
  7352                           postdec2	equ	0xFDD
  7353                           fsr2h	equ	0xFDA
  7354                           fsr2l	equ	0xFD9
  7355                           status	equ	0xFD8
  7356                           
  7357                           	psect	rparam
  7358  0000                     tosu	equ	0xFFF
  7359                           tosh	equ	0xFFE
  7360                           tosl	equ	0xFFD
  7361                           pclatu	equ	0xFFB
  7362                           pclath	equ	0xFFA
  7363                           pcl	equ	0xFF9
  7364                           tblptru	equ	0xFF8
  7365                           tblptrh	equ	0xFF7
  7366                           tblptrl	equ	0xFF6
  7367                           tablat	equ	0xFF5
  7368                           prodh	equ	0xFF4
  7369                           prodl	equ	0xFF3
  7370                           intcon	equ	0xFF2
  7371                           intcon2	equ	0xFF1
  7372                           intcon3	equ	0xFF0
  7373                           indf0	equ	0xFEF
  7374                           postinc0	equ	0xFEE
  7375                           fsr0h	equ	0xFEA
  7376                           fsr0l	equ	0xFE9
  7377                           wreg	equ	0xFE8
  7378                           indf1	equ	0xFE7
  7379                           postinc1	equ	0xFE6
  7380                           postdec1	equ	0xFE5
  7381                           fsr1h	equ	0xFE2
  7382                           fsr1l	equ	0xFE1
  7383                           indf2	equ	0xFDF
  7384                           postinc2	equ	0xFDE
  7385                           postdec2	equ	0xFDD
  7386                           fsr2h	equ	0xFDA
  7387                           fsr2l	equ	0xFD9
  7388                           status	equ	0xFD8
  7389                           
  7390                           	psect	temp
  7391  00004A                     btemp:
  7392                           	opt stack 0
  7393  00004A                     	ds	1
  7394  0000                     int$flags	set	btemp
  7395                           tosu	equ	0xFFF
  7396                           tosh	equ	0xFFE
  7397                           tosl	equ	0xFFD
  7398                           pclatu	equ	0xFFB
  7399                           pclath	equ	0xFFA
  7400                           pcl	equ	0xFF9
  7401                           tblptru	equ	0xFF8
  7402                           tblptrh	equ	0xFF7
  7403                           tblptrl	equ	0xFF6
  7404                           tablat	equ	0xFF5
  7405                           prodh	equ	0xFF4
  7406                           prodl	equ	0xFF3
  7407                           intcon	equ	0xFF2
  7408                           intcon2	equ	0xFF1
  7409                           intcon3	equ	0xFF0
  7410                           indf0	equ	0xFEF
  7411                           postinc0	equ	0xFEE
  7412                           fsr0h	equ	0xFEA
  7413                           fsr0l	equ	0xFE9
  7414                           wreg	equ	0xFE8
  7415                           indf1	equ	0xFE7
  7416                           postinc1	equ	0xFE6
  7417                           postdec1	equ	0xFE5
  7418                           fsr1h	equ	0xFE2
  7419                           fsr1l	equ	0xFE1
  7420                           indf2	equ	0xFDF
  7421                           postinc2	equ	0xFDE
  7422                           postdec2	equ	0xFDD
  7423                           fsr2h	equ	0xFDA
  7424                           fsr2l	equ	0xFD9
  7425                           status	equ	0xFD8


Data Sizes:
    Strings     245
    Constant    223
    Data        24
    BSS         908
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     52      73
    BANK0           160     10     159
    BANK1           256      6     256
    BANK2           256     34      34
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    escalonador$3302	PTR FTN()void  size(2) Largest target is 1
		 -> gps(), 

    rd	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(COMRAM[7]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 15
		 -> get_dt@dado_buffer(BANK2[12]), get_gpstime@time_buffer(COMRAM[15]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_4(CODE[9]), STR_3(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 15
		 -> data_buffer(BANK0[15]), dt_buffer(BANK0[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    pf_readdir@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    pf_opendir@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    follow_path@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    get_fileinfo@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    create_name@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dir_read@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dir_find@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dir_next@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    S1961$fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dir_rewind@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    FatFs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), SDCard@fs(COMRAM[42]), 

    escreve_frase_ram_lcd@buffer	PTR unsigned char  size(2) Largest target is 70
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), STR_23(CODE[3]), STR_22(CODE[8]), STR_21(CODE[14]), 
		 -> STR_20(CODE[13]), STR_19(CODE[9]), STR_18(CODE[14]), leitura_chave@pos_ignicao_on(COMRAM[17]), 
		 -> leitura_chave@pos_ignicao_crank(COMRAM[17]), leitura_chave@pos_ignicao_off(COMRAM[17]), STR_17(CODE[17]), STR_16(CODE[16]), 
		 -> STR_15(CODE[14]), STR_14(CODE[14]), STR_13(CODE[14]), STR_12(CODE[14]), 
		 -> STR_11(CODE[13]), STR_10(CODE[17]), STR_7(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[14]), rmc_buffer(BANK1[70]), dt_buffer(BANK0[6]), STR_2(CODE[6]), 
		 -> STR_1(CODE[5]), mensagem_inicial@msg_dois(BANK2[17]), mensagem_inicial@msg_linha_um(BANK2[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(COMRAM[7]), 

    p_tarefas	PTR FTN()void [2] size(2) Largest target is 1
		 -> gps(), 


Critical Paths under _main in COMRAM

    _main->_escalonador
    _mensagem_inicial->_posicao_cursor_lcd
    _leitura_continua_adc->_leitura_adc
    _init_lcd->_escreve_cmd_lcd
    _config_timer_zero->_write_timer_zero
    _inicializa_uart->_configura_baudrate_uart
    _configura_baudrate_uart->___aldiv
    _gps->_get_dt
    _get_dt->_atol
    _posicao_cursor_lcd->_endereco_cursor_lcd
    _endereco_cursor_lcd->_delay
    _escreve_frase_ram_lcd->_escreve_caractere_lcd
    _escreve_caractere_lcd->_delay
    _escreve_cmd_lcd->_delay
    _atol->___lmul
    _convert_to_date->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _controle_shrc->_envia_dados_shrc

Critical Paths under _isr in COMRAM

    _isr->i2_write_timer_zero

Critical Paths under _main in BANK0

    _escalonador->_gps
    _gps->_convert_to_date

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_escalonador
    _escalonador->_gps

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_mensagem_inicial
    _gps->_get_dt

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   27913
                      _controle_shrc
                        _escalonador
                    _inicializa_shrc
                 _inicializa_tarefas
                    _inicializa_uart
                      _init_hardware
                           _init_lcd
             _leitura_chaves_sistema
               _leitura_continua_adc
                   _mensagem_inicial
 ---------------------------------------------------------------------------------
 (1) _mensagem_inicial                                    36    36      0    5774
                                             27 COMRAM     2     2      0
                                              0 BANK2     34    34      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _leitura_continua_adc                                 8     8      0     312
                                             28 COMRAM     8     8      0
                        _leitura_adc
 ---------------------------------------------------------------------------------
 (2) _leitura_adc                                          7     5      2      22
                                             21 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _leitura_chaves_sistema                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             1     1      0     613
                                             24 COMRAM     1     1      0
                              _delay
                    _escreve_cmd_lcd
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     171
                  _config_timer_dois
                  _config_timer_zero
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     171
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     4     2      2     171
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _config_timer_dois                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_uart                                      0     0      0     776
            _configura_baudrate_uart
 ---------------------------------------------------------------------------------
 (2) _configura_baudrate_uart                             14    10      4     776
                                             35 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     556
                                             21 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_shrc                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0   20222
                                             51 COMRAM     1     1      0
                                              4 BANK1      2     2      0
                                _gps *
 ---------------------------------------------------------------------------------
 (2) _gps                                                 65    65      0   19999
                                              8 BANK0      2     2      0
                                              0 BANK1      4     4      0
                    _convert_to_date
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                             _get_dt
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _get_dt                                              25    21      4    7617
                                             47 COMRAM     4     0      4
                                              0 BANK0      2     2      0
                                              0 BANK2     19    19      0
                               _atol
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (2) _posicao_cursor_lcd                                   3     2      1    2689
                                             24 COMRAM     3     2      1
                _endereco_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _endereco_cursor_lcd                                  1     1      0     353
                                             23 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _escreve_frase_ram_lcd                                2     0      2    2528
                                             24 COMRAM     2     0      2
              _escreve_caractere_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_caractere_lcd                                1     1      0     384
                                             23 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _escreve_cmd_lcd                                      1     1      0     477
                                             23 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     2      0     136
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1673
                                             33 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             21 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _convert_to_date                                     18    14      4    6654
                                              0 BANK0      8     4      4
                                              0 BANK2     10    10      0
                            ___lldiv
                             ___lmul
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             27    17     10    3383
                                             33 COMRAM    18     8     10
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4    1124
                                             28 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4    1255
                                             21 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     638
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     950
                                             21 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1281
                                             21 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _controle_shrc                                        0     0      0      45
                   _ativa_latch_shrc
                   _envia_dados_shrc
 ---------------------------------------------------------------------------------
 (2) _envia_dados_shrc                                     2     2      0      45
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ativa_latch_shrc                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                 17    17      0     271
                                              4 COMRAM    17    17      0
                   _recebe_dado_uart
                    _tratamento_uart
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (8) i2_write_timer_zero                                   4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _tratamento_uart                                      1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _recebe_dado_uart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _controle_shrc
     _ativa_latch_shrc
     _envia_dados_shrc
   _escalonador
     _gps *
       _convert_to_date
         ___lldiv
         ___lmul
         ___wmul
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _escreve_cmd_lcd
         _delay
       _escreve_frase_ram_lcd
         _escreve_caractere_lcd
           _delay
       _get_dt
         _atol
           ___lmul
           _isdigit
         _escreve_cmd_lcd
           _delay
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
         _posicao_cursor_lcd
           _endereco_cursor_lcd
             _delay
       _posicao_cursor_lcd
         _endereco_cursor_lcd
           _delay
   _inicializa_shrc
   _inicializa_tarefas
   _inicializa_uart
     _configura_baudrate_uart
       ___aldiv
   _init_hardware
     _config_timer_dois
     _config_timer_zero
       _write_timer_zero
     _init_interrupt
     _init_oscilador
     _init_ports
   _init_lcd
     _delay
     _escreve_cmd_lcd
       _delay
   _leitura_chaves_sistema
   _leitura_continua_adc
     _leitura_adc
   _mensagem_inicial
     _escreve_cmd_lcd
       _delay
     _escreve_frase_ram_lcd
       _escreve_caractere_lcd
         _delay
     _posicao_cursor_lcd
       _endereco_cursor_lcd
         _delay

 _isr (ROOT)
   _recebe_dado_uart
   _tratamento_uart
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     200      21       25.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     22      22       9       13.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      A      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     34      49       1       77.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     20A      20        0.0%
DATA                 0      0     40A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Feb 04 16:34:40 2022

        __end_of_mensagem_inicial 0942                       get_dt@index 0211  
                               _s 003F            __size_of_controle_shrc 000C  
                     _SSPSTATbits 000FC7                  ??_init_interrupt 0016  
                     __CFG_BOR$ON 000000                                _rd 00C2  
             ___wmul@multiplicand 0018                       __CFG_BORV$3 000000  
                    ?_escalonador 0001                  ?_inicializa_shrc 0001  
                ?_inicializa_uart 0001                               l337 1020  
                             l433 0E98                               l620 1120  
                             l437 0E9A                               l622 112E  
                             l630 0B30                               l640 0B6E  
                             l632 0B3A                               l641 0B70  
                             l642 0B78                               l634 0B44  
                             l643 0B7A                               l644 0B82  
                             l636 0B4E                               l660 0DDE  
                             l652 0DAA                               l645 0B84  
                             l637 0B50                               l661 0DE0  
                             l638 0B64                               l662 0DE8  
                             l654 0DB4                               l639 0B66  
                             l663 0DEA                               l671 0D36  
                             l664 0DF2                               l656 0DBE  
                             l681 0CC6                               l665 0DF4  
                             l657 0DC0                               l690 0CFC  
                             l658 0DD4                               l691 0D04  
                             l683 0CD0                               l659 0DD6  
                             l692 0D06                               l693 0D0E  
                             l685 0CDA                               l694 0D10  
                             l695 0D18                               l687 0CE4  
                             l696 0D1A                               l688 0CE6  
                             l689 0CFA                               _PCL 000FF9  
                             _PR2 000FCB                               _E_W 0045  
                ??_init_oscilador 0016                               _n_s 0046  
                             _gps 0BAC                               _isr 0008  
               ??_tratamento_uart 0001                               _txt 0180  
                             prod 000FF3                               tosl 000FFD  
                             wreg 000FE8                    get_dt@dt_index 0212  
                    __CFG_FOSC$HS 000000                    create_name@cvt 60AB  
       __size_of_write_timer_zero 0012                      __CFG_LVP$OFF 000000  
         ??_escreve_frase_ram_lcd 001B                      __CFG_WDT$OFF 000000  
                            l1703 0CA4                              l1487 06FA  
                            l1756 0FBC                              l1766 108A  
                            l2823 1022                              l2841 1048  
                            l5401 0E6C                              l2819 1018  
                            l5403 0E70                              l5411 0E7E  
                            l5405 0E74                              l5407 0E78  
                            l5361 076E                              l5353 0740  
                            l5371 07A2                              l5363 0772  
                            l5347 0728                              l5613 03B0  
                            l5359 0762                              l5375 07B0  
                            ?_gps 0001                              l5801 03D8  
                            l5379 07C6                              l7501 1060  
                            l5813 049A                              l5805 03E0  
                            l7503 1068                              l7431 0CDC  
                            l7423 0CC8                              l7505 106C  
                            l7521 0D42                              l8081 094E  
                            l7611 0654                              l7427 0CD2  
                            ?_isr 0001                              l7509 1080  
                            l7621 06A8                              l7613 065A  
                            l7381 1134                              l7373 1126  
                            l7533 0D6C                              l7525 0D50  
                            l7541 0D92                              l8093 09E0  
                            l8077 0946                              l7455 0EDC  
                            l7471 1170                              l7367 1118  
                            l7391 0DAC                              l7481 0F8A  
                            l7641 0036                              l7625 06B6  
                            l7561 0B3C                              l7545 0F24  
                            l7529 0D5E                              l7537 0D72  
                            l8089 09B4                              l7459 0EF0  
                            l7483 0F92                              l7635 001C  
                            l7619 0664                              l7395 0DB6  
                            l7539 0D8E                              l5795 03CC  
                            l7493 0FB2                              l7485 0F96  
                            l7565 0B46                              l7557 0B32  
                            l7549 0F4C                              l8621 10AC  
                            l7671 00B8                              l7647 0060  
                            l5799 03D4                              l7657 0088  
                            l7593 0BA6                              l7851 0C66  
                            l7659 008C                              l7595 0614  
                            l8627 10BA                              l7685 012C  
                            l7677 00D4                              l7847 0C56  
                            l7679 00DA                              l7687 0134  
                            l7849 0C62                              l7689 014C  
                            l7873 081C                              l7859 0C96  
                            l7867 07EC             _escreve_caractere_lcd 0CB6  
                            STR_1 6274                              STR_2 626E  
                            STR_3 6255                              STR_4 624C  
                            STR_5 61F5                              STR_6 61BC  
                            STR_7 619B                              STR_8 6239  
                            STR_9 6266                    timer_dois@flag 003C  
                            _BRGH 007D62                              _T0IF 007F92  
                            _CREN 007D5C                              _LATB 000F8A  
                            _PIE1 000F9D                              u5145 02AE  
                            u5155 02F8                 _valor_leitura_adc 0060  
                            u5175 033A                              u5185 0384  
                            _RCIF 007CF5                              u8040 0F44  
                            u8050 0F6C                              u8047 0F3A  
                            u8057 0F62                              u4785 0EA6  
                            i2l77 05D8                              u8900 08AA  
                            u8910 08C2                              u8888 09A0  
                            _TMR2 000FCC                              _SPEN 007D5F  
                            _TRMT 007D61                              _TXEN 007D65  
                            _SYNC 007D64                              _dado 003E  
                            _flag 00C0                              _atol 0614  
                            _main 1094                              fsr0h 000FEA  
                            fsr1h 000FE2                              indf0 000FEF  
                            fsr2h 000FDA                              fsr0l 000FE9  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 004A     __size_of_leitura_continua_adc 0128  
                            prodh 000FF4                              prodl 000FF3  
    tratamento_uart@received_char 0001                              start 000E  
                   __CFG_IESO$OFF 000000                     disk_readp@arr 0222  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000000  
                           ??_gps 00FD                             ??_isr 0005  
__size_of_configura_baudrate_uart 012C                     __CFG_PLLDIV$5 000000  
                 __end_of___aldiv 07D8                             ?_atol 0022  
                           ?_main 0001                             _EEADR 000FA9  
                           STR_11 622C                             STR_20 621F  
                           STR_12 6211                             STR_13 61E7  
                           STR_21 61CB                             STR_22 625E  
                           STR_14 6203                             STR_23 627C  
                           STR_24 6279                             STR_16 61AC  
                           STR_17 618A                             STR_18 61D9  
                           STR_19 6243                   __end_of___lldiv 0CB6  
                           _T0CON 000FD5                             u10707 0A06  
                           u10717 0A22                             u10807 11DC  
                           u10727 0A3E                             _T2CON 000FCA  
                           u10817 11E4                             u10737 0BBA  
                           u10747 0C1E                             u10757 0860  
                           u10767 102A                             u10777 1032  
                           u10697 0902                             u10787 103A  
                           u10797 1042                    _data_buffer_32 01DA  
                 __end_of___lwdiv 0FC6                      ?_leitura_adc 0016  
                 __end_of___lwmod 1094   __size_of_leitura_chaves_sistema 0048  
                           i2l196 0B12                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _SPBRG 000FAF  
                   __CFG_USBDIV$1 000000                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                           _TXREG 000FAD                             _TXSTA 000FAC  
                           _FatFs 0038            __end_ofcreate_name@cvt 612B  
                   __CFG_PWRT$OFF 000000               ___lmul@multiplicand 001A  
      __size_of_config_timer_dois 000C                    __CFG_FCMEN$OFF 000000  
      __size_of_config_timer_zero 001A                 convert_to_date@dt 00F5  
               get_dt@dado_buffer 0200                 ??_convert_to_date 00F9  
                           _delay 1114                  _envia_dados_shrc 100E  
                 __end_of_dpowers 618A                   __end_of_isdigit 1178  
        __size_of_escreve_cmd_lcd 008C                             atol@a 002B  
                           atol@c 002F                     _controle_shrc 1240  
                           atol@s 0022                             pclath 000FFA  
                           tablat 000FF5                             status 000FD8  
                 __end_of_sprintf 015A                  get_dt@dt_pointer 0210  
                 __initialization 0E02                      __end_of_atol 070C  
                    __end_of_main 10C8                _inicializa_tarefas 10C8  
                 escalonador@cont 0034                            ??_atol 0026  
                          ??_main 0035                     __activetblptr 000002  
             ?_inicializa_tarefas 0001                   __CFG_CCP2MX$OFF 000000  
                          ?_delay 0001            ?_escreve_caractere_lcd 0001  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                  ?_controle_shrc 0001                            _ADRESH 000FC4  
                          _ADRESL 000FC3                            _EEDATA 000FA8  
                          _EECON2 000FA7                            _INT0IE 007F94  
                          _INT0IF 007F91                            i2l1200 1222  
                          _PCLATH 000FFA                            _INTCON 000FF2  
                          i2l5641 1230                            i2l5661 0AE8  
                          i2l6383 059E                            i2l6375 0568  
                          i2l6367 0558                            i2l5657 0AD2  
                          i2l5649 0AAE                            i2l6395 05C4  
                          i2l6387 05A2                            i2l6379 0570  
                          i2l6397 05D0                            _TMR0IF 007F92  
                          _TMR2IF 007CF1          __end_of_recebe_dado_uart 1234  
                          _SPPCFG 000F63                            _SPPCON 000F65  
                _is_it_gga_string 0042                            _SSPBUF 000FC9  
          _leitura_chaves_sistema 0FC6              ??_inicializa_tarefas 0016  
      __end_of_posicao_cursor_lcd 0D98            __size_of_init_hardware 0016  
                          _Result 0040                convert_to_date@dia 0204  
              convert_to_date@ano 0202                convert_to_date@mes 0200  
                          ___lmul 0ECC                         ??___aldiv 001E  
                          ___wmul 10EE                    __CFG_STVREN$ON 000000  
                       ??___lldiv 001E                         ??___lwdiv 001A  
                       ??___lwmod 0021                            _get_dt 07D8  
                          _folder 0150                            _estado 003D  
                __end_of_init_lcd 0A82                            clear_0 0E2A  
                          clear_1 0E3C                            clear_2 0E48  
                          clear_3 0E54          configura_baudrate_uart@x 0030  
                       ??_isdigit 0016              __size_of_escalonador 00A2  
                    __mediumconst 60AA             write_timer_zero@timer 0018  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                  _write_timer_zero 11FE  
                       ??_sprintf 002C         escreve_caractere_lcd@data 0018  
                      __accesstop 0060           __end_of__initialization 0E5A  
                 __CFG_PBADEN$OFF 000000                     ___rparam_used 000001  
               ??_escreve_cmd_lcd 0018                    __pcstackCOMRAM 0001  
               ?_ativa_latch_shrc 0001                   _tratamento_uart 0A82  
     __end_of_endereco_cursor_lcd 0E02                      __pidataBANK0 1192  
               ?_mensagem_inicial 0001           _configura_baudrate_uart 029C  
                   __end_of_delay 1138                ??_ativa_latch_shrc 0016  
              ??_mensagem_inicial 001C                _tarefa_em_execucao 0047  
      __end_ofi2_write_timer_zero 1222   configura_baudrate_uart@baudrate 0024  
                 ??_controle_shrc 0018                     _init_hardware 11C2  
            __size_of_leitura_adc 0064                           ??_delay 0016  
                _is_it_rmc_string 0041      mensagem_inicial@msg_linha_um 0200  
                      __pbssBANK0 0060                        __pbssBANK1 0100  
  __size_of_escreve_frase_ram_lcd 0052     __end_of_escreve_frase_ram_lcd 0F74  
       escreve_inteiro_uart@F3952 00E7                        _gga_buffer 0100  
                         ?___lmul 0016          __end_of_envia_dados_shrc 1052  
                         ?___wmul 0016             mensagem_inicial@F4020 615E  
           mensagem_inicial@F4018 616F                           ?_get_dt 0030  
                  ___lmul@product 001E                   _convert_to_date 015A  
    __end_of_leitura_continua_adc 04F0                      _gga_pointers 0086  
                         _INTCON2 000FF1                           _INTCON3 000FF0  
                  ?_init_hardware 0001                           _SSPCON1 000FC6  
        __size_of_inicializa_shrc 0008          __size_of_inicializa_uart 0022  
                         _SSPSTAT 000FC7                   __CFG_VREGEN$OFF 000000  
                       ?_init_lcd 0001           __end_of_tratamento_uart 0B20  
                         __Hparam 0000         ??_configura_baudrate_uart 0028  
                         __Lparam 0000               convert_to_date@temp 0206  
                         ___aldiv 070C                   __size_of___lmul 0056  
                         ___lldiv 0C34                   __size_of___wmul 0026  
                         ___lwdiv 0F74                           ___lwmod 1052  
                 __size_of_get_dt 00C4                           __pcinit 0E02  
                      _init_ports 11AA                           __ramtop 0800  
                         __ptext0 1094                           __ptext1 089C  
                         __ptext2 03C8                           __ptext3 0E68  
                         __ptext4 0FC6                           __ptext5 09E4  
                         __ptext6 11C2                           __ptext7 11AA  
                         __ptext8 124C                           __ptext9 11EC  
                       _T0CONbits 000FD5           i2write_timer_zero@timer 0003  
     endereco_cursor_lcd@endereco 0018                           _dpowers 6180  
                    __size_of_gps 0088                           _isdigit 115A  
                    __size_of_isr 060C           ??_escreve_caractere_lcd 0018  
                ___aldiv@dividend 0016           __size_of_init_interrupt 0012  
                         _sprintf 0012                           gps@date 01FA  
                  __pintcode_body 04F0           ?_leitura_chaves_sistema 0001  
            end_of_initialization 0E5A                           isr@cont 0015  
      __end_ofleitura_chave@F3834 615E        __end_ofleitura_chave@F3836 614D  
      __end_ofleitura_chave@F3838 613C           __size_of_init_oscilador 0008  
                   __Lmediumconst 60AA                        ??_init_lcd 0019  
                         int_func 04F0                        _rmc_buffer 0194  
               ?_recebe_dado_uart 0001            write_timer_zero@timer0 0016  
                 ___lldiv@divisor 001A                ??_recebe_dado_uart 0001  
                 ___lldiv@counter 0022           __end_of_convert_to_date 029C  
        envia_dados_shrc@contador 0016                         _RCSTAbits 000FAB  
        __end_of_write_timer_zero 1210                  ___aldiv@quotient 0020  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                         _PORTAbits 000F80  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                       _PORTEbits 000F84                   ??_init_hardware 001A  
              _posicao_cursor_lcd 0D28   __end_of_configura_baudrate_uart 03C8  
                       _TRISAbits 000F92                         _TRISBbits 000F93  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
                 _escreve_cmd_lcd 0B20    __end_of_leitura_chaves_sistema 100E  
             ?_posicao_cursor_lcd 0019                  ?_tratamento_uart 0001  
            _leitura_continua_adc 03C8                 ??_inicializa_shrc 0016  
               ??_inicializa_uart 0032       __size_of_inicializa_tarefas 0026  
            ??_posicao_cursor_lcd 001A                    __end_of___lmul 0F22  
                  __end_of___wmul 1114                     ??_escalonador 01FE  
                     ?_init_ports 0001                    __end_of_get_dt 089C  
             start_initialization 0E02         __size_of_ativa_latch_shrc 0014  
                     __end_of_gps 0C34                       __end_of_isr 0614  
       __size_of_mensagem_inicial 00A6                i2_write_timer_zero 1210  
           ?_leitura_continua_adc 0001                  _data_uart_recebe 0049  
                ?_convert_to_date 00F5               ?i2_write_timer_zero 0001  
                        ??___lmul 001E                          ??___wmul 001A  
               ?_envia_dados_shrc 0001                          ??_get_dt 00F5  
                     __pdataBANK0 00DD                  __CFG_LPT1OSC$OFF 000000  
              ??_envia_dados_shrc 0016           __end_of_escreve_cmd_lcd 0BAC  
                   ??_leitura_adc 0018      __size_of_endereco_cursor_lcd 006A  
                     __pbssBIGRAM 0222                       __pbssCOMRAM 0035  
                   __pcstackBANK0 00F5                     __pcstackBANK1 01FA  
                   __pcstackBANK2 0200                    _init_interrupt 11EC  
            ??i2_write_timer_zero 0003               __end_of_escalonador 09E4  
                     _data_buffer 00C8             __end_of_controle_shrc 124C  
                    _isdigit$2783 0017                    _init_oscilador 124C  
                     sprintf@flag 002F                       sprintf@prec 0030  
             __size_of_init_ports 0018             _escreve_frase_ram_lcd 0F22  
               __size_of_init_lcd 009E                  ___lwdiv@dividend 0016  
               delay@contador_int 0017                 delay@contador_ext 0016  
                       _gga_index 00C4                         __pintcode 0008  
                   __pmediumconst 60AA                          ?___aldiv 0016  
                        ?___lldiv 0016                          ?___lwdiv 0016  
                        ?___lwmod 001D                _sinaliza_int_timer 0048  
                       _dt_buffer 00D7            __end_of_init_interrupt 11FE  
                        ?_isdigit 0001    __size_of_escreve_caractere_lcd 0072  
   __end_of_escreve_caractere_lcd 0D28                  ___lwdiv@quotient 001B  
                  __size_of_delay 0024               __end_of_leitura_adc 0ECC  
          __end_of_init_oscilador 1254                          ?_sprintf 0022  
                       _p_tarefas 00B9            ??_leitura_continua_adc 001D  
                 ___aldiv@divisor 001A                   ___aldiv@counter 001E  
                  ___wmul@product 001A                          _LATBbits 000F8A  
                        _PIE1bits 000F9D                         _rmc_index 003A  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        i2u632_40 0546                          i2u632_46 0548  
               ?_write_timer_zero 0016                leitura_chave@F3834 614D  
              leitura_chave@F3836 613C                leitura_chave@F3838 612B  
        posicao_cursor_lcd@coluna 0019                ??_write_timer_zero 0018  
      posicao_cursor_lcd@endereco 001B                         get_dt@_dt 020C  
       __size_of_recebe_dado_uart 0012                       _escalonador 0942  
                      _ADCON0bits 000FC2                        _ADCON1bits 000FC1  
                      _ADCON2bits 000FC0                 ___wmul@multiplier 0016  
                ?_escreve_cmd_lcd 0001       escreve_frase_ram_lcd@buffer 0019  
                 ?_init_interrupt 0001                  _ativa_latch_shrc 11D8  
                 _inicializa_shrc 1254                   _inicializa_uart 1138  
                _mensagem_inicial 089C                   ?_init_oscilador 0001  
               ___lmul@multiplier 0016                         copy_data0 0E16  
        ?_configura_baudrate_uart 0024            ?_escreve_frase_ram_lcd 0019  
                      _EECON1bits 000FA6      leitura_continua_adc@cont_int 0023  
        escreve_inteiro_lcd@F3962 00EE                          __Hrparam 0000  
                     _info_chaves 00A6                          __Lrparam 0000  
                __size_of___aldiv 00CC                  __size_of___lldiv 0082  
                __size_of___lwdiv 0052                  __size_of___lwmod 0042  
                    ??_init_ports 0016                       _leitura_adc 0E68  
                      sprintf@val 0031             __end_of_init_hardware 11D8  
                __size_of_isdigit 001E                          _gga_code 00BD  
                 ___lwdiv@divisor 0018                   ___lwdiv@counter 001A  
                        _fileName 00DD                          __ptext10 1178  
                        __ptext11 11FE                          __ptext20 07D8  
                        __ptext12 1234                          __ptext21 0D28  
                        __ptext13 1138                          __ptext30 0012  
                        __ptext22 0D98                          __ptext14 029C  
                        __ptext31 1052                          __ptext23 0F22  
                        __ptext15 070C                          __ptext40 1210  
                        __ptext32 0F74                          __ptext24 0CB6  
                        __ptext16 10C8                          __ptext41 0A82  
                        __ptext33 10EE                          __ptext25 0B20  
                        __ptext17 1254                          __ptext42 1222  
                        __ptext34 0ECC                          __ptext26 1114  
                        __ptext18 0942                          __ptext43 0000  
                        __ptext35 0C34                          __ptext27 0614  
                        __ptext19 0BAC                          __ptext36 1240  
                        __ptext28 115A                          __ptext37 100E  
                        __ptext29 015A                          __ptext38 11D8  
                        _fileSize 00AD                    _timeout_tarefa 00C6  
                __size_of_sprintf 0148                      _rmc_pointers 009A  
      __end_of_inicializa_tarefas 10EE          i2write_timer_zero@timer0 0001  
                        _init_lcd 09E4                     __size_of_atol 00F8  
                   __size_of_main 0034               _endereco_cursor_lcd 0D98  
              __end_of_init_ports 11C2                 _comma_counter_gga 0044  
               _comma_counter_rmc 0043                          _rmc_code 0035  
     __size_of_posicao_cursor_lcd 0070                          int$flags 004A  
         posicao_cursor_lcd@linha 001A          __size_of_tratamento_uart 009E  
                        atol@sign 002A          leitura_continua_adc@cont 0024  
         __end_of_inicializa_shrc 125C           __end_of_inicializa_uart 115A  
           __CFG_CPUDIV$OSC1_PLL2 000000              ?_endereco_cursor_lcd 0001  
                      _INTCONbits 000FF2                  leitura_adc@canal 001C  
                        isdigit@c 0018         __size_of_envia_dados_shrc 0044  
               _config_timer_dois 1234                      _tempo_backup 00B5  
               _config_timer_zero 1178                          intlevel2 0000  
                       sprintf@ap 002D                         sprintf@sp 0022  
              ?_config_timer_dois 0001          mensagem_inicial@msg_dois 0211  
              ?_config_timer_zero 0001                      _tempo_tarefa 00B1  
    envia_dados_shrc@data_to_shrc 0017                  ___lwmod@dividend 001D  
                ___lldiv@dividend 0016               ??_config_timer_dois 0016  
                      _OSCCONbits 000FD3               ??_config_timer_zero 001A  
                _recebe_dado_uart 1222          __size_of_convert_to_date 0142  
           ??_endereco_cursor_lcd 0018          ??_leitura_chaves_sistema 0016  
                        sprintf@c 0033                          sprintf@f 0024  
                ___lldiv@quotient 001E                   ___lwmod@divisor 001F  
                 ___lwmod@counter 0021         __end_of_config_timer_dois 1240  
                    ___aldiv@sign 001F         __end_of_config_timer_zero 1192  
     __size_ofi2_write_timer_zero 0012                       _SSPCON1bits 000FC6  
          escreve_cmd_lcd@comando 0018     __end_ofmensagem_inicial@F4020 616F  
   __end_ofmensagem_inicial@F4018 6180          __end_of_ativa_latch_shrc 11EC  
