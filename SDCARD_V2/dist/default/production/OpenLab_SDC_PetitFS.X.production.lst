

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jan 17 20:07:05 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           ; Version 1.45
    38                           ; Generated 16/11/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4550 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataCOMRAM
    73  000DA4                     __pidataCOMRAM:
    74                           	opt stack 0
    75                           
    76                           ;initializer for escreve_inteiro_uart@F3956
    77  000DA4  30                 	db	48
    78  000DA5  30                 	db	48
    79  000DA6  30                 	db	48
    80  000DA7  30                 	db	48
    81  000DA8  30                 	db	48
    82  000DA9  30                 	db	48
    83  000DAA  00                 	db	0
    84                           
    85                           	psect	idataBANK0
    86  000D92                     __pidataBANK0:
    87                           	opt stack 0
    88                           
    89                           ;initializer for _fileName
    90  000D92  63                 	db	99
    91  000D93  68                 	db	104
    92  000D94  65                 	db	101
    93  000D95  63                 	db	99
    94  000D96  6B                 	db	107
    95  000D97  2E                 	db	46
    96  000D98  74                 	db	116
    97  000D99  78                 	db	120
    98  000D9A  74                 	db	116
    99  000D9B  00                 	db	0
   100                           
   101                           	psect	smallconst
   102  000800                     __psmallconst:
   103                           	opt stack 0
   104  000800  00                 	db	0
   105  000801                     create_name@cvt:
   106                           	opt stack 0
   107  000801  80                 	db	128
   108  000802  9A                 	db	154
   109  000803  90                 	db	144
   110  000804  41                 	db	65
   111  000805  8E                 	db	142
   112  000806  41                 	db	65
   113  000807  8F                 	db	143
   114  000808  80                 	db	128
   115  000809  45                 	db	69
   116  00080A  45                 	db	69
   117  00080B  45                 	db	69
   118  00080C  49                 	db	73
   119  00080D  49                 	db	73
   120  00080E  49                 	db	73
   121  00080F  8E                 	db	142
   122  000810  8F                 	db	143
   123  000811  90                 	db	144
   124  000812  92                 	db	146
   125  000813  92                 	db	146
   126  000814  4F                 	db	79
   127  000815  99                 	db	153
   128  000816  4F                 	db	79
   129  000817  55                 	db	85
   130  000818  55                 	db	85
   131  000819  59                 	db	89
   132  00081A  99                 	db	153
   133  00081B  9A                 	db	154
   134  00081C  9B                 	db	155
   135  00081D  9C                 	db	156
   136  00081E  9D                 	db	157
   137  00081F  9E                 	db	158
   138  000820  9F                 	db	159
   139  000821  41                 	db	65
   140  000822  49                 	db	73
   141  000823  4F                 	db	79
   142  000824  55                 	db	85
   143  000825  A5                 	db	165
   144  000826  A5                 	db	165
   145  000827  A6                 	db	166
   146  000828  A7                 	db	167
   147  000829  A8                 	db	168
   148  00082A  A9                 	db	169
   149  00082B  AA                 	db	170
   150  00082C  AB                 	db	171
   151  00082D  AC                 	db	172
   152  00082E  21                 	db	33
   153  00082F  AE                 	db	174
   154  000830  AF                 	db	175
   155  000831  B0                 	db	176
   156  000832  B1                 	db	177
   157  000833  B2                 	db	178
   158  000834  B3                 	db	179
   159  000835  B4                 	db	180
   160  000836  B5                 	db	181
   161  000837  B6                 	db	182
   162  000838  B7                 	db	183
   163  000839  B8                 	db	184
   164  00083A  B9                 	db	185
   165  00083B  BA                 	db	186
   166  00083C  BB                 	db	187
   167  00083D  BC                 	db	188
   168  00083E  BD                 	db	189
   169  00083F  BE                 	db	190
   170  000840  BF                 	db	191
   171  000841  C0                 	db	192
   172  000842  C1                 	db	193
   173  000843  C2                 	db	194
   174  000844  C3                 	db	195
   175  000845  C4                 	db	196
   176  000846  C5                 	db	197
   177  000847  C6                 	db	198
   178  000848  C7                 	db	199
   179  000849  C8                 	db	200
   180  00084A  C9                 	db	201
   181  00084B  CA                 	db	202
   182  00084C  CB                 	db	203
   183  00084D  CC                 	db	204
   184  00084E  CD                 	db	205
   185  00084F  CE                 	db	206
   186  000850  CF                 	db	207
   187  000851  D0                 	db	208
   188  000852  D1                 	db	209
   189  000853  D2                 	db	210
   190  000854  D3                 	db	211
   191  000855  D4                 	db	212
   192  000856  D5                 	db	213
   193  000857  D6                 	db	214
   194  000858  D7                 	db	215
   195  000859  D8                 	db	216
   196  00085A  D9                 	db	217
   197  00085B  DA                 	db	218
   198  00085C  DB                 	db	219
   199  00085D  DC                 	db	220
   200  00085E  DD                 	db	221
   201  00085F  DE                 	db	222
   202  000860  DF                 	db	223
   203  000861  E0                 	db	224
   204  000862  E1                 	db	225
   205  000863  E2                 	db	226
   206  000864  E3                 	db	227
   207  000865  E4                 	db	228
   208  000866  E5                 	db	229
   209  000867  E6                 	db	230
   210  000868  E7                 	db	231
   211  000869  E8                 	db	232
   212  00086A  E9                 	db	233
   213  00086B  EA                 	db	234
   214  00086C  EB                 	db	235
   215  00086D  EC                 	db	236
   216  00086E  ED                 	db	237
   217  00086F  EE                 	db	238
   218  000870  EF                 	db	239
   219  000871  F0                 	db	240
   220  000872  F1                 	db	241
   221  000873  F2                 	db	242
   222  000874  F3                 	db	243
   223  000875  F4                 	db	244
   224  000876  F5                 	db	245
   225  000877  F6                 	db	246
   226  000878  F7                 	db	247
   227  000879  F8                 	db	248
   228  00087A  F9                 	db	249
   229  00087B  FA                 	db	250
   230  00087C  FB                 	db	251
   231  00087D  FC                 	db	252
   232  00087E  FD                 	db	253
   233  00087F  FE                 	db	254
   234  000880  FF                 	db	255
   235  000881                     __end_ofcreate_name@cvt:
   236                           	opt stack 0
   237  0000                     _RCSTA	set	4011
   238  0000                     _TXSTA	set	4012
   239  0000                     _RCREG	set	4014
   240  0000                     _RCSTAbits	set	4011
   241  0000                     _TXREG	set	4013
   242  0000                     _TRISCbits	set	3988
   243  0000                     _SPBRG	set	4015
   244  0000                     _ADRESL	set	4035
   245  0000                     _ADRESH	set	4036
   246  0000                     _ADCON0	set	4034
   247  0000                     _ADCON0bits	set	4034
   248  0000                     _ADCON2bits	set	4032
   249  0000                     _ADCON1bits	set	4033
   250  0000                     _ADCON1	set	4033
   251  0000                     _PORTBbits	set	3969
   252  0000                     _PR2	set	4043
   253  0000                     _TMR2	set	4044
   254  0000                     _T2CON	set	4042
   255  0000                     _OSCCONbits	set	4051
   256  0000                     _TRISE	set	3990
   257  0000                     _TRISC	set	3988
   258  0000                     _TRISA	set	3986
   259  0000                     _TRISD	set	3989
   260  0000                     _LATB	set	3978
   261  0000                     _TRISB	set	3987
   262  0000                     _T0CONbits	set	4053
   263  0000                     _TMR0L	set	4054
   264  0000                     _TMR0H	set	4055
   265  0000                     _PIE1	set	3997
   266  0000                     _INTCON3	set	4080
   267  0000                     _INTCON2	set	4081
   268  0000                     _INTCON	set	4082
   269  0000                     _SPPCFG	set	3939
   270  0000                     _SPPCON	set	3941
   271  0000                     _T0CON	set	4053
   272  0000                     _SSPCON1	set	4038
   273  0000                     _SSPBUF	set	4041
   274  0000                     _SSPSTATbits	set	4039
   275  0000                     _SSPCON1bits	set	4038
   276  0000                     _LATBbits	set	3978
   277  0000                     _PCL	set	4089
   278  0000                     _PCLATH	set	4090
   279  0000                     _INTCONbits	set	4082
   280  0000                     _PIR1bits	set	3998
   281  0000                     _PIE1bits	set	3997
   282  0000                     _RCIF	set	31989
   283  0000                     _TRMT	set	32097
   284  0000                     _TXEN	set	32101
   285  0000                     _CREN	set	32092
   286  0000                     _SPEN	set	32095
   287  0000                     _SYNC	set	32100
   288  0000                     _BRGH	set	32098
   289  0000                     _TMR2IF	set	31985
   290  0000                     _INT0IE	set	32660
   291  0000                     _INT0IF	set	32657
   292  0000                     _T0IF	set	32658
   293  0000                     _TMR0IF	set	32658
   294  000881  63                 	db	99	;'c'
   295  000882  68                 	db	104	;'h'
   296  000883  65                 	db	101	;'e'
   297  000884  63                 	db	99	;'c'
   298  000885  6B                 	db	107	;'k'
   299  000886  2E                 	db	46
   300  000887  74                 	db	116	;'t'
   301  000888  78                 	db	120	;'x'
   302  000889  74                 	db	116	;'t'
   303  00088A  00                 	db	0
   304  00088B  0D                 	db	13
   305  00088C  0A                 	db	10
   306  00088D  00                 	db	0
   307  00088E  00                 	db	0	; dummy byte at the end
   308  0000                     
   309                           ; #config settings
   310                           
   311                           	psect	cinit
   312  000BAC                     __pcinit:
   313                           	opt stack 0
   314  000BAC                     start_initialization:
   315                           	opt stack 0
   316  000BAC                     __initialization:
   317                           	opt stack 0
   318                           
   319                           ; Initialize objects allocated to BANK0 (10 bytes)
   320                           ; load TBLPTR registers with __pidataBANK0
   321  000BAC  0E92               	movlw	low __pidataBANK0
   322  000BAE  6EF6               	movwf	tblptrl,c
   323  000BB0  0E0D               	movlw	high __pidataBANK0
   324  000BB2  6EF7               	movwf	tblptrh,c
   325  000BB4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   326  000BB6  6EF8               	movwf	tblptru,c
   327  000BB8  EE00  F0E6         	lfsr	0,__pdataBANK0
   328  000BBC  EE10 F00A          	lfsr	1,10
   329  000BC0                     copy_data0:
   330  000BC0  0009               	tblrd		*+
   331  000BC2  CFF5 FFEE          	movff	tablat,postinc0
   332  000BC6  50E5               	movf	postdec1,w,c
   333  000BC8  50E1               	movf	fsr1l,w,c
   334  000BCA  E1FA               	bnz	copy_data0
   335                           
   336                           ; Initialize objects allocated to COMRAM (7 bytes)
   337                           ; load TBLPTR registers with __pidataCOMRAM
   338  000BCC  0EA4               	movlw	low __pidataCOMRAM
   339  000BCE  6EF6               	movwf	tblptrl,c
   340  000BD0  0E0D               	movlw	high __pidataCOMRAM
   341  000BD2  6EF7               	movwf	tblptrh,c
   342  000BD4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   343  000BD6  6EF8               	movwf	tblptru,c
   344  000BD8  EE00  F03F         	lfsr	0,__pdataCOMRAM
   345  000BDC  EE10 F007          	lfsr	1,7
   346  000BE0                     copy_data1:
   347  000BE0  0009               	tblrd		*+
   348  000BE2  CFF5 FFEE          	movff	tablat,postinc0
   349  000BE6  50E5               	movf	postdec1,w,c
   350  000BE8  50E1               	movf	fsr1l,w,c
   351  000BEA  E1FA               	bnz	copy_data1
   352                           
   353                           ; Clear objects allocated to BIGRAM (512 bytes)
   354  000BEC  EE00  F0F0         	lfsr	0,__pbssBIGRAM
   355  000BF0  EE12 F000          	lfsr	1,512
   356  000BF4                     clear_0:
   357  000BF4  6AEE               	clrf	postinc0,c
   358  000BF6  50E5               	movf	postdec1,w,c
   359  000BF8  50E1               	movf	fsr1l,w,c
   360  000BFA  E1FC               	bnz	clear_0
   361  000BFC  50E2               	movf	fsr1h,w,c
   362  000BFE  E1FA               	bnz	clear_0
   363                           
   364                           ; Clear objects allocated to BANK0 (108 bytes)
   365  000C00  EE00  F060         	lfsr	0,__pbssBANK0
   366  000C04  0E6C               	movlw	108
   367  000C06                     clear_1:
   368  000C06  6AEE               	clrf	postinc0,c
   369  000C08  06E8               	decf	wreg,f,c
   370  000C0A  E1FD               	bnz	clear_1
   371                           
   372                           ; Clear objects allocated to COMRAM (34 bytes)
   373  000C0C  EE00  F001         	lfsr	0,__pbssCOMRAM
   374  000C10  0E22               	movlw	34
   375  000C12                     clear_2:
   376  000C12  6AEE               	clrf	postinc0,c
   377  000C14  06E8               	decf	wreg,f,c
   378  000C16  E1FD               	bnz	clear_2
   379  000C18                     end_of_initialization:
   380                           	opt stack 0
   381  000C18                     __end_of__initialization:
   382                           	opt stack 0
   383  000C18  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   384  000C1A  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   385  000C1C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   386  000C1E  6EF8               	movwf	tblptru,c
   387  000C20  0100               	movlb	0
   388  000C22  EF72  F006         	goto	_main	;jump to C main() function
   389                           tblptru	equ	0xFF8
   390                           tblptrh	equ	0xFF7
   391                           tblptrl	equ	0xFF6
   392                           tablat	equ	0xFF5
   393                           postinc0	equ	0xFEE
   394                           wreg	equ	0xFE8
   395                           postdec1	equ	0xFE5
   396                           fsr1h	equ	0xFE2
   397                           fsr1l	equ	0xFE1
   398                           
   399                           	psect	bssCOMRAM
   400  000001                     __pbssCOMRAM:
   401                           	opt stack 0
   402  000001                     _tempo_tarefa:
   403                           	opt stack 0
   404  000001                     	ds	8
   405  000009                     _p_tarefas:
   406                           	opt stack 0
   407  000009                     	ds	8
   408  000011                     _fileSize:
   409                           	opt stack 0
   410  000011                     	ds	4
   411  000015                     _FatFs:
   412                           	opt stack 0
   413  000015                     	ds	2
   414  000017                     _flag:
   415                           	opt stack 0
   416  000017                     	ds	2
   417  000019                     _timeout_tarefa:
   418                           	opt stack 0
   419  000019                     	ds	2
   420  00001B                     _rd:
   421                           	opt stack 0
   422  00001B                     	ds	2
   423  00001D                     _estado:
   424                           	opt stack 0
   425  00001D                     	ds	1
   426  00001E                     _tarefa_em_execucao:
   427                           	opt stack 0
   428  00001E                     	ds	1
   429  00001F                     _sinaliza_int_timer:
   430                           	opt stack 0
   431  00001F                     	ds	1
   432  000020                     _data_uart_recebe:
   433                           	opt stack 0
   434  000020                     	ds	1
   435  000021                     _s:
   436                           	opt stack 0
   437  000021                     	ds	1
   438  000022                     _Result:
   439                           	opt stack 0
   440  000022                     	ds	1
   441                           tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           tblptrl	equ	0xFF6
   444                           tablat	equ	0xFF5
   445                           postinc0	equ	0xFEE
   446                           wreg	equ	0xFE8
   447                           postdec1	equ	0xFE5
   448                           fsr1h	equ	0xFE2
   449                           fsr1l	equ	0xFE1
   450                           
   451                           	psect	dataCOMRAM
   452  00003F                     __pdataCOMRAM:
   453                           	opt stack 0
   454  00003F                     escreve_inteiro_uart@F3956:
   455                           	opt stack 0
   456  00003F                     	ds	7
   457                           tblptru	equ	0xFF8
   458                           tblptrh	equ	0xFF7
   459                           tblptrl	equ	0xFF6
   460                           tablat	equ	0xFF5
   461                           postinc0	equ	0xFEE
   462                           wreg	equ	0xFE8
   463                           postdec1	equ	0xFE5
   464                           fsr1h	equ	0xFE2
   465                           fsr1l	equ	0xFE1
   466                           
   467                           	psect	bssBANK0
   468  000060                     __pbssBANK0:
   469                           	opt stack 0
   470  000060                     _folder:
   471                           	opt stack 0
   472  000060                     	ds	48
   473  000090                     _data_buffer_32:
   474                           	opt stack 0
   475  000090                     	ds	32
   476  0000B0                     _txt:
   477                           	opt stack 0
   478  0000B0                     	ds	20
   479  0000C4                     _tempo_backup:
   480                           	opt stack 0
   481  0000C4                     	ds	8
   482                           tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           tblptrl	equ	0xFF6
   485                           tablat	equ	0xFF5
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           postdec1	equ	0xFE5
   489                           fsr1h	equ	0xFE2
   490                           fsr1l	equ	0xFE1
   491                           
   492                           	psect	dataBANK0
   493  0000E6                     __pdataBANK0:
   494                           	opt stack 0
   495  0000E6                     _fileName:
   496                           	opt stack 0
   497  0000E6                     	ds	10
   498                           tblptru	equ	0xFF8
   499                           tblptrh	equ	0xFF7
   500                           tblptrl	equ	0xFF6
   501                           tablat	equ	0xFF5
   502                           postinc0	equ	0xFEE
   503                           wreg	equ	0xFE8
   504                           postdec1	equ	0xFE5
   505                           fsr1h	equ	0xFE2
   506                           fsr1l	equ	0xFE1
   507                           
   508                           	psect	bssBIGRAM
   509  0000F0                     __pbssBIGRAM:
   510                           	opt stack 0
   511  0000F0                     disk_readp@arr:
   512                           	opt stack 0
   513  0000F0                     	ds	512
   514                           tblptru	equ	0xFF8
   515                           tblptrh	equ	0xFF7
   516                           tblptrl	equ	0xFF6
   517                           tablat	equ	0xFF5
   518                           postinc0	equ	0xFEE
   519                           wreg	equ	0xFE8
   520                           postdec1	equ	0xFE5
   521                           fsr1h	equ	0xFE2
   522                           fsr1l	equ	0xFE1
   523                           
   524                           	psect	cstackBANK0
   525  0000CC                     __pcstackBANK0:
   526                           	opt stack 0
   527  0000CC                     ?___aldiv:
   528                           	opt stack 0
   529  0000CC                     write_timer_zero@timer:
   530                           	opt stack 0
   531  0000CC                     ___aldiv@dividend:
   532                           	opt stack 0
   533                           
   534                           ; 4 bytes @ 0x0
   535  0000CC                     	ds	4
   536  0000D0                     ___aldiv@divisor:
   537                           	opt stack 0
   538                           
   539                           ; 4 bytes @ 0x4
   540  0000D0                     	ds	4
   541  0000D4                     ___aldiv@counter:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x8
   545  0000D4                     	ds	1
   546  0000D5                     ___aldiv@sign:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x9
   550  0000D5                     	ds	1
   551  0000D6                     ___aldiv@quotient:
   552                           	opt stack 0
   553                           
   554                           ; 4 bytes @ 0xA
   555  0000D6                     	ds	4
   556  0000DA                     configura_baudrate_uart@baudrate:
   557                           	opt stack 0
   558                           
   559                           ; 4 bytes @ 0xE
   560  0000DA                     	ds	4
   561  0000DE                     ??_configura_baudrate_uart:
   562                           
   563                           ; 1 bytes @ 0x12
   564  0000DE                     	ds	8
   565                           tblptru	equ	0xFF8
   566                           tblptrh	equ	0xFF7
   567                           tblptrl	equ	0xFF6
   568                           tablat	equ	0xFF5
   569                           postinc0	equ	0xFEE
   570                           wreg	equ	0xFE8
   571                           postdec1	equ	0xFE5
   572                           fsr1h	equ	0xFE2
   573                           fsr1l	equ	0xFE1
   574                           
   575                           	psect	cstackCOMRAM
   576  000023                     __pcstackCOMRAM:
   577                           	opt stack 0
   578  000023                     i2write_timer_zero@timer0:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x0
   582  000023                     	ds	2
   583  000025                     i2write_timer_zero@timer:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x2
   587  000025                     	ds	2
   588  000027                     ??_isr:
   589                           
   590                           ; 1 bytes @ 0x4
   591  000027                     	ds	20
   592  00003B                     isr@cont:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x18
   596  00003B                     	ds	1
   597  00003C                     write_timer_zero@timer0:
   598                           	opt stack 0
   599  00003C                     configura_baudrate_uart@x:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x19
   603  00003C                     	ds	2
   604  00003E                     escalonador@cont:
   605                           	opt stack 0
   606                           
   607                           ; 1 bytes @ 0x1B
   608  00003E                     	ds	1
   609  00003F                     tblptru	equ	0xFF8
   610                           tblptrh	equ	0xFF7
   611                           tblptrl	equ	0xFF6
   612                           tablat	equ	0xFF5
   613                           postinc0	equ	0xFEE
   614                           wreg	equ	0xFE8
   615                           postdec1	equ	0xFE5
   616                           fsr1h	equ	0xFE2
   617                           fsr1l	equ	0xFE1
   618                           
   619                           ; 1 bytes @ 0x1C
   620 ;;
   621 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   622 ;;
   623 ;; *************** function _main *****************
   624 ;; Defined at:
   625 ;;		line 230 in file "main.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;		None
   628 ;; Auto vars:     Size  Location     Type
   629 ;;		None
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      void 
   632 ;; Registers used:
   633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   639 ;;      Params:         0       0       0       0       0       0       0       0       0
   640 ;;      Locals:         0       0       0       0       0       0       0       0       0
   641 ;;      Temps:          0       0       0       0       0       0       0       0       0
   642 ;;      Totals:         0       0       0       0       0       0       0       0       0
   643 ;;Total ram usage:        0 bytes
   644 ;; Hardware stack levels required when called:    5
   645 ;; This function calls:
   646 ;;		_escalonador
   647 ;;		_inicializa_tarefas
   648 ;;		_inicializa_uart
   649 ;;		_init_hardware
   650 ;; This function is called by:
   651 ;;		Startup code after reset
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text0
   656  000CE4                     __ptext0:
   657                           	opt stack 0
   658  000CE4                     _main:
   659                           	opt stack 26
   660                           
   661                           ;main.c: 233: init_hardware();
   662                           
   663                           ;incstack = 0
   664  000CE4  EC9A  F006         	call	_init_hardware	;wreg free
   665                           
   666                           ;main.c: 234: inicializa_uart();
   667  000CE8  EC4F  F006         	call	_inicializa_uart	;wreg free
   668                           
   669                           ;main.c: 239: inicializa_tarefas();
   670  000CEC  ECD6  F006         	call	_inicializa_tarefas	;wreg free
   671  000CF0                     
   672                           ;main.c: 242: {
   673                           ;main.c: 244: if ((sinaliza_int_timer == 1) && (4))
   674  000CF0  041F               	decf	_sinaliza_int_timer,w,c
   675  000CF2  A4D8               	btfss	status,2,c
   676  000CF4  D7FD               	goto	l83
   677                           
   678                           ;main.c: 245: {
   679                           ;main.c: 246: sinaliza_int_timer = 0;
   680  000CF6  0E00               	movlw	0
   681  000CF8  6E1F               	movwf	_sinaliza_int_timer,c
   682                           
   683                           ;main.c: 247: escalonador();
   684  000CFA  EC13  F006         	call	_escalonador	;wreg free
   685  000CFE  D7F8               	goto	l83
   686  000D00                     __end_of_main:
   687                           	opt stack 0
   688                           tblptru	equ	0xFF8
   689                           tblptrh	equ	0xFF7
   690                           tblptrl	equ	0xFF6
   691                           tablat	equ	0xFF5
   692                           postinc0	equ	0xFEE
   693                           wreg	equ	0xFE8
   694                           postdec1	equ	0xFE5
   695                           fsr1h	equ	0xFE2
   696                           fsr1l	equ	0xFE1
   697                           status	equ	0xFD8
   698                           
   699 ;; *************** function _init_hardware *****************
   700 ;; Defined at:
   701 ;;		line 54 in file "bibliotecas/hardware.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   715 ;;      Params:         0       0       0       0       0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0       0       0       0       0
   718 ;;      Totals:         0       0       0       0       0       0       0       0       0
   719 ;;Total ram usage:        0 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    4
   722 ;; This function calls:
   723 ;;		_config_timer_zero
   724 ;;		_inicializa_adc
   725 ;;		_init_interrupt
   726 ;;		_init_oscilador
   727 ;;		_init_ports
   728 ;; This function is called by:
   729 ;;		_main
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           	psect	text1
   734  000D34                     __ptext1:
   735                           	opt stack 0
   736  000D34                     _init_hardware:
   737                           	opt stack 26
   738                           
   739                           ;hardware.c: 57: init_oscilador();
   740                           
   741                           ;incstack = 0
   742  000D34  ECCE  F006         	call	_init_oscilador	;wreg free
   743                           
   744                           ;hardware.c: 60: init_ports();
   745  000D38  EC80  F006         	call	_init_ports	;wreg free
   746                           
   747                           ;hardware.c: 63: config_timer_zero();
   748  000D3C  EC8D  F006         	call	_config_timer_zero	;wreg free
   749                           
   750                           ;hardware.c: 66: init_interrupt();
   751  000D40  ECA5  F006         	call	_init_interrupt	;wreg free
   752                           
   753                           ;hardware.c: 69: inicializa_adc();
   754  000D44  EC61  F006         	call	_inicializa_adc	;wreg free
   755  000D48  0012               	return		;funcret
   756  000D4A                     __end_of_init_hardware:
   757                           	opt stack 0
   758                           tblptru	equ	0xFF8
   759                           tblptrh	equ	0xFF7
   760                           tblptrl	equ	0xFF6
   761                           tablat	equ	0xFF5
   762                           postinc0	equ	0xFEE
   763                           wreg	equ	0xFE8
   764                           postdec1	equ	0xFE5
   765                           fsr1h	equ	0xFE2
   766                           fsr1l	equ	0xFE1
   767                           status	equ	0xFD8
   768                           
   769 ;; *************** function _init_ports *****************
   770 ;; Defined at:
   771 ;;		line 149 in file "bibliotecas/hardware.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, status,2
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   785 ;;      Params:         0       0       0       0       0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0       0       0       0       0
   787 ;;      Temps:          0       0       0       0       0       0       0       0       0
   788 ;;      Totals:         0       0       0       0       0       0       0       0       0
   789 ;;Total ram usage:        0 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    2
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_init_hardware
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text2
   800  000D00                     __ptext2:
   801                           	opt stack 0
   802  000D00                     _init_ports:
   803                           	opt stack 27
   804                           
   805                           ;hardware.c: 151: TRISB = 0b00000001;
   806                           
   807                           ;incstack = 0
   808  000D00  0E01               	movlw	1
   809  000D02  6E93               	movwf	3987,c	;volatile
   810                           
   811                           ;hardware.c: 152: LATB = 0x00;
   812  000D04  0E00               	movlw	0
   813  000D06  6E8A               	movwf	3978,c	;volatile
   814                           
   815                           ;hardware.c: 153: TRISD = 0x00;
   816  000D08  0E00               	movlw	0
   817  000D0A  6E95               	movwf	3989,c	;volatile
   818                           
   819                           ;hardware.c: 154: TRISA = 0b00000111;
   820  000D0C  0E07               	movlw	7
   821  000D0E  6E92               	movwf	3986,c	;volatile
   822                           
   823                           ;hardware.c: 155: TRISC = 0x01111111;
   824  000D10  0E11               	movlw	17
   825  000D12  6E94               	movwf	3988,c	;volatile
   826                           
   827                           ;hardware.c: 156: TRISE = 0b00000011;
   828  000D14  0E03               	movlw	3
   829  000D16  6E96               	movwf	3990,c	;volatile
   830  000D18  0012               	return		;funcret
   831  000D1A                     __end_of_init_ports:
   832                           	opt stack 0
   833                           tblptru	equ	0xFF8
   834                           tblptrh	equ	0xFF7
   835                           tblptrl	equ	0xFF6
   836                           tablat	equ	0xFF5
   837                           postinc0	equ	0xFEE
   838                           wreg	equ	0xFE8
   839                           postdec1	equ	0xFE5
   840                           fsr1h	equ	0xFE2
   841                           fsr1l	equ	0xFE1
   842                           status	equ	0xFD8
   843                           
   844 ;; *************** function _init_oscilador *****************
   845 ;; Defined at:
   846 ;;		line 166 in file "bibliotecas/hardware.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		None
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   860 ;;      Params:         0       0       0       0       0       0       0       0       0
   861 ;;      Locals:         0       0       0       0       0       0       0       0       0
   862 ;;      Temps:          0       0       0       0       0       0       0       0       0
   863 ;;      Totals:         0       0       0       0       0       0       0       0       0
   864 ;;Total ram usage:        0 bytes
   865 ;; Hardware stack levels used:    1
   866 ;; Hardware stack levels required when called:    2
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_init_hardware
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text3
   875  000D9C                     __ptext3:
   876                           	opt stack 0
   877  000D9C                     _init_oscilador:
   878                           	opt stack 27
   879                           
   880                           ;hardware.c: 169: OSCCONbits.IRCF0 = 1;
   881                           
   882                           ;incstack = 0
   883  000D9C  88D3               	bsf	4051,4,c	;volatile
   884                           
   885                           ;hardware.c: 170: OSCCONbits.IRCF1 = 1;
   886  000D9E  8AD3               	bsf	4051,5,c	;volatile
   887                           
   888                           ;hardware.c: 171: OSCCONbits.IRCF2 = 1;
   889  000DA0  8CD3               	bsf	4051,6,c	;volatile
   890  000DA2  0012               	return		;funcret
   891  000DA4                     __end_of_init_oscilador:
   892                           	opt stack 0
   893                           tblptru	equ	0xFF8
   894                           tblptrh	equ	0xFF7
   895                           tblptrl	equ	0xFF6
   896                           tablat	equ	0xFF5
   897                           postinc0	equ	0xFEE
   898                           wreg	equ	0xFE8
   899                           postdec1	equ	0xFE5
   900                           fsr1h	equ	0xFE2
   901                           fsr1l	equ	0xFE1
   902                           status	equ	0xFD8
   903                           
   904 ;; *************** function _init_interrupt *****************
   905 ;; Defined at:
   906 ;;		line 94 in file "bibliotecas/hardware.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;		None
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, status,2
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   920 ;;      Params:         0       0       0       0       0       0       0       0       0
   921 ;;      Locals:         0       0       0       0       0       0       0       0       0
   922 ;;      Temps:          0       0       0       0       0       0       0       0       0
   923 ;;      Totals:         0       0       0       0       0       0       0       0       0
   924 ;;Total ram usage:        0 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    2
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_init_hardware
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text4
   935  000D4A                     __ptext4:
   936                           	opt stack 0
   937  000D4A                     _init_interrupt:
   938                           	opt stack 27
   939                           
   940                           ;hardware.c: 96: INTCON = 0b11110000;
   941                           
   942                           ;incstack = 0
   943  000D4A  0EF0               	movlw	240
   944  000D4C  6EF2               	movwf	intcon,c	;volatile
   945                           
   946                           ;hardware.c: 97: INTCON2 = 0b00000000;
   947  000D4E  0E00               	movlw	0
   948  000D50  6EF1               	movwf	intcon2,c	;volatile
   949                           
   950                           ;hardware.c: 98: INTCON3 = 0b00000000;
   951  000D52  0E00               	movlw	0
   952  000D54  6EF0               	movwf	intcon3,c	;volatile
   953                           
   954                           ;hardware.c: 99: PIE1 = 0b10100000;
   955  000D56  0EA0               	movlw	160
   956  000D58  6E9D               	movwf	3997,c	;volatile
   957  000D5A  0012               	return		;funcret
   958  000D5C                     __end_of_init_interrupt:
   959                           	opt stack 0
   960                           tblptru	equ	0xFF8
   961                           tblptrh	equ	0xFF7
   962                           tblptrl	equ	0xFF6
   963                           tablat	equ	0xFF5
   964                           intcon	equ	0xFF2
   965                           intcon2	equ	0xFF1
   966                           intcon3	equ	0xFF0
   967                           postinc0	equ	0xFEE
   968                           wreg	equ	0xFE8
   969                           postdec1	equ	0xFE5
   970                           fsr1h	equ	0xFE2
   971                           fsr1l	equ	0xFE1
   972                           status	equ	0xFD8
   973                           
   974 ;; *************** function _inicializa_adc *****************
   975 ;; Defined at:
   976 ;;		line 40 in file "bibliotecas/adc.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;		None
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, status,2
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   990 ;;      Params:         0       0       0       0       0       0       0       0       0
   991 ;;      Locals:         0       0       0       0       0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0
   993 ;;      Totals:         0       0       0       0       0       0       0       0       0
   994 ;;Total ram usage:        0 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; Hardware stack levels required when called:    2
   997 ;; This function calls:
   998 ;;		Nothing
   999 ;; This function is called by:
  1000 ;;		_init_hardware
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text5
  1005  000CC2                     __ptext5:
  1006                           	opt stack 0
  1007  000CC2                     _inicializa_adc:
  1008                           	opt stack 27
  1009                           
  1010                           ;adc.c: 43: ADCON1=0x0B;
  1011                           
  1012                           ;incstack = 0
  1013  000CC2  0E0B               	movlw	11
  1014  000CC4  6EC1               	movwf	4033,c	;volatile
  1015                           
  1016                           ;adc.c: 44: ADCON1bits.VCFG0 = 0;
  1017  000CC6  98C1               	bcf	4033,4,c	;volatile
  1018                           
  1019                           ;adc.c: 45: ADCON1bits.VCFG1 = 0;
  1020  000CC8  9AC1               	bcf	4033,5,c	;volatile
  1021                           
  1022                           ;adc.c: 47: ADCON1bits.PCFG0 = 1;
  1023  000CCA  80C1               	bsf	4033,0,c	;volatile
  1024                           
  1025                           ;adc.c: 48: ADCON1bits.PCFG1 = 0;
  1026  000CCC  92C1               	bcf	4033,1,c	;volatile
  1027                           
  1028                           ;adc.c: 49: ADCON1bits.PCFG2 = 1;
  1029  000CCE  84C1               	bsf	4033,2,c	;volatile
  1030                           
  1031                           ;adc.c: 50: ADCON1bits.PCFG3 = 1;
  1032  000CD0  86C1               	bsf	4033,3,c	;volatile
  1033                           
  1034                           ;adc.c: 52: ADCON2bits.ADFM = 1;
  1035  000CD2  8EC0               	bsf	4032,7,c	;volatile
  1036                           
  1037                           ;adc.c: 53: ADCON2bits.ADCS0 = 0;
  1038  000CD4  90C0               	bcf	4032,0,c	;volatile
  1039                           
  1040                           ;adc.c: 54: ADCON2bits.ADCS1 = 1;
  1041  000CD6  82C0               	bsf	4032,1,c	;volatile
  1042                           
  1043                           ;adc.c: 55: ADCON2bits.ADCS2 = 1;
  1044  000CD8  84C0               	bsf	4032,2,c	;volatile
  1045                           
  1046                           ;adc.c: 56: ADCON2bits.ACQT0 = 1;
  1047  000CDA  86C0               	bsf	4032,3,c	;volatile
  1048                           
  1049                           ;adc.c: 57: ADCON2bits.ACQT1 = 0;
  1050  000CDC  98C0               	bcf	4032,4,c	;volatile
  1051                           
  1052                           ;adc.c: 58: ADCON2bits.ACQT2 = 0;
  1053  000CDE  9AC0               	bcf	4032,5,c	;volatile
  1054                           
  1055                           ;adc.c: 59: ADCON0bits.ADON = 1;
  1056  000CE0  80C2               	bsf	4034,0,c	;volatile
  1057  000CE2  0012               	return		;funcret
  1058  000CE4                     __end_of_inicializa_adc:
  1059                           	opt stack 0
  1060                           tblptru	equ	0xFF8
  1061                           tblptrh	equ	0xFF7
  1062                           tblptrl	equ	0xFF6
  1063                           tablat	equ	0xFF5
  1064                           intcon	equ	0xFF2
  1065                           intcon2	equ	0xFF1
  1066                           intcon3	equ	0xFF0
  1067                           postinc0	equ	0xFEE
  1068                           wreg	equ	0xFE8
  1069                           postdec1	equ	0xFE5
  1070                           fsr1h	equ	0xFE2
  1071                           fsr1l	equ	0xFE1
  1072                           status	equ	0xFD8
  1073                           
  1074 ;; *************** function _config_timer_zero *****************
  1075 ;; Defined at:
  1076 ;;		line 79 in file "bibliotecas/hardware.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, status,2, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1090 ;;      Params:         0       0       0       0       0       0       0       0       0
  1091 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1093 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1094 ;;Total ram usage:        0 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:    3
  1097 ;; This function calls:
  1098 ;;		_write_timer_zero
  1099 ;; This function is called by:
  1100 ;;		_init_hardware
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	text6
  1105  000D1A                     __ptext6:
  1106                           	opt stack 0
  1107  000D1A                     _config_timer_zero:
  1108                           	opt stack 26
  1109                           
  1110                           ;hardware.c: 81: T0CON = 0b11000011;
  1111                           
  1112                           ;incstack = 0
  1113  000D1A  0EC3               	movlw	195
  1114  000D1C  6ED5               	movwf	4053,c	;volatile
  1115                           
  1116                           ;hardware.c: 82: SPPCON = 0b00000000;
  1117  000D1E  0E00               	movlw	0
  1118  000D20  6E65               	movwf	3941,c	;volatile
  1119                           
  1120                           ;hardware.c: 83: SPPCFG = 0b00000000;
  1121  000D22  0E00               	movlw	0
  1122  000D24  6E63               	movwf	3939,c	;volatile
  1123                           
  1124                           ;hardware.c: 84: write_timer_zero(0x0083);
  1125  000D26  0E00               	movlw	0
  1126  000D28  6E3D               	movwf	write_timer_zero@timer0+1,c
  1127  000D2A  0E83               	movlw	131
  1128  000D2C  6E3C               	movwf	write_timer_zero@timer0,c
  1129  000D2E  ECAE  F006         	call	_write_timer_zero	;wreg free
  1130  000D32  0012               	return		;funcret
  1131  000D34                     __end_of_config_timer_zero:
  1132                           	opt stack 0
  1133                           tblptru	equ	0xFF8
  1134                           tblptrh	equ	0xFF7
  1135                           tblptrl	equ	0xFF6
  1136                           tablat	equ	0xFF5
  1137                           intcon	equ	0xFF2
  1138                           intcon2	equ	0xFF1
  1139                           intcon3	equ	0xFF0
  1140                           postinc0	equ	0xFEE
  1141                           wreg	equ	0xFE8
  1142                           postdec1	equ	0xFE5
  1143                           fsr1h	equ	0xFE2
  1144                           fsr1l	equ	0xFE1
  1145                           status	equ	0xFD8
  1146                           
  1147 ;; *************** function _write_timer_zero *****************
  1148 ;; Defined at:
  1149 ;;		line 133 in file "bibliotecas/hardware.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  timer0          2   25[COMRAM] unsigned int 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  timer           2    0[BANK0 ] struct Timers
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		None
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1163 ;;      Params:         2       0       0       0       0       0       0       0       0
  1164 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1166 ;;      Totals:         2       2       0       0       0       0       0       0       0
  1167 ;;Total ram usage:        4 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    2
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_config_timer_zero
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text7
  1178  000D5C                     __ptext7:
  1179                           	opt stack 0
  1180  000D5C                     _write_timer_zero:
  1181                           	opt stack 26
  1182                           
  1183                           ;hardware.c: 135: union Timers timer;
  1184                           ;hardware.c: 137: timer.lt = timer0;
  1185                           
  1186                           ;incstack = 0
  1187  000D5C  C03C  F0CC         	movff	write_timer_zero@timer0,write_timer_zero@timer
  1188  000D60  C03D  F0CD         	movff	write_timer_zero@timer0+1,write_timer_zero@timer+1
  1189                           
  1190                           ;hardware.c: 139: TMR0H = timer.bt[1];
  1191  000D64  C0CD  FFD7         	movff	write_timer_zero@timer+1,4055	;volatile
  1192                           
  1193                           ;hardware.c: 140: TMR0L = timer.bt[0];
  1194  000D68  C0CC  FFD6         	movff	write_timer_zero@timer,4054	;volatile
  1195  000D6C  0012               	return		;funcret
  1196  000D6E                     __end_of_write_timer_zero:
  1197                           	opt stack 0
  1198                           tblptru	equ	0xFF8
  1199                           tblptrh	equ	0xFF7
  1200                           tblptrl	equ	0xFF6
  1201                           tablat	equ	0xFF5
  1202                           intcon	equ	0xFF2
  1203                           intcon2	equ	0xFF1
  1204                           intcon3	equ	0xFF0
  1205                           postinc0	equ	0xFEE
  1206                           wreg	equ	0xFE8
  1207                           postdec1	equ	0xFE5
  1208                           fsr1h	equ	0xFE2
  1209                           fsr1l	equ	0xFE1
  1210                           status	equ	0xFD8
  1211                           
  1212 ;; *************** function _inicializa_uart *****************
  1213 ;; Defined at:
  1214 ;;		line 206 in file "bibliotecas/uart.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;		None
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1228 ;;      Params:         0       0       0       0       0       0       0       0       0
  1229 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1231 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1232 ;;Total ram usage:        0 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    4
  1235 ;; This function calls:
  1236 ;;		_configura_baudrate_uart
  1237 ;; This function is called by:
  1238 ;;		_main
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           	psect	text8
  1243  000C9E                     __ptext8:
  1244                           	opt stack 0
  1245  000C9E                     _inicializa_uart:
  1246                           	opt stack 26
  1247                           
  1248                           ;uart.c: 208: TRISCbits.RC6 = 0;
  1249                           
  1250                           ;incstack = 0
  1251  000C9E  9C94               	bcf	3988,6,c	;volatile
  1252                           
  1253                           ;uart.c: 209: TRISCbits.RC7 = 0;
  1254  000CA0  9E94               	bcf	3988,7,c	;volatile
  1255                           
  1256                           ;uart.c: 211: (void)configura_baudrate_uart(9600);
  1257  000CA2  0E80               	movlw	128
  1258  000CA4  0100               	movlb	0	; () banked
  1259  000CA6  6FDA               	movwf	configura_baudrate_uart@baudrate& (0+255),b
  1260  000CA8  0E25               	movlw	37
  1261  000CAA  6FDB               	movwf	(configura_baudrate_uart@baudrate+1)& (0+255),b
  1262  000CAC  0E00               	movlw	0
  1263  000CAE  6FDC               	movwf	(configura_baudrate_uart@baudrate+2)& (0+255),b
  1264  000CB0  0E00               	movlw	0
  1265  000CB2  6FDD               	movwf	(configura_baudrate_uart@baudrate+3)& (0+255),b
  1266  000CB4  EC48  F004         	call	_configura_baudrate_uart	;wreg free
  1267                           
  1268                           ;uart.c: 213: TXSTA = 0x20;
  1269  000CB8  0E20               	movlw	32
  1270  000CBA  6EAC               	movwf	4012,c	;volatile
  1271                           
  1272                           ;uart.c: 214: RCSTA = 0x90;
  1273  000CBC  0E90               	movlw	144
  1274  000CBE  6EAB               	movwf	4011,c	;volatile
  1275  000CC0  0012               	return		;funcret
  1276  000CC2                     __end_of_inicializa_uart:
  1277                           	opt stack 0
  1278                           tblptru	equ	0xFF8
  1279                           tblptrh	equ	0xFF7
  1280                           tblptrl	equ	0xFF6
  1281                           tablat	equ	0xFF5
  1282                           intcon	equ	0xFF2
  1283                           intcon2	equ	0xFF1
  1284                           intcon3	equ	0xFF0
  1285                           postinc0	equ	0xFEE
  1286                           wreg	equ	0xFE8
  1287                           postdec1	equ	0xFE5
  1288                           fsr1h	equ	0xFE2
  1289                           fsr1l	equ	0xFE1
  1290                           status	equ	0xFD8
  1291                           
  1292 ;; *************** function _configura_baudrate_uart *****************
  1293 ;; Defined at:
  1294 ;;		line 50 in file "bibliotecas/uart.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;  baudrate        4   14[BANK0 ] const long 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  x               2   25[COMRAM] unsigned int 
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      unsigned char 
  1301 ;; Registers used:
  1302 ;;		wreg, status,2, status,0, cstack
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1308 ;;      Params:         0       4       0       0       0       0       0       0       0
  1309 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1310 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1311 ;;      Totals:         2      12       0       0       0       0       0       0       0
  1312 ;;Total ram usage:       14 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; Hardware stack levels required when called:    3
  1315 ;; This function calls:
  1316 ;;		___aldiv
  1317 ;; This function is called by:
  1318 ;;		_inicializa_uart
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text9
  1323  000890                     __ptext9:
  1324                           	opt stack 0
  1325  000890                     _configura_baudrate_uart:
  1326                           	opt stack 26
  1327                           
  1328                           ;uart.c: 52: unsigned int x;
  1329                           ;uart.c: 54: x = (8000000 - baudrate*64)/(baudrate*64);
  1330                           
  1331                           ;incstack = 0
  1332  000890  C0DA  F0DE         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  1333  000894  C0DB  F0DF         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  1334  000898  C0DC  F0E0         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  1335  00089C  C0DD  F0E1         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  1336  0008A0  0E06               	movlw	6
  1337  0008A2                     u2785:
  1338  0008A2  90D8               	bcf	status,0,c
  1339  0008A4  0100               	movlb	0	; () banked
  1340  0008A6  37DE               	rlcf	??_configura_baudrate_uart& (0+255),f,b
  1341  0008A8  37DF               	rlcf	(??_configura_baudrate_uart+1)& (0+255),f,b
  1342  0008AA  37E0               	rlcf	(??_configura_baudrate_uart+2)& (0+255),f,b
  1343  0008AC  37E1               	rlcf	(??_configura_baudrate_uart+3)& (0+255),f,b
  1344  0008AE  2EE8               	decfsz	wreg,f,c
  1345  0008B0  D7F8               	goto	u2785
  1346  0008B2  1FDE               	comf	??_configura_baudrate_uart& (0+255),f,b
  1347  0008B4  1FDF               	comf	(??_configura_baudrate_uart+1)& (0+255),f,b
  1348  0008B6  1FE0               	comf	(??_configura_baudrate_uart+2)& (0+255),f,b
  1349  0008B8  1FE1               	comf	(??_configura_baudrate_uart+3)& (0+255),f,b
  1350  0008BA  2BDE               	incf	??_configura_baudrate_uart& (0+255),f,b
  1351  0008BC  0E00               	movlw	0
  1352  0008BE  23DF               	addwfc	(??_configura_baudrate_uart+1)& (0+255),f,b
  1353  0008C0  23E0               	addwfc	(??_configura_baudrate_uart+2)& (0+255),f,b
  1354  0008C2  23E1               	addwfc	(??_configura_baudrate_uart+3)& (0+255),f,b
  1355  0008C4  0E00               	movlw	0
  1356  0008C6  25DE               	addwf	??_configura_baudrate_uart& (0+255),w,b
  1357  0008C8  6FCC               	movwf	___aldiv@dividend& (0+255),b
  1358  0008CA  0E12               	movlw	18
  1359  0008CC  21DF               	addwfc	(??_configura_baudrate_uart+1)& (0+255),w,b
  1360  0008CE  6FCD               	movwf	(___aldiv@dividend+1)& (0+255),b
  1361  0008D0  0E7A               	movlw	122
  1362  0008D2  21E0               	addwfc	(??_configura_baudrate_uart+2)& (0+255),w,b
  1363  0008D4  6FCE               	movwf	(___aldiv@dividend+2)& (0+255),b
  1364  0008D6  0E00               	movlw	0
  1365  0008D8  21E1               	addwfc	(??_configura_baudrate_uart+3)& (0+255),w,b
  1366  0008DA  6FCF               	movwf	(___aldiv@dividend+3)& (0+255),b
  1367  0008DC  C0DA  F0E2         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  1368  0008E0  C0DB  F0E3         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  1369  0008E4  C0DC  F0E4         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  1370  0008E8  C0DD  F0E5         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  1371  0008EC  0E06               	movlw	6
  1372  0008EE                     u2795:
  1373  0008EE  90D8               	bcf	status,0,c
  1374  0008F0  37E2               	rlcf	(??_configura_baudrate_uart+4)& (0+255),f,b
  1375  0008F2  37E3               	rlcf	(??_configura_baudrate_uart+5)& (0+255),f,b
  1376  0008F4  37E4               	rlcf	(??_configura_baudrate_uart+6)& (0+255),f,b
  1377  0008F6  37E5               	rlcf	(??_configura_baudrate_uart+7)& (0+255),f,b
  1378  0008F8  2EE8               	decfsz	wreg,f,c
  1379  0008FA  D7F9               	goto	u2795
  1380  0008FC  C0E2  F0D0         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  1381  000900  C0E3  F0D1         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  1382  000904  C0E4  F0D2         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  1383  000908  C0E5  F0D3         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  1384  00090C  EC6F  F005         	call	___aldiv	;wreg free
  1385  000910  C0CC  F03C         	movff	?___aldiv,configura_baudrate_uart@x
  1386  000914  C0CD  F03D         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  1387                           
  1388                           ;uart.c: 55: if(x > 255)
  1389  000918  043D               	decf	configura_baudrate_uart@x+1,w,c
  1390  00091A  A0D8               	btfss	status,0,c
  1391  00091C  D045               	goto	l410
  1392                           
  1393                           ;uart.c: 56: {
  1394                           ;uart.c: 57: x = (8000000 - baudrate*16)/(baudrate*16);
  1395  00091E  C0DA  F0DE         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  1396  000922  C0DB  F0DF         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  1397  000926  C0DC  F0E0         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  1398  00092A  C0DD  F0E1         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  1399  00092E  0E04               	movlw	4
  1400  000930                     u2815:
  1401  000930  90D8               	bcf	status,0,c
  1402  000932  0100               	movlb	0	; () banked
  1403  000934  37DE               	rlcf	??_configura_baudrate_uart& (0+255),f,b
  1404  000936  37DF               	rlcf	(??_configura_baudrate_uart+1)& (0+255),f,b
  1405  000938  37E0               	rlcf	(??_configura_baudrate_uart+2)& (0+255),f,b
  1406  00093A  37E1               	rlcf	(??_configura_baudrate_uart+3)& (0+255),f,b
  1407  00093C  2EE8               	decfsz	wreg,f,c
  1408  00093E  D7F8               	goto	u2815
  1409  000940  1FDE               	comf	??_configura_baudrate_uart& (0+255),f,b
  1410  000942  1FDF               	comf	(??_configura_baudrate_uart+1)& (0+255),f,b
  1411  000944  1FE0               	comf	(??_configura_baudrate_uart+2)& (0+255),f,b
  1412  000946  1FE1               	comf	(??_configura_baudrate_uart+3)& (0+255),f,b
  1413  000948  2BDE               	incf	??_configura_baudrate_uart& (0+255),f,b
  1414  00094A  0E00               	movlw	0
  1415  00094C  23DF               	addwfc	(??_configura_baudrate_uart+1)& (0+255),f,b
  1416  00094E  23E0               	addwfc	(??_configura_baudrate_uart+2)& (0+255),f,b
  1417  000950  23E1               	addwfc	(??_configura_baudrate_uart+3)& (0+255),f,b
  1418  000952  0E00               	movlw	0
  1419  000954  25DE               	addwf	??_configura_baudrate_uart& (0+255),w,b
  1420  000956  6FCC               	movwf	___aldiv@dividend& (0+255),b
  1421  000958  0E12               	movlw	18
  1422  00095A  21DF               	addwfc	(??_configura_baudrate_uart+1)& (0+255),w,b
  1423  00095C  6FCD               	movwf	(___aldiv@dividend+1)& (0+255),b
  1424  00095E  0E7A               	movlw	122
  1425  000960  21E0               	addwfc	(??_configura_baudrate_uart+2)& (0+255),w,b
  1426  000962  6FCE               	movwf	(___aldiv@dividend+2)& (0+255),b
  1427  000964  0E00               	movlw	0
  1428  000966  21E1               	addwfc	(??_configura_baudrate_uart+3)& (0+255),w,b
  1429  000968  6FCF               	movwf	(___aldiv@dividend+3)& (0+255),b
  1430  00096A  C0DA  F0E2         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  1431  00096E  C0DB  F0E3         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  1432  000972  C0DC  F0E4         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  1433  000976  C0DD  F0E5         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  1434  00097A  0E04               	movlw	4
  1435  00097C                     u2825:
  1436  00097C  90D8               	bcf	status,0,c
  1437  00097E  37E2               	rlcf	(??_configura_baudrate_uart+4)& (0+255),f,b
  1438  000980  37E3               	rlcf	(??_configura_baudrate_uart+5)& (0+255),f,b
  1439  000982  37E4               	rlcf	(??_configura_baudrate_uart+6)& (0+255),f,b
  1440  000984  37E5               	rlcf	(??_configura_baudrate_uart+7)& (0+255),f,b
  1441  000986  2EE8               	decfsz	wreg,f,c
  1442  000988  D7F9               	goto	u2825
  1443  00098A  C0E2  F0D0         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  1444  00098E  C0E3  F0D1         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  1445  000992  C0E4  F0D2         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  1446  000996  C0E5  F0D3         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  1447  00099A  EC6F  F005         	call	___aldiv	;wreg free
  1448  00099E  C0CC  F03C         	movff	?___aldiv,configura_baudrate_uart@x
  1449  0009A2  C0CD  F03D         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  1450                           
  1451                           ;uart.c: 58: BRGH = 1;
  1452  0009A6  84AC               	bsf	4012,2,c	;volatile
  1453  0009A8                     l410:
  1454                           
  1455                           ;uart.c: 59: }
  1456                           ;uart.c: 60: if(x < 256)
  1457  0009A8  043D               	decf	configura_baudrate_uart@x+1,w,c
  1458  0009AA  B0D8               	btfsc	status,0,c
  1459  0009AC  0012               	return	
  1460                           
  1461                           ;uart.c: 61: {
  1462                           ;uart.c: 62: SPBRG = x;
  1463  0009AE  C03C  FFAF         	movff	configura_baudrate_uart@x,4015	;volatile
  1464                           
  1465                           ;uart.c: 63: SYNC = 0;
  1466  0009B2  98AC               	bcf	4012,4,c	;volatile
  1467                           
  1468                           ;uart.c: 64: SPEN = 1;
  1469  0009B4  8EAB               	bsf	4011,7,c	;volatile
  1470                           
  1471                           ;uart.c: 65: TRISCbits.RC7 = 1;
  1472  0009B6  8E94               	bsf	3988,7,c	;volatile
  1473                           
  1474                           ;uart.c: 66: TRISCbits.RC6 = 1;
  1475  0009B8  8C94               	bsf	3988,6,c	;volatile
  1476                           
  1477                           ;uart.c: 67: CREN = 1;
  1478  0009BA  88AB               	bsf	4011,4,c	;volatile
  1479                           
  1480                           ;uart.c: 68: TXEN = 1;
  1481  0009BC  8AAC               	bsf	4012,5,c	;volatile
  1482                           
  1483                           ;uart.c: 70: return (1);
  1484                           ;	Return value of _configura_baudrate_uart is never used
  1485  0009BE  0012               	return	
  1486  0009C0                     __end_of_configura_baudrate_uart:
  1487                           	opt stack 0
  1488                           tblptru	equ	0xFF8
  1489                           tblptrh	equ	0xFF7
  1490                           tblptrl	equ	0xFF6
  1491                           tablat	equ	0xFF5
  1492                           intcon	equ	0xFF2
  1493                           intcon2	equ	0xFF1
  1494                           intcon3	equ	0xFF0
  1495                           postinc0	equ	0xFEE
  1496                           wreg	equ	0xFE8
  1497                           postdec1	equ	0xFE5
  1498                           fsr1h	equ	0xFE2
  1499                           fsr1l	equ	0xFE1
  1500                           status	equ	0xFD8
  1501                           
  1502 ;; *************** function ___aldiv *****************
  1503 ;; Defined at:
  1504 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  dividend        4    0[BANK0 ] long 
  1507 ;;  divisor         4    4[BANK0 ] long 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  quotient        4   10[BANK0 ] long 
  1510 ;;  sign            1    9[BANK0 ] unsigned char 
  1511 ;;  counter         1    8[BANK0 ] unsigned char 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  4    0[BANK0 ] long 
  1514 ;; Registers used:
  1515 ;;		wreg, status,2, status,0
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1521 ;;      Params:         0       8       0       0       0       0       0       0       0
  1522 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1524 ;;      Totals:         0      14       0       0       0       0       0       0       0
  1525 ;;Total ram usage:       14 bytes
  1526 ;; Hardware stack levels used:    1
  1527 ;; Hardware stack levels required when called:    2
  1528 ;; This function calls:
  1529 ;;		Nothing
  1530 ;; This function is called by:
  1531 ;;		_configura_baudrate_uart
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	text10
  1536  000ADE                     __ptext10:
  1537                           	opt stack 0
  1538  000ADE                     ___aldiv:
  1539                           	opt stack 26
  1540                           
  1541                           ;incstack = 0
  1542  000ADE  0E00               	movlw	0
  1543  000AE0  0100               	movlb	0	; () banked
  1544  000AE2  6FD5               	movwf	___aldiv@sign& (0+255),b
  1545                           
  1546                           ; BSR set to: 0
  1547  000AE4  AFD3               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  1548  000AE6  D00A               	goto	l776
  1549                           
  1550                           ; BSR set to: 0
  1551  000AE8  1FD3               	comf	(___aldiv@divisor+3)& (0+255),f,b
  1552  000AEA  1FD2               	comf	(___aldiv@divisor+2)& (0+255),f,b
  1553  000AEC  1FD1               	comf	(___aldiv@divisor+1)& (0+255),f,b
  1554  000AEE  6DD0               	negf	___aldiv@divisor& (0+255),b
  1555  000AF0  0E00               	movlw	0
  1556  000AF2  23D1               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  1557  000AF4  23D2               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  1558  000AF6  23D3               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  1559                           
  1560                           ; BSR set to: 0
  1561  000AF8  0E01               	movlw	1
  1562  000AFA  6FD5               	movwf	___aldiv@sign& (0+255),b
  1563  000AFC                     l776:
  1564                           
  1565                           ; BSR set to: 0
  1566                           
  1567                           ; BSR set to: 0
  1568  000AFC  AFCF               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  1569  000AFE  D00A               	goto	l777
  1570                           
  1571                           ; BSR set to: 0
  1572  000B00  1FCF               	comf	(___aldiv@dividend+3)& (0+255),f,b
  1573  000B02  1FCE               	comf	(___aldiv@dividend+2)& (0+255),f,b
  1574  000B04  1FCD               	comf	(___aldiv@dividend+1)& (0+255),f,b
  1575  000B06  6DCC               	negf	___aldiv@dividend& (0+255),b
  1576  000B08  0E00               	movlw	0
  1577  000B0A  23CD               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  1578  000B0C  23CE               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  1579  000B0E  23CF               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  1580                           
  1581                           ; BSR set to: 0
  1582  000B10  0E01               	movlw	1
  1583  000B12  1BD5               	xorwf	___aldiv@sign& (0+255),f,b
  1584  000B14                     l777:
  1585                           
  1586                           ; BSR set to: 0
  1587                           
  1588                           ; BSR set to: 0
  1589  000B14  0E00               	movlw	0
  1590  000B16  6FD6               	movwf	___aldiv@quotient& (0+255),b
  1591  000B18  0E00               	movlw	0
  1592  000B1A  6FD7               	movwf	(___aldiv@quotient+1)& (0+255),b
  1593  000B1C  0E00               	movlw	0
  1594  000B1E  6FD8               	movwf	(___aldiv@quotient+2)& (0+255),b
  1595  000B20  0E00               	movlw	0
  1596  000B22  6FD9               	movwf	(___aldiv@quotient+3)& (0+255),b
  1597                           
  1598                           ; BSR set to: 0
  1599  000B24  51D0               	movf	___aldiv@divisor& (0+255),w,b
  1600  000B26  11D1               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  1601  000B28  11D2               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  1602  000B2A  11D3               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  1603  000B2C  B4D8               	btfsc	status,2,c
  1604  000B2E  D02A               	goto	l784
  1605                           
  1606                           ; BSR set to: 0
  1607  000B30  0E01               	movlw	1
  1608  000B32  6FD4               	movwf	___aldiv@counter& (0+255),b
  1609  000B34  D006               	goto	l779
  1610  000B36                     
  1611                           ; BSR set to: 0
  1612                           
  1613                           ; BSR set to: 0
  1614  000B36  90D8               	bcf	status,0,c
  1615  000B38  37D0               	rlcf	___aldiv@divisor& (0+255),f,b
  1616  000B3A  37D1               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  1617  000B3C  37D2               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  1618  000B3E  37D3               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  1619  000B40  2BD4               	incf	___aldiv@counter& (0+255),f,b
  1620  000B42                     l779:
  1621                           
  1622                           ; BSR set to: 0
  1623                           
  1624                           ; BSR set to: 0
  1625  000B42  AFD3               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  1626  000B44  D7F8               	goto	l780
  1627  000B46                     u2750:
  1628                           
  1629                           ; BSR set to: 0
  1630                           
  1631                           ; BSR set to: 0
  1632                           
  1633                           ; BSR set to: 0
  1634  000B46  90D8               	bcf	status,0,c
  1635  000B48  37D6               	rlcf	___aldiv@quotient& (0+255),f,b
  1636  000B4A  37D7               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  1637  000B4C  37D8               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  1638  000B4E  37D9               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  1639                           
  1640                           ; BSR set to: 0
  1641  000B50  51D0               	movf	___aldiv@divisor& (0+255),w,b
  1642  000B52  5DCC               	subwf	___aldiv@dividend& (0+255),w,b
  1643  000B54  51D1               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1644  000B56  59CD               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  1645  000B58  51D2               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1646  000B5A  59CE               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  1647  000B5C  51D3               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1648  000B5E  59CF               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  1649  000B60  A0D8               	btfss	status,0,c
  1650  000B62  D009               	goto	l783
  1651                           
  1652                           ; BSR set to: 0
  1653  000B64  51D0               	movf	___aldiv@divisor& (0+255),w,b
  1654  000B66  5FCC               	subwf	___aldiv@dividend& (0+255),f,b
  1655  000B68  51D1               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1656  000B6A  5BCD               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  1657  000B6C  51D2               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1658  000B6E  5BCE               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  1659  000B70  51D3               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1660  000B72  5BCF               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  1661                           
  1662                           ; BSR set to: 0
  1663  000B74  81D6               	bsf	___aldiv@quotient& (0+255),0,b
  1664  000B76                     l783:
  1665                           
  1666                           ; BSR set to: 0
  1667                           
  1668                           ; BSR set to: 0
  1669  000B76  90D8               	bcf	status,0,c
  1670  000B78  33D3               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  1671  000B7A  33D2               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  1672  000B7C  33D1               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  1673  000B7E  33D0               	rrcf	___aldiv@divisor& (0+255),f,b
  1674                           
  1675                           ; BSR set to: 0
  1676  000B80  2FD4               	decfsz	___aldiv@counter& (0+255),f,b
  1677  000B82  D7E1               	goto	u2750
  1678  000B84                     l784:
  1679                           
  1680                           ; BSR set to: 0
  1681                           
  1682                           ; BSR set to: 0
  1683                           
  1684                           ; BSR set to: 0
  1685  000B84  51D5               	movf	___aldiv@sign& (0+255),w,b
  1686  000B86  B4D8               	btfsc	status,2,c
  1687  000B88  D008               	goto	l785
  1688                           
  1689                           ; BSR set to: 0
  1690  000B8A  1FD9               	comf	(___aldiv@quotient+3)& (0+255),f,b
  1691  000B8C  1FD8               	comf	(___aldiv@quotient+2)& (0+255),f,b
  1692  000B8E  1FD7               	comf	(___aldiv@quotient+1)& (0+255),f,b
  1693  000B90  6DD6               	negf	___aldiv@quotient& (0+255),b
  1694  000B92  0E00               	movlw	0
  1695  000B94  23D7               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  1696  000B96  23D8               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  1697  000B98  23D9               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  1698  000B9A                     l785:
  1699                           
  1700                           ; BSR set to: 0
  1701                           
  1702                           ; BSR set to: 0
  1703  000B9A  C0D6  F0CC         	movff	___aldiv@quotient,?___aldiv
  1704  000B9E  C0D7  F0CD         	movff	___aldiv@quotient+1,?___aldiv+1
  1705  000BA2  C0D8  F0CE         	movff	___aldiv@quotient+2,?___aldiv+2
  1706  000BA6  C0D9  F0CF         	movff	___aldiv@quotient+3,?___aldiv+3
  1707  000BAA  0012               	return	
  1708  000BAC                     __end_of___aldiv:
  1709                           	opt stack 0
  1710                           tblptru	equ	0xFF8
  1711                           tblptrh	equ	0xFF7
  1712                           tblptrl	equ	0xFF6
  1713                           tablat	equ	0xFF5
  1714                           intcon	equ	0xFF2
  1715                           intcon2	equ	0xFF1
  1716                           intcon3	equ	0xFF0
  1717                           postinc0	equ	0xFEE
  1718                           wreg	equ	0xFE8
  1719                           postdec1	equ	0xFE5
  1720                           fsr1h	equ	0xFE2
  1721                           fsr1l	equ	0xFE1
  1722                           status	equ	0xFD8
  1723                           
  1724 ;; *************** function _inicializa_tarefas *****************
  1725 ;; Defined at:
  1726 ;;		line 169 in file "main.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;		None
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;		None
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1740 ;;      Params:         0       0       0       0       0       0       0       0       0
  1741 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1743 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1744 ;;Total ram usage:        0 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    2
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_main
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text11
  1755  000DAC                     __ptext11:
  1756                           	opt stack 0
  1757  000DAC                     _inicializa_tarefas:
  1758                           	opt stack 28
  1759                           
  1760                           ;main.c: 192: tarefa_em_execucao = 0;
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;incstack = 0
  1764  000DAC  0E00               	movlw	0
  1765  000DAE  6E1E               	movwf	_tarefa_em_execucao,c	;volatile
  1766  000DB0  0012               	return		;funcret
  1767  000DB2                     __end_of_inicializa_tarefas:
  1768                           	opt stack 0
  1769                           tblptru	equ	0xFF8
  1770                           tblptrh	equ	0xFF7
  1771                           tblptrl	equ	0xFF6
  1772                           tablat	equ	0xFF5
  1773                           intcon	equ	0xFF2
  1774                           intcon2	equ	0xFF1
  1775                           intcon3	equ	0xFF0
  1776                           postinc0	equ	0xFEE
  1777                           wreg	equ	0xFE8
  1778                           postdec1	equ	0xFE5
  1779                           fsr1h	equ	0xFE2
  1780                           fsr1l	equ	0xFE1
  1781                           status	equ	0xFD8
  1782                           
  1783 ;; *************** function _escalonador *****************
  1784 ;; Defined at:
  1785 ;;		line 206 in file "main.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  cont            1   27[COMRAM] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1799 ;;      Params:         0       0       0       0       0       0       0       0       0
  1800 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1801 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1802 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1803 ;;Total ram usage:        3 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    2
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_main
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text12
  1814  000C26                     __ptext12:
  1815                           	opt stack 0
  1816  000C26                     _escalonador:
  1817                           	opt stack 28
  1818                           
  1819                           ;main.c: 208: unsigned char cont;
  1820                           ;main.c: 209: for(cont = 0; cont<4;cont++)
  1821                           
  1822                           ;incstack = 0
  1823  000C26  0E00               	movlw	0
  1824  000C28  6E3E               	movwf	escalonador@cont,c
  1825  000C2A                     l2872:
  1826  000C2A  0E03               	movlw	3
  1827  000C2C  643E               	cpfsgt	escalonador@cont,c
  1828  000C2E  D001               	goto	l75
  1829  000C30  0012               	return	
  1830  000C32                     l75:
  1831                           
  1832                           ;main.c: 210: {
  1833                           ;main.c: 211: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  1834  000C32  503E               	movf	escalonador@cont,w,c
  1835  000C34  0D02               	mullw	2
  1836  000C36  0E09               	movlw	low _p_tarefas
  1837  000C38  24F3               	addwf	prodl,w,c
  1838  000C3A  6ED9               	movwf	fsr2l,c
  1839  000C3C  0E00               	movlw	high _p_tarefas
  1840  000C3E  20F4               	addwfc	prodh,w,c
  1841  000C40  6EDA               	movwf	fsr2h,c
  1842  000C42  50DE               	movf	postinc2,w,c
  1843  000C44  10DE               	iorwf	postinc2,w,c
  1844  000C46  B4D8               	btfsc	status,2,c
  1845  000C48  D028               	goto	l77
  1846  000C4A  503E               	movf	escalonador@cont,w,c
  1847  000C4C  0D02               	mullw	2
  1848  000C4E  0E01               	movlw	low _tempo_tarefa
  1849  000C50  24F3               	addwf	prodl,w,c
  1850  000C52  6ED9               	movwf	fsr2l,c
  1851  000C54  0E00               	movlw	high _tempo_tarefa
  1852  000C56  20F4               	addwfc	prodh,w,c
  1853  000C58  6EDA               	movwf	fsr2h,c
  1854  000C5A  50DE               	movf	postinc2,w,c
  1855  000C5C  10DE               	iorwf	postinc2,w,c
  1856  000C5E  A4D8               	btfss	status,2,c
  1857  000C60  D01C               	goto	l77
  1858                           
  1859                           ;main.c: 212: {
  1860                           ;main.c: 213: tarefa_em_execucao = 1;
  1861  000C62  0E01               	movlw	1
  1862  000C64  6E1E               	movwf	_tarefa_em_execucao,c	;volatile
  1863                           
  1864                           ;main.c: 215: p_tarefas[cont]();
  1865  000C66  0E09               	movlw	9
  1866  000C68  6E1A               	movwf	_timeout_tarefa+1,c
  1867  000C6A  0EC4               	movlw	196
  1868  000C6C  6E19               	movwf	_timeout_tarefa,c
  1869                           
  1870                           ;main.c: 216: tarefa_em_execucao = 0;
  1871  000C6E  0E00               	movlw	0
  1872  000C70  6E1E               	movwf	_tarefa_em_execucao,c	;volatile
  1873                           
  1874                           ;main.c: 217: tempo_tarefa[cont] = tempo_backup[cont];
  1875  000C72  503E               	movf	escalonador@cont,w,c
  1876  000C74  0D02               	mullw	2
  1877  000C76  0EC4               	movlw	low _tempo_backup
  1878  000C78  24F3               	addwf	prodl,w,c
  1879  000C7A  6ED9               	movwf	fsr2l,c
  1880  000C7C  0E00               	movlw	high _tempo_backup
  1881  000C7E  20F4               	addwfc	prodh,w,c
  1882  000C80  6EDA               	movwf	fsr2h,c
  1883  000C82  503E               	movf	escalonador@cont,w,c
  1884  000C84  0D02               	mullw	2
  1885  000C86  0E01               	movlw	low _tempo_tarefa
  1886  000C88  24F3               	addwf	prodl,w,c
  1887  000C8A  6EE1               	movwf	fsr1l,c
  1888  000C8C  0E00               	movlw	high _tempo_tarefa
  1889  000C8E  20F4               	addwfc	prodh,w,c
  1890  000C90  6EE2               	movwf	fsr1h,c
  1891  000C92  CFDE FFE6          	movff	postinc2,postinc1
  1892  000C96  CFDD FFE5          	movff	postdec2,postdec1
  1893  000C9A                     l77:
  1894  000C9A  2A3E               	incf	escalonador@cont,f,c
  1895  000C9C  D7C6               	goto	l2872
  1896  000C9E                     __end_of_escalonador:
  1897                           	opt stack 0
  1898                           tblptru	equ	0xFF8
  1899                           tblptrh	equ	0xFF7
  1900                           tblptrl	equ	0xFF6
  1901                           tablat	equ	0xFF5
  1902                           prodh	equ	0xFF4
  1903                           prodl	equ	0xFF3
  1904                           intcon	equ	0xFF2
  1905                           intcon2	equ	0xFF1
  1906                           intcon3	equ	0xFF0
  1907                           postinc0	equ	0xFEE
  1908                           wreg	equ	0xFE8
  1909                           postinc1	equ	0xFE6
  1910                           postdec1	equ	0xFE5
  1911                           fsr1h	equ	0xFE2
  1912                           fsr1l	equ	0xFE1
  1913                           postinc2	equ	0xFDE
  1914                           postdec2	equ	0xFDD
  1915                           fsr2h	equ	0xFDA
  1916                           fsr2l	equ	0xFD9
  1917                           status	equ	0xFD8
  1918                           
  1919 ;; *************** function _isr *****************
  1920 ;; Defined at:
  1921 ;;		line 108 in file "main.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;		None
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  cont            1   24[COMRAM] unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1935 ;;      Params:         0       0       0       0       0       0       0       0       0
  1936 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1937 ;;      Temps:         20       0       0       0       0       0       0       0       0
  1938 ;;      Totals:        21       0       0       0       0       0       0       0       0
  1939 ;;Total ram usage:       21 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:    1
  1942 ;; This function calls:
  1943 ;;		_recebe_dado_uart
  1944 ;;		i2_write_timer_zero
  1945 ;; This function is called by:
  1946 ;;		Interrupt level 2
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	intcode
  1951  000008                     __pintcode:
  1952                           	opt stack 0
  1953  000008                     _isr:
  1954                           	opt stack 26
  1955                           
  1956                           ;incstack = 0
  1957  000008  8246               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1958  00000A  EDE0  F004         	call	int_func,f	;refresh shadow registers
  1959                           tblptru	equ	0xFF8
  1960                           tblptrh	equ	0xFF7
  1961                           tblptrl	equ	0xFF6
  1962                           tablat	equ	0xFF5
  1963                           prodh	equ	0xFF4
  1964                           prodl	equ	0xFF3
  1965                           intcon	equ	0xFF2
  1966                           intcon2	equ	0xFF1
  1967                           intcon3	equ	0xFF0
  1968                           postinc0	equ	0xFEE
  1969                           wreg	equ	0xFE8
  1970                           postinc1	equ	0xFE6
  1971                           postdec1	equ	0xFE5
  1972                           fsr1h	equ	0xFE2
  1973                           fsr1l	equ	0xFE1
  1974                           postinc2	equ	0xFDE
  1975                           postdec2	equ	0xFDD
  1976                           fsr2h	equ	0xFDA
  1977                           fsr2l	equ	0xFD9
  1978                           status	equ	0xFD8
  1979                           
  1980                           	psect	intcode_body
  1981  0009C0                     __pintcode_body:
  1982                           	opt stack 26
  1983  0009C0                     int_func:
  1984                           	opt stack 26
  1985  0009C0  0006               	pop		; remove dummy address from shadow register refresh
  1986  0009C2  CFFA F029          	movff	pclath,??_isr+2
  1987  0009C6  CFFB F02A          	movff	pclatu,??_isr+3
  1988  0009CA  CFE9 F02B          	movff	fsr0l,??_isr+4
  1989  0009CE  CFEA F02C          	movff	fsr0h,??_isr+5
  1990  0009D2  CFE1 F02D          	movff	fsr1l,??_isr+6
  1991  0009D6  CFE2 F02E          	movff	fsr1h,??_isr+7
  1992  0009DA  CFD9 F02F          	movff	fsr2l,??_isr+8
  1993  0009DE  CFDA F030          	movff	fsr2h,??_isr+9
  1994  0009E2  CFF3 F031          	movff	prodl,??_isr+10
  1995  0009E6  CFF4 F032          	movff	prodh,??_isr+11
  1996  0009EA  CFF6 F033          	movff	tblptrl,??_isr+12
  1997  0009EE  CFF7 F034          	movff	tblptrh,??_isr+13
  1998  0009F2  CFF8 F035          	movff	tblptru,??_isr+14
  1999  0009F6  CFF5 F036          	movff	tablat,??_isr+15
  2000  0009FA  C046  F037         	movff	btemp,??_isr+16
  2001  0009FE  C047  F038         	movff	btemp+1,??_isr+17
  2002  000A02  C048  F039         	movff	btemp+2,??_isr+18
  2003  000A06  C049  F03A         	movff	btemp+3,??_isr+19
  2004                           
  2005                           ;main.c: 110: unsigned char cont;
  2006                           ;main.c: 113: if (PIE1bits.RCIE && PIR1bits.RCIF)
  2007  000A0A  BA9D               	btfsc	3997,5,c	;volatile
  2008  000A0C  AA9E               	btfss	3998,5,c	;volatile
  2009  000A0E  D004               	goto	i2l61
  2010                           
  2011                           ;main.c: 114: {
  2012                           ;main.c: 115: data_uart_recebe = recebe_dado_uart();
  2013  000A10  ECC0  F006         	call	_recebe_dado_uart	;wreg free
  2014  000A14  6E20               	movwf	_data_uart_recebe,c
  2015                           
  2016                           ;main.c: 116: PIR1bits.RCIF = 0;
  2017  000A16  9A9E               	bcf	3998,5,c	;volatile
  2018  000A18                     i2l61:
  2019                           
  2020                           ;main.c: 117: }
  2021                           ;main.c: 120: unsigned char cont;
  2022                           ;main.c: 122: if (TMR0IF && T0IF)
  2023  000A18  B4F2               	btfsc	intcon,2,c	;volatile
  2024  000A1A  A4F2               	btfss	intcon,2,c	;volatile
  2025  000A1C  D036               	goto	i2l62
  2026                           
  2027                           ;main.c: 123: {
  2028                           ;main.c: 124: INTCONbits.TMR0IF = 0;
  2029  000A1E  94F2               	bcf	intcon,2,c	;volatile
  2030                           
  2031                           ;main.c: 125: sinaliza_int_timer = 1;
  2032  000A20  0E01               	movlw	1
  2033  000A22  6E1F               	movwf	_sinaliza_int_timer,c
  2034                           
  2035                           ;main.c: 127: for(cont= 0; cont<4;cont++)
  2036  000A24  0E00               	movlw	0
  2037  000A26  6E3B               	movwf	isr@cont,c
  2038  000A28                     i2l3062:
  2039  000A28  0E03               	movlw	3
  2040  000A2A  643B               	cpfsgt	isr@cont,c
  2041  000A2C  D001               	goto	i2l63
  2042  000A2E  D019               	goto	i2u290_40
  2043  000A30                     i2l63:
  2044                           
  2045                           ;main.c: 128: {
  2046                           ;main.c: 129: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
  2047  000A30  503B               	movf	isr@cont,w,c
  2048  000A32  0D02               	mullw	2
  2049  000A34  0E01               	movlw	low _tempo_tarefa
  2050  000A36  24F3               	addwf	prodl,w,c
  2051  000A38  6ED9               	movwf	fsr2l,c
  2052  000A3A  0E00               	movlw	high _tempo_tarefa
  2053  000A3C  20F4               	addwfc	prodh,w,c
  2054  000A3E  6EDA               	movwf	fsr2h,c
  2055  000A40  50DE               	movf	postinc2,w,c
  2056  000A42  10DE               	iorwf	postinc2,w,c
  2057  000A44  B4D8               	btfsc	status,2,c
  2058  000A46  D00B               	goto	i2l65
  2059  000A48  503B               	movf	isr@cont,w,c
  2060  000A4A  0D02               	mullw	2
  2061  000A4C  0E01               	movlw	low _tempo_tarefa
  2062  000A4E  24F3               	addwf	prodl,w,c
  2063  000A50  6ED9               	movwf	fsr2l,c
  2064  000A52  0E00               	movlw	high _tempo_tarefa
  2065  000A54  20F4               	addwfc	prodh,w,c
  2066  000A56  6EDA               	movwf	fsr2h,c
  2067  000A58  06DE               	decf	postinc2,f,c
  2068  000A5A  0E00               	movlw	0
  2069  000A5C  5ADD               	subwfb	postdec2,f,c
  2070  000A5E                     i2l65:
  2071  000A5E  2A3B               	incf	isr@cont,f,c
  2072  000A60  D7E3               	goto	i2l3062
  2073  000A62                     i2u290_40:
  2074                           
  2075                           ;main.c: 130: }
  2076                           ;main.c: 133: if(tarefa_em_execucao == 1)
  2077  000A62  041E               	decf	_tarefa_em_execucao,w,c	;volatile
  2078  000A64  A4D8               	btfss	status,2,c
  2079  000A66  D00B               	goto	i2l67
  2080                           
  2081                           ;main.c: 134: {
  2082                           ;main.c: 135: timeout_tarefa--;
  2083  000A68  0619               	decf	_timeout_tarefa,f,c
  2084  000A6A  A0D8               	btfss	status,0,c
  2085  000A6C  061A               	decf	_timeout_tarefa+1,f,c
  2086                           
  2087                           ;main.c: 136: if(!timeout_tarefa)
  2088  000A6E  5019               	movf	_timeout_tarefa,w,c
  2089  000A70  101A               	iorwf	_timeout_tarefa+1,w,c
  2090  000A72  A4D8               	btfss	status,2,c
  2091  000A74  D004               	goto	i2l67
  2092                           
  2093                           ;main.c: 137: {
  2094                           ;main.c: 139: PCLATH = 0;
  2095  000A76  0E00               	movlw	0
  2096  000A78  6EFA               	movwf	pclath,c	;volatile
  2097                           
  2098                           ;main.c: 140: PCL = 0;
  2099  000A7A  0E00               	movlw	0
  2100  000A7C  6EF9               	movwf	pcl,c	;volatile
  2101  000A7E                     i2l67:
  2102                           
  2103                           ;main.c: 141: }
  2104                           ;main.c: 142: }
  2105                           ;main.c: 145: write_timer_zero(0x0083);
  2106  000A7E  0E00               	movlw	0
  2107  000A80  6E24               	movwf	i2write_timer_zero@timer0+1,c
  2108  000A82  0E83               	movlw	131
  2109  000A84  6E23               	movwf	i2write_timer_zero@timer0,c
  2110  000A86  ECB7  F006         	call	i2_write_timer_zero	;wreg free
  2111  000A8A                     i2l62:
  2112                           
  2113                           ;main.c: 147: }
  2114                           ;main.c: 153: if (INT0IF && INT0IE)
  2115  000A8A  B2F2               	btfsc	intcon,1,c	;volatile
  2116  000A8C  A8F2               	btfss	intcon,4,c	;volatile
  2117  000A8E  D001               	goto	i2l68
  2118                           
  2119                           ;main.c: 154: {
  2120                           ;main.c: 155: INT0IF = 0;
  2121  000A90  92F2               	bcf	intcon,1,c	;volatile
  2122  000A92                     i2l68:
  2123  000A92  C03A  F049         	movff	??_isr+19,btemp+3
  2124  000A96  C039  F048         	movff	??_isr+18,btemp+2
  2125  000A9A  C038  F047         	movff	??_isr+17,btemp+1
  2126  000A9E  C037  F046         	movff	??_isr+16,btemp
  2127  000AA2  C036  FFF5         	movff	??_isr+15,tablat
  2128  000AA6  C035  FFF8         	movff	??_isr+14,tblptru
  2129  000AAA  C034  FFF7         	movff	??_isr+13,tblptrh
  2130  000AAE  C033  FFF6         	movff	??_isr+12,tblptrl
  2131  000AB2  C032  FFF4         	movff	??_isr+11,prodh
  2132  000AB6  C031  FFF3         	movff	??_isr+10,prodl
  2133  000ABA  C030  FFDA         	movff	??_isr+9,fsr2h
  2134  000ABE  C02F  FFD9         	movff	??_isr+8,fsr2l
  2135  000AC2  C02E  FFE2         	movff	??_isr+7,fsr1h
  2136  000AC6  C02D  FFE1         	movff	??_isr+6,fsr1l
  2137  000ACA  C02C  FFEA         	movff	??_isr+5,fsr0h
  2138  000ACE  C02B  FFE9         	movff	??_isr+4,fsr0l
  2139  000AD2  C02A  FFFB         	movff	??_isr+3,pclatu
  2140  000AD6  C029  FFFA         	movff	??_isr+2,pclath
  2141  000ADA  9246               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2142  000ADC  0011               	retfie		f
  2143  000ADE                     __end_of_isr:
  2144                           	opt stack 0
  2145                           pclatu	equ	0xFFB
  2146                           pclath	equ	0xFFA
  2147                           pcl	equ	0xFF9
  2148                           tblptru	equ	0xFF8
  2149                           tblptrh	equ	0xFF7
  2150                           tblptrl	equ	0xFF6
  2151                           tablat	equ	0xFF5
  2152                           prodh	equ	0xFF4
  2153                           prodl	equ	0xFF3
  2154                           intcon	equ	0xFF2
  2155                           intcon2	equ	0xFF1
  2156                           intcon3	equ	0xFF0
  2157                           postinc0	equ	0xFEE
  2158                           fsr0h	equ	0xFEA
  2159                           fsr0l	equ	0xFE9
  2160                           wreg	equ	0xFE8
  2161                           postinc1	equ	0xFE6
  2162                           postdec1	equ	0xFE5
  2163                           fsr1h	equ	0xFE2
  2164                           fsr1l	equ	0xFE1
  2165                           postinc2	equ	0xFDE
  2166                           postdec2	equ	0xFDD
  2167                           fsr2h	equ	0xFDA
  2168                           fsr2l	equ	0xFD9
  2169                           status	equ	0xFD8
  2170                           
  2171 ;; *************** function i2_write_timer_zero *****************
  2172 ;; Defined at:
  2173 ;;		line 133 in file "bibliotecas/hardware.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  timer0          2    0[COMRAM] unsigned int 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  write_timer_    2    2[COMRAM] struct Timers
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		None
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2187 ;;      Params:         2       0       0       0       0       0       0       0       0
  2188 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2190 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2191 ;;Total ram usage:        4 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; This function calls:
  2194 ;;		Nothing
  2195 ;; This function is called by:
  2196 ;;		_isr
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text14
  2201  000D6E                     __ptext14:
  2202                           	opt stack 0
  2203  000D6E                     i2_write_timer_zero:
  2204                           	opt stack 26
  2205                           
  2206                           ;hardware.c: 135: union Timers timer;
  2207                           ;hardware.c: 137: timer.lt = timer0;
  2208                           
  2209                           ;incstack = 0
  2210  000D6E  C023  F025         	movff	i2write_timer_zero@timer0,i2write_timer_zero@timer
  2211  000D72  C024  F026         	movff	i2write_timer_zero@timer0+1,i2write_timer_zero@timer+1
  2212                           
  2213                           ;hardware.c: 139: TMR0H = timer.bt[1];
  2214  000D76  C026  FFD7         	movff	i2write_timer_zero@timer+1,4055	;volatile
  2215                           
  2216                           ;hardware.c: 140: TMR0L = timer.bt[0];
  2217  000D7A  C025  FFD6         	movff	i2write_timer_zero@timer,4054	;volatile
  2218  000D7E  0012               	return		;funcret
  2219  000D80                     __end_ofi2_write_timer_zero:
  2220                           	opt stack 0
  2221                           pclatu	equ	0xFFB
  2222                           pclath	equ	0xFFA
  2223                           pcl	equ	0xFF9
  2224                           tblptru	equ	0xFF8
  2225                           tblptrh	equ	0xFF7
  2226                           tblptrl	equ	0xFF6
  2227                           tablat	equ	0xFF5
  2228                           prodh	equ	0xFF4
  2229                           prodl	equ	0xFF3
  2230                           intcon	equ	0xFF2
  2231                           intcon2	equ	0xFF1
  2232                           intcon3	equ	0xFF0
  2233                           postinc0	equ	0xFEE
  2234                           fsr0h	equ	0xFEA
  2235                           fsr0l	equ	0xFE9
  2236                           wreg	equ	0xFE8
  2237                           postinc1	equ	0xFE6
  2238                           postdec1	equ	0xFE5
  2239                           fsr1h	equ	0xFE2
  2240                           fsr1l	equ	0xFE1
  2241                           postinc2	equ	0xFDE
  2242                           postdec2	equ	0xFDD
  2243                           fsr2h	equ	0xFDA
  2244                           fsr2l	equ	0xFD9
  2245                           status	equ	0xFD8
  2246                           
  2247 ;; *************** function _recebe_dado_uart *****************
  2248 ;; Defined at:
  2249 ;;		line 138 in file "bibliotecas/uart.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;		None
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;		None
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      unsigned char 
  2256 ;; Registers used:
  2257 ;;		wreg, status,2
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2263 ;;      Params:         0       0       0       0       0       0       0       0       0
  2264 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2265 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2266 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2267 ;;Total ram usage:        0 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_isr
  2273 ;;		_recebe_string_uart
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text15
  2278  000D80                     __ptext15:
  2279                           	opt stack 0
  2280  000D80                     _recebe_dado_uart:
  2281                           	opt stack 26
  2282                           
  2283                           ;uart.c: 140: while(RCIF==0);
  2284                           
  2285                           ;incstack = 0
  2286  000D80  AA9E               	btfss	3998,5,c	;volatile
  2287  000D82  D7FE               	goto	_recebe_dado_uart
  2288                           
  2289                           ;uart.c: 141: if(RCSTAbits.OERR)
  2290  000D84  A2AB               	btfss	4011,1,c	;volatile
  2291  000D86  D003               	goto	i2l436
  2292                           
  2293                           ;uart.c: 142: {
  2294                           ;uart.c: 143: CREN = 0;
  2295  000D88  98AB               	bcf	4011,4,c	;volatile
  2296                           
  2297                           ;uart.c: 144: __nop();
  2298  000D8A  F000               	nop	
  2299                           
  2300                           ;uart.c: 145: CREN=1;
  2301  000D8C  88AB               	bsf	4011,4,c	;volatile
  2302  000D8E                     i2l436:
  2303                           
  2304                           ;uart.c: 146: }
  2305                           ;uart.c: 147: return(RCREG);
  2306  000D8E  50AE               	movf	4014,w,c	;volatile
  2307  000D90  0012               	return	
  2308  000D92                     __end_of_recebe_dado_uart:
  2309                           	opt stack 0
  2310                           pclatu	equ	0xFFB
  2311                           pclath	equ	0xFFA
  2312                           pcl	equ	0xFF9
  2313                           tblptru	equ	0xFF8
  2314                           tblptrh	equ	0xFF7
  2315                           tblptrl	equ	0xFF6
  2316                           tablat	equ	0xFF5
  2317                           prodh	equ	0xFF4
  2318                           prodl	equ	0xFF3
  2319                           intcon	equ	0xFF2
  2320                           intcon2	equ	0xFF1
  2321                           intcon3	equ	0xFF0
  2322                           postinc0	equ	0xFEE
  2323                           fsr0h	equ	0xFEA
  2324                           fsr0l	equ	0xFE9
  2325                           wreg	equ	0xFE8
  2326                           postinc1	equ	0xFE6
  2327                           postdec1	equ	0xFE5
  2328                           fsr1h	equ	0xFE2
  2329                           fsr1l	equ	0xFE1
  2330                           postinc2	equ	0xFDE
  2331                           postdec2	equ	0xFDD
  2332                           fsr2h	equ	0xFDA
  2333                           fsr2l	equ	0xFD9
  2334                           status	equ	0xFD8
  2335                           pclatu	equ	0xFFB
  2336                           pclath	equ	0xFFA
  2337                           pcl	equ	0xFF9
  2338                           tblptru	equ	0xFF8
  2339                           tblptrh	equ	0xFF7
  2340                           tblptrl	equ	0xFF6
  2341                           tablat	equ	0xFF5
  2342                           prodh	equ	0xFF4
  2343                           prodl	equ	0xFF3
  2344                           intcon	equ	0xFF2
  2345                           intcon2	equ	0xFF1
  2346                           intcon3	equ	0xFF0
  2347                           postinc0	equ	0xFEE
  2348                           fsr0h	equ	0xFEA
  2349                           fsr0l	equ	0xFE9
  2350                           wreg	equ	0xFE8
  2351                           postinc1	equ	0xFE6
  2352                           postdec1	equ	0xFE5
  2353                           fsr1h	equ	0xFE2
  2354                           fsr1l	equ	0xFE1
  2355                           postinc2	equ	0xFDE
  2356                           postdec2	equ	0xFDD
  2357                           fsr2h	equ	0xFDA
  2358                           fsr2l	equ	0xFD9
  2359                           status	equ	0xFD8
  2360                           
  2361                           	psect	rparam
  2362  0000                     pclatu	equ	0xFFB
  2363                           pclath	equ	0xFFA
  2364                           pcl	equ	0xFF9
  2365                           tblptru	equ	0xFF8
  2366                           tblptrh	equ	0xFF7
  2367                           tblptrl	equ	0xFF6
  2368                           tablat	equ	0xFF5
  2369                           prodh	equ	0xFF4
  2370                           prodl	equ	0xFF3
  2371                           intcon	equ	0xFF2
  2372                           intcon2	equ	0xFF1
  2373                           intcon3	equ	0xFF0
  2374                           postinc0	equ	0xFEE
  2375                           fsr0h	equ	0xFEA
  2376                           fsr0l	equ	0xFE9
  2377                           wreg	equ	0xFE8
  2378                           postinc1	equ	0xFE6
  2379                           postdec1	equ	0xFE5
  2380                           fsr1h	equ	0xFE2
  2381                           fsr1l	equ	0xFE1
  2382                           postinc2	equ	0xFDE
  2383                           postdec2	equ	0xFDD
  2384                           fsr2h	equ	0xFDA
  2385                           fsr2l	equ	0xFD9
  2386                           status	equ	0xFD8
  2387                           
  2388                           	psect	temp
  2389  000046                     btemp:
  2390                           	opt stack 0
  2391  000046                     	ds	1
  2392  0000                     int$flags	set	btemp
  2393  0000                     wtemp6	set	btemp+1
  2394                           pclatu	equ	0xFFB
  2395                           pclath	equ	0xFFA
  2396                           pcl	equ	0xFF9
  2397                           tblptru	equ	0xFF8
  2398                           tblptrh	equ	0xFF7
  2399                           tblptrl	equ	0xFF6
  2400                           tablat	equ	0xFF5
  2401                           prodh	equ	0xFF4
  2402                           prodl	equ	0xFF3
  2403                           intcon	equ	0xFF2
  2404                           intcon2	equ	0xFF1
  2405                           intcon3	equ	0xFF0
  2406                           postinc0	equ	0xFEE
  2407                           fsr0h	equ	0xFEA
  2408                           fsr0l	equ	0xFE9
  2409                           wreg	equ	0xFE8
  2410                           postinc1	equ	0xFE6
  2411                           postdec1	equ	0xFE5
  2412                           fsr1h	equ	0xFE2
  2413                           fsr1l	equ	0xFE1
  2414                           postinc2	equ	0xFDE
  2415                           postdec2	equ	0xFDD
  2416                           fsr2h	equ	0xFDA
  2417                           fsr2l	equ	0xFD9
  2418                           status	equ	0xFD8


Data Sizes:
    Strings     13
    Constant    128
    Data        17
    BSS         654
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      69
    BANK0           160     26     144
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    rd	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), 

    pf_readdir@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    pf_opendir@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    follow_path@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    get_fileinfo@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    create_name@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dir_read@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dir_find@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dir_next@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    S1126$fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    dir_rewind@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(COMRAM[12]), pf_opendir@sp(COMRAM[12]), pf_open@sp(COMRAM[12]), 

    FatFs	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_escalonador
    _config_timer_zero->_write_timer_zero
    _inicializa_uart->_configura_baudrate_uart

Critical Paths under _isr in COMRAM

    _isr->i2_write_timer_zero

Critical Paths under _main in BANK0

    _config_timer_zero->_write_timer_zero
    _inicializa_uart->_configura_baudrate_uart
    _configura_baudrate_uart->___aldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1499
                        _escalonador
                 _inicializa_tarefas
                    _inicializa_uart
                      _init_hardware
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     247
                  _config_timer_zero
                     _inicializa_adc
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _inicializa_adc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     247
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     4     2      2     247
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _inicializa_uart                                      0     0      0    1118
            _configura_baudrate_uart
 ---------------------------------------------------------------------------------
 (2) _configura_baudrate_uart                             14    10      4    1118
                                             25 COMRAM     2     2      0
                                             14 BANK0     12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     805
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0     134
                                             25 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                 21    21      0     261
                                              4 COMRAM    21    21      0
                   _recebe_dado_uart
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (5) i2_write_timer_zero                                   4     2      2     131
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _recebe_dado_uart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _escalonador
   _inicializa_tarefas
   _inicializa_uart
     _configura_baudrate_uart
       ___aldiv
   _init_hardware
     _config_timer_zero
       _write_timer_zero
     _inicializa_adc
     _init_interrupt
     _init_oscilador
     _init_ports

 _isr (ROOT)
   _recebe_dado_uart
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     200      21       25.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1A      90       5       90.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      45       1       73.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D5      20        0.0%
DATA                 0      0     2D5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jan 17 20:07:05 2022

                               _s 0021                       _SSPSTATbits 000FC7  
                ??_init_interrupt 003C                                l75 0C32  
                              l83 0CF0                                l77 0C9A  
                              _rd 001B                      ?_escalonador 0023  
                ?_inicializa_uart 0023                               l410 09A8  
                             l780 0B36                               l783 0B76  
                             l784 0B84                               l776 0AFC  
                             l785 0B9A                               l777 0B14  
                             l779 0B42                               _PCL 000FF9  
                             _PR2 000FCB                  ??_init_oscilador 003C  
                             _isr 0008                               _txt 00B0  
                             prod 000FF3                               wreg 000FE8  
                  create_name@cvt 0801         __size_of_write_timer_zero 0012  
                            l2872 0C2A                              ?_isr 0023  
                            STR_1 088B                              STR_2 0881  
                            _BRGH 007D62                              _T0IF 007F92  
                            _CREN 007D5C                              _LATB 000F8A  
                            _PIE1 000F9D                              u2750 0B46  
                            u2815 0930                              u2825 097C  
                            u2785 08A2                              u2795 08EE  
                            _RCIF 007CF5                              i2l61 0A18  
                            i2l62 0A8A                              i2l63 0A30  
                            i2l65 0A5E                              i2l67 0A7E  
                            i2l68 0A92                              _TMR2 000FCC  
                            _SPEN 007D5F                              _TRMT 007D61  
                            _TXEN 007D65                              _SYNC 007D64  
                            _flag 0017                              _main 0CE4  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr2h 000FDA                              fsr0l 000FE9  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 0046                              prodh 000FF4  
                            prodl 000FF3                              start 000E  
                   disk_readp@arr 00F0                      ___param_bank 000000  
                           ??_isr 0027  __size_of_configura_baudrate_uart 0130  
                 __end_of___aldiv 0BAC                             ?_main 0023  
                           _T0CON 000FD5                             _T2CON 000FCA  
                  _data_buffer_32 0090                             i2l436 0D8E  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                           _TXREG 000FAD                             _TXSTA 000FAC  
                           _FatFs 0015            __end_ofcreate_name@cvt 0881  
      __size_of_config_timer_zero 001A                             pclath 000FFA  
                           tablat 000FF5                             status 000FD8  
                           wtemp6 0047                   __initialization 0BAC  
                    __end_of_main 0D00                _inicializa_tarefas 0DAC  
                 escalonador@cont 003E                            ??_main 003F  
                   __activetblptr 000002               ?_inicializa_tarefas 0023  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                          _INT0IE 007F94                            _INT0IF 007F91  
                          i2l3062 0A28                            _PCLATH 000FFA  
                          _INTCON 000FF2                            _TMR0IF 007F92  
                          _TMR2IF 007CF1          __end_of_recebe_dado_uart 0D92  
         __size_of_inicializa_adc 0022                            _SPPCFG 000F63  
                          _SPPCON 000F65                            _SSPBUF 000FC9  
            ??_inicializa_tarefas 003C            __size_of_init_hardware 0016  
                          _Result 0022                         ??___aldiv 003C  
                          _folder 0060                            _estado 001D  
                          clear_0 0BF4                            clear_1 0C06  
                          clear_2 0C12          configura_baudrate_uart@x 003C  
                    __pdataCOMRAM 003F              __size_of_escalonador 0078  
                    __mediumconst 0000             write_timer_zero@timer 00CC  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                  _write_timer_zero 0D5C  
                      __accesstop 0060           __end_of__initialization 0C18  
                   ___rparam_used 000001                    __pcstackCOMRAM 0023  
                    __pidataBANK0 0D92           _configura_baudrate_uart 0890  
              _tarefa_em_execucao 001E        __end_ofi2_write_timer_zero 0D80  
 configura_baudrate_uart@baudrate 00DA                     _init_hardware 0D34  
                      __pbssBANK0 0060         escreve_inteiro_uart@F3956 003F  
                         _INTCON2 000FF1                           _INTCON3 000FF0  
                  ?_init_hardware 0023                           _SSPCON1 000FC6  
        __size_of_inicializa_uart 0024                    _inicializa_adc 0CC2  
                         __Hparam 0000         ??_configura_baudrate_uart 00DE  
                         __Lparam 0000                           ___aldiv 0ADE  
                    __psmallconst 0800                           __pcinit 0BAC  
                      _init_ports 0D00                           __ramtop 0800  
                         __ptext0 0CE4                           __ptext1 0D34  
                         __ptext2 0D00                           __ptext3 0D9C  
                         __ptext4 0D4A                           __ptext5 0CC2  
                         __ptext6 0D1A                           __ptext7 0D5C  
                         __ptext8 0C9E                           __ptext9 0890  
                       _T0CONbits 000FD5           i2write_timer_zero@timer 0025  
                    __size_of_isr 0AD6                  ___aldiv@dividend 00CC  
         __size_of_init_interrupt 0012            __end_of_inicializa_adc 0CE4  
                  __pintcode_body 09C0              end_of_initialization 0C18  
                         isr@cont 003B           __size_of_init_oscilador 0008  
                   __Lmediumconst 0000                           int_func 09C0  
               ?_recebe_dado_uart 0023            write_timer_zero@timer0 003C  
              ??_recebe_dado_uart 0023                         _RCSTAbits 000FAB  
        __end_of_write_timer_zero 0D6E                  ___aldiv@quotient 00D6  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                         _PORTBbits 000F81  
                 ??_init_hardware 003E   __end_of_configura_baudrate_uart 09C0  
                       _TRISCbits 000F94                   ?_inicializa_adc 0023  
               ??_inicializa_uart 003E       __size_of_inicializa_tarefas 0006  
                   __pidataCOMRAM 0DA4                     ??_escalonador 003C  
                     ?_init_ports 0023               start_initialization 0BAC  
                     __end_of_isr 0ADE                i2_write_timer_zero 0D6E  
                _data_uart_recebe 0020               ?i2_write_timer_zero 0023  
                     __pdataBANK0 00E6                       __pbssBIGRAM 00F0  
                     __pbssCOMRAM 0001                     __pcstackBANK0 00CC  
                  _init_interrupt 0D4A              ??i2_write_timer_zero 0025  
             __end_of_escalonador 0C9E                    _init_oscilador 0D9C  
             __size_of_init_ports 001A                         __pintcode 0008  
                        ?___aldiv 00CC                _sinaliza_int_timer 001F  
                     __smallconst 0800            __end_of_init_interrupt 0D5C  
          __end_of_init_oscilador 0DA4                         _p_tarefas 0009  
                 ___aldiv@divisor 00D0                   ___aldiv@counter 00D4  
                        _LATBbits 000F8A                          _PIE1bits 000F9D  
                        _PIR1bits 000F9E                          i2u290_40 0A62  
               ?_write_timer_zero 003C                ??_write_timer_zero 003E  
       __size_of_recebe_dado_uart 0012                       _escalonador 0C26  
                      _ADCON0bits 000FC2                        _ADCON1bits 000FC1  
                      _ADCON2bits 000FC0                   ?_init_interrupt 0023  
                ??_inicializa_adc 003C                   _inicializa_uart 0C9E  
                 ?_init_oscilador 0023                         copy_data0 0BC0  
                       copy_data1 0BE0          ?_configura_baudrate_uart 00DA  
                        __Hrparam 0000                          __Lrparam 0000  
                __size_of___aldiv 00CE                      ??_init_ports 003C  
           __end_of_init_hardware 0D4A                          _fileName 00E6  
                        __ptext10 0ADE                          __ptext11 0DAC  
                        __ptext12 0C26                          __ptext14 0D6E  
                        __ptext15 0D80                          _fileSize 0011  
                  _timeout_tarefa 0019        __end_of_inicializa_tarefas 0DB2  
        i2write_timer_zero@timer0 0023                     __size_of_main 001C  
              __end_of_init_ports 0D1A                          int$flags 0046  
         __end_of_inicializa_uart 0CC2                        _INTCONbits 000FF2  
                    _tempo_backup 00C4                 _config_timer_zero 0D1A  
                        intlevel2 0000                ?_config_timer_zero 0023  
                    _tempo_tarefa 0001                        _OSCCONbits 000FD3  
             ??_config_timer_zero 003E                  _recebe_dado_uart 0D80  
                    ___aldiv@sign 00D5         __end_of_config_timer_zero 0D34  
     __size_ofi2_write_timer_zero 0012                       _SSPCON1bits 000FC6  
