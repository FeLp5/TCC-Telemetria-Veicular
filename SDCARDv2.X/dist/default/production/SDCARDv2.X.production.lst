

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Apr 23 12:42:31 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=4
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=4
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=4
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=4
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=4
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=4
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=4
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=3
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=3
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=4
   111                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   112                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=4
   118                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=4
   120                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   121                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   122                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   123                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   124  0000                     
   125                           ; Version 2.32
   126                           ; Generated 02/02/2021 GMT
   127                           ; 
   128                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   129                           ; All rights reserved.
   130                           ; 
   131                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   132                           ; 
   133                           ; Redistribution and use in source and binary forms, with or without modification, are
   134                           ; permitted provided that the following conditions are met:
   135                           ; 
   136                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   137                           ;        conditions and the following disclaimer.
   138                           ; 
   139                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   140                           ;        of conditions and the following disclaimer in the documentation and/or other
   141                           ;        materials provided with the distribution. Publication is not required when
   142                           ;        this file is used in an embedded application.
   143                           ; 
   144                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   145                           ;        software without specific prior written permission.
   146                           ; 
   147                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   148                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   149                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   150                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   151                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   152                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   153                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   154                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   155                           ; 
   156                           ; 
   157                           ; Code-generator required, PIC18F4550 Definitions
   158                           ; 
   159                           ; SFR Addresses
   160  0000                     
   161                           	psect	idataCOMRAM
   162  005230                     __pidataCOMRAM:
   163                           	callstack 0
   164                           
   165                           ;initializer for leitura_sdcard@size
   166  005230  58                 	db	88
   167                           
   168                           	psect	idataBANK1
   169  0051A0                     __pidataBANK1:
   170                           	callstack 0
   171                           
   172                           ;initializer for escreve_inteiro_uart@F3215
   173  0051A0  30                 	db	48
   174  0051A1  30                 	db	48
   175  0051A2  30                 	db	48
   176  0051A3  30                 	db	48
   177  0051A4  30                 	db	48
   178  0051A5  30                 	db	48
   179  0051A6  00                 	db	0
   180                           
   181                           ;initializer for escreve_inteiro_lcd@F3223
   182  0051A7  30                 	db	48
   183  0051A8  30                 	db	48
   184  0051A9  30                 	db	48
   185  0051AA  30                 	db	48
   186  0051AB  30                 	db	48
   187  0051AC  30                 	db	48
   188  0051AD  00                 	db	0
   189                           
   190                           	psect	idataBANK2
   191  004752                     __pidataBANK2:
   192                           	callstack 0
   193                           
   194                           ;initializer for verifica_fence_externo@F3643
   195  004752  2D                 	db	45
   196  004753  30                 	db	48
   197  004754  34                 	db	52
   198  004755  36                 	db	54
   199  004756  32                 	db	50
   200  004757  39                 	db	57
   201  004758  2E                 	db	46
   202  004759  37                 	db	55
   203  00475A  33                 	db	51
   204  00475B  34                 	db	52
   205  00475C  37                 	db	55
   206  00475D  37                 	db	55
   207  00475E  2D                 	db	45
   208  00475F  30                 	db	48
   209  004760  34                 	db	52
   210  004761  36                 	db	54
   211  004762  32                 	db	50
   212  004763  39                 	db	57
   213  004764  2E                 	db	46
   214  004765  36                 	db	54
   215  004766  38                 	db	56
   216  004767  36                 	db	54
   217  004768  30                 	db	48
   218  004769  31                 	db	49
   219  00476A  2D                 	db	45
   220  00476B  30                 	db	48
   221  00476C  34                 	db	52
   222  00476D  36                 	db	54
   223  00476E  32                 	db	50
   224  00476F  39                 	db	57
   225  004770  2E                 	db	46
   226  004771  36                 	db	54
   227  004772  38                 	db	56
   228  004773  36                 	db	54
   229  004774  30                 	db	48
   230  004775  31                 	db	49
   231  004776  2D                 	db	45
   232  004777  30                 	db	48
   233  004778  34                 	db	52
   234  004779  36                 	db	54
   235  00477A  32                 	db	50
   236  00477B  39                 	db	57
   237  00477C  2E                 	db	46
   238  00477D  37                 	db	55
   239  00477E  33                 	db	51
   240  00477F  34                 	db	52
   241  004780  37                 	db	55
   242  004781  37                 	db	55
   243                           
   244                           ;initializer for verifica_fence_externo@F3640
   245  004782  2D                 	db	45
   246  004783  32                 	db	50
   247  004784  33                 	db	51
   248  004785  34                 	db	52
   249  004786  32                 	db	50
   250  004787  2E                 	db	46
   251  004788  30                 	db	48
   252  004789  37                 	db	55
   253  00478A  31                 	db	49
   254  00478B  31                 	db	49
   255  00478C  32                 	db	50
   256  00478D  2D                 	db	45
   257  00478E  32                 	db	50
   258  00478F  33                 	db	51
   259  004790  34                 	db	52
   260  004791  32                 	db	50
   261  004792  2E                 	db	46
   262  004793  30                 	db	48
   263  004794  37                 	db	55
   264  004795  31                 	db	49
   265  004796  31                 	db	49
   266  004797  32                 	db	50
   267  004798  2D                 	db	45
   268  004799  32                 	db	50
   269  00479A  33                 	db	51
   270  00479B  34                 	db	52
   271  00479C  32                 	db	50
   272  00479D  2E                 	db	46
   273  00479E  31                 	db	49
   274  00479F  31                 	db	49
   275  0047A0  37                 	db	55
   276  0047A1  38                 	db	56
   277  0047A2  34                 	db	52
   278  0047A3  2D                 	db	45
   279  0047A4  32                 	db	50
   280  0047A5  33                 	db	51
   281  0047A6  34                 	db	52
   282  0047A7  32                 	db	50
   283  0047A8  2E                 	db	46
   284  0047A9  31                 	db	49
   285  0047AA  31                 	db	49
   286  0047AB  37                 	db	55
   287  0047AC  38                 	db	56
   288  0047AD  34                 	db	52
   289                           
   290                           ;initializer for verifica_fence_externo@F3656
   291  0047AE  2D                 	db	45
   292  0047AF  30                 	db	48
   293  0047B0  34                 	db	52
   294  0047B1  36                 	db	54
   295  0047B2  32                 	db	50
   296  0047B3  39                 	db	57
   297  0047B4  2E                 	db	46
   298  0047B5  36                 	db	54
   299  0047B6  38                 	db	56
   300  0047B7  36                 	db	54
   301  0047B8  37                 	db	55
   302  0047B9  37                 	db	55
   303                           
   304                           ;initializer for verifica_fence_externo@F3654
   305  0047BA  2D                 	db	45
   306  0047BB  32                 	db	50
   307  0047BC  33                 	db	51
   308  0047BD  34                 	db	52
   309  0047BE  32                 	db	50
   310  0047BF  2E                 	db	46
   311  0047C0  30                 	db	48
   312  0047C1  37                 	db	55
   313  0047C2  31                 	db	49
   314  0047C3  31                 	db	49
   315  0047C4  32                 	db	50
   316                           
   317                           	psect	mediumconst
   318  0060EC                     __pmediumconst:
   319                           	callstack 0
   320  0060EC  00                 	db	0
   321  0060ED                     mensagem_inicial@F3635:
   322                           	callstack 0
   323  0060ED  54                 	db	84
   324  0060EE  43                 	db	67
   325  0060EF  43                 	db	67
   326  0060F0  2D                 	db	45
   327  0060F1  2D                 	db	45
   328  0060F2  54                 	db	84
   329  0060F3  45                 	db	69
   330  0060F4  4C                 	db	76
   331  0060F5  45                 	db	69
   332  0060F6  4D                 	db	77
   333  0060F7  54                 	db	84
   334  0060F8  52                 	db	82
   335  0060F9  49                 	db	73
   336  0060FA  41                 	db	65
   337  0060FB  00                 	db	0
   338  0060FC  00                 	db	0
   339  0060FD  00                 	db	0
   340  0060FE                     __end_ofmensagem_inicial@F3635:
   341                           	callstack 0
   342  0060FE                     mensagem_inicial@F3633:
   343                           	callstack 0
   344  0060FE  46                 	db	70
   345  0060FF  41                 	db	65
   346  006100  54                 	db	84
   347  006101  45                 	db	69
   348  006102  43                 	db	67
   349  006103  20                 	db	32
   350  006104  53                 	db	83
   351  006105  54                 	db	84
   352  006106  20                 	db	32
   353  006107  41                 	db	65
   354  006108  4E                 	db	78
   355  006109  44                 	db	68
   356  00610A  52                 	db	82
   357  00610B  45                 	db	69
   358  00610C  00                 	db	0
   359  00610D  00                 	db	0
   360  00610E  00                 	db	0
   361  00610F                     __end_ofmensagem_inicial@F3633:
   362                           	callstack 0
   363  0000                     _TMR0	set	4054
   364  0000                     _RCSTA	set	4011
   365  0000                     _TXSTA	set	4012
   366  0000                     _RCREG	set	4014
   367  0000                     _RCSTAbits	set	4011
   368  0000                     _SPBRG	set	4015
   369  0000                     _PR2	set	4043
   370  0000                     _TMR2	set	4044
   371  0000                     _T2CON	set	4042
   372  0000                     _OSCCONbits	set	4051
   373  0000                     _TRISE	set	3990
   374  0000                     _TRISC	set	3988
   375  0000                     _TRISA	set	3986
   376  0000                     _TRISD	set	3989
   377  0000                     _LATB	set	3978
   378  0000                     _TRISB	set	3987
   379  0000                     _ADCON1	set	4033
   380  0000                     _PIE1	set	3997
   381  0000                     _INTCON3	set	4080
   382  0000                     _INTCON2	set	4081
   383  0000                     _INTCON	set	4082
   384  0000                     _SPPCFG	set	3939
   385  0000                     _SPPCON	set	3941
   386  0000                     _T0CON	set	4053
   387  0000                     _PORTDbits	set	3971
   388  0000                     _TRISDbits	set	3989
   389  0000                     _LATCbits	set	3979
   390  0000                     _SSPBUF	set	4041
   391  0000                     _SSPCON1bits	set	4038
   392  0000                     _SSPSTATbits	set	4039
   393  0000                     _SSPCON1	set	4038
   394  0000                     _SSPSTAT	set	4039
   395  0000                     _TRISCbits	set	3988
   396  0000                     _TRISBbits	set	3987
   397  0000                     _LATBbits	set	3978
   398  0000                     _PORTEbits	set	3972
   399  0000                     _T0CONbits	set	4053
   400  0000                     _PCL	set	4089
   401  0000                     _PCLATH	set	4090
   402  0000                     _INTCONbits	set	4082
   403  0000                     _PORTBbits	set	3969
   404  0000                     _PIR1bits	set	3998
   405  0000                     _PIE1bits	set	3997
   406  0000                     _RCIF	set	31989
   407  0000                     _TXEN	set	32101
   408  0000                     _CREN	set	32092
   409  0000                     _SPEN	set	32095
   410  0000                     _SYNC	set	32100
   411  0000                     _BRGH	set	32098
   412  0000                     _INT0IE	set	32660
   413  0000                     _INT0IF	set	32657
   414  0000                     _T0IF	set	32658
   415  0000                     _TMR0IF	set	32658
   416  00610F                     STR_19:
   417  00610F  0A                 	db	10
   418  006110  76                 	db	118	;'v'
   419  006111  25                 	db	37
   420  006112  73                 	db	115	;'s'
   421  006113  3B                 	db	59	;';'
   422  006114  6C                 	db	108	;'l'
   423  006115  74                 	db	116	;'t'
   424  006116  25                 	db	37
   425  006117  73                 	db	115	;'s'
   426  006118  3B                 	db	59	;';'
   427  006119  6C                 	db	108	;'l'
   428  00611A  6F                 	db	111	;'o'
   429  00611B  25                 	db	37
   430  00611C  73                 	db	115	;'s'
   431  00611D  3B                 	db	59	;';'
   432  00611E  72                 	db	114	;'r'
   433  00611F  25                 	db	37
   434  006120  73                 	db	115	;'s'
   435  006121  3B                 	db	59	;';'
   436  006122  63                 	db	99	;'c'
   437  006123  25                 	db	37
   438  006124  73                 	db	115	;'s'
   439  006125  3B                 	db	59	;';'
   440  006126  6B                 	db	107	;'k'
   441  006127  25                 	db	37
   442  006128  73                 	db	115	;'s'
   443  006129  3B                 	db	59	;';'
   444  00612A  68                 	db	104	;'h'
   445  00612B  25                 	db	37
   446  00612C  73                 	db	115	;'s'
   447  00612D  3B                 	db	59	;';'
   448  00612E  64                 	db	100	;'d'
   449  00612F  25                 	db	37
   450  006130  73                 	db	115	;'s'
   451  006131  00                 	db	0
   452  006132                     STR_23:
   453  006132  73                 	db	115	;'s'
   454  006133  74                 	db	116	;'t'
   455  006134  72                 	db	114	;'r'
   456  006135  69                 	db	105	;'i'
   457  006136  6E                 	db	110	;'n'
   458  006137  67                 	db	103	;'g'
   459  006138  5F                 	db	95	;'_'
   460  006139  64                 	db	100	;'d'
   461  00613A  61                 	db	97	;'a'
   462  00613B  64                 	db	100	;'d'
   463  00613C  6F                 	db	111	;'o'
   464  00613D  2E                 	db	46
   465  00613E  6F                 	db	111	;'o'
   466  00613F  64                 	db	100	;'d'
   467  006140  6F                 	db	111	;'o'
   468  006141  6D                 	db	109	;'m'
   469  006142  65                 	db	101	;'e'
   470  006143  74                 	db	116	;'t'
   471  006144  72                 	db	114	;'r'
   472  006145  6F                 	db	111	;'o'
   473  006146  5F                 	db	95	;'_'
   474  006147  74                 	db	116	;'t'
   475  006148  6F                 	db	111	;'o'
   476  006149  74                 	db	116	;'t'
   477  00614A  61                 	db	97	;'a'
   478  00614B  6C                 	db	108	;'l'
   479  00614C  00                 	db	0
   480  00614D  6F                 	db	111	;'o'
   481  00614E  20                 	db	32
   482  00614F  53                 	db	83	;'S'
   483  006150  69                 	db	105	;'i'
   484  006151  73                 	db	115	;'s'
   485  006152  74                 	db	116	;'t'
   486  006153  65                 	db	101	;'e'
   487  006154  6D                 	db	109	;'m'
   488  006155  61                 	db	97	;'a'
   489  006156  20                 	db	32
   490  006157  64                 	db	100	;'d'
   491  006158  65                 	db	101	;'e'
   492  006159  20                 	db	32
   493  00615A  61                 	db	97	;'a'
   494  00615B  72                 	db	114	;'r'
   495  00615C  71                 	db	113	;'q'
   496  00615D  75                 	db	117	;'u'
   497  00615E  69                 	db	105	;'i'
   498  00615F  76                 	db	118	;'v'
   499  006160  6F                 	db	111	;'o'
   500  006161  00                 	db	0
   501  006162                     STR_22:
   502  006162  73                 	db	115	;'s'
   503  006163  74                 	db	116	;'t'
   504  006164  72                 	db	114	;'r'
   505  006165  69                 	db	105	;'i'
   506  006166  6E                 	db	110	;'n'
   507  006167  67                 	db	103	;'g'
   508  006168  5F                 	db	95	;'_'
   509  006169  64                 	db	100	;'d'
   510  00616A  61                 	db	97	;'a'
   511  00616B  64                 	db	100	;'d'
   512  00616C  6F                 	db	111	;'o'
   513  00616D  2E                 	db	46
   514  00616E  63                 	db	99	;'c'
   515  00616F  6F                 	db	111	;'o'
   516  006170  6D                 	db	109	;'m'
   517  006171  62                 	db	98	;'b'
   518  006172  00                 	db	0
   519  006173                     STR_9:
   520  006173  42                 	db	66	;'B'
   521  006174  31                 	db	49	;'1'
   522  006175  3A                 	db	58	;':'
   523  006176  52                 	db	82	;'R'
   524  006177  50                 	db	80	;'P'
   525  006178  4D                 	db	77	;'M'
   526  006179  20                 	db	32
   527  00617A  20                 	db	32
   528  00617B  42                 	db	66	;'B'
   529  00617C  32                 	db	50	;'2'
   530  00617D  3A                 	db	58	;':'
   531  00617E  46                 	db	70	;'F'
   532  00617F  45                 	db	69	;'E'
   533  006180  4E                 	db	78	;'N'
   534  006181  43                 	db	67	;'C'
   535  006182  45                 	db	69	;'E'
   536  006183  00                 	db	0
   537  006184                     STR_27:
   538  006184  49                 	db	73	;'I'
   539  006185  6E                 	db	110	;'n'
   540  006186  73                 	db	115	;'s'
   541  006187  69                 	db	105	;'i'
   542  006188  72                 	db	114	;'r'
   543  006189  61                 	db	97	;'a'
   544  00618A  20                 	db	32
   545  00618B  6F                 	db	111	;'o'
   546  00618C  20                 	db	32
   547  00618D  43                 	db	67	;'C'
   548  00618E  61                 	db	97	;'a'
   549  00618F  72                 	db	114	;'r'
   550  006190  74                 	db	116	;'t'
   551  006191  61                 	db	97	;'a'
   552  006192  6F                 	db	111	;'o'
   553  006193  00                 	db	0
   554  006194                     STR_24:
   555  006194  73                 	db	115	;'s'
   556  006195  74                 	db	116	;'t'
   557  006196  72                 	db	114	;'r'
   558  006197  69                 	db	105	;'i'
   559  006198  6E                 	db	110	;'n'
   560  006199  67                 	db	103	;'g'
   561  00619A  5F                 	db	95	;'_'
   562  00619B  64                 	db	100	;'d'
   563  00619C  61                 	db	97	;'a'
   564  00619D  64                 	db	100	;'d'
   565  00619E  6F                 	db	111	;'o'
   566  00619F  2E                 	db	46
   567  0061A0  64                 	db	100	;'d'
   568  0061A1  74                 	db	116	;'t'
   569  0061A2  63                 	db	99	;'c'
   570  0061A3  00                 	db	0
   571  0061A4                     STR_20:
   572  0061A4  73                 	db	115	;'s'
   573  0061A5  74                 	db	116	;'t'
   574  0061A6  72                 	db	114	;'r'
   575  0061A7  69                 	db	105	;'i'
   576  0061A8  6E                 	db	110	;'n'
   577  0061A9  67                 	db	103	;'g'
   578  0061AA  5F                 	db	95	;'_'
   579  0061AB  64                 	db	100	;'d'
   580  0061AC  61                 	db	97	;'a'
   581  0061AD  64                 	db	100	;'d'
   582  0061AE  6F                 	db	111	;'o'
   583  0061AF  2E                 	db	46
   584  0061B0  76                 	db	118	;'v'
   585  0061B1  65                 	db	101	;'e'
   586  0061B2  6C                 	db	108	;'l'
   587  0061B3  00                 	db	0
   588  0061B4                     STR_21:
   589  0061B4  73                 	db	115	;'s'
   590  0061B5  74                 	db	116	;'t'
   591  0061B6  72                 	db	114	;'r'
   592  0061B7  69                 	db	105	;'i'
   593  0061B8  6E                 	db	110	;'n'
   594  0061B9  67                 	db	103	;'g'
   595  0061BA  5F                 	db	95	;'_'
   596  0061BB  64                 	db	100	;'d'
   597  0061BC  61                 	db	97	;'a'
   598  0061BD  64                 	db	100	;'d'
   599  0061BE  6F                 	db	111	;'o'
   600  0061BF  2E                 	db	46
   601  0061C0  72                 	db	114	;'r'
   602  0061C1  70                 	db	112	;'p'
   603  0061C2  6D                 	db	109	;'m'
   604  0061C3  00                 	db	0
   605  0061C4                     STR_7:
   606  0061C4  42                 	db	66	;'B'
   607  0061C5  31                 	db	49	;'1'
   608  0061C6  3A                 	db	58	;':'
   609  0061C7  52                 	db	82	;'R'
   610  0061C8  50                 	db	80	;'P'
   611  0061C9  4D                 	db	77	;'M'
   612  0061CA  20                 	db	32
   613  0061CB  42                 	db	66	;'B'
   614  0061CC  32                 	db	50	;'2'
   615  0061CD  3A                 	db	58	;':'
   616  0061CE  46                 	db	70	;'F'
   617  0061CF  45                 	db	69	;'E'
   618  0061D0  4E                 	db	78	;'N'
   619  0061D1  43                 	db	67	;'C'
   620  0061D2  45                 	db	69	;'E'
   621  0061D3  00                 	db	0
   622  0061D4  45                 	db	69	;'E'
   623  0061D5  72                 	db	114	;'r'
   624  0061D6  72                 	db	114	;'r'
   625  0061D7  6F                 	db	111	;'o'
   626  0061D8  20                 	db	32
   627  0061D9  61                 	db	97	;'a'
   628  0061DA  6F                 	db	111	;'o'
   629  0061DB  20                 	db	32
   630  0061DC  6D                 	db	109	;'m'
   631  0061DD  6F                 	db	111	;'o'
   632  0061DE  6E                 	db	110	;'n'
   633  0061DF  74                 	db	116	;'t'
   634  0061E0  61                 	db	97	;'a'
   635  0061E1  72                 	db	114	;'r'
   636  0061E2  00                 	db	0
   637  0061E3  45                 	db	69	;'E'
   638  0061E4  72                 	db	114	;'r'
   639  0061E5  72                 	db	114	;'r'
   640  0061E6  6F                 	db	111	;'o'
   641  0061E7  20                 	db	32
   642  0061E8  61                 	db	97	;'a'
   643  0061E9  6F                 	db	111	;'o'
   644  0061EA  20                 	db	32
   645  0061EB  63                 	db	99	;'c'
   646  0061EC  72                 	db	114	;'r'
   647  0061ED  69                 	db	105	;'i'
   648  0061EE  61                 	db	97	;'a'
   649  0061EF  72                 	db	114	;'r'
   650  0061F0  00                 	db	0
   651  0061F1                     STR_1:
   652  0061F1  52                 	db	82	;'R'
   653  0061F2  45                 	db	69	;'E'
   654  0061F3  47                 	db	71	;'G'
   655  0061F4  49                 	db	73	;'I'
   656  0061F5  41                 	db	65	;'A'
   657  0061F6  4F                 	db	79	;'O'
   658  0061F7  20                 	db	32
   659  0061F8  4E                 	db	78	;'N'
   660  0061F9  45                 	db	69	;'E'
   661  0061FA  47                 	db	71	;'G'
   662  0061FB  41                 	db	65	;'A'
   663  0061FC  44                 	db	68	;'D'
   664  0061FD  41                 	db	65	;'A'
   665  0061FE  00                 	db	0
   666  0061FF  65                 	db	101	;'e'
   667  006200  78                 	db	120	;'x'
   668  006201  74                 	db	116	;'t'
   669  006202  66                 	db	102	;'f'
   670  006203  65                 	db	101	;'e'
   671  006204  6E                 	db	110	;'n'
   672  006205  63                 	db	99	;'c'
   673  006206  65                 	db	101	;'e'
   674  006207  2E                 	db	46
   675  006208  74                 	db	116	;'t'
   676  006209  78                 	db	120	;'x'
   677  00620A  74                 	db	116	;'t'
   678  00620B  00                 	db	0
   679  00620C                     STR_29:
   680  00620C  4D                 	db	77	;'M'
   681  00620D  4D                 	db	77	;'M'
   682  00620E  43                 	db	67	;'C'
   683  00620F  20                 	db	32
   684  006210  56                 	db	86	;'V'
   685  006211  65                 	db	101	;'e'
   686  006212  72                 	db	114	;'r'
   687  006213  2E                 	db	46
   688  006214  20                 	db	32
   689  006215  33                 	db	51	;'3'
   690  006216  00                 	db	0
   691  006217                     STR_26:
   692  006217  53                 	db	83	;'S'
   693  006218  65                 	db	101	;'e'
   694  006219  6D                 	db	109	;'m'
   695  00621A  20                 	db	32
   696  00621B  43                 	db	67	;'C'
   697  00621C  61                 	db	97	;'a'
   698  00621D  72                 	db	114	;'r'
   699  00621E  74                 	db	116	;'t'
   700  00621F  61                 	db	97	;'a'
   701  006220  6F                 	db	111	;'o'
   702  006221  00                 	db	0
   703  006222                     STR_28:
   704  006222  53                 	db	83	;'S'
   705  006223  44                 	db	68	;'D'
   706  006224  20                 	db	32
   707  006225  56                 	db	86	;'V'
   708  006226  45                 	db	69	;'E'
   709  006227  52                 	db	82	;'R'
   710  006228  2E                 	db	46
   711  006229  20                 	db	32
   712  00622A  31                 	db	49	;'1'
   713  00622B  00                 	db	0
   714  00622C  56                 	db	86	;'V'
   715  00622D  65                 	db	101	;'e'
   716  00622E  72                 	db	114	;'r'
   717  00622F  69                 	db	105	;'i'
   718  006230  66                 	db	102	;'f'
   719  006231  69                 	db	105	;'i'
   720  006232  71                 	db	113	;'q'
   721  006233  75                 	db	117	;'u'
   722  006234  65                 	db	101	;'e'
   723  006235  00                 	db	0
   724  006236  6F                 	db	111	;'o'
   725  006237  20                 	db	32
   726  006238  61                 	db	97	;'a'
   727  006239  72                 	db	114	;'r'
   728  00623A  71                 	db	113	;'q'
   729  00623B  75                 	db	117	;'u'
   730  00623C  69                 	db	105	;'i'
   731  00623D  76                 	db	118	;'v'
   732  00623E  6F                 	db	111	;'o'
   733  00623F  00                 	db	0
   734  006240  6F                 	db	111	;'o'
   735  006241  20                 	db	32
   736  006242  63                 	db	99	;'c'
   737  006243  61                 	db	97	;'a'
   738  006244  72                 	db	114	;'r'
   739  006245  74                 	db	116	;'t'
   740  006246  61                 	db	97	;'a'
   741  006247  6F                 	db	111	;'o'
   742  006248  00                 	db	0
   743  006249                     STR_6:
   744  006249  44                 	db	68	;'D'
   745  00624A  5F                 	db	95	;'_'
   746  00624B  46                 	db	70	;'F'
   747  00624C  65                 	db	101	;'e'
   748  00624D  6E                 	db	110	;'n'
   749  00624E  63                 	db	99	;'c'
   750  00624F  65                 	db	101	;'e'
   751  006250  3A                 	db	58	;':'
   752  006251  00                 	db	0
   753  006252                     STR_8:
   754  006252  42                 	db	66	;'B'
   755  006253  32                 	db	50	;'2'
   756  006254  3A                 	db	58	;':'
   757  006255  48                 	db	72	;'H'
   758  006256  4F                 	db	79	;'O'
   759  006257  4D                 	db	77	;'M'
   760  006258  45                 	db	69	;'E'
   761  006259  00                 	db	0
   762  00625A                     STR_12:
   763  00625A  47                 	db	71	;'G'
   764  00625B  50                 	db	80	;'P'
   765  00625C  47                 	db	71	;'G'
   766  00625D  47                 	db	71	;'G'
   767  00625E  41                 	db	65	;'A'
   768  00625F  00                 	db	0
   769  006260                     STR_11:
   770  006260  47                 	db	71	;'G'
   771  006261  50                 	db	80	;'P'
   772  006262  52                 	db	82	;'R'
   773  006263  4D                 	db	77	;'M'
   774  006264  43                 	db	67	;'C'
   775  006265  00                 	db	0
   776  006266                     STR_3:
   777  006266  56                 	db	86	;'V'
   778  006267  45                 	db	69	;'E'
   779  006268  4C                 	db	76	;'L'
   780  006269  3A                 	db	58	;':'
   781  00626A  00                 	db	0
   782  00626B                     STR_2:
   783  00626B  52                 	db	82	;'R'
   784  00626C  50                 	db	80	;'P'
   785  00626D  4D                 	db	77	;'M'
   786  00626E  3A                 	db	58	;':'
   787  00626F  00                 	db	0
   788  006270                     STR_30:
   789  006270  46                 	db	70	;'F'
   790  006271  41                 	db	65	;'A'
   791  006272  54                 	db	84	;'T'
   792  006273  00                 	db	0
   793  006274                     STR_5:
   794  006274  6C                 	db	108	;'l'
   795  006275  6F                 	db	111	;'o'
   796  006276  3A                 	db	58	;':'
   797  006277  00                 	db	0
   798  006278                     STR_4:
   799  006278  6C                 	db	108	;'l'
   800  006279  74                 	db	116	;'t'
   801  00627A  3A                 	db	58	;':'
   802  00627B  00                 	db	0
   803  00627C  0D                 	db	13
   804  00627D  0A                 	db	10
   805  00627E  00                 	db	0
   806  00627F  00                 	db	0	; dummy byte at the end
   807  0000                     
   808                           ; #config settings
   809                           
   810                           	psect	cinit
   811  004134                     __pcinit:
   812                           	callstack 0
   813  004134                     start_initialization:
   814                           	callstack 0
   815  004134                     __initialization:
   816                           	callstack 0
   817                           
   818                           ; Initialize objects allocated to BANK2 (115 bytes)
   819                           ; load TBLPTR registers with __pidataBANK2
   820  004134  0E52               	movlw	low __pidataBANK2
   821  004136  6EF6               	movwf	tblptrl,c
   822  004138  0E47               	movlw	high __pidataBANK2
   823  00413A  6EF7               	movwf	tblptrh,c
   824  00413C  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   825  00413E  6EF8               	movwf	tblptru,c
   826  004140  EE02  F074         	lfsr	0,__pdataBANK2
   827  004144  EE10 F073          	lfsr	1,115
   828  004148                     copy_data0:
   829  004148  0009               	tblrd		*+
   830  00414A  CFF5 FFEE          	movff	tablat,postinc0
   831  00414E  50E5               	movf	postdec1,w,c
   832  004150  50E1               	movf	fsr1l,w,c
   833  004152  E1FA               	bnz	copy_data0
   834                           
   835                           ; Initialize objects allocated to BANK1 (14 bytes)
   836                           ; load TBLPTR registers with __pidataBANK1
   837  004154  0EA0               	movlw	low __pidataBANK1
   838  004156  6EF6               	movwf	tblptrl,c
   839  004158  0E51               	movlw	high __pidataBANK1
   840  00415A  6EF7               	movwf	tblptrh,c
   841  00415C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   842  00415E  6EF8               	movwf	tblptru,c
   843  004160  EE01  F0EF         	lfsr	0,__pdataBANK1
   844  004164  EE10 F00E          	lfsr	1,14
   845  004168                     copy_data1:
   846  004168  0009               	tblrd		*+
   847  00416A  CFF5 FFEE          	movff	tablat,postinc0
   848  00416E  50E5               	movf	postdec1,w,c
   849  004170  50E1               	movf	fsr1l,w,c
   850  004172  E1FA               	bnz	copy_data1
   851                           
   852                           ; Initialize objects allocated to COMRAM (1 bytes)
   853                           ; load TBLPTR registers with __pidataCOMRAM
   854  004174  0E30               	movlw	low __pidataCOMRAM
   855  004176  6EF6               	movwf	tblptrl,c
   856  004178  0E52               	movlw	high __pidataCOMRAM
   857  00417A  6EF7               	movwf	tblptrh,c
   858  00417C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   859  00417E  6EF8               	movwf	tblptru,c
   860  004180  0009               	tblrd		*+	;fetch initializer
   861  004182  CFF5 F044          	movff	tablat,__pdataCOMRAM
   862                           
   863                           ; Clear objects allocated to BIGRAM (544 bytes)
   864  004186  EE03  F022         	lfsr	0,__pbssBIGRAM
   865  00418A  EE12 F020          	lfsr	1,544
   866  00418E                     clear_0:
   867  00418E  6AEE               	clrf	postinc0,c
   868  004190  50E5               	movf	postdec1,w,c
   869  004192  50E1               	movf	fsr1l,w,c
   870  004194  E1FC               	bnz	clear_0
   871  004196  50E2               	movf	fsr1h,w,c
   872  004198  E1FA               	bnz	clear_0
   873                           
   874                           ; Clear objects allocated to BANK2 (116 bytes)
   875  00419A  EE02  F000         	lfsr	0,__pbssBANK2
   876  00419E  0E74               	movlw	116
   877  0041A0                     clear_1:
   878  0041A0  6AEE               	clrf	postinc0,c
   879  0041A2  06E8               	decf	wreg,f,c
   880  0041A4  E1FD               	bnz	clear_1
   881                           
   882                           ; Clear objects allocated to BANK1 (239 bytes)
   883  0041A6  EE01  F000         	lfsr	0,__pbssBANK1
   884  0041AA  0EEF               	movlw	239
   885  0041AC                     clear_2:
   886  0041AC  6AEE               	clrf	postinc0,c
   887  0041AE  06E8               	decf	wreg,f,c
   888  0041B0  E1FD               	bnz	clear_2
   889                           
   890                           ; Clear objects allocated to BANK0 (2 bytes)
   891  0041B2  0100               	movlb	0
   892  0041B4  6BFA               	clrf	(__pbssBANK0+1)& (0+255),b
   893  0041B6  6BF9               	clrf	__pbssBANK0& (0+255),b
   894                           
   895                           ; Clear objects allocated to COMRAM (24 bytes)
   896  0041B8  EE00  F02C         	lfsr	0,__pbssCOMRAM
   897  0041BC  0E18               	movlw	24
   898  0041BE                     clear_3:
   899  0041BE  6AEE               	clrf	postinc0,c
   900  0041C0  06E8               	decf	wreg,f,c
   901  0041C2  E1FD               	bnz	clear_3
   902  0041C4                     end_of_initialization:
   903                           	callstack 0
   904  0041C4                     __end_of__initialization:
   905                           	callstack 0
   906  0041C4  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   907  0041C6  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   908  0041C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   909  0041CA  6EF8               	movwf	tblptru,c
   910  0041CC  0100               	movlb	0
   911  0041CE  EFAF  F027         	goto	_main	;jump to C main() function
   912                           
   913                           	psect	bssCOMRAM
   914  00002C                     __pbssCOMRAM:
   915                           	callstack 0
   916  00002C                     _flag:
   917                           	callstack 0
   918  00002C                     	ds	3
   919  00002F                     _point_buff_gps_long:
   920                           	callstack 0
   921  00002F                     	ds	2
   922  000031                     _point_buff_gps_lat:
   923                           	callstack 0
   924  000031                     	ds	2
   925  000033                     _time_atualizacao:
   926                           	callstack 0
   927  000033                     	ds	2
   928  000035                     _time_sd:
   929                           	callstack 0
   930  000035                     	ds	2
   931  000037                     	ds	1
   932  000038                     _estado:
   933                           	callstack 0
   934  000038                     	ds	1
   935  000039                     _dado:
   936                           	callstack 0
   937  000039                     	ds	1
   938  00003A                     _data_hoje:
   939                           	callstack 0
   940  00003A                     	ds	1
   941  00003B                     _rawFix:
   942                           	callstack 0
   943  00003B                     	ds	1
   944  00003C                     _Term:
   945                           	callstack 0
   946  00003C                     	ds	1
   947  00003D                     _SentenceType:
   948                           	callstack 0
   949  00003D                     	ds	1
   950  00003E                     _char_number:
   951                           	callstack 0
   952  00003E                     	ds	1
   953  00003F                     troca_de_tela@last_state:
   954                           	callstack 0
   955  00003F                     	ds	1
   956  000040                     troca_de_tela@state:
   957                           	callstack 0
   958  000040                     	ds	1
   959  000041                     _tarefa_em_execucao:
   960                           	callstack 0
   961  000041                     	ds	1
   962  000042                     _sinaliza_int_timer:
   963                           	callstack 0
   964  000042                     	ds	1
   965  000043                     _data_uart_recebe:
   966                           	callstack 0
   967  000043                     	ds	1
   968                           
   969                           	psect	dataCOMRAM
   970  000044                     __pdataCOMRAM:
   971                           	callstack 0
   972  000044                     	ds	1
   973                           
   974                           	psect	bssBANK0
   975  0000F9                     __pbssBANK0:
   976                           	callstack 0
   977  0000F9                     _FatFs:
   978                           	callstack 0
   979  0000F9                     	ds	2
   980                           
   981                           	psect	bssBANK1
   982  000100                     __pbssBANK1:
   983                           	callstack 0
   984  000100                     _tempo_tarefa:
   985                           	callstack 0
   986  000100                     	ds	8
   987  000108                     _tempo_backup:
   988                           	callstack 0
   989  000108                     	ds	8
   990  000110                     _p_tarefas:
   991                           	callstack 0
   992  000110                     	ds	8
   993  000118                     _fsid:
   994                           	callstack 0
   995  000118                     	ds	2
   996  00011A                     _data_buff:
   997                           	callstack 0
   998  00011A                     	ds	2
   999  00011C                     _filename:
  1000                           	callstack 0
  1001  00011C                     	ds	2
  1002  00011E                     _GPGGA_ok:
  1003                           	callstack 0
  1004  00011E                     	ds	2
  1005  000120                     _GPRMC_ok:
  1006                           	callstack 0
  1007  000120                     	ds	2
  1008  000122                     _timeout_tarefa:
  1009                           	callstack 0
  1010  000122                     	ds	2
  1011  000124                     _poligono_ext:
  1012                           	callstack 0
  1013  000124                     	ds	128
  1014  0001A4                     _fil:
  1015                           	callstack 0
  1016  0001A4                     	ds	28
  1017  0001C0                     _buffer:
  1018                           	callstack 0
  1019  0001C0                     	ds	12
  1020  0001CC                     _rawAltitude:
  1021                           	callstack 0
  1022  0001CC                     	ds	7
  1023  0001D3                     _rawDate:
  1024                           	callstack 0
  1025  0001D3                     	ds	7
  1026  0001DA                     _rawCourse:
  1027                           	callstack 0
  1028  0001DA                     	ds	6
  1029  0001E0                     _rawSpeed:
  1030                           	callstack 0
  1031  0001E0                     	ds	6
  1032  0001E6                     _sentence:
  1033                           	callstack 0
  1034  0001E6                     	ds	6
  1035  0001EC                     _rawSatellites:
  1036                           	callstack 0
  1037  0001EC                     	ds	3
  1038                           
  1039                           	psect	dataBANK1
  1040  0001EF                     __pdataBANK1:
  1041                           	callstack 0
  1042  0001EF                     	ds	7
  1043  0001F6                     escreve_inteiro_lcd@F3223:
  1044                           	callstack 0
  1045  0001F6                     	ds	7
  1046                           
  1047                           	psect	bssBANK2
  1048  000200                     __pbssBANK2:
  1049                           	callstack 0
  1050  000200                     _string_dado:
  1051                           	callstack 0
  1052  000200                     	ds	59
  1053  00023B                     _dado_arquivo:
  1054                           	callstack 0
  1055  00023B                     	ds	20
  1056  00024F                     _rawLongitude:
  1057                           	callstack 0
  1058  00024F                     	ds	13
  1059  00025C                     _rawLatitude:
  1060                           	callstack 0
  1061  00025C                     	ds	13
  1062  000269                     _rawTime:
  1063                           	callstack 0
  1064  000269                     	ds	11
  1065                           
  1066                           	psect	dataBANK2
  1067  000274                     __pdataBANK2:
  1068                           	callstack 0
  1069  000274                     verifica_fence_externo@F3643:
  1070                           	callstack 0
  1071  000274                     	ds	48
  1072  0002A4                     verifica_fence_externo@F3640:
  1073                           	callstack 0
  1074  0002A4                     	ds	44
  1075  0002D0                     verifica_fence_externo@F3656:
  1076                           	callstack 0
  1077  0002D0                     	ds	12
  1078  0002DC                     verifica_fence_externo@F3654:
  1079                           	callstack 0
  1080  0002DC                     	ds	11
  1081                           
  1082                           	psect	bssBIGRAM
  1083  000322                     __pbssBIGRAM:
  1084                           	callstack 0
  1085  000322                     _fs:
  1086                           	callstack 0
  1087  000322                     	ds	544
  1088                           
  1089                           	psect	cstackBANK3
  1090  000300                     __pcstackBANK3:
  1091                           	callstack 0
  1092  000300                     fprintf@s:
  1093                           	callstack 0
  1094                           
  1095                           ; 16 bytes @ 0x0
  1096  000300                     	ds	16
  1097  000310                     fprintf@res:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x10
  1101  000310                     	ds	2
  1102  000312                     _fprintf$2589:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x12
  1106  000312                     	ds	2
  1107  000314                     fprintf@w:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x14
  1111  000314                     	ds	2
  1112  000316                     fprintf@f:
  1113                           	callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x16
  1116  000316                     	ds	1
  1117  000317                     fprintf@r:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x17
  1121  000317                     	ds	1
  1122  000318                     fprintf@val:
  1123                           	callstack 0
  1124                           
  1125                           ; 4 bytes @ 0x18
  1126  000318                     	ds	4
  1127  00031C                     fprintf@arp:
  1128                           	callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x1C
  1131  00031C                     	ds	1
  1132  00031D                     fprintf@cc:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x1D
  1136  00031D                     	ds	2
  1137  00031F                     fprintf@i:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x1F
  1141  00031F                     	ds	2
  1142  000321                     fprintf@c:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x21
  1146  000321                     	ds	1
  1147                           
  1148                           	psect	cstackBANK0
  1149  000060                     __pcstackBANK0:
  1150                           	callstack 0
  1151  000060                     ??_sdc_disk_initialize:
  1152  000060                     ??_clust2sect:
  1153  000060                     ??_get_fattime:
  1154  000060                     itoa@buf:
  1155                           	callstack 0
  1156  000060                     sdc_disk_read@p_buff:
  1157                           	callstack 0
  1158  000060                     sdc_disk_write@p_buff:
  1159                           	callstack 0
  1160  000060                     _make_dirfile$2102:
  1161                           	callstack 0
  1162  000060                     configura_baudrate_uart@baudrate:
  1163                           	callstack 0
  1164  000060                     mensagem_inicial@msg_linha_um:
  1165                           	callstack 0
  1166                           
  1167                           ; 17 bytes @ 0x0
  1168  000060                     	ds	1
  1169  000061                     sdc_disk_initialize@stat:
  1170                           	callstack 0
  1171  000061                     itoa@val:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x1
  1175  000061                     	ds	1
  1176  000062                     make_dirfile@b:
  1177                           	callstack 0
  1178  000062                     sdc_disk_initialize@count1:
  1179                           	callstack 0
  1180  000062                     sdc_disk_read@sector:
  1181                           	callstack 0
  1182  000062                     sdc_disk_write@sector:
  1183                           	callstack 0
  1184                           
  1185                           ; 4 bytes @ 0x2
  1186  000062                     	ds	1
  1187  000063                     make_dirfile@t:
  1188                           	callstack 0
  1189  000063                     itoa@base:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x3
  1193  000063                     	ds	1
  1194  000064                     ??_configura_baudrate_uart:
  1195  000064                     make_dirfile@a:
  1196                           	callstack 0
  1197  000064                     sdc_disk_initialize@crc_number:
  1198                           	callstack 0
  1199                           
  1200                           ; 2 bytes @ 0x4
  1201  000064                     	ds	1
  1202  000065                     make_dirfile@n:
  1203                           	callstack 0
  1204  000065                     clust2sect@fs:
  1205                           	callstack 0
  1206  000065                     escreve_inteiro_lcd@texto:
  1207                           	callstack 0
  1208                           
  1209                           ; 7 bytes @ 0x5
  1210  000065                     	ds	1
  1211  000066                     sdc_disk_initialize@buff_i:
  1212                           	callstack 0
  1213  000066                     sdc_disk_read@count:
  1214                           	callstack 0
  1215  000066                     sdc_disk_write@count:
  1216                           	callstack 0
  1217  000066                     make_dirfile@c:
  1218                           	callstack 0
  1219                           
  1220                           ; 1 bytes @ 0x6
  1221  000066                     	ds	1
  1222  000067                     sdc_disk_initialize@ocr:
  1223                           	callstack 0
  1224  000067                     sdc_disk_write@count1:
  1225                           	callstack 0
  1226  000067                     sdc_disk_read@start_add:
  1227                           	callstack 0
  1228                           
  1229                           ; 4 bytes @ 0x7
  1230  000067                     	ds	1
  1231  000068                     sdc_disk_initialize@count2:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x8
  1235  000068                     	ds	1
  1236  000069                     sdc_disk_write@res:
  1237                           	callstack 0
  1238                           
  1239                           ; 1 bytes @ 0x9
  1240  000069                     	ds	1
  1241  00006A                     sdc_disk_initialize@buff:
  1242                           	callstack 0
  1243  00006A                     sdc_disk_write@j:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0xA
  1247  00006A                     	ds	1
  1248  00006B                     disk_initialize@pdrv:
  1249                           	callstack 0
  1250  00006B                     sdc_disk_read@length:
  1251                           	callstack 0
  1252                           
  1253                           ; 2 bytes @ 0xB
  1254  00006B                     	ds	1
  1255  00006C                     ??_verifica_fence_externo:
  1256  00006C                     disk_initialize@stat:
  1257                           	callstack 0
  1258  00006C                     sdc_disk_write@buff:
  1259                           	callstack 0
  1260                           
  1261                           ; 1 bytes @ 0xC
  1262  00006C                     	ds	1
  1263  00006D                     sdc_disk_read@buff:
  1264                           	callstack 0
  1265  00006D                     disk_write@buff:
  1266                           	callstack 0
  1267                           
  1268                           ; 2 bytes @ 0xD
  1269  00006D                     	ds	1
  1270  00006E                     disk_read@buff:
  1271                           	callstack 0
  1272                           
  1273                           ; 2 bytes @ 0xE
  1274  00006E                     	ds	1
  1275  00006F                     disk_write@sector:
  1276                           	callstack 0
  1277                           
  1278                           ; 4 bytes @ 0xF
  1279  00006F                     	ds	1
  1280  000070                     disk_read@sector:
  1281                           	callstack 0
  1282                           
  1283                           ; 4 bytes @ 0x10
  1284  000070                     	ds	1
  1285  000071                     mensagem_inicial@msg_dois:
  1286                           	callstack 0
  1287                           
  1288                           ; 17 bytes @ 0x11
  1289  000071                     	ds	1
  1290  000072                     verifica_fence_externo@fence_diff_long:
  1291                           	callstack 0
  1292                           
  1293                           ; 48 bytes @ 0x12
  1294  000072                     	ds	1
  1295  000073                     disk_write@count:
  1296                           	callstack 0
  1297                           
  1298                           ; 1 bytes @ 0x13
  1299  000073                     	ds	1
  1300  000074                     disk_read@count:
  1301                           	callstack 0
  1302  000074                     disk_write@pdrv:
  1303                           	callstack 0
  1304                           
  1305                           ; 1 bytes @ 0x14
  1306  000074                     	ds	1
  1307  000075                     disk_read@pdrv:
  1308                           	callstack 0
  1309  000075                     disk_write@result:
  1310                           	callstack 0
  1311                           
  1312                           ; 2 bytes @ 0x15
  1313  000075                     	ds	1
  1314  000076                     disk_read@result:
  1315                           	callstack 0
  1316                           
  1317                           ; 2 bytes @ 0x16
  1318  000076                     	ds	1
  1319  000077                     disk_write@res:
  1320                           	callstack 0
  1321                           
  1322                           ; 1 bytes @ 0x17
  1323  000077                     	ds	1
  1324  000078                     disk_read@res:
  1325                           	callstack 0
  1326                           
  1327                           ; 1 bytes @ 0x18
  1328  000078                     	ds	1
  1329  000079                     move_window@sector:
  1330                           	callstack 0
  1331  000079                     check_fs@sect:
  1332                           	callstack 0
  1333                           
  1334                           ; 4 bytes @ 0x19
  1335  000079                     	ds	4
  1336  00007D                     ??_move_window:
  1337  00007D                     
  1338                           ; 1 bytes @ 0x1D
  1339  00007D                     	ds	2
  1340  00007F                     check_fs@fs:
  1341                           	callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x1F
  1344  00007F                     	ds	2
  1345  000081                     auto_mount@path:
  1346                           	callstack 0
  1347                           
  1348                           ; 1 bytes @ 0x21
  1349  000081                     	ds	1
  1350  000082                     auto_mount@chk_wp:
  1351                           	callstack 0
  1352                           
  1353                           ; 1 bytes @ 0x22
  1354  000082                     	ds	1
  1355  000083                     ??_auto_mount:
  1356                           
  1357                           ; 1 bytes @ 0x23
  1358  000083                     	ds	4
  1359  000087                     move_window@n:
  1360                           	callstack 0
  1361                           
  1362                           ; 1 bytes @ 0x27
  1363  000087                     	ds	1
  1364  000088                     move_window@wsect:
  1365                           	callstack 0
  1366                           
  1367                           ; 4 bytes @ 0x28
  1368  000088                     	ds	4
  1369  00008C                     move_window@fs:
  1370                           	callstack 0
  1371                           
  1372                           ; 2 bytes @ 0x2C
  1373  00008C                     	ds	2
  1374  00008E                     ?_get_cluster:
  1375                           	callstack 0
  1376  00008E                     sync@fs:
  1377                           	callstack 0
  1378  00008E                     get_cluster@clust:
  1379                           	callstack 0
  1380  00008E                     put_cluster@clust:
  1381                           	callstack 0
  1382                           
  1383                           ; 2 bytes @ 0x2E
  1384  00008E                     	ds	2
  1385  000090                     ??_get_cluster:
  1386  000090                     put_cluster@val:
  1387                           	callstack 0
  1388  000090                     f_sync@fp:
  1389                           	callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x30
  1392  000090                     	ds	2
  1393  000092                     ??_put_cluster:
  1394  000092                     f_sync@tim:
  1395                           	callstack 0
  1396                           
  1397                           ; 4 bytes @ 0x32
  1398  000092                     	ds	4
  1399  000096                     f_sync@res:
  1400                           	callstack 0
  1401                           
  1402                           ; 1 bytes @ 0x36
  1403  000096                     	ds	1
  1404  000097                     f_sync@dir:
  1405                           	callstack 0
  1406                           
  1407                           ; 2 bytes @ 0x37
  1408  000097                     	ds	1
  1409  000098                     _put_cluster$1992:
  1410                           	callstack 0
  1411                           
  1412                           ; 2 bytes @ 0x38
  1413  000098                     	ds	1
  1414  000099                     get_cluster@wc:
  1415                           	callstack 0
  1416  000099                     f_close@fp:
  1417                           	callstack 0
  1418  000099                     auto_mount@maxclust:
  1419                           	callstack 0
  1420                           
  1421                           ; 4 bytes @ 0x39
  1422  000099                     	ds	1
  1423  00009A                     _put_cluster$1993:
  1424                           	callstack 0
  1425                           
  1426                           ; 2 bytes @ 0x3A
  1427  00009A                     	ds	1
  1428  00009B                     f_close@res:
  1429                           	callstack 0
  1430  00009B                     get_cluster@fatsect:
  1431                           	callstack 0
  1432                           
  1433                           ; 4 bytes @ 0x3B
  1434  00009B                     	ds	1
  1435  00009C                     put_cluster@fatsect:
  1436                           	callstack 0
  1437                           
  1438                           ; 4 bytes @ 0x3C
  1439  00009C                     	ds	1
  1440  00009D                     auto_mount@bootsect:
  1441                           	callstack 0
  1442                           
  1443                           ; 4 bytes @ 0x3D
  1444  00009D                     	ds	2
  1445  00009F                     get_cluster@bc:
  1446                           	callstack 0
  1447                           
  1448                           ; 2 bytes @ 0x3F
  1449  00009F                     	ds	1
  1450  0000A0                     put_cluster@bc:
  1451                           	callstack 0
  1452                           
  1453                           ; 2 bytes @ 0x40
  1454  0000A0                     	ds	1
  1455  0000A1                     get_cluster@fs:
  1456                           	callstack 0
  1457  0000A1                     auto_mount@totalsect:
  1458                           	callstack 0
  1459                           
  1460                           ; 4 bytes @ 0x41
  1461  0000A1                     	ds	1
  1462  0000A2                     put_cluster@p:
  1463                           	callstack 0
  1464  0000A2                     verifica_fence_externo@fence_diff_lat:
  1465                           	callstack 0
  1466                           
  1467                           ; 44 bytes @ 0x42
  1468  0000A2                     	ds	1
  1469  0000A3                     next_dir_entry@dj:
  1470                           	callstack 0
  1471                           
  1472                           ; 1 bytes @ 0x43
  1473  0000A3                     	ds	1
  1474  0000A4                     ??_next_dir_entry:
  1475  0000A4                     put_cluster@fs:
  1476                           	callstack 0
  1477                           
  1478                           ; 2 bytes @ 0x44
  1479  0000A4                     	ds	1
  1480  0000A5                     auto_mount@p:
  1481                           	callstack 0
  1482                           
  1483                           ; 2 bytes @ 0x45
  1484  0000A5                     	ds	1
  1485  0000A6                     ?_create_chain:
  1486                           	callstack 0
  1487  0000A6                     remove_chain@clust:
  1488                           	callstack 0
  1489  0000A6                     create_chain@clust:
  1490                           	callstack 0
  1491                           
  1492                           ; 2 bytes @ 0x46
  1493  0000A6                     	ds	1
  1494  0000A7                     auto_mount@fmt:
  1495                           	callstack 0
  1496                           
  1497                           ; 1 bytes @ 0x47
  1498  0000A7                     	ds	1
  1499  0000A8                     auto_mount@stat:
  1500                           	callstack 0
  1501                           
  1502                           ; 1 bytes @ 0x48
  1503  0000A8                     	ds	1
  1504  0000A9                     auto_mount@fatsize:
  1505                           	callstack 0
  1506                           
  1507                           ; 4 bytes @ 0x49
  1508  0000A9                     	ds	1
  1509  0000AA                     remove_chain@nxt:
  1510                           	callstack 0
  1511  0000AA                     create_chain@mcl:
  1512                           	callstack 0
  1513                           
  1514                           ; 2 bytes @ 0x4A
  1515  0000AA                     	ds	1
  1516  0000AB                     next_dir_entry@clust:
  1517                           	callstack 0
  1518                           
  1519                           ; 2 bytes @ 0x4B
  1520  0000AB                     	ds	1
  1521  0000AC                     remove_chain@fs:
  1522                           	callstack 0
  1523  0000AC                     create_chain@fs:
  1524                           	callstack 0
  1525                           
  1526                           ; 2 bytes @ 0x4C
  1527  0000AC                     	ds	1
  1528  0000AD                     next_dir_entry@idx:
  1529                           	callstack 0
  1530  0000AD                     auto_mount@fs:
  1531                           	callstack 0
  1532                           
  1533                           ; 2 bytes @ 0x4D
  1534  0000AD                     	ds	1
  1535  0000AE                     create_chain@cstat:
  1536                           	callstack 0
  1537                           
  1538                           ; 2 bytes @ 0x4E
  1539  0000AE                     	ds	1
  1540  0000AF                     trace_path@dj:
  1541                           	callstack 0
  1542                           
  1543                           ; 1 bytes @ 0x4F
  1544  0000AF                     	ds	1
  1545  0000B0                     trace_path@fn:
  1546                           	callstack 0
  1547  0000B0                     create_chain@scl:
  1548                           	callstack 0
  1549                           
  1550                           ; 2 bytes @ 0x50
  1551  0000B0                     	ds	1
  1552  0000B1                     trace_path@path:
  1553                           	callstack 0
  1554                           
  1555                           ; 2 bytes @ 0x51
  1556  0000B1                     	ds	1
  1557  0000B2                     create_chain@ncl:
  1558                           	callstack 0
  1559                           
  1560                           ; 2 bytes @ 0x52
  1561  0000B2                     	ds	1
  1562  0000B3                     trace_path@dir:
  1563                           	callstack 0
  1564                           
  1565                           ; 1 bytes @ 0x53
  1566  0000B3                     	ds	1
  1567  0000B4                     ??_trace_path:
  1568  0000B4                     reserve_direntry@dj:
  1569                           	callstack 0
  1570  0000B4                     f_write@fp:
  1571                           	callstack 0
  1572  0000B4                     f_lseek@fp:
  1573                           	callstack 0
  1574                           
  1575                           ; 2 bytes @ 0x54
  1576  0000B4                     	ds	1
  1577  0000B5                     reserve_direntry@dir:
  1578                           	callstack 0
  1579                           
  1580                           ; 1 bytes @ 0x55
  1581  0000B5                     	ds	1
  1582  0000B6                     ??_reserve_direntry:
  1583  0000B6                     f_write@buff:
  1584                           	callstack 0
  1585  0000B6                     f_lseek@ofs:
  1586                           	callstack 0
  1587                           
  1588                           ; 4 bytes @ 0x56
  1589  0000B6                     	ds	1
  1590  0000B7                     f_write@btw:
  1591                           	callstack 0
  1592                           
  1593                           ; 2 bytes @ 0x57
  1594  0000B7                     	ds	1
  1595  0000B8                     _trace_path$2149:
  1596                           	callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x58
  1599  0000B8                     	ds	1
  1600  0000B9                     f_write@bw:
  1601                           	callstack 0
  1602                           
  1603                           ; 1 bytes @ 0x59
  1604  0000B9                     	ds	1
  1605  0000BA                     ??_f_lseek:
  1606  0000BA                     ??_f_write:
  1607  0000BA                     _trace_path$2151:
  1608                           	callstack 0
  1609  0000BA                     reserve_direntry@sector:
  1610                           	callstack 0
  1611                           
  1612                           ; 4 bytes @ 0x5A
  1613  0000BA                     	ds	2
  1614  0000BC                     trace_path@fs:
  1615                           	callstack 0
  1616                           
  1617                           ; 2 bytes @ 0x5C
  1618  0000BC                     	ds	2
  1619  0000BE                     reserve_direntry@n:
  1620                           	callstack 0
  1621  0000BE                     trace_path@clust:
  1622                           	callstack 0
  1623                           
  1624                           ; 2 bytes @ 0x5E
  1625  0000BE                     	ds	1
  1626  0000BF                     reserve_direntry@dptr:
  1627                           	callstack 0
  1628                           
  1629                           ; 2 bytes @ 0x5F
  1630  0000BF                     	ds	1
  1631  0000C0                     trace_path@ds:
  1632                           	callstack 0
  1633                           
  1634                           ; 1 bytes @ 0x60
  1635  0000C0                     	ds	1
  1636  0000C1                     reserve_direntry@c:
  1637                           	callstack 0
  1638  0000C1                     trace_path@dptr:
  1639                           	callstack 0
  1640                           
  1641                           ; 2 bytes @ 0x61
  1642  0000C1                     	ds	1
  1643  0000C2                     reserve_direntry@clust:
  1644                           	callstack 0
  1645                           
  1646                           ; 2 bytes @ 0x62
  1647  0000C2                     	ds	2
  1648  0000C4                     reserve_direntry@fs:
  1649                           	callstack 0
  1650                           
  1651                           ; 2 bytes @ 0x64
  1652  0000C4                     	ds	2
  1653  0000C6                     f_write@res:
  1654                           	callstack 0
  1655  0000C6                     f_open@fp:
  1656                           	callstack 0
  1657                           
  1658                           ; 2 bytes @ 0x66
  1659  0000C6                     	ds	1
  1660  0000C7                     f_write@wbuff:
  1661                           	callstack 0
  1662                           
  1663                           ; 1 bytes @ 0x67
  1664  0000C7                     	ds	1
  1665  0000C8                     f_open@path:
  1666                           	callstack 0
  1667  0000C8                     f_write@sect:
  1668                           	callstack 0
  1669                           
  1670                           ; 4 bytes @ 0x68
  1671  0000C8                     	ds	2
  1672  0000CA                     f_open@mode:
  1673                           	callstack 0
  1674  0000CA                     f_lseek@res:
  1675                           	callstack 0
  1676                           
  1677                           ; 1 bytes @ 0x6A
  1678  0000CA                     	ds	1
  1679  0000CB                     ??_f_open:
  1680  0000CB                     f_lseek@ifptr:
  1681                           	callstack 0
  1682                           
  1683                           ; 4 bytes @ 0x6B
  1684  0000CB                     	ds	1
  1685  0000CC                     f_write@cc:
  1686                           	callstack 0
  1687                           
  1688                           ; 2 bytes @ 0x6C
  1689  0000CC                     	ds	2
  1690  0000CE                     f_write@clust:
  1691                           	callstack 0
  1692  0000CE                     verifica_fence_externo@temp_buff_long:
  1693                           	callstack 0
  1694                           
  1695                           ; 12 bytes @ 0x6E
  1696  0000CE                     	ds	1
  1697  0000CF                     f_lseek@csize:
  1698                           	callstack 0
  1699  0000CF                     f_open@fn:
  1700                           	callstack 0
  1701                           
  1702                           ; 12 bytes @ 0x6F
  1703  0000CF                     	ds	1
  1704  0000D0                     f_write@wcnt:
  1705                           	callstack 0
  1706                           
  1707                           ; 2 bytes @ 0x70
  1708  0000D0                     	ds	2
  1709  0000D2                     ?_fputc:
  1710                           	callstack 0
  1711  0000D2                     fputc@chr:
  1712                           	callstack 0
  1713                           
  1714                           ; 2 bytes @ 0x72
  1715  0000D2                     	ds	1
  1716  0000D3                     f_lseek@clust:
  1717                           	callstack 0
  1718                           
  1719                           ; 2 bytes @ 0x73
  1720  0000D3                     	ds	1
  1721  0000D4                     fputc@fil:
  1722                           	callstack 0
  1723                           
  1724                           ; 2 bytes @ 0x74
  1725  0000D4                     	ds	2
  1726  0000D6                     fputc@c:
  1727                           	callstack 0
  1728                           
  1729                           ; 1 bytes @ 0x76
  1730  0000D6                     	ds	1
  1731  0000D7                     fputc@bw:
  1732                           	callstack 0
  1733                           
  1734                           ; 2 bytes @ 0x77
  1735  0000D7                     	ds	2
  1736  0000D9                     ?_fputs:
  1737                           	callstack 0
  1738  0000D9                     fputs@str:
  1739                           	callstack 0
  1740                           
  1741                           ; 2 bytes @ 0x79
  1742  0000D9                     	ds	1
  1743  0000DA                     verifica_fence_externo@temp_buff_lat:
  1744                           	callstack 0
  1745                           
  1746                           ; 11 bytes @ 0x7A
  1747  0000DA                     	ds	1
  1748  0000DB                     f_open@rs:
  1749                           	callstack 0
  1750  0000DB                     fputs@fil:
  1751                           	callstack 0
  1752                           
  1753                           ; 2 bytes @ 0x7B
  1754  0000DB                     	ds	2
  1755  0000DD                     ??_fputs:
  1756  0000DD                     f_open@dw:
  1757                           	callstack 0
  1758                           
  1759                           ; 4 bytes @ 0x7D
  1760  0000DD                     	ds	1
  1761  0000DE                     fputs@n:
  1762                           	callstack 0
  1763                           
  1764                           ; 2 bytes @ 0x7E
  1765  0000DE                     	ds	2
  1766  0000E0                     ?_fprintf:
  1767                           	callstack 0
  1768  0000E0                     fprintf@fil:
  1769                           	callstack 0
  1770                           
  1771                           ; 2 bytes @ 0x80
  1772  0000E0                     	ds	1
  1773  0000E1                     f_open@res:
  1774                           	callstack 0
  1775                           
  1776                           ; 1 bytes @ 0x81
  1777  0000E1                     	ds	1
  1778  0000E2                     f_open@dir:
  1779                           	callstack 0
  1780  0000E2                     fprintf@str:
  1781                           	callstack 0
  1782                           
  1783                           ; 2 bytes @ 0x82
  1784  0000E2                     	ds	2
  1785  0000E4                     f_open@dj:
  1786                           	callstack 0
  1787                           
  1788                           ; 14 bytes @ 0x84
  1789  0000E4                     	ds	1
  1790  0000E5                     verifica_fence_externo@temp_var_deg:
  1791                           	callstack 0
  1792                           
  1793                           ; 4 bytes @ 0x85
  1794  0000E5                     	ds	4
  1795  0000E9                     verifica_fence_externo@point_dif_lat:
  1796                           	callstack 0
  1797                           
  1798                           ; 1 bytes @ 0x89
  1799  0000E9                     	ds	1
  1800  0000EA                     verifica_fence_externo@point_dif_long:
  1801                           	callstack 0
  1802                           
  1803                           ; 1 bytes @ 0x8A
  1804  0000EA                     	ds	1
  1805  0000EB                     verifica_fence_externo@j:
  1806                           	callstack 0
  1807                           
  1808                           ; 1 bytes @ 0x8B
  1809  0000EB                     	ds	1
  1810  0000EC                     verifica_fence_externo@count:
  1811                           	callstack 0
  1812                           
  1813                           ; 1 bytes @ 0x8C
  1814  0000EC                     	ds	1
  1815  0000ED                     verifica_fence_externo@point:
  1816                           	callstack 0
  1817                           
  1818                           ; 1 bytes @ 0x8D
  1819  0000ED                     	ds	1
  1820  0000EE                     verifica_fence_externo@i:
  1821                           	callstack 0
  1822                           
  1823                           ; 1 bytes @ 0x8E
  1824  0000EE                     	ds	6
  1825  0000F4                     ??_fprintf:
  1826                           
  1827                           ; 1 bytes @ 0x94
  1828  0000F4                     	ds	2
  1829  0000F6                     
  1830                           ; 1 bytes @ 0x96
  1831  0000F6                     	ds	2
  1832  0000F8                     escalonador@cont:
  1833                           	callstack 0
  1834                           
  1835                           ; 1 bytes @ 0x98
  1836  0000F8                     	ds	1
  1837                           
  1838                           	psect	cstackCOMRAM
  1839  000001                     __pcstackCOMRAM:
  1840                           	callstack 0
  1841  000001                     ?_strcmp:
  1842                           	callstack 0
  1843  000001                     stringcpy@str1:
  1844                           	callstack 0
  1845  000001                     strcmp@s1:
  1846                           	callstack 0
  1847  000001                     i2write_timer_zero@timer0:
  1848                           	callstack 0
  1849                           
  1850                           ; 2 bytes @ 0x0
  1851  000001                     	ds	2
  1852  000003                     stringcpy@str2:
  1853                           	callstack 0
  1854  000003                     strcmp@s2:
  1855                           	callstack 0
  1856                           
  1857                           ; 2 bytes @ 0x2
  1858  000003                     	ds	2
  1859  000005                     ??_strcmp:
  1860  000005                     stringcpy@dir:
  1861                           	callstack 0
  1862                           
  1863                           ; 2 bytes @ 0x4
  1864  000005                     	ds	2
  1865  000007                     ??_stringcpy:
  1866  000007                     strcmp@r:
  1867                           	callstack 0
  1868                           
  1869                           ; 1 bytes @ 0x6
  1870  000007                     	ds	2
  1871  000009                     stringcpy@chr:
  1872                           	callstack 0
  1873                           
  1874                           ; 1 bytes @ 0x8
  1875  000009                     	ds	1
  1876  00000A                     ??_GPSRead:
  1877                           
  1878                           ; 1 bytes @ 0x9
  1879  00000A                     	ds	2
  1880  00000C                     GPSRead@buff:
  1881                           	callstack 0
  1882                           
  1883                           ; 1 bytes @ 0xB
  1884  00000C                     	ds	1
  1885  00000D                     GPSRead@c:
  1886                           	callstack 0
  1887                           
  1888                           ; 1 bytes @ 0xC
  1889  00000D                     	ds	1
  1890  00000E                     ??_isr:
  1891                           
  1892                           ; 1 bytes @ 0xD
  1893  00000E                     	ds	12
  1894  00001A                     isr@cont:
  1895                           	callstack 0
  1896                           
  1897                           ; 1 bytes @ 0x19
  1898  00001A                     	ds	1
  1899  00001B                     ??_isdigit:
  1900  00001B                     ??_dummy_clocks:
  1901  00001B                     ?_Latitude:
  1902                           	callstack 0
  1903  00001B                     ?_Longitude:
  1904                           	callstack 0
  1905  00001B                     ?_strlen:
  1906                           	callstack 0
  1907  00001B                     ?_memcmp:
  1908                           	callstack 0
  1909  00001B                     ?___wmul:
  1910                           	callstack 0
  1911  00001B                     ?___lwdiv:
  1912                           	callstack 0
  1913  00001B                     ?___lwmod:
  1914                           	callstack 0
  1915  00001B                     ?_get_fattime:
  1916                           	callstack 0
  1917  00001B                     ?___lmul:
  1918                           	callstack 0
  1919  00001B                     ?___lldiv:
  1920                           	callstack 0
  1921  00001B                     ?___aldiv:
  1922                           	callstack 0
  1923  00001B                     ?___llmod:
  1924                           	callstack 0
  1925  00001B                     response@buff:
  1926                           	callstack 0
  1927  00001B                     escreve_SPI@dado:
  1928                           	callstack 0
  1929  00001B                     disk_ioctl@cmd:
  1930                           	callstack 0
  1931  00001B                     sdc_disk_status@pdrv:
  1932                           	callstack 0
  1933  00001B                     delay@contador_ext:
  1934                           	callstack 0
  1935  00001B                     write_timer_zero@timer0:
  1936                           	callstack 0
  1937  00001B                     f_mount@fs:
  1938                           	callstack 0
  1939  00001B                     ___wmul@multiplier:
  1940                           	callstack 0
  1941  00001B                     ___lwdiv@dividend:
  1942                           	callstack 0
  1943  00001B                     ___lwmod@dividend:
  1944                           	callstack 0
  1945  00001B                     memcmp@s1:
  1946                           	callstack 0
  1947  00001B                     memcpy@d1:
  1948                           	callstack 0
  1949  00001B                     memset@p1:
  1950                           	callstack 0
  1951  00001B                     strlen@s:
  1952                           	callstack 0
  1953  00001B                     wait_ready@timeout:
  1954                           	callstack 0
  1955  00001B                     ___lmul@multiplier:
  1956                           	callstack 0
  1957  00001B                     ___lldiv@dividend:
  1958                           	callstack 0
  1959  00001B                     ___aldiv@dividend:
  1960                           	callstack 0
  1961  00001B                     ___llmod@dividend:
  1962                           	callstack 0
  1963                           
  1964                           ; 4 bytes @ 0x1A
  1965  00001B                     	ds	1
  1966  00001C                     disk_status@pdrv:
  1967                           	callstack 0
  1968  00001C                     delay@contador_int:
  1969                           	callstack 0
  1970  00001C                     _isdigit$3178:
  1971                           	callstack 0
  1972  00001C                     disk_ioctl@buff:
  1973                           	callstack 0
  1974                           
  1975                           ; 2 bytes @ 0x1B
  1976  00001C                     	ds	1
  1977  00001D                     dummy_clocks@n:
  1978                           	callstack 0
  1979  00001D                     disk_status@stat:
  1980                           	callstack 0
  1981  00001D                     escreve_cmd_lcd@comando:
  1982                           	callstack 0
  1983  00001D                     endereco_cursor_lcd@endereco:
  1984                           	callstack 0
  1985  00001D                     escreve_caractere_lcd@data:
  1986                           	callstack 0
  1987  00001D                     f_mount@drv:
  1988                           	callstack 0
  1989  00001D                     isdigit@c:
  1990                           	callstack 0
  1991  00001D                     ___wmul@multiplicand:
  1992                           	callstack 0
  1993  00001D                     ___lwdiv@divisor:
  1994                           	callstack 0
  1995  00001D                     ___lwmod@divisor:
  1996                           	callstack 0
  1997  00001D                     memcmp@s2:
  1998                           	callstack 0
  1999  00001D                     memcpy@s1:
  2000                           	callstack 0
  2001  00001D                     memset@c:
  2002                           	callstack 0
  2003  00001D                     strlen@cp:
  2004                           	callstack 0
  2005                           
  2006                           ; 2 bytes @ 0x1C
  2007  00001D                     	ds	1
  2008  00001E                     ??_init_lcd:
  2009  00001E                     disk_ioctl@pdrv:
  2010                           	callstack 0
  2011  00001E                     posicao_cursor_lcd@coluna:
  2012                           	callstack 0
  2013  00001E                     dummy_clocks@i:
  2014                           	callstack 0
  2015  00001E                     escreve_frase_ram_lcd@buffer:
  2016                           	callstack 0
  2017  00001E                     validate@fs:
  2018                           	callstack 0
  2019                           
  2020                           ; 2 bytes @ 0x1D
  2021  00001E                     	ds	1
  2022  00001F                     wait_ready@res:
  2023                           	callstack 0
  2024  00001F                     disk_ioctl@res:
  2025                           	callstack 0
  2026  00001F                     posicao_cursor_lcd@linha:
  2027                           	callstack 0
  2028  00001F                     ___lwdiv@counter:
  2029                           	callstack 0
  2030  00001F                     ___lwmod@counter:
  2031                           	callstack 0
  2032  00001F                     monta_sd@dado:
  2033                           	callstack 0
  2034  00001F                     ___wmul@product:
  2035                           	callstack 0
  2036  00001F                     memcmp@n:
  2037                           	callstack 0
  2038  00001F                     memcpy@n:
  2039                           	callstack 0
  2040  00001F                     memset@n:
  2041                           	callstack 0
  2042  00001F                     ___lmul@multiplicand:
  2043                           	callstack 0
  2044  00001F                     ___lldiv@divisor:
  2045                           	callstack 0
  2046  00001F                     ___aldiv@divisor:
  2047                           	callstack 0
  2048  00001F                     ___llmod@divisor:
  2049                           	callstack 0
  2050  00001F                     get_fattime@f_time:
  2051                           	callstack 0
  2052                           
  2053                           ; 9 bytes @ 0x1E
  2054  00001F                     	ds	1
  2055  000020                     posicao_cursor_lcd@endereco:
  2056                           	callstack 0
  2057  000020                     validate@id:
  2058                           	callstack 0
  2059  000020                     ___lwdiv@quotient:
  2060                           	callstack 0
  2061  000020                     command@arg:
  2062                           	callstack 0
  2063                           
  2064                           ; 4 bytes @ 0x1F
  2065  000020                     	ds	1
  2066  000021                     ??_troca_de_tela:
  2067  000021                     ??_mensagem_inicial:
  2068  000021                     ??_memcmp:
  2069  000021                     ?_atoi:
  2070                           	callstack 0
  2071  000021                     monta_sd@index:
  2072                           	callstack 0
  2073  000021                     memcpy@tmp:
  2074                           	callstack 0
  2075  000021                     atoi@s:
  2076                           	callstack 0
  2077  000021                     memset@p:
  2078                           	callstack 0
  2079                           
  2080                           ; 2 bytes @ 0x20
  2081  000021                     	ds	1
  2082  000022                     ??_validate:
  2083  000022                     monta_sd@size:
  2084                           	callstack 0
  2085  000022                     utoa@buf:
  2086                           	callstack 0
  2087  000022                     memcpy@d:
  2088                           	callstack 0
  2089                           
  2090                           ; 2 bytes @ 0x21
  2091  000022                     	ds	1
  2092  000023                     ??_atoi:
  2093  000023                     monta_sd@i:
  2094                           	callstack 0
  2095  000023                     make_dirfile@path:
  2096                           	callstack 0
  2097  000023                     ___aldiv@counter:
  2098                           	callstack 0
  2099  000023                     ___llmod@counter:
  2100                           	callstack 0
  2101  000023                     utoa@val:
  2102                           	callstack 0
  2103  000023                     ___lmul@product:
  2104                           	callstack 0
  2105  000023                     ___lldiv@quotient:
  2106                           	callstack 0
  2107                           
  2108                           ; 4 bytes @ 0x22
  2109  000023                     	ds	1
  2110  000024                     command@CRC:
  2111                           	callstack 0
  2112  000024                     make_dirfile@dirname:
  2113                           	callstack 0
  2114  000024                     ___aldiv@sign:
  2115                           	callstack 0
  2116  000024                     memcpy@s:
  2117                           	callstack 0
  2118                           
  2119                           ; 2 bytes @ 0x23
  2120  000024                     	ds	1
  2121  000025                     ??_make_dirfile:
  2122  000025                     command@CMD:
  2123                           	callstack 0
  2124  000025                     atoi@sign:
  2125                           	callstack 0
  2126  000025                     utoa@base:
  2127                           	callstack 0
  2128  000025                     ___aldiv@quotient:
  2129                           	callstack 0
  2130                           
  2131                           ; 4 bytes @ 0x24
  2132  000025                     	ds	1
  2133  000026                     command@argument:
  2134                           	callstack 0
  2135  000026                     atoi@a:
  2136                           	callstack 0
  2137                           
  2138                           ; 2 bytes @ 0x25
  2139  000026                     	ds	1
  2140  000027                     ??_sdc_disk_read:
  2141  000027                     ??_sdc_disk_write:
  2142  000027                     ?_clust2sect:
  2143                           	callstack 0
  2144  000027                     ___lldiv@counter:
  2145                           	callstack 0
  2146  000027                     sdc_reset@count_nosd:
  2147                           	callstack 0
  2148  000027                     clust2sect@clust:
  2149                           	callstack 0
  2150  000027                     utoa@v:
  2151                           	callstack 0
  2152                           
  2153                           ; 2 bytes @ 0x26
  2154  000027                     	ds	2
  2155  000029                     utoa@c:
  2156                           	callstack 0
  2157  000029                     sdc_reset@count:
  2158                           	callstack 0
  2159  000029                     configura_baudrate_uart@x:
  2160                           	callstack 0
  2161                           
  2162                           ; 2 bytes @ 0x28
  2163  000029                     	ds	1
  2164  00002A                     escreve_inteiro_lcd@valor:
  2165                           	callstack 0
  2166                           
  2167                           ; 2 bytes @ 0x29
  2168  00002A                     	ds	1
  2169  00002B                     ??_disk_read:
  2170  00002B                     ??_disk_write:
  2171  00002B                     sdc_reset@buff:
  2172                           	callstack 0
  2173                           
  2174                           ; 1 bytes @ 0x2A
  2175  00002B                     	ds	1
  2176  00002C                     
  2177                           ; 1 bytes @ 0x2B
  2178 ;;
  2179 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2180 ;;
  2181 ;; *************** function _main *****************
  2182 ;; Defined at:
  2183 ;;		line 229 in file "main.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2197 ;;      Params:         0       0       0       0       0       0       0       0       0
  2198 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2199 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2200 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2201 ;;Total ram usage:        0 bytes
  2202 ;; Hardware stack levels required when called: 18
  2203 ;; This function calls:
  2204 ;;		_dados_gps_to_sd
  2205 ;;		_escalonador
  2206 ;;		_inicializa_tarefas
  2207 ;;		_inicializa_uart
  2208 ;;		_init_hardware
  2209 ;;		_init_lcd
  2210 ;;		_mensagem_inicial
  2211 ;; This function is called by:
  2212 ;;		Startup code after reset
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text0
  2217  004F5E                     __ptext0:
  2218                           	callstack 0
  2219  004F5E                     _main:
  2220                           	callstack 13
  2221                           
  2222                           ;main.c: 231: init_hardware();
  2223                           
  2224                           ;incstack = 0
  2225  004F5E  EC98  F028         	call	_init_hardware	;wreg free
  2226                           
  2227                           ;main.c: 232: T0CONbits.TMR0ON = 0;
  2228  004F62  9ED5               	bcf	213,7,c	;volatile
  2229                           
  2230                           ;main.c: 233: init_lcd();
  2231  004F64  ECE9  F020         	call	_init_lcd	;wreg free
  2232                           
  2233                           ;main.c: 234: mensagem_inicial();
  2234  004F68  EC6E  F023         	call	_mensagem_inicial	;wreg free
  2235                           
  2236                           ;main.c: 235: inicializa_tarefas();
  2237  004F6C  EC89  F024         	call	_inicializa_tarefas	;wreg free
  2238                           
  2239                           ; BSR set to: 1
  2240                           ;main.c: 236: inicializa_uart();
  2241  004F70  EC2D  F028         	call	_inicializa_uart	;wreg free
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;main.c: 237: T0CONbits.TMR0ON = 1;
  2245  004F74  8ED5               	bsf	213,7,c	;volatile
  2246  004F76                     l12127:
  2247                           
  2248                           ;main.c: 239: {;main.c: 241: if ((sinaliza_int_timer == 1) && (4))
  2249  004F76  0442               	decf	_sinaliza_int_timer^0,w,c
  2250  004F78  A4D8               	btfss	status,2,c
  2251  004F7A  D004               	goto	l12133
  2252                           
  2253                           ;main.c: 242: {;main.c: 243: sinaliza_int_timer = 0;
  2254  004F7C  0E00               	movlw	0
  2255  004F7E  6E42               	movwf	_sinaliza_int_timer^0,c
  2256                           
  2257                           ;main.c: 244: escalonador();
  2258  004F80  EC47  F020         	call	_escalonador	;wreg free
  2259  004F84                     l12133:
  2260                           
  2261                           ;main.c: 245: };main.c: 246: dados_gps_to_sd();
  2262  004F84  EC2B  F027         	call	_dados_gps_to_sd	;wreg free
  2263  004F88  D7F6               	goto	l12127
  2264  004F8A                     __end_of_main:
  2265                           	callstack 0
  2266                           
  2267 ;; *************** function _mensagem_inicial *****************
  2268 ;; Defined at:
  2269 ;;		line 256 in file "main.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;		None
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  msg_dois       17   17[BANK0 ] const unsigned char [17]
  2274 ;;  msg_linha_um   17    0[BANK0 ] const unsigned char [17]
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2284 ;;      Params:         0       0       0       0       0       0       0       0       0
  2285 ;;      Locals:         0      34       0       0       0       0       0       0       0
  2286 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2287 ;;      Totals:         2      34       0       0       0       0       0       0       0
  2288 ;;Total ram usage:       36 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; Hardware stack levels required when called: 6
  2291 ;; This function calls:
  2292 ;;		_escreve_cmd_lcd
  2293 ;;		_escreve_frase_ram_lcd
  2294 ;;		_posicao_cursor_lcd
  2295 ;; This function is called by:
  2296 ;;		_main
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text1
  2301  0046DC                     __ptext1:
  2302                           	callstack 0
  2303  0046DC                     _mensagem_inicial:
  2304                           	callstack 24
  2305                           
  2306                           ;main.c: 258: const unsigned char msg_linha_um[17] = "FATEC ST ANDRE";
  2307                           
  2308                           ;incstack = 0
  2309  0046DC  0EFE               	movlw	low mensagem_inicial@F3633
  2310  0046DE  6EF6               	movwf	tblptrl,c
  2311  0046E0                     	if	1	;There is more than 1 active tblptr byte
  2312  0046E0  0E60               	movlw	high mensagem_inicial@F3633
  2313  0046E2  6EF7               	movwf	tblptrh,c
  2314  0046E4                     	endif
  2315  0046E4                     	if	0	;There are less than 3 active tblptr bytes
  2316  0046E4                     	endif
  2317  0046E4  EE20  F060         	lfsr	2,mensagem_inicial@msg_linha_um
  2318  0046E8  0E10               	movlw	16
  2319  0046EA                     u15560:
  2320  0046EA  0009               	tblrd		*+
  2321  0046EC  CFF5 FFDE          	movff	tablat,postinc2
  2322  0046F0  06E8               	decf	wreg,f,c
  2323  0046F2  E2FB               	bc	u15560
  2324                           
  2325                           ;main.c: 259: const unsigned char msg_dois[17] = "TCC--TELEMTRIA";
  2326  0046F4  0EED               	movlw	low mensagem_inicial@F3635
  2327  0046F6  6EF6               	movwf	tblptrl,c
  2328  0046F8                     	if	1	;There is more than 1 active tblptr byte
  2329  0046F8  0E60               	movlw	high mensagem_inicial@F3635
  2330  0046FA  6EF7               	movwf	tblptrh,c
  2331  0046FC                     	endif
  2332  0046FC                     	if	0	;There are less than 3 active tblptr bytes
  2333  0046FC                     	endif
  2334  0046FC  EE20  F071         	lfsr	2,mensagem_inicial@msg_dois
  2335  004700  0E10               	movlw	16
  2336  004702                     u15570:
  2337  004702  0009               	tblrd		*+
  2338  004704  CFF5 FFDE          	movff	tablat,postinc2
  2339  004708  06E8               	decf	wreg,f,c
  2340  00470A  E2FB               	bc	u15570
  2341                           
  2342                           ;main.c: 261: posicao_cursor_lcd(1,0);
  2343  00470C  0E00               	movlw	0
  2344  00470E  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  2345  004710  0E01               	movlw	1
  2346  004712  ECF0  F024         	call	_posicao_cursor_lcd
  2347                           
  2348                           ;main.c: 262: escreve_frase_ram_lcd(msg_linha_um);
  2349  004716  0E60               	movlw	low mensagem_inicial@msg_linha_um
  2350  004718  6E1E               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2351  00471A  6A1F               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2352  00471C  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  2353                           
  2354                           ;main.c: 264: posicao_cursor_lcd(2,0);
  2355  004720  0E00               	movlw	0
  2356  004722  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  2357  004724  0E02               	movlw	2
  2358  004726  ECF0  F024         	call	_posicao_cursor_lcd
  2359                           
  2360                           ;main.c: 265: escreve_frase_ram_lcd(msg_dois);
  2361  00472A  0E71               	movlw	low mensagem_inicial@msg_dois
  2362  00472C  6E1E               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2363  00472E  6A1F               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2364  004730  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  2365                           
  2366                           ;main.c: 266: _delay((unsigned long)((1000)*(48000000/4000.0)));
  2367  004734  0E3D               	movlw	61
  2368  004736  6E22               	movwf	(??_mensagem_inicial+1)^0,c
  2369  004738  0EE1               	movlw	225
  2370  00473A  6E21               	movwf	??_mensagem_inicial^0,c
  2371  00473C  0E40               	movlw	64
  2372  00473E                     u15907:
  2373  00473E  2EE8               	decfsz	wreg,f,c
  2374  004740  D7FE               	bra	u15907
  2375  004742  2E21               	decfsz	??_mensagem_inicial^0,f,c
  2376  004744  D7FC               	bra	u15907
  2377  004746  2E22               	decfsz	(??_mensagem_inicial+1)^0,f,c
  2378  004748  D7FA               	bra	u15907
  2379                           
  2380                           ;main.c: 267: escreve_cmd_lcd(0b00000001);
  2381  00474A  0E01               	movlw	1
  2382  00474C  EC61  F022         	call	_escreve_cmd_lcd
  2383  004750  0012               	return		;funcret
  2384  004752                     __end_of_mensagem_inicial:
  2385                           	callstack 0
  2386                           
  2387 ;; *************** function _init_lcd *****************
  2388 ;; Defined at:
  2389 ;;		line 71 in file "bibliotecas/display_lcd.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2403 ;;      Params:         0       0       0       0       0       0       0       0       0
  2404 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2405 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2406 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2407 ;;Total ram usage:        1 bytes
  2408 ;; Hardware stack levels used: 1
  2409 ;; Hardware stack levels required when called: 5
  2410 ;; This function calls:
  2411 ;;		_delay
  2412 ;;		_escreve_cmd_lcd
  2413 ;; This function is called by:
  2414 ;;		_main
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text2
  2419  0041D2                     __ptext2:
  2420                           	callstack 0
  2421  0041D2                     _init_lcd:
  2422                           	callstack 25
  2423                           
  2424                           ;display_lcd.c: 74: TRISDbits.RD2 = 0;
  2425                           
  2426                           ;incstack = 0
  2427  0041D2  9495               	bcf	149,2,c	;volatile
  2428                           
  2429                           ;display_lcd.c: 75: TRISDbits.RD1 = 0;
  2430  0041D4  9295               	bcf	149,1,c	;volatile
  2431                           
  2432                           ;display_lcd.c: 76: TRISDbits.RD0 = 0;
  2433  0041D6  9095               	bcf	149,0,c	;volatile
  2434                           
  2435                           ;display_lcd.c: 79: TRISDbits.RD4=0;
  2436  0041D8  9895               	bcf	149,4,c	;volatile
  2437                           
  2438                           ;display_lcd.c: 80: TRISDbits.RD5=0;
  2439  0041DA  9A95               	bcf	149,5,c	;volatile
  2440                           
  2441                           ;display_lcd.c: 81: TRISDbits.RD6=0;
  2442  0041DC  9C95               	bcf	149,6,c	;volatile
  2443                           
  2444                           ;display_lcd.c: 82: TRISDbits.RD7=0;
  2445  0041DE  9E95               	bcf	149,7,c	;volatile
  2446                           
  2447                           ;display_lcd.c: 89: PORTDbits.RD2 = 0;
  2448  0041E0  9483               	bcf	131,2,c	;volatile
  2449                           
  2450                           ;display_lcd.c: 90: PORTDbits.RD1 = 0;
  2451  0041E2  9283               	bcf	131,1,c	;volatile
  2452                           
  2453                           ;display_lcd.c: 91: PORTDbits.RD0 = 0;
  2454  0041E4  9083               	bcf	131,0,c	;volatile
  2455                           
  2456                           ;display_lcd.c: 95: PORTDbits.RD7=0;
  2457  0041E6  9E83               	bcf	131,7,c	;volatile
  2458                           
  2459                           ;display_lcd.c: 96: PORTDbits.RD6=0;
  2460  0041E8  9C83               	bcf	131,6,c	;volatile
  2461                           
  2462                           ;display_lcd.c: 97: PORTDbits.RD5=1;
  2463  0041EA  8A83               	bsf	131,5,c	;volatile
  2464                           
  2465                           ;display_lcd.c: 98: PORTDbits.RD4=1;
  2466  0041EC  8883               	bsf	131,4,c	;volatile
  2467                           
  2468                           ;display_lcd.c: 103: _delay((unsigned long)((15)*(48000000/4000.0)));
  2469  0041EE  0EEA               	movlw	234
  2470  0041F0  6E1E               	movwf	??_init_lcd^0,c
  2471  0041F2  0EC3               	movlw	195
  2472  0041F4                     u15917:
  2473  0041F4  2EE8               	decfsz	wreg,f,c
  2474  0041F6  D7FE               	bra	u15917
  2475  0041F8  2E1E               	decfsz	??_init_lcd^0,f,c
  2476  0041FA  D7FC               	bra	u15917
  2477  0041FC  F000               	nop	
  2478                           
  2479                           ;display_lcd.c: 107: PORTDbits.RD0 = 1;
  2480  0041FE  8083               	bsf	131,0,c	;volatile
  2481                           
  2482                           ;display_lcd.c: 108: delay();
  2483  004200  EC6E  F028         	call	_delay	;wreg free
  2484                           
  2485                           ;display_lcd.c: 109: PORTDbits.RD0 = 0;
  2486  004204  9083               	bcf	131,0,c	;volatile
  2487                           
  2488                           ;display_lcd.c: 110: delay();
  2489  004206  EC6E  F028         	call	_delay	;wreg free
  2490                           
  2491                           ;display_lcd.c: 115: _delay((unsigned long)((5)*(48000000/4000.0)));
  2492  00420A  0E4E               	movlw	78
  2493  00420C  6E1E               	movwf	??_init_lcd^0,c
  2494  00420E  0EEB               	movlw	235
  2495  004210                     u15927:
  2496  004210  2EE8               	decfsz	wreg,f,c
  2497  004212  D7FE               	bra	u15927
  2498  004214  2E1E               	decfsz	??_init_lcd^0,f,c
  2499  004216  D7FC               	bra	u15927
  2500  004218  F000               	nop	
  2501                           
  2502                           ;display_lcd.c: 118: PORTDbits.RD0 = 1;
  2503  00421A  8083               	bsf	131,0,c	;volatile
  2504                           
  2505                           ;display_lcd.c: 119: delay();
  2506  00421C  EC6E  F028         	call	_delay	;wreg free
  2507                           
  2508                           ;display_lcd.c: 120: PORTDbits.RD0 = 0;
  2509  004220  9083               	bcf	131,0,c	;volatile
  2510                           
  2511                           ;display_lcd.c: 121: delay();
  2512  004222  EC6E  F028         	call	_delay	;wreg free
  2513                           
  2514                           ;display_lcd.c: 126: _delay((unsigned long)((5)*(48000000/4000.0)));
  2515  004226  0E4E               	movlw	78
  2516  004228  6E1E               	movwf	??_init_lcd^0,c
  2517  00422A  0EEB               	movlw	235
  2518  00422C                     u15937:
  2519  00422C  2EE8               	decfsz	wreg,f,c
  2520  00422E  D7FE               	bra	u15937
  2521  004230  2E1E               	decfsz	??_init_lcd^0,f,c
  2522  004232  D7FC               	bra	u15937
  2523  004234  F000               	nop	
  2524                           
  2525                           ;display_lcd.c: 129: PORTDbits.RD0 = 1;
  2526  004236  8083               	bsf	131,0,c	;volatile
  2527                           
  2528                           ;display_lcd.c: 130: delay();
  2529  004238  EC6E  F028         	call	_delay	;wreg free
  2530                           
  2531                           ;display_lcd.c: 131: PORTDbits.RD0 = 0;
  2532  00423C  9083               	bcf	131,0,c	;volatile
  2533                           
  2534                           ;display_lcd.c: 132: delay();
  2535  00423E  EC6E  F028         	call	_delay	;wreg free
  2536                           
  2537                           ;display_lcd.c: 135: PORTDbits.RD7=0;
  2538  004242  9E83               	bcf	131,7,c	;volatile
  2539                           
  2540                           ;display_lcd.c: 136: PORTDbits.RD6=0;
  2541  004244  9C83               	bcf	131,6,c	;volatile
  2542                           
  2543                           ;display_lcd.c: 137: PORTDbits.RD5=1;
  2544  004246  8A83               	bsf	131,5,c	;volatile
  2545                           
  2546                           ;display_lcd.c: 138: PORTDbits.RD4=0;
  2547  004248  9883               	bcf	131,4,c	;volatile
  2548                           
  2549                           ;display_lcd.c: 142: PORTDbits.RD0 = 1;
  2550  00424A  8083               	bsf	131,0,c	;volatile
  2551                           
  2552                           ;display_lcd.c: 143: delay();
  2553  00424C  EC6E  F028         	call	_delay	;wreg free
  2554                           
  2555                           ;display_lcd.c: 144: PORTDbits.RD0 = 0;
  2556  004250  9083               	bcf	131,0,c	;volatile
  2557                           
  2558                           ;display_lcd.c: 145: delay();
  2559  004252  EC6E  F028         	call	_delay	;wreg free
  2560                           
  2561                           ;display_lcd.c: 149: escreve_cmd_lcd(0b00101000);
  2562  004256  0E28               	movlw	40
  2563  004258  EC61  F022         	call	_escreve_cmd_lcd
  2564                           
  2565                           ;display_lcd.c: 150: escreve_cmd_lcd(0b00000110);
  2566  00425C  0E06               	movlw	6
  2567  00425E  EC61  F022         	call	_escreve_cmd_lcd
  2568                           
  2569                           ;display_lcd.c: 151: escreve_cmd_lcd(0b00001110);
  2570  004262  0E0E               	movlw	14
  2571  004264  EC61  F022         	call	_escreve_cmd_lcd
  2572                           
  2573                           ;display_lcd.c: 152: escreve_cmd_lcd(0b00000001);
  2574  004268  0E01               	movlw	1
  2575  00426A  EC61  F022         	call	_escreve_cmd_lcd
  2576  00426E  0012               	return		;funcret
  2577  004270                     __end_of_init_lcd:
  2578                           	callstack 0
  2579                           
  2580 ;; *************** function _init_hardware *****************
  2581 ;; Defined at:
  2582 ;;		line 55 in file "bibliotecas/hardware.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;		None
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  1    wreg      void 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2596 ;;      Params:         0       0       0       0       0       0       0       0       0
  2597 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2598 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2599 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2600 ;;Total ram usage:        0 bytes
  2601 ;; Hardware stack levels used: 1
  2602 ;; Hardware stack levels required when called: 5
  2603 ;; This function calls:
  2604 ;;		_config_timer_dois
  2605 ;;		_config_timer_zero
  2606 ;;		_init_interrupt
  2607 ;;		_init_oscilador
  2608 ;;		_init_ports
  2609 ;; This function is called by:
  2610 ;;		_main
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           	psect	text3
  2615  005130                     __ptext3:
  2616                           	callstack 0
  2617  005130                     _init_hardware:
  2618                           	callstack 25
  2619                           
  2620                           ;hardware.c: 58: init_oscilador();
  2621                           
  2622                           ;incstack = 0
  2623  005130  EC11  F029         	call	_init_oscilador	;wreg free
  2624                           
  2625                           ;hardware.c: 61: init_ports();
  2626  005134  EC7D  F028         	call	_init_ports	;wreg free
  2627                           
  2628                           ;hardware.c: 64: config_timer_zero();
  2629  005138  EC8B  F028         	call	_config_timer_zero	;wreg free
  2630                           
  2631                           ;hardware.c: 67: config_timer_dois();
  2632  00513C  ECD7  F028         	call	_config_timer_dois	;wreg free
  2633                           
  2634                           ;hardware.c: 70: init_interrupt();
  2635  005140  ECAE  F028         	call	_init_interrupt	;wreg free
  2636  005144  0012               	return		;funcret
  2637  005146                     __end_of_init_hardware:
  2638                           	callstack 0
  2639                           
  2640 ;; *************** function _init_ports *****************
  2641 ;; Defined at:
  2642 ;;		line 155 in file "bibliotecas/hardware.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2656 ;;      Params:         0       0       0       0       0       0       0       0       0
  2657 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2658 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2659 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2660 ;;Total ram usage:        0 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; Hardware stack levels required when called: 3
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_init_hardware
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text4
  2671  0050FA                     __ptext4:
  2672                           	callstack 0
  2673  0050FA                     _init_ports:
  2674                           	callstack 26
  2675                           
  2676                           ;hardware.c: 157: ADCON1 = 0X0F;
  2677                           
  2678                           ;incstack = 0
  2679  0050FA  0E0F               	movlw	15
  2680  0050FC  6EC1               	movwf	193,c	;volatile
  2681                           
  2682                           ;hardware.c: 158: TRISB = 0b00100001;
  2683  0050FE  0E21               	movlw	33
  2684  005100  6E93               	movwf	147,c	;volatile
  2685                           
  2686                           ;hardware.c: 159: LATB = 0xFF;
  2687  005102  688A               	setf	138,c	;volatile
  2688                           
  2689                           ;hardware.c: 160: TRISD = 0x00;
  2690  005104  0E00               	movlw	0
  2691  005106  6E95               	movwf	149,c	;volatile
  2692                           
  2693                           ;hardware.c: 161: TRISA = 0b00000111;
  2694  005108  0E07               	movlw	7
  2695  00510A  6E92               	movwf	146,c	;volatile
  2696                           
  2697                           ;hardware.c: 162: TRISC = 0x01111111;
  2698  00510C  0E11               	movlw	17
  2699  00510E  6E94               	movwf	148,c	;volatile
  2700                           
  2701                           ;hardware.c: 163: TRISE = 0b00000011;
  2702  005110  0E03               	movlw	3
  2703  005112  6E96               	movwf	150,c	;volatile
  2704  005114  0012               	return		;funcret
  2705  005116                     __end_of_init_ports:
  2706                           	callstack 0
  2707                           
  2708 ;; *************** function _init_oscilador *****************
  2709 ;; Defined at:
  2710 ;;		line 173 in file "bibliotecas/hardware.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;		None
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		None
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2724 ;;      Params:         0       0       0       0       0       0       0       0       0
  2725 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2727 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2728 ;;Total ram usage:        0 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; Hardware stack levels required when called: 3
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_init_hardware
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text5
  2739  005222                     __ptext5:
  2740                           	callstack 0
  2741  005222                     _init_oscilador:
  2742                           	callstack 26
  2743                           
  2744                           ;hardware.c: 176: OSCCONbits.IRCF0 = 1;
  2745                           
  2746                           ;incstack = 0
  2747  005222  88D3               	bsf	211,4,c	;volatile
  2748                           
  2749                           ;hardware.c: 177: OSCCONbits.IRCF1 = 1;
  2750  005224  8AD3               	bsf	211,5,c	;volatile
  2751                           
  2752                           ;hardware.c: 178: OSCCONbits.IRCF2 = 1;
  2753  005226  8CD3               	bsf	211,6,c	;volatile
  2754  005228  0012               	return		;funcret
  2755  00522A                     __end_of_init_oscilador:
  2756                           	callstack 0
  2757                           
  2758 ;; *************** function _init_interrupt *****************
  2759 ;; Defined at:
  2760 ;;		line 98 in file "bibliotecas/hardware.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;		None
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  1    wreg      void 
  2767 ;; Registers used:
  2768 ;;		wreg, status,2
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2774 ;;      Params:         0       0       0       0       0       0       0       0       0
  2775 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2776 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2777 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2778 ;;Total ram usage:        0 bytes
  2779 ;; Hardware stack levels used: 1
  2780 ;; Hardware stack levels required when called: 3
  2781 ;; This function calls:
  2782 ;;		Nothing
  2783 ;; This function is called by:
  2784 ;;		_init_hardware
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           	psect	text6
  2789  00515C                     __ptext6:
  2790                           	callstack 0
  2791  00515C                     _init_interrupt:
  2792                           	callstack 26
  2793                           
  2794                           ;hardware.c: 100: INTCON = 0b10110000;
  2795                           
  2796                           ;incstack = 0
  2797  00515C  0EB0               	movlw	176
  2798  00515E  6EF2               	movwf	242,c	;volatile
  2799                           
  2800                           ;hardware.c: 101: INTCON2 = 0b00000000;
  2801  005160  0E00               	movlw	0
  2802  005162  6EF1               	movwf	241,c	;volatile
  2803                           
  2804                           ;hardware.c: 102: INTCON3 = 0b00000000;
  2805  005164  0E00               	movlw	0
  2806  005166  6EF0               	movwf	240,c	;volatile
  2807                           
  2808                           ;hardware.c: 104: PIE1 = 0b00101000;
  2809  005168  0E28               	movlw	40
  2810  00516A  6E9D               	movwf	157,c	;volatile
  2811  00516C  0012               	return		;funcret
  2812  00516E                     __end_of_init_interrupt:
  2813                           	callstack 0
  2814                           
  2815 ;; *************** function _config_timer_zero *****************
  2816 ;; Defined at:
  2817 ;;		line 83 in file "bibliotecas/hardware.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;		None
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;		None
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg, status,2, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2831 ;;      Params:         0       0       0       0       0       0       0       0       0
  2832 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2834 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2835 ;;Total ram usage:        0 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; Hardware stack levels required when called: 4
  2838 ;; This function calls:
  2839 ;;		_write_timer_zero
  2840 ;; This function is called by:
  2841 ;;		_init_hardware
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text7
  2846  005116                     __ptext7:
  2847                           	callstack 0
  2848  005116                     _config_timer_zero:
  2849                           	callstack 25
  2850                           
  2851                           ;hardware.c: 85: T0CON = 0b11000101;
  2852                           
  2853                           ;incstack = 0
  2854  005116  0EC5               	movlw	197
  2855  005118  6ED5               	movwf	213,c	;volatile
  2856                           
  2857                           ;hardware.c: 86: SPPCON = 0b00000000;
  2858  00511A  0E00               	movlw	0
  2859  00511C  6E65               	movwf	101,c	;volatile
  2860                           
  2861                           ;hardware.c: 87: SPPCFG = 0b00000000;
  2862  00511E  0E00               	movlw	0
  2863  005120  6E63               	movwf	99,c	;volatile
  2864                           
  2865                           ;hardware.c: 88: write_timer_zero(0x45);
  2866  005122  0E00               	movlw	0
  2867  005124  6E1C               	movwf	(write_timer_zero@timer0+1)^0,c
  2868  005126  0E45               	movlw	69
  2869  005128  6E1B               	movwf	write_timer_zero@timer0^0,c
  2870  00512A  ECFD  F028         	call	_write_timer_zero	;wreg free
  2871  00512E  0012               	return		;funcret
  2872  005130                     __end_of_config_timer_zero:
  2873                           	callstack 0
  2874                           
  2875 ;; *************** function _write_timer_zero *****************
  2876 ;; Defined at:
  2877 ;;		line 138 in file "bibliotecas/hardware.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  timer0          2   26[COMRAM] unsigned int 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      void 
  2884 ;; Registers used:
  2885 ;;		None
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2891 ;;      Params:         2       0       0       0       0       0       0       0       0
  2892 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2894 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2895 ;;Total ram usage:        2 bytes
  2896 ;; Hardware stack levels used: 1
  2897 ;; Hardware stack levels required when called: 3
  2898 ;; This function calls:
  2899 ;;		Nothing
  2900 ;; This function is called by:
  2901 ;;		_config_timer_zero
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text8
  2906  0051FA                     __ptext8:
  2907                           	callstack 0
  2908  0051FA                     _write_timer_zero:
  2909                           	callstack 25
  2910                           
  2911                           ;hardware.c: 146: TMR0 = timer0;
  2912                           
  2913                           ;incstack = 0
  2914  0051FA  C01B  FFD6         	movff	write_timer_zero@timer0,4054	;volatile
  2915  0051FE  C01C  FFD7         	movff	write_timer_zero@timer0+1,4055	;volatile
  2916  005202  0012               	return		;funcret
  2917  005204                     __end_of_write_timer_zero:
  2918                           	callstack 0
  2919                           
  2920 ;; *************** function _config_timer_dois *****************
  2921 ;; Defined at:
  2922 ;;		line 202 in file "bibliotecas/hardware.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;		None
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2936 ;;      Params:         0       0       0       0       0       0       0       0       0
  2937 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2939 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2940 ;;Total ram usage:        0 bytes
  2941 ;; Hardware stack levels used: 1
  2942 ;; Hardware stack levels required when called: 3
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_init_hardware
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text9
  2951  0051AE                     __ptext9:
  2952                           	callstack 0
  2953  0051AE                     _config_timer_dois:
  2954                           	callstack 26
  2955                           
  2956                           ;hardware.c: 204: T2CON = 0b00000100;
  2957                           
  2958                           ;incstack = 0
  2959  0051AE  0E04               	movlw	4
  2960  0051B0  6ECA               	movwf	202,c	;volatile
  2961                           
  2962                           ;hardware.c: 205: TMR2 = 0;
  2963  0051B2  0E00               	movlw	0
  2964  0051B4  6ECC               	movwf	204,c	;volatile
  2965                           
  2966                           ;hardware.c: 206: PR2 = 0x01;
  2967  0051B6  0E01               	movlw	1
  2968  0051B8  6ECB               	movwf	203,c	;volatile
  2969  0051BA  0012               	return		;funcret
  2970  0051BC                     __end_of_config_timer_dois:
  2971                           	callstack 0
  2972                           
  2973 ;; *************** function _inicializa_tarefas *****************
  2974 ;; Defined at:
  2975 ;;		line 176 in file "main.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 3F/1
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2989 ;;      Params:         0       0       0       0       0       0       0       0       0
  2990 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2992 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2993 ;;Total ram usage:        0 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 3
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_main
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text10
  3004  004912                     __ptext10:
  3005                           	callstack 0
  3006  004912                     _inicializa_tarefas:
  3007                           	callstack 27
  3008                           
  3009                           ;main.c: 179: p_tarefas[0] = verifica_dados_operacionais;
  3010                           
  3011                           ;incstack = 0
  3012  004912  0E2E               	movlw	low _verifica_dados_operacionais
  3013  004914  0101               	movlb	1	; () banked
  3014  004916  6F10               	movwf	_p_tarefas& (0+255),b
  3015  004918  0E52               	movlw	high _verifica_dados_operacionais
  3016  00491A  6F11               	movwf	(_p_tarefas+1)& (0+255),b
  3017                           
  3018                           ;main.c: 180: p_tarefas[1] = disparo_gravacao;
  3019  00491C  0E46               	movlw	low _disparo_gravacao
  3020  00491E  6F12               	movwf	(_p_tarefas+2)& (0+255),b
  3021  004920  0E51               	movlw	high _disparo_gravacao
  3022  004922  6F13               	movwf	(_p_tarefas+3)& (0+255),b
  3023                           
  3024                           ;main.c: 181: p_tarefas[2] = verifica_fence_externo;
  3025  004924  0E12               	movlw	low _verifica_fence_externo
  3026  004926  6F14               	movwf	(_p_tarefas+4)& (0+255),b
  3027  004928  0E00               	movlw	high _verifica_fence_externo
  3028  00492A  6F15               	movwf	(_p_tarefas+5)& (0+255),b
  3029                           
  3030                           ;main.c: 182: p_tarefas[3] = troca_de_tela;
  3031  00492C  0EC4               	movlw	low _troca_de_tela
  3032  00492E  6F16               	movwf	(_p_tarefas+6)& (0+255),b
  3033  004930  0E2A               	movlw	high _troca_de_tela
  3034  004932  6F17               	movwf	(_p_tarefas+7)& (0+255),b
  3035                           
  3036                           ; BSR set to: 1
  3037                           ;main.c: 186: tempo_backup[0] = 5000;
  3038  004934  0E13               	movlw	19
  3039  004936  6F09               	movwf	(_tempo_backup+1)& (0+255),b
  3040  004938  0E88               	movlw	136
  3041  00493A  6F08               	movwf	_tempo_backup& (0+255),b
  3042                           
  3043                           ; BSR set to: 1
  3044                           ;main.c: 187: tempo_backup[1] = 1000;
  3045  00493C  0E03               	movlw	3
  3046  00493E  6F0B               	movwf	(_tempo_backup+3)& (0+255),b
  3047  004940  0EE8               	movlw	232
  3048  004942  6F0A               	movwf	(_tempo_backup+2)& (0+255),b
  3049                           
  3050                           ; BSR set to: 1
  3051                           ;main.c: 188: tempo_backup[2] = 1000;
  3052  004944  0E03               	movlw	3
  3053  004946  6F0D               	movwf	(_tempo_backup+5)& (0+255),b
  3054  004948  0EE8               	movlw	232
  3055  00494A  6F0C               	movwf	(_tempo_backup+4)& (0+255),b
  3056                           
  3057                           ; BSR set to: 1
  3058                           ;main.c: 189: tempo_backup[3] = 100;
  3059  00494C  0E00               	movlw	0
  3060  00494E  6F0F               	movwf	(_tempo_backup+7)& (0+255),b
  3061  004950  0E64               	movlw	100
  3062  004952  6F0E               	movwf	(_tempo_backup+6)& (0+255),b
  3063                           
  3064                           ; BSR set to: 1
  3065                           ;main.c: 192: tempo_tarefa[0] = 5000;
  3066  004954  0E13               	movlw	19
  3067  004956  6F01               	movwf	(_tempo_tarefa+1)& (0+255),b
  3068  004958  0E88               	movlw	136
  3069  00495A  6F00               	movwf	_tempo_tarefa& (0+255),b
  3070                           
  3071                           ; BSR set to: 1
  3072                           ;main.c: 193: tempo_tarefa[1] = 1000;
  3073  00495C  0E03               	movlw	3
  3074  00495E  6F03               	movwf	(_tempo_tarefa+3)& (0+255),b
  3075  004960  0EE8               	movlw	232
  3076  004962  6F02               	movwf	(_tempo_tarefa+2)& (0+255),b
  3077                           
  3078                           ; BSR set to: 1
  3079                           ;main.c: 194: tempo_tarefa[2] = 1000;
  3080  004964  0E03               	movlw	3
  3081  004966  6F05               	movwf	(_tempo_tarefa+5)& (0+255),b
  3082  004968  0EE8               	movlw	232
  3083  00496A  6F04               	movwf	(_tempo_tarefa+4)& (0+255),b
  3084                           
  3085                           ; BSR set to: 1
  3086                           ;main.c: 195: tempo_tarefa[3] = 1000;
  3087  00496C  0E03               	movlw	3
  3088  00496E  6F07               	movwf	(_tempo_tarefa+7)& (0+255),b
  3089  004970  0EE8               	movlw	232
  3090  004972  6F06               	movwf	(_tempo_tarefa+6)& (0+255),b
  3091                           
  3092                           ; BSR set to: 1
  3093                           ;main.c: 197: tarefa_em_execucao = 0;
  3094  004974  0E00               	movlw	0
  3095  004976  6E41               	movwf	_tarefa_em_execucao^0,c	;volatile
  3096                           
  3097                           ; BSR set to: 1
  3098  004978  0012               	return		;funcret
  3099  00497A                     __end_of_inicializa_tarefas:
  3100                           	callstack 0
  3101                           
  3102 ;; *************** function _escalonador *****************
  3103 ;; Defined at:
  3104 ;;		line 208 in file "main.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;		None
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  cont            1  152[BANK0 ] unsigned char 
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  1    wreg      void 
  3111 ;; Registers used:
  3112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 3F/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3118 ;;      Params:         0       0       0       0       0       0       0       0       0
  3119 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3120 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3121 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3122 ;;Total ram usage:        3 bytes
  3123 ;; Hardware stack levels used: 1
  3124 ;; Hardware stack levels required when called: 17
  3125 ;; This function calls:
  3126 ;;		_disparo_gravacao
  3127 ;;		_troca_de_tela
  3128 ;;		_verifica_dados_operacionais
  3129 ;;		_verifica_fence_externo
  3130 ;; This function is called by:
  3131 ;;		_main
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text11
  3136  00408E                     __ptext11:
  3137                           	callstack 0
  3138  00408E                     _escalonador:
  3139                           	callstack 13
  3140                           
  3141                           ;main.c: 210: unsigned char cont;;main.c: 211: for(cont = 0; cont<4;cont++)
  3142                           
  3143                           ; BSR set to: 1
  3144                           ;incstack = 0
  3145  00408E  0E00               	movlw	0
  3146  004090  0100               	movlb	0	; () banked
  3147  004092  6FF8               	movwf	escalonador@cont& (0+255),b
  3148  004094                     l11883:
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;main.c: 212: {;main.c: 213: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  3152  004094  51F8               	movf	escalonador@cont& (0+255),w,b
  3153  004096  0D02               	mullw	2
  3154  004098  0E10               	movlw	low _p_tarefas
  3155  00409A  24F3               	addwf	243,w,c
  3156  00409C  6ED9               	movwf	fsr2l,c
  3157  00409E  0E01               	movlw	high _p_tarefas
  3158  0040A0  20F4               	addwfc	prodh,w,c
  3159  0040A2  6EDA               	movwf	fsr2h,c
  3160  0040A4  50DE               	movf	postinc2,w,c
  3161  0040A6  10DE               	iorwf	postinc2,w,c
  3162  0040A8  B4D8               	btfsc	status,2,c
  3163  0040AA  D03F               	goto	l11895
  3164                           
  3165                           ; BSR set to: 0
  3166  0040AC  51F8               	movf	escalonador@cont& (0+255),w,b
  3167  0040AE  0D02               	mullw	2
  3168  0040B0  0E00               	movlw	low _tempo_tarefa
  3169  0040B2  24F3               	addwf	243,w,c
  3170  0040B4  6ED9               	movwf	fsr2l,c
  3171  0040B6  0E01               	movlw	high _tempo_tarefa
  3172  0040B8  20F4               	addwfc	prodh,w,c
  3173  0040BA  6EDA               	movwf	fsr2h,c
  3174  0040BC  50DE               	movf	postinc2,w,c
  3175  0040BE  10DE               	iorwf	postinc2,w,c
  3176  0040C0  A4D8               	btfss	status,2,c
  3177  0040C2  D033               	goto	l11895
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;main.c: 214: {;main.c: 215: tarefa_em_execucao = 1;
  3181  0040C4  0E01               	movlw	1
  3182  0040C6  6E41               	movwf	_tarefa_em_execucao^0,c	;volatile
  3183                           
  3184                           ;main.c: 216: timeout_tarefa = 5000;
  3185  0040C8  0E13               	movlw	19
  3186  0040CA  0101               	movlb	1	; () banked
  3187  0040CC  6F23               	movwf	(_timeout_tarefa+1)& (0+255),b
  3188  0040CE  0E88               	movlw	136
  3189  0040D0  6F22               	movwf	_timeout_tarefa& (0+255),b
  3190                           
  3191                           ; BSR set to: 1
  3192                           ;main.c: 217: p_tarefas[cont]();
  3193  0040D2  0100               	movlb	0	; () banked
  3194  0040D4  51F8               	movf	escalonador@cont& (0+255),w,b
  3195  0040D6  0D02               	mullw	2
  3196  0040D8  0E10               	movlw	low _p_tarefas
  3197  0040DA  24F3               	addwf	243,w,c
  3198  0040DC  6ED9               	movwf	fsr2l,c
  3199  0040DE  0E01               	movlw	high _p_tarefas
  3200  0040E0  20F4               	addwfc	prodh,w,c
  3201  0040E2  6EDA               	movwf	fsr2h,c
  3202  0040E4  D801               	call	u15548
  3203  0040E6  D00A               	goto	u15549
  3204  0040E8                     u15548:
  3205  0040E8  0005               	push	
  3206  0040EA  6EFA               	movwf	pclath,c
  3207  0040EC  50DE               	movf	postinc2,w,c
  3208  0040EE  6EFD               	movwf	tosl,c
  3209  0040F0  50DE               	movf	postinc2,w,c
  3210  0040F2  6EFE               	movwf	tosh,c
  3211  0040F4  50F8               	movf	tblptru,w,c
  3212  0040F6  6EFF               	movwf	tosu,c
  3213  0040F8  50FA               	movf	pclath,w,c
  3214  0040FA  0012               	return		;indir
  3215  0040FC                     u15549:
  3216                           
  3217                           ;main.c: 218: tarefa_em_execucao = 0;
  3218  0040FC  0E00               	movlw	0
  3219  0040FE  6E41               	movwf	_tarefa_em_execucao^0,c	;volatile
  3220                           
  3221                           ;main.c: 219: tempo_tarefa[cont] = tempo_backup[cont];
  3222  004100  0100               	movlb	0	; () banked
  3223  004102  51F8               	movf	escalonador@cont& (0+255),w,b
  3224  004104  0D02               	mullw	2
  3225  004106  0E08               	movlw	low _tempo_backup
  3226  004108  24F3               	addwf	243,w,c
  3227  00410A  6ED9               	movwf	fsr2l,c
  3228  00410C  0E01               	movlw	high _tempo_backup
  3229  00410E  20F4               	addwfc	prodh,w,c
  3230  004110  6EDA               	movwf	fsr2h,c
  3231  004112  51F8               	movf	escalonador@cont& (0+255),w,b
  3232  004114  0D02               	mullw	2
  3233  004116  0E00               	movlw	low _tempo_tarefa
  3234  004118  24F3               	addwf	243,w,c
  3235  00411A  6EE1               	movwf	fsr1l,c
  3236  00411C  0E01               	movlw	high _tempo_tarefa
  3237  00411E  20F4               	addwfc	prodh,w,c
  3238  004120  6EE2               	movwf	fsr1h,c
  3239  004122  CFDE FFE6          	movff	postinc2,postinc1
  3240  004126  CFDD FFE5          	movff	postdec2,postdec1
  3241  00412A                     l11895:
  3242                           
  3243                           ; BSR set to: 0
  3244  00412A  2BF8               	incf	escalonador@cont& (0+255),f,b
  3245                           
  3246                           ; BSR set to: 0
  3247  00412C  0E03               	movlw	3
  3248  00412E  65F8               	cpfsgt	escalonador@cont& (0+255),b
  3249  004130  D7B1               	goto	l11883
  3250  004132  0012               	return	
  3251  004134                     __end_of_escalonador:
  3252                           	callstack 0
  3253                           
  3254 ;; *************** function _troca_de_tela *****************
  3255 ;; Defined at:
  3256 ;;		line 641 in file "main.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3265 ;; Tracked objects:
  3266 ;;		On entry : 3F/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3270 ;;      Params:         0       0       0       0       0       0       0       0       0
  3271 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3272 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3273 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3274 ;;Total ram usage:        2 bytes
  3275 ;; Hardware stack levels used: 1
  3276 ;; Hardware stack levels required when called: 6
  3277 ;; This function calls:
  3278 ;;		_Latitude
  3279 ;;		_Longitude
  3280 ;;		_escreve_cmd_lcd
  3281 ;;		_escreve_frase_ram_lcd
  3282 ;;		_fix
  3283 ;;		_posicao_cursor_lcd
  3284 ;; This function is called by:
  3285 ;;		_inicializa_tarefas
  3286 ;;		_escalonador
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text12
  3291  002AC4                     __ptext12:
  3292                           	callstack 0
  3293  002AC4                     _troca_de_tela:
  3294                           	callstack 23
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;main.c: 644: static unsigned char state = 0;;main.c: 645: static unsigned char last_sta
      +                          te = 0;;;main.c: 649: if(!PORTEbits.RE0 && !flag[2].point || (state == 1 ))
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;incstack = 0
  3301  002AC4  B084               	btfsc	132,0,c	;volatile
  3302  002AC6  D002               	goto	u14930
  3303                           
  3304                           ; BSR set to: 0
  3305  002AC8  A02E               	btfss	(_flag+2)^0,0,c
  3306  002ACA  D003               	goto	u14940
  3307  002ACC                     u14930:
  3308                           
  3309                           ; BSR set to: 0
  3310  002ACC  0440               	decf	troca_de_tela@state^0,w,c
  3311  002ACE  A4D8               	btfss	status,2,c
  3312  002AD0  D046               	goto	l11545
  3313  002AD2                     u14940:
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;main.c: 650: {;main.c: 652: if(!time_atualizacao)
  3317  002AD2  5033               	movf	_time_atualizacao^0,w,c
  3318  002AD4  1034               	iorwf	(_time_atualizacao+1)^0,w,c
  3319  002AD6  A4D8               	btfss	status,2,c
  3320  002AD8  D013               	goto	l11525
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;main.c: 653: {;main.c: 655: posicao_cursor_lcd(2,6);
  3324  002ADA  0E06               	movlw	6
  3325  002ADC  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  3326  002ADE  0E02               	movlw	2
  3327  002AE0  ECF0  F024         	call	_posicao_cursor_lcd
  3328                           
  3329                           ;main.c: 656: escreve_frase_ram_lcd(fix());
  3330  002AE4  EC15  F029         	call	_fix	;wreg free
  3331  002AE8  6E21               	movwf	??_troca_de_tela^0,c
  3332  002AEA  6A22               	clrf	(??_troca_de_tela+1)^0,c
  3333  002AEC  C021  F01E         	movff	??_troca_de_tela,escreve_frase_ram_lcd@buffer
  3334  002AF0  C022  F01F         	movff	??_troca_de_tela+1,escreve_frase_ram_lcd@buffer+1
  3335  002AF4  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3336                           
  3337                           ;main.c: 657: time_atualizacao = 10000;
  3338  002AF8  0E27               	movlw	39
  3339  002AFA  6E34               	movwf	(_time_atualizacao+1)^0,c
  3340  002AFC  0E10               	movlw	16
  3341  002AFE  6E33               	movwf	_time_atualizacao^0,c
  3342  002B00                     l11525:
  3343                           
  3344                           ;main.c: 658: };main.c: 660: if(last_state != 1)
  3345  002B00  043F               	decf	troca_de_tela@last_state^0,w,c
  3346  002B02  B4D8               	btfsc	status,2,c
  3347  002B04  D02A               	goto	l11543
  3348                           
  3349                           ;main.c: 661: {;main.c: 662: state = 1;
  3350  002B06  0E01               	movlw	1
  3351  002B08  6E40               	movwf	troca_de_tela@state^0,c
  3352                           
  3353                           ;main.c: 663: escreve_cmd_lcd(0b00000001);
  3354  002B0A  0E01               	movlw	1
  3355  002B0C  EC61  F022         	call	_escreve_cmd_lcd
  3356                           
  3357                           ;main.c: 664: posicao_cursor_lcd(1,0);
  3358  002B10  0E00               	movlw	0
  3359  002B12  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  3360  002B14  0E01               	movlw	1
  3361  002B16  ECF0  F024         	call	_posicao_cursor_lcd
  3362                           
  3363                           ;main.c: 665: escreve_frase_ram_lcd("RPM:");
  3364  002B1A  0E6B               	movlw	low STR_2
  3365  002B1C  6E1E               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3366  002B1E  0E62               	movlw	high STR_2
  3367  002B20  6E1F               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3368  002B22  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3369                           
  3370                           ;main.c: 666: posicao_cursor_lcd(2,0);
  3371  002B26  0E00               	movlw	0
  3372  002B28  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  3373  002B2A  0E02               	movlw	2
  3374  002B2C  ECF0  F024         	call	_posicao_cursor_lcd
  3375                           
  3376                           ;main.c: 667: escreve_frase_ram_lcd("VEL:");
  3377  002B30  0E66               	movlw	low STR_3
  3378  002B32  6E1E               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3379  002B34  0E62               	movlw	high STR_3
  3380  002B36  6E1F               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3381  002B38  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3382                           
  3383                           ;main.c: 668: posicao_cursor_lcd(2,6);
  3384  002B3C  0E06               	movlw	6
  3385  002B3E  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  3386  002B40  0E02               	movlw	2
  3387  002B42  ECF0  F024         	call	_posicao_cursor_lcd
  3388                           
  3389                           ;main.c: 669: escreve_frase_ram_lcd(fix());
  3390  002B46  EC15  F029         	call	_fix	;wreg free
  3391  002B4A  6E21               	movwf	??_troca_de_tela^0,c
  3392  002B4C  6A22               	clrf	(??_troca_de_tela+1)^0,c
  3393  002B4E  C021  F01E         	movff	??_troca_de_tela,escreve_frase_ram_lcd@buffer
  3394  002B52  C022  F01F         	movff	??_troca_de_tela+1,escreve_frase_ram_lcd@buffer+1
  3395  002B56  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3396  002B5A                     l11543:
  3397                           
  3398                           ;main.c: 670: };main.c: 671: last_state = 1;
  3399  002B5A  0E01               	movlw	1
  3400  002B5C  6E3F               	movwf	troca_de_tela@last_state^0,c
  3401  002B5E                     l11545:
  3402                           
  3403                           ;main.c: 673: };main.c: 676: if(!PORTEbits.RE1 && !flag[2].point || (state == 2))
  3404  002B5E  B284               	btfsc	132,1,c	;volatile
  3405  002B60  D002               	goto	u14980
  3406  002B62  A02E               	btfss	(_flag+2)^0,0,c
  3407  002B64  D004               	goto	u14990
  3408  002B66                     u14980:
  3409  002B66  0E02               	movlw	2
  3410  002B68  1840               	xorwf	troca_de_tela@state^0,w,c
  3411  002B6A  A4D8               	btfss	status,2,c
  3412  002B6C  D06D               	goto	l11589
  3413  002B6E                     u14990:
  3414                           
  3415                           ;main.c: 677: {;main.c: 678: if(!time_atualizacao)
  3416  002B6E  5033               	movf	_time_atualizacao^0,w,c
  3417  002B70  1034               	iorwf	(_time_atualizacao+1)^0,w,c
  3418  002B72  A4D8               	btfss	status,2,c
  3419  002B74  D026               	goto	l11561
  3420                           
  3421                           ;main.c: 679: {;main.c: 680: point_buff_gps_lat = Latitude();
  3422  002B76  EC07  F029         	call	_Latitude	;wreg free
  3423  002B7A  C01B  F031         	movff	?_Latitude,_point_buff_gps_lat
  3424  002B7E  C01C  F032         	movff	?_Latitude+1,_point_buff_gps_lat+1
  3425                           
  3426                           ;main.c: 681: point_buff_gps_long = Longitude();
  3427  002B82  EC02  F029         	call	_Longitude	;wreg free
  3428  002B86  C01B  F02F         	movff	?_Longitude,_point_buff_gps_long
  3429  002B8A  C01C  F030         	movff	?_Longitude+1,_point_buff_gps_long+1
  3430                           
  3431                           ;main.c: 682: posicao_cursor_lcd(1,4);
  3432  002B8E  0E04               	movlw	4
  3433  002B90  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  3434  002B92  0E01               	movlw	1
  3435  002B94  ECF0  F024         	call	_posicao_cursor_lcd
  3436                           
  3437                           ;main.c: 683: escreve_frase_ram_lcd(point_buff_gps_lat);
  3438  002B98  C031  F01E         	movff	_point_buff_gps_lat,escreve_frase_ram_lcd@buffer
  3439  002B9C  C032  F01F         	movff	_point_buff_gps_lat+1,escreve_frase_ram_lcd@buffer+1
  3440  002BA0  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3441                           
  3442                           ;main.c: 684: posicao_cursor_lcd(2,4);
  3443  002BA4  0E04               	movlw	4
  3444  002BA6  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  3445  002BA8  0E02               	movlw	2
  3446  002BAA  ECF0  F024         	call	_posicao_cursor_lcd
  3447                           
  3448                           ;main.c: 685: escreve_frase_ram_lcd(point_buff_gps_long);
  3449  002BAE  C02F  F01E         	movff	_point_buff_gps_long,escreve_frase_ram_lcd@buffer
  3450  002BB2  C030  F01F         	movff	_point_buff_gps_long+1,escreve_frase_ram_lcd@buffer+1
  3451  002BB6  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3452                           
  3453                           ;main.c: 686: time_atualizacao = 2000;
  3454  002BBA  0E07               	movlw	7
  3455  002BBC  6E34               	movwf	(_time_atualizacao+1)^0,c
  3456  002BBE  0ED0               	movlw	208
  3457  002BC0  6E33               	movwf	_time_atualizacao^0,c
  3458  002BC2                     l11561:
  3459                           
  3460                           ;main.c: 687: };main.c: 690: if(last_state != 2)
  3461  002BC2  0E02               	movlw	2
  3462  002BC4  183F               	xorwf	troca_de_tela@last_state^0,w,c
  3463  002BC6  B4D8               	btfsc	status,2,c
  3464  002BC8  D03D               	goto	l11587
  3465                           
  3466                           ;main.c: 691: {;main.c: 692: state = 2;
  3467  002BCA  0E02               	movlw	2
  3468  002BCC  6E40               	movwf	troca_de_tela@state^0,c
  3469                           
  3470                           ;main.c: 693: escreve_cmd_lcd(0b00000001);
  3471  002BCE  0E01               	movlw	1
  3472  002BD0  EC61  F022         	call	_escreve_cmd_lcd
  3473                           
  3474                           ;main.c: 694: point_buff_gps_lat = Latitude();
  3475  002BD4  EC07  F029         	call	_Latitude	;wreg free
  3476  002BD8  C01B  F031         	movff	?_Latitude,_point_buff_gps_lat
  3477  002BDC  C01C  F032         	movff	?_Latitude+1,_point_buff_gps_lat+1
  3478                           
  3479                           ;main.c: 695: point_buff_gps_long = Longitude();
  3480  002BE0  EC02  F029         	call	_Longitude	;wreg free
  3481  002BE4  C01B  F02F         	movff	?_Longitude,_point_buff_gps_long
  3482  002BE8  C01C  F030         	movff	?_Longitude+1,_point_buff_gps_long+1
  3483                           
  3484                           ;main.c: 696: posicao_cursor_lcd(1,0);
  3485  002BEC  0E00               	movlw	0
  3486  002BEE  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  3487  002BF0  0E01               	movlw	1
  3488  002BF2  ECF0  F024         	call	_posicao_cursor_lcd
  3489                           
  3490                           ;main.c: 697: escreve_frase_ram_lcd("lt:");
  3491  002BF6  0E78               	movlw	low STR_4
  3492  002BF8  6E1E               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3493  002BFA  0E62               	movlw	high STR_4
  3494  002BFC  6E1F               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3495  002BFE  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3496                           
  3497                           ;main.c: 698: posicao_cursor_lcd(1,4);
  3498  002C02  0E04               	movlw	4
  3499  002C04  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  3500  002C06  0E01               	movlw	1
  3501  002C08  ECF0  F024         	call	_posicao_cursor_lcd
  3502                           
  3503                           ;main.c: 699: escreve_frase_ram_lcd(point_buff_gps_lat);
  3504  002C0C  C031  F01E         	movff	_point_buff_gps_lat,escreve_frase_ram_lcd@buffer
  3505  002C10  C032  F01F         	movff	_point_buff_gps_lat+1,escreve_frase_ram_lcd@buffer+1
  3506  002C14  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3507                           
  3508                           ;main.c: 700: posicao_cursor_lcd(2,0);
  3509  002C18  0E00               	movlw	0
  3510  002C1A  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  3511  002C1C  0E02               	movlw	2
  3512  002C1E  ECF0  F024         	call	_posicao_cursor_lcd
  3513                           
  3514                           ;main.c: 701: escreve_frase_ram_lcd("lo:");
  3515  002C22  0E74               	movlw	low STR_5
  3516  002C24  6E1E               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3517  002C26  0E62               	movlw	high STR_5
  3518  002C28  6E1F               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3519  002C2A  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3520                           
  3521                           ;main.c: 702: posicao_cursor_lcd(2,4);
  3522  002C2E  0E04               	movlw	4
  3523  002C30  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  3524  002C32  0E02               	movlw	2
  3525  002C34  ECF0  F024         	call	_posicao_cursor_lcd
  3526                           
  3527                           ;main.c: 703: escreve_frase_ram_lcd(point_buff_gps_long);
  3528  002C38  C02F  F01E         	movff	_point_buff_gps_long,escreve_frase_ram_lcd@buffer
  3529  002C3C  C030  F01F         	movff	_point_buff_gps_long+1,escreve_frase_ram_lcd@buffer+1
  3530  002C40  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3531  002C44                     l11587:
  3532                           
  3533                           ;main.c: 704: };main.c: 705: last_state = 2;
  3534  002C44  0E02               	movlw	2
  3535  002C46  6E3F               	movwf	troca_de_tela@last_state^0,c
  3536  002C48                     l11589:
  3537                           
  3538                           ;main.c: 706: };main.c: 710: if(flag[2].point || state == 3)
  3539  002C48  B02E               	btfsc	(_flag+2)^0,0,c
  3540  002C4A  D004               	goto	u15030
  3541  002C4C  0E03               	movlw	3
  3542  002C4E  1840               	xorwf	troca_de_tela@state^0,w,c
  3543  002C50  A4D8               	btfss	status,2,c
  3544  002C52  D01E               	goto	l11609
  3545  002C54                     u15030:
  3546                           
  3547                           ;main.c: 711: {;main.c: 713: if(!time_atualizacao)
  3548  002C54  5033               	movf	_time_atualizacao^0,w,c
  3549  002C56  1034               	iorwf	(_time_atualizacao+1)^0,w,c
  3550  002C58  A4D8               	btfss	status,2,c
  3551  002C5A  D004               	goto	l11597
  3552                           
  3553                           ;main.c: 714: {;main.c: 715: time_atualizacao = 10000;
  3554  002C5C  0E27               	movlw	39
  3555  002C5E  6E34               	movwf	(_time_atualizacao+1)^0,c
  3556  002C60  0E10               	movlw	16
  3557  002C62  6E33               	movwf	_time_atualizacao^0,c
  3558  002C64                     l11597:
  3559                           
  3560                           ;main.c: 716: };main.c: 718: if(last_state != 3)
  3561  002C64  0E03               	movlw	3
  3562  002C66  183F               	xorwf	troca_de_tela@last_state^0,w,c
  3563  002C68  B4D8               	btfsc	status,2,c
  3564  002C6A  D010               	goto	l11607
  3565                           
  3566                           ;main.c: 719: {;main.c: 720: state = 3;
  3567  002C6C  0E03               	movlw	3
  3568  002C6E  6E40               	movwf	troca_de_tela@state^0,c
  3569                           
  3570                           ;main.c: 721: escreve_cmd_lcd(0b00000001);
  3571  002C70  0E01               	movlw	1
  3572  002C72  EC61  F022         	call	_escreve_cmd_lcd
  3573                           
  3574                           ;main.c: 722: posicao_cursor_lcd(2,0);
  3575  002C76  0E00               	movlw	0
  3576  002C78  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  3577  002C7A  0E02               	movlw	2
  3578  002C7C  ECF0  F024         	call	_posicao_cursor_lcd
  3579                           
  3580                           ;main.c: 723: escreve_frase_ram_lcd("D_Fence:");
  3581  002C80  0E49               	movlw	low STR_6
  3582  002C82  6E1E               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3583  002C84  0E62               	movlw	high STR_6
  3584  002C86  6E1F               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3585  002C88  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3586  002C8C                     l11607:
  3587                           
  3588                           ;main.c: 724: };main.c: 725: last_state = 3;
  3589  002C8C  0E03               	movlw	3
  3590  002C8E  6E3F               	movwf	troca_de_tela@last_state^0,c
  3591  002C90                     l11609:
  3592                           
  3593                           ;main.c: 726: };main.c: 734: if((!PORTEbits.RE1 && state!=0) && !flag[2].point )
  3594  002C90  B284               	btfsc	132,1,c	;volatile
  3595  002C92  D025               	goto	l11631
  3596  002C94  5040               	movf	troca_de_tela@state^0,w,c
  3597  002C96  A4D8               	btfss	status,2,c
  3598  002C98  B02E               	btfsc	(_flag+2)^0,0,c
  3599  002C9A  D021               	goto	l11631
  3600                           
  3601                           ;main.c: 735: {;main.c: 736: if(last_state != 4)
  3602  002C9C  0E04               	movlw	4
  3603  002C9E  183F               	xorwf	troca_de_tela@last_state^0,w,c
  3604  002CA0  B4D8               	btfsc	status,2,c
  3605  002CA2  D01B               	goto	l11629
  3606                           
  3607                           ;main.c: 737: {;main.c: 738: escreve_cmd_lcd(0b00000001);
  3608  002CA4  0E01               	movlw	1
  3609  002CA6  EC61  F022         	call	_escreve_cmd_lcd
  3610                           
  3611                           ;main.c: 739: state = 0;
  3612  002CAA  0E00               	movlw	0
  3613  002CAC  6E40               	movwf	troca_de_tela@state^0,c
  3614                           
  3615                           ;main.c: 740: posicao_cursor_lcd(1,0);
  3616  002CAE  0E00               	movlw	0
  3617  002CB0  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  3618  002CB2  0E01               	movlw	1
  3619  002CB4  ECF0  F024         	call	_posicao_cursor_lcd
  3620                           
  3621                           ;main.c: 741: escreve_frase_ram_lcd("B1:RPM B2:FENCE");
  3622  002CB8  0EC4               	movlw	low STR_7
  3623  002CBA  6E1E               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3624  002CBC  0E61               	movlw	high STR_7
  3625  002CBE  6E1F               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3626  002CC0  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3627                           
  3628                           ;main.c: 742: posicao_cursor_lcd(2,0);
  3629  002CC4  0E00               	movlw	0
  3630  002CC6  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  3631  002CC8  0E02               	movlw	2
  3632  002CCA  ECF0  F024         	call	_posicao_cursor_lcd
  3633                           
  3634                           ;main.c: 743: escreve_frase_ram_lcd("B2:HOME");
  3635  002CCE  0E52               	movlw	low STR_8
  3636  002CD0  6E1E               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3637  002CD2  0E62               	movlw	high STR_8
  3638  002CD4  6E1F               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3639  002CD6  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3640  002CDA                     l11629:
  3641                           
  3642                           ;main.c: 744: };main.c: 745: last_state = 4;
  3643  002CDA  0E04               	movlw	4
  3644  002CDC  6E3F               	movwf	troca_de_tela@last_state^0,c
  3645  002CDE                     l11631:
  3646                           
  3647                           ;main.c: 746: };main.c: 748: if(!state && !flag[2].point)
  3648  002CDE  5040               	movf	troca_de_tela@state^0,w,c
  3649  002CE0  A4D8               	btfss	status,2,c
  3650  002CE2  0012               	return	
  3651  002CE4  B02E               	btfsc	(_flag+2)^0,0,c
  3652  002CE6  0012               	return	
  3653                           
  3654                           ;main.c: 749: {;main.c: 750: if(last_state != 4)
  3655  002CE8  0E04               	movlw	4
  3656  002CEA  183F               	xorwf	troca_de_tela@last_state^0,w,c
  3657  002CEC  B4D8               	btfsc	status,2,c
  3658  002CEE  D019               	goto	l11643
  3659                           
  3660                           ;main.c: 751: {;main.c: 752: escreve_cmd_lcd(0b00000001);
  3661  002CF0  0E01               	movlw	1
  3662  002CF2  EC61  F022         	call	_escreve_cmd_lcd
  3663                           
  3664                           ;main.c: 753: posicao_cursor_lcd(1,0);
  3665  002CF6  0E00               	movlw	0
  3666  002CF8  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  3667  002CFA  0E01               	movlw	1
  3668  002CFC  ECF0  F024         	call	_posicao_cursor_lcd
  3669                           
  3670                           ;main.c: 754: escreve_frase_ram_lcd("B1:RPM  B2:FENCE");
  3671  002D00  0E73               	movlw	low STR_9
  3672  002D02  6E1E               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3673  002D04  0E61               	movlw	high STR_9
  3674  002D06  6E1F               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3675  002D08  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3676                           
  3677                           ;main.c: 755: posicao_cursor_lcd(2,0);
  3678  002D0C  0E00               	movlw	0
  3679  002D0E  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  3680  002D10  0E02               	movlw	2
  3681  002D12  ECF0  F024         	call	_posicao_cursor_lcd
  3682                           
  3683                           ;main.c: 756: escreve_frase_ram_lcd("B2:HOME");
  3684  002D16  0E52               	movlw	low STR_8
  3685  002D18  6E1E               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3686  002D1A  0E62               	movlw	high STR_8
  3687  002D1C  6E1F               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3688  002D1E  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  3689  002D22                     l11643:
  3690                           
  3691                           ;main.c: 757: };main.c: 758: last_state = 4;
  3692  002D22  0E04               	movlw	4
  3693  002D24  6E3F               	movwf	troca_de_tela@last_state^0,c
  3694  002D26  0012               	return		;funcret
  3695  002D28                     __end_of_troca_de_tela:
  3696                           	callstack 0
  3697                           
  3698 ;; *************** function _disparo_gravacao *****************
  3699 ;; Defined at:
  3700 ;;		line 620 in file "main.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;		None
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;		None
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  1    wreg      void 
  3707 ;; Registers used:
  3708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3709 ;; Tracked objects:
  3710 ;;		On entry : 3F/0
  3711 ;;		On exit  : 3F/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3714 ;;      Params:         0       0       0       0       0       0       0       0       0
  3715 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3716 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3717 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3718 ;;Total ram usage:        0 bytes
  3719 ;; Hardware stack levels used: 1
  3720 ;; Hardware stack levels required when called: 16
  3721 ;; This function calls:
  3722 ;;		_escrita_sdcard
  3723 ;; This function is called by:
  3724 ;;		_inicializa_tarefas
  3725 ;;		_escalonador
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text13
  3730  005146                     __ptext13:
  3731                           	callstack 0
  3732  005146                     _disparo_gravacao:
  3733                           	callstack 13
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;main.c: 622: if(!time_sd)
  3737                           
  3738                           ;incstack = 0
  3739  005146  5035               	movf	_time_sd^0,w,c
  3740  005148  1036               	iorwf	(_time_sd+1)^0,w,c
  3741  00514A  A4D8               	btfss	status,2,c
  3742  00514C  0012               	return	
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;main.c: 623: {;main.c: 626: escrita_sdcard();
  3746  00514E  EC22  F01F         	call	_escrita_sdcard	;wreg free
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;main.c: 627: time_sd = 30000;
  3750  005152  0E75               	movlw	117
  3751  005154  6E36               	movwf	(_time_sd+1)^0,c
  3752  005156  0E30               	movlw	48
  3753  005158  6E35               	movwf	_time_sd^0,c
  3754                           
  3755                           ; BSR set to: 0
  3756  00515A  0012               	return		;funcret
  3757  00515C                     __end_of_disparo_gravacao:
  3758                           	callstack 0
  3759                           
  3760 ;; *************** function _verifica_dados_operacionais *****************
  3761 ;; Defined at:
  3762 ;;		line 600 in file "main.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;		None
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;		None
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      void 
  3769 ;; Registers used:
  3770 ;;		None
  3771 ;; Tracked objects:
  3772 ;;		On entry : 3F/0
  3773 ;;		On exit  : 3F/0
  3774 ;;		Unchanged: 3F/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3776 ;;      Params:         0       0       0       0       0       0       0       0       0
  3777 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3778 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3779 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3780 ;;Total ram usage:        0 bytes
  3781 ;; Hardware stack levels used: 1
  3782 ;; Hardware stack levels required when called: 3
  3783 ;; This function calls:
  3784 ;;		Nothing
  3785 ;; This function is called by:
  3786 ;;		_inicializa_tarefas
  3787 ;;		_escalonador
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           	psect	text14
  3792  00522E                     __ptext14:
  3793                           	callstack 0
  3794  00522E                     _verifica_dados_operacionais:
  3795                           	callstack 26
  3796                           
  3797                           ; BSR set to: 0
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;incstack = 0
  3801  00522E  0012               	return		;funcret
  3802  005230                     __end_of_verifica_dados_operacionais:
  3803                           	callstack 0
  3804                           
  3805 ;; *************** function _verifica_fence_externo *****************
  3806 ;; Defined at:
  3807 ;;		line 279 in file "main.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;		None
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  fence_diff_l   48   18[BANK0 ] unsigned char [12][4]
  3812 ;;  fence_diff_l   44   66[BANK0 ] unsigned char [11][4]
  3813 ;;  temp_buff_lo   12  110[BANK0 ] unsigned char [12]
  3814 ;;  temp_buff_la   11  122[BANK0 ] unsigned char [11]
  3815 ;;  temp_var_deg    4  133[BANK0 ] unsigned long 
  3816 ;;  point_buff      3    0        PTR unsigned char 
  3817 ;;  i               1  142[BANK0 ] unsigned char 
  3818 ;;  point           1  141[BANK0 ] unsigned char 
  3819 ;;  count           1  140[BANK0 ] unsigned char 
  3820 ;;  j               1  139[BANK0 ] unsigned char 
  3821 ;;  point_dif_lo    1  138[BANK0 ] unsigned char 
  3822 ;;  point_dif_la    1  137[BANK0 ] unsigned char 
  3823 ;;  count_index     1    0        unsigned char 
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3828 ;; Tracked objects:
  3829 ;;		On entry : 3F/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3833 ;;      Params:         0       0       0       0       0       0       0       0       0
  3834 ;;      Locals:         0     125       0       0       0       0       0       0       0
  3835 ;;      Temps:          0       6       0       0       0       0       0       0       0
  3836 ;;      Totals:         0     131       0       0       0       0       0       0       0
  3837 ;;Total ram usage:      131 bytes
  3838 ;; Hardware stack levels used: 1
  3839 ;; Hardware stack levels required when called: 7
  3840 ;; This function calls:
  3841 ;;		_Latitude
  3842 ;;		_Longitude
  3843 ;;		_atoi
  3844 ;;		_escreve_frase_ram_lcd
  3845 ;;		_escreve_inteiro_lcd
  3846 ;;		_posicao_cursor_lcd
  3847 ;; This function is called by:
  3848 ;;		_inicializa_tarefas
  3849 ;;		_escalonador
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text15
  3854  000012                     __ptext15:
  3855                           	callstack 0
  3856  000012                     _verifica_fence_externo:
  3857                           	callstack 22
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;main.c: 281: unsigned char fence_diff_lat[4][11] = {"-2342.07112", "-2342.07112", "-234
      +                          2.11784", "-2342.11784"};
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;incstack = 0
  3864  000012  EE22  F0A4         	lfsr	2,verifica_fence_externo@F3640
  3865  000016  EE10  F0A2         	lfsr	1,verifica_fence_externo@fence_diff_lat
  3866  00001A  0E2B               	movlw	43
  3867  00001C                     u14181:
  3868  00001C  CFDB FFE3          	movff	plusw2,plusw1
  3869  000020  06E8               	decf	wreg,f,c
  3870  000022  E2FC               	bc	u14181
  3871                           
  3872                           ;main.c: 282: unsigned char fence_diff_long[4][12] = {"-04629.73477", "-04629.68601", "-
      +                          04629.68601", "-04629.73477"};
  3873  000024  EE22  F074         	lfsr	2,verifica_fence_externo@F3643
  3874  000028  EE10  F072         	lfsr	1,verifica_fence_externo@fence_diff_long
  3875  00002C  0E2F               	movlw	47
  3876  00002E                     u14191:
  3877  00002E  CFDB FFE3          	movff	plusw2,plusw1
  3878  000032  06E8               	decf	wreg,f,c
  3879  000034  E2FC               	bc	u14191
  3880                           
  3881                           ;main.c: 292: unsigned char *point_buff, i, j, count, count_index;;main.c: 293: unsigned
      +                           char point, point_dif_lat ,point_dif_long;;main.c: 294: unsigned long int temp_var_deg;
      +                          ;main.c: 295: unsigned char temp_buff_lat[11] = "-2342.07112";
  3882  000036  EE22  F0DC         	lfsr	2,verifica_fence_externo@F3654
  3883  00003A  EE10  F0DA         	lfsr	1,verifica_fence_externo@temp_buff_lat
  3884  00003E  0E0A               	movlw	10
  3885  000040                     u14201:
  3886  000040  CFDB FFE3          	movff	plusw2,plusw1
  3887  000044  06E8               	decf	wreg,f,c
  3888  000046  E2FC               	bc	u14201
  3889                           
  3890                           ;main.c: 296: unsigned char temp_buff_long[12] = "-04629.68677";
  3891  000048  EE22  F0D0         	lfsr	2,verifica_fence_externo@F3656
  3892  00004C  EE10  F0CE         	lfsr	1,verifica_fence_externo@temp_buff_long
  3893  000050  0E0B               	movlw	11
  3894  000052                     u14211:
  3895  000052  CFDB FFE3          	movff	plusw2,plusw1
  3896  000056  06E8               	decf	wreg,f,c
  3897  000058  E2FC               	bc	u14211
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;main.c: 297: count = 0;
  3901  00005A  0E00               	movlw	0
  3902  00005C  6FEC               	movwf	verifica_fence_externo@count& (0+255),b
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;main.c: 298: point = 0;
  3906  00005E  0E00               	movlw	0
  3907  000060  6FED               	movwf	verifica_fence_externo@point& (0+255),b
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;main.c: 299: point_dif_lat = 0;
  3911  000062  0E00               	movlw	0
  3912  000064  6FE9               	movwf	verifica_fence_externo@point_dif_lat& (0+255),b
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;main.c: 300: point_dif_long = 0;
  3916  000066  0E00               	movlw	0
  3917  000068  6FEA               	movwf	verifica_fence_externo@point_dif_long& (0+255),b
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;main.c: 304: point_buff_gps_lat = Latitude();
  3921                           
  3922                           ; BSR set to: 0
  3923  00006A  EC07  F029         	call	_Latitude	;wreg free
  3924  00006E  C01B  F031         	movff	?_Latitude,_point_buff_gps_lat
  3925  000072  C01C  F032         	movff	?_Latitude+1,_point_buff_gps_lat+1
  3926                           
  3927                           ;main.c: 305: point_buff_gps_long = Longitude();
  3928  000076  EC02  F029         	call	_Longitude	;wreg free
  3929  00007A  C01B  F02F         	movff	?_Longitude,_point_buff_gps_long
  3930  00007E  C01C  F030         	movff	?_Longitude+1,_point_buff_gps_long+1
  3931                           
  3932                           ;main.c: 311: for(i=0; i<11; i++)
  3933  000082  0E00               	movlw	0
  3934  000084  0100               	movlb	0	; () banked
  3935  000086  6FEE               	movwf	verifica_fence_externo@i& (0+255),b
  3936  000088                     l11221:
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;main.c: 312: {;main.c: 313: temp_buff_lat[i] = *point_buff_gps_lat;
  3940  000088  C031  FFD9         	movff	_point_buff_gps_lat,fsr2l
  3941  00008C  C032  FFDA         	movff	_point_buff_gps_lat+1,fsr2h
  3942  000090  51EE               	movf	verifica_fence_externo@i& (0+255),w,b
  3943  000092  0FDA               	addlw	low verifica_fence_externo@temp_buff_lat
  3944  000094  6EE1               	movwf	fsr1l,c
  3945  000096  6AE2               	clrf	fsr1h,c
  3946  000098  CFDF FFE7          	movff	indf2,indf1
  3947                           
  3948                           ;main.c: 314: temp_buff_long[i] = *point_buff_gps_long;
  3949  00009C  C02F  FFD9         	movff	_point_buff_gps_long,fsr2l
  3950  0000A0  C030  FFDA         	movff	_point_buff_gps_long+1,fsr2h
  3951  0000A4  51EE               	movf	verifica_fence_externo@i& (0+255),w,b
  3952  0000A6  0FCE               	addlw	low verifica_fence_externo@temp_buff_long
  3953  0000A8  6EE1               	movwf	fsr1l,c
  3954  0000AA  6AE2               	clrf	fsr1h,c
  3955  0000AC  CFDF FFE7          	movff	indf2,indf1
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;main.c: 315: point_buff_gps_lat++;
  3959  0000B0  4A31               	infsnz	_point_buff_gps_lat^0,f,c
  3960  0000B2  2A32               	incf	(_point_buff_gps_lat+1)^0,f,c
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;main.c: 316: point_buff_gps_long++;
  3964  0000B4  4A2F               	infsnz	_point_buff_gps_long^0,f,c
  3965  0000B6  2A30               	incf	(_point_buff_gps_long+1)^0,f,c
  3966                           
  3967                           ; BSR set to: 0
  3968  0000B8  2BEE               	incf	verifica_fence_externo@i& (0+255),f,b
  3969                           
  3970                           ; BSR set to: 0
  3971  0000BA  0E0A               	movlw	10
  3972  0000BC  65EE               	cpfsgt	verifica_fence_externo@i& (0+255),b
  3973  0000BE  D7E4               	goto	l11221
  3974  0000C0  D13D               	goto	l11317
  3975  0000C2                     l11231:
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;main.c: 321: {;main.c: 323: for(i=1; i<6; i++)
  3979  0000C2  0E01               	movlw	1
  3980  0000C4  6FEE               	movwf	verifica_fence_externo@i& (0+255),b
  3981  0000C6                     l11237:
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;main.c: 324: {;main.c: 325: if(point == 0 || point == 2)
  3985  0000C6  51ED               	movf	verifica_fence_externo@point& (0+255),w,b
  3986  0000C8  B4D8               	btfsc	status,2,c
  3987  0000CA  D004               	goto	u14240
  3988                           
  3989                           ; BSR set to: 0
  3990  0000CC  0E02               	movlw	2
  3991  0000CE  19ED               	xorwf	verifica_fence_externo@point& (0+255),w,b
  3992  0000D0  A4D8               	btfss	status,2,c
  3993  0000D2  D047               	goto	l11261
  3994  0000D4                     u14240:
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;main.c: 326: {;main.c: 327: if(point == 2 && !point_dif_long)
  3998  0000D4  0E02               	movlw	2
  3999  0000D6  19ED               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4000  0000D8  A4D8               	btfss	status,2,c
  4001  0000DA  D003               	goto	l11247
  4002                           
  4003                           ; BSR set to: 0
  4004  0000DC  51EA               	movf	verifica_fence_externo@point_dif_long& (0+255),w,b
  4005  0000DE  B4D8               	btfsc	status,2,c
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;main.c: 328: {;main.c: 329: point_dif_long++;
  4009  0000E0  2BEA               	incf	verifica_fence_externo@point_dif_long& (0+255),f,b
  4010  0000E2                     l11247:
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;main.c: 330: };main.c: 331: for(j= 0; i < 6; j++)
  4014  0000E2  0E00               	movlw	0
  4015  0000E4  6FEB               	movwf	verifica_fence_externo@j& (0+255),b
  4016  0000E6                     l11249:
  4017                           
  4018                           ; BSR set to: 0
  4019  0000E6  0E05               	movlw	5
  4020  0000E8  65EE               	cpfsgt	verifica_fence_externo@i& (0+255),b
  4021  0000EA  D001               	goto	l11253
  4022  0000EC  D03A               	goto	l11261
  4023  0000EE                     l11253:
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;main.c: 332: {;main.c: 333: poligono_ext[point_dif_long].point_long_deg[j] = temp_buff_
      +                          long[i];
  4027  0000EE  51EE               	movf	verifica_fence_externo@i& (0+255),w,b
  4028  0000F0  0FCE               	addlw	low verifica_fence_externo@temp_buff_long
  4029  0000F2  6ED9               	movwf	fsr2l,c
  4030  0000F4  6ADA               	clrf	fsr2h,c
  4031  0000F6  51EA               	movf	verifica_fence_externo@point_dif_long& (0+255),w,b
  4032  0000F8  0D40               	mullw	64
  4033  0000FA  0E24               	movlw	low _poligono_ext
  4034  0000FC  6F6C               	movwf	??_verifica_fence_externo& (0+255),b
  4035  0000FE  0E01               	movlw	high _poligono_ext
  4036  000100  6F6D               	movwf	(??_verifica_fence_externo+1)& (0+255),b
  4037  000102  0E12               	movlw	18
  4038  000104  276C               	addwf	??_verifica_fence_externo& (0+255),f,b
  4039  000106  0E00               	movlw	0
  4040  000108  236D               	addwfc	(??_verifica_fence_externo+1)& (0+255),f,b
  4041  00010A  50F3               	movf	243,w,c
  4042  00010C  276C               	addwf	??_verifica_fence_externo& (0+255),f,b
  4043  00010E  50F4               	movf	244,w,c
  4044  000110  236D               	addwfc	(??_verifica_fence_externo+1)& (0+255),f,b
  4045  000112  51EB               	movf	verifica_fence_externo@j& (0+255),w,b
  4046  000114  256C               	addwf	??_verifica_fence_externo& (0+255),w,b
  4047  000116  6EE1               	movwf	fsr1l,c
  4048  000118  0E00               	movlw	0
  4049  00011A  216D               	addwfc	(??_verifica_fence_externo+1)& (0+255),w,b
  4050  00011C  6EE2               	movwf	fsr1h,c
  4051  00011E  CFDF FFE7          	movff	indf2,indf1
  4052                           
  4053                           ;main.c: 334: poligono_ext[point_dif_long].fence_long_deg[j] = fence_diff_long[point][i]
      +                          ;
  4054  000122  51ED               	movf	verifica_fence_externo@point& (0+255),w,b
  4055  000124  0D0C               	mullw	12
  4056  000126  50F3               	movf	243,w,c
  4057  000128  0F72               	addlw	low verifica_fence_externo@fence_diff_long
  4058  00012A  25EE               	addwf	verifica_fence_externo@i& (0+255),w,b
  4059  00012C  6ED9               	movwf	fsr2l,c
  4060  00012E  6ADA               	clrf	fsr2h,c
  4061  000130  51EA               	movf	verifica_fence_externo@point_dif_long& (0+255),w,b
  4062  000132  0D40               	mullw	64
  4063  000134  0E24               	movlw	low _poligono_ext
  4064  000136  6F6C               	movwf	??_verifica_fence_externo& (0+255),b
  4065  000138  0E01               	movlw	high _poligono_ext
  4066  00013A  6F6D               	movwf	(??_verifica_fence_externo+1)& (0+255),b
  4067  00013C  0E06               	movlw	6
  4068  00013E  276C               	addwf	??_verifica_fence_externo& (0+255),f,b
  4069  000140  0E00               	movlw	0
  4070  000142  236D               	addwfc	(??_verifica_fence_externo+1)& (0+255),f,b
  4071  000144  50F3               	movf	243,w,c
  4072  000146  276C               	addwf	??_verifica_fence_externo& (0+255),f,b
  4073  000148  50F4               	movf	244,w,c
  4074  00014A  236D               	addwfc	(??_verifica_fence_externo+1)& (0+255),f,b
  4075  00014C  51EB               	movf	verifica_fence_externo@j& (0+255),w,b
  4076  00014E  256C               	addwf	??_verifica_fence_externo& (0+255),w,b
  4077  000150  6EE1               	movwf	fsr1l,c
  4078  000152  0E00               	movlw	0
  4079  000154  216D               	addwfc	(??_verifica_fence_externo+1)& (0+255),w,b
  4080  000156  6EE2               	movwf	fsr1h,c
  4081  000158  CFDF FFE7          	movff	indf2,indf1
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;main.c: 336: i++;
  4085  00015C  2BEE               	incf	verifica_fence_externo@i& (0+255),f,b
  4086                           
  4087                           ; BSR set to: 0
  4088  00015E  2BEB               	incf	verifica_fence_externo@j& (0+255),f,b
  4089  000160  D7C2               	goto	l11249
  4090  000162                     l11261:
  4091                           
  4092                           ; BSR set to: 0
  4093  000162  2BEE               	incf	verifica_fence_externo@i& (0+255),f,b
  4094                           
  4095                           ; BSR set to: 0
  4096  000164  0E05               	movlw	5
  4097  000166  65EE               	cpfsgt	verifica_fence_externo@i& (0+255),b
  4098  000168  D7AE               	goto	l11237
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;main.c: 337: };main.c: 339: };main.c: 341: };main.c: 343: for(i=1; i<5; i++)
  4102  00016A  0E01               	movlw	1
  4103  00016C  6FEE               	movwf	verifica_fence_externo@i& (0+255),b
  4104  00016E                     l11271:
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;main.c: 344: {;main.c: 345: if(point == 0 || point == 2)
  4108  00016E  51ED               	movf	verifica_fence_externo@point& (0+255),w,b
  4109  000170  B4D8               	btfsc	status,2,c
  4110  000172  D004               	goto	u14300
  4111                           
  4112                           ; BSR set to: 0
  4113  000174  0E02               	movlw	2
  4114  000176  19ED               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4115  000178  A4D8               	btfss	status,2,c
  4116  00017A  D043               	goto	l11295
  4117  00017C                     u14300:
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;main.c: 346: {;main.c: 348: if(point == 2 && !point_dif_lat)
  4121  00017C  0E02               	movlw	2
  4122  00017E  19ED               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4123  000180  A4D8               	btfss	status,2,c
  4124  000182  D003               	goto	l11281
  4125                           
  4126                           ; BSR set to: 0
  4127  000184  51E9               	movf	verifica_fence_externo@point_dif_lat& (0+255),w,b
  4128  000186  B4D8               	btfsc	status,2,c
  4129                           
  4130                           ; BSR set to: 0
  4131                           ;main.c: 349: {;main.c: 350: point_dif_lat++;
  4132  000188  2BE9               	incf	verifica_fence_externo@point_dif_lat& (0+255),f,b
  4133  00018A                     l11281:
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;main.c: 351: };main.c: 354: for(j= 0; i < 5; j++)
  4137  00018A  0E00               	movlw	0
  4138  00018C  6FEB               	movwf	verifica_fence_externo@j& (0+255),b
  4139  00018E                     l11283:
  4140                           
  4141                           ; BSR set to: 0
  4142  00018E  0E04               	movlw	4
  4143  000190  65EE               	cpfsgt	verifica_fence_externo@i& (0+255),b
  4144  000192  D001               	goto	l11287
  4145  000194  D036               	goto	l11295
  4146  000196                     l11287:
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;main.c: 355: {;main.c: 356: poligono_ext[point_dif_lat].point_lat_deg[j] = temp_buff_la
      +                          t[i];
  4150  000196  51EE               	movf	verifica_fence_externo@i& (0+255),w,b
  4151  000198  0FDA               	addlw	low verifica_fence_externo@temp_buff_lat
  4152  00019A  6ED9               	movwf	fsr2l,c
  4153  00019C  6ADA               	clrf	fsr2h,c
  4154  00019E  51E9               	movf	verifica_fence_externo@point_dif_lat& (0+255),w,b
  4155  0001A0  0D40               	mullw	64
  4156  0001A2  0E24               	movlw	low _poligono_ext
  4157  0001A4  6F6C               	movwf	??_verifica_fence_externo& (0+255),b
  4158  0001A6  0E01               	movlw	high _poligono_ext
  4159  0001A8  6F6D               	movwf	(??_verifica_fence_externo+1)& (0+255),b
  4160  0001AA  0E0C               	movlw	12
  4161  0001AC  276C               	addwf	??_verifica_fence_externo& (0+255),f,b
  4162  0001AE  0E00               	movlw	0
  4163  0001B0  236D               	addwfc	(??_verifica_fence_externo+1)& (0+255),f,b
  4164  0001B2  50F3               	movf	243,w,c
  4165  0001B4  276C               	addwf	??_verifica_fence_externo& (0+255),f,b
  4166  0001B6  50F4               	movf	244,w,c
  4167  0001B8  236D               	addwfc	(??_verifica_fence_externo+1)& (0+255),f,b
  4168  0001BA  51EB               	movf	verifica_fence_externo@j& (0+255),w,b
  4169  0001BC  256C               	addwf	??_verifica_fence_externo& (0+255),w,b
  4170  0001BE  6EE1               	movwf	fsr1l,c
  4171  0001C0  0E00               	movlw	0
  4172  0001C2  216D               	addwfc	(??_verifica_fence_externo+1)& (0+255),w,b
  4173  0001C4  6EE2               	movwf	fsr1h,c
  4174  0001C6  CFDF FFE7          	movff	indf2,indf1
  4175                           
  4176                           ;main.c: 357: poligono_ext[point_dif_lat].fence_lat_deg[j] = fence_diff_lat[point][i];
  4177  0001CA  51ED               	movf	verifica_fence_externo@point& (0+255),w,b
  4178  0001CC  0D0B               	mullw	11
  4179  0001CE  50F3               	movf	243,w,c
  4180  0001D0  0FA2               	addlw	low verifica_fence_externo@fence_diff_lat
  4181  0001D2  25EE               	addwf	verifica_fence_externo@i& (0+255),w,b
  4182  0001D4  6ED9               	movwf	fsr2l,c
  4183  0001D6  6ADA               	clrf	fsr2h,c
  4184  0001D8  51E9               	movf	verifica_fence_externo@point_dif_lat& (0+255),w,b
  4185  0001DA  0D40               	mullw	64
  4186  0001DC  0E24               	movlw	low _poligono_ext
  4187  0001DE  6F6C               	movwf	??_verifica_fence_externo& (0+255),b
  4188  0001E0  0E01               	movlw	high _poligono_ext
  4189  0001E2  6F6D               	movwf	(??_verifica_fence_externo+1)& (0+255),b
  4190  0001E4  50F3               	movf	243,w,c
  4191  0001E6  276C               	addwf	??_verifica_fence_externo& (0+255),f,b
  4192  0001E8  50F4               	movf	244,w,c
  4193  0001EA  236D               	addwfc	(??_verifica_fence_externo+1)& (0+255),f,b
  4194  0001EC  51EB               	movf	verifica_fence_externo@j& (0+255),w,b
  4195  0001EE  256C               	addwf	??_verifica_fence_externo& (0+255),w,b
  4196  0001F0  6EE1               	movwf	fsr1l,c
  4197  0001F2  0E00               	movlw	0
  4198  0001F4  216D               	addwfc	(??_verifica_fence_externo+1)& (0+255),w,b
  4199  0001F6  6EE2               	movwf	fsr1h,c
  4200  0001F8  CFDF FFE7          	movff	indf2,indf1
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;main.c: 358: i++;
  4204  0001FC  2BEE               	incf	verifica_fence_externo@i& (0+255),f,b
  4205                           
  4206                           ; BSR set to: 0
  4207  0001FE  2BEB               	incf	verifica_fence_externo@j& (0+255),f,b
  4208  000200  D7C6               	goto	l11283
  4209  000202                     l11295:
  4210                           
  4211                           ; BSR set to: 0
  4212  000202  2BEE               	incf	verifica_fence_externo@i& (0+255),f,b
  4213                           
  4214                           ; BSR set to: 0
  4215  000204  0E04               	movlw	4
  4216  000206  65EE               	cpfsgt	verifica_fence_externo@i& (0+255),b
  4217  000208  D7B2               	goto	l11271
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;main.c: 359: };main.c: 361: };main.c: 362: };main.c: 366: if(point == 0 || point == 2)
  4221  00020A  51ED               	movf	verifica_fence_externo@point& (0+255),w,b
  4222  00020C  B4D8               	btfsc	status,2,c
  4223  00020E  D004               	goto	u14360
  4224                           
  4225                           ; BSR set to: 0
  4226  000210  0E02               	movlw	2
  4227  000212  19ED               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4228  000214  A4D8               	btfss	status,2,c
  4229  000216  D091               	goto	l11315
  4230  000218                     u14360:
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;main.c: 367: {;main.c: 368: temp_var_deg = atoi(poligono_ext[count].point_lat_deg);
  4234  000218  51EC               	movf	verifica_fence_externo@count& (0+255),w,b
  4235  00021A  0D40               	mullw	64
  4236  00021C  0E30               	movlw	low (_poligono_ext+12)
  4237  00021E  24F3               	addwf	243,w,c
  4238  000220  6E21               	movwf	atoi@s^0,c
  4239  000222  0E01               	movlw	high (_poligono_ext+12)
  4240  000224  20F4               	addwfc	prodh,w,c
  4241  000226  6E22               	movwf	(atoi@s+1)^0,c
  4242  000228  ECBB  F01E         	call	_atoi	;wreg free
  4243  00022C  C021  F0E5         	movff	?_atoi,verifica_fence_externo@temp_var_deg
  4244  000230  C022  F0E6         	movff	?_atoi+1,verifica_fence_externo@temp_var_deg+1
  4245  000234  0100               	movlb	0	; () banked
  4246  000236  0E00               	movlw	0
  4247  000238  BFE6               	btfsc	(verifica_fence_externo@temp_var_deg+1)& (0+255),7,b
  4248  00023A  0EFF               	movlw	-1
  4249  00023C  6FE7               	movwf	(verifica_fence_externo@temp_var_deg+2)& (0+255),b
  4250  00023E  6FE8               	movwf	(verifica_fence_externo@temp_var_deg+3)& (0+255),b
  4251                           
  4252                           ;main.c: 369: poligono_ext[count].diff_lat_deg = atoi(poligono_ext[count].fence_lat_deg)
      +                          ;
  4253  000240  51EC               	movf	verifica_fence_externo@count& (0+255),w,b
  4254  000242  0D40               	mullw	64
  4255  000244  0E24               	movlw	low _poligono_ext
  4256  000246  24F3               	addwf	243,w,c
  4257  000248  6E21               	movwf	atoi@s^0,c
  4258  00024A  0E01               	movlw	high _poligono_ext
  4259  00024C  20F4               	addwfc	prodh,w,c
  4260  00024E  6E22               	movwf	(atoi@s+1)^0,c
  4261  000250  ECBB  F01E         	call	_atoi	;wreg free
  4262  000254  C021  F06C         	movff	?_atoi,??_verifica_fence_externo
  4263  000258  C022  F06D         	movff	?_atoi+1,??_verifica_fence_externo+1
  4264  00025C  0E00               	movlw	0
  4265  00025E  0100               	movlb	0	; () banked
  4266  000260  BF6D               	btfsc	(??_verifica_fence_externo+1)& (0+255),7,b
  4267  000262  0EFF               	movlw	255
  4268  000264  6F6E               	movwf	(??_verifica_fence_externo+2)& (0+255),b
  4269  000266  6F6F               	movwf	(??_verifica_fence_externo+3)& (0+255),b
  4270  000268  51EC               	movf	verifica_fence_externo@count& (0+255),w,b
  4271  00026A  0D40               	mullw	64
  4272  00026C  0E3C               	movlw	low (_poligono_ext+24)
  4273  00026E  24F3               	addwf	243,w,c
  4274  000270  6ED9               	movwf	fsr2l,c
  4275  000272  0E01               	movlw	high (_poligono_ext+24)
  4276  000274  20F4               	addwfc	prodh,w,c
  4277  000276  6EDA               	movwf	fsr2h,c
  4278  000278  C06C  FFDE         	movff	??_verifica_fence_externo,postinc2
  4279  00027C  C06D  FFDE         	movff	??_verifica_fence_externo+1,postinc2
  4280  000280  C06E  FFDE         	movff	??_verifica_fence_externo+2,postinc2
  4281  000284  C06F  FFDE         	movff	??_verifica_fence_externo+3,postinc2
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;main.c: 370: poligono_ext[count].diff_lat_deg -= temp_var_deg;
  4285  000288  51EC               	movf	verifica_fence_externo@count& (0+255),w,b
  4286  00028A  0D40               	mullw	64
  4287  00028C  0E3C               	movlw	low (_poligono_ext+24)
  4288  00028E  24F3               	addwf	243,w,c
  4289  000290  6ED9               	movwf	fsr2l,c
  4290  000292  0E01               	movlw	high (_poligono_ext+24)
  4291  000294  20F4               	addwfc	prodh,w,c
  4292  000296  6EDA               	movwf	fsr2h,c
  4293  000298  51E5               	movf	verifica_fence_externo@temp_var_deg& (0+255),w,b
  4294  00029A  5EDE               	subwf	postinc2,f,c
  4295  00029C  51E6               	movf	(verifica_fence_externo@temp_var_deg+1)& (0+255),w,b
  4296  00029E  5ADE               	subwfb	postinc2,f,c
  4297  0002A0  51E7               	movf	(verifica_fence_externo@temp_var_deg+2)& (0+255),w,b
  4298  0002A2  5ADE               	subwfb	postinc2,f,c
  4299  0002A4  51E8               	movf	(verifica_fence_externo@temp_var_deg+3)& (0+255),w,b
  4300  0002A6  5ADE               	subwfb	postinc2,f,c
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;main.c: 371: temp_var_deg = atoi(poligono_ext[count].point_long_deg);
  4304  0002A8  51EC               	movf	verifica_fence_externo@count& (0+255),w,b
  4305  0002AA  0D40               	mullw	64
  4306  0002AC  0E36               	movlw	low (_poligono_ext+18)
  4307  0002AE  24F3               	addwf	243,w,c
  4308  0002B0  6E21               	movwf	atoi@s^0,c
  4309  0002B2  0E01               	movlw	high (_poligono_ext+18)
  4310  0002B4  20F4               	addwfc	prodh,w,c
  4311  0002B6  6E22               	movwf	(atoi@s+1)^0,c
  4312  0002B8  ECBB  F01E         	call	_atoi	;wreg free
  4313  0002BC  C021  F0E5         	movff	?_atoi,verifica_fence_externo@temp_var_deg
  4314  0002C0  C022  F0E6         	movff	?_atoi+1,verifica_fence_externo@temp_var_deg+1
  4315  0002C4  0100               	movlb	0	; () banked
  4316  0002C6  0E00               	movlw	0
  4317  0002C8  BFE6               	btfsc	(verifica_fence_externo@temp_var_deg+1)& (0+255),7,b
  4318  0002CA  0EFF               	movlw	-1
  4319  0002CC  6FE7               	movwf	(verifica_fence_externo@temp_var_deg+2)& (0+255),b
  4320  0002CE  6FE8               	movwf	(verifica_fence_externo@temp_var_deg+3)& (0+255),b
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;main.c: 372: poligono_ext[count].diff_long_deg = atoi(poligono_ext[count].fence_long_de
      +                          g);
  4324  0002D0  51EC               	movf	verifica_fence_externo@count& (0+255),w,b
  4325  0002D2  0D40               	mullw	64
  4326  0002D4  0E2A               	movlw	low (_poligono_ext+6)
  4327  0002D6  24F3               	addwf	243,w,c
  4328  0002D8  6E21               	movwf	atoi@s^0,c
  4329  0002DA  0E01               	movlw	high (_poligono_ext+6)
  4330  0002DC  20F4               	addwfc	prodh,w,c
  4331  0002DE  6E22               	movwf	(atoi@s+1)^0,c
  4332  0002E0  ECBB  F01E         	call	_atoi	;wreg free
  4333  0002E4  C021  F06C         	movff	?_atoi,??_verifica_fence_externo
  4334  0002E8  C022  F06D         	movff	?_atoi+1,??_verifica_fence_externo+1
  4335  0002EC  0E00               	movlw	0
  4336  0002EE  0100               	movlb	0	; () banked
  4337  0002F0  BF6D               	btfsc	(??_verifica_fence_externo+1)& (0+255),7,b
  4338  0002F2  0EFF               	movlw	255
  4339  0002F4  6F6E               	movwf	(??_verifica_fence_externo+2)& (0+255),b
  4340  0002F6  6F6F               	movwf	(??_verifica_fence_externo+3)& (0+255),b
  4341  0002F8  51EC               	movf	verifica_fence_externo@count& (0+255),w,b
  4342  0002FA  0D40               	mullw	64
  4343  0002FC  0E40               	movlw	low (_poligono_ext+28)
  4344  0002FE  24F3               	addwf	243,w,c
  4345  000300  6ED9               	movwf	fsr2l,c
  4346  000302  0E01               	movlw	high (_poligono_ext+28)
  4347  000304  20F4               	addwfc	prodh,w,c
  4348  000306  6EDA               	movwf	fsr2h,c
  4349  000308  C06C  FFDE         	movff	??_verifica_fence_externo,postinc2
  4350  00030C  C06D  FFDE         	movff	??_verifica_fence_externo+1,postinc2
  4351  000310  C06E  FFDE         	movff	??_verifica_fence_externo+2,postinc2
  4352  000314  C06F  FFDE         	movff	??_verifica_fence_externo+3,postinc2
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;main.c: 373: poligono_ext[count].diff_long_deg -= temp_var_deg;
  4356  000318  51EC               	movf	verifica_fence_externo@count& (0+255),w,b
  4357  00031A  0D40               	mullw	64
  4358  00031C  0E40               	movlw	low (_poligono_ext+28)
  4359  00031E  24F3               	addwf	243,w,c
  4360  000320  6ED9               	movwf	fsr2l,c
  4361  000322  0E01               	movlw	high (_poligono_ext+28)
  4362  000324  20F4               	addwfc	prodh,w,c
  4363  000326  6EDA               	movwf	fsr2h,c
  4364  000328  51E5               	movf	verifica_fence_externo@temp_var_deg& (0+255),w,b
  4365  00032A  5EDE               	subwf	postinc2,f,c
  4366  00032C  51E6               	movf	(verifica_fence_externo@temp_var_deg+1)& (0+255),w,b
  4367  00032E  5ADE               	subwfb	postinc2,f,c
  4368  000330  51E7               	movf	(verifica_fence_externo@temp_var_deg+2)& (0+255),w,b
  4369  000332  5ADE               	subwfb	postinc2,f,c
  4370  000334  51E8               	movf	(verifica_fence_externo@temp_var_deg+3)& (0+255),w,b
  4371  000336  5ADE               	subwfb	postinc2,f,c
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;main.c: 375: count++;
  4375  000338  2BEC               	incf	verifica_fence_externo@count& (0+255),f,b
  4376  00033A                     l11315:
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;main.c: 376: };main.c: 377: point++;
  4380  00033A  2BED               	incf	verifica_fence_externo@point& (0+255),f,b
  4381  00033C                     l11317:
  4382                           
  4383                           ; BSR set to: 0
  4384  00033C  0E03               	movlw	3
  4385  00033E  65ED               	cpfsgt	verifica_fence_externo@point& (0+255),b
  4386  000340  D6C0               	goto	l11231
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;main.c: 378: };main.c: 384: point = 0;
  4390  000342  0E00               	movlw	0
  4391  000344  6FED               	movwf	verifica_fence_externo@point& (0+255),b
  4392                           
  4393                           ;main.c: 385: count = 0;
  4394  000346  0E00               	movlw	0
  4395  000348  6FEC               	movwf	verifica_fence_externo@count& (0+255),b
  4396                           
  4397                           ;main.c: 386: point_dif_lat = 0;
  4398  00034A  0E00               	movlw	0
  4399  00034C  6FE9               	movwf	verifica_fence_externo@point_dif_lat& (0+255),b
  4400                           
  4401                           ;main.c: 387: point_dif_long = 0;
  4402  00034E  0E00               	movlw	0
  4403  000350  6FEA               	movwf	verifica_fence_externo@point_dif_long& (0+255),b
  4404                           
  4405                           ;main.c: 391: while(point<4)
  4406  000352  D13D               	goto	l11407
  4407  000354                     l11321:
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;main.c: 392: {;main.c: 393: for(i=6; i<11; i++)
  4411  000354  0E06               	movlw	6
  4412  000356  6FEE               	movwf	verifica_fence_externo@i& (0+255),b
  4413  000358                     l11327:
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;main.c: 394: {;main.c: 395: if(point == 0 || point == 2)
  4417  000358  51ED               	movf	verifica_fence_externo@point& (0+255),w,b
  4418  00035A  B4D8               	btfsc	status,2,c
  4419  00035C  D004               	goto	u14390
  4420                           
  4421                           ; BSR set to: 0
  4422  00035E  0E02               	movlw	2
  4423  000360  19ED               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4424  000362  A4D8               	btfss	status,2,c
  4425  000364  D056               	goto	l11353
  4426  000366                     u14390:
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;main.c: 396: {;main.c: 397: if(point == 2 && !point_dif_lat)
  4430  000366  0E02               	movlw	2
  4431  000368  19ED               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4432  00036A  A4D8               	btfss	status,2,c
  4433  00036C  D003               	goto	l11337
  4434                           
  4435                           ; BSR set to: 0
  4436  00036E  51E9               	movf	verifica_fence_externo@point_dif_lat& (0+255),w,b
  4437  000370  B4D8               	btfsc	status,2,c
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;main.c: 398: {;main.c: 399: point_dif_lat++;
  4441  000372  2BE9               	incf	verifica_fence_externo@point_dif_lat& (0+255),f,b
  4442  000374                     l11337:
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;main.c: 400: };main.c: 401: if(fence_diff_lat[point][i] != temp_buff_lat[i])
  4446  000374  51EE               	movf	verifica_fence_externo@i& (0+255),w,b
  4447  000376  0FDA               	addlw	low verifica_fence_externo@temp_buff_lat
  4448  000378  6ED9               	movwf	fsr2l,c
  4449  00037A  6ADA               	clrf	fsr2h,c
  4450  00037C  51ED               	movf	verifica_fence_externo@point& (0+255),w,b
  4451  00037E  0D0B               	mullw	11
  4452  000380  50F3               	movf	243,w,c
  4453  000382  0FA2               	addlw	low verifica_fence_externo@fence_diff_lat
  4454  000384  25EE               	addwf	verifica_fence_externo@i& (0+255),w,b
  4455  000386  6EE1               	movwf	fsr1l,c
  4456  000388  6AE2               	clrf	fsr1h,c
  4457  00038A  50DE               	movf	postinc2,w,c
  4458  00038C  18E6               	xorwf	postinc1,w,c
  4459  00038E  B4D8               	btfsc	status,2,c
  4460  000390  D042               	goto	l11355
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;main.c: 402: {;main.c: 403: for(j= 0; i < 11; j++)
  4464  000392  0E00               	movlw	0
  4465  000394  6FEB               	movwf	verifica_fence_externo@j& (0+255),b
  4466  000396                     l11341:
  4467                           
  4468                           ; BSR set to: 0
  4469  000396  0E0A               	movlw	10
  4470  000398  65EE               	cpfsgt	verifica_fence_externo@i& (0+255),b
  4471  00039A  D001               	goto	l11345
  4472  00039C  D03C               	goto	l11355
  4473  00039E                     l11345:
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;main.c: 404: {;main.c: 405: poligono_ext[point_dif_lat].fence_lat_min[j] = fence_diff_l
      +                          at[point][i];
  4477  00039E  51ED               	movf	verifica_fence_externo@point& (0+255),w,b
  4478  0003A0  0D0B               	mullw	11
  4479  0003A2  50F3               	movf	243,w,c
  4480  0003A4  0FA2               	addlw	low verifica_fence_externo@fence_diff_lat
  4481  0003A6  25EE               	addwf	verifica_fence_externo@i& (0+255),w,b
  4482  0003A8  6ED9               	movwf	fsr2l,c
  4483  0003AA  6ADA               	clrf	fsr2h,c
  4484  0003AC  51E9               	movf	verifica_fence_externo@point_dif_lat& (0+255),w,b
  4485  0003AE  0D40               	mullw	64
  4486  0003B0  0E24               	movlw	low _poligono_ext
  4487  0003B2  6F6C               	movwf	??_verifica_fence_externo& (0+255),b
  4488  0003B4  0E01               	movlw	high _poligono_ext
  4489  0003B6  6F6D               	movwf	(??_verifica_fence_externo+1)& (0+255),b
  4490  0003B8  0E20               	movlw	32
  4491  0003BA  276C               	addwf	??_verifica_fence_externo& (0+255),f,b
  4492  0003BC  0E00               	movlw	0
  4493  0003BE  236D               	addwfc	(??_verifica_fence_externo+1)& (0+255),f,b
  4494  0003C0  50F3               	movf	243,w,c
  4495  0003C2  276C               	addwf	??_verifica_fence_externo& (0+255),f,b
  4496  0003C4  50F4               	movf	244,w,c
  4497  0003C6  236D               	addwfc	(??_verifica_fence_externo+1)& (0+255),f,b
  4498  0003C8  51EB               	movf	verifica_fence_externo@j& (0+255),w,b
  4499  0003CA  256C               	addwf	??_verifica_fence_externo& (0+255),w,b
  4500  0003CC  6EE1               	movwf	fsr1l,c
  4501  0003CE  0E00               	movlw	0
  4502  0003D0  216D               	addwfc	(??_verifica_fence_externo+1)& (0+255),w,b
  4503  0003D2  6EE2               	movwf	fsr1h,c
  4504  0003D4  CFDF FFE7          	movff	indf2,indf1
  4505                           
  4506                           ;main.c: 406: poligono_ext[point_dif_lat].point_lat_min[j] = temp_buff_lat[i];
  4507  0003D8  51EE               	movf	verifica_fence_externo@i& (0+255),w,b
  4508  0003DA  0FDA               	addlw	low verifica_fence_externo@temp_buff_lat
  4509  0003DC  6ED9               	movwf	fsr2l,c
  4510  0003DE  6ADA               	clrf	fsr2h,c
  4511  0003E0  51E9               	movf	verifica_fence_externo@point_dif_lat& (0+255),w,b
  4512  0003E2  0D40               	mullw	64
  4513  0003E4  0E24               	movlw	low _poligono_ext
  4514  0003E6  6F6C               	movwf	??_verifica_fence_externo& (0+255),b
  4515  0003E8  0E01               	movlw	high _poligono_ext
  4516  0003EA  6F6D               	movwf	(??_verifica_fence_externo+1)& (0+255),b
  4517  0003EC  0E2C               	movlw	44
  4518  0003EE  276C               	addwf	??_verifica_fence_externo& (0+255),f,b
  4519  0003F0  0E00               	movlw	0
  4520  0003F2  236D               	addwfc	(??_verifica_fence_externo+1)& (0+255),f,b
  4521  0003F4  50F3               	movf	243,w,c
  4522  0003F6  276C               	addwf	??_verifica_fence_externo& (0+255),f,b
  4523  0003F8  50F4               	movf	244,w,c
  4524  0003FA  236D               	addwfc	(??_verifica_fence_externo+1)& (0+255),f,b
  4525  0003FC  51EB               	movf	verifica_fence_externo@j& (0+255),w,b
  4526  0003FE  256C               	addwf	??_verifica_fence_externo& (0+255),w,b
  4527  000400  6EE1               	movwf	fsr1l,c
  4528  000402  0E00               	movlw	0
  4529  000404  216D               	addwfc	(??_verifica_fence_externo+1)& (0+255),w,b
  4530  000406  6EE2               	movwf	fsr1h,c
  4531  000408  CFDF FFE7          	movff	indf2,indf1
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;main.c: 407: i++;
  4535  00040C  2BEE               	incf	verifica_fence_externo@i& (0+255),f,b
  4536                           
  4537                           ; BSR set to: 0
  4538  00040E  2BEB               	incf	verifica_fence_externo@j& (0+255),f,b
  4539  000410  D7C2               	goto	l11341
  4540  000412                     l11353:
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;main.c: 413: else;main.c: 414: {;main.c: 415: i = 11;
  4544  000412  0E0B               	movlw	11
  4545  000414  6FEE               	movwf	verifica_fence_externo@i& (0+255),b
  4546  000416                     l11355:
  4547                           
  4548                           ; BSR set to: 0
  4549  000416  2BEE               	incf	verifica_fence_externo@i& (0+255),f,b
  4550                           
  4551                           ; BSR set to: 0
  4552  000418  0E0A               	movlw	10
  4553  00041A  65EE               	cpfsgt	verifica_fence_externo@i& (0+255),b
  4554  00041C  D79D               	goto	l11327
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;main.c: 416: };main.c: 417: };main.c: 419: for(i=7; i<12; i++)
  4558  00041E  0E07               	movlw	7
  4559  000420  6FEE               	movwf	verifica_fence_externo@i& (0+255),b
  4560  000422                     l11365:
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;main.c: 420: {;main.c: 421: if(point == 0 || point == 2)
  4564  000422  51ED               	movf	verifica_fence_externo@point& (0+255),w,b
  4565  000424  B4D8               	btfsc	status,2,c
  4566  000426  D004               	goto	u14460
  4567                           
  4568                           ; BSR set to: 0
  4569  000428  0E02               	movlw	2
  4570  00042A  19ED               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4571  00042C  A4D8               	btfss	status,2,c
  4572  00042E  D056               	goto	l11391
  4573  000430                     u14460:
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;main.c: 422: {;main.c: 423: if(point == 2 && !point_dif_long)
  4577  000430  0E02               	movlw	2
  4578  000432  19ED               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4579  000434  A4D8               	btfss	status,2,c
  4580  000436  D003               	goto	l11375
  4581                           
  4582                           ; BSR set to: 0
  4583  000438  51EA               	movf	verifica_fence_externo@point_dif_long& (0+255),w,b
  4584  00043A  B4D8               	btfsc	status,2,c
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;main.c: 424: {;main.c: 425: point_dif_long++;
  4588  00043C  2BEA               	incf	verifica_fence_externo@point_dif_long& (0+255),f,b
  4589  00043E                     l11375:
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;main.c: 426: };main.c: 429: if(fence_diff_long[point][i] != temp_buff_long[i])
  4593  00043E  51EE               	movf	verifica_fence_externo@i& (0+255),w,b
  4594  000440  0FCE               	addlw	low verifica_fence_externo@temp_buff_long
  4595  000442  6ED9               	movwf	fsr2l,c
  4596  000444  6ADA               	clrf	fsr2h,c
  4597  000446  51ED               	movf	verifica_fence_externo@point& (0+255),w,b
  4598  000448  0D0C               	mullw	12
  4599  00044A  50F3               	movf	243,w,c
  4600  00044C  0F72               	addlw	low verifica_fence_externo@fence_diff_long
  4601  00044E  25EE               	addwf	verifica_fence_externo@i& (0+255),w,b
  4602  000450  6EE1               	movwf	fsr1l,c
  4603  000452  6AE2               	clrf	fsr1h,c
  4604  000454  50DE               	movf	postinc2,w,c
  4605  000456  18E6               	xorwf	postinc1,w,c
  4606  000458  B4D8               	btfsc	status,2,c
  4607  00045A  D042               	goto	l11393
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;main.c: 430: {;main.c: 431: for(j= 0; i < 12; j++)
  4611  00045C  0E00               	movlw	0
  4612  00045E  6FEB               	movwf	verifica_fence_externo@j& (0+255),b
  4613  000460                     l11379:
  4614                           
  4615                           ; BSR set to: 0
  4616  000460  0E0B               	movlw	11
  4617  000462  65EE               	cpfsgt	verifica_fence_externo@i& (0+255),b
  4618  000464  D001               	goto	l11383
  4619  000466  D03C               	goto	l11393
  4620  000468                     l11383:
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;main.c: 432: {;main.c: 433: poligono_ext[point_dif_long].fence_long_min[j] = fence_diff
      +                          _long[point][i];
  4624  000468  51ED               	movf	verifica_fence_externo@point& (0+255),w,b
  4625  00046A  0D0C               	mullw	12
  4626  00046C  50F3               	movf	243,w,c
  4627  00046E  0F72               	addlw	low verifica_fence_externo@fence_diff_long
  4628  000470  25EE               	addwf	verifica_fence_externo@i& (0+255),w,b
  4629  000472  6ED9               	movwf	fsr2l,c
  4630  000474  6ADA               	clrf	fsr2h,c
  4631  000476  51EA               	movf	verifica_fence_externo@point_dif_long& (0+255),w,b
  4632  000478  0D40               	mullw	64
  4633  00047A  0E24               	movlw	low _poligono_ext
  4634  00047C  6F6C               	movwf	??_verifica_fence_externo& (0+255),b
  4635  00047E  0E01               	movlw	high _poligono_ext
  4636  000480  6F6D               	movwf	(??_verifica_fence_externo+1)& (0+255),b
  4637  000482  0E26               	movlw	38
  4638  000484  276C               	addwf	??_verifica_fence_externo& (0+255),f,b
  4639  000486  0E00               	movlw	0
  4640  000488  236D               	addwfc	(??_verifica_fence_externo+1)& (0+255),f,b
  4641  00048A  50F3               	movf	243,w,c
  4642  00048C  276C               	addwf	??_verifica_fence_externo& (0+255),f,b
  4643  00048E  50F4               	movf	244,w,c
  4644  000490  236D               	addwfc	(??_verifica_fence_externo+1)& (0+255),f,b
  4645  000492  51EB               	movf	verifica_fence_externo@j& (0+255),w,b
  4646  000494  256C               	addwf	??_verifica_fence_externo& (0+255),w,b
  4647  000496  6EE1               	movwf	fsr1l,c
  4648  000498  0E00               	movlw	0
  4649  00049A  216D               	addwfc	(??_verifica_fence_externo+1)& (0+255),w,b
  4650  00049C  6EE2               	movwf	fsr1h,c
  4651  00049E  CFDF FFE7          	movff	indf2,indf1
  4652                           
  4653                           ;main.c: 434: poligono_ext[point_dif_long].point_long_min[j] = temp_buff_long[i];
  4654  0004A2  51EE               	movf	verifica_fence_externo@i& (0+255),w,b
  4655  0004A4  0FCE               	addlw	low verifica_fence_externo@temp_buff_long
  4656  0004A6  6ED9               	movwf	fsr2l,c
  4657  0004A8  6ADA               	clrf	fsr2h,c
  4658  0004AA  51EA               	movf	verifica_fence_externo@point_dif_long& (0+255),w,b
  4659  0004AC  0D40               	mullw	64
  4660  0004AE  0E24               	movlw	low _poligono_ext
  4661  0004B0  6F6C               	movwf	??_verifica_fence_externo& (0+255),b
  4662  0004B2  0E01               	movlw	high _poligono_ext
  4663  0004B4  6F6D               	movwf	(??_verifica_fence_externo+1)& (0+255),b
  4664  0004B6  0E32               	movlw	50
  4665  0004B8  276C               	addwf	??_verifica_fence_externo& (0+255),f,b
  4666  0004BA  0E00               	movlw	0
  4667  0004BC  236D               	addwfc	(??_verifica_fence_externo+1)& (0+255),f,b
  4668  0004BE  50F3               	movf	243,w,c
  4669  0004C0  276C               	addwf	??_verifica_fence_externo& (0+255),f,b
  4670  0004C2  50F4               	movf	244,w,c
  4671  0004C4  236D               	addwfc	(??_verifica_fence_externo+1)& (0+255),f,b
  4672  0004C6  51EB               	movf	verifica_fence_externo@j& (0+255),w,b
  4673  0004C8  256C               	addwf	??_verifica_fence_externo& (0+255),w,b
  4674  0004CA  6EE1               	movwf	fsr1l,c
  4675  0004CC  0E00               	movlw	0
  4676  0004CE  216D               	addwfc	(??_verifica_fence_externo+1)& (0+255),w,b
  4677  0004D0  6EE2               	movwf	fsr1h,c
  4678  0004D2  CFDF FFE7          	movff	indf2,indf1
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;main.c: 435: i++;
  4682  0004D6  2BEE               	incf	verifica_fence_externo@i& (0+255),f,b
  4683                           
  4684                           ; BSR set to: 0
  4685  0004D8  2BEB               	incf	verifica_fence_externo@j& (0+255),f,b
  4686  0004DA  D7C2               	goto	l11379
  4687  0004DC                     l11391:
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;main.c: 439: else;main.c: 440: {;main.c: 441: i = 11;
  4691  0004DC  0E0B               	movlw	11
  4692  0004DE  6FEE               	movwf	verifica_fence_externo@i& (0+255),b
  4693  0004E0                     l11393:
  4694                           
  4695                           ; BSR set to: 0
  4696  0004E0  2BEE               	incf	verifica_fence_externo@i& (0+255),f,b
  4697                           
  4698                           ; BSR set to: 0
  4699  0004E2  0E0B               	movlw	11
  4700  0004E4  65EE               	cpfsgt	verifica_fence_externo@i& (0+255),b
  4701  0004E6  D79D               	goto	l11365
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;main.c: 442: };main.c: 444: };main.c: 447: if(point == 0 || point == 2)
  4705  0004E8  51ED               	movf	verifica_fence_externo@point& (0+255),w,b
  4706  0004EA  B4D8               	btfsc	status,2,c
  4707  0004EC  D004               	goto	u14530
  4708                           
  4709                           ; BSR set to: 0
  4710  0004EE  0E02               	movlw	2
  4711  0004F0  19ED               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4712  0004F2  A4D8               	btfss	status,2,c
  4713  0004F4  D06B               	goto	l11405
  4714  0004F6                     u14530:
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;main.c: 448: {;main.c: 449: poligono_ext[count].diff_lat_min = (atoi(poligono_ext[count
      +                          ].fence_lat_min)) - (atoi(poligono_ext[count].point_lat_min));
  4718  0004F6  51EC               	movf	verifica_fence_externo@count& (0+255),w,b
  4719  0004F8  0D40               	mullw	64
  4720  0004FA  0E44               	movlw	low (_poligono_ext+32)
  4721  0004FC  24F3               	addwf	243,w,c
  4722  0004FE  6E21               	movwf	atoi@s^0,c
  4723  000500  0E01               	movlw	high (_poligono_ext+32)
  4724  000502  20F4               	addwfc	prodh,w,c
  4725  000504  6E22               	movwf	(atoi@s+1)^0,c
  4726  000506  ECBB  F01E         	call	_atoi	;wreg free
  4727  00050A  C021  F06C         	movff	?_atoi,??_verifica_fence_externo
  4728  00050E  C022  F06D         	movff	?_atoi+1,??_verifica_fence_externo+1
  4729  000512  0100               	movlb	0	; () banked
  4730  000514  51EC               	movf	verifica_fence_externo@count& (0+255),w,b
  4731  000516  0D40               	mullw	64
  4732  000518  0E50               	movlw	low (_poligono_ext+44)
  4733  00051A  24F3               	addwf	243,w,c
  4734  00051C  6E21               	movwf	atoi@s^0,c
  4735  00051E  0E01               	movlw	high (_poligono_ext+44)
  4736  000520  20F4               	addwfc	prodh,w,c
  4737  000522  6E22               	movwf	(atoi@s+1)^0,c
  4738  000524  ECBB  F01E         	call	_atoi	;wreg free
  4739  000528  5021               	movf	?_atoi^0,w,c
  4740  00052A  0100               	movlb	0	; () banked
  4741  00052C  5D6C               	subwf	??_verifica_fence_externo& (0+255),w,b
  4742  00052E  6F6E               	movwf	(??_verifica_fence_externo+2)& (0+255),b
  4743  000530  5022               	movf	(?_atoi+1)^0,w,c
  4744  000532  596D               	subwfb	(??_verifica_fence_externo+1)& (0+255),w,b
  4745  000534  6F6F               	movwf	(??_verifica_fence_externo+3)& (0+255),b
  4746  000536  6B70               	clrf	(??_verifica_fence_externo+4)& (0+255),b
  4747  000538  BF6F               	btfsc	(??_verifica_fence_externo+3)& (0+255),7,b
  4748  00053A  0770               	decf	(??_verifica_fence_externo+4)& (0+255),f,b
  4749  00053C  5170               	movf	(??_verifica_fence_externo+4)& (0+255),w,b
  4750  00053E  6F71               	movwf	(??_verifica_fence_externo+5)& (0+255),b
  4751  000540  51EC               	movf	verifica_fence_externo@count& (0+255),w,b
  4752  000542  0D40               	mullw	64
  4753  000544  0E5C               	movlw	low (_poligono_ext+56)
  4754  000546  24F3               	addwf	243,w,c
  4755  000548  6ED9               	movwf	fsr2l,c
  4756  00054A  0E01               	movlw	high (_poligono_ext+56)
  4757  00054C  20F4               	addwfc	prodh,w,c
  4758  00054E  6EDA               	movwf	fsr2h,c
  4759  000550  C06E  FFDE         	movff	??_verifica_fence_externo+2,postinc2
  4760  000554  C06F  FFDE         	movff	??_verifica_fence_externo+3,postinc2
  4761  000558  C070  FFDE         	movff	??_verifica_fence_externo+4,postinc2
  4762  00055C  C071  FFDE         	movff	??_verifica_fence_externo+5,postinc2
  4763                           
  4764                           ;main.c: 450: poligono_ext[count].diff_long_min = (atoi(poligono_ext[count].fence_long_m
      +                          in)) - (atoi(poligono_ext[count].point_long_min));
  4765  000560  51EC               	movf	verifica_fence_externo@count& (0+255),w,b
  4766  000562  0D40               	mullw	64
  4767  000564  0E4A               	movlw	low (_poligono_ext+38)
  4768  000566  24F3               	addwf	243,w,c
  4769  000568  6E21               	movwf	atoi@s^0,c
  4770  00056A  0E01               	movlw	high (_poligono_ext+38)
  4771  00056C  20F4               	addwfc	prodh,w,c
  4772  00056E  6E22               	movwf	(atoi@s+1)^0,c
  4773  000570  ECBB  F01E         	call	_atoi	;wreg free
  4774  000574  C021  F06C         	movff	?_atoi,??_verifica_fence_externo
  4775  000578  C022  F06D         	movff	?_atoi+1,??_verifica_fence_externo+1
  4776  00057C  0100               	movlb	0	; () banked
  4777  00057E  51EC               	movf	verifica_fence_externo@count& (0+255),w,b
  4778  000580  0D40               	mullw	64
  4779  000582  0E56               	movlw	low (_poligono_ext+50)
  4780  000584  24F3               	addwf	243,w,c
  4781  000586  6E21               	movwf	atoi@s^0,c
  4782  000588  0E01               	movlw	high (_poligono_ext+50)
  4783  00058A  20F4               	addwfc	prodh,w,c
  4784  00058C  6E22               	movwf	(atoi@s+1)^0,c
  4785  00058E  ECBB  F01E         	call	_atoi	;wreg free
  4786  000592  5021               	movf	?_atoi^0,w,c
  4787  000594  0100               	movlb	0	; () banked
  4788  000596  5D6C               	subwf	??_verifica_fence_externo& (0+255),w,b
  4789  000598  6F6E               	movwf	(??_verifica_fence_externo+2)& (0+255),b
  4790  00059A  5022               	movf	(?_atoi+1)^0,w,c
  4791  00059C  596D               	subwfb	(??_verifica_fence_externo+1)& (0+255),w,b
  4792  00059E  6F6F               	movwf	(??_verifica_fence_externo+3)& (0+255),b
  4793  0005A0  6B70               	clrf	(??_verifica_fence_externo+4)& (0+255),b
  4794  0005A2  BF6F               	btfsc	(??_verifica_fence_externo+3)& (0+255),7,b
  4795  0005A4  0770               	decf	(??_verifica_fence_externo+4)& (0+255),f,b
  4796  0005A6  5170               	movf	(??_verifica_fence_externo+4)& (0+255),w,b
  4797  0005A8  6F71               	movwf	(??_verifica_fence_externo+5)& (0+255),b
  4798  0005AA  51EC               	movf	verifica_fence_externo@count& (0+255),w,b
  4799  0005AC  0D40               	mullw	64
  4800  0005AE  0E60               	movlw	low (_poligono_ext+60)
  4801  0005B0  24F3               	addwf	243,w,c
  4802  0005B2  6ED9               	movwf	fsr2l,c
  4803  0005B4  0E01               	movlw	high (_poligono_ext+60)
  4804  0005B6  20F4               	addwfc	prodh,w,c
  4805  0005B8  6EDA               	movwf	fsr2h,c
  4806  0005BA  C06E  FFDE         	movff	??_verifica_fence_externo+2,postinc2
  4807  0005BE  C06F  FFDE         	movff	??_verifica_fence_externo+3,postinc2
  4808  0005C2  C070  FFDE         	movff	??_verifica_fence_externo+4,postinc2
  4809  0005C6  C071  FFDE         	movff	??_verifica_fence_externo+5,postinc2
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;main.c: 451: count++;
  4813  0005CA  2BEC               	incf	verifica_fence_externo@count& (0+255),f,b
  4814  0005CC                     l11405:
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;main.c: 452: };main.c: 454: point++;
  4818  0005CC  2BED               	incf	verifica_fence_externo@point& (0+255),f,b
  4819  0005CE                     l11407:
  4820                           
  4821                           ; BSR set to: 0
  4822  0005CE  0E03               	movlw	3
  4823  0005D0  65ED               	cpfsgt	verifica_fence_externo@point& (0+255),b
  4824  0005D2  D6C0               	goto	l11321
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;main.c: 457: point = 0;
  4828  0005D4  0E00               	movlw	0
  4829  0005D6  6FED               	movwf	verifica_fence_externo@point& (0+255),b
  4830                           
  4831                           ;main.c: 463: switch(temp_buff_long[0])
  4832  0005D8  D051               	goto	l11449
  4833  0005DA                     l11411:
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;main.c: 466: if(;main.c: 467: ((poligono_ext[0].diff_long_min >= 0 &&;main.c: 468: poli
      +                          gono_ext[1].diff_long_min <= 0) &&;main.c: 470: (poligono_ext[0].diff_long_deg >= 0 &&;m
      +                          ain.c: 471: poligono_ext[1].diff_long_deg <= 0)))
  4837  0005DA  0101               	movlb	1	; () banked
  4838  0005DC  BF63               	btfsc	(_poligono_ext+63)& (0+255),7,b
  4839  0005DE  D016               	goto	l11421
  4840                           
  4841                           ; BSR set to: 1
  4842  0005E0  BFA3               	btfsc	(_poligono_ext+127)& (0+255),7,b
  4843  0005E2  D007               	goto	u14560
  4844  0005E4  51A3               	movf	(_poligono_ext+127)& (0+255),w,b
  4845  0005E6  11A2               	iorwf	(_poligono_ext+126)& (0+255),w,b
  4846  0005E8  11A1               	iorwf	(_poligono_ext+125)& (0+255),w,b
  4847  0005EA  E110               	bnz	l11421
  4848  0005EC  05A0               	decf	(_poligono_ext+124)& (0+255),w,b
  4849  0005EE  B0D8               	btfsc	status,0,c
  4850  0005F0  D00D               	goto	l11421
  4851  0005F2                     u14560:
  4852                           
  4853                           ; BSR set to: 1
  4854  0005F2  BF43               	btfsc	(_poligono_ext+31)& (0+255),7,b
  4855  0005F4  D00B               	goto	l11421
  4856                           
  4857                           ; BSR set to: 1
  4858  0005F6  BF83               	btfsc	(_poligono_ext+95)& (0+255),7,b
  4859  0005F8  D007               	goto	u14580
  4860  0005FA  5183               	movf	(_poligono_ext+95)& (0+255),w,b
  4861  0005FC  1182               	iorwf	(_poligono_ext+94)& (0+255),w,b
  4862  0005FE  1181               	iorwf	(_poligono_ext+93)& (0+255),w,b
  4863  000600  E105               	bnz	l11421
  4864  000602  0580               	decf	(_poligono_ext+92)& (0+255),w,b
  4865  000604  B0D8               	btfsc	status,0,c
  4866  000606  D002               	goto	l11421
  4867  000608                     u14580:
  4868                           
  4869                           ; BSR set to: 1
  4870                           ;main.c: 472: {;main.c: 473: flag[0].point = 0;
  4871  000608  902C               	bcf	_flag^0,0,c
  4872                           
  4873                           ;main.c: 474: }
  4874  00060A  D08E               	goto	l11489
  4875  00060C                     l11421:
  4876                           
  4877                           ; BSR set to: 1
  4878                           ;main.c: 475: else if((poligono_ext[0].diff_long_min == 0 ||;main.c: 476: poligono_ext[1
      +                          ].diff_long_min == 0 ) &&;main.c: 479: (poligono_ext[0].diff_long_deg == 0 ||;main.c: 48
      +                          0: poligono_ext[1].diff_long_deg == 0))
  4879  00060C  5160               	movf	(_poligono_ext+60)& (0+255),w,b
  4880  00060E  1161               	iorwf	(_poligono_ext+61)& (0+255),w,b
  4881  000610  1162               	iorwf	(_poligono_ext+62)& (0+255),w,b
  4882  000612  1163               	iorwf	(_poligono_ext+63)& (0+255),w,b
  4883  000614  B4D8               	btfsc	status,2,c
  4884  000616  D006               	goto	u14600
  4885  000618                     u14590:
  4886                           
  4887                           ; BSR set to: 1
  4888  000618  51A0               	movf	(_poligono_ext+124)& (0+255),w,b
  4889  00061A  11A1               	iorwf	(_poligono_ext+125)& (0+255),w,b
  4890  00061C  11A2               	iorwf	(_poligono_ext+126)& (0+255),w,b
  4891  00061E  11A3               	iorwf	(_poligono_ext+127)& (0+255),w,b
  4892  000620  A4D8               	btfss	status,2,c
  4893  000622  D00C               	goto	l199
  4894  000624                     u14600:
  4895                           
  4896                           ; BSR set to: 1
  4897  000624  5140               	movf	(_poligono_ext+28)& (0+255),w,b
  4898  000626  1141               	iorwf	(_poligono_ext+29)& (0+255),w,b
  4899  000628  1142               	iorwf	(_poligono_ext+30)& (0+255),w,b
  4900  00062A  1143               	iorwf	(_poligono_ext+31)& (0+255),w,b
  4901  00062C  B4D8               	btfsc	status,2,c
  4902  00062E  D7EC               	goto	u14580
  4903                           
  4904                           ; BSR set to: 1
  4905  000630  5180               	movf	(_poligono_ext+92)& (0+255),w,b
  4906  000632  1181               	iorwf	(_poligono_ext+93)& (0+255),w,b
  4907  000634  1182               	iorwf	(_poligono_ext+94)& (0+255),w,b
  4908  000636  1183               	iorwf	(_poligono_ext+95)& (0+255),w,b
  4909  000638  B4D8               	btfsc	status,2,c
  4910  00063A  D7E6               	goto	u14580
  4911  00063C                     l199:
  4912                           
  4913                           ; BSR set to: 1
  4914                           ;main.c: 484: else;main.c: 485: {;main.c: 486: flag[0].point = 1;
  4915  00063C  802C               	bsf	_flag^0,0,c
  4916  00063E  D074               	goto	l11489
  4917  000640                     l11429:
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;main.c: 491: if(;main.c: 492: (poligono_ext[0].diff_long_min <= 0 &&;main.c: 493: polig
      +                          ono_ext[1].diff_long_min >= 0 ) &&;main.c: 494: (poligono_ext[0].diff_lat_deg <= 0 &&;ma
      +                          in.c: 495: poligono_ext[1].diff_lat_deg >= 0))
  4921  000640  0101               	movlb	1	; () banked
  4922  000642  BF63               	btfsc	(_poligono_ext+63)& (0+255),7,b
  4923  000644  D007               	goto	u14630
  4924  000646  5163               	movf	(_poligono_ext+63)& (0+255),w,b
  4925  000648  1162               	iorwf	(_poligono_ext+62)& (0+255),w,b
  4926  00064A  1161               	iorwf	(_poligono_ext+61)& (0+255),w,b
  4927  00064C  E110               	bnz	l11439
  4928  00064E  0560               	decf	(_poligono_ext+60)& (0+255),w,b
  4929  000650  B0D8               	btfsc	status,0,c
  4930  000652  D00D               	goto	l11439
  4931  000654                     u14630:
  4932                           
  4933                           ; BSR set to: 1
  4934  000654  BFA3               	btfsc	(_poligono_ext+127)& (0+255),7,b
  4935  000656  D00B               	goto	l11439
  4936                           
  4937                           ; BSR set to: 1
  4938  000658  BF3F               	btfsc	(_poligono_ext+27)& (0+255),7,b
  4939  00065A  D007               	goto	u14650
  4940  00065C  513F               	movf	(_poligono_ext+27)& (0+255),w,b
  4941  00065E  113E               	iorwf	(_poligono_ext+26)& (0+255),w,b
  4942  000660  113D               	iorwf	(_poligono_ext+25)& (0+255),w,b
  4943  000662  E105               	bnz	l11439
  4944  000664  053C               	decf	(_poligono_ext+24)& (0+255),w,b
  4945  000666  B0D8               	btfsc	status,0,c
  4946  000668  D002               	goto	l11439
  4947  00066A                     u14650:
  4948                           
  4949                           ; BSR set to: 1
  4950  00066A  AF7F               	btfss	(_poligono_ext+91)& (0+255),7,b
  4951  00066C  D7CD               	goto	u14580
  4952  00066E                     l11439:
  4953                           
  4954                           ; BSR set to: 1
  4955                           ;main.c: 499: else if((poligono_ext[0].diff_long_min == 0 ||;main.c: 500: poligono_ext[1
      +                          ].diff_long_min == 0) &&;main.c: 501: (poligono_ext[0].diff_long_deg == 0 ||;main.c: 502
      +                          : poligono_ext[1].diff_long_deg == 0))
  4956  00066E  5160               	movf	(_poligono_ext+60)& (0+255),w,b
  4957  000670  1161               	iorwf	(_poligono_ext+61)& (0+255),w,b
  4958  000672  1162               	iorwf	(_poligono_ext+62)& (0+255),w,b
  4959  000674  1163               	iorwf	(_poligono_ext+63)& (0+255),w,b
  4960  000676  A4D8               	btfss	status,2,c
  4961  000678  D7CF               	goto	u14590
  4962                           
  4963                           ; BSR set to: 1
  4964  00067A  D7D4               	goto	u14600
  4965  00067C                     l11449:
  4966                           
  4967                           ; BSR set to: 0
  4968  00067C  51CE               	movf	verifica_fence_externo@temp_buff_long& (0+255),w,b
  4969                           
  4970                           ; Switch size 1, requested type "simple"
  4971                           ; Number of cases is 1, Range of values is 45 to 45
  4972                           ; switch strategies available:
  4973                           ; Name         Instructions Cycles
  4974                           ; simple_byte            4     3 (average)
  4975                           ;	Chosen strategy is simple_byte
  4976  00067E  0A2D               	xorlw	45	; case 45
  4977  000680  B4D8               	btfsc	status,2,c
  4978  000682  D7AB               	goto	l11411
  4979  000684  D7DD               	goto	l11429
  4980  000686                     l11451:
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;main.c: 517: if(;main.c: 518: (;main.c: 519: poligono_ext[0].diff_lat_min <= 0 &&;main.
      +                          c: 520: poligono_ext[1].diff_lat_min >= 0) &&;main.c: 522: (poligono_ext[0].diff_lat_deg
      +                           <= 0 &&;main.c: 523: poligono_ext[1].diff_lat_deg >= 0))
  4984  000686  0101               	movlb	1	; () banked
  4985  000688  BF5F               	btfsc	(_poligono_ext+59)& (0+255),7,b
  4986  00068A  D007               	goto	u14710
  4987  00068C  515F               	movf	(_poligono_ext+59)& (0+255),w,b
  4988  00068E  115E               	iorwf	(_poligono_ext+58)& (0+255),w,b
  4989  000690  115D               	iorwf	(_poligono_ext+57)& (0+255),w,b
  4990  000692  E112               	bnz	l11461
  4991  000694  055C               	decf	(_poligono_ext+56)& (0+255),w,b
  4992  000696  B0D8               	btfsc	status,0,c
  4993  000698  D00F               	goto	l11461
  4994  00069A                     u14710:
  4995                           
  4996                           ; BSR set to: 1
  4997  00069A  BF9F               	btfsc	(_poligono_ext+123)& (0+255),7,b
  4998  00069C  D00D               	goto	l11461
  4999                           
  5000                           ; BSR set to: 1
  5001  00069E  BF3F               	btfsc	(_poligono_ext+27)& (0+255),7,b
  5002  0006A0  D007               	goto	u14730
  5003  0006A2  513F               	movf	(_poligono_ext+27)& (0+255),w,b
  5004  0006A4  113E               	iorwf	(_poligono_ext+26)& (0+255),w,b
  5005  0006A6  113D               	iorwf	(_poligono_ext+25)& (0+255),w,b
  5006  0006A8  E107               	bnz	l11461
  5007  0006AA  053C               	decf	(_poligono_ext+24)& (0+255),w,b
  5008  0006AC  B0D8               	btfsc	status,0,c
  5009  0006AE  D004               	goto	l11461
  5010  0006B0                     u14730:
  5011                           
  5012                           ; BSR set to: 1
  5013  0006B0  BF7F               	btfsc	(_poligono_ext+91)& (0+255),7,b
  5014  0006B2  D002               	goto	l11461
  5015  0006B4                     u14740:
  5016                           
  5017                           ; BSR set to: 1
  5018                           ;main.c: 525: {;main.c: 526: flag[1].point = 0;
  5019  0006B4  902D               	bcf	(_flag+1)^0,0,c
  5020                           
  5021                           ;main.c: 527: }
  5022  0006B6  D03E               	goto	l225
  5023  0006B8                     l11461:
  5024                           
  5025                           ; BSR set to: 1
  5026                           ;main.c: 528: else if(;main.c: 529: (poligono_ext[0].diff_lat_min == 0 ||;main.c: 530: p
      +                          oligono_ext[1].diff_lat_min == 0) &&;main.c: 531: (poligono_ext[0].diff_lat_deg == 0 ||;
      +                          main.c: 532: poligono_ext[1].diff_lat_deg == 0))
  5027  0006B8  515C               	movf	(_poligono_ext+56)& (0+255),w,b
  5028  0006BA  115D               	iorwf	(_poligono_ext+57)& (0+255),w,b
  5029  0006BC  115E               	iorwf	(_poligono_ext+58)& (0+255),w,b
  5030  0006BE  115F               	iorwf	(_poligono_ext+59)& (0+255),w,b
  5031  0006C0  B4D8               	btfsc	status,2,c
  5032  0006C2  D006               	goto	u14760
  5033  0006C4                     u14750:
  5034                           
  5035                           ; BSR set to: 1
  5036  0006C4  519C               	movf	(_poligono_ext+120)& (0+255),w,b
  5037  0006C6  119D               	iorwf	(_poligono_ext+121)& (0+255),w,b
  5038  0006C8  119E               	iorwf	(_poligono_ext+122)& (0+255),w,b
  5039  0006CA  119F               	iorwf	(_poligono_ext+123)& (0+255),w,b
  5040  0006CC  A4D8               	btfss	status,2,c
  5041  0006CE  D00C               	goto	l219
  5042  0006D0                     u14760:
  5043                           
  5044                           ; BSR set to: 1
  5045  0006D0  513C               	movf	(_poligono_ext+24)& (0+255),w,b
  5046  0006D2  113D               	iorwf	(_poligono_ext+25)& (0+255),w,b
  5047  0006D4  113E               	iorwf	(_poligono_ext+26)& (0+255),w,b
  5048  0006D6  113F               	iorwf	(_poligono_ext+27)& (0+255),w,b
  5049  0006D8  B4D8               	btfsc	status,2,c
  5050  0006DA  D7EC               	goto	u14740
  5051                           
  5052                           ; BSR set to: 1
  5053  0006DC  517C               	movf	(_poligono_ext+88)& (0+255),w,b
  5054  0006DE  117D               	iorwf	(_poligono_ext+89)& (0+255),w,b
  5055  0006E0  117E               	iorwf	(_poligono_ext+90)& (0+255),w,b
  5056  0006E2  117F               	iorwf	(_poligono_ext+91)& (0+255),w,b
  5057  0006E4  B4D8               	btfsc	status,2,c
  5058  0006E6  D7E6               	goto	u14740
  5059  0006E8                     l219:
  5060                           
  5061                           ; BSR set to: 1
  5062                           ;main.c: 537: else;main.c: 538: {;main.c: 539: flag[1].point = 1;
  5063  0006E8  802D               	bsf	(_flag+1)^0,0,c
  5064  0006EA  D024               	goto	l225
  5065  0006EC                     l11469:
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;main.c: 544: if((poligono_ext[0].diff_lat_min >= 0 &&;main.c: 545: poligono_ext[1].diff
      +                          _lat_min <= 0 ) &&;main.c: 548: (poligono_ext[0].diff_lat_deg >= 0 &&;main.c: 549: polig
      +                          ono_ext[1].diff_lat_deg <= 0);main.c: 550: )
  5069  0006EC  0101               	movlb	1	; () banked
  5070  0006EE  BF5F               	btfsc	(_poligono_ext+59)& (0+255),7,b
  5071  0006F0  D014               	goto	l11479
  5072                           
  5073                           ; BSR set to: 1
  5074  0006F2  BF9F               	btfsc	(_poligono_ext+123)& (0+255),7,b
  5075  0006F4  D007               	goto	u14800
  5076  0006F6  519F               	movf	(_poligono_ext+123)& (0+255),w,b
  5077  0006F8  119E               	iorwf	(_poligono_ext+122)& (0+255),w,b
  5078  0006FA  119D               	iorwf	(_poligono_ext+121)& (0+255),w,b
  5079  0006FC  E10E               	bnz	l11479
  5080  0006FE  059C               	decf	(_poligono_ext+120)& (0+255),w,b
  5081  000700  B0D8               	btfsc	status,0,c
  5082  000702  D00B               	goto	l11479
  5083  000704                     u14800:
  5084                           
  5085                           ; BSR set to: 1
  5086  000704  BF3F               	btfsc	(_poligono_ext+27)& (0+255),7,b
  5087  000706  D009               	goto	l11479
  5088                           
  5089                           ; BSR set to: 1
  5090  000708  BF7F               	btfsc	(_poligono_ext+91)& (0+255),7,b
  5091  00070A  D7D4               	goto	u14740
  5092  00070C  517F               	movf	(_poligono_ext+91)& (0+255),w,b
  5093  00070E  117E               	iorwf	(_poligono_ext+90)& (0+255),w,b
  5094  000710  117D               	iorwf	(_poligono_ext+89)& (0+255),w,b
  5095  000712  E103               	bnz	l11479
  5096  000714  057C               	decf	(_poligono_ext+88)& (0+255),w,b
  5097  000716  A0D8               	btfss	status,0,c
  5098  000718  D7CD               	goto	u14740
  5099  00071A                     l11479:
  5100                           
  5101                           ; BSR set to: 1
  5102                           ;main.c: 554: else if((poligono_ext[0].diff_lat_min == 0 ||;main.c: 555: poligono_ext[1]
      +                          .diff_lat_min == 0) &&;main.c: 557: (poligono_ext[0].diff_lat_deg == 0 ||;main.c: 558: p
      +                          oligono_ext[1].diff_lat_deg == 0))
  5103  00071A  515C               	movf	(_poligono_ext+56)& (0+255),w,b
  5104  00071C  115D               	iorwf	(_poligono_ext+57)& (0+255),w,b
  5105  00071E  115E               	iorwf	(_poligono_ext+58)& (0+255),w,b
  5106  000720  115F               	iorwf	(_poligono_ext+59)& (0+255),w,b
  5107  000722  A4D8               	btfss	status,2,c
  5108  000724  D7CF               	goto	u14750
  5109                           
  5110                           ; BSR set to: 1
  5111  000726  D7D4               	goto	u14760
  5112  000728                     l11489:
  5113                           
  5114                           ; BSR set to: 1
  5115  000728  0100               	movlb	0	; () banked
  5116  00072A  51DA               	movf	verifica_fence_externo@temp_buff_lat& (0+255),w,b
  5117                           
  5118                           ; Switch size 1, requested type "simple"
  5119                           ; Number of cases is 1, Range of values is 45 to 45
  5120                           ; switch strategies available:
  5121                           ; Name         Instructions Cycles
  5122                           ; simple_byte            4     3 (average)
  5123                           ;	Chosen strategy is simple_byte
  5124  00072C  0A2D               	xorlw	45	; case 45
  5125  00072E  B4D8               	btfsc	status,2,c
  5126  000730  D7AA               	goto	l11451
  5127  000732  D7DC               	goto	l11469
  5128  000734                     l225:
  5129                           
  5130                           ; BSR set to: 1
  5131                           ;main.c: 573: if(flag[0].point || flag[1].point)
  5132  000734  B02C               	btfsc	_flag^0,0,c
  5133  000736  D002               	goto	u14880
  5134                           
  5135                           ; BSR set to: 1
  5136  000738  A02D               	btfss	(_flag+1)^0,0,c
  5137  00073A  D031               	goto	l235
  5138  00073C                     u14880:
  5139                           
  5140                           ; BSR set to: 1
  5141                           ;main.c: 574: {;main.c: 575: flag[2].point = 1;
  5142  00073C  802E               	bsf	(_flag+2)^0,0,c
  5143                           
  5144                           ; BSR set to: 1
  5145                           ;main.c: 576: posicao_cursor_lcd(1,0);
  5146  00073E  0E00               	movlw	0
  5147  000740  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  5148  000742  0E01               	movlw	1
  5149  000744  ECF0  F024         	call	_posicao_cursor_lcd
  5150                           
  5151                           ;main.c: 577: escreve_frase_ram_lcd("REGIAO NEGADA");
  5152  000748  0EF1               	movlw	low STR_1
  5153  00074A  6E1E               	movwf	escreve_frase_ram_lcd@buffer^0,c
  5154  00074C  0E61               	movlw	high STR_1
  5155  00074E  6E1F               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  5156  000750  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  5157                           
  5158                           ;main.c: 578: posicao_cursor_lcd(2,14);
  5159  000754  0E0E               	movlw	14
  5160  000756  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  5161  000758  0E02               	movlw	2
  5162  00075A  ECF0  F024         	call	_posicao_cursor_lcd
  5163                           
  5164                           ;main.c: 579: escreve_inteiro_lcd(flag[0].point);
  5165  00075E  A02C               	btfss	_flag^0,0,c
  5166  000760  D004               	goto	u14890
  5167  000762  0100               	movlb	0	; () banked
  5168  000764  6B6C               	clrf	??_verifica_fence_externo& (0+255),b
  5169  000766  2B6C               	incf	??_verifica_fence_externo& (0+255),f,b
  5170  000768  D002               	goto	u14898
  5171  00076A                     u14890:
  5172  00076A  0100               	movlb	0	; () banked
  5173  00076C  6B6C               	clrf	??_verifica_fence_externo& (0+255),b
  5174  00076E                     u14898:
  5175  00076E  516C               	movf	??_verifica_fence_externo& (0+255),w,b
  5176  000770  6E2A               	movwf	escreve_inteiro_lcd@valor^0,c
  5177  000772  6A2B               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  5178  000774  EC48  F027         	call	_escreve_inteiro_lcd	;wreg free
  5179                           
  5180                           ;main.c: 580: posicao_cursor_lcd(2,15);
  5181  000778  0E0F               	movlw	15
  5182  00077A  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
  5183  00077C  0E02               	movlw	2
  5184  00077E  ECF0  F024         	call	_posicao_cursor_lcd
  5185                           
  5186                           ;main.c: 581: escreve_inteiro_lcd(flag[1].point);
  5187  000782  A02D               	btfss	(_flag+1)^0,0,c
  5188  000784  D004               	goto	u14900
  5189  000786  0100               	movlb	0	; () banked
  5190  000788  6B6C               	clrf	??_verifica_fence_externo& (0+255),b
  5191  00078A  2B6C               	incf	??_verifica_fence_externo& (0+255),f,b
  5192  00078C  D002               	goto	u14908
  5193  00078E                     u14900:
  5194  00078E  0100               	movlb	0	; () banked
  5195  000790  6B6C               	clrf	??_verifica_fence_externo& (0+255),b
  5196  000792                     u14908:
  5197  000792  516C               	movf	??_verifica_fence_externo& (0+255),w,b
  5198  000794  6E2A               	movwf	escreve_inteiro_lcd@valor^0,c
  5199  000796  6A2B               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  5200  000798  EC48  F027         	call	_escreve_inteiro_lcd	;wreg free
  5201                           
  5202                           ;main.c: 582: }
  5203  00079C  0012               	return	
  5204  00079E                     l235:
  5205                           
  5206                           ; BSR set to: 1
  5207                           ;main.c: 583: else;main.c: 584: {;main.c: 585: flag[2].point = 0;
  5208  00079E  902E               	bcf	(_flag+2)^0,0,c
  5209  0007A0  0012               	return		;funcret
  5210  0007A2                     __end_of_verifica_fence_externo:
  5211                           	callstack 0
  5212                           
  5213 ;; *************** function _escreve_inteiro_lcd *****************
  5214 ;; Defined at:
  5215 ;;		line 376 in file "bibliotecas/display_lcd.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  valor           2   41[COMRAM] int 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  texto           7    5[BANK0 ] unsigned char [7]
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 3F/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5229 ;;      Params:         2       0       0       0       0       0       0       0       0
  5230 ;;      Locals:         0       7       0       0       0       0       0       0       0
  5231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5232 ;;      Totals:         2       7       0       0       0       0       0       0       0
  5233 ;;Total ram usage:        9 bytes
  5234 ;; Hardware stack levels used: 1
  5235 ;; Hardware stack levels required when called: 6
  5236 ;; This function calls:
  5237 ;;		_escreve_frase_ram_lcd
  5238 ;;		_itoa
  5239 ;; This function is called by:
  5240 ;;		_verifica_fence_externo
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text16
  5245  004E90                     __ptext16:
  5246                           	callstack 0
  5247  004E90                     _escreve_inteiro_lcd:
  5248                           	callstack 22
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;display_lcd.c: 378: char texto[7] = "000000";
  5252                           
  5253                           ;incstack = 0
  5254  004E90  EE21  F0F6         	lfsr	2,escreve_inteiro_lcd@F3223
  5255  004E94  EE10  F065         	lfsr	1,escreve_inteiro_lcd@texto
  5256  004E98  0E06               	movlw	6
  5257  004E9A                     u14141:
  5258  004E9A  CFDB FFE3          	movff	plusw2,plusw1
  5259  004E9E  06E8               	decf	wreg,f,c
  5260  004EA0  E2FC               	bc	u14141
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;display_lcd.c: 379: itoa(texto,valor, 10);
  5264  004EA2  0E65               	movlw	low escreve_inteiro_lcd@texto
  5265  004EA4  6F60               	movwf	itoa@buf& (0+255),b
  5266  004EA6  C02A  F061         	movff	escreve_inteiro_lcd@valor,itoa@val
  5267  004EAA  C02B  F062         	movff	escreve_inteiro_lcd@valor+1,itoa@val+1
  5268  004EAE  0E00               	movlw	0
  5269  004EB0  6F64               	movwf	(itoa@base+1)& (0+255),b
  5270  004EB2  0E0A               	movlw	10
  5271  004EB4  6F63               	movwf	itoa@base& (0+255),b
  5272  004EB6  EC7E  F027         	call	_itoa	;wreg free
  5273                           
  5274                           ;display_lcd.c: 380: escreve_frase_ram_lcd(texto);
  5275  004EBA  0E65               	movlw	low escreve_inteiro_lcd@texto
  5276  004EBC  6E1E               	movwf	escreve_frase_ram_lcd@buffer^0,c
  5277  004EBE  6A1F               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  5278  004EC0  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
  5279  004EC4  0012               	return		;funcret
  5280  004EC6                     __end_of_escreve_inteiro_lcd:
  5281                           	callstack 0
  5282                           
  5283 ;; *************** function _itoa *****************
  5284 ;; Defined at:
  5285 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;  buf             1    0[BANK0 ] PTR unsigned char 
  5288 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
  5289 ;;  val             2    1[BANK0 ] int 
  5290 ;;  base            2    3[BANK0 ] int 
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;  cp              1    0        PTR unsigned char 
  5293 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
  5294 ;; Return value:  Size  Location     Type
  5295 ;;                  1    wreg      PTR unsigned char 
  5296 ;; Registers used:
  5297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5298 ;; Tracked objects:
  5299 ;;		On entry : 3F/0
  5300 ;;		On exit  : 0/0
  5301 ;;		Unchanged: 0/0
  5302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5303 ;;      Params:         0       5       0       0       0       0       0       0       0
  5304 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5306 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5307 ;;Total ram usage:        5 bytes
  5308 ;; Hardware stack levels used: 1
  5309 ;; Hardware stack levels required when called: 5
  5310 ;; This function calls:
  5311 ;;		_utoa
  5312 ;; This function is called by:
  5313 ;;		_escreve_inteiro_lcd
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           	psect	text17
  5318  004EFC                     __ptext17:
  5319                           	callstack 0
  5320  004EFC                     _itoa:
  5321                           	callstack 22
  5322                           
  5323                           ; BSR set to: 0
  5324                           
  5325                           ;incstack = 0
  5326  004EFC  AF62               	btfss	(itoa@val+1)& (0+255),7,b
  5327  004EFE  D00A               	goto	l11081
  5328                           
  5329                           ; BSR set to: 0
  5330  004F00  5160               	movf	itoa@buf& (0+255),w,b
  5331  004F02  6ED9               	movwf	fsr2l,c
  5332  004F04  6ADA               	clrf	fsr2h,c
  5333  004F06  0E2D               	movlw	45
  5334  004F08  6EDF               	movwf	indf2,c
  5335                           
  5336                           ; BSR set to: 0
  5337  004F0A  2B60               	incf	itoa@buf& (0+255),f,b
  5338                           
  5339                           ; BSR set to: 0
  5340  004F0C  6D61               	negf	itoa@val& (0+255),b
  5341  004F0E  1F62               	comf	(itoa@val+1)& (0+255),f,b
  5342  004F10  B0D8               	btfsc	status,0,c
  5343  004F12  2B62               	incf	(itoa@val+1)& (0+255),f,b
  5344  004F14                     l11081:
  5345                           
  5346                           ; BSR set to: 0
  5347  004F14  C060  F022         	movff	itoa@buf,utoa@buf
  5348  004F18  C061  F023         	movff	itoa@val,utoa@val
  5349  004F1C  C062  F024         	movff	itoa@val+1,utoa@val+1
  5350  004F20  C063  F025         	movff	itoa@base,utoa@base
  5351  004F24  C064  F026         	movff	itoa@base+1,utoa@base+1
  5352  004F28  EC86  F021         	call	_utoa	;wreg free
  5353  004F2C  0012               	return		;funcret
  5354  004F2E                     __end_of_itoa:
  5355                           	callstack 0
  5356                           
  5357 ;; *************** function _utoa *****************
  5358 ;; Defined at:
  5359 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  buf             1   33[COMRAM] PTR unsigned char 
  5362 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
  5363 ;;  val             2   34[COMRAM] unsigned int 
  5364 ;;  base            2   36[COMRAM] int 
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;  v               2   38[COMRAM] unsigned int 
  5367 ;;  c               1   40[COMRAM] unsigned char 
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  1    wreg      PTR unsigned char 
  5370 ;; Registers used:
  5371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5372 ;; Tracked objects:
  5373 ;;		On entry : 3F/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5377 ;;      Params:         5       0       0       0       0       0       0       0       0
  5378 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5380 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5381 ;;Total ram usage:        8 bytes
  5382 ;; Hardware stack levels used: 1
  5383 ;; Hardware stack levels required when called: 4
  5384 ;; This function calls:
  5385 ;;		___lwdiv
  5386 ;;		___lwmod
  5387 ;; This function is called by:
  5388 ;;		_itoa
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           	psect	text18
  5393  00430C                     __ptext18:
  5394                           	callstack 0
  5395  00430C                     _utoa:
  5396                           	callstack 22
  5397                           
  5398                           ; BSR set to: 0
  5399                           
  5400                           ;incstack = 0
  5401  00430C  C023  F027         	movff	utoa@val,utoa@v
  5402  004310  C024  F028         	movff	utoa@val+1,utoa@v+1
  5403  004314                     l10681:
  5404  004314  C027  F01B         	movff	utoa@v,___lwdiv@dividend
  5405  004318  C028  F01C         	movff	utoa@v+1,___lwdiv@dividend+1
  5406  00431C  C025  F01D         	movff	utoa@base,___lwdiv@divisor
  5407  004320  C026  F01E         	movff	utoa@base+1,___lwdiv@divisor+1
  5408  004324  EC77  F025         	call	___lwdiv	;wreg free
  5409  004328  C01B  F027         	movff	?___lwdiv,utoa@v
  5410  00432C  C01C  F028         	movff	?___lwdiv+1,utoa@v+1
  5411  004330  2A22               	incf	utoa@buf^0,f,c
  5412  004332  5027               	movf	utoa@v^0,w,c
  5413  004334  1028               	iorwf	(utoa@v+1)^0,w,c
  5414  004336  A4D8               	btfss	status,2,c
  5415  004338  D7ED               	goto	l10681
  5416  00433A  5022               	movf	utoa@buf^0,w,c
  5417  00433C  6ED9               	movwf	fsr2l,c
  5418  00433E  6ADA               	clrf	fsr2h,c
  5419  004340  0E00               	movlw	0
  5420  004342  6EDF               	movwf	indf2,c
  5421  004344  0622               	decf	utoa@buf^0,f,c
  5422  004346                     l10691:
  5423  004346  C023  F01B         	movff	utoa@val,___lwmod@dividend
  5424  00434A  C024  F01C         	movff	utoa@val+1,___lwmod@dividend+1
  5425  00434E  C025  F01D         	movff	utoa@base,___lwmod@divisor
  5426  004352  C026  F01E         	movff	utoa@base+1,___lwmod@divisor+1
  5427  004356  ECCC  F026         	call	___lwmod	;wreg free
  5428  00435A  501B               	movf	?___lwmod^0,w,c
  5429  00435C  6E29               	movwf	utoa@c^0,c
  5430  00435E  C023  F01B         	movff	utoa@val,___lwdiv@dividend
  5431  004362  C024  F01C         	movff	utoa@val+1,___lwdiv@dividend+1
  5432  004366  C025  F01D         	movff	utoa@base,___lwdiv@divisor
  5433  00436A  C026  F01E         	movff	utoa@base+1,___lwdiv@divisor+1
  5434  00436E  EC77  F025         	call	___lwdiv	;wreg free
  5435  004372  C01B  F023         	movff	?___lwdiv,utoa@val
  5436  004376  C01C  F024         	movff	?___lwdiv+1,utoa@val+1
  5437  00437A  0E09               	movlw	9
  5438  00437C  6429               	cpfsgt	utoa@c^0,c
  5439  00437E  D002               	goto	l2220
  5440  004380  0E07               	movlw	7
  5441  004382  2629               	addwf	utoa@c^0,f,c
  5442  004384                     l2220:
  5443  004384  0E30               	movlw	48
  5444  004386  2629               	addwf	utoa@c^0,f,c
  5445  004388  5022               	movf	utoa@buf^0,w,c
  5446  00438A  6ED9               	movwf	fsr2l,c
  5447  00438C  6ADA               	clrf	fsr2h,c
  5448  00438E  C029  FFDF         	movff	utoa@c,indf2
  5449  004392  0622               	decf	utoa@buf^0,f,c
  5450  004394  5023               	movf	utoa@val^0,w,c
  5451  004396  1024               	iorwf	(utoa@val+1)^0,w,c
  5452  004398  A4D8               	btfss	status,2,c
  5453  00439A  D7D5               	goto	l10691
  5454                           
  5455                           ;	Return value of _utoa is never used
  5456  00439C  2A22               	incf	utoa@buf^0,f,c
  5457  00439E  0012               	return		;funcret
  5458  0043A0                     __end_of_utoa:
  5459                           	callstack 0
  5460                           
  5461 ;; *************** function ___lwmod *****************
  5462 ;; Defined at:
  5463 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;  dividend        2   26[COMRAM] unsigned int 
  5466 ;;  divisor         2   28[COMRAM] unsigned int 
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;  counter         1   30[COMRAM] unsigned char 
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  2   26[COMRAM] unsigned int 
  5471 ;; Registers used:
  5472 ;;		wreg, status,2, status,0
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5478 ;;      Params:         4       0       0       0       0       0       0       0       0
  5479 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5480 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5481 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5482 ;;Total ram usage:        5 bytes
  5483 ;; Hardware stack levels used: 1
  5484 ;; Hardware stack levels required when called: 3
  5485 ;; This function calls:
  5486 ;;		Nothing
  5487 ;; This function is called by:
  5488 ;;		_utoa
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           	psect	text19
  5493  004D98                     __ptext19:
  5494                           	callstack 0
  5495  004D98                     ___lwmod:
  5496                           	callstack 22
  5497                           
  5498                           ;incstack = 0
  5499  004D98  501D               	movf	___lwmod@divisor^0,w,c
  5500  004D9A  101E               	iorwf	(___lwmod@divisor+1)^0,w,c
  5501  004D9C  B4D8               	btfsc	status,2,c
  5502  004D9E  D018               	goto	l2014
  5503  004DA0  0E01               	movlw	1
  5504  004DA2  6E1F               	movwf	___lwmod@counter^0,c
  5505  004DA4  D004               	goto	l10297
  5506  004DA6                     l10295:
  5507  004DA6  90D8               	bcf	status,0,c
  5508  004DA8  361D               	rlcf	___lwmod@divisor^0,f,c
  5509  004DAA  361E               	rlcf	(___lwmod@divisor+1)^0,f,c
  5510  004DAC  2A1F               	incf	___lwmod@counter^0,f,c
  5511  004DAE                     l10297:
  5512  004DAE  AE1E               	btfss	(___lwmod@divisor+1)^0,7,c
  5513  004DB0  D7FA               	goto	l10295
  5514  004DB2                     u12580:
  5515  004DB2  501D               	movf	___lwmod@divisor^0,w,c
  5516  004DB4  5C1B               	subwf	___lwmod@dividend^0,w,c
  5517  004DB6  501E               	movf	(___lwmod@divisor+1)^0,w,c
  5518  004DB8  581C               	subwfb	(___lwmod@dividend+1)^0,w,c
  5519  004DBA  A0D8               	btfss	status,0,c
  5520  004DBC  D004               	goto	l10303
  5521  004DBE  501D               	movf	___lwmod@divisor^0,w,c
  5522  004DC0  5E1B               	subwf	___lwmod@dividend^0,f,c
  5523  004DC2  501E               	movf	(___lwmod@divisor+1)^0,w,c
  5524  004DC4  5A1C               	subwfb	(___lwmod@dividend+1)^0,f,c
  5525  004DC6                     l10303:
  5526  004DC6  90D8               	bcf	status,0,c
  5527  004DC8  321E               	rrcf	(___lwmod@divisor+1)^0,f,c
  5528  004DCA  321D               	rrcf	___lwmod@divisor^0,f,c
  5529  004DCC  2E1F               	decfsz	___lwmod@counter^0,f,c
  5530  004DCE  D7F1               	goto	u12580
  5531  004DD0                     l2014:
  5532  004DD0  C01B  F01B         	movff	___lwmod@dividend,?___lwmod
  5533  004DD4  C01C  F01C         	movff	___lwmod@dividend+1,?___lwmod+1
  5534  004DD8  0012               	return		;funcret
  5535  004DDA                     __end_of___lwmod:
  5536                           	callstack 0
  5537                           
  5538 ;; *************** function ___lwdiv *****************
  5539 ;; Defined at:
  5540 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;  dividend        2   26[COMRAM] unsigned int 
  5543 ;;  divisor         2   28[COMRAM] unsigned int 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  quotient        2   31[COMRAM] unsigned int 
  5546 ;;  counter         1   30[COMRAM] unsigned char 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  2   26[COMRAM] unsigned int 
  5549 ;; Registers used:
  5550 ;;		wreg, status,2, status,0
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5556 ;;      Params:         4       0       0       0       0       0       0       0       0
  5557 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5559 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5560 ;;Total ram usage:        7 bytes
  5561 ;; Hardware stack levels used: 1
  5562 ;; Hardware stack levels required when called: 3
  5563 ;; This function calls:
  5564 ;;		Nothing
  5565 ;; This function is called by:
  5566 ;;		_utoa
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text20
  5571  004AEE                     __ptext20:
  5572                           	callstack 0
  5573  004AEE                     ___lwdiv:
  5574                           	callstack 22
  5575                           
  5576                           ;incstack = 0
  5577  004AEE  0E00               	movlw	0
  5578  004AF0  6E21               	movwf	(___lwdiv@quotient+1)^0,c
  5579  004AF2  0E00               	movlw	0
  5580  004AF4  6E20               	movwf	___lwdiv@quotient^0,c
  5581  004AF6  501D               	movf	___lwdiv@divisor^0,w,c
  5582  004AF8  101E               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5583  004AFA  B4D8               	btfsc	status,2,c
  5584  004AFC  D01C               	goto	l2004
  5585  004AFE  0E01               	movlw	1
  5586  004B00  6E1F               	movwf	___lwdiv@counter^0,c
  5587  004B02  D004               	goto	l10277
  5588  004B04                     l10275:
  5589  004B04  90D8               	bcf	status,0,c
  5590  004B06  361D               	rlcf	___lwdiv@divisor^0,f,c
  5591  004B08  361E               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5592  004B0A  2A1F               	incf	___lwdiv@counter^0,f,c
  5593  004B0C                     l10277:
  5594  004B0C  AE1E               	btfss	(___lwdiv@divisor+1)^0,7,c
  5595  004B0E  D7FA               	goto	l10275
  5596  004B10                     u12550:
  5597  004B10  90D8               	bcf	status,0,c
  5598  004B12  3620               	rlcf	___lwdiv@quotient^0,f,c
  5599  004B14  3621               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5600  004B16  501D               	movf	___lwdiv@divisor^0,w,c
  5601  004B18  5C1B               	subwf	___lwdiv@dividend^0,w,c
  5602  004B1A  501E               	movf	(___lwdiv@divisor+1)^0,w,c
  5603  004B1C  581C               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5604  004B1E  A0D8               	btfss	status,0,c
  5605  004B20  D005               	goto	l10287
  5606  004B22  501D               	movf	___lwdiv@divisor^0,w,c
  5607  004B24  5E1B               	subwf	___lwdiv@dividend^0,f,c
  5608  004B26  501E               	movf	(___lwdiv@divisor+1)^0,w,c
  5609  004B28  5A1C               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5610  004B2A  8020               	bsf	___lwdiv@quotient^0,0,c
  5611  004B2C                     l10287:
  5612  004B2C  90D8               	bcf	status,0,c
  5613  004B2E  321E               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5614  004B30  321D               	rrcf	___lwdiv@divisor^0,f,c
  5615  004B32  2E1F               	decfsz	___lwdiv@counter^0,f,c
  5616  004B34  D7ED               	goto	u12550
  5617  004B36                     l2004:
  5618  004B36  C020  F01B         	movff	___lwdiv@quotient,?___lwdiv
  5619  004B3A  C021  F01C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5620  004B3E  0012               	return		;funcret
  5621  004B40                     __end_of___lwdiv:
  5622                           	callstack 0
  5623                           
  5624 ;; *************** function _atoi *****************
  5625 ;; Defined at:
  5626 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\atoi.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;  s               2   32[COMRAM] PTR const unsigned char 
  5629 ;;		 -> poligono_ext.point_long_min(6), poligono_ext.fence_long_min(6), poligono_ext.point_lat_min(6), poligono_ext.fenc
      +e_lat_min(6), 
  5630 ;;		 -> poligono_ext.fence_lat_deg(6), poligono_ext.point_lat_deg(6), poligono_ext.fence_long_deg(6), poligono_ext.point
      +_long_deg(6), 
  5631 ;;		 -> poligono_ext(128), 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;  a               2   37[COMRAM] int 
  5634 ;;  sign            1   36[COMRAM] unsigned char 
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  2   32[COMRAM] int 
  5637 ;; Registers used:
  5638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5639 ;; Tracked objects:
  5640 ;;		On entry : 3F/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5644 ;;      Params:         2       0       0       0       0       0       0       0       0
  5645 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5646 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5647 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5648 ;;Total ram usage:        7 bytes
  5649 ;; Hardware stack levels used: 1
  5650 ;; Hardware stack levels required when called: 4
  5651 ;; This function calls:
  5652 ;;		___wmul
  5653 ;;		_isdigit
  5654 ;; This function is called by:
  5655 ;;		_verifica_fence_externo
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           	psect	text21
  5660  003D76                     __ptext21:
  5661                           	callstack 0
  5662  003D76                     _atoi:
  5663                           	callstack 24
  5664                           
  5665                           ; BSR set to: 0
  5666                           
  5667                           ;incstack = 0
  5668  003D76  D002               	goto	l11133
  5669  003D78                     l11131:
  5670                           
  5671                           ; BSR set to: 0
  5672  003D78  4A21               	infsnz	atoi@s^0,f,c
  5673  003D7A  2A22               	incf	(atoi@s+1)^0,f,c
  5674  003D7C                     l11133:
  5675                           
  5676                           ; BSR set to: 0
  5677  003D7C  C021  FFD9         	movff	atoi@s,fsr2l
  5678  003D80  C022  FFDA         	movff	atoi@s+1,fsr2h
  5679  003D84  0E20               	movlw	32
  5680  003D86  18DE               	xorwf	postinc2,w,c
  5681  003D88  B4D8               	btfsc	status,2,c
  5682  003D8A  D7F6               	goto	l11131
  5683                           
  5684                           ; BSR set to: 0
  5685  003D8C  C021  FFD9         	movff	atoi@s,fsr2l
  5686  003D90  C022  FFDA         	movff	atoi@s+1,fsr2h
  5687  003D94  0E09               	movlw	9
  5688  003D96  18DE               	xorwf	postinc2,w,c
  5689  003D98  B4D8               	btfsc	status,2,c
  5690  003D9A  D7EE               	goto	l11131
  5691                           
  5692                           ; BSR set to: 0
  5693  003D9C  0E00               	movlw	0
  5694  003D9E  6E27               	movwf	(atoi@a+1)^0,c
  5695  003DA0  0E00               	movlw	0
  5696  003DA2  6E26               	movwf	atoi@a^0,c
  5697  003DA4  0E00               	movlw	0
  5698  003DA6  6E25               	movwf	atoi@sign^0,c
  5699                           
  5700                           ; BSR set to: 0
  5701  003DA8  C021  FFD9         	movff	atoi@s,fsr2l
  5702  003DAC  C022  FFDA         	movff	atoi@s+1,fsr2h
  5703  003DB0  0E2D               	movlw	45
  5704  003DB2  18DE               	xorwf	postinc2,w,c
  5705  003DB4  A4D8               	btfss	status,2,c
  5706  003DB6  D002               	goto	l11143
  5707                           
  5708                           ; BSR set to: 0
  5709  003DB8  2A25               	incf	atoi@sign^0,f,c
  5710  003DBA  D008               	goto	u14110
  5711  003DBC                     l11143:
  5712                           
  5713                           ; BSR set to: 0
  5714  003DBC  C021  FFD9         	movff	atoi@s,fsr2l
  5715  003DC0  C022  FFDA         	movff	atoi@s+1,fsr2h
  5716  003DC4  0E2B               	movlw	43
  5717  003DC6  18DE               	xorwf	postinc2,w,c
  5718  003DC8  A4D8               	btfss	status,2,c
  5719  003DCA  D01E               	goto	l11151
  5720  003DCC                     u14110:
  5721  003DCC  4A21               	infsnz	atoi@s^0,f,c
  5722  003DCE  2A22               	incf	(atoi@s+1)^0,f,c
  5723  003DD0  D01B               	goto	l11151
  5724  003DD2                     l11147:
  5725  003DD2  C026  F01B         	movff	atoi@a,___wmul@multiplier
  5726  003DD6  C027  F01C         	movff	atoi@a+1,___wmul@multiplier+1
  5727  003DDA  0E00               	movlw	0
  5728  003DDC  6E1E               	movwf	(___wmul@multiplicand+1)^0,c
  5729  003DDE  0E0A               	movlw	10
  5730  003DE0  6E1D               	movwf	___wmul@multiplicand^0,c
  5731  003DE2  EC1A  F028         	call	___wmul	;wreg free
  5732  003DE6  C021  FFD9         	movff	atoi@s,fsr2l
  5733  003DEA  C022  FFDA         	movff	atoi@s+1,fsr2h
  5734  003DEE  50DF               	movf	indf2,w,c
  5735  003DF0  6E23               	movwf	??_atoi^0,c
  5736  003DF2  5023               	movf	??_atoi^0,w,c
  5737  003DF4  261B               	addwf	?___wmul^0,f,c
  5738  003DF6  0E00               	movlw	0
  5739  003DF8  221C               	addwfc	(?___wmul+1)^0,f,c
  5740  003DFA  0ED0               	movlw	208
  5741  003DFC  241B               	addwf	?___wmul^0,w,c
  5742  003DFE  6E26               	movwf	atoi@a^0,c
  5743  003E00  0EFF               	movlw	255
  5744  003E02  201C               	addwfc	(?___wmul+1)^0,w,c
  5745  003E04  6E27               	movwf	(atoi@a+1)^0,c
  5746  003E06  D7E2               	goto	u14110
  5747  003E08                     l11151:
  5748  003E08  C021  FFD9         	movff	atoi@s,fsr2l
  5749  003E0C  C022  FFDA         	movff	atoi@s+1,fsr2h
  5750  003E10  50DF               	movf	indf2,w,c
  5751  003E12  EC5F  F028         	call	_isdigit
  5752  003E16  B0D8               	btfsc	status,0,c
  5753  003E18  D7DC               	goto	l11147
  5754  003E1A  5025               	movf	atoi@sign^0,w,c
  5755  003E1C  B4D8               	btfsc	status,2,c
  5756  003E1E  D00D               	goto	l2202
  5757  003E20  C026  F023         	movff	atoi@a,??_atoi
  5758  003E24  C027  F024         	movff	atoi@a+1,??_atoi+1
  5759  003E28  1E23               	comf	??_atoi^0,f,c
  5760  003E2A  1E24               	comf	(??_atoi+1)^0,f,c
  5761  003E2C  4A23               	infsnz	??_atoi^0,f,c
  5762  003E2E  2A24               	incf	(??_atoi+1)^0,f,c
  5763  003E30  C023  F021         	movff	??_atoi,?_atoi
  5764  003E34  C024  F022         	movff	??_atoi+1,?_atoi+1
  5765  003E38  0012               	return	
  5766  003E3A                     l2202:
  5767  003E3A  C026  F021         	movff	atoi@a,?_atoi
  5768  003E3E  C027  F022         	movff	atoi@a+1,?_atoi+1
  5769  003E42  0012               	return		;funcret
  5770  003E44                     __end_of_atoi:
  5771                           	callstack 0
  5772                           
  5773 ;; *************** function _isdigit *****************
  5774 ;; Defined at:
  5775 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;  c               1    wreg     unsigned char 
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;  c               1   28[COMRAM] unsigned char 
  5780 ;; Return value:  Size  Location     Type
  5781 ;;		None               void
  5782 ;; Registers used:
  5783 ;;		wreg, status,2, status,0
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5789 ;;      Params:         0       0       0       0       0       0       0       0       0
  5790 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5791 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5792 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5793 ;;Total ram usage:        3 bytes
  5794 ;; Hardware stack levels used: 1
  5795 ;; Hardware stack levels required when called: 3
  5796 ;; This function calls:
  5797 ;;		Nothing
  5798 ;; This function is called by:
  5799 ;;		_atoi
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           	psect	text22
  5804  0050BE                     __ptext22:
  5805                           	callstack 0
  5806  0050BE                     _isdigit:
  5807                           	callstack 24
  5808                           
  5809                           ;incstack = 0
  5810                           ;isdigit@c stored from wreg
  5811  0050BE  6E1D               	movwf	isdigit@c^0,c
  5812  0050C0  0E00               	movlw	0
  5813  0050C2  6E1C               	movwf	_isdigit$3178^0,c
  5814  0050C4  0E3A               	movlw	58
  5815  0050C6  601D               	cpfslt	isdigit@c^0,c
  5816  0050C8  D005               	goto	l7859
  5817  0050CA  0E2F               	movlw	47
  5818  0050CC  641D               	cpfsgt	isdigit@c^0,c
  5819  0050CE  D002               	goto	l7859
  5820  0050D0  0E01               	movlw	1
  5821  0050D2  6E1C               	movwf	_isdigit$3178^0,c
  5822  0050D4                     l7859:
  5823  0050D4  C01C  F01B         	movff	_isdigit$3178,??_isdigit
  5824  0050D8  301B               	rrcf	??_isdigit^0,w,c
  5825  0050DA  0012               	return		;funcret
  5826  0050DC                     __end_of_isdigit:
  5827                           	callstack 0
  5828                           
  5829 ;; *************** function _escreve_cmd_lcd *****************
  5830 ;; Defined at:
  5831 ;;		line 162 in file "bibliotecas/display_lcd.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;  comando         1    wreg     unsigned char 
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;  comando         1   28[COMRAM] unsigned char 
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  1    wreg      void 
  5838 ;; Registers used:
  5839 ;;		wreg, status,2, status,0, cstack
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5845 ;;      Params:         0       0       0       0       0       0       0       0       0
  5846 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5847 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5848 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5849 ;;Total ram usage:        1 bytes
  5850 ;; Hardware stack levels used: 1
  5851 ;; Hardware stack levels required when called: 4
  5852 ;; This function calls:
  5853 ;;		_delay
  5854 ;; This function is called by:
  5855 ;;		_mensagem_inicial
  5856 ;;		_troca_de_tela
  5857 ;;		_init_lcd
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           	psect	text23
  5862  0044C2                     __ptext23:
  5863                           	callstack 0
  5864  0044C2                     _escreve_cmd_lcd:
  5865                           	callstack 25
  5866                           
  5867                           ;incstack = 0
  5868                           ;escreve_cmd_lcd@comando stored from wreg
  5869  0044C2  6E1D               	movwf	escreve_cmd_lcd@comando^0,c
  5870                           
  5871                           ;display_lcd.c: 165: PORTDbits.RD2 = 0;
  5872  0044C4  9483               	bcf	131,2,c	;volatile
  5873                           
  5874                           ;display_lcd.c: 166: PORTDbits.RD1 = 0;
  5875  0044C6  9283               	bcf	131,1,c	;volatile
  5876                           
  5877                           ;display_lcd.c: 167: PORTDbits.RD0 = 0;
  5878  0044C8  9083               	bcf	131,0,c	;volatile
  5879                           
  5880                           ;display_lcd.c: 170: if(comando&0b00010000){PORTDbits.RD4=1;}
  5881  0044CA  A81D               	btfss	escreve_cmd_lcd@comando^0,4,c
  5882  0044CC  D002               	goto	l735
  5883  0044CE  8883               	bsf	131,4,c	;volatile
  5884  0044D0  D001               	goto	l11091
  5885  0044D2                     l735:
  5886                           
  5887                           ;display_lcd.c: 171: else {PORTDbits.RD4=0;}
  5888  0044D2  9883               	bcf	131,4,c	;volatile
  5889  0044D4                     l11091:
  5890                           
  5891                           ;display_lcd.c: 172: if(comando&0b00100000){PORTDbits.RD5=1;}
  5892  0044D4  AA1D               	btfss	escreve_cmd_lcd@comando^0,5,c
  5893  0044D6  D002               	goto	l737
  5894  0044D8  8A83               	bsf	131,5,c	;volatile
  5895  0044DA  D001               	goto	l11095
  5896  0044DC                     l737:
  5897                           
  5898                           ;display_lcd.c: 173: else {PORTDbits.RD5=0;}
  5899  0044DC  9A83               	bcf	131,5,c	;volatile
  5900  0044DE                     l11095:
  5901                           
  5902                           ;display_lcd.c: 174: if(comando&0b01000000){PORTDbits.RD6=1;}
  5903  0044DE  AC1D               	btfss	escreve_cmd_lcd@comando^0,6,c
  5904  0044E0  D002               	goto	l739
  5905  0044E2  8C83               	bsf	131,6,c	;volatile
  5906  0044E4  D001               	goto	l11099
  5907  0044E6                     l739:
  5908                           
  5909                           ;display_lcd.c: 175: else {PORTDbits.RD6=0;}
  5910  0044E6  9C83               	bcf	131,6,c	;volatile
  5911  0044E8                     l11099:
  5912                           
  5913                           ;display_lcd.c: 176: if(comando&0b10000000){PORTDbits.RD7=1;}
  5914  0044E8  AE1D               	btfss	escreve_cmd_lcd@comando^0,7,c
  5915  0044EA  D002               	goto	l741
  5916  0044EC  8E83               	bsf	131,7,c	;volatile
  5917  0044EE  D001               	goto	l742
  5918  0044F0                     l741:
  5919                           
  5920                           ;display_lcd.c: 177: else {PORTDbits.RD7=0;}
  5921  0044F0  9E83               	bcf	131,7,c	;volatile
  5922  0044F2                     l742:
  5923                           
  5924                           ;display_lcd.c: 180: PORTDbits.RD0 = 1;
  5925  0044F2  8083               	bsf	131,0,c	;volatile
  5926                           
  5927                           ;display_lcd.c: 181: delay();
  5928  0044F4  EC6E  F028         	call	_delay	;wreg free
  5929                           
  5930                           ;display_lcd.c: 182: PORTDbits.RD0 = 0;
  5931  0044F8  9083               	bcf	131,0,c	;volatile
  5932                           
  5933                           ;display_lcd.c: 183: delay();
  5934  0044FA  EC6E  F028         	call	_delay	;wreg free
  5935                           
  5936                           ;display_lcd.c: 186: if(comando&0b00000001){PORTDbits.RD4=1;}
  5937  0044FE  A01D               	btfss	escreve_cmd_lcd@comando^0,0,c
  5938  004500  D002               	goto	l743
  5939  004502  8883               	bsf	131,4,c	;volatile
  5940  004504  D001               	goto	l744
  5941  004506                     l743:
  5942                           
  5943                           ;display_lcd.c: 187: else {PORTDbits.RD4=0;}
  5944  004506  9883               	bcf	131,4,c	;volatile
  5945  004508                     l744:
  5946                           
  5947                           ;display_lcd.c: 188: if(comando&0b00000010){PORTDbits.RD5=1;}
  5948  004508  A21D               	btfss	escreve_cmd_lcd@comando^0,1,c
  5949  00450A  D002               	goto	l745
  5950  00450C  8A83               	bsf	131,5,c	;volatile
  5951  00450E  D001               	goto	l746
  5952  004510                     l745:
  5953                           
  5954                           ;display_lcd.c: 189: else {PORTDbits.RD5=0;}
  5955  004510  9A83               	bcf	131,5,c	;volatile
  5956  004512                     l746:
  5957                           
  5958                           ;display_lcd.c: 190: if(comando&0b00000100){PORTDbits.RD6=1;}
  5959  004512  A41D               	btfss	escreve_cmd_lcd@comando^0,2,c
  5960  004514  D002               	goto	l747
  5961  004516  8C83               	bsf	131,6,c	;volatile
  5962  004518  D001               	goto	l748
  5963  00451A                     l747:
  5964                           
  5965                           ;display_lcd.c: 191: else {PORTDbits.RD6=0;}
  5966  00451A  9C83               	bcf	131,6,c	;volatile
  5967  00451C                     l748:
  5968                           
  5969                           ;display_lcd.c: 192: if(comando&0b00001000){PORTDbits.RD7=1;}
  5970  00451C  A61D               	btfss	escreve_cmd_lcd@comando^0,3,c
  5971  00451E  D002               	goto	l749
  5972  004520  8E83               	bsf	131,7,c	;volatile
  5973  004522  D001               	goto	l750
  5974  004524                     l749:
  5975                           
  5976                           ;display_lcd.c: 193: else {PORTDbits.RD7=0;}
  5977  004524  9E83               	bcf	131,7,c	;volatile
  5978  004526                     l750:
  5979                           
  5980                           ;display_lcd.c: 196: PORTDbits.RD0 = 1;
  5981  004526  8083               	bsf	131,0,c	;volatile
  5982                           
  5983                           ;display_lcd.c: 197: delay();
  5984  004528  EC6E  F028         	call	_delay	;wreg free
  5985                           
  5986                           ;display_lcd.c: 198: PORTDbits.RD0 = 0;
  5987  00452C  9083               	bcf	131,0,c	;volatile
  5988                           
  5989                           ;display_lcd.c: 199: delay();
  5990  00452E  EC6E  F028         	call	_delay	;wreg free
  5991                           
  5992                           ;display_lcd.c: 204: if (comando==0x01 || comando==0x02 || comando==0x03)
  5993  004532  041D               	decf	escreve_cmd_lcd@comando^0,w,c
  5994  004534  B4D8               	btfsc	status,2,c
  5995  004536  D008               	goto	u14070
  5996  004538  0E02               	movlw	2
  5997  00453A  181D               	xorwf	escreve_cmd_lcd@comando^0,w,c
  5998  00453C  B4D8               	btfsc	status,2,c
  5999  00453E  D004               	goto	u14070
  6000  004540  0E03               	movlw	3
  6001  004542  181D               	xorwf	escreve_cmd_lcd@comando^0,w,c
  6002  004544  A4D8               	btfss	status,2,c
  6003  004546  0012               	return	
  6004  004548                     u14070:
  6005                           
  6006                           ;display_lcd.c: 205: { delay(); }
  6007  004548  EC6E  F028         	call	_delay	;wreg free
  6008  00454C  0012               	return		;funcret
  6009  00454E                     __end_of_escreve_cmd_lcd:
  6010                           	callstack 0
  6011                           
  6012 ;; *************** function _Longitude *****************
  6013 ;; Defined at:
  6014 ;;		line 611 in file "bibliotecas/GPS.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;		None
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;		None
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  2   26[COMRAM] PTR unsigned char 
  6021 ;; Registers used:
  6022 ;;		wreg, status,2, status,0
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6028 ;;      Params:         2       0       0       0       0       0       0       0       0
  6029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6031 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6032 ;;Total ram usage:        2 bytes
  6033 ;; Hardware stack levels used: 1
  6034 ;; Hardware stack levels required when called: 3
  6035 ;; This function calls:
  6036 ;;		Nothing
  6037 ;; This function is called by:
  6038 ;;		_verifica_fence_externo
  6039 ;;		_troca_de_tela
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043                           	psect	text24
  6044  005204                     __ptext24:
  6045                           	callstack 0
  6046  005204                     _Longitude:
  6047                           	callstack 25
  6048                           
  6049                           ;GPS.c: 613: return rawLongitude;
  6050                           
  6051                           ;incstack = 0
  6052  005204  0E4F               	movlw	low _rawLongitude
  6053  005206  6E1B               	movwf	?_Longitude^0,c
  6054  005208  0E02               	movlw	high _rawLongitude
  6055  00520A  6E1C               	movwf	(?_Longitude+1)^0,c
  6056  00520C  0012               	return		;funcret
  6057  00520E                     __end_of_Longitude:
  6058                           	callstack 0
  6059                           
  6060 ;; *************** function _Latitude *****************
  6061 ;; Defined at:
  6062 ;;		line 606 in file "bibliotecas/GPS.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;		None
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;		None
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  2   26[COMRAM] PTR unsigned char 
  6069 ;; Registers used:
  6070 ;;		wreg, status,2, status,0
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6076 ;;      Params:         2       0       0       0       0       0       0       0       0
  6077 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6078 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6079 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6080 ;;Total ram usage:        2 bytes
  6081 ;; Hardware stack levels used: 1
  6082 ;; Hardware stack levels required when called: 3
  6083 ;; This function calls:
  6084 ;;		Nothing
  6085 ;; This function is called by:
  6086 ;;		_verifica_fence_externo
  6087 ;;		_troca_de_tela
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           	psect	text25
  6092  00520E                     __ptext25:
  6093                           	callstack 0
  6094  00520E                     _Latitude:
  6095                           	callstack 25
  6096                           
  6097                           ;GPS.c: 608: return rawLatitude;
  6098                           
  6099                           ;incstack = 0
  6100  00520E  0E5C               	movlw	low _rawLatitude
  6101  005210  6E1B               	movwf	?_Latitude^0,c
  6102  005212  0E02               	movlw	high _rawLatitude
  6103  005214  6E1C               	movwf	(?_Latitude+1)^0,c
  6104  005216  0012               	return		;funcret
  6105  005218                     __end_of_Latitude:
  6106                           	callstack 0
  6107                           
  6108 ;; *************** function _escrita_sdcard *****************
  6109 ;; Defined at:
  6110 ;;		line 207 in file "bibliotecas/SDCard.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;		None
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  bw              2    0        unsigned short 
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  1    wreg      void 
  6117 ;; Registers used:
  6118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 3F/0
  6121 ;;		On exit  : 3F/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6124 ;;      Params:         0       0       0       0       0       0       0       0       0
  6125 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6127 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6128 ;;Total ram usage:        0 bytes
  6129 ;; Hardware stack levels used: 1
  6130 ;; Hardware stack levels required when called: 15
  6131 ;; This function calls:
  6132 ;;		_desliga_SPI
  6133 ;;		_desliga_uart
  6134 ;;		_f_close
  6135 ;;		_f_lseek
  6136 ;;		_f_mount
  6137 ;;		_f_open
  6138 ;;		_fix
  6139 ;;		_fprintf
  6140 ;;		_inicializa_SPI
  6141 ;;		_inicializa_uart
  6142 ;; This function is called by:
  6143 ;;		_disparo_gravacao
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text26
  6148  003E44                     __ptext26:
  6149                           	callstack 0
  6150  003E44                     _escrita_sdcard:
  6151                           	callstack 13
  6152                           
  6153                           ; BSR set to: 0
  6154                           ;SDCard.c: 209: WORD bw;;SDCard.c: 210: PORTBbits.RB3 = 0;
  6155                           
  6156                           ;incstack = 0
  6157  003E44  9681               	bcf	129,3,c	;volatile
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;SDCard.c: 211: desliga_uart();
  6161  003E46  ECDE  F028         	call	_desliga_uart	;wreg free
  6162                           
  6163                           ; BSR set to: 0
  6164                           ;SDCard.c: 212: inicializa_SPI();
  6165  003E4A  EC3F  F028         	call	_inicializa_SPI	;wreg free
  6166                           
  6167                           ; BSR set to: 0
  6168                           ;SDCard.c: 213: f_mount(0,&fs);
  6169  003E4E  0E22               	movlw	low _fs
  6170  003E50  6E1B               	movwf	f_mount@fs^0,c
  6171  003E52  0E03               	movlw	high _fs
  6172  003E54  6E1C               	movwf	(f_mount@fs+1)^0,c
  6173  003E56  0E00               	movlw	0
  6174  003E58  EC19  F026         	call	_f_mount
  6175                           
  6176                           ;SDCard.c: 215: if(fix())
  6177  003E5C  EC15  F029         	call	_fix	;wreg free
  6178  003E60  0900               	iorlw	0
  6179  003E62  B4D8               	btfsc	status,2,c
  6180  003E64  D04F               	goto	l11181
  6181                           
  6182                           ;SDCard.c: 216: {;SDCard.c: 217: if (f_open(&fil, string_dado.data, 0x10 | 0x02 ) == FR_
      +                          OK)
  6183  003E66  0EA4               	movlw	low _fil
  6184  003E68  0100               	movlb	0	; () banked
  6185  003E6A  6FC6               	movwf	f_open@fp& (0+255),b
  6186  003E6C  0E01               	movlw	high _fil
  6187  003E6E  6FC7               	movwf	(f_open@fp+1)& (0+255),b
  6188  003E70  0E00               	movlw	low _string_dado
  6189  003E72  6FC8               	movwf	f_open@path& (0+255),b
  6190  003E74  0E02               	movlw	high _string_dado
  6191  003E76  6FC9               	movwf	(f_open@path+1)& (0+255),b
  6192  003E78  0E12               	movlw	18
  6193  003E7A  6FCA               	movwf	f_open@mode& (0+255),b
  6194  003E7C  EC3D  F00D         	call	_f_open	;wreg free
  6195  003E80  0900               	iorlw	0
  6196  003E82  A4D8               	btfss	status,2,c
  6197  003E84  D03F               	goto	l11181
  6198                           
  6199                           ; BSR set to: 0
  6200                           ;SDCard.c: 218: {;SDCard.c: 220: f_lseek(&fil, ((&fil)->fsize));
  6201  003E86  0EA4               	movlw	low _fil
  6202  003E88  6FB4               	movwf	f_lseek@fp& (0+255),b
  6203  003E8A  0E01               	movlw	high _fil
  6204  003E8C  6FB5               	movwf	(f_lseek@fp+1)& (0+255),b
  6205  003E8E  C1AE  F0B6         	movff	_fil+10,f_lseek@ofs
  6206  003E92  C1AF  F0B7         	movff	_fil+11,f_lseek@ofs+1
  6207  003E96  C1B0  F0B8         	movff	_fil+12,f_lseek@ofs+2
  6208  003E9A  C1B1  F0B9         	movff	_fil+13,f_lseek@ofs+3
  6209  003E9E  EC39  F009         	call	_f_lseek	;wreg free
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;SDCard.c: 225: fprintf(&fil, "\nv%s;lt%s;lo%s;r%s;c%s;k%s;h%s;d%s", "string_dado.vel", 
      +                          string_dado.lt, string_dado.lo, "string_dado.rpm", "string_dado.comb", "string_dado.odom
      +                          etro_total", string_dado.hora, "string_dado.dtc");
  6213  003EA2  0EA4               	movlw	low _fil
  6214  003EA4  6FE0               	movwf	fprintf@fil& (0+255),b
  6215  003EA6  0E01               	movlw	high _fil
  6216  003EA8  6FE1               	movwf	(fprintf@fil+1)& (0+255),b
  6217  003EAA  0E0F               	movlw	low STR_19
  6218  003EAC  6FE2               	movwf	fprintf@str& (0+255),b
  6219  003EAE  0E61               	movlw	high STR_19
  6220  003EB0  6FE3               	movwf	(fprintf@str+1)& (0+255),b
  6221  003EB2  0EA4               	movlw	low STR_20
  6222  003EB4  6FE4               	movwf	(?_fprintf+4)& (0+255),b
  6223  003EB6  0E61               	movlw	high STR_20
  6224  003EB8  6FE5               	movwf	(?_fprintf+5)& (0+255),b
  6225  003EBA  0E12               	movlw	low (_string_dado+18)
  6226  003EBC  6FE6               	movwf	(?_fprintf+6)& (0+255),b
  6227  003EBE  0E02               	movlw	high (_string_dado+18)
  6228  003EC0  6FE7               	movwf	(?_fprintf+7)& (0+255),b
  6229  003EC2  0E1F               	movlw	low (_string_dado+31)
  6230  003EC4  6FE8               	movwf	(?_fprintf+8)& (0+255),b
  6231  003EC6  0E02               	movlw	high (_string_dado+31)
  6232  003EC8  6FE9               	movwf	(?_fprintf+9)& (0+255),b
  6233  003ECA  0EB4               	movlw	low STR_21
  6234  003ECC  6FEA               	movwf	(?_fprintf+10)& (0+255),b
  6235  003ECE  0E61               	movlw	high STR_21
  6236  003ED0  6FEB               	movwf	(?_fprintf+11)& (0+255),b
  6237  003ED2  0E62               	movlw	low STR_22
  6238  003ED4  6FEC               	movwf	(?_fprintf+12)& (0+255),b
  6239  003ED6  0E61               	movlw	high STR_22
  6240  003ED8  6FED               	movwf	(?_fprintf+13)& (0+255),b
  6241  003EDA  0E32               	movlw	low STR_23
  6242  003EDC  6FEE               	movwf	(?_fprintf+14)& (0+255),b
  6243  003EDE  0E61               	movlw	high STR_23
  6244  003EE0  6FEF               	movwf	(?_fprintf+15)& (0+255),b
  6245  003EE2  0E07               	movlw	low (_string_dado+7)
  6246  003EE4  6FF0               	movwf	(?_fprintf+16)& (0+255),b
  6247  003EE6  0E02               	movlw	high (_string_dado+7)
  6248  003EE8  6FF1               	movwf	(?_fprintf+17)& (0+255),b
  6249  003EEA  0E94               	movlw	low STR_24
  6250  003EEC  6FF2               	movwf	(?_fprintf+18)& (0+255),b
  6251  003EEE  0E61               	movlw	high STR_24
  6252  003EF0  6FF3               	movwf	(?_fprintf+19)& (0+255),b
  6253  003EF2  EC7E  F00B         	call	_fprintf	;wreg free
  6254                           
  6255                           ; BSR set to: 3
  6256                           ;SDCard.c: 228: f_close(&fil);
  6257  003EF6  0EA4               	movlw	low _fil
  6258  003EF8  0100               	movlb	0	; () banked
  6259  003EFA  6F99               	movwf	f_close@fp& (0+255),b
  6260  003EFC  0E01               	movlw	high _fil
  6261  003EFE  6F9A               	movwf	(f_close@fp+1)& (0+255),b
  6262  003F00  ECF0  F027         	call	_f_close	;wreg free
  6263  003F04                     l11181:
  6264                           
  6265                           ;SDCard.c: 229: };SDCard.c: 230: };SDCard.c: 231: PORTBbits.RB3 = 1;
  6266  003F04  8681               	bsf	129,3,c	;volatile
  6267                           
  6268                           ;SDCard.c: 232: desliga_SPI();
  6269  003F06  ECF7  F028         	call	_desliga_SPI	;wreg free
  6270                           
  6271                           ;SDCard.c: 233: inicializa_uart();
  6272  003F0A  EC2D  F028         	call	_inicializa_uart	;wreg free
  6273                           
  6274                           ; BSR set to: 0
  6275  003F0E  0012               	return		;funcret
  6276  003F10                     __end_of_escrita_sdcard:
  6277                           	callstack 0
  6278                           
  6279 ;; *************** function _inicializa_uart *****************
  6280 ;; Defined at:
  6281 ;;		line 206 in file "bibliotecas/uart.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;		None
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;		None
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  1    wreg      void 
  6288 ;; Registers used:
  6289 ;;		wreg, status,2, status,0, cstack
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/1
  6292 ;;		On exit  : 3F/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6295 ;;      Params:         0       0       0       0       0       0       0       0       0
  6296 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6297 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6298 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6299 ;;Total ram usage:        0 bytes
  6300 ;; Hardware stack levels used: 1
  6301 ;; Hardware stack levels required when called: 5
  6302 ;; This function calls:
  6303 ;;		_configura_baudrate_uart
  6304 ;; This function is called by:
  6305 ;;		_main
  6306 ;;		_escrita_sdcard
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text27
  6311  00505A                     __ptext27:
  6312                           	callstack 0
  6313  00505A                     _inicializa_uart:
  6314                           	callstack 25
  6315                           
  6316                           ;uart.c: 208: TRISCbits.RC6 = 0;
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;incstack = 0
  6320  00505A  9C94               	bcf	148,6,c	;volatile
  6321                           
  6322                           ;uart.c: 209: TRISCbits.RC7 = 0;
  6323  00505C  9E94               	bcf	148,7,c	;volatile
  6324                           
  6325                           ;uart.c: 211: (void)configura_baudrate_uart(9600);
  6326  00505E  0E80               	movlw	128
  6327  005060  0100               	movlb	0	; () banked
  6328  005062  6F60               	movwf	configura_baudrate_uart@baudrate& (0+255),b
  6329  005064  0E25               	movlw	37
  6330  005066  6F61               	movwf	(configura_baudrate_uart@baudrate+1)& (0+255),b
  6331  005068  0E00               	movlw	0
  6332  00506A  6F62               	movwf	(configura_baudrate_uart@baudrate+2)& (0+255),b
  6333  00506C  0E00               	movlw	0
  6334  00506E  6F63               	movwf	(configura_baudrate_uart@baudrate+3)& (0+255),b
  6335  005070  ECB4  F01D         	call	_configura_baudrate_uart	;wreg free
  6336                           
  6337                           ; BSR set to: 0
  6338                           ;uart.c: 213: TXSTA = 0x20;
  6339  005074  0E20               	movlw	32
  6340  005076  6EAC               	movwf	172,c	;volatile
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;uart.c: 214: RCSTA = 0x90;
  6344  005078  0E90               	movlw	144
  6345  00507A  6EAB               	movwf	171,c	;volatile
  6346                           
  6347                           ; BSR set to: 0
  6348  00507C  0012               	return		;funcret
  6349  00507E                     __end_of_inicializa_uart:
  6350                           	callstack 0
  6351                           
  6352 ;; *************** function _configura_baudrate_uart *****************
  6353 ;; Defined at:
  6354 ;;		line 50 in file "bibliotecas/uart.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;  baudrate        4    0[BANK0 ] const long 
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;  x               2   40[COMRAM] unsigned int 
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  1    wreg      unsigned char 
  6361 ;; Registers used:
  6362 ;;		wreg, status,2, status,0, cstack
  6363 ;; Tracked objects:
  6364 ;;		On entry : 3F/0
  6365 ;;		On exit  : 3F/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6368 ;;      Params:         0       4       0       0       0       0       0       0       0
  6369 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6370 ;;      Temps:          0       8       0       0       0       0       0       0       0
  6371 ;;      Totals:         2      12       0       0       0       0       0       0       0
  6372 ;;Total ram usage:       14 bytes
  6373 ;; Hardware stack levels used: 1
  6374 ;; Hardware stack levels required when called: 4
  6375 ;; This function calls:
  6376 ;;		___aldiv
  6377 ;; This function is called by:
  6378 ;;		_inicializa_uart
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           	psect	text28
  6383  003B68                     __ptext28:
  6384                           	callstack 0
  6385  003B68                     _configura_baudrate_uart:
  6386                           	callstack 25
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;uart.c: 52: unsigned int x;;uart.c: 54: x = (48000000 - baudrate*64)/(baudrate*64);
  6390                           
  6391                           ; BSR set to: 0
  6392                           ;incstack = 0
  6393  003B68  C060  F064         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  6394  003B6C  C061  F065         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  6395  003B70  C062  F066         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  6396  003B74  C063  F067         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  6397  003B78  0E06               	movlw	6
  6398  003B7A                     u13205:
  6399  003B7A  90D8               	bcf	status,0,c
  6400  003B7C  3764               	rlcf	??_configura_baudrate_uart& (0+255),f,b
  6401  003B7E  3765               	rlcf	(??_configura_baudrate_uart+1)& (0+255),f,b
  6402  003B80  3766               	rlcf	(??_configura_baudrate_uart+2)& (0+255),f,b
  6403  003B82  3767               	rlcf	(??_configura_baudrate_uart+3)& (0+255),f,b
  6404  003B84  2EE8               	decfsz	wreg,f,c
  6405  003B86  D7F9               	goto	u13205
  6406  003B88  5164               	movf	??_configura_baudrate_uart& (0+255),w,b
  6407  003B8A  0800               	sublw	0
  6408  003B8C  6E1B               	movwf	___aldiv@dividend^0,c
  6409  003B8E  0E6C               	movlw	108
  6410  003B90  5565               	subfwb	(??_configura_baudrate_uart+1)& (0+255),w,b
  6411  003B92  6E1C               	movwf	(___aldiv@dividend+1)^0,c
  6412  003B94  0EDC               	movlw	220
  6413  003B96  5566               	subfwb	(??_configura_baudrate_uart+2)& (0+255),w,b
  6414  003B98  6E1D               	movwf	(___aldiv@dividend+2)^0,c
  6415  003B9A  0E02               	movlw	2
  6416  003B9C  5567               	subfwb	(??_configura_baudrate_uart+3)& (0+255),w,b
  6417  003B9E  6E1E               	movwf	(___aldiv@dividend+3)^0,c
  6418  003BA0  C060  F068         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  6419  003BA4  C061  F069         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  6420  003BA8  C062  F06A         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  6421  003BAC  C063  F06B         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  6422  003BB0  0E06               	movlw	6
  6423  003BB2                     u13215:
  6424  003BB2  90D8               	bcf	status,0,c
  6425  003BB4  3768               	rlcf	(??_configura_baudrate_uart+4)& (0+255),f,b
  6426  003BB6  3769               	rlcf	(??_configura_baudrate_uart+5)& (0+255),f,b
  6427  003BB8  376A               	rlcf	(??_configura_baudrate_uart+6)& (0+255),f,b
  6428  003BBA  376B               	rlcf	(??_configura_baudrate_uart+7)& (0+255),f,b
  6429  003BBC  2EE8               	decfsz	wreg,f,c
  6430  003BBE  D7F9               	goto	u13215
  6431  003BC0  C068  F01F         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  6432  003BC4  C069  F020         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  6433  003BC8  C06A  F021         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  6434  003BCC  C06B  F022         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  6435  003BD0  EC88  F01F         	call	___aldiv	;wreg free
  6436  003BD4  C01B  F029         	movff	?___aldiv,configura_baudrate_uart@x
  6437  003BD8  C01C  F02A         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;uart.c: 55: if(x > 255)
  6441  003BDC  042A               	decf	(configura_baudrate_uart@x+1)^0,w,c
  6442  003BDE  A0D8               	btfss	status,0,c
  6443  003BE0  D03B               	goto	l10659
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;uart.c: 56: {;uart.c: 57: x = (48000000 - baudrate*16)/(baudrate*16);
  6447  003BE2  C060  F064         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  6448  003BE6  C061  F065         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  6449  003BEA  C062  F066         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  6450  003BEE  C063  F067         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  6451  003BF2  0E04               	movlw	4
  6452  003BF4                     u13235:
  6453  003BF4  90D8               	bcf	status,0,c
  6454  003BF6  3764               	rlcf	??_configura_baudrate_uart& (0+255),f,b
  6455  003BF8  3765               	rlcf	(??_configura_baudrate_uart+1)& (0+255),f,b
  6456  003BFA  3766               	rlcf	(??_configura_baudrate_uart+2)& (0+255),f,b
  6457  003BFC  3767               	rlcf	(??_configura_baudrate_uart+3)& (0+255),f,b
  6458  003BFE  2EE8               	decfsz	wreg,f,c
  6459  003C00  D7F9               	goto	u13235
  6460  003C02  5164               	movf	??_configura_baudrate_uart& (0+255),w,b
  6461  003C04  0800               	sublw	0
  6462  003C06  6E1B               	movwf	___aldiv@dividend^0,c
  6463  003C08  0E6C               	movlw	108
  6464  003C0A  5565               	subfwb	(??_configura_baudrate_uart+1)& (0+255),w,b
  6465  003C0C  6E1C               	movwf	(___aldiv@dividend+1)^0,c
  6466  003C0E  0EDC               	movlw	220
  6467  003C10  5566               	subfwb	(??_configura_baudrate_uart+2)& (0+255),w,b
  6468  003C12  6E1D               	movwf	(___aldiv@dividend+2)^0,c
  6469  003C14  0E02               	movlw	2
  6470  003C16  5567               	subfwb	(??_configura_baudrate_uart+3)& (0+255),w,b
  6471  003C18  6E1E               	movwf	(___aldiv@dividend+3)^0,c
  6472  003C1A  C060  F068         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  6473  003C1E  C061  F069         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  6474  003C22  C062  F06A         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  6475  003C26  C063  F06B         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  6476  003C2A  0E04               	movlw	4
  6477  003C2C                     u13245:
  6478  003C2C  90D8               	bcf	status,0,c
  6479  003C2E  3768               	rlcf	(??_configura_baudrate_uart+4)& (0+255),f,b
  6480  003C30  3769               	rlcf	(??_configura_baudrate_uart+5)& (0+255),f,b
  6481  003C32  376A               	rlcf	(??_configura_baudrate_uart+6)& (0+255),f,b
  6482  003C34  376B               	rlcf	(??_configura_baudrate_uart+7)& (0+255),f,b
  6483  003C36  2EE8               	decfsz	wreg,f,c
  6484  003C38  D7F9               	goto	u13245
  6485  003C3A  C068  F01F         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  6486  003C3E  C069  F020         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  6487  003C42  C06A  F021         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  6488  003C46  C06B  F022         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  6489  003C4A  EC88  F01F         	call	___aldiv	;wreg free
  6490  003C4E  C01B  F029         	movff	?___aldiv,configura_baudrate_uart@x
  6491  003C52  C01C  F02A         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;uart.c: 58: BRGH = 1;
  6495  003C56  84AC               	bsf	4012,2,c	;volatile
  6496  003C58                     l10659:
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;uart.c: 59: };uart.c: 60: if(x < 256)
  6500  003C58  042A               	decf	(configura_baudrate_uart@x+1)^0,w,c
  6501  003C5A  B0D8               	btfsc	status,0,c
  6502  003C5C  0012               	return	
  6503                           
  6504                           ; BSR set to: 0
  6505                           ;uart.c: 61: {;uart.c: 62: SPBRG = x;
  6506  003C5E  C029  FFAF         	movff	configura_baudrate_uart@x,4015	;volatile
  6507                           
  6508                           ;uart.c: 63: SYNC = 0;
  6509  003C62  98AC               	bcf	4012,4,c	;volatile
  6510                           
  6511                           ;uart.c: 64: SPEN = 1;
  6512  003C64  8EAB               	bsf	4011,7,c	;volatile
  6513                           
  6514                           ;uart.c: 65: TRISCbits.RC7 = 1;
  6515  003C66  8E94               	bsf	148,7,c	;volatile
  6516                           
  6517                           ;uart.c: 66: TRISCbits.RC6 = 0;
  6518  003C68  9C94               	bcf	148,6,c	;volatile
  6519                           
  6520                           ;uart.c: 67: CREN = 1;
  6521  003C6A  88AB               	bsf	4011,4,c	;volatile
  6522                           
  6523                           ;uart.c: 68: TXEN = 1;
  6524  003C6C  8AAC               	bsf	4012,5,c	;volatile
  6525                           
  6526                           ; BSR set to: 0
  6527                           
  6528                           ;uart.c: 70: return (1);;	Return value of _configura_baudrate_uart is never used
  6529  003C6E  0012               	return		;funcret
  6530  003C70                     __end_of_configura_baudrate_uart:
  6531                           	callstack 0
  6532                           
  6533 ;; *************** function ___aldiv *****************
  6534 ;; Defined at:
  6535 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;  dividend        4   26[COMRAM] long 
  6538 ;;  divisor         4   30[COMRAM] long 
  6539 ;; Auto vars:     Size  Location     Type
  6540 ;;  quotient        4   36[COMRAM] long 
  6541 ;;  sign            1   35[COMRAM] unsigned char 
  6542 ;;  counter         1   34[COMRAM] unsigned char 
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  4   26[COMRAM] long 
  6545 ;; Registers used:
  6546 ;;		wreg, status,2, status,0
  6547 ;; Tracked objects:
  6548 ;;		On entry : 3F/0
  6549 ;;		On exit  : 3F/0
  6550 ;;		Unchanged: 3F/0
  6551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6552 ;;      Params:         8       0       0       0       0       0       0       0       0
  6553 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6554 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6555 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6556 ;;Total ram usage:       14 bytes
  6557 ;; Hardware stack levels used: 1
  6558 ;; Hardware stack levels required when called: 3
  6559 ;; This function calls:
  6560 ;;		Nothing
  6561 ;; This function is called by:
  6562 ;;		_configura_baudrate_uart
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           	psect	text29
  6567  003F10                     __ptext29:
  6568                           	callstack 0
  6569  003F10                     ___aldiv:
  6570                           	callstack 25
  6571                           
  6572                           ; BSR set to: 0
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;incstack = 0
  6576  003F10  0E00               	movlw	0
  6577  003F12  6E24               	movwf	___aldiv@sign^0,c
  6578                           
  6579                           ; BSR set to: 0
  6580  003F14  AE22               	btfss	(___aldiv@divisor+3)^0,7,c
  6581  003F16  D00A               	goto	l6951
  6582                           
  6583                           ; BSR set to: 0
  6584  003F18  1E22               	comf	(___aldiv@divisor+3)^0,f,c
  6585  003F1A  1E21               	comf	(___aldiv@divisor+2)^0,f,c
  6586  003F1C  1E20               	comf	(___aldiv@divisor+1)^0,f,c
  6587  003F1E  6C1F               	negf	___aldiv@divisor^0,c
  6588  003F20  0E00               	movlw	0
  6589  003F22  2220               	addwfc	(___aldiv@divisor+1)^0,f,c
  6590  003F24  2221               	addwfc	(___aldiv@divisor+2)^0,f,c
  6591  003F26  2222               	addwfc	(___aldiv@divisor+3)^0,f,c
  6592                           
  6593                           ; BSR set to: 0
  6594  003F28  0E01               	movlw	1
  6595  003F2A  6E24               	movwf	___aldiv@sign^0,c
  6596  003F2C                     l6951:
  6597                           
  6598                           ; BSR set to: 0
  6599  003F2C  AE1E               	btfss	(___aldiv@dividend+3)^0,7,c
  6600  003F2E  D00A               	goto	l6957
  6601                           
  6602                           ; BSR set to: 0
  6603  003F30  1E1E               	comf	(___aldiv@dividend+3)^0,f,c
  6604  003F32  1E1D               	comf	(___aldiv@dividend+2)^0,f,c
  6605  003F34  1E1C               	comf	(___aldiv@dividend+1)^0,f,c
  6606  003F36  6C1B               	negf	___aldiv@dividend^0,c
  6607  003F38  0E00               	movlw	0
  6608  003F3A  221C               	addwfc	(___aldiv@dividend+1)^0,f,c
  6609  003F3C  221D               	addwfc	(___aldiv@dividend+2)^0,f,c
  6610  003F3E  221E               	addwfc	(___aldiv@dividend+3)^0,f,c
  6611                           
  6612                           ; BSR set to: 0
  6613  003F40  0E01               	movlw	1
  6614  003F42  1A24               	xorwf	___aldiv@sign^0,f,c
  6615  003F44                     l6957:
  6616                           
  6617                           ; BSR set to: 0
  6618  003F44  0E00               	movlw	0
  6619  003F46  6E25               	movwf	___aldiv@quotient^0,c
  6620  003F48  0E00               	movlw	0
  6621  003F4A  6E26               	movwf	(___aldiv@quotient+1)^0,c
  6622  003F4C  0E00               	movlw	0
  6623  003F4E  6E27               	movwf	(___aldiv@quotient+2)^0,c
  6624  003F50  0E00               	movlw	0
  6625  003F52  6E28               	movwf	(___aldiv@quotient+3)^0,c
  6626                           
  6627                           ; BSR set to: 0
  6628  003F54  501F               	movf	___aldiv@divisor^0,w,c
  6629  003F56  1020               	iorwf	(___aldiv@divisor+1)^0,w,c
  6630  003F58  1021               	iorwf	(___aldiv@divisor+2)^0,w,c
  6631  003F5A  1022               	iorwf	(___aldiv@divisor+3)^0,w,c
  6632  003F5C  B4D8               	btfsc	status,2,c
  6633  003F5E  D02A               	goto	l6979
  6634                           
  6635                           ; BSR set to: 0
  6636  003F60  0E01               	movlw	1
  6637  003F62  6E23               	movwf	___aldiv@counter^0,c
  6638  003F64  D006               	goto	l6965
  6639  003F66                     l6963:
  6640                           
  6641                           ; BSR set to: 0
  6642  003F66  90D8               	bcf	status,0,c
  6643  003F68  361F               	rlcf	___aldiv@divisor^0,f,c
  6644  003F6A  3620               	rlcf	(___aldiv@divisor+1)^0,f,c
  6645  003F6C  3621               	rlcf	(___aldiv@divisor+2)^0,f,c
  6646  003F6E  3622               	rlcf	(___aldiv@divisor+3)^0,f,c
  6647  003F70  2A23               	incf	___aldiv@counter^0,f,c
  6648  003F72                     l6965:
  6649                           
  6650                           ; BSR set to: 0
  6651  003F72  AE22               	btfss	(___aldiv@divisor+3)^0,7,c
  6652  003F74  D7F8               	goto	l6963
  6653  003F76                     u7200:
  6654                           
  6655                           ; BSR set to: 0
  6656  003F76  90D8               	bcf	status,0,c
  6657  003F78  3625               	rlcf	___aldiv@quotient^0,f,c
  6658  003F7A  3626               	rlcf	(___aldiv@quotient+1)^0,f,c
  6659  003F7C  3627               	rlcf	(___aldiv@quotient+2)^0,f,c
  6660  003F7E  3628               	rlcf	(___aldiv@quotient+3)^0,f,c
  6661                           
  6662                           ; BSR set to: 0
  6663  003F80  501F               	movf	___aldiv@divisor^0,w,c
  6664  003F82  5C1B               	subwf	___aldiv@dividend^0,w,c
  6665  003F84  5020               	movf	(___aldiv@divisor+1)^0,w,c
  6666  003F86  581C               	subwfb	(___aldiv@dividend+1)^0,w,c
  6667  003F88  5021               	movf	(___aldiv@divisor+2)^0,w,c
  6668  003F8A  581D               	subwfb	(___aldiv@dividend+2)^0,w,c
  6669  003F8C  5022               	movf	(___aldiv@divisor+3)^0,w,c
  6670  003F8E  581E               	subwfb	(___aldiv@dividend+3)^0,w,c
  6671  003F90  A0D8               	btfss	status,0,c
  6672  003F92  D009               	goto	l6975
  6673                           
  6674                           ; BSR set to: 0
  6675  003F94  501F               	movf	___aldiv@divisor^0,w,c
  6676  003F96  5E1B               	subwf	___aldiv@dividend^0,f,c
  6677  003F98  5020               	movf	(___aldiv@divisor+1)^0,w,c
  6678  003F9A  5A1C               	subwfb	(___aldiv@dividend+1)^0,f,c
  6679  003F9C  5021               	movf	(___aldiv@divisor+2)^0,w,c
  6680  003F9E  5A1D               	subwfb	(___aldiv@dividend+2)^0,f,c
  6681  003FA0  5022               	movf	(___aldiv@divisor+3)^0,w,c
  6682  003FA2  5A1E               	subwfb	(___aldiv@dividend+3)^0,f,c
  6683                           
  6684                           ; BSR set to: 0
  6685  003FA4  8025               	bsf	___aldiv@quotient^0,0,c
  6686  003FA6                     l6975:
  6687                           
  6688                           ; BSR set to: 0
  6689  003FA6  90D8               	bcf	status,0,c
  6690  003FA8  3222               	rrcf	(___aldiv@divisor+3)^0,f,c
  6691  003FAA  3221               	rrcf	(___aldiv@divisor+2)^0,f,c
  6692  003FAC  3220               	rrcf	(___aldiv@divisor+1)^0,f,c
  6693  003FAE  321F               	rrcf	___aldiv@divisor^0,f,c
  6694                           
  6695                           ; BSR set to: 0
  6696  003FB0  2E23               	decfsz	___aldiv@counter^0,f,c
  6697  003FB2  D7E1               	goto	u7200
  6698  003FB4                     l6979:
  6699                           
  6700                           ; BSR set to: 0
  6701  003FB4  5024               	movf	___aldiv@sign^0,w,c
  6702  003FB6  B4D8               	btfsc	status,2,c
  6703  003FB8  D008               	goto	l6983
  6704                           
  6705                           ; BSR set to: 0
  6706  003FBA  1E28               	comf	(___aldiv@quotient+3)^0,f,c
  6707  003FBC  1E27               	comf	(___aldiv@quotient+2)^0,f,c
  6708  003FBE  1E26               	comf	(___aldiv@quotient+1)^0,f,c
  6709  003FC0  6C25               	negf	___aldiv@quotient^0,c
  6710  003FC2  0E00               	movlw	0
  6711  003FC4  2226               	addwfc	(___aldiv@quotient+1)^0,f,c
  6712  003FC6  2227               	addwfc	(___aldiv@quotient+2)^0,f,c
  6713  003FC8  2228               	addwfc	(___aldiv@quotient+3)^0,f,c
  6714  003FCA                     l6983:
  6715                           
  6716                           ; BSR set to: 0
  6717  003FCA  C025  F01B         	movff	___aldiv@quotient,?___aldiv
  6718  003FCE  C026  F01C         	movff	___aldiv@quotient+1,?___aldiv+1
  6719  003FD2  C027  F01D         	movff	___aldiv@quotient+2,?___aldiv+2
  6720  003FD6  C028  F01E         	movff	___aldiv@quotient+3,?___aldiv+3
  6721                           
  6722                           ; BSR set to: 0
  6723  003FDA  0012               	return		;funcret
  6724  003FDC                     __end_of___aldiv:
  6725                           	callstack 0
  6726                           
  6727 ;; *************** function _inicializa_SPI *****************
  6728 ;; Defined at:
  6729 ;;		line 49 in file "bibliotecas/SPI.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;		None
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;		None
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  1    wreg      void 
  6736 ;; Registers used:
  6737 ;;		wreg, status,2, status,0
  6738 ;; Tracked objects:
  6739 ;;		On entry : 3F/0
  6740 ;;		On exit  : 3F/0
  6741 ;;		Unchanged: 3F/0
  6742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6743 ;;      Params:         0       0       0       0       0       0       0       0       0
  6744 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6746 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6747 ;;Total ram usage:        0 bytes
  6748 ;; Hardware stack levels used: 1
  6749 ;; Hardware stack levels required when called: 3
  6750 ;; This function calls:
  6751 ;;		Nothing
  6752 ;; This function is called by:
  6753 ;;		_escrita_sdcard
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	text30
  6758  00507E                     __ptext30:
  6759                           	callstack 0
  6760  00507E                     _inicializa_SPI:
  6761                           	callstack 24
  6762                           
  6763                           ; BSR set to: 0
  6764                           ;SPI.c: 51: TRISBbits.RB1 = 0;
  6765                           
  6766                           ; BSR set to: 0
  6767                           ;incstack = 0
  6768  00507E  9293               	bcf	147,1,c	;volatile
  6769                           
  6770                           ;SPI.c: 52: TRISBbits.RB4 = 0;
  6771  005080  9893               	bcf	147,4,c	;volatile
  6772                           
  6773                           ;SPI.c: 53: TRISBbits.RB0 = 1;
  6774  005082  8093               	bsf	147,0,c	;volatile
  6775                           
  6776                           ;SPI.c: 54: TRISCbits.RC7 = 0;
  6777  005084  9E94               	bcf	148,7,c	;volatile
  6778                           
  6779                           ;SPI.c: 56: LATBbits.LATB4 = 1;
  6780  005086  888A               	bsf	138,4,c	;volatile
  6781                           
  6782                           ; BSR set to: 0
  6783                           ;SPI.c: 57: SSPSTAT &= 0x3F;
  6784  005088  0E3F               	movlw	63
  6785  00508A  16C7               	andwf	199,f,c	;volatile
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;SPI.c: 58: SSPCON1 = 0x00;
  6789  00508C  0E00               	movlw	0
  6790  00508E  6EC6               	movwf	198,c	;volatile
  6791                           
  6792                           ; BSR set to: 0
  6793                           ;SPI.c: 60: SSPSTATbits.SMP = 0;
  6794  005090  9EC7               	bcf	199,7,c	;volatile
  6795                           
  6796                           ; BSR set to: 0
  6797                           ;SPI.c: 61: SSPSTATbits.CKE = 1;
  6798  005092  8CC7               	bsf	199,6,c	;volatile
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;SPI.c: 62: SSPCON1bits.CKP = 0;
  6802  005094  98C6               	bcf	198,4,c	;volatile
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;SPI.c: 64: SSPCON1 = 0b00000011;
  6806  005096  0E03               	movlw	3
  6807  005098  6EC6               	movwf	198,c	;volatile
  6808                           
  6809                           ; BSR set to: 0
  6810                           ;SPI.c: 66: SSPCON1bits.SSPEN = 1;
  6811  00509A  8AC6               	bsf	198,5,c	;volatile
  6812                           
  6813                           ; BSR set to: 0
  6814  00509C  0012               	return		;funcret
  6815  00509E                     __end_of_inicializa_SPI:
  6816                           	callstack 0
  6817                           
  6818 ;; *************** function _fprintf *****************
  6819 ;; Defined at:
  6820 ;;		line 1808 in file "bibliotecas/tff.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;  fil             2  128[BANK0 ] PTR struct _FIL
  6823 ;;		 -> fil(28), 
  6824 ;;  str             2  130[BANK0 ] PTR const unsigned char 
  6825 ;;		 -> STR_19(35), 
  6826 ;; Auto vars:     Size  Location     Type
  6827 ;;  s              16    0[BANK3 ] unsigned char [16]
  6828 ;;  val             4   24[BANK3 ] unsigned long 
  6829 ;;  i               2   31[BANK3 ] int 
  6830 ;;  cc              2   29[BANK3 ] int 
  6831 ;;  w               2   20[BANK3 ] int 
  6832 ;;  res             2   16[BANK3 ] int 
  6833 ;;  c               1   33[BANK3 ] unsigned char 
  6834 ;;  arp             1   28[BANK3 ] PTR void [1]
  6835 ;;		 -> ?_fprintf(2), 
  6836 ;;  r               1   23[BANK3 ] unsigned char 
  6837 ;;  f               1   22[BANK3 ] unsigned char 
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  2  128[BANK0 ] int 
  6840 ;; Registers used:
  6841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6842 ;; Tracked objects:
  6843 ;;		On entry : 3F/0
  6844 ;;		On exit  : 3F/3
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6847 ;;      Params:         0      20       0       0       0       0       0       0       0
  6848 ;;      Locals:         0       0       0       0      34       0       0       0       0
  6849 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6850 ;;      Totals:         0      22       0       0      34       0       0       0       0
  6851 ;;Total ram usage:       56 bytes
  6852 ;; Hardware stack levels used: 1
  6853 ;; Hardware stack levels required when called: 14
  6854 ;; This function calls:
  6855 ;;		___lldiv
  6856 ;;		___llmod
  6857 ;;		___wmul
  6858 ;;		_fputc
  6859 ;;		_fputs
  6860 ;; This function is called by:
  6861 ;;		_escrita_sdcard
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           
  6865                           	psect	text31
  6866  0016FC                     __ptext31:
  6867                           	callstack 0
  6868  0016FC                     _fprintf:
  6869                           	callstack 13
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;tff.c: 1814: va_list arp;;tff.c: 1815: UCHAR c, f, r;;tff.c: 1816: ULONG val;;tff.c: 18
      +                          17: char s[16];;tff.c: 1818: int i, w, res, cc;;tff.c: 1821: *arp = __va_start();
  6873                           
  6874                           ; BSR set to: 0
  6875                           ;incstack = 0
  6876  0016FC  0EE4               	movlw	low (?_fprintf+4)
  6877  0016FE  0103               	movlb	3	; () banked
  6878  001700  6F1C               	movwf	fprintf@arp& (0+255),b
  6879                           
  6880                           ; BSR set to: 3
  6881                           ;tff.c: 1823: for (cc = res = 0; cc != -1; res += cc) {
  6882  001702  0E00               	movlw	0
  6883  001704  6F11               	movwf	(fprintf@res+1)& (0+255),b
  6884  001706  0E00               	movlw	0
  6885  001708  6F10               	movwf	fprintf@res& (0+255),b
  6886  00170A  C310  F31D         	movff	fprintf@res,fprintf@cc
  6887  00170E  C311  F31E         	movff	fprintf@res+1,fprintf@cc+1
  6888  001712                     l10921:
  6889                           
  6890                           ; BSR set to: 3
  6891  001712  291D               	incf	fprintf@cc& (0+255),w,b
  6892  001714  E103               	bnz	l10925
  6893  001716  291E               	incf	(fprintf@cc+1)& (0+255),w,b
  6894  001718  B4D8               	btfsc	status,2,c
  6895  00171A  0012               	return	
  6896  00171C                     l10925:
  6897                           
  6898                           ; BSR set to: 3
  6899                           ;tff.c: 1824: c = *str++;
  6900  00171C  C0E2  FFF6         	movff	fprintf@str,tblptrl
  6901  001720  C0E3  FFF7         	movff	fprintf@str+1,tblptrh
  6902  001724                     	if	0	;tblptru may be non-zero
  6903  001724                     	endif
  6904  001724                     	if	0	;tblptru may be non-zero
  6905  001724                     	endif
  6906  001724  0008               	tblrd		*
  6907  001726  CFF5 F321          	movff	tablat,fprintf@c
  6908                           
  6909                           ; BSR set to: 3
  6910  00172A  0100               	movlb	0	; () banked
  6911  00172C  4BE2               	infsnz	fprintf@str& (0+255),f,b
  6912  00172E  2BE3               	incf	(fprintf@str+1)& (0+255),f,b
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;tff.c: 1825: if (c == 0) break;
  6916  001730  0103               	movlb	3	; () banked
  6917  001732  5121               	movf	fprintf@c& (0+255),w,b
  6918  001734  B4D8               	btfsc	status,2,c
  6919  001736  0012               	return	
  6920                           
  6921                           ; BSR set to: 3
  6922                           ;tff.c: 1826: if (c != '%') {
  6923  001738  0E25               	movlw	37
  6924  00173A  1921               	xorwf	fprintf@c& (0+255),w,b
  6925  00173C  B4D8               	btfsc	status,2,c
  6926  00173E  D019               	goto	l10941
  6927                           
  6928                           ; BSR set to: 3
  6929                           ;tff.c: 1827: cc = fputc(c, fil);
  6930  001740  C321  F0D2         	movff	fprintf@c,fputc@chr
  6931  001744  0100               	movlb	0	; () banked
  6932  001746  6BD3               	clrf	(fputc@chr+1)& (0+255),b
  6933  001748  C0E0  F0D4         	movff	fprintf@fil,fputc@fil
  6934  00174C  C0E1  F0D5         	movff	fprintf@fil+1,fputc@fil+1
  6935  001750  ECED  F026         	call	_fputc	;wreg free
  6936  001754  C0D2  F31D         	movff	?_fputc,fprintf@cc
  6937  001758  C0D3  F31E         	movff	?_fputc+1,fprintf@cc+1
  6938                           
  6939                           ; BSR set to: 0
  6940                           ;tff.c: 1828: if (cc != -1) cc = 1;
  6941  00175C  0103               	movlb	3	; () banked
  6942  00175E  291D               	incf	fprintf@cc& (0+255),w,b
  6943  001760  E103               	bnz	u13720
  6944  001762  291E               	incf	(fprintf@cc+1)& (0+255),w,b
  6945  001764  B4D8               	btfsc	status,2,c
  6946  001766  D183               	goto	l11065
  6947  001768                     u13720:
  6948                           
  6949                           ; BSR set to: 3
  6950  001768  0E00               	movlw	0
  6951  00176A  6F1E               	movwf	(fprintf@cc+1)& (0+255),b
  6952  00176C  0E01               	movlw	1
  6953  00176E  6F1D               	movwf	fprintf@cc& (0+255),b
  6954  001770  D17E               	goto	l11065
  6955  001772                     l10941:
  6956                           
  6957                           ; BSR set to: 3
  6958                           ;tff.c: 1830: };tff.c: 1831: w = f = 0;
  6959  001772  0E00               	movlw	0
  6960  001774  6F16               	movwf	fprintf@f& (0+255),b
  6961  001776  C316  F314         	movff	fprintf@f,fprintf@w
  6962  00177A  6B15               	clrf	(fprintf@w+1)& (0+255),b
  6963                           
  6964                           ; BSR set to: 3
  6965                           ;tff.c: 1832: c = *str++;
  6966  00177C  C0E2  FFF6         	movff	fprintf@str,tblptrl
  6967  001780  C0E3  FFF7         	movff	fprintf@str+1,tblptrh
  6968  001784                     	if	0	;tblptru may be non-zero
  6969  001784                     	endif
  6970  001784                     	if	0	;tblptru may be non-zero
  6971  001784                     	endif
  6972  001784  0008               	tblrd		*
  6973  001786  CFF5 F321          	movff	tablat,fprintf@c
  6974                           
  6975                           ; BSR set to: 3
  6976  00178A  0100               	movlb	0	; () banked
  6977  00178C  4BE2               	infsnz	fprintf@str& (0+255),f,b
  6978  00178E  2BE3               	incf	(fprintf@str+1)& (0+255),f,b
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;tff.c: 1833: if (c == '0') {
  6982  001790  0E30               	movlw	48
  6983  001792  0103               	movlb	3	; () banked
  6984  001794  1921               	xorwf	fprintf@c& (0+255),w,b
  6985  001796  A4D8               	btfss	status,2,c
  6986  001798  D023               	goto	l10961
  6987                           
  6988                           ; BSR set to: 3
  6989                           ;tff.c: 1834: f = 1; c = *str++;
  6990  00179A  0E01               	movlw	1
  6991  00179C  6F16               	movwf	fprintf@f& (0+255),b
  6992  00179E                     l10951:
  6993                           
  6994                           ; BSR set to: 3
  6995  00179E  C0E2  FFF6         	movff	fprintf@str,tblptrl
  6996  0017A2  C0E3  FFF7         	movff	fprintf@str+1,tblptrh
  6997  0017A6                     	if	0	;tblptru may be non-zero
  6998  0017A6                     	endif
  6999  0017A6                     	if	0	;tblptru may be non-zero
  7000  0017A6                     	endif
  7001  0017A6  0008               	tblrd		*
  7002  0017A8  CFF5 F321          	movff	tablat,fprintf@c
  7003                           
  7004                           ; BSR set to: 3
  7005  0017AC  0100               	movlb	0	; () banked
  7006  0017AE  4BE2               	infsnz	fprintf@str& (0+255),f,b
  7007  0017B0  2BE3               	incf	(fprintf@str+1)& (0+255),f,b
  7008  0017B2  D016               	goto	l10961
  7009  0017B4                     l10955:
  7010                           
  7011                           ; BSR set to: 3
  7012                           ;tff.c: 1837: w = w * 10 + (c - '0');
  7013  0017B4  C314  F01B         	movff	fprintf@w,___wmul@multiplier
  7014  0017B8  C315  F01C         	movff	fprintf@w+1,___wmul@multiplier+1
  7015  0017BC  0E00               	movlw	0
  7016  0017BE  6E1E               	movwf	(___wmul@multiplicand+1)^0,c
  7017  0017C0  0E0A               	movlw	10
  7018  0017C2  6E1D               	movwf	___wmul@multiplicand^0,c
  7019  0017C4  EC1A  F028         	call	___wmul	;wreg free
  7020  0017C8  0103               	movlb	3	; () banked
  7021  0017CA  5121               	movf	fprintf@c& (0+255),w,b
  7022  0017CC  261B               	addwf	?___wmul^0,f,c
  7023  0017CE  0E00               	movlw	0
  7024  0017D0  221C               	addwfc	(?___wmul+1)^0,f,c
  7025  0017D2  0ED0               	movlw	208
  7026  0017D4  241B               	addwf	?___wmul^0,w,c
  7027  0017D6  6F14               	movwf	fprintf@w& (0+255),b
  7028  0017D8  0EFF               	movlw	255
  7029  0017DA  201C               	addwfc	(?___wmul+1)^0,w,c
  7030  0017DC  6F15               	movwf	(fprintf@w+1)& (0+255),b
  7031  0017DE  D7DF               	goto	l10951
  7032  0017E0                     l10961:
  7033  0017E0  0E2F               	movlw	47
  7034  0017E2  0103               	movlb	3	; () banked
  7035  0017E4  6521               	cpfsgt	fprintf@c& (0+255),b
  7036  0017E6  D003               	goto	u13750
  7037                           
  7038                           ; BSR set to: 3
  7039  0017E8  0E39               	movlw	57
  7040  0017EA  6521               	cpfsgt	fprintf@c& (0+255),b
  7041  0017EC  D7E3               	goto	l10955
  7042  0017EE                     u13750:
  7043                           
  7044                           ; BSR set to: 3
  7045                           ;tff.c: 1839: };tff.c: 1840: if (c == 'l') {
  7046  0017EE  0E6C               	movlw	108
  7047  0017F0  1921               	xorwf	fprintf@c& (0+255),w,b
  7048  0017F2  A4D8               	btfss	status,2,c
  7049  0017F4  D00B               	goto	l10973
  7050                           
  7051                           ; BSR set to: 3
  7052                           ;tff.c: 1841: f |= 2; c = *str++;
  7053  0017F6  8316               	bsf	fprintf@f& (0+255),1,b
  7054                           
  7055                           ; BSR set to: 3
  7056  0017F8  C0E2  FFF6         	movff	fprintf@str,tblptrl
  7057  0017FC  C0E3  FFF7         	movff	fprintf@str+1,tblptrh
  7058  001800                     	if	0	;tblptru may be non-zero
  7059  001800                     	endif
  7060  001800                     	if	0	;tblptru may be non-zero
  7061  001800                     	endif
  7062  001800  0008               	tblrd		*
  7063  001802  CFF5 F321          	movff	tablat,fprintf@c
  7064                           
  7065                           ; BSR set to: 3
  7066  001806  0100               	movlb	0	; () banked
  7067  001808  4BE2               	infsnz	fprintf@str& (0+255),f,b
  7068  00180A  2BE3               	incf	(fprintf@str+1)& (0+255),f,b
  7069  00180C                     l10973:
  7070                           
  7071                           ;tff.c: 1842: };tff.c: 1843: if (c == 's') {
  7072  00180C  0E73               	movlw	115
  7073  00180E  0103               	movlb	3	; () banked
  7074  001810  1921               	xorwf	fprintf@c& (0+255),w,b
  7075  001812  A4D8               	btfss	status,2,c
  7076  001814  D015               	goto	l10979
  7077                           
  7078                           ; BSR set to: 3
  7079                           ;tff.c: 1844: cc = fputs((*(char* *)__va_arg((*(char* **)arp), (char*)0)), fil);
  7080  001816  511C               	movf	fprintf@arp& (0+255),w,b
  7081  001818  6ED9               	movwf	fsr2l,c
  7082  00181A  6ADA               	clrf	fsr2h,c
  7083  00181C  CFDE F0D9          	movff	postinc2,fputs@str
  7084  001820  CFDD F0DA          	movff	postdec2,fputs@str+1
  7085  001824  C0E0  F0DB         	movff	fprintf@fil,fputs@fil
  7086  001828  C0E1  F0DC         	movff	fprintf@fil+1,fputs@fil+1
  7087  00182C  ECA7  F022         	call	_fputs	;wreg free
  7088  001830  C0D9  F31D         	movff	?_fputs,fprintf@cc
  7089  001834  C0DA  F31E         	movff	?_fputs+1,fprintf@cc+1
  7090  001838  0E02               	movlw	2
  7091  00183A  0103               	movlb	3	; () banked
  7092  00183C  271C               	addwf	fprintf@arp& (0+255),f,b
  7093                           
  7094                           ;tff.c: 1845: continue;
  7095  00183E  D117               	goto	l11065
  7096  001840                     l10979:
  7097                           
  7098                           ; BSR set to: 3
  7099                           ;tff.c: 1846: };tff.c: 1847: if (c == 'c') {
  7100  001840  0E63               	movlw	99
  7101  001842  1921               	xorwf	fprintf@c& (0+255),w,b
  7102  001844  A4D8               	btfss	status,2,c
  7103  001846  D01D               	goto	l10989
  7104                           
  7105                           ; BSR set to: 3
  7106                           ;tff.c: 1848: cc = fputc((*(char *)__va_arg((*(char **)arp), (char)0)), fil);
  7107  001848  511C               	movf	fprintf@arp& (0+255),w,b
  7108  00184A  6ED9               	movwf	fsr2l,c
  7109  00184C  6ADA               	clrf	fsr2h,c
  7110  00184E  50DF               	movf	indf2,w,c
  7111  001850  0100               	movlb	0	; () banked
  7112  001852  6FF4               	movwf	??_fprintf& (0+255),b
  7113  001854  51F4               	movf	??_fprintf& (0+255),w,b
  7114  001856  6FD2               	movwf	fputc@chr& (0+255),b
  7115  001858  6BD3               	clrf	(fputc@chr+1)& (0+255),b
  7116  00185A  C0E0  F0D4         	movff	fprintf@fil,fputc@fil
  7117  00185E  C0E1  F0D5         	movff	fprintf@fil+1,fputc@fil+1
  7118  001862  ECED  F026         	call	_fputc	;wreg free
  7119  001866  C0D2  F31D         	movff	?_fputc,fprintf@cc
  7120  00186A  C0D3  F31E         	movff	?_fputc+1,fprintf@cc+1
  7121                           
  7122                           ; BSR set to: 0
  7123  00186E  0E02               	movlw	2
  7124  001870  0103               	movlb	3	; () banked
  7125  001872  271C               	addwf	fprintf@arp& (0+255),f,b
  7126                           
  7127                           ; BSR set to: 3
  7128                           ;tff.c: 1849: if (cc != -1) cc = 1;
  7129  001874  291D               	incf	fprintf@cc& (0+255),w,b
  7130  001876  E104               	bnz	u13790
  7131  001878  291E               	incf	(fprintf@cc+1)& (0+255),w,b
  7132  00187A  A4D8               	btfss	status,2,c
  7133  00187C  D775               	goto	u13720
  7134  00187E  D0F7               	goto	l11065
  7135  001880                     u13790:
  7136  001880  D773               	goto	u13720
  7137  001882                     l10989:
  7138                           
  7139                           ; BSR set to: 3
  7140                           ;tff.c: 1851: };tff.c: 1852: r = 0;
  7141  001882  0E00               	movlw	0
  7142  001884  6F17               	movwf	fprintf@r& (0+255),b
  7143                           
  7144                           ; BSR set to: 3
  7145                           ;tff.c: 1853: if (c == 'd') r = 10;
  7146  001886  0E64               	movlw	100
  7147  001888  1921               	xorwf	fprintf@c& (0+255),w,b
  7148  00188A  A4D8               	btfss	status,2,c
  7149  00188C  D002               	goto	l10995
  7150                           
  7151                           ; BSR set to: 3
  7152  00188E  0E0A               	movlw	10
  7153  001890  6F17               	movwf	fprintf@r& (0+255),b
  7154  001892                     l10995:
  7155                           
  7156                           ; BSR set to: 3
  7157                           ;tff.c: 1854: if (c == 'u') r = 10;
  7158  001892  0E75               	movlw	117
  7159  001894  1921               	xorwf	fprintf@c& (0+255),w,b
  7160  001896  A4D8               	btfss	status,2,c
  7161  001898  D002               	goto	l10999
  7162                           
  7163                           ; BSR set to: 3
  7164  00189A  0E0A               	movlw	10
  7165  00189C  6F17               	movwf	fprintf@r& (0+255),b
  7166  00189E                     l10999:
  7167                           
  7168                           ; BSR set to: 3
  7169                           ;tff.c: 1855: if (c == 'X') r = 16;
  7170  00189E  0E58               	movlw	88
  7171  0018A0  1921               	xorwf	fprintf@c& (0+255),w,b
  7172  0018A2  A4D8               	btfss	status,2,c
  7173  0018A4  D002               	goto	l1408
  7174                           
  7175                           ; BSR set to: 3
  7176  0018A6  0E10               	movlw	16
  7177  0018A8  6F17               	movwf	fprintf@r& (0+255),b
  7178  0018AA                     l1408:
  7179                           
  7180                           ; BSR set to: 3
  7181                           ;tff.c: 1856: if (r == 0) break;
  7182  0018AA  5117               	movf	fprintf@r& (0+255),w,b
  7183  0018AC  B4D8               	btfsc	status,2,c
  7184  0018AE  0012               	return	
  7185                           
  7186                           ; BSR set to: 3
  7187                           ;tff.c: 1857: if (f & 2) {
  7188  0018B0  A316               	btfss	fprintf@f& (0+255),1,b
  7189  0018B2  D00D               	goto	l11009
  7190                           
  7191                           ; BSR set to: 3
  7192                           ;tff.c: 1858: val = (ULONG)(*(long *)__va_arg((*(long **)arp), (long)0));
  7193  0018B4  511C               	movf	fprintf@arp& (0+255),w,b
  7194  0018B6  6ED9               	movwf	fsr2l,c
  7195  0018B8  6ADA               	clrf	fsr2h,c
  7196  0018BA  CFDE F318          	movff	postinc2,fprintf@val
  7197  0018BE  CFDE F319          	movff	postinc2,fprintf@val+1
  7198  0018C2  CFDE F31A          	movff	postinc2,fprintf@val+2
  7199  0018C6  CFDE F31B          	movff	postinc2,fprintf@val+3
  7200                           
  7201                           ; BSR set to: 3
  7202  0018CA  0E04               	movlw	4
  7203  0018CC  D01F               	goto	L1
  7204  0018CE                     l11009:
  7205                           
  7206                           ; BSR set to: 3
  7207                           ;tff.c: 1860: val = (c == 'd') ? (ULONG)(long)(*(int *)__va_arg((*(int **)arp), (int)0))
      +                           : (ULONG)(*(unsigned int *)__va_arg((*(unsigned int **)arp), (unsigned int)0));
  7208  0018CE  0E64               	movlw	100
  7209  0018D0  1921               	xorwf	fprintf@c& (0+255),w,b
  7210  0018D2  B4D8               	btfsc	status,2,c
  7211  0018D4  D00E               	goto	l11015
  7212                           
  7213                           ; BSR set to: 3
  7214  0018D6  511C               	movf	fprintf@arp& (0+255),w,b
  7215  0018D8  6ED9               	movwf	fsr2l,c
  7216  0018DA  6ADA               	clrf	fsr2h,c
  7217  0018DC  CFDE F0F4          	movff	postinc2,??_fprintf
  7218  0018E0  CFDD F0F5          	movff	postdec2,??_fprintf+1
  7219  0018E4  C0F4  F318         	movff	??_fprintf,fprintf@val
  7220  0018E8  C0F5  F319         	movff	??_fprintf+1,fprintf@val+1
  7221  0018EC  6B1A               	clrf	(fprintf@val+2)& (0+255),b
  7222  0018EE  6B1B               	clrf	(fprintf@val+3)& (0+255),b
  7223  0018F0  D00C               	goto	l11017
  7224  0018F2                     l11015:
  7225                           
  7226                           ; BSR set to: 3
  7227  0018F2  511C               	movf	fprintf@arp& (0+255),w,b
  7228  0018F4  6ED9               	movwf	fsr2l,c
  7229  0018F6  6ADA               	clrf	fsr2h,c
  7230  0018F8  CFDE F318          	movff	postinc2,fprintf@val
  7231  0018FC  CFDD F319          	movff	postdec2,fprintf@val+1
  7232  001900  0E00               	movlw	0
  7233  001902  BF19               	btfsc	(fprintf@val+1)& (0+255),7,b
  7234  001904  0EFF               	movlw	-1
  7235  001906  6F1A               	movwf	(fprintf@val+2)& (0+255),b
  7236  001908  6F1B               	movwf	(fprintf@val+3)& (0+255),b
  7237  00190A                     l11017:
  7238                           
  7239                           ; BSR set to: 3
  7240  00190A  0E02               	movlw	2
  7241  00190C                     L1:
  7242  00190C  271C               	addwf	fprintf@arp& (0+255),f,b
  7243                           
  7244                           ; BSR set to: 3
  7245                           ;tff.c: 1861: };tff.c: 1863: if (c == 'd') {
  7246  00190E  0E64               	movlw	100
  7247  001910  1921               	xorwf	fprintf@c& (0+255),w,b
  7248  001912  A4D8               	btfss	status,2,c
  7249  001914  D00E               	goto	l11027
  7250                           
  7251                           ; BSR set to: 3
  7252                           ;tff.c: 1864: if (val >= 0x80000000) {
  7253  001916  0E80               	movlw	128
  7254  001918  5D1B               	subwf	(fprintf@val+3)& (0+255),w,b
  7255  00191A  A0D8               	btfss	status,0,c
  7256  00191C  D00A               	goto	l11027
  7257                           
  7258                           ; BSR set to: 3
  7259                           ;tff.c: 1865: val = 0 - val;
  7260  00191E  6D18               	negf	fprintf@val& (0+255),b
  7261  001920  1F19               	comf	(fprintf@val+1)& (0+255),f,b
  7262  001922  B0D8               	btfsc	status,0,c
  7263  001924  2B19               	incf	(fprintf@val+1)& (0+255),f,b
  7264  001926  1F1A               	comf	(fprintf@val+2)& (0+255),f,b
  7265  001928  B0D8               	btfsc	status,0,c
  7266  00192A  2B1A               	incf	(fprintf@val+2)& (0+255),f,b
  7267  00192C  0E00               	movlw	0
  7268  00192E  571B               	subfwb	(fprintf@val+3)& (0+255),f,b
  7269                           
  7270                           ; BSR set to: 3
  7271                           ;tff.c: 1866: f |= 4;
  7272  001930  8516               	bsf	fprintf@f& (0+255),2,b
  7273  001932                     l11027:
  7274                           
  7275                           ; BSR set to: 3
  7276                           ;tff.c: 1867: };tff.c: 1868: };tff.c: 1869: i = sizeof(s) - 1; s[i] = 0;
  7277  001932  0E00               	movlw	0
  7278  001934  6F20               	movwf	(fprintf@i+1)& (0+255),b
  7279  001936  0E0F               	movlw	15
  7280  001938  6F1F               	movwf	fprintf@i& (0+255),b
  7281                           
  7282                           ; BSR set to: 3
  7283  00193A  0E00               	movlw	0
  7284  00193C  6F0F               	movwf	(fprintf@s+15)& (0+255),b
  7285  00193E                     l11031:
  7286                           
  7287                           ; BSR set to: 3
  7288                           ;tff.c: 1871: c = (UCHAR)(val % r + '0');
  7289  00193E  C318  F01B         	movff	fprintf@val,___llmod@dividend
  7290  001942  C319  F01C         	movff	fprintf@val+1,___llmod@dividend+1
  7291  001946  C31A  F01D         	movff	fprintf@val+2,___llmod@dividend+2
  7292  00194A  C31B  F01E         	movff	fprintf@val+3,___llmod@dividend+3
  7293  00194E  5117               	movf	fprintf@r& (0+255),w,b
  7294  001950  6E1F               	movwf	___llmod@divisor^0,c
  7295  001952  6A20               	clrf	(___llmod@divisor+1)^0,c
  7296  001954  6A21               	clrf	(___llmod@divisor+2)^0,c
  7297  001956  6A22               	clrf	(___llmod@divisor+3)^0,c
  7298  001958  ECBD  F024         	call	___llmod	;wreg free
  7299  00195C  501B               	movf	?___llmod^0,w,c
  7300  00195E  0F30               	addlw	48
  7301  001960  6F21               	movwf	fprintf@c& (0+255),b
  7302                           
  7303                           ; BSR set to: 3
  7304                           ;tff.c: 1872: if (c > '9') c += 7;
  7305  001962  0E39               	movlw	57
  7306  001964  6521               	cpfsgt	fprintf@c& (0+255),b
  7307  001966  D002               	goto	l11037
  7308                           
  7309                           ; BSR set to: 3
  7310  001968  0E07               	movlw	7
  7311  00196A  2721               	addwf	fprintf@c& (0+255),f,b
  7312  00196C                     l11037:
  7313                           
  7314                           ; BSR set to: 3
  7315                           ;tff.c: 1873: s[--i] = c;
  7316  00196C  071F               	decf	fprintf@i& (0+255),f,b
  7317  00196E  A0D8               	btfss	status,0,c
  7318  001970  0720               	decf	(fprintf@i+1)& (0+255),f,b
  7319  001972  0E00               	movlw	low fprintf@s
  7320  001974  251F               	addwf	fprintf@i& (0+255),w,b
  7321  001976  6ED9               	movwf	fsr2l,c
  7322  001978  0E03               	movlw	high fprintf@s
  7323  00197A  2120               	addwfc	(fprintf@i+1)& (0+255),w,b
  7324  00197C  6EDA               	movwf	fsr2h,c
  7325  00197E  C321  FFDF         	movff	fprintf@c,indf2
  7326                           
  7327                           ; BSR set to: 3
  7328                           ;tff.c: 1874: val /= r;
  7329  001982  C318  F01B         	movff	fprintf@val,___lldiv@dividend
  7330  001986  C319  F01C         	movff	fprintf@val+1,___lldiv@dividend+1
  7331  00198A  C31A  F01D         	movff	fprintf@val+2,___lldiv@dividend+2
  7332  00198E  C31B  F01E         	movff	fprintf@val+3,___lldiv@dividend+3
  7333  001992  5117               	movf	fprintf@r& (0+255),w,b
  7334  001994  6E1F               	movwf	___lldiv@divisor^0,c
  7335  001996  6A20               	clrf	(___lldiv@divisor+1)^0,c
  7336  001998  6A21               	clrf	(___lldiv@divisor+2)^0,c
  7337  00199A  6A22               	clrf	(___lldiv@divisor+3)^0,c
  7338  00199C  EC2D  F023         	call	___lldiv	;wreg free
  7339  0019A0  C01B  F318         	movff	?___lldiv,fprintf@val
  7340  0019A4  C01C  F319         	movff	?___lldiv+1,fprintf@val+1
  7341  0019A8  C01D  F31A         	movff	?___lldiv+2,fprintf@val+2
  7342  0019AC  C01E  F31B         	movff	?___lldiv+3,fprintf@val+3
  7343                           
  7344                           ;tff.c: 1875: } while (i && val);
  7345  0019B0  0103               	movlb	3	; () banked
  7346  0019B2  511F               	movf	fprintf@i& (0+255),w,b
  7347  0019B4  1120               	iorwf	(fprintf@i+1)& (0+255),w,b
  7348  0019B6  B4D8               	btfsc	status,2,c
  7349  0019B8  D006               	goto	u13900
  7350                           
  7351                           ; BSR set to: 3
  7352  0019BA  5118               	movf	fprintf@val& (0+255),w,b
  7353  0019BC  1119               	iorwf	(fprintf@val+1)& (0+255),w,b
  7354  0019BE  111A               	iorwf	(fprintf@val+2)& (0+255),w,b
  7355  0019C0  111B               	iorwf	(fprintf@val+3)& (0+255),w,b
  7356  0019C2  A4D8               	btfss	status,2,c
  7357  0019C4  D7BC               	goto	l11031
  7358  0019C6                     u13900:
  7359                           
  7360                           ; BSR set to: 3
  7361                           ;tff.c: 1876: if (i && (f & 4)) s[--i] = '-';
  7362  0019C6  511F               	movf	fprintf@i& (0+255),w,b
  7363  0019C8  1120               	iorwf	(fprintf@i+1)& (0+255),w,b
  7364  0019CA  A4D8               	btfss	status,2,c
  7365                           
  7366                           ; BSR set to: 3
  7367  0019CC  A516               	btfss	fprintf@f& (0+255),2,b
  7368  0019CE  D00B               	goto	l11051
  7369                           
  7370                           ; BSR set to: 3
  7371  0019D0  071F               	decf	fprintf@i& (0+255),f,b
  7372  0019D2  A0D8               	btfss	status,0,c
  7373  0019D4  0720               	decf	(fprintf@i+1)& (0+255),f,b
  7374  0019D6  0E00               	movlw	low fprintf@s
  7375  0019D8  251F               	addwf	fprintf@i& (0+255),w,b
  7376  0019DA  6ED9               	movwf	fsr2l,c
  7377  0019DC  0E03               	movlw	high fprintf@s
  7378  0019DE  2120               	addwfc	(fprintf@i+1)& (0+255),w,b
  7379  0019E0  6EDA               	movwf	fsr2h,c
  7380  0019E2  0E2D               	movlw	45
  7381  0019E4  6EDF               	movwf	indf2,c
  7382  0019E6                     l11051:
  7383                           
  7384                           ; BSR set to: 3
  7385                           ;tff.c: 1877: w = sizeof(s) - 1 - w;
  7386  0019E6  5114               	movf	fprintf@w& (0+255),w,b
  7387  0019E8  080F               	sublw	15
  7388  0019EA  6F14               	movwf	fprintf@w& (0+255),b
  7389  0019EC  5115               	movf	(fprintf@w+1)& (0+255),w,b
  7390  0019EE  A0D8               	btfss	status,0,c
  7391  0019F0  2AE8               	incf	wreg,f,c
  7392  0019F2  0800               	sublw	0
  7393  0019F4  6F15               	movwf	(fprintf@w+1)& (0+255),b
  7394                           
  7395                           ;tff.c: 1878: while (i && i > w) s[--i] = (f & 1) ? '0' : ' ';
  7396  0019F6  D016               	goto	l11059
  7397  0019F8                     l1425:
  7398                           
  7399                           ; BSR set to: 0
  7400  0019F8  0103               	movlb	3	; () banked
  7401  0019FA  B116               	btfsc	fprintf@f& (0+255),0,b
  7402  0019FC  D004               	goto	l11055
  7403                           
  7404                           ; BSR set to: 3
  7405  0019FE  0E00               	movlw	0
  7406  001A00  6F13               	movwf	(_fprintf$2589+1)& (0+255),b
  7407  001A02  0E20               	movlw	32
  7408  001A04  D003               	goto	L2
  7409  001A06                     l11055:
  7410                           
  7411                           ; BSR set to: 3
  7412  001A06  0E00               	movlw	0
  7413  001A08  6F13               	movwf	(_fprintf$2589+1)& (0+255),b
  7414  001A0A  0E30               	movlw	48
  7415  001A0C                     L2:
  7416  001A0C  6F12               	movwf	_fprintf$2589& (0+255),b
  7417                           
  7418                           ; BSR set to: 3
  7419  001A0E  071F               	decf	fprintf@i& (0+255),f,b
  7420  001A10  A0D8               	btfss	status,0,c
  7421  001A12  0720               	decf	(fprintf@i+1)& (0+255),f,b
  7422  001A14  0E00               	movlw	low fprintf@s
  7423  001A16  251F               	addwf	fprintf@i& (0+255),w,b
  7424  001A18  6ED9               	movwf	fsr2l,c
  7425  001A1A  0E03               	movlw	high fprintf@s
  7426  001A1C  2120               	addwfc	(fprintf@i+1)& (0+255),w,b
  7427  001A1E  6EDA               	movwf	fsr2h,c
  7428  001A20  C312  FFDF         	movff	_fprintf$2589,indf2
  7429  001A24                     l11059:
  7430                           
  7431                           ; BSR set to: 3
  7432  001A24  511F               	movf	fprintf@i& (0+255),w,b
  7433  001A26  1120               	iorwf	(fprintf@i+1)& (0+255),w,b
  7434  001A28  B4D8               	btfsc	status,2,c
  7435  001A2A  D00D               	goto	u13950
  7436                           
  7437                           ; BSR set to: 3
  7438  001A2C  511F               	movf	fprintf@i& (0+255),w,b
  7439  001A2E  5D14               	subwf	fprintf@w& (0+255),w,b
  7440  001A30  5115               	movf	(fprintf@w+1)& (0+255),w,b
  7441  001A32  0A80               	xorlw	128
  7442  001A34  0100               	movlb	0	; () banked
  7443  001A36  6FF4               	movwf	??_fprintf& (0+255),b
  7444  001A38  0103               	movlb	3	; () banked
  7445  001A3A  5120               	movf	(fprintf@i+1)& (0+255),w,b
  7446  001A3C  0A80               	xorlw	128
  7447  001A3E  0100               	movlb	0	; () banked
  7448  001A40  59F4               	subwfb	??_fprintf& (0+255),w,b
  7449  001A42  A0D8               	btfss	status,0,c
  7450  001A44  D7D9               	goto	l1425
  7451  001A46                     u13950:
  7452                           
  7453                           ;tff.c: 1879: cc = fputs(&s[i], fil);
  7454  001A46  0E00               	movlw	low fprintf@s
  7455  001A48  0103               	movlb	3	; () banked
  7456  001A4A  251F               	addwf	fprintf@i& (0+255),w,b
  7457  001A4C  0100               	movlb	0	; () banked
  7458  001A4E  6FD9               	movwf	fputs@str& (0+255),b
  7459  001A50  0E03               	movlw	high fprintf@s
  7460  001A52  0103               	movlb	3	; () banked
  7461  001A54  2120               	addwfc	(fprintf@i+1)& (0+255),w,b
  7462  001A56  0100               	movlb	0	; () banked
  7463  001A58  6FDA               	movwf	(fputs@str+1)& (0+255),b
  7464  001A5A  C0E0  F0DB         	movff	fprintf@fil,fputs@fil
  7465  001A5E  C0E1  F0DC         	movff	fprintf@fil+1,fputs@fil+1
  7466  001A62  ECA7  F022         	call	_fputs	;wreg free
  7467  001A66  C0D9  F31D         	movff	?_fputs,fprintf@cc
  7468  001A6A  C0DA  F31E         	movff	?_fputs+1,fprintf@cc+1
  7469  001A6E                     l11065:
  7470  001A6E  0103               	movlb	3	; () banked
  7471  001A70  511D               	movf	fprintf@cc& (0+255),w,b
  7472  001A72  2710               	addwf	fprintf@res& (0+255),f,b
  7473  001A74  511E               	movf	(fprintf@cc+1)& (0+255),w,b
  7474  001A76  2311               	addwfc	(fprintf@res+1)& (0+255),f,b
  7475  001A78  D64C               	goto	l10921
  7476  001A7A                     __end_of_fprintf:
  7477                           	callstack 0
  7478                           
  7479 ;; *************** function _fputs *****************
  7480 ;; Defined at:
  7481 ;;		line 1788 in file "bibliotecas/tff.c"
  7482 ;; Parameters:    Size  Location     Type
  7483 ;;  str             2  121[BANK0 ] PTR const unsigned char 
  7484 ;;		 -> fprintf@s(16), ?_fprintf(2), STR_24(16), STR_23(27), 
  7485 ;;		 -> STR_22(17), STR_21(16), STR_20(16), string_dado(59), 
  7486 ;;  fil             2  123[BANK0 ] PTR struct _FIL
  7487 ;;		 -> fil(28), 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;  n               2  126[BANK0 ] int 
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  2  121[BANK0 ] int 
  7492 ;; Registers used:
  7493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7494 ;; Tracked objects:
  7495 ;;		On entry : 3C/3
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7499 ;;      Params:         0       4       0       0       0       0       0       0       0
  7500 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7501 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7502 ;;      Totals:         0       7       0       0       0       0       0       0       0
  7503 ;;Total ram usage:        7 bytes
  7504 ;; Hardware stack levels used: 1
  7505 ;; Hardware stack levels required when called: 13
  7506 ;; This function calls:
  7507 ;;		_fputc
  7508 ;; This function is called by:
  7509 ;;		_fprintf
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513                           	psect	text32
  7514  00454E                     __ptext32:
  7515                           	callstack 0
  7516  00454E                     _fputs:
  7517                           	callstack 13
  7518                           
  7519                           ;tff.c: 1793: int n;;tff.c: 1796: for (n = 0; *str; str++, n++) {
  7520                           
  7521                           ; BSR set to: 3
  7522                           ;incstack = 0
  7523  00454E  0E00               	movlw	0
  7524  004550  0100               	movlb	0	; () banked
  7525  004552  6FDF               	movwf	(fputs@n+1)& (0+255),b
  7526  004554  0E00               	movlw	0
  7527  004556  6FDE               	movwf	fputs@n& (0+255),b
  7528  004558  D027               	goto	l10649
  7529  00455A                     l10643:
  7530                           
  7531                           ;tff.c: 1797: if (fputc(*str, fil) == -1) return -1;
  7532  00455A  C0D9  FFF6         	movff	fputs@str,tblptrl
  7533  00455E  C0DA  FFF7         	movff	fputs@str+1,tblptrh
  7534  004562  6AF8               	clrf	tblptru,c
  7535  004564  0E07               	movlw	(high __ramtop+-1)
  7536  004566  64F7               	cpfsgt	tblptrh,c
  7537  004568  D003               	bra	u13167
  7538  00456A  0008               	tblrd		*
  7539  00456C  50F5               	movf	tablat,w,c
  7540  00456E  D005               	bra	u13160
  7541  004570                     u13167:
  7542  004570  CFF6 FFE1          	movff	tblptrl,fsr1l
  7543  004574  CFF7 FFE2          	movff	tblptrh,fsr1h
  7544  004578  50E7               	movf	indf1,w,c
  7545  00457A                     u13160:
  7546  00457A  0100               	movlb	0	; () banked
  7547  00457C  6FDD               	movwf	??_fputs& (0+255),b
  7548  00457E  51DD               	movf	??_fputs& (0+255),w,b
  7549  004580  6FD2               	movwf	fputc@chr& (0+255),b
  7550  004582  6BD3               	clrf	(fputc@chr+1)& (0+255),b
  7551  004584  C0DB  F0D4         	movff	fputs@fil,fputc@fil
  7552  004588  C0DC  F0D5         	movff	fputs@fil+1,fputc@fil+1
  7553  00458C  ECED  F026         	call	_fputc	;wreg free
  7554  004590  29D2               	incf	?_fputc& (0+255),w,b
  7555  004592  E106               	bnz	l10647
  7556  004594  29D3               	incf	(?_fputc+1)& (0+255),w,b
  7557  004596  A4D8               	btfss	status,2,c
  7558  004598  D003               	goto	l10647
  7559                           
  7560                           ; BSR set to: 0
  7561  00459A  69D9               	setf	?_fputs& (0+255),b
  7562  00459C  69DA               	setf	(?_fputs+1)& (0+255),b
  7563  00459E  0012               	return	
  7564  0045A0                     l10647:
  7565                           
  7566                           ; BSR set to: 0
  7567  0045A0  4BD9               	infsnz	fputs@str& (0+255),f,b
  7568  0045A2  2BDA               	incf	(fputs@str+1)& (0+255),f,b
  7569  0045A4  4BDE               	infsnz	fputs@n& (0+255),f,b
  7570  0045A6  2BDF               	incf	(fputs@n+1)& (0+255),f,b
  7571  0045A8                     l10649:
  7572                           
  7573                           ; BSR set to: 0
  7574  0045A8  C0D9  FFF6         	movff	fputs@str,tblptrl
  7575  0045AC  C0DA  FFF7         	movff	fputs@str+1,tblptrh
  7576  0045B0  6AF8               	clrf	tblptru,c
  7577  0045B2  0E07               	movlw	(high __ramtop+-1)
  7578  0045B4  64F7               	cpfsgt	tblptrh,c
  7579  0045B6  D003               	bra	u13187
  7580  0045B8  0008               	tblrd		*
  7581  0045BA  50F5               	movf	tablat,w,c
  7582  0045BC  D005               	bra	u13180
  7583  0045BE                     u13187:
  7584  0045BE  CFF6 FFE1          	movff	tblptrl,fsr1l
  7585  0045C2  CFF7 FFE2          	movff	tblptrh,fsr1h
  7586  0045C6  50E7               	movf	indf1,w,c
  7587  0045C8                     u13180:
  7588  0045C8  0900               	iorlw	0
  7589  0045CA  A4D8               	btfss	status,2,c
  7590  0045CC  D7C6               	goto	l10643
  7591                           
  7592                           ;tff.c: 1798: };tff.c: 1799: return n;
  7593  0045CE  C0DE  F0D9         	movff	fputs@n,?_fputs
  7594  0045D2  C0DF  F0DA         	movff	fputs@n+1,?_fputs+1
  7595  0045D6  0012               	return		;funcret
  7596  0045D8                     __end_of_fputs:
  7597                           	callstack 0
  7598                           
  7599 ;; *************** function _fputc *****************
  7600 ;; Defined at:
  7601 ;;		line 1761 in file "bibliotecas/tff.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;  chr             2  114[BANK0 ] int 
  7604 ;;  fil             2  116[BANK0 ] PTR struct _FIL
  7605 ;;		 -> fil(28), 
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;  bw              2  119[BANK0 ] unsigned int 
  7608 ;;  c               1  118[BANK0 ] unsigned char 
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  2  114[BANK0 ] int 
  7611 ;; Registers used:
  7612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7613 ;; Tracked objects:
  7614 ;;		On entry : 3F/0
  7615 ;;		On exit  : 3F/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7618 ;;      Params:         0       4       0       0       0       0       0       0       0
  7619 ;;      Locals:         0       3       0       0       0       0       0       0       0
  7620 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7621 ;;      Totals:         0       7       0       0       0       0       0       0       0
  7622 ;;Total ram usage:        7 bytes
  7623 ;; Hardware stack levels used: 1
  7624 ;; Hardware stack levels required when called: 12
  7625 ;; This function calls:
  7626 ;;		_f_write
  7627 ;; This function is called by:
  7628 ;;		_fputs
  7629 ;;		_fprintf
  7630 ;; This function uses a non-reentrant model
  7631 ;;
  7632                           
  7633                           	psect	text33
  7634  004DDA                     __ptext33:
  7635                           	callstack 0
  7636  004DDA                     _fputc:
  7637                           	callstack 13
  7638                           
  7639                           ; BSR set to: 0
  7640                           ;tff.c: 1766: UINT bw;;tff.c: 1767: char c;;tff.c: 1773: if (!fil) {
  7641                           
  7642                           ;incstack = 0
  7643  004DDA  51D4               	movf	fputc@fil& (0+255),w,b
  7644  004DDC  11D5               	iorwf	(fputc@fil+1)& (0+255),w,b
  7645  004DDE  A4D8               	btfss	status,2,c
  7646  004DE0  D005               	goto	l1375
  7647  004DE2                     u12490:
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;tff.c: 1775: return chr;
  7651  004DE2  C0D2  F0D2         	movff	fputc@chr,?_fputc
  7652  004DE6  C0D3  F0D3         	movff	fputc@chr+1,?_fputc+1
  7653  004DEA  0012               	return	
  7654  004DEC                     l1375:
  7655                           
  7656                           ; BSR set to: 0
  7657                           ;tff.c: 1776: };tff.c: 1777: c = (char)chr;
  7658  004DEC  C0D2  F0D6         	movff	fputc@chr,fputc@c
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;tff.c: 1778: f_write(fil, &c, 1, &bw);
  7662  004DF0  C0D4  F0B4         	movff	fputc@fil,f_write@fp
  7663  004DF4  C0D5  F0B5         	movff	fputc@fil+1,f_write@fp+1
  7664  004DF8  0ED6               	movlw	low fputc@c
  7665  004DFA  6FB6               	movwf	f_write@buff& (0+255),b
  7666  004DFC  0E00               	movlw	0
  7667  004DFE  6FB8               	movwf	(f_write@btw+1)& (0+255),b
  7668  004E00  0E01               	movlw	1
  7669  004E02  6FB7               	movwf	f_write@btw& (0+255),b
  7670  004E04  0ED7               	movlw	low fputc@bw
  7671  004E06  6FB9               	movwf	f_write@bw& (0+255),b
  7672  004E08  ECD1  F003         	call	_f_write	;wreg free
  7673                           
  7674                           ; BSR set to: 0
  7675                           ;tff.c: 1779: return bw ? chr : -1;
  7676  004E0C  51D7               	movf	fputc@bw& (0+255),w,b
  7677  004E0E  11D8               	iorwf	(fputc@bw+1)& (0+255),w,b
  7678  004E10  A4D8               	btfss	status,2,c
  7679  004E12  D7E7               	goto	u12490
  7680                           
  7681                           ; BSR set to: 0
  7682  004E14  69D2               	setf	?_fputc& (0+255),b
  7683  004E16  69D3               	setf	(?_fputc+1)& (0+255),b
  7684                           
  7685                           ; BSR set to: 0
  7686  004E18  0012               	return		;funcret
  7687  004E1A                     __end_of_fputc:
  7688                           	callstack 0
  7689                           
  7690 ;; *************** function _f_write *****************
  7691 ;; Defined at:
  7692 ;;		line 991 in file "bibliotecas/tff.c"
  7693 ;; Parameters:    Size  Location     Type
  7694 ;;  fp              2   84[BANK0 ] PTR struct _FIL
  7695 ;;		 -> fil(28), 
  7696 ;;  buff            1   86[BANK0 ] PTR const void 
  7697 ;;		 -> fputc@c(1), 
  7698 ;;  btw             2   87[BANK0 ] unsigned int 
  7699 ;;  bw              1   89[BANK0 ] PTR unsigned int 
  7700 ;;		 -> fputc@bw(2), 
  7701 ;; Auto vars:     Size  Location     Type
  7702 ;;  sect            4  104[BANK0 ] unsigned long 
  7703 ;;  wcnt            2  112[BANK0 ] unsigned int 
  7704 ;;  clust           2  110[BANK0 ] unsigned short 
  7705 ;;  cc              2  108[BANK0 ] unsigned int 
  7706 ;;  wbuff           1  103[BANK0 ] PTR const unsigned char 
  7707 ;;		 -> fputc@c(1), 
  7708 ;;  res             1  102[BANK0 ] enum E155
  7709 ;; Return value:  Size  Location     Type
  7710 ;;                  1    wreg      enum E155
  7711 ;; Registers used:
  7712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7713 ;; Tracked objects:
  7714 ;;		On entry : 3F/0
  7715 ;;		On exit  : 3F/0
  7716 ;;		Unchanged: 0/0
  7717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7718 ;;      Params:         0       6       0       0       0       0       0       0       0
  7719 ;;      Locals:         0      12       0       0       0       0       0       0       0
  7720 ;;      Temps:          0      12       0       0       0       0       0       0       0
  7721 ;;      Totals:         0      30       0       0       0       0       0       0       0
  7722 ;;Total ram usage:       30 bytes
  7723 ;; Hardware stack levels used: 1
  7724 ;; Hardware stack levels required when called: 11
  7725 ;; This function calls:
  7726 ;;		_clust2sect
  7727 ;;		_create_chain
  7728 ;;		_disk_write
  7729 ;;		_memcpy
  7730 ;;		_move_window
  7731 ;;		_validate
  7732 ;; This function is called by:
  7733 ;;		_fputc
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           	psect	text34
  7738  0007A2                     __ptext34:
  7739                           	callstack 0
  7740  0007A2                     _f_write:
  7741                           	callstack 13
  7742                           
  7743                           ; BSR set to: 0
  7744                           ;tff.c: 998: FRESULT res;;tff.c: 999: DWORD sect;;tff.c: 1000: UINT wcnt, cc;;tff.c: 100
      +                          1: CLUST clust;;tff.c: 1002: const BYTE *wbuff = buff;
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;incstack = 0
  7748  0007A2  C0B6  F0C7         	movff	f_write@buff,f_write@wbuff
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;tff.c: 1005: *bw = 0;
  7752  0007A6  51B9               	movf	f_write@bw& (0+255),w,b
  7753  0007A8  6ED9               	movwf	fsr2l,c
  7754  0007AA  6ADA               	clrf	fsr2h,c
  7755  0007AC  0E00               	movlw	0
  7756  0007AE  6EDE               	movwf	postinc2,c
  7757  0007B0  0E00               	movlw	0
  7758  0007B2  6EDD               	movwf	postdec2,c
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;tff.c: 1006: res = validate(fp->fs, fp->id);
  7762  0007B4  EE20 F004          	lfsr	2,4
  7763  0007B8  51B4               	movf	f_write@fp& (0+255),w,b
  7764  0007BA  26D9               	addwf	fsr2l,f,c
  7765  0007BC  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7766  0007BE  22DA               	addwfc	fsr2h,f,c
  7767  0007C0  CFDE F01E          	movff	postinc2,validate@fs
  7768  0007C4  CFDD F01F          	movff	postdec2,validate@fs+1
  7769  0007C8  C0B4  FFD9         	movff	f_write@fp,fsr2l
  7770  0007CC  C0B5  FFDA         	movff	f_write@fp+1,fsr2h
  7771  0007D0  CFDE F020          	movff	postinc2,validate@id
  7772  0007D4  CFDD F021          	movff	postdec2,validate@id+1
  7773  0007D8  EC63  F026         	call	_validate	;wreg free
  7774  0007DC  0100               	movlb	0	; () banked
  7775  0007DE  6FC6               	movwf	f_write@res& (0+255),b
  7776                           
  7777                           ; BSR set to: 0
  7778                           ;tff.c: 1007: if (res != FR_OK) return res;
  7779  0007E0  51C6               	movf	f_write@res& (0+255),w,b
  7780  0007E2  A4D8               	btfss	status,2,c
  7781  0007E4  0012               	return	
  7782                           
  7783                           ; BSR set to: 0
  7784                           ;tff.c: 1008: if (fp->flag & 0x80) return FR_RW_ERROR;
  7785  0007E6  EE20 F002          	lfsr	2,2
  7786  0007EA  51B4               	movf	f_write@fp& (0+255),w,b
  7787  0007EC  26D9               	addwf	fsr2l,f,c
  7788  0007EE  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7789  0007F0  22DA               	addwfc	fsr2h,f,c
  7790  0007F2  BEDF               	btfsc	indf2,7,c
  7791  0007F4  0012               	return	
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;tff.c: 1009: if (!(fp->flag & 0x02)) return FR_DENIED;
  7795  0007F6  EE20 F002          	lfsr	2,2
  7796  0007FA  51B4               	movf	f_write@fp& (0+255),w,b
  7797  0007FC  26D9               	addwf	fsr2l,f,c
  7798  0007FE  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7799  000800  22DA               	addwfc	fsr2h,f,c
  7800  000802  A2DF               	btfss	indf2,1,c
  7801  000804  0012               	return	
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;tff.c: 1010: if (fp->fsize + btw < fp->fsize) return FR_OK;
  7805  000806  EE20 F00A          	lfsr	2,10
  7806  00080A  51B4               	movf	f_write@fp& (0+255),w,b
  7807  00080C  26D9               	addwf	fsr2l,f,c
  7808  00080E  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7809  000810  22DA               	addwfc	fsr2h,f,c
  7810  000812  EE10 F00A          	lfsr	1,10
  7811  000816  51B4               	movf	f_write@fp& (0+255),w,b
  7812  000818  26E1               	addwf	fsr1l,f,c
  7813  00081A  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7814  00081C  22E2               	addwfc	fsr1h,f,c
  7815  00081E  CFE6 F0BE          	movff	postinc1,??_f_write+4
  7816  000822  CFE6 F0BF          	movff	postinc1,??_f_write+5
  7817  000826  CFE6 F0C0          	movff	postinc1,??_f_write+6
  7818  00082A  CFE6 F0C1          	movff	postinc1,??_f_write+7
  7819  00082E  51B7               	movf	f_write@btw& (0+255),w,b
  7820  000830  25BE               	addwf	(??_f_write+4)& (0+255),w,b
  7821  000832  6FC2               	movwf	(??_f_write+8)& (0+255),b
  7822  000834  51B8               	movf	(f_write@btw+1)& (0+255),w,b
  7823  000836  21BF               	addwfc	(??_f_write+5)& (0+255),w,b
  7824  000838  6FC3               	movwf	(??_f_write+9)& (0+255),b
  7825  00083A  0E00               	movlw	0
  7826  00083C  21C0               	addwfc	(??_f_write+6)& (0+255),w,b
  7827  00083E  6FC4               	movwf	(??_f_write+10)& (0+255),b
  7828  000840  0E00               	movlw	0
  7829  000842  21C1               	addwfc	(??_f_write+7)& (0+255),w,b
  7830  000844  6FC5               	movwf	(??_f_write+11)& (0+255),b
  7831  000846  50DE               	movf	postinc2,w,c
  7832  000848  5DC2               	subwf	(??_f_write+8)& (0+255),w,b
  7833  00084A  50DE               	movf	postinc2,w,c
  7834  00084C  59C3               	subwfb	(??_f_write+9)& (0+255),w,b
  7835  00084E  50DE               	movf	postinc2,w,c
  7836  000850  59C4               	subwfb	(??_f_write+10)& (0+255),w,b
  7837  000852  50DE               	movf	postinc2,w,c
  7838  000854  59C5               	subwfb	(??_f_write+11)& (0+255),w,b
  7839  000856  A0D8               	btfss	status,0,c
  7840  000858  0012               	return	
  7841  00085A  D228               	goto	l9993
  7842  00085C                     l9917:
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;tff.c: 1014: if ((fp->fptr % 512U) == 0) {
  7846  00085C  EE20 F006          	lfsr	2,6
  7847  000860  51B4               	movf	f_write@fp& (0+255),w,b
  7848  000862  26D9               	addwf	fsr2l,f,c
  7849  000864  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7850  000866  22DA               	addwfc	fsr2h,f,c
  7851  000868  0EFF               	movlw	255
  7852  00086A  14DE               	andwf	postinc2,w,c
  7853  00086C  6FBA               	movwf	??_f_write& (0+255),b
  7854  00086E  0E01               	movlw	1
  7855  000870  14DE               	andwf	postinc2,w,c
  7856  000872  6FBB               	movwf	(??_f_write+1)& (0+255),b
  7857  000874  0E00               	movlw	0
  7858  000876  14DE               	andwf	postinc2,w,c
  7859  000878  6FBC               	movwf	(??_f_write+2)& (0+255),b
  7860  00087A  0E00               	movlw	0
  7861  00087C  14DE               	andwf	postinc2,w,c
  7862  00087E  6FBD               	movwf	(??_f_write+3)& (0+255),b
  7863  000880  51BA               	movf	??_f_write& (0+255),w,b
  7864  000882  11BB               	iorwf	(??_f_write+1)& (0+255),w,b
  7865  000884  11BC               	iorwf	(??_f_write+2)& (0+255),w,b
  7866  000886  11BD               	iorwf	(??_f_write+3)& (0+255),w,b
  7867  000888  A4D8               	btfss	status,2,c
  7868  00088A  D15B               	goto	l9969
  7869                           
  7870                           ; BSR set to: 0
  7871                           ;tff.c: 1015: if (fp->csect >= fp->fs->csize) {
  7872  00088C  EE20 F004          	lfsr	2,4
  7873  000890  51B4               	movf	f_write@fp& (0+255),w,b
  7874  000892  26D9               	addwf	fsr2l,f,c
  7875  000894  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7876  000896  22DA               	addwfc	fsr2h,f,c
  7877  000898  EE10 F01D          	lfsr	1,29
  7878  00089C  50DE               	movf	postinc2,w,c
  7879  00089E  26E1               	addwf	fsr1l,f,c
  7880  0008A0  50DD               	movf	postdec2,w,c
  7881  0008A2  22E2               	addwfc	fsr1h,f,c
  7882  0008A4  EE20 F003          	lfsr	2,3
  7883  0008A8  51B4               	movf	f_write@fp& (0+255),w,b
  7884  0008AA  26D9               	addwf	fsr2l,f,c
  7885  0008AC  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7886  0008AE  22DA               	addwfc	fsr2h,f,c
  7887  0008B0  50E6               	movf	postinc1,w,c
  7888  0008B2  5CDE               	subwf	postinc2,w,c
  7889  0008B4  A0D8               	btfss	status,0,c
  7890  0008B6  D06B               	goto	l9941
  7891                           
  7892                           ; BSR set to: 0
  7893                           ;tff.c: 1016: if (fp->fptr == 0) {
  7894  0008B8  EE20 F006          	lfsr	2,6
  7895  0008BC  51B4               	movf	f_write@fp& (0+255),w,b
  7896  0008BE  26D9               	addwf	fsr2l,f,c
  7897  0008C0  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7898  0008C2  22DA               	addwfc	fsr2h,f,c
  7899  0008C4  50DE               	movf	postinc2,w,c
  7900  0008C6  10DE               	iorwf	postinc2,w,c
  7901  0008C8  10DE               	iorwf	postinc2,w,c
  7902  0008CA  10DE               	iorwf	postinc2,w,c
  7903  0008CC  A4D8               	btfss	status,2,c
  7904  0008CE  D023               	goto	l9929
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;tff.c: 1017: clust = fp->org_clust;
  7908  0008D0  EE20 F00E          	lfsr	2,14
  7909  0008D4  51B4               	movf	f_write@fp& (0+255),w,b
  7910  0008D6  26D9               	addwf	fsr2l,f,c
  7911  0008D8  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7912  0008DA  22DA               	addwfc	fsr2h,f,c
  7913  0008DC  CFDE F0CE          	movff	postinc2,f_write@clust
  7914  0008E0  CFDD F0CF          	movff	postdec2,f_write@clust+1
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;tff.c: 1018: if (clust == 0)
  7918  0008E4  51CE               	movf	f_write@clust& (0+255),w,b
  7919  0008E6  11CF               	iorwf	(f_write@clust+1)& (0+255),w,b
  7920  0008E8  A4D8               	btfss	status,2,c
  7921  0008EA  D025               	goto	l9931
  7922                           
  7923                           ; BSR set to: 0
  7924                           ;tff.c: 1019: fp->org_clust = clust = create_chain(0);
  7925  0008EC  0E00               	movlw	0
  7926  0008EE  6FA7               	movwf	(create_chain@clust+1)& (0+255),b
  7927  0008F0  0E00               	movlw	0
  7928  0008F2  6FA6               	movwf	create_chain@clust& (0+255),b
  7929  0008F4  EC56  F019         	call	_create_chain	;wreg free
  7930  0008F8  C0A6  F0CE         	movff	?_create_chain,f_write@clust
  7931  0008FC  C0A7  F0CF         	movff	?_create_chain+1,f_write@clust+1
  7932  000900  EE20 F00E          	lfsr	2,14
  7933  000904  51B4               	movf	f_write@fp& (0+255),w,b
  7934  000906  26D9               	addwf	fsr2l,f,c
  7935  000908  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7936  00090A  22DA               	addwfc	fsr2h,f,c
  7937  00090C  C0CE  FFDE         	movff	f_write@clust,postinc2
  7938  000910  C0CF  FFDD         	movff	f_write@clust+1,postdec2
  7939  000914  D010               	goto	l9931
  7940  000916                     l9929:
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;tff.c: 1021: clust = create_chain(fp->curr_clust);
  7944  000916  EE20 F010          	lfsr	2,16
  7945  00091A  51B4               	movf	f_write@fp& (0+255),w,b
  7946  00091C  26D9               	addwf	fsr2l,f,c
  7947  00091E  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7948  000920  22DA               	addwfc	fsr2h,f,c
  7949  000922  CFDE F0A6          	movff	postinc2,create_chain@clust
  7950  000926  CFDD F0A7          	movff	postdec2,create_chain@clust+1
  7951  00092A  EC56  F019         	call	_create_chain	;wreg free
  7952  00092E  C0A6  F0CE         	movff	?_create_chain,f_write@clust
  7953  000932  C0A7  F0CF         	movff	?_create_chain+1,f_write@clust+1
  7954  000936                     l9931:
  7955                           
  7956                           ; BSR set to: 0
  7957                           ;tff.c: 1022: };tff.c: 1023: if (clust == 0) break;
  7958  000936  51CE               	movf	f_write@clust& (0+255),w,b
  7959  000938  11CF               	iorwf	(f_write@clust+1)& (0+255),w,b
  7960  00093A  B4D8               	btfsc	status,2,c
  7961  00093C  D1BB               	goto	u12050
  7962                           
  7963                           ; BSR set to: 0
  7964                           ;tff.c: 1024: if (clust == 1 || clust >= fp->fs->max_clust) goto fw_error;
  7965  00093E  05CE               	decf	f_write@clust& (0+255),w,b
  7966  000940  11CF               	iorwf	(f_write@clust+1)& (0+255),w,b
  7967  000942  B4D8               	btfsc	status,2,c
  7968  000944  D1EA               	goto	l10003
  7969                           
  7970                           ; BSR set to: 0
  7971  000946  EE20 F004          	lfsr	2,4
  7972  00094A  51B4               	movf	f_write@fp& (0+255),w,b
  7973  00094C  26D9               	addwf	fsr2l,f,c
  7974  00094E  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7975  000950  22DA               	addwfc	fsr2h,f,c
  7976  000952  EE10 F016          	lfsr	1,22
  7977  000956  50DE               	movf	postinc2,w,c
  7978  000958  26E1               	addwf	fsr1l,f,c
  7979  00095A  50DD               	movf	postdec2,w,c
  7980  00095C  22E2               	addwfc	fsr1h,f,c
  7981  00095E  50E6               	movf	postinc1,w,c
  7982  000960  5DCE               	subwf	f_write@clust& (0+255),w,b
  7983  000962  50E6               	movf	postinc1,w,c
  7984  000964  59CF               	subwfb	(f_write@clust+1)& (0+255),w,b
  7985  000966  B0D8               	btfsc	status,0,c
  7986  000968  D1D8               	goto	l10003
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;tff.c: 1025: fp->curr_clust = clust;
  7990  00096A  EE20 F010          	lfsr	2,16
  7991  00096E  51B4               	movf	f_write@fp& (0+255),w,b
  7992  000970  26D9               	addwf	fsr2l,f,c
  7993  000972  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7994  000974  22DA               	addwfc	fsr2h,f,c
  7995  000976  C0CE  FFDE         	movff	f_write@clust,postinc2
  7996  00097A  C0CF  FFDD         	movff	f_write@clust+1,postdec2
  7997                           
  7998                           ;tff.c: 1026: fp->csect = 0;
  7999  00097E  EE20 F003          	lfsr	2,3
  8000  000982  51B4               	movf	f_write@fp& (0+255),w,b
  8001  000984  26D9               	addwf	fsr2l,f,c
  8002  000986  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8003  000988  22DA               	addwfc	fsr2h,f,c
  8004  00098A  0E00               	movlw	0
  8005  00098C  6EDF               	movwf	indf2,c
  8006  00098E                     l9941:
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;tff.c: 1027: };tff.c: 1028: sect = clust2sect(fp->curr_clust) + fp->csect;
  8010  00098E  EE20 F010          	lfsr	2,16
  8011  000992  51B4               	movf	f_write@fp& (0+255),w,b
  8012  000994  26D9               	addwf	fsr2l,f,c
  8013  000996  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8014  000998  22DA               	addwfc	fsr2h,f,c
  8015  00099A  CFDE F027          	movff	postinc2,clust2sect@clust
  8016  00099E  CFDD F028          	movff	postdec2,clust2sect@clust+1
  8017  0009A2  ECEE  F01F         	call	_clust2sect	;wreg free
  8018  0009A6  EE20 F003          	lfsr	2,3
  8019  0009AA  51B4               	movf	f_write@fp& (0+255),w,b
  8020  0009AC  26D9               	addwf	fsr2l,f,c
  8021  0009AE  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8022  0009B0  22DA               	addwfc	fsr2h,f,c
  8023  0009B2  50DF               	movf	indf2,w,c
  8024  0009B4  6FBA               	movwf	??_f_write& (0+255),b
  8025  0009B6  51BA               	movf	??_f_write& (0+255),w,b
  8026  0009B8  2427               	addwf	?_clust2sect^0,w,c
  8027  0009BA  6FC8               	movwf	f_write@sect& (0+255),b
  8028  0009BC  0E00               	movlw	0
  8029  0009BE  2028               	addwfc	(?_clust2sect+1)^0,w,c
  8030  0009C0  6FC9               	movwf	(f_write@sect+1)& (0+255),b
  8031  0009C2  0E00               	movlw	0
  8032  0009C4  2029               	addwfc	(?_clust2sect+2)^0,w,c
  8033  0009C6  6FCA               	movwf	(f_write@sect+2)& (0+255),b
  8034  0009C8  0E00               	movlw	0
  8035  0009CA  202A               	addwfc	(?_clust2sect+3)^0,w,c
  8036  0009CC  6FCB               	movwf	(f_write@sect+3)& (0+255),b
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;tff.c: 1029: cc = btw / 512U;
  8040  0009CE  C0B7  F0BA         	movff	f_write@btw,??_f_write
  8041  0009D2  C0B8  F0BB         	movff	f_write@btw+1,??_f_write+1
  8042  0009D6  0E09               	movlw	9
  8043  0009D8  6FBC               	movwf	(??_f_write+2)& (0+255),b
  8044  0009DA                     u11965:
  8045  0009DA  90D8               	bcf	status,0,c
  8046  0009DC  33BB               	rrcf	(??_f_write+1)& (0+255),f,b
  8047  0009DE  33BA               	rrcf	??_f_write& (0+255),f,b
  8048  0009E0  2FBC               	decfsz	(??_f_write+2)& (0+255),f,b
  8049  0009E2  D7FB               	goto	u11965
  8050  0009E4  C0BA  F0CC         	movff	??_f_write,f_write@cc
  8051  0009E8  C0BB  F0CD         	movff	??_f_write+1,f_write@cc+1
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;tff.c: 1030: if (cc) {
  8055  0009EC  51CC               	movf	f_write@cc& (0+255),w,b
  8056  0009EE  11CD               	iorwf	(f_write@cc+1)& (0+255),w,b
  8057  0009F0  B4D8               	btfsc	status,2,c
  8058  0009F2  D069               	goto	l9959
  8059                           
  8060                           ; BSR set to: 0
  8061                           ;tff.c: 1031: if (fp->csect + cc > fp->fs->csize)
  8062  0009F4  EE20 F003          	lfsr	2,3
  8063  0009F8  51B4               	movf	f_write@fp& (0+255),w,b
  8064  0009FA  26D9               	addwf	fsr2l,f,c
  8065  0009FC  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8066  0009FE  22DA               	addwfc	fsr2h,f,c
  8067  000A00  50DF               	movf	indf2,w,c
  8068  000A02  6FBA               	movwf	??_f_write& (0+255),b
  8069  000A04  51BA               	movf	??_f_write& (0+255),w,b
  8070  000A06  25CC               	addwf	f_write@cc& (0+255),w,b
  8071  000A08  6FBB               	movwf	(??_f_write+1)& (0+255),b
  8072  000A0A  0E00               	movlw	0
  8073  000A0C  21CD               	addwfc	(f_write@cc+1)& (0+255),w,b
  8074  000A0E  6FBC               	movwf	(??_f_write+2)& (0+255),b
  8075  000A10  EE20 F004          	lfsr	2,4
  8076  000A14  51B4               	movf	f_write@fp& (0+255),w,b
  8077  000A16  26D9               	addwf	fsr2l,f,c
  8078  000A18  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8079  000A1A  22DA               	addwfc	fsr2h,f,c
  8080  000A1C  EE10 F01D          	lfsr	1,29
  8081  000A20  50DE               	movf	postinc2,w,c
  8082  000A22  26E1               	addwf	fsr1l,f,c
  8083  000A24  50DD               	movf	postdec2,w,c
  8084  000A26  22E2               	addwfc	fsr1h,f,c
  8085  000A28  50E7               	movf	indf1,w,c
  8086  000A2A  6FBD               	movwf	(??_f_write+3)& (0+255),b
  8087  000A2C  6BBE               	clrf	(??_f_write+4)& (0+255),b
  8088  000A2E  51BB               	movf	(??_f_write+1)& (0+255),w,b
  8089  000A30  5DBD               	subwf	(??_f_write+3)& (0+255),w,b
  8090  000A32  51BC               	movf	(??_f_write+2)& (0+255),w,b
  8091  000A34  59BE               	subwfb	(??_f_write+4)& (0+255),w,b
  8092  000A36  B0D8               	btfsc	status,0,c
  8093  000A38  D01C               	goto	l9951
  8094                           
  8095                           ; BSR set to: 0
  8096                           ;tff.c: 1032: cc = fp->fs->csize - fp->csect;
  8097  000A3A  EE20 F004          	lfsr	2,4
  8098  000A3E  51B4               	movf	f_write@fp& (0+255),w,b
  8099  000A40  26D9               	addwf	fsr2l,f,c
  8100  000A42  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8101  000A44  22DA               	addwfc	fsr2h,f,c
  8102  000A46  EE10 F01D          	lfsr	1,29
  8103  000A4A  50DE               	movf	postinc2,w,c
  8104  000A4C  26E1               	addwf	fsr1l,f,c
  8105  000A4E  50DD               	movf	postdec2,w,c
  8106  000A50  22E2               	addwfc	fsr1h,f,c
  8107  000A52  50E7               	movf	indf1,w,c
  8108  000A54  6FBA               	movwf	??_f_write& (0+255),b
  8109  000A56  EE20 F003          	lfsr	2,3
  8110  000A5A  51B4               	movf	f_write@fp& (0+255),w,b
  8111  000A5C  26D9               	addwf	fsr2l,f,c
  8112  000A5E  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8113  000A60  22DA               	addwfc	fsr2h,f,c
  8114  000A62  50DF               	movf	indf2,w,c
  8115  000A64  6FBB               	movwf	(??_f_write+1)& (0+255),b
  8116  000A66  51BB               	movf	(??_f_write+1)& (0+255),w,b
  8117  000A68  5DBA               	subwf	??_f_write& (0+255),w,b
  8118  000A6A  6FCC               	movwf	f_write@cc& (0+255),b
  8119  000A6C  6BCD               	clrf	(f_write@cc+1)& (0+255),b
  8120  000A6E  A0D8               	btfss	status,0,c
  8121  000A70  07CD               	decf	(f_write@cc+1)& (0+255),f,b
  8122  000A72                     l9951:
  8123                           
  8124                           ; BSR set to: 0
  8125                           ;tff.c: 1033: if (disk_write(0, wbuff, sect, (BYTE)cc) != RES_OK)
  8126  000A72  C0C7  F06D         	movff	f_write@wbuff,disk_write@buff
  8127  000A76  6B6E               	clrf	(disk_write@buff+1)& (0+255),b
  8128  000A78  C0C8  F06F         	movff	f_write@sect,disk_write@sector
  8129  000A7C  C0C9  F070         	movff	f_write@sect+1,disk_write@sector+1
  8130  000A80  C0CA  F071         	movff	f_write@sect+2,disk_write@sector+2
  8131  000A84  C0CB  F072         	movff	f_write@sect+3,disk_write@sector+3
  8132  000A88  C0CC  F073         	movff	f_write@cc,disk_write@count
  8133  000A8C  0E00               	movlw	0
  8134  000A8E  ECF2  F025         	call	_disk_write
  8135  000A92  0900               	iorlw	0
  8136  000A94  A4D8               	btfss	status,2,c
  8137  000A96  D141               	goto	l10003
  8138                           
  8139                           ; BSR set to: 0
  8140                           ;tff.c: 1035: fp->csect += (BYTE)cc;
  8141  000A98  EE20 F003          	lfsr	2,3
  8142  000A9C  51B4               	movf	f_write@fp& (0+255),w,b
  8143  000A9E  26D9               	addwf	fsr2l,f,c
  8144  000AA0  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8145  000AA2  22DA               	addwfc	fsr2h,f,c
  8146  000AA4  51CC               	movf	f_write@cc& (0+255),w,b
  8147  000AA6  26DF               	addwf	indf2,f,c
  8148                           
  8149                           ; BSR set to: 0
  8150                           ;tff.c: 1036: wcnt = 512U * cc;
  8151  000AA8  C0CC  F0BA         	movff	f_write@cc,??_f_write
  8152  000AAC  C0CD  F0BB         	movff	f_write@cc+1,??_f_write+1
  8153  000AB0  0E09               	movlw	9
  8154  000AB2                     u12005:
  8155  000AB2  90D8               	bcf	status,0,c
  8156  000AB4  37BA               	rlcf	??_f_write& (0+255),f,b
  8157  000AB6  37BB               	rlcf	(??_f_write+1)& (0+255),f,b
  8158  000AB8  2EE8               	decfsz	wreg,f,c
  8159  000ABA  D7FB               	goto	u12005
  8160  000ABC  C0BA  F0D0         	movff	??_f_write,f_write@wcnt
  8161  000AC0  C0BB  F0D1         	movff	??_f_write+1,f_write@wcnt+1
  8162                           
  8163                           ;tff.c: 1037: continue;
  8164  000AC4  D0D9               	goto	l9985
  8165  000AC6                     l9959:
  8166                           
  8167                           ; BSR set to: 0
  8168                           ;tff.c: 1038: };tff.c: 1039: if (fp->fptr >= fp->fsize) {
  8169  000AC6  EE20 F00A          	lfsr	2,10
  8170  000ACA  51B4               	movf	f_write@fp& (0+255),w,b
  8171  000ACC  26D9               	addwf	fsr2l,f,c
  8172  000ACE  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8173  000AD0  22DA               	addwfc	fsr2h,f,c
  8174  000AD2  EE10 F006          	lfsr	1,6
  8175  000AD6  51B4               	movf	f_write@fp& (0+255),w,b
  8176  000AD8  26E1               	addwf	fsr1l,f,c
  8177  000ADA  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8178  000ADC  22E2               	addwfc	fsr1h,f,c
  8179  000ADE  50DE               	movf	postinc2,w,c
  8180  000AE0  5CE6               	subwf	postinc1,w,c
  8181  000AE2  50DE               	movf	postinc2,w,c
  8182  000AE4  58E6               	subwfb	postinc1,w,c
  8183  000AE6  50DE               	movf	postinc2,w,c
  8184  000AE8  58E6               	subwfb	postinc1,w,c
  8185  000AEA  50DE               	movf	postinc2,w,c
  8186  000AEC  58E6               	subwfb	postinc1,w,c
  8187  000AEE  A0D8               	btfss	status,0,c
  8188  000AF0  D021               	goto	l9967
  8189                           
  8190                           ; BSR set to: 0
  8191                           ;tff.c: 1040: if (!move_window(0)) goto fw_error;
  8192  000AF2  0E00               	movlw	0
  8193  000AF4  6F79               	movwf	move_window@sector& (0+255),b
  8194  000AF6  0E00               	movlw	0
  8195  000AF8  6F7A               	movwf	(move_window@sector+1)& (0+255),b
  8196  000AFA  0E00               	movlw	0
  8197  000AFC  6F7B               	movwf	(move_window@sector+2)& (0+255),b
  8198  000AFE  0E00               	movlw	0
  8199  000B00  6F7C               	movwf	(move_window@sector+3)& (0+255),b
  8200  000B02  EC81  F018         	call	_move_window	;wreg free
  8201  000B06  0900               	iorlw	0
  8202  000B08  B4D8               	btfsc	status,2,c
  8203  000B0A  D107               	goto	l10003
  8204                           
  8205                           ; BSR set to: 0
  8206                           ;tff.c: 1041: fp->fs->winsect = sect;
  8207  000B0C  EE20 F004          	lfsr	2,4
  8208  000B10  51B4               	movf	f_write@fp& (0+255),w,b
  8209  000B12  26D9               	addwf	fsr2l,f,c
  8210  000B14  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8211  000B16  22DA               	addwfc	fsr2h,f,c
  8212  000B18  EE10 F004          	lfsr	1,4
  8213  000B1C  50DE               	movf	postinc2,w,c
  8214  000B1E  26E1               	addwf	fsr1l,f,c
  8215  000B20  50DD               	movf	postdec2,w,c
  8216  000B22  22E2               	addwfc	fsr1h,f,c
  8217  000B24  C0C8  FFE6         	movff	f_write@sect,postinc1
  8218  000B28  C0C9  FFE6         	movff	f_write@sect+1,postinc1
  8219  000B2C  C0CA  FFE6         	movff	f_write@sect+2,postinc1
  8220  000B30  C0CB  FFE6         	movff	f_write@sect+3,postinc1
  8221  000B34                     l9967:
  8222                           
  8223                           ; BSR set to: 0
  8224                           ;tff.c: 1042: };tff.c: 1043: fp->csect++;
  8225  000B34  EE20 F003          	lfsr	2,3
  8226  000B38  51B4               	movf	f_write@fp& (0+255),w,b
  8227  000B3A  26D9               	addwf	fsr2l,f,c
  8228  000B3C  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8229  000B3E  22DA               	addwfc	fsr2h,f,c
  8230  000B40  2ADF               	incf	indf2,f,c
  8231  000B42                     l9969:
  8232                           
  8233                           ; BSR set to: 0
  8234                           ;tff.c: 1044: };tff.c: 1045: sect = clust2sect(fp->curr_clust) + fp->csect - 1;
  8235  000B42  EE20 F010          	lfsr	2,16
  8236  000B46  51B4               	movf	f_write@fp& (0+255),w,b
  8237  000B48  26D9               	addwf	fsr2l,f,c
  8238  000B4A  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8239  000B4C  22DA               	addwfc	fsr2h,f,c
  8240  000B4E  CFDE F027          	movff	postinc2,clust2sect@clust
  8241  000B52  CFDD F028          	movff	postdec2,clust2sect@clust+1
  8242  000B56  ECEE  F01F         	call	_clust2sect	;wreg free
  8243  000B5A  EE20 F003          	lfsr	2,3
  8244  000B5E  51B4               	movf	f_write@fp& (0+255),w,b
  8245  000B60  26D9               	addwf	fsr2l,f,c
  8246  000B62  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8247  000B64  22DA               	addwfc	fsr2h,f,c
  8248  000B66  50DF               	movf	indf2,w,c
  8249  000B68  6FBA               	movwf	??_f_write& (0+255),b
  8250  000B6A  51BA               	movf	??_f_write& (0+255),w,b
  8251  000B6C  2427               	addwf	?_clust2sect^0,w,c
  8252  000B6E  6FBB               	movwf	(??_f_write+1)& (0+255),b
  8253  000B70  0E00               	movlw	0
  8254  000B72  2028               	addwfc	(?_clust2sect+1)^0,w,c
  8255  000B74  6FBC               	movwf	(??_f_write+2)& (0+255),b
  8256  000B76  0E00               	movlw	0
  8257  000B78  2029               	addwfc	(?_clust2sect+2)^0,w,c
  8258  000B7A  6FBD               	movwf	(??_f_write+3)& (0+255),b
  8259  000B7C  0E00               	movlw	0
  8260  000B7E  202A               	addwfc	(?_clust2sect+3)^0,w,c
  8261  000B80  6FBE               	movwf	(??_f_write+4)& (0+255),b
  8262  000B82  0EFF               	movlw	255
  8263  000B84  25BB               	addwf	(??_f_write+1)& (0+255),w,b
  8264  000B86  6FC8               	movwf	f_write@sect& (0+255),b
  8265  000B88  0EFF               	movlw	255
  8266  000B8A  21BC               	addwfc	(??_f_write+2)& (0+255),w,b
  8267  000B8C  6FC9               	movwf	(f_write@sect+1)& (0+255),b
  8268  000B8E  0EFF               	movlw	255
  8269  000B90  21BD               	addwfc	(??_f_write+3)& (0+255),w,b
  8270  000B92  6FCA               	movwf	(f_write@sect+2)& (0+255),b
  8271  000B94  0EFF               	movlw	255
  8272  000B96  21BE               	addwfc	(??_f_write+4)& (0+255),w,b
  8273  000B98  6FCB               	movwf	(f_write@sect+3)& (0+255),b
  8274                           
  8275                           ; BSR set to: 0
  8276                           ;tff.c: 1046: if (!move_window(sect)) goto fw_error;
  8277  000B9A  C0C8  F079         	movff	f_write@sect,move_window@sector
  8278  000B9E  C0C9  F07A         	movff	f_write@sect+1,move_window@sector+1
  8279  000BA2  C0CA  F07B         	movff	f_write@sect+2,move_window@sector+2
  8280  000BA6  C0CB  F07C         	movff	f_write@sect+3,move_window@sector+3
  8281  000BAA  EC81  F018         	call	_move_window	;wreg free
  8282  000BAE  0900               	iorlw	0
  8283  000BB0  B4D8               	btfsc	status,2,c
  8284  000BB2  D0B3               	goto	l10003
  8285                           
  8286                           ; BSR set to: 0
  8287                           ;tff.c: 1047: wcnt = 512U - (fp->fptr % 512U);
  8288  000BB4  0EFF               	movlw	255
  8289  000BB6  6FBA               	movwf	??_f_write& (0+255),b
  8290  000BB8  0E01               	movlw	1
  8291  000BBA  6FBB               	movwf	(??_f_write+1)& (0+255),b
  8292  000BBC  EE20 F006          	lfsr	2,6
  8293  000BC0  51B4               	movf	f_write@fp& (0+255),w,b
  8294  000BC2  26D9               	addwf	fsr2l,f,c
  8295  000BC4  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8296  000BC6  22DA               	addwfc	fsr2h,f,c
  8297  000BC8  CFDE F0BC          	movff	postinc2,??_f_write+2
  8298  000BCC  CFDD F0BD          	movff	postdec2,??_f_write+3
  8299  000BD0  51BA               	movf	??_f_write& (0+255),w,b
  8300  000BD2  17BC               	andwf	(??_f_write+2)& (0+255),f,b
  8301  000BD4  51BB               	movf	(??_f_write+1)& (0+255),w,b
  8302  000BD6  17BD               	andwf	(??_f_write+3)& (0+255),f,b
  8303  000BD8  51BC               	movf	(??_f_write+2)& (0+255),w,b
  8304  000BDA  0800               	sublw	0
  8305  000BDC  6FD0               	movwf	f_write@wcnt& (0+255),b
  8306  000BDE  51BD               	movf	(??_f_write+3)& (0+255),w,b
  8307  000BE0  A0D8               	btfss	status,0,c
  8308  000BE2  2AE8               	incf	wreg,f,c
  8309  000BE4  0802               	sublw	2
  8310  000BE6  6FD1               	movwf	(f_write@wcnt+1)& (0+255),b
  8311                           
  8312                           ; BSR set to: 0
  8313                           ;tff.c: 1048: if (wcnt > btw) wcnt = btw;
  8314  000BE8  51D0               	movf	f_write@wcnt& (0+255),w,b
  8315  000BEA  5DB7               	subwf	f_write@btw& (0+255),w,b
  8316  000BEC  51D1               	movf	(f_write@wcnt+1)& (0+255),w,b
  8317  000BEE  59B8               	subwfb	(f_write@btw+1)& (0+255),w,b
  8318  000BF0  B0D8               	btfsc	status,0,c
  8319  000BF2  D004               	goto	l9981
  8320                           
  8321                           ; BSR set to: 0
  8322  000BF4  C0B7  F0D0         	movff	f_write@btw,f_write@wcnt
  8323  000BF8  C0B8  F0D1         	movff	f_write@btw+1,f_write@wcnt+1
  8324  000BFC                     l9981:
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;tff.c: 1049: memcpy(&fp->fs->win[fp->fptr % 512U], wbuff, wcnt);
  8328  000BFC  0EFF               	movlw	255
  8329  000BFE  6FBA               	movwf	??_f_write& (0+255),b
  8330  000C00  0E01               	movlw	1
  8331  000C02  6FBB               	movwf	(??_f_write+1)& (0+255),b
  8332  000C04  EE20 F006          	lfsr	2,6
  8333  000C08  51B4               	movf	f_write@fp& (0+255),w,b
  8334  000C0A  26D9               	addwf	fsr2l,f,c
  8335  000C0C  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8336  000C0E  22DA               	addwfc	fsr2h,f,c
  8337  000C10  CFDE F0BC          	movff	postinc2,??_f_write+2
  8338  000C14  CFDD F0BD          	movff	postdec2,??_f_write+3
  8339  000C18  51BA               	movf	??_f_write& (0+255),w,b
  8340  000C1A  17BC               	andwf	(??_f_write+2)& (0+255),f,b
  8341  000C1C  51BB               	movf	(??_f_write+1)& (0+255),w,b
  8342  000C1E  17BD               	andwf	(??_f_write+3)& (0+255),f,b
  8343  000C20  EE20 F004          	lfsr	2,4
  8344  000C24  51B4               	movf	f_write@fp& (0+255),w,b
  8345  000C26  26D9               	addwf	fsr2l,f,c
  8346  000C28  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8347  000C2A  22DA               	addwfc	fsr2h,f,c
  8348  000C2C  CFDE F0BE          	movff	postinc2,??_f_write+4
  8349  000C30  CFDD F0BF          	movff	postdec2,??_f_write+5
  8350  000C34  51BC               	movf	(??_f_write+2)& (0+255),w,b
  8351  000C36  27BE               	addwf	(??_f_write+4)& (0+255),f,b
  8352  000C38  51BD               	movf	(??_f_write+3)& (0+255),w,b
  8353  000C3A  23BF               	addwfc	(??_f_write+5)& (0+255),f,b
  8354  000C3C  0E20               	movlw	32
  8355  000C3E  25BE               	addwf	(??_f_write+4)& (0+255),w,b
  8356  000C40  6E1B               	movwf	memcpy@d1^0,c
  8357  000C42  0E00               	movlw	0
  8358  000C44  21BF               	addwfc	(??_f_write+5)& (0+255),w,b
  8359  000C46  6E1C               	movwf	(memcpy@d1+1)^0,c
  8360  000C48  C0C7  F01D         	movff	f_write@wbuff,memcpy@s1
  8361  000C4C  6A1E               	clrf	(memcpy@s1+1)^0,c
  8362  000C4E  C0D0  F01F         	movff	f_write@wcnt,memcpy@n
  8363  000C52  C0D1  F020         	movff	f_write@wcnt+1,memcpy@n+1
  8364  000C56  ECAA  F026         	call	_memcpy	;wreg free
  8365                           
  8366                           ;tff.c: 1050: fp->fs->winflag = 1;
  8367  000C5A  0100               	movlb	0	; () banked
  8368  000C5C  EE20 F004          	lfsr	2,4
  8369  000C60  51B4               	movf	f_write@fp& (0+255),w,b
  8370  000C62  26D9               	addwf	fsr2l,f,c
  8371  000C64  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8372  000C66  22DA               	addwfc	fsr2h,f,c
  8373  000C68  EE10 F01F          	lfsr	1,31
  8374  000C6C  50DE               	movf	postinc2,w,c
  8375  000C6E  26E1               	addwf	fsr1l,f,c
  8376  000C70  50DD               	movf	postdec2,w,c
  8377  000C72  22E2               	addwfc	fsr1h,f,c
  8378  000C74  0E01               	movlw	1
  8379  000C76  6EE7               	movwf	indf1,c
  8380  000C78                     l9985:
  8381                           
  8382                           ; BSR set to: 0
  8383  000C78  51D0               	movf	f_write@wcnt& (0+255),w,b
  8384  000C7A  27C7               	addwf	f_write@wbuff& (0+255),f,b
  8385                           
  8386                           ; BSR set to: 0
  8387  000C7C  EE20 F006          	lfsr	2,6
  8388  000C80  51B4               	movf	f_write@fp& (0+255),w,b
  8389  000C82  26D9               	addwf	fsr2l,f,c
  8390  000C84  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8391  000C86  22DA               	addwfc	fsr2h,f,c
  8392  000C88  51D0               	movf	f_write@wcnt& (0+255),w,b
  8393  000C8A  26DE               	addwf	postinc2,f,c
  8394  000C8C  51D1               	movf	(f_write@wcnt+1)& (0+255),w,b
  8395  000C8E  22DE               	addwfc	postinc2,f,c
  8396  000C90  0E00               	movlw	0
  8397  000C92  22DE               	addwfc	postinc2,f,c
  8398  000C94  22DE               	addwfc	postinc2,f,c
  8399                           
  8400                           ; BSR set to: 0
  8401  000C96  51B9               	movf	f_write@bw& (0+255),w,b
  8402  000C98  6ED9               	movwf	fsr2l,c
  8403  000C9A  6ADA               	clrf	fsr2h,c
  8404  000C9C  51D0               	movf	f_write@wcnt& (0+255),w,b
  8405  000C9E  26DE               	addwf	postinc2,f,c
  8406  000CA0  51D1               	movf	(f_write@wcnt+1)& (0+255),w,b
  8407  000CA2  22DD               	addwfc	postdec2,f,c
  8408                           
  8409                           ; BSR set to: 0
  8410  000CA4  51D0               	movf	f_write@wcnt& (0+255),w,b
  8411  000CA6  5FB7               	subwf	f_write@btw& (0+255),f,b
  8412  000CA8  51D1               	movf	(f_write@wcnt+1)& (0+255),w,b
  8413  000CAA  5BB8               	subwfb	(f_write@btw+1)& (0+255),f,b
  8414  000CAC                     l9993:
  8415                           
  8416                           ; BSR set to: 0
  8417  000CAC  51B7               	movf	f_write@btw& (0+255),w,b
  8418  000CAE  11B8               	iorwf	(f_write@btw+1)& (0+255),w,b
  8419  000CB0  A4D8               	btfss	status,2,c
  8420  000CB2  D5D4               	goto	l9917
  8421  000CB4                     u12050:
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;tff.c: 1051: };tff.c: 1053: if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;
  8425  000CB4  EE20 F006          	lfsr	2,6
  8426  000CB8  51B4               	movf	f_write@fp& (0+255),w,b
  8427  000CBA  26D9               	addwf	fsr2l,f,c
  8428  000CBC  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8429  000CBE  22DA               	addwfc	fsr2h,f,c
  8430  000CC0  EE10 F00A          	lfsr	1,10
  8431  000CC4  51B4               	movf	f_write@fp& (0+255),w,b
  8432  000CC6  26E1               	addwf	fsr1l,f,c
  8433  000CC8  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8434  000CCA  22E2               	addwfc	fsr1h,f,c
  8435  000CCC  50DE               	movf	postinc2,w,c
  8436  000CCE  5CE6               	subwf	postinc1,w,c
  8437  000CD0  50DE               	movf	postinc2,w,c
  8438  000CD2  58E6               	subwfb	postinc1,w,c
  8439  000CD4  50DE               	movf	postinc2,w,c
  8440  000CD6  58E6               	subwfb	postinc1,w,c
  8441  000CD8  50DE               	movf	postinc2,w,c
  8442  000CDA  58E6               	subwfb	postinc1,w,c
  8443  000CDC  B0D8               	btfsc	status,0,c
  8444  000CDE  D014               	goto	l9999
  8445                           
  8446                           ; BSR set to: 0
  8447  000CE0  EE20 F006          	lfsr	2,6
  8448  000CE4  51B4               	movf	f_write@fp& (0+255),w,b
  8449  000CE6  26D9               	addwf	fsr2l,f,c
  8450  000CE8  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8451  000CEA  22DA               	addwfc	fsr2h,f,c
  8452  000CEC  EE10 F00A          	lfsr	1,10
  8453  000CF0  51B4               	movf	f_write@fp& (0+255),w,b
  8454  000CF2  26E1               	addwf	fsr1l,f,c
  8455  000CF4  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8456  000CF6  22E2               	addwfc	fsr1h,f,c
  8457  000CF8  CFDE FFE6          	movff	postinc2,postinc1
  8458  000CFC  CFDE FFE6          	movff	postinc2,postinc1
  8459  000D00  CFDE FFE6          	movff	postinc2,postinc1
  8460  000D04  CFDE FFE6          	movff	postinc2,postinc1
  8461  000D08                     l9999:
  8462                           
  8463                           ; BSR set to: 0
  8464                           ;tff.c: 1054: fp->flag |= 0x20;
  8465  000D08  EE20 F002          	lfsr	2,2
  8466  000D0C  51B4               	movf	f_write@fp& (0+255),w,b
  8467  000D0E  26D9               	addwf	fsr2l,f,c
  8468  000D10  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8469  000D12  22DA               	addwfc	fsr2h,f,c
  8470  000D14  0E00               	movlw	0
  8471  000D16  8ADB               	bsf	plusw2,5,c
  8472  000D18  0012               	return	
  8473  000D1A                     l10003:
  8474                           
  8475                           ; BSR set to: 0
  8476                           ;tff.c: 1058: fp->flag |= 0x80;
  8477  000D1A  EE20 F002          	lfsr	2,2
  8478  000D1E  51B4               	movf	f_write@fp& (0+255),w,b
  8479  000D20  26D9               	addwf	fsr2l,f,c
  8480  000D22  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  8481  000D24  22DA               	addwfc	fsr2h,f,c
  8482  000D26  0E00               	movlw	0
  8483  000D28  8EDB               	bsf	plusw2,7,c
  8484                           
  8485                           ; BSR set to: 0
  8486  000D2A  0012               	return		;funcret
  8487  000D2C                     __end_of_f_write:
  8488                           	callstack 0
  8489                           
  8490 ;; *************** function ___llmod *****************
  8491 ;; Defined at:
  8492 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;  dividend        4   26[COMRAM] unsigned long 
  8495 ;;  divisor         4   30[COMRAM] unsigned long 
  8496 ;; Auto vars:     Size  Location     Type
  8497 ;;  counter         1   34[COMRAM] unsigned char 
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  4   26[COMRAM] unsigned long 
  8500 ;; Registers used:
  8501 ;;		wreg, status,2, status,0
  8502 ;; Tracked objects:
  8503 ;;		On entry : 3F/3
  8504 ;;		On exit  : 3F/3
  8505 ;;		Unchanged: 3E/0
  8506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8507 ;;      Params:         8       0       0       0       0       0       0       0       0
  8508 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8510 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8511 ;;Total ram usage:        9 bytes
  8512 ;; Hardware stack levels used: 1
  8513 ;; Hardware stack levels required when called: 3
  8514 ;; This function calls:
  8515 ;;		Nothing
  8516 ;; This function is called by:
  8517 ;;		_fprintf
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           	psect	text35
  8522  00497A                     __ptext35:
  8523                           	callstack 0
  8524  00497A                     ___llmod:
  8525                           	callstack 23
  8526                           
  8527                           ; BSR set to: 3
  8528                           
  8529                           ; BSR set to: 0
  8530                           ;incstack = 0
  8531  00497A  501F               	movf	___llmod@divisor^0,w,c
  8532  00497C  1020               	iorwf	(___llmod@divisor+1)^0,w,c
  8533  00497E  1021               	iorwf	(___llmod@divisor+2)^0,w,c
  8534  004980  1022               	iorwf	(___llmod@divisor+3)^0,w,c
  8535  004982  B4D8               	btfsc	status,2,c
  8536  004984  D024               	goto	l1933
  8537                           
  8538                           ; BSR set to: 3
  8539  004986  0E01               	movlw	1
  8540  004988  6E23               	movwf	___llmod@counter^0,c
  8541  00498A  D006               	goto	l10669
  8542  00498C                     l10667:
  8543                           
  8544                           ; BSR set to: 3
  8545  00498C  90D8               	bcf	status,0,c
  8546  00498E  361F               	rlcf	___llmod@divisor^0,f,c
  8547  004990  3620               	rlcf	(___llmod@divisor+1)^0,f,c
  8548  004992  3621               	rlcf	(___llmod@divisor+2)^0,f,c
  8549  004994  3622               	rlcf	(___llmod@divisor+3)^0,f,c
  8550  004996  2A23               	incf	___llmod@counter^0,f,c
  8551  004998                     l10669:
  8552                           
  8553                           ; BSR set to: 3
  8554  004998  AE22               	btfss	(___llmod@divisor+3)^0,7,c
  8555  00499A  D7F8               	goto	l10667
  8556  00499C                     u13270:
  8557                           
  8558                           ; BSR set to: 3
  8559  00499C  501F               	movf	___llmod@divisor^0,w,c
  8560  00499E  5C1B               	subwf	___llmod@dividend^0,w,c
  8561  0049A0  5020               	movf	(___llmod@divisor+1)^0,w,c
  8562  0049A2  581C               	subwfb	(___llmod@dividend+1)^0,w,c
  8563  0049A4  5021               	movf	(___llmod@divisor+2)^0,w,c
  8564  0049A6  581D               	subwfb	(___llmod@dividend+2)^0,w,c
  8565  0049A8  5022               	movf	(___llmod@divisor+3)^0,w,c
  8566  0049AA  581E               	subwfb	(___llmod@dividend+3)^0,w,c
  8567  0049AC  A0D8               	btfss	status,0,c
  8568  0049AE  D008               	goto	l10675
  8569                           
  8570                           ; BSR set to: 3
  8571  0049B0  501F               	movf	___llmod@divisor^0,w,c
  8572  0049B2  5E1B               	subwf	___llmod@dividend^0,f,c
  8573  0049B4  5020               	movf	(___llmod@divisor+1)^0,w,c
  8574  0049B6  5A1C               	subwfb	(___llmod@dividend+1)^0,f,c
  8575  0049B8  5021               	movf	(___llmod@divisor+2)^0,w,c
  8576  0049BA  5A1D               	subwfb	(___llmod@dividend+2)^0,f,c
  8577  0049BC  5022               	movf	(___llmod@divisor+3)^0,w,c
  8578  0049BE  5A1E               	subwfb	(___llmod@dividend+3)^0,f,c
  8579  0049C0                     l10675:
  8580                           
  8581                           ; BSR set to: 3
  8582  0049C0  90D8               	bcf	status,0,c
  8583  0049C2  3222               	rrcf	(___llmod@divisor+3)^0,f,c
  8584  0049C4  3221               	rrcf	(___llmod@divisor+2)^0,f,c
  8585  0049C6  3220               	rrcf	(___llmod@divisor+1)^0,f,c
  8586  0049C8  321F               	rrcf	___llmod@divisor^0,f,c
  8587                           
  8588                           ; BSR set to: 3
  8589  0049CA  2E23               	decfsz	___llmod@counter^0,f,c
  8590  0049CC  D7E7               	goto	u13270
  8591  0049CE                     l1933:
  8592                           
  8593                           ; BSR set to: 3
  8594  0049CE  C01B  F01B         	movff	___llmod@dividend,?___llmod
  8595  0049D2  C01C  F01C         	movff	___llmod@dividend+1,?___llmod+1
  8596  0049D6  C01D  F01D         	movff	___llmod@dividend+2,?___llmod+2
  8597  0049DA  C01E  F01E         	movff	___llmod@dividend+3,?___llmod+3
  8598                           
  8599                           ; BSR set to: 3
  8600  0049DE  0012               	return		;funcret
  8601  0049E0                     __end_of___llmod:
  8602                           	callstack 0
  8603                           
  8604 ;; *************** function _fix *****************
  8605 ;; Defined at:
  8606 ;;		line 616 in file "bibliotecas/GPS.c"
  8607 ;; Parameters:    Size  Location     Type
  8608 ;;		None
  8609 ;; Auto vars:     Size  Location     Type
  8610 ;;		None
  8611 ;; Return value:  Size  Location     Type
  8612 ;;                  1    wreg      unsigned char 
  8613 ;; Registers used:
  8614 ;;		wreg, status,2
  8615 ;; Tracked objects:
  8616 ;;		On entry : 0/0
  8617 ;;		On exit  : 0/0
  8618 ;;		Unchanged: 0/0
  8619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8620 ;;      Params:         0       0       0       0       0       0       0       0       0
  8621 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8622 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8623 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8624 ;;Total ram usage:        0 bytes
  8625 ;; Hardware stack levels used: 1
  8626 ;; Hardware stack levels required when called: 3
  8627 ;; This function calls:
  8628 ;;		Nothing
  8629 ;; This function is called by:
  8630 ;;		_troca_de_tela
  8631 ;;		_escrita_sdcard
  8632 ;; This function uses a non-reentrant model
  8633 ;;
  8634                           
  8635                           	psect	text36
  8636  00522A                     __ptext36:
  8637                           	callstack 0
  8638  00522A                     _fix:
  8639                           	callstack 25
  8640                           
  8641                           ;GPS.c: 618: return rawFix;
  8642                           
  8643                           ; BSR set to: 3
  8644                           ;incstack = 0
  8645  00522A  503B               	movf	_rawFix^0,w,c
  8646  00522C  0012               	return		;funcret
  8647  00522E                     __end_of_fix:
  8648                           	callstack 0
  8649                           
  8650 ;; *************** function _f_open *****************
  8651 ;; Defined at:
  8652 ;;		line 825 in file "bibliotecas/tff.c"
  8653 ;; Parameters:    Size  Location     Type
  8654 ;;  fp              2  102[BANK0 ] PTR struct _FIL
  8655 ;;		 -> fil(28), 
  8656 ;;  path            2  104[BANK0 ] PTR const unsigned char 
  8657 ;;		 -> NULL(0), STR_25(13), string_dado.data(7), string_dado(59), 
  8658 ;;  mode            1  106[BANK0 ] unsigned char 
  8659 ;; Auto vars:     Size  Location     Type
  8660 ;;  dw              4  125[BANK0 ] unsigned long 
  8661 ;;  rs              2  123[BANK0 ] unsigned short 
  8662 ;;  dj             14  132[BANK0 ] struct _DIR_E
  8663 ;;  fn             12  111[BANK0 ] unsigned char [12]
  8664 ;;  dir             2  130[BANK0 ] PTR unsigned char 
  8665 ;;		 -> NULL(0), fs(544), 
  8666 ;;  res             1  129[BANK0 ] enum E155
  8667 ;; Return value:  Size  Location     Type
  8668 ;;                  1    wreg      enum E3236
  8669 ;; Registers used:
  8670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8671 ;; Tracked objects:
  8672 ;;		On entry : 3F/0
  8673 ;;		On exit  : 3F/0
  8674 ;;		Unchanged: 0/0
  8675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8676 ;;      Params:         0       5       0       0       0       0       0       0       0
  8677 ;;      Locals:         0      35       0       0       0       0       0       0       0
  8678 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8679 ;;      Totals:         0      44       0       0       0       0       0       0       0
  8680 ;;Total ram usage:       44 bytes
  8681 ;; Hardware stack levels used: 1
  8682 ;; Hardware stack levels required when called: 12
  8683 ;; This function calls:
  8684 ;;		_auto_mount
  8685 ;;		_get_fattime
  8686 ;;		_memcpy
  8687 ;;		_memset
  8688 ;;		_move_window
  8689 ;;		_remove_chain
  8690 ;;		_reserve_direntry
  8691 ;;		_trace_path
  8692 ;; This function is called by:
  8693 ;;		_escrita_sdcard
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697                           	psect	text37
  8698  001A7A                     __ptext37:
  8699                           	callstack 0
  8700  001A7A                     _f_open:
  8701                           	callstack 15
  8702                           
  8703                           ; BSR set to: 0
  8704                           ;tff.c: 831: FRESULT res;;tff.c: 832: DIR_E dj;;tff.c: 833: BYTE *dir;;tff.c: 834: char 
      +                          fn[8+3+1];;tff.c: 837: fp->fs = (0);
  8705                           
  8706                           ;incstack = 0
  8707  001A7A  EE20 F004          	lfsr	2,4
  8708  001A7E  51C6               	movf	f_open@fp& (0+255),w,b
  8709  001A80  26D9               	addwf	fsr2l,f,c
  8710  001A82  51C7               	movf	(f_open@fp+1)& (0+255),w,b
  8711  001A84  22DA               	addwfc	fsr2h,f,c
  8712  001A86  0E00               	movlw	0
  8713  001A88  6EDE               	movwf	postinc2,c
  8714  001A8A  0E00               	movlw	0
  8715  001A8C  6EDD               	movwf	postdec2,c
  8716                           
  8717                           ; BSR set to: 0
  8718                           ;tff.c: 839: mode &= (0x01|0x02|0x08|0x10|0x04);
  8719  001A8E  0E1F               	movlw	31
  8720  001A90  17CA               	andwf	f_open@mode& (0+255),f,b
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;tff.c: 840: res = auto_mount(&path, (BYTE)(mode & (0x02|0x08|0x10|0x04)));
  8724  001A92  0EC8               	movlw	low f_open@path
  8725  001A94  6F81               	movwf	auto_mount@path& (0+255),b
  8726  001A96  51CA               	movf	f_open@mode& (0+255),w,b
  8727  001A98  0B1E               	andlw	30
  8728  001A9A  6F82               	movwf	auto_mount@chk_wp& (0+255),b
  8729  001A9C  EC96  F006         	call	_auto_mount	;wreg free
  8730  001AA0  0100               	movlb	0	; () banked
  8731  001AA2  6FE1               	movwf	f_open@res& (0+255),b
  8732                           
  8733                           ; BSR set to: 0
  8734                           ;tff.c: 845: if (res != FR_OK) return res;
  8735  001AA4  51E1               	movf	f_open@res& (0+255),w,b
  8736  001AA6  B4D8               	btfsc	status,2,c
  8737  001AA8  D002               	goto	l10729
  8738  001AAA                     u13320:
  8739                           
  8740                           ; BSR set to: 0
  8741  001AAA  51E1               	movf	f_open@res& (0+255),w,b
  8742  001AAC  0012               	return	
  8743  001AAE                     l10729:
  8744                           
  8745                           ; BSR set to: 0
  8746                           ;tff.c: 846: res = trace_path(&dj, fn, path, &dir);
  8747  001AAE  0EE4               	movlw	low f_open@dj
  8748  001AB0  6FAF               	movwf	trace_path@dj& (0+255),b
  8749  001AB2  0ECF               	movlw	low f_open@fn
  8750  001AB4  6FB0               	movwf	trace_path@fn& (0+255),b
  8751  001AB6  C0C8  F0B1         	movff	f_open@path,trace_path@path
  8752  001ABA  C0C9  F0B2         	movff	f_open@path+1,trace_path@path+1
  8753  001ABE  0EE2               	movlw	low f_open@dir
  8754  001AC0  6FB3               	movwf	trace_path@dir& (0+255),b
  8755  001AC2  ECBD  F011         	call	_trace_path	;wreg free
  8756  001AC6  6FE1               	movwf	f_open@res& (0+255),b
  8757                           
  8758                           ; BSR set to: 0
  8759                           ;tff.c: 850: if (mode & (0x08|0x10|0x04)) {
  8760  001AC8  C0CA  F0CB         	movff	f_open@mode,??_f_open
  8761  001ACC  0E1C               	movlw	28
  8762  001ACE  17CB               	andwf	??_f_open& (0+255),f,b
  8763  001AD0  B4D8               	btfsc	status,2,c
  8764  001AD2  D0DD               	goto	l10791
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;tff.c: 851: CLUST rs;;tff.c: 852: DWORD dw;;tff.c: 853: if (res != FR_OK) {
  8768  001AD4  51E1               	movf	f_open@res& (0+255),w,b
  8769  001AD6  B4D8               	btfsc	status,2,c
  8770  001AD8  D034               	goto	l1233
  8771                           
  8772                           ; BSR set to: 0
  8773                           ;tff.c: 854: if (res != FR_NO_FILE) return res;
  8774  001ADA  0E02               	movlw	2
  8775  001ADC  19E1               	xorwf	f_open@res& (0+255),w,b
  8776  001ADE  A4D8               	btfss	status,2,c
  8777  001AE0  D7E4               	goto	u13320
  8778                           
  8779                           ; BSR set to: 0
  8780                           ;tff.c: 855: res = reserve_direntry(&dj, &dir);
  8781  001AE2  0EE4               	movlw	low f_open@dj
  8782  001AE4  6FB4               	movwf	reserve_direntry@dj& (0+255),b
  8783  001AE6  0EE2               	movlw	low f_open@dir
  8784  001AE8  6FB5               	movwf	reserve_direntry@dir& (0+255),b
  8785  001AEA  ECF8  F012         	call	_reserve_direntry	;wreg free
  8786  001AEE  6FE1               	movwf	f_open@res& (0+255),b
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;tff.c: 856: if (res != FR_OK) return res;
  8790  001AF0  51E1               	movf	f_open@res& (0+255),w,b
  8791  001AF2  A4D8               	btfss	status,2,c
  8792  001AF4  D7DA               	goto	u13320
  8793                           
  8794                           ; BSR set to: 0
  8795                           ;tff.c: 857: memset(dir, 0, 32);
  8796  001AF6  C0E2  F01B         	movff	f_open@dir,memset@p1
  8797  001AFA  C0E3  F01C         	movff	f_open@dir+1,memset@p1+1
  8798  001AFE  0E00               	movlw	0
  8799  001B00  6E1E               	movwf	(memset@c+1)^0,c
  8800  001B02  0E00               	movlw	0
  8801  001B04  6E1D               	movwf	memset@c^0,c
  8802  001B06  0E00               	movlw	0
  8803  001B08  6E20               	movwf	(memset@n+1)^0,c
  8804  001B0A  0E20               	movlw	32
  8805  001B0C  6E1F               	movwf	memset@n^0,c
  8806  001B0E  ECC5  F027         	call	_memset	;wreg free
  8807                           
  8808                           ;tff.c: 858: memcpy(&dir[0], fn, 8+3);
  8809  001B12  C0E2  F01B         	movff	f_open@dir,memcpy@d1
  8810  001B16  C0E3  F01C         	movff	f_open@dir+1,memcpy@d1+1
  8811  001B1A  0ECF               	movlw	low f_open@fn
  8812  001B1C  6E1D               	movwf	memcpy@s1^0,c
  8813  001B1E  6A1E               	clrf	(memcpy@s1+1)^0,c
  8814  001B20  0E00               	movlw	0
  8815  001B22  6E20               	movwf	(memcpy@n+1)^0,c
  8816  001B24  0E0B               	movlw	11
  8817  001B26  6E1F               	movwf	memcpy@n^0,c
  8818  001B28  ECAA  F026         	call	_memcpy	;wreg free
  8819                           
  8820                           ;tff.c: 859: dir[12] = fn[11];
  8821  001B2C  0100               	movlb	0	; () banked
  8822  001B2E  EE20 F00C          	lfsr	2,12
  8823  001B32  51E2               	movf	f_open@dir& (0+255),w,b
  8824  001B34  26D9               	addwf	fsr2l,f,c
  8825  001B36  51E3               	movf	(f_open@dir+1)& (0+255),w,b
  8826  001B38  22DA               	addwfc	fsr2h,f,c
  8827  001B3A  C0DA  FFDF         	movff	f_open@fn+11,indf2
  8828                           
  8829                           ; BSR set to: 0
  8830                           ;tff.c: 860: mode |= 0x08;
  8831  001B3E  87CA               	bsf	f_open@mode& (0+255),3,b
  8832                           
  8833                           ;tff.c: 861: }
  8834  001B40  D07A               	goto	l10779
  8835  001B42                     l1233:
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;tff.c: 862: else {;tff.c: 863: if (mode & 0x04)
  8839  001B42  A5CA               	btfss	f_open@mode& (0+255),2,b
  8840  001B44  D002               	goto	l10759
  8841                           
  8842                           ; BSR set to: 0
  8843                           ;tff.c: 864: return FR_EXIST;
  8844  001B46  0E07               	movlw	7
  8845  001B48  0012               	return	
  8846  001B4A                     l10759:
  8847                           
  8848                           ; BSR set to: 0
  8849                           ;tff.c: 865: if (!dir || (dir[11] & (0x01|0x10)))
  8850  001B4A  51E2               	movf	f_open@dir& (0+255),w,b
  8851  001B4C  11E3               	iorwf	(f_open@dir+1)& (0+255),w,b
  8852  001B4E  B4D8               	btfsc	status,2,c
  8853  001B50  D00C               	goto	u13390
  8854                           
  8855                           ; BSR set to: 0
  8856  001B52  EE20 F00B          	lfsr	2,11
  8857  001B56  51E2               	movf	f_open@dir& (0+255),w,b
  8858  001B58  26D9               	addwf	fsr2l,f,c
  8859  001B5A  51E3               	movf	(f_open@dir+1)& (0+255),w,b
  8860  001B5C  22DA               	addwfc	fsr2h,f,c
  8861  001B5E  50DF               	movf	indf2,w,c
  8862  001B60  6FCB               	movwf	??_f_open& (0+255),b
  8863  001B62  0E11               	movlw	17
  8864  001B64  17CB               	andwf	??_f_open& (0+255),f,b
  8865  001B66  B4D8               	btfsc	status,2,c
  8866  001B68  D002               	goto	l1238
  8867  001B6A                     u13390:
  8868                           
  8869                           ; BSR set to: 0
  8870                           ;tff.c: 866: return FR_DENIED;
  8871  001B6A  0E06               	movlw	6
  8872  001B6C  0012               	return	
  8873  001B6E                     l1238:
  8874                           
  8875                           ; BSR set to: 0
  8876                           ;tff.c: 867: if (mode & 0x08) {
  8877  001B6E  A7CA               	btfss	f_open@mode& (0+255),3,b
  8878  001B70  D062               	goto	l10779
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;tff.c: 872: rs = (WORD)(*(WORD*)(BYTE*)(&dir[26]));
  8882  001B72  EE20 F01A          	lfsr	2,26
  8883  001B76  51E2               	movf	f_open@dir& (0+255),w,b
  8884  001B78  26D9               	addwf	fsr2l,f,c
  8885  001B7A  51E3               	movf	(f_open@dir+1)& (0+255),w,b
  8886  001B7C  22DA               	addwfc	fsr2h,f,c
  8887  001B7E  CFDE F0DB          	movff	postinc2,f_open@rs
  8888  001B82  CFDD F0DC          	movff	postdec2,f_open@rs+1
  8889                           
  8890                           ;tff.c: 874: *(WORD*)(BYTE*)(&dir[26])=(WORD)(0);
  8891  001B86  EE20 F01A          	lfsr	2,26
  8892  001B8A  51E2               	movf	f_open@dir& (0+255),w,b
  8893  001B8C  26D9               	addwf	fsr2l,f,c
  8894  001B8E  51E3               	movf	(f_open@dir+1)& (0+255),w,b
  8895  001B90  22DA               	addwfc	fsr2h,f,c
  8896  001B92  0E00               	movlw	0
  8897  001B94  6EDE               	movwf	postinc2,c
  8898  001B96  0E00               	movlw	0
  8899  001B98  6EDD               	movwf	postdec2,c
  8900                           
  8901                           ;tff.c: 875: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(0);
  8902  001B9A  EE20 F01C          	lfsr	2,28
  8903  001B9E  51E2               	movf	f_open@dir& (0+255),w,b
  8904  001BA0  26D9               	addwf	fsr2l,f,c
  8905  001BA2  51E3               	movf	(f_open@dir+1)& (0+255),w,b
  8906  001BA4  22DA               	addwfc	fsr2h,f,c
  8907  001BA6  6ADE               	clrf	postinc2,c
  8908  001BA8  6ADE               	clrf	postinc2,c
  8909  001BAA  6ADE               	clrf	postinc2,c
  8910  001BAC  6ADD               	clrf	postdec2,c
  8911                           
  8912                           ;tff.c: 876: dj.fs->winflag = 1;
  8913  001BAE  EE20 F01F          	lfsr	2,31
  8914  001BB2  51E8               	movf	(f_open@dj+4)& (0+255),w,b
  8915  001BB4  26D9               	addwf	fsr2l,f,c
  8916  001BB6  51E9               	movf	(f_open@dj+5)& (0+255),w,b
  8917  001BB8  22DA               	addwfc	fsr2h,f,c
  8918  001BBA  0E01               	movlw	1
  8919  001BBC  6EDF               	movwf	indf2,c
  8920                           
  8921                           ;tff.c: 877: dw = dj.fs->winsect;
  8922  001BBE  EE20 F004          	lfsr	2,4
  8923  001BC2  51E8               	movf	(f_open@dj+4)& (0+255),w,b
  8924  001BC4  26D9               	addwf	fsr2l,f,c
  8925  001BC6  51E9               	movf	(f_open@dj+5)& (0+255),w,b
  8926  001BC8  22DA               	addwfc	fsr2h,f,c
  8927  001BCA  CFDE F0DD          	movff	postinc2,f_open@dw
  8928  001BCE  CFDE F0DE          	movff	postinc2,f_open@dw+1
  8929  001BD2  CFDE F0DF          	movff	postinc2,f_open@dw+2
  8930  001BD6  CFDE F0E0          	movff	postinc2,f_open@dw+3
  8931                           
  8932                           ; BSR set to: 0
  8933                           ;tff.c: 878: if (!remove_chain(rs) || !move_window(dw))
  8934  001BDA  C0DB  F0A6         	movff	f_open@rs,remove_chain@clust
  8935  001BDE  C0DC  F0A7         	movff	f_open@rs+1,remove_chain@clust+1
  8936  001BE2  EC38  F021         	call	_remove_chain	;wreg free
  8937  001BE6  0900               	iorlw	0
  8938  001BE8  B4D8               	btfsc	status,2,c
  8939  001BEA  D00D               	goto	u13420
  8940                           
  8941                           ; BSR set to: 0
  8942  001BEC  C0DD  F079         	movff	f_open@dw,move_window@sector
  8943  001BF0  C0DE  F07A         	movff	f_open@dw+1,move_window@sector+1
  8944  001BF4  C0DF  F07B         	movff	f_open@dw+2,move_window@sector+2
  8945  001BF8  C0E0  F07C         	movff	f_open@dw+3,move_window@sector+3
  8946  001BFC  EC81  F018         	call	_move_window	;wreg free
  8947  001C00  0900               	iorlw	0
  8948  001C02  A4D8               	btfss	status,2,c
  8949  001C04  D002               	goto	l10777
  8950  001C06                     u13420:
  8951                           
  8952                           ; BSR set to: 0
  8953                           ;tff.c: 879: return FR_RW_ERROR;
  8954  001C06  0E08               	movlw	8
  8955  001C08  0012               	return	
  8956  001C0A                     l10777:
  8957                           
  8958                           ; BSR set to: 0
  8959                           ;tff.c: 880: dj.fs->last_clust = rs - 1;
  8960  001C0A  0EFF               	movlw	255
  8961  001C0C  6FCB               	movwf	??_f_open& (0+255),b
  8962  001C0E  0EFF               	movlw	255
  8963  001C10  6FCC               	movwf	(??_f_open+1)& (0+255),b
  8964  001C12  C0DB  F0CD         	movff	f_open@rs,??_f_open+2
  8965  001C16  C0DC  F0CE         	movff	f_open@rs+1,??_f_open+3
  8966  001C1A  51CB               	movf	??_f_open& (0+255),w,b
  8967  001C1C  27CD               	addwf	(??_f_open+2)& (0+255),f,b
  8968  001C1E  51CC               	movf	(??_f_open+1)& (0+255),w,b
  8969  001C20  23CE               	addwfc	(??_f_open+3)& (0+255),f,b
  8970  001C22  EE20 F018          	lfsr	2,24
  8971  001C26  51E8               	movf	(f_open@dj+4)& (0+255),w,b
  8972  001C28  26D9               	addwf	fsr2l,f,c
  8973  001C2A  51E9               	movf	(f_open@dj+5)& (0+255),w,b
  8974  001C2C  22DA               	addwfc	fsr2h,f,c
  8975  001C2E  C0CD  FFDE         	movff	??_f_open+2,postinc2
  8976  001C32  C0CE  FFDD         	movff	??_f_open+3,postdec2
  8977  001C36                     l10779:
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;tff.c: 881: };tff.c: 882: };tff.c: 883: if (mode & 0x08) {
  8981  001C36  A7CA               	btfss	f_open@mode& (0+255),3,b
  8982  001C38  D045               	goto	l10811
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;tff.c: 884: dir[11] = 0;
  8986  001C3A  EE20 F00B          	lfsr	2,11
  8987  001C3E  51E2               	movf	f_open@dir& (0+255),w,b
  8988  001C40  26D9               	addwf	fsr2l,f,c
  8989  001C42  51E3               	movf	(f_open@dir+1)& (0+255),w,b
  8990  001C44  22DA               	addwfc	fsr2h,f,c
  8991  001C46  0E00               	movlw	0
  8992  001C48  6EDF               	movwf	indf2,c
  8993                           
  8994                           ; BSR set to: 0
  8995                           ;tff.c: 885: dw = get_fattime();
  8996  001C4A  EC38  F01E         	call	_get_fattime	;wreg free
  8997  001C4E  C01B  F0DD         	movff	?_get_fattime,f_open@dw
  8998  001C52  C01C  F0DE         	movff	?_get_fattime+1,f_open@dw+1
  8999  001C56  C01D  F0DF         	movff	?_get_fattime+2,f_open@dw+2
  9000  001C5A  C01E  F0E0         	movff	?_get_fattime+3,f_open@dw+3
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;tff.c: 886: *(DWORD*)(BYTE*)(&dir[14])=(DWORD)(dw);
  9004  001C5E  EE20 F00E          	lfsr	2,14
  9005  001C62  51E2               	movf	f_open@dir& (0+255),w,b
  9006  001C64  26D9               	addwf	fsr2l,f,c
  9007  001C66  51E3               	movf	(f_open@dir+1)& (0+255),w,b
  9008  001C68  22DA               	addwfc	fsr2h,f,c
  9009  001C6A  C0DD  FFDE         	movff	f_open@dw,postinc2
  9010  001C6E  C0DE  FFDE         	movff	f_open@dw+1,postinc2
  9011  001C72  C0DF  FFDE         	movff	f_open@dw+2,postinc2
  9012  001C76  C0E0  FFDE         	movff	f_open@dw+3,postinc2
  9013                           
  9014                           ; BSR set to: 0
  9015                           ;tff.c: 887: dj.fs->winflag = 1;
  9016  001C7A  EE20 F01F          	lfsr	2,31
  9017  001C7E  51E8               	movf	(f_open@dj+4)& (0+255),w,b
  9018  001C80  26D9               	addwf	fsr2l,f,c
  9019  001C82  51E9               	movf	(f_open@dj+5)& (0+255),w,b
  9020  001C84  22DA               	addwfc	fsr2h,f,c
  9021  001C86  0E01               	movlw	1
  9022  001C88  6EDF               	movwf	indf2,c
  9023                           
  9024                           ; BSR set to: 0
  9025                           ;tff.c: 888: mode |= 0x20;
  9026  001C8A  8BCA               	bsf	f_open@mode& (0+255),5,b
  9027  001C8C  D01B               	goto	l10811
  9028  001C8E                     l10791:
  9029                           
  9030                           ; BSR set to: 0
  9031                           ;tff.c: 892: else {;tff.c: 894: if (res != FR_OK) return res;
  9032  001C8E  51E1               	movf	f_open@res& (0+255),w,b
  9033  001C90  A4D8               	btfss	status,2,c
  9034  001C92  D70B               	goto	u13320
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;tff.c: 895: if (!dir || (dir[11] & 0x10))
  9038  001C94  51E2               	movf	f_open@dir& (0+255),w,b
  9039  001C96  11E3               	iorwf	(f_open@dir+1)& (0+255),w,b
  9040  001C98  B4D8               	btfsc	status,2,c
  9041  001C9A  D008               	goto	u13460
  9042                           
  9043                           ; BSR set to: 0
  9044  001C9C  EE20 F00B          	lfsr	2,11
  9045  001CA0  51E2               	movf	f_open@dir& (0+255),w,b
  9046  001CA2  26D9               	addwf	fsr2l,f,c
  9047  001CA4  51E3               	movf	(f_open@dir+1)& (0+255),w,b
  9048  001CA6  22DA               	addwfc	fsr2h,f,c
  9049  001CA8  A8DF               	btfss	indf2,4,c
  9050  001CAA  D002               	goto	l1248
  9051  001CAC                     u13460:
  9052                           
  9053                           ; BSR set to: 0
  9054                           ;tff.c: 896: return FR_NO_FILE;
  9055  001CAC  0E02               	movlw	2
  9056  001CAE  0012               	return	
  9057  001CB0                     l1248:
  9058                           
  9059                           ; BSR set to: 0
  9060                           ;tff.c: 898: if ((mode & 0x02) && (dir[11] & 0x01))
  9061  001CB0  A3CA               	btfss	f_open@mode& (0+255),1,b
  9062  001CB2  D008               	goto	l10811
  9063                           
  9064                           ; BSR set to: 0
  9065  001CB4  EE20 F00B          	lfsr	2,11
  9066  001CB8  51E2               	movf	f_open@dir& (0+255),w,b
  9067  001CBA  26D9               	addwf	fsr2l,f,c
  9068  001CBC  51E3               	movf	(f_open@dir+1)& (0+255),w,b
  9069  001CBE  22DA               	addwfc	fsr2h,f,c
  9070  001CC0  B0DF               	btfsc	indf2,0,c
  9071  001CC2  D753               	goto	u13390
  9072  001CC4                     l10811:
  9073                           
  9074                           ; BSR set to: 0
  9075                           ;tff.c: 900: };tff.c: 901: fp->dir_sect = dj.fs->winsect;
  9076  001CC4  EE20 F004          	lfsr	2,4
  9077  001CC8  51E8               	movf	(f_open@dj+4)& (0+255),w,b
  9078  001CCA  26D9               	addwf	fsr2l,f,c
  9079  001CCC  51E9               	movf	(f_open@dj+5)& (0+255),w,b
  9080  001CCE  22DA               	addwfc	fsr2h,f,c
  9081  001CD0  EE10 F016          	lfsr	1,22
  9082  001CD4  51C6               	movf	f_open@fp& (0+255),w,b
  9083  001CD6  26E1               	addwf	fsr1l,f,c
  9084  001CD8  51C7               	movf	(f_open@fp+1)& (0+255),w,b
  9085  001CDA  22E2               	addwfc	fsr1h,f,c
  9086  001CDC  CFDE FFE6          	movff	postinc2,postinc1
  9087  001CE0  CFDE FFE6          	movff	postinc2,postinc1
  9088  001CE4  CFDE FFE6          	movff	postinc2,postinc1
  9089  001CE8  CFDE FFE6          	movff	postinc2,postinc1
  9090                           
  9091                           ; BSR set to: 0
  9092                           ;tff.c: 902: fp->dir_ptr = dir;
  9093  001CEC  EE20 F01A          	lfsr	2,26
  9094  001CF0  51C6               	movf	f_open@fp& (0+255),w,b
  9095  001CF2  26D9               	addwf	fsr2l,f,c
  9096  001CF4  51C7               	movf	(f_open@fp+1)& (0+255),w,b
  9097  001CF6  22DA               	addwfc	fsr2h,f,c
  9098  001CF8  C0E2  FFDE         	movff	f_open@dir,postinc2
  9099  001CFC  C0E3  FFDD         	movff	f_open@dir+1,postdec2
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;tff.c: 904: fp->flag = mode;
  9103  001D00  EE20 F002          	lfsr	2,2
  9104  001D04  51C6               	movf	f_open@fp& (0+255),w,b
  9105  001D06  26D9               	addwf	fsr2l,f,c
  9106  001D08  51C7               	movf	(f_open@fp+1)& (0+255),w,b
  9107  001D0A  22DA               	addwfc	fsr2h,f,c
  9108  001D0C  C0CA  FFDF         	movff	f_open@mode,indf2
  9109                           
  9110                           ;tff.c: 905: fp->org_clust =;tff.c: 909: (WORD)(*(WORD*)(BYTE*)(&dir[26]));
  9111  001D10  EE20 F01A          	lfsr	2,26
  9112  001D14  51E2               	movf	f_open@dir& (0+255),w,b
  9113  001D16  26D9               	addwf	fsr2l,f,c
  9114  001D18  51E3               	movf	(f_open@dir+1)& (0+255),w,b
  9115  001D1A  22DA               	addwfc	fsr2h,f,c
  9116  001D1C  EE10 F00E          	lfsr	1,14
  9117  001D20  51C6               	movf	f_open@fp& (0+255),w,b
  9118  001D22  26E1               	addwf	fsr1l,f,c
  9119  001D24  51C7               	movf	(f_open@fp+1)& (0+255),w,b
  9120  001D26  22E2               	addwfc	fsr1h,f,c
  9121  001D28  CFDE FFE6          	movff	postinc2,postinc1
  9122  001D2C  CFDD FFE5          	movff	postdec2,postdec1
  9123                           
  9124                           ;tff.c: 910: fp->fsize = (DWORD)(*(DWORD*)(BYTE*)(&dir[28]));
  9125  001D30  EE20 F01C          	lfsr	2,28
  9126  001D34  51E2               	movf	f_open@dir& (0+255),w,b
  9127  001D36  26D9               	addwf	fsr2l,f,c
  9128  001D38  51E3               	movf	(f_open@dir+1)& (0+255),w,b
  9129  001D3A  22DA               	addwfc	fsr2h,f,c
  9130  001D3C  EE10 F00A          	lfsr	1,10
  9131  001D40  51C6               	movf	f_open@fp& (0+255),w,b
  9132  001D42  26E1               	addwf	fsr1l,f,c
  9133  001D44  51C7               	movf	(f_open@fp+1)& (0+255),w,b
  9134  001D46  22E2               	addwfc	fsr1h,f,c
  9135  001D48  CFDE FFE6          	movff	postinc2,postinc1
  9136  001D4C  CFDE FFE6          	movff	postinc2,postinc1
  9137  001D50  CFDE FFE6          	movff	postinc2,postinc1
  9138  001D54  CFDE FFE6          	movff	postinc2,postinc1
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;tff.c: 911: fp->fptr = 0; fp->csect = 255;
  9142  001D58  EE20 F006          	lfsr	2,6
  9143  001D5C  51C6               	movf	f_open@fp& (0+255),w,b
  9144  001D5E  26D9               	addwf	fsr2l,f,c
  9145  001D60  51C7               	movf	(f_open@fp+1)& (0+255),w,b
  9146  001D62  22DA               	addwfc	fsr2h,f,c
  9147  001D64  6ADE               	clrf	postinc2,c
  9148  001D66  6ADE               	clrf	postinc2,c
  9149  001D68  6ADE               	clrf	postinc2,c
  9150  001D6A  6ADD               	clrf	postdec2,c
  9151                           
  9152                           ; BSR set to: 0
  9153  001D6C  EE20 F003          	lfsr	2,3
  9154  001D70  51C6               	movf	f_open@fp& (0+255),w,b
  9155  001D72  26D9               	addwf	fsr2l,f,c
  9156  001D74  51C7               	movf	(f_open@fp+1)& (0+255),w,b
  9157  001D76  22DA               	addwfc	fsr2h,f,c
  9158  001D78  0EFF               	movlw	255
  9159  001D7A  6EDF               	movwf	indf2,c
  9160                           
  9161                           ; BSR set to: 0
  9162                           ;tff.c: 912: fp->fs = dj.fs; fp->id = dj.fs->id;
  9163  001D7C  EE20 F004          	lfsr	2,4
  9164  001D80  51C6               	movf	f_open@fp& (0+255),w,b
  9165  001D82  26D9               	addwf	fsr2l,f,c
  9166  001D84  51C7               	movf	(f_open@fp+1)& (0+255),w,b
  9167  001D86  22DA               	addwfc	fsr2h,f,c
  9168  001D88  C0E8  FFDE         	movff	f_open@dj+4,postinc2
  9169  001D8C  C0E9  FFDD         	movff	f_open@dj+5,postdec2
  9170                           
  9171                           ; BSR set to: 0
  9172  001D90  C0E8  FFD9         	movff	f_open@dj+4,fsr2l
  9173  001D94  C0E9  FFDA         	movff	f_open@dj+5,fsr2h
  9174  001D98  C0C6  FFE1         	movff	f_open@fp,fsr1l
  9175  001D9C  C0C7  FFE2         	movff	f_open@fp+1,fsr1h
  9176  001DA0  CFDE FFE6          	movff	postinc2,postinc1
  9177  001DA4  CFDD FFE5          	movff	postdec2,postdec1
  9178                           
  9179                           ; BSR set to: 0
  9180                           ;tff.c: 914: return FR_OK;
  9181  001DA8  0E00               	movlw	0
  9182                           
  9183                           ; BSR set to: 0
  9184  001DAA  0012               	return		;funcret
  9185  001DAC                     __end_of_f_open:
  9186                           	callstack 0
  9187                           
  9188 ;; *************** function _trace_path *****************
  9189 ;; Defined at:
  9190 ;;		line 501 in file "bibliotecas/tff.c"
  9191 ;; Parameters:    Size  Location     Type
  9192 ;;  dj              1   79[BANK0 ] PTR struct _DIR_E
  9193 ;;		 -> f_open@dj(14), 
  9194 ;;  fn              1   80[BANK0 ] PTR unsigned char 
  9195 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
  9196 ;;  path            2   81[BANK0 ] PTR const unsigned char 
  9197 ;;		 -> NULL(0), STR_25(13), string_dado.data(7), string_dado(59), 
  9198 ;;  dir             1   83[BANK0 ] PTR PTR unsigned char 
  9199 ;;		 -> f_opendir@dir(2), f_open@dir(2), 
  9200 ;; Auto vars:     Size  Location     Type
  9201 ;;  dptr            2   97[BANK0 ] PTR unsigned char 
  9202 ;;		 -> fs.win(512), NULL(0), fs(544), 
  9203 ;;  clust           2   94[BANK0 ] unsigned short 
  9204 ;;  fs              2   92[BANK0 ] PTR struct _FATFS
  9205 ;;		 -> NULL(0), fs(544), 
  9206 ;;  ds              1   96[BANK0 ] unsigned char 
  9207 ;; Return value:  Size  Location     Type
  9208 ;;                  1    wreg      enum E155
  9209 ;; Registers used:
  9210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9211 ;; Tracked objects:
  9212 ;;		On entry : 3F/0
  9213 ;;		On exit  : 3F/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9216 ;;      Params:         0       5       0       0       0       0       0       0       0
  9217 ;;      Locals:         0      11       0       0       0       0       0       0       0
  9218 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9219 ;;      Totals:         0      20       0       0       0       0       0       0       0
  9220 ;;Total ram usage:       20 bytes
  9221 ;; Hardware stack levels used: 1
  9222 ;; Hardware stack levels required when called: 11
  9223 ;; This function calls:
  9224 ;;		_clust2sect
  9225 ;;		_make_dirfile
  9226 ;;		_memcmp
  9227 ;;		_move_window
  9228 ;;		_next_dir_entry
  9229 ;; This function is called by:
  9230 ;;		_f_open
  9231 ;; This function uses a non-reentrant model
  9232 ;;
  9233                           
  9234                           	psect	text38
  9235  00237A                     __ptext38:
  9236                           	callstack 0
  9237  00237A                     _trace_path:
  9238                           	callstack 15
  9239                           
  9240                           ; BSR set to: 0
  9241                           ;tff.c: 511: FATFS *fs = FatFs;
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;incstack = 0
  9245  00237A  C0F9  F0BC         	movff	_FatFs,trace_path@fs
  9246  00237E  C0FA  F0BD         	movff	_FatFs+1,trace_path@fs+1
  9247                           
  9248                           ; BSR set to: 0
  9249                           ;tff.c: 514: dj->fs = fs;
  9250  002382  51AF               	movf	trace_path@dj& (0+255),w,b
  9251  002384  6ED9               	movwf	fsr2l,c
  9252  002386  6ADA               	clrf	fsr2h,c
  9253  002388  0E04               	movlw	4
  9254  00238A  26D9               	addwf	fsr2l,f,c
  9255  00238C  C0BC  FFDE         	movff	trace_path@fs,postinc2
  9256  002390  C0BD  FFDD         	movff	trace_path@fs+1,postdec2
  9257                           
  9258                           ; BSR set to: 0
  9259                           ;tff.c: 515: clust = fs->dirbase;
  9260  002394  EE20 F00C          	lfsr	2,12
  9261  002398  51BC               	movf	trace_path@fs& (0+255),w,b
  9262  00239A  26D9               	addwf	fsr2l,f,c
  9263  00239C  51BD               	movf	(trace_path@fs+1)& (0+255),w,b
  9264  00239E  22DA               	addwfc	fsr2h,f,c
  9265  0023A0  CFDE F0BE          	movff	postinc2,trace_path@clust
  9266  0023A4  CFDD F0BF          	movff	postdec2,trace_path@clust+1
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;tff.c: 522: {;tff.c: 523: dj->clust = dj->sclust = 0;
  9270  0023A8  51AF               	movf	trace_path@dj& (0+255),w,b
  9271  0023AA  6ED9               	movwf	fsr2l,c
  9272  0023AC  6ADA               	clrf	fsr2h,c
  9273  0023AE  0E06               	movlw	6
  9274  0023B0  26D9               	addwf	fsr2l,f,c
  9275  0023B2  0E00               	movlw	0
  9276  0023B4  6EDE               	movwf	postinc2,c
  9277  0023B6  0E00               	movlw	0
  9278  0023B8  6EDD               	movwf	postdec2,c
  9279  0023BA  51AF               	movf	trace_path@dj& (0+255),w,b
  9280  0023BC  6EE1               	movwf	fsr1l,c
  9281  0023BE  6AE2               	clrf	fsr1h,c
  9282  0023C0  0E08               	movlw	8
  9283  0023C2  26E1               	addwf	fsr1l,f,c
  9284  0023C4  CFDE FFE6          	movff	postinc2,postinc1
  9285  0023C8  CFDD FFE5          	movff	postdec2,postdec1
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;tff.c: 524: dj->sect = clust;
  9289  0023CC  51BE               	movf	trace_path@clust& (0+255),w,b
  9290  0023CE  6FB4               	movwf	??_trace_path& (0+255),b
  9291  0023D0  51BF               	movf	(trace_path@clust+1)& (0+255),w,b
  9292  0023D2  6FB5               	movwf	(??_trace_path+1)& (0+255),b
  9293  0023D4  6BB6               	clrf	(??_trace_path+2)& (0+255),b
  9294  0023D6  6BB7               	clrf	(??_trace_path+3)& (0+255),b
  9295  0023D8  51AF               	movf	trace_path@dj& (0+255),w,b
  9296  0023DA  6ED9               	movwf	fsr2l,c
  9297  0023DC  6ADA               	clrf	fsr2h,c
  9298  0023DE  0E0A               	movlw	10
  9299  0023E0  26D9               	addwf	fsr2l,f,c
  9300  0023E2  C0B4  FFDE         	movff	??_trace_path,postinc2
  9301  0023E6  C0B5  FFDE         	movff	??_trace_path+1,postinc2
  9302  0023EA  C0B6  FFDE         	movff	??_trace_path+2,postinc2
  9303  0023EE  C0B7  FFDE         	movff	??_trace_path+3,postinc2
  9304                           
  9305                           ; BSR set to: 0
  9306                           ;tff.c: 525: };tff.c: 526: dj->index = 0;
  9307  0023F2  51AF               	movf	trace_path@dj& (0+255),w,b
  9308  0023F4  6ED9               	movwf	fsr2l,c
  9309  0023F6  6ADA               	clrf	fsr2h,c
  9310  0023F8  0E02               	movlw	2
  9311  0023FA  26D9               	addwf	fsr2l,f,c
  9312  0023FC  0E00               	movlw	0
  9313  0023FE  6EDE               	movwf	postinc2,c
  9314  002400  0E00               	movlw	0
  9315  002402  6EDD               	movwf	postdec2,c
  9316                           
  9317                           ; BSR set to: 0
  9318                           ;tff.c: 528: if (*path == '\0') {
  9319  002404  C0B1  FFF6         	movff	trace_path@path,tblptrl
  9320  002408  C0B2  FFF7         	movff	trace_path@path+1,tblptrh
  9321  00240C  6AF8               	clrf	tblptru,c
  9322  00240E  0E07               	movlw	(high __ramtop+-1)
  9323  002410  64F7               	cpfsgt	tblptrh,c
  9324  002412  D003               	bra	u12657
  9325  002414  0008               	tblrd		*
  9326  002416  50F5               	movf	tablat,w,c
  9327  002418  D005               	bra	u12650
  9328  00241A                     u12657:
  9329  00241A  CFF6 FFE1          	movff	tblptrl,fsr1l
  9330  00241E  CFF7 FFE2          	movff	tblptrh,fsr1h
  9331  002422  50E7               	movf	indf1,w,c
  9332  002424                     u12650:
  9333  002424  0900               	iorlw	0
  9334  002426  A4D8               	btfss	status,2,c
  9335  002428  D00A               	goto	l10357
  9336                           
  9337                           ;tff.c: 529: *dir = (0); return FR_OK;
  9338  00242A  0100               	movlb	0	; () banked
  9339  00242C  51B3               	movf	trace_path@dir& (0+255),w,b
  9340  00242E  6ED9               	movwf	fsr2l,c
  9341  002430  6ADA               	clrf	fsr2h,c
  9342  002432  0E00               	movlw	0
  9343  002434  6EDE               	movwf	postinc2,c
  9344  002436  0E00               	movlw	0
  9345  002438  6EDD               	movwf	postdec2,c
  9346  00243A                     l10353:
  9347                           
  9348                           ; BSR set to: 0
  9349  00243A  0E00               	movlw	0
  9350  00243C  0012               	return	
  9351  00243E                     l10357:
  9352                           
  9353                           ;tff.c: 533: ds = make_dirfile(&path, fn);
  9354  00243E  0EB1               	movlw	low trace_path@path
  9355  002440  6E23               	movwf	make_dirfile@path^0,c
  9356  002442  C0B0  F024         	movff	trace_path@fn,make_dirfile@dirname
  9357  002446  ECCE  F01A         	call	_make_dirfile	;wreg free
  9358  00244A  6FC0               	movwf	trace_path@ds& (0+255),b
  9359                           
  9360                           ; BSR set to: 0
  9361                           ;tff.c: 534: if (ds == 1) return FR_INVALID_NAME;
  9362  00244C  05C0               	decf	trace_path@ds& (0+255),w,b
  9363  00244E  A4D8               	btfss	status,2,c
  9364  002450  D002               	goto	l10365
  9365                           
  9366                           ; BSR set to: 0
  9367  002452  0E04               	movlw	4
  9368  002454  0012               	return	
  9369  002456                     l10365:
  9370                           
  9371                           ; BSR set to: 0
  9372                           ;tff.c: 536: if (!move_window(dj->sect)) return FR_RW_ERROR;
  9373  002456  51AF               	movf	trace_path@dj& (0+255),w,b
  9374  002458  6ED9               	movwf	fsr2l,c
  9375  00245A  6ADA               	clrf	fsr2h,c
  9376  00245C  0E0A               	movlw	10
  9377  00245E  26D9               	addwf	fsr2l,f,c
  9378  002460  CFDE F079          	movff	postinc2,move_window@sector
  9379  002464  CFDE F07A          	movff	postinc2,move_window@sector+1
  9380  002468  CFDE F07B          	movff	postinc2,move_window@sector+2
  9381  00246C  CFDE F07C          	movff	postinc2,move_window@sector+3
  9382  002470  EC81  F018         	call	_move_window	;wreg free
  9383  002474  0900               	iorlw	0
  9384  002476  A4D8               	btfss	status,2,c
  9385  002478  D002               	goto	l10371
  9386                           
  9387                           ; BSR set to: 0
  9388  00247A  0E08               	movlw	8
  9389  00247C  0012               	return	
  9390  00247E                     l10371:
  9391                           
  9392                           ; BSR set to: 0
  9393                           ;tff.c: 537: dptr = &fs->win[(dj->index & 15) * 32];
  9394  00247E  51AF               	movf	trace_path@dj& (0+255),w,b
  9395  002480  6ED9               	movwf	fsr2l,c
  9396  002482  6ADA               	clrf	fsr2h,c
  9397  002484  0E02               	movlw	2
  9398  002486  26D9               	addwf	fsr2l,f,c
  9399  002488  CFDE F0B4          	movff	postinc2,??_trace_path
  9400  00248C  CFDD F0B5          	movff	postdec2,??_trace_path+1
  9401  002490  0E0F               	movlw	15
  9402  002492  17B4               	andwf	??_trace_path& (0+255),f,b
  9403  002494  0E00               	movlw	0
  9404  002496  17B5               	andwf	(??_trace_path+1)& (0+255),f,b
  9405  002498  0E05               	movlw	5
  9406  00249A                     u12695:
  9407  00249A  90D8               	bcf	status,0,c
  9408  00249C  37B4               	rlcf	??_trace_path& (0+255),f,b
  9409  00249E  37B5               	rlcf	(??_trace_path+1)& (0+255),f,b
  9410  0024A0  2EE8               	decfsz	wreg,f,c
  9411  0024A2  D7FB               	goto	u12695
  9412  0024A4  C0BC  F0B6         	movff	trace_path@fs,??_trace_path+2
  9413  0024A8  C0BD  F0B7         	movff	trace_path@fs+1,??_trace_path+3
  9414  0024AC  51B4               	movf	??_trace_path& (0+255),w,b
  9415  0024AE  27B6               	addwf	(??_trace_path+2)& (0+255),f,b
  9416  0024B0  51B5               	movf	(??_trace_path+1)& (0+255),w,b
  9417  0024B2  23B7               	addwfc	(??_trace_path+3)& (0+255),f,b
  9418  0024B4  0E20               	movlw	32
  9419  0024B6  25B6               	addwf	(??_trace_path+2)& (0+255),w,b
  9420  0024B8  6FC1               	movwf	trace_path@dptr& (0+255),b
  9421  0024BA  0E00               	movlw	0
  9422  0024BC  21B7               	addwfc	(??_trace_path+3)& (0+255),w,b
  9423  0024BE  6FC2               	movwf	(trace_path@dptr+1)& (0+255),b
  9424                           
  9425                           ; BSR set to: 0
  9426                           ;tff.c: 538: if (dptr[0] == 0)
  9427  0024C0  C0C1  FFD9         	movff	trace_path@dptr,fsr2l
  9428  0024C4  C0C2  FFDA         	movff	trace_path@dptr+1,fsr2h
  9429  0024C8  50DF               	movf	indf2,w,c
  9430  0024CA  A4D8               	btfss	status,2,c
  9431  0024CC  D00D               	goto	l10383
  9432                           
  9433                           ; BSR set to: 0
  9434                           ;tff.c: 539: return !ds ? FR_NO_FILE : FR_NO_PATH;
  9435  0024CE  51C0               	movf	trace_path@ds& (0+255),w,b
  9436  0024D0  B4D8               	btfsc	status,2,c
  9437  0024D2  D004               	goto	l10379
  9438                           
  9439                           ; BSR set to: 0
  9440  0024D4  0E00               	movlw	0
  9441  0024D6  6FB9               	movwf	(_trace_path$2149+1)& (0+255),b
  9442  0024D8  0E03               	movlw	3
  9443  0024DA  D003               	goto	L3
  9444  0024DC                     l10379:
  9445                           
  9446                           ; BSR set to: 0
  9447  0024DC  0E00               	movlw	0
  9448  0024DE  6FB9               	movwf	(_trace_path$2149+1)& (0+255),b
  9449  0024E0  0E02               	movlw	2
  9450  0024E2                     L3:
  9451  0024E2  6FB8               	movwf	_trace_path$2149& (0+255),b
  9452                           
  9453                           ; BSR set to: 0
  9454  0024E4  51B8               	movf	_trace_path$2149& (0+255),w,b
  9455  0024E6  0012               	return	
  9456  0024E8                     l10383:
  9457                           
  9458                           ; BSR set to: 0
  9459                           ;tff.c: 540: if (dptr[0] != 0xE5;tff.c: 541: && !(dptr[11] & 0x08);tff.c: 542: && !memcm
      +                          p(&dptr[0], fn, 8+3) ) break;
  9460  0024E8  C0C1  FFD9         	movff	trace_path@dptr,fsr2l
  9461  0024EC  C0C2  FFDA         	movff	trace_path@dptr+1,fsr2h
  9462  0024F0  0EE5               	movlw	229
  9463  0024F2  18DE               	xorwf	postinc2,w,c
  9464  0024F4  B4D8               	btfsc	status,2,c
  9465  0024F6  D019               	goto	l10391
  9466                           
  9467                           ; BSR set to: 0
  9468  0024F8  EE20 F00B          	lfsr	2,11
  9469  0024FC  51C1               	movf	trace_path@dptr& (0+255),w,b
  9470  0024FE  26D9               	addwf	fsr2l,f,c
  9471  002500  51C2               	movf	(trace_path@dptr+1)& (0+255),w,b
  9472  002502  22DA               	addwfc	fsr2h,f,c
  9473  002504  B6DF               	btfsc	indf2,3,c
  9474  002506  D011               	goto	l10391
  9475                           
  9476                           ; BSR set to: 0
  9477  002508  C0C1  F01B         	movff	trace_path@dptr,memcmp@s1
  9478  00250C  C0C2  F01C         	movff	trace_path@dptr+1,memcmp@s1+1
  9479  002510  C0B0  F01D         	movff	trace_path@fn,memcmp@s2
  9480  002514  6A1E               	clrf	(memcmp@s2+1)^0,c
  9481  002516  0E00               	movlw	0
  9482  002518  6E20               	movwf	(memcmp@n+1)^0,c
  9483  00251A  0E0B               	movlw	11
  9484  00251C  6E1F               	movwf	memcmp@n^0,c
  9485  00251E  ECD0  F021         	call	_memcmp	;wreg free
  9486  002522  501B               	movf	?_memcmp^0,w,c
  9487  002524  101C               	iorwf	(?_memcmp+1)^0,w,c
  9488  002526  B4D8               	btfsc	status,2,c
  9489  002528  D014               	goto	l10401
  9490  00252A                     l10391:
  9491                           
  9492                           ;tff.c: 543: if (!next_dir_entry(dj))
  9493  00252A  C0AF  F0A3         	movff	trace_path@dj,next_dir_entry@dj
  9494  00252E  EC1C  F01A         	call	_next_dir_entry	;wreg free
  9495  002532  0900               	iorlw	0
  9496  002534  A4D8               	btfss	status,2,c
  9497  002536  D78F               	goto	l10365
  9498                           
  9499                           ; BSR set to: 0
  9500                           ;tff.c: 544: return !ds ? FR_NO_FILE : FR_NO_PATH;
  9501  002538  51C0               	movf	trace_path@ds& (0+255),w,b
  9502  00253A  B4D8               	btfsc	status,2,c
  9503  00253C  D004               	goto	l10397
  9504                           
  9505                           ; BSR set to: 0
  9506  00253E  0E00               	movlw	0
  9507  002540  6FBB               	movwf	(_trace_path$2151+1)& (0+255),b
  9508  002542  0E03               	movlw	3
  9509  002544  D003               	goto	L4
  9510  002546                     l10397:
  9511                           
  9512                           ; BSR set to: 0
  9513  002546  0E00               	movlw	0
  9514  002548  6FBB               	movwf	(_trace_path$2151+1)& (0+255),b
  9515  00254A  0E02               	movlw	2
  9516  00254C                     L4:
  9517  00254C  6FBA               	movwf	_trace_path$2151& (0+255),b
  9518                           
  9519                           ; BSR set to: 0
  9520  00254E  51BA               	movf	_trace_path$2151& (0+255),w,b
  9521  002550  0012               	return	
  9522  002552                     l10401:
  9523                           
  9524                           ;tff.c: 546: if (!ds) { *dir = dptr; return FR_OK; }
  9525  002552  0100               	movlb	0	; () banked
  9526  002554  51C0               	movf	trace_path@ds& (0+255),w,b
  9527  002556  A4D8               	btfss	status,2,c
  9528  002558  D008               	goto	l10409
  9529                           
  9530                           ; BSR set to: 0
  9531  00255A  51B3               	movf	trace_path@dir& (0+255),w,b
  9532  00255C  6ED9               	movwf	fsr2l,c
  9533  00255E  6ADA               	clrf	fsr2h,c
  9534  002560  C0C1  FFDE         	movff	trace_path@dptr,postinc2
  9535  002564  C0C2  FFDD         	movff	trace_path@dptr+1,postdec2
  9536  002568  D768               	goto	l10353
  9537  00256A                     l10409:
  9538                           
  9539                           ; BSR set to: 0
  9540                           ;tff.c: 547: if (!(dptr[11] & 0x10)) return FR_NO_PATH;
  9541  00256A  EE20 F00B          	lfsr	2,11
  9542  00256E  51C1               	movf	trace_path@dptr& (0+255),w,b
  9543  002570  26D9               	addwf	fsr2l,f,c
  9544  002572  51C2               	movf	(trace_path@dptr+1)& (0+255),w,b
  9545  002574  22DA               	addwfc	fsr2h,f,c
  9546  002576  B8DF               	btfsc	indf2,4,c
  9547  002578  D002               	goto	l10415
  9548                           
  9549                           ; BSR set to: 0
  9550  00257A  0E03               	movlw	3
  9551  00257C  0012               	return	
  9552  00257E                     l10415:
  9553                           
  9554                           ; BSR set to: 0
  9555                           ;tff.c: 548: clust =;tff.c: 552: (WORD)(*(WORD*)(BYTE*)(&dptr[26]));
  9556  00257E  EE20 F01A          	lfsr	2,26
  9557  002582  51C1               	movf	trace_path@dptr& (0+255),w,b
  9558  002584  26D9               	addwf	fsr2l,f,c
  9559  002586  51C2               	movf	(trace_path@dptr+1)& (0+255),w,b
  9560  002588  22DA               	addwfc	fsr2h,f,c
  9561  00258A  CFDE F0BE          	movff	postinc2,trace_path@clust
  9562  00258E  CFDD F0BF          	movff	postdec2,trace_path@clust+1
  9563                           
  9564                           ; BSR set to: 0
  9565                           ;tff.c: 553: dj->clust = dj->sclust = clust;
  9566  002592  51AF               	movf	trace_path@dj& (0+255),w,b
  9567  002594  6ED9               	movwf	fsr2l,c
  9568  002596  6ADA               	clrf	fsr2h,c
  9569  002598  0E06               	movlw	6
  9570  00259A  26D9               	addwf	fsr2l,f,c
  9571  00259C  C0BE  FFDE         	movff	trace_path@clust,postinc2
  9572  0025A0  C0BF  FFDD         	movff	trace_path@clust+1,postdec2
  9573  0025A4  51AF               	movf	trace_path@dj& (0+255),w,b
  9574  0025A6  6EE1               	movwf	fsr1l,c
  9575  0025A8  6AE2               	clrf	fsr1h,c
  9576  0025AA  0E08               	movlw	8
  9577  0025AC  26E1               	addwf	fsr1l,f,c
  9578  0025AE  CFDE FFE6          	movff	postinc2,postinc1
  9579  0025B2  CFDD FFE5          	movff	postdec2,postdec1
  9580                           
  9581                           ; BSR set to: 0
  9582                           ;tff.c: 554: dj->sect = clust2sect(clust);
  9583  0025B6  C0BE  F027         	movff	trace_path@clust,clust2sect@clust
  9584  0025BA  C0BF  F028         	movff	trace_path@clust+1,clust2sect@clust+1
  9585  0025BE  ECEE  F01F         	call	_clust2sect	;wreg free
  9586  0025C2  51AF               	movf	trace_path@dj& (0+255),w,b
  9587  0025C4  6ED9               	movwf	fsr2l,c
  9588  0025C6  6ADA               	clrf	fsr2h,c
  9589  0025C8  0E0A               	movlw	10
  9590  0025CA  26D9               	addwf	fsr2l,f,c
  9591  0025CC  C027  FFDE         	movff	?_clust2sect,postinc2
  9592  0025D0  C028  FFDE         	movff	?_clust2sect+1,postinc2
  9593  0025D4  C029  FFDE         	movff	?_clust2sect+2,postinc2
  9594  0025D8  C02A  FFDE         	movff	?_clust2sect+3,postinc2
  9595                           
  9596                           ; BSR set to: 0
  9597                           ;tff.c: 555: dj->index = 2;
  9598  0025DC  51AF               	movf	trace_path@dj& (0+255),w,b
  9599  0025DE  6ED9               	movwf	fsr2l,c
  9600  0025E0  6ADA               	clrf	fsr2h,c
  9601  0025E2  0E02               	movlw	2
  9602  0025E4  26D9               	addwf	fsr2l,f,c
  9603  0025E6  0E02               	movlw	2
  9604  0025E8  6EDE               	movwf	postinc2,c
  9605  0025EA  0E00               	movlw	0
  9606  0025EC  6EDD               	movwf	postdec2,c
  9607                           
  9608                           ;tff.c: 556: }
  9609  0025EE  D727               	goto	l10357
  9610  0025F0                     __end_of_trace_path:
  9611                           	callstack 0
  9612                           
  9613 ;; *************** function _make_dirfile *****************
  9614 ;; Defined at:
  9615 ;;		line 438 in file "bibliotecas/tff.c"
  9616 ;; Parameters:    Size  Location     Type
  9617 ;;  path            1   34[COMRAM] PTR PTR const unsigned c
  9618 ;;		 -> trace_path@path(2), 
  9619 ;;  dirname         1   35[COMRAM] PTR unsigned char 
  9620 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
  9621 ;; Auto vars:     Size  Location     Type
  9622 ;;  c               1    6[BANK0 ] unsigned char 
  9623 ;;  n               1    5[BANK0 ] unsigned char 
  9624 ;;  a               1    4[BANK0 ] unsigned char 
  9625 ;;  t               1    3[BANK0 ] unsigned char 
  9626 ;;  b               1    2[BANK0 ] unsigned char 
  9627 ;; Return value:  Size  Location     Type
  9628 ;;                  1    wreg      unsigned char 
  9629 ;; Registers used:
  9630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9631 ;; Tracked objects:
  9632 ;;		On entry : 0/0
  9633 ;;		On exit  : 3F/0
  9634 ;;		Unchanged: 0/0
  9635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9636 ;;      Params:         2       0       0       0       0       0       0       0       0
  9637 ;;      Locals:         0       7       0       0       0       0       0       0       0
  9638 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9639 ;;      Totals:         4       7       0       0       0       0       0       0       0
  9640 ;;Total ram usage:       11 bytes
  9641 ;; Hardware stack levels used: 1
  9642 ;; Hardware stack levels required when called: 4
  9643 ;; This function calls:
  9644 ;;		_memset
  9645 ;; This function is called by:
  9646 ;;		_trace_path
  9647 ;; This function uses a non-reentrant model
  9648 ;;
  9649                           
  9650                           	psect	text39
  9651  00359C                     __ptext39:
  9652                           	callstack 0
  9653  00359C                     _make_dirfile:
  9654                           	callstack 21
  9655                           
  9656                           ;tff.c: 443: BYTE n, t, c, a, b;;tff.c: 446: memset(dirname, ' ', 8+3);
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;incstack = 0
  9660  00359C  C024  F01B         	movff	make_dirfile@dirname,memset@p1
  9661  0035A0  6A1C               	clrf	(memset@p1+1)^0,c
  9662  0035A2  0E00               	movlw	0
  9663  0035A4  6E1E               	movwf	(memset@c+1)^0,c
  9664  0035A6  0E20               	movlw	32
  9665  0035A8  6E1D               	movwf	memset@c^0,c
  9666  0035AA  0E00               	movlw	0
  9667  0035AC  6E20               	movwf	(memset@n+1)^0,c
  9668  0035AE  0E0B               	movlw	11
  9669  0035B0  6E1F               	movwf	memset@n^0,c
  9670  0035B2  ECC5  F027         	call	_memset	;wreg free
  9671                           
  9672                           ;tff.c: 447: a = 0; b = 0x18;
  9673  0035B6  0E00               	movlw	0
  9674  0035B8  0100               	movlb	0	; () banked
  9675  0035BA  6F64               	movwf	make_dirfile@a& (0+255),b
  9676                           
  9677                           ; BSR set to: 0
  9678  0035BC  0E18               	movlw	24
  9679  0035BE  6F62               	movwf	make_dirfile@b& (0+255),b
  9680                           
  9681                           ; BSR set to: 0
  9682                           ;tff.c: 448: n = 0; t = 8;
  9683  0035C0  0E00               	movlw	0
  9684  0035C2  6F65               	movwf	make_dirfile@n& (0+255),b
  9685                           
  9686                           ; BSR set to: 0
  9687  0035C4  0E08               	movlw	8
  9688  0035C6  6F63               	movwf	make_dirfile@t& (0+255),b
  9689  0035C8                     l10097:
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;tff.c: 450: c = *(*path)++;
  9693  0035C8  5023               	movf	make_dirfile@path^0,w,c
  9694  0035CA  6ED9               	movwf	fsr2l,c
  9695  0035CC  6ADA               	clrf	fsr2h,c
  9696  0035CE  CFDF F025          	movff	indf2,??_make_dirfile
  9697  0035D2  0E01               	movlw	1
  9698  0035D4  26DE               	addwf	postinc2,f,c
  9699  0035D6  CFDF F026          	movff	indf2,??_make_dirfile+1
  9700  0035DA  0E00               	movlw	0
  9701  0035DC  22DD               	addwfc	postdec2,f,c
  9702  0035DE  C025  FFF6         	movff	??_make_dirfile,tblptrl
  9703  0035E2  C026  FFF7         	movff	??_make_dirfile+1,tblptrh
  9704  0035E6  6AF8               	clrf	tblptru,c
  9705  0035E8  0E07               	movlw	(high __ramtop+-1)
  9706  0035EA  64F7               	cpfsgt	tblptrh,c
  9707  0035EC  D003               	bra	u12167
  9708  0035EE  0008               	tblrd		*
  9709  0035F0  50F5               	movf	tablat,w,c
  9710  0035F2  D005               	bra	u12160
  9711  0035F4                     u12167:
  9712  0035F4  CFF6 FFE1          	movff	tblptrl,fsr1l
  9713  0035F8  CFF7 FFE2          	movff	tblptrh,fsr1h
  9714  0035FC  50E7               	movf	indf1,w,c
  9715  0035FE                     u12160:
  9716  0035FE  0100               	movlb	0	; () banked
  9717  003600  6F66               	movwf	make_dirfile@c& (0+255),b
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;tff.c: 451: if (c == '\0' || c == '/') {
  9721  003602  5166               	movf	make_dirfile@c& (0+255),w,b
  9722  003604  B4D8               	btfsc	status,2,c
  9723  003606  D004               	goto	u12180
  9724                           
  9725                           ; BSR set to: 0
  9726  003608  0E2F               	movlw	47
  9727  00360A  1966               	xorwf	make_dirfile@c& (0+255),w,b
  9728  00360C  A4D8               	btfss	status,2,c
  9729  00360E  D012               	goto	l10117
  9730  003610                     u12180:
  9731                           
  9732                           ; BSR set to: 0
  9733                           ;tff.c: 452: if (n == 0) break;
  9734  003610  5165               	movf	make_dirfile@n& (0+255),w,b
  9735  003612  B4D8               	btfsc	status,2,c
  9736  003614  D070               	goto	l10205
  9737                           
  9738                           ; BSR set to: 0
  9739  003616  5164               	movf	make_dirfile@a& (0+255),w,b
  9740  003618  1562               	andwf	make_dirfile@b& (0+255),w,b
  9741  00361A  6E25               	movwf	??_make_dirfile^0,c
  9742  00361C  5025               	movf	??_make_dirfile^0,w,c
  9743  00361E  6F60               	movwf	_make_dirfile$2102& (0+255),b
  9744  003620  6B61               	clrf	(_make_dirfile$2102+1)& (0+255),b
  9745                           
  9746                           ; BSR set to: 0
  9747  003622  5024               	movf	make_dirfile@dirname^0,w,c
  9748  003624  6ED9               	movwf	fsr2l,c
  9749  003626  6ADA               	clrf	fsr2h,c
  9750  003628  0E0B               	movlw	11
  9751  00362A  26D9               	addwf	fsr2l,f,c
  9752  00362C  C060  FFDF         	movff	_make_dirfile$2102,indf2
  9753                           
  9754                           ; BSR set to: 0
  9755                           ;tff.c: 454: return c;
  9756  003630  5166               	movf	make_dirfile@c& (0+255),w,b
  9757  003632  0012               	return	
  9758  003634                     l10117:
  9759                           
  9760                           ; BSR set to: 0
  9761                           ;tff.c: 455: };tff.c: 456: if (c <= ' ' || c == 0x7F) break;
  9762  003634  0E20               	movlw	32
  9763  003636  6566               	cpfsgt	make_dirfile@c& (0+255),b
  9764  003638  D05E               	goto	l10205
  9765                           
  9766                           ; BSR set to: 0
  9767  00363A  0E7F               	movlw	127
  9768  00363C  1966               	xorwf	make_dirfile@c& (0+255),w,b
  9769  00363E  B4D8               	btfsc	status,2,c
  9770  003640  D05A               	goto	l10205
  9771                           
  9772                           ; BSR set to: 0
  9773                           ;tff.c: 457: if (c == '.') {
  9774  003642  0E2E               	movlw	46
  9775  003644  1966               	xorwf	make_dirfile@c& (0+255),w,b
  9776  003646  A4D8               	btfss	status,2,c
  9777  003648  D00C               	goto	l10147
  9778                           
  9779                           ; BSR set to: 0
  9780                           ;tff.c: 458: if (!(a & 1) && n >= 1 && n <= 8) {
  9781  00364A  B164               	btfsc	make_dirfile@a& (0+255),0,b
  9782  00364C  D054               	goto	l10205
  9783                           
  9784                           ; BSR set to: 0
  9785  00364E  5165               	movf	make_dirfile@n& (0+255),w,b
  9786  003650  B4D8               	btfsc	status,2,c
  9787  003652  D051               	goto	l10205
  9788                           
  9789                           ; BSR set to: 0
  9790  003654  0E09               	movlw	9
  9791  003656  6165               	cpfslt	make_dirfile@n& (0+255),b
  9792  003658  D04E               	goto	l10205
  9793                           
  9794                           ; BSR set to: 0
  9795                           ;tff.c: 459: n = 8; t = 11; continue;
  9796  00365A  0E08               	movlw	8
  9797  00365C  6F65               	movwf	make_dirfile@n& (0+255),b
  9798  00365E  0E0B               	movlw	11
  9799  003660  D7B2               	goto	L5
  9800  003662                     l10147:
  9801                           
  9802                           ; BSR set to: 0
  9803                           ;tff.c: 469: };tff.c: 470: if (c == '"') break;
  9804  003662  0E22               	movlw	34
  9805  003664  1966               	xorwf	make_dirfile@c& (0+255),w,b
  9806  003666  B4D8               	btfsc	status,2,c
  9807  003668  D046               	goto	l10205
  9808                           
  9809                           ; BSR set to: 0
  9810                           ;tff.c: 471: if (c <= ')') goto md_l1;
  9811  00366A  0E2A               	movlw	42
  9812  00366C  6166               	cpfslt	make_dirfile@c& (0+255),b
  9813  00366E  D001               	goto	l10155
  9814  003670  D035               	goto	l1121
  9815  003672                     l10155:
  9816                           
  9817                           ; BSR set to: 0
  9818                           ;tff.c: 472: if (c <= ',') break;
  9819  003672  0E2D               	movlw	45
  9820  003674  6166               	cpfslt	make_dirfile@c& (0+255),b
  9821  003676  D001               	goto	l10159
  9822  003678  D03E               	goto	l10205
  9823  00367A                     l10159:
  9824                           
  9825                           ; BSR set to: 0
  9826                           ;tff.c: 473: if (c <= '9') goto md_l1;
  9827  00367A  0E3A               	movlw	58
  9828  00367C  6166               	cpfslt	make_dirfile@c& (0+255),b
  9829  00367E  D001               	goto	l10163
  9830  003680  D02D               	goto	l1121
  9831  003682                     l10163:
  9832                           
  9833                           ; BSR set to: 0
  9834                           ;tff.c: 474: if (c <= '?') break;
  9835  003682  0E40               	movlw	64
  9836  003684  6166               	cpfslt	make_dirfile@c& (0+255),b
  9837  003686  D001               	goto	l1124
  9838  003688  D036               	goto	l10205
  9839  00368A                     l1124:
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;tff.c: 475: if (!(a & 1)) {
  9843  00368A  B164               	btfsc	make_dirfile@a& (0+255),0,b
  9844  00368C  D027               	goto	l1121
  9845                           
  9846                           ; BSR set to: 0
  9847                           ;tff.c: 476: if (c == '|') break;
  9848  00368E  0E7C               	movlw	124
  9849  003690  1966               	xorwf	make_dirfile@c& (0+255),w,b
  9850  003692  B4D8               	btfsc	status,2,c
  9851  003694  D030               	goto	l10205
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;tff.c: 477: if (c >= '[' && c <= ']') break;
  9855  003696  0E5A               	movlw	90
  9856  003698  6566               	cpfsgt	make_dirfile@c& (0+255),b
  9857  00369A  D004               	goto	l10177
  9858                           
  9859                           ; BSR set to: 0
  9860  00369C  0E5E               	movlw	94
  9861  00369E  6166               	cpfslt	make_dirfile@c& (0+255),b
  9862  0036A0  D001               	goto	l10177
  9863  0036A2  D029               	goto	l10205
  9864  0036A4                     l10177:
  9865                           
  9866                           ; BSR set to: 0
  9867  0036A4  0E40               	movlw	64
  9868  0036A6  6566               	cpfsgt	make_dirfile@c& (0+255),b
  9869  0036A8  D00A               	goto	l10187
  9870                           
  9871                           ; BSR set to: 0
  9872  0036AA  0E5B               	movlw	91
  9873  0036AC  6166               	cpfslt	make_dirfile@c& (0+255),b
  9874  0036AE  D007               	goto	l10187
  9875                           
  9876                           ; BSR set to: 0
  9877                           ;tff.c: 479: (t == 8) ? (b &= 0xF7) : (b &= 0xEF);
  9878  0036B0  0E08               	movlw	8
  9879  0036B2  1963               	xorwf	make_dirfile@t& (0+255),w,b
  9880  0036B4  A4D8               	btfss	status,2,c
  9881  0036B6  D002               	goto	l10185
  9882                           
  9883                           ; BSR set to: 0
  9884  0036B8  9762               	bcf	make_dirfile@b& (0+255),3,b
  9885  0036BA  D001               	goto	l10187
  9886  0036BC                     l10185:
  9887                           
  9888                           ; BSR set to: 0
  9889  0036BC  9962               	bcf	make_dirfile@b& (0+255),4,b
  9890  0036BE                     l10187:
  9891                           
  9892                           ; BSR set to: 0
  9893                           ;tff.c: 480: if (c >= 'a' && c <= 'z') {
  9894  0036BE  0E60               	movlw	96
  9895  0036C0  6566               	cpfsgt	make_dirfile@c& (0+255),b
  9896  0036C2  D00C               	goto	l1121
  9897                           
  9898                           ; BSR set to: 0
  9899  0036C4  0E7B               	movlw	123
  9900  0036C6  6166               	cpfslt	make_dirfile@c& (0+255),b
  9901  0036C8  D009               	goto	l1121
  9902                           
  9903                           ; BSR set to: 0
  9904                           ;tff.c: 482: if (1) (t == 8) ? (a |= 0x08) : (a |= 0x10);
  9905  0036CA  0E20               	movlw	32
  9906  0036CC  5F66               	subwf	make_dirfile@c& (0+255),f,b
  9907  0036CE  0E08               	movlw	8
  9908  0036D0  1963               	xorwf	make_dirfile@t& (0+255),w,b
  9909  0036D2  A4D8               	btfss	status,2,c
  9910  0036D4  D002               	goto	l10195
  9911                           
  9912                           ; BSR set to: 0
  9913  0036D6  8764               	bsf	make_dirfile@a& (0+255),3,b
  9914  0036D8  D001               	goto	l1121
  9915  0036DA                     l10195:
  9916                           
  9917                           ; BSR set to: 0
  9918  0036DA  8964               	bsf	make_dirfile@a& (0+255),4,b
  9919  0036DC                     l1121:
  9920                           
  9921                           ; BSR set to: 0
  9922                           ;tff.c: 486: a &= 0xFE;
  9923  0036DC  9164               	bcf	make_dirfile@a& (0+255),0,b
  9924                           
  9925                           ; BSR set to: 0
  9926                           ;tff.c: 488: if (n >= t) break;
  9927  0036DE  5163               	movf	make_dirfile@t& (0+255),w,b
  9928  0036E0  5D65               	subwf	make_dirfile@n& (0+255),w,b
  9929  0036E2  B0D8               	btfsc	status,0,c
  9930  0036E4  D008               	goto	l10205
  9931                           
  9932                           ; BSR set to: 0
  9933                           ;tff.c: 489: dirname[n++] = c;
  9934  0036E6  5024               	movf	make_dirfile@dirname^0,w,c
  9935  0036E8  2565               	addwf	make_dirfile@n& (0+255),w,b
  9936  0036EA  6ED9               	movwf	fsr2l,c
  9937  0036EC  6ADA               	clrf	fsr2h,c
  9938  0036EE  C066  FFDF         	movff	make_dirfile@c,indf2
  9939                           
  9940                           ; BSR set to: 0
  9941  0036F2  2B65               	incf	make_dirfile@n& (0+255),f,b
  9942  0036F4  D769               	goto	l10097
  9943  0036F6                     l10205:
  9944                           
  9945                           ; BSR set to: 0
  9946                           ;tff.c: 491: return 1;
  9947  0036F6  0E01               	movlw	1
  9948                           
  9949                           ; BSR set to: 0
  9950  0036F8  0012               	return		;funcret
  9951  0036FA                     __end_of_make_dirfile:
  9952                           	callstack 0
  9953                           
  9954 ;; *************** function _reserve_direntry *****************
  9955 ;; Defined at:
  9956 ;;		line 567 in file "bibliotecas/tff.c"
  9957 ;; Parameters:    Size  Location     Type
  9958 ;;  dj              1   84[BANK0 ] PTR struct _DIR_E
  9959 ;;		 -> f_open@dj(14), 
  9960 ;;  dir             1   85[BANK0 ] PTR PTR unsigned char 
  9961 ;;		 -> f_open@dir(2), 
  9962 ;; Auto vars:     Size  Location     Type
  9963 ;;  sector          4   90[BANK0 ] unsigned long 
  9964 ;;  fs              2  100[BANK0 ] PTR struct _FATFS
  9965 ;;		 -> NULL(0), fs(544), 
  9966 ;;  clust           2   98[BANK0 ] unsigned short 
  9967 ;;  dptr            2   95[BANK0 ] PTR unsigned char 
  9968 ;;		 -> fs.win(512), NULL(0), fs(544), 
  9969 ;;  c               1   97[BANK0 ] unsigned char 
  9970 ;;  n               1   94[BANK0 ] unsigned char 
  9971 ;; Return value:  Size  Location     Type
  9972 ;;                  1    wreg      enum E155
  9973 ;; Registers used:
  9974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9975 ;; Tracked objects:
  9976 ;;		On entry : 3F/0
  9977 ;;		On exit  : 3F/0
  9978 ;;		Unchanged: 0/0
  9979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9980 ;;      Params:         0       2       0       0       0       0       0       0       0
  9981 ;;      Locals:         0      12       0       0       0       0       0       0       0
  9982 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9983 ;;      Totals:         0      18       0       0       0       0       0       0       0
  9984 ;;Total ram usage:       18 bytes
  9985 ;; Hardware stack levels used: 1
  9986 ;; Hardware stack levels required when called: 11
  9987 ;; This function calls:
  9988 ;;		_clust2sect
  9989 ;;		_create_chain
  9990 ;;		_disk_write
  9991 ;;		_memset
  9992 ;;		_move_window
  9993 ;;		_next_dir_entry
  9994 ;; This function is called by:
  9995 ;;		_f_open
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           	psect	text40
 10000  0025F0                     __ptext40:
 10001                           	callstack 0
 10002  0025F0                     _reserve_direntry:
 10003                           	callstack 15
 10004                           
 10005                           ; BSR set to: 0
 10006                           ;tff.c: 572: CLUST clust;;tff.c: 573: DWORD sector;;tff.c: 574: BYTE c, n, *dptr;;tff.c:
      +                           575: FATFS *fs = dj->fs;
 10007                           
 10008                           ; BSR set to: 0
 10009                           ;incstack = 0
 10010  0025F0  51B4               	movf	reserve_direntry@dj& (0+255),w,b
 10011  0025F2  6ED9               	movwf	fsr2l,c
 10012  0025F4  6ADA               	clrf	fsr2h,c
 10013  0025F6  0E04               	movlw	4
 10014  0025F8  26D9               	addwf	fsr2l,f,c
 10015  0025FA  CFDE F0C4          	movff	postinc2,reserve_direntry@fs
 10016  0025FE  CFDD F0C5          	movff	postdec2,reserve_direntry@fs+1
 10017                           
 10018                           ;tff.c: 579: clust = dj->sclust;
 10019  002602  51B4               	movf	reserve_direntry@dj& (0+255),w,b
 10020  002604  6ED9               	movwf	fsr2l,c
 10021  002606  6ADA               	clrf	fsr2h,c
 10022  002608  0E06               	movlw	6
 10023  00260A  26D9               	addwf	fsr2l,f,c
 10024  00260C  CFDE F0C2          	movff	postinc2,reserve_direntry@clust
 10025  002610  CFDD F0C3          	movff	postdec2,reserve_direntry@clust+1
 10026                           
 10027                           ; BSR set to: 0
 10028                           ;tff.c: 580: if (clust != 0) {
 10029  002614  51C2               	movf	reserve_direntry@clust& (0+255),w,b
 10030  002616  11C3               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 10031  002618  B4D8               	btfsc	status,2,c
 10032  00261A  D01D               	goto	l10431
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;tff.c: 581: dj->clust = clust;
 10036  00261C  51B4               	movf	reserve_direntry@dj& (0+255),w,b
 10037  00261E  6ED9               	movwf	fsr2l,c
 10038  002620  6ADA               	clrf	fsr2h,c
 10039  002622  0E08               	movlw	8
 10040  002624  26D9               	addwf	fsr2l,f,c
 10041  002626  C0C2  FFDE         	movff	reserve_direntry@clust,postinc2
 10042  00262A  C0C3  FFDD         	movff	reserve_direntry@clust+1,postdec2
 10043                           
 10044                           ; BSR set to: 0
 10045                           ;tff.c: 582: dj->sect = clust2sect(clust);
 10046  00262E  C0C2  F027         	movff	reserve_direntry@clust,clust2sect@clust
 10047  002632  C0C3  F028         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 10048  002636  ECEE  F01F         	call	_clust2sect	;wreg free
 10049  00263A  51B4               	movf	reserve_direntry@dj& (0+255),w,b
 10050  00263C  6ED9               	movwf	fsr2l,c
 10051  00263E  6ADA               	clrf	fsr2h,c
 10052  002640  0E0A               	movlw	10
 10053  002642  26D9               	addwf	fsr2l,f,c
 10054  002644  C027  FFDE         	movff	?_clust2sect,postinc2
 10055  002648  C028  FFDE         	movff	?_clust2sect+1,postinc2
 10056  00264C  C029  FFDE         	movff	?_clust2sect+2,postinc2
 10057  002650  C02A  FFDE         	movff	?_clust2sect+3,postinc2
 10058                           
 10059                           ;tff.c: 583: } else {
 10060  002654  D013               	goto	l10433
 10061  002656                     l10431:
 10062                           
 10063                           ; BSR set to: 0
 10064                           ;tff.c: 584: dj->sect = fs->dirbase;
 10065  002656  EE20 F00C          	lfsr	2,12
 10066  00265A  51C4               	movf	reserve_direntry@fs& (0+255),w,b
 10067  00265C  26D9               	addwf	fsr2l,f,c
 10068  00265E  51C5               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 10069  002660  22DA               	addwfc	fsr2h,f,c
 10070  002662  51B4               	movf	reserve_direntry@dj& (0+255),w,b
 10071  002664  6EE1               	movwf	fsr1l,c
 10072  002666  6AE2               	clrf	fsr1h,c
 10073  002668  0E0A               	movlw	10
 10074  00266A  26E1               	addwf	fsr1l,f,c
 10075  00266C  CFDE FFE6          	movff	postinc2,postinc1
 10076  002670  CFDE FFE6          	movff	postinc2,postinc1
 10077  002674  CFDE FFE6          	movff	postinc2,postinc1
 10078  002678  CFDE FFE6          	movff	postinc2,postinc1
 10079  00267C                     l10433:
 10080                           
 10081                           ; BSR set to: 0
 10082                           ;tff.c: 585: };tff.c: 586: dj->index = 0;
 10083  00267C  51B4               	movf	reserve_direntry@dj& (0+255),w,b
 10084  00267E  6ED9               	movwf	fsr2l,c
 10085  002680  6ADA               	clrf	fsr2h,c
 10086  002682  0E02               	movlw	2
 10087  002684  26D9               	addwf	fsr2l,f,c
 10088  002686  0E00               	movlw	0
 10089  002688  6EDE               	movwf	postinc2,c
 10090  00268A  0E00               	movlw	0
 10091  00268C  6EDD               	movwf	postdec2,c
 10092  00268E                     l10435:
 10093                           
 10094                           ; BSR set to: 0
 10095                           ;tff.c: 589: if (!move_window(dj->sect)) return FR_RW_ERROR;
 10096  00268E  51B4               	movf	reserve_direntry@dj& (0+255),w,b
 10097  002690  6ED9               	movwf	fsr2l,c
 10098  002692  6ADA               	clrf	fsr2h,c
 10099  002694  0E0A               	movlw	10
 10100  002696  26D9               	addwf	fsr2l,f,c
 10101  002698  CFDE F079          	movff	postinc2,move_window@sector
 10102  00269C  CFDE F07A          	movff	postinc2,move_window@sector+1
 10103  0026A0  CFDE F07B          	movff	postinc2,move_window@sector+2
 10104  0026A4  CFDE F07C          	movff	postinc2,move_window@sector+3
 10105  0026A8  EC81  F018         	call	_move_window	;wreg free
 10106  0026AC  0900               	iorlw	0
 10107  0026AE  A4D8               	btfss	status,2,c
 10108  0026B0  D002               	goto	l10441
 10109  0026B2                     u12800:
 10110                           
 10111                           ; BSR set to: 0
 10112  0026B2  0E08               	movlw	8
 10113  0026B4  0012               	return	
 10114  0026B6                     l10441:
 10115                           
 10116                           ; BSR set to: 0
 10117                           ;tff.c: 590: dptr = &fs->win[(dj->index & 15) * 32];
 10118  0026B6  51B4               	movf	reserve_direntry@dj& (0+255),w,b
 10119  0026B8  6ED9               	movwf	fsr2l,c
 10120  0026BA  6ADA               	clrf	fsr2h,c
 10121  0026BC  0E02               	movlw	2
 10122  0026BE  26D9               	addwf	fsr2l,f,c
 10123  0026C0  CFDE F0B6          	movff	postinc2,??_reserve_direntry
 10124  0026C4  CFDD F0B7          	movff	postdec2,??_reserve_direntry+1
 10125  0026C8  0E0F               	movlw	15
 10126  0026CA  17B6               	andwf	??_reserve_direntry& (0+255),f,b
 10127  0026CC  0E00               	movlw	0
 10128  0026CE  17B7               	andwf	(??_reserve_direntry+1)& (0+255),f,b
 10129  0026D0  0E05               	movlw	5
 10130  0026D2                     u12815:
 10131  0026D2  90D8               	bcf	status,0,c
 10132  0026D4  37B6               	rlcf	??_reserve_direntry& (0+255),f,b
 10133  0026D6  37B7               	rlcf	(??_reserve_direntry+1)& (0+255),f,b
 10134  0026D8  2EE8               	decfsz	wreg,f,c
 10135  0026DA  D7FB               	goto	u12815
 10136  0026DC  C0C4  F0B8         	movff	reserve_direntry@fs,??_reserve_direntry+2
 10137  0026E0  C0C5  F0B9         	movff	reserve_direntry@fs+1,??_reserve_direntry+3
 10138  0026E4  51B6               	movf	??_reserve_direntry& (0+255),w,b
 10139  0026E6  27B8               	addwf	(??_reserve_direntry+2)& (0+255),f,b
 10140  0026E8  51B7               	movf	(??_reserve_direntry+1)& (0+255),w,b
 10141  0026EA  23B9               	addwfc	(??_reserve_direntry+3)& (0+255),f,b
 10142  0026EC  0E20               	movlw	32
 10143  0026EE  25B8               	addwf	(??_reserve_direntry+2)& (0+255),w,b
 10144  0026F0  6FBF               	movwf	reserve_direntry@dptr& (0+255),b
 10145  0026F2  0E00               	movlw	0
 10146  0026F4  21B9               	addwfc	(??_reserve_direntry+3)& (0+255),w,b
 10147  0026F6  6FC0               	movwf	(reserve_direntry@dptr+1)& (0+255),b
 10148                           
 10149                           ; BSR set to: 0
 10150                           ;tff.c: 591: c = dptr[0];
 10151  0026F8  C0BF  FFD9         	movff	reserve_direntry@dptr,fsr2l
 10152  0026FC  C0C0  FFDA         	movff	reserve_direntry@dptr+1,fsr2h
 10153  002700  50DF               	movf	indf2,w,c
 10154  002702  6FC1               	movwf	reserve_direntry@c& (0+255),b
 10155                           
 10156                           ; BSR set to: 0
 10157                           ;tff.c: 592: if (c == 0 || c == 0xE5) {
 10158  002704  51C1               	movf	reserve_direntry@c& (0+255),w,b
 10159  002706  B4D8               	btfsc	status,2,c
 10160  002708  D004               	goto	u12830
 10161                           
 10162                           ; BSR set to: 0
 10163  00270A  0EE5               	movlw	229
 10164  00270C  19C1               	xorwf	reserve_direntry@c& (0+255),w,b
 10165  00270E  A4D8               	btfss	status,2,c
 10166  002710  D009               	goto	l10455
 10167  002712                     u12830:
 10168                           
 10169                           ; BSR set to: 0
 10170                           ;tff.c: 593: *dir = dptr; return FR_OK;
 10171  002712  51B5               	movf	reserve_direntry@dir& (0+255),w,b
 10172  002714  6ED9               	movwf	fsr2l,c
 10173  002716  6ADA               	clrf	fsr2h,c
 10174  002718  C0BF  FFDE         	movff	reserve_direntry@dptr,postinc2
 10175  00271C  C0C0  FFDD         	movff	reserve_direntry@dptr+1,postdec2
 10176  002720                     l10451:
 10177                           
 10178                           ; BSR set to: 0
 10179  002720  0E00               	movlw	0
 10180  002722  0012               	return	
 10181  002724                     l10455:
 10182                           
 10183                           ; BSR set to: 0
 10184                           ;tff.c: 594: };tff.c: 595: } while (next_dir_entry(dj));
 10185  002724  C0B4  F0A3         	movff	reserve_direntry@dj,next_dir_entry@dj
 10186  002728  EC1C  F01A         	call	_next_dir_entry	;wreg free
 10187  00272C  0900               	iorlw	0
 10188  00272E  A4D8               	btfss	status,2,c
 10189  002730  D7AE               	goto	l10435
 10190                           
 10191                           ; BSR set to: 0
 10192                           ;tff.c: 599: if (clust == 0 || !(clust = create_chain(dj->clust))) return FR_DENIED;
 10193  002732  51C2               	movf	reserve_direntry@clust& (0+255),w,b
 10194  002734  11C3               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 10195  002736  B4D8               	btfsc	status,2,c
 10196  002738  D013               	goto	u12860
 10197                           
 10198                           ; BSR set to: 0
 10199  00273A  51B4               	movf	reserve_direntry@dj& (0+255),w,b
 10200  00273C  6ED9               	movwf	fsr2l,c
 10201  00273E  6ADA               	clrf	fsr2h,c
 10202  002740  0E08               	movlw	8
 10203  002742  26D9               	addwf	fsr2l,f,c
 10204  002744  CFDE F0A6          	movff	postinc2,create_chain@clust
 10205  002748  CFDD F0A7          	movff	postdec2,create_chain@clust+1
 10206  00274C  EC56  F019         	call	_create_chain	;wreg free
 10207  002750  C0A6  F0C2         	movff	?_create_chain,reserve_direntry@clust
 10208  002754  C0A7  F0C3         	movff	?_create_chain+1,reserve_direntry@clust+1
 10209  002758  51C2               	movf	reserve_direntry@clust& (0+255),w,b
 10210  00275A  11C3               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 10211  00275C  A4D8               	btfss	status,2,c
 10212  00275E  D002               	goto	l10465
 10213  002760                     u12860:
 10214                           
 10215                           ; BSR set to: 0
 10216  002760  0E06               	movlw	6
 10217  002762  0012               	return	
 10218  002764                     l10465:
 10219                           
 10220                           ; BSR set to: 0
 10221                           ;tff.c: 600: if (clust == 1 || !move_window(0)) return FR_RW_ERROR;
 10222  002764  05C2               	decf	reserve_direntry@clust& (0+255),w,b
 10223  002766  11C3               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 10224  002768  B4D8               	btfsc	status,2,c
 10225  00276A  D7A3               	goto	u12800
 10226                           
 10227                           ; BSR set to: 0
 10228  00276C  0E00               	movlw	0
 10229  00276E  6F79               	movwf	move_window@sector& (0+255),b
 10230  002770  0E00               	movlw	0
 10231  002772  6F7A               	movwf	(move_window@sector+1)& (0+255),b
 10232  002774  0E00               	movlw	0
 10233  002776  6F7B               	movwf	(move_window@sector+2)& (0+255),b
 10234  002778  0E00               	movlw	0
 10235  00277A  6F7C               	movwf	(move_window@sector+3)& (0+255),b
 10236  00277C  EC81  F018         	call	_move_window	;wreg free
 10237  002780  0900               	iorlw	0
 10238  002782  B4D8               	btfsc	status,2,c
 10239  002784  D796               	goto	u12800
 10240                           
 10241                           ; BSR set to: 0
 10242                           ;tff.c: 602: fs->winsect = sector = clust2sect(clust);
 10243  002786  C0C2  F027         	movff	reserve_direntry@clust,clust2sect@clust
 10244  00278A  C0C3  F028         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 10245  00278E  ECEE  F01F         	call	_clust2sect	;wreg free
 10246  002792  C027  F0BA         	movff	?_clust2sect,reserve_direntry@sector
 10247  002796  C028  F0BB         	movff	?_clust2sect+1,reserve_direntry@sector+1
 10248  00279A  C029  F0BC         	movff	?_clust2sect+2,reserve_direntry@sector+2
 10249  00279E  C02A  F0BD         	movff	?_clust2sect+3,reserve_direntry@sector+3
 10250  0027A2  EE20 F004          	lfsr	2,4
 10251  0027A6  51C4               	movf	reserve_direntry@fs& (0+255),w,b
 10252  0027A8  26D9               	addwf	fsr2l,f,c
 10253  0027AA  51C5               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 10254  0027AC  22DA               	addwfc	fsr2h,f,c
 10255  0027AE  C0BA  FFDE         	movff	reserve_direntry@sector,postinc2
 10256  0027B2  C0BB  FFDE         	movff	reserve_direntry@sector+1,postinc2
 10257  0027B6  C0BC  FFDE         	movff	reserve_direntry@sector+2,postinc2
 10258  0027BA  C0BD  FFDE         	movff	reserve_direntry@sector+3,postinc2
 10259                           
 10260                           ;tff.c: 603: memset(fs->win, 0, 512U);
 10261  0027BE  0E20               	movlw	32
 10262  0027C0  25C4               	addwf	reserve_direntry@fs& (0+255),w,b
 10263  0027C2  6E1B               	movwf	memset@p1^0,c
 10264  0027C4  0E00               	movlw	0
 10265  0027C6  21C5               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 10266  0027C8  6E1C               	movwf	(memset@p1+1)^0,c
 10267  0027CA  0E00               	movlw	0
 10268  0027CC  6E1E               	movwf	(memset@c+1)^0,c
 10269  0027CE  0E00               	movlw	0
 10270  0027D0  6E1D               	movwf	memset@c^0,c
 10271  0027D2  0E02               	movlw	2
 10272  0027D4  6E20               	movwf	(memset@n+1)^0,c
 10273  0027D6  0E00               	movlw	0
 10274  0027D8  6E1F               	movwf	memset@n^0,c
 10275  0027DA  ECC5  F027         	call	_memset	;wreg free
 10276                           
 10277                           ;tff.c: 604: for (n = fs->csize; n; n--) {
 10278  0027DE  0100               	movlb	0	; () banked
 10279  0027E0  EE20 F01D          	lfsr	2,29
 10280  0027E4  51C4               	movf	reserve_direntry@fs& (0+255),w,b
 10281  0027E6  26D9               	addwf	fsr2l,f,c
 10282  0027E8  51C5               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 10283  0027EA  22DA               	addwfc	fsr2h,f,c
 10284  0027EC  50DF               	movf	indf2,w,c
 10285  0027EE  6FBE               	movwf	reserve_direntry@n& (0+255),b
 10286  0027F0  D01D               	goto	l10487
 10287  0027F2                     l10477:
 10288                           
 10289                           ; BSR set to: 0
 10290                           ;tff.c: 605: if (disk_write(0, fs->win, sector, 1) != RES_OK)
 10291  0027F2  0E20               	movlw	32
 10292  0027F4  25C4               	addwf	reserve_direntry@fs& (0+255),w,b
 10293  0027F6  6F6D               	movwf	disk_write@buff& (0+255),b
 10294  0027F8  0E00               	movlw	0
 10295  0027FA  21C5               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 10296  0027FC  6F6E               	movwf	(disk_write@buff+1)& (0+255),b
 10297  0027FE  C0BA  F06F         	movff	reserve_direntry@sector,disk_write@sector
 10298  002802  C0BB  F070         	movff	reserve_direntry@sector+1,disk_write@sector+1
 10299  002806  C0BC  F071         	movff	reserve_direntry@sector+2,disk_write@sector+2
 10300  00280A  C0BD  F072         	movff	reserve_direntry@sector+3,disk_write@sector+3
 10301  00280E  0E01               	movlw	1
 10302  002810  6F73               	movwf	disk_write@count& (0+255),b
 10303  002812  0E00               	movlw	0
 10304  002814  ECF2  F025         	call	_disk_write
 10305  002818  0900               	iorlw	0
 10306  00281A  A4D8               	btfss	status,2,c
 10307  00281C  D74A               	goto	u12800
 10308                           
 10309                           ; BSR set to: 0
 10310                           ;tff.c: 607: sector++;
 10311  00281E  0E01               	movlw	1
 10312  002820  27BA               	addwf	reserve_direntry@sector& (0+255),f,b
 10313  002822  0E00               	movlw	0
 10314  002824  23BB               	addwfc	(reserve_direntry@sector+1)& (0+255),f,b
 10315  002826  23BC               	addwfc	(reserve_direntry@sector+2)& (0+255),f,b
 10316  002828  23BD               	addwfc	(reserve_direntry@sector+3)& (0+255),f,b
 10317                           
 10318                           ; BSR set to: 0
 10319  00282A  07BE               	decf	reserve_direntry@n& (0+255),f,b
 10320  00282C                     l10487:
 10321                           
 10322                           ; BSR set to: 0
 10323  00282C  51BE               	movf	reserve_direntry@n& (0+255),w,b
 10324  00282E  A4D8               	btfss	status,2,c
 10325  002830  D7E0               	goto	l10477
 10326                           
 10327                           ; BSR set to: 0
 10328                           ;tff.c: 608: };tff.c: 609: fs->winflag = 1;
 10329  002832  EE20 F01F          	lfsr	2,31
 10330  002836  51C4               	movf	reserve_direntry@fs& (0+255),w,b
 10331  002838  26D9               	addwf	fsr2l,f,c
 10332  00283A  51C5               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 10333  00283C  22DA               	addwfc	fsr2h,f,c
 10334  00283E  0E01               	movlw	1
 10335  002840  6EDF               	movwf	indf2,c
 10336                           
 10337                           ;tff.c: 610: *dir = fs->win;
 10338  002842  0E20               	movlw	32
 10339  002844  25C4               	addwf	reserve_direntry@fs& (0+255),w,b
 10340  002846  6FB6               	movwf	??_reserve_direntry& (0+255),b
 10341  002848  0E00               	movlw	0
 10342  00284A  21C5               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 10343  00284C  6FB7               	movwf	(??_reserve_direntry+1)& (0+255),b
 10344  00284E  51B5               	movf	reserve_direntry@dir& (0+255),w,b
 10345  002850  6ED9               	movwf	fsr2l,c
 10346  002852  6ADA               	clrf	fsr2h,c
 10347  002854  C0B6  FFDE         	movff	??_reserve_direntry,postinc2
 10348  002858  C0B7  FFDD         	movff	??_reserve_direntry+1,postdec2
 10349  00285C  D761               	goto	l10451
 10350  00285E                     __end_of_reserve_direntry:
 10351                           	callstack 0
 10352                           
 10353 ;; *************** function _next_dir_entry *****************
 10354 ;; Defined at:
 10355 ;;		line 358 in file "bibliotecas/tff.c"
 10356 ;; Parameters:    Size  Location     Type
 10357 ;;  dj              1   67[BANK0 ] PTR struct _DIR_E
 10358 ;;		 -> f_open@dj(14), 
 10359 ;; Auto vars:     Size  Location     Type
 10360 ;;  idx             2   77[BANK0 ] unsigned short 
 10361 ;;  clust           2   75[BANK0 ] unsigned short 
 10362 ;; Return value:  Size  Location     Type
 10363 ;;                  1    wreg      enum E105
 10364 ;; Registers used:
 10365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10366 ;; Tracked objects:
 10367 ;;		On entry : 0/0
 10368 ;;		On exit  : 3F/0
 10369 ;;		Unchanged: 0/0
 10370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10371 ;;      Params:         0       1       0       0       0       0       0       0       0
 10372 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10373 ;;      Temps:          0       7       0       0       0       0       0       0       0
 10374 ;;      Totals:         0      12       0       0       0       0       0       0       0
 10375 ;;Total ram usage:       12 bytes
 10376 ;; Hardware stack levels used: 1
 10377 ;; Hardware stack levels required when called: 10
 10378 ;; This function calls:
 10379 ;;		_clust2sect
 10380 ;;		_get_cluster
 10381 ;; This function is called by:
 10382 ;;		_trace_path
 10383 ;;		_reserve_direntry
 10384 ;; This function uses a non-reentrant model
 10385 ;;
 10386                           
 10387                           	psect	text41
 10388  003438                     __ptext41:
 10389                           	callstack 0
 10390  003438                     _next_dir_entry:
 10391                           	callstack 15
 10392                           
 10393                           ;tff.c: 362: CLUST clust;;tff.c: 363: WORD idx;;tff.c: 366: idx = dj->index + 1;
 10394                           
 10395                           ; BSR set to: 0
 10396                           ;incstack = 0
 10397  003438  0100               	movlb	0	; () banked
 10398  00343A  51A3               	movf	next_dir_entry@dj& (0+255),w,b
 10399  00343C  6ED9               	movwf	fsr2l,c
 10400  00343E  6ADA               	clrf	fsr2h,c
 10401  003440  0E02               	movlw	2
 10402  003442  26D9               	addwf	fsr2l,f,c
 10403  003444  CFDE F0A4          	movff	postinc2,??_next_dir_entry
 10404  003448  CFDD F0A5          	movff	postdec2,??_next_dir_entry+1
 10405  00344C  0E01               	movlw	1
 10406  00344E  25A4               	addwf	??_next_dir_entry& (0+255),w,b
 10407  003450  6FAD               	movwf	next_dir_entry@idx& (0+255),b
 10408  003452  0E00               	movlw	0
 10409  003454  21A5               	addwfc	(??_next_dir_entry+1)& (0+255),w,b
 10410  003456  6FAE               	movwf	(next_dir_entry@idx+1)& (0+255),b
 10411                           
 10412                           ; BSR set to: 0
 10413                           ;tff.c: 367: if ((idx & 15) == 0) {
 10414  003458  C0AD  F0A4         	movff	next_dir_entry@idx,??_next_dir_entry
 10415  00345C  0E0F               	movlw	15
 10416  00345E  17A4               	andwf	??_next_dir_entry& (0+255),f,b
 10417  003460  A4D8               	btfss	status,2,c
 10418  003462  D091               	goto	l10081
 10419                           
 10420                           ; BSR set to: 0
 10421                           ;tff.c: 368: dj->sect++;
 10422  003464  51A3               	movf	next_dir_entry@dj& (0+255),w,b
 10423  003466  6ED9               	movwf	fsr2l,c
 10424  003468  6ADA               	clrf	fsr2h,c
 10425  00346A  0E0A               	movlw	10
 10426  00346C  26D9               	addwf	fsr2l,f,c
 10427  00346E  2ADE               	incf	postinc2,f,c
 10428  003470  0E00               	movlw	0
 10429  003472  22DE               	addwfc	postinc2,f,c
 10430  003474  22DE               	addwfc	postinc2,f,c
 10431  003476  22DE               	addwfc	postinc2,f,c
 10432                           
 10433                           ;tff.c: 369: if (dj->clust == 0) {
 10434  003478  51A3               	movf	next_dir_entry@dj& (0+255),w,b
 10435  00347A  6ED9               	movwf	fsr2l,c
 10436  00347C  6ADA               	clrf	fsr2h,c
 10437  00347E  0E08               	movlw	8
 10438  003480  26D9               	addwf	fsr2l,f,c
 10439  003482  50DE               	movf	postinc2,w,c
 10440  003484  10DE               	iorwf	postinc2,w,c
 10441  003486  A4D8               	btfss	status,2,c
 10442  003488  D013               	goto	l10065
 10443                           
 10444                           ; BSR set to: 0
 10445                           ;tff.c: 370: if (idx >= dj->fs->n_rootdir) return FALSE;
 10446  00348A  51A3               	movf	next_dir_entry@dj& (0+255),w,b
 10447  00348C  6ED9               	movwf	fsr2l,c
 10448  00348E  6ADA               	clrf	fsr2h,c
 10449  003490  0E04               	movlw	4
 10450  003492  26D9               	addwf	fsr2l,f,c
 10451  003494  EE10 F002          	lfsr	1,2
 10452  003498  50DE               	movf	postinc2,w,c
 10453  00349A  26E1               	addwf	fsr1l,f,c
 10454  00349C  50DD               	movf	postdec2,w,c
 10455  00349E  22E2               	addwfc	fsr1h,f,c
 10456  0034A0  50E6               	movf	postinc1,w,c
 10457  0034A2  5DAD               	subwf	next_dir_entry@idx& (0+255),w,b
 10458  0034A4  50E6               	movf	postinc1,w,c
 10459  0034A6  59AE               	subwfb	(next_dir_entry@idx+1)& (0+255),w,b
 10460  0034A8  A0D8               	btfss	status,0,c
 10461  0034AA  D06D               	goto	l10081
 10462  0034AC                     u12110:
 10463                           
 10464                           ; BSR set to: 0
 10465  0034AC  0E00               	movlw	0
 10466  0034AE  0012               	return	
 10467  0034B0                     l10065:
 10468                           
 10469                           ; BSR set to: 0
 10470                           ;tff.c: 372: if (((idx / 16) & (dj->fs->csize - 1)) == 0) {
 10471  0034B0  C0AD  F0A4         	movff	next_dir_entry@idx,??_next_dir_entry
 10472  0034B4  C0AE  F0A5         	movff	next_dir_entry@idx+1,??_next_dir_entry+1
 10473  0034B8  0E04               	movlw	4
 10474  0034BA  6FA6               	movwf	(??_next_dir_entry+2)& (0+255),b
 10475  0034BC                     u12125:
 10476  0034BC  90D8               	bcf	status,0,c
 10477  0034BE  33A5               	rrcf	(??_next_dir_entry+1)& (0+255),f,b
 10478  0034C0  33A4               	rrcf	??_next_dir_entry& (0+255),f,b
 10479  0034C2  2FA6               	decfsz	(??_next_dir_entry+2)& (0+255),f,b
 10480  0034C4  D7FB               	goto	u12125
 10481  0034C6  0EFF               	movlw	255
 10482  0034C8  6FA7               	movwf	(??_next_dir_entry+3)& (0+255),b
 10483  0034CA  0EFF               	movlw	255
 10484  0034CC  6FA8               	movwf	(??_next_dir_entry+4)& (0+255),b
 10485  0034CE  51A3               	movf	next_dir_entry@dj& (0+255),w,b
 10486  0034D0  6ED9               	movwf	fsr2l,c
 10487  0034D2  6ADA               	clrf	fsr2h,c
 10488  0034D4  0E04               	movlw	4
 10489  0034D6  26D9               	addwf	fsr2l,f,c
 10490  0034D8  EE10 F01D          	lfsr	1,29
 10491  0034DC  50DE               	movf	postinc2,w,c
 10492  0034DE  26E1               	addwf	fsr1l,f,c
 10493  0034E0  50DD               	movf	postdec2,w,c
 10494  0034E2  22E2               	addwfc	fsr1h,f,c
 10495  0034E4  50E7               	movf	indf1,w,c
 10496  0034E6  6FA9               	movwf	(??_next_dir_entry+5)& (0+255),b
 10497  0034E8  6BAA               	clrf	(??_next_dir_entry+6)& (0+255),b
 10498  0034EA  51A7               	movf	(??_next_dir_entry+3)& (0+255),w,b
 10499  0034EC  27A9               	addwf	(??_next_dir_entry+5)& (0+255),f,b
 10500  0034EE  51A8               	movf	(??_next_dir_entry+4)& (0+255),w,b
 10501  0034F0  23AA               	addwfc	(??_next_dir_entry+6)& (0+255),f,b
 10502  0034F2  51A4               	movf	??_next_dir_entry& (0+255),w,b
 10503  0034F4  17A9               	andwf	(??_next_dir_entry+5)& (0+255),f,b
 10504  0034F6  51A5               	movf	(??_next_dir_entry+1)& (0+255),w,b
 10505  0034F8  17AA               	andwf	(??_next_dir_entry+6)& (0+255),f,b
 10506  0034FA  51A9               	movf	(??_next_dir_entry+5)& (0+255),w,b
 10507  0034FC  11AA               	iorwf	(??_next_dir_entry+6)& (0+255),w,b
 10508  0034FE  A4D8               	btfss	status,2,c
 10509  003500  D042               	goto	l10081
 10510                           
 10511                           ; BSR set to: 0
 10512                           ;tff.c: 373: clust = get_cluster(dj->clust);
 10513  003502  51A3               	movf	next_dir_entry@dj& (0+255),w,b
 10514  003504  6ED9               	movwf	fsr2l,c
 10515  003506  6ADA               	clrf	fsr2h,c
 10516  003508  0E08               	movlw	8
 10517  00350A  26D9               	addwf	fsr2l,f,c
 10518  00350C  CFDE F08E          	movff	postinc2,get_cluster@clust
 10519  003510  CFDD F08F          	movff	postdec2,get_cluster@clust+1
 10520  003514  EC94  F016         	call	_get_cluster	;wreg free
 10521  003518  C08E  F0AB         	movff	?_get_cluster,next_dir_entry@clust
 10522  00351C  C08F  F0AC         	movff	?_get_cluster+1,next_dir_entry@clust+1
 10523                           
 10524                           ; BSR set to: 0
 10525                           ;tff.c: 374: if (clust < 2 || clust >= dj->fs->max_clust)
 10526  003520  51AC               	movf	(next_dir_entry@clust+1)& (0+255),w,b
 10527  003522  E104               	bnz	u12140
 10528  003524  0E02               	movlw	2
 10529  003526  5DAB               	subwf	next_dir_entry@clust& (0+255),w,b
 10530  003528  A0D8               	btfss	status,0,c
 10531  00352A  D7C0               	goto	u12110
 10532  00352C                     u12140:
 10533                           
 10534                           ; BSR set to: 0
 10535  00352C  51A3               	movf	next_dir_entry@dj& (0+255),w,b
 10536  00352E  6ED9               	movwf	fsr2l,c
 10537  003530  6ADA               	clrf	fsr2h,c
 10538  003532  0E04               	movlw	4
 10539  003534  26D9               	addwf	fsr2l,f,c
 10540  003536  EE10 F016          	lfsr	1,22
 10541  00353A  50DE               	movf	postinc2,w,c
 10542  00353C  26E1               	addwf	fsr1l,f,c
 10543  00353E  50DD               	movf	postdec2,w,c
 10544  003540  22E2               	addwfc	fsr1h,f,c
 10545  003542  50E6               	movf	postinc1,w,c
 10546  003544  5DAB               	subwf	next_dir_entry@clust& (0+255),w,b
 10547  003546  50E6               	movf	postinc1,w,c
 10548  003548  59AC               	subwfb	(next_dir_entry@clust+1)& (0+255),w,b
 10549  00354A  B0D8               	btfsc	status,0,c
 10550  00354C  D7AF               	goto	u12110
 10551                           
 10552                           ; BSR set to: 0
 10553                           ;tff.c: 376: dj->clust = clust;
 10554  00354E  51A3               	movf	next_dir_entry@dj& (0+255),w,b
 10555  003550  6ED9               	movwf	fsr2l,c
 10556  003552  6ADA               	clrf	fsr2h,c
 10557  003554  0E08               	movlw	8
 10558  003556  26D9               	addwf	fsr2l,f,c
 10559  003558  C0AB  FFDE         	movff	next_dir_entry@clust,postinc2
 10560  00355C  C0AC  FFDD         	movff	next_dir_entry@clust+1,postdec2
 10561                           
 10562                           ; BSR set to: 0
 10563                           ;tff.c: 377: dj->sect = clust2sect(clust);
 10564  003560  C0AB  F027         	movff	next_dir_entry@clust,clust2sect@clust
 10565  003564  C0AC  F028         	movff	next_dir_entry@clust+1,clust2sect@clust+1
 10566  003568  ECEE  F01F         	call	_clust2sect	;wreg free
 10567  00356C  51A3               	movf	next_dir_entry@dj& (0+255),w,b
 10568  00356E  6ED9               	movwf	fsr2l,c
 10569  003570  6ADA               	clrf	fsr2h,c
 10570  003572  0E0A               	movlw	10
 10571  003574  26D9               	addwf	fsr2l,f,c
 10572  003576  C027  FFDE         	movff	?_clust2sect,postinc2
 10573  00357A  C028  FFDE         	movff	?_clust2sect+1,postinc2
 10574  00357E  C029  FFDE         	movff	?_clust2sect+2,postinc2
 10575  003582  C02A  FFDE         	movff	?_clust2sect+3,postinc2
 10576  003586                     l10081:
 10577                           
 10578                           ; BSR set to: 0
 10579                           ;tff.c: 378: };tff.c: 379: };tff.c: 380: };tff.c: 381: dj->index = idx;
 10580  003586  51A3               	movf	next_dir_entry@dj& (0+255),w,b
 10581  003588  6ED9               	movwf	fsr2l,c
 10582  00358A  6ADA               	clrf	fsr2h,c
 10583  00358C  0E02               	movlw	2
 10584  00358E  26D9               	addwf	fsr2l,f,c
 10585  003590  C0AD  FFDE         	movff	next_dir_entry@idx,postinc2
 10586  003594  C0AE  FFDD         	movff	next_dir_entry@idx+1,postdec2
 10587                           
 10588                           ; BSR set to: 0
 10589                           ;tff.c: 382: return TRUE;
 10590  003598  0E01               	movlw	1
 10591                           
 10592                           ; BSR set to: 0
 10593  00359A  0012               	return		;funcret
 10594  00359C                     __end_of_next_dir_entry:
 10595                           	callstack 0
 10596                           
 10597 ;; *************** function _clust2sect *****************
 10598 ;; Defined at:
 10599 ;;		line 338 in file "bibliotecas/tff.c"
 10600 ;; Parameters:    Size  Location     Type
 10601 ;;  clust           2   38[COMRAM] unsigned short 
 10602 ;; Auto vars:     Size  Location     Type
 10603 ;;  fs              2    5[BANK0 ] PTR struct _FATFS
 10604 ;;		 -> NULL(0), fs(544), 
 10605 ;; Return value:  Size  Location     Type
 10606 ;;                  4   38[COMRAM] unsigned long 
 10607 ;; Registers used:
 10608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10609 ;; Tracked objects:
 10610 ;;		On entry : 3F/0
 10611 ;;		On exit  : 3F/0
 10612 ;;		Unchanged: 0/0
 10613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10614 ;;      Params:         4       0       0       0       0       0       0       0       0
 10615 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10616 ;;      Temps:          0       5       0       0       0       0       0       0       0
 10617 ;;      Totals:         4       7       0       0       0       0       0       0       0
 10618 ;;Total ram usage:       11 bytes
 10619 ;; Hardware stack levels used: 1
 10620 ;; Hardware stack levels required when called: 4
 10621 ;; This function calls:
 10622 ;;		___lmul
 10623 ;; This function is called by:
 10624 ;;		_next_dir_entry
 10625 ;;		_trace_path
 10626 ;;		_reserve_direntry
 10627 ;;		_f_write
 10628 ;;		_f_read
 10629 ;; This function uses a non-reentrant model
 10630 ;;
 10631                           
 10632                           	psect	text42
 10633  003FDC                     __ptext42:
 10634                           	callstack 0
 10635  003FDC                     _clust2sect:
 10636                           	callstack 19
 10637                           
 10638                           ; BSR set to: 0
 10639                           ;tff.c: 342: FATFS *fs = FatFs;
 10640                           
 10641                           ; BSR set to: 0
 10642                           ;incstack = 0
 10643  003FDC  C0F9  F065         	movff	_FatFs,clust2sect@fs
 10644  003FE0  C0FA  F066         	movff	_FatFs+1,clust2sect@fs+1
 10645                           
 10646                           ;tff.c: 345: clust -= 2;
 10647  003FE4  0E02               	movlw	2
 10648  003FE6  5E27               	subwf	clust2sect@clust^0,f,c
 10649  003FE8  0E00               	movlw	0
 10650  003FEA  5A28               	subwfb	(clust2sect@clust+1)^0,f,c
 10651                           
 10652                           ; BSR set to: 0
 10653                           ;tff.c: 346: if (clust >= (fs->max_clust - 2)) return 0;
 10654  003FEC  0EFE               	movlw	254
 10655  003FEE  6F60               	movwf	??_clust2sect& (0+255),b
 10656  003FF0  0EFF               	movlw	255
 10657  003FF2  6F61               	movwf	(??_clust2sect+1)& (0+255),b
 10658  003FF4  EE20 F016          	lfsr	2,22
 10659  003FF8  5165               	movf	clust2sect@fs& (0+255),w,b
 10660  003FFA  26D9               	addwf	fsr2l,f,c
 10661  003FFC  5166               	movf	(clust2sect@fs+1)& (0+255),w,b
 10662  003FFE  22DA               	addwfc	fsr2h,f,c
 10663  004000  CFDE F062          	movff	postinc2,??_clust2sect+2
 10664  004004  CFDD F063          	movff	postdec2,??_clust2sect+3
 10665  004008  5160               	movf	??_clust2sect& (0+255),w,b
 10666  00400A  2762               	addwf	(??_clust2sect+2)& (0+255),f,b
 10667  00400C  5161               	movf	(??_clust2sect+1)& (0+255),w,b
 10668  00400E  2363               	addwfc	(??_clust2sect+3)& (0+255),f,b
 10669  004010  5162               	movf	(??_clust2sect+2)& (0+255),w,b
 10670  004012  5C27               	subwf	clust2sect@clust^0,w,c
 10671  004014  5163               	movf	(??_clust2sect+3)& (0+255),w,b
 10672  004016  5828               	subwfb	(clust2sect@clust+1)^0,w,c
 10673  004018  A0D8               	btfss	status,0,c
 10674  00401A  D009               	goto	l9677
 10675                           
 10676                           ; BSR set to: 0
 10677  00401C  0E00               	movlw	0
 10678  00401E  6E27               	movwf	?_clust2sect^0,c
 10679  004020  0E00               	movlw	0
 10680  004022  6E28               	movwf	(?_clust2sect+1)^0,c
 10681  004024  0E00               	movlw	0
 10682  004026  6E29               	movwf	(?_clust2sect+2)^0,c
 10683  004028  0E00               	movlw	0
 10684  00402A  6E2A               	movwf	(?_clust2sect+3)^0,c
 10685  00402C  0012               	return	
 10686  00402E                     l9677:
 10687                           
 10688                           ; BSR set to: 0
 10689                           ;tff.c: 347: return (DWORD)clust * fs->csize + fs->database;
 10690  00402E  EE20 F010          	lfsr	2,16
 10691  004032  5165               	movf	clust2sect@fs& (0+255),w,b
 10692  004034  26D9               	addwf	fsr2l,f,c
 10693  004036  5166               	movf	(clust2sect@fs+1)& (0+255),w,b
 10694  004038  22DA               	addwfc	fsr2h,f,c
 10695  00403A  CFDE F060          	movff	postinc2,??_clust2sect
 10696  00403E  CFDE F061          	movff	postinc2,??_clust2sect+1
 10697  004042  CFDE F062          	movff	postinc2,??_clust2sect+2
 10698  004046  CFDE F063          	movff	postinc2,??_clust2sect+3
 10699  00404A  C027  F01B         	movff	clust2sect@clust,___lmul@multiplier
 10700  00404E  C028  F01C         	movff	clust2sect@clust+1,___lmul@multiplier+1
 10701  004052  6A1D               	clrf	(___lmul@multiplier+2)^0,c
 10702  004054  6A1E               	clrf	(___lmul@multiplier+3)^0,c
 10703  004056  EE20 F01D          	lfsr	2,29
 10704  00405A  5165               	movf	clust2sect@fs& (0+255),w,b
 10705  00405C  26D9               	addwf	fsr2l,f,c
 10706  00405E  5166               	movf	(clust2sect@fs+1)& (0+255),w,b
 10707  004060  22DA               	addwfc	fsr2h,f,c
 10708  004062  50DF               	movf	indf2,w,c
 10709  004064  6F64               	movwf	(??_clust2sect+4)& (0+255),b
 10710  004066  5164               	movf	(??_clust2sect+4)& (0+255),w,b
 10711  004068  6E1F               	movwf	___lmul@multiplicand^0,c
 10712  00406A  6A20               	clrf	(___lmul@multiplicand+1)^0,c
 10713  00406C  6A21               	clrf	(___lmul@multiplicand+2)^0,c
 10714  00406E  6A22               	clrf	(___lmul@multiplicand+3)^0,c
 10715  004070  EC4C  F025         	call	___lmul	;wreg free
 10716  004074  5160               	movf	??_clust2sect& (0+255),w,b
 10717  004076  241B               	addwf	?___lmul^0,w,c
 10718  004078  6E27               	movwf	?_clust2sect^0,c
 10719  00407A  5161               	movf	(??_clust2sect+1)& (0+255),w,b
 10720  00407C  201C               	addwfc	(?___lmul+1)^0,w,c
 10721  00407E  6E28               	movwf	(?_clust2sect+1)^0,c
 10722  004080  5162               	movf	(??_clust2sect+2)& (0+255),w,b
 10723  004082  201D               	addwfc	(?___lmul+2)^0,w,c
 10724  004084  6E29               	movwf	(?_clust2sect+2)^0,c
 10725  004086  5163               	movf	(??_clust2sect+3)& (0+255),w,b
 10726  004088  201E               	addwfc	(?___lmul+3)^0,w,c
 10727  00408A  6E2A               	movwf	(?_clust2sect+3)^0,c
 10728                           
 10729                           ; BSR set to: 0
 10730  00408C  0012               	return		;funcret
 10731  00408E                     __end_of_clust2sect:
 10732                           	callstack 0
 10733                           
 10734 ;; *************** function _remove_chain *****************
 10735 ;; Defined at:
 10736 ;;		line 249 in file "bibliotecas/tff.c"
 10737 ;; Parameters:    Size  Location     Type
 10738 ;;  clust           2   70[BANK0 ] unsigned short 
 10739 ;; Auto vars:     Size  Location     Type
 10740 ;;  fs              2   76[BANK0 ] PTR struct _FATFS
 10741 ;;		 -> NULL(0), fs(544), 
 10742 ;;  nxt             2   74[BANK0 ] unsigned short 
 10743 ;; Return value:  Size  Location     Type
 10744 ;;                  1    wreg      enum E105
 10745 ;; Registers used:
 10746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10747 ;; Tracked objects:
 10748 ;;		On entry : 3F/0
 10749 ;;		On exit  : 3F/0
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10752 ;;      Params:         0       2       0       0       0       0       0       0       0
 10753 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10754 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10755 ;;      Totals:         0       8       0       0       0       0       0       0       0
 10756 ;;Total ram usage:        8 bytes
 10757 ;; Hardware stack levels used: 1
 10758 ;; Hardware stack levels required when called: 10
 10759 ;; This function calls:
 10760 ;;		_get_cluster
 10761 ;;		_put_cluster
 10762 ;; This function is called by:
 10763 ;;		_f_open
 10764 ;; This function uses a non-reentrant model
 10765 ;;
 10766                           
 10767                           	psect	text43
 10768  004270                     __ptext43:
 10769                           	callstack 0
 10770  004270                     _remove_chain:
 10771                           	callstack 16
 10772                           
 10773                           ; BSR set to: 0
 10774                           ;tff.c: 253: CLUST nxt;;tff.c: 254: FATFS *fs = FatFs;
 10775                           
 10776                           ; BSR set to: 0
 10777                           ;incstack = 0
 10778  004270  C0F9  F0AC         	movff	_FatFs,remove_chain@fs
 10779  004274  C0FA  F0AD         	movff	_FatFs+1,remove_chain@fs+1
 10780                           
 10781                           ;tff.c: 257: while (clust >= 2 && clust < fs->max_clust) {
 10782  004278  D035               	goto	l10329
 10783  00427A                     l10309:
 10784                           
 10785                           ; BSR set to: 0
 10786                           ;tff.c: 258: nxt = get_cluster(clust);
 10787  00427A  C0A6  F08E         	movff	remove_chain@clust,get_cluster@clust
 10788  00427E  C0A7  F08F         	movff	remove_chain@clust+1,get_cluster@clust+1
 10789  004282  EC94  F016         	call	_get_cluster	;wreg free
 10790  004286  C08E  F0AA         	movff	?_get_cluster,remove_chain@nxt
 10791  00428A  C08F  F0AB         	movff	?_get_cluster+1,remove_chain@nxt+1
 10792                           
 10793                           ; BSR set to: 0
 10794                           ;tff.c: 259: if (nxt == 1) return FALSE;
 10795  00428E  05AA               	decf	remove_chain@nxt& (0+255),w,b
 10796  004290  11AB               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 10797  004292  A4D8               	btfss	status,2,c
 10798  004294  D002               	goto	l10317
 10799  004296                     u12600:
 10800                           
 10801                           ; BSR set to: 0
 10802  004296  0E00               	movlw	0
 10803  004298  0012               	return	
 10804  00429A                     l10317:
 10805                           
 10806                           ; BSR set to: 0
 10807                           ;tff.c: 260: if (!put_cluster(clust, 0)) return FALSE;
 10808  00429A  C0A6  F08E         	movff	remove_chain@clust,put_cluster@clust
 10809  00429E  C0A7  F08F         	movff	remove_chain@clust+1,put_cluster@clust+1
 10810  0042A2  0E00               	movlw	0
 10811  0042A4  6F91               	movwf	(put_cluster@val+1)& (0+255),b
 10812  0042A6  0E00               	movlw	0
 10813  0042A8  6F90               	movwf	put_cluster@val& (0+255),b
 10814  0042AA  EC2F  F014         	call	_put_cluster	;wreg free
 10815  0042AE  0900               	iorlw	0
 10816  0042B0  B4D8               	btfsc	status,2,c
 10817  0042B2  D7F1               	goto	u12600
 10818                           
 10819                           ; BSR set to: 0
 10820                           ;tff.c: 261: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 10821  0042B4  EE20 F01A          	lfsr	2,26
 10822  0042B8  51AC               	movf	remove_chain@fs& (0+255),w,b
 10823  0042BA  26D9               	addwf	fsr2l,f,c
 10824  0042BC  51AD               	movf	(remove_chain@fs+1)& (0+255),w,b
 10825  0042BE  22DA               	addwfc	fsr2h,f,c
 10826  0042C0  28DE               	incf	postinc2,w,c
 10827  0042C2  E103               	bnz	u12620
 10828  0042C4  28DE               	incf	postinc2,w,c
 10829  0042C6  B4D8               	btfsc	status,2,c
 10830  0042C8  D009               	goto	l10327
 10831  0042CA                     u12620:
 10832                           
 10833                           ; BSR set to: 0
 10834                           ;tff.c: 262: fs->free_clust++;
 10835  0042CA  EE20 F01A          	lfsr	2,26
 10836  0042CE  51AC               	movf	remove_chain@fs& (0+255),w,b
 10837  0042D0  26D9               	addwf	fsr2l,f,c
 10838  0042D2  51AD               	movf	(remove_chain@fs+1)& (0+255),w,b
 10839  0042D4  22DA               	addwfc	fsr2h,f,c
 10840  0042D6  2ADE               	incf	postinc2,f,c
 10841  0042D8  0E00               	movlw	0
 10842  0042DA  22DD               	addwfc	postdec2,f,c
 10843  0042DC                     l10327:
 10844                           
 10845                           ; BSR set to: 0
 10846                           ;tff.c: 266: };tff.c: 267: clust = nxt;
 10847  0042DC  C0AA  F0A6         	movff	remove_chain@nxt,remove_chain@clust
 10848  0042E0  C0AB  F0A7         	movff	remove_chain@nxt+1,remove_chain@clust+1
 10849  0042E4                     l10329:
 10850                           
 10851                           ; BSR set to: 0
 10852  0042E4  51A7               	movf	(remove_chain@clust+1)& (0+255),w,b
 10853  0042E6  E104               	bnz	u12630
 10854  0042E8  0E02               	movlw	2
 10855  0042EA  5DA6               	subwf	remove_chain@clust& (0+255),w,b
 10856  0042EC  A0D8               	btfss	status,0,c
 10857  0042EE  D00C               	goto	u12640
 10858  0042F0                     u12630:
 10859                           
 10860                           ; BSR set to: 0
 10861  0042F0  EE20 F016          	lfsr	2,22
 10862  0042F4  51AC               	movf	remove_chain@fs& (0+255),w,b
 10863  0042F6  26D9               	addwf	fsr2l,f,c
 10864  0042F8  51AD               	movf	(remove_chain@fs+1)& (0+255),w,b
 10865  0042FA  22DA               	addwfc	fsr2h,f,c
 10866  0042FC  50DE               	movf	postinc2,w,c
 10867  0042FE  5DA6               	subwf	remove_chain@clust& (0+255),w,b
 10868  004300  50DE               	movf	postinc2,w,c
 10869  004302  59A7               	subwfb	(remove_chain@clust+1)& (0+255),w,b
 10870  004304  A0D8               	btfss	status,0,c
 10871  004306  D7B9               	goto	l10309
 10872  004308                     u12640:
 10873                           
 10874                           ; BSR set to: 0
 10875                           ;tff.c: 268: };tff.c: 269: return TRUE;
 10876  004308  0E01               	movlw	1
 10877                           
 10878                           ; BSR set to: 0
 10879  00430A  0012               	return		;funcret
 10880  00430C                     __end_of_remove_chain:
 10881                           	callstack 0
 10882                           
 10883 ;; *************** function _memcpy *****************
 10884 ;; Defined at:
 10885 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memcpy.c"
 10886 ;; Parameters:    Size  Location     Type
 10887 ;;  d1              2   26[COMRAM] PTR void 
 10888 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 10889 ;;  s1              2   28[COMRAM] PTR const void 
 10890 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 10891 ;;		 -> fs(544), 
 10892 ;;  n               2   30[COMRAM] unsigned int 
 10893 ;; Auto vars:     Size  Location     Type
 10894 ;;  s               2   35[COMRAM] PTR const unsigned char 
 10895 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 10896 ;;		 -> fs(544), 
 10897 ;;  d               2   33[COMRAM] PTR unsigned char 
 10898 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 10899 ;;  tmp             1   32[COMRAM] unsigned char 
 10900 ;; Return value:  Size  Location     Type
 10901 ;;                  2   26[COMRAM] PTR void 
 10902 ;; Registers used:
 10903 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10904 ;; Tracked objects:
 10905 ;;		On entry : 0/0
 10906 ;;		On exit  : 0/0
 10907 ;;		Unchanged: 0/0
 10908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10909 ;;      Params:         6       0       0       0       0       0       0       0       0
 10910 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10911 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10912 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10913 ;;Total ram usage:       11 bytes
 10914 ;; Hardware stack levels used: 1
 10915 ;; Hardware stack levels required when called: 3
 10916 ;; This function calls:
 10917 ;;		Nothing
 10918 ;; This function is called by:
 10919 ;;		_f_open
 10920 ;;		_f_write
 10921 ;;		_f_read
 10922 ;; This function uses a non-reentrant model
 10923 ;;
 10924                           
 10925                           	psect	text44
 10926  004D54                     __ptext44:
 10927                           	callstack 0
 10928  004D54                     _memcpy:
 10929                           	callstack 20
 10930                           
 10931                           ; BSR set to: 0
 10932                           ;incstack = 0
 10933  004D54  C01D  F024         	movff	memcpy@s1,memcpy@s
 10934  004D58  C01E  F025         	movff	memcpy@s1+1,memcpy@s+1
 10935  004D5C  C01B  F022         	movff	memcpy@d1,memcpy@d
 10936  004D60  C01C  F023         	movff	memcpy@d1+1,memcpy@d+1
 10937  004D64  D010               	goto	l9711
 10938  004D66                     l9703:
 10939  004D66  C024  FFD9         	movff	memcpy@s,fsr2l
 10940  004D6A  C025  FFDA         	movff	memcpy@s+1,fsr2h
 10941  004D6E  50DF               	movf	indf2,w,c
 10942  004D70  6E21               	movwf	memcpy@tmp^0,c
 10943  004D72  4A24               	infsnz	memcpy@s^0,f,c
 10944  004D74  2A25               	incf	(memcpy@s+1)^0,f,c
 10945  004D76  C022  FFD9         	movff	memcpy@d,fsr2l
 10946  004D7A  C023  FFDA         	movff	memcpy@d+1,fsr2h
 10947  004D7E  C021  FFDF         	movff	memcpy@tmp,indf2
 10948  004D82  4A22               	infsnz	memcpy@d^0,f,c
 10949  004D84  2A23               	incf	(memcpy@d+1)^0,f,c
 10950  004D86                     l9711:
 10951  004D86  061F               	decf	memcpy@n^0,f,c
 10952  004D88  A0D8               	btfss	status,0,c
 10953  004D8A  0620               	decf	(memcpy@n+1)^0,f,c
 10954  004D8C  281F               	incf	memcpy@n^0,w,c
 10955  004D8E  E1EB               	bnz	l9703
 10956  004D90  2820               	incf	(memcpy@n+1)^0,w,c
 10957  004D92  B4D8               	btfsc	status,2,c
 10958  004D94  0012               	return	
 10959  004D96  D7E7               	goto	l9703
 10960  004D98                     __end_of_memcpy:
 10961                           	callstack 0
 10962                           
 10963 ;; *************** function _auto_mount *****************
 10964 ;; Defined at:
 10965 ;;		line 651 in file "bibliotecas/tff.c"
 10966 ;; Parameters:    Size  Location     Type
 10967 ;;  path            1   33[BANK0 ] PTR PTR const unsigned c
 10968 ;;		 -> f_opendir@path(2), f_open@path(2), 
 10969 ;;  chk_wp          1   34[BANK0 ] unsigned char 
 10970 ;; Auto vars:     Size  Location     Type
 10971 ;;  fatsize         4   73[BANK0 ] unsigned long 
 10972 ;;  totalsect       4   65[BANK0 ] unsigned long 
 10973 ;;  bootsect        4   61[BANK0 ] unsigned long 
 10974 ;;  maxclust        4   57[BANK0 ] unsigned long 
 10975 ;;  fs              2   77[BANK0 ] PTR struct _FATFS
 10976 ;;		 -> NULL(0), fs(544), 
 10977 ;;  p               2   69[BANK0 ] PTR const unsigned char 
 10978 ;;		 -> NULL(0), STR_25(13), string_dado.data(7), string_dado(59), 
 10979 ;;  stat            1   72[BANK0 ] unsigned char 
 10980 ;;  fmt             1   71[BANK0 ] unsigned char 
 10981 ;; Return value:  Size  Location     Type
 10982 ;;                  1    wreg      enum E155
 10983 ;; Registers used:
 10984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10985 ;; Tracked objects:
 10986 ;;		On entry : 3F/0
 10987 ;;		On exit  : 3E/0
 10988 ;;		Unchanged: 0/0
 10989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10990 ;;      Params:         0       2       0       0       0       0       0       0       0
 10991 ;;      Locals:         0      22       0       0       0       0       0       0       0
 10992 ;;      Temps:          0      22       0       0       0       0       0       0       0
 10993 ;;      Totals:         0      46       0       0       0       0       0       0       0
 10994 ;;Total ram usage:       46 bytes
 10995 ;; Hardware stack levels used: 1
 10996 ;; Hardware stack levels required when called: 9
 10997 ;; This function calls:
 10998 ;;		___lldiv
 10999 ;;		___lmul
 11000 ;;		_check_fs
 11001 ;;		_disk_initialize
 11002 ;;		_disk_status
 11003 ;;		_memset
 11004 ;; This function is called by:
 11005 ;;		_f_open
 11006 ;; This function uses a non-reentrant model
 11007 ;;
 11008                           
 11009                           	psect	text45
 11010  000D2C                     __ptext45:
 11011                           	callstack 0
 11012  000D2C                     _auto_mount:
 11013                           	callstack 17
 11014                           
 11015                           ; BSR set to: 0
 11016                           ;tff.c: 656: BYTE fmt;;tff.c: 657: DSTATUS stat;;tff.c: 658: DWORD bootsect, fatsize, to
      +                          talsect, maxclust;;tff.c: 659: const char *p = *path;
 11017                           
 11018                           ;incstack = 0
 11019  000D2C  5181               	movf	auto_mount@path& (0+255),w,b
 11020  000D2E  6ED9               	movwf	fsr2l,c
 11021  000D30  6ADA               	clrf	fsr2h,c
 11022  000D32  CFDE F0A5          	movff	postinc2,auto_mount@p
 11023  000D36  CFDD F0A6          	movff	postdec2,auto_mount@p+1
 11024                           
 11025                           ;tff.c: 660: FATFS *fs;;tff.c: 663: while (*p == ' ') p++;
 11026  000D3A  D003               	goto	l10499
 11027  000D3C                     l10497:
 11028  000D3C  0100               	movlb	0	; () banked
 11029  000D3E  4BA5               	infsnz	auto_mount@p& (0+255),f,b
 11030  000D40  2BA6               	incf	(auto_mount@p+1)& (0+255),f,b
 11031  000D42                     l10499:
 11032                           
 11033                           ; BSR set to: 0
 11034  000D42  C0A5  FFF6         	movff	auto_mount@p,tblptrl
 11035  000D46  C0A6  FFF7         	movff	auto_mount@p+1,tblptrh
 11036  000D4A  6AF8               	clrf	tblptru,c
 11037  000D4C  0E07               	movlw	(high __ramtop+-1)
 11038  000D4E  64F7               	cpfsgt	tblptrh,c
 11039  000D50  D003               	bra	u12917
 11040  000D52  0008               	tblrd		*
 11041  000D54  50F5               	movf	tablat,w,c
 11042  000D56  D005               	bra	u12910
 11043  000D58                     u12917:
 11044  000D58  CFF6 FFE1          	movff	tblptrl,fsr1l
 11045  000D5C  CFF7 FFE2          	movff	tblptrh,fsr1h
 11046  000D60  50E7               	movf	indf1,w,c
 11047  000D62                     u12910:
 11048  000D62  0A20               	xorlw	32
 11049  000D64  B4D8               	btfsc	status,2,c
 11050  000D66  D7EA               	goto	l10497
 11051                           
 11052                           ;tff.c: 664: if (*p == '/') p++;
 11053  000D68  C0A5  FFF6         	movff	auto_mount@p,tblptrl
 11054  000D6C  C0A6  FFF7         	movff	auto_mount@p+1,tblptrh
 11055  000D70  6AF8               	clrf	tblptru,c
 11056  000D72  0E07               	movlw	(high __ramtop+-1)
 11057  000D74  64F7               	cpfsgt	tblptrh,c
 11058  000D76  D003               	bra	u12937
 11059  000D78  0008               	tblrd		*
 11060  000D7A  50F5               	movf	tablat,w,c
 11061  000D7C  D005               	bra	u12930
 11062  000D7E                     u12937:
 11063  000D7E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11064  000D82  CFF7 FFE2          	movff	tblptrh,fsr1h
 11065  000D86  50E7               	movf	indf1,w,c
 11066  000D88                     u12930:
 11067  000D88  0A2F               	xorlw	47
 11068  000D8A  A4D8               	btfss	status,2,c
 11069  000D8C  D003               	goto	l10505
 11070  000D8E  0100               	movlb	0	; () banked
 11071  000D90  4BA5               	infsnz	auto_mount@p& (0+255),f,b
 11072  000D92  2BA6               	incf	(auto_mount@p+1)& (0+255),f,b
 11073  000D94                     l10505:
 11074                           
 11075                           ;tff.c: 665: *path = p;
 11076  000D94  0100               	movlb	0	; () banked
 11077  000D96  5181               	movf	auto_mount@path& (0+255),w,b
 11078  000D98  6ED9               	movwf	fsr2l,c
 11079  000D9A  6ADA               	clrf	fsr2h,c
 11080  000D9C  C0A5  FFDE         	movff	auto_mount@p,postinc2
 11081  000DA0  C0A6  FFDD         	movff	auto_mount@p+1,postdec2
 11082                           
 11083                           ; BSR set to: 0
 11084                           ;tff.c: 668: fs = FatFs;
 11085  000DA4  C0F9  F0AD         	movff	_FatFs,auto_mount@fs
 11086  000DA8  C0FA  F0AE         	movff	_FatFs+1,auto_mount@fs+1
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;tff.c: 669: if (!fs) return FR_NOT_ENABLED;
 11090  000DAC  51AD               	movf	auto_mount@fs& (0+255),w,b
 11091  000DAE  11AE               	iorwf	(auto_mount@fs+1)& (0+255),w,b
 11092  000DB0  A4D8               	btfss	status,2,c
 11093  000DB2  D002               	goto	l10515
 11094                           
 11095                           ; BSR set to: 0
 11096  000DB4  0E0A               	movlw	10
 11097  000DB6  0012               	return	
 11098  000DB8                     l10515:
 11099                           
 11100                           ; BSR set to: 0
 11101                           ;tff.c: 671: if (fs->fs_type) {
 11102  000DB8  EE20 F01C          	lfsr	2,28
 11103  000DBC  51AD               	movf	auto_mount@fs& (0+255),w,b
 11104  000DBE  26D9               	addwf	fsr2l,f,c
 11105  000DC0  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11106  000DC2  22DA               	addwfc	fsr2h,f,c
 11107  000DC4  50DF               	movf	indf2,w,c
 11108  000DC6  B4D8               	btfsc	status,2,c
 11109  000DC8  D00F               	goto	l10533
 11110                           
 11111                           ; BSR set to: 0
 11112                           ;tff.c: 672: stat = disk_status(0);
 11113  000DCA  0E00               	movlw	0
 11114  000DCC  EC97  F027         	call	_disk_status
 11115  000DD0  0100               	movlb	0	; () banked
 11116  000DD2  6FA8               	movwf	auto_mount@stat& (0+255),b
 11117                           
 11118                           ; BSR set to: 0
 11119                           ;tff.c: 673: if (!(stat & 0x01)) {
 11120  000DD4  B1A8               	btfsc	auto_mount@stat& (0+255),0,b
 11121  000DD6  D008               	goto	l10533
 11122                           
 11123                           ; BSR set to: 0
 11124                           ;tff.c: 675: if (chk_wp && (stat & 0x04))
 11125  000DD8  5182               	movf	auto_mount@chk_wp& (0+255),w,b
 11126  000DDA  A4D8               	btfss	status,2,c
 11127                           
 11128                           ; BSR set to: 0
 11129  000DDC  A5A8               	btfss	auto_mount@stat& (0+255),2,b
 11130  000DDE  D002               	goto	l10529
 11131  000DE0                     u12990:
 11132                           
 11133                           ; BSR set to: 0
 11134                           ;tff.c: 676: return FR_WRITE_PROTECTED;
 11135  000DE0  0E09               	movlw	9
 11136  000DE2  0012               	return	
 11137  000DE4                     l10529:
 11138                           
 11139                           ; BSR set to: 0
 11140                           ;tff.c: 678: return FR_OK;
 11141  000DE4  0E00               	movlw	0
 11142  000DE6  0012               	return	
 11143  000DE8                     l10533:
 11144                           
 11145                           ; BSR set to: 0
 11146                           ;tff.c: 679: };tff.c: 680: };tff.c: 684: memset(fs, 0, sizeof(FATFS));
 11147  000DE8  C0AD  F01B         	movff	auto_mount@fs,memset@p1
 11148  000DEC  C0AE  F01C         	movff	auto_mount@fs+1,memset@p1+1
 11149  000DF0  0E00               	movlw	0
 11150  000DF2  6E1E               	movwf	(memset@c+1)^0,c
 11151  000DF4  0E00               	movlw	0
 11152  000DF6  6E1D               	movwf	memset@c^0,c
 11153  000DF8  0E02               	movlw	2
 11154  000DFA  6E20               	movwf	(memset@n+1)^0,c
 11155  000DFC  0E20               	movlw	32
 11156  000DFE  6E1F               	movwf	memset@n^0,c
 11157  000E00  ECC5  F027         	call	_memset	;wreg free
 11158                           
 11159                           ;tff.c: 685: stat = disk_initialize(0);
 11160  000E04  0E00               	movlw	0
 11161  000E06  ECDB  F027         	call	_disk_initialize
 11162  000E0A  6FA8               	movwf	auto_mount@stat& (0+255),b
 11163                           
 11164                           ; BSR set to: 0
 11165                           ;tff.c: 686: if (stat & 0x01)
 11166  000E0C  A1A8               	btfss	auto_mount@stat& (0+255),0,b
 11167  000E0E  D002               	goto	l10543
 11168                           
 11169                           ; BSR set to: 0
 11170                           ;tff.c: 687: return FR_NOT_READY;
 11171  000E10  0E01               	movlw	1
 11172  000E12  0012               	return	
 11173  000E14                     l10543:
 11174                           
 11175                           ; BSR set to: 0
 11176                           ;tff.c: 689: if (chk_wp && (stat & 0x04))
 11177  000E14  5182               	movf	auto_mount@chk_wp& (0+255),w,b
 11178  000E16  B4D8               	btfsc	status,2,c
 11179  000E18  D002               	goto	l10551
 11180                           
 11181                           ; BSR set to: 0
 11182  000E1A  B5A8               	btfsc	auto_mount@stat& (0+255),2,b
 11183  000E1C  D7E1               	goto	u12990
 11184  000E1E                     l10551:
 11185                           
 11186                           ; BSR set to: 0
 11187                           ;tff.c: 694: fmt = check_fs(bootsect = 0);
 11188  000E1E  0E00               	movlw	0
 11189  000E20  6F9D               	movwf	auto_mount@bootsect& (0+255),b
 11190  000E22  0E00               	movlw	0
 11191  000E24  6F9E               	movwf	(auto_mount@bootsect+1)& (0+255),b
 11192  000E26  0E00               	movlw	0
 11193  000E28  6F9F               	movwf	(auto_mount@bootsect+2)& (0+255),b
 11194  000E2A  0E00               	movlw	0
 11195  000E2C  6FA0               	movwf	(auto_mount@bootsect+3)& (0+255),b
 11196  000E2E  C09D  F079         	movff	auto_mount@bootsect,check_fs@sect
 11197  000E32  C09E  F07A         	movff	auto_mount@bootsect+1,check_fs@sect+1
 11198  000E36  C09F  F07B         	movff	auto_mount@bootsect+2,check_fs@sect+2
 11199  000E3A  C0A0  F07C         	movff	auto_mount@bootsect+3,check_fs@sect+3
 11200  000E3E  ECEC  F022         	call	_check_fs	;wreg free
 11201  000E42  0100               	movlb	0	; () banked
 11202  000E44  6FA7               	movwf	auto_mount@fmt& (0+255),b
 11203                           
 11204                           ; BSR set to: 0
 11205                           ;tff.c: 696: if (fmt == 1) {
 11206  000E46  05A7               	decf	auto_mount@fmt& (0+255),w,b
 11207  000E48  A4D8               	btfss	status,2,c
 11208  000E4A  D023               	goto	l10561
 11209                           
 11210                           ; BSR set to: 0
 11211                           ;tff.c: 698: if (fs->win[446+4]) {
 11212  000E4C  EE21 F0E2          	lfsr	2,482
 11213  000E50  51AD               	movf	auto_mount@fs& (0+255),w,b
 11214  000E52  26D9               	addwf	fsr2l,f,c
 11215  000E54  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11216  000E56  22DA               	addwfc	fsr2h,f,c
 11217  000E58  50DF               	movf	indf2,w,c
 11218  000E5A  B4D8               	btfsc	status,2,c
 11219  000E5C  D01A               	goto	l10561
 11220                           
 11221                           ; BSR set to: 0
 11222                           ;tff.c: 699: bootsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[446+8]));
 11223  000E5E  EE21 F0E6          	lfsr	2,486
 11224  000E62  51AD               	movf	auto_mount@fs& (0+255),w,b
 11225  000E64  26D9               	addwf	fsr2l,f,c
 11226  000E66  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11227  000E68  22DA               	addwfc	fsr2h,f,c
 11228  000E6A  CFDE F09D          	movff	postinc2,auto_mount@bootsect
 11229  000E6E  CFDE F09E          	movff	postinc2,auto_mount@bootsect+1
 11230  000E72  CFDE F09F          	movff	postinc2,auto_mount@bootsect+2
 11231  000E76  CFDE F0A0          	movff	postinc2,auto_mount@bootsect+3
 11232                           
 11233                           ; BSR set to: 0
 11234                           ;tff.c: 700: fmt = check_fs(bootsect);
 11235  000E7A  C09D  F079         	movff	auto_mount@bootsect,check_fs@sect
 11236  000E7E  C09E  F07A         	movff	auto_mount@bootsect+1,check_fs@sect+1
 11237  000E82  C09F  F07B         	movff	auto_mount@bootsect+2,check_fs@sect+2
 11238  000E86  C0A0  F07C         	movff	auto_mount@bootsect+3,check_fs@sect+3
 11239  000E8A  ECEC  F022         	call	_check_fs	;wreg free
 11240  000E8E  0100               	movlb	0	; () banked
 11241  000E90  6FA7               	movwf	auto_mount@fmt& (0+255),b
 11242  000E92                     l10561:
 11243                           
 11244                           ; BSR set to: 0
 11245                           ;tff.c: 701: };tff.c: 702: };tff.c: 703: if (fmt || (WORD)(*(WORD*)(BYTE*)(&fs->win[11])
      +                          ) != 512U)
 11246  000E92  51A7               	movf	auto_mount@fmt& (0+255),w,b
 11247  000E94  A4D8               	btfss	status,2,c
 11248  000E96  D00C               	goto	u13060
 11249                           
 11250                           ; BSR set to: 0
 11251  000E98  EE20 F02B          	lfsr	2,43
 11252  000E9C  51AD               	movf	auto_mount@fs& (0+255),w,b
 11253  000E9E  26D9               	addwf	fsr2l,f,c
 11254  000EA0  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11255  000EA2  22DA               	addwfc	fsr2h,f,c
 11256  000EA4  50DE               	movf	postinc2,w,c
 11257  000EA6  E104               	bnz	u13060
 11258  000EA8  0E02               	movlw	2
 11259  000EAA  18DE               	xorwf	postinc2,w,c
 11260  000EAC  B4D8               	btfsc	status,2,c
 11261  000EAE  D002               	goto	l10569
 11262  000EB0                     u13060:
 11263                           
 11264                           ; BSR set to: 0
 11265                           ;tff.c: 704: return FR_NO_FILESYSTEM;
 11266  000EB0  0E0B               	movlw	11
 11267  000EB2  0012               	return	
 11268  000EB4                     l10569:
 11269                           
 11270                           ; BSR set to: 0
 11271                           ;tff.c: 707: fatsize = (WORD)(*(WORD*)(BYTE*)(&fs->win[22]));
 11272  000EB4  EE20 F036          	lfsr	2,54
 11273  000EB8  51AD               	movf	auto_mount@fs& (0+255),w,b
 11274  000EBA  26D9               	addwf	fsr2l,f,c
 11275  000EBC  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11276  000EBE  22DA               	addwfc	fsr2h,f,c
 11277  000EC0  CFDE F083          	movff	postinc2,??_auto_mount
 11278  000EC4  CFDD F084          	movff	postdec2,??_auto_mount+1
 11279  000EC8  C083  F0A9         	movff	??_auto_mount,auto_mount@fatsize
 11280  000ECC  C084  F0AA         	movff	??_auto_mount+1,auto_mount@fatsize+1
 11281  000ED0  6BAB               	clrf	(auto_mount@fatsize+2)& (0+255),b
 11282  000ED2  6BAC               	clrf	(auto_mount@fatsize+3)& (0+255),b
 11283                           
 11284                           ; BSR set to: 0
 11285                           ;tff.c: 708: if (!fatsize) fatsize = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[36]));
 11286  000ED4  51A9               	movf	auto_mount@fatsize& (0+255),w,b
 11287  000ED6  11AA               	iorwf	(auto_mount@fatsize+1)& (0+255),w,b
 11288  000ED8  11AB               	iorwf	(auto_mount@fatsize+2)& (0+255),w,b
 11289  000EDA  11AC               	iorwf	(auto_mount@fatsize+3)& (0+255),w,b
 11290  000EDC  A4D8               	btfss	status,2,c
 11291  000EDE  D00E               	goto	l1208
 11292                           
 11293                           ; BSR set to: 0
 11294  000EE0  EE20 F044          	lfsr	2,68
 11295  000EE4  51AD               	movf	auto_mount@fs& (0+255),w,b
 11296  000EE6  26D9               	addwf	fsr2l,f,c
 11297  000EE8  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11298  000EEA  22DA               	addwfc	fsr2h,f,c
 11299  000EEC  CFDE F0A9          	movff	postinc2,auto_mount@fatsize
 11300  000EF0  CFDE F0AA          	movff	postinc2,auto_mount@fatsize+1
 11301  000EF4  CFDE F0AB          	movff	postinc2,auto_mount@fatsize+2
 11302  000EF8  CFDE F0AC          	movff	postinc2,auto_mount@fatsize+3
 11303  000EFC                     l1208:
 11304                           
 11305                           ; BSR set to: 0
 11306                           ;tff.c: 709: fs->sects_fat = (CLUST)fatsize;
 11307  000EFC  EE20 F014          	lfsr	2,20
 11308  000F00  51AD               	movf	auto_mount@fs& (0+255),w,b
 11309  000F02  26D9               	addwf	fsr2l,f,c
 11310  000F04  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11311  000F06  22DA               	addwfc	fsr2h,f,c
 11312  000F08  C0A9  FFDE         	movff	auto_mount@fatsize,postinc2
 11313  000F0C  C0AA  FFDD         	movff	auto_mount@fatsize+1,postdec2
 11314                           
 11315                           ; BSR set to: 0
 11316                           ;tff.c: 710: fs->n_fats = fs->win[16];
 11317  000F10  EE20 F030          	lfsr	2,48
 11318  000F14  51AD               	movf	auto_mount@fs& (0+255),w,b
 11319  000F16  26D9               	addwf	fsr2l,f,c
 11320  000F18  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11321  000F1A  22DA               	addwfc	fsr2h,f,c
 11322  000F1C  EE10 F01E          	lfsr	1,30
 11323  000F20  51AD               	movf	auto_mount@fs& (0+255),w,b
 11324  000F22  26E1               	addwf	fsr1l,f,c
 11325  000F24  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11326  000F26  22E2               	addwfc	fsr1h,f,c
 11327  000F28  CFDF FFE7          	movff	indf2,indf1
 11328                           
 11329                           ; BSR set to: 0
 11330                           ;tff.c: 711: fatsize *= fs->n_fats;
 11331  000F2C  C0A9  F01B         	movff	auto_mount@fatsize,___lmul@multiplier
 11332  000F30  C0AA  F01C         	movff	auto_mount@fatsize+1,___lmul@multiplier+1
 11333  000F34  C0AB  F01D         	movff	auto_mount@fatsize+2,___lmul@multiplier+2
 11334  000F38  C0AC  F01E         	movff	auto_mount@fatsize+3,___lmul@multiplier+3
 11335  000F3C  EE20 F01E          	lfsr	2,30
 11336  000F40  51AD               	movf	auto_mount@fs& (0+255),w,b
 11337  000F42  26D9               	addwf	fsr2l,f,c
 11338  000F44  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11339  000F46  22DA               	addwfc	fsr2h,f,c
 11340  000F48  50DF               	movf	indf2,w,c
 11341  000F4A  6F83               	movwf	??_auto_mount& (0+255),b
 11342  000F4C  5183               	movf	??_auto_mount& (0+255),w,b
 11343  000F4E  6E1F               	movwf	___lmul@multiplicand^0,c
 11344  000F50  6A20               	clrf	(___lmul@multiplicand+1)^0,c
 11345  000F52  6A21               	clrf	(___lmul@multiplicand+2)^0,c
 11346  000F54  6A22               	clrf	(___lmul@multiplicand+3)^0,c
 11347  000F56  EC4C  F025         	call	___lmul	;wreg free
 11348  000F5A  C01B  F0A9         	movff	?___lmul,auto_mount@fatsize
 11349  000F5E  C01C  F0AA         	movff	?___lmul+1,auto_mount@fatsize+1
 11350  000F62  C01D  F0AB         	movff	?___lmul+2,auto_mount@fatsize+2
 11351  000F66  C01E  F0AC         	movff	?___lmul+3,auto_mount@fatsize+3
 11352                           
 11353                           ; BSR set to: 0
 11354                           ;tff.c: 712: fs->fatbase = bootsect + (WORD)(*(WORD*)(BYTE*)(&fs->win[14]));
 11355  000F6A  EE20 F02E          	lfsr	2,46
 11356  000F6E  51AD               	movf	auto_mount@fs& (0+255),w,b
 11357  000F70  26D9               	addwf	fsr2l,f,c
 11358  000F72  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11359  000F74  22DA               	addwfc	fsr2h,f,c
 11360  000F76  CFDE F083          	movff	postinc2,??_auto_mount
 11361  000F7A  CFDD F084          	movff	postdec2,??_auto_mount+1
 11362  000F7E  5183               	movf	??_auto_mount& (0+255),w,b
 11363  000F80  259D               	addwf	auto_mount@bootsect& (0+255),w,b
 11364  000F82  6F85               	movwf	(??_auto_mount+2)& (0+255),b
 11365  000F84  5184               	movf	(??_auto_mount+1)& (0+255),w,b
 11366  000F86  219E               	addwfc	(auto_mount@bootsect+1)& (0+255),w,b
 11367  000F88  6F86               	movwf	(??_auto_mount+3)& (0+255),b
 11368  000F8A  0E00               	movlw	0
 11369  000F8C  219F               	addwfc	(auto_mount@bootsect+2)& (0+255),w,b
 11370  000F8E  6F87               	movwf	(??_auto_mount+4)& (0+255),b
 11371  000F90  0E00               	movlw	0
 11372  000F92  21A0               	addwfc	(auto_mount@bootsect+3)& (0+255),w,b
 11373  000F94  6F88               	movwf	(??_auto_mount+5)& (0+255),b
 11374  000F96  EE20 F008          	lfsr	2,8
 11375  000F9A  51AD               	movf	auto_mount@fs& (0+255),w,b
 11376  000F9C  26D9               	addwf	fsr2l,f,c
 11377  000F9E  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11378  000FA0  22DA               	addwfc	fsr2h,f,c
 11379  000FA2  C085  FFDE         	movff	??_auto_mount+2,postinc2
 11380  000FA6  C086  FFDE         	movff	??_auto_mount+3,postinc2
 11381  000FAA  C087  FFDE         	movff	??_auto_mount+4,postinc2
 11382  000FAE  C088  FFDE         	movff	??_auto_mount+5,postinc2
 11383                           
 11384                           ; BSR set to: 0
 11385                           ;tff.c: 713: fs->csize = fs->win[13];
 11386  000FB2  EE20 F02D          	lfsr	2,45
 11387  000FB6  51AD               	movf	auto_mount@fs& (0+255),w,b
 11388  000FB8  26D9               	addwf	fsr2l,f,c
 11389  000FBA  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11390  000FBC  22DA               	addwfc	fsr2h,f,c
 11391  000FBE  EE10 F01D          	lfsr	1,29
 11392  000FC2  51AD               	movf	auto_mount@fs& (0+255),w,b
 11393  000FC4  26E1               	addwf	fsr1l,f,c
 11394  000FC6  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11395  000FC8  22E2               	addwfc	fsr1h,f,c
 11396  000FCA  CFDF FFE7          	movff	indf2,indf1
 11397                           
 11398                           ; BSR set to: 0
 11399                           ;tff.c: 714: fs->n_rootdir = (WORD)(*(WORD*)(BYTE*)(&fs->win[17]));
 11400  000FCE  EE20 F031          	lfsr	2,49
 11401  000FD2  51AD               	movf	auto_mount@fs& (0+255),w,b
 11402  000FD4  26D9               	addwf	fsr2l,f,c
 11403  000FD6  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11404  000FD8  22DA               	addwfc	fsr2h,f,c
 11405  000FDA  EE10 F002          	lfsr	1,2
 11406  000FDE  51AD               	movf	auto_mount@fs& (0+255),w,b
 11407  000FE0  26E1               	addwf	fsr1l,f,c
 11408  000FE2  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11409  000FE4  22E2               	addwfc	fsr1h,f,c
 11410  000FE6  CFDE FFE6          	movff	postinc2,postinc1
 11411  000FEA  CFDD FFE5          	movff	postdec2,postdec1
 11412                           
 11413                           ; BSR set to: 0
 11414                           ;tff.c: 715: totalsect = (WORD)(*(WORD*)(BYTE*)(&fs->win[19]));
 11415  000FEE  EE20 F033          	lfsr	2,51
 11416  000FF2  51AD               	movf	auto_mount@fs& (0+255),w,b
 11417  000FF4  26D9               	addwf	fsr2l,f,c
 11418  000FF6  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11419  000FF8  22DA               	addwfc	fsr2h,f,c
 11420  000FFA  CFDE F083          	movff	postinc2,??_auto_mount
 11421  000FFE  CFDD F084          	movff	postdec2,??_auto_mount+1
 11422  001002  C083  F0A1         	movff	??_auto_mount,auto_mount@totalsect
 11423  001006  C084  F0A2         	movff	??_auto_mount+1,auto_mount@totalsect+1
 11424  00100A  6BA3               	clrf	(auto_mount@totalsect+2)& (0+255),b
 11425  00100C  6BA4               	clrf	(auto_mount@totalsect+3)& (0+255),b
 11426                           
 11427                           ; BSR set to: 0
 11428                           ;tff.c: 716: if (!totalsect) totalsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[32]));
 11429  00100E  51A1               	movf	auto_mount@totalsect& (0+255),w,b
 11430  001010  11A2               	iorwf	(auto_mount@totalsect+1)& (0+255),w,b
 11431  001012  11A3               	iorwf	(auto_mount@totalsect+2)& (0+255),w,b
 11432  001014  11A4               	iorwf	(auto_mount@totalsect+3)& (0+255),w,b
 11433  001016  A4D8               	btfss	status,2,c
 11434  001018  D00E               	goto	l10591
 11435                           
 11436                           ; BSR set to: 0
 11437  00101A  EE20 F040          	lfsr	2,64
 11438  00101E  51AD               	movf	auto_mount@fs& (0+255),w,b
 11439  001020  26D9               	addwf	fsr2l,f,c
 11440  001022  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11441  001024  22DA               	addwfc	fsr2h,f,c
 11442  001026  CFDE F0A1          	movff	postinc2,auto_mount@totalsect
 11443  00102A  CFDE F0A2          	movff	postinc2,auto_mount@totalsect+1
 11444  00102E  CFDE F0A3          	movff	postinc2,auto_mount@totalsect+2
 11445  001032  CFDE F0A4          	movff	postinc2,auto_mount@totalsect+3
 11446  001036                     l10591:
 11447                           
 11448                           ; BSR set to: 0
 11449                           ;tff.c: 717: fs->max_clust = maxclust = (totalsect;tff.c: 718: - (WORD)(*(WORD*)(BYTE*)(
      +                          &fs->win[14])) - fatsize - fs->n_rootdir / 16;tff.c: 719: ) / fs->csize + 2;
 11450  001036  EE20 F002          	lfsr	2,2
 11451  00103A  51AD               	movf	auto_mount@fs& (0+255),w,b
 11452  00103C  26D9               	addwf	fsr2l,f,c
 11453  00103E  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11454  001040  22DA               	addwfc	fsr2h,f,c
 11455  001042  CFDE F083          	movff	postinc2,??_auto_mount
 11456  001046  CFDD F084          	movff	postdec2,??_auto_mount+1
 11457  00104A  0E04               	movlw	4
 11458  00104C  6F85               	movwf	(??_auto_mount+2)& (0+255),b
 11459  00104E                     u13095:
 11460  00104E  90D8               	bcf	status,0,c
 11461  001050  3384               	rrcf	(??_auto_mount+1)& (0+255),f,b
 11462  001052  3383               	rrcf	??_auto_mount& (0+255),f,b
 11463  001054  2F85               	decfsz	(??_auto_mount+2)& (0+255),f,b
 11464  001056  D7FB               	goto	u13095
 11465  001058  5183               	movf	??_auto_mount& (0+255),w,b
 11466  00105A  6F86               	movwf	(??_auto_mount+3)& (0+255),b
 11467  00105C  5184               	movf	(??_auto_mount+1)& (0+255),w,b
 11468  00105E  6F87               	movwf	(??_auto_mount+4)& (0+255),b
 11469  001060  6B88               	clrf	(??_auto_mount+5)& (0+255),b
 11470  001062  6B89               	clrf	(??_auto_mount+6)& (0+255),b
 11471  001064  EE20 F02E          	lfsr	2,46
 11472  001068  51AD               	movf	auto_mount@fs& (0+255),w,b
 11473  00106A  26D9               	addwf	fsr2l,f,c
 11474  00106C  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11475  00106E  22DA               	addwfc	fsr2h,f,c
 11476  001070  CFDE F08A          	movff	postinc2,??_auto_mount+7
 11477  001074  CFDD F08B          	movff	postdec2,??_auto_mount+8
 11478  001078  518A               	movf	(??_auto_mount+7)& (0+255),w,b
 11479  00107A  6F8C               	movwf	(??_auto_mount+9)& (0+255),b
 11480  00107C  518B               	movf	(??_auto_mount+8)& (0+255),w,b
 11481  00107E  6F8D               	movwf	(??_auto_mount+10)& (0+255),b
 11482  001080  6B8E               	clrf	(??_auto_mount+11)& (0+255),b
 11483  001082  6B8F               	clrf	(??_auto_mount+12)& (0+255),b
 11484  001084  1F8C               	comf	(??_auto_mount+9)& (0+255),f,b
 11485  001086  1F8D               	comf	(??_auto_mount+10)& (0+255),f,b
 11486  001088  1F8E               	comf	(??_auto_mount+11)& (0+255),f,b
 11487  00108A  1F8F               	comf	(??_auto_mount+12)& (0+255),f,b
 11488  00108C  2B8C               	incf	(??_auto_mount+9)& (0+255),f,b
 11489  00108E  0E00               	movlw	0
 11490  001090  238D               	addwfc	(??_auto_mount+10)& (0+255),f,b
 11491  001092  238E               	addwfc	(??_auto_mount+11)& (0+255),f,b
 11492  001094  238F               	addwfc	(??_auto_mount+12)& (0+255),f,b
 11493  001096  51A9               	movf	auto_mount@fatsize& (0+255),w,b
 11494  001098  5D8C               	subwf	(??_auto_mount+9)& (0+255),w,b
 11495  00109A  6F90               	movwf	(??_auto_mount+13)& (0+255),b
 11496  00109C  51AA               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 11497  00109E  598D               	subwfb	(??_auto_mount+10)& (0+255),w,b
 11498  0010A0  6F91               	movwf	(??_auto_mount+14)& (0+255),b
 11499  0010A2  51AB               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 11500  0010A4  598E               	subwfb	(??_auto_mount+11)& (0+255),w,b
 11501  0010A6  6F92               	movwf	(??_auto_mount+15)& (0+255),b
 11502  0010A8  51AC               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 11503  0010AA  598F               	subwfb	(??_auto_mount+12)& (0+255),w,b
 11504  0010AC  6F93               	movwf	(??_auto_mount+16)& (0+255),b
 11505  0010AE  5186               	movf	(??_auto_mount+3)& (0+255),w,b
 11506  0010B0  5D90               	subwf	(??_auto_mount+13)& (0+255),w,b
 11507  0010B2  6F94               	movwf	(??_auto_mount+17)& (0+255),b
 11508  0010B4  5187               	movf	(??_auto_mount+4)& (0+255),w,b
 11509  0010B6  5991               	subwfb	(??_auto_mount+14)& (0+255),w,b
 11510  0010B8  6F95               	movwf	(??_auto_mount+18)& (0+255),b
 11511  0010BA  5188               	movf	(??_auto_mount+5)& (0+255),w,b
 11512  0010BC  5992               	subwfb	(??_auto_mount+15)& (0+255),w,b
 11513  0010BE  6F96               	movwf	(??_auto_mount+19)& (0+255),b
 11514  0010C0  5189               	movf	(??_auto_mount+6)& (0+255),w,b
 11515  0010C2  5993               	subwfb	(??_auto_mount+16)& (0+255),w,b
 11516  0010C4  6F97               	movwf	(??_auto_mount+20)& (0+255),b
 11517  0010C6  51A1               	movf	auto_mount@totalsect& (0+255),w,b
 11518  0010C8  2594               	addwf	(??_auto_mount+17)& (0+255),w,b
 11519  0010CA  6E1B               	movwf	___lldiv@dividend^0,c
 11520  0010CC  51A2               	movf	(auto_mount@totalsect+1)& (0+255),w,b
 11521  0010CE  2195               	addwfc	(??_auto_mount+18)& (0+255),w,b
 11522  0010D0  6E1C               	movwf	(___lldiv@dividend+1)^0,c
 11523  0010D2  51A3               	movf	(auto_mount@totalsect+2)& (0+255),w,b
 11524  0010D4  2196               	addwfc	(??_auto_mount+19)& (0+255),w,b
 11525  0010D6  6E1D               	movwf	(___lldiv@dividend+2)^0,c
 11526  0010D8  51A4               	movf	(auto_mount@totalsect+3)& (0+255),w,b
 11527  0010DA  2197               	addwfc	(??_auto_mount+20)& (0+255),w,b
 11528  0010DC  6E1E               	movwf	(___lldiv@dividend+3)^0,c
 11529  0010DE  EE20 F01D          	lfsr	2,29
 11530  0010E2  51AD               	movf	auto_mount@fs& (0+255),w,b
 11531  0010E4  26D9               	addwf	fsr2l,f,c
 11532  0010E6  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11533  0010E8  22DA               	addwfc	fsr2h,f,c
 11534  0010EA  50DF               	movf	indf2,w,c
 11535  0010EC  6F98               	movwf	(??_auto_mount+21)& (0+255),b
 11536  0010EE  5198               	movf	(??_auto_mount+21)& (0+255),w,b
 11537  0010F0  6E1F               	movwf	___lldiv@divisor^0,c
 11538  0010F2  6A20               	clrf	(___lldiv@divisor+1)^0,c
 11539  0010F4  6A21               	clrf	(___lldiv@divisor+2)^0,c
 11540  0010F6  6A22               	clrf	(___lldiv@divisor+3)^0,c
 11541  0010F8  EC2D  F023         	call	___lldiv	;wreg free
 11542  0010FC  0E02               	movlw	2
 11543  0010FE  241B               	addwf	?___lldiv^0,w,c
 11544  001100  0100               	movlb	0	; () banked
 11545  001102  6F99               	movwf	auto_mount@maxclust& (0+255),b
 11546  001104  0E00               	movlw	0
 11547  001106  201C               	addwfc	(?___lldiv+1)^0,w,c
 11548  001108  6F9A               	movwf	(auto_mount@maxclust+1)& (0+255),b
 11549  00110A  0E00               	movlw	0
 11550  00110C  201D               	addwfc	(?___lldiv+2)^0,w,c
 11551  00110E  6F9B               	movwf	(auto_mount@maxclust+2)& (0+255),b
 11552  001110  0E00               	movlw	0
 11553  001112  201E               	addwfc	(?___lldiv+3)^0,w,c
 11554  001114  6F9C               	movwf	(auto_mount@maxclust+3)& (0+255),b
 11555  001116  EE20 F016          	lfsr	2,22
 11556  00111A  51AD               	movf	auto_mount@fs& (0+255),w,b
 11557  00111C  26D9               	addwf	fsr2l,f,c
 11558  00111E  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11559  001120  22DA               	addwfc	fsr2h,f,c
 11560  001122  C099  FFDE         	movff	auto_mount@maxclust,postinc2
 11561  001126  C09A  FFDD         	movff	auto_mount@maxclust+1,postdec2
 11562                           
 11563                           ; BSR set to: 0
 11564                           ;tff.c: 721: fmt = 1;
 11565  00112A  0E01               	movlw	1
 11566  00112C  6FA7               	movwf	auto_mount@fmt& (0+255),b
 11567                           
 11568                           ; BSR set to: 0
 11569                           ;tff.c: 722: if (maxclust >= 0xFF7) fmt = 2;
 11570  00112E  519C               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 11571  001130  119B               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 11572  001132  E106               	bnz	u13100
 11573  001134  0EF7               	movlw	247
 11574  001136  5D99               	subwf	auto_mount@maxclust& (0+255),w,b
 11575  001138  0E0F               	movlw	15
 11576  00113A  599A               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 11577  00113C  A0D8               	btfss	status,0,c
 11578  00113E  D002               	goto	l10599
 11579  001140                     u13100:
 11580                           
 11581                           ; BSR set to: 0
 11582  001140  0E02               	movlw	2
 11583  001142  6FA7               	movwf	auto_mount@fmt& (0+255),b
 11584  001144                     l10599:
 11585                           
 11586                           ; BSR set to: 0
 11587                           ;tff.c: 723: if (maxclust >= 0xFFF7)
 11588  001144  519C               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 11589  001146  119B               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 11590  001148  E107               	bnz	u13110
 11591  00114A  0EF7               	movlw	247
 11592  00114C  5D99               	subwf	auto_mount@maxclust& (0+255),w,b
 11593  00114E  0EFF               	movlw	255
 11594  001150  599A               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 11595  001152  B0D8               	btfsc	status,0,c
 11596  001154  D6AD               	goto	u13060
 11597  001156  D001               	goto	l10605
 11598  001158                     u13110:
 11599  001158  D6AB               	goto	u13060
 11600  00115A                     l10605:
 11601                           
 11602                           ; BSR set to: 0
 11603                           ;tff.c: 732: fs->dirbase = fs->fatbase + fatsize;
 11604  00115A  EE20 F008          	lfsr	2,8
 11605  00115E  51AD               	movf	auto_mount@fs& (0+255),w,b
 11606  001160  26D9               	addwf	fsr2l,f,c
 11607  001162  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11608  001164  22DA               	addwfc	fsr2h,f,c
 11609  001166  CFDE F083          	movff	postinc2,??_auto_mount
 11610  00116A  CFDE F084          	movff	postinc2,??_auto_mount+1
 11611  00116E  CFDE F085          	movff	postinc2,??_auto_mount+2
 11612  001172  CFDE F086          	movff	postinc2,??_auto_mount+3
 11613  001176  51A9               	movf	auto_mount@fatsize& (0+255),w,b
 11614  001178  2583               	addwf	??_auto_mount& (0+255),w,b
 11615  00117A  6F87               	movwf	(??_auto_mount+4)& (0+255),b
 11616  00117C  51AA               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 11617  00117E  2184               	addwfc	(??_auto_mount+1)& (0+255),w,b
 11618  001180  6F88               	movwf	(??_auto_mount+5)& (0+255),b
 11619  001182  51AB               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 11620  001184  2185               	addwfc	(??_auto_mount+2)& (0+255),w,b
 11621  001186  6F89               	movwf	(??_auto_mount+6)& (0+255),b
 11622  001188  51AC               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 11623  00118A  2186               	addwfc	(??_auto_mount+3)& (0+255),w,b
 11624  00118C  6F8A               	movwf	(??_auto_mount+7)& (0+255),b
 11625  00118E  EE20 F00C          	lfsr	2,12
 11626  001192  51AD               	movf	auto_mount@fs& (0+255),w,b
 11627  001194  26D9               	addwf	fsr2l,f,c
 11628  001196  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11629  001198  22DA               	addwfc	fsr2h,f,c
 11630  00119A  C087  FFDE         	movff	??_auto_mount+4,postinc2
 11631  00119E  C088  FFDE         	movff	??_auto_mount+5,postinc2
 11632  0011A2  C089  FFDE         	movff	??_auto_mount+6,postinc2
 11633  0011A6  C08A  FFDE         	movff	??_auto_mount+7,postinc2
 11634                           
 11635                           ;tff.c: 733: fs->database = fs->fatbase + fatsize + fs->n_rootdir / 16;
 11636  0011AA  EE20 F008          	lfsr	2,8
 11637  0011AE  51AD               	movf	auto_mount@fs& (0+255),w,b
 11638  0011B0  26D9               	addwf	fsr2l,f,c
 11639  0011B2  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11640  0011B4  22DA               	addwfc	fsr2h,f,c
 11641  0011B6  CFDE F083          	movff	postinc2,??_auto_mount
 11642  0011BA  CFDE F084          	movff	postinc2,??_auto_mount+1
 11643  0011BE  CFDE F085          	movff	postinc2,??_auto_mount+2
 11644  0011C2  CFDE F086          	movff	postinc2,??_auto_mount+3
 11645  0011C6  EE20 F002          	lfsr	2,2
 11646  0011CA  51AD               	movf	auto_mount@fs& (0+255),w,b
 11647  0011CC  26D9               	addwf	fsr2l,f,c
 11648  0011CE  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11649  0011D0  22DA               	addwfc	fsr2h,f,c
 11650  0011D2  CFDE F087          	movff	postinc2,??_auto_mount+4
 11651  0011D6  CFDD F088          	movff	postdec2,??_auto_mount+5
 11652  0011DA  0E04               	movlw	4
 11653  0011DC  6F89               	movwf	(??_auto_mount+6)& (0+255),b
 11654  0011DE                     u13125:
 11655  0011DE  90D8               	bcf	status,0,c
 11656  0011E0  3388               	rrcf	(??_auto_mount+5)& (0+255),f,b
 11657  0011E2  3387               	rrcf	(??_auto_mount+4)& (0+255),f,b
 11658  0011E4  2F89               	decfsz	(??_auto_mount+6)& (0+255),f,b
 11659  0011E6  D7FB               	goto	u13125
 11660  0011E8  5187               	movf	(??_auto_mount+4)& (0+255),w,b
 11661  0011EA  2583               	addwf	??_auto_mount& (0+255),w,b
 11662  0011EC  6F8A               	movwf	(??_auto_mount+7)& (0+255),b
 11663  0011EE  5188               	movf	(??_auto_mount+5)& (0+255),w,b
 11664  0011F0  2184               	addwfc	(??_auto_mount+1)& (0+255),w,b
 11665  0011F2  6F8B               	movwf	(??_auto_mount+8)& (0+255),b
 11666  0011F4  0E00               	movlw	0
 11667  0011F6  2185               	addwfc	(??_auto_mount+2)& (0+255),w,b
 11668  0011F8  6F8C               	movwf	(??_auto_mount+9)& (0+255),b
 11669  0011FA  0E00               	movlw	0
 11670  0011FC  2186               	addwfc	(??_auto_mount+3)& (0+255),w,b
 11671  0011FE  6F8D               	movwf	(??_auto_mount+10)& (0+255),b
 11672  001200  51A9               	movf	auto_mount@fatsize& (0+255),w,b
 11673  001202  258A               	addwf	(??_auto_mount+7)& (0+255),w,b
 11674  001204  6F8E               	movwf	(??_auto_mount+11)& (0+255),b
 11675  001206  51AA               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 11676  001208  218B               	addwfc	(??_auto_mount+8)& (0+255),w,b
 11677  00120A  6F8F               	movwf	(??_auto_mount+12)& (0+255),b
 11678  00120C  51AB               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 11679  00120E  218C               	addwfc	(??_auto_mount+9)& (0+255),w,b
 11680  001210  6F90               	movwf	(??_auto_mount+13)& (0+255),b
 11681  001212  51AC               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 11682  001214  218D               	addwfc	(??_auto_mount+10)& (0+255),w,b
 11683  001216  6F91               	movwf	(??_auto_mount+14)& (0+255),b
 11684  001218  EE20 F010          	lfsr	2,16
 11685  00121C  51AD               	movf	auto_mount@fs& (0+255),w,b
 11686  00121E  26D9               	addwf	fsr2l,f,c
 11687  001220  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11688  001222  22DA               	addwfc	fsr2h,f,c
 11689  001224  C08E  FFDE         	movff	??_auto_mount+11,postinc2
 11690  001228  C08F  FFDE         	movff	??_auto_mount+12,postinc2
 11691  00122C  C090  FFDE         	movff	??_auto_mount+13,postinc2
 11692  001230  C091  FFDE         	movff	??_auto_mount+14,postinc2
 11693                           
 11694                           ;tff.c: 737: fs->free_clust = (CLUST)0xFFFFFFFF;
 11695  001234  EE20 F01A          	lfsr	2,26
 11696  001238  51AD               	movf	auto_mount@fs& (0+255),w,b
 11697  00123A  26D9               	addwf	fsr2l,f,c
 11698  00123C  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11699  00123E  22DA               	addwfc	fsr2h,f,c
 11700  001240  0EFF               	movlw	255
 11701  001242  6EDE               	movwf	postinc2,c
 11702  001244  0EFF               	movlw	255
 11703  001246  6EDD               	movwf	postdec2,c
 11704                           
 11705                           ;tff.c: 753: fs->fs_type = fmt;
 11706  001248  EE20 F01C          	lfsr	2,28
 11707  00124C  51AD               	movf	auto_mount@fs& (0+255),w,b
 11708  00124E  26D9               	addwf	fsr2l,f,c
 11709  001250  51AE               	movf	(auto_mount@fs+1)& (0+255),w,b
 11710  001252  22DA               	addwfc	fsr2h,f,c
 11711  001254  C0A7  FFDF         	movff	auto_mount@fmt,indf2
 11712                           
 11713                           ; BSR set to: 0
 11714                           ;tff.c: 754: fs->id = ++fsid;
 11715  001258  0101               	movlb	1	; () banked
 11716  00125A  4B18               	infsnz	_fsid& (0+255),f,b
 11717  00125C  2B19               	incf	(_fsid+1)& (0+255),f,b
 11718  00125E  C0AD  FFD9         	movff	auto_mount@fs,fsr2l
 11719  001262  C0AE  FFDA         	movff	auto_mount@fs+1,fsr2h
 11720  001266  C118  FFDE         	movff	_fsid,postinc2
 11721  00126A  C119  FFDD         	movff	_fsid+1,postdec2
 11722                           
 11723                           ;tff.c: 755: return FR_OK;
 11724  00126E  0E00               	movlw	0
 11725  001270  0012               	return		;funcret
 11726  001272                     __end_of_auto_mount:
 11727                           	callstack 0
 11728                           
 11729 ;; *************** function _memset *****************
 11730 ;; Defined at:
 11731 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memset.c"
 11732 ;; Parameters:    Size  Location     Type
 11733 ;;  p1              2   26[COMRAM] PTR void 
 11734 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 11735 ;;  c               2   28[COMRAM] int 
 11736 ;;  n               2   30[COMRAM] unsigned int 
 11737 ;; Auto vars:     Size  Location     Type
 11738 ;;  p               2   32[COMRAM] PTR unsigned char 
 11739 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 11740 ;; Return value:  Size  Location     Type
 11741 ;;                  2   26[COMRAM] PTR void 
 11742 ;; Registers used:
 11743 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11744 ;; Tracked objects:
 11745 ;;		On entry : 0/0
 11746 ;;		On exit  : 0/0
 11747 ;;		Unchanged: 0/0
 11748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11749 ;;      Params:         6       0       0       0       0       0       0       0       0
 11750 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11751 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11752 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11753 ;;Total ram usage:        8 bytes
 11754 ;; Hardware stack levels used: 1
 11755 ;; Hardware stack levels required when called: 3
 11756 ;; This function calls:
 11757 ;;		Nothing
 11758 ;; This function is called by:
 11759 ;;		_make_dirfile
 11760 ;;		_reserve_direntry
 11761 ;;		_auto_mount
 11762 ;;		_f_open
 11763 ;; This function uses a non-reentrant model
 11764 ;;
 11765                           
 11766                           	psect	text46
 11767  004F8A                     __ptext46:
 11768                           	callstack 0
 11769  004F8A                     _memset:
 11770                           	callstack 21
 11771                           
 11772                           ;incstack = 0
 11773  004F8A  C01B  F021         	movff	memset@p1,memset@p
 11774  004F8E  C01C  F022         	movff	memset@p1+1,memset@p+1
 11775  004F92  D008               	goto	l9893
 11776  004F94                     l9889:
 11777  004F94  C021  FFD9         	movff	memset@p,fsr2l
 11778  004F98  C022  FFDA         	movff	memset@p+1,fsr2h
 11779  004F9C  C01D  FFDF         	movff	memset@c,indf2
 11780  004FA0  4A21               	infsnz	memset@p^0,f,c
 11781  004FA2  2A22               	incf	(memset@p+1)^0,f,c
 11782  004FA4                     l9893:
 11783  004FA4  061F               	decf	memset@n^0,f,c
 11784  004FA6  A0D8               	btfss	status,0,c
 11785  004FA8  0620               	decf	(memset@n+1)^0,f,c
 11786  004FAA  281F               	incf	memset@n^0,w,c
 11787  004FAC  E1F3               	bnz	l9889
 11788  004FAE  2820               	incf	(memset@n+1)^0,w,c
 11789  004FB0  B4D8               	btfsc	status,2,c
 11790  004FB2  0012               	return	
 11791  004FB4  D7EF               	goto	l9889
 11792  004FB6                     __end_of_memset:
 11793                           	callstack 0
 11794                           
 11795 ;; *************** function _disk_initialize *****************
 11796 ;; Defined at:
 11797 ;;		line 59 in file "bibliotecas/diskio.c"
 11798 ;; Parameters:    Size  Location     Type
 11799 ;;  pdrv            1    wreg     unsigned char 
 11800 ;; Auto vars:     Size  Location     Type
 11801 ;;  pdrv            1   11[BANK0 ] unsigned char 
 11802 ;;  result          2    0        int 
 11803 ;;  stat            1   12[BANK0 ] unsigned char 
 11804 ;; Return value:  Size  Location     Type
 11805 ;;                  1    wreg      unsigned char 
 11806 ;; Registers used:
 11807 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11808 ;; Tracked objects:
 11809 ;;		On entry : 0/0
 11810 ;;		On exit  : 3F/0
 11811 ;;		Unchanged: 0/0
 11812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11813 ;;      Params:         0       0       0       0       0       0       0       0       0
 11814 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11815 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11816 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11817 ;;Total ram usage:        2 bytes
 11818 ;; Hardware stack levels used: 1
 11819 ;; Hardware stack levels required when called: 8
 11820 ;; This function calls:
 11821 ;;		_sdc_disk_initialize
 11822 ;; This function is called by:
 11823 ;;		_auto_mount
 11824 ;; This function uses a non-reentrant model
 11825 ;;
 11826                           
 11827                           	psect	text47
 11828  004FB6                     __ptext47:
 11829                           	callstack 0
 11830  004FB6                     _disk_initialize:
 11831                           	callstack 17
 11832                           
 11833                           ;incstack = 0
 11834                           ;disk_initialize@pdrv stored from wreg
 11835  004FB6  0100               	movlb	0	; () banked
 11836  004FB8  6F6B               	movwf	disk_initialize@pdrv& (0+255),b
 11837                           
 11838                           ;diskio.c: 63: DSTATUS stat;;diskio.c: 64: int result;;diskio.c: 66: switch (pdrv) {
 11839  004FBA  D005               	goto	l10027
 11840  004FBC                     l10009:
 11841                           
 11842                           ; BSR set to: 0
 11843                           ;diskio.c: 68: stat = sdc_disk_initialize();
 11844  004FBC  ECD6  F00E         	call	_sdc_disk_initialize	;wreg free
 11845  004FC0  6F6C               	movwf	disk_initialize@stat& (0+255),b
 11846  004FC2                     l10011:
 11847                           
 11848                           ; BSR set to: 0
 11849                           ;diskio.c: 72: return stat;
 11850  004FC2  516C               	movf	disk_initialize@stat& (0+255),w,b
 11851  004FC4  0012               	return	
 11852  004FC6                     l10027:
 11853  004FC6  0100               	movlb	0	; () banked
 11854  004FC8  516B               	movf	disk_initialize@pdrv& (0+255),w,b
 11855                           
 11856                           ; Switch size 1, requested type "simple"
 11857                           ; Number of cases is 3, Range of values is 0 to 2
 11858                           ; switch strategies available:
 11859                           ; Name         Instructions Cycles
 11860                           ; simple_byte           10     6 (average)
 11861                           ;	Chosen strategy is simple_byte
 11862  004FCA  0A00               	xorlw	0	; case 0
 11863  004FCC  B4D8               	btfsc	status,2,c
 11864  004FCE  D7F6               	goto	l10009
 11865  004FD0  0A01               	xorlw	1	; case 1
 11866  004FD2  B4D8               	btfsc	status,2,c
 11867  004FD4  D7F3               	goto	l10009
 11868  004FD6  0A03               	xorlw	3	; case 2
 11869  004FD8  B4D8               	btfsc	status,2,c
 11870  004FDA  D7F3               	goto	l10011
 11871                           
 11872                           ; BSR set to: 0
 11873                           ;diskio.c: 88: return 0x01;
 11874  004FDC  0E01               	movlw	1
 11875                           
 11876                           ; BSR set to: 0
 11877  004FDE  0012               	return		;funcret
 11878  004FE0                     __end_of_disk_initialize:
 11879                           	callstack 0
 11880                           
 11881 ;; *************** function _sdc_disk_initialize *****************
 11882 ;; Defined at:
 11883 ;;		line 275 in file "bibliotecas/diskio.c"
 11884 ;; Parameters:    Size  Location     Type
 11885 ;;		None
 11886 ;; Auto vars:     Size  Location     Type
 11887 ;;  count2          2    8[BANK0 ] int 
 11888 ;;  crc_number      2    4[BANK0 ] int 
 11889 ;;  count1          2    2[BANK0 ] int 
 11890 ;;  i               2    0        int 
 11891 ;;  buff            1   10[BANK0 ] unsigned char 
 11892 ;;  ocr             1    7[BANK0 ] unsigned char 
 11893 ;;  buff_i          1    6[BANK0 ] unsigned char 
 11894 ;;  stat            1    1[BANK0 ] unsigned char 
 11895 ;; Return value:  Size  Location     Type
 11896 ;;                  1    wreg      unsigned char 
 11897 ;; Registers used:
 11898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11899 ;; Tracked objects:
 11900 ;;		On entry : 0/0
 11901 ;;		On exit  : 3F/0
 11902 ;;		Unchanged: 0/0
 11903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11904 ;;      Params:         0       0       0       0       0       0       0       0       0
 11905 ;;      Locals:         0      10       0       0       0       0       0       0       0
 11906 ;;      Temps:          0       1       0       0       0       0       0       0       0
 11907 ;;      Totals:         0      11       0       0       0       0       0       0       0
 11908 ;;Total ram usage:       11 bytes
 11909 ;; Hardware stack levels used: 1
 11910 ;; Hardware stack levels required when called: 7
 11911 ;; This function calls:
 11912 ;;		_command
 11913 ;;		_dummy_clocks
 11914 ;;		_escreve_frase_ram_lcd
 11915 ;;		_posicao_cursor_lcd
 11916 ;;		_proceed
 11917 ;;		_response
 11918 ;;		_sdc_reset
 11919 ;; This function is called by:
 11920 ;;		_disk_initialize
 11921 ;; This function uses a non-reentrant model
 11922 ;;
 11923                           
 11924                           	psect	text48
 11925  001DAC                     __ptext48:
 11926                           	callstack 0
 11927  001DAC                     _sdc_disk_initialize:
 11928                           	callstack 17
 11929                           
 11930                           ; BSR set to: 0
 11931                           ;incstack = 0
 11932  001DAC  0E00               	movlw	0
 11933  001DAE  0100               	movlb	0	; () banked
 11934  001DB0  6F63               	movwf	(sdc_disk_initialize@count1+1)& (0+255),b
 11935  001DB2  0E00               	movlw	0
 11936  001DB4  6F62               	movwf	sdc_disk_initialize@count1& (0+255),b
 11937  001DB6  0E00               	movlw	0
 11938  001DB8  6F69               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 11939  001DBA  0E00               	movlw	0
 11940  001DBC  6F68               	movwf	sdc_disk_initialize@count2& (0+255),b
 11941                           
 11942                           ;diskio.c: 280: BYTE buff = 0;
 11943  001DBE  0E00               	movlw	0
 11944  001DC0  6F6A               	movwf	sdc_disk_initialize@buff& (0+255),b
 11945                           
 11946                           ; BSR set to: 0
 11947                           ;diskio.c: 281: BYTE buff_i;;diskio.c: 282: int crc_number;;diskio.c: 283: _delay((unsig
      +                          ned long)((1)*(48000000/4000.0)));
 11948  001DC2  0E10               	movlw	16
 11949  001DC4  0100               	movlb	0	; () banked
 11950  001DC6  6F60               	movwf	??_sdc_disk_initialize& (0+255),b
 11951  001DC8  0E94               	movlw	148
 11952  001DCA                     u15947:
 11953  001DCA  2EE8               	decfsz	wreg,f,c
 11954  001DCC  D7FE               	bra	u15947
 11955  001DCE  2F60               	decfsz	??_sdc_disk_initialize& (0+255),f,b
 11956  001DD0  D7FC               	bra	u15947
 11957  001DD2  F000               	nop	
 11958                           
 11959                           ;diskio.c: 284: dummy_clocks(100);
 11960  001DD4  0E64               	movlw	100
 11961  001DD6  EC0D  F027         	call	_dummy_clocks
 11962                           
 11963                           ;diskio.c: 287: sdc_reset();
 11964  001DDA  EC19  F022         	call	_sdc_reset	;wreg free
 11965                           
 11966                           ;diskio.c: 288: command(0X48, 0x000001AA, 0x87);
 11967  001DDE  0EAA               	movlw	170
 11968  001DE0  6E20               	movwf	command@arg^0,c
 11969  001DE2  0E01               	movlw	1
 11970  001DE4  6E21               	movwf	(command@arg+1)^0,c
 11971  001DE6  0E00               	movlw	0
 11972  001DE8  6E22               	movwf	(command@arg+2)^0,c
 11973  001DEA  0E00               	movlw	0
 11974  001DEC  6E23               	movwf	(command@arg+3)^0,c
 11975  001DEE  0E87               	movlw	135
 11976  001DF0  6E24               	movwf	command@CRC^0,c
 11977  001DF2  0E48               	movlw	72
 11978  001DF4  EC1F  F025         	call	_command
 11979                           
 11980                           ;diskio.c: 289: proceed();
 11981  001DF8  ECEB  F028         	call	_proceed	;wreg free
 11982  001DFC                     l9725:
 11983                           
 11984                           ;diskio.c: 291: buff_i = response();
 11985  001DFC  ECE5  F028         	call	_response	;wreg free
 11986  001E00  0100               	movlb	0	; () banked
 11987  001E02  6F66               	movwf	sdc_disk_initialize@buff_i& (0+255),b
 11988                           
 11989                           ; BSR set to: 0
 11990                           ;diskio.c: 292: if(buff_i == 1)
 11991  001E04  0566               	decf	sdc_disk_initialize@buff_i& (0+255),w,b
 11992  001E06  A4D8               	btfss	status,2,c
 11993  001E08  D004               	goto	l9731
 11994                           
 11995                           ; BSR set to: 0
 11996                           ;diskio.c: 293: {;diskio.c: 294: crc_number = buff_i<<8;
 11997  001E0A  5166               	movf	sdc_disk_initialize@buff_i& (0+255),w,b
 11998  001E0C  6F65               	movwf	(sdc_disk_initialize@crc_number+1)& (0+255),b
 11999  001E0E  6B64               	clrf	sdc_disk_initialize@crc_number& (0+255),b
 12000                           
 12001                           ;diskio.c: 295: }
 12002  001E10  D006               	goto	l9735
 12003  001E12                     l9731:
 12004                           
 12005                           ; BSR set to: 0
 12006                           ;diskio.c: 296: else if(buff_i==0xAA)
 12007  001E12  0EAA               	movlw	170
 12008  001E14  1966               	xorwf	sdc_disk_initialize@buff_i& (0+255),w,b
 12009  001E16  A4D8               	btfss	status,2,c
 12010  001E18  D002               	goto	l9735
 12011                           
 12012                           ; BSR set to: 0
 12013                           ;diskio.c: 297: {;diskio.c: 298: crc_number |= buff_i;
 12014  001E1A  5166               	movf	sdc_disk_initialize@buff_i& (0+255),w,b
 12015  001E1C  1364               	iorwf	sdc_disk_initialize@crc_number& (0+255),f,b
 12016  001E1E                     l9735:
 12017                           
 12018                           ; BSR set to: 0
 12019                           ;diskio.c: 299: };diskio.c: 300: count1++;
 12020  001E1E  4B62               	infsnz	sdc_disk_initialize@count1& (0+255),f,b
 12021  001E20  2B63               	incf	(sdc_disk_initialize@count1+1)& (0+255),f,b
 12022                           
 12023                           ; BSR set to: 0
 12024                           ;diskio.c: 301: }while(crc_number != 0x1AA && count1<1000);
 12025  001E22  0EAA               	movlw	170
 12026  001E24  1964               	xorwf	sdc_disk_initialize@crc_number& (0+255),w,b
 12027  001E26  E103               	bnz	u11630
 12028  001E28  0565               	decf	(sdc_disk_initialize@crc_number+1)& (0+255),w,b
 12029  001E2A  B4D8               	btfsc	status,2,c
 12030  001E2C  D008               	goto	u11640
 12031  001E2E                     u11630:
 12032                           
 12033                           ; BSR set to: 0
 12034  001E2E  BF63               	btfsc	(sdc_disk_initialize@count1+1)& (0+255),7,b
 12035  001E30  D7E5               	goto	l9725
 12036  001E32  0EE8               	movlw	232
 12037  001E34  5D62               	subwf	sdc_disk_initialize@count1& (0+255),w,b
 12038  001E36  0E03               	movlw	3
 12039  001E38  5963               	subwfb	(sdc_disk_initialize@count1+1)& (0+255),w,b
 12040  001E3A  A0D8               	btfss	status,0,c
 12041  001E3C  D7DF               	goto	l9725
 12042  001E3E                     u11640:
 12043                           
 12044                           ; BSR set to: 0
 12045                           ;diskio.c: 306: if (crc_number == 0x1AA)
 12046  001E3E  0EAA               	movlw	170
 12047  001E40  1964               	xorwf	sdc_disk_initialize@crc_number& (0+255),w,b
 12048  001E42  E102               	bnz	u11651
 12049  001E44  0565               	decf	(sdc_disk_initialize@crc_number+1)& (0+255),w,b
 12050  001E46  A4D8               	btfss	status,2,c
 12051  001E48                     u11651:
 12052  001E48  D09F               	goto	l9813
 12053  001E4A                     u11650:
 12054                           
 12055                           ; BSR set to: 0
 12056                           ;diskio.c: 310: count2 = 0;
 12057                           
 12058                           ; BSR set to: 0
 12059                           ;diskio.c: 309: do{
 12060  001E4A  0E00               	movlw	0
 12061  001E4C  6F69               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 12062  001E4E  0E00               	movlw	0
 12063  001E50  6F68               	movwf	sdc_disk_initialize@count2& (0+255),b
 12064  001E52                     
 12065                           ; BSR set to: 0
 12066                           ;diskio.c: 319: dummy_clocks(10);
 12067                           
 12068                           ; BSR set to: 0
 12069  001E52  0E0A               	movlw	10
 12070  001E54  EC0D  F027         	call	_dummy_clocks
 12071                           
 12072                           ;diskio.c: 320: command(0X77, 0X00000000, 0X00);
 12073  001E58  0E00               	movlw	0
 12074  001E5A  6E20               	movwf	command@arg^0,c
 12075  001E5C  0E00               	movlw	0
 12076  001E5E  6E21               	movwf	(command@arg+1)^0,c
 12077  001E60  0E00               	movlw	0
 12078  001E62  6E22               	movwf	(command@arg+2)^0,c
 12079  001E64  0E00               	movlw	0
 12080  001E66  6E23               	movwf	(command@arg+3)^0,c
 12081  001E68  0E00               	movlw	0
 12082  001E6A  6E24               	movwf	command@CRC^0,c
 12083  001E6C  0E77               	movlw	119
 12084  001E6E  EC1F  F025         	call	_command
 12085                           
 12086                           ;diskio.c: 323: proceed();
 12087  001E72  ECEB  F028         	call	_proceed	;wreg free
 12088  001E76                     l9755:
 12089                           
 12090                           ;diskio.c: 325: buff = response();
 12091  001E76  ECE5  F028         	call	_response	;wreg free
 12092  001E7A  0100               	movlb	0	; () banked
 12093  001E7C  6F6A               	movwf	sdc_disk_initialize@buff& (0+255),b
 12094                           
 12095                           ; BSR set to: 0
 12096                           ;diskio.c: 326: count2++;
 12097  001E7E  4B68               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 12098  001E80  2B69               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 12099                           
 12100                           ;diskio.c: 327: }while((buff!=0X01)&&(count2<10));
 12101  001E82  056A               	decf	sdc_disk_initialize@buff& (0+255),w,b
 12102  001E84  B4D8               	btfsc	status,2,c
 12103  001E86  D008               	goto	u11670
 12104                           
 12105                           ; BSR set to: 0
 12106  001E88  BF69               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 12107  001E8A  D7F5               	goto	l9755
 12108  001E8C  5169               	movf	(sdc_disk_initialize@count2+1)& (0+255),w,b
 12109  001E8E  E104               	bnz	u11670
 12110  001E90  0E0A               	movlw	10
 12111  001E92  5D68               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 12112  001E94  A0D8               	btfss	status,0,c
 12113  001E96  D7EF               	goto	l9755
 12114  001E98                     u11670:
 12115                           
 12116                           ; BSR set to: 0
 12117                           ;diskio.c: 328: count2 = 0;
 12118  001E98  0E00               	movlw	0
 12119  001E9A  6F69               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 12120  001E9C  0E00               	movlw	0
 12121  001E9E  6F68               	movwf	sdc_disk_initialize@count2& (0+255),b
 12122                           
 12123                           ; BSR set to: 0
 12124                           ;diskio.c: 332: dummy_clocks(10);
 12125  001EA0  0E0A               	movlw	10
 12126  001EA2  EC0D  F027         	call	_dummy_clocks
 12127                           
 12128                           ;diskio.c: 333: command(0X69, 0X40000000 , 0x00);
 12129  001EA6  0E00               	movlw	0
 12130  001EA8  6E20               	movwf	command@arg^0,c
 12131  001EAA  0E00               	movlw	0
 12132  001EAC  6E21               	movwf	(command@arg+1)^0,c
 12133  001EAE  0E00               	movlw	0
 12134  001EB0  6E22               	movwf	(command@arg+2)^0,c
 12135  001EB2  0E40               	movlw	64
 12136  001EB4  6E23               	movwf	(command@arg+3)^0,c
 12137  001EB6  0E00               	movlw	0
 12138  001EB8  6E24               	movwf	command@CRC^0,c
 12139  001EBA  0E69               	movlw	105
 12140  001EBC  EC1F  F025         	call	_command
 12141                           
 12142                           ;diskio.c: 334: proceed();
 12143  001EC0  ECEB  F028         	call	_proceed	;wreg free
 12144                           
 12145                           ;diskio.c: 335: buff = response();
 12146  001EC4  ECE5  F028         	call	_response	;wreg free
 12147  001EC8  0100               	movlb	0	; () banked
 12148  001ECA  6F6A               	movwf	sdc_disk_initialize@buff& (0+255),b
 12149                           
 12150                           ; BSR set to: 0
 12151                           ;diskio.c: 336: count2++;
 12152  001ECC  4B68               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 12153  001ECE  2B69               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 12154                           
 12155                           ; BSR set to: 0
 12156                           ;diskio.c: 337: }while(buff!=0X00);
 12157  001ED0  516A               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12158  001ED2  A4D8               	btfss	status,2,c
 12159  001ED4  D7BE               	goto	l9745
 12160                           
 12161                           ; BSR set to: 0
 12162                           ;diskio.c: 342: dummy_clocks(10);
 12163                           
 12164                           ; BSR set to: 0
 12165  001ED6  0E0A               	movlw	10
 12166  001ED8  EC0D  F027         	call	_dummy_clocks
 12167                           
 12168                           ;diskio.c: 343: command(0X7A, 0X00000000, 0XFF);
 12169  001EDC  0E00               	movlw	0
 12170  001EDE  6E20               	movwf	command@arg^0,c
 12171  001EE0  0E00               	movlw	0
 12172  001EE2  6E21               	movwf	(command@arg+1)^0,c
 12173  001EE4  0E00               	movlw	0
 12174  001EE6  6E22               	movwf	(command@arg+2)^0,c
 12175  001EE8  0E00               	movlw	0
 12176  001EEA  6E23               	movwf	(command@arg+3)^0,c
 12177  001EEC  0EFF               	movlw	255
 12178  001EEE  6E24               	movwf	command@CRC^0,c
 12179  001EF0  0E7A               	movlw	122
 12180  001EF2  EC1F  F025         	call	_command
 12181                           
 12182                           ;diskio.c: 344: proceed();
 12183  001EF6  ECEB  F028         	call	_proceed	;wreg free
 12184  001EFA                     l9779:
 12185                           
 12186                           ;diskio.c: 346: buff = response();
 12187  001EFA  ECE5  F028         	call	_response	;wreg free
 12188  001EFE  0100               	movlb	0	; () banked
 12189  001F00  6F6A               	movwf	sdc_disk_initialize@buff& (0+255),b
 12190                           
 12191                           ; BSR set to: 0
 12192                           ;diskio.c: 347: ocr = (buff << 1) & 0b10000000;
 12193  001F02  516A               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12194  001F04  256A               	addwf	sdc_disk_initialize@buff& (0+255),w,b
 12195  001F06  0B80               	andlw	128
 12196  001F08  6F67               	movwf	sdc_disk_initialize@ocr& (0+255),b
 12197                           
 12198                           ; BSR set to: 0
 12199                           ;diskio.c: 348: count2++;
 12200  001F0A  4B68               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 12201  001F0C  2B69               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;diskio.c: 349: }while(ocr!=0X00 && ocr != 0x01 && count2<10);
 12205  001F0E  5167               	movf	sdc_disk_initialize@ocr& (0+255),w,b
 12206  001F10  B4D8               	btfsc	status,2,c
 12207  001F12  D00B               	goto	u11710
 12208                           
 12209                           ; BSR set to: 0
 12210  001F14  0567               	decf	sdc_disk_initialize@ocr& (0+255),w,b
 12211  001F16  B4D8               	btfsc	status,2,c
 12212  001F18  D008               	goto	u11710
 12213                           
 12214                           ; BSR set to: 0
 12215  001F1A  BF69               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 12216  001F1C  D7EE               	goto	l9779
 12217  001F1E  5169               	movf	(sdc_disk_initialize@count2+1)& (0+255),w,b
 12218  001F20  E104               	bnz	u11710
 12219  001F22  0E0A               	movlw	10
 12220  001F24  5D68               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 12221  001F26  A0D8               	btfss	status,0,c
 12222  001F28  D7E8               	goto	l9779
 12223  001F2A                     u11710:
 12224                           
 12225                           ; BSR set to: 0
 12226                           ;diskio.c: 350: }while(ocr != 0X00 && ocr !=0x01);
 12227  001F2A  5167               	movf	sdc_disk_initialize@ocr& (0+255),w,b
 12228  001F2C  B4D8               	btfsc	status,2,c
 12229  001F2E  D003               	goto	u11730
 12230                           
 12231                           ; BSR set to: 0
 12232  001F30  0567               	decf	sdc_disk_initialize@ocr& (0+255),w,b
 12233  001F32  A4D8               	btfss	status,2,c
 12234  001F34  D78A               	goto	u11650
 12235  001F36                     u11730:
 12236                           
 12237                           ; BSR set to: 0
 12238                           ;diskio.c: 355: _delay((unsigned long)((1)*(48000000/4000.0)));
 12239                           
 12240                           ; BSR set to: 0
 12241  001F36  0E10               	movlw	16
 12242  001F38  0100               	movlb	0	; () banked
 12243  001F3A  6F60               	movwf	??_sdc_disk_initialize& (0+255),b
 12244  001F3C  0E94               	movlw	148
 12245  001F3E                     u15957:
 12246  001F3E  2EE8               	decfsz	wreg,f,c
 12247  001F40  D7FE               	bra	u15957
 12248  001F42  2F60               	decfsz	??_sdc_disk_initialize& (0+255),f,b
 12249  001F44  D7FC               	bra	u15957
 12250  001F46  F000               	nop	
 12251                           
 12252                           ;diskio.c: 356: stat = 0X00;
 12253  001F48  0E00               	movlw	0
 12254  001F4A  0100               	movlb	0	; () banked
 12255  001F4C  6F61               	movwf	sdc_disk_initialize@stat& (0+255),b
 12256                           
 12257                           ; BSR set to: 0
 12258                           ;diskio.c: 358: if(!ocr)
 12259  001F4E  5167               	movf	sdc_disk_initialize@ocr& (0+255),w,b
 12260  001F50  A4D8               	btfss	status,2,c
 12261  001F52  D0AD               	goto	u11830
 12262                           
 12263                           ; BSR set to: 0
 12264                           ;diskio.c: 359: {;diskio.c: 361: dummy_clocks(10);
 12265  001F54  0E0A               	movlw	10
 12266  001F56  EC0D  F027         	call	_dummy_clocks
 12267                           
 12268                           ;diskio.c: 362: command(0x50, 0x00000200,0XFF);
 12269  001F5A  0E00               	movlw	0
 12270  001F5C  6E20               	movwf	command@arg^0,c
 12271  001F5E  0E02               	movlw	2
 12272  001F60  6E21               	movwf	(command@arg+1)^0,c
 12273  001F62  0E00               	movlw	0
 12274  001F64  6E22               	movwf	(command@arg+2)^0,c
 12275  001F66  0E00               	movlw	0
 12276  001F68  6E23               	movwf	(command@arg+3)^0,c
 12277  001F6A  0EFF               	movlw	255
 12278  001F6C  6E24               	movwf	command@CRC^0,c
 12279  001F6E  0E50               	movlw	80
 12280  001F70  EC1F  F025         	call	_command
 12281                           
 12282                           ;diskio.c: 363: proceed();
 12283  001F74  ECEB  F028         	call	_proceed	;wreg free
 12284  001F78                     
 12285                           ;diskio.c: 367: buff = response();
 12286  001F78  ECE5  F028         	call	_response	;wreg free
 12287  001F7C  0100               	movlb	0	; () banked
 12288  001F7E  6F6A               	movwf	sdc_disk_initialize@buff& (0+255),b
 12289                           
 12290                           ; BSR set to: 0
 12291                           ;diskio.c: 368: }while(buff!=0X00);
 12292  001F80  516A               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12293  001F82  B4D8               	btfsc	status,2,c
 12294  001F84  D094               	goto	u11830
 12295  001F86  D7F8               	goto	l9807
 12296  001F88                     l9813:
 12297                           
 12298                           ; BSR set to: 0
 12299                           ;diskio.c: 373: else;diskio.c: 374: {;diskio.c: 376: count2 = 0;
 12300  001F88  0E00               	movlw	0
 12301  001F8A  6F69               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 12302  001F8C  0E00               	movlw	0
 12303  001F8E  6F68               	movwf	sdc_disk_initialize@count2& (0+255),b
 12304                           
 12305                           ; BSR set to: 0
 12306                           ;diskio.c: 378: dummy_clocks(1);
 12307                           
 12308                           ; BSR set to: 0
 12309  001F90  0E01               	movlw	1
 12310  001F92  EC0D  F027         	call	_dummy_clocks
 12311                           
 12312                           ;diskio.c: 379: command(0X69, 0X00000000, 0XFF);
 12313  001F96  0E00               	movlw	0
 12314  001F98  6E20               	movwf	command@arg^0,c
 12315  001F9A  0E00               	movlw	0
 12316  001F9C  6E21               	movwf	(command@arg+1)^0,c
 12317  001F9E  0E00               	movlw	0
 12318  001FA0  6E22               	movwf	(command@arg+2)^0,c
 12319  001FA2  0E00               	movlw	0
 12320  001FA4  6E23               	movwf	(command@arg+3)^0,c
 12321  001FA6  0EFF               	movlw	255
 12322  001FA8  6E24               	movwf	command@CRC^0,c
 12323  001FAA  0E69               	movlw	105
 12324  001FAC  EC1F  F025         	call	_command
 12325                           
 12326                           ;diskio.c: 380: proceed();
 12327  001FB0  ECEB  F028         	call	_proceed	;wreg free
 12328  001FB4                     l9823:
 12329                           
 12330                           ;diskio.c: 382: buff = response();
 12331  001FB4  ECE5  F028         	call	_response	;wreg free
 12332  001FB8  0100               	movlb	0	; () banked
 12333  001FBA  6F6A               	movwf	sdc_disk_initialize@buff& (0+255),b
 12334                           
 12335                           ; BSR set to: 0
 12336                           ;diskio.c: 383: count2++;
 12337  001FBC  4B68               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 12338  001FBE  2B69               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 12339                           
 12340                           ; BSR set to: 0
 12341                           ;diskio.c: 384: if(buff==0x00)
 12342  001FC0  516A               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12343  001FC2  A4D8               	btfss	status,2,c
 12344  001FC4  D00B               	goto	l9833
 12345                           
 12346                           ; BSR set to: 0
 12347                           ;diskio.c: 385: {;diskio.c: 386: posicao_cursor_lcd(1,0);
 12348  001FC6  0E00               	movlw	0
 12349  001FC8  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
 12350  001FCA  0E01               	movlw	1
 12351  001FCC  ECF0  F024         	call	_posicao_cursor_lcd
 12352                           
 12353                           ;diskio.c: 387: escreve_frase_ram_lcd("SD VER. 1");
 12354  001FD0  0E22               	movlw	low STR_28
 12355  001FD2  6E1E               	movwf	escreve_frase_ram_lcd@buffer^0,c
 12356  001FD4  0E62               	movlw	high STR_28
 12357  001FD6  6E1F               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 12358  001FD8  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
 12359  001FDC                     l9833:
 12360                           
 12361                           ;diskio.c: 388: };diskio.c: 389: _delay((unsigned long)((1)*(48000000/4000.0)));
 12362  001FDC  0E10               	movlw	16
 12363  001FDE  0100               	movlb	0	; () banked
 12364  001FE0  6F60               	movwf	??_sdc_disk_initialize& (0+255),b
 12365  001FE2  0E94               	movlw	148
 12366  001FE4                     u15967:
 12367  001FE4  2EE8               	decfsz	wreg,f,c
 12368  001FE6  D7FE               	bra	u15967
 12369  001FE8  2F60               	decfsz	??_sdc_disk_initialize& (0+255),f,b
 12370  001FEA  D7FC               	bra	u15967
 12371  001FEC  F000               	nop	
 12372                           
 12373                           ;diskio.c: 390: }while(buff!=0X00 && count2<10000);
 12374  001FEE  0100               	movlb	0	; () banked
 12375  001FF0  516A               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12376  001FF2  B4D8               	btfsc	status,2,c
 12377  001FF4  D008               	goto	u11780
 12378                           
 12379                           ; BSR set to: 0
 12380  001FF6  BF69               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 12381  001FF8  D7DD               	goto	l9823
 12382  001FFA  0E10               	movlw	16
 12383  001FFC  5D68               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 12384  001FFE  0E27               	movlw	39
 12385  002000  5969               	subwfb	(sdc_disk_initialize@count2+1)& (0+255),w,b
 12386  002002  A0D8               	btfss	status,0,c
 12387  002004  D7D7               	goto	l9823
 12388  002006                     u11780:
 12389                           
 12390                           ; BSR set to: 0
 12391                           ;diskio.c: 393: if(count2==10)
 12392                           
 12393                           ; BSR set to: 0
 12394  002006  0E0A               	movlw	10
 12395  002008  1968               	xorwf	sdc_disk_initialize@count2& (0+255),w,b
 12396  00200A  1169               	iorwf	(sdc_disk_initialize@count2+1)& (0+255),w,b
 12397  00200C  A4D8               	btfss	status,2,c
 12398  00200E  D036               	goto	u11820
 12399                           
 12400                           ; BSR set to: 0
 12401                           ;diskio.c: 394: {;diskio.c: 395: count2 = 0;
 12402  002010  0E00               	movlw	0
 12403  002012  6F69               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 12404  002014  0E00               	movlw	0
 12405  002016  6F68               	movwf	sdc_disk_initialize@count2& (0+255),b
 12406                           
 12407                           ; BSR set to: 0
 12408                           ;diskio.c: 396: dummy_clocks(10);
 12409  002018  0E0A               	movlw	10
 12410  00201A  EC0D  F027         	call	_dummy_clocks
 12411                           
 12412                           ;diskio.c: 397: command(0X41, 0X00000000, 0XFF);
 12413  00201E  0E00               	movlw	0
 12414  002020  6E20               	movwf	command@arg^0,c
 12415  002022  0E00               	movlw	0
 12416  002024  6E21               	movwf	(command@arg+1)^0,c
 12417  002026  0E00               	movlw	0
 12418  002028  6E22               	movwf	(command@arg+2)^0,c
 12419  00202A  0E00               	movlw	0
 12420  00202C  6E23               	movwf	(command@arg+3)^0,c
 12421  00202E  0EFF               	movlw	255
 12422  002030  6E24               	movwf	command@CRC^0,c
 12423  002032  0E41               	movlw	65
 12424  002034  EC1F  F025         	call	_command
 12425                           
 12426                           ;diskio.c: 398: proceed();
 12427  002038  ECEB  F028         	call	_proceed	;wreg free
 12428  00203C                     l9849:
 12429                           
 12430                           ;diskio.c: 400: buff = response();
 12431  00203C  ECE5  F028         	call	_response	;wreg free
 12432  002040  0100               	movlb	0	; () banked
 12433  002042  6F6A               	movwf	sdc_disk_initialize@buff& (0+255),b
 12434                           
 12435                           ; BSR set to: 0
 12436                           ;diskio.c: 401: count2++;
 12437  002044  4B68               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 12438  002046  2B69               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 12439                           
 12440                           ; BSR set to: 0
 12441                           ;diskio.c: 402: if(buff==0x00)
 12442  002048  516A               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12443  00204A  A4D8               	btfss	status,2,c
 12444  00204C  D00B               	goto	l9859
 12445                           
 12446                           ; BSR set to: 0
 12447                           ;diskio.c: 403: {;diskio.c: 404: posicao_cursor_lcd(1,0);
 12448  00204E  0E00               	movlw	0
 12449  002050  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
 12450  002052  0E01               	movlw	1
 12451  002054  ECF0  F024         	call	_posicao_cursor_lcd
 12452                           
 12453                           ;diskio.c: 405: escreve_frase_ram_lcd("MMC Ver. 3");
 12454  002058  0E0C               	movlw	low STR_29
 12455  00205A  6E1E               	movwf	escreve_frase_ram_lcd@buffer^0,c
 12456  00205C  0E62               	movlw	high STR_29
 12457  00205E  6E1F               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 12458  002060  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
 12459  002064                     l9859:
 12460                           
 12461                           ;diskio.c: 406: };diskio.c: 408: }while(buff!=0X00 && count2<10000);
 12462  002064  0100               	movlb	0	; () banked
 12463  002066  516A               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12464  002068  B4D8               	btfsc	status,2,c
 12465  00206A  D008               	goto	u11820
 12466                           
 12467                           ; BSR set to: 0
 12468  00206C  BF69               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 12469  00206E  D7E6               	goto	l9849
 12470  002070  0E10               	movlw	16
 12471  002072  5D68               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 12472  002074  0E27               	movlw	39
 12473  002076  5969               	subwfb	(sdc_disk_initialize@count2+1)& (0+255),w,b
 12474  002078  A0D8               	btfss	status,0,c
 12475  00207A  D7E0               	goto	l9849
 12476  00207C                     u11820:
 12477                           
 12478                           ; BSR set to: 0
 12479                           ;diskio.c: 409: };diskio.c: 412: dummy_clocks(10);
 12480  00207C  0E0A               	movlw	10
 12481  00207E  EC0D  F027         	call	_dummy_clocks
 12482                           
 12483                           ;diskio.c: 413: command(0X50,0X00000200,0XFF);
 12484  002082  0E00               	movlw	0
 12485  002084  6E20               	movwf	command@arg^0,c
 12486  002086  0E02               	movlw	2
 12487  002088  6E21               	movwf	(command@arg+1)^0,c
 12488  00208A  0E00               	movlw	0
 12489  00208C  6E22               	movwf	(command@arg+2)^0,c
 12490  00208E  0E00               	movlw	0
 12491  002090  6E23               	movwf	(command@arg+3)^0,c
 12492  002092  0EFF               	movlw	255
 12493  002094  6E24               	movwf	command@CRC^0,c
 12494  002096  0E50               	movlw	80
 12495  002098  EC1F  F025         	call	_command
 12496                           
 12497                           ;diskio.c: 414: proceed();
 12498  00209C  ECEB  F028         	call	_proceed	;wreg free
 12499  0020A0                     
 12500                           ;diskio.c: 418: buff = response();
 12501  0020A0  ECE5  F028         	call	_response	;wreg free
 12502  0020A4  0100               	movlb	0	; () banked
 12503  0020A6  6F6A               	movwf	sdc_disk_initialize@buff& (0+255),b
 12504                           
 12505                           ; BSR set to: 0
 12506                           ;diskio.c: 419: }while(buff!=0X00);
 12507  0020A8  516A               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12508  0020AA  A4D8               	btfss	status,2,c
 12509  0020AC  D7F9               	goto	l9867
 12510  0020AE                     u11830:
 12511                           
 12512                           ; BSR set to: 0
 12513                           ;diskio.c: 421: };diskio.c: 425: return stat;
 12514  0020AE  5161               	movf	sdc_disk_initialize@stat& (0+255),w,b
 12515                           
 12516                           ; BSR set to: 0
 12517  0020B0  0012               	return		;funcret
 12518  0020B2                     __end_of_sdc_disk_initialize:
 12519                           	callstack 0
 12520                           
 12521 ;; *************** function _sdc_reset *****************
 12522 ;; Defined at:
 12523 ;;		line 238 in file "bibliotecas/diskio.c"
 12524 ;; Parameters:    Size  Location     Type
 12525 ;;		None
 12526 ;; Auto vars:     Size  Location     Type
 12527 ;;  teste          10    0        unsigned char [10]
 12528 ;;  count           2   40[COMRAM] int 
 12529 ;;  count_nosd      2   38[COMRAM] int 
 12530 ;;  i               2    0        int 
 12531 ;;  receive         2    0        unsigned int 
 12532 ;;  buff            1   42[COMRAM] unsigned char 
 12533 ;;  stat            1    0        unsigned char 
 12534 ;; Return value:  Size  Location     Type
 12535 ;;                  1    wreg      void 
 12536 ;; Registers used:
 12537 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12538 ;; Tracked objects:
 12539 ;;		On entry : 0/0
 12540 ;;		On exit  : 0/0
 12541 ;;		Unchanged: 0/0
 12542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12543 ;;      Params:         0       0       0       0       0       0       0       0       0
 12544 ;;      Locals:         5       0       0       0       0       0       0       0       0
 12545 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12546 ;;      Totals:         5       0       0       0       0       0       0       0       0
 12547 ;;Total ram usage:        5 bytes
 12548 ;; Hardware stack levels used: 1
 12549 ;; Hardware stack levels required when called: 6
 12550 ;; This function calls:
 12551 ;;		_command
 12552 ;;		_escreve_frase_ram_lcd
 12553 ;;		_posicao_cursor_lcd
 12554 ;;		_proceed
 12555 ;;		_response
 12556 ;; This function is called by:
 12557 ;;		_sdc_disk_initialize
 12558 ;; This function uses a non-reentrant model
 12559 ;;
 12560                           
 12561                           	psect	text49
 12562  004432                     __ptext49:
 12563                           	callstack 0
 12564  004432                     _sdc_reset:
 12565                           	callstack 17
 12566                           
 12567                           ; BSR set to: 0
 12568                           ;incstack = 0
 12569  004432  0E00               	movlw	0
 12570  004434  6E2A               	movwf	(sdc_reset@count+1)^0,c
 12571  004436  0E00               	movlw	0
 12572  004438  6E29               	movwf	sdc_reset@count^0,c
 12573  00443A  0E00               	movlw	0
 12574  00443C  6E28               	movwf	(sdc_reset@count_nosd+1)^0,c
 12575  00443E  0E00               	movlw	0
 12576  004440  6E27               	movwf	sdc_reset@count_nosd^0,c
 12577  004442                     l9567:
 12578                           
 12579                           ;diskio.c: 248: command(0x40, 0X00000000, 0X95);
 12580  004442  0E00               	movlw	0
 12581  004444  6E20               	movwf	command@arg^0,c
 12582  004446  0E00               	movlw	0
 12583  004448  6E21               	movwf	(command@arg+1)^0,c
 12584  00444A  0E00               	movlw	0
 12585  00444C  6E22               	movwf	(command@arg+2)^0,c
 12586  00444E  0E00               	movlw	0
 12587  004450  6E23               	movwf	(command@arg+3)^0,c
 12588  004452  0E95               	movlw	149
 12589  004454  6E24               	movwf	command@CRC^0,c
 12590  004456  0E40               	movlw	64
 12591  004458  EC1F  F025         	call	_command
 12592                           
 12593                           ;diskio.c: 249: proceed();
 12594  00445C  ECEB  F028         	call	_proceed	;wreg free
 12595  004460                     l9571:
 12596                           
 12597                           ;diskio.c: 251: buff = response();
 12598  004460  ECE5  F028         	call	_response	;wreg free
 12599  004464  6E2B               	movwf	sdc_reset@buff^0,c
 12600                           
 12601                           ;diskio.c: 252: count++;
 12602  004466  4A29               	infsnz	sdc_reset@count^0,f,c
 12603  004468  2A2A               	incf	(sdc_reset@count+1)^0,f,c
 12604                           
 12605                           ;diskio.c: 253: }while(buff!=0X01 && count<10);
 12606  00446A  042B               	decf	sdc_reset@buff^0,w,c
 12607  00446C  B4D8               	btfsc	status,2,c
 12608  00446E  D008               	goto	u11380
 12609  004470  BE2A               	btfsc	(sdc_reset@count+1)^0,7,c
 12610  004472  D7F6               	goto	l9571
 12611  004474  502A               	movf	(sdc_reset@count+1)^0,w,c
 12612  004476  E104               	bnz	u11380
 12613  004478  0E0A               	movlw	10
 12614  00447A  5C29               	subwf	sdc_reset@count^0,w,c
 12615  00447C  A0D8               	btfss	status,0,c
 12616  00447E  D7F0               	goto	l9571
 12617  004480                     u11380:
 12618                           
 12619                           ;diskio.c: 254: count = 0;
 12620  004480  0E00               	movlw	0
 12621  004482  6E2A               	movwf	(sdc_reset@count+1)^0,c
 12622  004484  0E00               	movlw	0
 12623  004486  6E29               	movwf	sdc_reset@count^0,c
 12624                           
 12625                           ;diskio.c: 255: if(buff != 0x01)
 12626  004488  042B               	decf	sdc_reset@buff^0,w,c
 12627  00448A  B4D8               	btfsc	status,2,c
 12628  00448C  D016               	goto	l9589
 12629                           
 12630                           ;diskio.c: 256: {;diskio.c: 257: posicao_cursor_lcd(1,0);
 12631  00448E  0E00               	movlw	0
 12632  004490  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
 12633  004492  0E01               	movlw	1
 12634  004494  ECF0  F024         	call	_posicao_cursor_lcd
 12635                           
 12636                           ;diskio.c: 258: escreve_frase_ram_lcd("Sem Cartao");
 12637  004498  0E17               	movlw	low STR_26
 12638  00449A  6E1E               	movwf	escreve_frase_ram_lcd@buffer^0,c
 12639  00449C  0E62               	movlw	high STR_26
 12640  00449E  6E1F               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 12641  0044A0  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
 12642                           
 12643                           ;diskio.c: 259: posicao_cursor_lcd(2,0);
 12644  0044A4  0E00               	movlw	0
 12645  0044A6  6E1E               	movwf	posicao_cursor_lcd@coluna^0,c
 12646  0044A8  0E02               	movlw	2
 12647  0044AA  ECF0  F024         	call	_posicao_cursor_lcd
 12648                           
 12649                           ;diskio.c: 260: escreve_frase_ram_lcd("Insira o Cartao");
 12650  0044AE  0E84               	movlw	low STR_27
 12651  0044B0  6E1E               	movwf	escreve_frase_ram_lcd@buffer^0,c
 12652  0044B2  0E61               	movlw	high STR_27
 12653  0044B4  6E1F               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 12654  0044B6  ECA0  F025         	call	_escreve_frase_ram_lcd	;wreg free
 12655  0044BA                     l9589:
 12656                           
 12657                           ;diskio.c: 261: };diskio.c: 263: }while(buff!=0X01);
 12658  0044BA  042B               	decf	sdc_reset@buff^0,w,c
 12659  0044BC  B4D8               	btfsc	status,2,c
 12660  0044BE  0012               	return	
 12661  0044C0  D7C0               	goto	l9567
 12662  0044C2                     __end_of_sdc_reset:
 12663                           	callstack 0
 12664                           
 12665 ;; *************** function _posicao_cursor_lcd *****************
 12666 ;; Defined at:
 12667 ;;		line 271 in file "bibliotecas/display_lcd.c"
 12668 ;; Parameters:    Size  Location     Type
 12669 ;;  linha           1    wreg     unsigned char 
 12670 ;;  coluna          1   29[COMRAM] unsigned char 
 12671 ;; Auto vars:     Size  Location     Type
 12672 ;;  linha           1   30[COMRAM] unsigned char 
 12673 ;;  endereco        1   31[COMRAM] unsigned char 
 12674 ;; Return value:  Size  Location     Type
 12675 ;;                  1    wreg      void 
 12676 ;; Registers used:
 12677 ;;		wreg, status,2, status,0, cstack
 12678 ;; Tracked objects:
 12679 ;;		On entry : 0/0
 12680 ;;		On exit  : 0/0
 12681 ;;		Unchanged: 0/0
 12682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12683 ;;      Params:         1       0       0       0       0       0       0       0       0
 12684 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12685 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12686 ;;      Totals:         3       0       0       0       0       0       0       0       0
 12687 ;;Total ram usage:        3 bytes
 12688 ;; Hardware stack levels used: 1
 12689 ;; Hardware stack levels required when called: 5
 12690 ;; This function calls:
 12691 ;;		_endereco_cursor_lcd
 12692 ;; This function is called by:
 12693 ;;		_mensagem_inicial
 12694 ;;		_verifica_fence_externo
 12695 ;;		_troca_de_tela
 12696 ;;		_sdc_reset
 12697 ;;		_sdc_disk_initialize
 12698 ;; This function uses a non-reentrant model
 12699 ;;
 12700                           
 12701                           	psect	text50
 12702  0049E0                     __ptext50:
 12703                           	callstack 0
 12704  0049E0                     _posicao_cursor_lcd:
 12705                           	callstack 24
 12706                           
 12707                           ;incstack = 0
 12708                           ;posicao_cursor_lcd@linha stored from wreg
 12709  0049E0  6E1F               	movwf	posicao_cursor_lcd@linha^0,c
 12710                           
 12711                           ;display_lcd.c: 275: if(coluna <= 0x10U)
 12712  0049E2  0E11               	movlw	17
 12713  0049E4  601E               	cpfslt	posicao_cursor_lcd@coluna^0,c
 12714  0049E6  0012               	return	
 12715  0049E8  D01B               	goto	l9405
 12716  0049EA                     l776:
 12717                           
 12718                           ;display_lcd.c: 282: endereco = 0x00U + coluna;
 12719  0049EA  C01E  F020         	movff	posicao_cursor_lcd@coluna,posicao_cursor_lcd@endereco
 12720                           
 12721                           ;display_lcd.c: 283: endereco_cursor_lcd(endereco);
 12722  0049EE  5020               	movf	posicao_cursor_lcd@endereco^0,w,c
 12723  0049F0  EC54  F024         	call	_endereco_cursor_lcd
 12724                           
 12725                           ;display_lcd.c: 284: break;
 12726  0049F4  D022               	goto	l9407
 12727  0049F6                     l9389:
 12728                           
 12729                           ;display_lcd.c: 287: endereco = 0x40U + coluna;
 12730  0049F6  501E               	movf	posicao_cursor_lcd@coluna^0,w,c
 12731  0049F8  0F40               	addlw	64
 12732  0049FA  6E20               	movwf	posicao_cursor_lcd@endereco^0,c
 12733                           
 12734                           ;display_lcd.c: 288: endereco_cursor_lcd(endereco);
 12735  0049FC  5020               	movf	posicao_cursor_lcd@endereco^0,w,c
 12736  0049FE  EC54  F024         	call	_endereco_cursor_lcd
 12737                           
 12738                           ;display_lcd.c: 289: break;
 12739  004A02  D01B               	goto	l9407
 12740  004A04                     l9393:
 12741                           
 12742                           ;display_lcd.c: 292: endereco = 0x14U + coluna;
 12743  004A04  501E               	movf	posicao_cursor_lcd@coluna^0,w,c
 12744  004A06  0F14               	addlw	20
 12745  004A08  6E20               	movwf	posicao_cursor_lcd@endereco^0,c
 12746                           
 12747                           ;display_lcd.c: 293: endereco_cursor_lcd(endereco);
 12748  004A0A  5020               	movf	posicao_cursor_lcd@endereco^0,w,c
 12749  004A0C  EC54  F024         	call	_endereco_cursor_lcd
 12750                           
 12751                           ;display_lcd.c: 294: break;
 12752  004A10  D014               	goto	l9407
 12753  004A12                     l9397:
 12754                           
 12755                           ;display_lcd.c: 297: endereco = 0x54U + coluna;
 12756  004A12  501E               	movf	posicao_cursor_lcd@coluna^0,w,c
 12757  004A14  0F54               	addlw	84
 12758  004A16  6E20               	movwf	posicao_cursor_lcd@endereco^0,c
 12759                           
 12760                           ;display_lcd.c: 298: endereco_cursor_lcd(endereco);
 12761  004A18  5020               	movf	posicao_cursor_lcd@endereco^0,w,c
 12762  004A1A  EC54  F024         	call	_endereco_cursor_lcd
 12763                           
 12764                           ;display_lcd.c: 303: break;
 12765                           
 12766                           ;display_lcd.c: 299: break;
 12767  004A1E  D00D               	goto	l9407
 12768  004A20                     l9405:
 12769  004A20  501F               	movf	posicao_cursor_lcd@linha^0,w,c
 12770                           
 12771                           ; Switch size 1, requested type "simple"
 12772                           ; Number of cases is 4, Range of values is 1 to 4
 12773                           ; switch strategies available:
 12774                           ; Name         Instructions Cycles
 12775                           ; simple_byte           13     7 (average)
 12776                           ;	Chosen strategy is simple_byte
 12777  004A22  0A01               	xorlw	1	; case 1
 12778  004A24  B4D8               	btfsc	status,2,c
 12779  004A26  D7E1               	goto	l776
 12780  004A28  0A03               	xorlw	3	; case 2
 12781  004A2A  B4D8               	btfsc	status,2,c
 12782  004A2C  D7E4               	goto	l9389
 12783  004A2E  0A01               	xorlw	1	; case 3
 12784  004A30  B4D8               	btfsc	status,2,c
 12785  004A32  D7E8               	goto	l9393
 12786  004A34  0A07               	xorlw	7	; case 4
 12787  004A36  B4D8               	btfsc	status,2,c
 12788  004A38  D7EC               	goto	l9397
 12789  004A3A                     l9407:
 12790                           
 12791                           ;display_lcd.c: 306: coluna++;
 12792  004A3A  2A1E               	incf	posicao_cursor_lcd@coluna^0,f,c
 12793                           
 12794                           ;display_lcd.c: 307: }
 12795  004A3C  0012               	return	
 12796  004A3E                     __end_of_posicao_cursor_lcd:
 12797                           	callstack 0
 12798                           
 12799 ;; *************** function _endereco_cursor_lcd *****************
 12800 ;; Defined at:
 12801 ;;		line 218 in file "bibliotecas/display_lcd.c"
 12802 ;; Parameters:    Size  Location     Type
 12803 ;;  endereco        1    wreg     unsigned char 
 12804 ;; Auto vars:     Size  Location     Type
 12805 ;;  endereco        1   28[COMRAM] unsigned char 
 12806 ;; Return value:  Size  Location     Type
 12807 ;;                  1    wreg      void 
 12808 ;; Registers used:
 12809 ;;		wreg, status,2, status,0, cstack
 12810 ;; Tracked objects:
 12811 ;;		On entry : 0/0
 12812 ;;		On exit  : 0/0
 12813 ;;		Unchanged: 0/0
 12814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12815 ;;      Params:         0       0       0       0       0       0       0       0       0
 12816 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12817 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12818 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12819 ;;Total ram usage:        1 bytes
 12820 ;; Hardware stack levels used: 1
 12821 ;; Hardware stack levels required when called: 4
 12822 ;; This function calls:
 12823 ;;		_delay
 12824 ;; This function is called by:
 12825 ;;		_posicao_cursor_lcd
 12826 ;; This function uses a non-reentrant model
 12827 ;;
 12828                           
 12829                           	psect	text51
 12830  0048A8                     __ptext51:
 12831                           	callstack 0
 12832  0048A8                     _endereco_cursor_lcd:
 12833                           	callstack 24
 12834                           
 12835                           ;incstack = 0
 12836                           ;endereco_cursor_lcd@endereco stored from wreg
 12837  0048A8  6E1D               	movwf	endereco_cursor_lcd@endereco^0,c
 12838                           
 12839                           ;display_lcd.c: 221: PORTDbits.RD2 = 0;
 12840  0048AA  9483               	bcf	131,2,c	;volatile
 12841                           
 12842                           ;display_lcd.c: 222: PORTDbits.RD1 = 0;
 12843  0048AC  9283               	bcf	131,1,c	;volatile
 12844                           
 12845                           ;display_lcd.c: 223: PORTDbits.RD0 = 0;
 12846  0048AE  9083               	bcf	131,0,c	;volatile
 12847                           
 12848                           ;display_lcd.c: 226: PORTDbits.RD7 = 1;
 12849  0048B0  8E83               	bsf	131,7,c	;volatile
 12850                           
 12851                           ;display_lcd.c: 227: if(endereco&0b00010000){PORTDbits.RD4=1;}
 12852  0048B2  A81D               	btfss	endereco_cursor_lcd@endereco^0,4,c
 12853  0048B4  D002               	goto	l757
 12854  0048B6  8883               	bsf	131,4,c	;volatile
 12855  0048B8  D001               	goto	l9269
 12856  0048BA                     l757:
 12857                           
 12858                           ;display_lcd.c: 228: else {PORTDbits.RD4=0;}
 12859  0048BA  9883               	bcf	131,4,c	;volatile
 12860  0048BC                     l9269:
 12861                           
 12862                           ;display_lcd.c: 229: if(endereco&0b00100000){PORTDbits.RD5=1;}
 12863  0048BC  AA1D               	btfss	endereco_cursor_lcd@endereco^0,5,c
 12864  0048BE  D002               	goto	l759
 12865  0048C0  8A83               	bsf	131,5,c	;volatile
 12866  0048C2  D001               	goto	l9273
 12867  0048C4                     l759:
 12868                           
 12869                           ;display_lcd.c: 230: else {PORTDbits.RD5=0;}
 12870  0048C4  9A83               	bcf	131,5,c	;volatile
 12871  0048C6                     l9273:
 12872                           
 12873                           ;display_lcd.c: 231: if(endereco&0b01000000){PORTDbits.RD6=1;}
 12874  0048C6  AC1D               	btfss	endereco_cursor_lcd@endereco^0,6,c
 12875  0048C8  D002               	goto	l761
 12876  0048CA  8C83               	bsf	131,6,c	;volatile
 12877  0048CC  D001               	goto	l762
 12878  0048CE                     l761:
 12879                           
 12880                           ;display_lcd.c: 232: else {PORTDbits.RD6=0;}
 12881  0048CE  9C83               	bcf	131,6,c	;volatile
 12882  0048D0                     l762:
 12883                           
 12884                           ;display_lcd.c: 235: PORTDbits.RD0 = 1;
 12885  0048D0  8083               	bsf	131,0,c	;volatile
 12886                           
 12887                           ;display_lcd.c: 236: delay();
 12888  0048D2  EC6E  F028         	call	_delay	;wreg free
 12889                           
 12890                           ;display_lcd.c: 237: PORTDbits.RD0 = 0;
 12891  0048D6  9083               	bcf	131,0,c	;volatile
 12892                           
 12893                           ;display_lcd.c: 238: delay();
 12894  0048D8  EC6E  F028         	call	_delay	;wreg free
 12895                           
 12896                           ;display_lcd.c: 241: if(endereco&0b00000001){PORTDbits.RD4=1;}
 12897  0048DC  A01D               	btfss	endereco_cursor_lcd@endereco^0,0,c
 12898  0048DE  D002               	goto	l763
 12899  0048E0  8883               	bsf	131,4,c	;volatile
 12900  0048E2  D001               	goto	l764
 12901  0048E4                     l763:
 12902                           
 12903                           ;display_lcd.c: 242: else {PORTDbits.RD4=0;}
 12904  0048E4  9883               	bcf	131,4,c	;volatile
 12905  0048E6                     l764:
 12906                           
 12907                           ;display_lcd.c: 243: if(endereco&0b00000010){PORTDbits.RD5=1;}
 12908  0048E6  A21D               	btfss	endereco_cursor_lcd@endereco^0,1,c
 12909  0048E8  D002               	goto	l765
 12910  0048EA  8A83               	bsf	131,5,c	;volatile
 12911  0048EC  D001               	goto	l766
 12912  0048EE                     l765:
 12913                           
 12914                           ;display_lcd.c: 244: else {PORTDbits.RD5=0;}
 12915  0048EE  9A83               	bcf	131,5,c	;volatile
 12916  0048F0                     l766:
 12917                           
 12918                           ;display_lcd.c: 245: if(endereco&0b00000100){PORTDbits.RD6=1;}
 12919  0048F0  A41D               	btfss	endereco_cursor_lcd@endereco^0,2,c
 12920  0048F2  D002               	goto	l767
 12921  0048F4  8C83               	bsf	131,6,c	;volatile
 12922  0048F6  D001               	goto	l768
 12923  0048F8                     l767:
 12924                           
 12925                           ;display_lcd.c: 246: else {PORTDbits.RD6=0;}
 12926  0048F8  9C83               	bcf	131,6,c	;volatile
 12927  0048FA                     l768:
 12928                           
 12929                           ;display_lcd.c: 247: if(endereco&0b00001000){PORTDbits.RD7=1;}
 12930  0048FA  A61D               	btfss	endereco_cursor_lcd@endereco^0,3,c
 12931  0048FC  D002               	goto	l769
 12932  0048FE  8E83               	bsf	131,7,c	;volatile
 12933  004900  D001               	goto	l770
 12934  004902                     l769:
 12935                           
 12936                           ;display_lcd.c: 248: else {PORTDbits.RD7=0;}
 12937  004902  9E83               	bcf	131,7,c	;volatile
 12938  004904                     l770:
 12939                           
 12940                           ;display_lcd.c: 251: PORTDbits.RD0 = 1;
 12941  004904  8083               	bsf	131,0,c	;volatile
 12942                           
 12943                           ;display_lcd.c: 252: delay();
 12944  004906  EC6E  F028         	call	_delay	;wreg free
 12945                           
 12946                           ;display_lcd.c: 253: PORTDbits.RD0 = 0;
 12947  00490A  9083               	bcf	131,0,c	;volatile
 12948                           
 12949                           ;display_lcd.c: 254: delay();
 12950  00490C  EC6E  F028         	call	_delay	;wreg free
 12951  004910  0012               	return		;funcret
 12952  004912                     __end_of_endereco_cursor_lcd:
 12953                           	callstack 0
 12954                           
 12955 ;; *************** function _escreve_frase_ram_lcd *****************
 12956 ;; Defined at:
 12957 ;;		line 445 in file "bibliotecas/display_lcd.c"
 12958 ;; Parameters:    Size  Location     Type
 12959 ;;  buffer          2   29[COMRAM] PTR unsigned char 
 12960 ;;		 -> NULL(0), escreve_inteiro_lcd@texto(7), STR_29(11), STR_28(10), 
 12961 ;;		 -> STR_27(16), STR_26(11), STR_18(9), STR_17(10), 
 12962 ;;		 -> STR_16(10), STR_15(14), STR_14(21), STR_13(15), 
 12963 ;;		 -> rawLongitude(13), rawLatitude(13), STR_10(8), STR_9(17), 
 12964 ;;		 -> STR_8(8), STR_7(16), STR_6(9), STR_5(4), 
 12965 ;;		 -> STR_4(4), STR_3(5), STR_2(5), RAM(2047), 
 12966 ;;		 -> STR_1(14), mensagem_inicial@msg_dois(17), mensagem_inicial@msg_linha_um(17), 
 12967 ;; Auto vars:     Size  Location     Type
 12968 ;;		None
 12969 ;; Return value:  Size  Location     Type
 12970 ;;                  1    wreg      void 
 12971 ;; Registers used:
 12972 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12973 ;; Tracked objects:
 12974 ;;		On entry : 0/0
 12975 ;;		On exit  : 0/0
 12976 ;;		Unchanged: 0/0
 12977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12978 ;;      Params:         2       0       0       0       0       0       0       0       0
 12979 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12980 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12981 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12982 ;;Total ram usage:        2 bytes
 12983 ;; Hardware stack levels used: 1
 12984 ;; Hardware stack levels required when called: 5
 12985 ;; This function calls:
 12986 ;;		_escreve_caractere_lcd
 12987 ;; This function is called by:
 12988 ;;		_mensagem_inicial
 12989 ;;		_verifica_fence_externo
 12990 ;;		_troca_de_tela
 12991 ;;		_sdc_reset
 12992 ;;		_sdc_disk_initialize
 12993 ;;		_escreve_inteiro_lcd
 12994 ;; This function uses a non-reentrant model
 12995 ;;
 12996                           
 12997                           	psect	text52
 12998  004B40                     __ptext52:
 12999                           	callstack 0
 13000  004B40                     _escreve_frase_ram_lcd:
 13001                           	callstack 24
 13002                           
 13003                           ;display_lcd.c: 447: while(*buffer)
 13004                           
 13005                           ;incstack = 0
 13006  004B40  D014               	goto	l9417
 13007  004B42                     l9413:
 13008                           
 13009                           ;display_lcd.c: 448: {;display_lcd.c: 449: escreve_caractere_lcd(*buffer);
 13010  004B42  C01E  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 13011  004B46  C01F  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 13012  004B4A  6AF8               	clrf	tblptru,c
 13013  004B4C  0E07               	movlw	(high __ramtop+-1)
 13014  004B4E  64F7               	cpfsgt	tblptrh,c
 13015  004B50  D003               	bra	u11157
 13016  004B52  0008               	tblrd		*
 13017  004B54  50F5               	movf	tablat,w,c
 13018  004B56  D005               	bra	u11150
 13019  004B58                     u11157:
 13020  004B58  CFF6 FFE1          	movff	tblptrl,fsr1l
 13021  004B5C  CFF7 FFE2          	movff	tblptrh,fsr1h
 13022  004B60  50E7               	movf	indf1,w,c
 13023  004B62                     u11150:
 13024  004B62  ECE3  F023         	call	_escreve_caractere_lcd
 13025                           
 13026                           ;display_lcd.c: 450: buffer++;
 13027  004B66  4A1E               	infsnz	escreve_frase_ram_lcd@buffer^0,f,c
 13028  004B68  2A1F               	incf	(escreve_frase_ram_lcd@buffer+1)^0,f,c
 13029  004B6A                     l9417:
 13030  004B6A  C01E  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 13031  004B6E  C01F  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 13032  004B72  6AF8               	clrf	tblptru,c
 13033  004B74  0E07               	movlw	(high __ramtop+-1)
 13034  004B76  64F7               	cpfsgt	tblptrh,c
 13035  004B78  D003               	bra	u11167
 13036  004B7A  0008               	tblrd		*
 13037  004B7C  50F5               	movf	tablat,w,c
 13038  004B7E  D005               	bra	u11160
 13039  004B80                     u11167:
 13040  004B80  CFF6 FFE1          	movff	tblptrl,fsr1l
 13041  004B84  CFF7 FFE2          	movff	tblptrh,fsr1h
 13042  004B88  50E7               	movf	indf1,w,c
 13043  004B8A                     u11160:
 13044  004B8A  0900               	iorlw	0
 13045  004B8C  B4D8               	btfsc	status,2,c
 13046  004B8E  0012               	return	
 13047  004B90  D7D8               	goto	l9413
 13048  004B92                     __end_of_escreve_frase_ram_lcd:
 13049                           	callstack 0
 13050                           
 13051 ;; *************** function _escreve_caractere_lcd *****************
 13052 ;; Defined at:
 13053 ;;		line 323 in file "bibliotecas/display_lcd.c"
 13054 ;; Parameters:    Size  Location     Type
 13055 ;;  data            1    wreg     unsigned char 
 13056 ;; Auto vars:     Size  Location     Type
 13057 ;;  data            1   28[COMRAM] unsigned char 
 13058 ;; Return value:  Size  Location     Type
 13059 ;;                  1    wreg      void 
 13060 ;; Registers used:
 13061 ;;		wreg, status,2, status,0, cstack
 13062 ;; Tracked objects:
 13063 ;;		On entry : 0/0
 13064 ;;		On exit  : 0/0
 13065 ;;		Unchanged: 0/0
 13066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13067 ;;      Params:         0       0       0       0       0       0       0       0       0
 13068 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13069 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13070 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13071 ;;Total ram usage:        1 bytes
 13072 ;; Hardware stack levels used: 1
 13073 ;; Hardware stack levels required when called: 4
 13074 ;; This function calls:
 13075 ;;		_delay
 13076 ;; This function is called by:
 13077 ;;		_escreve_frase_ram_lcd
 13078 ;; This function uses a non-reentrant model
 13079 ;;
 13080                           
 13081                           	psect	text53
 13082  0047C6                     __ptext53:
 13083                           	callstack 0
 13084  0047C6                     _escreve_caractere_lcd:
 13085                           	callstack 24
 13086                           
 13087                           ;incstack = 0
 13088                           ;escreve_caractere_lcd@data stored from wreg
 13089  0047C6  6E1D               	movwf	escreve_caractere_lcd@data^0,c
 13090                           
 13091                           ;display_lcd.c: 326: PORTDbits.RD2 = 0;
 13092  0047C8  9483               	bcf	131,2,c	;volatile
 13093                           
 13094                           ;display_lcd.c: 327: PORTDbits.RD1 = 1;
 13095  0047CA  8283               	bsf	131,1,c	;volatile
 13096                           
 13097                           ;display_lcd.c: 328: PORTDbits.RD0 = 0;
 13098  0047CC  9083               	bcf	131,0,c	;volatile
 13099                           
 13100                           ;display_lcd.c: 331: if(data&0b00010000){PORTDbits.RD4=1;}
 13101  0047CE  A81D               	btfss	escreve_caractere_lcd@data^0,4,c
 13102  0047D0  D002               	goto	l786
 13103  0047D2  8883               	bsf	131,4,c	;volatile
 13104  0047D4  D001               	goto	l9301
 13105  0047D6                     l786:
 13106                           
 13107                           ;display_lcd.c: 332: else {PORTDbits.RD4=0;}
 13108  0047D6  9883               	bcf	131,4,c	;volatile
 13109  0047D8                     l9301:
 13110                           
 13111                           ;display_lcd.c: 333: if(data&0b00100000){PORTDbits.RD5=1;}
 13112  0047D8  AA1D               	btfss	escreve_caractere_lcd@data^0,5,c
 13113  0047DA  D002               	goto	l788
 13114  0047DC  8A83               	bsf	131,5,c	;volatile
 13115  0047DE  D001               	goto	l9305
 13116  0047E0                     l788:
 13117                           
 13118                           ;display_lcd.c: 334: else {PORTDbits.RD5=0;}
 13119  0047E0  9A83               	bcf	131,5,c	;volatile
 13120  0047E2                     l9305:
 13121                           
 13122                           ;display_lcd.c: 335: if(data&0b01000000){PORTDbits.RD6=1;}
 13123  0047E2  AC1D               	btfss	escreve_caractere_lcd@data^0,6,c
 13124  0047E4  D002               	goto	l790
 13125  0047E6  8C83               	bsf	131,6,c	;volatile
 13126  0047E8  D001               	goto	l9309
 13127  0047EA                     l790:
 13128                           
 13129                           ;display_lcd.c: 336: else {PORTDbits.RD6=0;}
 13130  0047EA  9C83               	bcf	131,6,c	;volatile
 13131  0047EC                     l9309:
 13132                           
 13133                           ;display_lcd.c: 337: if(data&0b10000000){PORTDbits.RD7=1;}
 13134  0047EC  AE1D               	btfss	escreve_caractere_lcd@data^0,7,c
 13135  0047EE  D002               	goto	l792
 13136  0047F0  8E83               	bsf	131,7,c	;volatile
 13137  0047F2  D001               	goto	l793
 13138  0047F4                     l792:
 13139                           
 13140                           ;display_lcd.c: 338: else {PORTDbits.RD7=0;}
 13141  0047F4  9E83               	bcf	131,7,c	;volatile
 13142  0047F6                     l793:
 13143                           
 13144                           ;display_lcd.c: 341: PORTDbits.RD0 = 1;
 13145  0047F6  8083               	bsf	131,0,c	;volatile
 13146                           
 13147                           ;display_lcd.c: 342: delay();
 13148  0047F8  EC6E  F028         	call	_delay	;wreg free
 13149                           
 13150                           ;display_lcd.c: 343: PORTDbits.RD0 = 0;
 13151  0047FC  9083               	bcf	131,0,c	;volatile
 13152                           
 13153                           ;display_lcd.c: 344: delay();
 13154  0047FE  EC6E  F028         	call	_delay	;wreg free
 13155                           
 13156                           ;display_lcd.c: 348: if(data&0b00000001){PORTDbits.RD4=1;}
 13157  004802  A01D               	btfss	escreve_caractere_lcd@data^0,0,c
 13158  004804  D002               	goto	l794
 13159  004806  8883               	bsf	131,4,c	;volatile
 13160  004808  D001               	goto	l795
 13161  00480A                     l794:
 13162                           
 13163                           ;display_lcd.c: 349: else {PORTDbits.RD4=0;}
 13164  00480A  9883               	bcf	131,4,c	;volatile
 13165  00480C                     l795:
 13166                           
 13167                           ;display_lcd.c: 350: if(data&0b00000010){PORTDbits.RD5=1;}
 13168  00480C  A21D               	btfss	escreve_caractere_lcd@data^0,1,c
 13169  00480E  D002               	goto	l796
 13170  004810  8A83               	bsf	131,5,c	;volatile
 13171  004812  D001               	goto	l797
 13172  004814                     l796:
 13173                           
 13174                           ;display_lcd.c: 351: else {PORTDbits.RD5=0;}
 13175  004814  9A83               	bcf	131,5,c	;volatile
 13176  004816                     l797:
 13177                           
 13178                           ;display_lcd.c: 352: if(data&0b00000100){PORTDbits.RD6=1;}
 13179  004816  A41D               	btfss	escreve_caractere_lcd@data^0,2,c
 13180  004818  D002               	goto	l798
 13181  00481A  8C83               	bsf	131,6,c	;volatile
 13182  00481C  D001               	goto	l799
 13183  00481E                     l798:
 13184                           
 13185                           ;display_lcd.c: 353: else {PORTDbits.RD6=0;}
 13186  00481E  9C83               	bcf	131,6,c	;volatile
 13187  004820                     l799:
 13188                           
 13189                           ;display_lcd.c: 354: if(data&0b00001000){PORTDbits.RD7=1;}
 13190  004820  A61D               	btfss	escreve_caractere_lcd@data^0,3,c
 13191  004822  D002               	goto	l800
 13192  004824  8E83               	bsf	131,7,c	;volatile
 13193  004826  D001               	goto	l801
 13194  004828                     l800:
 13195                           
 13196                           ;display_lcd.c: 355: else {PORTDbits.RD7=0;}
 13197  004828  9E83               	bcf	131,7,c	;volatile
 13198  00482A                     l801:
 13199                           
 13200                           ;display_lcd.c: 358: PORTDbits.RD0 = 1;
 13201  00482A  8083               	bsf	131,0,c	;volatile
 13202                           
 13203                           ;display_lcd.c: 359: delay();
 13204  00482C  EC6E  F028         	call	_delay	;wreg free
 13205                           
 13206                           ;display_lcd.c: 360: PORTDbits.RD0 = 0;
 13207  004830  9083               	bcf	131,0,c	;volatile
 13208                           
 13209                           ;display_lcd.c: 361: delay();
 13210  004832  EC6E  F028         	call	_delay	;wreg free
 13211  004836  0012               	return		;funcret
 13212  004838                     __end_of_escreve_caractere_lcd:
 13213                           	callstack 0
 13214                           
 13215 ;; *************** function _delay *****************
 13216 ;; Defined at:
 13217 ;;		line 45 in file "bibliotecas/display_lcd.c"
 13218 ;; Parameters:    Size  Location     Type
 13219 ;;		None
 13220 ;; Auto vars:     Size  Location     Type
 13221 ;;  contador_int    1   27[COMRAM] unsigned char 
 13222 ;;  contador_ext    1   26[COMRAM] unsigned char 
 13223 ;; Return value:  Size  Location     Type
 13224 ;;                  1    wreg      void 
 13225 ;; Registers used:
 13226 ;;		wreg, status,2, status,0
 13227 ;; Tracked objects:
 13228 ;;		On entry : 0/0
 13229 ;;		On exit  : 0/0
 13230 ;;		Unchanged: 0/0
 13231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13232 ;;      Params:         0       0       0       0       0       0       0       0       0
 13233 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13234 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13235 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13236 ;;Total ram usage:        2 bytes
 13237 ;; Hardware stack levels used: 1
 13238 ;; Hardware stack levels required when called: 3
 13239 ;; This function calls:
 13240 ;;		Nothing
 13241 ;; This function is called by:
 13242 ;;		_init_lcd
 13243 ;;		_escreve_cmd_lcd
 13244 ;;		_endereco_cursor_lcd
 13245 ;;		_escreve_caractere_lcd
 13246 ;; This function uses a non-reentrant model
 13247 ;;
 13248                           
 13249                           	psect	text54
 13250  0050DC                     __ptext54:
 13251                           	callstack 0
 13252  0050DC                     _delay:
 13253                           	callstack 24
 13254                           
 13255                           ;display_lcd.c: 47: unsigned char contador_ext, contador_int;;display_lcd.c: 49: for(con
      +                          tador_ext = 0; contador_ext<100; contador_ext++)
 13256                           
 13257                           ;incstack = 0
 13258  0050DC  0E00               	movlw	0
 13259  0050DE  6E1B               	movwf	delay@contador_ext^0,c
 13260  0050E0                     l725:
 13261                           
 13262                           ;display_lcd.c: 50: {;display_lcd.c: 51: __nop();
 13263  0050E0  F000               	nop	
 13264                           
 13265                           ;display_lcd.c: 52: for(contador_int = 0; contador_int<50; contador_int++)
 13266  0050E2  0E00               	movlw	0
 13267  0050E4  6E1C               	movwf	delay@contador_int^0,c
 13268  0050E6                     l727:
 13269                           
 13270                           ;display_lcd.c: 53: {;display_lcd.c: 54: __nop();
 13271  0050E6  F000               	nop	
 13272  0050E8  2A1C               	incf	delay@contador_int^0,f,c
 13273  0050EA  0E31               	movlw	49
 13274  0050EC  641C               	cpfsgt	delay@contador_int^0,c
 13275  0050EE  D7FB               	goto	l727
 13276  0050F0  2A1B               	incf	delay@contador_ext^0,f,c
 13277  0050F2  0E63               	movlw	99
 13278  0050F4  641B               	cpfsgt	delay@contador_ext^0,c
 13279  0050F6  D7F4               	goto	l725
 13280  0050F8  0012               	return	
 13281  0050FA                     __end_of_delay:
 13282                           	callstack 0
 13283                           
 13284 ;; *************** function _check_fs *****************
 13285 ;; Defined at:
 13286 ;;		line 623 in file "bibliotecas/tff.c"
 13287 ;; Parameters:    Size  Location     Type
 13288 ;;  sect            4   25[BANK0 ] unsigned long 
 13289 ;; Auto vars:     Size  Location     Type
 13290 ;;  fs              2   31[BANK0 ] PTR struct _FATFS
 13291 ;;		 -> NULL(0), fs(544), 
 13292 ;; Return value:  Size  Location     Type
 13293 ;;                  1    wreg      unsigned char 
 13294 ;; Registers used:
 13295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13296 ;; Tracked objects:
 13297 ;;		On entry : 3F/0
 13298 ;;		On exit  : 0/0
 13299 ;;		Unchanged: 0/0
 13300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13301 ;;      Params:         0       4       0       0       0       0       0       0       0
 13302 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13303 ;;      Temps:          0       2       0       0       0       0       0       0       0
 13304 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13305 ;;Total ram usage:        8 bytes
 13306 ;; Hardware stack levels used: 1
 13307 ;; Hardware stack levels required when called: 8
 13308 ;; This function calls:
 13309 ;;		_disk_read
 13310 ;;		_memcmp
 13311 ;; This function is called by:
 13312 ;;		_auto_mount
 13313 ;; This function uses a non-reentrant model
 13314 ;;
 13315                           
 13316                           	psect	text55
 13317  0045D8                     __ptext55:
 13318                           	callstack 0
 13319  0045D8                     _check_fs:
 13320                           	callstack 17
 13321                           
 13322                           ; BSR set to: 0
 13323                           ;tff.c: 627: FATFS *fs = FatFs;
 13324                           
 13325                           ;incstack = 0
 13326  0045D8  C0F9  F07F         	movff	_FatFs,check_fs@fs
 13327  0045DC  C0FA  F080         	movff	_FatFs+1,check_fs@fs+1
 13328                           
 13329                           ; BSR set to: 0
 13330                           ;tff.c: 629: if (disk_read(0, fs->win, sect, 1) != RES_OK)
 13331  0045E0  0E20               	movlw	32
 13332  0045E2  257F               	addwf	check_fs@fs& (0+255),w,b
 13333  0045E4  6F6E               	movwf	disk_read@buff& (0+255),b
 13334  0045E6  0E00               	movlw	0
 13335  0045E8  2180               	addwfc	(check_fs@fs+1)& (0+255),w,b
 13336  0045EA  6F6F               	movwf	(disk_read@buff+1)& (0+255),b
 13337  0045EC  C079  F070         	movff	check_fs@sect,disk_read@sector
 13338  0045F0  C07A  F071         	movff	check_fs@sect+1,disk_read@sector+1
 13339  0045F4  C07B  F072         	movff	check_fs@sect+2,disk_read@sector+2
 13340  0045F8  C07C  F073         	movff	check_fs@sect+3,disk_read@sector+3
 13341  0045FC  0E01               	movlw	1
 13342  0045FE  6F74               	movwf	disk_read@count& (0+255),b
 13343  004600  0E00               	movlw	0
 13344  004602  EC1C  F024         	call	_disk_read
 13345  004606  0900               	iorlw	0
 13346  004608  B4D8               	btfsc	status,2,c
 13347  00460A  D002               	goto	l10217
 13348  00460C                     u12420:
 13349  00460C                     l10213:
 13350                           
 13351                           ; BSR set to: 0
 13352                           ;tff.c: 630: return 2;
 13353  00460C  0E02               	movlw	2
 13354  00460E  0012               	return	
 13355  004610                     l10217:
 13356                           
 13357                           ; BSR set to: 0
 13358                           ;tff.c: 631: if ((WORD)(*(WORD*)(BYTE*)(&fs->win[510])) != 0xAA55)
 13359  004610  EE22 F01E          	lfsr	2,542
 13360  004614  517F               	movf	check_fs@fs& (0+255),w,b
 13361  004616  26D9               	addwf	fsr2l,f,c
 13362  004618  5180               	movf	(check_fs@fs+1)& (0+255),w,b
 13363  00461A  22DA               	addwfc	fsr2h,f,c
 13364  00461C  0E55               	movlw	85
 13365  00461E  18DE               	xorwf	postinc2,w,c
 13366  004620  E1F5               	bnz	l10213
 13367  004622  0EAA               	movlw	170
 13368  004624  18DE               	xorwf	postinc2,w,c
 13369  004626  A4D8               	btfss	status,2,c
 13370  004628  D7F1               	goto	u12420
 13371                           
 13372                           ; BSR set to: 0
 13373                           ;tff.c: 634: if (!memcmp(&fs->win[54], "FAT", 3))
 13374  00462A  0E56               	movlw	86
 13375  00462C  257F               	addwf	check_fs@fs& (0+255),w,b
 13376  00462E  6E1B               	movwf	memcmp@s1^0,c
 13377  004630  0E00               	movlw	0
 13378  004632  2180               	addwfc	(check_fs@fs+1)& (0+255),w,b
 13379  004634  6E1C               	movwf	(memcmp@s1+1)^0,c
 13380  004636  0E70               	movlw	low STR_30
 13381  004638  6E1D               	movwf	memcmp@s2^0,c
 13382  00463A  0E62               	movlw	high STR_30
 13383  00463C  6E1E               	movwf	(memcmp@s2+1)^0,c
 13384  00463E  0E00               	movlw	0
 13385  004640  6E20               	movwf	(memcmp@n+1)^0,c
 13386  004642  0E03               	movlw	3
 13387  004644  6E1F               	movwf	memcmp@n^0,c
 13388  004646  ECD0  F021         	call	_memcmp	;wreg free
 13389  00464A  501B               	movf	?_memcmp^0,w,c
 13390  00464C  101C               	iorwf	(?_memcmp+1)^0,w,c
 13391  00464E  A4D8               	btfss	status,2,c
 13392  004650  D002               	goto	l10229
 13393                           
 13394                           ;tff.c: 635: return 0;
 13395  004652  0E00               	movlw	0
 13396  004654  0012               	return	
 13397  004656                     l10229:
 13398                           
 13399                           ;tff.c: 640: return 1;
 13400  004656  0E01               	movlw	1
 13401  004658  0012               	return		;funcret
 13402  00465A                     __end_of_check_fs:
 13403                           	callstack 0
 13404                           
 13405 ;; *************** function _memcmp *****************
 13406 ;; Defined at:
 13407 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memcmp.c"
 13408 ;; Parameters:    Size  Location     Type
 13409 ;;  s1              2   26[COMRAM] PTR const void 
 13410 ;;		 -> fs.win(512), NULL(0), fs(544), 
 13411 ;;  s2              2   28[COMRAM] PTR const void 
 13412 ;;		 -> f_opendir@fn(12), f_open@fn(12), STR_30(4), 
 13413 ;;  n               2   30[COMRAM] unsigned int 
 13414 ;; Auto vars:     Size  Location     Type
 13415 ;;		None
 13416 ;; Return value:  Size  Location     Type
 13417 ;;                  2   26[COMRAM] int 
 13418 ;; Registers used:
 13419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13420 ;; Tracked objects:
 13421 ;;		On entry : 3F/0
 13422 ;;		On exit  : 0/0
 13423 ;;		Unchanged: 0/0
 13424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13425 ;;      Params:         6       0       0       0       0       0       0       0       0
 13426 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13427 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13428 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13429 ;;Total ram usage:        8 bytes
 13430 ;; Hardware stack levels used: 1
 13431 ;; Hardware stack levels required when called: 3
 13432 ;; This function calls:
 13433 ;;		Nothing
 13434 ;; This function is called by:
 13435 ;;		_trace_path
 13436 ;;		_check_fs
 13437 ;; This function uses a non-reentrant model
 13438 ;;
 13439                           
 13440                           	psect	text56
 13441  0043A0                     __ptext56:
 13442                           	callstack 0
 13443  0043A0                     _memcmp:
 13444                           	callstack 22
 13445                           
 13446                           ; BSR set to: 0
 13447                           
 13448                           ;incstack = 0
 13449  0043A0  D03B               	goto	l6563
 13450  0043A2                     l6555:
 13451  0043A2  C01B  FFD9         	movff	memcmp@s1,fsr2l
 13452  0043A6  C01C  FFDA         	movff	memcmp@s1+1,fsr2h
 13453  0043AA  50DF               	movf	indf2,w,c
 13454  0043AC  6E21               	movwf	??_memcmp^0,c
 13455  0043AE  C01D  FFF6         	movff	memcmp@s2,tblptrl
 13456  0043B2  C01E  FFF7         	movff	memcmp@s2+1,tblptrh
 13457  0043B6  6AF8               	clrf	tblptru,c
 13458  0043B8  0E07               	movlw	(high __ramtop+-1)
 13459  0043BA  64F7               	cpfsgt	tblptrh,c
 13460  0043BC  D003               	bra	u6447
 13461  0043BE  0008               	tblrd		*
 13462  0043C0  50F5               	movf	tablat,w,c
 13463  0043C2  D005               	bra	u6440
 13464  0043C4                     u6447:
 13465  0043C4  CFF6 FFE1          	movff	tblptrl,fsr1l
 13466  0043C8  CFF7 FFE2          	movff	tblptrh,fsr1h
 13467  0043CC  50E7               	movf	indf1,w,c
 13468  0043CE                     u6440:
 13469  0043CE  1821               	xorwf	??_memcmp^0,w,c
 13470  0043D0  B4D8               	btfsc	status,2,c
 13471  0043D2  D01E               	goto	l6561
 13472  0043D4  C01B  FFD9         	movff	memcmp@s1,fsr2l
 13473  0043D8  C01C  FFDA         	movff	memcmp@s1+1,fsr2h
 13474  0043DC  50DF               	movf	indf2,w,c
 13475  0043DE  6E21               	movwf	??_memcmp^0,c
 13476  0043E0  C01D  FFF6         	movff	memcmp@s2,tblptrl
 13477  0043E4  C01E  FFF7         	movff	memcmp@s2+1,tblptrh
 13478  0043E8  6AF8               	clrf	tblptru,c
 13479  0043EA  0E07               	movlw	(high __ramtop+-1)
 13480  0043EC  64F7               	cpfsgt	tblptrh,c
 13481  0043EE  D003               	bra	u6467
 13482  0043F0  0008               	tblrd		*
 13483  0043F2  50F5               	movf	tablat,w,c
 13484  0043F4  D005               	bra	u6460
 13485  0043F6                     u6467:
 13486  0043F6  CFF6 FFE1          	movff	tblptrl,fsr1l
 13487  0043FA  CFF7 FFE2          	movff	tblptrh,fsr1h
 13488  0043FE  50E7               	movf	indf1,w,c
 13489  004400                     u6460:
 13490  004400  6E22               	movwf	(??_memcmp+1)^0,c
 13491  004402  5022               	movf	(??_memcmp+1)^0,w,c
 13492  004404  5C21               	subwf	??_memcmp^0,w,c
 13493  004406  6E1B               	movwf	?_memcmp^0,c
 13494  004408  6A1C               	clrf	(?_memcmp+1)^0,c
 13495  00440A  A0D8               	btfss	status,0,c
 13496  00440C  061C               	decf	(?_memcmp+1)^0,f,c
 13497  00440E  0012               	return	
 13498  004410                     l6561:
 13499  004410  4A1B               	infsnz	memcmp@s1^0,f,c
 13500  004412  2A1C               	incf	(memcmp@s1+1)^0,f,c
 13501  004414  4A1D               	infsnz	memcmp@s2^0,f,c
 13502  004416  2A1E               	incf	(memcmp@s2+1)^0,f,c
 13503  004418                     l6563:
 13504  004418  061F               	decf	memcmp@n^0,f,c
 13505  00441A  A0D8               	btfss	status,0,c
 13506  00441C  0620               	decf	(memcmp@n+1)^0,f,c
 13507  00441E  281F               	incf	memcmp@n^0,w,c
 13508  004420  E1C0               	bnz	l6555
 13509  004422  2820               	incf	(memcmp@n+1)^0,w,c
 13510  004424  A4D8               	btfss	status,2,c
 13511  004426  D7BD               	goto	l6555
 13512  004428  0E00               	movlw	0
 13513  00442A  6E1C               	movwf	(?_memcmp+1)^0,c
 13514  00442C  0E00               	movlw	0
 13515  00442E  6E1B               	movwf	?_memcmp^0,c
 13516  004430  0012               	return		;funcret
 13517  004432                     __end_of_memcmp:
 13518                           	callstack 0
 13519                           
 13520 ;; *************** function ___lmul *****************
 13521 ;; Defined at:
 13522 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
 13523 ;; Parameters:    Size  Location     Type
 13524 ;;  multiplier      4   26[COMRAM] unsigned long 
 13525 ;;  multiplicand    4   30[COMRAM] unsigned long 
 13526 ;; Auto vars:     Size  Location     Type
 13527 ;;  product         4   34[COMRAM] unsigned long 
 13528 ;; Return value:  Size  Location     Type
 13529 ;;                  4   26[COMRAM] unsigned long 
 13530 ;; Registers used:
 13531 ;;		wreg, status,2, status,0
 13532 ;; Tracked objects:
 13533 ;;		On entry : 3F/0
 13534 ;;		On exit  : 3F/0
 13535 ;;		Unchanged: 3F/0
 13536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13537 ;;      Params:         8       0       0       0       0       0       0       0       0
 13538 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13539 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13540 ;;      Totals:        12       0       0       0       0       0       0       0       0
 13541 ;;Total ram usage:       12 bytes
 13542 ;; Hardware stack levels used: 1
 13543 ;; Hardware stack levels required when called: 3
 13544 ;; This function calls:
 13545 ;;		Nothing
 13546 ;; This function is called by:
 13547 ;;		_clust2sect
 13548 ;;		_auto_mount
 13549 ;; This function uses a non-reentrant model
 13550 ;;
 13551                           
 13552                           	psect	text57
 13553  004A98                     __ptext57:
 13554                           	callstack 0
 13555  004A98                     ___lmul:
 13556                           	callstack 19
 13557                           
 13558                           ; BSR set to: 0
 13559                           
 13560                           ;incstack = 0
 13561  004A98  0E00               	movlw	0
 13562  004A9A  6E23               	movwf	___lmul@product^0,c
 13563  004A9C  0E00               	movlw	0
 13564  004A9E  6E24               	movwf	(___lmul@product+1)^0,c
 13565  004AA0  0E00               	movlw	0
 13566  004AA2  6E25               	movwf	(___lmul@product+2)^0,c
 13567  004AA4  0E00               	movlw	0
 13568  004AA6  6E26               	movwf	(___lmul@product+3)^0,c
 13569  004AA8                     l9557:
 13570                           
 13571                           ; BSR set to: 0
 13572  004AA8  A01B               	btfss	___lmul@multiplier^0,0,c
 13573  004AAA  D008               	goto	l9561
 13574                           
 13575                           ; BSR set to: 0
 13576  004AAC  501F               	movf	___lmul@multiplicand^0,w,c
 13577  004AAE  2623               	addwf	___lmul@product^0,f,c
 13578  004AB0  5020               	movf	(___lmul@multiplicand+1)^0,w,c
 13579  004AB2  2224               	addwfc	(___lmul@product+1)^0,f,c
 13580  004AB4  5021               	movf	(___lmul@multiplicand+2)^0,w,c
 13581  004AB6  2225               	addwfc	(___lmul@product+2)^0,f,c
 13582  004AB8  5022               	movf	(___lmul@multiplicand+3)^0,w,c
 13583  004ABA  2226               	addwfc	(___lmul@product+3)^0,f,c
 13584  004ABC                     l9561:
 13585                           
 13586                           ; BSR set to: 0
 13587  004ABC  90D8               	bcf	status,0,c
 13588  004ABE  361F               	rlcf	___lmul@multiplicand^0,f,c
 13589  004AC0  3620               	rlcf	(___lmul@multiplicand+1)^0,f,c
 13590  004AC2  3621               	rlcf	(___lmul@multiplicand+2)^0,f,c
 13591  004AC4  3622               	rlcf	(___lmul@multiplicand+3)^0,f,c
 13592                           
 13593                           ; BSR set to: 0
 13594  004AC6  90D8               	bcf	status,0,c
 13595  004AC8  321E               	rrcf	(___lmul@multiplier+3)^0,f,c
 13596  004ACA  321D               	rrcf	(___lmul@multiplier+2)^0,f,c
 13597  004ACC  321C               	rrcf	(___lmul@multiplier+1)^0,f,c
 13598  004ACE  321B               	rrcf	___lmul@multiplier^0,f,c
 13599  004AD0  501B               	movf	___lmul@multiplier^0,w,c
 13600  004AD2  101C               	iorwf	(___lmul@multiplier+1)^0,w,c
 13601  004AD4  101D               	iorwf	(___lmul@multiplier+2)^0,w,c
 13602  004AD6  101E               	iorwf	(___lmul@multiplier+3)^0,w,c
 13603  004AD8  A4D8               	btfss	status,2,c
 13604  004ADA  D7E6               	goto	l9557
 13605                           
 13606                           ; BSR set to: 0
 13607  004ADC  C023  F01B         	movff	___lmul@product,?___lmul
 13608  004AE0  C024  F01C         	movff	___lmul@product+1,?___lmul+1
 13609  004AE4  C025  F01D         	movff	___lmul@product+2,?___lmul+2
 13610  004AE8  C026  F01E         	movff	___lmul@product+3,?___lmul+3
 13611                           
 13612                           ; BSR set to: 0
 13613  004AEC  0012               	return		;funcret
 13614  004AEE                     __end_of___lmul:
 13615                           	callstack 0
 13616                           
 13617 ;; *************** function _f_mount *****************
 13618 ;; Defined at:
 13619 ;;		line 793 in file "bibliotecas/tff.c"
 13620 ;; Parameters:    Size  Location     Type
 13621 ;;  drv             1    wreg     unsigned char 
 13622 ;;  fs              2   26[COMRAM] PTR struct _FATFS
 13623 ;;		 -> fs(544), 
 13624 ;; Auto vars:     Size  Location     Type
 13625 ;;  drv             1   28[COMRAM] unsigned char 
 13626 ;; Return value:  Size  Location     Type
 13627 ;;                  1    wreg      enum E3236
 13628 ;; Registers used:
 13629 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13630 ;; Tracked objects:
 13631 ;;		On entry : 3F/0
 13632 ;;		On exit  : 0/0
 13633 ;;		Unchanged: 0/0
 13634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13635 ;;      Params:         2       0       0       0       0       0       0       0       0
 13636 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13637 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13638 ;;      Totals:         3       0       0       0       0       0       0       0       0
 13639 ;;Total ram usage:        3 bytes
 13640 ;; Hardware stack levels used: 1
 13641 ;; Hardware stack levels required when called: 3
 13642 ;; This function calls:
 13643 ;;		Nothing
 13644 ;; This function is called by:
 13645 ;;		_escrita_sdcard
 13646 ;; This function uses a non-reentrant model
 13647 ;;
 13648                           
 13649                           	psect	text58
 13650  004C32                     __ptext58:
 13651                           	callstack 0
 13652  004C32                     _f_mount:
 13653                           	callstack 24
 13654                           
 13655                           ; BSR set to: 0
 13656                           ;incstack = 0
 13657                           ;f_mount@drv stored from wreg
 13658  004C32  6E1D               	movwf	f_mount@drv^0,c
 13659                           
 13660                           ;tff.c: 798: if (drv) return FR_INVALID_DRIVE;
 13661  004C34  501D               	movf	f_mount@drv^0,w,c
 13662  004C36  B4D8               	btfsc	status,2,c
 13663  004C38  D002               	goto	l7465
 13664  004C3A  0E05               	movlw	5
 13665  004C3C  0012               	return	
 13666  004C3E                     l7465:
 13667                           
 13668                           ;tff.c: 800: if (FatFs) FatFs->fs_type = 0;
 13669  004C3E  0100               	movlb	0	; () banked
 13670  004C40  51F9               	movf	_FatFs& (0+255),w,b
 13671  004C42  11FA               	iorwf	(_FatFs+1)& (0+255),w,b
 13672  004C44  B4D8               	btfsc	status,2,c
 13673  004C46  D008               	goto	l7469
 13674                           
 13675                           ; BSR set to: 0
 13676  004C48  EE20 F01C          	lfsr	2,28
 13677  004C4C  51F9               	movf	_FatFs& (0+255),w,b
 13678  004C4E  26D9               	addwf	fsr2l,f,c
 13679  004C50  51FA               	movf	(_FatFs+1)& (0+255),w,b
 13680  004C52  22DA               	addwfc	fsr2h,f,c
 13681  004C54  0E00               	movlw	0
 13682  004C56  6EDF               	movwf	indf2,c
 13683  004C58                     l7469:
 13684                           
 13685                           ; BSR set to: 0
 13686                           ;tff.c: 802: FatFs = fs;
 13687  004C58  C01B  F0F9         	movff	f_mount@fs,_FatFs
 13688  004C5C  C01C  F0FA         	movff	f_mount@fs+1,_FatFs+1
 13689                           
 13690                           ; BSR set to: 0
 13691                           ;tff.c: 803: if (fs) fs->fs_type = 0;
 13692  004C60  501B               	movf	f_mount@fs^0,w,c
 13693  004C62  101C               	iorwf	(f_mount@fs+1)^0,w,c
 13694  004C64  B4D8               	btfsc	status,2,c
 13695  004C66  D008               	goto	l7475
 13696                           
 13697                           ; BSR set to: 0
 13698  004C68  EE20 F01C          	lfsr	2,28
 13699  004C6C  501B               	movf	f_mount@fs^0,w,c
 13700  004C6E  26D9               	addwf	fsr2l,f,c
 13701  004C70  501C               	movf	(f_mount@fs+1)^0,w,c
 13702  004C72  22DA               	addwfc	fsr2h,f,c
 13703  004C74  0E00               	movlw	0
 13704  004C76  6EDF               	movwf	indf2,c
 13705  004C78                     l7475:
 13706                           
 13707                           ; BSR set to: 0
 13708                           ;tff.c: 805: return FR_OK;
 13709  004C78  0E00               	movlw	0
 13710  004C7A  0012               	return		;funcret
 13711  004C7C                     __end_of_f_mount:
 13712                           	callstack 0
 13713                           
 13714 ;; *************** function _f_lseek *****************
 13715 ;; Defined at:
 13716 ;;		line 1132 in file "bibliotecas/tff.c"
 13717 ;; Parameters:    Size  Location     Type
 13718 ;;  fp              2   84[BANK0 ] PTR struct _FIL
 13719 ;;		 -> fil(28), 
 13720 ;;  ofs             4   86[BANK0 ] unsigned long 
 13721 ;; Auto vars:     Size  Location     Type
 13722 ;;  csize           4  111[BANK0 ] unsigned long 
 13723 ;;  ifptr           4  107[BANK0 ] unsigned long 
 13724 ;;  clust           2  115[BANK0 ] unsigned short 
 13725 ;;  res             1  106[BANK0 ] enum E155
 13726 ;; Return value:  Size  Location     Type
 13727 ;;                  1    wreg      enum E3236
 13728 ;; Registers used:
 13729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13730 ;; Tracked objects:
 13731 ;;		On entry : 3F/0
 13732 ;;		On exit  : 3F/0
 13733 ;;		Unchanged: 0/0
 13734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13735 ;;      Params:         0       6       0       0       0       0       0       0       0
 13736 ;;      Locals:         0      11       0       0       0       0       0       0       0
 13737 ;;      Temps:          0      16       0       0       0       0       0       0       0
 13738 ;;      Totals:         0      33       0       0       0       0       0       0       0
 13739 ;;Total ram usage:       33 bytes
 13740 ;; Hardware stack levels used: 1
 13741 ;; Hardware stack levels required when called: 11
 13742 ;; This function calls:
 13743 ;;		___lldiv
 13744 ;;		_create_chain
 13745 ;;		_get_cluster
 13746 ;;		_validate
 13747 ;; This function is called by:
 13748 ;;		_escrita_sdcard
 13749 ;; This function uses a non-reentrant model
 13750 ;;
 13751                           
 13752                           	psect	text59
 13753  001272                     __ptext59:
 13754                           	callstack 0
 13755  001272                     _f_lseek:
 13756                           	callstack 16
 13757                           
 13758                           ; BSR set to: 0
 13759                           ;tff.c: 1137: FRESULT res;;tff.c: 1138: CLUST clust;;tff.c: 1139: DWORD csize, ifptr;;tf
      +                          f.c: 1142: res = validate(fp->fs, fp->id);
 13760                           
 13761                           ;incstack = 0
 13762  001272  EE20 F004          	lfsr	2,4
 13763  001276  51B4               	movf	f_lseek@fp& (0+255),w,b
 13764  001278  26D9               	addwf	fsr2l,f,c
 13765  00127A  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 13766  00127C  22DA               	addwfc	fsr2h,f,c
 13767  00127E  CFDE F01E          	movff	postinc2,validate@fs
 13768  001282  CFDD F01F          	movff	postdec2,validate@fs+1
 13769  001286  C0B4  FFD9         	movff	f_lseek@fp,fsr2l
 13770  00128A  C0B5  FFDA         	movff	f_lseek@fp+1,fsr2h
 13771  00128E  CFDE F020          	movff	postinc2,validate@id
 13772  001292  CFDD F021          	movff	postdec2,validate@id+1
 13773  001296  EC63  F026         	call	_validate	;wreg free
 13774  00129A  0100               	movlb	0	; () banked
 13775  00129C  6FCA               	movwf	f_lseek@res& (0+255),b
 13776                           
 13777                           ; BSR set to: 0
 13778                           ;tff.c: 1143: if (res != FR_OK) return res;
 13779  00129E  51CA               	movf	f_lseek@res& (0+255),w,b
 13780  0012A0  A4D8               	btfss	status,2,c
 13781  0012A2  0012               	return	
 13782                           
 13783                           ; BSR set to: 0
 13784                           ;tff.c: 1144: if (fp->flag & 0x80) return FR_RW_ERROR;
 13785  0012A4  EE20 F002          	lfsr	2,2
 13786  0012A8  51B4               	movf	f_lseek@fp& (0+255),w,b
 13787  0012AA  26D9               	addwf	fsr2l,f,c
 13788  0012AC  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 13789  0012AE  22DA               	addwfc	fsr2h,f,c
 13790  0012B0  BEDF               	btfsc	indf2,7,c
 13791  0012B2  0012               	return	
 13792                           
 13793                           ; BSR set to: 0
 13794                           ;tff.c: 1145: if (ofs > fp->fsize;tff.c: 1147: && !(fp->flag & 0x02);tff.c: 1149: ) ofs 
      +                          = fp->fsize;
 13795  0012B4  EE20 F00A          	lfsr	2,10
 13796  0012B8  51B4               	movf	f_lseek@fp& (0+255),w,b
 13797  0012BA  26D9               	addwf	fsr2l,f,c
 13798  0012BC  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 13799  0012BE  22DA               	addwfc	fsr2h,f,c
 13800  0012C0  51B6               	movf	f_lseek@ofs& (0+255),w,b
 13801  0012C2  5CDE               	subwf	postinc2,w,c
 13802  0012C4  51B7               	movf	(f_lseek@ofs+1)& (0+255),w,b
 13803  0012C6  58DE               	subwfb	postinc2,w,c
 13804  0012C8  51B8               	movf	(f_lseek@ofs+2)& (0+255),w,b
 13805  0012CA  58DE               	subwfb	postinc2,w,c
 13806  0012CC  51B9               	movf	(f_lseek@ofs+3)& (0+255),w,b
 13807  0012CE  58DE               	subwfb	postinc2,w,c
 13808  0012D0  B0D8               	btfsc	status,0,c
 13809  0012D2  D016               	goto	l1322
 13810                           
 13811                           ; BSR set to: 0
 13812  0012D4  EE20 F002          	lfsr	2,2
 13813  0012D8  51B4               	movf	f_lseek@fp& (0+255),w,b
 13814  0012DA  26D9               	addwf	fsr2l,f,c
 13815  0012DC  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 13816  0012DE  22DA               	addwfc	fsr2h,f,c
 13817  0012E0  B2DF               	btfsc	indf2,1,c
 13818  0012E2  D00E               	goto	l1322
 13819                           
 13820                           ; BSR set to: 0
 13821  0012E4  EE20 F00A          	lfsr	2,10
 13822  0012E8  51B4               	movf	f_lseek@fp& (0+255),w,b
 13823  0012EA  26D9               	addwf	fsr2l,f,c
 13824  0012EC  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 13825  0012EE  22DA               	addwfc	fsr2h,f,c
 13826  0012F0  CFDE F0B6          	movff	postinc2,f_lseek@ofs
 13827  0012F4  CFDE F0B7          	movff	postinc2,f_lseek@ofs+1
 13828  0012F8  CFDE F0B8          	movff	postinc2,f_lseek@ofs+2
 13829  0012FC  CFDE F0B9          	movff	postinc2,f_lseek@ofs+3
 13830  001300                     l1322:
 13831                           
 13832                           ; BSR set to: 0
 13833                           ;tff.c: 1151: ifptr = fp->fptr;
 13834  001300  EE20 F006          	lfsr	2,6
 13835  001304  51B4               	movf	f_lseek@fp& (0+255),w,b
 13836  001306  26D9               	addwf	fsr2l,f,c
 13837  001308  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 13838  00130A  22DA               	addwfc	fsr2h,f,c
 13839  00130C  CFDE F0CB          	movff	postinc2,f_lseek@ifptr
 13840  001310  CFDE F0CC          	movff	postinc2,f_lseek@ifptr+1
 13841  001314  CFDE F0CD          	movff	postinc2,f_lseek@ifptr+2
 13842  001318  CFDE F0CE          	movff	postinc2,f_lseek@ifptr+3
 13843                           
 13844                           ;tff.c: 1152: fp->fptr = 0; fp->csect = 255;
 13845  00131C  EE20 F006          	lfsr	2,6
 13846  001320  51B4               	movf	f_lseek@fp& (0+255),w,b
 13847  001322  26D9               	addwf	fsr2l,f,c
 13848  001324  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 13849  001326  22DA               	addwfc	fsr2h,f,c
 13850  001328  6ADE               	clrf	postinc2,c
 13851  00132A  6ADE               	clrf	postinc2,c
 13852  00132C  6ADE               	clrf	postinc2,c
 13853  00132E  6ADD               	clrf	postdec2,c
 13854  001330  EE20 F003          	lfsr	2,3
 13855  001334  51B4               	movf	f_lseek@fp& (0+255),w,b
 13856  001336  26D9               	addwf	fsr2l,f,c
 13857  001338  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 13858  00133A  22DA               	addwfc	fsr2h,f,c
 13859  00133C  0EFF               	movlw	255
 13860  00133E  6EDF               	movwf	indf2,c
 13861                           
 13862                           ; BSR set to: 0
 13863                           ;tff.c: 1153: if (ofs > 0) {
 13864  001340  51B6               	movf	f_lseek@ofs& (0+255),w,b
 13865  001342  11B7               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
 13866  001344  11B8               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
 13867  001346  11B9               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
 13868  001348  B4D8               	btfsc	status,2,c
 13869  00134A  D19C               	goto	l10905
 13870                           
 13871                           ; BSR set to: 0
 13872                           ;tff.c: 1154: csize = (DWORD)fp->fs->csize * 512U;
 13873  00134C  EE20 F004          	lfsr	2,4
 13874  001350  51B4               	movf	f_lseek@fp& (0+255),w,b
 13875  001352  26D9               	addwf	fsr2l,f,c
 13876  001354  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 13877  001356  22DA               	addwfc	fsr2h,f,c
 13878  001358  EE10 F01D          	lfsr	1,29
 13879  00135C  50DE               	movf	postinc2,w,c
 13880  00135E  26E1               	addwf	fsr1l,f,c
 13881  001360  50DD               	movf	postdec2,w,c
 13882  001362  22E2               	addwfc	fsr1h,f,c
 13883  001364  50E7               	movf	indf1,w,c
 13884  001366  6FBA               	movwf	??_f_lseek& (0+255),b
 13885  001368  C0BA  F0BB         	movff	??_f_lseek,??_f_lseek+1
 13886  00136C  6BBC               	clrf	(??_f_lseek+2)& (0+255),b
 13887  00136E  6BBD               	clrf	(??_f_lseek+3)& (0+255),b
 13888  001370  6BBE               	clrf	(??_f_lseek+4)& (0+255),b
 13889  001372  0E09               	movlw	9
 13890  001374                     u13555:
 13891  001374  90D8               	bcf	status,0,c
 13892  001376  37BB               	rlcf	(??_f_lseek+1)& (0+255),f,b
 13893  001378  37BC               	rlcf	(??_f_lseek+2)& (0+255),f,b
 13894  00137A  37BD               	rlcf	(??_f_lseek+3)& (0+255),f,b
 13895  00137C  37BE               	rlcf	(??_f_lseek+4)& (0+255),f,b
 13896  00137E  2EE8               	decfsz	wreg,f,c
 13897  001380  D7F9               	goto	u13555
 13898  001382  C0BB  F0CF         	movff	??_f_lseek+1,f_lseek@csize
 13899  001386  C0BC  F0D0         	movff	??_f_lseek+2,f_lseek@csize+1
 13900  00138A  C0BD  F0D1         	movff	??_f_lseek+3,f_lseek@csize+2
 13901  00138E  C0BE  F0D2         	movff	??_f_lseek+4,f_lseek@csize+3
 13902                           
 13903                           ; BSR set to: 0
 13904                           ;tff.c: 1155: if (ifptr > 0 &&;tff.c: 1156: (ofs - 1) / csize >= (ifptr - 1) / csize) {
 13905  001392  51CB               	movf	f_lseek@ifptr& (0+255),w,b
 13906  001394  11CC               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
 13907  001396  11CD               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
 13908  001398  11CE               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
 13909  00139A  B4D8               	btfsc	status,2,c
 13910  00139C  D093               	goto	l10863
 13911                           
 13912                           ; BSR set to: 0
 13913  00139E  0EFF               	movlw	255
 13914  0013A0  25B6               	addwf	f_lseek@ofs& (0+255),w,b
 13915  0013A2  6E1B               	movwf	___lldiv@dividend^0,c
 13916  0013A4  0EFF               	movlw	255
 13917  0013A6  21B7               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
 13918  0013A8  6E1C               	movwf	(___lldiv@dividend+1)^0,c
 13919  0013AA  0EFF               	movlw	255
 13920  0013AC  21B8               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
 13921  0013AE  6E1D               	movwf	(___lldiv@dividend+2)^0,c
 13922  0013B0  0EFF               	movlw	255
 13923  0013B2  21B9               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
 13924  0013B4  6E1E               	movwf	(___lldiv@dividend+3)^0,c
 13925  0013B6  C0CF  F01F         	movff	f_lseek@csize,___lldiv@divisor
 13926  0013BA  C0D0  F020         	movff	f_lseek@csize+1,___lldiv@divisor+1
 13927  0013BE  C0D1  F021         	movff	f_lseek@csize+2,___lldiv@divisor+2
 13928  0013C2  C0D2  F022         	movff	f_lseek@csize+3,___lldiv@divisor+3
 13929  0013C6  EC2D  F023         	call	___lldiv	;wreg free
 13930  0013CA  C01B  F0BA         	movff	?___lldiv,??_f_lseek
 13931  0013CE  C01C  F0BB         	movff	?___lldiv+1,??_f_lseek+1
 13932  0013D2  C01D  F0BC         	movff	?___lldiv+2,??_f_lseek+2
 13933  0013D6  C01E  F0BD         	movff	?___lldiv+3,??_f_lseek+3
 13934  0013DA  0EFF               	movlw	255
 13935  0013DC  0100               	movlb	0	; () banked
 13936  0013DE  25CB               	addwf	f_lseek@ifptr& (0+255),w,b
 13937  0013E0  6E1B               	movwf	___lldiv@dividend^0,c
 13938  0013E2  0EFF               	movlw	255
 13939  0013E4  21CC               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 13940  0013E6  6E1C               	movwf	(___lldiv@dividend+1)^0,c
 13941  0013E8  0EFF               	movlw	255
 13942  0013EA  21CD               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 13943  0013EC  6E1D               	movwf	(___lldiv@dividend+2)^0,c
 13944  0013EE  0EFF               	movlw	255
 13945  0013F0  21CE               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 13946  0013F2  6E1E               	movwf	(___lldiv@dividend+3)^0,c
 13947  0013F4  C0CF  F01F         	movff	f_lseek@csize,___lldiv@divisor
 13948  0013F8  C0D0  F020         	movff	f_lseek@csize+1,___lldiv@divisor+1
 13949  0013FC  C0D1  F021         	movff	f_lseek@csize+2,___lldiv@divisor+2
 13950  001400  C0D2  F022         	movff	f_lseek@csize+3,___lldiv@divisor+3
 13951  001404  EC2D  F023         	call	___lldiv	;wreg free
 13952  001408  501B               	movf	?___lldiv^0,w,c
 13953  00140A  0100               	movlb	0	; () banked
 13954  00140C  5DBA               	subwf	??_f_lseek& (0+255),w,b
 13955  00140E  501C               	movf	(?___lldiv+1)^0,w,c
 13956  001410  59BB               	subwfb	(??_f_lseek+1)& (0+255),w,b
 13957  001412  501D               	movf	(?___lldiv+2)^0,w,c
 13958  001414  59BC               	subwfb	(??_f_lseek+2)& (0+255),w,b
 13959  001416  501E               	movf	(?___lldiv+3)^0,w,c
 13960  001418  59BD               	subwfb	(??_f_lseek+3)& (0+255),w,b
 13961  00141A  A0D8               	btfss	status,0,c
 13962  00141C  D053               	goto	l10863
 13963                           
 13964                           ; BSR set to: 0
 13965                           ;tff.c: 1157: fp->fptr = (ifptr - 1) & ~(csize - 1);
 13966  00141E  0EFF               	movlw	255
 13967  001420  25CF               	addwf	f_lseek@csize& (0+255),w,b
 13968  001422  6FBA               	movwf	??_f_lseek& (0+255),b
 13969  001424  0EFF               	movlw	255
 13970  001426  21D0               	addwfc	(f_lseek@csize+1)& (0+255),w,b
 13971  001428  6FBB               	movwf	(??_f_lseek+1)& (0+255),b
 13972  00142A  0EFF               	movlw	255
 13973  00142C  21D1               	addwfc	(f_lseek@csize+2)& (0+255),w,b
 13974  00142E  6FBC               	movwf	(??_f_lseek+2)& (0+255),b
 13975  001430  0EFF               	movlw	255
 13976  001432  21D2               	addwfc	(f_lseek@csize+3)& (0+255),w,b
 13977  001434  6FBD               	movwf	(??_f_lseek+3)& (0+255),b
 13978  001436  1DBA               	comf	??_f_lseek& (0+255),w,b
 13979  001438  6FBE               	movwf	(??_f_lseek+4)& (0+255),b
 13980  00143A  1DBB               	comf	(??_f_lseek+1)& (0+255),w,b
 13981  00143C  6FBF               	movwf	(??_f_lseek+5)& (0+255),b
 13982  00143E  1DBC               	comf	(??_f_lseek+2)& (0+255),w,b
 13983  001440  6FC0               	movwf	(??_f_lseek+6)& (0+255),b
 13984  001442  1DBD               	comf	(??_f_lseek+3)& (0+255),w,b
 13985  001444  6FC1               	movwf	(??_f_lseek+7)& (0+255),b
 13986  001446  0EFF               	movlw	255
 13987  001448  25CB               	addwf	f_lseek@ifptr& (0+255),w,b
 13988  00144A  6FC2               	movwf	(??_f_lseek+8)& (0+255),b
 13989  00144C  0EFF               	movlw	255
 13990  00144E  21CC               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 13991  001450  6FC3               	movwf	(??_f_lseek+9)& (0+255),b
 13992  001452  0EFF               	movlw	255
 13993  001454  21CD               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 13994  001456  6FC4               	movwf	(??_f_lseek+10)& (0+255),b
 13995  001458  0EFF               	movlw	255
 13996  00145A  21CE               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 13997  00145C  6FC5               	movwf	(??_f_lseek+11)& (0+255),b
 13998  00145E  51BE               	movf	(??_f_lseek+4)& (0+255),w,b
 13999  001460  15C2               	andwf	(??_f_lseek+8)& (0+255),w,b
 14000  001462  6FC6               	movwf	(??_f_lseek+12)& (0+255),b
 14001  001464  51BF               	movf	(??_f_lseek+5)& (0+255),w,b
 14002  001466  15C3               	andwf	(??_f_lseek+9)& (0+255),w,b
 14003  001468  6FC7               	movwf	(??_f_lseek+13)& (0+255),b
 14004  00146A  51C0               	movf	(??_f_lseek+6)& (0+255),w,b
 14005  00146C  15C4               	andwf	(??_f_lseek+10)& (0+255),w,b
 14006  00146E  6FC8               	movwf	(??_f_lseek+14)& (0+255),b
 14007  001470  51C1               	movf	(??_f_lseek+7)& (0+255),w,b
 14008  001472  15C5               	andwf	(??_f_lseek+11)& (0+255),w,b
 14009  001474  6FC9               	movwf	(??_f_lseek+15)& (0+255),b
 14010  001476  EE20 F006          	lfsr	2,6
 14011  00147A  51B4               	movf	f_lseek@fp& (0+255),w,b
 14012  00147C  26D9               	addwf	fsr2l,f,c
 14013  00147E  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14014  001480  22DA               	addwfc	fsr2h,f,c
 14015  001482  C0C6  FFDE         	movff	??_f_lseek+12,postinc2
 14016  001486  C0C7  FFDE         	movff	??_f_lseek+13,postinc2
 14017  00148A  C0C8  FFDE         	movff	??_f_lseek+14,postinc2
 14018  00148E  C0C9  FFDE         	movff	??_f_lseek+15,postinc2
 14019                           
 14020                           ;tff.c: 1158: ofs -= fp->fptr;
 14021  001492  EE20 F006          	lfsr	2,6
 14022  001496  51B4               	movf	f_lseek@fp& (0+255),w,b
 14023  001498  26D9               	addwf	fsr2l,f,c
 14024  00149A  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14025  00149C  22DA               	addwfc	fsr2h,f,c
 14026  00149E  50DE               	movf	postinc2,w,c
 14027  0014A0  5FB6               	subwf	f_lseek@ofs& (0+255),f,b
 14028  0014A2  50DE               	movf	postinc2,w,c
 14029  0014A4  5BB7               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 14030  0014A6  50DE               	movf	postinc2,w,c
 14031  0014A8  5BB8               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 14032  0014AA  50DD               	movf	postdec2,w,c
 14033  0014AC  5BB9               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 14034                           
 14035                           ;tff.c: 1159: clust = fp->curr_clust;
 14036  0014AE  EE20 F010          	lfsr	2,16
 14037  0014B2  51B4               	movf	f_lseek@fp& (0+255),w,b
 14038  0014B4  26D9               	addwf	fsr2l,f,c
 14039  0014B6  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14040  0014B8  22DA               	addwfc	fsr2h,f,c
 14041  0014BA  CFDE F0D3          	movff	postinc2,f_lseek@clust
 14042  0014BE  CFDD F0D4          	movff	postdec2,f_lseek@clust+1
 14043                           
 14044                           ;tff.c: 1160: } else {
 14045  0014C2  D030               	goto	l10875
 14046  0014C4                     l10863:
 14047                           
 14048                           ; BSR set to: 0
 14049                           ;tff.c: 1161: clust = fp->org_clust;
 14050  0014C4  EE20 F00E          	lfsr	2,14
 14051  0014C8  51B4               	movf	f_lseek@fp& (0+255),w,b
 14052  0014CA  26D9               	addwf	fsr2l,f,c
 14053  0014CC  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14054  0014CE  22DA               	addwfc	fsr2h,f,c
 14055  0014D0  CFDE F0D3          	movff	postinc2,f_lseek@clust
 14056  0014D4  CFDD F0D4          	movff	postdec2,f_lseek@clust+1
 14057                           
 14058                           ; BSR set to: 0
 14059                           ;tff.c: 1163: if (clust == 0) {
 14060  0014D8  51D3               	movf	f_lseek@clust& (0+255),w,b
 14061  0014DA  11D4               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 14062  0014DC  A4D8               	btfss	status,2,c
 14063  0014DE  D018               	goto	l1326
 14064                           
 14065                           ; BSR set to: 0
 14066                           ;tff.c: 1164: clust = create_chain(0);
 14067  0014E0  0E00               	movlw	0
 14068  0014E2  6FA7               	movwf	(create_chain@clust+1)& (0+255),b
 14069  0014E4  0E00               	movlw	0
 14070  0014E6  6FA6               	movwf	create_chain@clust& (0+255),b
 14071  0014E8  EC56  F019         	call	_create_chain	;wreg free
 14072  0014EC  C0A6  F0D3         	movff	?_create_chain,f_lseek@clust
 14073  0014F0  C0A7  F0D4         	movff	?_create_chain+1,f_lseek@clust+1
 14074                           
 14075                           ; BSR set to: 0
 14076                           ;tff.c: 1165: if (clust == 1) goto fk_error;
 14077  0014F4  05D3               	decf	f_lseek@clust& (0+255),w,b
 14078  0014F6  11D4               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 14079  0014F8  B4D8               	btfsc	status,2,c
 14080  0014FA  D0F7               	goto	l10913
 14081                           
 14082                           ; BSR set to: 0
 14083                           ;tff.c: 1166: fp->org_clust = clust;
 14084  0014FC  EE20 F00E          	lfsr	2,14
 14085  001500  51B4               	movf	f_lseek@fp& (0+255),w,b
 14086  001502  26D9               	addwf	fsr2l,f,c
 14087  001504  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14088  001506  22DA               	addwfc	fsr2h,f,c
 14089  001508  C0D3  FFDE         	movff	f_lseek@clust,postinc2
 14090  00150C  C0D4  FFDD         	movff	f_lseek@clust+1,postdec2
 14091  001510                     l1326:
 14092                           
 14093                           ; BSR set to: 0
 14094                           ;tff.c: 1167: };tff.c: 1169: fp->curr_clust = clust;
 14095  001510  EE20 F010          	lfsr	2,16
 14096  001514  51B4               	movf	f_lseek@fp& (0+255),w,b
 14097  001516  26D9               	addwf	fsr2l,f,c
 14098  001518  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14099  00151A  22DA               	addwfc	fsr2h,f,c
 14100  00151C  C0D3  FFDE         	movff	f_lseek@clust,postinc2
 14101  001520  C0D4  FFDD         	movff	f_lseek@clust+1,postdec2
 14102  001524                     l10875:
 14103                           
 14104                           ; BSR set to: 0
 14105                           ;tff.c: 1170: };tff.c: 1171: if (clust != 0) {
 14106  001524  51D3               	movf	f_lseek@clust& (0+255),w,b
 14107  001526  11D4               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 14108  001528  A4D8               	btfss	status,2,c
 14109  00152A  D062               	goto	l10897
 14110  00152C  D0AB               	goto	l10905
 14111  00152E                     l10879:
 14112                           
 14113                           ; BSR set to: 0
 14114                           ;tff.c: 1174: if (fp->flag & 0x02) {
 14115  00152E  EE20 F002          	lfsr	2,2
 14116  001532  51B4               	movf	f_lseek@fp& (0+255),w,b
 14117  001534  26D9               	addwf	fsr2l,f,c
 14118  001536  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14119  001538  22DA               	addwfc	fsr2h,f,c
 14120  00153A  A2DF               	btfss	indf2,1,c
 14121  00153C  D017               	goto	l10887
 14122                           
 14123                           ; BSR set to: 0
 14124                           ;tff.c: 1175: clust = create_chain(clust);
 14125  00153E  C0D3  F0A6         	movff	f_lseek@clust,create_chain@clust
 14126  001542  C0D4  F0A7         	movff	f_lseek@clust+1,create_chain@clust+1
 14127  001546  EC56  F019         	call	_create_chain	;wreg free
 14128  00154A  C0A6  F0D3         	movff	?_create_chain,f_lseek@clust
 14129  00154E  C0A7  F0D4         	movff	?_create_chain+1,f_lseek@clust+1
 14130                           
 14131                           ; BSR set to: 0
 14132                           ;tff.c: 1176: if (clust == 0) {
 14133  001552  51D3               	movf	f_lseek@clust& (0+255),w,b
 14134  001554  11D4               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 14135  001556  A4D8               	btfss	status,2,c
 14136  001558  D013               	goto	l10889
 14137                           
 14138                           ; BSR set to: 0
 14139                           ;tff.c: 1177: ofs = csize; break;
 14140  00155A  C0CF  F0B6         	movff	f_lseek@csize,f_lseek@ofs
 14141  00155E  C0D0  F0B7         	movff	f_lseek@csize+1,f_lseek@ofs+1
 14142  001562  C0D1  F0B8         	movff	f_lseek@csize+2,f_lseek@ofs+2
 14143  001566  C0D2  F0B9         	movff	f_lseek@csize+3,f_lseek@ofs+3
 14144  00156A  D04C               	goto	u13650
 14145  00156C                     l10887:
 14146                           
 14147                           ; BSR set to: 0
 14148                           ;tff.c: 1181: clust = get_cluster(clust);
 14149  00156C  C0D3  F08E         	movff	f_lseek@clust,get_cluster@clust
 14150  001570  C0D4  F08F         	movff	f_lseek@clust+1,get_cluster@clust+1
 14151  001574  EC94  F016         	call	_get_cluster	;wreg free
 14152  001578  C08E  F0D3         	movff	?_get_cluster,f_lseek@clust
 14153  00157C  C08F  F0D4         	movff	?_get_cluster+1,f_lseek@clust+1
 14154  001580                     l10889:
 14155                           
 14156                           ; BSR set to: 0
 14157                           ;tff.c: 1182: if (clust < 2 || clust >= fp->fs->max_clust) goto fk_error;
 14158  001580  51D4               	movf	(f_lseek@clust+1)& (0+255),w,b
 14159  001582  E104               	bnz	u13630
 14160  001584  0E02               	movlw	2
 14161  001586  5DD3               	subwf	f_lseek@clust& (0+255),w,b
 14162  001588  A0D8               	btfss	status,0,c
 14163  00158A  D0AF               	goto	l10913
 14164  00158C                     u13630:
 14165                           
 14166                           ; BSR set to: 0
 14167  00158C  EE20 F004          	lfsr	2,4
 14168  001590  51B4               	movf	f_lseek@fp& (0+255),w,b
 14169  001592  26D9               	addwf	fsr2l,f,c
 14170  001594  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14171  001596  22DA               	addwfc	fsr2h,f,c
 14172  001598  EE10 F016          	lfsr	1,22
 14173  00159C  50DE               	movf	postinc2,w,c
 14174  00159E  26E1               	addwf	fsr1l,f,c
 14175  0015A0  50DD               	movf	postdec2,w,c
 14176  0015A2  22E2               	addwfc	fsr1h,f,c
 14177  0015A4  50E6               	movf	postinc1,w,c
 14178  0015A6  5DD3               	subwf	f_lseek@clust& (0+255),w,b
 14179  0015A8  50E6               	movf	postinc1,w,c
 14180  0015AA  59D4               	subwfb	(f_lseek@clust+1)& (0+255),w,b
 14181  0015AC  B0D8               	btfsc	status,0,c
 14182  0015AE  D09D               	goto	l10913
 14183                           
 14184                           ; BSR set to: 0
 14185                           ;tff.c: 1183: fp->curr_clust = clust;
 14186  0015B0  EE20 F010          	lfsr	2,16
 14187  0015B4  51B4               	movf	f_lseek@fp& (0+255),w,b
 14188  0015B6  26D9               	addwf	fsr2l,f,c
 14189  0015B8  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14190  0015BA  22DA               	addwfc	fsr2h,f,c
 14191  0015BC  C0D3  FFDE         	movff	f_lseek@clust,postinc2
 14192  0015C0  C0D4  FFDD         	movff	f_lseek@clust+1,postdec2
 14193                           
 14194                           ;tff.c: 1184: fp->fptr += csize;
 14195  0015C4  EE20 F006          	lfsr	2,6
 14196  0015C8  51B4               	movf	f_lseek@fp& (0+255),w,b
 14197  0015CA  26D9               	addwf	fsr2l,f,c
 14198  0015CC  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14199  0015CE  22DA               	addwfc	fsr2h,f,c
 14200  0015D0  51CF               	movf	f_lseek@csize& (0+255),w,b
 14201  0015D2  26DE               	addwf	postinc2,f,c
 14202  0015D4  51D0               	movf	(f_lseek@csize+1)& (0+255),w,b
 14203  0015D6  22DE               	addwfc	postinc2,f,c
 14204  0015D8  51D1               	movf	(f_lseek@csize+2)& (0+255),w,b
 14205  0015DA  22DE               	addwfc	postinc2,f,c
 14206  0015DC  51D2               	movf	(f_lseek@csize+3)& (0+255),w,b
 14207  0015DE  22DE               	addwfc	postinc2,f,c
 14208                           
 14209                           ; BSR set to: 0
 14210                           ;tff.c: 1185: ofs -= csize;
 14211  0015E0  51CF               	movf	f_lseek@csize& (0+255),w,b
 14212  0015E2  5FB6               	subwf	f_lseek@ofs& (0+255),f,b
 14213  0015E4  51D0               	movf	(f_lseek@csize+1)& (0+255),w,b
 14214  0015E6  5BB7               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 14215  0015E8  51D1               	movf	(f_lseek@csize+2)& (0+255),w,b
 14216  0015EA  5BB8               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 14217  0015EC  51D2               	movf	(f_lseek@csize+3)& (0+255),w,b
 14218  0015EE  5BB9               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 14219  0015F0                     l10897:
 14220                           
 14221                           ; BSR set to: 0
 14222  0015F0  51B6               	movf	f_lseek@ofs& (0+255),w,b
 14223  0015F2  5DCF               	subwf	f_lseek@csize& (0+255),w,b
 14224  0015F4  51B7               	movf	(f_lseek@ofs+1)& (0+255),w,b
 14225  0015F6  59D0               	subwfb	(f_lseek@csize+1)& (0+255),w,b
 14226  0015F8  51B8               	movf	(f_lseek@ofs+2)& (0+255),w,b
 14227  0015FA  59D1               	subwfb	(f_lseek@csize+2)& (0+255),w,b
 14228  0015FC  51B9               	movf	(f_lseek@ofs+3)& (0+255),w,b
 14229  0015FE  59D2               	subwfb	(f_lseek@csize+3)& (0+255),w,b
 14230  001600  A0D8               	btfss	status,0,c
 14231  001602  D795               	goto	l10879
 14232  001604                     u13650:
 14233                           
 14234                           ; BSR set to: 0
 14235                           ;tff.c: 1186: };tff.c: 1187: fp->fptr += ofs;
 14236  001604  EE20 F006          	lfsr	2,6
 14237  001608  51B4               	movf	f_lseek@fp& (0+255),w,b
 14238  00160A  26D9               	addwf	fsr2l,f,c
 14239  00160C  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14240  00160E  22DA               	addwfc	fsr2h,f,c
 14241  001610  51B6               	movf	f_lseek@ofs& (0+255),w,b
 14242  001612  26DE               	addwf	postinc2,f,c
 14243  001614  51B7               	movf	(f_lseek@ofs+1)& (0+255),w,b
 14244  001616  22DE               	addwfc	postinc2,f,c
 14245  001618  51B8               	movf	(f_lseek@ofs+2)& (0+255),w,b
 14246  00161A  22DE               	addwfc	postinc2,f,c
 14247  00161C  51B9               	movf	(f_lseek@ofs+3)& (0+255),w,b
 14248  00161E  22DE               	addwfc	postinc2,f,c
 14249                           
 14250                           ;tff.c: 1188: fp->csect = (BYTE)(ofs / 512U);
 14251  001620  EE20 F003          	lfsr	2,3
 14252  001624  51B4               	movf	f_lseek@fp& (0+255),w,b
 14253  001626  26D9               	addwf	fsr2l,f,c
 14254  001628  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14255  00162A  22DA               	addwfc	fsr2h,f,c
 14256  00162C  C0B6  F0BA         	movff	f_lseek@ofs,??_f_lseek
 14257  001630  C0B7  F0BB         	movff	f_lseek@ofs+1,??_f_lseek+1
 14258  001634  C0B8  F0BC         	movff	f_lseek@ofs+2,??_f_lseek+2
 14259  001638  C0B9  F0BD         	movff	f_lseek@ofs+3,??_f_lseek+3
 14260  00163C  0E0A               	movlw	10
 14261  00163E  D005               	goto	u13660
 14262  001640                     u13665:
 14263  001640  90D8               	bcf	status,0,c
 14264  001642  33BD               	rrcf	(??_f_lseek+3)& (0+255),f,b
 14265  001644  33BC               	rrcf	(??_f_lseek+2)& (0+255),f,b
 14266  001646  33BB               	rrcf	(??_f_lseek+1)& (0+255),f,b
 14267  001648  33BA               	rrcf	??_f_lseek& (0+255),f,b
 14268  00164A                     u13660:
 14269  00164A  2EE8               	decfsz	wreg,f,c
 14270  00164C  D7F9               	goto	u13665
 14271  00164E  51BA               	movf	??_f_lseek& (0+255),w,b
 14272  001650  6EDF               	movwf	indf2,c
 14273                           
 14274                           ; BSR set to: 0
 14275                           ;tff.c: 1189: if (ofs % 512U) fp->csect++;
 14276  001652  0EFF               	movlw	255
 14277  001654  15B6               	andwf	f_lseek@ofs& (0+255),w,b
 14278  001656  6FBA               	movwf	??_f_lseek& (0+255),b
 14279  001658  0E01               	movlw	1
 14280  00165A  15B7               	andwf	(f_lseek@ofs+1)& (0+255),w,b
 14281  00165C  6FBB               	movwf	(??_f_lseek+1)& (0+255),b
 14282  00165E  0E00               	movlw	0
 14283  001660  15B8               	andwf	(f_lseek@ofs+2)& (0+255),w,b
 14284  001662  6FBC               	movwf	(??_f_lseek+2)& (0+255),b
 14285  001664  0E00               	movlw	0
 14286  001666  15B9               	andwf	(f_lseek@ofs+3)& (0+255),w,b
 14287  001668  6FBD               	movwf	(??_f_lseek+3)& (0+255),b
 14288  00166A  51BA               	movf	??_f_lseek& (0+255),w,b
 14289  00166C  11BB               	iorwf	(??_f_lseek+1)& (0+255),w,b
 14290  00166E  11BC               	iorwf	(??_f_lseek+2)& (0+255),w,b
 14291  001670  11BD               	iorwf	(??_f_lseek+3)& (0+255),w,b
 14292  001672  B4D8               	btfsc	status,2,c
 14293  001674  D007               	goto	l10905
 14294                           
 14295                           ; BSR set to: 0
 14296  001676  EE20 F003          	lfsr	2,3
 14297  00167A  51B4               	movf	f_lseek@fp& (0+255),w,b
 14298  00167C  26D9               	addwf	fsr2l,f,c
 14299  00167E  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14300  001680  22DA               	addwfc	fsr2h,f,c
 14301  001682  2ADF               	incf	indf2,f,c
 14302  001684                     l10905:
 14303                           
 14304                           ; BSR set to: 0
 14305                           ;tff.c: 1190: };tff.c: 1191: };tff.c: 1194: if (fp->fptr > fp->fsize) {
 14306  001684  EE20 F006          	lfsr	2,6
 14307  001688  51B4               	movf	f_lseek@fp& (0+255),w,b
 14308  00168A  26D9               	addwf	fsr2l,f,c
 14309  00168C  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14310  00168E  22DA               	addwfc	fsr2h,f,c
 14311  001690  EE10 F00A          	lfsr	1,10
 14312  001694  51B4               	movf	f_lseek@fp& (0+255),w,b
 14313  001696  26E1               	addwf	fsr1l,f,c
 14314  001698  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14315  00169A  22E2               	addwfc	fsr1h,f,c
 14316  00169C  50DE               	movf	postinc2,w,c
 14317  00169E  5CE6               	subwf	postinc1,w,c
 14318  0016A0  50DE               	movf	postinc2,w,c
 14319  0016A2  58E6               	subwfb	postinc1,w,c
 14320  0016A4  50DE               	movf	postinc2,w,c
 14321  0016A6  58E6               	subwfb	postinc1,w,c
 14322  0016A8  50DE               	movf	postinc2,w,c
 14323  0016AA  58E6               	subwfb	postinc1,w,c
 14324  0016AC  B0D8               	btfsc	status,0,c
 14325  0016AE  0012               	return	
 14326                           
 14327                           ; BSR set to: 0
 14328                           ;tff.c: 1195: fp->fsize = fp->fptr;
 14329  0016B0  EE20 F006          	lfsr	2,6
 14330  0016B4  51B4               	movf	f_lseek@fp& (0+255),w,b
 14331  0016B6  26D9               	addwf	fsr2l,f,c
 14332  0016B8  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14333  0016BA  22DA               	addwfc	fsr2h,f,c
 14334  0016BC  EE10 F00A          	lfsr	1,10
 14335  0016C0  51B4               	movf	f_lseek@fp& (0+255),w,b
 14336  0016C2  26E1               	addwf	fsr1l,f,c
 14337  0016C4  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14338  0016C6  22E2               	addwfc	fsr1h,f,c
 14339  0016C8  CFDE FFE6          	movff	postinc2,postinc1
 14340  0016CC  CFDE FFE6          	movff	postinc2,postinc1
 14341  0016D0  CFDE FFE6          	movff	postinc2,postinc1
 14342  0016D4  CFDE FFE6          	movff	postinc2,postinc1
 14343                           
 14344                           ; BSR set to: 0
 14345                           ;tff.c: 1196: fp->flag |= 0x20;
 14346  0016D8  EE20 F002          	lfsr	2,2
 14347  0016DC  51B4               	movf	f_lseek@fp& (0+255),w,b
 14348  0016DE  26D9               	addwf	fsr2l,f,c
 14349  0016E0  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14350  0016E2  22DA               	addwfc	fsr2h,f,c
 14351  0016E4  0E00               	movlw	0
 14352  0016E6  8ADB               	bsf	plusw2,5,c
 14353  0016E8  0012               	return	
 14354  0016EA                     l10913:
 14355                           
 14356                           ; BSR set to: 0
 14357                           ;tff.c: 1203: fp->flag |= 0x80;
 14358  0016EA  EE20 F002          	lfsr	2,2
 14359  0016EE  51B4               	movf	f_lseek@fp& (0+255),w,b
 14360  0016F0  26D9               	addwf	fsr2l,f,c
 14361  0016F2  51B5               	movf	(f_lseek@fp+1)& (0+255),w,b
 14362  0016F4  22DA               	addwfc	fsr2h,f,c
 14363  0016F6  0E00               	movlw	0
 14364  0016F8  8EDB               	bsf	plusw2,7,c
 14365                           
 14366                           ; BSR set to: 0
 14367  0016FA  0012               	return		;funcret
 14368  0016FC                     __end_of_f_lseek:
 14369                           	callstack 0
 14370                           
 14371 ;; *************** function _create_chain *****************
 14372 ;; Defined at:
 14373 ;;		line 282 in file "bibliotecas/tff.c"
 14374 ;; Parameters:    Size  Location     Type
 14375 ;;  clust           2   70[BANK0 ] unsigned short 
 14376 ;; Auto vars:     Size  Location     Type
 14377 ;;  ncl             2   82[BANK0 ] unsigned short 
 14378 ;;  scl             2   80[BANK0 ] unsigned short 
 14379 ;;  cstat           2   78[BANK0 ] unsigned short 
 14380 ;;  fs              2   76[BANK0 ] PTR struct _FATFS
 14381 ;;		 -> NULL(0), fs(544), 
 14382 ;;  mcl             2   74[BANK0 ] unsigned short 
 14383 ;; Return value:  Size  Location     Type
 14384 ;;                  2   70[BANK0 ] unsigned short 
 14385 ;; Registers used:
 14386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14387 ;; Tracked objects:
 14388 ;;		On entry : 3F/0
 14389 ;;		On exit  : 3F/0
 14390 ;;		Unchanged: 0/0
 14391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14392 ;;      Params:         0       2       0       0       0       0       0       0       0
 14393 ;;      Locals:         0      10       0       0       0       0       0       0       0
 14394 ;;      Temps:          0       2       0       0       0       0       0       0       0
 14395 ;;      Totals:         0      14       0       0       0       0       0       0       0
 14396 ;;Total ram usage:       14 bytes
 14397 ;; Hardware stack levels used: 1
 14398 ;; Hardware stack levels required when called: 10
 14399 ;; This function calls:
 14400 ;;		_get_cluster
 14401 ;;		_put_cluster
 14402 ;; This function is called by:
 14403 ;;		_reserve_direntry
 14404 ;;		_f_write
 14405 ;;		_f_lseek
 14406 ;; This function uses a non-reentrant model
 14407 ;;
 14408                           
 14409                           	psect	text60
 14410  0032AC                     __ptext60:
 14411                           	callstack 0
 14412  0032AC                     _create_chain:
 14413                           	callstack 13
 14414                           
 14415                           ; BSR set to: 0
 14416                           ;tff.c: 286: CLUST cstat, ncl, scl, mcl;;tff.c: 287: FATFS *fs = FatFs;
 14417                           
 14418                           ; BSR set to: 0
 14419                           ;incstack = 0
 14420  0032AC  C0F9  F0AC         	movff	_FatFs,create_chain@fs
 14421  0032B0  C0FA  F0AD         	movff	_FatFs+1,create_chain@fs+1
 14422                           
 14423                           ; BSR set to: 0
 14424                           ;tff.c: 290: mcl = fs->max_clust;
 14425  0032B4  EE20 F016          	lfsr	2,22
 14426  0032B8  51AC               	movf	create_chain@fs& (0+255),w,b
 14427  0032BA  26D9               	addwf	fsr2l,f,c
 14428  0032BC  51AD               	movf	(create_chain@fs+1)& (0+255),w,b
 14429  0032BE  22DA               	addwfc	fsr2h,f,c
 14430  0032C0  CFDE F0AA          	movff	postinc2,create_chain@mcl
 14431  0032C4  CFDD F0AB          	movff	postdec2,create_chain@mcl+1
 14432                           
 14433                           ; BSR set to: 0
 14434                           ;tff.c: 291: if (clust == 0) {
 14435  0032C8  51A6               	movf	create_chain@clust& (0+255),w,b
 14436  0032CA  11A7               	iorwf	(create_chain@clust+1)& (0+255),w,b
 14437  0032CC  A4D8               	btfss	status,2,c
 14438  0032CE  D01B               	goto	l9605
 14439                           
 14440                           ; BSR set to: 0
 14441                           ;tff.c: 292: scl = fs->last_clust;
 14442  0032D0  EE20 F018          	lfsr	2,24
 14443  0032D4  51AC               	movf	create_chain@fs& (0+255),w,b
 14444  0032D6  26D9               	addwf	fsr2l,f,c
 14445  0032D8  51AD               	movf	(create_chain@fs+1)& (0+255),w,b
 14446  0032DA  22DA               	addwfc	fsr2h,f,c
 14447  0032DC  CFDE F0B0          	movff	postinc2,create_chain@scl
 14448  0032E0  CFDD F0B1          	movff	postdec2,create_chain@scl+1
 14449                           
 14450                           ; BSR set to: 0
 14451                           ;tff.c: 293: if (scl < 2 || scl >= mcl) scl = 1;
 14452  0032E4  51B1               	movf	(create_chain@scl+1)& (0+255),w,b
 14453  0032E6  E104               	bnz	u11420
 14454  0032E8  0E02               	movlw	2
 14455  0032EA  5DB0               	subwf	create_chain@scl& (0+255),w,b
 14456  0032EC  A0D8               	btfss	status,0,c
 14457  0032EE  D006               	goto	u11430
 14458  0032F0                     u11420:
 14459                           
 14460                           ; BSR set to: 0
 14461  0032F0  51AA               	movf	create_chain@mcl& (0+255),w,b
 14462  0032F2  5DB0               	subwf	create_chain@scl& (0+255),w,b
 14463  0032F4  51AB               	movf	(create_chain@mcl+1)& (0+255),w,b
 14464  0032F6  59B1               	subwfb	(create_chain@scl+1)& (0+255),w,b
 14465  0032F8  A0D8               	btfss	status,0,c
 14466  0032FA  D029               	goto	l1047
 14467  0032FC                     u11430:
 14468                           
 14469                           ; BSR set to: 0
 14470  0032FC  0E00               	movlw	0
 14471  0032FE  6FB1               	movwf	(create_chain@scl+1)& (0+255),b
 14472  003300  0E01               	movlw	1
 14473  003302  6FB0               	movwf	create_chain@scl& (0+255),b
 14474  003304  D024               	goto	l1047
 14475  003306                     l9605:
 14476                           
 14477                           ; BSR set to: 0
 14478                           ;tff.c: 295: else {;tff.c: 296: cstat = get_cluster(clust);
 14479  003306  C0A6  F08E         	movff	create_chain@clust,get_cluster@clust
 14480  00330A  C0A7  F08F         	movff	create_chain@clust+1,get_cluster@clust+1
 14481  00330E  EC94  F016         	call	_get_cluster	;wreg free
 14482  003312  C08E  F0AE         	movff	?_get_cluster,create_chain@cstat
 14483  003316  C08F  F0AF         	movff	?_get_cluster+1,create_chain@cstat+1
 14484                           
 14485                           ; BSR set to: 0
 14486                           ;tff.c: 297: if (cstat < 2) return 1;
 14487  00331A  51AF               	movf	(create_chain@cstat+1)& (0+255),w,b
 14488  00331C  E109               	bnz	l9613
 14489  00331E  0E02               	movlw	2
 14490  003320  5DAE               	subwf	create_chain@cstat& (0+255),w,b
 14491  003322  B0D8               	btfsc	status,0,c
 14492  003324  D005               	goto	l9613
 14493  003326                     u11440:
 14494                           
 14495                           ; BSR set to: 0
 14496  003326  0E00               	movlw	0
 14497  003328  6FA7               	movwf	(?_create_chain+1)& (0+255),b
 14498  00332A  0E01               	movlw	1
 14499  00332C  6FA6               	movwf	?_create_chain& (0+255),b
 14500  00332E  0012               	return	
 14501  003330                     l9613:
 14502                           
 14503                           ; BSR set to: 0
 14504                           ;tff.c: 298: if (cstat < mcl) return cstat;
 14505  003330  51AA               	movf	create_chain@mcl& (0+255),w,b
 14506  003332  5DAE               	subwf	create_chain@cstat& (0+255),w,b
 14507  003334  51AB               	movf	(create_chain@mcl+1)& (0+255),w,b
 14508  003336  59AF               	subwfb	(create_chain@cstat+1)& (0+255),w,b
 14509  003338  B0D8               	btfsc	status,0,c
 14510  00333A  D005               	goto	l1050
 14511                           
 14512                           ; BSR set to: 0
 14513  00333C  C0AE  F0A6         	movff	create_chain@cstat,?_create_chain
 14514  003340  C0AF  F0A7         	movff	create_chain@cstat+1,?_create_chain+1
 14515  003344  0012               	return	
 14516  003346                     l1050:
 14517                           
 14518                           ; BSR set to: 0
 14519                           ;tff.c: 299: scl = clust;
 14520  003346  C0A6  F0B0         	movff	create_chain@clust,create_chain@scl
 14521  00334A  C0A7  F0B1         	movff	create_chain@clust+1,create_chain@scl+1
 14522  00334E                     l1047:
 14523                           
 14524                           ; BSR set to: 0
 14525                           ;tff.c: 300: };tff.c: 302: ncl = scl;
 14526  00334E  C0B0  F0B2         	movff	create_chain@scl,create_chain@ncl
 14527  003352  C0B1  F0B3         	movff	create_chain@scl+1,create_chain@ncl+1
 14528  003356                     l9617:
 14529                           
 14530                           ; BSR set to: 0
 14531                           ;tff.c: 304: ncl++;
 14532  003356  4BB2               	infsnz	create_chain@ncl& (0+255),f,b
 14533  003358  2BB3               	incf	(create_chain@ncl+1)& (0+255),f,b
 14534                           
 14535                           ; BSR set to: 0
 14536                           ;tff.c: 305: if (ncl >= mcl) {
 14537  00335A  51AA               	movf	create_chain@mcl& (0+255),w,b
 14538  00335C  5DB2               	subwf	create_chain@ncl& (0+255),w,b
 14539  00335E  51AB               	movf	(create_chain@mcl+1)& (0+255),w,b
 14540  003360  59B3               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 14541  003362  A0D8               	btfss	status,0,c
 14542  003364  D00F               	goto	l9629
 14543                           
 14544                           ; BSR set to: 0
 14545                           ;tff.c: 306: ncl = 2;
 14546  003366  0E00               	movlw	0
 14547  003368  6FB3               	movwf	(create_chain@ncl+1)& (0+255),b
 14548  00336A  0E02               	movlw	2
 14549  00336C  6FB2               	movwf	create_chain@ncl& (0+255),b
 14550                           
 14551                           ; BSR set to: 0
 14552                           ;tff.c: 307: if (ncl > scl) return 0;
 14553  00336E  51B1               	movf	(create_chain@scl+1)& (0+255),w,b
 14554  003370  E109               	bnz	l9629
 14555  003372  0E02               	movlw	2
 14556  003374  5DB0               	subwf	create_chain@scl& (0+255),w,b
 14557  003376  B0D8               	btfsc	status,0,c
 14558  003378  D005               	goto	l9629
 14559  00337A                     u11470:
 14560                           
 14561                           ; BSR set to: 0
 14562  00337A  0E00               	movlw	0
 14563  00337C  6FA7               	movwf	(?_create_chain+1)& (0+255),b
 14564  00337E  0E00               	movlw	0
 14565  003380  6FA6               	movwf	?_create_chain& (0+255),b
 14566  003382  0012               	return	
 14567  003384                     l9629:
 14568                           
 14569                           ; BSR set to: 0
 14570                           ;tff.c: 308: };tff.c: 309: cstat = get_cluster(ncl);
 14571  003384  C0B2  F08E         	movff	create_chain@ncl,get_cluster@clust
 14572  003388  C0B3  F08F         	movff	create_chain@ncl+1,get_cluster@clust+1
 14573  00338C  EC94  F016         	call	_get_cluster	;wreg free
 14574  003390  C08E  F0AE         	movff	?_get_cluster,create_chain@cstat
 14575  003394  C08F  F0AF         	movff	?_get_cluster+1,create_chain@cstat+1
 14576                           
 14577                           ; BSR set to: 0
 14578                           ;tff.c: 310: if (cstat == 0) break;
 14579  003398  51AE               	movf	create_chain@cstat& (0+255),w,b
 14580  00339A  11AF               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 14581  00339C  B4D8               	btfsc	status,2,c
 14582  00339E  D00C               	goto	l9647
 14583                           
 14584                           ; BSR set to: 0
 14585                           ;tff.c: 311: if (cstat == 1) return 1;
 14586  0033A0  05AE               	decf	create_chain@cstat& (0+255),w,b
 14587  0033A2  11AF               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 14588  0033A4  B4D8               	btfsc	status,2,c
 14589  0033A6  D7BF               	goto	u11440
 14590                           
 14591                           ; BSR set to: 0
 14592                           ;tff.c: 312: if (ncl == scl) return 0;
 14593  0033A8  51B0               	movf	create_chain@scl& (0+255),w,b
 14594  0033AA  19B2               	xorwf	create_chain@ncl& (0+255),w,b
 14595  0033AC  E1D4               	bnz	l9617
 14596  0033AE  51B1               	movf	(create_chain@scl+1)& (0+255),w,b
 14597  0033B0  19B3               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 14598  0033B2  B4D8               	btfsc	status,2,c
 14599  0033B4  D7E2               	goto	u11470
 14600  0033B6  D7CF               	goto	l9617
 14601  0033B8                     l9647:
 14602                           
 14603                           ; BSR set to: 0
 14604                           ;tff.c: 315: if (!put_cluster(ncl, (CLUST)0x0FFFFFFF)) return 1;
 14605  0033B8  C0B2  F08E         	movff	create_chain@ncl,put_cluster@clust
 14606  0033BC  C0B3  F08F         	movff	create_chain@ncl+1,put_cluster@clust+1
 14607  0033C0  0EFF               	movlw	255
 14608  0033C2  6F91               	movwf	(put_cluster@val+1)& (0+255),b
 14609  0033C4  6990               	setf	put_cluster@val& (0+255),b
 14610  0033C6  EC2F  F014         	call	_put_cluster	;wreg free
 14611  0033CA  0900               	iorlw	0
 14612  0033CC  B4D8               	btfsc	status,2,c
 14613  0033CE  D7AB               	goto	u11440
 14614                           
 14615                           ; BSR set to: 0
 14616                           ;tff.c: 316: if (clust != 0 && !put_cluster(clust, ncl)) return 1;
 14617  0033D0  51A6               	movf	create_chain@clust& (0+255),w,b
 14618  0033D2  11A7               	iorwf	(create_chain@clust+1)& (0+255),w,b
 14619  0033D4  B4D8               	btfsc	status,2,c
 14620  0033D6  D00D               	goto	l9661
 14621                           
 14622                           ; BSR set to: 0
 14623  0033D8  C0A6  F08E         	movff	create_chain@clust,put_cluster@clust
 14624  0033DC  C0A7  F08F         	movff	create_chain@clust+1,put_cluster@clust+1
 14625  0033E0  C0B2  F090         	movff	create_chain@ncl,put_cluster@val
 14626  0033E4  C0B3  F091         	movff	create_chain@ncl+1,put_cluster@val+1
 14627  0033E8  EC2F  F014         	call	_put_cluster	;wreg free
 14628  0033EC  0900               	iorlw	0
 14629  0033EE  B4D8               	btfsc	status,2,c
 14630  0033F0  D79A               	goto	u11440
 14631  0033F2                     l9661:
 14632                           
 14633                           ; BSR set to: 0
 14634                           ;tff.c: 318: fs->last_clust = ncl;
 14635  0033F2  EE20 F018          	lfsr	2,24
 14636  0033F6  51AC               	movf	create_chain@fs& (0+255),w,b
 14637  0033F8  26D9               	addwf	fsr2l,f,c
 14638  0033FA  51AD               	movf	(create_chain@fs+1)& (0+255),w,b
 14639  0033FC  22DA               	addwfc	fsr2h,f,c
 14640  0033FE  C0B2  FFDE         	movff	create_chain@ncl,postinc2
 14641  003402  C0B3  FFDD         	movff	create_chain@ncl+1,postdec2
 14642                           
 14643                           ;tff.c: 319: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 14644  003406  EE20 F01A          	lfsr	2,26
 14645  00340A  51AC               	movf	create_chain@fs& (0+255),w,b
 14646  00340C  26D9               	addwf	fsr2l,f,c
 14647  00340E  51AD               	movf	(create_chain@fs+1)& (0+255),w,b
 14648  003410  22DA               	addwfc	fsr2h,f,c
 14649  003412  28DE               	incf	postinc2,w,c
 14650  003414  E103               	bnz	u11540
 14651  003416  28DE               	incf	postinc2,w,c
 14652  003418  B4D8               	btfsc	status,2,c
 14653  00341A  D009               	goto	l9665
 14654  00341C                     u11540:
 14655                           
 14656                           ; BSR set to: 0
 14657                           ;tff.c: 320: fs->free_clust--;
 14658  00341C  EE20 F01A          	lfsr	2,26
 14659  003420  51AC               	movf	create_chain@fs& (0+255),w,b
 14660  003422  26D9               	addwf	fsr2l,f,c
 14661  003424  51AD               	movf	(create_chain@fs+1)& (0+255),w,b
 14662  003426  22DA               	addwfc	fsr2h,f,c
 14663  003428  06DE               	decf	postinc2,f,c
 14664  00342A  0E00               	movlw	0
 14665  00342C  5ADD               	subwfb	postdec2,f,c
 14666  00342E                     l9665:
 14667                           
 14668                           ; BSR set to: 0
 14669                           ;tff.c: 324: };tff.c: 326: return ncl;
 14670  00342E  C0B2  F0A6         	movff	create_chain@ncl,?_create_chain
 14671  003432  C0B3  F0A7         	movff	create_chain@ncl+1,?_create_chain+1
 14672                           
 14673                           ; BSR set to: 0
 14674  003436  0012               	return		;funcret
 14675  003438                     __end_of_create_chain:
 14676                           	callstack 0
 14677                           
 14678 ;; *************** function _put_cluster *****************
 14679 ;; Defined at:
 14680 ;;		line 197 in file "bibliotecas/tff.c"
 14681 ;; Parameters:    Size  Location     Type
 14682 ;;  clust           2   46[BANK0 ] unsigned short 
 14683 ;;  val             2   48[BANK0 ] unsigned short 
 14684 ;; Auto vars:     Size  Location     Type
 14685 ;;  fatsect         4   60[BANK0 ] unsigned long 
 14686 ;;  fs              2   68[BANK0 ] PTR struct _FATFS
 14687 ;;		 -> NULL(0), fs(544), 
 14688 ;;  p               2   66[BANK0 ] PTR unsigned char 
 14689 ;;		 -> fs.win(512), NULL(0), fs(544), 
 14690 ;;  bc              2   64[BANK0 ] unsigned short 
 14691 ;; Return value:  Size  Location     Type
 14692 ;;                  1    wreg      enum E105
 14693 ;; Registers used:
 14694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14695 ;; Tracked objects:
 14696 ;;		On entry : 3F/0
 14697 ;;		On exit  : 3F/0
 14698 ;;		Unchanged: 0/0
 14699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14700 ;;      Params:         0       4       0       0       0       0       0       0       0
 14701 ;;      Locals:         0      14       0       0       0       0       0       0       0
 14702 ;;      Temps:          0       6       0       0       0       0       0       0       0
 14703 ;;      Totals:         0      24       0       0       0       0       0       0       0
 14704 ;;Total ram usage:       24 bytes
 14705 ;; Hardware stack levels used: 1
 14706 ;; Hardware stack levels required when called: 9
 14707 ;; This function calls:
 14708 ;;		___wmul
 14709 ;;		_move_window
 14710 ;; This function is called by:
 14711 ;;		_remove_chain
 14712 ;;		_create_chain
 14713 ;; This function uses a non-reentrant model
 14714 ;;
 14715                           
 14716                           	psect	text61
 14717  00285E                     __ptext61:
 14718                           	callstack 0
 14719  00285E                     _put_cluster:
 14720                           	callstack 13
 14721                           
 14722                           ; BSR set to: 0
 14723                           ;tff.c: 202: WORD bc;;tff.c: 203: BYTE *p;;tff.c: 204: DWORD fatsect;;tff.c: 205: FATFS 
      +                          *fs = FatFs;
 14724                           
 14725                           ; BSR set to: 0
 14726                           ;incstack = 0
 14727  00285E  C0F9  F0A4         	movff	_FatFs,put_cluster@fs
 14728  002862  C0FA  F0A5         	movff	_FatFs+1,put_cluster@fs+1
 14729                           
 14730                           ; BSR set to: 0
 14731                           ;tff.c: 208: fatsect = fs->fatbase;
 14732  002866  EE20 F008          	lfsr	2,8
 14733  00286A  51A4               	movf	put_cluster@fs& (0+255),w,b
 14734  00286C  26D9               	addwf	fsr2l,f,c
 14735  00286E  51A5               	movf	(put_cluster@fs+1)& (0+255),w,b
 14736  002870  22DA               	addwfc	fsr2h,f,c
 14737  002872  CFDE F09C          	movff	postinc2,put_cluster@fatsect
 14738  002876  CFDE F09D          	movff	postinc2,put_cluster@fatsect+1
 14739  00287A  CFDE F09E          	movff	postinc2,put_cluster@fatsect+2
 14740  00287E  CFDE F09F          	movff	postinc2,put_cluster@fatsect+3
 14741                           
 14742                           ;tff.c: 209: switch (fs->fs_type) {
 14743  002882  D108               	goto	l9547
 14744  002884                     l9495:
 14745                           
 14746                           ; BSR set to: 0
 14747                           ;tff.c: 211: bc = (WORD)clust * 3 / 2;
 14748  002884  C08E  F01B         	movff	put_cluster@clust,___wmul@multiplier
 14749  002888  C08F  F01C         	movff	put_cluster@clust+1,___wmul@multiplier+1
 14750  00288C  0E00               	movlw	0
 14751  00288E  6E1E               	movwf	(___wmul@multiplicand+1)^0,c
 14752  002890  0E03               	movlw	3
 14753  002892  6E1D               	movwf	___wmul@multiplicand^0,c
 14754  002894  EC1A  F028         	call	___wmul	;wreg free
 14755  002898  90D8               	bcf	status,0,c
 14756  00289A  301C               	rrcf	(?___wmul+1)^0,w,c
 14757  00289C  0100               	movlb	0	; () banked
 14758  00289E  6F92               	movwf	??_put_cluster& (0+255),b
 14759  0028A0  301B               	rrcf	?___wmul^0,w,c
 14760  0028A2  6FA0               	movwf	put_cluster@bc& (0+255),b
 14761  0028A4  C092  F0A1         	movff	??_put_cluster,put_cluster@bc+1
 14762                           
 14763                           ; BSR set to: 0
 14764                           ;tff.c: 212: if (!move_window(fatsect + bc / 512U)) return FALSE;
 14765  0028A8  C0A0  F092         	movff	put_cluster@bc,??_put_cluster
 14766  0028AC  C0A1  F093         	movff	put_cluster@bc+1,??_put_cluster+1
 14767  0028B0  0E09               	movlw	9
 14768  0028B2  6F94               	movwf	(??_put_cluster+2)& (0+255),b
 14769  0028B4                     u11275:
 14770  0028B4  90D8               	bcf	status,0,c
 14771  0028B6  3393               	rrcf	(??_put_cluster+1)& (0+255),f,b
 14772  0028B8  3392               	rrcf	??_put_cluster& (0+255),f,b
 14773  0028BA  2F94               	decfsz	(??_put_cluster+2)& (0+255),f,b
 14774  0028BC  D7FB               	goto	u11275
 14775  0028BE  5192               	movf	??_put_cluster& (0+255),w,b
 14776  0028C0  259C               	addwf	put_cluster@fatsect& (0+255),w,b
 14777  0028C2  6F79               	movwf	move_window@sector& (0+255),b
 14778  0028C4  5193               	movf	(??_put_cluster+1)& (0+255),w,b
 14779  0028C6  219D               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 14780  0028C8  6F7A               	movwf	(move_window@sector+1)& (0+255),b
 14781  0028CA  0E00               	movlw	0
 14782  0028CC  219E               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 14783  0028CE  6F7B               	movwf	(move_window@sector+2)& (0+255),b
 14784  0028D0  0E00               	movlw	0
 14785  0028D2  219F               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 14786  0028D4  6F7C               	movwf	(move_window@sector+3)& (0+255),b
 14787  0028D6  EC81  F018         	call	_move_window	;wreg free
 14788  0028DA  0900               	iorlw	0
 14789  0028DC  A4D8               	btfss	status,2,c
 14790  0028DE  D002               	goto	l9503
 14791  0028E0                     u11280:
 14792                           
 14793                           ; BSR set to: 0
 14794  0028E0  0E00               	movlw	0
 14795  0028E2  0012               	return	
 14796  0028E4                     l9503:
 14797                           
 14798                           ; BSR set to: 0
 14799                           ;tff.c: 213: p = &fs->win[bc % 512U];
 14800  0028E4  0EFF               	movlw	255
 14801  0028E6  6F92               	movwf	??_put_cluster& (0+255),b
 14802  0028E8  0E01               	movlw	1
 14803  0028EA  6F93               	movwf	(??_put_cluster+1)& (0+255),b
 14804  0028EC  C0A0  F094         	movff	put_cluster@bc,??_put_cluster+2
 14805  0028F0  C0A1  F095         	movff	put_cluster@bc+1,??_put_cluster+3
 14806  0028F4  5192               	movf	??_put_cluster& (0+255),w,b
 14807  0028F6  1794               	andwf	(??_put_cluster+2)& (0+255),f,b
 14808  0028F8  5193               	movf	(??_put_cluster+1)& (0+255),w,b
 14809  0028FA  1795               	andwf	(??_put_cluster+3)& (0+255),f,b
 14810  0028FC  C0A4  F096         	movff	put_cluster@fs,??_put_cluster+4
 14811  002900  C0A5  F097         	movff	put_cluster@fs+1,??_put_cluster+5
 14812  002904  5194               	movf	(??_put_cluster+2)& (0+255),w,b
 14813  002906  2796               	addwf	(??_put_cluster+4)& (0+255),f,b
 14814  002908  5195               	movf	(??_put_cluster+3)& (0+255),w,b
 14815  00290A  2397               	addwfc	(??_put_cluster+5)& (0+255),f,b
 14816  00290C  0E20               	movlw	32
 14817  00290E  2596               	addwf	(??_put_cluster+4)& (0+255),w,b
 14818  002910  6FA2               	movwf	put_cluster@p& (0+255),b
 14819  002912  0E00               	movlw	0
 14820  002914  2197               	addwfc	(??_put_cluster+5)& (0+255),w,b
 14821  002916  6FA3               	movwf	(put_cluster@p+1)& (0+255),b
 14822                           
 14823                           ; BSR set to: 0
 14824                           ;tff.c: 214: *p = (clust & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 14825  002918  B18E               	btfsc	put_cluster@clust& (0+255),0,b
 14826  00291A  D004               	goto	l9509
 14827                           
 14828                           ; BSR set to: 0
 14829  00291C  C090  F098         	movff	put_cluster@val,_put_cluster$1992
 14830  002920  6B99               	clrf	(_put_cluster$1992+1)& (0+255),b
 14831  002922  D01A               	goto	l9511
 14832  002924                     l9509:
 14833                           
 14834                           ; BSR set to: 0
 14835  002924  5190               	movf	put_cluster@val& (0+255),w,b
 14836  002926  6F92               	movwf	??_put_cluster& (0+255),b
 14837  002928  6B93               	clrf	(??_put_cluster+1)& (0+255),b
 14838  00292A  3B92               	swapf	??_put_cluster& (0+255),f,b
 14839  00292C  3B93               	swapf	(??_put_cluster+1)& (0+255),f,b
 14840  00292E  0EF0               	movlw	240
 14841  002930  1793               	andwf	(??_put_cluster+1)& (0+255),f,b
 14842  002932  5192               	movf	??_put_cluster& (0+255),w,b
 14843  002934  0B0F               	andlw	15
 14844  002936  1393               	iorwf	(??_put_cluster+1)& (0+255),f,b
 14845  002938  0EF0               	movlw	240
 14846  00293A  1792               	andwf	??_put_cluster& (0+255),f,b
 14847  00293C  C0A2  FFD9         	movff	put_cluster@p,fsr2l
 14848  002940  C0A3  FFDA         	movff	put_cluster@p+1,fsr2h
 14849  002944  50DF               	movf	indf2,w,c
 14850  002946  0B0F               	andlw	15
 14851  002948  6F94               	movwf	(??_put_cluster+2)& (0+255),b
 14852  00294A  6B95               	clrf	(??_put_cluster+3)& (0+255),b
 14853  00294C  5192               	movf	??_put_cluster& (0+255),w,b
 14854  00294E  1194               	iorwf	(??_put_cluster+2)& (0+255),w,b
 14855  002950  6F98               	movwf	_put_cluster$1992& (0+255),b
 14856  002952  5193               	movf	(??_put_cluster+1)& (0+255),w,b
 14857  002954  1195               	iorwf	(??_put_cluster+3)& (0+255),w,b
 14858  002956  6F99               	movwf	(_put_cluster$1992+1)& (0+255),b
 14859  002958                     l9511:
 14860                           
 14861                           ; BSR set to: 0
 14862  002958  C0A2  FFD9         	movff	put_cluster@p,fsr2l
 14863  00295C  C0A3  FFDA         	movff	put_cluster@p+1,fsr2h
 14864  002960  C098  FFDF         	movff	_put_cluster$1992,indf2
 14865                           
 14866                           ; BSR set to: 0
 14867                           ;tff.c: 215: bc++;
 14868  002964  4BA0               	infsnz	put_cluster@bc& (0+255),f,b
 14869  002966  2BA1               	incf	(put_cluster@bc+1)& (0+255),f,b
 14870                           
 14871                           ; BSR set to: 0
 14872                           ;tff.c: 216: fs->winflag = 1;
 14873  002968  EE20 F01F          	lfsr	2,31
 14874  00296C  51A4               	movf	put_cluster@fs& (0+255),w,b
 14875  00296E  26D9               	addwf	fsr2l,f,c
 14876  002970  51A5               	movf	(put_cluster@fs+1)& (0+255),w,b
 14877  002972  22DA               	addwfc	fsr2h,f,c
 14878  002974  0E01               	movlw	1
 14879  002976  6EDF               	movwf	indf2,c
 14880                           
 14881                           ; BSR set to: 0
 14882                           ;tff.c: 217: if (!move_window(fatsect + bc / 512U)) return FALSE;
 14883  002978  C0A0  F092         	movff	put_cluster@bc,??_put_cluster
 14884  00297C  C0A1  F093         	movff	put_cluster@bc+1,??_put_cluster+1
 14885  002980  0E09               	movlw	9
 14886  002982  6F94               	movwf	(??_put_cluster+2)& (0+255),b
 14887  002984                     u11305:
 14888  002984  90D8               	bcf	status,0,c
 14889  002986  3393               	rrcf	(??_put_cluster+1)& (0+255),f,b
 14890  002988  3392               	rrcf	??_put_cluster& (0+255),f,b
 14891  00298A  2F94               	decfsz	(??_put_cluster+2)& (0+255),f,b
 14892  00298C  D7FB               	goto	u11305
 14893  00298E  5192               	movf	??_put_cluster& (0+255),w,b
 14894  002990  259C               	addwf	put_cluster@fatsect& (0+255),w,b
 14895  002992  6F79               	movwf	move_window@sector& (0+255),b
 14896  002994  5193               	movf	(??_put_cluster+1)& (0+255),w,b
 14897  002996  219D               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 14898  002998  6F7A               	movwf	(move_window@sector+1)& (0+255),b
 14899  00299A  0E00               	movlw	0
 14900  00299C  219E               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 14901  00299E  6F7B               	movwf	(move_window@sector+2)& (0+255),b
 14902  0029A0  0E00               	movlw	0
 14903  0029A2  219F               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 14904  0029A4  6F7C               	movwf	(move_window@sector+3)& (0+255),b
 14905  0029A6  EC81  F018         	call	_move_window	;wreg free
 14906  0029AA  0900               	iorlw	0
 14907  0029AC  B4D8               	btfsc	status,2,c
 14908  0029AE  D798               	goto	u11280
 14909                           
 14910                           ; BSR set to: 0
 14911                           ;tff.c: 218: p = &fs->win[bc % 512U];
 14912  0029B0  0EFF               	movlw	255
 14913  0029B2  6F92               	movwf	??_put_cluster& (0+255),b
 14914  0029B4  0E01               	movlw	1
 14915  0029B6  6F93               	movwf	(??_put_cluster+1)& (0+255),b
 14916  0029B8  C0A0  F094         	movff	put_cluster@bc,??_put_cluster+2
 14917  0029BC  C0A1  F095         	movff	put_cluster@bc+1,??_put_cluster+3
 14918  0029C0  5192               	movf	??_put_cluster& (0+255),w,b
 14919  0029C2  1794               	andwf	(??_put_cluster+2)& (0+255),f,b
 14920  0029C4  5193               	movf	(??_put_cluster+1)& (0+255),w,b
 14921  0029C6  1795               	andwf	(??_put_cluster+3)& (0+255),f,b
 14922  0029C8  C0A4  F096         	movff	put_cluster@fs,??_put_cluster+4
 14923  0029CC  C0A5  F097         	movff	put_cluster@fs+1,??_put_cluster+5
 14924  0029D0  5194               	movf	(??_put_cluster+2)& (0+255),w,b
 14925  0029D2  2796               	addwf	(??_put_cluster+4)& (0+255),f,b
 14926  0029D4  5195               	movf	(??_put_cluster+3)& (0+255),w,b
 14927  0029D6  2397               	addwfc	(??_put_cluster+5)& (0+255),f,b
 14928  0029D8  0E20               	movlw	32
 14929  0029DA  2596               	addwf	(??_put_cluster+4)& (0+255),w,b
 14930  0029DC  6FA2               	movwf	put_cluster@p& (0+255),b
 14931  0029DE  0E00               	movlw	0
 14932  0029E0  2197               	addwfc	(??_put_cluster+5)& (0+255),w,b
 14933  0029E2  6FA3               	movwf	(put_cluster@p+1)& (0+255),b
 14934                           
 14935                           ; BSR set to: 0
 14936                           ;tff.c: 219: *p = (clust & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x
      +                          0F));
 14937  0029E4  B18E               	btfsc	put_cluster@clust& (0+255),0,b
 14938  0029E6  D00E               	goto	l9529
 14939                           
 14940                           ; BSR set to: 0
 14941  0029E8  C091  F092         	movff	put_cluster@val+1,??_put_cluster
 14942  0029EC  0E0F               	movlw	15
 14943  0029EE  1792               	andwf	??_put_cluster& (0+255),f,b
 14944  0029F0  C0A2  FFD9         	movff	put_cluster@p,fsr2l
 14945  0029F4  C0A3  FFDA         	movff	put_cluster@p+1,fsr2h
 14946  0029F8  50DF               	movf	indf2,w,c
 14947  0029FA  0BF0               	andlw	240
 14948  0029FC  1192               	iorwf	??_put_cluster& (0+255),w,b
 14949  0029FE  6F93               	movwf	(??_put_cluster+1)& (0+255),b
 14950  002A00  5193               	movf	(??_put_cluster+1)& (0+255),w,b
 14951  002A02  D00C               	goto	L6
 14952  002A04                     l9529:
 14953                           
 14954                           ; BSR set to: 0
 14955  002A04  C090  F092         	movff	put_cluster@val,??_put_cluster
 14956  002A08  C091  F093         	movff	put_cluster@val+1,??_put_cluster+1
 14957  002A0C  0E04               	movlw	4
 14958  002A0E  6F94               	movwf	(??_put_cluster+2)& (0+255),b
 14959  002A10                     u11335:
 14960  002A10  90D8               	bcf	status,0,c
 14961  002A12  3393               	rrcf	(??_put_cluster+1)& (0+255),f,b
 14962  002A14  3392               	rrcf	??_put_cluster& (0+255),f,b
 14963  002A16  2F94               	decfsz	(??_put_cluster+2)& (0+255),f,b
 14964  002A18  D7FB               	goto	u11335
 14965  002A1A  5192               	movf	??_put_cluster& (0+255),w,b
 14966  002A1C                     L6:
 14967  002A1C  6F9A               	movwf	_put_cluster$1993& (0+255),b
 14968  002A1E  6B9B               	clrf	(_put_cluster$1993+1)& (0+255),b
 14969                           
 14970                           ; BSR set to: 0
 14971  002A20  C0A2  FFD9         	movff	put_cluster@p,fsr2l
 14972  002A24  C0A3  FFDA         	movff	put_cluster@p+1,fsr2h
 14973  002A28  C09A  FFDF         	movff	_put_cluster$1993,indf2
 14974                           
 14975                           ;tff.c: 220: break;
 14976  002A2C  D041               	goto	l9549
 14977  002A2E                     l9533:
 14978                           
 14979                           ; BSR set to: 0
 14980                           ;tff.c: 223: if (!move_window(fatsect + clust / 256)) return FALSE;
 14981  002A2E  518F               	movf	(put_cluster@clust+1)& (0+255),w,b
 14982  002A30  259C               	addwf	put_cluster@fatsect& (0+255),w,b
 14983  002A32  6F79               	movwf	move_window@sector& (0+255),b
 14984  002A34  0E00               	movlw	0
 14985  002A36  219D               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 14986  002A38  6F7A               	movwf	(move_window@sector+1)& (0+255),b
 14987  002A3A  0E00               	movlw	0
 14988  002A3C  219E               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 14989  002A3E  6F7B               	movwf	(move_window@sector+2)& (0+255),b
 14990  002A40  0E00               	movlw	0
 14991  002A42  219F               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 14992  002A44  6F7C               	movwf	(move_window@sector+3)& (0+255),b
 14993  002A46  EC81  F018         	call	_move_window	;wreg free
 14994  002A4A  0900               	iorlw	0
 14995  002A4C  B4D8               	btfsc	status,2,c
 14996  002A4E  D748               	goto	u11280
 14997                           
 14998                           ; BSR set to: 0
 14999                           ;tff.c: 224: *(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U])=(WORD)((WORD)val);
 15000  002A50  0EFF               	movlw	255
 15001  002A52  6F92               	movwf	??_put_cluster& (0+255),b
 15002  002A54  0E01               	movlw	1
 15003  002A56  6F93               	movwf	(??_put_cluster+1)& (0+255),b
 15004  002A58  C08E  F094         	movff	put_cluster@clust,??_put_cluster+2
 15005  002A5C  C08F  F095         	movff	put_cluster@clust+1,??_put_cluster+3
 15006  002A60  90D8               	bcf	status,0,c
 15007  002A62  3794               	rlcf	(??_put_cluster+2)& (0+255),f,b
 15008  002A64  3795               	rlcf	(??_put_cluster+3)& (0+255),f,b
 15009  002A66  5192               	movf	??_put_cluster& (0+255),w,b
 15010  002A68  1794               	andwf	(??_put_cluster+2)& (0+255),f,b
 15011  002A6A  5193               	movf	(??_put_cluster+1)& (0+255),w,b
 15012  002A6C  1795               	andwf	(??_put_cluster+3)& (0+255),f,b
 15013  002A6E  C0A4  F096         	movff	put_cluster@fs,??_put_cluster+4
 15014  002A72  C0A5  F097         	movff	put_cluster@fs+1,??_put_cluster+5
 15015  002A76  5194               	movf	(??_put_cluster+2)& (0+255),w,b
 15016  002A78  2796               	addwf	(??_put_cluster+4)& (0+255),f,b
 15017  002A7A  5195               	movf	(??_put_cluster+3)& (0+255),w,b
 15018  002A7C  2397               	addwfc	(??_put_cluster+5)& (0+255),f,b
 15019  002A7E  0E20               	movlw	32
 15020  002A80  2596               	addwf	(??_put_cluster+4)& (0+255),w,b
 15021  002A82  6ED9               	movwf	fsr2l,c
 15022  002A84  0E00               	movlw	0
 15023  002A86  2197               	addwfc	(??_put_cluster+5)& (0+255),w,b
 15024  002A88  6EDA               	movwf	fsr2h,c
 15025  002A8A  C090  FFDE         	movff	put_cluster@val,postinc2
 15026  002A8E  C091  FFDD         	movff	put_cluster@val+1,postdec2
 15027                           
 15028                           ;tff.c: 225: break;
 15029  002A92  D00E               	goto	l9549
 15030  002A94                     l9547:
 15031                           
 15032                           ; BSR set to: 0
 15033  002A94  EE20 F01C          	lfsr	2,28
 15034  002A98  51A4               	movf	put_cluster@fs& (0+255),w,b
 15035  002A9A  26D9               	addwf	fsr2l,f,c
 15036  002A9C  51A5               	movf	(put_cluster@fs+1)& (0+255),w,b
 15037  002A9E  22DA               	addwfc	fsr2h,f,c
 15038  002AA0  50DF               	movf	indf2,w,c
 15039                           
 15040                           ; Switch size 1, requested type "simple"
 15041                           ; Number of cases is 2, Range of values is 1 to 2
 15042                           ; switch strategies available:
 15043                           ; Name         Instructions Cycles
 15044                           ; simple_byte            7     4 (average)
 15045                           ;	Chosen strategy is simple_byte
 15046  002AA2  0A01               	xorlw	1	; case 1
 15047  002AA4  B4D8               	btfsc	status,2,c
 15048  002AA6  D6EE               	goto	l9495
 15049  002AA8  0A03               	xorlw	3	; case 2
 15050  002AAA  B4D8               	btfsc	status,2,c
 15051  002AAC  D7C0               	goto	l9533
 15052  002AAE  D718               	goto	u11280
 15053  002AB0                     l9549:
 15054                           
 15055                           ; BSR set to: 0
 15056                           ;tff.c: 235: fs->winflag = 1;
 15057  002AB0  EE20 F01F          	lfsr	2,31
 15058  002AB4  51A4               	movf	put_cluster@fs& (0+255),w,b
 15059  002AB6  26D9               	addwf	fsr2l,f,c
 15060  002AB8  51A5               	movf	(put_cluster@fs+1)& (0+255),w,b
 15061  002ABA  22DA               	addwfc	fsr2h,f,c
 15062  002ABC  0E01               	movlw	1
 15063  002ABE  6EDF               	movwf	indf2,c
 15064                           
 15065                           ; BSR set to: 0
 15066                           ;tff.c: 236: return TRUE;
 15067  002AC0  0E01               	movlw	1
 15068                           
 15069                           ; BSR set to: 0
 15070  002AC2  0012               	return		;funcret
 15071  002AC4                     __end_of_put_cluster:
 15072                           	callstack 0
 15073                           
 15074 ;; *************** function _get_cluster *****************
 15075 ;; Defined at:
 15076 ;;		line 154 in file "bibliotecas/tff.c"
 15077 ;; Parameters:    Size  Location     Type
 15078 ;;  clust           2   46[BANK0 ] unsigned short 
 15079 ;; Auto vars:     Size  Location     Type
 15080 ;;  fatsect         4   59[BANK0 ] unsigned long 
 15081 ;;  fs              2   65[BANK0 ] PTR struct _FATFS
 15082 ;;		 -> NULL(0), fs(544), 
 15083 ;;  bc              2   63[BANK0 ] unsigned short 
 15084 ;;  wc              2   57[BANK0 ] unsigned short 
 15085 ;; Return value:  Size  Location     Type
 15086 ;;                  2   46[BANK0 ] unsigned short 
 15087 ;; Registers used:
 15088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15089 ;; Tracked objects:
 15090 ;;		On entry : 3F/0
 15091 ;;		On exit  : 3F/0
 15092 ;;		Unchanged: 0/0
 15093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15094 ;;      Params:         0       2       0       0       0       0       0       0       0
 15095 ;;      Locals:         0      10       0       0       0       0       0       0       0
 15096 ;;      Temps:          0       9       0       0       0       0       0       0       0
 15097 ;;      Totals:         0      21       0       0       0       0       0       0       0
 15098 ;;Total ram usage:       21 bytes
 15099 ;; Hardware stack levels used: 1
 15100 ;; Hardware stack levels required when called: 9
 15101 ;; This function calls:
 15102 ;;		___wmul
 15103 ;;		_move_window
 15104 ;; This function is called by:
 15105 ;;		_remove_chain
 15106 ;;		_create_chain
 15107 ;;		_next_dir_entry
 15108 ;;		_f_lseek
 15109 ;;		_f_read
 15110 ;; This function uses a non-reentrant model
 15111 ;;
 15112                           
 15113                           	psect	text62
 15114  002D28                     __ptext62:
 15115                           	callstack 0
 15116  002D28                     _get_cluster:
 15117                           	callstack 13
 15118                           
 15119                           ; BSR set to: 0
 15120                           ;tff.c: 158: WORD wc, bc;;tff.c: 159: DWORD fatsect;;tff.c: 160: FATFS *fs = FatFs;
 15121                           
 15122                           ; BSR set to: 0
 15123                           ;incstack = 0
 15124  002D28  C0F9  F0A1         	movff	_FatFs,get_cluster@fs
 15125  002D2C  C0FA  F0A2         	movff	_FatFs+1,get_cluster@fs+1
 15126                           
 15127                           ;tff.c: 163: if (clust >= 2 && clust < fs->max_clust) {
 15128  002D30  518F               	movf	(get_cluster@clust+1)& (0+255),w,b
 15129  002D32  E104               	bnz	u11180
 15130  002D34  0E02               	movlw	2
 15131  002D36  5D8E               	subwf	get_cluster@clust& (0+255),w,b
 15132  002D38  A0D8               	btfss	status,0,c
 15133  002D3A  D102               	goto	l9487
 15134  002D3C                     u11180:
 15135                           
 15136                           ; BSR set to: 0
 15137  002D3C  EE20 F016          	lfsr	2,22
 15138  002D40  51A1               	movf	get_cluster@fs& (0+255),w,b
 15139  002D42  26D9               	addwf	fsr2l,f,c
 15140  002D44  51A2               	movf	(get_cluster@fs+1)& (0+255),w,b
 15141  002D46  22DA               	addwfc	fsr2h,f,c
 15142  002D48  50DE               	movf	postinc2,w,c
 15143  002D4A  5D8E               	subwf	get_cluster@clust& (0+255),w,b
 15144  002D4C  50DE               	movf	postinc2,w,c
 15145  002D4E  598F               	subwfb	(get_cluster@clust+1)& (0+255),w,b
 15146  002D50  B0D8               	btfsc	status,0,c
 15147  002D52  D0F6               	goto	l9487
 15148                           
 15149                           ; BSR set to: 0
 15150                           ;tff.c: 164: fatsect = fs->fatbase;
 15151  002D54  EE20 F008          	lfsr	2,8
 15152  002D58  51A1               	movf	get_cluster@fs& (0+255),w,b
 15153  002D5A  26D9               	addwf	fsr2l,f,c
 15154  002D5C  51A2               	movf	(get_cluster@fs+1)& (0+255),w,b
 15155  002D5E  22DA               	addwfc	fsr2h,f,c
 15156  002D60  CFDE F09B          	movff	postinc2,get_cluster@fatsect
 15157  002D64  CFDE F09C          	movff	postinc2,get_cluster@fatsect+1
 15158  002D68  CFDE F09D          	movff	postinc2,get_cluster@fatsect+2
 15159  002D6C  CFDE F09E          	movff	postinc2,get_cluster@fatsect+3
 15160                           
 15161                           ;tff.c: 165: switch (fs->fs_type) {
 15162  002D70  D0DA               	goto	l9485
 15163  002D72                     l9451:
 15164                           
 15165                           ; BSR set to: 0
 15166                           ;tff.c: 167: bc = (WORD)clust * 3 / 2;
 15167  002D72  C08E  F01B         	movff	get_cluster@clust,___wmul@multiplier
 15168  002D76  C08F  F01C         	movff	get_cluster@clust+1,___wmul@multiplier+1
 15169  002D7A  0E00               	movlw	0
 15170  002D7C  6E1E               	movwf	(___wmul@multiplicand+1)^0,c
 15171  002D7E  0E03               	movlw	3
 15172  002D80  6E1D               	movwf	___wmul@multiplicand^0,c
 15173  002D82  EC1A  F028         	call	___wmul	;wreg free
 15174  002D86  90D8               	bcf	status,0,c
 15175  002D88  301C               	rrcf	(?___wmul+1)^0,w,c
 15176  002D8A  0100               	movlb	0	; () banked
 15177  002D8C  6F90               	movwf	??_get_cluster& (0+255),b
 15178  002D8E  301B               	rrcf	?___wmul^0,w,c
 15179  002D90  6F9F               	movwf	get_cluster@bc& (0+255),b
 15180  002D92  C090  F0A0         	movff	??_get_cluster,get_cluster@bc+1
 15181                           
 15182                           ; BSR set to: 0
 15183                           ;tff.c: 168: if (!move_window(fatsect + bc / 512U)) break;
 15184  002D96  C09F  F090         	movff	get_cluster@bc,??_get_cluster
 15185  002D9A  C0A0  F091         	movff	get_cluster@bc+1,??_get_cluster+1
 15186  002D9E  0E09               	movlw	9
 15187  002DA0  6F92               	movwf	(??_get_cluster+2)& (0+255),b
 15188  002DA2                     u11205:
 15189  002DA2  90D8               	bcf	status,0,c
 15190  002DA4  3391               	rrcf	(??_get_cluster+1)& (0+255),f,b
 15191  002DA6  3390               	rrcf	??_get_cluster& (0+255),f,b
 15192  002DA8  2F92               	decfsz	(??_get_cluster+2)& (0+255),f,b
 15193  002DAA  D7FB               	goto	u11205
 15194  002DAC  5190               	movf	??_get_cluster& (0+255),w,b
 15195  002DAE  259B               	addwf	get_cluster@fatsect& (0+255),w,b
 15196  002DB0  6F79               	movwf	move_window@sector& (0+255),b
 15197  002DB2  5191               	movf	(??_get_cluster+1)& (0+255),w,b
 15198  002DB4  219C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 15199  002DB6  6F7A               	movwf	(move_window@sector+1)& (0+255),b
 15200  002DB8  0E00               	movlw	0
 15201  002DBA  219D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 15202  002DBC  6F7B               	movwf	(move_window@sector+2)& (0+255),b
 15203  002DBE  0E00               	movlw	0
 15204  002DC0  219E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 15205  002DC2  6F7C               	movwf	(move_window@sector+3)& (0+255),b
 15206  002DC4  EC81  F018         	call	_move_window	;wreg free
 15207  002DC8  0900               	iorlw	0
 15208  002DCA  B4D8               	btfsc	status,2,c
 15209  002DCC  D0B9               	goto	l9487
 15210                           
 15211                           ; BSR set to: 0
 15212                           ;tff.c: 169: wc = fs->win[bc % 512U]; bc++;
 15213  002DCE  0EFF               	movlw	255
 15214  002DD0  6F90               	movwf	??_get_cluster& (0+255),b
 15215  002DD2  0E01               	movlw	1
 15216  002DD4  6F91               	movwf	(??_get_cluster+1)& (0+255),b
 15217  002DD6  C09F  F092         	movff	get_cluster@bc,??_get_cluster+2
 15218  002DDA  C0A0  F093         	movff	get_cluster@bc+1,??_get_cluster+3
 15219  002DDE  5190               	movf	??_get_cluster& (0+255),w,b
 15220  002DE0  1792               	andwf	(??_get_cluster+2)& (0+255),f,b
 15221  002DE2  5191               	movf	(??_get_cluster+1)& (0+255),w,b
 15222  002DE4  1793               	andwf	(??_get_cluster+3)& (0+255),f,b
 15223  002DE6  C0A1  F094         	movff	get_cluster@fs,??_get_cluster+4
 15224  002DEA  C0A2  F095         	movff	get_cluster@fs+1,??_get_cluster+5
 15225  002DEE  5192               	movf	(??_get_cluster+2)& (0+255),w,b
 15226  002DF0  2794               	addwf	(??_get_cluster+4)& (0+255),f,b
 15227  002DF2  5193               	movf	(??_get_cluster+3)& (0+255),w,b
 15228  002DF4  2395               	addwfc	(??_get_cluster+5)& (0+255),f,b
 15229  002DF6  0E20               	movlw	32
 15230  002DF8  2594               	addwf	(??_get_cluster+4)& (0+255),w,b
 15231  002DFA  6ED9               	movwf	fsr2l,c
 15232  002DFC  0E00               	movlw	0
 15233  002DFE  2195               	addwfc	(??_get_cluster+5)& (0+255),w,b
 15234  002E00  6EDA               	movwf	fsr2h,c
 15235  002E02  50DF               	movf	indf2,w,c
 15236  002E04  6F96               	movwf	(??_get_cluster+6)& (0+255),b
 15237  002E06  5196               	movf	(??_get_cluster+6)& (0+255),w,b
 15238  002E08  6F99               	movwf	get_cluster@wc& (0+255),b
 15239  002E0A  6B9A               	clrf	(get_cluster@wc+1)& (0+255),b
 15240                           
 15241                           ; BSR set to: 0
 15242  002E0C  4B9F               	infsnz	get_cluster@bc& (0+255),f,b
 15243  002E0E  2BA0               	incf	(get_cluster@bc+1)& (0+255),f,b
 15244                           
 15245                           ; BSR set to: 0
 15246                           ;tff.c: 170: if (!move_window(fatsect + bc / 512U)) break;
 15247  002E10  C09F  F090         	movff	get_cluster@bc,??_get_cluster
 15248  002E14  C0A0  F091         	movff	get_cluster@bc+1,??_get_cluster+1
 15249  002E18  0E09               	movlw	9
 15250  002E1A  6F92               	movwf	(??_get_cluster+2)& (0+255),b
 15251  002E1C                     u11225:
 15252  002E1C  90D8               	bcf	status,0,c
 15253  002E1E  3391               	rrcf	(??_get_cluster+1)& (0+255),f,b
 15254  002E20  3390               	rrcf	??_get_cluster& (0+255),f,b
 15255  002E22  2F92               	decfsz	(??_get_cluster+2)& (0+255),f,b
 15256  002E24  D7FB               	goto	u11225
 15257  002E26  5190               	movf	??_get_cluster& (0+255),w,b
 15258  002E28  259B               	addwf	get_cluster@fatsect& (0+255),w,b
 15259  002E2A  6F79               	movwf	move_window@sector& (0+255),b
 15260  002E2C  5191               	movf	(??_get_cluster+1)& (0+255),w,b
 15261  002E2E  219C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 15262  002E30  6F7A               	movwf	(move_window@sector+1)& (0+255),b
 15263  002E32  0E00               	movlw	0
 15264  002E34  219D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 15265  002E36  6F7B               	movwf	(move_window@sector+2)& (0+255),b
 15266  002E38  0E00               	movlw	0
 15267  002E3A  219E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 15268  002E3C  6F7C               	movwf	(move_window@sector+3)& (0+255),b
 15269  002E3E  EC81  F018         	call	_move_window	;wreg free
 15270  002E42  0900               	iorlw	0
 15271  002E44  B4D8               	btfsc	status,2,c
 15272  002E46  D07C               	goto	l9487
 15273                           
 15274                           ; BSR set to: 0
 15275                           ;tff.c: 171: wc |= (WORD)fs->win[bc % 512U] << 8;
 15276  002E48  0EFF               	movlw	255
 15277  002E4A  6F90               	movwf	??_get_cluster& (0+255),b
 15278  002E4C  0E01               	movlw	1
 15279  002E4E  6F91               	movwf	(??_get_cluster+1)& (0+255),b
 15280  002E50  C09F  F092         	movff	get_cluster@bc,??_get_cluster+2
 15281  002E54  C0A0  F093         	movff	get_cluster@bc+1,??_get_cluster+3
 15282  002E58  5190               	movf	??_get_cluster& (0+255),w,b
 15283  002E5A  1792               	andwf	(??_get_cluster+2)& (0+255),f,b
 15284  002E5C  5191               	movf	(??_get_cluster+1)& (0+255),w,b
 15285  002E5E  1793               	andwf	(??_get_cluster+3)& (0+255),f,b
 15286  002E60  C0A1  F094         	movff	get_cluster@fs,??_get_cluster+4
 15287  002E64  C0A2  F095         	movff	get_cluster@fs+1,??_get_cluster+5
 15288  002E68  5192               	movf	(??_get_cluster+2)& (0+255),w,b
 15289  002E6A  2794               	addwf	(??_get_cluster+4)& (0+255),f,b
 15290  002E6C  5193               	movf	(??_get_cluster+3)& (0+255),w,b
 15291  002E6E  2395               	addwfc	(??_get_cluster+5)& (0+255),f,b
 15292  002E70  0E20               	movlw	32
 15293  002E72  2594               	addwf	(??_get_cluster+4)& (0+255),w,b
 15294  002E74  6ED9               	movwf	fsr2l,c
 15295  002E76  0E00               	movlw	0
 15296  002E78  2195               	addwfc	(??_get_cluster+5)& (0+255),w,b
 15297  002E7A  6EDA               	movwf	fsr2h,c
 15298  002E7C  50DF               	movf	indf2,w,c
 15299  002E7E  6F96               	movwf	(??_get_cluster+6)& (0+255),b
 15300  002E80  5196               	movf	(??_get_cluster+6)& (0+255),w,b
 15301  002E82  6F98               	movwf	(??_get_cluster+8)& (0+255),b
 15302  002E84  6B97               	clrf	(??_get_cluster+7)& (0+255),b
 15303  002E86  5197               	movf	(??_get_cluster+7)& (0+255),w,b
 15304  002E88  1399               	iorwf	get_cluster@wc& (0+255),f,b
 15305  002E8A  5198               	movf	(??_get_cluster+8)& (0+255),w,b
 15306  002E8C  139A               	iorwf	(get_cluster@wc+1)& (0+255),f,b
 15307                           
 15308                           ; BSR set to: 0
 15309                           ;tff.c: 172: return (clust & 1) ? (wc >> 4) : (wc & 0xFFF);
 15310  002E8E  B18E               	btfsc	get_cluster@clust& (0+255),0,b
 15311  002E90  D007               	goto	l9471
 15312                           
 15313                           ; BSR set to: 0
 15314  002E92  0EFF               	movlw	255
 15315  002E94  1599               	andwf	get_cluster@wc& (0+255),w,b
 15316  002E96  6F8E               	movwf	?_get_cluster& (0+255),b
 15317  002E98  0E0F               	movlw	15
 15318  002E9A  159A               	andwf	(get_cluster@wc+1)& (0+255),w,b
 15319  002E9C  6F8F               	movwf	(?_get_cluster+1)& (0+255),b
 15320  002E9E  0012               	return	
 15321  002EA0                     l9471:
 15322                           
 15323                           ; BSR set to: 0
 15324  002EA0  C099  F090         	movff	get_cluster@wc,??_get_cluster
 15325  002EA4  C09A  F091         	movff	get_cluster@wc+1,??_get_cluster+1
 15326  002EA8  0E04               	movlw	4
 15327  002EAA  6F92               	movwf	(??_get_cluster+2)& (0+255),b
 15328  002EAC                     u11255:
 15329  002EAC  90D8               	bcf	status,0,c
 15330  002EAE  3391               	rrcf	(??_get_cluster+1)& (0+255),f,b
 15331  002EB0  3390               	rrcf	??_get_cluster& (0+255),f,b
 15332  002EB2  2F92               	decfsz	(??_get_cluster+2)& (0+255),f,b
 15333  002EB4  D7FB               	goto	u11255
 15334  002EB6  C090  F08E         	movff	??_get_cluster,?_get_cluster
 15335  002EBA  C091  F08F         	movff	??_get_cluster+1,?_get_cluster+1
 15336  002EBE  0012               	return	
 15337  002EC0                     l9475:
 15338                           
 15339                           ; BSR set to: 0
 15340                           ;tff.c: 175: if (!move_window(fatsect + clust / 256)) break;
 15341  002EC0  518F               	movf	(get_cluster@clust+1)& (0+255),w,b
 15342  002EC2  259B               	addwf	get_cluster@fatsect& (0+255),w,b
 15343  002EC4  6F79               	movwf	move_window@sector& (0+255),b
 15344  002EC6  0E00               	movlw	0
 15345  002EC8  219C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 15346  002ECA  6F7A               	movwf	(move_window@sector+1)& (0+255),b
 15347  002ECC  0E00               	movlw	0
 15348  002ECE  219D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 15349  002ED0  6F7B               	movwf	(move_window@sector+2)& (0+255),b
 15350  002ED2  0E00               	movlw	0
 15351  002ED4  219E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 15352  002ED6  6F7C               	movwf	(move_window@sector+3)& (0+255),b
 15353  002ED8  EC81  F018         	call	_move_window	;wreg free
 15354  002EDC  0900               	iorlw	0
 15355  002EDE  B4D8               	btfsc	status,2,c
 15356  002EE0  D02F               	goto	l9487
 15357                           
 15358                           ; BSR set to: 0
 15359                           ;tff.c: 176: return (WORD)(*(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U]));
 15360  002EE2  0EFF               	movlw	255
 15361  002EE4  6F90               	movwf	??_get_cluster& (0+255),b
 15362  002EE6  0E01               	movlw	1
 15363  002EE8  6F91               	movwf	(??_get_cluster+1)& (0+255),b
 15364  002EEA  C08E  F092         	movff	get_cluster@clust,??_get_cluster+2
 15365  002EEE  C08F  F093         	movff	get_cluster@clust+1,??_get_cluster+3
 15366  002EF2  90D8               	bcf	status,0,c
 15367  002EF4  3792               	rlcf	(??_get_cluster+2)& (0+255),f,b
 15368  002EF6  3793               	rlcf	(??_get_cluster+3)& (0+255),f,b
 15369  002EF8  5190               	movf	??_get_cluster& (0+255),w,b
 15370  002EFA  1792               	andwf	(??_get_cluster+2)& (0+255),f,b
 15371  002EFC  5191               	movf	(??_get_cluster+1)& (0+255),w,b
 15372  002EFE  1793               	andwf	(??_get_cluster+3)& (0+255),f,b
 15373  002F00  C0A1  F094         	movff	get_cluster@fs,??_get_cluster+4
 15374  002F04  C0A2  F095         	movff	get_cluster@fs+1,??_get_cluster+5
 15375  002F08  5192               	movf	(??_get_cluster+2)& (0+255),w,b
 15376  002F0A  2794               	addwf	(??_get_cluster+4)& (0+255),f,b
 15377  002F0C  5193               	movf	(??_get_cluster+3)& (0+255),w,b
 15378  002F0E  2395               	addwfc	(??_get_cluster+5)& (0+255),f,b
 15379  002F10  0E20               	movlw	32
 15380  002F12  2594               	addwf	(??_get_cluster+4)& (0+255),w,b
 15381  002F14  6ED9               	movwf	fsr2l,c
 15382  002F16  0E00               	movlw	0
 15383  002F18  2195               	addwfc	(??_get_cluster+5)& (0+255),w,b
 15384  002F1A  6EDA               	movwf	fsr2h,c
 15385  002F1C  CFDE F08E          	movff	postinc2,?_get_cluster
 15386  002F20  CFDD F08F          	movff	postdec2,?_get_cluster+1
 15387  002F24  0012               	return	
 15388  002F26                     l9485:
 15389                           
 15390                           ; BSR set to: 0
 15391  002F26  EE20 F01C          	lfsr	2,28
 15392  002F2A  51A1               	movf	get_cluster@fs& (0+255),w,b
 15393  002F2C  26D9               	addwf	fsr2l,f,c
 15394  002F2E  51A2               	movf	(get_cluster@fs+1)& (0+255),w,b
 15395  002F30  22DA               	addwfc	fsr2h,f,c
 15396  002F32  50DF               	movf	indf2,w,c
 15397                           
 15398                           ; Switch size 1, requested type "simple"
 15399                           ; Number of cases is 2, Range of values is 1 to 2
 15400                           ; switch strategies available:
 15401                           ; Name         Instructions Cycles
 15402                           ; simple_byte            7     4 (average)
 15403                           ;	Chosen strategy is simple_byte
 15404  002F34  0A01               	xorlw	1	; case 1
 15405  002F36  B4D8               	btfsc	status,2,c
 15406  002F38  D71C               	goto	l9451
 15407  002F3A  0A03               	xorlw	3	; case 2
 15408  002F3C  B4D8               	btfsc	status,2,c
 15409  002F3E  D7C0               	goto	l9475
 15410  002F40                     l9487:
 15411                           
 15412                           ; BSR set to: 0
 15413                           ;tff.c: 183: };tff.c: 185: return 1;
 15414  002F40  0E00               	movlw	0
 15415  002F42  6F8F               	movwf	(?_get_cluster+1)& (0+255),b
 15416  002F44  0E01               	movlw	1
 15417  002F46  6F8E               	movwf	?_get_cluster& (0+255),b
 15418                           
 15419                           ; BSR set to: 0
 15420  002F48  0012               	return		;funcret
 15421  002F4A                     __end_of_get_cluster:
 15422                           	callstack 0
 15423                           
 15424 ;; *************** function ___wmul *****************
 15425 ;; Defined at:
 15426 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
 15427 ;; Parameters:    Size  Location     Type
 15428 ;;  multiplier      2   26[COMRAM] unsigned int 
 15429 ;;  multiplicand    2   28[COMRAM] unsigned int 
 15430 ;; Auto vars:     Size  Location     Type
 15431 ;;  product         2   30[COMRAM] unsigned int 
 15432 ;; Return value:  Size  Location     Type
 15433 ;;                  2   26[COMRAM] unsigned int 
 15434 ;; Registers used:
 15435 ;;		wreg, status,2, status,0, prodl, prodh
 15436 ;; Tracked objects:
 15437 ;;		On entry : 0/0
 15438 ;;		On exit  : 0/0
 15439 ;;		Unchanged: 0/0
 15440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15441 ;;      Params:         4       0       0       0       0       0       0       0       0
 15442 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15443 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15444 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15445 ;;Total ram usage:        6 bytes
 15446 ;; Hardware stack levels used: 1
 15447 ;; Hardware stack levels required when called: 3
 15448 ;; This function calls:
 15449 ;;		Nothing
 15450 ;; This function is called by:
 15451 ;;		_get_cluster
 15452 ;;		_put_cluster
 15453 ;;		_fprintf
 15454 ;;		_atoi
 15455 ;; This function uses a non-reentrant model
 15456 ;;
 15457                           
 15458                           	psect	text63
 15459  005034                     __ptext63:
 15460                           	callstack 0
 15461  005034                     ___wmul:
 15462                           	callstack 24
 15463                           
 15464                           ; BSR set to: 0
 15465                           ;incstack = 0
 15466  005034  501B               	movf	___wmul@multiplier^0,w,c
 15467  005036  021D               	mulwf	___wmul@multiplicand^0,c
 15468  005038  CFF3 F01F          	movff	prodl,___wmul@product
 15469  00503C  CFF4 F020          	movff	prodh,___wmul@product+1
 15470  005040  501B               	movf	___wmul@multiplier^0,w,c
 15471  005042  021E               	mulwf	(___wmul@multiplicand+1)^0,c
 15472  005044  50F3               	movf	243,w,c
 15473  005046  2620               	addwf	(___wmul@product+1)^0,f,c
 15474  005048  501C               	movf	(___wmul@multiplier+1)^0,w,c
 15475  00504A  021D               	mulwf	___wmul@multiplicand^0,c
 15476  00504C  50F3               	movf	243,w,c
 15477  00504E  2620               	addwf	(___wmul@product+1)^0,f,c
 15478  005050  C01F  F01B         	movff	___wmul@product,?___wmul
 15479  005054  C020  F01C         	movff	___wmul@product+1,?___wmul+1
 15480  005058  0012               	return		;funcret
 15481  00505A                     __end_of___wmul:
 15482                           	callstack 0
 15483                           
 15484 ;; *************** function ___lldiv *****************
 15485 ;; Defined at:
 15486 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
 15487 ;; Parameters:    Size  Location     Type
 15488 ;;  dividend        4   26[COMRAM] unsigned long 
 15489 ;;  divisor         4   30[COMRAM] unsigned long 
 15490 ;; Auto vars:     Size  Location     Type
 15491 ;;  quotient        4   34[COMRAM] unsigned long 
 15492 ;;  counter         1   38[COMRAM] unsigned char 
 15493 ;; Return value:  Size  Location     Type
 15494 ;;                  4   26[COMRAM] unsigned long 
 15495 ;; Registers used:
 15496 ;;		wreg, status,2, status,0
 15497 ;; Tracked objects:
 15498 ;;		On entry : 3C/3
 15499 ;;		On exit  : 3C/0
 15500 ;;		Unchanged: 3C/0
 15501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15502 ;;      Params:         8       0       0       0       0       0       0       0       0
 15503 ;;      Locals:         5       0       0       0       0       0       0       0       0
 15504 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15505 ;;      Totals:        13       0       0       0       0       0       0       0       0
 15506 ;;Total ram usage:       13 bytes
 15507 ;; Hardware stack levels used: 1
 15508 ;; Hardware stack levels required when called: 3
 15509 ;; This function calls:
 15510 ;;		Nothing
 15511 ;; This function is called by:
 15512 ;;		_auto_mount
 15513 ;;		_f_lseek
 15514 ;;		_fprintf
 15515 ;; This function uses a non-reentrant model
 15516 ;;
 15517                           
 15518                           	psect	text64
 15519  00465A                     __ptext64:
 15520                           	callstack 0
 15521  00465A                     ___lldiv:
 15522                           	callstack 23
 15523                           
 15524                           ;incstack = 0
 15525  00465A  0E00               	movlw	0
 15526  00465C  6E23               	movwf	___lldiv@quotient^0,c
 15527  00465E  0E00               	movlw	0
 15528  004660  6E24               	movwf	(___lldiv@quotient+1)^0,c
 15529  004662  0E00               	movlw	0
 15530  004664  6E25               	movwf	(___lldiv@quotient+2)^0,c
 15531  004666  0E00               	movlw	0
 15532  004668  6E26               	movwf	(___lldiv@quotient+3)^0,c
 15533  00466A  501F               	movf	___lldiv@divisor^0,w,c
 15534  00466C  1020               	iorwf	(___lldiv@divisor+1)^0,w,c
 15535  00466E  1021               	iorwf	(___lldiv@divisor+2)^0,w,c
 15536  004670  1022               	iorwf	(___lldiv@divisor+3)^0,w,c
 15537  004672  B4D8               	btfsc	status,2,c
 15538  004674  D02A               	goto	l1552
 15539  004676  0E01               	movlw	1
 15540  004678  6E27               	movwf	___lldiv@counter^0,c
 15541  00467A  D006               	goto	l10255
 15542  00467C                     l10253:
 15543  00467C  90D8               	bcf	status,0,c
 15544  00467E  361F               	rlcf	___lldiv@divisor^0,f,c
 15545  004680  3620               	rlcf	(___lldiv@divisor+1)^0,f,c
 15546  004682  3621               	rlcf	(___lldiv@divisor+2)^0,f,c
 15547  004684  3622               	rlcf	(___lldiv@divisor+3)^0,f,c
 15548  004686  2A27               	incf	___lldiv@counter^0,f,c
 15549  004688                     l10255:
 15550  004688  AE22               	btfss	(___lldiv@divisor+3)^0,7,c
 15551  00468A  D7F8               	goto	l10253
 15552  00468C                     u12520:
 15553  00468C  90D8               	bcf	status,0,c
 15554  00468E  3623               	rlcf	___lldiv@quotient^0,f,c
 15555  004690  3624               	rlcf	(___lldiv@quotient+1)^0,f,c
 15556  004692  3625               	rlcf	(___lldiv@quotient+2)^0,f,c
 15557  004694  3626               	rlcf	(___lldiv@quotient+3)^0,f,c
 15558  004696  501F               	movf	___lldiv@divisor^0,w,c
 15559  004698  5C1B               	subwf	___lldiv@dividend^0,w,c
 15560  00469A  5020               	movf	(___lldiv@divisor+1)^0,w,c
 15561  00469C  581C               	subwfb	(___lldiv@dividend+1)^0,w,c
 15562  00469E  5021               	movf	(___lldiv@divisor+2)^0,w,c
 15563  0046A0  581D               	subwfb	(___lldiv@dividend+2)^0,w,c
 15564  0046A2  5022               	movf	(___lldiv@divisor+3)^0,w,c
 15565  0046A4  581E               	subwfb	(___lldiv@dividend+3)^0,w,c
 15566  0046A6  A0D8               	btfss	status,0,c
 15567  0046A8  D009               	goto	l10265
 15568  0046AA  501F               	movf	___lldiv@divisor^0,w,c
 15569  0046AC  5E1B               	subwf	___lldiv@dividend^0,f,c
 15570  0046AE  5020               	movf	(___lldiv@divisor+1)^0,w,c
 15571  0046B0  5A1C               	subwfb	(___lldiv@dividend+1)^0,f,c
 15572  0046B2  5021               	movf	(___lldiv@divisor+2)^0,w,c
 15573  0046B4  5A1D               	subwfb	(___lldiv@dividend+2)^0,f,c
 15574  0046B6  5022               	movf	(___lldiv@divisor+3)^0,w,c
 15575  0046B8  5A1E               	subwfb	(___lldiv@dividend+3)^0,f,c
 15576  0046BA  8023               	bsf	___lldiv@quotient^0,0,c
 15577  0046BC                     l10265:
 15578  0046BC  90D8               	bcf	status,0,c
 15579  0046BE  3222               	rrcf	(___lldiv@divisor+3)^0,f,c
 15580  0046C0  3221               	rrcf	(___lldiv@divisor+2)^0,f,c
 15581  0046C2  3220               	rrcf	(___lldiv@divisor+1)^0,f,c
 15582  0046C4  321F               	rrcf	___lldiv@divisor^0,f,c
 15583  0046C6  2E27               	decfsz	___lldiv@counter^0,f,c
 15584  0046C8  D7E1               	goto	u12520
 15585  0046CA                     l1552:
 15586  0046CA  C023  F01B         	movff	___lldiv@quotient,?___lldiv
 15587  0046CE  C024  F01C         	movff	___lldiv@quotient+1,?___lldiv+1
 15588  0046D2  C025  F01D         	movff	___lldiv@quotient+2,?___lldiv+2
 15589  0046D6  C026  F01E         	movff	___lldiv@quotient+3,?___lldiv+3
 15590  0046DA  0012               	return		;funcret
 15591  0046DC                     __end_of___lldiv:
 15592                           	callstack 0
 15593                           
 15594 ;; *************** function _f_close *****************
 15595 ;; Defined at:
 15596 ;;		line 1108 in file "bibliotecas/tff.c"
 15597 ;; Parameters:    Size  Location     Type
 15598 ;;  fp              2   57[BANK0 ] PTR struct _FIL
 15599 ;;		 -> fil(28), 
 15600 ;; Auto vars:     Size  Location     Type
 15601 ;;  res             1   59[BANK0 ] enum E155
 15602 ;; Return value:  Size  Location     Type
 15603 ;;                  1    wreg      enum E3236
 15604 ;; Registers used:
 15605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15606 ;; Tracked objects:
 15607 ;;		On entry : 3F/0
 15608 ;;		On exit  : 3F/0
 15609 ;;		Unchanged: 0/0
 15610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15611 ;;      Params:         0       2       0       0       0       0       0       0       0
 15612 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15613 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15614 ;;      Totals:         0       3       0       0       0       0       0       0       0
 15615 ;;Total ram usage:        3 bytes
 15616 ;; Hardware stack levels used: 1
 15617 ;; Hardware stack levels required when called: 11
 15618 ;; This function calls:
 15619 ;;		_f_sync
 15620 ;; This function is called by:
 15621 ;;		_escrita_sdcard
 15622 ;; This function uses a non-reentrant model
 15623 ;;
 15624                           
 15625                           	psect	text65
 15626  004FE0                     __ptext65:
 15627                           	callstack 0
 15628  004FE0                     _f_close:
 15629                           	callstack 16
 15630                           
 15631                           ; BSR set to: 0
 15632                           ;tff.c: 1112: FRESULT res;;tff.c: 1116: res = f_sync(fp);
 15633                           
 15634                           ;incstack = 0
 15635  004FE0  C099  F090         	movff	f_close@fp,f_sync@fp
 15636  004FE4  C09A  F091         	movff	f_close@fp+1,f_sync@fp+1
 15637  004FE8  EC10  F01C         	call	_f_sync	;wreg free
 15638  004FEC  6F9B               	movwf	f_close@res& (0+255),b
 15639                           
 15640                           ; BSR set to: 0
 15641                           ;tff.c: 1120: if (res == FR_OK) fp->fs = (0);
 15642  004FEE  519B               	movf	f_close@res& (0+255),w,b
 15643  004FF0  A4D8               	btfss	status,2,c
 15644  004FF2  0012               	return	
 15645                           
 15646                           ; BSR set to: 0
 15647  004FF4  EE20 F004          	lfsr	2,4
 15648  004FF8  5199               	movf	f_close@fp& (0+255),w,b
 15649  004FFA  26D9               	addwf	fsr2l,f,c
 15650  004FFC  519A               	movf	(f_close@fp+1)& (0+255),w,b
 15651  004FFE  22DA               	addwfc	fsr2h,f,c
 15652  005000  0E00               	movlw	0
 15653  005002  6EDE               	movwf	postinc2,c
 15654  005004  0E00               	movlw	0
 15655  005006  6EDD               	movwf	postdec2,c
 15656                           
 15657                           ; BSR set to: 0
 15658  005008  0012               	return		;funcret
 15659  00500A                     __end_of_f_close:
 15660                           	callstack 0
 15661                           
 15662 ;; *************** function _f_sync *****************
 15663 ;; Defined at:
 15664 ;;		line 1069 in file "bibliotecas/tff.c"
 15665 ;; Parameters:    Size  Location     Type
 15666 ;;  fp              2   48[BANK0 ] PTR struct _FIL
 15667 ;;		 -> fil(28), 
 15668 ;; Auto vars:     Size  Location     Type
 15669 ;;  tim             4   50[BANK0 ] unsigned long 
 15670 ;;  dir             2   55[BANK0 ] PTR unsigned char 
 15671 ;;		 -> NULL(0), fs(544), 
 15672 ;;  res             1   54[BANK0 ] enum E155
 15673 ;; Return value:  Size  Location     Type
 15674 ;;                  1    wreg      enum E155
 15675 ;; Registers used:
 15676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15677 ;; Tracked objects:
 15678 ;;		On entry : 3F/0
 15679 ;;		On exit  : 3F/0
 15680 ;;		Unchanged: 0/0
 15681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15682 ;;      Params:         0       2       0       0       0       0       0       0       0
 15683 ;;      Locals:         0       7       0       0       0       0       0       0       0
 15684 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15685 ;;      Totals:         0       9       0       0       0       0       0       0       0
 15686 ;;Total ram usage:        9 bytes
 15687 ;; Hardware stack levels used: 1
 15688 ;; Hardware stack levels required when called: 10
 15689 ;; This function calls:
 15690 ;;		_get_fattime
 15691 ;;		_move_window
 15692 ;;		_sync
 15693 ;;		_validate
 15694 ;; This function is called by:
 15695 ;;		_f_close
 15696 ;; This function uses a non-reentrant model
 15697 ;;
 15698                           
 15699                           	psect	text66
 15700  003820                     __ptext66:
 15701                           	callstack 0
 15702  003820                     _f_sync:
 15703                           	callstack 16
 15704                           
 15705                           ; BSR set to: 0
 15706                           ;tff.c: 1073: FRESULT res;;tff.c: 1074: DWORD tim;;tff.c: 1075: BYTE *dir;;tff.c: 1078: 
      +                          res = validate(fp->fs, fp->id);
 15707                           
 15708                           ; BSR set to: 0
 15709                           ;incstack = 0
 15710  003820  EE20 F004          	lfsr	2,4
 15711  003824  5190               	movf	f_sync@fp& (0+255),w,b
 15712  003826  26D9               	addwf	fsr2l,f,c
 15713  003828  5191               	movf	(f_sync@fp+1)& (0+255),w,b
 15714  00382A  22DA               	addwfc	fsr2h,f,c
 15715  00382C  CFDE F01E          	movff	postinc2,validate@fs
 15716  003830  CFDD F01F          	movff	postdec2,validate@fs+1
 15717  003834  C090  FFD9         	movff	f_sync@fp,fsr2l
 15718  003838  C091  FFDA         	movff	f_sync@fp+1,fsr2h
 15719  00383C  CFDE F020          	movff	postinc2,validate@id
 15720  003840  CFDD F021          	movff	postdec2,validate@id+1
 15721  003844  EC63  F026         	call	_validate	;wreg free
 15722  003848  0100               	movlb	0	; () banked
 15723  00384A  6F96               	movwf	f_sync@res& (0+255),b
 15724                           
 15725                           ; BSR set to: 0
 15726                           ;tff.c: 1079: if (res == FR_OK) {
 15727  00384C  5196               	movf	f_sync@res& (0+255),w,b
 15728  00384E  A4D8               	btfss	status,2,c
 15729  003850  D077               	goto	l10637
 15730                           
 15731                           ; BSR set to: 0
 15732                           ;tff.c: 1080: if (fp->flag & 0x20) {
 15733  003852  EE20 F002          	lfsr	2,2
 15734  003856  5190               	movf	f_sync@fp& (0+255),w,b
 15735  003858  26D9               	addwf	fsr2l,f,c
 15736  00385A  5191               	movf	(f_sync@fp+1)& (0+255),w,b
 15737  00385C  22DA               	addwfc	fsr2h,f,c
 15738  00385E  AADF               	btfss	indf2,5,c
 15739  003860  D06F               	goto	l10637
 15740                           
 15741                           ; BSR set to: 0
 15742                           ;tff.c: 1082: if (!move_window(fp->dir_sect))
 15743  003862  EE20 F016          	lfsr	2,22
 15744  003866  5190               	movf	f_sync@fp& (0+255),w,b
 15745  003868  26D9               	addwf	fsr2l,f,c
 15746  00386A  5191               	movf	(f_sync@fp+1)& (0+255),w,b
 15747  00386C  22DA               	addwfc	fsr2h,f,c
 15748  00386E  CFDE F079          	movff	postinc2,move_window@sector
 15749  003872  CFDE F07A          	movff	postinc2,move_window@sector+1
 15750  003876  CFDE F07B          	movff	postinc2,move_window@sector+2
 15751  00387A  CFDE F07C          	movff	postinc2,move_window@sector+3
 15752  00387E  EC81  F018         	call	_move_window	;wreg free
 15753  003882  0900               	iorlw	0
 15754  003884  A4D8               	btfss	status,2,c
 15755  003886  D002               	goto	l10623
 15756                           
 15757                           ; BSR set to: 0
 15758                           ;tff.c: 1083: return FR_RW_ERROR;
 15759  003888  0E08               	movlw	8
 15760  00388A  0012               	return	
 15761  00388C                     l10623:
 15762                           
 15763                           ; BSR set to: 0
 15764                           ;tff.c: 1084: dir = fp->dir_ptr;
 15765  00388C  EE20 F01A          	lfsr	2,26
 15766  003890  5190               	movf	f_sync@fp& (0+255),w,b
 15767  003892  26D9               	addwf	fsr2l,f,c
 15768  003894  5191               	movf	(f_sync@fp+1)& (0+255),w,b
 15769  003896  22DA               	addwfc	fsr2h,f,c
 15770  003898  CFDE F097          	movff	postinc2,f_sync@dir
 15771  00389C  CFDD F098          	movff	postdec2,f_sync@dir+1
 15772                           
 15773                           ;tff.c: 1085: dir[11] |= 0x20;
 15774  0038A0  EE20 F00B          	lfsr	2,11
 15775  0038A4  5197               	movf	f_sync@dir& (0+255),w,b
 15776  0038A6  26D9               	addwf	fsr2l,f,c
 15777  0038A8  5198               	movf	(f_sync@dir+1)& (0+255),w,b
 15778  0038AA  22DA               	addwfc	fsr2h,f,c
 15779  0038AC  0E00               	movlw	0
 15780  0038AE  8ADB               	bsf	plusw2,5,c
 15781                           
 15782                           ; BSR set to: 0
 15783                           ;tff.c: 1086: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(fp->fsize);
 15784  0038B0  EE20 F00A          	lfsr	2,10
 15785  0038B4  5190               	movf	f_sync@fp& (0+255),w,b
 15786  0038B6  26D9               	addwf	fsr2l,f,c
 15787  0038B8  5191               	movf	(f_sync@fp+1)& (0+255),w,b
 15788  0038BA  22DA               	addwfc	fsr2h,f,c
 15789  0038BC  EE10 F01C          	lfsr	1,28
 15790  0038C0  5197               	movf	f_sync@dir& (0+255),w,b
 15791  0038C2  26E1               	addwf	fsr1l,f,c
 15792  0038C4  5198               	movf	(f_sync@dir+1)& (0+255),w,b
 15793  0038C6  22E2               	addwfc	fsr1h,f,c
 15794  0038C8  CFDE FFE6          	movff	postinc2,postinc1
 15795  0038CC  CFDE FFE6          	movff	postinc2,postinc1
 15796  0038D0  CFDE FFE6          	movff	postinc2,postinc1
 15797  0038D4  CFDE FFE6          	movff	postinc2,postinc1
 15798                           
 15799                           ; BSR set to: 0
 15800                           ;tff.c: 1087: *(WORD*)(BYTE*)(&dir[26])=(WORD)(fp->org_clust);
 15801  0038D8  EE20 F00E          	lfsr	2,14
 15802  0038DC  5190               	movf	f_sync@fp& (0+255),w,b
 15803  0038DE  26D9               	addwf	fsr2l,f,c
 15804  0038E0  5191               	movf	(f_sync@fp+1)& (0+255),w,b
 15805  0038E2  22DA               	addwfc	fsr2h,f,c
 15806  0038E4  EE10 F01A          	lfsr	1,26
 15807  0038E8  5197               	movf	f_sync@dir& (0+255),w,b
 15808  0038EA  26E1               	addwf	fsr1l,f,c
 15809  0038EC  5198               	movf	(f_sync@dir+1)& (0+255),w,b
 15810  0038EE  22E2               	addwfc	fsr1h,f,c
 15811  0038F0  CFDE FFE6          	movff	postinc2,postinc1
 15812  0038F4  CFDD FFE5          	movff	postdec2,postdec1
 15813                           
 15814                           ; BSR set to: 0
 15815                           ;tff.c: 1091: tim = get_fattime();
 15816  0038F8  EC38  F01E         	call	_get_fattime	;wreg free
 15817  0038FC  C01B  F092         	movff	?_get_fattime,f_sync@tim
 15818  003900  C01C  F093         	movff	?_get_fattime+1,f_sync@tim+1
 15819  003904  C01D  F094         	movff	?_get_fattime+2,f_sync@tim+2
 15820  003908  C01E  F095         	movff	?_get_fattime+3,f_sync@tim+3
 15821                           
 15822                           ; BSR set to: 0
 15823                           ;tff.c: 1092: *(DWORD*)(BYTE*)(&dir[22])=(DWORD)(tim);
 15824  00390C  EE20 F016          	lfsr	2,22
 15825  003910  5197               	movf	f_sync@dir& (0+255),w,b
 15826  003912  26D9               	addwf	fsr2l,f,c
 15827  003914  5198               	movf	(f_sync@dir+1)& (0+255),w,b
 15828  003916  22DA               	addwfc	fsr2h,f,c
 15829  003918  C092  FFDE         	movff	f_sync@tim,postinc2
 15830  00391C  C093  FFDE         	movff	f_sync@tim+1,postinc2
 15831  003920  C094  FFDE         	movff	f_sync@tim+2,postinc2
 15832  003924  C095  FFDE         	movff	f_sync@tim+3,postinc2
 15833                           
 15834                           ; BSR set to: 0
 15835                           ;tff.c: 1093: fp->flag &= (BYTE)~0x20;
 15836  003928  EE20 F002          	lfsr	2,2
 15837  00392C  5190               	movf	f_sync@fp& (0+255),w,b
 15838  00392E  26D9               	addwf	fsr2l,f,c
 15839  003930  5191               	movf	(f_sync@fp+1)& (0+255),w,b
 15840  003932  22DA               	addwfc	fsr2h,f,c
 15841  003934  0EDF               	movlw	223
 15842  003936  16DF               	andwf	indf2,f,c
 15843                           
 15844                           ; BSR set to: 0
 15845                           ;tff.c: 1094: res = sync();
 15846  003938  ECC9  F025         	call	_sync	;wreg free
 15847  00393C  0100               	movlb	0	; () banked
 15848  00393E  6F96               	movwf	f_sync@res& (0+255),b
 15849  003940                     l10637:
 15850                           
 15851                           ; BSR set to: 0
 15852                           ;tff.c: 1095: };tff.c: 1096: };tff.c: 1097: return res;
 15853  003940  5196               	movf	f_sync@res& (0+255),w,b
 15854                           
 15855                           ; BSR set to: 0
 15856  003942  0012               	return		;funcret
 15857  003944                     __end_of_f_sync:
 15858                           	callstack 0
 15859                           
 15860 ;; *************** function _validate *****************
 15861 ;; Defined at:
 15862 ;;		line 766 in file "bibliotecas/tff.c"
 15863 ;; Parameters:    Size  Location     Type
 15864 ;;  fs              2   29[COMRAM] PTR const struct _FATFS
 15865 ;;		 -> NULL(0), fs(544), 
 15866 ;;  id              2   31[COMRAM] unsigned short 
 15867 ;; Auto vars:     Size  Location     Type
 15868 ;;		None
 15869 ;; Return value:  Size  Location     Type
 15870 ;;                  1    wreg      enum E155
 15871 ;; Registers used:
 15872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15873 ;; Tracked objects:
 15874 ;;		On entry : 3F/0
 15875 ;;		On exit  : 0/0
 15876 ;;		Unchanged: 0/0
 15877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15878 ;;      Params:         4       0       0       0       0       0       0       0       0
 15879 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15880 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15881 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15882 ;;Total ram usage:        6 bytes
 15883 ;; Hardware stack levels used: 1
 15884 ;; Hardware stack levels required when called: 5
 15885 ;; This function calls:
 15886 ;;		_disk_status
 15887 ;; This function is called by:
 15888 ;;		_f_write
 15889 ;;		_f_sync
 15890 ;;		_f_lseek
 15891 ;;		_f_read
 15892 ;; This function uses a non-reentrant model
 15893 ;;
 15894                           
 15895                           	psect	text67
 15896  004CC6                     __ptext67:
 15897                           	callstack 0
 15898  004CC6                     _validate:
 15899                           	callstack 18
 15900                           
 15901                           ; BSR set to: 0
 15902                           ;tff.c: 771: if (!fs || !fs->fs_type || fs->id != id)
 15903                           
 15904                           ; BSR set to: 0
 15905                           ;incstack = 0
 15906  004CC6  501E               	movf	validate@fs^0,w,c
 15907  004CC8  101F               	iorwf	(validate@fs+1)^0,w,c
 15908  004CCA  B4D8               	btfsc	status,2,c
 15909  004CCC  D014               	goto	u11580
 15910                           
 15911                           ; BSR set to: 0
 15912  004CCE  EE20 F01C          	lfsr	2,28
 15913  004CD2  501E               	movf	validate@fs^0,w,c
 15914  004CD4  26D9               	addwf	fsr2l,f,c
 15915  004CD6  501F               	movf	(validate@fs+1)^0,w,c
 15916  004CD8  22DA               	addwfc	fsr2h,f,c
 15917  004CDA  50DF               	movf	indf2,w,c
 15918  004CDC  B4D8               	btfsc	status,2,c
 15919  004CDE  D00B               	goto	u11580
 15920                           
 15921                           ; BSR set to: 0
 15922  004CE0  C01E  FFD9         	movff	validate@fs,fsr2l
 15923  004CE4  C01F  FFDA         	movff	validate@fs+1,fsr2h
 15924  004CE8  5020               	movf	validate@id^0,w,c
 15925  004CEA  18DE               	xorwf	postinc2,w,c
 15926  004CEC  E104               	bnz	u11580
 15927  004CEE  5021               	movf	(validate@id+1)^0,w,c
 15928  004CF0  18DE               	xorwf	postinc2,w,c
 15929  004CF2  B4D8               	btfsc	status,2,c
 15930  004CF4  D002               	goto	l9691
 15931  004CF6                     u11580:
 15932                           
 15933                           ; BSR set to: 0
 15934                           ;tff.c: 772: return FR_INVALID_OBJECT;
 15935  004CF6  0E0C               	movlw	12
 15936  004CF8  0012               	return	
 15937  004CFA                     l9691:
 15938                           
 15939                           ; BSR set to: 0
 15940                           ;tff.c: 773: if (disk_status(0) & 0x01)
 15941  004CFA  0E00               	movlw	0
 15942  004CFC  EC97  F027         	call	_disk_status
 15943  004D00  6E22               	movwf	??_validate^0,c
 15944  004D02  A022               	btfss	??_validate^0,0,c
 15945  004D04  D002               	goto	l9697
 15946                           
 15947                           ;tff.c: 774: return FR_NOT_READY;
 15948  004D06  0E01               	movlw	1
 15949  004D08  0012               	return	
 15950  004D0A                     l9697:
 15951                           
 15952                           ;tff.c: 776: return FR_OK;
 15953  004D0A  0E00               	movlw	0
 15954  004D0C  0012               	return		;funcret
 15955  004D0E                     __end_of_validate:
 15956                           	callstack 0
 15957                           
 15958 ;; *************** function _disk_status *****************
 15959 ;; Defined at:
 15960 ;;		line 27 in file "bibliotecas/diskio.c"
 15961 ;; Parameters:    Size  Location     Type
 15962 ;;  pdrv            1    wreg     unsigned char 
 15963 ;; Auto vars:     Size  Location     Type
 15964 ;;  pdrv            1   27[COMRAM] unsigned char 
 15965 ;;  result          2    0        int 
 15966 ;;  stat            1   28[COMRAM] unsigned char 
 15967 ;; Return value:  Size  Location     Type
 15968 ;;                  1    wreg      unsigned char 
 15969 ;; Registers used:
 15970 ;;		wreg, status,2, status,0, cstack
 15971 ;; Tracked objects:
 15972 ;;		On entry : 3F/0
 15973 ;;		On exit  : 0/0
 15974 ;;		Unchanged: 0/0
 15975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15976 ;;      Params:         0       0       0       0       0       0       0       0       0
 15977 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15978 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15979 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15980 ;;Total ram usage:        2 bytes
 15981 ;; Hardware stack levels used: 1
 15982 ;; Hardware stack levels required when called: 4
 15983 ;; This function calls:
 15984 ;;		_sdc_disk_status
 15985 ;; This function is called by:
 15986 ;;		_auto_mount
 15987 ;;		_validate
 15988 ;; This function uses a non-reentrant model
 15989 ;;
 15990                           
 15991                           	psect	text68
 15992  004F2E                     __ptext68:
 15993                           	callstack 0
 15994  004F2E                     _disk_status:
 15995                           	callstack 18
 15996                           
 15997                           ;incstack = 0
 15998                           ;disk_status@pdrv stored from wreg
 15999  004F2E  6E1C               	movwf	disk_status@pdrv^0,c
 16000                           
 16001                           ;diskio.c: 31: DSTATUS stat;;diskio.c: 32: int result;;diskio.c: 34: switch (pdrv) {
 16002  004F30  D00A               	goto	l9439
 16003  004F32                     l9421:
 16004                           
 16005                           ;diskio.c: 36: stat = sdc_disk_status(pdrv);
 16006  004F32  501C               	movf	disk_status@pdrv^0,w,c
 16007  004F34  ECC0  F028         	call	_sdc_disk_status
 16008  004F38  6E1D               	movwf	disk_status@stat^0,c
 16009  004F3A                     l9423:
 16010                           
 16011                           ;diskio.c: 39: return stat;
 16012  004F3A  501D               	movf	disk_status@stat^0,w,c
 16013  004F3C  0012               	return	
 16014  004F3E                     l9427:
 16015  004F3E  501C               	movf	disk_status@pdrv^0,w,c
 16016  004F40  ECC0  F028         	call	_sdc_disk_status
 16017  004F44  D7FA               	goto	l9423
 16018  004F46                     l9439:
 16019  004F46  501C               	movf	disk_status@pdrv^0,w,c
 16020                           
 16021                           ; Switch size 1, requested type "simple"
 16022                           ; Number of cases is 3, Range of values is 0 to 2
 16023                           ; switch strategies available:
 16024                           ; Name         Instructions Cycles
 16025                           ; simple_byte           10     6 (average)
 16026                           ;	Chosen strategy is simple_byte
 16027  004F48  0A00               	xorlw	0	; case 0
 16028  004F4A  B4D8               	btfsc	status,2,c
 16029  004F4C  D7F2               	goto	l9421
 16030  004F4E  0A01               	xorlw	1	; case 1
 16031  004F50  B4D8               	btfsc	status,2,c
 16032  004F52  D7F5               	goto	l9427
 16033  004F54  0A03               	xorlw	3	; case 2
 16034  004F56  B4D8               	btfsc	status,2,c
 16035  004F58  D7F0               	goto	l9423
 16036                           
 16037                           ;diskio.c: 50: return 0x01;
 16038  004F5A  0E01               	movlw	1
 16039  004F5C  0012               	return		;funcret
 16040  004F5E                     __end_of_disk_status:
 16041                           	callstack 0
 16042                           
 16043 ;; *************** function _sdc_disk_status *****************
 16044 ;; Defined at:
 16045 ;;		line 588 in file "bibliotecas/diskio.c"
 16046 ;; Parameters:    Size  Location     Type
 16047 ;;  pdrv            1    wreg     unsigned char 
 16048 ;; Auto vars:     Size  Location     Type
 16049 ;;  pdrv            1   26[COMRAM] unsigned char 
 16050 ;;  stat            1    0        unsigned char 
 16051 ;;  cont            1    0        unsigned char 
 16052 ;;  buff            1    0        unsigned char 
 16053 ;; Return value:  Size  Location     Type
 16054 ;;                  1    wreg      unsigned char 
 16055 ;; Registers used:
 16056 ;;		wreg, status,2
 16057 ;; Tracked objects:
 16058 ;;		On entry : 0/0
 16059 ;;		On exit  : 0/0
 16060 ;;		Unchanged: 0/0
 16061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16062 ;;      Params:         0       0       0       0       0       0       0       0       0
 16063 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16064 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16065 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16066 ;;Total ram usage:        1 bytes
 16067 ;; Hardware stack levels used: 1
 16068 ;; Hardware stack levels required when called: 3
 16069 ;; This function calls:
 16070 ;;		Nothing
 16071 ;; This function is called by:
 16072 ;;		_disk_status
 16073 ;; This function uses a non-reentrant model
 16074 ;;
 16075                           
 16076                           	psect	text69
 16077  005180                     __ptext69:
 16078                           	callstack 0
 16079  005180                     _sdc_disk_status:
 16080                           	callstack 18
 16081                           
 16082                           ;incstack = 0
 16083                           ;sdc_disk_status@pdrv stored from wreg
 16084  005180  6E1B               	movwf	sdc_disk_status@pdrv^0,c
 16085                           
 16086                           ;diskio.c: 591: unsigned char buff, cont;;diskio.c: 593: if (pdrv != 0) return 0x01;
 16087  005182  501B               	movf	sdc_disk_status@pdrv^0,w,c
 16088  005184  B4D8               	btfsc	status,2,c
 16089  005186  D002               	goto	l9259
 16090  005188  0E01               	movlw	1
 16091  00518A  0012               	return	
 16092  00518C                     l9259:
 16093                           
 16094                           ;diskio.c: 595: return FR_OK;
 16095  00518C  0E00               	movlw	0
 16096  00518E  0012               	return		;funcret
 16097  005190                     __end_of_sdc_disk_status:
 16098                           	callstack 0
 16099                           
 16100 ;; *************** function _sync *****************
 16101 ;; Defined at:
 16102 ;;		line 118 in file "bibliotecas/tff.c"
 16103 ;; Parameters:    Size  Location     Type
 16104 ;;		None
 16105 ;; Auto vars:     Size  Location     Type
 16106 ;;  fs              2   46[BANK0 ] PTR struct _FATFS
 16107 ;;		 -> NULL(0), fs(544), 
 16108 ;; Return value:  Size  Location     Type
 16109 ;;                  1    wreg      enum E155
 16110 ;; Registers used:
 16111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16112 ;; Tracked objects:
 16113 ;;		On entry : 3F/0
 16114 ;;		On exit  : 0/0
 16115 ;;		Unchanged: 0/0
 16116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16117 ;;      Params:         0       0       0       0       0       0       0       0       0
 16118 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16119 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16120 ;;      Totals:         0       2       0       0       0       0       0       0       0
 16121 ;;Total ram usage:        2 bytes
 16122 ;; Hardware stack levels used: 1
 16123 ;; Hardware stack levels required when called: 9
 16124 ;; This function calls:
 16125 ;;		_disk_ioctl
 16126 ;;		_move_window
 16127 ;; This function is called by:
 16128 ;;		_f_sync
 16129 ;; This function uses a non-reentrant model
 16130 ;;
 16131                           
 16132                           	psect	text70
 16133  004B92                     __ptext70:
 16134                           	callstack 0
 16135  004B92                     _sync:
 16136                           	callstack 16
 16137                           
 16138                           ; BSR set to: 0
 16139                           ;tff.c: 120: FATFS *fs = FatFs;
 16140                           
 16141                           ;incstack = 0
 16142  004B92  C0F9  F08E         	movff	_FatFs,sync@fs
 16143  004B96  C0FA  F08F         	movff	_FatFs+1,sync@fs+1
 16144                           
 16145                           ; BSR set to: 0
 16146                           ;tff.c: 123: fs->winflag = 1;
 16147  004B9A  EE20 F01F          	lfsr	2,31
 16148  004B9E  518E               	movf	sync@fs& (0+255),w,b
 16149  004BA0  26D9               	addwf	fsr2l,f,c
 16150  004BA2  518F               	movf	(sync@fs+1)& (0+255),w,b
 16151  004BA4  22DA               	addwfc	fsr2h,f,c
 16152  004BA6  0E01               	movlw	1
 16153  004BA8  6EDF               	movwf	indf2,c
 16154                           
 16155                           ; BSR set to: 0
 16156                           ;tff.c: 124: if (!move_window(0)) return FR_RW_ERROR;
 16157  004BAA  0E00               	movlw	0
 16158  004BAC  6F79               	movwf	move_window@sector& (0+255),b
 16159  004BAE  0E00               	movlw	0
 16160  004BB0  6F7A               	movwf	(move_window@sector+1)& (0+255),b
 16161  004BB2  0E00               	movlw	0
 16162  004BB4  6F7B               	movwf	(move_window@sector+2)& (0+255),b
 16163  004BB6  0E00               	movlw	0
 16164  004BB8  6F7C               	movwf	(move_window@sector+3)& (0+255),b
 16165  004BBA  EC81  F018         	call	_move_window	;wreg free
 16166  004BBE  0900               	iorlw	0
 16167  004BC0  A4D8               	btfss	status,2,c
 16168  004BC2  D002               	goto	l10043
 16169  004BC4                     u12070:
 16170  004BC4  0E08               	movlw	8
 16171  004BC6  0012               	return	
 16172  004BC8                     l10043:
 16173                           
 16174                           ; BSR set to: 0
 16175                           ;tff.c: 140: if (disk_ioctl(0, 0, (0)) != RES_OK)
 16176  004BC8  0E00               	movlw	0
 16177  004BCA  6E1B               	movwf	disk_ioctl@cmd^0,c
 16178  004BCC  0E00               	movlw	0
 16179  004BCE  6E1C               	movwf	disk_ioctl@buff^0,c
 16180  004BD0  0E00               	movlw	0
 16181  004BD2  6E1D               	movwf	(disk_ioctl@buff+1)^0,c
 16182  004BD4  0E00               	movlw	0
 16183  004BD6  EC4F  F028         	call	_disk_ioctl
 16184  004BDA  0900               	iorlw	0
 16185  004BDC  A4D8               	btfss	status,2,c
 16186  004BDE  D7F2               	goto	u12070
 16187                           
 16188                           ;tff.c: 142: return FR_OK;
 16189  004BE0  0E00               	movlw	0
 16190  004BE2  0012               	return		;funcret
 16191  004BE4                     __end_of_sync:
 16192                           	callstack 0
 16193                           
 16194 ;; *************** function _move_window *****************
 16195 ;; Defined at:
 16196 ;;		line 76 in file "bibliotecas/tff.c"
 16197 ;; Parameters:    Size  Location     Type
 16198 ;;  sector          4   25[BANK0 ] unsigned long 
 16199 ;; Auto vars:     Size  Location     Type
 16200 ;;  n               1   39[BANK0 ] unsigned char 
 16201 ;;  wsect           4   40[BANK0 ] unsigned long 
 16202 ;;  fs              2   44[BANK0 ] PTR struct _FATFS
 16203 ;;		 -> NULL(0), fs(544), 
 16204 ;; Return value:  Size  Location     Type
 16205 ;;                  1    wreg      enum E105
 16206 ;; Registers used:
 16207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16208 ;; Tracked objects:
 16209 ;;		On entry : 3F/0
 16210 ;;		On exit  : 3F/0
 16211 ;;		Unchanged: 0/0
 16212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16213 ;;      Params:         0       4       0       0       0       0       0       0       0
 16214 ;;      Locals:         0       7       0       0       0       0       0       0       0
 16215 ;;      Temps:          0      10       0       0       0       0       0       0       0
 16216 ;;      Totals:         0      21       0       0       0       0       0       0       0
 16217 ;;Total ram usage:       21 bytes
 16218 ;; Hardware stack levels used: 1
 16219 ;; Hardware stack levels required when called: 8
 16220 ;; This function calls:
 16221 ;;		_disk_read
 16222 ;;		_disk_write
 16223 ;; This function is called by:
 16224 ;;		_sync
 16225 ;;		_get_cluster
 16226 ;;		_put_cluster
 16227 ;;		_trace_path
 16228 ;;		_reserve_direntry
 16229 ;;		_f_open
 16230 ;;		_f_write
 16231 ;;		_f_sync
 16232 ;;		_f_read
 16233 ;; This function uses a non-reentrant model
 16234 ;;
 16235                           
 16236                           	psect	text71
 16237  003102                     __ptext71:
 16238                           	callstack 0
 16239  003102                     _move_window:
 16240                           	callstack 15
 16241                           
 16242                           ; BSR set to: 0
 16243                           ;tff.c: 80: DWORD wsect;;tff.c: 81: FATFS *fs = FatFs;
 16244                           
 16245                           ;incstack = 0
 16246  003102  C0F9  F08C         	movff	_FatFs,move_window@fs
 16247  003106  C0FA  F08D         	movff	_FatFs+1,move_window@fs+1
 16248                           
 16249                           ; BSR set to: 0
 16250                           ;tff.c: 84: wsect = fs->winsect;
 16251  00310A  EE20 F004          	lfsr	2,4
 16252  00310E  518C               	movf	move_window@fs& (0+255),w,b
 16253  003110  26D9               	addwf	fsr2l,f,c
 16254  003112  518D               	movf	(move_window@fs+1)& (0+255),w,b
 16255  003114  22DA               	addwfc	fsr2h,f,c
 16256  003116  CFDE F088          	movff	postinc2,move_window@wsect
 16257  00311A  CFDE F089          	movff	postinc2,move_window@wsect+1
 16258  00311E  CFDE F08A          	movff	postinc2,move_window@wsect+2
 16259  003122  CFDE F08B          	movff	postinc2,move_window@wsect+3
 16260                           
 16261                           ; BSR set to: 0
 16262                           ;tff.c: 85: if (wsect != sector) {
 16263  003126  5179               	movf	move_window@sector& (0+255),w,b
 16264  003128  1988               	xorwf	move_window@wsect& (0+255),w,b
 16265  00312A  E10A               	bnz	u11070
 16266  00312C  517A               	movf	(move_window@sector+1)& (0+255),w,b
 16267  00312E  1989               	xorwf	(move_window@wsect+1)& (0+255),w,b
 16268  003130  E107               	bnz	u11070
 16269  003132  517B               	movf	(move_window@sector+2)& (0+255),w,b
 16270  003134  198A               	xorwf	(move_window@wsect+2)& (0+255),w,b
 16271  003136  E104               	bnz	u11070
 16272  003138  517C               	movf	(move_window@sector+3)& (0+255),w,b
 16273  00313A  198B               	xorwf	(move_window@wsect+3)& (0+255),w,b
 16274  00313C  B4D8               	btfsc	status,2,c
 16275  00313E  D0B4               	goto	l9371
 16276  003140                     u11070:
 16277                           
 16278                           ; BSR set to: 0
 16279                           ;tff.c: 87: BYTE n;;tff.c: 88: if (fs->winflag) {
 16280  003140  EE20 F01F          	lfsr	2,31
 16281  003144  518C               	movf	move_window@fs& (0+255),w,b
 16282  003146  26D9               	addwf	fsr2l,f,c
 16283  003148  518D               	movf	(move_window@fs+1)& (0+255),w,b
 16284  00314A  22DA               	addwfc	fsr2h,f,c
 16285  00314C  50DF               	movf	indf2,w,c
 16286  00314E  B4D8               	btfsc	status,2,c
 16287  003150  D081               	goto	l9361
 16288                           
 16289                           ; BSR set to: 0
 16290                           ;tff.c: 89: if (disk_write(0, fs->win, wsect, 1) != RES_OK)
 16291  003152  0E20               	movlw	32
 16292  003154  258C               	addwf	move_window@fs& (0+255),w,b
 16293  003156  6F6D               	movwf	disk_write@buff& (0+255),b
 16294  003158  0E00               	movlw	0
 16295  00315A  218D               	addwfc	(move_window@fs+1)& (0+255),w,b
 16296  00315C  6F6E               	movwf	(disk_write@buff+1)& (0+255),b
 16297  00315E  C088  F06F         	movff	move_window@wsect,disk_write@sector
 16298  003162  C089  F070         	movff	move_window@wsect+1,disk_write@sector+1
 16299  003166  C08A  F071         	movff	move_window@wsect+2,disk_write@sector+2
 16300  00316A  C08B  F072         	movff	move_window@wsect+3,disk_write@sector+3
 16301  00316E  0E01               	movlw	1
 16302  003170  6F73               	movwf	disk_write@count& (0+255),b
 16303  003172  0E00               	movlw	0
 16304  003174  ECF2  F025         	call	_disk_write
 16305  003178  0900               	iorlw	0
 16306  00317A  B4D8               	btfsc	status,2,c
 16307  00317C  D002               	goto	l9345
 16308  00317E                     u11090:
 16309                           
 16310                           ; BSR set to: 0
 16311                           ;tff.c: 90: return FALSE;
 16312  00317E  0E00               	movlw	0
 16313  003180  0012               	return	
 16314  003182                     l9345:
 16315                           
 16316                           ; BSR set to: 0
 16317                           ;tff.c: 91: fs->winflag = 0;
 16318  003182  EE20 F01F          	lfsr	2,31
 16319  003186  518C               	movf	move_window@fs& (0+255),w,b
 16320  003188  26D9               	addwf	fsr2l,f,c
 16321  00318A  518D               	movf	(move_window@fs+1)& (0+255),w,b
 16322  00318C  22DA               	addwfc	fsr2h,f,c
 16323  00318E  0E00               	movlw	0
 16324  003190  6EDF               	movwf	indf2,c
 16325                           
 16326                           ;tff.c: 92: if (wsect < (fs->fatbase + fs->sects_fat)) {
 16327  003192  EE20 F008          	lfsr	2,8
 16328  003196  518C               	movf	move_window@fs& (0+255),w,b
 16329  003198  26D9               	addwf	fsr2l,f,c
 16330  00319A  518D               	movf	(move_window@fs+1)& (0+255),w,b
 16331  00319C  22DA               	addwfc	fsr2h,f,c
 16332  00319E  CFDE F07D          	movff	postinc2,??_move_window
 16333  0031A2  CFDE F07E          	movff	postinc2,??_move_window+1
 16334  0031A6  CFDE F07F          	movff	postinc2,??_move_window+2
 16335  0031AA  CFDE F080          	movff	postinc2,??_move_window+3
 16336  0031AE  EE20 F014          	lfsr	2,20
 16337  0031B2  518C               	movf	move_window@fs& (0+255),w,b
 16338  0031B4  26D9               	addwf	fsr2l,f,c
 16339  0031B6  518D               	movf	(move_window@fs+1)& (0+255),w,b
 16340  0031B8  22DA               	addwfc	fsr2h,f,c
 16341  0031BA  CFDE F081          	movff	postinc2,??_move_window+4
 16342  0031BE  CFDD F082          	movff	postdec2,??_move_window+5
 16343  0031C2  5181               	movf	(??_move_window+4)& (0+255),w,b
 16344  0031C4  257D               	addwf	??_move_window& (0+255),w,b
 16345  0031C6  6F83               	movwf	(??_move_window+6)& (0+255),b
 16346  0031C8  5182               	movf	(??_move_window+5)& (0+255),w,b
 16347  0031CA  217E               	addwfc	(??_move_window+1)& (0+255),w,b
 16348  0031CC  6F84               	movwf	(??_move_window+7)& (0+255),b
 16349  0031CE  0E00               	movlw	0
 16350  0031D0  217F               	addwfc	(??_move_window+2)& (0+255),w,b
 16351  0031D2  6F85               	movwf	(??_move_window+8)& (0+255),b
 16352  0031D4  0E00               	movlw	0
 16353  0031D6  2180               	addwfc	(??_move_window+3)& (0+255),w,b
 16354  0031D8  6F86               	movwf	(??_move_window+9)& (0+255),b
 16355  0031DA  5183               	movf	(??_move_window+6)& (0+255),w,b
 16356  0031DC  5D88               	subwf	move_window@wsect& (0+255),w,b
 16357  0031DE  5184               	movf	(??_move_window+7)& (0+255),w,b
 16358  0031E0  5989               	subwfb	(move_window@wsect+1)& (0+255),w,b
 16359  0031E2  5185               	movf	(??_move_window+8)& (0+255),w,b
 16360  0031E4  598A               	subwfb	(move_window@wsect+2)& (0+255),w,b
 16361  0031E6  5186               	movf	(??_move_window+9)& (0+255),w,b
 16362  0031E8  598B               	subwfb	(move_window@wsect+3)& (0+255),w,b
 16363  0031EA  B0D8               	btfsc	status,0,c
 16364  0031EC  D033               	goto	l9361
 16365                           
 16366                           ; BSR set to: 0
 16367                           ;tff.c: 93: for (n = fs->n_fats; n >= 2; n--) {
 16368  0031EE  EE20 F01E          	lfsr	2,30
 16369  0031F2  518C               	movf	move_window@fs& (0+255),w,b
 16370  0031F4  26D9               	addwf	fsr2l,f,c
 16371  0031F6  518D               	movf	(move_window@fs+1)& (0+255),w,b
 16372  0031F8  22DA               	addwfc	fsr2h,f,c
 16373  0031FA  50DF               	movf	indf2,w,c
 16374  0031FC  6F87               	movwf	move_window@n& (0+255),b
 16375  0031FE                     l9349:
 16376                           
 16377                           ; BSR set to: 0
 16378  0031FE  0E02               	movlw	2
 16379  003200  6187               	cpfslt	move_window@n& (0+255),b
 16380  003202  D001               	goto	l9353
 16381  003204  D027               	goto	l9361
 16382  003206                     l9353:
 16383                           
 16384                           ; BSR set to: 0
 16385                           ;tff.c: 94: wsect += fs->sects_fat;
 16386  003206  EE20 F014          	lfsr	2,20
 16387  00320A  518C               	movf	move_window@fs& (0+255),w,b
 16388  00320C  26D9               	addwf	fsr2l,f,c
 16389  00320E  518D               	movf	(move_window@fs+1)& (0+255),w,b
 16390  003210  22DA               	addwfc	fsr2h,f,c
 16391  003212  CFDE F07D          	movff	postinc2,??_move_window
 16392  003216  CFDD F07E          	movff	postdec2,??_move_window+1
 16393  00321A  517D               	movf	??_move_window& (0+255),w,b
 16394  00321C  2788               	addwf	move_window@wsect& (0+255),f,b
 16395  00321E  517E               	movf	(??_move_window+1)& (0+255),w,b
 16396  003220  2389               	addwfc	(move_window@wsect+1)& (0+255),f,b
 16397  003222  0E00               	movlw	0
 16398  003224  238A               	addwfc	(move_window@wsect+2)& (0+255),f,b
 16399  003226  0E00               	movlw	0
 16400  003228  238B               	addwfc	(move_window@wsect+3)& (0+255),f,b
 16401                           
 16402                           ; BSR set to: 0
 16403                           ;tff.c: 95: disk_write(0, fs->win, wsect, 1);
 16404  00322A  0E20               	movlw	32
 16405  00322C  258C               	addwf	move_window@fs& (0+255),w,b
 16406  00322E  6F6D               	movwf	disk_write@buff& (0+255),b
 16407  003230  0E00               	movlw	0
 16408  003232  218D               	addwfc	(move_window@fs+1)& (0+255),w,b
 16409  003234  6F6E               	movwf	(disk_write@buff+1)& (0+255),b
 16410  003236  C088  F06F         	movff	move_window@wsect,disk_write@sector
 16411  00323A  C089  F070         	movff	move_window@wsect+1,disk_write@sector+1
 16412  00323E  C08A  F071         	movff	move_window@wsect+2,disk_write@sector+2
 16413  003242  C08B  F072         	movff	move_window@wsect+3,disk_write@sector+3
 16414  003246  0E01               	movlw	1
 16415  003248  6F73               	movwf	disk_write@count& (0+255),b
 16416  00324A  0E00               	movlw	0
 16417  00324C  ECF2  F025         	call	_disk_write
 16418                           
 16419                           ; BSR set to: 0
 16420  003250  0787               	decf	move_window@n& (0+255),f,b
 16421  003252  D7D5               	goto	l9349
 16422  003254                     l9361:
 16423                           
 16424                           ; BSR set to: 0
 16425                           ;tff.c: 96: };tff.c: 97: };tff.c: 98: };tff.c: 100: if (sector) {
 16426  003254  5179               	movf	move_window@sector& (0+255),w,b
 16427  003256  117A               	iorwf	(move_window@sector+1)& (0+255),w,b
 16428  003258  117B               	iorwf	(move_window@sector+2)& (0+255),w,b
 16429  00325A  117C               	iorwf	(move_window@sector+3)& (0+255),w,b
 16430  00325C  B4D8               	btfsc	status,2,c
 16431  00325E  D024               	goto	l9371
 16432                           
 16433                           ; BSR set to: 0
 16434                           ;tff.c: 101: if (disk_read(0, fs->win, sector, 1) != RES_OK)
 16435  003260  0E20               	movlw	32
 16436  003262  258C               	addwf	move_window@fs& (0+255),w,b
 16437  003264  6F6E               	movwf	disk_read@buff& (0+255),b
 16438  003266  0E00               	movlw	0
 16439  003268  218D               	addwfc	(move_window@fs+1)& (0+255),w,b
 16440  00326A  6F6F               	movwf	(disk_read@buff+1)& (0+255),b
 16441  00326C  C079  F070         	movff	move_window@sector,disk_read@sector
 16442  003270  C07A  F071         	movff	move_window@sector+1,disk_read@sector+1
 16443  003274  C07B  F072         	movff	move_window@sector+2,disk_read@sector+2
 16444  003278  C07C  F073         	movff	move_window@sector+3,disk_read@sector+3
 16445  00327C  0E01               	movlw	1
 16446  00327E  6F74               	movwf	disk_read@count& (0+255),b
 16447  003280  0E00               	movlw	0
 16448  003282  EC1C  F024         	call	_disk_read
 16449  003286  0900               	iorlw	0
 16450  003288  A4D8               	btfss	status,2,c
 16451  00328A  D779               	goto	u11090
 16452                           
 16453                           ; BSR set to: 0
 16454                           ;tff.c: 103: fs->winsect = sector;
 16455  00328C  EE20 F004          	lfsr	2,4
 16456  003290  518C               	movf	move_window@fs& (0+255),w,b
 16457  003292  26D9               	addwf	fsr2l,f,c
 16458  003294  518D               	movf	(move_window@fs+1)& (0+255),w,b
 16459  003296  22DA               	addwfc	fsr2h,f,c
 16460  003298  C079  FFDE         	movff	move_window@sector,postinc2
 16461  00329C  C07A  FFDE         	movff	move_window@sector+1,postinc2
 16462  0032A0  C07B  FFDE         	movff	move_window@sector+2,postinc2
 16463  0032A4  C07C  FFDE         	movff	move_window@sector+3,postinc2
 16464  0032A8                     l9371:
 16465                           
 16466                           ; BSR set to: 0
 16467                           ;tff.c: 104: };tff.c: 105: };tff.c: 106: return TRUE;
 16468  0032A8  0E01               	movlw	1
 16469                           
 16470                           ; BSR set to: 0
 16471  0032AA  0012               	return		;funcret
 16472  0032AC                     __end_of_move_window:
 16473                           	callstack 0
 16474                           
 16475 ;; *************** function _disk_write *****************
 16476 ;; Defined at:
 16477 ;;		line 150 in file "bibliotecas/diskio.c"
 16478 ;; Parameters:    Size  Location     Type
 16479 ;;  pdrv            1    wreg     unsigned char 
 16480 ;;  buff            2   13[BANK0 ] PTR const unsigned char 
 16481 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 16482 ;;  sector          4   15[BANK0 ] unsigned long 
 16483 ;;  count           1   19[BANK0 ] unsigned char 
 16484 ;; Auto vars:     Size  Location     Type
 16485 ;;  pdrv            1   20[BANK0 ] unsigned char 
 16486 ;;  result          2   21[BANK0 ] int 
 16487 ;;  res             1   23[BANK0 ] enum E25
 16488 ;; Return value:  Size  Location     Type
 16489 ;;                  1    wreg      enum E25
 16490 ;; Registers used:
 16491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16492 ;; Tracked objects:
 16493 ;;		On entry : 3F/0
 16494 ;;		On exit  : 3F/0
 16495 ;;		Unchanged: 0/0
 16496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16497 ;;      Params:         0       7       0       0       0       0       0       0       0
 16498 ;;      Locals:         0       4       0       0       0       0       0       0       0
 16499 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16500 ;;      Totals:         1      11       0       0       0       0       0       0       0
 16501 ;;Total ram usage:       12 bytes
 16502 ;; Hardware stack levels used: 1
 16503 ;; Hardware stack levels required when called: 7
 16504 ;; This function calls:
 16505 ;;		_sdc_disk_write
 16506 ;; This function is called by:
 16507 ;;		_move_window
 16508 ;;		_reserve_direntry
 16509 ;;		_f_write
 16510 ;; This function uses a non-reentrant model
 16511 ;;
 16512                           
 16513                           	psect	text72
 16514  004BE4                     __ptext72:
 16515                           	callstack 0
 16516  004BE4                     _disk_write:
 16517                           	callstack 15
 16518                           
 16519                           ; BSR set to: 0
 16520                           ;incstack = 0
 16521                           ;disk_write@pdrv stored from wreg
 16522  004BE4  6F74               	movwf	disk_write@pdrv& (0+255),b
 16523                           
 16524                           ;diskio.c: 157: DRESULT res;;diskio.c: 158: int result;;diskio.c: 160: switch (pdrv) {
 16525  004BE6  D018               	goto	l9225
 16526  004BE8                     l9203:
 16527                           
 16528                           ; BSR set to: 0
 16529                           ;diskio.c: 163: result = sdc_disk_write(buff, sector, count);
 16530  004BE8  C06D  F060         	movff	disk_write@buff,sdc_disk_write@p_buff
 16531  004BEC  C06E  F061         	movff	disk_write@buff+1,sdc_disk_write@p_buff+1
 16532  004BF0  C06F  F062         	movff	disk_write@sector,sdc_disk_write@sector
 16533  004BF4  C070  F063         	movff	disk_write@sector+1,sdc_disk_write@sector+1
 16534  004BF8  C071  F064         	movff	disk_write@sector+2,sdc_disk_write@sector+2
 16535  004BFC  C072  F065         	movff	disk_write@sector+3,sdc_disk_write@sector+3
 16536  004C00  C073  F066         	movff	disk_write@count,sdc_disk_write@count
 16537  004C04  ECA5  F017         	call	_sdc_disk_write	;wreg free
 16538  004C08  6E2B               	movwf	??_disk_write^0,c
 16539  004C0A  502B               	movf	??_disk_write^0,w,c
 16540  004C0C  6F75               	movwf	disk_write@result& (0+255),b
 16541  004C0E  6B76               	clrf	(disk_write@result+1)& (0+255),b
 16542                           
 16543                           ; BSR set to: 0
 16544                           ;diskio.c: 165: res = result;
 16545  004C10  C075  F077         	movff	disk_write@result,disk_write@res
 16546  004C14                     l9207:
 16547                           
 16548                           ; BSR set to: 0
 16549                           ;diskio.c: 168: return res;
 16550  004C14  5177               	movf	disk_write@res& (0+255),w,b
 16551  004C16  0012               	return	
 16552  004C18                     l9225:
 16553  004C18  0100               	movlb	0	; () banked
 16554  004C1A  5174               	movf	disk_write@pdrv& (0+255),w,b
 16555                           
 16556                           ; Switch size 1, requested type "simple"
 16557                           ; Number of cases is 3, Range of values is 0 to 2
 16558                           ; switch strategies available:
 16559                           ; Name         Instructions Cycles
 16560                           ; simple_byte           10     6 (average)
 16561                           ;	Chosen strategy is simple_byte
 16562  004C1C  0A00               	xorlw	0	; case 0
 16563  004C1E  B4D8               	btfsc	status,2,c
 16564  004C20  D7E3               	goto	l9203
 16565  004C22  0A01               	xorlw	1	; case 1
 16566  004C24  B4D8               	btfsc	status,2,c
 16567  004C26  D7E0               	goto	l9203
 16568  004C28  0A03               	xorlw	3	; case 2
 16569  004C2A  B4D8               	btfsc	status,2,c
 16570  004C2C  D7F3               	goto	l9207
 16571                           
 16572                           ; BSR set to: 0
 16573                           ;diskio.c: 189: return RES_PARERR;
 16574  004C2E  0E04               	movlw	4
 16575                           
 16576                           ; BSR set to: 0
 16577  004C30  0012               	return		;funcret
 16578  004C32                     __end_of_disk_write:
 16579                           	callstack 0
 16580                           
 16581 ;; *************** function _sdc_disk_write *****************
 16582 ;; Defined at:
 16583 ;;		line 509 in file "bibliotecas/diskio.c"
 16584 ;; Parameters:    Size  Location     Type
 16585 ;;  p_buff          2    0[BANK0 ] PTR const unsigned char 
 16586 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 16587 ;;  sector          4    2[BANK0 ] unsigned long 
 16588 ;;  count           1    6[BANK0 ] unsigned char 
 16589 ;; Auto vars:     Size  Location     Type
 16590 ;;  j               2   10[BANK0 ] int 
 16591 ;;  count1          2    7[BANK0 ] int 
 16592 ;;  i               2    0        int 
 16593 ;;  buff            1   12[BANK0 ] unsigned char 
 16594 ;;  res             1    9[BANK0 ] enum E25
 16595 ;; Return value:  Size  Location     Type
 16596 ;;                  1    wreg      enum E25
 16597 ;; Registers used:
 16598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16599 ;; Tracked objects:
 16600 ;;		On entry : 0/0
 16601 ;;		On exit  : 3F/0
 16602 ;;		Unchanged: 0/0
 16603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16604 ;;      Params:         0       7       0       0       0       0       0       0       0
 16605 ;;      Locals:         0       6       0       0       0       0       0       0       0
 16606 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16607 ;;      Totals:         4      13       0       0       0       0       0       0       0
 16608 ;;Total ram usage:       17 bytes
 16609 ;; Hardware stack levels used: 1
 16610 ;; Hardware stack levels required when called: 6
 16611 ;; This function calls:
 16612 ;;		_command
 16613 ;;		_dummy_clocks
 16614 ;;		_escreve_SPI
 16615 ;;		_leitura_SPI
 16616 ;;		_proceed
 16617 ;;		_response
 16618 ;; This function is called by:
 16619 ;;		_disk_write
 16620 ;; This function uses a non-reentrant model
 16621 ;;
 16622                           
 16623                           	psect	text73
 16624  002F4A                     __ptext73:
 16625                           	callstack 0
 16626  002F4A                     _sdc_disk_write:
 16627                           	callstack 15
 16628                           
 16629                           ; BSR set to: 0
 16630                           ;incstack = 0
 16631  002F4A  0E00               	movlw	0
 16632  002F4C  0100               	movlb	0	; () banked
 16633  002F4E  6F68               	movwf	(sdc_disk_write@count1+1)& (0+255),b
 16634  002F50  0E00               	movlw	0
 16635  002F52  6F67               	movwf	sdc_disk_write@count1& (0+255),b
 16636                           
 16637                           ; BSR set to: 0
 16638                           ;diskio.c: 515: if(count>1)
 16639  002F54  0E01               	movlw	1
 16640  002F56  6566               	cpfsgt	sdc_disk_write@count& (0+255),b
 16641  002F58  D06A               	goto	l688
 16642                           
 16643                           ; BSR set to: 0
 16644                           ;diskio.c: 516: {;diskio.c: 517: LATCbits.LATC7 = 0;
 16645  002F5A  9E8B               	bcf	139,7,c	;volatile
 16646                           
 16647                           ;diskio.c: 518: LATBbits.LATB4 = 0;
 16648  002F5C  988A               	bcf	138,4,c	;volatile
 16649                           
 16650                           ; BSR set to: 0
 16651                           ;diskio.c: 519: dummy_clocks(10);
 16652  002F5E  0E0A               	movlw	10
 16653  002F60  EC0D  F027         	call	_dummy_clocks
 16654                           
 16655                           ;diskio.c: 520: command(0X57, count, 0XFF);
 16656  002F64  0100               	movlb	0	; () banked
 16657  002F66  5166               	movf	sdc_disk_write@count& (0+255),w,b
 16658  002F68  6E20               	movwf	command@arg^0,c
 16659  002F6A  6A21               	clrf	(command@arg+1)^0,c
 16660  002F6C  6A22               	clrf	(command@arg+2)^0,c
 16661  002F6E  6A23               	clrf	(command@arg+3)^0,c
 16662  002F70  0EFF               	movlw	255
 16663  002F72  6E24               	movwf	command@CRC^0,c
 16664  002F74  0E57               	movlw	87
 16665  002F76  EC1F  F025         	call	_command
 16666                           
 16667                           ;diskio.c: 521: proceed();
 16668  002F7A  ECEB  F028         	call	_proceed	;wreg free
 16669  002F7E                     l9091:
 16670                           
 16671                           ;diskio.c: 523: buff = response();
 16672  002F7E  ECE5  F028         	call	_response	;wreg free
 16673  002F82  0100               	movlb	0	; () banked
 16674  002F84  6F6C               	movwf	sdc_disk_write@buff& (0+255),b
 16675                           
 16676                           ; BSR set to: 0
 16677                           ;diskio.c: 524: }while(buff!=0X00);
 16678  002F86  516C               	movf	sdc_disk_write@buff& (0+255),w,b
 16679  002F88  A4D8               	btfss	status,2,c
 16680  002F8A  D7F9               	goto	l9091
 16681                           
 16682                           ; BSR set to: 0
 16683                           ;diskio.c: 526: dummy_clocks(10);
 16684  002F8C  0E0A               	movlw	10
 16685  002F8E  EC0D  F027         	call	_dummy_clocks
 16686                           
 16687                           ;diskio.c: 527: command(0X59, sector*512, 0XFF);
 16688  002F92  C062  F027         	movff	sdc_disk_write@sector,??_sdc_disk_write
 16689  002F96  C063  F028         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 16690  002F9A  C064  F029         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 16691  002F9E  C065  F02A         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 16692  002FA2  0E09               	movlw	9
 16693  002FA4                     u10825:
 16694  002FA4  90D8               	bcf	status,0,c
 16695  002FA6  3627               	rlcf	??_sdc_disk_write^0,f,c
 16696  002FA8  3628               	rlcf	(??_sdc_disk_write+1)^0,f,c
 16697  002FAA  3629               	rlcf	(??_sdc_disk_write+2)^0,f,c
 16698  002FAC  362A               	rlcf	(??_sdc_disk_write+3)^0,f,c
 16699  002FAE  2EE8               	decfsz	wreg,f,c
 16700  002FB0  D7F9               	goto	u10825
 16701  002FB2  C027  F020         	movff	??_sdc_disk_write,command@arg
 16702  002FB6  C028  F021         	movff	??_sdc_disk_write+1,command@arg+1
 16703  002FBA  C029  F022         	movff	??_sdc_disk_write+2,command@arg+2
 16704  002FBE  C02A  F023         	movff	??_sdc_disk_write+3,command@arg+3
 16705  002FC2  0EFF               	movlw	255
 16706  002FC4  6E24               	movwf	command@CRC^0,c
 16707  002FC6  0E59               	movlw	89
 16708  002FC8  EC1F  F025         	call	_command
 16709                           
 16710                           ;diskio.c: 528: proceed();
 16711  002FCC  ECEB  F028         	call	_proceed	;wreg free
 16712  002FD0                     l9099:
 16713                           
 16714                           ;diskio.c: 530: buff = response();
 16715  002FD0  ECE5  F028         	call	_response	;wreg free
 16716  002FD4  0100               	movlb	0	; () banked
 16717  002FD6  6F6C               	movwf	sdc_disk_write@buff& (0+255),b
 16718                           
 16719                           ; BSR set to: 0
 16720                           ;diskio.c: 531: }while(buff!=0X00);
 16721  002FD8  516C               	movf	sdc_disk_write@buff& (0+255),w,b
 16722  002FDA  A4D8               	btfss	status,2,c
 16723  002FDC  D7F9               	goto	l9099
 16724                           
 16725                           ; BSR set to: 0
 16726                           ;diskio.c: 533: dummy_clocks(1);
 16727  002FDE  0E01               	movlw	1
 16728  002FE0  EC0D  F027         	call	_dummy_clocks
 16729                           
 16730                           ;diskio.c: 534: escreve_SPI(0XFC);
 16731  002FE4  0EFC               	movlw	252
 16732  002FE6  ECC8  F028         	call	_escreve_SPI
 16733                           
 16734                           ;diskio.c: 535: for(j=0;j<512;j++)
 16735  002FEA  0E00               	movlw	0
 16736  002FEC  0100               	movlb	0	; () banked
 16737  002FEE  6F6B               	movwf	(sdc_disk_write@j+1)& (0+255),b
 16738  002FF0  0E00               	movlw	0
 16739  002FF2  6F6A               	movwf	sdc_disk_write@j& (0+255),b
 16740  002FF4                     l9113:
 16741                           
 16742                           ; BSR set to: 0
 16743                           ;diskio.c: 536: {;diskio.c: 537: escreve_SPI(*p_buff);
 16744  002FF4  C060  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 16745  002FF8  C061  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 16746  002FFC  50DF               	movf	indf2,w,c
 16747  002FFE  ECC8  F028         	call	_escreve_SPI
 16748                           
 16749                           ;diskio.c: 538: p_buff++;
 16750  003002  0100               	movlb	0	; () banked
 16751  003004  4B60               	infsnz	sdc_disk_write@p_buff& (0+255),f,b
 16752  003006  2B61               	incf	(sdc_disk_write@p_buff+1)& (0+255),f,b
 16753                           
 16754                           ; BSR set to: 0
 16755  003008  4B6A               	infsnz	sdc_disk_write@j& (0+255),f,b
 16756  00300A  2B6B               	incf	(sdc_disk_write@j+1)& (0+255),f,b
 16757                           
 16758                           ; BSR set to: 0
 16759  00300C  BF6B               	btfsc	(sdc_disk_write@j+1)& (0+255),7,b
 16760  00300E  D7F2               	goto	l9113
 16761  003010  0E02               	movlw	2
 16762  003012  5D6B               	subwf	(sdc_disk_write@j+1)& (0+255),w,b
 16763  003014  A0D8               	btfss	status,0,c
 16764  003016  D7EE               	goto	l9113
 16765                           
 16766                           ; BSR set to: 0
 16767                           ;diskio.c: 539: };diskio.c: 540: leitura_SPI();
 16768  003018  ECF1  F028         	call	_leitura_SPI	;wreg free
 16769                           
 16770                           ;diskio.c: 541: leitura_SPI();
 16771  00301C  ECF1  F028         	call	_leitura_SPI	;wreg free
 16772                           
 16773                           ;diskio.c: 543: dummy_clocks(1);
 16774  003020  0E01               	movlw	1
 16775  003022  EC0D  F027         	call	_dummy_clocks
 16776                           
 16777                           ;diskio.c: 544: escreve_SPI(0XFD);
 16778  003026  0EFD               	movlw	253
 16779  003028  ECC8  F028         	call	_escreve_SPI
 16780                           
 16781                           ;diskio.c: 546: }
 16782  00302C  D067               	goto	u10880
 16783  00302E                     l688:
 16784                           
 16785                           ; BSR set to: 0
 16786                           ;diskio.c: 547: else;diskio.c: 548: {;diskio.c: 549: LATCbits.LATC7 = 0;
 16787  00302E  9E8B               	bcf	139,7,c	;volatile
 16788                           
 16789                           ;diskio.c: 550: LATBbits.LATB4 = 0;
 16790  003030  988A               	bcf	138,4,c	;volatile
 16791                           
 16792                           ; BSR set to: 0
 16793                           ;diskio.c: 551: dummy_clocks(10);
 16794  003032  0E0A               	movlw	10
 16795  003034  EC0D  F027         	call	_dummy_clocks
 16796                           
 16797                           ;diskio.c: 552: command(0X58, sector*512, 0X00);
 16798  003038  C062  F027         	movff	sdc_disk_write@sector,??_sdc_disk_write
 16799  00303C  C063  F028         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 16800  003040  C064  F029         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 16801  003044  C065  F02A         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 16802  003048  0E09               	movlw	9
 16803  00304A                     u10855:
 16804  00304A  90D8               	bcf	status,0,c
 16805  00304C  3627               	rlcf	??_sdc_disk_write^0,f,c
 16806  00304E  3628               	rlcf	(??_sdc_disk_write+1)^0,f,c
 16807  003050  3629               	rlcf	(??_sdc_disk_write+2)^0,f,c
 16808  003052  362A               	rlcf	(??_sdc_disk_write+3)^0,f,c
 16809  003054  2EE8               	decfsz	wreg,f,c
 16810  003056  D7F9               	goto	u10855
 16811  003058  C027  F020         	movff	??_sdc_disk_write,command@arg
 16812  00305C  C028  F021         	movff	??_sdc_disk_write+1,command@arg+1
 16813  003060  C029  F022         	movff	??_sdc_disk_write+2,command@arg+2
 16814  003064  C02A  F023         	movff	??_sdc_disk_write+3,command@arg+3
 16815  003068  0E00               	movlw	0
 16816  00306A  6E24               	movwf	command@CRC^0,c
 16817  00306C  0E58               	movlw	88
 16818  00306E  EC1F  F025         	call	_command
 16819                           
 16820                           ;diskio.c: 553: proceed();
 16821  003072  ECEB  F028         	call	_proceed	;wreg free
 16822  003076                     l9131:
 16823                           
 16824                           ;diskio.c: 555: buff = response();
 16825  003076  ECE5  F028         	call	_response	;wreg free
 16826  00307A  0100               	movlb	0	; () banked
 16827  00307C  6F6C               	movwf	sdc_disk_write@buff& (0+255),b
 16828                           
 16829                           ; BSR set to: 0
 16830                           ;diskio.c: 556: }while(buff!=0X00);
 16831  00307E  516C               	movf	sdc_disk_write@buff& (0+255),w,b
 16832  003080  A4D8               	btfss	status,2,c
 16833  003082  D7F9               	goto	l9131
 16834                           
 16835                           ; BSR set to: 0
 16836                           ;diskio.c: 558: LATBbits.LATB4 = 0;
 16837  003084  988A               	bcf	138,4,c	;volatile
 16838                           
 16839                           ;diskio.c: 559: LATCbits.LATC7 = 0;
 16840  003086  9E8B               	bcf	139,7,c	;volatile
 16841                           
 16842                           ; BSR set to: 0
 16843                           ;diskio.c: 560: dummy_clocks(1);
 16844  003088  0E01               	movlw	1
 16845  00308A  EC0D  F027         	call	_dummy_clocks
 16846                           
 16847                           ;diskio.c: 561: escreve_SPI(0XFE);
 16848  00308E  0EFE               	movlw	254
 16849  003090  ECC8  F028         	call	_escreve_SPI
 16850                           
 16851                           ;diskio.c: 562: for(j=0;j<512;j++)
 16852  003094  0E00               	movlw	0
 16853  003096  0100               	movlb	0	; () banked
 16854  003098  6F6B               	movwf	(sdc_disk_write@j+1)& (0+255),b
 16855  00309A  0E00               	movlw	0
 16856  00309C  6F6A               	movwf	sdc_disk_write@j& (0+255),b
 16857  00309E                     l9145:
 16858                           
 16859                           ; BSR set to: 0
 16860                           ;diskio.c: 563: {;diskio.c: 564: escreve_SPI(*p_buff);
 16861  00309E  C060  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 16862  0030A2  C061  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 16863  0030A6  50DF               	movf	indf2,w,c
 16864  0030A8  ECC8  F028         	call	_escreve_SPI
 16865                           
 16866                           ;diskio.c: 565: p_buff++;
 16867  0030AC  0100               	movlb	0	; () banked
 16868  0030AE  4B60               	infsnz	sdc_disk_write@p_buff& (0+255),f,b
 16869  0030B0  2B61               	incf	(sdc_disk_write@p_buff+1)& (0+255),f,b
 16870                           
 16871                           ; BSR set to: 0
 16872  0030B2  4B6A               	infsnz	sdc_disk_write@j& (0+255),f,b
 16873  0030B4  2B6B               	incf	(sdc_disk_write@j+1)& (0+255),f,b
 16874                           
 16875                           ; BSR set to: 0
 16876  0030B6  BF6B               	btfsc	(sdc_disk_write@j+1)& (0+255),7,b
 16877  0030B8  D7F2               	goto	l9145
 16878  0030BA  0E02               	movlw	2
 16879  0030BC  5D6B               	subwf	(sdc_disk_write@j+1)& (0+255),w,b
 16880  0030BE  A0D8               	btfss	status,0,c
 16881  0030C0  D7EE               	goto	l9145
 16882                           
 16883                           ; BSR set to: 0
 16884                           ;diskio.c: 566: };diskio.c: 567: leitura_SPI();
 16885  0030C2  ECF1  F028         	call	_leitura_SPI	;wreg free
 16886                           
 16887                           ;diskio.c: 568: leitura_SPI();
 16888  0030C6  ECF1  F028         	call	_leitura_SPI	;wreg free
 16889                           
 16890                           ;diskio.c: 570: dummy_clocks(10);
 16891  0030CA  0E0A               	movlw	10
 16892  0030CC  EC0D  F027         	call	_dummy_clocks
 16893                           
 16894                           ;diskio.c: 571: command(0X4D,0X00000000,0X00);
 16895  0030D0  0E00               	movlw	0
 16896  0030D2  6E20               	movwf	command@arg^0,c
 16897  0030D4  0E00               	movlw	0
 16898  0030D6  6E21               	movwf	(command@arg+1)^0,c
 16899  0030D8  0E00               	movlw	0
 16900  0030DA  6E22               	movwf	(command@arg+2)^0,c
 16901  0030DC  0E00               	movlw	0
 16902  0030DE  6E23               	movwf	(command@arg+3)^0,c
 16903  0030E0  0E00               	movlw	0
 16904  0030E2  6E24               	movwf	command@CRC^0,c
 16905  0030E4  0E4D               	movlw	77
 16906  0030E6  EC1F  F025         	call	_command
 16907                           
 16908                           ;diskio.c: 572: proceed();
 16909  0030EA  ECEB  F028         	call	_proceed	;wreg free
 16910  0030EE                     l9161:
 16911                           
 16912                           ;diskio.c: 574: buff = response();
 16913  0030EE  ECE5  F028         	call	_response	;wreg free
 16914  0030F2  0100               	movlb	0	; () banked
 16915  0030F4  6F6C               	movwf	sdc_disk_write@buff& (0+255),b
 16916                           
 16917                           ; BSR set to: 0
 16918                           ;diskio.c: 575: }while(buff!=0X00 );
 16919  0030F6  516C               	movf	sdc_disk_write@buff& (0+255),w,b
 16920  0030F8  A4D8               	btfss	status,2,c
 16921  0030FA  D7F9               	goto	l9161
 16922  0030FC                     u10880:
 16923                           
 16924                           ;diskio.c: 576: };diskio.c: 577: return res;
 16925  0030FC  0100               	movlb	0	; () banked
 16926  0030FE  5169               	movf	sdc_disk_write@res& (0+255),w,b
 16927                           
 16928                           ; BSR set to: 0
 16929  003100  0012               	return		;funcret
 16930  003102                     __end_of_sdc_disk_write:
 16931                           	callstack 0
 16932                           
 16933 ;; *************** function _disk_read *****************
 16934 ;; Defined at:
 16935 ;;		line 97 in file "bibliotecas/diskio.c"
 16936 ;; Parameters:    Size  Location     Type
 16937 ;;  pdrv            1    wreg     unsigned char 
 16938 ;;  buff            2   14[BANK0 ] PTR unsigned char 
 16939 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 16940 ;;  sector          4   16[BANK0 ] unsigned long 
 16941 ;;  count           1   20[BANK0 ] unsigned char 
 16942 ;; Auto vars:     Size  Location     Type
 16943 ;;  pdrv            1   21[BANK0 ] unsigned char 
 16944 ;;  result          2   22[BANK0 ] int 
 16945 ;;  res             1   24[BANK0 ] enum E25
 16946 ;; Return value:  Size  Location     Type
 16947 ;;                  1    wreg      enum E25
 16948 ;; Registers used:
 16949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16950 ;; Tracked objects:
 16951 ;;		On entry : 3F/0
 16952 ;;		On exit  : 3F/0
 16953 ;;		Unchanged: 0/0
 16954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16955 ;;      Params:         0       7       0       0       0       0       0       0       0
 16956 ;;      Locals:         0       4       0       0       0       0       0       0       0
 16957 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16958 ;;      Totals:         1      11       0       0       0       0       0       0       0
 16959 ;;Total ram usage:       12 bytes
 16960 ;; Hardware stack levels used: 1
 16961 ;; Hardware stack levels required when called: 7
 16962 ;; This function calls:
 16963 ;;		_sdc_disk_read
 16964 ;; This function is called by:
 16965 ;;		_move_window
 16966 ;;		_check_fs
 16967 ;;		_f_read
 16968 ;; This function uses a non-reentrant model
 16969 ;;
 16970                           
 16971                           	psect	text74
 16972  004838                     __ptext74:
 16973                           	callstack 0
 16974  004838                     _disk_read:
 16975                           	callstack 15
 16976                           
 16977                           ; BSR set to: 0
 16978                           ;incstack = 0
 16979                           ;disk_read@pdrv stored from wreg
 16980  004838  6F75               	movwf	disk_read@pdrv& (0+255),b
 16981                           
 16982                           ;diskio.c: 104: DRESULT res;;diskio.c: 105: int result;;diskio.c: 107: switch (pdrv) {
 16983  00483A  D029               	goto	l9195
 16984  00483C                     l9171:
 16985                           
 16986                           ; BSR set to: 0
 16987                           ;diskio.c: 111: result = sdc_disk_read(buff, sector, count);
 16988  00483C  C06E  F060         	movff	disk_read@buff,sdc_disk_read@p_buff
 16989  004840  C06F  F061         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 16990  004844  C070  F062         	movff	disk_read@sector,sdc_disk_read@sector
 16991  004848  C071  F063         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 16992  00484C  C072  F064         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 16993  004850  C073  F065         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 16994  004854  C074  F066         	movff	disk_read@count,sdc_disk_read@count
 16995  004858  EC7D  F01B         	call	_sdc_disk_read	;wreg free
 16996  00485C  6E2B               	movwf	??_disk_read^0,c
 16997  00485E  502B               	movf	??_disk_read^0,w,c
 16998  004860  6F76               	movwf	disk_read@result& (0+255),b
 16999  004862  6B77               	clrf	(disk_read@result+1)& (0+255),b
 17000                           
 17001                           ; BSR set to: 0
 17002                           ;diskio.c: 115: res = result;
 17003  004864  C076  F078         	movff	disk_read@result,disk_read@res
 17004  004868                     l9175:
 17005                           
 17006                           ; BSR set to: 0
 17007                           ;diskio.c: 117: return res;
 17008  004868  5178               	movf	disk_read@res& (0+255),w,b
 17009  00486A  0012               	return	
 17010  00486C                     l9179:
 17011                           
 17012                           ; BSR set to: 0
 17013                           ;diskio.c: 122: result = sdc_disk_read(buff, sector, count);
 17014  00486C  C06E  F060         	movff	disk_read@buff,sdc_disk_read@p_buff
 17015  004870  C06F  F061         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 17016  004874  C070  F062         	movff	disk_read@sector,sdc_disk_read@sector
 17017  004878  C071  F063         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 17018  00487C  C072  F064         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 17019  004880  C073  F065         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 17020  004884  C074  F066         	movff	disk_read@count,sdc_disk_read@count
 17021  004888  EC7D  F01B         	call	_sdc_disk_read	;wreg free
 17022  00488C  D7E7               	goto	L10
 17023  00488E                     l9195:
 17024  00488E  0100               	movlb	0	; () banked
 17025  004890  5175               	movf	disk_read@pdrv& (0+255),w,b
 17026                           
 17027                           ; Switch size 1, requested type "simple"
 17028                           ; Number of cases is 3, Range of values is 0 to 2
 17029                           ; switch strategies available:
 17030                           ; Name         Instructions Cycles
 17031                           ; simple_byte           10     6 (average)
 17032                           ;	Chosen strategy is simple_byte
 17033  004892  0A00               	xorlw	0	; case 0
 17034  004894  B4D8               	btfsc	status,2,c
 17035  004896  D7D2               	goto	l9171
 17036  004898  0A01               	xorlw	1	; case 1
 17037  00489A  B4D8               	btfsc	status,2,c
 17038  00489C  D7E7               	goto	l9179
 17039  00489E  0A03               	xorlw	3	; case 2
 17040  0048A0  B4D8               	btfsc	status,2,c
 17041  0048A2  D7E2               	goto	l9175
 17042                           
 17043                           ; BSR set to: 0
 17044                           ;diskio.c: 141: return RES_PARERR;
 17045  0048A4  0E04               	movlw	4
 17046                           
 17047                           ; BSR set to: 0
 17048  0048A6  0012               	return		;funcret
 17049  0048A8                     __end_of_disk_read:
 17050                           	callstack 0
 17051                           
 17052 ;; *************** function _sdc_disk_read *****************
 17053 ;; Defined at:
 17054 ;;		line 439 in file "bibliotecas/diskio.c"
 17055 ;; Parameters:    Size  Location     Type
 17056 ;;  p_buff          2    0[BANK0 ] PTR unsigned char 
 17057 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 17058 ;;  sector          4    2[BANK0 ] unsigned long 
 17059 ;;  count           1    6[BANK0 ] unsigned char 
 17060 ;; Auto vars:     Size  Location     Type
 17061 ;;  start_add       4    7[BANK0 ] unsigned long 
 17062 ;;  length          2   11[BANK0 ] int 
 17063 ;;  count1          2    0        int 
 17064 ;;  i               2    0        int 
 17065 ;;  buff            1   13[BANK0 ] unsigned char 
 17066 ;;  ptr             1    0        unsigned char 
 17067 ;;  res             1    0        enum E25
 17068 ;; Return value:  Size  Location     Type
 17069 ;;                  1    wreg      enum E25
 17070 ;; Registers used:
 17071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17072 ;; Tracked objects:
 17073 ;;		On entry : 0/0
 17074 ;;		On exit  : 3F/0
 17075 ;;		Unchanged: 0/0
 17076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17077 ;;      Params:         0       7       0       0       0       0       0       0       0
 17078 ;;      Locals:         0       7       0       0       0       0       0       0       0
 17079 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17080 ;;      Totals:         4      14       0       0       0       0       0       0       0
 17081 ;;Total ram usage:       18 bytes
 17082 ;; Hardware stack levels used: 1
 17083 ;; Hardware stack levels required when called: 6
 17084 ;; This function calls:
 17085 ;;		_command
 17086 ;;		_dummy_clocks
 17087 ;;		_proceed
 17088 ;;		_response
 17089 ;; This function is called by:
 17090 ;;		_disk_read
 17091 ;; This function uses a non-reentrant model
 17092 ;;
 17093                           
 17094                           	psect	text75
 17095  0036FA                     __ptext75:
 17096                           	callstack 0
 17097  0036FA                     _sdc_disk_read:
 17098                           	callstack 15
 17099                           
 17100                           ;diskio.c: 448: unsigned long int start_add;;diskio.c: 449: int length,i, count1;;diskio
      +                          .c: 450: dummy_clocks(10);
 17101                           
 17102                           ; BSR set to: 0
 17103                           ;incstack = 0
 17104  0036FA  0E0A               	movlw	10
 17105  0036FC  EC0D  F027         	call	_dummy_clocks
 17106                           
 17107                           ;diskio.c: 452: start_add = sector*512;
 17108  003700  C062  F027         	movff	sdc_disk_read@sector,??_sdc_disk_read
 17109  003704  C063  F028         	movff	sdc_disk_read@sector+1,??_sdc_disk_read+1
 17110  003708  C064  F029         	movff	sdc_disk_read@sector+2,??_sdc_disk_read+2
 17111  00370C  C065  F02A         	movff	sdc_disk_read@sector+3,??_sdc_disk_read+3
 17112  003710  0E09               	movlw	9
 17113  003712                     u10735:
 17114  003712  90D8               	bcf	status,0,c
 17115  003714  3627               	rlcf	??_sdc_disk_read^0,f,c
 17116  003716  3628               	rlcf	(??_sdc_disk_read+1)^0,f,c
 17117  003718  3629               	rlcf	(??_sdc_disk_read+2)^0,f,c
 17118  00371A  362A               	rlcf	(??_sdc_disk_read+3)^0,f,c
 17119  00371C  2EE8               	decfsz	wreg,f,c
 17120  00371E  D7F9               	goto	u10735
 17121  003720  C027  F067         	movff	??_sdc_disk_read,sdc_disk_read@start_add
 17122  003724  C028  F068         	movff	??_sdc_disk_read+1,sdc_disk_read@start_add+1
 17123  003728  C029  F069         	movff	??_sdc_disk_read+2,sdc_disk_read@start_add+2
 17124  00372C  C02A  F06A         	movff	??_sdc_disk_read+3,sdc_disk_read@start_add+3
 17125                           
 17126                           ;diskio.c: 455: if(sector != 1)
 17127  003730  0100               	movlb	0	; () banked
 17128  003732  0562               	decf	sdc_disk_read@sector& (0+255),w,b
 17129  003734  1163               	iorwf	(sdc_disk_read@sector+1)& (0+255),w,b
 17130  003736  1164               	iorwf	(sdc_disk_read@sector+2)& (0+255),w,b
 17131  003738  1165               	iorwf	(sdc_disk_read@sector+3)& (0+255),w,b
 17132  00373A  B4D8               	btfsc	status,2,c
 17133  00373C  D01C               	goto	l9041
 17134                           
 17135                           ; BSR set to: 0
 17136                           ;diskio.c: 456: {;diskio.c: 457: dummy_clocks(10);
 17137  00373E  0E0A               	movlw	10
 17138  003740  EC0D  F027         	call	_dummy_clocks
 17139                           
 17140                           ;diskio.c: 458: command(0X52,start_add ,0X00);
 17141  003744  C067  F020         	movff	sdc_disk_read@start_add,command@arg
 17142  003748  C068  F021         	movff	sdc_disk_read@start_add+1,command@arg+1
 17143  00374C  C069  F022         	movff	sdc_disk_read@start_add+2,command@arg+2
 17144  003750  C06A  F023         	movff	sdc_disk_read@start_add+3,command@arg+3
 17145  003754  0E00               	movlw	0
 17146  003756  6E24               	movwf	command@CRC^0,c
 17147  003758  0E52               	movlw	82
 17148  00375A  EC1F  F025         	call	_command
 17149                           
 17150                           ;diskio.c: 459: proceed();
 17151  00375E  ECEB  F028         	call	_proceed	;wreg free
 17152  003762                     l9035:
 17153                           
 17154                           ;diskio.c: 461: buff = response();
 17155  003762  ECE5  F028         	call	_response	;wreg free
 17156  003766  0100               	movlb	0	; () banked
 17157  003768  6F6D               	movwf	sdc_disk_read@buff& (0+255),b
 17158                           
 17159                           ; BSR set to: 0
 17160                           ;diskio.c: 462: }while(buff!=0X00);
 17161  00376A  516D               	movf	sdc_disk_read@buff& (0+255),w,b
 17162  00376C  A4D8               	btfss	status,2,c
 17163  00376E  D7F9               	goto	l9035
 17164  003770                     u10750:
 17165                           
 17166                           ; BSR set to: 0
 17167                           ;diskio.c: 463: proceed();
 17168  003770  ECEB  F028         	call	_proceed	;wreg free
 17169                           
 17170                           ;diskio.c: 464: }
 17171  003774  D01E               	goto	l9053
 17172  003776                     l9041:
 17173                           
 17174                           ; BSR set to: 0
 17175                           ;diskio.c: 465: else;diskio.c: 466: {;diskio.c: 467: dummy_clocks(10);
 17176  003776  0E0A               	movlw	10
 17177  003778  EC0D  F027         	call	_dummy_clocks
 17178                           
 17179                           ;diskio.c: 468: command(0X51,sector ,0X00);
 17180  00377C  C062  F020         	movff	sdc_disk_read@sector,command@arg
 17181  003780  C063  F021         	movff	sdc_disk_read@sector+1,command@arg+1
 17182  003784  C064  F022         	movff	sdc_disk_read@sector+2,command@arg+2
 17183  003788  C065  F023         	movff	sdc_disk_read@sector+3,command@arg+3
 17184  00378C  0E00               	movlw	0
 17185  00378E  6E24               	movwf	command@CRC^0,c
 17186  003790  0E51               	movlw	81
 17187  003792  EC1F  F025         	call	_command
 17188                           
 17189                           ;diskio.c: 469: proceed();
 17190  003796  ECEB  F028         	call	_proceed	;wreg free
 17191  00379A                     l9045:
 17192                           
 17193                           ;diskio.c: 471: buff = response();
 17194  00379A  ECE5  F028         	call	_response	;wreg free
 17195  00379E  0100               	movlb	0	; () banked
 17196  0037A0  6F6D               	movwf	sdc_disk_read@buff& (0+255),b
 17197                           
 17198                           ; BSR set to: 0
 17199                           ;diskio.c: 472: }while(buff!=0X00);
 17200  0037A2  516D               	movf	sdc_disk_read@buff& (0+255),w,b
 17201  0037A4  B4D8               	btfsc	status,2,c
 17202  0037A6  D7E4               	goto	u10750
 17203  0037A8  D7F8               	goto	l9045
 17204  0037AA                     l9051:
 17205                           
 17206                           ; BSR set to: 0
 17207                           ;diskio.c: 479: {;diskio.c: 480: buff = response();
 17208  0037AA  ECE5  F028         	call	_response	;wreg free
 17209  0037AE  0100               	movlb	0	; () banked
 17210  0037B0  6F6D               	movwf	sdc_disk_read@buff& (0+255),b
 17211  0037B2                     l9053:
 17212  0037B2  0EFE               	movlw	254
 17213  0037B4  0100               	movlb	0	; () banked
 17214  0037B6  196D               	xorwf	sdc_disk_read@buff& (0+255),w,b
 17215  0037B8  A4D8               	btfss	status,2,c
 17216  0037BA  D7F7               	goto	l9051
 17217                           
 17218                           ; BSR set to: 0
 17219                           ;diskio.c: 481: };diskio.c: 483: length = 0;
 17220  0037BC  0E00               	movlw	0
 17221  0037BE  6F6C               	movwf	(sdc_disk_read@length+1)& (0+255),b
 17222  0037C0  0E00               	movlw	0
 17223  0037C2  6F6B               	movwf	sdc_disk_read@length& (0+255),b
 17224                           
 17225                           ;diskio.c: 484: while ( length < 512 )
 17226  0037C4  D00C               	goto	l9061
 17227  0037C6                     l9057:
 17228                           
 17229                           ; BSR set to: 0
 17230                           ;diskio.c: 485: {;diskio.c: 486: p_buff[length] = response();
 17231  0037C6  516B               	movf	sdc_disk_read@length& (0+255),w,b
 17232  0037C8  2560               	addwf	sdc_disk_read@p_buff& (0+255),w,b
 17233  0037CA  6ED9               	movwf	fsr2l,c
 17234  0037CC  516C               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 17235  0037CE  2161               	addwfc	(sdc_disk_read@p_buff+1)& (0+255),w,b
 17236  0037D0  6EDA               	movwf	fsr2h,c
 17237  0037D2  ECE5  F028         	call	_response	;wreg free
 17238  0037D6  6EDF               	movwf	indf2,c
 17239                           
 17240                           ;diskio.c: 487: length++;
 17241  0037D8  0100               	movlb	0	; () banked
 17242  0037DA  4B6B               	infsnz	sdc_disk_read@length& (0+255),f,b
 17243  0037DC  2B6C               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 17244  0037DE                     l9061:
 17245                           
 17246                           ; BSR set to: 0
 17247  0037DE  BF6C               	btfsc	(sdc_disk_read@length+1)& (0+255),7,b
 17248  0037E0  D7F2               	goto	l9057
 17249  0037E2  0E02               	movlw	2
 17250  0037E4  5D6C               	subwf	(sdc_disk_read@length+1)& (0+255),w,b
 17251  0037E6  A0D8               	btfss	status,0,c
 17252  0037E8  D7EE               	goto	l9057
 17253                           
 17254                           ; BSR set to: 0
 17255                           ;diskio.c: 491: dummy_clocks(10);
 17256                           
 17257                           ; BSR set to: 0
 17258  0037EA  0E0A               	movlw	10
 17259  0037EC  EC0D  F027         	call	_dummy_clocks
 17260                           
 17261                           ;diskio.c: 493: command(0X4C,0X00000000,0X00);
 17262  0037F0  0E00               	movlw	0
 17263  0037F2  6E20               	movwf	command@arg^0,c
 17264  0037F4  0E00               	movlw	0
 17265  0037F6  6E21               	movwf	(command@arg+1)^0,c
 17266  0037F8  0E00               	movlw	0
 17267  0037FA  6E22               	movwf	(command@arg+2)^0,c
 17268  0037FC  0E00               	movlw	0
 17269  0037FE  6E23               	movwf	(command@arg+3)^0,c
 17270  003800  0E00               	movlw	0
 17271  003802  6E24               	movwf	command@CRC^0,c
 17272  003804  0E4C               	movlw	76
 17273  003806  EC1F  F025         	call	_command
 17274                           
 17275                           ;diskio.c: 494: proceed();
 17276  00380A  ECEB  F028         	call	_proceed	;wreg free
 17277  00380E                     l9071:
 17278                           
 17279                           ;diskio.c: 496: buff = response();
 17280  00380E  ECE5  F028         	call	_response	;wreg free
 17281  003812  0100               	movlb	0	; () banked
 17282  003814  6F6D               	movwf	sdc_disk_read@buff& (0+255),b
 17283                           
 17284                           ; BSR set to: 0
 17285                           ;diskio.c: 497: }while(buff!=0xFF);
 17286  003816  296D               	incf	sdc_disk_read@buff& (0+255),w,b
 17287  003818  A4D8               	btfss	status,2,c
 17288  00381A  D7F9               	goto	l9071
 17289                           
 17290                           ; BSR set to: 0
 17291                           ;diskio.c: 500: return RES_OK;
 17292                           
 17293                           ; BSR set to: 0
 17294  00381C  0E00               	movlw	0
 17295                           
 17296                           ; BSR set to: 0
 17297  00381E  0012               	return		;funcret
 17298  003820                     __end_of_sdc_disk_read:
 17299                           	callstack 0
 17300                           
 17301 ;; *************** function _response *****************
 17302 ;; Defined at:
 17303 ;;		line 60 in file "bibliotecas/SDCard.c"
 17304 ;; Parameters:    Size  Location     Type
 17305 ;;		None
 17306 ;; Auto vars:     Size  Location     Type
 17307 ;;  buff            1   26[COMRAM] unsigned char 
 17308 ;; Return value:  Size  Location     Type
 17309 ;;                  1    wreg      unsigned char 
 17310 ;; Registers used:
 17311 ;;		wreg, status,2, cstack
 17312 ;; Tracked objects:
 17313 ;;		On entry : 0/0
 17314 ;;		On exit  : 0/0
 17315 ;;		Unchanged: 0/0
 17316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17317 ;;      Params:         0       0       0       0       0       0       0       0       0
 17318 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17319 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17320 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17321 ;;Total ram usage:        1 bytes
 17322 ;; Hardware stack levels used: 1
 17323 ;; Hardware stack levels required when called: 4
 17324 ;; This function calls:
 17325 ;;		_leitura_SPI
 17326 ;; This function is called by:
 17327 ;;		_sdc_reset
 17328 ;;		_sdc_disk_initialize
 17329 ;;		_sdc_disk_read
 17330 ;;		_sdc_disk_write
 17331 ;; This function uses a non-reentrant model
 17332 ;;
 17333                           
 17334                           	psect	text76
 17335  0051CA                     __ptext76:
 17336                           	callstack 0
 17337  0051CA                     _response:
 17338                           	callstack 16
 17339                           
 17340                           ;SDCard.c: 62: unsigned char buff;;SDCard.c: 63: LATBbits.LATB4 = 0;
 17341                           
 17342                           ; BSR set to: 0
 17343                           ;incstack = 0
 17344  0051CA  988A               	bcf	138,4,c	;volatile
 17345                           
 17346                           ;SDCard.c: 64: buff= leitura_SPI();
 17347  0051CC  ECF1  F028         	call	_leitura_SPI	;wreg free
 17348  0051D0  6E1B               	movwf	response@buff^0,c
 17349                           
 17350                           ;SDCard.c: 65: return buff;
 17351  0051D2  501B               	movf	response@buff^0,w,c
 17352  0051D4  0012               	return		;funcret
 17353  0051D6                     __end_of_response:
 17354                           	callstack 0
 17355                           
 17356 ;; *************** function _proceed *****************
 17357 ;; Defined at:
 17358 ;;		line 93 in file "bibliotecas/SDCard.c"
 17359 ;; Parameters:    Size  Location     Type
 17360 ;;		None
 17361 ;; Auto vars:     Size  Location     Type
 17362 ;;		None
 17363 ;; Return value:  Size  Location     Type
 17364 ;;                  1    wreg      void 
 17365 ;; Registers used:
 17366 ;;		wreg, cstack
 17367 ;; Tracked objects:
 17368 ;;		On entry : 0/0
 17369 ;;		On exit  : 0/0
 17370 ;;		Unchanged: 0/0
 17371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17372 ;;      Params:         0       0       0       0       0       0       0       0       0
 17373 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17374 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17375 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17376 ;;Total ram usage:        0 bytes
 17377 ;; Hardware stack levels used: 1
 17378 ;; Hardware stack levels required when called: 4
 17379 ;; This function calls:
 17380 ;;		_escreve_SPI
 17381 ;; This function is called by:
 17382 ;;		_sdc_reset
 17383 ;;		_sdc_disk_initialize
 17384 ;;		_sdc_disk_read
 17385 ;;		_sdc_disk_write
 17386 ;; This function uses a non-reentrant model
 17387 ;;
 17388                           
 17389                           	psect	text77
 17390  0051D6                     __ptext77:
 17391                           	callstack 0
 17392  0051D6                     _proceed:
 17393                           	callstack 16
 17394                           
 17395                           ;SDCard.c: 95: LATBbits.LATB4 = 0;
 17396                           
 17397                           ;incstack = 0
 17398  0051D6  988A               	bcf	138,4,c	;volatile
 17399                           
 17400                           ;SDCard.c: 96: escreve_SPI(0xFF);
 17401  0051D8  0EFF               	movlw	255
 17402  0051DA  ECC8  F028         	call	_escreve_SPI
 17403                           
 17404                           ;SDCard.c: 97: LATBbits.LATB4 = 1;
 17405  0051DE  888A               	bsf	138,4,c	;volatile
 17406  0051E0  0012               	return		;funcret
 17407  0051E2                     __end_of_proceed:
 17408                           	callstack 0
 17409                           
 17410 ;; *************** function _command *****************
 17411 ;; Defined at:
 17412 ;;		line 126 in file "bibliotecas/SDCard.c"
 17413 ;; Parameters:    Size  Location     Type
 17414 ;;  CMD             1    wreg     unsigned char 
 17415 ;;  arg             4   31[COMRAM] unsigned long 
 17416 ;;  CRC             1   35[COMRAM] unsigned char 
 17417 ;; Auto vars:     Size  Location     Type
 17418 ;;  CMD             1   36[COMRAM] unsigned char 
 17419 ;;  argument        1   37[COMRAM] unsigned char 
 17420 ;; Return value:  Size  Location     Type
 17421 ;;                  1    wreg      void 
 17422 ;; Registers used:
 17423 ;;		wreg, status,2, status,0, cstack
 17424 ;; Tracked objects:
 17425 ;;		On entry : 0/0
 17426 ;;		On exit  : 0/0
 17427 ;;		Unchanged: 0/0
 17428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17429 ;;      Params:         5       0       0       0       0       0       0       0       0
 17430 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17431 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17432 ;;      Totals:         7       0       0       0       0       0       0       0       0
 17433 ;;Total ram usage:        7 bytes
 17434 ;; Hardware stack levels used: 1
 17435 ;; Hardware stack levels required when called: 5
 17436 ;; This function calls:
 17437 ;;		_dummy_clocks
 17438 ;;		_escreve_SPI
 17439 ;;		_wait_ready
 17440 ;; This function is called by:
 17441 ;;		_sdc_reset
 17442 ;;		_sdc_disk_initialize
 17443 ;;		_sdc_disk_read
 17444 ;;		_sdc_disk_write
 17445 ;; This function uses a non-reentrant model
 17446 ;;
 17447                           
 17448                           	psect	text78
 17449  004A3E                     __ptext78:
 17450                           	callstack 0
 17451  004A3E                     _command:
 17452                           	callstack 15
 17453                           
 17454                           ;incstack = 0
 17455                           ;command@CMD stored from wreg
 17456  004A3E  6E25               	movwf	command@CMD^0,c
 17457                           
 17458                           ;SDCard.c: 128: unsigned char argument;;SDCard.c: 130: if (wait_ready() != 0xFF)
 17459  004A40  EC63  F027         	call	_wait_ready	;wreg free
 17460  004A44  0AFF               	xorlw	255
 17461  004A46  A4D8               	btfss	status,2,c
 17462  004A48  D004               	goto	l434
 17463  004A4A  D008               	goto	u10720
 17464  004A4C                     l8999:
 17465                           
 17466                           ;SDCard.c: 133: {;SDCard.c: 134: dummy_clocks(10);
 17467  004A4C  0E0A               	movlw	10
 17468  004A4E  EC0D  F027         	call	_dummy_clocks
 17469  004A52                     l434:
 17470  004A52  EC63  F027         	call	_wait_ready	;wreg free
 17471  004A56  0AFF               	xorlw	255
 17472  004A58  A4D8               	btfss	status,2,c
 17473  004A5A  D7F8               	goto	l8999
 17474  004A5C                     u10720:
 17475                           
 17476                           ;SDCard.c: 135: };SDCard.c: 136: };SDCard.c: 137: escreve_SPI(0xFF);
 17477  004A5C  0EFF               	movlw	255
 17478  004A5E  ECC8  F028         	call	_escreve_SPI
 17479                           
 17480                           ;SDCard.c: 138: escreve_SPI(CMD);
 17481  004A62  5025               	movf	command@CMD^0,w,c
 17482  004A64  ECC8  F028         	call	_escreve_SPI
 17483                           
 17484                           ;SDCard.c: 139: argument = arg>>24;
 17485  004A68  C023  F026         	movff	command@arg+3,command@argument
 17486                           
 17487                           ;SDCard.c: 140: escreve_SPI(argument);
 17488  004A6C  5026               	movf	command@argument^0,w,c
 17489  004A6E  ECC8  F028         	call	_escreve_SPI
 17490                           
 17491                           ;SDCard.c: 141: argument = arg>>16;
 17492  004A72  C022  F026         	movff	command@arg+2,command@argument
 17493                           
 17494                           ;SDCard.c: 142: escreve_SPI(argument);
 17495  004A76  5026               	movf	command@argument^0,w,c
 17496  004A78  ECC8  F028         	call	_escreve_SPI
 17497                           
 17498                           ;SDCard.c: 143: argument = arg>>8;
 17499  004A7C  C021  F026         	movff	command@arg+1,command@argument
 17500                           
 17501                           ;SDCard.c: 144: escreve_SPI(argument);
 17502  004A80  5026               	movf	command@argument^0,w,c
 17503  004A82  ECC8  F028         	call	_escreve_SPI
 17504                           
 17505                           ;SDCard.c: 145: argument = arg;
 17506  004A86  C020  F026         	movff	command@arg,command@argument
 17507                           
 17508                           ;SDCard.c: 146: escreve_SPI(argument);
 17509  004A8A  5026               	movf	command@argument^0,w,c
 17510  004A8C  ECC8  F028         	call	_escreve_SPI
 17511                           
 17512                           ;SDCard.c: 147: escreve_SPI(CRC);
 17513  004A90  5024               	movf	command@CRC^0,w,c
 17514  004A92  ECC8  F028         	call	_escreve_SPI
 17515  004A96  0012               	return		;funcret
 17516  004A98                     __end_of_command:
 17517                           	callstack 0
 17518                           
 17519 ;; *************** function _wait_ready *****************
 17520 ;; Defined at:
 17521 ;;		line 106 in file "bibliotecas/SDCard.c"
 17522 ;; Parameters:    Size  Location     Type
 17523 ;;		None
 17524 ;; Auto vars:     Size  Location     Type
 17525 ;;  msg            10    0        unsigned char [10]
 17526 ;;  timeout         4   26[COMRAM] unsigned long 
 17527 ;;  res             1   30[COMRAM] unsigned char 
 17528 ;; Return value:  Size  Location     Type
 17529 ;;                  1    wreg      unsigned char 
 17530 ;; Registers used:
 17531 ;;		wreg, status,2, status,0, cstack
 17532 ;; Tracked objects:
 17533 ;;		On entry : 0/0
 17534 ;;		On exit  : 0/0
 17535 ;;		Unchanged: 0/0
 17536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17537 ;;      Params:         0       0       0       0       0       0       0       0       0
 17538 ;;      Locals:         5       0       0       0       0       0       0       0       0
 17539 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17540 ;;      Totals:         5       0       0       0       0       0       0       0       0
 17541 ;;Total ram usage:        5 bytes
 17542 ;; Hardware stack levels used: 1
 17543 ;; Hardware stack levels required when called: 4
 17544 ;; This function calls:
 17545 ;;		_leitura_SPI
 17546 ;; This function is called by:
 17547 ;;		_command
 17548 ;; This function uses a non-reentrant model
 17549 ;;
 17550                           
 17551                           	psect	text79
 17552  004EC6                     __ptext79:
 17553                           	callstack 0
 17554  004EC6                     _wait_ready:
 17555                           	callstack 15
 17556                           
 17557                           ;SDCard.c: 108: BYTE res;;SDCard.c: 109: DWORD timeout = 0x7FFF;
 17558                           
 17559                           ;incstack = 0
 17560  004EC6  0EFF               	movlw	255
 17561  004EC8  6E1B               	movwf	wait_ready@timeout^0,c
 17562  004ECA  0E7F               	movlw	127
 17563  004ECC  6E1C               	movwf	(wait_ready@timeout+1)^0,c
 17564  004ECE  0E00               	movlw	0
 17565  004ED0  6E1D               	movwf	(wait_ready@timeout+2)^0,c
 17566  004ED2  0E00               	movlw	0
 17567  004ED4  6E1E               	movwf	(wait_ready@timeout+3)^0,c
 17568  004ED6                     l8971:
 17569                           
 17570                           ;SDCard.c: 113: res = leitura_SPI();
 17571  004ED6  ECF1  F028         	call	_leitura_SPI	;wreg free
 17572  004EDA  6E1F               	movwf	wait_ready@res^0,c
 17573                           
 17574                           ;SDCard.c: 114: while ((res != 0xFF) && (--timeout));
 17575  004EDC  281F               	incf	wait_ready@res^0,w,c
 17576  004EDE  B4D8               	btfsc	status,2,c
 17577  004EE0  D00B               	goto	u10700
 17578  004EE2  061B               	decf	wait_ready@timeout^0,f,c
 17579  004EE4  0E00               	movlw	0
 17580  004EE6  5A1C               	subwfb	(wait_ready@timeout+1)^0,f,c
 17581  004EE8  5A1D               	subwfb	(wait_ready@timeout+2)^0,f,c
 17582  004EEA  5A1E               	subwfb	(wait_ready@timeout+3)^0,f,c
 17583  004EEC  501B               	movf	wait_ready@timeout^0,w,c
 17584  004EEE  101C               	iorwf	(wait_ready@timeout+1)^0,w,c
 17585  004EF0  101D               	iorwf	(wait_ready@timeout+2)^0,w,c
 17586  004EF2  101E               	iorwf	(wait_ready@timeout+3)^0,w,c
 17587  004EF4  A4D8               	btfss	status,2,c
 17588  004EF6  D7EF               	goto	l8971
 17589  004EF8                     u10700:
 17590                           
 17591                           ;SDCard.c: 116: return res;
 17592  004EF8  501F               	movf	wait_ready@res^0,w,c
 17593  004EFA  0012               	return		;funcret
 17594  004EFC                     __end_of_wait_ready:
 17595                           	callstack 0
 17596                           
 17597 ;; *************** function _escreve_SPI *****************
 17598 ;; Defined at:
 17599 ;;		line 98 in file "bibliotecas/SPI.c"
 17600 ;; Parameters:    Size  Location     Type
 17601 ;;  dado            1    wreg     unsigned char 
 17602 ;; Auto vars:     Size  Location     Type
 17603 ;;  dado            1   26[COMRAM] unsigned char 
 17604 ;;  TempVar         1    0        unsigned char 
 17605 ;; Return value:  Size  Location     Type
 17606 ;;                  1    wreg      void 
 17607 ;; Registers used:
 17608 ;;		wreg
 17609 ;; Tracked objects:
 17610 ;;		On entry : 0/0
 17611 ;;		On exit  : 0/0
 17612 ;;		Unchanged: 0/0
 17613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17614 ;;      Params:         0       0       0       0       0       0       0       0       0
 17615 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17616 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17617 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17618 ;;Total ram usage:        1 bytes
 17619 ;; Hardware stack levels used: 1
 17620 ;; Hardware stack levels required when called: 3
 17621 ;; This function calls:
 17622 ;;		Nothing
 17623 ;; This function is called by:
 17624 ;;		_proceed
 17625 ;;		_command
 17626 ;;		_sdc_disk_write
 17627 ;; This function uses a non-reentrant model
 17628 ;;
 17629                           
 17630                           	psect	text80
 17631  005190                     __ptext80:
 17632                           	callstack 0
 17633  005190                     _escreve_SPI:
 17634                           	callstack 16
 17635                           
 17636                           ;incstack = 0
 17637                           ;escreve_SPI@dado stored from wreg
 17638  005190  6E1B               	movwf	escreve_SPI@dado^0,c
 17639  005192  50C9               	movf	201,w,c	;volatile
 17640                           
 17641                           ;SPI.c: 102: PIR1bits.SSPIF = 0;
 17642  005194  969E               	bcf	158,3,c	;volatile
 17643                           
 17644                           ;SPI.c: 104: SSPBUF = dado;
 17645  005196  C01B  FFC9         	movff	escreve_SPI@dado,4041	;volatile
 17646  00519A                     l541:
 17647  00519A  B69E               	btfsc	158,3,c	;volatile
 17648  00519C  0012               	return	
 17649  00519E  D7FD               	goto	l541
 17650  0051A0                     __end_of_escreve_SPI:
 17651                           	callstack 0
 17652                           
 17653 ;; *************** function _dummy_clocks *****************
 17654 ;; Defined at:
 17655 ;;		line 75 in file "bibliotecas/SDCard.c"
 17656 ;; Parameters:    Size  Location     Type
 17657 ;;  n               1    wreg     unsigned char 
 17658 ;; Auto vars:     Size  Location     Type
 17659 ;;  n               1   28[COMRAM] unsigned char 
 17660 ;;  i               2   29[COMRAM] unsigned int 
 17661 ;; Return value:  Size  Location     Type
 17662 ;;                  1    wreg      void 
 17663 ;; Registers used:
 17664 ;;		wreg, status,2, status,0, cstack
 17665 ;; Tracked objects:
 17666 ;;		On entry : 0/0
 17667 ;;		On exit  : 0/0
 17668 ;;		Unchanged: 0/0
 17669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17670 ;;      Params:         0       0       0       0       0       0       0       0       0
 17671 ;;      Locals:         3       0       0       0       0       0       0       0       0
 17672 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17673 ;;      Totals:         5       0       0       0       0       0       0       0       0
 17674 ;;Total ram usage:        5 bytes
 17675 ;; Hardware stack levels used: 1
 17676 ;; Hardware stack levels required when called: 4
 17677 ;; This function calls:
 17678 ;;		_leitura_SPI
 17679 ;; This function is called by:
 17680 ;;		_command
 17681 ;;		_sdc_disk_initialize
 17682 ;;		_sdc_disk_read
 17683 ;;		_sdc_disk_write
 17684 ;; This function uses a non-reentrant model
 17685 ;;
 17686                           
 17687                           	psect	text81
 17688  004E1A                     __ptext81:
 17689                           	callstack 0
 17690  004E1A                     _dummy_clocks:
 17691                           	callstack 16
 17692                           
 17693                           ;incstack = 0
 17694                           ;dummy_clocks@n stored from wreg
 17695  004E1A  6E1D               	movwf	dummy_clocks@n^0,c
 17696                           
 17697                           ;SDCard.c: 77: unsigned int i;;SDCard.c: 78: _delay((unsigned long)((1)*(48000000/4000.0
      +                          )));
 17698  004E1C  0E10               	movlw	16
 17699  004E1E  6E1B               	movwf	??_dummy_clocks^0,c
 17700  004E20  0E94               	movlw	148
 17701  004E22                     u15977:
 17702  004E22  2EE8               	decfsz	wreg,f,c
 17703  004E24  D7FE               	bra	u15977
 17704  004E26  2E1B               	decfsz	??_dummy_clocks^0,f,c
 17705  004E28  D7FC               	bra	u15977
 17706  004E2A  D000               	nop2	
 17707                           
 17708                           ;SDCard.c: 79: for(i=0;i<n;i++)
 17709  004E2C  0E00               	movlw	0
 17710  004E2E  6E1F               	movwf	(dummy_clocks@i+1)^0,c
 17711  004E30  0E00               	movlw	0
 17712  004E32  6E1E               	movwf	dummy_clocks@i^0,c
 17713  004E34  D006               	goto	l8963
 17714  004E36                     l418:
 17715                           
 17716                           ;SDCard.c: 80: {;SDCard.c: 81: LATBbits.LATB4 = 1;
 17717  004E36  888A               	bsf	138,4,c	;volatile
 17718                           
 17719                           ;SDCard.c: 82: leitura_SPI();
 17720  004E38  ECF1  F028         	call	_leitura_SPI	;wreg free
 17721                           
 17722                           ;SDCard.c: 83: LATBbits.LATB4 = 0;
 17723  004E3C  988A               	bcf	138,4,c	;volatile
 17724  004E3E  4A1E               	infsnz	dummy_clocks@i^0,f,c
 17725  004E40  2A1F               	incf	(dummy_clocks@i+1)^0,f,c
 17726  004E42                     l8963:
 17727  004E42  501D               	movf	dummy_clocks@n^0,w,c
 17728  004E44  6E1B               	movwf	??_dummy_clocks^0,c
 17729  004E46  6A1C               	clrf	(??_dummy_clocks+1)^0,c
 17730  004E48  501B               	movf	??_dummy_clocks^0,w,c
 17731  004E4A  5C1E               	subwf	dummy_clocks@i^0,w,c
 17732  004E4C  501C               	movf	(??_dummy_clocks+1)^0,w,c
 17733  004E4E  581F               	subwfb	(dummy_clocks@i+1)^0,w,c
 17734  004E50  B0D8               	btfsc	status,0,c
 17735  004E52  0012               	return	
 17736  004E54  D7F0               	goto	l418
 17737  004E56                     __end_of_dummy_clocks:
 17738                           	callstack 0
 17739                           
 17740 ;; *************** function _leitura_SPI *****************
 17741 ;; Defined at:
 17742 ;;		line 83 in file "bibliotecas/SPI.c"
 17743 ;; Parameters:    Size  Location     Type
 17744 ;;		None
 17745 ;; Auto vars:     Size  Location     Type
 17746 ;;		None
 17747 ;; Return value:  Size  Location     Type
 17748 ;;                  1    wreg      unsigned char 
 17749 ;; Registers used:
 17750 ;;		wreg, status,2
 17751 ;; Tracked objects:
 17752 ;;		On entry : 0/0
 17753 ;;		On exit  : 0/0
 17754 ;;		Unchanged: 0/0
 17755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17756 ;;      Params:         0       0       0       0       0       0       0       0       0
 17757 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17758 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17759 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17760 ;;Total ram usage:        0 bytes
 17761 ;; Hardware stack levels used: 1
 17762 ;; Hardware stack levels required when called: 3
 17763 ;; This function calls:
 17764 ;;		Nothing
 17765 ;; This function is called by:
 17766 ;;		_response
 17767 ;;		_dummy_clocks
 17768 ;;		_wait_ready
 17769 ;;		_sdc_disk_write
 17770 ;; This function uses a non-reentrant model
 17771 ;;
 17772                           
 17773                           	psect	text82
 17774  0051E2                     __ptext82:
 17775                           	callstack 0
 17776  0051E2                     _leitura_SPI:
 17777                           	callstack 16
 17778                           
 17779                           ;SPI.c: 85: SSPBUF = 0xFF;
 17780                           
 17781                           ;incstack = 0
 17782  0051E2  68C9               	setf	201,c	;volatile
 17783                           
 17784                           ;SPI.c: 86: SSPSTATbits.BF = 0;
 17785  0051E4  90C7               	bcf	199,0,c	;volatile
 17786  0051E6                     l535:
 17787  0051E6  A0C7               	btfss	199,0,c	;volatile
 17788  0051E8  D7FE               	goto	l535
 17789                           
 17790                           ;SPI.c: 88: return (SSPBUF);
 17791  0051EA  50C9               	movf	201,w,c	;volatile
 17792  0051EC  0012               	return		;funcret
 17793  0051EE                     __end_of_leitura_SPI:
 17794                           	callstack 0
 17795                           
 17796 ;; *************** function _disk_ioctl *****************
 17797 ;; Defined at:
 17798 ;;		line 198 in file "bibliotecas/diskio.c"
 17799 ;; Parameters:    Size  Location     Type
 17800 ;;  pdrv            1    wreg     unsigned char 
 17801 ;;  cmd             1   26[COMRAM] unsigned char 
 17802 ;;  buff            2   27[COMRAM] PTR void 
 17803 ;;		 -> NULL(0), 
 17804 ;; Auto vars:     Size  Location     Type
 17805 ;;  pdrv            1   29[COMRAM] unsigned char 
 17806 ;;  result          2    0        int 
 17807 ;;  res             1   30[COMRAM] enum E25
 17808 ;; Return value:  Size  Location     Type
 17809 ;;                  1    wreg      enum E25
 17810 ;; Registers used:
 17811 ;;		wreg, status,2, status,0
 17812 ;; Tracked objects:
 17813 ;;		On entry : 3F/0
 17814 ;;		On exit  : 0/0
 17815 ;;		Unchanged: 0/0
 17816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17817 ;;      Params:         3       0       0       0       0       0       0       0       0
 17818 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17819 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17820 ;;      Totals:         5       0       0       0       0       0       0       0       0
 17821 ;;Total ram usage:        5 bytes
 17822 ;; Hardware stack levels used: 1
 17823 ;; Hardware stack levels required when called: 3
 17824 ;; This function calls:
 17825 ;;		Nothing
 17826 ;; This function is called by:
 17827 ;;		_sync
 17828 ;; This function uses a non-reentrant model
 17829 ;;
 17830                           
 17831                           	psect	text83
 17832  00509E                     __ptext83:
 17833                           	callstack 0
 17834  00509E                     _disk_ioctl:
 17835                           	callstack 21
 17836                           
 17837                           ;incstack = 0
 17838                           ;disk_ioctl@pdrv stored from wreg
 17839  00509E  6E1E               	movwf	disk_ioctl@pdrv^0,c
 17840                           
 17841                           ;diskio.c: 204: DRESULT res;;diskio.c: 205: int result;;diskio.c: 207: switch (pdrv) {
 17842  0050A0  D002               	goto	l9881
 17843  0050A2                     l612:
 17844                           
 17845                           ;diskio.c: 212: return res;
 17846  0050A2  501F               	movf	disk_ioctl@res^0,w,c
 17847  0050A4  0012               	return	
 17848  0050A6                     l9881:
 17849  0050A6  501E               	movf	disk_ioctl@pdrv^0,w,c
 17850                           
 17851                           ; Switch size 1, requested type "simple"
 17852                           ; Number of cases is 3, Range of values is 0 to 2
 17853                           ; switch strategies available:
 17854                           ; Name         Instructions Cycles
 17855                           ; simple_byte           10     6 (average)
 17856                           ;	Chosen strategy is simple_byte
 17857  0050A8  0A00               	xorlw	0	; case 0
 17858  0050AA  B4D8               	btfsc	status,2,c
 17859  0050AC  D7FA               	goto	l612
 17860  0050AE  0A01               	xorlw	1	; case 1
 17861  0050B0  B4D8               	btfsc	status,2,c
 17862  0050B2  D7F7               	goto	l612
 17863  0050B4  0A03               	xorlw	3	; case 2
 17864  0050B6  B4D8               	btfsc	status,2,c
 17865  0050B8  D7F4               	goto	l612
 17866                           
 17867                           ;diskio.c: 227: return RES_PARERR;
 17868  0050BA  0E04               	movlw	4
 17869  0050BC  0012               	return		;funcret
 17870  0050BE                     __end_of_disk_ioctl:
 17871                           	callstack 0
 17872                           
 17873 ;; *************** function _get_fattime *****************
 17874 ;; Defined at:
 17875 ;;		line 809 in file "bibliotecas/tff.c"
 17876 ;; Parameters:    Size  Location     Type
 17877 ;;		None
 17878 ;; Auto vars:     Size  Location     Type
 17879 ;;  f_time          9   30[COMRAM] struct .
 17880 ;; Return value:  Size  Location     Type
 17881 ;;                  4   26[COMRAM] unsigned long 
 17882 ;; Registers used:
 17883 ;;		wreg, status,2, status,0
 17884 ;; Tracked objects:
 17885 ;;		On entry : 3F/0
 17886 ;;		On exit  : 3F/0
 17887 ;;		Unchanged: 0/0
 17888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17889 ;;      Params:         4       0       0       0       0       0       0       0       0
 17890 ;;      Locals:         9       0       0       0       0       0       0       0       0
 17891 ;;      Temps:          0      38       0       0       0       0       0       0       0
 17892 ;;      Totals:        13      38       0       0       0       0       0       0       0
 17893 ;;Total ram usage:       51 bytes
 17894 ;; Hardware stack levels used: 1
 17895 ;; Hardware stack levels required when called: 3
 17896 ;; This function calls:
 17897 ;;		Nothing
 17898 ;; This function is called by:
 17899 ;;		_f_open
 17900 ;;		_f_sync
 17901 ;; This function uses a non-reentrant model
 17902 ;;
 17903                           
 17904                           	psect	text84
 17905  003C70                     __ptext84:
 17906                           	callstack 0
 17907  003C70                     _get_fattime:
 17908                           	callstack 23
 17909                           
 17910                           ; BSR set to: 0
 17911                           ;tff.c: 811: fat_time f_time;;tff.c: 813: return (DWORD)(f_time.ano ) << 25 |;tff.c: 814
      +                          : (DWORD)(f_time.mes) << 21 |;tff.c: 815: (DWORD)(f_time.mes) << 16 |;tff.c: 816: (DWORD
      +                          )(f_time.hora) << 11 |;tff.c: 817: (DWORD)(f_time.min) << 5 |;tff.c: 818: (DWORD)(f_time
      +                          .seg) >> 1;
 17912                           
 17913                           ;incstack = 0
 17914  003C70  90D8               	bcf	status,0,c
 17915  003C72  3024               	rrcf	(get_fattime@f_time+5)^0,w,c
 17916  003C74  6F61               	movwf	(??_get_fattime+1)& (0+255),b
 17917  003C76  3023               	rrcf	(get_fattime@f_time+4)^0,w,c
 17918  003C78  6F60               	movwf	??_get_fattime& (0+255),b
 17919  003C7A  5021               	movf	(get_fattime@f_time+2)^0,w,c
 17920  003C7C  6F62               	movwf	(??_get_fattime+2)& (0+255),b
 17921  003C7E  5022               	movf	(get_fattime@f_time+3)^0,w,c
 17922  003C80  6F63               	movwf	(??_get_fattime+3)& (0+255),b
 17923  003C82  6B64               	clrf	(??_get_fattime+4)& (0+255),b
 17924  003C84  6B65               	clrf	(??_get_fattime+5)& (0+255),b
 17925  003C86  0E05               	movlw	5
 17926  003C88                     u12455:
 17927  003C88  90D8               	bcf	status,0,c
 17928  003C8A  3762               	rlcf	(??_get_fattime+2)& (0+255),f,b
 17929  003C8C  3763               	rlcf	(??_get_fattime+3)& (0+255),f,b
 17930  003C8E  3764               	rlcf	(??_get_fattime+4)& (0+255),f,b
 17931  003C90  3765               	rlcf	(??_get_fattime+5)& (0+255),f,b
 17932  003C92  2EE8               	decfsz	wreg,f,c
 17933  003C94  D7F9               	goto	u12455
 17934  003C96  501F               	movf	get_fattime@f_time^0,w,c
 17935  003C98  6F66               	movwf	(??_get_fattime+6)& (0+255),b
 17936  003C9A  5020               	movf	(get_fattime@f_time+1)^0,w,c
 17937  003C9C  6F67               	movwf	(??_get_fattime+7)& (0+255),b
 17938  003C9E  6B68               	clrf	(??_get_fattime+8)& (0+255),b
 17939  003CA0  6B69               	clrf	(??_get_fattime+9)& (0+255),b
 17940  003CA2  0E0B               	movlw	11
 17941  003CA4                     u12465:
 17942  003CA4  90D8               	bcf	status,0,c
 17943  003CA6  3766               	rlcf	(??_get_fattime+6)& (0+255),f,b
 17944  003CA8  3767               	rlcf	(??_get_fattime+7)& (0+255),f,b
 17945  003CAA  3768               	rlcf	(??_get_fattime+8)& (0+255),f,b
 17946  003CAC  3769               	rlcf	(??_get_fattime+9)& (0+255),f,b
 17947  003CAE  2EE8               	decfsz	wreg,f,c
 17948  003CB0  D7F9               	goto	u12465
 17949  003CB2  C026  F06A         	movff	get_fattime@f_time+7,??_get_fattime+10
 17950  003CB6  6B6B               	clrf	(??_get_fattime+11)& (0+255),b
 17951  003CB8  6B6C               	clrf	(??_get_fattime+12)& (0+255),b
 17952  003CBA  6B6D               	clrf	(??_get_fattime+13)& (0+255),b
 17953  003CBC  C06B  F06D         	movff	??_get_fattime+11,??_get_fattime+13
 17954  003CC0  C06A  F06C         	movff	??_get_fattime+10,??_get_fattime+12
 17955  003CC4  6B6B               	clrf	(??_get_fattime+11)& (0+255),b
 17956  003CC6  6B6A               	clrf	(??_get_fattime+10)& (0+255),b
 17957  003CC8  C026  F06E         	movff	get_fattime@f_time+7,??_get_fattime+14
 17958  003CCC  6B6F               	clrf	(??_get_fattime+15)& (0+255),b
 17959  003CCE  6B70               	clrf	(??_get_fattime+16)& (0+255),b
 17960  003CD0  6B71               	clrf	(??_get_fattime+17)& (0+255),b
 17961  003CD2  0E15               	movlw	21
 17962  003CD4                     u12475:
 17963  003CD4  90D8               	bcf	status,0,c
 17964  003CD6  376E               	rlcf	(??_get_fattime+14)& (0+255),f,b
 17965  003CD8  376F               	rlcf	(??_get_fattime+15)& (0+255),f,b
 17966  003CDA  3770               	rlcf	(??_get_fattime+16)& (0+255),f,b
 17967  003CDC  3771               	rlcf	(??_get_fattime+17)& (0+255),f,b
 17968  003CDE  2EE8               	decfsz	wreg,f,c
 17969  003CE0  D7F9               	goto	u12475
 17970  003CE2  C027  F072         	movff	get_fattime@f_time+8,??_get_fattime+18
 17971  003CE6  6B73               	clrf	(??_get_fattime+19)& (0+255),b
 17972  003CE8  6B74               	clrf	(??_get_fattime+20)& (0+255),b
 17973  003CEA  6B75               	clrf	(??_get_fattime+21)& (0+255),b
 17974  003CEC  0E19               	movlw	25
 17975  003CEE                     u12485:
 17976  003CEE  90D8               	bcf	status,0,c
 17977  003CF0  3772               	rlcf	(??_get_fattime+18)& (0+255),f,b
 17978  003CF2  3773               	rlcf	(??_get_fattime+19)& (0+255),f,b
 17979  003CF4  3774               	rlcf	(??_get_fattime+20)& (0+255),f,b
 17980  003CF6  3775               	rlcf	(??_get_fattime+21)& (0+255),f,b
 17981  003CF8  2EE8               	decfsz	wreg,f,c
 17982  003CFA  D7F9               	goto	u12485
 17983  003CFC  516E               	movf	(??_get_fattime+14)& (0+255),w,b
 17984  003CFE  1172               	iorwf	(??_get_fattime+18)& (0+255),w,b
 17985  003D00  6F76               	movwf	(??_get_fattime+22)& (0+255),b
 17986  003D02  516F               	movf	(??_get_fattime+15)& (0+255),w,b
 17987  003D04  1173               	iorwf	(??_get_fattime+19)& (0+255),w,b
 17988  003D06  6F77               	movwf	(??_get_fattime+23)& (0+255),b
 17989  003D08  5170               	movf	(??_get_fattime+16)& (0+255),w,b
 17990  003D0A  1174               	iorwf	(??_get_fattime+20)& (0+255),w,b
 17991  003D0C  6F78               	movwf	(??_get_fattime+24)& (0+255),b
 17992  003D0E  5171               	movf	(??_get_fattime+17)& (0+255),w,b
 17993  003D10  1175               	iorwf	(??_get_fattime+21)& (0+255),w,b
 17994  003D12  6F79               	movwf	(??_get_fattime+25)& (0+255),b
 17995  003D14  516A               	movf	(??_get_fattime+10)& (0+255),w,b
 17996  003D16  1176               	iorwf	(??_get_fattime+22)& (0+255),w,b
 17997  003D18  6F7A               	movwf	(??_get_fattime+26)& (0+255),b
 17998  003D1A  516B               	movf	(??_get_fattime+11)& (0+255),w,b
 17999  003D1C  1177               	iorwf	(??_get_fattime+23)& (0+255),w,b
 18000  003D1E  6F7B               	movwf	(??_get_fattime+27)& (0+255),b
 18001  003D20  516C               	movf	(??_get_fattime+12)& (0+255),w,b
 18002  003D22  1178               	iorwf	(??_get_fattime+24)& (0+255),w,b
 18003  003D24  6F7C               	movwf	(??_get_fattime+28)& (0+255),b
 18004  003D26  516D               	movf	(??_get_fattime+13)& (0+255),w,b
 18005  003D28  1179               	iorwf	(??_get_fattime+25)& (0+255),w,b
 18006  003D2A  6F7D               	movwf	(??_get_fattime+29)& (0+255),b
 18007  003D2C  5166               	movf	(??_get_fattime+6)& (0+255),w,b
 18008  003D2E  117A               	iorwf	(??_get_fattime+26)& (0+255),w,b
 18009  003D30  6F7E               	movwf	(??_get_fattime+30)& (0+255),b
 18010  003D32  5167               	movf	(??_get_fattime+7)& (0+255),w,b
 18011  003D34  117B               	iorwf	(??_get_fattime+27)& (0+255),w,b
 18012  003D36  6F7F               	movwf	(??_get_fattime+31)& (0+255),b
 18013  003D38  5168               	movf	(??_get_fattime+8)& (0+255),w,b
 18014  003D3A  117C               	iorwf	(??_get_fattime+28)& (0+255),w,b
 18015  003D3C  6F80               	movwf	(??_get_fattime+32)& (0+255),b
 18016  003D3E  5169               	movf	(??_get_fattime+9)& (0+255),w,b
 18017  003D40  117D               	iorwf	(??_get_fattime+29)& (0+255),w,b
 18018  003D42  6F81               	movwf	(??_get_fattime+33)& (0+255),b
 18019  003D44  5162               	movf	(??_get_fattime+2)& (0+255),w,b
 18020  003D46  117E               	iorwf	(??_get_fattime+30)& (0+255),w,b
 18021  003D48  6F82               	movwf	(??_get_fattime+34)& (0+255),b
 18022  003D4A  5163               	movf	(??_get_fattime+3)& (0+255),w,b
 18023  003D4C  117F               	iorwf	(??_get_fattime+31)& (0+255),w,b
 18024  003D4E  6F83               	movwf	(??_get_fattime+35)& (0+255),b
 18025  003D50  5164               	movf	(??_get_fattime+4)& (0+255),w,b
 18026  003D52  1180               	iorwf	(??_get_fattime+32)& (0+255),w,b
 18027  003D54  6F84               	movwf	(??_get_fattime+36)& (0+255),b
 18028  003D56  5165               	movf	(??_get_fattime+5)& (0+255),w,b
 18029  003D58  1181               	iorwf	(??_get_fattime+33)& (0+255),w,b
 18030  003D5A  6F85               	movwf	(??_get_fattime+37)& (0+255),b
 18031  003D5C  5160               	movf	??_get_fattime& (0+255),w,b
 18032  003D5E  1182               	iorwf	(??_get_fattime+34)& (0+255),w,b
 18033  003D60  6E1B               	movwf	?_get_fattime^0,c
 18034  003D62  5161               	movf	(??_get_fattime+1)& (0+255),w,b
 18035  003D64  1183               	iorwf	(??_get_fattime+35)& (0+255),w,b
 18036  003D66  6E1C               	movwf	(?_get_fattime+1)^0,c
 18037  003D68  0E00               	movlw	0
 18038  003D6A  1184               	iorwf	(??_get_fattime+36)& (0+255),w,b
 18039  003D6C  6E1D               	movwf	(?_get_fattime+2)^0,c
 18040  003D6E  0E00               	movlw	0
 18041  003D70  1185               	iorwf	(??_get_fattime+37)& (0+255),w,b
 18042  003D72  6E1E               	movwf	(?_get_fattime+3)^0,c
 18043                           
 18044                           ; BSR set to: 0
 18045  003D74  0012               	return		;funcret
 18046  003D76                     __end_of_get_fattime:
 18047                           	callstack 0
 18048                           
 18049 ;; *************** function _desliga_uart *****************
 18050 ;; Defined at:
 18051 ;;		line 219 in file "bibliotecas/uart.c"
 18052 ;; Parameters:    Size  Location     Type
 18053 ;;		None
 18054 ;; Auto vars:     Size  Location     Type
 18055 ;;		None
 18056 ;; Return value:  Size  Location     Type
 18057 ;;                  1    wreg      void 
 18058 ;; Registers used:
 18059 ;;		wreg, status,2
 18060 ;; Tracked objects:
 18061 ;;		On entry : 3F/0
 18062 ;;		On exit  : 3F/0
 18063 ;;		Unchanged: 3F/0
 18064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18065 ;;      Params:         0       0       0       0       0       0       0       0       0
 18066 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18067 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18068 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18069 ;;Total ram usage:        0 bytes
 18070 ;; Hardware stack levels used: 1
 18071 ;; Hardware stack levels required when called: 3
 18072 ;; This function calls:
 18073 ;;		Nothing
 18074 ;; This function is called by:
 18075 ;;		_escrita_sdcard
 18076 ;; This function uses a non-reentrant model
 18077 ;;
 18078                           
 18079                           	psect	text85
 18080  0051BC                     __ptext85:
 18081                           	callstack 0
 18082  0051BC                     _desliga_uart:
 18083                           	callstack 24
 18084                           
 18085                           ; BSR set to: 0
 18086                           ;uart.c: 221: TRISCbits.RC6 = 1;
 18087                           
 18088                           ; BSR set to: 0
 18089                           ;incstack = 0
 18090  0051BC  8C94               	bsf	148,6,c	;volatile
 18091                           
 18092                           ;uart.c: 222: TRISCbits.RC7 = 1;
 18093  0051BE  8E94               	bsf	148,7,c	;volatile
 18094                           
 18095                           ; BSR set to: 0
 18096                           ;uart.c: 225: TXSTA = 0x00;
 18097  0051C0  0E00               	movlw	0
 18098  0051C2  6EAC               	movwf	172,c	;volatile
 18099                           
 18100                           ;uart.c: 227: RCSTA = 0x00;
 18101  0051C4  0E00               	movlw	0
 18102  0051C6  6EAB               	movwf	171,c	;volatile
 18103                           
 18104                           ; BSR set to: 0
 18105  0051C8  0012               	return		;funcret
 18106  0051CA                     __end_of_desliga_uart:
 18107                           	callstack 0
 18108                           
 18109 ;; *************** function _desliga_SPI *****************
 18110 ;; Defined at:
 18111 ;;		line 69 in file "bibliotecas/SPI.c"
 18112 ;; Parameters:    Size  Location     Type
 18113 ;;		None
 18114 ;; Auto vars:     Size  Location     Type
 18115 ;;		None
 18116 ;; Return value:  Size  Location     Type
 18117 ;;                  1    wreg      void 
 18118 ;; Registers used:
 18119 ;;		wreg, status,2
 18120 ;; Tracked objects:
 18121 ;;		On entry : 0/0
 18122 ;;		On exit  : 0/0
 18123 ;;		Unchanged: 0/0
 18124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18125 ;;      Params:         0       0       0       0       0       0       0       0       0
 18126 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18127 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18128 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18129 ;;Total ram usage:        0 bytes
 18130 ;; Hardware stack levels used: 1
 18131 ;; Hardware stack levels required when called: 3
 18132 ;; This function calls:
 18133 ;;		Nothing
 18134 ;; This function is called by:
 18135 ;;		_escrita_sdcard
 18136 ;; This function uses a non-reentrant model
 18137 ;;
 18138                           
 18139                           	psect	text86
 18140  0051EE                     __ptext86:
 18141                           	callstack 0
 18142  0051EE                     _desliga_SPI:
 18143                           	callstack 24
 18144                           
 18145                           ;SPI.c: 71: SSPSTAT = 0x00;
 18146                           
 18147                           ; BSR set to: 0
 18148                           ;incstack = 0
 18149  0051EE  0E00               	movlw	0
 18150  0051F0  6EC7               	movwf	199,c	;volatile
 18151                           
 18152                           ;SPI.c: 72: SSPCON1 = 0x00;
 18153  0051F2  0E00               	movlw	0
 18154  0051F4  6EC6               	movwf	198,c	;volatile
 18155                           
 18156                           ;SPI.c: 73: SSPCON1bits.SSPEN = 0;
 18157  0051F6  9AC6               	bcf	198,5,c	;volatile
 18158  0051F8  0012               	return		;funcret
 18159  0051FA                     __end_of_desliga_SPI:
 18160                           	callstack 0
 18161                           
 18162 ;; *************** function _dados_gps_to_sd *****************
 18163 ;; Defined at:
 18164 ;;		line 643 in file "bibliotecas/GPS.c"
 18165 ;; Parameters:    Size  Location     Type
 18166 ;;		None
 18167 ;; Auto vars:     Size  Location     Type
 18168 ;;		None
 18169 ;; Return value:  Size  Location     Type
 18170 ;;                  1    wreg      void 
 18171 ;; Registers used:
 18172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18173 ;; Tracked objects:
 18174 ;;		On entry : 0/0
 18175 ;;		On exit  : 0/0
 18176 ;;		Unchanged: 0/0
 18177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18178 ;;      Params:         0       0       0       0       0       0       0       0       0
 18179 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18180 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18181 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18182 ;;Total ram usage:        0 bytes
 18183 ;; Hardware stack levels used: 1
 18184 ;; Hardware stack levels required when called: 5
 18185 ;; This function calls:
 18186 ;;		_monta_sd
 18187 ;; This function is called by:
 18188 ;;		_main
 18189 ;; This function uses a non-reentrant model
 18190 ;;
 18191                           
 18192                           	psect	text87
 18193  004E56                     __ptext87:
 18194                           	callstack 0
 18195  004E56                     _dados_gps_to_sd:
 18196                           	callstack 25
 18197                           
 18198                           ;GPS.c: 645: monta_sd(0, rawTime);
 18199                           
 18200                           ;incstack = 0
 18201  004E56  0E69               	movlw	low _rawTime
 18202  004E58  6E1F               	movwf	monta_sd@dado^0,c
 18203  004E5A  0E02               	movlw	high _rawTime
 18204  004E5C  6E20               	movwf	(monta_sd@dado+1)^0,c
 18205  004E5E  0E00               	movlw	0
 18206  004E60  EC2E  F01D         	call	_monta_sd
 18207                           
 18208                           ;GPS.c: 646: monta_sd(1, rawDate);
 18209  004E64  0ED3               	movlw	low _rawDate
 18210  004E66  6E1F               	movwf	monta_sd@dado^0,c
 18211  004E68  0E01               	movlw	high _rawDate
 18212  004E6A  6E20               	movwf	(monta_sd@dado+1)^0,c
 18213  004E6C  0E01               	movlw	1
 18214  004E6E  EC2E  F01D         	call	_monta_sd
 18215                           
 18216                           ;GPS.c: 647: monta_sd(2, rawLatitude);
 18217  004E72  0E5C               	movlw	low _rawLatitude
 18218  004E74  6E1F               	movwf	monta_sd@dado^0,c
 18219  004E76  0E02               	movlw	high _rawLatitude
 18220  004E78  6E20               	movwf	(monta_sd@dado+1)^0,c
 18221  004E7A  0E02               	movlw	2
 18222  004E7C  EC2E  F01D         	call	_monta_sd
 18223                           
 18224                           ;GPS.c: 648: monta_sd(3, rawLongitude);
 18225  004E80  0E4F               	movlw	low _rawLongitude
 18226  004E82  6E1F               	movwf	monta_sd@dado^0,c
 18227  004E84  0E02               	movlw	high _rawLongitude
 18228  004E86  6E20               	movwf	(monta_sd@dado+1)^0,c
 18229  004E88  0E03               	movlw	3
 18230  004E8A  EC2E  F01D         	call	_monta_sd
 18231  004E8E  0012               	return		;funcret
 18232  004E90                     __end_of_dados_gps_to_sd:
 18233                           	callstack 0
 18234                           
 18235 ;; *************** function _monta_sd *****************
 18236 ;; Defined at:
 18237 ;;		line 288 in file "bibliotecas/SDCard.c"
 18238 ;; Parameters:    Size  Location     Type
 18239 ;;  index           1    wreg     unsigned char 
 18240 ;;  dado            2   30[COMRAM] PTR unsigned char 
 18241 ;;		 -> rawDate(7), rawLongitude(13), rawLatitude(13), rawTime(11), 
 18242 ;; Auto vars:     Size  Location     Type
 18243 ;;  index           1   32[COMRAM] unsigned char 
 18244 ;;  i               1   34[COMRAM] unsigned char 
 18245 ;;  size            1   33[COMRAM] unsigned char 
 18246 ;; Return value:  Size  Location     Type
 18247 ;;                  1    wreg      void 
 18248 ;; Registers used:
 18249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18250 ;; Tracked objects:
 18251 ;;		On entry : 0/0
 18252 ;;		On exit  : 0/0
 18253 ;;		Unchanged: 0/0
 18254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18255 ;;      Params:         2       0       0       0       0       0       0       0       0
 18256 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18257 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18258 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18259 ;;Total ram usage:        5 bytes
 18260 ;; Hardware stack levels used: 1
 18261 ;; Hardware stack levels required when called: 4
 18262 ;; This function calls:
 18263 ;;		_strlen
 18264 ;; This function is called by:
 18265 ;;		_dados_gps_to_sd
 18266 ;; This function uses a non-reentrant model
 18267 ;;
 18268                           
 18269                           	psect	text88
 18270  003A5C                     __ptext88:
 18271                           	callstack 0
 18272  003A5C                     _monta_sd:
 18273                           	callstack 25
 18274                           
 18275                           ;incstack = 0
 18276                           ;monta_sd@index stored from wreg
 18277  003A5C  6E21               	movwf	monta_sd@index^0,c
 18278                           
 18279                           ;SDCard.c: 290: unsigned char i, size;;SDCard.c: 291: size = strlen(dado);
 18280  003A5E  C01F  F01B         	movff	monta_sd@dado,strlen@s
 18281  003A62  C020  F01C         	movff	monta_sd@dado+1,strlen@s+1
 18282  003A66  EC05  F028         	call	_strlen	;wreg free
 18283  003A6A  501B               	movf	?_strlen^0,w,c
 18284  003A6C  6E22               	movwf	monta_sd@size^0,c
 18285                           
 18286                           ;SDCard.c: 292: switch(index)
 18287  003A6E  D06B               	goto	l11733
 18288  003A70                     l11665:
 18289                           
 18290                           ;SDCard.c: 295: for(i=0; i<6;i++)
 18291  003A70  0E00               	movlw	0
 18292  003A72  6E23               	movwf	monta_sd@i^0,c
 18293  003A74                     l11671:
 18294                           
 18295                           ;SDCard.c: 296: {;SDCard.c: 297: string_dado.hora[i] = *dado;
 18296  003A74  C01F  FFD9         	movff	monta_sd@dado,fsr2l
 18297  003A78  C020  FFDA         	movff	monta_sd@dado+1,fsr2h
 18298  003A7C  0E07               	movlw	low (_string_dado+7)
 18299  003A7E  2423               	addwf	monta_sd@i^0,w,c
 18300  003A80  6EE1               	movwf	fsr1l,c
 18301  003A82  6AE2               	clrf	fsr1h,c
 18302  003A84  0E02               	movlw	high (_string_dado+7)
 18303  003A86  22E2               	addwfc	fsr1h,f,c
 18304  003A88  CFDF FFE7          	movff	indf2,indf1
 18305                           
 18306                           ;SDCard.c: 298: dado++;
 18307  003A8C  4A1F               	infsnz	monta_sd@dado^0,f,c
 18308  003A8E  2A20               	incf	(monta_sd@dado+1)^0,f,c
 18309  003A90  2A23               	incf	monta_sd@i^0,f,c
 18310  003A92  0E05               	movlw	5
 18311  003A94  6423               	cpfsgt	monta_sd@i^0,c
 18312  003A96  D7EE               	goto	l11671
 18313  003A98  0012               	return	
 18314  003A9A                     l11679:
 18315                           
 18316                           ;SDCard.c: 303: for(i=0; i<6;i++)
 18317  003A9A  0E00               	movlw	0
 18318  003A9C  6E23               	movwf	monta_sd@i^0,c
 18319  003A9E                     l11685:
 18320                           
 18321                           ;SDCard.c: 304: {;SDCard.c: 305: string_dado.data[i] = *dado;
 18322  003A9E  C01F  FFD9         	movff	monta_sd@dado,fsr2l
 18323  003AA2  C020  FFDA         	movff	monta_sd@dado+1,fsr2h
 18324  003AA6  0E00               	movlw	low _string_dado
 18325  003AA8  2423               	addwf	monta_sd@i^0,w,c
 18326  003AAA  6EE1               	movwf	fsr1l,c
 18327  003AAC  6AE2               	clrf	fsr1h,c
 18328  003AAE  0E02               	movlw	high _string_dado
 18329  003AB0  22E2               	addwfc	fsr1h,f,c
 18330  003AB2  CFDF FFE7          	movff	indf2,indf1
 18331                           
 18332                           ;SDCard.c: 306: dado++;
 18333  003AB6  4A1F               	infsnz	monta_sd@dado^0,f,c
 18334  003AB8  2A20               	incf	(monta_sd@dado+1)^0,f,c
 18335  003ABA  2A23               	incf	monta_sd@i^0,f,c
 18336  003ABC  0E05               	movlw	5
 18337  003ABE  6423               	cpfsgt	monta_sd@i^0,c
 18338  003AC0  D7EE               	goto	l11685
 18339  003AC2  0012               	return	
 18340  003AC4                     l11693:
 18341                           
 18342                           ;SDCard.c: 311: for(i=0; i<13;i++)
 18343  003AC4  0E00               	movlw	0
 18344  003AC6  6E23               	movwf	monta_sd@i^0,c
 18345  003AC8                     l11699:
 18346                           
 18347                           ;SDCard.c: 312: {;SDCard.c: 313: string_dado.lt[i] = *dado;
 18348  003AC8  C01F  FFD9         	movff	monta_sd@dado,fsr2l
 18349  003ACC  C020  FFDA         	movff	monta_sd@dado+1,fsr2h
 18350  003AD0  0E12               	movlw	low (_string_dado+18)
 18351  003AD2  2423               	addwf	monta_sd@i^0,w,c
 18352  003AD4  6EE1               	movwf	fsr1l,c
 18353  003AD6  6AE2               	clrf	fsr1h,c
 18354  003AD8  0E02               	movlw	high (_string_dado+18)
 18355  003ADA  22E2               	addwfc	fsr1h,f,c
 18356  003ADC  CFDF FFE7          	movff	indf2,indf1
 18357                           
 18358                           ;SDCard.c: 314: dado++;
 18359  003AE0  4A1F               	infsnz	monta_sd@dado^0,f,c
 18360  003AE2  2A20               	incf	(monta_sd@dado+1)^0,f,c
 18361  003AE4  2A23               	incf	monta_sd@i^0,f,c
 18362  003AE6  0E0C               	movlw	12
 18363  003AE8  6423               	cpfsgt	monta_sd@i^0,c
 18364  003AEA  D7EE               	goto	l11699
 18365  003AEC  0012               	return	
 18366  003AEE                     l11707:
 18367                           
 18368                           ;SDCard.c: 320: for(i=0; i<13;i++)
 18369  003AEE  0E00               	movlw	0
 18370  003AF0  6E23               	movwf	monta_sd@i^0,c
 18371  003AF2                     l11713:
 18372                           
 18373                           ;SDCard.c: 321: {;SDCard.c: 322: string_dado.lo[i] = *dado;
 18374  003AF2  C01F  FFD9         	movff	monta_sd@dado,fsr2l
 18375  003AF6  C020  FFDA         	movff	monta_sd@dado+1,fsr2h
 18376  003AFA  0E1F               	movlw	low (_string_dado+31)
 18377  003AFC  2423               	addwf	monta_sd@i^0,w,c
 18378  003AFE  6EE1               	movwf	fsr1l,c
 18379  003B00  6AE2               	clrf	fsr1h,c
 18380  003B02  0E02               	movlw	high (_string_dado+31)
 18381  003B04  22E2               	addwfc	fsr1h,f,c
 18382  003B06  CFDF FFE7          	movff	indf2,indf1
 18383                           
 18384                           ;SDCard.c: 323: dado++;
 18385  003B0A  4A1F               	infsnz	monta_sd@dado^0,f,c
 18386  003B0C  2A20               	incf	(monta_sd@dado+1)^0,f,c
 18387  003B0E  2A23               	incf	monta_sd@i^0,f,c
 18388  003B10  0E0C               	movlw	12
 18389  003B12  6423               	cpfsgt	monta_sd@i^0,c
 18390  003B14  D7EE               	goto	l11713
 18391  003B16  0012               	return	
 18392  003B18                     l11721:
 18393                           
 18394                           ;SDCard.c: 329: for(i=0; i<size;i++)
 18395  003B18  0E00               	movlw	0
 18396  003B1A  6E23               	movwf	monta_sd@i^0,c
 18397  003B1C  D00F               	goto	l11729
 18398  003B1E                     l11723:
 18399                           
 18400                           ;SDCard.c: 330: {;SDCard.c: 331: string_dado.lo[i] = *dado;
 18401  003B1E  C01F  FFD9         	movff	monta_sd@dado,fsr2l
 18402  003B22  C020  FFDA         	movff	monta_sd@dado+1,fsr2h
 18403  003B26  0E1F               	movlw	low (_string_dado+31)
 18404  003B28  2423               	addwf	monta_sd@i^0,w,c
 18405  003B2A  6EE1               	movwf	fsr1l,c
 18406  003B2C  6AE2               	clrf	fsr1h,c
 18407  003B2E  0E02               	movlw	high (_string_dado+31)
 18408  003B30  22E2               	addwfc	fsr1h,f,c
 18409  003B32  CFDF FFE7          	movff	indf2,indf1
 18410                           
 18411                           ;SDCard.c: 332: dado++;
 18412  003B36  4A1F               	infsnz	monta_sd@dado^0,f,c
 18413  003B38  2A20               	incf	(monta_sd@dado+1)^0,f,c
 18414  003B3A  2A23               	incf	monta_sd@i^0,f,c
 18415  003B3C                     l11729:
 18416  003B3C  5022               	movf	monta_sd@size^0,w,c
 18417  003B3E  5C23               	subwf	monta_sd@i^0,w,c
 18418  003B40  B0D8               	btfsc	status,0,c
 18419  003B42  0012               	return	
 18420  003B44  D7EC               	goto	l11723
 18421  003B46                     l11733:
 18422  003B46  5021               	movf	monta_sd@index^0,w,c
 18423                           
 18424                           ; Switch size 1, requested type "simple"
 18425                           ; Number of cases is 5, Range of values is 0 to 4
 18426                           ; switch strategies available:
 18427                           ; Name         Instructions Cycles
 18428                           ; simple_byte           16     9 (average)
 18429                           ;	Chosen strategy is simple_byte
 18430  003B48  0A00               	xorlw	0	; case 0
 18431  003B4A  B4D8               	btfsc	status,2,c
 18432  003B4C  D791               	goto	l11665
 18433  003B4E  0A01               	xorlw	1	; case 1
 18434  003B50  B4D8               	btfsc	status,2,c
 18435  003B52  D7A3               	goto	l11679
 18436  003B54  0A03               	xorlw	3	; case 2
 18437  003B56  B4D8               	btfsc	status,2,c
 18438  003B58  D7B5               	goto	l11693
 18439  003B5A  0A01               	xorlw	1	; case 3
 18440  003B5C  B4D8               	btfsc	status,2,c
 18441  003B5E  D7C7               	goto	l11707
 18442  003B60  0A07               	xorlw	7	; case 4
 18443  003B62  A4D8               	btfss	status,2,c
 18444  003B64  0012               	return	
 18445  003B66  D7D8               	goto	l11721
 18446  003B68                     __end_of_monta_sd:
 18447                           	callstack 0
 18448                           
 18449 ;; *************** function _strlen *****************
 18450 ;; Defined at:
 18451 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
 18452 ;; Parameters:    Size  Location     Type
 18453 ;;  s               2   26[COMRAM] PTR const unsigned char 
 18454 ;;		 -> rawDate(7), rawLongitude(13), rawLatitude(13), rawTime(11), 
 18455 ;; Auto vars:     Size  Location     Type
 18456 ;;  cp              2   28[COMRAM] PTR const unsigned char 
 18457 ;;		 -> rawDate(7), rawLongitude(13), rawLatitude(13), rawTime(11), 
 18458 ;; Return value:  Size  Location     Type
 18459 ;;                  2   26[COMRAM] unsigned int 
 18460 ;; Registers used:
 18461 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18462 ;; Tracked objects:
 18463 ;;		On entry : 0/0
 18464 ;;		On exit  : 0/0
 18465 ;;		Unchanged: 0/0
 18466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18467 ;;      Params:         2       0       0       0       0       0       0       0       0
 18468 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18469 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18470 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18471 ;;Total ram usage:        4 bytes
 18472 ;; Hardware stack levels used: 1
 18473 ;; Hardware stack levels required when called: 3
 18474 ;; This function calls:
 18475 ;;		Nothing
 18476 ;; This function is called by:
 18477 ;;		_monta_sd
 18478 ;; This function uses a non-reentrant model
 18479 ;;
 18480                           
 18481                           	psect	text89
 18482  00500A                     __ptext89:
 18483                           	callstack 0
 18484  00500A                     _strlen:
 18485                           	callstack 25
 18486                           
 18487                           ;incstack = 0
 18488  00500A  C01B  F01D         	movff	strlen@s,strlen@cp
 18489  00500E  C01C  F01E         	movff	strlen@s+1,strlen@cp+1
 18490  005012  D002               	goto	l11193
 18491  005014                     l11191:
 18492  005014  4A1D               	infsnz	strlen@cp^0,f,c
 18493  005016  2A1E               	incf	(strlen@cp+1)^0,f,c
 18494  005018                     l11193:
 18495  005018  C01D  FFD9         	movff	strlen@cp,fsr2l
 18496  00501C  C01E  FFDA         	movff	strlen@cp+1,fsr2h
 18497  005020  50DF               	movf	indf2,w,c
 18498  005022  A4D8               	btfss	status,2,c
 18499  005024  D7F7               	goto	l11191
 18500  005026  501B               	movf	strlen@s^0,w,c
 18501  005028  5C1D               	subwf	strlen@cp^0,w,c
 18502  00502A  6E1B               	movwf	?_strlen^0,c
 18503  00502C  501C               	movf	(strlen@s+1)^0,w,c
 18504  00502E  581E               	subwfb	(strlen@cp+1)^0,w,c
 18505  005030  6E1C               	movwf	(?_strlen+1)^0,c
 18506  005032  0012               	return		;funcret
 18507  005034                     __end_of_strlen:
 18508                           	callstack 0
 18509                           
 18510 ;; *************** function _isr *****************
 18511 ;; Defined at:
 18512 ;;		line 116 in file "main.c"
 18513 ;; Parameters:    Size  Location     Type
 18514 ;;		None
 18515 ;; Auto vars:     Size  Location     Type
 18516 ;;  cont            1   25[COMRAM] unsigned char 
 18517 ;; Return value:  Size  Location     Type
 18518 ;;                  1    wreg      void 
 18519 ;; Registers used:
 18520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18521 ;; Tracked objects:
 18522 ;;		On entry : 0/0
 18523 ;;		On exit  : 0/0
 18524 ;;		Unchanged: 0/0
 18525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18526 ;;      Params:         0       0       0       0       0       0       0       0       0
 18527 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18528 ;;      Temps:         12       0       0       0       0       0       0       0       0
 18529 ;;      Totals:        13       0       0       0       0       0       0       0       0
 18530 ;;Total ram usage:       13 bytes
 18531 ;; Hardware stack levels used: 1
 18532 ;; Hardware stack levels required when called: 2
 18533 ;; This function calls:
 18534 ;;		_GPSRead
 18535 ;;		_recebe_dado_uart
 18536 ;;		i2_write_timer_zero
 18537 ;; This function is called by:
 18538 ;;		Interrupt level 2
 18539 ;; This function uses a non-reentrant model
 18540 ;;
 18541                           
 18542                           	psect	intcode
 18543  000008                     __pintcode:
 18544                           	callstack 0
 18545  000008                     _isr:
 18546                           	callstack 13
 18547                           
 18548                           ;incstack = 0
 18549  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 18550  00000A  EDA2  F01C         	call	int_func,f	;refresh shadow registers
 18551                           
 18552                           	psect	intcode_body
 18553  003944                     __pintcode_body:
 18554                           	callstack 13
 18555  003944                     int_func:
 18556                           	callstack 13
 18557  003944  0006               	pop		; remove dummy address from shadow register refresh
 18558  003946  CFE1 F010          	movff	fsr1l,??_isr+2
 18559  00394A  CFE2 F011          	movff	fsr1h,??_isr+3
 18560  00394E  CFD9 F012          	movff	fsr2l,??_isr+4
 18561  003952  CFDA F013          	movff	fsr2h,??_isr+5
 18562  003956  CFF3 F014          	movff	prodl,??_isr+6
 18563  00395A  CFF4 F015          	movff	prodh,??_isr+7
 18564  00395E  CFF6 F016          	movff	tblptrl,??_isr+8
 18565  003962  CFF7 F017          	movff	tblptrh,??_isr+9
 18566  003966  CFF8 F018          	movff	tblptru,??_isr+10
 18567  00396A  CFF5 F019          	movff	tablat,??_isr+11
 18568                           
 18569                           ;main.c: 118: unsigned char cont;;main.c: 121: if (PIE1bits.RCIE && PIR1bits.RCIF)
 18570  00396E  BA9D               	btfsc	157,5,c	;volatile
 18571  003970  AA9E               	btfss	158,5,c	;volatile
 18572  003972  D014               	goto	i2l12069
 18573                           
 18574                           ;main.c: 122: {;main.c: 123: PIR1bits.RCIF = 0;
 18575  003974  9A9E               	bcf	158,5,c	;volatile
 18576                           
 18577                           ;main.c: 124: data_uart_recebe = recebe_dado_uart();
 18578  003976  ECB7  F028         	call	_recebe_dado_uart	;wreg free
 18579  00397A  6E43               	movwf	_data_uart_recebe^0,c
 18580                           
 18581                           ;main.c: 125: GPSRead(data_uart_recebe);
 18582  00397C  5043               	movf	_data_uart_recebe^0,w,c
 18583  00397E  EC59  F010         	call	_GPSRead
 18584                           
 18585                           ;main.c: 126: PORTBbits.RB2 = !PORTBbits.RB2;
 18586  003982  B481               	btfsc	129,2,c	;volatile
 18587  003984  D003               	goto	i2u1577_40
 18588  003986  6A0E               	clrf	??_isr^0,c
 18589  003988  2A0E               	incf	??_isr^0,f,c
 18590  00398A  D001               	goto	i2u1578_48
 18591  00398C                     i2u1577_40:
 18592  00398C  6A0E               	clrf	??_isr^0,c
 18593  00398E                     i2u1578_48:
 18594  00398E  460E               	rlncf	??_isr^0,f,c
 18595  003990  460E               	rlncf	??_isr^0,f,c
 18596  003992  5081               	movf	129,w,c	;volatile
 18597  003994  180E               	xorwf	??_isr^0,w,c
 18598  003996  0BFB               	andlw	-5
 18599  003998  180E               	xorwf	??_isr^0,w,c
 18600  00399A  6E81               	movwf	129,c	;volatile
 18601  00399C                     i2l12069:
 18602                           
 18603                           ;main.c: 127: };main.c: 130: unsigned char cont;;main.c: 132: if (TMR0IF && T0IF)
 18604  00399C  B4F2               	btfsc	4082,2,c	;volatile
 18605  00399E  A4F2               	btfss	4082,2,c	;volatile
 18606  0039A0  D043               	goto	i2l12107
 18607                           
 18608                           ;main.c: 133: {;main.c: 134: INTCONbits.TMR0IF = 0;
 18609  0039A2  94F2               	bcf	242,2,c	;volatile
 18610                           
 18611                           ;main.c: 135: sinaliza_int_timer = 1;
 18612  0039A4  0E01               	movlw	1
 18613  0039A6  6E42               	movwf	_sinaliza_int_timer^0,c
 18614                           
 18615                           ;main.c: 137: for(cont= 0; cont<4;cont++)
 18616  0039A8  0E00               	movlw	0
 18617  0039AA  6E1A               	movwf	isr@cont^0,c
 18618  0039AC                     i2l12081:
 18619                           
 18620                           ;main.c: 138: {;main.c: 139: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
 18621  0039AC  501A               	movf	isr@cont^0,w,c
 18622  0039AE  0D02               	mullw	2
 18623  0039B0  0E00               	movlw	low _tempo_tarefa
 18624  0039B2  24F3               	addwf	243,w,c
 18625  0039B4  6ED9               	movwf	fsr2l,c
 18626  0039B6  0E01               	movlw	high _tempo_tarefa
 18627  0039B8  20F4               	addwfc	prodh,w,c
 18628  0039BA  6EDA               	movwf	fsr2h,c
 18629  0039BC  50DE               	movf	postinc2,w,c
 18630  0039BE  10DE               	iorwf	postinc2,w,c
 18631  0039C0  B4D8               	btfsc	status,2,c
 18632  0039C2  D00B               	goto	i2l12085
 18633  0039C4  501A               	movf	isr@cont^0,w,c
 18634  0039C6  0D02               	mullw	2
 18635  0039C8  0E00               	movlw	low _tempo_tarefa
 18636  0039CA  24F3               	addwf	243,w,c
 18637  0039CC  6ED9               	movwf	fsr2l,c
 18638  0039CE  0E01               	movlw	high _tempo_tarefa
 18639  0039D0  20F4               	addwfc	prodh,w,c
 18640  0039D2  6EDA               	movwf	fsr2h,c
 18641  0039D4  06DE               	decf	postinc2,f,c
 18642  0039D6  0E00               	movlw	0
 18643  0039D8  5ADD               	subwfb	postdec2,f,c
 18644  0039DA                     i2l12085:
 18645  0039DA  2A1A               	incf	isr@cont^0,f,c
 18646  0039DC  0E03               	movlw	3
 18647  0039DE  641A               	cpfsgt	isr@cont^0,c
 18648  0039E0  D7E5               	goto	i2l12081
 18649                           
 18650                           ;main.c: 141: };main.c: 142: if(time_sd > 0) time_sd--;
 18651  0039E2  5035               	movf	_time_sd^0,w,c
 18652  0039E4  1036               	iorwf	(_time_sd+1)^0,w,c
 18653  0039E6  B4D8               	btfsc	status,2,c
 18654  0039E8  D003               	goto	i2l12093
 18655  0039EA  0635               	decf	_time_sd^0,f,c
 18656  0039EC  A0D8               	btfss	status,0,c
 18657  0039EE  0636               	decf	(_time_sd+1)^0,f,c
 18658  0039F0                     i2l12093:
 18659                           
 18660                           ;main.c: 143: if(time_atualizacao > 0) time_atualizacao--;
 18661  0039F0  5033               	movf	_time_atualizacao^0,w,c
 18662  0039F2  1034               	iorwf	(_time_atualizacao+1)^0,w,c
 18663  0039F4  B4D8               	btfsc	status,2,c
 18664  0039F6  D003               	goto	i2l12097
 18665  0039F8  0633               	decf	_time_atualizacao^0,f,c
 18666  0039FA  A0D8               	btfss	status,0,c
 18667  0039FC  0634               	decf	(_time_atualizacao+1)^0,f,c
 18668  0039FE                     i2l12097:
 18669                           
 18670                           ;main.c: 144: if(tarefa_em_execucao == 1)
 18671  0039FE  0441               	decf	_tarefa_em_execucao^0,w,c	;volatile
 18672  003A00  A4D8               	btfss	status,2,c
 18673  003A02  D00C               	goto	i2l12105
 18674                           
 18675                           ;main.c: 145: {;main.c: 146: timeout_tarefa--;
 18676  003A04  0101               	movlb	1	; () banked
 18677  003A06  0722               	decf	_timeout_tarefa& (0+255),f,b
 18678  003A08  A0D8               	btfss	status,0,c
 18679  003A0A  0723               	decf	(_timeout_tarefa+1)& (0+255),f,b
 18680                           
 18681                           ; BSR set to: 1
 18682                           ;main.c: 147: if(!timeout_tarefa)
 18683  003A0C  5122               	movf	_timeout_tarefa& (0+255),w,b
 18684  003A0E  1123               	iorwf	(_timeout_tarefa+1)& (0+255),w,b
 18685  003A10  A4D8               	btfss	status,2,c
 18686  003A12  D004               	goto	i2l12105
 18687                           
 18688                           ; BSR set to: 1
 18689                           ;main.c: 148: {;main.c: 150: PCLATH = 0;
 18690  003A14  0E00               	movlw	0
 18691  003A16  6EFA               	movwf	250,c	;volatile
 18692                           
 18693                           ;main.c: 151: PCL = 0;
 18694  003A18  0E00               	movlw	0
 18695  003A1A  6EF9               	movwf	249,c	;volatile
 18696  003A1C                     i2l12105:
 18697                           
 18698                           ;main.c: 152: };main.c: 153: };main.c: 157: write_timer_zero(0x45);
 18699  003A1C  0E00               	movlw	0
 18700  003A1E  6E02               	movwf	(i2write_timer_zero@timer0+1)^0,c
 18701  003A20  0E45               	movlw	69
 18702  003A22  6E01               	movwf	i2write_timer_zero@timer0^0,c
 18703  003A24  EC0C  F029         	call	i2_write_timer_zero	;wreg free
 18704  003A28                     i2l12107:
 18705                           
 18706                           ;main.c: 158: };main.c: 160: if (INT0IF && INT0IE)
 18707  003A28  B2F2               	btfsc	4082,1,c	;volatile
 18708  003A2A  A8F2               	btfss	4082,4,c	;volatile
 18709  003A2C  D001               	goto	i2l109
 18710                           
 18711                           ;main.c: 161: {;main.c: 162: INT0IF = 0;
 18712  003A2E  92F2               	bcf	4082,1,c	;volatile
 18713  003A30                     i2l109:
 18714  003A30  C019  FFF5         	movff	??_isr+11,tablat
 18715  003A34  C018  FFF8         	movff	??_isr+10,tblptru
 18716  003A38  C017  FFF7         	movff	??_isr+9,tblptrh
 18717  003A3C  C016  FFF6         	movff	??_isr+8,tblptrl
 18718  003A40  C015  FFF4         	movff	??_isr+7,prodh
 18719  003A44  C014  FFF3         	movff	??_isr+6,prodl
 18720  003A48  C013  FFDA         	movff	??_isr+5,fsr2h
 18721  003A4C  C012  FFD9         	movff	??_isr+4,fsr2l
 18722  003A50  C011  FFE2         	movff	??_isr+3,fsr1h
 18723  003A54  C010  FFE1         	movff	??_isr+2,fsr1l
 18724  003A58  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 18725  003A5A  0011               	retfie		f
 18726  003A5C                     __end_of_isr:
 18727                           	callstack 0
 18728                           
 18729 ;; *************** function i2_write_timer_zero *****************
 18730 ;; Defined at:
 18731 ;;		line 138 in file "bibliotecas/hardware.c"
 18732 ;; Parameters:    Size  Location     Type
 18733 ;;  timer0          2    0[COMRAM] unsigned int 
 18734 ;; Auto vars:     Size  Location     Type
 18735 ;;		None
 18736 ;; Return value:  Size  Location     Type
 18737 ;;                  1    wreg      void 
 18738 ;; Registers used:
 18739 ;;		None
 18740 ;; Tracked objects:
 18741 ;;		On entry : 0/0
 18742 ;;		On exit  : 0/0
 18743 ;;		Unchanged: 0/0
 18744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18745 ;;      Params:         2       0       0       0       0       0       0       0       0
 18746 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18747 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18748 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18749 ;;Total ram usage:        2 bytes
 18750 ;; Hardware stack levels used: 1
 18751 ;; This function calls:
 18752 ;;		Nothing
 18753 ;; This function is called by:
 18754 ;;		_isr
 18755 ;; This function uses a non-reentrant model
 18756 ;;
 18757                           
 18758                           	psect	text91
 18759  005218                     __ptext91:
 18760                           	callstack 0
 18761  005218                     i2_write_timer_zero:
 18762                           	callstack 14
 18763                           
 18764                           ;hardware.c: 146: TMR0 = timer0;
 18765                           
 18766                           ;incstack = 0
 18767  005218  C001  FFD6         	movff	i2write_timer_zero@timer0,4054	;volatile
 18768  00521C  C002  FFD7         	movff	i2write_timer_zero@timer0+1,4055	;volatile
 18769  005220  0012               	return		;funcret
 18770  005222                     __end_ofi2_write_timer_zero:
 18771                           	callstack 0
 18772                           
 18773 ;; *************** function _recebe_dado_uart *****************
 18774 ;; Defined at:
 18775 ;;		line 138 in file "bibliotecas/uart.c"
 18776 ;; Parameters:    Size  Location     Type
 18777 ;;		None
 18778 ;; Auto vars:     Size  Location     Type
 18779 ;;		None
 18780 ;; Return value:  Size  Location     Type
 18781 ;;                  1    wreg      unsigned char 
 18782 ;; Registers used:
 18783 ;;		wreg, status,2
 18784 ;; Tracked objects:
 18785 ;;		On entry : 0/0
 18786 ;;		On exit  : 0/0
 18787 ;;		Unchanged: 0/0
 18788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18789 ;;      Params:         0       0       0       0       0       0       0       0       0
 18790 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18791 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18792 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18793 ;;Total ram usage:        0 bytes
 18794 ;; Hardware stack levels used: 1
 18795 ;; This function calls:
 18796 ;;		Nothing
 18797 ;; This function is called by:
 18798 ;;		_isr
 18799 ;; This function uses a non-reentrant model
 18800 ;;
 18801                           
 18802                           	psect	text92
 18803  00516E                     __ptext92:
 18804                           	callstack 0
 18805  00516E                     _recebe_dado_uart:
 18806                           	callstack 14
 18807                           
 18808                           ;uart.c: 140: while(RCIF==0);
 18809                           
 18810                           ;incstack = 0
 18811  00516E  AA9E               	btfss	3998,5,c	;volatile
 18812  005170  D7FE               	goto	_recebe_dado_uart
 18813                           
 18814                           ;uart.c: 141: if(RCSTAbits.OERR)
 18815  005172  A2AB               	btfss	171,1,c	;volatile
 18816  005174  D003               	goto	i2l8531
 18817                           
 18818                           ;uart.c: 142: {;uart.c: 143: CREN = 0;
 18819  005176  98AB               	bcf	4011,4,c	;volatile
 18820                           
 18821                           ;uart.c: 144: __nop();
 18822  005178  F000               	nop	
 18823                           
 18824                           ;uart.c: 145: CREN=1;
 18825  00517A  88AB               	bsf	4011,4,c	;volatile
 18826  00517C                     i2l8531:
 18827                           
 18828                           ;uart.c: 146: };uart.c: 147: return(RCREG);
 18829  00517C  50AE               	movf	174,w,c	;volatile
 18830  00517E  0012               	return		;funcret
 18831  005180                     __end_of_recebe_dado_uart:
 18832                           	callstack 0
 18833                           
 18834 ;; *************** function _GPSRead *****************
 18835 ;; Defined at:
 18836 ;;		line 468 in file "bibliotecas/GPS.c"
 18837 ;; Parameters:    Size  Location     Type
 18838 ;;  buff            1    wreg     unsigned char 
 18839 ;; Auto vars:     Size  Location     Type
 18840 ;;  buff            1   11[COMRAM] unsigned char 
 18841 ;;  c               1   12[COMRAM] unsigned char 
 18842 ;; Return value:  Size  Location     Type
 18843 ;;                  2    8[None  ] int 
 18844 ;; Registers used:
 18845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18846 ;; Tracked objects:
 18847 ;;		On entry : 0/0
 18848 ;;		On exit  : 0/0
 18849 ;;		Unchanged: 0/0
 18850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18851 ;;      Params:         0       0       0       0       0       0       0       0       0
 18852 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18853 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18854 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18855 ;;Total ram usage:        4 bytes
 18856 ;; Hardware stack levels used: 1
 18857 ;; Hardware stack levels required when called: 1
 18858 ;; This function calls:
 18859 ;;		_strcmp
 18860 ;;		_stringcpy
 18861 ;; This function is called by:
 18862 ;;		_isr
 18863 ;; This function uses a non-reentrant model
 18864 ;;
 18865                           
 18866                           	psect	text93
 18867  0020B2                     __ptext93:
 18868                           	callstack 0
 18869  0020B2                     _GPSRead:
 18870                           	callstack 13
 18871                           
 18872                           ;incstack = 0
 18873                           ;GPSRead@buff stored from wreg
 18874  0020B2  6E0C               	movwf	GPSRead@buff^0,c
 18875                           
 18876                           ;GPS.c: 470: uint8_t c = buff;
 18877  0020B4  C00C  F00D         	movff	GPSRead@buff,GPSRead@c
 18878                           
 18879                           ;GPS.c: 472: switch(c) {
 18880  0020B8  D155               	goto	i2l11855
 18881  0020BA                     i2l11737:
 18882                           
 18883                           ;GPS.c: 474: if(SentenceType == 1)
 18884  0020BA  043D               	decf	_SentenceType^0,w,c
 18885  0020BC  A4D8               	btfss	status,2,c
 18886  0020BE  D005               	goto	i2l11741
 18887                           
 18888                           ;GPS.c: 475: GPRMC_ok = 1;
 18889  0020C0  0E00               	movlw	0
 18890  0020C2  0101               	movlb	1	; () banked
 18891  0020C4  6F21               	movwf	(_GPRMC_ok+1)& (0+255),b
 18892  0020C6  0E01               	movlw	1
 18893  0020C8  6F20               	movwf	_GPRMC_ok& (0+255),b
 18894  0020CA                     i2l11741:
 18895                           
 18896                           ;GPS.c: 476: if(SentenceType == 2)
 18897  0020CA  0E02               	movlw	2
 18898  0020CC  183D               	xorwf	_SentenceType^0,w,c
 18899  0020CE  A4D8               	btfss	status,2,c
 18900  0020D0  D005               	goto	i2l11745
 18901                           
 18902                           ;GPS.c: 477: GPGGA_ok = 1;
 18903  0020D2  0E00               	movlw	0
 18904  0020D4  0101               	movlb	1	; () banked
 18905  0020D6  6F1F               	movwf	(_GPGGA_ok+1)& (0+255),b
 18906  0020D8  0E01               	movlw	1
 18907  0020DA  6F1E               	movwf	_GPGGA_ok& (0+255),b
 18908  0020DC                     i2l11745:
 18909                           
 18910                           ;GPS.c: 478: if(GPRMC_ok && GPGGA_ok) {
 18911  0020DC  0101               	movlb	1	; () banked
 18912  0020DE  5120               	movf	_GPRMC_ok& (0+255),w,b
 18913  0020E0  1121               	iorwf	(_GPRMC_ok+1)& (0+255),w,b
 18914  0020E2  B4D8               	btfsc	status,2,c
 18915  0020E4  0012               	return	
 18916                           
 18917                           ; BSR set to: 1
 18918  0020E6  511E               	movf	_GPGGA_ok& (0+255),w,b
 18919  0020E8  111F               	iorwf	(_GPGGA_ok+1)& (0+255),w,b
 18920  0020EA  B4D8               	btfsc	status,2,c
 18921  0020EC  0012               	return	
 18922                           
 18923                           ; BSR set to: 1
 18924                           ;GPS.c: 479: GPRMC_ok = GPGGA_ok = 0;
 18925  0020EE  0E00               	movlw	0
 18926  0020F0  6F1F               	movwf	(_GPGGA_ok+1)& (0+255),b
 18927  0020F2  0E00               	movlw	0
 18928  0020F4  6F1E               	movwf	_GPGGA_ok& (0+255),b
 18929  0020F6  C11E  F120         	movff	_GPGGA_ok,_GPRMC_ok
 18930  0020FA  C11F  F121         	movff	_GPGGA_ok+1,_GPRMC_ok+1
 18931  0020FE  0012               	return	
 18932  002100                     i2l11753:
 18933                           
 18934                           ;GPS.c: 485: Term = char_number = 0;
 18935  002100  0E00               	movlw	0
 18936  002102  6E3E               	movwf	_char_number^0,c
 18937  002104  C03E  F03C         	movff	_char_number,_Term
 18938                           
 18939                           ;GPS.c: 486: break;
 18940  002108  0012               	return	
 18941  00210A                     i2l11755:
 18942                           
 18943                           ;GPS.c: 489: buffer[char_number] = '\0';
 18944  00210A  0EC0               	movlw	low _buffer
 18945  00210C  243E               	addwf	_char_number^0,w,c
 18946  00210E  6ED9               	movwf	fsr2l,c
 18947  002110  6ADA               	clrf	fsr2h,c
 18948  002112  0E01               	movlw	high _buffer
 18949  002114  22DA               	addwfc	fsr2h,f,c
 18950  002116  0E00               	movlw	0
 18951  002118  6EDF               	movwf	indf2,c
 18952                           
 18953                           ;GPS.c: 490: if(Term == 0) {
 18954  00211A  503C               	movf	_Term^0,w,c
 18955  00211C  A4D8               	btfss	status,2,c
 18956  00211E  D030               	goto	i2l11771
 18957                           
 18958                           ;GPS.c: 491: stringcpy(buffer, sentence, 0);
 18959  002120  0EC0               	movlw	low _buffer
 18960  002122  6E01               	movwf	stringcpy@str1^0,c
 18961  002124  0E01               	movlw	high _buffer
 18962  002126  6E02               	movwf	(stringcpy@str1+1)^0,c
 18963  002128  0EE6               	movlw	low _sentence
 18964  00212A  6E03               	movwf	stringcpy@str2^0,c
 18965  00212C  0E01               	movlw	high _sentence
 18966  00212E  6E04               	movwf	(stringcpy@str2+1)^0,c
 18967  002130  0E00               	movlw	0
 18968  002132  6E06               	movwf	(stringcpy@dir+1)^0,c
 18969  002134  0E00               	movlw	0
 18970  002136  6E05               	movwf	stringcpy@dir^0,c
 18971  002138  EC87  F026         	call	_stringcpy	;wreg free
 18972                           
 18973                           ;GPS.c: 492: if(strcmp(sentence, "GPRMC") == 0)
 18974  00213C  0EE6               	movlw	low _sentence
 18975  00213E  6E01               	movwf	strcmp@s1^0,c
 18976  002140  0E01               	movlw	high _sentence
 18977  002142  6E02               	movwf	(strcmp@s1+1)^0,c
 18978  002144  0E60               	movlw	low STR_11
 18979  002146  6E03               	movwf	strcmp@s2^0,c
 18980  002148  0E62               	movlw	high STR_11
 18981  00214A  6E04               	movwf	(strcmp@s2+1)^0,c
 18982  00214C  EC3E  F026         	call	_strcmp	;wreg free
 18983  002150  5001               	movf	?_strcmp^0,w,c
 18984  002152  1002               	iorwf	(?_strcmp+1)^0,w,c
 18985  002154  A4D8               	btfss	status,2,c
 18986  002156  D002               	goto	i2l11765
 18987                           
 18988                           ;GPS.c: 493: SentenceType = 1;
 18989  002158  0E01               	movlw	1
 18990  00215A  D011               	goto	L7
 18991  00215C                     i2l11765:
 18992                           
 18993                           ;GPS.c: 494: else if(strcmp(sentence, "GPGGA") == 0)
 18994  00215C  0EE6               	movlw	low _sentence
 18995  00215E  6E01               	movwf	strcmp@s1^0,c
 18996  002160  0E01               	movlw	high _sentence
 18997  002162  6E02               	movwf	(strcmp@s1+1)^0,c
 18998  002164  0E5A               	movlw	low STR_12
 18999  002166  6E03               	movwf	strcmp@s2^0,c
 19000  002168  0E62               	movlw	high STR_12
 19001  00216A  6E04               	movwf	(strcmp@s2+1)^0,c
 19002  00216C  EC3E  F026         	call	_strcmp	;wreg free
 19003  002170  5001               	movf	?_strcmp^0,w,c
 19004  002172  1002               	iorwf	(?_strcmp+1)^0,w,c
 19005  002174  A4D8               	btfss	status,2,c
 19006  002176  D002               	goto	i2l11769
 19007                           
 19008                           ;GPS.c: 495: SentenceType = 2;
 19009  002178  0E02               	movlw	2
 19010  00217A  D001               	goto	L7
 19011  00217C                     i2l11769:
 19012                           
 19013                           ;GPS.c: 496: else;GPS.c: 497: SentenceType = 3;
 19014  00217C  0E03               	movlw	3
 19015  00217E                     L7:
 19016  00217E  6E3D               	movwf	_SentenceType^0,c
 19017  002180                     i2l11771:
 19018                           
 19019                           ;GPS.c: 498: };GPS.c: 501: if(Term == 1 && SentenceType == 1) {
 19020  002180  043C               	decf	_Term^0,w,c
 19021  002182  A4D8               	btfss	status,2,c
 19022  002184  D011               	goto	i2l11777
 19023  002186  043D               	decf	_SentenceType^0,w,c
 19024  002188  A4D8               	btfss	status,2,c
 19025  00218A  D00E               	goto	i2l11777
 19026                           
 19027                           ;GPS.c: 502: stringcpy(buffer, rawTime, 0);
 19028  00218C  0EC0               	movlw	low _buffer
 19029  00218E  6E01               	movwf	stringcpy@str1^0,c
 19030  002190  0E01               	movlw	high _buffer
 19031  002192  6E02               	movwf	(stringcpy@str1+1)^0,c
 19032  002194  0E69               	movlw	low _rawTime
 19033  002196  6E03               	movwf	stringcpy@str2^0,c
 19034  002198  0E02               	movlw	high _rawTime
 19035  00219A  6E04               	movwf	(stringcpy@str2+1)^0,c
 19036  00219C  0E00               	movlw	0
 19037  00219E  6E06               	movwf	(stringcpy@dir+1)^0,c
 19038  0021A0  0E00               	movlw	0
 19039  0021A2  6E05               	movwf	stringcpy@dir^0,c
 19040  0021A4  EC87  F026         	call	_stringcpy	;wreg free
 19041  0021A8                     i2l11777:
 19042                           
 19043                           ;GPS.c: 503: };GPS.c: 506: if((Term == 3) && (SentenceType == 1)) {
 19044  0021A8  0E03               	movlw	3
 19045  0021AA  183C               	xorwf	_Term^0,w,c
 19046  0021AC  A4D8               	btfss	status,2,c
 19047  0021AE  D011               	goto	i2l11783
 19048  0021B0  043D               	decf	_SentenceType^0,w,c
 19049  0021B2  A4D8               	btfss	status,2,c
 19050  0021B4  D00E               	goto	i2l11783
 19051                           
 19052                           ;GPS.c: 507: stringcpy(buffer, rawLatitude, 1);
 19053  0021B6  0EC0               	movlw	low _buffer
 19054  0021B8  6E01               	movwf	stringcpy@str1^0,c
 19055  0021BA  0E01               	movlw	high _buffer
 19056  0021BC  6E02               	movwf	(stringcpy@str1+1)^0,c
 19057  0021BE  0E5C               	movlw	low _rawLatitude
 19058  0021C0  6E03               	movwf	stringcpy@str2^0,c
 19059  0021C2  0E02               	movlw	high _rawLatitude
 19060  0021C4  6E04               	movwf	(stringcpy@str2+1)^0,c
 19061  0021C6  0E00               	movlw	0
 19062  0021C8  6E06               	movwf	(stringcpy@dir+1)^0,c
 19063  0021CA  0E01               	movlw	1
 19064  0021CC  6E05               	movwf	stringcpy@dir^0,c
 19065  0021CE  EC87  F026         	call	_stringcpy	;wreg free
 19066  0021D2                     i2l11783:
 19067                           
 19068                           ;GPS.c: 508: };GPS.c: 510: if((Term == 4) && (SentenceType == 1)) {
 19069  0021D2  0E04               	movlw	4
 19070  0021D4  183C               	xorwf	_Term^0,w,c
 19071  0021D6  A4D8               	btfss	status,2,c
 19072  0021D8  D00D               	goto	i2l11793
 19073  0021DA  043D               	decf	_SentenceType^0,w,c
 19074  0021DC  A4D8               	btfss	status,2,c
 19075  0021DE  D00A               	goto	i2l11793
 19076                           
 19077                           ;GPS.c: 511: if(buffer[0] == 'N')
 19078  0021E0  0E4E               	movlw	78
 19079  0021E2  0101               	movlb	1	; () banked
 19080  0021E4  19C0               	xorwf	_buffer& (0+255),w,b
 19081  0021E6  A4D8               	btfss	status,2,c
 19082  0021E8  D002               	goto	i2l11791
 19083                           
 19084                           ; BSR set to: 1
 19085                           ;GPS.c: 512: rawLatitude[0] = '0';
 19086  0021EA  0E30               	movlw	48
 19087  0021EC  D001               	goto	L8
 19088  0021EE                     i2l11791:
 19089                           
 19090                           ; BSR set to: 1
 19091                           ;GPS.c: 513: else;GPS.c: 514: rawLatitude[0] = '-';
 19092  0021EE  0E2D               	movlw	45
 19093  0021F0                     L8:
 19094  0021F0  0102               	movlb	2	; () banked
 19095  0021F2  6F5C               	movwf	_rawLatitude& (0+255),b
 19096  0021F4                     i2l11793:
 19097                           
 19098                           ;GPS.c: 515: };GPS.c: 518: if((Term == 5) && (SentenceType == 1)) {
 19099  0021F4  0E05               	movlw	5
 19100  0021F6  183C               	xorwf	_Term^0,w,c
 19101  0021F8  A4D8               	btfss	status,2,c
 19102  0021FA  D011               	goto	i2l11799
 19103  0021FC  043D               	decf	_SentenceType^0,w,c
 19104  0021FE  A4D8               	btfss	status,2,c
 19105  002200  D00E               	goto	i2l11799
 19106                           
 19107                           ;GPS.c: 519: stringcpy(buffer, rawLongitude, 1);
 19108  002202  0EC0               	movlw	low _buffer
 19109  002204  6E01               	movwf	stringcpy@str1^0,c
 19110  002206  0E01               	movlw	high _buffer
 19111  002208  6E02               	movwf	(stringcpy@str1+1)^0,c
 19112  00220A  0E4F               	movlw	low _rawLongitude
 19113  00220C  6E03               	movwf	stringcpy@str2^0,c
 19114  00220E  0E02               	movlw	high _rawLongitude
 19115  002210  6E04               	movwf	(stringcpy@str2+1)^0,c
 19116  002212  0E00               	movlw	0
 19117  002214  6E06               	movwf	(stringcpy@dir+1)^0,c
 19118  002216  0E01               	movlw	1
 19119  002218  6E05               	movwf	stringcpy@dir^0,c
 19120  00221A  EC87  F026         	call	_stringcpy	;wreg free
 19121  00221E                     i2l11799:
 19122                           
 19123                           ;GPS.c: 520: };GPS.c: 522: if((Term == 6) && (SentenceType == 1)) {
 19124  00221E  0E06               	movlw	6
 19125  002220  183C               	xorwf	_Term^0,w,c
 19126  002222  A4D8               	btfss	status,2,c
 19127  002224  D00D               	goto	i2l11809
 19128  002226  043D               	decf	_SentenceType^0,w,c
 19129  002228  A4D8               	btfss	status,2,c
 19130  00222A  D00A               	goto	i2l11809
 19131                           
 19132                           ;GPS.c: 523: if(buffer[0] == 'E')
 19133  00222C  0E45               	movlw	69
 19134  00222E  0101               	movlb	1	; () banked
 19135  002230  19C0               	xorwf	_buffer& (0+255),w,b
 19136  002232  A4D8               	btfss	status,2,c
 19137  002234  D002               	goto	i2l11807
 19138                           
 19139                           ; BSR set to: 1
 19140                           ;GPS.c: 524: rawLongitude[0] = '0';
 19141  002236  0E30               	movlw	48
 19142  002238  D001               	goto	L9
 19143  00223A                     i2l11807:
 19144                           
 19145                           ; BSR set to: 1
 19146                           ;GPS.c: 525: else;GPS.c: 526: rawLongitude[0] = '-';
 19147  00223A  0E2D               	movlw	45
 19148  00223C                     L9:
 19149  00223C  0102               	movlb	2	; () banked
 19150  00223E  6F4F               	movwf	_rawLongitude& (0+255),b
 19151  002240                     i2l11809:
 19152                           
 19153                           ;GPS.c: 527: };GPS.c: 530: if((Term == 7) && (SentenceType == 1)) {
 19154  002240  0E07               	movlw	7
 19155  002242  183C               	xorwf	_Term^0,w,c
 19156  002244  A4D8               	btfss	status,2,c
 19157  002246  D011               	goto	i2l11815
 19158  002248  043D               	decf	_SentenceType^0,w,c
 19159  00224A  A4D8               	btfss	status,2,c
 19160  00224C  D00E               	goto	i2l11815
 19161                           
 19162                           ;GPS.c: 531: stringcpy(buffer, rawSpeed, 0);
 19163  00224E  0EC0               	movlw	low _buffer
 19164  002250  6E01               	movwf	stringcpy@str1^0,c
 19165  002252  0E01               	movlw	high _buffer
 19166  002254  6E02               	movwf	(stringcpy@str1+1)^0,c
 19167  002256  0EE0               	movlw	low _rawSpeed
 19168  002258  6E03               	movwf	stringcpy@str2^0,c
 19169  00225A  0E01               	movlw	high _rawSpeed
 19170  00225C  6E04               	movwf	(stringcpy@str2+1)^0,c
 19171  00225E  0E00               	movlw	0
 19172  002260  6E06               	movwf	(stringcpy@dir+1)^0,c
 19173  002262  0E00               	movlw	0
 19174  002264  6E05               	movwf	stringcpy@dir^0,c
 19175  002266  EC87  F026         	call	_stringcpy	;wreg free
 19176  00226A                     i2l11815:
 19177                           
 19178                           ;GPS.c: 532: };GPS.c: 535: if((Term == 8) && (SentenceType == 1)) {
 19179  00226A  0E08               	movlw	8
 19180  00226C  183C               	xorwf	_Term^0,w,c
 19181  00226E  A4D8               	btfss	status,2,c
 19182  002270  D011               	goto	i2l11821
 19183  002272  043D               	decf	_SentenceType^0,w,c
 19184  002274  A4D8               	btfss	status,2,c
 19185  002276  D00E               	goto	i2l11821
 19186                           
 19187                           ;GPS.c: 536: stringcpy(buffer, rawCourse, 0);
 19188  002278  0EC0               	movlw	low _buffer
 19189  00227A  6E01               	movwf	stringcpy@str1^0,c
 19190  00227C  0E01               	movlw	high _buffer
 19191  00227E  6E02               	movwf	(stringcpy@str1+1)^0,c
 19192  002280  0EDA               	movlw	low _rawCourse
 19193  002282  6E03               	movwf	stringcpy@str2^0,c
 19194  002284  0E01               	movlw	high _rawCourse
 19195  002286  6E04               	movwf	(stringcpy@str2+1)^0,c
 19196  002288  0E00               	movlw	0
 19197  00228A  6E06               	movwf	(stringcpy@dir+1)^0,c
 19198  00228C  0E00               	movlw	0
 19199  00228E  6E05               	movwf	stringcpy@dir^0,c
 19200  002290  EC87  F026         	call	_stringcpy	;wreg free
 19201  002294                     i2l11821:
 19202                           
 19203                           ;GPS.c: 537: };GPS.c: 540: if(Term == 9 && SentenceType == 1) {
 19204  002294  0E09               	movlw	9
 19205  002296  183C               	xorwf	_Term^0,w,c
 19206  002298  A4D8               	btfss	status,2,c
 19207  00229A  D011               	goto	i2l11827
 19208  00229C  043D               	decf	_SentenceType^0,w,c
 19209  00229E  A4D8               	btfss	status,2,c
 19210  0022A0  D00E               	goto	i2l11827
 19211                           
 19212                           ;GPS.c: 541: stringcpy(buffer, rawDate, 0);
 19213  0022A2  0EC0               	movlw	low _buffer
 19214  0022A4  6E01               	movwf	stringcpy@str1^0,c
 19215  0022A6  0E01               	movlw	high _buffer
 19216  0022A8  6E02               	movwf	(stringcpy@str1+1)^0,c
 19217  0022AA  0ED3               	movlw	low _rawDate
 19218  0022AC  6E03               	movwf	stringcpy@str2^0,c
 19219  0022AE  0E01               	movlw	high _rawDate
 19220  0022B0  6E04               	movwf	(stringcpy@str2+1)^0,c
 19221  0022B2  0E00               	movlw	0
 19222  0022B4  6E06               	movwf	(stringcpy@dir+1)^0,c
 19223  0022B6  0E00               	movlw	0
 19224  0022B8  6E05               	movwf	stringcpy@dir^0,c
 19225  0022BA  EC87  F026         	call	_stringcpy	;wreg free
 19226  0022BE                     i2l11827:
 19227                           
 19228                           ;GPS.c: 542: };GPS.c: 545: if((Term == 7) && (SentenceType == 2)) {
 19229  0022BE  0E07               	movlw	7
 19230  0022C0  183C               	xorwf	_Term^0,w,c
 19231  0022C2  A4D8               	btfss	status,2,c
 19232  0022C4  D012               	goto	i2l11833
 19233  0022C6  0E02               	movlw	2
 19234  0022C8  183D               	xorwf	_SentenceType^0,w,c
 19235  0022CA  A4D8               	btfss	status,2,c
 19236  0022CC  D00E               	goto	i2l11833
 19237                           
 19238                           ;GPS.c: 546: stringcpy(buffer, rawSatellites, 0);
 19239  0022CE  0EC0               	movlw	low _buffer
 19240  0022D0  6E01               	movwf	stringcpy@str1^0,c
 19241  0022D2  0E01               	movlw	high _buffer
 19242  0022D4  6E02               	movwf	(stringcpy@str1+1)^0,c
 19243  0022D6  0EEC               	movlw	low _rawSatellites
 19244  0022D8  6E03               	movwf	stringcpy@str2^0,c
 19245  0022DA  0E01               	movlw	high _rawSatellites
 19246  0022DC  6E04               	movwf	(stringcpy@str2+1)^0,c
 19247  0022DE  0E00               	movlw	0
 19248  0022E0  6E06               	movwf	(stringcpy@dir+1)^0,c
 19249  0022E2  0E00               	movlw	0
 19250  0022E4  6E05               	movwf	stringcpy@dir^0,c
 19251  0022E6  EC87  F026         	call	_stringcpy	;wreg free
 19252  0022EA                     i2l11833:
 19253                           
 19254                           ;GPS.c: 547: };GPS.c: 550: if((Term == 9) && (SentenceType == 2)) {
 19255  0022EA  0E09               	movlw	9
 19256  0022EC  183C               	xorwf	_Term^0,w,c
 19257  0022EE  A4D8               	btfss	status,2,c
 19258  0022F0  D012               	goto	i2l11839
 19259  0022F2  0E02               	movlw	2
 19260  0022F4  183D               	xorwf	_SentenceType^0,w,c
 19261  0022F6  A4D8               	btfss	status,2,c
 19262  0022F8  D00E               	goto	i2l11839
 19263                           
 19264                           ;GPS.c: 551: stringcpy(buffer, rawAltitude, 0);
 19265  0022FA  0EC0               	movlw	low _buffer
 19266  0022FC  6E01               	movwf	stringcpy@str1^0,c
 19267  0022FE  0E01               	movlw	high _buffer
 19268  002300  6E02               	movwf	(stringcpy@str1+1)^0,c
 19269  002302  0ECC               	movlw	low _rawAltitude
 19270  002304  6E03               	movwf	stringcpy@str2^0,c
 19271  002306  0E01               	movlw	high _rawAltitude
 19272  002308  6E04               	movwf	(stringcpy@str2+1)^0,c
 19273  00230A  0E00               	movlw	0
 19274  00230C  6E06               	movwf	(stringcpy@dir+1)^0,c
 19275  00230E  0E00               	movlw	0
 19276  002310  6E05               	movwf	stringcpy@dir^0,c
 19277  002312  EC87  F026         	call	_stringcpy	;wreg free
 19278  002316                     i2l11839:
 19279                           
 19280                           ;GPS.c: 552: };GPS.c: 555: if((Term == 6) && (SentenceType == 2)) {
 19281  002316  0E06               	movlw	6
 19282  002318  183C               	xorwf	_Term^0,w,c
 19283  00231A  A4D8               	btfss	status,2,c
 19284  00231C  D015               	goto	i2l11845
 19285  00231E  0E02               	movlw	2
 19286  002320  183D               	xorwf	_SentenceType^0,w,c
 19287  002322  A4D8               	btfss	status,2,c
 19288  002324  D011               	goto	i2l11845
 19289                           
 19290                           ;GPS.c: 556: stringcpy(buffer, rawFix,0);
 19291  002326  0EC0               	movlw	low _buffer
 19292  002328  6E01               	movwf	stringcpy@str1^0,c
 19293  00232A  0E01               	movlw	high _buffer
 19294  00232C  6E02               	movwf	(stringcpy@str1+1)^0,c
 19295  00232E  503B               	movf	_rawFix^0,w,c
 19296  002330  6E0A               	movwf	??_GPSRead^0,c
 19297  002332  6A0B               	clrf	(??_GPSRead+1)^0,c
 19298  002334  C00A  F003         	movff	??_GPSRead,stringcpy@str2
 19299  002338  C00B  F004         	movff	??_GPSRead+1,stringcpy@str2+1
 19300  00233C  0E00               	movlw	0
 19301  00233E  6E06               	movwf	(stringcpy@dir+1)^0,c
 19302  002340  0E00               	movlw	0
 19303  002342  6E05               	movwf	stringcpy@dir^0,c
 19304  002344  EC87  F026         	call	_stringcpy	;wreg free
 19305  002348                     i2l11845:
 19306                           
 19307                           ;GPS.c: 558: };GPS.c: 559: Term++;
 19308  002348  2A3C               	incf	_Term^0,f,c
 19309                           
 19310                           ;GPS.c: 560: char_number = 0;
 19311  00234A  0E00               	movlw	0
 19312  00234C  6E3E               	movwf	_char_number^0,c
 19313                           
 19314                           ;GPS.c: 561: break;
 19315  00234E  0012               	return	
 19316  002350                     i2l11849:
 19317                           
 19318                           ;GPS.c: 564: buffer[char_number++] = c;
 19319  002350  0EC0               	movlw	low _buffer
 19320  002352  243E               	addwf	_char_number^0,w,c
 19321  002354  6ED9               	movwf	fsr2l,c
 19322  002356  6ADA               	clrf	fsr2h,c
 19323  002358  0E01               	movlw	high _buffer
 19324  00235A  22DA               	addwfc	fsr2h,f,c
 19325  00235C  C00D  FFDF         	movff	GPSRead@c,indf2
 19326  002360  2A3E               	incf	_char_number^0,f,c
 19327                           
 19328                           ;GPS.c: 565: break;
 19329  002362  0012               	return	
 19330  002364                     i2l11855:
 19331  002364  500D               	movf	GPSRead@c^0,w,c
 19332                           
 19333                           ; Switch size 1, requested type "simple"
 19334                           ; Number of cases is 3, Range of values is 13 to 44
 19335                           ; switch strategies available:
 19336                           ; Name         Instructions Cycles
 19337                           ; simple_byte           10     6 (average)
 19338                           ;	Chosen strategy is simple_byte
 19339  002366  0A0D               	xorlw	13	; case 13
 19340  002368  B4D8               	btfsc	status,2,c
 19341  00236A  D6A7               	goto	i2l11737
 19342  00236C  0A29               	xorlw	41	; case 36
 19343  00236E  B4D8               	btfsc	status,2,c
 19344  002370  D6C7               	goto	i2l11753
 19345  002372  0A08               	xorlw	8	; case 44
 19346  002374  B4D8               	btfsc	status,2,c
 19347  002376  D6C9               	goto	i2l11755
 19348  002378  D7EB               	goto	i2l11849
 19349  00237A                     __end_of_GPSRead:
 19350                           	callstack 0
 19351                           
 19352 ;; *************** function _stringcpy *****************
 19353 ;; Defined at:
 19354 ;;		line 459 in file "bibliotecas/GPS.c"
 19355 ;; Parameters:    Size  Location     Type
 19356 ;;  str1            2    0[COMRAM] PTR unsigned char 
 19357 ;;		 -> buffer(12), 
 19358 ;;  str2            2    2[COMRAM] PTR unsigned char 
 19359 ;;		 -> rawAltitude(7), rawSatellites(3), rawDate(7), rawCourse(6), 
 19360 ;;		 -> rawSpeed(6), rawLongitude(13), rawLatitude(13), rawTime(11), 
 19361 ;;		 -> sentence(6), RAM(2047), 
 19362 ;;  dir             2    4[COMRAM] int 
 19363 ;; Auto vars:     Size  Location     Type
 19364 ;;  chr             1    8[COMRAM] unsigned char 
 19365 ;; Return value:  Size  Location     Type
 19366 ;;                  1    wreg      void 
 19367 ;; Registers used:
 19368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 19369 ;; Tracked objects:
 19370 ;;		On entry : 0/0
 19371 ;;		On exit  : 0/0
 19372 ;;		Unchanged: 0/0
 19373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19374 ;;      Params:         6       0       0       0       0       0       0       0       0
 19375 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19376 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19377 ;;      Totals:         9       0       0       0       0       0       0       0       0
 19378 ;;Total ram usage:        9 bytes
 19379 ;; Hardware stack levels used: 1
 19380 ;; This function calls:
 19381 ;;		Nothing
 19382 ;; This function is called by:
 19383 ;;		_GPSRead
 19384 ;; This function uses a non-reentrant model
 19385 ;;
 19386                           
 19387                           	psect	text94
 19388  004D0E                     __ptext94:
 19389                           	callstack 0
 19390  004D0E                     _stringcpy:
 19391                           	callstack 13
 19392                           
 19393                           ;GPS.c: 461: uint8_t chr = 0;
 19394                           
 19395                           ;incstack = 0
 19396  004D0E  0E00               	movlw	0
 19397  004D10  6E09               	movwf	stringcpy@chr^0,c
 19398  004D12                     i2l11647:
 19399                           
 19400                           ;GPS.c: 464: str2[chr + dir] = str1[chr];
 19401  004D12  5009               	movf	stringcpy@chr^0,w,c
 19402  004D14  2401               	addwf	stringcpy@str1^0,w,c
 19403  004D16  6ED9               	movwf	fsr2l,c
 19404  004D18  0E00               	movlw	0
 19405  004D1A  2002               	addwfc	(stringcpy@str1+1)^0,w,c
 19406  004D1C  6EDA               	movwf	fsr2h,c
 19407  004D1E  5009               	movf	stringcpy@chr^0,w,c
 19408  004D20  2403               	addwf	stringcpy@str2^0,w,c
 19409  004D22  6E07               	movwf	??_stringcpy^0,c
 19410  004D24  0E00               	movlw	0
 19411  004D26  2004               	addwfc	(stringcpy@str2+1)^0,w,c
 19412  004D28  6E08               	movwf	(??_stringcpy+1)^0,c
 19413  004D2A  5005               	movf	stringcpy@dir^0,w,c
 19414  004D2C  2407               	addwf	??_stringcpy^0,w,c
 19415  004D2E  6EE1               	movwf	fsr1l,c
 19416  004D30  5006               	movf	(stringcpy@dir+1)^0,w,c
 19417  004D32  2008               	addwfc	(??_stringcpy+1)^0,w,c
 19418  004D34  6EE2               	movwf	fsr1h,c
 19419  004D36  CFDF FFE7          	movff	indf2,indf1
 19420                           
 19421                           ;GPS.c: 465: } while(str1[chr++] != '\0');
 19422  004D3A  2A09               	incf	stringcpy@chr^0,f,c
 19423  004D3C  0409               	decf	stringcpy@chr^0,w,c
 19424  004D3E  6E07               	movwf	??_stringcpy^0,c
 19425  004D40  5007               	movf	??_stringcpy^0,w,c
 19426  004D42  2401               	addwf	stringcpy@str1^0,w,c
 19427  004D44  6ED9               	movwf	fsr2l,c
 19428  004D46  0E00               	movlw	0
 19429  004D48  2002               	addwfc	(stringcpy@str1+1)^0,w,c
 19430  004D4A  6EDA               	movwf	fsr2h,c
 19431  004D4C  50DF               	movf	indf2,w,c
 19432  004D4E  B4D8               	btfsc	status,2,c
 19433  004D50  0012               	return	
 19434  004D52  D7DF               	goto	i2l11647
 19435  004D54                     __end_of_stringcpy:
 19436                           	callstack 0
 19437                           
 19438 ;; *************** function _strcmp *****************
 19439 ;; Defined at:
 19440 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcmp.c"
 19441 ;; Parameters:    Size  Location     Type
 19442 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 19443 ;;		 -> sentence(6), 
 19444 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 19445 ;;		 -> STR_12(6), STR_11(6), 
 19446 ;; Auto vars:     Size  Location     Type
 19447 ;;  r               1    6[COMRAM] char 
 19448 ;; Return value:  Size  Location     Type
 19449 ;;                  2    0[COMRAM] int 
 19450 ;; Registers used:
 19451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19452 ;; Tracked objects:
 19453 ;;		On entry : 0/0
 19454 ;;		On exit  : 0/0
 19455 ;;		Unchanged: 0/0
 19456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19457 ;;      Params:         4       0       0       0       0       0       0       0       0
 19458 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19459 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19460 ;;      Totals:         7       0       0       0       0       0       0       0       0
 19461 ;;Total ram usage:        7 bytes
 19462 ;; Hardware stack levels used: 1
 19463 ;; This function calls:
 19464 ;;		Nothing
 19465 ;; This function is called by:
 19466 ;;		_GPSRead
 19467 ;; This function uses a non-reentrant model
 19468 ;;
 19469                           
 19470                           	psect	text95
 19471  004C7C                     __ptext95:
 19472                           	callstack 0
 19473  004C7C                     _strcmp:
 19474                           	callstack 13
 19475                           
 19476                           ;incstack = 0
 19477  004C7C  D004               	goto	i2l11655
 19478  004C7E                     i2l11653:
 19479  004C7E  4A01               	infsnz	strcmp@s1^0,f,c
 19480  004C80  2A02               	incf	(strcmp@s1+1)^0,f,c
 19481  004C82  4A03               	infsnz	strcmp@s2^0,f,c
 19482  004C84  2A04               	incf	(strcmp@s2+1)^0,f,c
 19483  004C86                     i2l11655:
 19484  004C86  C003  FFF6         	movff	strcmp@s2,tblptrl
 19485  004C8A  C004  FFF7         	movff	strcmp@s2+1,tblptrh
 19486  004C8E                     	if	0	;tblptru may be non-zero
 19487  004C8E                     	endif
 19488  004C8E                     	if	0	;tblptru may be non-zero
 19489  004C8E                     	endif
 19490  004C8E  0008               	tblrd		*
 19491  004C90  CFF5 F005          	movff	tablat,??_strcmp
 19492  004C94  C001  FFD9         	movff	strcmp@s1,fsr2l
 19493  004C98  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 19494  004C9C  50DF               	movf	indf2,w,c
 19495  004C9E  6E06               	movwf	(??_strcmp+1)^0,c
 19496  004CA0  5005               	movf	??_strcmp^0,w,c
 19497  004CA2  5C06               	subwf	(??_strcmp+1)^0,w,c
 19498  004CA4  6E07               	movwf	strcmp@r^0,c
 19499  004CA6  5007               	movf	strcmp@r^0,w,c
 19500  004CA8  A4D8               	btfss	status,2,c
 19501  004CAA  D007               	goto	i2u1515_40
 19502  004CAC  C001  FFD9         	movff	strcmp@s1,fsr2l
 19503  004CB0  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 19504  004CB4  50DF               	movf	indf2,w,c
 19505  004CB6  A4D8               	btfss	status,2,c
 19506  004CB8  D7E2               	goto	i2l11653
 19507  004CBA                     i2u1515_40:
 19508  004CBA  5007               	movf	strcmp@r^0,w,c
 19509  004CBC  6E01               	movwf	?_strcmp^0,c
 19510  004CBE  6A02               	clrf	(?_strcmp+1)^0,c
 19511  004CC0  BE01               	btfsc	?_strcmp^0,7,c
 19512  004CC2  0602               	decf	(?_strcmp+1)^0,f,c
 19513  004CC4  0012               	return		;funcret
 19514  004CC6                     __end_of_strcmp:
 19515                           	callstack 0
 19516                           
 19517                           	psect	text96
 19518  000000                     __ptext96:
 19519                           	callstack 0
 19520                           
 19521                           	psect	rparam
 19522  0000                     
 19523                           	psect	temp
 19524  000045                     btemp:
 19525                           	callstack 0
 19526  000045                     	ds	1
 19527  0000                     int$flags	set	btemp
 19528  0000                     wtemp8	set	btemp+1
 19529  0000                     ttemp5	set	btemp+1
 19530  0000                     ttemp6	set	btemp+4
 19531  0000                     ttemp7	set	btemp+8
 19532                           
 19533                           	psect	idloc
 19534                           
 19535                           ;Config register IDLOC0 @ 0x200000
 19536                           ;	unspecified, using default values
 19537  200000                     	org	2097152
 19538  200000  FF                 	db	255
 19539                           
 19540                           ;Config register IDLOC1 @ 0x200001
 19541                           ;	unspecified, using default values
 19542  200001                     	org	2097153
 19543  200001  FF                 	db	255
 19544                           
 19545                           ;Config register IDLOC2 @ 0x200002
 19546                           ;	unspecified, using default values
 19547  200002                     	org	2097154
 19548  200002  FF                 	db	255
 19549                           
 19550                           ;Config register IDLOC3 @ 0x200003
 19551                           ;	unspecified, using default values
 19552  200003                     	org	2097155
 19553  200003  FF                 	db	255
 19554                           
 19555                           ;Config register IDLOC4 @ 0x200004
 19556                           ;	unspecified, using default values
 19557  200004                     	org	2097156
 19558  200004  FF                 	db	255
 19559                           
 19560                           ;Config register IDLOC5 @ 0x200005
 19561                           ;	unspecified, using default values
 19562  200005                     	org	2097157
 19563  200005  FF                 	db	255
 19564                           
 19565                           ;Config register IDLOC6 @ 0x200006
 19566                           ;	unspecified, using default values
 19567  200006                     	org	2097158
 19568  200006  FF                 	db	255
 19569                           
 19570                           ;Config register IDLOC7 @ 0x200007
 19571                           ;	unspecified, using default values
 19572  200007                     	org	2097159
 19573  200007  FF                 	db	255
 19574                           
 19575                           	psect	config
 19576                           
 19577                           ;Config register CONFIG1L @ 0x300000
 19578                           ;	unspecified, using default values
 19579                           ;	PLL Prescaler Selection bits
 19580                           ;	PLLDIV = 0x0, unprogrammed default
 19581                           ;	System Clock Postscaler Selection bits
 19582                           ;	CPUDIV = 0x0, unprogrammed default
 19583                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 19584                           ;	USBDIV = 0x0, unprogrammed default
 19585  300000                     	org	3145728
 19586  300000  00                 	db	0
 19587                           
 19588                           ;Config register CONFIG1H @ 0x300001
 19589                           ;	unspecified, using default values
 19590                           ;	Oscillator Selection bits
 19591                           ;	FOSC = 0x5, unprogrammed default
 19592                           ;	Fail-Safe Clock Monitor Enable bit
 19593                           ;	FCMEN = 0x0, unprogrammed default
 19594                           ;	Internal/External Oscillator Switchover bit
 19595                           ;	IESO = 0x0, unprogrammed default
 19596  300001                     	org	3145729
 19597  300001  05                 	db	5
 19598                           
 19599                           ;Config register CONFIG2L @ 0x300002
 19600                           ;	unspecified, using default values
 19601                           ;	Power-up Timer Enable bit
 19602                           ;	PWRT = 0x1, unprogrammed default
 19603                           ;	Brown-out Reset Enable bits
 19604                           ;	BOR = 0x3, unprogrammed default
 19605                           ;	Brown-out Reset Voltage bits
 19606                           ;	BORV = 0x3, unprogrammed default
 19607                           ;	USB Voltage Regulator Enable bit
 19608                           ;	VREGEN = 0x0, unprogrammed default
 19609  300002                     	org	3145730
 19610  300002  1F                 	db	31
 19611                           
 19612                           ;Config register CONFIG2H @ 0x300003
 19613                           ;	unspecified, using default values
 19614                           ;	Watchdog Timer Enable bit
 19615                           ;	WDT = 0x1, unprogrammed default
 19616                           ;	Watchdog Timer Postscale Select bits
 19617                           ;	WDTPS = 0xF, unprogrammed default
 19618  300003                     	org	3145731
 19619  300003  1F                 	db	31
 19620                           
 19621                           ; Padding undefined space
 19622  300004                     	org	3145732
 19623  300004  FF                 	db	255
 19624                           
 19625                           ;Config register CONFIG3H @ 0x300005
 19626                           ;	unspecified, using default values
 19627                           ;	CCP2 MUX bit
 19628                           ;	CCP2MX = 0x1, unprogrammed default
 19629                           ;	PORTB A/D Enable bit
 19630                           ;	PBADEN = 0x1, unprogrammed default
 19631                           ;	Low-Power Timer 1 Oscillator Enable bit
 19632                           ;	LPT1OSC = 0x0, unprogrammed default
 19633                           ;	MCLR Pin Enable bit
 19634                           ;	MCLRE = 0x1, unprogrammed default
 19635  300005                     	org	3145733
 19636  300005  83                 	db	131
 19637                           
 19638                           ;Config register CONFIG4L @ 0x300006
 19639                           ;	unspecified, using default values
 19640                           ;	Stack Full/Underflow Reset Enable bit
 19641                           ;	STVREN = 0x1, unprogrammed default
 19642                           ;	Single-Supply ICSP Enable bit
 19643                           ;	LVP = 0x1, unprogrammed default
 19644                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 19645                           ;	ICPRT = 0x0, unprogrammed default
 19646                           ;	Extended Instruction Set Enable bit
 19647                           ;	XINST = 0x0, unprogrammed default
 19648                           ;	Background Debugger Enable bit
 19649                           ;	DEBUG = 0x1, unprogrammed default
 19650  300006                     	org	3145734
 19651  300006  85                 	db	133
 19652                           
 19653                           ; Padding undefined space
 19654  300007                     	org	3145735
 19655  300007  FF                 	db	255
 19656                           
 19657                           ;Config register CONFIG5L @ 0x300008
 19658                           ;	unspecified, using default values
 19659                           ;	Code Protection bit
 19660                           ;	CP0 = 0x1, unprogrammed default
 19661                           ;	Code Protection bit
 19662                           ;	CP1 = 0x1, unprogrammed default
 19663                           ;	Code Protection bit
 19664                           ;	CP2 = 0x1, unprogrammed default
 19665                           ;	Code Protection bit
 19666                           ;	CP3 = 0x1, unprogrammed default
 19667  300008                     	org	3145736
 19668  300008  0F                 	db	15
 19669                           
 19670                           ;Config register CONFIG5H @ 0x300009
 19671                           ;	unspecified, using default values
 19672                           ;	Boot Block Code Protection bit
 19673                           ;	CPB = 0x1, unprogrammed default
 19674                           ;	Data EEPROM Code Protection bit
 19675                           ;	CPD = 0x1, unprogrammed default
 19676  300009                     	org	3145737
 19677  300009  C0                 	db	192
 19678                           
 19679                           ;Config register CONFIG6L @ 0x30000A
 19680                           ;	unspecified, using default values
 19681                           ;	Write Protection bit
 19682                           ;	WRT0 = 0x1, unprogrammed default
 19683                           ;	Write Protection bit
 19684                           ;	WRT1 = 0x1, unprogrammed default
 19685                           ;	Write Protection bit
 19686                           ;	WRT2 = 0x1, unprogrammed default
 19687                           ;	Write Protection bit
 19688                           ;	WRT3 = 0x1, unprogrammed default
 19689  30000A                     	org	3145738
 19690  30000A  0F                 	db	15
 19691                           
 19692                           ;Config register CONFIG6H @ 0x30000B
 19693                           ;	unspecified, using default values
 19694                           ;	Configuration Register Write Protection bit
 19695                           ;	WRTC = 0x1, unprogrammed default
 19696                           ;	Boot Block Write Protection bit
 19697                           ;	WRTB = 0x1, unprogrammed default
 19698                           ;	Data EEPROM Write Protection bit
 19699                           ;	WRTD = 0x1, unprogrammed default
 19700  30000B                     	org	3145739
 19701  30000B  E0                 	db	224
 19702                           
 19703                           ;Config register CONFIG7L @ 0x30000C
 19704                           ;	unspecified, using default values
 19705                           ;	Table Read Protection bit
 19706                           ;	EBTR0 = 0x1, unprogrammed default
 19707                           ;	Table Read Protection bit
 19708                           ;	EBTR1 = 0x1, unprogrammed default
 19709                           ;	Table Read Protection bit
 19710                           ;	EBTR2 = 0x1, unprogrammed default
 19711                           ;	Table Read Protection bit
 19712                           ;	EBTR3 = 0x1, unprogrammed default
 19713  30000C                     	org	3145740
 19714  30000C  0F                 	db	15
 19715                           
 19716                           ;Config register CONFIG7H @ 0x30000D
 19717                           ;	unspecified, using default values
 19718                           ;	Boot Block Table Read Protection bit
 19719                           ;	EBTRB = 0x1, unprogrammed default
 19720  30000D                     	org	3145741
 19721  30000D  40                 	db	64
 19722                           tosu	equ	0xFFF
 19723                           tosh	equ	0xFFE
 19724                           tosl	equ	0xFFD
 19725                           stkptr	equ	0xFFC
 19726                           pclatu	equ	0xFFB
 19727                           pclath	equ	0xFFA
 19728                           pcl	equ	0xFF9
 19729                           tblptru	equ	0xFF8
 19730                           tblptrh	equ	0xFF7
 19731                           tblptrl	equ	0xFF6
 19732                           tablat	equ	0xFF5
 19733                           prodh	equ	0xFF4
 19734                           prodl	equ	0xFF3
 19735                           indf0	equ	0xFEF
 19736                           postinc0	equ	0xFEE
 19737                           postdec0	equ	0xFED
 19738                           preinc0	equ	0xFEC
 19739                           plusw0	equ	0xFEB
 19740                           fsr0h	equ	0xFEA
 19741                           fsr0l	equ	0xFE9
 19742                           wreg	equ	0xFE8
 19743                           indf1	equ	0xFE7
 19744                           postinc1	equ	0xFE6
 19745                           postdec1	equ	0xFE5
 19746                           preinc1	equ	0xFE4
 19747                           plusw1	equ	0xFE3
 19748                           fsr1h	equ	0xFE2
 19749                           fsr1l	equ	0xFE1
 19750                           bsr	equ	0xFE0
 19751                           indf2	equ	0xFDF
 19752                           postinc2	equ	0xFDE
 19753                           postdec2	equ	0xFDD
 19754                           preinc2	equ	0xFDC
 19755                           plusw2	equ	0xFDB
 19756                           fsr2h	equ	0xFDA
 19757                           fsr2l	equ	0xFD9
 19758                           status	equ	0xFD8

Data Sizes:
    Strings     368
    Constant    34
    Data        130
    BSS         925
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      68
    BANK0           160    153     155
    BANK1           256      0     253
    BANK2           256      0     231
    BANK3           256     34      34
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    escalonador$3523	PTR FTN()void  size(2) Largest target is 1
		 -> troca_de_tela(), verifica_fence_externo(), disparo_gravacao(), verifica_dados_operacionais(), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 13
		 -> rawDate(BANK1[7]), rawLongitude(BANK2[13]), rawLatitude(BANK2[13]), rawTime(BANK2[11]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 13
		 -> rawDate(BANK1[7]), rawLongitude(BANK2[13]), rawLatitude(BANK2[13]), rawTime(BANK2[11]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_12(CODE[6]), STR_11(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 6
		 -> sentence(BANK1[6]), 

    memset@p1	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memset@p	PTR unsigned char  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memcpy@d1	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcmp@s2	PTR const void  size(2) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), STR_30(CODE[4]), 

    memcmp@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 128
		 -> poligono_ext.point_long_min(BANK1[6]), poligono_ext.fence_long_min(BANK1[6]), poligono_ext.point_lat_min(BANK1[6]), poligono_ext.fence_lat_min(BANK1[6]), 
		 -> poligono_ext.fence_lat_deg(BANK1[6]), poligono_ext.point_lat_deg(BANK1[6]), poligono_ext.fence_long_deg(BANK1[6]), poligono_ext.point_long_deg(BANK1[6]), 
		 -> poligono_ext(BANK1[128]), 

    fprintf@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fprintf@str	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_19(CODE[35]), 

    fprintf@arp	PTR void [1] size(1) Largest target is 2
		 -> ?_fprintf(BANK0[2]), 

    fputs@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fputs@str	PTR const unsigned char  size(2) Largest target is 59
		 -> fprintf@s(BANK3[16]), ?_fprintf(BANK0[2]), STR_24(CODE[16]), STR_23(CODE[27]), 
		 -> STR_22(CODE[17]), STR_21(CODE[16]), STR_20(CODE[16]), string_dado(BANK2[59]), 

    fputc@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    sp__fgets	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_readdir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_opendir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@bw	PTR unsigned int  size(1) Largest target is 2
		 -> fputc@bw(BANK0[2]), 

    f_write@buff	PTR const void  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_write@wbuff	PTR const unsigned char  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_read@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__memcpy	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    f_open@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 59
		 -> NULL(NULL[0]), STR_25(CODE[13]), string_dado.data(BANK2[7]), string_dado(BANK2[59]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> fs(BIGRAM[544]), 

    validate@fs	PTR const struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> f_opendir@path(COMRAM[2]), f_open@path(BANK0[2]), 

    auto_mount@p	PTR const unsigned char  size(2) Largest target is 59
		 -> NULL(NULL[0]), STR_25(CODE[13]), string_dado.data(BANK2[7]), string_dado(BANK2[59]), 

    check_fs@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_open@dir(BANK0[2]), 

    reserve_direntry@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    reserve_direntry@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@fn	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    trace_path@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_opendir@dir(COMRAM[2]), f_open@dir(BANK0[2]), 

    trace_path@path	PTR const unsigned char  size(2) Largest target is 59
		 -> NULL(NULL[0]), STR_25(CODE[13]), string_dado.data(BANK2[7]), string_dado(BANK2[59]), 

    trace_path@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    trace_path@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> trace_path@path(BANK0[2]), 

    sp__memset	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@dirname	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    S1841_DIR_E$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    clust2sect@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    create_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    remove_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@p	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    get_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sync@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    FatFs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    move_window@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    escreve_frase_ram_lcd@buffer	PTR unsigned char  size(2) Largest target is 2047
		 -> NULL(NULL[0]), escreve_inteiro_lcd@texto(BANK0[7]), STR_29(CODE[11]), STR_28(CODE[10]), 
		 -> STR_27(CODE[16]), STR_26(CODE[11]), STR_18(CODE[9]), STR_17(CODE[10]), 
		 -> STR_16(CODE[10]), STR_15(CODE[14]), STR_14(CODE[21]), STR_13(CODE[15]), 
		 -> rawLongitude(BANK2[13]), rawLatitude(BANK2[13]), STR_10(CODE[8]), STR_9(CODE[17]), 
		 -> STR_8(CODE[8]), STR_7(CODE[16]), STR_6(CODE[9]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[5]), STR_2(CODE[5]), RAM(DATA[2047]), 
		 -> STR_1(CODE[14]), mensagem_inicial@msg_dois(BANK0[17]), mensagem_inicial@msg_linha_um(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    sdc_disk_write@p_buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    sdc_disk_read@p_buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    data_buff	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    monta_sd@dado	PTR unsigned char  size(2) Largest target is 13
		 -> rawDate(BANK1[7]), rawLongitude(BANK2[13]), rawLatitude(BANK2[13]), rawTime(BANK2[11]), 

    sp__leitura_sdcard	PTR unsigned char  size(2) Largest target is 20
		 -> dado_arquivo(BANK2[20]), 

    filename	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S591_FIL$dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    S591_FIL$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    stringcpy@str1	PTR unsigned char  size(2) Largest target is 12
		 -> buffer(BANK1[12]), 

    stringcpy@str2	PTR unsigned char  size(2) Largest target is 2047
		 -> rawAltitude(BANK1[7]), rawSatellites(BANK1[3]), rawDate(BANK1[7]), rawCourse(BANK1[6]), 
		 -> rawSpeed(BANK1[6]), rawLongitude(BANK2[13]), rawLatitude(BANK2[13]), rawTime(BANK2[11]), 
		 -> sentence(BANK1[6]), RAM(DATA[2047]), 

    sp__Longitude	PTR unsigned char  size(2) Largest target is 13
		 -> rawLongitude(BANK2[13]), 

    point_buff_gps_long	PTR unsigned char  size(2) Largest target is 13
		 -> NULL(NULL[0]), rawLongitude(BANK2[13]), 

    sp__Latitude	PTR unsigned char  size(2) Largest target is 13
		 -> rawLatitude(BANK2[13]), 

    point_buff_gps_lat	PTR unsigned char  size(2) Largest target is 13
		 -> NULL(NULL[0]), rawLatitude(BANK2[13]), 

    p_tarefas	PTR FTN()void [4] size(2) Largest target is 1
		 -> troca_de_tela(), verifica_fence_externo(), disparo_gravacao(), verifica_dados_operacionais(), 


Critical Paths under _main in COMRAM

    _mensagem_inicial->_posicao_cursor_lcd
    _init_lcd->_escreve_cmd_lcd
    _config_timer_zero->_write_timer_zero
    _verifica_fence_externo->_escreve_inteiro_lcd
    _itoa->_utoa
    _utoa->___lwdiv
    _atoi->___wmul
    _troca_de_tela->_posicao_cursor_lcd
    _escreve_cmd_lcd->_delay
    _inicializa_uart->_configura_baudrate_uart
    _configura_baudrate_uart->___aldiv
    _f_write->_disk_write
    _make_dirfile->_memset
    _reserve_direntry->_disk_write
    _clust2sect->___lmul
    _sdc_disk_initialize->_sdc_reset
    _sdc_reset->_command
    _posicao_cursor_lcd->_endereco_cursor_lcd
    _endereco_cursor_lcd->_delay
    _escreve_frase_ram_lcd->_escreve_caractere_lcd
    _escreve_caractere_lcd->_delay
    _check_fs->_disk_read
    _validate->_disk_status
    _disk_status->_sdc_disk_status
    _move_window->_disk_read
    _move_window->_disk_write
    _disk_write->_sdc_disk_write
    _sdc_disk_write->_command
    _disk_read->_sdc_disk_read
    _sdc_disk_read->_command
    _proceed->_escreve_SPI
    _command->_dummy_clocks
    _command->_wait_ready
    _dados_gps_to_sd->_monta_sd
    _monta_sd->_strlen

Critical Paths under _isr in COMRAM

    _isr->_GPSRead
    _GPSRead->_stringcpy

Critical Paths under _main in BANK0

    _main->_escalonador
    _verifica_fence_externo->_escreve_inteiro_lcd
    _escreve_inteiro_lcd->_itoa
    _escrita_sdcard->_fprintf
    _inicializa_uart->_configura_baudrate_uart
    _fprintf->_fputs
    _fputs->_fputc
    _fputc->_f_write
    _f_write->_create_chain
    _f_open->_reserve_direntry
    _trace_path->_next_dir_entry
    _reserve_direntry->_create_chain
    _next_dir_entry->_get_cluster
    _remove_chain->_put_cluster
    _auto_mount->_check_fs
    _disk_initialize->_sdc_disk_initialize
    _check_fs->_disk_read
    _f_lseek->_create_chain
    _create_chain->_put_cluster
    _put_cluster->_move_window
    _get_cluster->_move_window
    _f_close->_f_sync
    _f_sync->_sync
    _sync->_move_window
    _move_window->_disk_read
    _disk_write->_sdc_disk_write
    _disk_read->_sdc_disk_read

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    _escrita_sdcard->_fprintf

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  450803
                    _dados_gps_to_sd
                        _escalonador
                 _inicializa_tarefas
                    _inicializa_uart
                      _init_hardware
                           _init_lcd
                   _mensagem_inicial
 ---------------------------------------------------------------------------------
 (1) _mensagem_inicial                                    36    36      0    6763
                                             32 COMRAM     2     2      0
                                              0 BANK0     34    34      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             1     1      0     613
                                             29 COMRAM     1     1      0
                              _delay
                    _escreve_cmd_lcd
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     148
                  _config_timer_dois
                  _config_timer_zero
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     148
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     2     0      2     148
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _config_timer_dois                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0  441052
                                            150 BANK0      3     3      0
                   _disparo_gravacao *
                      _troca_de_tela *
        _verifica_dados_operacionais *
             _verifica_fence_externo *
 ---------------------------------------------------------------------------------
 (2) _verifica_fence_externo                             135   135      0   19198
                                             12 BANK0    131   131      0
                           _Latitude
                          _Longitude
                               _atoi
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_inteiro_lcd                                  9     7      2    6935
                                             41 COMRAM     2     0      2
                                              5 BANK0      7     7      0
              _escreve_frase_ram_lcd
                               _itoa
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 6     1      5    3556
                                              0 BANK0      5     0      5
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 8     3      5    2843
                                             33 COMRAM     8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     972
                                             26 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1161
                                             26 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    2514
                                             32 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                             26 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _verifica_dados_operacionais                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _troca_de_tela                                        2     2      0    6683
                                             32 COMRAM     2     2      0
                           _Latitude
                          _Longitude
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                                _fix
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (2) _escreve_cmd_lcd                                      1     1      0     477
                                             28 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _Longitude                                            2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _Latitude                                             2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _disparo_gravacao                                     0     0      0  414948
                     _escrita_sdcard
 ---------------------------------------------------------------------------------
 (3) _escrita_sdcard                                       2     2      0  414948
                        _desliga_SPI
                       _desliga_uart
                            _f_close
                            _f_lseek
                            _f_mount
                             _f_open
                                _fix
                            _fprintf
                     _inicializa_SPI
                    _inicializa_uart
 ---------------------------------------------------------------------------------
 (1) _inicializa_uart                                      0     0      0     917
            _configura_baudrate_uart
 ---------------------------------------------------------------------------------
 (2) _configura_baudrate_uart                             14    10      4     917
                                             40 COMRAM     2     2      0
                                              0 BANK0     12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     604
                                             26 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) _inicializa_SPI                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _fprintf                                             56    36     20  128186
                                            128 BANK0     22     2     20
                                              0 BANK3     34    34      0
                            ___lldiv
                            ___llmod
                             ___wmul
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (5) _fputs                                                7     3      4   61783
                                            121 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                7     3      4   61290
                                            114 BANK0      7     3      4
                            _f_write
 ---------------------------------------------------------------------------------
 (7) _f_write                                             30    24      6   60478
                                             84 BANK0     30    24      6
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memcpy
                        _move_window
                           _validate
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     412
                                             26 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) _fix                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _f_open                                              44    39      5  200498
                                            102 BANK0     44    39      5
                         _auto_mount
                        _get_fattime
                             _memcpy
                             _memset
                        _move_window
                       _remove_chain
                   _reserve_direntry
                         _trace_path
 ---------------------------------------------------------------------------------
 (5) _trace_path                                          20    15      5   38946
                                             79 BANK0     20    15      5
                         _clust2sect
                       _make_dirfile
                             _memcmp
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (6) _make_dirfile                                        11     9      2    2753
                                             34 COMRAM     4     2      2
                                              0 BANK0      7     7      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _reserve_direntry                                    18    16      2   76762
                                             84 BANK0     18    16      2
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memset
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (6) _next_dir_entry                                      12    11      1   18602
                                             67 BANK0     12    11      1
                         _clust2sect
                        _get_cluster
 ---------------------------------------------------------------------------------
 (8) _clust2sect                                          11     7      4    1435
                                             38 COMRAM     4     0      4
                                              0 BANK0      7     7      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _remove_chain                                         8     6      2   33394
                                             70 BANK0      8     6      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (8) _memcpy                                              11     5      6     970
                                             26 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _auto_mount                                          46    44      2   32169
                                             33 BANK0     46    44      2
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                             _memset
 ---------------------------------------------------------------------------------
 (7) _memset                                               8     2      6    1217
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) _disk_initialize                                      4     4      0   20654
                                             11 BANK0      2     2      0
                _sdc_disk_initialize
 ---------------------------------------------------------------------------------
 (7) _sdc_disk_initialize                                 13    13      0   20524
                                              0 BANK0     11    11      0
                            _command
                       _dummy_clocks
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
                          _sdc_reset
 ---------------------------------------------------------------------------------
 (8) _sdc_reset                                           20    20      0    9828
                                             38 COMRAM     5     5      0
                            _command
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (2) _posicao_cursor_lcd                                   3     2      1    3267
                                             29 COMRAM     3     2      1
                _endereco_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _endereco_cursor_lcd                                  1     1      0     353
                                             28 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _escreve_frase_ram_lcd                                2     0      2    2939
                                             29 COMRAM     2     0      2
              _escreve_caractere_lcd
                                _fix (ARG)
 ---------------------------------------------------------------------------------
 (3) _escreve_caractere_lcd                                1     1      0     384
                                             28 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     2      0     136
                                             26 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _check_fs                                             8     4      4    6483
                                             25 BANK0      8     4      4
                          _disk_read
                             _memcmp
 ---------------------------------------------------------------------------------
 (6) _memcmp                                               8     2      6     568
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (9) ___lmul                                              12     4      8     516
                                             26 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _f_mount                                              3     1      2     290
                                             26 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _f_lseek                                             33    27      6   54910
                                             84 BANK0     33    27      6
                            ___lldiv
                       _create_chain
                        _get_cluster
                           _validate
 ---------------------------------------------------------------------------------
 (8) _create_chain                                        14    12      2   34457
                                             70 BANK0     14    12      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (9) _put_cluster                                         24    20      4   16663
                                             46 BANK0     24    20      4
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _get_cluster                                         21    19      2   16353
                                             46 BANK0     21    19      2
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1392
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     901
                                             26 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _f_close                                              3     1      2   30147
                                             57 BANK0      3     1      2
                             _f_sync
 ---------------------------------------------------------------------------------
 (5) _f_sync                                               9     7      2   29814
                                             48 BANK0      9     7      2
                        _get_fattime
                        _move_window
                               _sync
                           _validate
 ---------------------------------------------------------------------------------
 (8) _validate                                             6     2      4    1178
                                             29 COMRAM     6     2      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (9) _disk_status                                          4     4      0     226
                                             27 COMRAM     2     2      0
                    _sdc_disk_status
 ---------------------------------------------------------------------------------
 (10) _sdc_disk_status                                     4     4      0      34
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _sync                                                 2     2      0   14103
                                             46 BANK0      2     2      0
                         _disk_ioctl
                        _move_window
 ---------------------------------------------------------------------------------
 (8) _move_window                                         21    17      4   13765
                                             25 BANK0     21    17      4
                          _disk_read
                         _disk_write
 ---------------------------------------------------------------------------------
 (9) _disk_write                                          12     5      7    6087
                                             42 COMRAM     1     1      0
                                             13 BANK0     11     4      7
                     _sdc_disk_write
 ---------------------------------------------------------------------------------
 (10) _sdc_disk_write                                     19    12      7    4623
                                             38 COMRAM     4     4      0
                                              0 BANK0     13     6      7
                            _command
                       _dummy_clocks
                        _escreve_SPI
                        _leitura_SPI
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (9) _disk_read                                           12     5      7    5608
                                             42 COMRAM     1     1      0
                                             14 BANK0     11     4      7
                      _sdc_disk_read
 ---------------------------------------------------------------------------------
 (10) _sdc_disk_read                                      24    17      7    4459
                                             38 COMRAM     4     4      0
                                              0 BANK0     14     7      7
                            _command
                       _dummy_clocks
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (11) _response                                            1     1      0      34
                                             26 COMRAM     1     1      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (11) _proceed                                             0     0      0      34
                        _escreve_SPI
 ---------------------------------------------------------------------------------
 (11) _command                                             7     2      5    3412
                                             31 COMRAM     7     2      5
                       _dummy_clocks
                        _escreve_SPI
                         _wait_ready
 ---------------------------------------------------------------------------------
 (12) _wait_ready                                         15    15      0      99
                                             26 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (12) _escreve_SPI                                         2     2      0      34
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _dummy_clocks                                        5     5      0      68
                                             26 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (12) _leitura_SPI                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _disk_ioctl                                           7     4      3     304
                                             26 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (5) _get_fattime                                         51    47      4     201
                                             26 COMRAM    13     9      4
                                              0 BANK0     38    38      0
 ---------------------------------------------------------------------------------
 (4) _desliga_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _desliga_SPI                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dados_gps_to_sd                                      0     0      0    1310
                           _monta_sd
 ---------------------------------------------------------------------------------
 (2) _monta_sd                                             5     3      2    1310
                                             30 COMRAM     5     3      2
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     220
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _isr                                                13    13      0    3687
                                             13 COMRAM    13    13      0
                            _GPSRead
                   _recebe_dado_uart
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (17) i2_write_timer_zero                                  2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _recebe_dado_uart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _GPSRead                                             4     4      0    3509
                                              9 COMRAM     4     4      0
                             _strcmp
                          _stringcpy
 ---------------------------------------------------------------------------------
 (18) _stringcpy                                           9     3      6    2920
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (18) _strcmp                                              7     3      4     493
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dados_gps_to_sd
     _monta_sd
       _strlen
   _escalonador
     _disparo_gravacao *
       _escrita_sdcard
         _desliga_SPI
         _desliga_uart
         _f_close
           _f_sync
             _get_fattime
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                   _dummy_clocks
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                   _response
             _sync
               _disk_ioctl
               _move_window
             _validate
               _disk_status
                 _sdc_disk_status
         _f_lseek
           ___lldiv
           _create_chain
             _get_cluster
               ___wmul
               _move_window
             _put_cluster
               ___wmul
               _move_window
           _get_cluster
           _validate
         _f_mount
         _f_open
           _auto_mount
             ___lldiv
             ___lmul
             _check_fs
               _disk_read
               _memcmp
             _disk_initialize
               _sdc_disk_initialize
                 _command
                 _dummy_clocks
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                   _fix (ARG)
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _proceed
                 _response
                 _sdc_reset
                   _command
                   _escreve_frase_ram_lcd
                   _posicao_cursor_lcd
                   _proceed
                   _response
             _disk_status
             _memset
           _get_fattime
           _memcpy
           _memset
           _move_window
           _remove_chain
             _get_cluster
             _put_cluster
           _reserve_direntry
             _clust2sect
               ___lmul
             _create_chain
             _disk_write
             _memset
             _move_window
             _next_dir_entry
               _clust2sect
               _get_cluster
           _trace_path
             _clust2sect
             _make_dirfile
               _memset
             _memcmp
             _move_window
             _next_dir_entry
         _fix
         _fprintf
           ___lldiv
           ___llmod
           ___wmul
           _fputc
             _f_write
               _clust2sect
               _create_chain
               _disk_write
               _memcpy
               _move_window
               _validate
           _fputs
             _fputc
         _inicializa_SPI
         _inicializa_uart
           _configura_baudrate_uart
             ___aldiv
     _troca_de_tela *
       _Latitude
       _Longitude
       _escreve_cmd_lcd
         _delay
       _escreve_frase_ram_lcd
       _fix
       _posicao_cursor_lcd
     _verifica_dados_operacionais *
     _verifica_fence_externo *
       _Latitude
       _Longitude
       _atoi
         ___wmul
         _isdigit
       _escreve_frase_ram_lcd
       _escreve_inteiro_lcd
         _escreve_frase_ram_lcd
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
       _posicao_cursor_lcd
   _inicializa_tarefas
   _inicializa_uart
   _init_hardware
     _config_timer_dois
     _config_timer_zero
       _write_timer_zero
     _init_interrupt
     _init_oscilador
     _init_ports
   _init_lcd
     _delay
     _escreve_cmd_lcd
   _mensagem_inicial
     _escreve_cmd_lcd
     _escreve_frase_ram_lcd
     _posicao_cursor_lcd

 _isr (ROOT)
   _GPSRead
     _strcmp
     _stringcpy
   _recebe_dado_uart
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     220      21       26.6%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     22      22      11       13.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     99      9B       5       96.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      44       1       72.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2E5      20        0.0%
DATA                 0      0     505       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Apr 23 12:42:31 2022

                    next_dir_entry@idx 00AD               __end_of_mensagem_inicial 4752  
                  next_dir_entry@clust 00AB                            _SSPSTATbits 000FC7  
                     ??_init_interrupt 001B           __size_of_escreve_inteiro_lcd 0036  
                                   _fs 0322                    ___wmul@multiplicand 001D  
                          _put_cluster 285E                       disk_write@sector 006F  
                         ?_escalonador 0001                         create_chain@fs 00AC  
                     disk_write@result 0075                       ?_inicializa_uart 0001  
               __size_of_troca_de_tela 0264                                    l225 0734  
                                  l235 079E                                    l219 06E8  
                                  l418 4E36                                    l434 4A52  
                                  l612 50A2                                    l541 519A  
                                  l535 51E6                                    l199 063C  
                                  l800 4828                                    l801 482A  
                                  l725 50E0                                    l741 44F0  
                                  l750 4526                                    l742 44F2  
                                  l727 50E6                                    l743 4506  
                                  l735 44D2                                    l744 4508  
                                  l761 48CE                                    l745 4510  
                                  l737 44DC                                    l770 4904  
                                  l762 48D0                                    l746 4512  
                                  l763 48E4                                    l747 451A  
                                  l739 44E6                                    l764 48E6  
                                  l748 451C                                    l765 48EE  
                                  l757 48BA                                    l749 4524  
                                  l790 47EA                                    l766 48F0  
                                  l767 48F8                                    l759 48C4  
                                  l688 302E                                    l792 47F4  
                                  l768 48FA                                    l776 49EA  
                                  l793 47F6                                    l769 4902  
                                  l794 480A                                    l786 47D6  
                                  l795 480C                                    l796 4814  
                                  l788 47E0                                    l797 4816  
                                  l798 481E                                    l799 4820  
                                  _PCL 000FF9                                    _PR2 000FCB  
                                  _fil 01A4                       ??_init_oscilador 001B  
                                  _fix 522A                                    _isr 0008  
                         disk_read@res 0078                                    prod 000FF3  
                       ??_create_chain 00A8                                    tosl 000FFD  
                                  wreg 000FE8   verifica_fence_externo@point_dif_long 00EA  
            __size_of_write_timer_zero 000A                        create_chain@mcl 00AA  
                      create_chain@ncl 00B2                        create_chain@scl 00B0  
              ??_escreve_frase_ram_lcd 0020                                   l1121 36DC  
                                 l1050 3346                                   l1124 368A  
                                 l2004 4B36                                   l2014 4DD0  
                                 l1047 334E                                   l1208 0EFC  
                                 l1233 1B42                                   l1322 1300  
                                 l2202 3E3A                                   l2220 4384  
                                 l1326 1510                                   l1238 1B6E  
                                 l1248 1CB0                                   l1408 18AA  
                                 l1425 19F8                                   l1375 4DEC  
                                 l1552 46CA                                   l1933 49CE  
                                 ?_fix 0001                                   l9041 3776  
                                 l9113 2FF4                                   l6561 4410  
                                 l9051 37AA                                   l9035 3762  
                                 l9131 3076                                   l9203 4BE8  
                                 l6555 43A2                                   l6563 4418  
                                 ?_isr 0001                                   l9061 37DE  
                                 l9045 379A                                   l9053 37B2  
                                 l9301 47D8                                   l9071 380E  
                                 l9207 4C14                                   l9057 37C6  
                                 l9161 30EE                                   l9145 309E  
                                 l9225 4C18                                   l7465 4C3E  
                                 l9305 47E2                                   l9171 483C  
                                 l9091 2F7E                                   l7475 4C78  
                                 l9421 4F32                                   l7469 4C58  
                                 l9309 47EC                                   l9413 4B42  
                                 l9405 4A20                                   l9175 4868  
                                 l9423 4F3A                                   l9511 2958  
                                 l9503 28E4                                   l9407 4A3A  
                                 l6951 3F2C                                   l9353 3206  
                                 l9345 3182                                   l9361 3254  
                                 l9417 4B6A                                   l9273 48C6  
                                 l9179 486C                                   l9195 488E  
                                 l9099 2FD0                                   l9371 32A8  
                                 l9259 518C                                   l9427 4F3E  
                                 l9451 2D72                                   l6963 3F66  
                                 l9349 31FE                                   l9533 2A2E  
                                 l9509 2924                                   l9613 3330  
                                 l9605 3306                                   l9269 48BC  
                                 l6965 3F72                                   l6957 3F44  
                                 l9439 4F46                                   l9471 2EA0  
                                 l9703 4D66                                   l9711 4D86  
                                 l6983 3FCA                                   l6975 3FA6  
                                 l9529 2A04                                   l9617 3356  
                                 l9561 4ABC                                   l9393 4A04  
                                 l9475 2EC0                                   l9547 2A94  
                                 l9571 4460                                   l9731 1E12  
                                 l6979 3FB4                                   l7859 50D4  
                                 l9485 2F26                                   l9549 2AB0  
                                 l9661 33F2                                   l9629 3384  
                                 l9557 4AA8                                   l9397 4A12  
                                 l9389 49F6                                   l9813 1F88  
                                 l9725 1DFC                                   l9487 2F40  
                                 l9495 2884                                   l9647 33B8  
                                 l9567 4442                                   l9823 1FB4  
                                 l9807 1F78                                   l9735 1E1E  
                                 l9665 342E                                   l9833 1FDC  
                                 l9745 1E52                  _escreve_caractere_lcd 47C6  
                                 l8963 4E42                                   l8971 4ED6  
                                 l9691 4CFA                                   l9755 1E76  
                                 l9931 0936                                   l9589 44BA  
                                 l9677 402E                                   l9941 098E  
                                 l9917 085C                                   l9951 0A72  
                                 STR_1 61F1                                   STR_2 626B  
                                 l9881 50A6                                   l9697 4D0A  
                                 l9849 203C                                   l9929 0916  
                                 STR_3 6266                                   STR_4 6278  
                                 l9867 20A0                                   l9859 2064  
                                 l9779 1EFA                                   STR_5 6274  
                                 STR_6 6249                                   l9893 4FA4  
                                 l9981 0BFC                                   STR_7 61C4  
                                 STR_8 6252                                   l8999 4A4C  
                                 l9967 0B34                                   l9959 0AC6  
                                 STR_9 6173                                   l9889 4F94  
                                 l9985 0C78                                   l9969 0B42  
                                 l9993 0CAC                                   l9999 0D08  
                       timer_dois@flag 0037                                   _BRGH 007D62  
                      __end_of_GPSRead 237A                                   _T0IF 007F92  
                                 _CREN 007D5C                           ?_escreve_SPI 0001  
                                 _LATB 000F8A                                   _PIE1 000F9D  
                                 u7200 3F76                                   _RCIF 007CF5  
                                 u6440 43CE                                   u6460 4400  
                                 u6447 43C4                                   u6467 43F6  
                                 _TMR0 000FD6                                   _TMR2 000FCC  
                                 _SPEN 007D5F                                   _TXEN 007D65  
                                 _SYNC 007D64                           trace_path@dj 00AF  
                         trace_path@fn 00B0                           trace_path@ds 00C0  
                         trace_path@fs 00BC                          ?_make_dirfile 0023  
                                 _Term 003C                                   _dado 0039  
                                 _flag 002C                                   _atoi 3D76  
                                 _main 4F5E                                   _fsid 0118  
                                 _itoa 4EFC                                   fsr1h 000FE2  
                                 fsr2h 000FDA                                   indf1 000FE7  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 fsr2l 000FD9                                   btemp 0045  
                                 _utoa 430C                                   _sync 4B92  
                        disk_ioctl@cmd 001B                          disk_read@buff 006E  
                        disk_ioctl@res 001F                          disk_read@pdrv 0075  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 000E                ?_verifica_fence_externo 0001  
            sdc_disk_initialize@buff_i 0066                           ___param_bank 000000  
            sdc_disk_initialize@count1 0062              sdc_disk_initialize@count2 0068  
                          _string_dado 0200                                  ??_fix 001B  
                                ??_isr 000E                __size_of_escrita_sdcard 00CC  
     __size_of_configura_baudrate_uart 0108                                  l10011 4FC2  
                                l10003 0D1A                                  l10009 4FBC  
                                l10043 4BC8                                  l10027 4FC6  
                                l10213 460C                                  l10205 36F6  
                                l10117 3634                                  l11031 193E  
                                l11015 18F2                                  l10303 4DC6  
                                l10217 4610                                  l10065 34B0  
                                l10081 3586                                  l10401 2552  
                                l11017 190A                                  l11009 18CE  
                                l10163 3682                                  l10155 3672  
                                l10147 3662                                  l11051 19E6  
                                l11027 1932                                  l11131 3D78  
                                l10253 467C                                  l10229 4656  
                                l10317 429A                                  l10309 427A  
                                l11037 196C                                  l11133 3D7C  
                                l11221 0088                                  l10255 4688  
                                l10327 42DC                                  l10431 2656  
                                l10159 367A                                  l10415 257E  
                                l11055 1A06                                  l11151 3E08  
                                l11143 3DBC                                  l11231 00C2  
                                l10265 46BC                                  l10505 0D94  
                                l10329 42E4                                  l10441 26B6  
                                l10433 267C                                  l10185 36BC  
                                l10177 36A4                                  l10097 35C8  
                                l10409 256A                                  l10353 243A  
                                l11065 1A6E                                  l11081 4F14  
                                l11321 0354                                  l10515 0DB8  
                                l10451 2720                                  l10435 268E  
                                l10195 36DA                                  l10187 36BE  
                                l10371 247E                                  l11059 1A24  
                                l11091 44D4                                  l11147 3DD2  
                                l10275 4B04                                  l11411 05DA  
                                l11315 033A                                  l10605 115A  
                                l10533 0DE8                                  l10365 2456  
                                l10357 243E                                  l11181 3F04  
                                l10277 4B0C                                  l11421 060C  
                                l11405 05CC                                  l11341 0396  
                                l11253 00EE                                  l11261 0162  
                                l11237 00C6                                  l11317 033C  
                                l12133 4F84                                  l11191 5014  
                                l10623 388C                                  l10551 0E1E  
                                l10543 0E14                                  l10455 2724  
                                l10391 252A                                  l10383 24E8  
                                l11095 44DE                                  l10287 4B2C  
                                l10295 4DA6                                  l11327 0358  
                                l11407 05CE                                  l11271 016E  
                                l11247 00E2                                  l12127 4F76  
                                l11193 5018                                  l10561 0E92  
                                l10529 0DE4                                  l10465 2764  
                                l10297 4DAE                                  l11345 039E  
                                l11337 0374                                  l11353 0412  
                                l11281 018A                                  l11249 00E6  
                                l10379 24DC                                  l10811 1CC4  
                                l10643 455A                                  l11099 44E8  
                                l11451 0686                                  l11355 0416  
                                l11283 018E                                  l10637 3940  
                                l10477 27F2                                  l10397 2546  
                                l11461 06B8                                  l11429 0640  
                                l11365 0422                                  l11525 2B00  
                                l10591 1036                                  l10487 282C  
                                l10647 45A0                                  l11439 066E  
                                l11383 0468                                  l11375 043E  
                                l11391 04DC                                  l11287 0196  
                                l11295 0202                                  l11631 2CDE  
                                l11607 2C8C                                  l11543 2B5A  
                                l11721 3B18                                  l11713 3AF2  
                                l10913 16EA                                  l10905 1684  
                                l10569 0EB4                                  l10497 0D3C  
                                l10729 1AAE                                  l10649 45A8  
                                l10921 1712                                  l10681 4314  
                                l11449 067C                                  l11393 04E0  
                                l11609 2C90                                  l11561 2BC2  
                                l11545 2B5E                                  l11723 3B1E  
                                l11707 3AEE                                  l10499 0D42  
                                l10675 49C0                                  l10667 498C  
                                l10659 3C58                                  l10691 4346  
                                l11379 0460                                  l11643 2D22  
                                l11733 3B46                                  l10669 4998  
                                l10941 1772                                  l10925 171C  
                                l11469 06EC                                  l11629 2CDA  
                                l11671 3A74                                  l10863 14C4  
                                l10599 1144                                  l10759 1B4A  
                                l10791 1C8E                                  l10951 179E  
                                l11479 071A                                  l11729 3B3C  
                                l11665 3A70                                  l10777 1C0A  
                                l10961 17E0                                  l11489 0728  
                                l10875 1524                                  l10779 1C36  
                                l10955 17B4                                  l11587 2C44  
                                l11693 3AC4                                  l11685 3A9E  
                                l10973 180C                                  l11597 2C64  
                                l11589 2C48                                  l11679 3A9A  
                                l10887 156C                                  l10879 152E  
                                l10889 1580                                  l10897 15F0  
                                l11699 3AC8                                  l10995 1892  
                                l10979 1840                                  l11883 4094  
                                l10989 1882                                  l10999 189E  
                                l11895 412A                        __end_of___aldiv 3FDC  
                                ?_atoi 0021                                  ?_main 0001  
                                ?_itoa 0060                                  STR_10 6252  
                                STR_11 6260                                  STR_12 625A  
                                STR_20 61A4                                  STR_13 61D4  
                                STR_21 61B4                                  STR_30 6270  
                                STR_22 6162                                  STR_14 614D  
                                STR_31 627C                                  STR_15 61E3  
                                STR_23 6132                                  STR_16 6236  
                                STR_24 6194                                  STR_17 622C  
                                STR_25 61FF                                  STR_18 6240  
                                STR_26 6217                                  STR_27 6184  
                                STR_19 610F                                  STR_28 6222  
                                STR_29 620C                           ?_leitura_SPI 0001  
                      __end_of___lldiv 46DC                                  ?_utoa 0022  
                                ?_sync 0001                                  u11205 2DA2  
                                u12005 0AB2                                  u11070 3140  
                                u11150 4B62                                  u12110 34AC  
                                u11160 4B8A                                  _T0CON 000FD5  
                                u11225 2E1C                                  u11305 2984  
                                u11090 317E                                  u12050 0CB4  
                                u10700 4EF8                                  u11180 2D3C  
                                u11420 32F0                                  u13100 1140  
                                u12140 352C                                  u11157 4B58  
                                u12125 34BC                                  u12070 4BC4  
                                u11430 32FC                                  u13110 1158  
                                u11255 2EAC                                  u11335 2A10  
                                u11167 4B80                                  u10720 4A5C  
                                u11280 28E0                                  u11440 3326  
                                u12160 35FE                        __end_of___llmod 49E0  
                                u11275 28B4                                  u11540 341C  
                                u12420 460C                                  u11380 4480  
                                u13060 0EB0                                  u12180 3610  
                                u13125 11DE                                  u13205 3B7A  
                                u10750 3770                                  u11470 337A  
                                u11710 1F2A                                  u11630 1E2E  
                                u14110 3DCC                                  u10735 3712  
                                u12167 35F4                                  u13215 3BB2  
                                u12520 468C                                  u11640 1E3E  
                                u12600 4296                                  u13320 1AAA  
                                u13160 457A                                  _T2CON 000FCA  
                                u10825 2FA4                                  u14201 0040  
                                u11730 1F36                                  u11650 1E4A  
                                u11651 1E48                                  u13235 3BF4  
                                u14211 0052                                  u11580 4CF6  
                                u11820 207C                                  u12620 42CA  
                                u13420 1C06                                  u13180 45C8  
                                u14300 017C                                  u13245 3C2C  
                                u14141 4E9A                                  u11830 20AE  
                                u11670 1E98                                  u12630 42F0  
                                u13270 499C                                  u14070 4548  
                                u12550 4B10                                  u15030 2C54  
                                u12455 3C88                                  u10855 304A  
                                u13095 104E                                  u13167 4570  
                                u10880 30FC                                  u12640 4308  
                                u12800 26B2                                  u14240 00D4  
                                u12465 3CA4                                  u12650 2424  
                                u12490 4DE2                                  u12475 3CD4  
                                u13187 45BE                                  u11780 2006  
                                u13460 1CAC                                  u12580 4DB2  
                                u12485 3CEE                                  u14181 001C  
                                u13630 158C                                  u12910 0D62  
                                u12830 2712                                  u13390 1B6A  
                                u12815 26D2                                  u14191 002E  
                                u13720 1768                                  u14600 0624  
                                u14360 0218                                  u12657 241A  
                                u13650 1604                                  u12930 0D88  
                                u14530 04F6                                  u13555 1374  
                                u13660 164A                                  u12860 2760  
                                u13900 19C6                                  u14460 0430  
                                u12917 0D58                                  u11965 09DA  
                                u13750 17EE                                  u14710 069A  
                                u14630 0654                                  u14390 0366  
                                u12695 249A                                  u14800 0704  
                                u14560 05F2                                  u13665 1640  
                                u12937 0D7E                                  u14730 06B0  
                                u14650 066A                                  u14900 078E  
                                u14740 06B4                                  u14580 0608  
                                u12990 0DE0                                  u13950 1A46  
                                u13790 1880                                  u14750 06C4  
                                u14590 0618                                  u14760 06D0  
                                u15560 46EA                                  u14930 2ACC  
                                u15570 4702                                  u14908 0792  
                                u14940 2AD2                                  u15548 40E8  
                                u15549 40FC                                  u14880 073C  
                                u14890 076A                                  u15907 473E  
                                u14980 2B66                                  u15917 41F4  
                                u14990 2B6E                                  u15927 4210  
                                u15937 422C                                  u14898 076E  
                                u15947 1DCA                        __end_of___lwdiv 4B40  
                                u15957 1F3E                                  u15967 1FE4  
                                u15977 4E22                        __end_of___lwmod 4DDA  
                                i2l109 3A30                                  _RCREG 000FAE  
                                _RCSTA 000FAB                                  _SPBRG 000FAF  
                                _TRISA 000F92                                  _TRISB 000F93  
                                _TRISC 000F94                                  _TRISD 000F95  
                                _TRISE 000F96                        __end_of_f_close 500A  
                        trace_path@dir 00B3                                  _TXSTA 000FAC  
                                _FatFs 00F9                        __end_of_f_lseek 16FC  
                  ___lmul@multiplicand 001F             __size_of_config_timer_dois 000E  
                      __end_of_f_mount 4C7C                        __end_of_f_write 0D2C  
           __size_of_config_timer_zero 001A                          get_cluster@bc 009F  
                        get_cluster@fs 00A1                          get_cluster@wc 0099  
                      __end_of_command 4A98                                  _delay 50DC  
                      clust2sect@clust 0027                        __end_of_fprintf 1A7A  
                                _fputc 4DDA                                  _fputs 454E  
                      __end_of_isdigit 50DC               __size_of_escreve_cmd_lcd 008C  
                                atoi@a 0026                                  atoi@s 0021  
                       ??_make_dirfile 0025                         disk_ioctl@buff 001C  
                                pclath 000FFA                         disk_read@count 0074  
                                tablat 000FF5                         disk_ioctl@pdrv 001E  
                     ?_dados_gps_to_sd 0001                        __end_of_proceed 51E2  
                                plusw1 000FE3                                  plusw2 000FDB  
                                ttemp5 0046                                  ttemp6 0049  
                                ttemp7 004D                                  utoa@c 0029  
                                utoa@v 0027                                  status 000FD8  
                        _troca_de_tela 2AC4                                  wtemp8 0046  
                        disk_write@res 0077         __end_of_verifica_fence_externo 07A2  
                      __initialization 4134                    disk_initialize@pdrv 006B  
                  disk_initialize@stat 006C                           __end_of_atoi 3E44  
                         __end_of_main 4F8A                           clust2sect@fs 0065  
                         __end_of_itoa 4F2E                           __end_of_utoa 43A0  
                         __end_of_sync 4BE4                     _inicializa_tarefas 4912  
                      escalonador@cont 00F8                       __end_of_Latitude 5218  
                  reserve_direntry@dir 00B5                      create_chain@clust 00A6  
                          auto_mount@p 00A5                      create_chain@cstat 00AE  
                        sdc_reset@buff 002B                                 ??_atoi 0023  
                               ??_main 002C                                 ??_itoa 002A  
                               ??_utoa 0027                                 ??_sync 002C  
                        __activetblptr 000002                    ?_inicializa_tarefas 0001  
                 __end_of_desliga_uart 51CA                              ??_GPSRead 000A  
                       _next_dir_entry 3438                   __size_of_desliga_SPI 000C  
                    get_fattime@f_time 001F                       ??_sdc_disk_write 0027  
                               ?_delay 0001                 ?_escreve_caractere_lcd 0001  
                               _ADCON1 000FC1                                 ?_fputc 00D2  
                     ___llmod@dividend 001B                                 ?_fputs 00D9  
                   auto_mount@bootsect 009D                                 _INT0IE 007F94  
                               _INT0IF 007F91                          ?_dummy_clocks 0001  
                               _PCLATH 000FFA                                 _INTCON 000FF2  
                               i2l8531 517C                __size_of_inicializa_SPI 0020  
                       ?_troca_de_tela 0001                                 _TMR0IF 007F92  
                   auto_mount@maxclust 0099               __end_of_recebe_dado_uart 5180  
                               _SPPCFG 000F63                                 _SPPCON 000F65  
                               _SSPBUF 000FC9               __size_of_sdc_disk_status 0010  
                     __end_of_check_fs 465A                   ??_inicializa_tarefas 001B  
                    ?_disparo_gravacao 0001                         trace_path@dptr 00C1  
                       trace_path@path 00B1                 reserve_direntry@sector 00BA  
             __size_of_disk_initialize 002A             __end_of_posicao_cursor_lcd 4A3E  
                   ??_disparo_gravacao 002C                         auto_mount@path 0081  
                         ?_move_window 0079                   __end_of_create_chain 3438  
                         _dado_arquivo 023B                 __size_of_init_hardware 0016  
                       auto_mount@stat 00A8                   __size_of_get_fattime 0106  
                         put_cluster@p 00A2           ?_verifica_dados_operacionais 0001  
                 __size_of_get_cluster 0222                                 ___lmul 4A98  
                            ??___aldiv 0023                   __size_of_disk_status 0030  
                               ___wmul 5034                     __size_of_Longitude 000A  
                            ??___lldiv 0023                                 _f_open 1A7A  
                            ??___llmod 0023                              ??___lwdiv 001F  
                               _f_sync 3820                              ??___lwmod 001F  
                               _buffer 01C0                                 _estado 0038  
                               _memcmp 43A0                                 _memcpy 4D54  
                     __end_of_init_lcd 4270                                 _memset 4F8A  
                            ??_f_close 002C                                 _rawFix 003B  
                               clear_0 418E                                 clear_1 41A0  
                               clear_2 41AC                                 clear_3 41BE  
                            ??_f_lseek 00BA                                 isa$std 000001  
                            ??_f_mount 001D               configura_baudrate_uart@x 0029  
                            ??_f_write 00BA                                 _strcmp 4C7C  
                  _sdc_disk_initialize 1DAC                              ??_command 0025  
                          GPSRead@buff 000C                                 _strlen 500A  
                     put_cluster@clust 008E                                 fputc@c 00D6  
                   get_cluster@fatsect 009B                       __end_of_monta_sd 3B68  
             __end_of_reserve_direntry 285E                       __end_of_validate 4D0E  
               __end_of_next_dir_entry 359C                              ??_fprintf 00F4  
                         __pdataCOMRAM 0044                                 fputs@n 00DE  
                            ??_isdigit 001B                   __size_of_escalonador 00A6  
                     __end_of_response 51D6                           __mediumconst 60EC  
                      disk_read@sector 0070                        disk_read@result 0076  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                              ??_proceed 001C  
                     _write_timer_zero 51FA                                 sync@fs 008E  
            escreve_caractere_lcd@data 001D                         ??_dummy_clocks 001B  
                  _escreve_inteiro_lcd 4E90                        sdc_disk_write@j 006A  
                           __accesstop 0060                __end_of__initialization 41C4  
                 ?_sdc_disk_initialize 0001                         disk_write@buff 006D  
                       disk_write@pdrv 0074                   __size_of_escreve_SPI 0010  
                        ___rparam_used 000001                      ??_escreve_cmd_lcd 001D  
                       __pcstackCOMRAM 0001            __end_of_endereco_cursor_lcd 4912  
                         __pidataBANK1 51A0                           __pidataBANK2 4752  
                    ?_mensagem_inicial 0001                _configura_baudrate_uart 3B68  
                        __end_of_delay 50FA                         _escrita_sdcard 3E44  
                        __end_of_fputc 4E1A                          __end_of_fputs 45D8  
                 ?_escreve_inteiro_lcd 002A          ??_verifica_dados_operacionais 001B  
                   ??_mensagem_inicial 0021                   __end_of_make_dirfile 36FA  
                         ?_put_cluster 008E                      reserve_direntry@c 00C1  
                    reserve_direntry@n 00BE                     _tarefa_em_execucao 0041  
           __end_ofi2_write_timer_zero 5222                        ?_next_dir_entry 00A3  
               __size_of_sdc_disk_read 0126        configura_baudrate_uart@baudrate 0060  
                 reserve_direntry@dptr 00BF                   __size_of_leitura_SPI 000C  
                        _init_hardware 5130                           auto_mount@fs 00AD  
                   __size_of_disk_read 0070                                ??_delay 001B  
                       sdc_reset@count 0029  verifica_fence_externo@fence_diff_long 0072  
                              ??_fputc 002C                                ??_fputs 00DD  
                      ??_troca_de_tela 0021                      __end_of_Longitude 520E  
         mensagem_inicial@msg_linha_um 0060                             __pbssBANK0 00F9  
                           __pbssBANK1 0100                             __pbssBANK2 0200  
       __size_of_escreve_frase_ram_lcd 0052          __end_of_escreve_frase_ram_lcd 4B92  
                ??_sdc_disk_initialize 0060                              ?_Latitude 001B  
            escreve_inteiro_uart@F3215 01EF                 __end_of_escrita_sdcard 3F10  
                   __size_of_sdc_reset 0090                     troca_de_tela@state 0040  
                              ?___lmul 001B                      ??_sdc_disk_status 001B  
                        make_dirfile@a 0064                          make_dirfile@b 0062  
                        make_dirfile@c 0066                          make_dirfile@n 0065  
                        make_dirfile@t 0063                                ?___wmul 001B  
                mensagem_inicial@F3633 60FE                  mensagem_inicial@F3635 60ED  
                ??_escreve_inteiro_lcd 002C                                ?_f_open 00C6  
                              ?_f_sync 0090                      ??_disk_initialize 002C  
                __size_of_desliga_uart 000E                                ?_memcmp 001B  
                              ?_memcpy 001B                                ?_memset 001B  
                       ___lmul@product 0023     verifica_fence_externo@temp_var_deg 00E5  
                              ?_strcmp 0001                                ?_strlen 001B  
                              i2l12105 3A1C                                i2l12107 3A28  
                              i2l12081 39AC                                i2l12093 39F0  
                              i2l12085 39DA                                i2l12069 399C  
                              i2l12097 39FE                                i2l11653 4C7E  
                              i2l11821 2294                                i2l11741 20CA  
                              i2l11655 4C86                                i2l11647 4D12  
                              i2l11815 226A                                i2l11807 223A  
                              i2l11833 22EA                                i2l11809 2240  
                              i2l11753 2100                                i2l11745 20DC  
                              i2l11737 20BA                                i2l11827 22BE  
                              i2l11771 2180                                i2l11755 210A  
                              i2l11845 2348                                i2l11765 215C  
                              i2l11839 2316                                i2l11791 21EE  
                              i2l11783 21D2                                i2l11855 2364  
                              i2l11849 2350                                i2l11793 21F4  
                              i2l11777 21A8                                i2l11769 217C  
                              i2l11799 221E                                _INTCON2 000FF1  
                              _INTCON3 000FF0                         ?_init_hardware 0001  
                            ?_check_fs 0079                             _disk_ioctl 509E  
                              _GPSRead 20B2                             _disk_write 4BE4  
                       remove_chain@fs 00AC   __size_of_verifica_dados_operacionais 0002  
                              _SSPCON1 000FC6               __size_of_inicializa_uart 0024  
                              _SSPSTAT 000FC7                             _clust2sect 3FDC  
                       _inicializa_SPI 507E                        trace_path@clust 00BE  
                           ??_Latitude 001D                          ?_remove_chain 00A6  
                __size_of_create_chain 018C                              ?_init_lcd 0001  
                   __size_of_stringcpy 0046                          _sdc_disk_read 36FA  
                         _desliga_uart 51BC                             _auto_mount 0D2C  
                              __Hparam 0000              ??_configura_baudrate_uart 0064  
                              __Lparam 0000                              ?_monta_sd 001F  
                            ?_validate 001E                        ?_escrita_sdcard 0001  
                    __end_of_disk_read 48A8                          put_cluster@bc 00A0  
                            ?_response 0001                          put_cluster@fs 00A4  
                              ___aldiv 3F10                             f_close@res 009B  
                      __size_of___lmul 0056                                ___lldiv 465A  
                      __size_of___wmul 0026                                ___llmod 497A  
                 __size_of_move_window 01AA                             check_fs@fs 007F  
                              ___lwdiv 4AEE                                ___lwmod 4D98  
                      __size_of_f_open 0332                        __size_of_f_sync 0124  
                 __end_of_dummy_clocks 4E56                                _f_close 4FE0  
                              __pcinit 4134                        __size_of_memcmp 0092  
                      __size_of_memcpy 0044                        __size_of_memset 002C  
                              _f_lseek 1272                             _init_ports 50FA  
                              __ramtop 0800                                _f_mount 4C32  
                              __ptext0 4F5E                                __ptext1 46DC  
                              __ptext2 41D2                                __ptext3 5130  
                              __ptext4 50FA                                __ptext5 5222  
                              __ptext6 515C                                __ptext7 5116  
                              __ptext8 51FA                                __ptext9 51AE  
                              _f_write 07A2                                _command 4A3E  
                            _T0CONbits 000FD5                    auto_mount@totalsect 00A1  
                      __size_of_strcmp 004A                        __size_of_strlen 002A  
          endereco_cursor_lcd@endereco 001D                                _fprintf 16FC  
                         __size_of_fix 0004                                _rawDate 01D3  
                              _isdigit 50BE                           __size_of_isr 3A54  
              ??_escreve_caractere_lcd 001D                             ??_check_fs 007D  
                              _rawTime 0269                       ___aldiv@dividend 001B  
                         stringcpy@chr 0009                           stringcpy@dir 0005  
                              _time_sd 0035                           _create_chain 32AC  
                              _proceed 51D6                __size_of_init_interrupt 0012  
                   _point_buff_gps_lat 0031                      __end_of_sdc_reset 44C2  
               __end_of_inicializa_SPI 509E                             f_lseek@ofs 00B6  
                       __pintcode_body 3944                             f_lseek@res 00CA  
                 end_of_initialization 41C4                             f_open@mode 00CA  
                           f_open@path 00C8                         ??_remove_chain 00A8  
                              isr@cont 001A                                memcmp@n 001F  
                              memcpy@d 0022                                memcpy@n 001F  
                              memcpy@s 0024                __size_of_init_oscilador 0008  
                              fputc@bw 00D7                                itoa@buf 0060  
                              memset@c 001D                                memset@n 001F  
                              itoa@val 0061                                memset@p 0021  
                        __Lmediumconst 60EC                             ??_init_lcd 001E  
                              int_func 3944                      ?_recebe_dado_uart 0001  
                      disk_status@pdrv 001C                        disk_status@stat 001D  
                       ?_sdc_disk_read 0060                              i2u1515_40 4CBA  
                            i2u1577_40 398C                              i2u1578_48 398E  
               write_timer_zero@timer0 001B                        ___lldiv@divisor 001F  
                        _rawSatellites 01EC                             f_mount@drv 001D  
                   ??_recebe_dado_uart 0001                        ___lldiv@counter 0027  
                           ??_monta_sd 0021            verifica_fence_externo@F3640 02A4  
          verifica_fence_externo@F3643 0274            verifica_fence_externo@F3654 02DC  
          verifica_fence_externo@F3656 02D0                             ??_validate 0022  
                __size_of_make_dirfile 015E               __size_of_dados_gps_to_sd 003A  
                           ??_response 001B                              _RCSTAbits 000FAB  
             __end_of_write_timer_zero 5204                       ___aldiv@quotient 0025  
                              postdec1 000FE5                                postdec2 000FDD  
                              postinc0 000FEE                                postinc1 000FE6  
                              postinc2 000FDE                                utoa@buf 0022  
                              utoa@val 0023                             _wait_ready 4EC6  
                              strcmp@r 0007                                strlen@s 001B  
                            _PORTBbits 000F81              __size_of_disparo_gravacao 0016  
                            _PORTDbits 000F83                              _PORTEbits 000F84  
                      ??_init_hardware 001D            verifica_fence_externo@count 00EC  
                           _trace_path 237A                     _posicao_cursor_lcd 49E0  
                    __end_of_stringcpy 4D54            verifica_fence_externo@point 00ED  
                        ??_desliga_SPI 001B                   __size_of_put_cluster 0266  
      __end_of_configura_baudrate_uart 3C70                            ?_disk_ioctl 001B  
                    ?_reserve_direntry 00B4                             f_write@btw 00B7  
                           f_write@res 00C6                              _TRISBbits 000F93  
                          ?_disk_write 006D                              _TRISCbits 000F94  
                            _TRISDbits 000F95                       next_dir_entry@dj 00A3  
                      _escreve_cmd_lcd 44C2                     ??_reserve_direntry 00B6  
                  ?_posicao_cursor_lcd 001E                        ?_inicializa_SPI 0001  
                      disk_write@count 0073                            ?_clust2sect 0027  
                     _put_cluster$1992 0098                       _put_cluster$1993 009A  
                           command@CMD 0025                             command@CRC 0024  
                           command@arg 0020                           _make_dirfile 359C  
                        ??_get_fattime 0060                      ??_inicializa_uart 002B  
          __size_of_inicializa_tarefas 0068                          ??_get_cluster 0090  
                        ??_disk_status 001C                            ?_auto_mount 0081  
                    _make_dirfile$2102 0060                        command@argument 0026  
                 ??_posicao_cursor_lcd 001F                         __end_of___lmul 4AEE  
                     ??_next_dir_entry 00A4                         __end_of___wmul 505A  
                       __end_of_f_open 1DAC                          __pidataCOMRAM 5230  
                        ??_escalonador 00F6                            ?_init_ports 0001  
                       __end_of_f_sync 3944                         __end_of_memcmp 4432  
                       __end_of_memcpy 4D98                         __end_of_memset 4FB6  
                       __end_of_strcmp 4CC6                         __end_of_strlen 5034  
                     _time_atualizacao 0033                    start_initialization 4134  
                          __end_of_fix 522E                            __end_of_isr 3A5C  
            __size_of_mensagem_inicial 0076                     reserve_direntry@dj 00B4  
                   reserve_direntry@fs 00C4                    __end_of_desliga_SPI 51FA  
                        ??_escreve_SPI 001B               ??_verifica_fence_externo 006C  
                      _sdc_disk_status 5180                        ??_sdc_disk_read 0027  
                    auto_mount@fatsize 00A9                     i2_write_timer_zero 5218  
                      ___llmod@divisor 001F                              _Longitude 5204  
                      _disk_initialize 4FB6                        ___llmod@counter 0023  
                    __size_of_Latitude 000A                  reserve_direntry@clust 00C2  
              __size_of_sdc_disk_write 01B8                       _data_uart_recebe 0043  
                    wait_ready@timeout 001B                  __size_of_dummy_clocks 003C  
                        auto_mount@fmt 00A7                    __size_of_disk_ioctl 0020  
                  ?i2_write_timer_zero 0001                    __size_of_disk_write 004E  
                             ??___lmul 0023                             fprintf@fil 00E0  
                           fprintf@arp 031C                               ??___wmul 001F  
                           fprintf@res 0310                             fprintf@val 0318  
                           fprintf@str 00E2                    __end_of_get_fattime 3D76  
                             ??_f_open 00CB                               ??_f_sync 002C  
                          ?_wait_ready 0001                            __pdataBANK1 01EF  
                          __pdataBANK2 0274                    __end_of_get_cluster 2F4A  
                             ??_memcmp 0021                    __end_of_disk_status 4F5E  
                             ??_memcpy 0021                    __size_of_clust2sect 00B2  
                             ??_memset 0021                 sdc_disk_read@start_add 0067  
                 __end_of_remove_chain 430C                      ??_dados_gps_to_sd 0024  
              sdc_disk_initialize@buff 006A                          ??_leitura_SPI 001B  
              __end_of_escreve_cmd_lcd 454E                               ??_strcmp 0005  
                             ??_strlen 001D                sdc_disk_initialize@stat 0061  
                          ?_trace_path 00AF           __size_of_endereco_cursor_lcd 006A  
                         _fprintf$2589 0312                            __pbssBIGRAM 0322  
                        monta_sd@index 0021                            __pbssCOMRAM 002C  
                      _trace_path$2151 00BA                        _trace_path$2149 00B8  
                             ?_GPSRead 0001                          __pcstackBANK0 0060  
                        __pcstackBANK3 0300                         _init_interrupt 515C  
                  __size_of_auto_mount 0546                   ??i2_write_timer_zero 0003  
                  __end_of_escalonador 4134            __end_of_sdc_disk_initialize 20B2  
                    __size_of_check_fs 0082                           _isdigit$3178 001C  
                         check_fs@sect 0079                            _char_number 003E  
                         _dummy_clocks 4E1A                         _init_oscilador 5222  
                __end_of_troca_de_tela 2D28                               GPSRead@c 000D  
                     ??_escrita_sdcard 002C                    __size_of_init_ports 001C  
                           ?_Longitude 001B                  _escreve_frase_ram_lcd 4B40  
                            _data_buff 011A                              _data_hoje 003A  
          __end_of_escreve_inteiro_lcd 4EC6                    __end_of_escreve_SPI 51A0  
                    __size_of_init_lcd 009E                       ___lwdiv@dividend 001B  
                    delay@contador_int 001C                      delay@contador_ext 001B  
  __end_of_verifica_dados_operacionais 5230            _verifica_dados_operacionais 522E  
                            __pintcode 0008                          __pmediumconst 60EC  
  verifica_fence_externo@temp_buff_lat 00DA                               ?___aldiv 001B  
                    __size_of_monta_sd 010C                               ?___lldiv 001B  
                             ?___llmod 001B                      __size_of_validate 0048  
                             ?___lwdiv 001B                               ?___lwmod 001B  
                    __size_of_response 000C                               ?_f_close 0099  
                            _disk_read 4838                     _sinaliza_int_timer 0042  
                             ?_f_lseek 00B4                               ?_f_mount 001B  
                     _disparo_gravacao 5146                               ?_f_write 00B4  
                             ?_command 0020                 __end_of_init_interrupt 516E  
                             ?_fprintf 00E0                               ?_isdigit 0001  
                          _desliga_SPI 51EE                    sdc_disk_read@p_buff 0060  
              troca_de_tela@last_state 003F                    sdc_disk_read@length 006B  
                  sdc_disk_read@sector 0062                __end_of_sdc_disk_status 5190  
       __size_of_escreve_caractere_lcd 0072          __end_of_escreve_caractere_lcd 4838  
                             ?_proceed 0001                              f_close@fp 0099  
                  __end_of_leitura_SPI 51EE                       ___lwdiv@quotient 0020  
                       __size_of_delay 001E                __end_of_disk_initialize 4FE0  
               __end_of_init_oscilador 522A                         __size_of_fputc 0040  
                       __size_of_fputs 008A                    make_dirfile@dirname 0024  
                           validate@id 0020                             validate@fs 001E  
                            _p_tarefas 0110                              _rawCourse 01DA  
      __size_of_verifica_fence_externo 0790                       make_dirfile@path 0023  
                             _GPGGA_ok 011E                              _sdc_reset 4432  
                  __size_of_wait_ready 0036                        ___aldiv@divisor 001F  
                      ___aldiv@counter 0023                         ___wmul@product 001F  
                             _LATBbits 000F8A                              f_lseek@fp 00B4  
  verifica_fence_externo@point_dif_lat 00E9                               _LATCbits 000F8B  
                             _GPRMC_ok 0120                              f_open@dir 00E2  
                            f_open@res 00E1                               _PIE1bits 000F9D  
                          _get_fattime 3C70                           _rawLongitude 024F  
                  __size_of_trace_path 0276                            _get_cluster 2D28  
                          _disk_status 4F2E                          ??_move_window 007D  
                            f_mount@fs 001B                               _PIR1bits 000F9E  
                        move_window@fs 008C                      ?_write_timer_zero 001B  
                      remove_chain@nxt 00AA                              f_sync@dir 0097  
                            f_sync@res 0096                              f_sync@tim 0092  
             posicao_cursor_lcd@coluna 001E                             ?_disk_read 006E  
                   ??_write_timer_zero 001D                              f_write@cc 00CC  
           posicao_cursor_lcd@endereco 0020                              f_write@bw 00B9  
                            f_write@fp 00B4              __size_of_recebe_dado_uart 0012  
                          _escalonador 408E                      ___wmul@multiplier 001B  
                     ?_escreve_cmd_lcd 0001            escreve_frase_ram_lcd@buffer 001E  
                     ??_inicializa_SPI 001B                        ?_init_interrupt 0001  
                         ??_disk_ioctl 001E                           ??_disk_write 002B  
                         f_lseek@clust 00D3                        _inicializa_uart 505A  
                         f_lseek@csize 00CF                           f_lseek@ifptr 00CB  
                            _stringcpy 4D0E                       __size_of_GPSRead 02C8  
                     _mensagem_inicial 46DC                        ?_init_oscilador 0001  
                         ??_clust2sect 0060                      ___lmul@multiplier 001B  
                            copy_data0 4148                              copy_data1 4168  
                          _escreve_SPI 5190                             ?_sdc_reset 0001  
                  sdc_reset@count_nosd 0027                               _Latitude 520E  
             ?_configura_baudrate_uart 0060                 ?_escreve_frase_ram_lcd 001E  
                          ??_Longitude 001D                       auto_mount@chk_wp 0082  
                    move_window@sector 0079                         _sdc_disk_write 2F4A  
            __size_of_reserve_direntry 026E               escreve_inteiro_lcd@F3223 01F6  
                         ??_auto_mount 0083                               __Hrparam 0000  
                            memcpy@tmp 0021                               __Lrparam 0000  
                            fprintf@cc 031D                     __end_of_disk_ioctl 50BE  
                __size_of_remove_chain 009C                         put_cluster@val 0090  
                     get_cluster@clust 008E                     __end_of_disk_write 4C32  
              verifica_fence_externo@i 00EE                verifica_fence_externo@j 00EB  
                         _SentenceType 003D                       __size_of___aldiv 00CC  
               sdc_disk_initialize@ocr 0067                           monta_sd@dado 001F  
               _verifica_fence_externo 0012                       __size_of___lldiv 0082  
                     __size_of___llmod 0066                          ??_put_cluster 0092  
                     __size_of___lwdiv 0052                           monta_sd@size 0022  
                     __size_of___lwmod 0042                           ??_init_ports 001B  
                  __end_of_move_window 32AC                     __end_of_clust2sect 408E  
             escreve_inteiro_lcd@valor 002A                       __size_of_f_close 002A  
             escreve_inteiro_lcd@texto 0065                       __size_of_f_lseek 048A  
                     __size_of_f_mount 004A                            _leitura_SPI 51E2  
                     __size_of_f_write 058A                       __size_of_command 005A  
                __end_of_init_hardware 5146                               _check_fs 45D8  
                     __size_of_fprintf 037E                       __size_of_isdigit 001E  
                      ___lwdiv@divisor 001D                       ?_sdc_disk_status 0001  
                           ?_stringcpy 0001                        ___lwdiv@counter 001F  
                   __end_of_auto_mount 1272                               __ptext10 4912  
                             __ptext11 408E                               __ptext20 4AEE  
                             __ptext12 2AC4                               __ptext21 3D76  
                             __ptext13 5146                               __ptext30 507E  
                             __ptext22 50BE                               __ptext14 522E  
                             __ptext31 16FC                               __ptext23 44C2  
                             __ptext15 0012                               __ptext40 25F0  
                             __ptext32 454E                               __ptext24 5204  
                             __ptext16 4E90                               __ptext41 3438  
                             __ptext33 4DDA                               __ptext25 520E  
                             __ptext17 4EFC                               __ptext50 49E0  
                             __ptext42 3FDC                               __ptext34 07A2  
                             __ptext26 3E44                               __ptext18 430C  
                             __ptext51 48A8                               __ptext43 4270  
                             __ptext35 497A                               __ptext27 505A  
                             __ptext19 4D98                               __ptext60 32AC  
                             __ptext52 4B40                               __ptext44 4D54  
                             __ptext36 522A                               __ptext28 3B68  
                             __ptext61 285E                               __ptext53 47C6  
                             __ptext45 0D2C                               __ptext37 1A7A  
                             __ptext29 3F10                               __ptext70 4B92  
                             __ptext62 2D28                               __ptext54 50DC  
                             __ptext46 4F8A                               __ptext38 237A  
                             __ptext71 3102                               __ptext63 5034  
                             __ptext55 45D8                               __ptext47 4FB6  
                             __ptext39 359C                               __ptext80 5190  
                             __ptext72 4BE4                               __ptext64 465A  
                             __ptext56 43A0                               __ptext48 1DAC  
                             __ptext81 4E1A                               __ptext73 2F4A  
                             __ptext65 4FE0                               __ptext57 4A98  
                             __ptext49 4432                               __ptext82 51E2  
                             __ptext74 4838                               __ptext66 3820  
                             __ptext58 4C32                               __ptext91 5218  
                             __ptext83 509E                               __ptext75 36FA  
                             __ptext67 4CC6                               __ptext59 1272  
                             __ptext92 516E                               __ptext84 3C70  
                             __ptext76 51CA                               __ptext68 4F2E  
                             __ptext93 20B2                               __ptext85 51BC  
                             __ptext77 51D6                               __ptext69 5180  
                             __ptext94 4D0E                               __ptext86 51EE  
                             __ptext78 4A3E                               __ptext95 4C7C  
                             __ptext87 4E56                               __ptext79 4EC6  
                             __ptext96 0000                               __ptext88 3A5C  
                             __ptext89 500A                       __size_of_proceed 000C  
                             _filename 011C                            _rawAltitude 01CC  
                     ?_disk_initialize 0001                         _timeout_tarefa 0122  
                   sdc_disk_read@count 0066             __end_of_inicializa_tarefas 497A  
             i2write_timer_zero@timer0 0001                 __end_of_sdc_disk_write 3102  
                            monta_sd@i 0023                            _rawLatitude 025C  
                             _init_lcd 41D2                          __size_of_atoi 00CE  
                        __size_of_main 002C                           _remove_chain 4270  
                        __size_of_itoa 0032                          __size_of_utoa 0094  
                        __size_of_sync 0052   verifica_fence_externo@fence_diff_lat 00A2  
                  _endereco_cursor_lcd 48A8                     __end_of_init_ports 5116  
                             _rawSpeed 01E0                          dummy_clocks@i 001E  
                             f_open@dj 00E4                          dummy_clocks@n 001D  
                             f_open@fn 00CF                               f_open@fp 00C6  
                             f_open@dw 00DD                               f_open@rs 00DB  
                      _dados_gps_to_sd 4E56                               _monta_sd 3A5C  
                             _validate 4CC6                               _sentence 01E6  
                         move_window@n 0087                          stringcpy@str1 0001  
                        stringcpy@str2 0003                               isa$xinst 000000  
                             _response 51CA                               f_sync@fp 0090  
                  _point_buff_gps_long 002F            __size_of_posicao_cursor_lcd 005E  
                             int$flags 0045                posicao_cursor_lcd@linha 001F  
                             atoi@sign 0025                           ??_wait_ready 001B  
                          ??_disk_read 002B                __end_of_inicializa_uart 507E  
                         ??_trace_path 00B4                   ?_endereco_cursor_lcd 0001  
                   put_cluster@fatsect 009C                             _INTCONbits 000FF2  
                             memcmp@s1 001B                               memcmp@s2 001D  
                     move_window@wsect 0088                               memcpy@d1 001B  
                             memcpy@s1 001D                    __end_of_put_cluster 2AC4  
                             fprintf@c 0321                               fprintf@f 0316  
                             fprintf@i 031F                               fprintf@r 0317  
                             fprintf@s 0300                               fprintf@w 0314  
                             fputc@chr 00D2                               itoa@base 0063  
                             fputc@fil 00D4                               isdigit@c 001D  
                             memset@p1 001B                      _config_timer_dois 51AE  
                         _tempo_backup 0108                               fputs@fil 00DB  
                             fputs@str 00D9                      _config_timer_zero 5116  
                         _poligono_ext 0124                          wait_ready@res 001F  
                             intlevel2 0000                     ?_config_timer_dois 0001  
             mensagem_inicial@msg_dois 0071                            ??_sdc_reset 0027  
                   ?_config_timer_zero 0001                           _tempo_tarefa 0100  
                      ?_sdc_disk_write 0060                       ___lwmod@dividend 001B  
                   __end_of_wait_ready 4EFC               __end_of_disparo_gravacao 515C  
                     ___lldiv@dividend 001B                      sdc_disk_read@buff 006D  
                __end_of_sdc_disk_read 3820                    sdc_disk_status@pdrv 001B  
                        ?_desliga_uart 0001                    ??_config_timer_dois 001B  
                           _OSCCONbits 000FD3                     __end_of_trace_path 25F0  
                  ??_config_timer_zero 001D                            _move_window 3102  
 verifica_fence_externo@temp_buff_long 00CE                   sdc_disk_write@count1 0067  
                 sdc_disk_write@p_buff 0060                       _recebe_dado_uart 516E  
                             utoa@base 0025                   sdc_disk_write@sector 0062  
                ??_endereco_cursor_lcd 001D                           response@buff 001B  
                             strcmp@s1 0001                               strcmp@s2 0003  
                         ?_desliga_SPI 0001                       ___lldiv@quotient 0023  
                      ___lwmod@divisor 001D                               strlen@cp 001D  
                      ___lwmod@counter 001F                      remove_chain@clust 00A6  
            __end_of_config_timer_dois 51BC                           ___aldiv@sign 0024  
                        ?_create_chain 00A6              __end_of_config_timer_zero 5130  
                          ??_stringcpy 0007            __size_ofi2_write_timer_zero 000A  
                          _SSPCON1bits 000FC6                __size_of_next_dir_entry 0164  
               escreve_cmd_lcd@comando 001D                    sdc_disk_write@count 0066  
        sdc_disk_initialize@crc_number 0064                __end_of_dados_gps_to_sd 4E90  
                   sdc_disk_write@buff 006C           __size_of_sdc_disk_initialize 0306  
                         f_write@clust 00CE                         ??_desliga_uart 001B  
                   leitura_sdcard@size 0044                           f_write@wbuff 00C7  
                         ?_get_fattime 001B                       _reserve_direntry 25F0  
                          f_write@buff 00B6                      sdc_disk_write@res 0069  
                         ?_get_cluster 008E                            f_write@sect 00C8  
                          f_write@wcnt 00D0                           ?_disk_status 0001  
        __end_ofmensagem_inicial@F3633 610F          __end_ofmensagem_inicial@F3635 60FE  
                      escreve_SPI@dado 001B  
