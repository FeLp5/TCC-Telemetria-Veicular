

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon May 23 16:19:41 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=2
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=2
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   155                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   162                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   163                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   164                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   165  0000                     
   166                           ; Version 2.30
   167                           ; Generated 26/08/2020 GMT
   168                           ; 
   169                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   170                           ; All rights reserved.
   171                           ; 
   172                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   173                           ; 
   174                           ; Redistribution and use in source and binary forms, with or without modification, are
   175                           ; permitted provided that the following conditions are met:
   176                           ; 
   177                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   178                           ;        conditions and the following disclaimer.
   179                           ; 
   180                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   181                           ;        of conditions and the following disclaimer in the documentation and/or other
   182                           ;        materials provided with the distribution. Publication is not required when
   183                           ;        this file is used in an embedded application.
   184                           ; 
   185                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   186                           ;        software without specific prior written permission.
   187                           ; 
   188                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   189                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   190                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   191                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   192                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   193                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   194                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   195                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   196                           ; 
   197                           ; 
   198                           ; Code-generator required, PIC18F4550 Definitions
   199                           ; 
   200                           ; SFR Addresses
   201  0000                     
   202                           	psect	idataBANK0
   203  005C66                     __pidataBANK0:
   204                           	callstack 0
   205                           
   206                           ;initializer for leitura_sdcard@size
   207  005C66  58                 	db	88
   208                           
   209                           	psect	idataBANK1
   210  005BC4                     __pidataBANK1:
   211                           	callstack 0
   212                           
   213                           ;initializer for escreve_inteiro_uart@F3215
   214  005BC4  30                 	db	48
   215  005BC5  30                 	db	48
   216  005BC6  30                 	db	48
   217  005BC7  30                 	db	48
   218  005BC8  30                 	db	48
   219  005BC9  30                 	db	48
   220  005BCA  00                 	db	0
   221                           
   222                           ;initializer for escreve_inteiro_lcd@F3223
   223  005BCB  30                 	db	48
   224  005BCC  30                 	db	48
   225  005BCD  30                 	db	48
   226  005BCE  30                 	db	48
   227  005BCF  30                 	db	48
   228  005BD0  30                 	db	48
   229  005BD1  00                 	db	0
   230                           
   231                           	psect	idataBANK2
   232  004D16                     __pidataBANK2:
   233                           	callstack 0
   234                           
   235                           ;initializer for _dados_long
   236  004D16  30                 	db	48
   237  004D17  30                 	db	48
   238  004D18  30                 	db	48
   239  004D19  30                 	db	48
   240  004D1A  30                 	db	48
   241  004D1B  30                 	db	48
   242  004D1C  30                 	db	48
   243  004D1D  30                 	db	48
   244  004D1E  30                 	db	48
   245  004D1F  30                 	db	48
   246  004D20  30                 	db	48
   247  004D21  30                 	db	48
   248  004D22  30                 	db	48
   249  004D23  30                 	db	48
   250  004D24  30                 	db	48
   251  004D25  30                 	db	48
   252  004D26  30                 	db	48
   253  004D27  30                 	db	48
   254  004D28  30                 	db	48
   255  004D29  30                 	db	48
   256  004D2A  30                 	db	48
   257  004D2B  30                 	db	48
   258  004D2C  30                 	db	48
   259  004D2D  30                 	db	48
   260  004D2E  30                 	db	48
   261  004D2F  30                 	db	48
   262  004D30  30                 	db	48
   263  004D31  30                 	db	48
   264  004D32  30                 	db	48
   265  004D33  30                 	db	48
   266  004D34  30                 	db	48
   267  004D35  30                 	db	48
   268  004D36  30                 	db	48
   269  004D37  30                 	db	48
   270  004D38  30                 	db	48
   271  004D39  30                 	db	48
   272                           
   273                           ;initializer for _dados_lat
   274  004D3A  30                 	db	48
   275  004D3B  30                 	db	48
   276  004D3C  30                 	db	48
   277  004D3D  30                 	db	48
   278  004D3E  30                 	db	48
   279  004D3F  30                 	db	48
   280  004D40  30                 	db	48
   281  004D41  30                 	db	48
   282  004D42  30                 	db	48
   283  004D43  30                 	db	48
   284  004D44  00                 	db	0
   285  004D45  30                 	db	48
   286  004D46  30                 	db	48
   287  004D47  30                 	db	48
   288  004D48  30                 	db	48
   289  004D49  30                 	db	48
   290  004D4A  30                 	db	48
   291  004D4B  30                 	db	48
   292  004D4C  30                 	db	48
   293  004D4D  30                 	db	48
   294  004D4E  30                 	db	48
   295  004D4F  00                 	db	0
   296  004D50  30                 	db	48
   297  004D51  30                 	db	48
   298  004D52  30                 	db	48
   299  004D53  30                 	db	48
   300  004D54  30                 	db	48
   301  004D55  30                 	db	48
   302  004D56  30                 	db	48
   303  004D57  30                 	db	48
   304  004D58  30                 	db	48
   305  004D59  30                 	db	48
   306  004D5A  00                 	db	0
   307                           
   308                           ;initializer for _dados_data
   309  004D5B  30                 	db	48
   310  004D5C  30                 	db	48
   311  004D5D  30                 	db	48
   312  004D5E  30                 	db	48
   313  004D5F  30                 	db	48
   314  004D60  30                 	db	48
   315  004D61  30                 	db	48
   316  004D62  30                 	db	48
   317  004D63  30                 	db	48
   318  004D64  30                 	db	48
   319  004D65  30                 	db	48
   320  004D66  30                 	db	48
   321  004D67  30                 	db	48
   322  004D68  30                 	db	48
   323  004D69  30                 	db	48
   324  004D6A  30                 	db	48
   325  004D6B  30                 	db	48
   326  004D6C  30                 	db	48
   327                           
   328                           ;initializer for _dados_hora
   329  004D6D  30                 	db	48
   330  004D6E  30                 	db	48
   331  004D6F  30                 	db	48
   332  004D70  30                 	db	48
   333  004D71  30                 	db	48
   334  004D72  30                 	db	48
   335  004D73  30                 	db	48
   336  004D74  30                 	db	48
   337  004D75  30                 	db	48
   338  004D76  30                 	db	48
   339  004D77  30                 	db	48
   340  004D78  30                 	db	48
   341  004D79  30                 	db	48
   342  004D7A  30                 	db	48
   343  004D7B  30                 	db	48
   344  004D7C  30                 	db	48
   345  004D7D  30                 	db	48
   346  004D7E  30                 	db	48
   347                           
   348                           	psect	mediumconst
   349  006106                     __pmediumconst:
   350                           	callstack 0
   351  006106  00                 	db	0
   352  006107                     mensagem_inicial@F3689:
   353                           	callstack 0
   354  006107  54                 	db	84
   355  006108  43                 	db	67
   356  006109  43                 	db	67
   357  00610A  2D                 	db	45
   358  00610B  2D                 	db	45
   359  00610C  54                 	db	84
   360  00610D  45                 	db	69
   361  00610E  4C                 	db	76
   362  00610F  45                 	db	69
   363  006110  4D                 	db	77
   364  006111  54                 	db	84
   365  006112  52                 	db	82
   366  006113  49                 	db	73
   367  006114  41                 	db	65
   368  006115  00                 	db	0
   369  006116  00                 	db	0
   370  006117  00                 	db	0
   371  006118                     __end_ofmensagem_inicial@F3689:
   372                           	callstack 0
   373  006118                     mensagem_inicial@F3687:
   374                           	callstack 0
   375  006118  46                 	db	70
   376  006119  41                 	db	65
   377  00611A  54                 	db	84
   378  00611B  45                 	db	69
   379  00611C  43                 	db	67
   380  00611D  20                 	db	32
   381  00611E  53                 	db	83
   382  00611F  54                 	db	84
   383  006120  20                 	db	32
   384  006121  41                 	db	65
   385  006122  4E                 	db	78
   386  006123  44                 	db	68
   387  006124  52                 	db	82
   388  006125  45                 	db	69
   389  006126  00                 	db	0
   390  006127  00                 	db	0
   391  006128  00                 	db	0
   392  006129                     __end_ofmensagem_inicial@F3687:
   393                           	callstack 0
   394  006129                     _fence_diff_long:
   395                           	callstack 0
   396  006129  2D                 	db	45
   397  00612A  30                 	db	48
   398  00612B  34                 	db	52
   399  00612C  36                 	db	54
   400  00612D  33                 	db	51
   401  00612E  33                 	db	51
   402  00612F  39                 	db	57
   403  006130  34                 	db	52
   404  006131  30                 	db	48
   405  006132  35                 	db	53
   406  006133  30                 	db	48
   407  006134  2D                 	db	45
   408  006135  30                 	db	48
   409  006136  34                 	db	52
   410  006137  36                 	db	54
   411  006138  32                 	db	50
   412  006139  39                 	db	57
   413  00613A  34                 	db	52
   414  00613B  31                 	db	49
   415  00613C  34                 	db	52
   416  00613D  37                 	db	55
   417  00613E  34                 	db	52
   418  00613F  2D                 	db	45
   419  006140  30                 	db	48
   420  006141  34                 	db	52
   421  006142  36                 	db	54
   422  006143  32                 	db	50
   423  006144  39                 	db	57
   424  006145  34                 	db	52
   425  006146  31                 	db	49
   426  006147  34                 	db	52
   427  006148  37                 	db	55
   428  006149  34                 	db	52
   429  00614A  2D                 	db	45
   430  00614B  30                 	db	48
   431  00614C  34                 	db	52
   432  00614D  36                 	db	54
   433  00614E  33                 	db	51
   434  00614F  33                 	db	51
   435  006150  39                 	db	57
   436  006151  34                 	db	52
   437  006152  30                 	db	48
   438  006153  35                 	db	53
   439  006154  30                 	db	48
   440  006155                     __end_of_fence_diff_long:
   441                           	callstack 0
   442  006155                     _fence_diff_lat:
   443                           	callstack 0
   444  006155  2D                 	db	45
   445  006156  32                 	db	50
   446  006157  33                 	db	51
   447  006158  33                 	db	51
   448  006159  36                 	db	54
   449  00615A  34                 	db	52
   450  00615B  36                 	db	54
   451  00615C  36                 	db	54
   452  00615D  35                 	db	53
   453  00615E  33                 	db	51
   454  00615F  2D                 	db	45
   455  006160  32                 	db	50
   456  006161  33                 	db	51
   457  006162  33                 	db	51
   458  006163  36                 	db	54
   459  006164  34                 	db	52
   460  006165  36                 	db	54
   461  006166  36                 	db	54
   462  006167  35                 	db	53
   463  006168  33                 	db	51
   464  006169  2D                 	db	45
   465  00616A  32                 	db	50
   466  00616B  33                 	db	51
   467  00616C  34                 	db	52
   468  00616D  31                 	db	49
   469  00616E  38                 	db	56
   470  00616F  39                 	db	57
   471  006170  35                 	db	53
   472  006171  37                 	db	55
   473  006172  33                 	db	51
   474  006173  2D                 	db	45
   475  006174  32                 	db	50
   476  006175  33                 	db	51
   477  006176  34                 	db	52
   478  006177  31                 	db	49
   479  006178  38                 	db	56
   480  006179  39                 	db	57
   481  00617A  35                 	db	53
   482  00617B  37                 	db	55
   483  00617C  33                 	db	51
   484  00617D                     __end_of_fence_diff_lat:
   485                           	callstack 0
   486  0000                     _TMR0	set	4054
   487  0000                     _PORTEbits	set	3972
   488  0000                     _PCL	set	4089
   489  0000                     _PCLATH	set	4090
   490  0000                     _PIE1bits	set	3997
   491  0000                     _RCSTA	set	4011
   492  0000                     _TXSTA	set	4012
   493  0000                     _RCREG	set	4014
   494  0000                     _RCSTAbits	set	4011
   495  0000                     _SPBRG	set	4015
   496  0000                     _PIR1bits	set	3998
   497  0000                     _SSPBUF	set	4041
   498  0000                     _SSPCON1bits	set	4038
   499  0000                     _SSPSTATbits	set	4039
   500  0000                     _SSPCON1	set	4038
   501  0000                     _SSPSTAT	set	4039
   502  0000                     _TRISCbits	set	3988
   503  0000                     _TRISBbits	set	3987
   504  0000                     _PORTBbits	set	3969
   505  0000                     _PR2	set	4043
   506  0000                     _TMR2	set	4044
   507  0000                     _T2CON	set	4042
   508  0000                     _OSCCONbits	set	4051
   509  0000                     _TRISE	set	3990
   510  0000                     _TRISC	set	3988
   511  0000                     _TRISA	set	3986
   512  0000                     _TRISD	set	3989
   513  0000                     _LATB	set	3978
   514  0000                     _TRISB	set	3987
   515  0000                     _ADCON1	set	4033
   516  0000                     _T0CONbits	set	4053
   517  0000                     _INTCONbits	set	4082
   518  0000                     _PIE1	set	3997
   519  0000                     _INTCON3	set	4080
   520  0000                     _INTCON2	set	4081
   521  0000                     _INTCON	set	4082
   522  0000                     _SPPCFG	set	3939
   523  0000                     _SPPCON	set	3941
   524  0000                     _T0CON	set	4053
   525  0000                     _PORTDbits	set	3971
   526  0000                     _TRISDbits	set	3989
   527  0000                     _LATBbits	set	3978
   528  0000                     _LATCbits	set	3979
   529  0000                     _INT0IE	set	32660
   530  0000                     _INT0IF	set	32657
   531  0000                     _T0IF	set	32658
   532  0000                     _TMR0IF	set	32658
   533  0000                     _RCIF	set	31989
   534  0000                     _TXEN	set	32101
   535  0000                     _CREN	set	32092
   536  0000                     _SPEN	set	32095
   537  0000                     _SYNC	set	32100
   538  0000                     _BRGH	set	32098
   539  00617D  6F                 	db	111	;'o'
   540  00617E  20                 	db	32
   541  00617F  53                 	db	83	;'S'
   542  006180  69                 	db	105	;'i'
   543  006181  73                 	db	115	;'s'
   544  006182  74                 	db	116	;'t'
   545  006183  65                 	db	101	;'e'
   546  006184  6D                 	db	109	;'m'
   547  006185  61                 	db	97	;'a'
   548  006186  20                 	db	32
   549  006187  64                 	db	100	;'d'
   550  006188  65                 	db	101	;'e'
   551  006189  20                 	db	32
   552  00618A  61                 	db	97	;'a'
   553  00618B  72                 	db	114	;'r'
   554  00618C  71                 	db	113	;'q'
   555  00618D  75                 	db	117	;'u'
   556  00618E  69                 	db	105	;'i'
   557  00618F  76                 	db	118	;'v'
   558  006190  6F                 	db	111	;'o'
   559  006191  00                 	db	0
   560  006192                     STR_2:
   561  006192  49                 	db	73	;'I'
   562  006193  6E                 	db	110	;'n'
   563  006194  73                 	db	115	;'s'
   564  006195  69                 	db	105	;'i'
   565  006196  72                 	db	114	;'r'
   566  006197  61                 	db	97	;'a'
   567  006198  20                 	db	32
   568  006199  6F                 	db	111	;'o'
   569  00619A  20                 	db	32
   570  00619B  43                 	db	67	;'C'
   571  00619C  61                 	db	97	;'a'
   572  00619D  72                 	db	114	;'r'
   573  00619E  74                 	db	116	;'t'
   574  00619F  61                 	db	97	;'a'
   575  0061A0  6F                 	db	111	;'o'
   576  0061A1  00                 	db	0
   577  0061A2                     STR_12:
   578  0061A2  76                 	db	118	;'v'
   579  0061A3  25                 	db	37
   580  0061A4  73                 	db	115	;'s'
   581  0061A5  3B                 	db	59	;';'
   582  0061A6  6C                 	db	108	;'l'
   583  0061A7  74                 	db	116	;'t'
   584  0061A8  25                 	db	37
   585  0061A9  73                 	db	115	;'s'
   586  0061AA  3B                 	db	59	;';'
   587  0061AB  6C                 	db	108	;'l'
   588  0061AC  6F                 	db	111	;'o'
   589  0061AD  25                 	db	37
   590  0061AE  73                 	db	115	;'s'
   591  0061AF  3B                 	db	59	;';'
   592  0061B0  00                 	db	0
   593  0061B1  45                 	db	69	;'E'
   594  0061B2  72                 	db	114	;'r'
   595  0061B3  72                 	db	114	;'r'
   596  0061B4  6F                 	db	111	;'o'
   597  0061B5  20                 	db	32
   598  0061B6  61                 	db	97	;'a'
   599  0061B7  6F                 	db	111	;'o'
   600  0061B8  20                 	db	32
   601  0061B9  6D                 	db	109	;'m'
   602  0061BA  6F                 	db	111	;'o'
   603  0061BB  6E                 	db	110	;'n'
   604  0061BC  74                 	db	116	;'t'
   605  0061BD  61                 	db	97	;'a'
   606  0061BE  72                 	db	114	;'r'
   607  0061BF  00                 	db	0
   608  0061C0  45                 	db	69	;'E'
   609  0061C1  72                 	db	114	;'r'
   610  0061C2  72                 	db	114	;'r'
   611  0061C3  6F                 	db	111	;'o'
   612  0061C4  20                 	db	32
   613  0061C5  61                 	db	97	;'a'
   614  0061C6  6F                 	db	111	;'o'
   615  0061C7  20                 	db	32
   616  0061C8  63                 	db	99	;'c'
   617  0061C9  72                 	db	114	;'r'
   618  0061CA  69                 	db	105	;'i'
   619  0061CB  61                 	db	97	;'a'
   620  0061CC  72                 	db	114	;'r'
   621  0061CD  00                 	db	0
   622  0061CE  65                 	db	101	;'e'
   623  0061CF  78                 	db	120	;'x'
   624  0061D0  74                 	db	116	;'t'
   625  0061D1  66                 	db	102	;'f'
   626  0061D2  65                 	db	101	;'e'
   627  0061D3  6E                 	db	110	;'n'
   628  0061D4  63                 	db	99	;'c'
   629  0061D5  65                 	db	101	;'e'
   630  0061D6  2E                 	db	46
   631  0061D7  74                 	db	116	;'t'
   632  0061D8  78                 	db	120	;'x'
   633  0061D9  74                 	db	116	;'t'
   634  0061DA  00                 	db	0
   635  0061DB                     STR_19:
   636  0061DB  41                 	db	65	;'A'
   637  0061DC  47                 	db	71	;'G'
   638  0061DD  55                 	db	85	;'U'
   639  0061DE  41                 	db	65	;'A'
   640  0061DF  52                 	db	82	;'R'
   641  0061E0  44                 	db	68	;'D'
   642  0061E1  45                 	db	69	;'E'
   643  0061E2  2E                 	db	46
   644  0061E3  2E                 	db	46
   645  0061E4  2E                 	db	46
   646  0061E5  00                 	db	0
   647  0061E6                     STR_4:
   648  0061E6  4D                 	db	77	;'M'
   649  0061E7  4D                 	db	77	;'M'
   650  0061E8  43                 	db	67	;'C'
   651  0061E9  20                 	db	32
   652  0061EA  56                 	db	86	;'V'
   653  0061EB  65                 	db	101	;'e'
   654  0061EC  72                 	db	114	;'r'
   655  0061ED  2E                 	db	46
   656  0061EE  20                 	db	32
   657  0061EF  33                 	db	51	;'3'
   658  0061F0  00                 	db	0
   659  0061F1                     STR_1:
   660  0061F1  53                 	db	83	;'S'
   661  0061F2  65                 	db	101	;'e'
   662  0061F3  6D                 	db	109	;'m'
   663  0061F4  20                 	db	32
   664  0061F5  43                 	db	67	;'C'
   665  0061F6  61                 	db	97	;'a'
   666  0061F7  72                 	db	114	;'r'
   667  0061F8  74                 	db	116	;'t'
   668  0061F9  61                 	db	97	;'a'
   669  0061FA  6F                 	db	111	;'o'
   670  0061FB  00                 	db	0
   671  0061FC                     STR_13:
   672  0061FC  72                 	db	114	;'r'
   673  0061FD  30                 	db	48	;'0'
   674  0061FE  3B                 	db	59	;';'
   675  0061FF  63                 	db	99	;'c'
   676  006200  30                 	db	48	;'0'
   677  006201  3B                 	db	59	;';'
   678  006202  6B                 	db	107	;'k'
   679  006203  30                 	db	48	;'0'
   680  006204  3B                 	db	59	;';'
   681  006205  00                 	db	0
   682  006206                     STR_14:
   683  006206  68                 	db	104	;'h'
   684  006207  25                 	db	37
   685  006208  73                 	db	115	;'s'
   686  006209  3B                 	db	59	;';'
   687  00620A  64                 	db	100	;'d'
   688  00620B  4E                 	db	78	;'N'
   689  00620C  2F                 	db	47
   690  00620D  41                 	db	65	;'A'
   691  00620E  3B                 	db	59	;';'
   692  00620F  00                 	db	0
   693  006210  56                 	db	86	;'V'
   694  006211  65                 	db	101	;'e'
   695  006212  72                 	db	114	;'r'
   696  006213  69                 	db	105	;'i'
   697  006214  66                 	db	102	;'f'
   698  006215  69                 	db	105	;'i'
   699  006216  71                 	db	113	;'q'
   700  006217  75                 	db	117	;'u'
   701  006218  65                 	db	101	;'e'
   702  006219  00                 	db	0
   703  00621A  6F                 	db	111	;'o'
   704  00621B  20                 	db	32
   705  00621C  61                 	db	97	;'a'
   706  00621D  72                 	db	114	;'r'
   707  00621E  71                 	db	113	;'q'
   708  00621F  75                 	db	117	;'u'
   709  006220  69                 	db	105	;'i'
   710  006221  76                 	db	118	;'v'
   711  006222  6F                 	db	111	;'o'
   712  006223  00                 	db	0
   713  006224                     STR_3:
   714  006224  53                 	db	83	;'S'
   715  006225  44                 	db	68	;'D'
   716  006226  20                 	db	32
   717  006227  56                 	db	86	;'V'
   718  006228  45                 	db	69	;'E'
   719  006229  52                 	db	82	;'R'
   720  00622A  2E                 	db	46
   721  00622B  20                 	db	32
   722  00622C  31                 	db	49	;'1'
   723  00622D  00                 	db	0
   724  00622E                     STR_32:
   725  00622E  42                 	db	66	;'B'
   726  00622F  31                 	db	49	;'1'
   727  006230  3A                 	db	58	;':'
   728  006231  46                 	db	70	;'F'
   729  006232  45                 	db	69	;'E'
   730  006233  4E                 	db	78	;'N'
   731  006234  43                 	db	67	;'C'
   732  006235  45                 	db	69	;'E'
   733  006236  00                 	db	0
   734  006237  6F                 	db	111	;'o'
   735  006238  20                 	db	32
   736  006239  63                 	db	99	;'c'
   737  00623A  61                 	db	97	;'a'
   738  00623B  72                 	db	114	;'r'
   739  00623C  74                 	db	116	;'t'
   740  00623D  61                 	db	97	;'a'
   741  00623E  6F                 	db	111	;'o'
   742  00623F  00                 	db	0
   743  006240                     STR_33:
   744  006240  42                 	db	66	;'B'
   745  006241  32                 	db	50	;'2'
   746  006242  3A                 	db	58	;':'
   747  006243  4C                 	db	76	;'L'
   748  006244  54                 	db	84	;'T'
   749  006245  4C                 	db	76	;'L'
   750  006246  4F                 	db	79	;'O'
   751  006247  00                 	db	0
   752  006248                     STR_25:
   753  006248  46                 	db	70	;'F'
   754  006249  45                 	db	69	;'E'
   755  00624A  4E                 	db	78	;'N'
   756  00624B  43                 	db	67	;'C'
   757  00624C  45                 	db	69	;'E'
   758  00624D  3A                 	db	58	;':'
   759  00624E  00                 	db	0
   760  00624F                     STR_22:
   761  00624F  44                 	db	68	;'D'
   762  006250  45                 	db	69	;'E'
   763  006251  4E                 	db	78	;'N'
   764  006252  54                 	db	84	;'T'
   765  006253  52                 	db	82	;'R'
   766  006254  4F                 	db	79	;'O'
   767  006255  00                 	db	0
   768  006256                     STR_15:
   769  006256  66                 	db	102	;'f'
   770  006257  25                 	db	37
   771  006258  63                 	db	99	;'c'
   772  006259  3B                 	db	59	;';'
   773  00625A  0A                 	db	10
   774  00625B  00                 	db	0
   775  00625C                     STR_29:
   776  00625C  46                 	db	70	;'F'
   777  00625D  49                 	db	73	;'I'
   778  00625E  58                 	db	88	;'X'
   779  00625F  3A                 	db	58	;':'
   780  006260  00                 	db	0
   781  006261                     STR_23:
   782  006261  46                 	db	70	;'F'
   783  006262  4F                 	db	79	;'O'
   784  006263  52                 	db	82	;'R'
   785  006264  41                 	db	65	;'A'
   786  006265  00                 	db	0
   787  006266                     STR_11:
   788  006266  2E                 	db	46
   789  006267  74                 	db	116	;'t'
   790  006268  6C                 	db	108	;'l'
   791  006269  6D                 	db	109	;'m'
   792  00626A  00                 	db	0
   793  00626B                     STR_31:
   794  00626B  6C                 	db	108	;'l'
   795  00626C  6F                 	db	111	;'o'
   796  00626D  3A                 	db	58	;':'
   797  00626E  00                 	db	0
   798  00626F                     STR_30:
   799  00626F  6C                 	db	108	;'l'
   800  006270  74                 	db	116	;'t'
   801  006271  3A                 	db	58	;':'
   802  006272  00                 	db	0
   803  006273                     STR_17:
   804  006273  46                 	db	70	;'F'
   805  006274  41                 	db	65	;'A'
   806  006275  54                 	db	84	;'T'
   807  006276  00                 	db	0
   808  006277  0D                 	db	13
   809  006278  0A                 	db	10
   810  006279  00                 	db	0
   811  00627A                     STR_20:
   812  00627A  30                 	db	48	;'0'
   813  00627B  00                 	db	0
   814  00627C                     STR_24:
   815  00627C  7C                 	db	124
   816  00627D  00                 	db	0
   817  00627E  00                 	db	0	; dummy byte at the end
   818  0000                     
   819                           ; #config settings
   820                           
   821                           	psect	cinit
   822  004362                     __pcinit:
   823                           	callstack 0
   824  004362                     start_initialization:
   825                           	callstack 0
   826  004362                     __initialization:
   827                           	callstack 0
   828                           
   829                           ; Initialize objects allocated to BANK2 (105 bytes)
   830                           ; load TBLPTR registers with __pidataBANK2
   831  004362  0E16               	movlw	low __pidataBANK2
   832  004364  6EF6               	movwf	tblptrl,c
   833  004366  0E4D               	movlw	high __pidataBANK2
   834  004368  6EF7               	movwf	tblptrh,c
   835  00436A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   836  00436C  6EF8               	movwf	tblptru,c
   837  00436E  EE02  F07E         	lfsr	0,__pdataBANK2
   838  004372  EE10 F069          	lfsr	1,105
   839  004376                     copy_data0:
   840  004376  0009               	tblrd		*+
   841  004378  CFF5 FFEE          	movff	tablat,postinc0
   842  00437C  50E5               	movf	postdec1,w,c
   843  00437E  50E1               	movf	fsr1l,w,c
   844  004380  E1FA               	bnz	copy_data0
   845                           
   846                           ; Initialize objects allocated to BANK1 (14 bytes)
   847                           ; load TBLPTR registers with __pidataBANK1
   848  004382  0EC4               	movlw	low __pidataBANK1
   849  004384  6EF6               	movwf	tblptrl,c
   850  004386  0E5B               	movlw	high __pidataBANK1
   851  004388  6EF7               	movwf	tblptrh,c
   852  00438A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   853  00438C  6EF8               	movwf	tblptru,c
   854  00438E  EE01  F0EC         	lfsr	0,__pdataBANK1
   855  004392  EE10 F00E          	lfsr	1,14
   856  004396                     copy_data1:
   857  004396  0009               	tblrd		*+
   858  004398  CFF5 FFEE          	movff	tablat,postinc0
   859  00439C  50E5               	movf	postdec1,w,c
   860  00439E  50E1               	movf	fsr1l,w,c
   861  0043A0  E1FA               	bnz	copy_data1
   862                           
   863                           ; Initialize objects allocated to BANK0 (1 bytes)
   864                           ; load TBLPTR registers with __pidataBANK0
   865  0043A2  0E66               	movlw	low __pidataBANK0
   866  0043A4  6EF6               	movwf	tblptrl,c
   867  0043A6  0E5C               	movlw	high __pidataBANK0
   868  0043A8  6EF7               	movwf	tblptrh,c
   869  0043AA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   870  0043AC  6EF8               	movwf	tblptru,c
   871  0043AE  0009               	tblrd		*+	;fetch initializer
   872  0043B0  CFF5 F0FF          	movff	tablat,__pdataBANK0
   873                           
   874                           ; Clear objects allocated to BIGRAM (544 bytes)
   875  0043B4  EE03  F096         	lfsr	0,__pbssBIGRAM
   876  0043B8  EE12 F020          	lfsr	1,544
   877  0043BC                     clear_0:
   878  0043BC  6AEE               	clrf	postinc0,c
   879  0043BE  50E5               	movf	postdec1,w,c
   880  0043C0  50E1               	movf	fsr1l,w,c
   881  0043C2  E1FC               	bnz	clear_0
   882  0043C4  50E2               	movf	fsr1h,w,c
   883  0043C6  E1FA               	bnz	clear_0
   884                           
   885                           ; Clear objects allocated to BANK3 (150 bytes)
   886  0043C8  EE03  F000         	lfsr	0,__pbssBANK3
   887  0043CC  0E96               	movlw	150
   888  0043CE                     clear_1:
   889  0043CE  6AEE               	clrf	postinc0,c
   890  0043D0  06E8               	decf	wreg,f,c
   891  0043D2  E1FD               	bnz	clear_1
   892                           
   893                           ; Clear objects allocated to BANK2 (126 bytes)
   894  0043D4  EE02  F000         	lfsr	0,__pbssBANK2
   895  0043D8  0E7E               	movlw	126
   896  0043DA                     clear_2:
   897  0043DA  6AEE               	clrf	postinc0,c
   898  0043DC  06E8               	decf	wreg,f,c
   899  0043DE  E1FD               	bnz	clear_2
   900                           
   901                           ; Clear objects allocated to BANK1 (236 bytes)
   902  0043E0  EE01  F000         	lfsr	0,__pbssBANK1
   903  0043E4  0EEC               	movlw	236
   904  0043E6                     clear_3:
   905  0043E6  6AEE               	clrf	postinc0,c
   906  0043E8  06E8               	decf	wreg,f,c
   907  0043EA  E1FD               	bnz	clear_3
   908                           
   909                           ; Clear objects allocated to BANK0 (24 bytes)
   910  0043EC  EE00  F0E7         	lfsr	0,__pbssBANK0
   911  0043F0  0E18               	movlw	24
   912  0043F2                     clear_4:
   913  0043F2  6AEE               	clrf	postinc0,c
   914  0043F4  06E8               	decf	wreg,f,c
   915  0043F6  E1FD               	bnz	clear_4
   916                           
   917                           ; Clear objects allocated to COMRAM (9 bytes)
   918  0043F8  EE00  F04D         	lfsr	0,__pbssCOMRAM
   919  0043FC  0E09               	movlw	9
   920  0043FE                     clear_5:
   921  0043FE  6AEE               	clrf	postinc0,c
   922  004400  06E8               	decf	wreg,f,c
   923  004402  E1FD               	bnz	clear_5
   924  004404                     end_of_initialization:
   925                           	callstack 0
   926  004404                     __end_of__initialization:
   927                           	callstack 0
   928  004404  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   929  004406  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   930  004408  0100               	movlb	0
   931  00440A  EFBB  F02B         	goto	_main	;jump to C main() function
   932                           
   933                           	psect	bssCOMRAM
   934  00004D                     __pbssCOMRAM:
   935                           	callstack 0
   936  00004D                     _FatFs:
   937                           	callstack 0
   938  00004D                     	ds	2
   939  00004F                     troca_de_tela@last_state:
   940                           	callstack 0
   941  00004F                     	ds	1
   942  000050                     troca_de_tela@state:
   943                           	callstack 0
   944  000050                     	ds	1
   945  000051                     verifica_dados_operacionais@contador_atual:
   946                           	callstack 0
   947  000051                     	ds	1
   948  000052                     _tarefa_em_execucao:
   949                           	callstack 0
   950  000052                     	ds	1
   951  000053                     escrita_sdcard@f_fix:
   952                           	callstack 0
   953  000053                     	ds	1
   954  000054                     _is_it_rmc_string:
   955                           	callstack 0
   956  000054                     	ds	1
   957  000055                     _is_it_gga_string:
   958                           	callstack 0
   959  000055                     	ds	1
   960                           
   961                           	psect	bssBANK0
   962  0000E7                     __pbssBANK0:
   963                           	callstack 0
   964  0000E7                     _fence_flag:
   965                           	callstack 0
   966  0000E7                     	ds	3
   967  0000EA                     _time_atualizacao:
   968                           	callstack 0
   969  0000EA                     	ds	2
   970  0000EC                     _rmc_index:
   971                           	callstack 0
   972  0000EC                     	ds	2
   973  0000EE                     _gga_index:
   974                           	callstack 0
   975  0000EE                     	ds	2
   976  0000F0                     verifica_dados_operacionais@contador_anterior:
   977                           	callstack 0
   978  0000F0                     	ds	1
   979  0000F1                     _flag_anomalia:
   980                           	callstack 0
   981  0000F1                     	ds	1
   982  0000F2                     _sinaliza_int_timer:
   983                           	callstack 0
   984  0000F2                     	ds	1
   985  0000F3                     _data_uart_recebe:
   986                           	callstack 0
   987  0000F3                     	ds	1
   988  0000F4                     _estado:
   989                           	callstack 0
   990  0000F4                     	ds	1
   991  0000F5                     _fence:
   992                           	callstack 0
   993  0000F5                     	ds	1
   994  0000F6                     _data_hoje:
   995                           	callstack 0
   996  0000F6                     	ds	1
   997  0000F7                     	ds	1
   998  0000F8                     _comma_counter_rmc:
   999                           	callstack 0
  1000  0000F8                     	ds	1
  1001  0000F9                     _comma_counter_gga:
  1002                           	callstack 0
  1003  0000F9                     	ds	1
  1004  0000FA                     _E_W:
  1005                           	callstack 0
  1006  0000FA                     	ds	1
  1007  0000FB                     _n_s:
  1008                           	callstack 0
  1009  0000FB                     	ds	1
  1010  0000FC                     _Term:
  1011                           	callstack 0
  1012  0000FC                     	ds	1
  1013  0000FD                     _SentenceType:
  1014                           	callstack 0
  1015  0000FD                     	ds	1
  1016  0000FE                     _char_number:
  1017                           	callstack 0
  1018  0000FE                     	ds	1
  1019                           
  1020                           	psect	dataBANK0
  1021  0000FF                     __pdataBANK0:
  1022                           	callstack 0
  1023  0000FF                     	ds	1
  1024                           
  1025                           	psect	bssBANK1
  1026  000100                     __pbssBANK1:
  1027                           	callstack 0
  1028  000100                     _poligono_ext:
  1029                           	callstack 0
  1030  000100                     	ds	16
  1031  000110                     _dado:
  1032                           	callstack 0
  1033  000110                     	ds	10
  1034  00011A                     _rawAltitude:
  1035                           	callstack 0
  1036  00011A                     	ds	7
  1037  000121                     	ds	6
  1038  000127                     _dados_vel:
  1039                           	callstack 0
  1040  000127                     	ds	6
  1041  00012D                     _tempo_tarefa:
  1042                           	callstack 0
  1043  00012D                     	ds	6
  1044  000133                     _tempo_backup:
  1045                           	callstack 0
  1046  000133                     	ds	6
  1047  000139                     _p_tarefas:
  1048                           	callstack 0
  1049  000139                     	ds	6
  1050  00013F                     _rawCourse:
  1051                           	callstack 0
  1052  00013F                     	ds	6
  1053  000145                     _sentence:
  1054                           	callstack 0
  1055  000145                     	ds	6
  1056  00014B                     _gps_flag:
  1057                           	callstack 0
  1058  00014B                     	ds	6
  1059  000151                     verifica_dados_operacionais@velocidade_atual_int:
  1060                           	callstack 0
  1061  000151                     	ds	4
  1062  000155                     	ds	4
  1063  000159                     _rmc_code:
  1064                           	callstack 0
  1065  000159                     	ds	3
  1066  00015C                     _gga_code:
  1067                           	callstack 0
  1068  00015C                     	ds	3
  1069  00015F                     _rawSatellites:
  1070                           	callstack 0
  1071  00015F                     	ds	3
  1072  000162                     _temp_buff_lat:
  1073                           	callstack 0
  1074  000162                     	ds	2
  1075  000164                     _temp_buff_long:
  1076                           	callstack 0
  1077  000164                     	ds	2
  1078  000166                     verifica_dados_operacionais@velocidade_atual:
  1079                           	callstack 0
  1080  000166                     	ds	2
  1081  000168                     _point_buff_gps_long:
  1082                           	callstack 0
  1083  000168                     	ds	2
  1084  00016A                     _point_buff_gps_lat:
  1085                           	callstack 0
  1086  00016A                     	ds	2
  1087  00016C                     _time_recovery:
  1088                           	callstack 0
  1089  00016C                     	ds	2
  1090  00016E                     _time_sd:
  1091                           	callstack 0
  1092  00016E                     	ds	2
  1093  000170                     _timeout_tarefa:
  1094                           	callstack 0
  1095  000170                     	ds	2
  1096  000172                     _fsid:
  1097                           	callstack 0
  1098  000172                     	ds	2
  1099  000174                     _teste:
  1100                           	callstack 0
  1101  000174                     	ds	2
  1102  000176                     _GPGGA_ok:
  1103                           	callstack 0
  1104  000176                     	ds	2
  1105  000178                     _GPRMC_ok:
  1106                           	callstack 0
  1107  000178                     	ds	2
  1108  00017A                     _data_buff:
  1109                           	callstack 0
  1110  00017A                     	ds	2
  1111  00017C                     _fil:
  1112                           	callstack 0
  1113  00017C                     	ds	28
  1114  000198                     _lo:
  1115                           	callstack 0
  1116  000198                     	ds	13
  1117  0001A5                     _rawLongitude:
  1118                           	callstack 0
  1119  0001A5                     	ds	13
  1120  0001B2                     _lt:
  1121                           	callstack 0
  1122  0001B2                     	ds	12
  1123  0001BE                     _rawLatitude:
  1124                           	callstack 0
  1125  0001BE                     	ds	12
  1126  0001CA                     _hora:
  1127                           	callstack 0
  1128  0001CA                     	ds	7
  1129  0001D1                     _rawTime:
  1130                           	callstack 0
  1131  0001D1                     	ds	7
  1132  0001D8                     _data:
  1133                           	callstack 0
  1134  0001D8                     	ds	6
  1135  0001DE                     _vel:
  1136                           	callstack 0
  1137  0001DE                     	ds	6
  1138  0001E4                     _rawDate:
  1139                           	callstack 0
  1140  0001E4                     	ds	6
  1141  0001EA                     _rawFix:
  1142                           	callstack 0
  1143  0001EA                     	ds	2
  1144                           
  1145                           	psect	dataBANK1
  1146  0001EC                     __pdataBANK1:
  1147                           	callstack 0
  1148  0001EC                     	ds	7
  1149  0001F3                     escreve_inteiro_lcd@F3223:
  1150                           	callstack 0
  1151  0001F3                     	ds	7
  1152                           
  1153                           	psect	bssBANK2
  1154  000200                     __pbssBANK2:
  1155                           	callstack 0
  1156  000200                     _string_dado:
  1157                           	callstack 0
  1158  000200                     	ds	22
  1159  000216                     _gga_pointers:
  1160                           	callstack 0
  1161  000216                     	ds	20
  1162  00022A                     _rmc_pointers:
  1163                           	callstack 0
  1164  00022A                     	ds	12
  1165  000236                     _buffer:
  1166                           	callstack 0
  1167  000236                     	ds	12
  1168  000242                     _dado_arquivo:
  1169                           	callstack 0
  1170  000242                     	ds	20
  1171  000256                     _filename:
  1172                           	callstack 0
  1173  000256                     	ds	20
  1174  00026A                     _rawSpeed:
  1175                           	callstack 0
  1176  00026A                     	ds	20
  1177                           
  1178                           	psect	dataBANK2
  1179  00027E                     __pdataBANK2:
  1180                           	callstack 0
  1181  00027E                     _dados_long:
  1182                           	callstack 0
  1183  00027E                     	ds	36
  1184  0002A2                     _dados_lat:
  1185                           	callstack 0
  1186  0002A2                     	ds	33
  1187  0002C3                     _dados_data:
  1188                           	callstack 0
  1189  0002C3                     	ds	18
  1190  0002D5                     _dados_hora:
  1191                           	callstack 0
  1192  0002D5                     	ds	18
  1193                           
  1194                           	psect	bssBANK3
  1195  000300                     __pbssBANK3:
  1196                           	callstack 0
  1197  000300                     _gga_buffer:
  1198                           	callstack 0
  1199  000300                     	ds	80
  1200  000350                     _rmc_buffer:
  1201                           	callstack 0
  1202  000350                     	ds	70
  1203                           
  1204                           	psect	bssBIGRAM
  1205  000396                     __pbssBIGRAM:
  1206                           	callstack 0
  1207  000396                     _fs:
  1208                           	callstack 0
  1209  000396                     	ds	544
  1210                           
  1211                           	psect	cstackBANK2
  1212  0002E7                     __pcstackBANK2:
  1213                           	callstack 0
  1214  0002E7                     disparo_gravacao@velocidade:
  1215                           	callstack 0
  1216                           
  1217                           ; 12 bytes @ 0x0
  1218  0002E7                     	ds	12
  1219  0002F3                     disparo_gravacao@fix_gps:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0xC
  1223  0002F3                     	ds	2
  1224  0002F5                     disparo_gravacao@v_max:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0xE
  1228  0002F5                     	ds	2
  1229  0002F7                     disparo_gravacao@index_max:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x10
  1233  0002F7                     	ds	2
  1234  0002F9                     disparo_gravacao@i:
  1235                           	callstack 0
  1236                           
  1237                           ; 1 bytes @ 0x12
  1238  0002F9                     	ds	1
  1239                           
  1240                           	psect	cstackBANK0
  1241  000060                     __pcstackBANK0:
  1242                           	callstack 0
  1243  000060                     ??_get_cluster:
  1244  000060                     ??_auto_mount:
  1245  000060                     put_cluster@clust:
  1246                           	callstack 0
  1247  000060                     f_sync@fp:
  1248                           	callstack 0
  1249  000060                     latitude_to_convert@latitude:
  1250                           	callstack 0
  1251  000060                     longitude_to_convert@longitude:
  1252                           	callstack 0
  1253                           
  1254                           ; 11 bytes @ 0x0
  1255  000060                     	ds	2
  1256  000062                     put_cluster@val:
  1257                           	callstack 0
  1258  000062                     f_sync@tim:
  1259                           	callstack 0
  1260                           
  1261                           ; 4 bytes @ 0x2
  1262  000062                     	ds	2
  1263  000064                     ??_put_cluster:
  1264                           
  1265                           ; 1 bytes @ 0x4
  1266  000064                     	ds	2
  1267  000066                     f_sync@res:
  1268                           	callstack 0
  1269                           
  1270                           ; 1 bytes @ 0x6
  1271  000066                     	ds	1
  1272  000067                     f_sync@dir:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x7
  1276  000067                     	ds	2
  1277  000069                     latitude_to_convert@j:
  1278                           	callstack 0
  1279  000069                     get_cluster@wc:
  1280                           	callstack 0
  1281  000069                     f_close@fp:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x9
  1285  000069                     	ds	1
  1286  00006A                     latitude_to_convert@i:
  1287                           	callstack 0
  1288  00006A                     _put_cluster$1623:
  1289                           	callstack 0
  1290                           
  1291                           ; 2 bytes @ 0xA
  1292  00006A                     	ds	1
  1293  00006B                     longitude_to_convert@j:
  1294                           	callstack 0
  1295  00006B                     get_cluster@fatsect:
  1296                           	callstack 0
  1297                           
  1298                           ; 4 bytes @ 0xB
  1299  00006B                     	ds	1
  1300  00006C                     longitude_to_convert@i:
  1301                           	callstack 0
  1302  00006C                     _put_cluster$1624:
  1303                           	callstack 0
  1304                           
  1305                           ; 2 bytes @ 0xC
  1306  00006C                     	ds	2
  1307  00006E                     put_cluster@fatsect:
  1308                           	callstack 0
  1309                           
  1310                           ; 4 bytes @ 0xE
  1311  00006E                     	ds	1
  1312  00006F                     get_cluster@bc:
  1313                           	callstack 0
  1314                           
  1315                           ; 2 bytes @ 0xF
  1316  00006F                     	ds	2
  1317  000071                     get_cluster@fs:
  1318                           	callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x11
  1321  000071                     	ds	1
  1322  000072                     put_cluster@bc:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x12
  1326  000072                     	ds	1
  1327  000073                     ??_next_dir_entry:
  1328                           
  1329                           ; 1 bytes @ 0x13
  1330  000073                     	ds	1
  1331  000074                     put_cluster@p:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x14
  1335  000074                     	ds	2
  1336  000076                     put_cluster@fs:
  1337                           	callstack 0
  1338  000076                     auto_mount@maxclust:
  1339                           	callstack 0
  1340                           
  1341                           ; 4 bytes @ 0x16
  1342  000076                     	ds	2
  1343  000078                     ?_create_chain:
  1344                           	callstack 0
  1345  000078                     remove_chain@clust:
  1346                           	callstack 0
  1347  000078                     create_chain@clust:
  1348                           	callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x18
  1351  000078                     	ds	2
  1352  00007A                     next_dir_entry@clust:
  1353                           	callstack 0
  1354  00007A                     auto_mount@bootsect:
  1355                           	callstack 0
  1356                           
  1357                           ; 4 bytes @ 0x1A
  1358  00007A                     	ds	2
  1359  00007C                     remove_chain@nxt:
  1360                           	callstack 0
  1361  00007C                     create_chain@mcl:
  1362                           	callstack 0
  1363  00007C                     next_dir_entry@idx:
  1364                           	callstack 0
  1365                           
  1366                           ; 2 bytes @ 0x1C
  1367  00007C                     	ds	2
  1368  00007E                     trace_path@dj:
  1369                           	callstack 0
  1370  00007E                     remove_chain@fs:
  1371                           	callstack 0
  1372  00007E                     create_chain@fs:
  1373                           	callstack 0
  1374  00007E                     auto_mount@totalsect:
  1375                           	callstack 0
  1376                           
  1377                           ; 4 bytes @ 0x1E
  1378  00007E                     	ds	1
  1379  00007F                     trace_path@fn:
  1380                           	callstack 0
  1381                           
  1382                           ; 1 bytes @ 0x1F
  1383  00007F                     	ds	1
  1384  000080                     create_chain@cstat:
  1385                           	callstack 0
  1386  000080                     trace_path@path:
  1387                           	callstack 0
  1388                           
  1389                           ; 2 bytes @ 0x20
  1390  000080                     	ds	2
  1391  000082                     trace_path@dir:
  1392                           	callstack 0
  1393  000082                     create_chain@scl:
  1394                           	callstack 0
  1395  000082                     auto_mount@p:
  1396                           	callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x22
  1399  000082                     	ds	1
  1400  000083                     ??_trace_path:
  1401                           
  1402                           ; 1 bytes @ 0x23
  1403  000083                     	ds	1
  1404  000084                     auto_mount@fmt:
  1405                           	callstack 0
  1406  000084                     create_chain@ncl:
  1407                           	callstack 0
  1408                           
  1409                           ; 2 bytes @ 0x24
  1410  000084                     	ds	1
  1411  000085                     auto_mount@stat:
  1412                           	callstack 0
  1413                           
  1414                           ; 1 bytes @ 0x25
  1415  000085                     	ds	1
  1416  000086                     reserve_direntry@dj:
  1417                           	callstack 0
  1418  000086                     f_write@fp:
  1419                           	callstack 0
  1420  000086                     f_lseek@fp:
  1421                           	callstack 0
  1422  000086                     auto_mount@fatsize:
  1423                           	callstack 0
  1424                           
  1425                           ; 4 bytes @ 0x26
  1426  000086                     	ds	1
  1427  000087                     reserve_direntry@dir:
  1428                           	callstack 0
  1429  000087                     _trace_path$1780:
  1430                           	callstack 0
  1431                           
  1432                           ; 2 bytes @ 0x27
  1433  000087                     	ds	1
  1434  000088                     ??_reserve_direntry:
  1435  000088                     f_write@buff:
  1436                           	callstack 0
  1437  000088                     f_lseek@ofs:
  1438                           	callstack 0
  1439                           
  1440                           ; 4 bytes @ 0x28
  1441  000088                     	ds	1
  1442  000089                     _trace_path$1782:
  1443                           	callstack 0
  1444  000089                     f_write@btw:
  1445                           	callstack 0
  1446                           
  1447                           ; 2 bytes @ 0x29
  1448  000089                     	ds	1
  1449  00008A                     auto_mount@fs:
  1450                           	callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x2A
  1453  00008A                     	ds	1
  1454  00008B                     f_write@bw:
  1455                           	callstack 0
  1456  00008B                     trace_path@fs:
  1457                           	callstack 0
  1458                           
  1459                           ; 2 bytes @ 0x2B
  1460  00008B                     	ds	1
  1461  00008C                     ??_f_lseek:
  1462  00008C                     ??_f_write:
  1463  00008C                     reserve_direntry@sector:
  1464                           	callstack 0
  1465                           
  1466                           ; 4 bytes @ 0x2C
  1467  00008C                     	ds	1
  1468  00008D                     trace_path@clust:
  1469                           	callstack 0
  1470                           
  1471                           ; 2 bytes @ 0x2D
  1472  00008D                     	ds	2
  1473  00008F                     trace_path@ds:
  1474                           	callstack 0
  1475                           
  1476                           ; 1 bytes @ 0x2F
  1477  00008F                     	ds	1
  1478  000090                     reserve_direntry@n:
  1479                           	callstack 0
  1480  000090                     trace_path@dptr:
  1481                           	callstack 0
  1482                           
  1483                           ; 2 bytes @ 0x30
  1484  000090                     	ds	1
  1485  000091                     reserve_direntry@dptr:
  1486                           	callstack 0
  1487                           
  1488                           ; 2 bytes @ 0x31
  1489  000091                     	ds	2
  1490  000093                     reserve_direntry@c:
  1491                           	callstack 0
  1492                           
  1493                           ; 1 bytes @ 0x33
  1494  000093                     	ds	1
  1495  000094                     reserve_direntry@clust:
  1496                           	callstack 0
  1497                           
  1498                           ; 2 bytes @ 0x34
  1499  000094                     	ds	2
  1500  000096                     reserve_direntry@fs:
  1501                           	callstack 0
  1502                           
  1503                           ; 2 bytes @ 0x36
  1504  000096                     	ds	2
  1505  000098                     f_write@res:
  1506                           	callstack 0
  1507  000098                     f_open@fp:
  1508                           	callstack 0
  1509                           
  1510                           ; 2 bytes @ 0x38
  1511  000098                     	ds	1
  1512  000099                     f_write@wbuff:
  1513                           	callstack 0
  1514                           
  1515                           ; 1 bytes @ 0x39
  1516  000099                     	ds	1
  1517  00009A                     f_open@path:
  1518                           	callstack 0
  1519  00009A                     f_write@sect:
  1520                           	callstack 0
  1521                           
  1522                           ; 4 bytes @ 0x3A
  1523  00009A                     	ds	2
  1524  00009C                     f_open@mode:
  1525                           	callstack 0
  1526  00009C                     f_lseek@res:
  1527                           	callstack 0
  1528                           
  1529                           ; 1 bytes @ 0x3C
  1530  00009C                     	ds	1
  1531  00009D                     ??_f_open:
  1532  00009D                     f_lseek@ifptr:
  1533                           	callstack 0
  1534                           
  1535                           ; 4 bytes @ 0x3D
  1536  00009D                     	ds	1
  1537  00009E                     f_write@cc:
  1538                           	callstack 0
  1539                           
  1540                           ; 2 bytes @ 0x3E
  1541  00009E                     	ds	2
  1542  0000A0                     f_write@clust:
  1543                           	callstack 0
  1544                           
  1545                           ; 2 bytes @ 0x40
  1546  0000A0                     	ds	1
  1547  0000A1                     f_lseek@csize:
  1548                           	callstack 0
  1549  0000A1                     f_open@fn:
  1550                           	callstack 0
  1551                           
  1552                           ; 12 bytes @ 0x41
  1553  0000A1                     	ds	1
  1554  0000A2                     f_write@wcnt:
  1555                           	callstack 0
  1556                           
  1557                           ; 2 bytes @ 0x42
  1558  0000A2                     	ds	2
  1559  0000A4                     ?_fputc:
  1560                           	callstack 0
  1561  0000A4                     fputc@chr:
  1562                           	callstack 0
  1563                           
  1564                           ; 2 bytes @ 0x44
  1565  0000A4                     	ds	1
  1566  0000A5                     f_lseek@clust:
  1567                           	callstack 0
  1568                           
  1569                           ; 2 bytes @ 0x45
  1570  0000A5                     	ds	1
  1571  0000A6                     fputc@fil:
  1572                           	callstack 0
  1573                           
  1574                           ; 2 bytes @ 0x46
  1575  0000A6                     	ds	2
  1576  0000A8                     fputc@c:
  1577                           	callstack 0
  1578                           
  1579                           ; 1 bytes @ 0x48
  1580  0000A8                     	ds	1
  1581  0000A9                     fputc@bw:
  1582                           	callstack 0
  1583                           
  1584                           ; 2 bytes @ 0x49
  1585  0000A9                     	ds	2
  1586  0000AB                     ?_fputs:
  1587                           	callstack 0
  1588  0000AB                     fputs@str:
  1589                           	callstack 0
  1590                           
  1591                           ; 2 bytes @ 0x4B
  1592  0000AB                     	ds	2
  1593  0000AD                     f_open@rs:
  1594                           	callstack 0
  1595  0000AD                     fputs@fil:
  1596                           	callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x4D
  1599  0000AD                     	ds	2
  1600  0000AF                     fputs@n:
  1601                           	callstack 0
  1602  0000AF                     f_open@dw:
  1603                           	callstack 0
  1604                           
  1605                           ; 4 bytes @ 0x4F
  1606  0000AF                     	ds	2
  1607  0000B1                     ?_fprintf:
  1608                           	callstack 0
  1609  0000B1                     fprintf@fil:
  1610                           	callstack 0
  1611                           
  1612                           ; 2 bytes @ 0x51
  1613  0000B1                     	ds	2
  1614  0000B3                     f_open@res:
  1615                           	callstack 0
  1616  0000B3                     fprintf@str:
  1617                           	callstack 0
  1618                           
  1619                           ; 2 bytes @ 0x53
  1620  0000B3                     	ds	1
  1621  0000B4                     f_open@dir:
  1622                           	callstack 0
  1623                           
  1624                           ; 2 bytes @ 0x54
  1625  0000B4                     	ds	2
  1626  0000B6                     f_open@dj:
  1627                           	callstack 0
  1628                           
  1629                           ; 14 bytes @ 0x56
  1630  0000B6                     	ds	5
  1631  0000BB                     ??_fprintf:
  1632                           
  1633                           ; 1 bytes @ 0x5B
  1634  0000BB                     	ds	2
  1635  0000BD                     fprintf@s:
  1636                           	callstack 0
  1637                           
  1638                           ; 16 bytes @ 0x5D
  1639  0000BD                     	ds	16
  1640  0000CD                     fprintf@res:
  1641                           	callstack 0
  1642                           
  1643                           ; 2 bytes @ 0x6D
  1644  0000CD                     	ds	2
  1645  0000CF                     _fprintf$2226:
  1646                           	callstack 0
  1647                           
  1648                           ; 2 bytes @ 0x6F
  1649  0000CF                     	ds	2
  1650  0000D1                     fprintf@w:
  1651                           	callstack 0
  1652                           
  1653                           ; 2 bytes @ 0x71
  1654  0000D1                     	ds	2
  1655  0000D3                     fprintf@f:
  1656                           	callstack 0
  1657                           
  1658                           ; 1 bytes @ 0x73
  1659  0000D3                     	ds	1
  1660  0000D4                     fprintf@r:
  1661                           	callstack 0
  1662                           
  1663                           ; 1 bytes @ 0x74
  1664  0000D4                     	ds	1
  1665  0000D5                     fprintf@val:
  1666                           	callstack 0
  1667                           
  1668                           ; 4 bytes @ 0x75
  1669  0000D5                     	ds	4
  1670  0000D9                     fprintf@arp:
  1671                           	callstack 0
  1672                           
  1673                           ; 1 bytes @ 0x79
  1674  0000D9                     	ds	1
  1675  0000DA                     fprintf@cc:
  1676                           	callstack 0
  1677                           
  1678                           ; 2 bytes @ 0x7A
  1679  0000DA                     	ds	2
  1680  0000DC                     fprintf@i:
  1681                           	callstack 0
  1682                           
  1683                           ; 2 bytes @ 0x7C
  1684  0000DC                     	ds	2
  1685  0000DE                     fprintf@c:
  1686                           	callstack 0
  1687                           
  1688                           ; 1 bytes @ 0x7E
  1689  0000DE                     	ds	1
  1690  0000DF                     ??_disparo_gravacao:
  1691                           
  1692                           ; 1 bytes @ 0x7F
  1693  0000DF                     	ds	5
  1694  0000E4                     ??_escalonador:
  1695                           
  1696                           ; 1 bytes @ 0x84
  1697  0000E4                     	ds	2
  1698  0000E6                     escalonador@cont:
  1699                           	callstack 0
  1700                           
  1701                           ; 1 bytes @ 0x86
  1702  0000E6                     	ds	1
  1703                           
  1704                           	psect	cstackCOMRAM
  1705  000001                     __pcstackCOMRAM:
  1706                           	callstack 0
  1707  000001                     tratamento_uart@received_char:
  1708                           	callstack 0
  1709  000001                     i2write_timer_zero@timer0:
  1710                           	callstack 0
  1711                           
  1712                           ; 2 bytes @ 0x0
  1713  000001                     	ds	2
  1714  000003                     ??_isr:
  1715  000003                     
  1716                           ; 1 bytes @ 0x2
  1717  000003                     	ds	6
  1718  000009                     isr@cont:
  1719                           	callstack 0
  1720                           
  1721                           ; 1 bytes @ 0x8
  1722  000009                     	ds	1
  1723  00000A                     ??_dummy_clocks:
  1724  00000A                     ??_isdigit:
  1725  00000A                     ?_fix:
  1726                           	callstack 0
  1727  00000A                     ?_latitude:
  1728                           	callstack 0
  1729  00000A                     ?_longitude:
  1730                           	callstack 0
  1731  00000A                     ?_rawhora:
  1732                           	callstack 0
  1733  00000A                     ?_rawdata:
  1734                           	callstack 0
  1735  00000A                     ?_Speed:
  1736                           	callstack 0
  1737  00000A                     ?_strlen:
  1738                           	callstack 0
  1739  00000A                     ?_memcmp:
  1740                           	callstack 0
  1741  00000A                     ?_gps_segundos:
  1742                           	callstack 0
  1743  00000A                     ?_gps_minutos:
  1744                           	callstack 0
  1745  00000A                     ?_gps_hora:
  1746                           	callstack 0
  1747  00000A                     ?_gps_dia:
  1748                           	callstack 0
  1749  00000A                     ?_gps_mes:
  1750                           	callstack 0
  1751  00000A                     ?_gps_ano:
  1752                           	callstack 0
  1753  00000A                     ?___wmul:
  1754                           	callstack 0
  1755  00000A                     ?___lwdiv:
  1756                           	callstack 0
  1757  00000A                     ?___lwmod:
  1758                           	callstack 0
  1759  00000A                     ?___ftpack:
  1760                           	callstack 0
  1761  00000A                     ?___lmul:
  1762                           	callstack 0
  1763  00000A                     ?___lldiv:
  1764                           	callstack 0
  1765  00000A                     ?___aldiv:
  1766                           	callstack 0
  1767  00000A                     ?___llmod:
  1768                           	callstack 0
  1769  00000A                     disk_ioctl@cmd:
  1770                           	callstack 0
  1771  00000A                     delay@contador_ext:
  1772                           	callstack 0
  1773  00000A                     get_gpstime@index:
  1774                           	callstack 0
  1775  00000A                     get_latitude@index_lat:
  1776                           	callstack 0
  1777  00000A                     get_longitude@index_long:
  1778                           	callstack 0
  1779  00000A                     get_rawdate@index_date:
  1780                           	callstack 0
  1781  00000A                     get_rawspeed@index_speed:
  1782                           	callstack 0
  1783  00000A                     get_fix@index_fix:
  1784                           	callstack 0
  1785  00000A                     response@buff:
  1786                           	callstack 0
  1787  00000A                     recebe_dado_gps@flag_recebe:
  1788                           	callstack 0
  1789  00000A                     verifica_plausibilidade_long@posicao:
  1790                           	callstack 0
  1791  00000A                     verifica_plausibilidade_lat@posicao:
  1792                           	callstack 0
  1793  00000A                     write_timer_zero@timer0:
  1794                           	callstack 0
  1795  00000A                     data_nome@p_buff:
  1796                           	callstack 0
  1797  00000A                     hora_nome@p_buff:
  1798                           	callstack 0
  1799  00000A                     f_mount@fs:
  1800                           	callstack 0
  1801  00000A                     ___wmul@multiplier:
  1802                           	callstack 0
  1803  00000A                     ___lwdiv@dividend:
  1804                           	callstack 0
  1805  00000A                     ___lwmod@dividend:
  1806                           	callstack 0
  1807  00000A                     memcmp@s1:
  1808                           	callstack 0
  1809  00000A                     memcpy@d1:
  1810                           	callstack 0
  1811  00000A                     memset@p1:
  1812                           	callstack 0
  1813  00000A                     strcat@to:
  1814                           	callstack 0
  1815  00000A                     strlen@s:
  1816                           	callstack 0
  1817  00000A                     ___ftpack@arg:
  1818                           	callstack 0
  1819  00000A                     wait_ready@timeout:
  1820                           	callstack 0
  1821  00000A                     ___lmul@multiplier:
  1822                           	callstack 0
  1823  00000A                     ___lldiv@dividend:
  1824                           	callstack 0
  1825  00000A                     ___aldiv@dividend:
  1826                           	callstack 0
  1827  00000A                     ___llmod@dividend:
  1828                           	callstack 0
  1829                           
  1830                           ; 4 bytes @ 0x9
  1831  00000A                     	ds	1
  1832  00000B                     sdc_disk_status@pdrv:
  1833                           	callstack 0
  1834  00000B                     delay@contador_int:
  1835                           	callstack 0
  1836  00000B                     get_latitude@index:
  1837                           	callstack 0
  1838  00000B                     get_longitude@index:
  1839                           	callstack 0
  1840  00000B                     get_rawdate@index:
  1841                           	callstack 0
  1842  00000B                     get_rawspeed@index:
  1843                           	callstack 0
  1844  00000B                     get_fix@index:
  1845                           	callstack 0
  1846  00000B                     escreve_SPI@dado:
  1847                           	callstack 0
  1848  00000B                     recebe_dado_gps@timeout:
  1849                           	callstack 0
  1850  00000B                     _isdigit$3275:
  1851                           	callstack 0
  1852  00000B                     disk_ioctl@buff:
  1853                           	callstack 0
  1854                           
  1855                           ; 2 bytes @ 0xA
  1856  00000B                     	ds	1
  1857  00000C                     ??_gps_segundos:
  1858  00000C                     ??_gps_minutos:
  1859  00000C                     ??_gps_hora:
  1860  00000C                     ??_gps_dia:
  1861  00000C                     ??_gps_mes:
  1862  00000C                     ??_gps_ano:
  1863  00000C                     escreve_cmd_lcd@comando:
  1864                           	callstack 0
  1865  00000C                     endereco_cursor_lcd@endereco:
  1866                           	callstack 0
  1867  00000C                     escreve_caractere_lcd@data:
  1868                           	callstack 0
  1869  00000C                     dummy_clocks@n:
  1870                           	callstack 0
  1871  00000C                     data_nome@i:
  1872                           	callstack 0
  1873  00000C                     hora_nome@i:
  1874                           	callstack 0
  1875  00000C                     f_mount@drv:
  1876                           	callstack 0
  1877  00000C                     isdigit@c:
  1878                           	callstack 0
  1879  00000C                     ___wmul@multiplicand:
  1880                           	callstack 0
  1881  00000C                     ___lwdiv@divisor:
  1882                           	callstack 0
  1883  00000C                     ___lwmod@divisor:
  1884                           	callstack 0
  1885  00000C                     memcmp@s2:
  1886                           	callstack 0
  1887  00000C                     memcpy@s1:
  1888                           	callstack 0
  1889  00000C                     memset@c:
  1890                           	callstack 0
  1891  00000C                     strcat@from:
  1892                           	callstack 0
  1893  00000C                     strcpy@to:
  1894                           	callstack 0
  1895  00000C                     strlen@cp:
  1896                           	callstack 0
  1897                           
  1898                           ; 2 bytes @ 0xB
  1899  00000C                     	ds	1
  1900  00000D                     ??_init_lcd:
  1901  00000D                     disk_ioctl@pdrv:
  1902                           	callstack 0
  1903  00000D                     posicao_cursor_lcd@coluna:
  1904                           	callstack 0
  1905  00000D                     ___ftpack@exp:
  1906                           	callstack 0
  1907  00000D                     escreve_frase_ram_lcd@buffer:
  1908                           	callstack 0
  1909  00000D                     gps@flag_fix:
  1910                           	callstack 0
  1911  00000D                     dummy_clocks@i:
  1912                           	callstack 0
  1913                           
  1914                           ; 2 bytes @ 0xC
  1915  00000D                     	ds	1
  1916  00000E                     ?_get_fattime:
  1917                           	callstack 0
  1918  00000E                     disk_status@pdrv:
  1919                           	callstack 0
  1920  00000E                     disk_ioctl@res:
  1921                           	callstack 0
  1922  00000E                     posicao_cursor_lcd@linha:
  1923                           	callstack 0
  1924  00000E                     wait_ready@res:
  1925                           	callstack 0
  1926  00000E                     ___ftpack@sign:
  1927                           	callstack 0
  1928  00000E                     ___lwdiv@counter:
  1929                           	callstack 0
  1930  00000E                     ___lwmod@counter:
  1931                           	callstack 0
  1932  00000E                     ___wmul@product:
  1933                           	callstack 0
  1934  00000E                     memcmp@n:
  1935                           	callstack 0
  1936  00000E                     memcpy@n:
  1937                           	callstack 0
  1938  00000E                     memset@n:
  1939                           	callstack 0
  1940  00000E                     strcat@cp:
  1941                           	callstack 0
  1942  00000E                     strcpy@from:
  1943                           	callstack 0
  1944  00000E                     ___lmul@multiplicand:
  1945                           	callstack 0
  1946  00000E                     ___lldiv@divisor:
  1947                           	callstack 0
  1948  00000E                     ___aldiv@divisor:
  1949                           	callstack 0
  1950  00000E                     ___llmod@divisor:
  1951                           	callstack 0
  1952                           
  1953                           ; 4 bytes @ 0xD
  1954  00000E                     	ds	1
  1955  00000F                     ??___ftpack:
  1956  00000F                     disk_status@stat:
  1957                           	callstack 0
  1958  00000F                     posicao_cursor_lcd@endereco:
  1959                           	callstack 0
  1960  00000F                     ___lwdiv@quotient:
  1961                           	callstack 0
  1962  00000F                     command@arg:
  1963                           	callstack 0
  1964                           
  1965                           ; 4 bytes @ 0xE
  1966  00000F                     	ds	1
  1967  000010                     ??_memcmp:
  1968  000010                     ??_mensagem_inicial:
  1969  000010                     ?_atoi:
  1970                           	callstack 0
  1971  000010                     memcpy@tmp:
  1972                           	callstack 0
  1973  000010                     monta_sd@dado:
  1974                           	callstack 0
  1975  000010                     validate@fs:
  1976                           	callstack 0
  1977  000010                     memset@p:
  1978                           	callstack 0
  1979  000010                     strcpy@cp:
  1980                           	callstack 0
  1981  000010                     atoi@s:
  1982                           	callstack 0
  1983                           
  1984                           ; 3 bytes @ 0xF
  1985  000010                     	ds	1
  1986  000011                     utoa@buf:
  1987                           	callstack 0
  1988  000011                     memcpy@d:
  1989                           	callstack 0
  1990                           
  1991                           ; 2 bytes @ 0x10
  1992  000011                     	ds	1
  1993  000012                     ??_get_fattime:
  1994  000012                     make_dirfile@path:
  1995                           	callstack 0
  1996  000012                     ___aldiv@counter:
  1997                           	callstack 0
  1998  000012                     ___llmod@counter:
  1999                           	callstack 0
  2000  000012                     validate@id:
  2001                           	callstack 0
  2002  000012                     ___lmul@product:
  2003                           	callstack 0
  2004  000012                     ___lldiv@quotient:
  2005                           	callstack 0
  2006  000012                     mensagem_inicial@msg_linha_um:
  2007                           	callstack 0
  2008                           
  2009                           ; 17 bytes @ 0x11
  2010  000012                     	ds	1
  2011  000013                     ??_atoi:
  2012  000013                     command@CRC:
  2013                           	callstack 0
  2014  000013                     monta_sd@index:
  2015                           	callstack 0
  2016  000013                     make_dirfile@dirname:
  2017                           	callstack 0
  2018  000013                     ___aldiv@sign:
  2019                           	callstack 0
  2020  000013                     utoa@val:
  2021                           	callstack 0
  2022  000013                     memcpy@s:
  2023                           	callstack 0
  2024                           
  2025                           ; 2 bytes @ 0x12
  2026  000013                     	ds	1
  2027  000014                     ??_make_dirfile:
  2028  000014                     ??_validate:
  2029  000014                     command@CMD:
  2030                           	callstack 0
  2031  000014                     monta_sd@i:
  2032                           	callstack 0
  2033  000014                     ___aldiv@quotient:
  2034                           	callstack 0
  2035                           
  2036                           ; 4 bytes @ 0x13
  2037  000014                     	ds	1
  2038  000015                     command@argument:
  2039                           	callstack 0
  2040  000015                     atoi@sign:
  2041                           	callstack 0
  2042  000015                     utoa@base:
  2043                           	callstack 0
  2044                           
  2045                           ; 2 bytes @ 0x14
  2046  000015                     	ds	1
  2047  000016                     ?_atol:
  2048                           	callstack 0
  2049  000016                     ?_clust2sect:
  2050                           	callstack 0
  2051  000016                     ___lldiv@counter:
  2052                           	callstack 0
  2053  000016                     sdc_disk_read@p_buff:
  2054                           	callstack 0
  2055  000016                     sdc_disk_write@p_buff:
  2056                           	callstack 0
  2057  000016                     clust2sect@clust:
  2058                           	callstack 0
  2059  000016                     _make_dirfile$1733:
  2060                           	callstack 0
  2061  000016                     atoi@a:
  2062                           	callstack 0
  2063  000016                     atol@s:
  2064                           	callstack 0
  2065                           
  2066                           ; 2 bytes @ 0x15
  2067  000016                     	ds	1
  2068  000017                     ultoa@buf:
  2069                           	callstack 0
  2070  000017                     utoa@v:
  2071                           	callstack 0
  2072                           
  2073                           ; 2 bytes @ 0x16
  2074  000017                     	ds	1
  2075  000018                     ?___awtoft:
  2076                           	callstack 0
  2077  000018                     make_dirfile@b:
  2078                           	callstack 0
  2079  000018                     sdc_reset@count_nosd:
  2080                           	callstack 0
  2081  000018                     ___awtoft@c:
  2082                           	callstack 0
  2083  000018                     sdc_disk_read@sector:
  2084                           	callstack 0
  2085  000018                     sdc_disk_write@sector:
  2086                           	callstack 0
  2087  000018                     configura_baudrate_uart@baudrate:
  2088                           	callstack 0
  2089  000018                     ultoa@val:
  2090                           	callstack 0
  2091                           
  2092                           ; 4 bytes @ 0x17
  2093  000018                     	ds	1
  2094  000019                     make_dirfile@t:
  2095                           	callstack 0
  2096  000019                     utoa@c:
  2097                           	callstack 0
  2098                           
  2099                           ; 1 bytes @ 0x18
  2100  000019                     	ds	1
  2101  00001A                     ??_atol:
  2102  00001A                     ??_clust2sect:
  2103  00001A                     make_dirfile@a:
  2104                           	callstack 0
  2105  00001A                     sdc_reset@count:
  2106                           	callstack 0
  2107  00001A                     itoa@buf:
  2108                           	callstack 0
  2109                           
  2110                           ; 2 bytes @ 0x19
  2111  00001A                     	ds	1
  2112  00001B                     make_dirfile@n:
  2113                           	callstack 0
  2114  00001B                     ___awtoft@sign:
  2115                           	callstack 0
  2116                           
  2117                           ; 1 bytes @ 0x1A
  2118  00001B                     	ds	1
  2119  00001C                     ??_configura_baudrate_uart:
  2120  00001C                     ?___ftmul:
  2121                           	callstack 0
  2122  00001C                     sdc_reset@buff:
  2123                           	callstack 0
  2124  00001C                     sdc_disk_read@count:
  2125                           	callstack 0
  2126  00001C                     sdc_disk_write@count:
  2127                           	callstack 0
  2128  00001C                     make_dirfile@c:
  2129                           	callstack 0
  2130  00001C                     itoa@val:
  2131                           	callstack 0
  2132  00001C                     ultoa@base:
  2133                           	callstack 0
  2134  00001C                     ___ftmul@f1:
  2135                           	callstack 0
  2136                           
  2137                           ; 3 bytes @ 0x1B
  2138  00001C                     	ds	1
  2139  00001D                     ??_sdc_disk_initialize:
  2140  00001D                     ??_sdc_disk_read:
  2141  00001D                     ??_sdc_disk_write:
  2142                           
  2143                           ; 1 bytes @ 0x1C
  2144  00001D                     	ds	1
  2145  00001E                     atol@sign:
  2146                           	callstack 0
  2147  00001E                     itoa@base:
  2148                           	callstack 0
  2149  00001E                     ultoa@v:
  2150                           	callstack 0
  2151                           
  2152                           ; 4 bytes @ 0x1D
  2153  00001E                     	ds	1
  2154  00001F                     clust2sect@fs:
  2155                           	callstack 0
  2156  00001F                     ___ftmul@f2:
  2157                           	callstack 0
  2158  00001F                     atol@a:
  2159                           	callstack 0
  2160                           
  2161                           ; 4 bytes @ 0x1E
  2162  00001F                     	ds	1
  2163  000020                     sdc_disk_initialize@stat:
  2164                           	callstack 0
  2165                           
  2166                           ; 1 bytes @ 0x1F
  2167  000020                     	ds	1
  2168  000021                     sdc_disk_initialize@count1:
  2169                           	callstack 0
  2170                           
  2171                           ; 2 bytes @ 0x20
  2172  000021                     	ds	1
  2173  000022                     ??___ftmul:
  2174  000022                     ultoa@c:
  2175                           	callstack 0
  2176  000022                     sdc_disk_read@start_add:
  2177                           	callstack 0
  2178                           
  2179                           ; 4 bytes @ 0x21
  2180  000022                     	ds	1
  2181  000023                     atol@c:
  2182                           	callstack 0
  2183  000023                     ltoa@buf:
  2184                           	callstack 0
  2185  000023                     sdc_disk_initialize@crc_number:
  2186                           	callstack 0
  2187  000023                     sdc_disk_write@count1:
  2188                           	callstack 0
  2189  000023                     mensagem_inicial@msg_dois:
  2190                           	callstack 0
  2191                           
  2192                           ; 17 bytes @ 0x22
  2193  000023                     	ds	1
  2194  000024                     ?_convert_to_int_point_lat:
  2195                           	callstack 0
  2196  000024                     ?_convert_to_int:
  2197                           	callstack 0
  2198  000024                     ?_convert_to_int_point_long:
  2199                           	callstack 0
  2200  000024                     configura_baudrate_uart@x:
  2201                           	callstack 0
  2202  000024                     convert_to_int@p_buff:
  2203                           	callstack 0
  2204  000024                     ltoa@val:
  2205                           	callstack 0
  2206                           
  2207                           ; 4 bytes @ 0x23
  2208  000024                     	ds	1
  2209  000025                     sdc_disk_initialize@buff_i:
  2210                           	callstack 0
  2211  000025                     sdc_disk_write@res:
  2212                           	callstack 0
  2213  000025                     ___ftmul@exp:
  2214                           	callstack 0
  2215                           
  2216                           ; 1 bytes @ 0x24
  2217  000025                     	ds	1
  2218  000026                     sdc_disk_initialize@ocr:
  2219                           	callstack 0
  2220  000026                     sdc_disk_read@length:
  2221                           	callstack 0
  2222  000026                     sdc_disk_write@j:
  2223                           	callstack 0
  2224  000026                     ___ftmul@f3_as_product:
  2225                           	callstack 0
  2226                           
  2227                           ; 3 bytes @ 0x25
  2228  000026                     	ds	1
  2229  000027                     sdc_disk_initialize@count2:
  2230                           	callstack 0
  2231                           
  2232                           ; 2 bytes @ 0x26
  2233  000027                     	ds	1
  2234  000028                     sdc_disk_read@buff:
  2235                           	callstack 0
  2236  000028                     sdc_disk_write@buff:
  2237                           	callstack 0
  2238  000028                     ltoa@base:
  2239                           	callstack 0
  2240  000028                     convert_to_int_point_lat@convert_str_lat:
  2241                           	callstack 0
  2242  000028                     convert_to_int_point_long@convert_str_long:
  2243                           	callstack 0
  2244                           
  2245                           ; 10 bytes @ 0x27
  2246  000028                     	ds	1
  2247  000029                     sdc_disk_initialize@buff:
  2248                           	callstack 0
  2249  000029                     ___ftmul@cntr:
  2250                           	callstack 0
  2251  000029                     disk_read@buff:
  2252                           	callstack 0
  2253  000029                     disk_write@buff:
  2254                           	callstack 0
  2255                           
  2256                           ; 2 bytes @ 0x28
  2257  000029                     	ds	1
  2258  00002A                     disk_initialize@pdrv:
  2259                           	callstack 0
  2260  00002A                     ___ftmul@sign:
  2261                           	callstack 0
  2262                           
  2263                           ; 1 bytes @ 0x29
  2264  00002A                     	ds	1
  2265  00002B                     ?___fttol:
  2266                           	callstack 0
  2267  00002B                     disk_initialize@stat:
  2268                           	callstack 0
  2269  00002B                     ___fttol@f1:
  2270                           	callstack 0
  2271  00002B                     disk_read@sector:
  2272                           	callstack 0
  2273  00002B                     disk_write@sector:
  2274                           	callstack 0
  2275  00002B                     escreve_inteiro_lcd@valor:
  2276                           	callstack 0
  2277                           
  2278                           ; 4 bytes @ 0x2A
  2279  00002B                     	ds	4
  2280  00002F                     ??___fttol:
  2281  00002F                     disk_read@count:
  2282                           	callstack 0
  2283  00002F                     disk_write@count:
  2284                           	callstack 0
  2285  00002F                     escreve_inteiro_lcd@texto:
  2286                           	callstack 0
  2287                           
  2288                           ; 7 bytes @ 0x2E
  2289  00002F                     	ds	1
  2290  000030                     ??_disk_read:
  2291  000030                     ??_disk_write:
  2292                           
  2293                           ; 1 bytes @ 0x2F
  2294  000030                     	ds	1
  2295  000031                     disk_read@pdrv:
  2296                           	callstack 0
  2297  000031                     disk_write@pdrv:
  2298                           	callstack 0
  2299                           
  2300                           ; 1 bytes @ 0x30
  2301  000031                     	ds	1
  2302  000032                     convert_to_int_point_long@j:
  2303                           	callstack 0
  2304  000032                     disk_read@result:
  2305                           	callstack 0
  2306  000032                     disk_write@result:
  2307                           	callstack 0
  2308                           
  2309                           ; 2 bytes @ 0x31
  2310  000032                     	ds	1
  2311  000033                     convert_to_int_point_lat@j:
  2312                           	callstack 0
  2313  000033                     convert_to_int_point_long@i:
  2314                           	callstack 0
  2315                           
  2316                           ; 1 bytes @ 0x32
  2317  000033                     	ds	1
  2318  000034                     disk_read@res:
  2319                           	callstack 0
  2320  000034                     disk_write@res:
  2321                           	callstack 0
  2322  000034                     convert_to_int_point_lat@i:
  2323                           	callstack 0
  2324  000034                     ___fttol@sign1:
  2325                           	callstack 0
  2326                           
  2327                           ; 1 bytes @ 0x33
  2328  000034                     	ds	1
  2329  000035                     diferenca@index:
  2330                           	callstack 0
  2331  000035                     move_window@sector:
  2332                           	callstack 0
  2333  000035                     check_fs@sect:
  2334                           	callstack 0
  2335  000035                     ___fttol@lval:
  2336                           	callstack 0
  2337                           
  2338                           ; 4 bytes @ 0x34
  2339  000035                     	ds	1
  2340  000036                     ??_troca_de_tela:
  2341  000036                     diferenca@valor_lat:
  2342                           	callstack 0
  2343                           
  2344                           ; 4 bytes @ 0x35
  2345  000036                     	ds	1
  2346  000037                     troca_de_tela@fix_signal:
  2347                           	callstack 0
  2348                           
  2349                           ; 2 bytes @ 0x36
  2350  000037                     	ds	1
  2351  000038                     get_fattime@f_time:
  2352                           	callstack 0
  2353                           
  2354                           ; 10 bytes @ 0x37
  2355  000038                     	ds	1
  2356  000039                     ??_move_window:
  2357  000039                     ___fttol@exp1:
  2358                           	callstack 0
  2359                           
  2360                           ; 1 bytes @ 0x38
  2361  000039                     	ds	1
  2362  00003A                     ??_verifica_dados_operacionais:
  2363  00003A                     diferenca@valor_long:
  2364                           	callstack 0
  2365                           
  2366                           ; 4 bytes @ 0x39
  2367  00003A                     	ds	1
  2368  00003B                     check_fs@fs:
  2369                           	callstack 0
  2370                           
  2371                           ; 2 bytes @ 0x3A
  2372  00003B                     	ds	2
  2373  00003D                     auto_mount@path:
  2374                           	callstack 0
  2375                           
  2376                           ; 1 bytes @ 0x3C
  2377  00003D                     	ds	1
  2378  00003E                     auto_mount@chk_wp:
  2379                           	callstack 0
  2380  00003E                     armazena_ltlo@buffer:
  2381                           	callstack 0
  2382                           
  2383                           ; 1 bytes @ 0x3D
  2384  00003E                     	ds	1
  2385  00003F                     armazena_ltlo@index:
  2386                           	callstack 0
  2387                           
  2388                           ; 1 bytes @ 0x3E
  2389  00003F                     	ds	1
  2390  000040                     armazena_ltlo@j:
  2391                           	callstack 0
  2392                           
  2393                           ; 1 bytes @ 0x3F
  2394  000040                     	ds	1
  2395  000041                     armazena_ltlo@i:
  2396                           	callstack 0
  2397                           
  2398                           ; 1 bytes @ 0x40
  2399  000041                     	ds	1
  2400  000042                     
  2401                           ; 1 bytes @ 0x41
  2402  000042                     	ds	1
  2403  000043                     ??_verifica_fence:
  2404  000043                     move_window@n:
  2405                           	callstack 0
  2406                           
  2407                           ; 1 bytes @ 0x42
  2408  000043                     	ds	1
  2409  000044                     move_window@wsect:
  2410                           	callstack 0
  2411                           
  2412                           ; 4 bytes @ 0x43
  2413  000044                     	ds	4
  2414  000048                     move_window@fs:
  2415                           	callstack 0
  2416                           
  2417                           ; 2 bytes @ 0x47
  2418  000048                     	ds	2
  2419  00004A                     ?_get_cluster:
  2420                           	callstack 0
  2421  00004A                     sync@fs:
  2422                           	callstack 0
  2423  00004A                     get_cluster@clust:
  2424                           	callstack 0
  2425                           
  2426                           ; 2 bytes @ 0x49
  2427  00004A                     	ds	2
  2428  00004C                     ??_fputs:
  2429  00004C                     next_dir_entry@dj:
  2430                           	callstack 0
  2431  00004C                     f_close@res:
  2432                           	callstack 0
  2433                           
  2434                           ; 1 bytes @ 0x4B
  2435  00004C                     	ds	1
  2436  00004D                     
  2437                           ; 1 bytes @ 0x4C
  2438 ;;
  2439 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2440 ;;
  2441 ;; *************** function _main *****************
  2442 ;; Defined at:
  2443 ;;		line 224 in file "main.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;		None
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2457 ;;      Params:         0       0       0       0       0       0       0       0       0
  2458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2460 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2461 ;;Total ram usage:        0 bytes
  2462 ;; Hardware stack levels required when called:   18
  2463 ;; This function calls:
  2464 ;;		_escalonador
  2465 ;;		_gps
  2466 ;;		_inicializa_tarefas
  2467 ;;		_inicializa_uart
  2468 ;;		_init_hardware
  2469 ;;		_init_lcd
  2470 ;;		_mensagem_inicial
  2471 ;; This function is called by:
  2472 ;;		Startup code after reset
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           	psect	text0
  2477  005776                     __ptext0:
  2478                           	callstack 0
  2479  005776                     _main:
  2480                           	callstack 13
  2481                           
  2482                           ;main.c: 226: init_hardware();
  2483                           
  2484                           ;incstack = 0
  2485  005776  ECA4  F02D         	call	_init_hardware	;wreg free
  2486                           
  2487                           ;main.c: 227: T0CONbits.TMR0ON = 0;
  2488  00577A  9ED5               	bcf	213,7,c	;volatile
  2489                           
  2490                           ;main.c: 228: init_lcd();
  2491  00577C  ECFE  F022         	call	_init_lcd	;wreg free
  2492                           
  2493                           ;main.c: 229: mensagem_inicial();
  2494  005780  EC4D  F023         	call	_mensagem_inicial	;wreg free
  2495                           
  2496                           ;main.c: 230: inicializa_tarefas();
  2497  005784  EC09  F029         	call	_inicializa_tarefas	;wreg free
  2498                           
  2499                           ; BSR set to: 1
  2500                           ;main.c: 231: inicializa_uart();
  2501  005788  ECC8  F02C         	call	_inicializa_uart	;wreg free
  2502                           
  2503                           ;main.c: 233: T0CONbits.TMR0ON = 1;
  2504  00578C  8ED5               	bsf	213,7,c	;volatile
  2505  00578E                     l13824:
  2506                           
  2507                           ;main.c: 235: {;main.c: 237: if ((sinaliza_int_timer == 1) && (3))
  2508  00578E  0100               	movlb	0	; () banked
  2509  005790  05F2               	decf	_sinaliza_int_timer& (0+255),w,b
  2510  005792  A4D8               	btfss	status,2,c
  2511  005794  D004               	goto	l13830
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;main.c: 238: {;main.c: 239: sinaliza_int_timer = 0;
  2515  005796  0E00               	movlw	0
  2516  005798  6FF2               	movwf	_sinaliza_int_timer& (0+255),b
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;main.c: 240: escalonador();
  2520  00579A  EC07  F022         	call	_escalonador	;wreg free
  2521  00579E                     l13830:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;main.c: 241: };main.c: 242: gps();
  2525  00579E  EC25  F02B         	call	_gps	;wreg free
  2526  0057A2  D7F5               	goto	l13824
  2527  0057A4                     __end_of_main:
  2528                           	callstack 0
  2529                           
  2530 ;; *************** function _mensagem_inicial *****************
  2531 ;; Defined at:
  2532 ;;		line 251 in file "main.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  msg_dois       17   34[COMRAM] const unsigned char [17]
  2537 ;;  msg_linha_um   17   17[COMRAM] const unsigned char [17]
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1    wreg      void 
  2540 ;; Registers used:
  2541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2547 ;;      Params:         0       0       0       0       0       0       0       0       0
  2548 ;;      Locals:        34       0       0       0       0       0       0       0       0
  2549 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2550 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2551 ;;Total ram usage:       36 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:    5
  2554 ;; This function calls:
  2555 ;;		_escreve_cmd_lcd
  2556 ;;		_escreve_frase_ram_lcd
  2557 ;;		_posicao_cursor_lcd
  2558 ;; This function is called by:
  2559 ;;		_main
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text1
  2564  00469A                     __ptext1:
  2565                           	callstack 0
  2566  00469A                     _mensagem_inicial:
  2567                           	callstack 25
  2568                           
  2569                           ;main.c: 253: const unsigned char msg_linha_um[17] = "FATEC ST ANDRE";
  2570                           
  2571                           ;incstack = 0
  2572  00469A  0E18               	movlw	low mensagem_inicial@F3687
  2573  00469C  6EF6               	movwf	tblptrl,c
  2574  00469E                     	if	1	;There is more than 1 active tblptr byte
  2575  00469E  0E61               	movlw	high mensagem_inicial@F3687
  2576  0046A0  6EF7               	movwf	tblptrh,c
  2577  0046A2                     	endif
  2578  0046A2                     	if	1	;There are 3 active tblptr bytes
  2579  0046A2  0E00               	movlw	low (mensagem_inicial@F3687 shr (0+16))
  2580  0046A4  6EF8               	movwf	tblptru,c
  2581  0046A6                     	endif
  2582  0046A6  EE20  F012         	lfsr	2,mensagem_inicial@msg_linha_um
  2583  0046AA  0E10               	movlw	16
  2584  0046AC                     u16500:
  2585  0046AC  0009               	tblrd		*+
  2586  0046AE  CFF5 FFDE          	movff	tablat,postinc2
  2587  0046B2  06E8               	decf	wreg,f,c
  2588  0046B4  E2FB               	bc	u16500
  2589                           
  2590                           ;main.c: 254: const unsigned char msg_dois[17] = "TCC--TELEMTRIA";
  2591  0046B6  0E07               	movlw	low mensagem_inicial@F3689
  2592  0046B8  6EF6               	movwf	tblptrl,c
  2593  0046BA                     	if	1	;There is more than 1 active tblptr byte
  2594  0046BA  0E61               	movlw	high mensagem_inicial@F3689
  2595  0046BC  6EF7               	movwf	tblptrh,c
  2596  0046BE                     	endif
  2597  0046BE                     	if	1	;There are 3 active tblptr bytes
  2598  0046BE  0E00               	movlw	low (mensagem_inicial@F3689 shr (0+16))
  2599  0046C0  6EF8               	movwf	tblptru,c
  2600  0046C2                     	endif
  2601  0046C2  EE20  F023         	lfsr	2,mensagem_inicial@msg_dois
  2602  0046C6  0E10               	movlw	16
  2603  0046C8                     u16510:
  2604  0046C8  0009               	tblrd		*+
  2605  0046CA  CFF5 FFDE          	movff	tablat,postinc2
  2606  0046CE  06E8               	decf	wreg,f,c
  2607  0046D0  E2FB               	bc	u16510
  2608                           
  2609                           ;main.c: 256: posicao_cursor_lcd(1,0);
  2610  0046D2  0E00               	movlw	0
  2611  0046D4  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  2612  0046D6  0E01               	movlw	1
  2613  0046D8  EC55  F027         	call	_posicao_cursor_lcd
  2614                           
  2615                           ;main.c: 257: escreve_frase_ram_lcd(msg_linha_um);
  2616  0046DC  0E12               	movlw	low mensagem_inicial@msg_linha_um
  2617  0046DE  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2618  0046E0  6A0E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2619  0046E2  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
  2620                           
  2621                           ;main.c: 259: posicao_cursor_lcd(2,0);
  2622  0046E6  0E00               	movlw	0
  2623  0046E8  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  2624  0046EA  0E02               	movlw	2
  2625  0046EC  EC55  F027         	call	_posicao_cursor_lcd
  2626                           
  2627                           ;main.c: 260: escreve_frase_ram_lcd(msg_dois);
  2628  0046F0  0E23               	movlw	low mensagem_inicial@msg_dois
  2629  0046F2  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2630  0046F4  6A0E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2631  0046F6  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
  2632                           
  2633                           ;main.c: 261: _delay((unsigned long)((1000)*(48000000/4000.0)));
  2634  0046FA  0E3D               	movlw	61
  2635  0046FC  6E11               	movwf	(??_mensagem_inicial+1)^0,c
  2636  0046FE  0EE1               	movlw	225
  2637  004700  6E10               	movwf	??_mensagem_inicial^0,c
  2638  004702  0E40               	movlw	64
  2639  004704                     u16677:
  2640  004704  2EE8               	decfsz	wreg,f,c
  2641  004706  D7FE               	bra	u16677
  2642  004708  2E10               	decfsz	??_mensagem_inicial^0,f,c
  2643  00470A  D7FC               	bra	u16677
  2644  00470C  2E11               	decfsz	(??_mensagem_inicial+1)^0,f,c
  2645  00470E  D7FA               	bra	u16677
  2646                           
  2647                           ;main.c: 262: escreve_cmd_lcd(0b00000001);
  2648  004710  0E01               	movlw	1
  2649  004712  EC28  F024         	call	_escreve_cmd_lcd
  2650                           
  2651                           ;main.c: 263: posicao_cursor_lcd(1,0);
  2652  004716  0E00               	movlw	0
  2653  004718  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  2654  00471A  0E01               	movlw	1
  2655  00471C  EC55  F027         	call	_posicao_cursor_lcd
  2656                           
  2657                           ;main.c: 264: escreve_frase_ram_lcd("AGUARDE...");
  2658  004720  0EDB               	movlw	low STR_19
  2659  004722  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2660  004724  0E61               	movlw	high STR_19
  2661  004726  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2662  004728  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
  2663  00472C  0012               	return		;funcret
  2664  00472E                     __end_of_mensagem_inicial:
  2665                           	callstack 0
  2666                           
  2667 ;; *************** function _init_lcd *****************
  2668 ;; Defined at:
  2669 ;;		line 71 in file "bibliotecas/display_lcd.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2683 ;;      Params:         0       0       0       0       0       0       0       0       0
  2684 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2685 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2686 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2687 ;;Total ram usage:        1 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    4
  2690 ;; This function calls:
  2691 ;;		_delay
  2692 ;;		_escreve_cmd_lcd
  2693 ;; This function is called by:
  2694 ;;		_main
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text2
  2699  0045FC                     __ptext2:
  2700                           	callstack 0
  2701  0045FC                     _init_lcd:
  2702                           	callstack 26
  2703                           
  2704                           ;display_lcd.c: 74: TRISDbits.RD2 = 0;
  2705                           
  2706                           ;incstack = 0
  2707  0045FC  9495               	bcf	149,2,c	;volatile
  2708                           
  2709                           ;display_lcd.c: 75: TRISDbits.RD1 = 0;
  2710  0045FE  9295               	bcf	149,1,c	;volatile
  2711                           
  2712                           ;display_lcd.c: 76: TRISDbits.RD0 = 0;
  2713  004600  9095               	bcf	149,0,c	;volatile
  2714                           
  2715                           ;display_lcd.c: 79: TRISDbits.RD4=0;
  2716  004602  9895               	bcf	149,4,c	;volatile
  2717                           
  2718                           ;display_lcd.c: 80: TRISDbits.RD5=0;
  2719  004604  9A95               	bcf	149,5,c	;volatile
  2720                           
  2721                           ;display_lcd.c: 81: TRISDbits.RD6=0;
  2722  004606  9C95               	bcf	149,6,c	;volatile
  2723                           
  2724                           ;display_lcd.c: 82: TRISDbits.RD7=0;
  2725  004608  9E95               	bcf	149,7,c	;volatile
  2726                           
  2727                           ;display_lcd.c: 89: PORTDbits.RD2 = 0;
  2728  00460A  9483               	bcf	131,2,c	;volatile
  2729                           
  2730                           ;display_lcd.c: 90: PORTDbits.RD1 = 0;
  2731  00460C  9283               	bcf	131,1,c	;volatile
  2732                           
  2733                           ;display_lcd.c: 91: PORTDbits.RD0 = 0;
  2734  00460E  9083               	bcf	131,0,c	;volatile
  2735                           
  2736                           ;display_lcd.c: 95: PORTDbits.RD7=0;
  2737  004610  9E83               	bcf	131,7,c	;volatile
  2738                           
  2739                           ;display_lcd.c: 96: PORTDbits.RD6=0;
  2740  004612  9C83               	bcf	131,6,c	;volatile
  2741                           
  2742                           ;display_lcd.c: 97: PORTDbits.RD5=1;
  2743  004614  8A83               	bsf	131,5,c	;volatile
  2744                           
  2745                           ;display_lcd.c: 98: PORTDbits.RD4=1;
  2746  004616  8883               	bsf	131,4,c	;volatile
  2747                           
  2748                           ;display_lcd.c: 103: _delay((unsigned long)((15)*(48000000/4000.0)));
  2749  004618  0EEA               	movlw	234
  2750  00461A  6E0D               	movwf	??_init_lcd^0,c
  2751  00461C  0EC3               	movlw	195
  2752  00461E                     u16687:
  2753  00461E  2EE8               	decfsz	wreg,f,c
  2754  004620  D7FE               	bra	u16687
  2755  004622  2E0D               	decfsz	??_init_lcd^0,f,c
  2756  004624  D7FC               	bra	u16687
  2757  004626  F000               	nop	
  2758                           
  2759                           ;display_lcd.c: 107: PORTDbits.RD0 = 1;
  2760  004628  8083               	bsf	131,0,c	;volatile
  2761                           
  2762                           ;display_lcd.c: 108: delay();
  2763  00462A  EC5E  F02D         	call	_delay	;wreg free
  2764                           
  2765                           ;display_lcd.c: 109: PORTDbits.RD0 = 0;
  2766  00462E  9083               	bcf	131,0,c	;volatile
  2767                           
  2768                           ;display_lcd.c: 110: delay();
  2769  004630  EC5E  F02D         	call	_delay	;wreg free
  2770                           
  2771                           ;display_lcd.c: 115: _delay((unsigned long)((5)*(48000000/4000.0)));
  2772  004634  0E4E               	movlw	78
  2773  004636  6E0D               	movwf	??_init_lcd^0,c
  2774  004638  0EEB               	movlw	235
  2775  00463A                     u16697:
  2776  00463A  2EE8               	decfsz	wreg,f,c
  2777  00463C  D7FE               	bra	u16697
  2778  00463E  2E0D               	decfsz	??_init_lcd^0,f,c
  2779  004640  D7FC               	bra	u16697
  2780  004642  F000               	nop	
  2781                           
  2782                           ;display_lcd.c: 118: PORTDbits.RD0 = 1;
  2783  004644  8083               	bsf	131,0,c	;volatile
  2784                           
  2785                           ;display_lcd.c: 119: delay();
  2786  004646  EC5E  F02D         	call	_delay	;wreg free
  2787                           
  2788                           ;display_lcd.c: 120: PORTDbits.RD0 = 0;
  2789  00464A  9083               	bcf	131,0,c	;volatile
  2790                           
  2791                           ;display_lcd.c: 121: delay();
  2792  00464C  EC5E  F02D         	call	_delay	;wreg free
  2793                           
  2794                           ;display_lcd.c: 126: _delay((unsigned long)((5)*(48000000/4000.0)));
  2795  004650  0E4E               	movlw	78
  2796  004652  6E0D               	movwf	??_init_lcd^0,c
  2797  004654  0EEB               	movlw	235
  2798  004656                     u16707:
  2799  004656  2EE8               	decfsz	wreg,f,c
  2800  004658  D7FE               	bra	u16707
  2801  00465A  2E0D               	decfsz	??_init_lcd^0,f,c
  2802  00465C  D7FC               	bra	u16707
  2803  00465E  F000               	nop	
  2804                           
  2805                           ;display_lcd.c: 129: PORTDbits.RD0 = 1;
  2806  004660  8083               	bsf	131,0,c	;volatile
  2807                           
  2808                           ;display_lcd.c: 130: delay();
  2809  004662  EC5E  F02D         	call	_delay	;wreg free
  2810                           
  2811                           ;display_lcd.c: 131: PORTDbits.RD0 = 0;
  2812  004666  9083               	bcf	131,0,c	;volatile
  2813                           
  2814                           ;display_lcd.c: 132: delay();
  2815  004668  EC5E  F02D         	call	_delay	;wreg free
  2816                           
  2817                           ;display_lcd.c: 135: PORTDbits.RD7=0;
  2818  00466C  9E83               	bcf	131,7,c	;volatile
  2819                           
  2820                           ;display_lcd.c: 136: PORTDbits.RD6=0;
  2821  00466E  9C83               	bcf	131,6,c	;volatile
  2822                           
  2823                           ;display_lcd.c: 137: PORTDbits.RD5=1;
  2824  004670  8A83               	bsf	131,5,c	;volatile
  2825                           
  2826                           ;display_lcd.c: 138: PORTDbits.RD4=0;
  2827  004672  9883               	bcf	131,4,c	;volatile
  2828                           
  2829                           ;display_lcd.c: 142: PORTDbits.RD0 = 1;
  2830  004674  8083               	bsf	131,0,c	;volatile
  2831                           
  2832                           ;display_lcd.c: 143: delay();
  2833  004676  EC5E  F02D         	call	_delay	;wreg free
  2834                           
  2835                           ;display_lcd.c: 144: PORTDbits.RD0 = 0;
  2836  00467A  9083               	bcf	131,0,c	;volatile
  2837                           
  2838                           ;display_lcd.c: 145: delay();
  2839  00467C  EC5E  F02D         	call	_delay	;wreg free
  2840                           
  2841                           ;display_lcd.c: 149: escreve_cmd_lcd(0b00101000);
  2842  004680  0E28               	movlw	40
  2843  004682  EC28  F024         	call	_escreve_cmd_lcd
  2844                           
  2845                           ;display_lcd.c: 150: escreve_cmd_lcd(0b00000110);
  2846  004686  0E06               	movlw	6
  2847  004688  EC28  F024         	call	_escreve_cmd_lcd
  2848                           
  2849                           ;display_lcd.c: 151: escreve_cmd_lcd(0b00001110);
  2850  00468C  0E0E               	movlw	14
  2851  00468E  EC28  F024         	call	_escreve_cmd_lcd
  2852                           
  2853                           ;display_lcd.c: 152: escreve_cmd_lcd(0b00000001);
  2854  004692  0E01               	movlw	1
  2855  004694  EC28  F024         	call	_escreve_cmd_lcd
  2856  004698  0012               	return		;funcret
  2857  00469A                     __end_of_init_lcd:
  2858                           	callstack 0
  2859                           
  2860 ;; *************** function _init_hardware *****************
  2861 ;; Defined at:
  2862 ;;		line 52 in file "bibliotecas/hardware.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2879 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2880 ;;Total ram usage:        0 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    4
  2883 ;; This function calls:
  2884 ;;		_config_timer_dois
  2885 ;;		_config_timer_zero
  2886 ;;		_init_interrupt
  2887 ;;		_init_oscilador
  2888 ;;		_init_ports
  2889 ;; This function is called by:
  2890 ;;		_main
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text3
  2895  005B48                     __ptext3:
  2896                           	callstack 0
  2897  005B48                     _init_hardware:
  2898                           	callstack 26
  2899                           
  2900                           ;hardware.c: 55: init_oscilador();
  2901                           
  2902                           ;incstack = 0
  2903  005B48  EC2A  F02E         	call	_init_oscilador	;wreg free
  2904                           
  2905                           ;hardware.c: 58: init_ports();
  2906  005B4C  EC7C  F02D         	call	_init_ports	;wreg free
  2907                           
  2908                           ;hardware.c: 61: config_timer_zero();
  2909  005B50  EC8A  F02D         	call	_config_timer_zero	;wreg free
  2910                           
  2911                           ;hardware.c: 64: config_timer_dois();
  2912  005B54  ECE9  F02D         	call	_config_timer_dois	;wreg free
  2913                           
  2914                           ;hardware.c: 67: init_interrupt();
  2915  005B58  ECAF  F02D         	call	_init_interrupt	;wreg free
  2916  005B5C  0012               	return		;funcret
  2917  005B5E                     __end_of_init_hardware:
  2918                           	callstack 0
  2919                           
  2920 ;; *************** function _init_ports *****************
  2921 ;; Defined at:
  2922 ;;		line 151 in file "bibliotecas/hardware.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;		None
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2936 ;;      Params:         0       0       0       0       0       0       0       0       0
  2937 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2939 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2940 ;;Total ram usage:        0 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:    2
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_init_hardware
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text4
  2951  005AF8                     __ptext4:
  2952                           	callstack 0
  2953  005AF8                     _init_ports:
  2954                           	callstack 27
  2955                           
  2956                           ;hardware.c: 153: ADCON1 = 0X0F;
  2957                           
  2958                           ;incstack = 0
  2959  005AF8  0E0F               	movlw	15
  2960  005AFA  6EC1               	movwf	193,c	;volatile
  2961                           
  2962                           ;hardware.c: 154: TRISB = 0b00000001;
  2963  005AFC  0E01               	movlw	1
  2964  005AFE  6E93               	movwf	147,c	;volatile
  2965                           
  2966                           ;hardware.c: 155: LATB = 0xFF;
  2967  005B00  688A               	setf	138,c	;volatile
  2968                           
  2969                           ;hardware.c: 156: TRISD = 0x00;
  2970  005B02  0E00               	movlw	0
  2971  005B04  6E95               	movwf	149,c	;volatile
  2972                           
  2973                           ;hardware.c: 157: TRISA = 0b00000111;
  2974  005B06  0E07               	movlw	7
  2975  005B08  6E92               	movwf	146,c	;volatile
  2976                           
  2977                           ;hardware.c: 158: TRISC = 0x01111111;
  2978  005B0A  0E11               	movlw	17
  2979  005B0C  6E94               	movwf	148,c	;volatile
  2980                           
  2981                           ;hardware.c: 159: TRISE = 0b00000111;
  2982  005B0E  0E07               	movlw	7
  2983  005B10  6E96               	movwf	150,c	;volatile
  2984  005B12  0012               	return		;funcret
  2985  005B14                     __end_of_init_ports:
  2986                           	callstack 0
  2987                           
  2988 ;; *************** function _init_oscilador *****************
  2989 ;; Defined at:
  2990 ;;		line 169 in file "bibliotecas/hardware.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		None
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3004 ;;      Params:         0       0       0       0       0       0       0       0       0
  3005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3007 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3008 ;;Total ram usage:        0 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    2
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_init_hardware
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text5
  3019  005C54                     __ptext5:
  3020                           	callstack 0
  3021  005C54                     _init_oscilador:
  3022                           	callstack 27
  3023                           
  3024                           ;hardware.c: 172: OSCCONbits.IRCF0 = 1;
  3025                           
  3026                           ;incstack = 0
  3027  005C54  88D3               	bsf	211,4,c	;volatile
  3028                           
  3029                           ;hardware.c: 173: OSCCONbits.IRCF1 = 1;
  3030  005C56  8AD3               	bsf	211,5,c	;volatile
  3031                           
  3032                           ;hardware.c: 174: OSCCONbits.IRCF2 = 1;
  3033  005C58  8CD3               	bsf	211,6,c	;volatile
  3034  005C5A  0012               	return		;funcret
  3035  005C5C                     __end_of_init_oscilador:
  3036                           	callstack 0
  3037                           
  3038 ;; *************** function _init_interrupt *****************
  3039 ;; Defined at:
  3040 ;;		line 94 in file "bibliotecas/hardware.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;		None
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;		None
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3054 ;;      Params:         0       0       0       0       0       0       0       0       0
  3055 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3057 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3058 ;;Total ram usage:        0 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:    2
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_init_hardware
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text6
  3069  005B5E                     __ptext6:
  3070                           	callstack 0
  3071  005B5E                     _init_interrupt:
  3072                           	callstack 27
  3073                           
  3074                           ;hardware.c: 96: INTCON = 0b10110000;
  3075                           
  3076                           ;incstack = 0
  3077  005B5E  0EB0               	movlw	176
  3078  005B60  6EF2               	movwf	242,c	;volatile
  3079                           
  3080                           ;hardware.c: 97: INTCON2 = 0b00000000;
  3081  005B62  0E00               	movlw	0
  3082  005B64  6EF1               	movwf	241,c	;volatile
  3083                           
  3084                           ;hardware.c: 98: INTCON3 = 0b00000000;
  3085  005B66  0E00               	movlw	0
  3086  005B68  6EF0               	movwf	240,c	;volatile
  3087                           
  3088                           ;hardware.c: 100: PIE1 = 0b00101000;
  3089  005B6A  0E28               	movlw	40
  3090  005B6C  6E9D               	movwf	157,c	;volatile
  3091  005B6E  0012               	return		;funcret
  3092  005B70                     __end_of_init_interrupt:
  3093                           	callstack 0
  3094                           
  3095 ;; *************** function _config_timer_zero *****************
  3096 ;; Defined at:
  3097 ;;		line 79 in file "bibliotecas/hardware.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;		None
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3111 ;;      Params:         0       0       0       0       0       0       0       0       0
  3112 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3114 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3115 ;;Total ram usage:        0 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:    3
  3118 ;; This function calls:
  3119 ;;		_write_timer_zero
  3120 ;; This function is called by:
  3121 ;;		_init_hardware
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text7
  3126  005B14                     __ptext7:
  3127                           	callstack 0
  3128  005B14                     _config_timer_zero:
  3129                           	callstack 26
  3130                           
  3131                           ;hardware.c: 81: T0CON = 0b11000101;
  3132                           
  3133                           ;incstack = 0
  3134  005B14  0EC5               	movlw	197
  3135  005B16  6ED5               	movwf	213,c	;volatile
  3136                           
  3137                           ;hardware.c: 82: SPPCON = 0b00000000;
  3138  005B18  0E00               	movlw	0
  3139  005B1A  6E65               	movwf	101,c	;volatile
  3140                           
  3141                           ;hardware.c: 83: SPPCFG = 0b00000000;
  3142  005B1C  0E00               	movlw	0
  3143  005B1E  6E63               	movwf	99,c	;volatile
  3144                           
  3145                           ;hardware.c: 84: write_timer_zero(0x45);
  3146  005B20  0E00               	movlw	0
  3147  005B22  6E0B               	movwf	(write_timer_zero@timer0+1)^0,c
  3148  005B24  0E45               	movlw	69
  3149  005B26  6E0A               	movwf	write_timer_zero@timer0^0,c
  3150  005B28  EC02  F02E         	call	_write_timer_zero	;wreg free
  3151  005B2C  0012               	return		;funcret
  3152  005B2E                     __end_of_config_timer_zero:
  3153                           	callstack 0
  3154                           
  3155 ;; *************** function _write_timer_zero *****************
  3156 ;; Defined at:
  3157 ;;		line 134 in file "bibliotecas/hardware.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  timer0          2    9[COMRAM] unsigned int 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		None
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3171 ;;      Params:         2       0       0       0       0       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3174 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3175 ;;Total ram usage:        2 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    2
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_config_timer_zero
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text8
  3186  005C04                     __ptext8:
  3187                           	callstack 0
  3188  005C04                     _write_timer_zero:
  3189                           	callstack 26
  3190                           
  3191                           ;hardware.c: 142: TMR0 = timer0;
  3192                           
  3193                           ;incstack = 0
  3194  005C04  C00A  FFD6         	movff	write_timer_zero@timer0,4054	;volatile
  3195  005C08  C00B  FFD7         	movff	write_timer_zero@timer0+1,4055	;volatile
  3196  005C0C  0012               	return		;funcret
  3197  005C0E                     __end_of_write_timer_zero:
  3198                           	callstack 0
  3199                           
  3200 ;; *************** function _config_timer_dois *****************
  3201 ;; Defined at:
  3202 ;;		line 198 in file "bibliotecas/hardware.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;		None
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;		None
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      void 
  3209 ;; Registers used:
  3210 ;;		wreg, status,2
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3216 ;;      Params:         0       0       0       0       0       0       0       0       0
  3217 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3219 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3220 ;;Total ram usage:        0 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:    2
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_init_hardware
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	text9
  3231  005BD2                     __ptext9:
  3232                           	callstack 0
  3233  005BD2                     _config_timer_dois:
  3234                           	callstack 27
  3235                           
  3236                           ;hardware.c: 200: T2CON = 0b00000100;
  3237                           
  3238                           ;incstack = 0
  3239  005BD2  0E04               	movlw	4
  3240  005BD4  6ECA               	movwf	202,c	;volatile
  3241                           
  3242                           ;hardware.c: 201: TMR2 = 0;
  3243  005BD6  0E00               	movlw	0
  3244  005BD8  6ECC               	movwf	204,c	;volatile
  3245                           
  3246                           ;hardware.c: 202: PR2 = 0x01;
  3247  005BDA  0E01               	movlw	1
  3248  005BDC  6ECB               	movwf	203,c	;volatile
  3249  005BDE  0012               	return		;funcret
  3250  005BE0                     __end_of_config_timer_dois:
  3251                           	callstack 0
  3252                           
  3253 ;; *************** function _inicializa_tarefas *****************
  3254 ;; Defined at:
  3255 ;;		line 174 in file "main.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 3F/1
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3269 ;;      Params:         0       0       0       0       0       0       0       0       0
  3270 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3272 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3273 ;;Total ram usage:        0 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    2
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text10
  3284  005212                     __ptext10:
  3285                           	callstack 0
  3286  005212                     _inicializa_tarefas:
  3287                           	callstack 28
  3288                           
  3289                           ;main.c: 177: p_tarefas[0] = verifica_dados_operacionais;
  3290                           
  3291                           ;incstack = 0
  3292  005212  0E0C               	movlw	low _verifica_dados_operacionais
  3293  005214  0101               	movlb	1	; () banked
  3294  005216  6F39               	movwf	_p_tarefas& (0+255),b
  3295  005218  0E2F               	movlw	high _verifica_dados_operacionais
  3296  00521A  6F3A               	movwf	(_p_tarefas+1)& (0+255),b
  3297                           
  3298                           ;main.c: 178: p_tarefas[1] = disparo_gravacao;
  3299  00521C  0E10               	movlw	low _disparo_gravacao
  3300  00521E  6F3B               	movwf	(_p_tarefas+2)& (0+255),b
  3301  005220  0E28               	movlw	high _disparo_gravacao
  3302  005222  6F3C               	movwf	(_p_tarefas+3)& (0+255),b
  3303                           
  3304                           ;main.c: 179: p_tarefas[2] = troca_de_tela;
  3305  005224  0EFC               	movlw	low _troca_de_tela
  3306  005226  6F3D               	movwf	(_p_tarefas+4)& (0+255),b
  3307  005228  0E1B               	movlw	high _troca_de_tela
  3308  00522A  6F3E               	movwf	(_p_tarefas+5)& (0+255),b
  3309                           
  3310                           ; BSR set to: 1
  3311                           ;main.c: 183: tempo_backup[0] = 500;
  3312  00522C  0E01               	movlw	1
  3313  00522E  6F34               	movwf	(_tempo_backup+1)& (0+255),b
  3314  005230  0EF4               	movlw	244
  3315  005232  6F33               	movwf	_tempo_backup& (0+255),b
  3316                           
  3317                           ; BSR set to: 1
  3318                           ;main.c: 184: tempo_backup[1] = 1000;
  3319  005234  0E03               	movlw	3
  3320  005236  6F36               	movwf	(_tempo_backup+3)& (0+255),b
  3321  005238  0EE8               	movlw	232
  3322  00523A  6F35               	movwf	(_tempo_backup+2)& (0+255),b
  3323                           
  3324                           ; BSR set to: 1
  3325                           ;main.c: 185: tempo_backup[2] = 5000;
  3326  00523C  0E13               	movlw	19
  3327  00523E  6F38               	movwf	(_tempo_backup+5)& (0+255),b
  3328  005240  0E88               	movlw	136
  3329  005242  6F37               	movwf	(_tempo_backup+4)& (0+255),b
  3330                           
  3331                           ; BSR set to: 1
  3332                           ;main.c: 188: tempo_tarefa[0] = 500;
  3333  005244  0E01               	movlw	1
  3334  005246  6F2E               	movwf	(_tempo_tarefa+1)& (0+255),b
  3335  005248  0EF4               	movlw	244
  3336  00524A  6F2D               	movwf	_tempo_tarefa& (0+255),b
  3337                           
  3338                           ; BSR set to: 1
  3339                           ;main.c: 189: tempo_tarefa[1] = 1000;
  3340  00524C  0E03               	movlw	3
  3341  00524E  6F30               	movwf	(_tempo_tarefa+3)& (0+255),b
  3342  005250  0EE8               	movlw	232
  3343  005252  6F2F               	movwf	(_tempo_tarefa+2)& (0+255),b
  3344                           
  3345                           ; BSR set to: 1
  3346                           ;main.c: 190: tempo_tarefa[2] = 5000;
  3347  005254  0E13               	movlw	19
  3348  005256  6F32               	movwf	(_tempo_tarefa+5)& (0+255),b
  3349  005258  0E88               	movlw	136
  3350  00525A  6F31               	movwf	(_tempo_tarefa+4)& (0+255),b
  3351                           
  3352                           ; BSR set to: 1
  3353                           ;main.c: 192: tarefa_em_execucao = 0;
  3354  00525C  0E00               	movlw	0
  3355  00525E  6E52               	movwf	_tarefa_em_execucao^0,c	;volatile
  3356                           
  3357                           ; BSR set to: 1
  3358  005260  0012               	return		;funcret
  3359  005262                     __end_of_inicializa_tarefas:
  3360                           	callstack 0
  3361                           
  3362 ;; *************** function _escalonador *****************
  3363 ;; Defined at:
  3364 ;;		line 203 in file "main.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;  cont            1  134[BANK0 ] unsigned char 
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3373 ;; Tracked objects:
  3374 ;;		On entry : 3F/0
  3375 ;;		On exit  : 3F/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3378 ;;      Params:         0       0       0       0       0       0       0       0       0
  3379 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3380 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3381 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3382 ;;Total ram usage:        3 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:   17
  3385 ;; This function calls:
  3386 ;;		_disparo_gravacao
  3387 ;;		_troca_de_tela
  3388 ;;		_verifica_dados_operacionais
  3389 ;; This function is called by:
  3390 ;;		_main
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text11
  3395  00440E                     __ptext11:
  3396                           	callstack 0
  3397  00440E                     _escalonador:
  3398                           	callstack 13
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;main.c: 205: unsigned char cont;;main.c: 206: for(cont = 0; cont<3;cont++)
  3402                           
  3403                           ; BSR set to: 1
  3404                           ;incstack = 0
  3405  00440E  0E00               	movlw	0
  3406  004410  6FE6               	movwf	escalonador@cont& (0+255),b
  3407  004412                     l13794:
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;main.c: 207: {;main.c: 208: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  3411  004412  51E6               	movf	escalonador@cont& (0+255),w,b
  3412  004414  0D02               	mullw	2
  3413  004416  0E39               	movlw	low _p_tarefas
  3414  004418  24F3               	addwf	243,w,c
  3415  00441A  6ED9               	movwf	fsr2l,c
  3416  00441C  0E01               	movlw	high _p_tarefas
  3417  00441E  20F4               	addwfc	prodh,w,c
  3418  004420  6EDA               	movwf	fsr2h,c
  3419  004422  50DE               	movf	postinc2,w,c
  3420  004424  10DE               	iorwf	postinc2,w,c
  3421  004426  B4D8               	btfsc	status,2,c
  3422  004428  D042               	goto	l13806
  3423                           
  3424                           ; BSR set to: 0
  3425  00442A  51E6               	movf	escalonador@cont& (0+255),w,b
  3426  00442C  0D02               	mullw	2
  3427  00442E  0E2D               	movlw	low _tempo_tarefa
  3428  004430  24F3               	addwf	243,w,c
  3429  004432  6ED9               	movwf	fsr2l,c
  3430  004434  0E01               	movlw	high _tempo_tarefa
  3431  004436  20F4               	addwfc	prodh,w,c
  3432  004438  6EDA               	movwf	fsr2h,c
  3433  00443A  50DE               	movf	postinc2,w,c
  3434  00443C  10DE               	iorwf	postinc2,w,c
  3435  00443E  A4D8               	btfss	status,2,c
  3436  004440  D036               	goto	l13806
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;main.c: 209: {;main.c: 210: tarefa_em_execucao = 1;
  3440  004442  0E01               	movlw	1
  3441  004444  6E52               	movwf	_tarefa_em_execucao^0,c	;volatile
  3442                           
  3443                           ;main.c: 211: timeout_tarefa = 65000;
  3444  004446  0EFD               	movlw	253
  3445  004448  0101               	movlb	1	; () banked
  3446  00444A  6F71               	movwf	(_timeout_tarefa+1)& (0+255),b
  3447  00444C  0EE8               	movlw	232
  3448  00444E  6F70               	movwf	_timeout_tarefa& (0+255),b
  3449                           
  3450                           ; BSR set to: 1
  3451                           ;main.c: 212: p_tarefas[cont]();
  3452  004450  0100               	movlb	0	; () banked
  3453  004452  51E6               	movf	escalonador@cont& (0+255),w,b
  3454  004454  0D02               	mullw	2
  3455  004456  0E39               	movlw	low _p_tarefas
  3456  004458  24F3               	addwf	243,w,c
  3457  00445A  6ED9               	movwf	fsr2l,c
  3458  00445C  0E01               	movlw	high _p_tarefas
  3459  00445E  20F4               	addwfc	prodh,w,c
  3460  004460  6EDA               	movwf	fsr2h,c
  3461  004462  CFDE F0E4          	movff	postinc2,??_escalonador
  3462  004466  CFDD F0E5          	movff	postdec2,??_escalonador+1
  3463  00446A  D801               	call	u16648
  3464  00446C  D009               	goto	u16649
  3465  00446E                     u16648:
  3466  00446E  0005               	push	
  3467  004470  6EFA               	movwf	pclath,c
  3468  004472  51E4               	movf	??_escalonador& (0+255),w,b
  3469  004474  6EFD               	movwf	tosl,c
  3470  004476  51E5               	movf	(??_escalonador+1)& (0+255),w,b
  3471  004478  6EFE               	movwf	tosh,c
  3472  00447A  6AFF               	clrf	tosu,c
  3473  00447C  50FA               	movf	pclath,w,c
  3474  00447E  0012               	return		;indir
  3475  004480                     u16649:
  3476                           
  3477                           ;main.c: 213: tarefa_em_execucao = 0;
  3478  004480  0E00               	movlw	0
  3479  004482  6E52               	movwf	_tarefa_em_execucao^0,c	;volatile
  3480                           
  3481                           ;main.c: 214: tempo_tarefa[cont] = tempo_backup[cont];
  3482  004484  0100               	movlb	0	; () banked
  3483  004486  51E6               	movf	escalonador@cont& (0+255),w,b
  3484  004488  0D02               	mullw	2
  3485  00448A  0E33               	movlw	low _tempo_backup
  3486  00448C  24F3               	addwf	243,w,c
  3487  00448E  6ED9               	movwf	fsr2l,c
  3488  004490  0E01               	movlw	high _tempo_backup
  3489  004492  20F4               	addwfc	prodh,w,c
  3490  004494  6EDA               	movwf	fsr2h,c
  3491  004496  51E6               	movf	escalonador@cont& (0+255),w,b
  3492  004498  0D02               	mullw	2
  3493  00449A  0E2D               	movlw	low _tempo_tarefa
  3494  00449C  24F3               	addwf	243,w,c
  3495  00449E  6EE1               	movwf	fsr1l,c
  3496  0044A0  0E01               	movlw	high _tempo_tarefa
  3497  0044A2  20F4               	addwfc	prodh,w,c
  3498  0044A4  6EE2               	movwf	fsr1h,c
  3499  0044A6  CFDE FFE6          	movff	postinc2,postinc1
  3500  0044AA  CFDD FFE5          	movff	postdec2,postdec1
  3501  0044AE                     l13806:
  3502                           
  3503                           ; BSR set to: 0
  3504  0044AE  2BE6               	incf	escalonador@cont& (0+255),f,b
  3505                           
  3506                           ; BSR set to: 0
  3507  0044B0  0E02               	movlw	2
  3508  0044B2  65E6               	cpfsgt	escalonador@cont& (0+255),b
  3509  0044B4  D7AE               	goto	l13794
  3510  0044B6  0012               	return	
  3511  0044B8                     __end_of_escalonador:
  3512                           	callstack 0
  3513                           
  3514 ;; *************** function _troca_de_tela *****************
  3515 ;; Defined at:
  3516 ;;		line 413 in file "main.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;		None
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  fix_signal      2   54[COMRAM] PTR unsigned char 
  3521 ;;		 -> rawFix(2), 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      void 
  3524 ;; Registers used:
  3525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3526 ;; Tracked objects:
  3527 ;;		On entry : 3F/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3531 ;;      Params:         0       0       0       0       0       0       0       0       0
  3532 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3533 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3534 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3535 ;;Total ram usage:        3 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; Hardware stack levels required when called:    6
  3538 ;; This function calls:
  3539 ;;		_escreve_caractere_lcd
  3540 ;;		_escreve_cmd_lcd
  3541 ;;		_escreve_frase_ram_lcd
  3542 ;;		_escreve_inteiro_lcd
  3543 ;;		_fix
  3544 ;;		_mostra_dados_display
  3545 ;;		_posicao_cursor_lcd
  3546 ;;		_recebe_dado_gps
  3547 ;; This function is called by:
  3548 ;;		_inicializa_tarefas
  3549 ;;		_escalonador
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text12
  3554  001BFC                     __ptext12:
  3555                           	callstack 0
  3556  001BFC                     _troca_de_tela:
  3557                           	callstack 23
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;main.c: 415: static unsigned char state = 0;;main.c: 416: static unsigned char last_sta
      +                          te = 0;;main.c: 417: unsigned char *fix_signal;;main.c: 419: if(!PORTEbits.RE0 || (state
      +                           == 1 ))
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;incstack = 0
  3564  001BFC  A084               	btfss	132,0,c	;volatile
  3565  001BFE  D003               	goto	u16140
  3566                           
  3567                           ; BSR set to: 0
  3568  001C00  0450               	decf	troca_de_tela@state^0,w,c
  3569  001C02  A4D8               	btfss	status,2,c
  3570  001C04  D0E2               	goto	l13414
  3571  001C06                     u16140:
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;main.c: 420: {;main.c: 422: if(!time_atualizacao)
  3575  001C06  51EA               	movf	_time_atualizacao& (0+255),w,b
  3576  001C08  11EB               	iorwf	(_time_atualizacao+1)& (0+255),w,b
  3577  001C0A  A4D8               	btfss	status,2,c
  3578  001C0C  D061               	goto	l13374
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;main.c: 423: {;main.c: 424: if(!fence_flag[2].point)
  3582  001C0E  B1E9               	btfsc	(_fence_flag+2)& (0+255),0,b
  3583  001C10  D00C               	goto	l13352
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;main.c: 425: {;main.c: 426: posicao_cursor_lcd(1,8);
  3587  001C12  0E08               	movlw	8
  3588  001C14  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3589  001C16  0E01               	movlw	1
  3590  001C18  EC55  F027         	call	_posicao_cursor_lcd
  3591                           
  3592                           ;main.c: 427: escreve_frase_ram_lcd("DENTRO");
  3593  001C1C  0E4F               	movlw	low STR_22
  3594  001C1E  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3595  001C20  0E62               	movlw	high STR_22
  3596  001C22  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3597  001C24  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3598                           
  3599                           ;main.c: 428: }
  3600  001C28  D03C               	goto	l13366
  3601  001C2A                     l13352:
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;main.c: 429: else;main.c: 430: {;main.c: 431: posicao_cursor_lcd(1,8);
  3605  001C2A  0E08               	movlw	8
  3606  001C2C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3607  001C2E  0E01               	movlw	1
  3608  001C30  EC55  F027         	call	_posicao_cursor_lcd
  3609                           
  3610                           ;main.c: 432: escreve_frase_ram_lcd("FORA");
  3611  001C34  0E61               	movlw	low STR_23
  3612  001C36  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3613  001C38  0E62               	movlw	high STR_23
  3614  001C3A  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3615  001C3C  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3616                           
  3617                           ;main.c: 433: posicao_cursor_lcd(1,13);
  3618  001C40  0E0D               	movlw	13
  3619  001C42  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3620  001C44  0E01               	movlw	1
  3621  001C46  EC55  F027         	call	_posicao_cursor_lcd
  3622                           
  3623                           ;main.c: 434: escreve_inteiro_lcd(fence_flag[0].point);
  3624  001C4A  0100               	movlb	0	; () banked
  3625  001C4C  A1E7               	btfss	_fence_flag& (0+255),0,b
  3626  001C4E  D003               	goto	u16170
  3627  001C50  6A36               	clrf	??_troca_de_tela^0,c
  3628  001C52  2A36               	incf	??_troca_de_tela^0,f,c
  3629  001C54  D001               	goto	u16178
  3630  001C56                     u16170:
  3631  001C56  6A36               	clrf	??_troca_de_tela^0,c
  3632  001C58                     u16178:
  3633  001C58  5036               	movf	??_troca_de_tela^0,w,c
  3634  001C5A  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3635  001C5C  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3636  001C5E  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3637  001C60  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3638  001C62  ECAF  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3639                           
  3640                           ;main.c: 435: posicao_cursor_lcd(1,14);
  3641  001C66  0E0E               	movlw	14
  3642  001C68  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3643  001C6A  0E01               	movlw	1
  3644  001C6C  EC55  F027         	call	_posicao_cursor_lcd
  3645                           
  3646                           ;main.c: 436: escreve_frase_ram_lcd("|");
  3647  001C70  0E7C               	movlw	low STR_24
  3648  001C72  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3649  001C74  0E62               	movlw	high STR_24
  3650  001C76  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3651  001C78  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3652                           
  3653                           ;main.c: 437: posicao_cursor_lcd(1,15);
  3654  001C7C  0E0F               	movlw	15
  3655  001C7E  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3656  001C80  0E01               	movlw	1
  3657  001C82  EC55  F027         	call	_posicao_cursor_lcd
  3658                           
  3659                           ;main.c: 438: escreve_inteiro_lcd(fence_flag[1].point);
  3660  001C86  0100               	movlb	0	; () banked
  3661  001C88  A1E8               	btfss	(_fence_flag+1)& (0+255),0,b
  3662  001C8A  D003               	goto	u16180
  3663  001C8C  6A36               	clrf	??_troca_de_tela^0,c
  3664  001C8E  2A36               	incf	??_troca_de_tela^0,f,c
  3665  001C90  D001               	goto	u16188
  3666  001C92                     u16180:
  3667  001C92  6A36               	clrf	??_troca_de_tela^0,c
  3668  001C94                     u16188:
  3669  001C94  5036               	movf	??_troca_de_tela^0,w,c
  3670  001C96  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3671  001C98  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3672  001C9A  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3673  001C9C  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3674  001C9E  ECAF  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3675  001CA2                     l13366:
  3676                           
  3677                           ;main.c: 439: };main.c: 441: fix_signal = fix();
  3678  001CA2  EC20  F02E         	call	_fix	;wreg free
  3679  001CA6  C00A  F037         	movff	?_fix,troca_de_tela@fix_signal
  3680  001CAA  C00B  F038         	movff	?_fix+1,troca_de_tela@fix_signal+1
  3681                           
  3682                           ;main.c: 442: posicao_cursor_lcd(2,8);
  3683  001CAE  0E08               	movlw	8
  3684  001CB0  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3685  001CB2  0E02               	movlw	2
  3686  001CB4  EC55  F027         	call	_posicao_cursor_lcd
  3687                           
  3688                           ;main.c: 443: escreve_caractere_lcd(fix_signal[0]);
  3689  001CB8  C037  FFD9         	movff	troca_de_tela@fix_signal,fsr2l
  3690  001CBC  C038  FFDA         	movff	troca_de_tela@fix_signal+1,fsr2h
  3691  001CC0  50DF               	movf	indf2,w,c
  3692  001CC2  ECE6  F025         	call	_escreve_caractere_lcd
  3693                           
  3694                           ;main.c: 444: time_atualizacao = 10000;
  3695  001CC6  0E27               	movlw	39
  3696  001CC8  0100               	movlb	0	; () banked
  3697  001CCA  6FEB               	movwf	(_time_atualizacao+1)& (0+255),b
  3698  001CCC  0E10               	movlw	16
  3699  001CCE  6FEA               	movwf	_time_atualizacao& (0+255),b
  3700  001CD0                     l13374:
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;main.c: 445: };main.c: 447: if(last_state != 1)
  3704  001CD0  044F               	decf	troca_de_tela@last_state^0,w,c
  3705  001CD2  B4D8               	btfsc	status,2,c
  3706  001CD4  D078               	goto	l13412
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;main.c: 448: {;main.c: 449: state = 1;
  3710  001CD6  0E01               	movlw	1
  3711  001CD8  6E50               	movwf	troca_de_tela@state^0,c
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;main.c: 450: escreve_cmd_lcd(0b00000001);
  3715  001CDA  0E01               	movlw	1
  3716  001CDC  EC28  F024         	call	_escreve_cmd_lcd
  3717                           
  3718                           ;main.c: 451: posicao_cursor_lcd(1,0);
  3719  001CE0  0E00               	movlw	0
  3720  001CE2  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3721  001CE4  0E01               	movlw	1
  3722  001CE6  EC55  F027         	call	_posicao_cursor_lcd
  3723                           
  3724                           ;main.c: 452: escreve_frase_ram_lcd("FENCE:");
  3725  001CEA  0E48               	movlw	low STR_25
  3726  001CEC  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3727  001CEE  0E62               	movlw	high STR_25
  3728  001CF0  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3729  001CF2  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3730                           
  3731                           ;main.c: 454: if(!fence_flag[2].point)
  3732  001CF6  0100               	movlb	0	; () banked
  3733  001CF8  B1E9               	btfsc	(_fence_flag+2)& (0+255),0,b
  3734  001CFA  D00C               	goto	l13390
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;main.c: 455: {;main.c: 456: posicao_cursor_lcd(1,8);
  3738  001CFC  0E08               	movlw	8
  3739  001CFE  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3740  001D00  0E01               	movlw	1
  3741  001D02  EC55  F027         	call	_posicao_cursor_lcd
  3742                           
  3743                           ;main.c: 457: escreve_frase_ram_lcd("DENTRO");
  3744  001D06  0E4F               	movlw	low STR_22
  3745  001D08  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3746  001D0A  0E62               	movlw	high STR_22
  3747  001D0C  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3748  001D0E  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3749                           
  3750                           ;main.c: 458: }
  3751  001D12  D03C               	goto	l13404
  3752  001D14                     l13390:
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;main.c: 459: else;main.c: 460: {;main.c: 461: posicao_cursor_lcd(1,8);
  3756  001D14  0E08               	movlw	8
  3757  001D16  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3758  001D18  0E01               	movlw	1
  3759  001D1A  EC55  F027         	call	_posicao_cursor_lcd
  3760                           
  3761                           ;main.c: 462: escreve_frase_ram_lcd("FORA");
  3762  001D1E  0E61               	movlw	low STR_23
  3763  001D20  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3764  001D22  0E62               	movlw	high STR_23
  3765  001D24  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3766  001D26  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3767                           
  3768                           ;main.c: 463: posicao_cursor_lcd(1,13);
  3769  001D2A  0E0D               	movlw	13
  3770  001D2C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3771  001D2E  0E01               	movlw	1
  3772  001D30  EC55  F027         	call	_posicao_cursor_lcd
  3773                           
  3774                           ;main.c: 464: escreve_inteiro_lcd(fence_flag[0].point);
  3775  001D34  0100               	movlb	0	; () banked
  3776  001D36  A1E7               	btfss	_fence_flag& (0+255),0,b
  3777  001D38  D003               	goto	u16210
  3778  001D3A  6A36               	clrf	??_troca_de_tela^0,c
  3779  001D3C  2A36               	incf	??_troca_de_tela^0,f,c
  3780  001D3E  D001               	goto	u16218
  3781  001D40                     u16210:
  3782  001D40  6A36               	clrf	??_troca_de_tela^0,c
  3783  001D42                     u16218:
  3784  001D42  5036               	movf	??_troca_de_tela^0,w,c
  3785  001D44  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3786  001D46  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3787  001D48  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3788  001D4A  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3789  001D4C  ECAF  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3790                           
  3791                           ;main.c: 465: posicao_cursor_lcd(1,14);
  3792  001D50  0E0E               	movlw	14
  3793  001D52  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3794  001D54  0E01               	movlw	1
  3795  001D56  EC55  F027         	call	_posicao_cursor_lcd
  3796                           
  3797                           ;main.c: 466: escreve_frase_ram_lcd("|");
  3798  001D5A  0E7C               	movlw	low STR_24
  3799  001D5C  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3800  001D5E  0E62               	movlw	high STR_24
  3801  001D60  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3802  001D62  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3803                           
  3804                           ;main.c: 467: posicao_cursor_lcd(1,15);
  3805  001D66  0E0F               	movlw	15
  3806  001D68  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3807  001D6A  0E01               	movlw	1
  3808  001D6C  EC55  F027         	call	_posicao_cursor_lcd
  3809                           
  3810                           ;main.c: 468: escreve_inteiro_lcd(fence_flag[1].point);
  3811  001D70  0100               	movlb	0	; () banked
  3812  001D72  A1E8               	btfss	(_fence_flag+1)& (0+255),0,b
  3813  001D74  D003               	goto	u16220
  3814  001D76  6A36               	clrf	??_troca_de_tela^0,c
  3815  001D78  2A36               	incf	??_troca_de_tela^0,f,c
  3816  001D7A  D001               	goto	u16228
  3817  001D7C                     u16220:
  3818  001D7C  6A36               	clrf	??_troca_de_tela^0,c
  3819  001D7E                     u16228:
  3820  001D7E  5036               	movf	??_troca_de_tela^0,w,c
  3821  001D80  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3822  001D82  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3823  001D84  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3824  001D86  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3825  001D88  ECAF  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3826  001D8C                     l13404:
  3827                           
  3828                           ;main.c: 469: };main.c: 470: fix_signal = fix();
  3829  001D8C  EC20  F02E         	call	_fix	;wreg free
  3830  001D90  C00A  F037         	movff	?_fix,troca_de_tela@fix_signal
  3831  001D94  C00B  F038         	movff	?_fix+1,troca_de_tela@fix_signal+1
  3832                           
  3833                           ;main.c: 471: posicao_cursor_lcd(2,0);
  3834  001D98  0E00               	movlw	0
  3835  001D9A  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3836  001D9C  0E02               	movlw	2
  3837  001D9E  EC55  F027         	call	_posicao_cursor_lcd
  3838                           
  3839                           ;main.c: 472: escreve_frase_ram_lcd("FIX:");
  3840  001DA2  0E5C               	movlw	low STR_29
  3841  001DA4  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3842  001DA6  0E62               	movlw	high STR_29
  3843  001DA8  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3844  001DAA  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3845                           
  3846                           ;main.c: 473: posicao_cursor_lcd(2,8);
  3847  001DAE  0E08               	movlw	8
  3848  001DB0  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3849  001DB2  0E02               	movlw	2
  3850  001DB4  EC55  F027         	call	_posicao_cursor_lcd
  3851                           
  3852                           ;main.c: 474: escreve_caractere_lcd(fix_signal[0]);
  3853  001DB8  C037  FFD9         	movff	troca_de_tela@fix_signal,fsr2l
  3854  001DBC  C038  FFDA         	movff	troca_de_tela@fix_signal+1,fsr2h
  3855  001DC0  50DF               	movf	indf2,w,c
  3856  001DC2  ECE6  F025         	call	_escreve_caractere_lcd
  3857  001DC6                     l13412:
  3858                           
  3859                           ;main.c: 475: };main.c: 476: last_state = 1;
  3860  001DC6  0E01               	movlw	1
  3861  001DC8  6E4F               	movwf	troca_de_tela@last_state^0,c
  3862  001DCA                     l13414:
  3863                           
  3864                           ;main.c: 478: };main.c: 488: if(!PORTEbits.RE1 || (state == 2))
  3865  001DCA  A284               	btfss	132,1,c	;volatile
  3866  001DCC  D004               	goto	u16240
  3867  001DCE  0E02               	movlw	2
  3868  001DD0  1850               	xorwf	troca_de_tela@state^0,w,c
  3869  001DD2  A4D8               	btfss	status,2,c
  3870  001DD4  D033               	goto	l13446
  3871  001DD6                     u16240:
  3872                           
  3873                           ;main.c: 489: {;main.c: 490: if(!time_atualizacao)
  3874  001DD6  0100               	movlb	0	; () banked
  3875  001DD8  51EA               	movf	_time_atualizacao& (0+255),w,b
  3876  001DDA  11EB               	iorwf	(_time_atualizacao+1)& (0+255),w,b
  3877  001DDC  A4D8               	btfss	status,2,c
  3878  001DDE  D009               	goto	l13426
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;main.c: 491: {;main.c: 492: recebe_dado_gps();
  3882  001DE0  EC2E  F02D         	call	_recebe_dado_gps	;wreg free
  3883                           
  3884                           ;main.c: 493: mostra_dados_display();
  3885  001DE4  ECE9  F02B         	call	_mostra_dados_display	;wreg free
  3886                           
  3887                           ;main.c: 494: time_atualizacao = 2000;
  3888  001DE8  0E07               	movlw	7
  3889  001DEA  0100               	movlb	0	; () banked
  3890  001DEC  6FEB               	movwf	(_time_atualizacao+1)& (0+255),b
  3891  001DEE  0ED0               	movlw	208
  3892  001DF0  6FEA               	movwf	_time_atualizacao& (0+255),b
  3893  001DF2                     l13426:
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;main.c: 495: };main.c: 498: if(last_state != 2)
  3897  001DF2  0E02               	movlw	2
  3898  001DF4  184F               	xorwf	troca_de_tela@last_state^0,w,c
  3899  001DF6  B4D8               	btfsc	status,2,c
  3900  001DF8  D01F               	goto	l13444
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;main.c: 499: {;main.c: 500: state = 2;
  3904  001DFA  0E02               	movlw	2
  3905  001DFC  6E50               	movwf	troca_de_tela@state^0,c
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;main.c: 501: escreve_cmd_lcd(0b00000001);
  3909  001DFE  0E01               	movlw	1
  3910  001E00  EC28  F024         	call	_escreve_cmd_lcd
  3911                           
  3912                           ;main.c: 502: posicao_cursor_lcd(1,0);
  3913  001E04  0E00               	movlw	0
  3914  001E06  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3915  001E08  0E01               	movlw	1
  3916  001E0A  EC55  F027         	call	_posicao_cursor_lcd
  3917                           
  3918                           ;main.c: 503: escreve_frase_ram_lcd("lt:");
  3919  001E0E  0E6F               	movlw	low STR_30
  3920  001E10  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3921  001E12  0E62               	movlw	high STR_30
  3922  001E14  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3923  001E16  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3924                           
  3925                           ;main.c: 504: posicao_cursor_lcd(2,0);
  3926  001E1A  0E00               	movlw	0
  3927  001E1C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3928  001E1E  0E02               	movlw	2
  3929  001E20  EC55  F027         	call	_posicao_cursor_lcd
  3930                           
  3931                           ;main.c: 505: escreve_frase_ram_lcd("lo:");
  3932  001E24  0E6B               	movlw	low STR_31
  3933  001E26  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3934  001E28  0E62               	movlw	high STR_31
  3935  001E2A  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3936  001E2C  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3937                           
  3938                           ;main.c: 506: recebe_dado_gps();
  3939  001E30  EC2E  F02D         	call	_recebe_dado_gps	;wreg free
  3940                           
  3941                           ;main.c: 507: mostra_dados_display();
  3942  001E34  ECE9  F02B         	call	_mostra_dados_display	;wreg free
  3943  001E38                     l13444:
  3944                           
  3945                           ;main.c: 508: };main.c: 509: last_state = 2;
  3946  001E38  0E02               	movlw	2
  3947  001E3A  6E4F               	movwf	troca_de_tela@last_state^0,c
  3948  001E3C                     l13446:
  3949                           
  3950                           ;main.c: 510: };main.c: 515: if(!state)
  3951  001E3C  5050               	movf	troca_de_tela@state^0,w,c
  3952  001E3E  A4D8               	btfss	status,2,c
  3953  001E40  0012               	return	
  3954                           
  3955                           ;main.c: 516: {;main.c: 517: if(last_state != 4)
  3956  001E42  0E04               	movlw	4
  3957  001E44  184F               	xorwf	troca_de_tela@last_state^0,w,c
  3958  001E46  B4D8               	btfsc	status,2,c
  3959  001E48  D019               	goto	l13456
  3960                           
  3961                           ;main.c: 518: {;main.c: 519: escreve_cmd_lcd(0b00000001);
  3962  001E4A  0E01               	movlw	1
  3963  001E4C  EC28  F024         	call	_escreve_cmd_lcd
  3964                           
  3965                           ;main.c: 520: posicao_cursor_lcd(1,0);
  3966  001E50  0E00               	movlw	0
  3967  001E52  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3968  001E54  0E01               	movlw	1
  3969  001E56  EC55  F027         	call	_posicao_cursor_lcd
  3970                           
  3971                           ;main.c: 521: escreve_frase_ram_lcd("B1:FENCE");
  3972  001E5A  0E2E               	movlw	low STR_32
  3973  001E5C  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3974  001E5E  0E62               	movlw	high STR_32
  3975  001E60  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3976  001E62  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3977                           
  3978                           ;main.c: 522: posicao_cursor_lcd(2,0);
  3979  001E66  0E00               	movlw	0
  3980  001E68  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3981  001E6A  0E02               	movlw	2
  3982  001E6C  EC55  F027         	call	_posicao_cursor_lcd
  3983                           
  3984                           ;main.c: 523: escreve_frase_ram_lcd("B2:LTLO");
  3985  001E70  0E40               	movlw	low STR_33
  3986  001E72  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3987  001E74  0E62               	movlw	high STR_33
  3988  001E76  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3989  001E78  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3990  001E7C                     l13456:
  3991                           
  3992                           ;main.c: 525: };main.c: 526: last_state = 4;
  3993  001E7C  0E04               	movlw	4
  3994  001E7E  6E4F               	movwf	troca_de_tela@last_state^0,c
  3995  001E80  0012               	return		;funcret
  3996  001E82                     __end_of_troca_de_tela:
  3997                           	callstack 0
  3998                           
  3999 ;; *************** function _disparo_gravacao *****************
  4000 ;; Defined at:
  4001 ;;		line 350 in file "main.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;		None
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  velocidade     12    0[BANK2 ] PTR unsigned char [6]
  4006 ;;  index_max       2   16[BANK2 ] unsigned int 
  4007 ;;  v_max           2   14[BANK2 ] unsigned int 
  4008 ;;  fix_gps         2   12[BANK2 ] PTR unsigned char 
  4009 ;;		 -> rawFix(2), 
  4010 ;;  i               1   18[BANK2 ] unsigned char 
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      void 
  4013 ;; Registers used:
  4014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 3F/0
  4017 ;;		On exit  : 3F/1
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4020 ;;      Params:         0       0       0       0       0       0       0       0       0
  4021 ;;      Locals:         0       0       0      19       0       0       0       0       0
  4022 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4023 ;;      Totals:         0       5       0      19       0       0       0       0       0
  4024 ;;Total ram usage:       24 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:   16
  4027 ;; This function calls:
  4028 ;;		___wmul
  4029 ;;		_atoi
  4030 ;;		_dados_gps_to_sd
  4031 ;;		_fix
  4032 ;;		_grava_sd
  4033 ;;		_itoa
  4034 ;;		_monta_sd
  4035 ;;		_recebe_dado_gps
  4036 ;;		_verifica_fence
  4037 ;; This function is called by:
  4038 ;;		_inicializa_tarefas
  4039 ;;		_escalonador
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text13
  4044  002810                     __ptext13:
  4045                           	callstack 0
  4046  002810                     _disparo_gravacao:
  4047                           	callstack 13
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;main.c: 355: unsigned char *velocidade[6];;main.c: 357: v_max = atoi(dados_vel[0]);
  4051                           
  4052                           ; BSR set to: 0
  4053                           
  4054                           ;incstack = 0
  4055  002810  C127  F0DF         	movff	_dados_vel,??_disparo_gravacao
  4056  002814  C128  F0E0         	movff	_dados_vel+1,??_disparo_gravacao+1
  4057  002818  6BE1               	clrf	(??_disparo_gravacao+2)& (0+255),b
  4058  00281A  C0DF  F010         	movff	??_disparo_gravacao,atoi@s
  4059  00281E  C0E0  F011         	movff	??_disparo_gravacao+1,atoi@s+1
  4060  002822  C0E1  F012         	movff	??_disparo_gravacao+2,atoi@s+2
  4061  002826  ECF7  F018         	call	_atoi	;wreg free
  4062  00282A  C010  F2F5         	movff	?_atoi,disparo_gravacao@v_max
  4063  00282E  C011  F2F6         	movff	?_atoi+1,disparo_gravacao@v_max+1
  4064                           
  4065                           ;main.c: 358: index_max = 0;
  4066  002832  0E00               	movlw	0
  4067  002834  0102               	movlb	2	; () banked
  4068  002836  6FF8               	movwf	(disparo_gravacao@index_max+1)& (0+255),b
  4069  002838  0E00               	movlw	0
  4070  00283A  6FF7               	movwf	disparo_gravacao@index_max& (0+255),b
  4071                           
  4072                           ; BSR set to: 2
  4073                           ;main.c: 359: if(!time_sd)
  4074  00283C  0101               	movlb	1	; () banked
  4075  00283E  516E               	movf	_time_sd& (0+255),w,b
  4076  002840  116F               	iorwf	(_time_sd+1)& (0+255),w,b
  4077  002842  A4D8               	btfss	status,2,c
  4078  002844  0012               	return	
  4079                           
  4080                           ; BSR set to: 1
  4081                           ;main.c: 360: {;main.c: 361: verifica_fence();
  4082  002846  EC84  F027         	call	_verifica_fence	;wreg free
  4083                           
  4084                           ;main.c: 362: fix_gps = fix();
  4085  00284A  EC20  F02E         	call	_fix	;wreg free
  4086  00284E  C00A  F2F3         	movff	?_fix,disparo_gravacao@fix_gps
  4087  002852  C00B  F2F4         	movff	?_fix+1,disparo_gravacao@fix_gps+1
  4088                           
  4089                           ;main.c: 364: if(*fix_gps == '1')
  4090  002856  C2F3  FFD9         	movff	disparo_gravacao@fix_gps,fsr2l
  4091  00285A  C2F4  FFDA         	movff	disparo_gravacao@fix_gps+1,fsr2h
  4092  00285E  0E31               	movlw	49
  4093  002860  18DE               	xorwf	postinc2,w,c
  4094  002862  A4D8               	btfss	status,2,c
  4095  002864  D0DC               	goto	l13770
  4096                           
  4097                           ;main.c: 365: {;main.c: 366: if(v_max> 50)
  4098  002866  0102               	movlb	2	; () banked
  4099  002868  51F6               	movf	(disparo_gravacao@v_max+1)& (0+255),w,b
  4100  00286A  E104               	bnz	u16590
  4101  00286C  0E33               	movlw	51
  4102  00286E  5DF5               	subwf	disparo_gravacao@v_max& (0+255),w,b
  4103  002870  A0D8               	btfss	status,0,c
  4104  002872  D0C2               	goto	l13762
  4105  002874                     u16590:
  4106                           
  4107                           ; BSR set to: 2
  4108                           ;main.c: 367: {;main.c: 368: for(i=1; i<3; i++)
  4109  002874  0E01               	movlw	1
  4110  002876  6FF9               	movwf	disparo_gravacao@i& (0+255),b
  4111  002878                     l13740:
  4112                           
  4113                           ; BSR set to: 2
  4114                           ;main.c: 369: {;main.c: 370: if(v_max < atoi(dados_vel[i]))
  4115  002878  51F9               	movf	disparo_gravacao@i& (0+255),w,b
  4116  00287A  0D02               	mullw	2
  4117  00287C  0E27               	movlw	low _dados_vel
  4118  00287E  24F3               	addwf	243,w,c
  4119  002880  6ED9               	movwf	fsr2l,c
  4120  002882  0E01               	movlw	high _dados_vel
  4121  002884  20F4               	addwfc	prodh,w,c
  4122  002886  6EDA               	movwf	fsr2h,c
  4123  002888  CFDE F0DF          	movff	postinc2,??_disparo_gravacao
  4124  00288C  CFDD F0E0          	movff	postdec2,??_disparo_gravacao+1
  4125  002890  C0DF  F0E1         	movff	??_disparo_gravacao,??_disparo_gravacao+2
  4126  002894  C0E0  F0E2         	movff	??_disparo_gravacao+1,??_disparo_gravacao+3
  4127  002898  0100               	movlb	0	; () banked
  4128  00289A  6BE3               	clrf	(??_disparo_gravacao+4)& (0+255),b
  4129  00289C  C0E1  F010         	movff	??_disparo_gravacao+2,atoi@s
  4130  0028A0  C0E2  F011         	movff	??_disparo_gravacao+3,atoi@s+1
  4131  0028A4  C0E3  F012         	movff	??_disparo_gravacao+4,atoi@s+2
  4132  0028A8  ECF7  F018         	call	_atoi	;wreg free
  4133  0028AC  5010               	movf	?_atoi^0,w,c
  4134  0028AE  0102               	movlb	2	; () banked
  4135  0028B0  5DF5               	subwf	disparo_gravacao@v_max& (0+255),w,b
  4136  0028B2  5011               	movf	(?_atoi+1)^0,w,c
  4137  0028B4  59F6               	subwfb	(disparo_gravacao@v_max+1)& (0+255),w,b
  4138  0028B6  B0D8               	btfsc	status,0,c
  4139  0028B8  D022               	goto	l13746
  4140                           
  4141                           ; BSR set to: 2
  4142                           ;main.c: 371: {;main.c: 372: v_max = atoi(dados_vel[i]);
  4143  0028BA  51F9               	movf	disparo_gravacao@i& (0+255),w,b
  4144  0028BC  0D02               	mullw	2
  4145  0028BE  0E27               	movlw	low _dados_vel
  4146  0028C0  24F3               	addwf	243,w,c
  4147  0028C2  6ED9               	movwf	fsr2l,c
  4148  0028C4  0E01               	movlw	high _dados_vel
  4149  0028C6  20F4               	addwfc	prodh,w,c
  4150  0028C8  6EDA               	movwf	fsr2h,c
  4151  0028CA  CFDE F0DF          	movff	postinc2,??_disparo_gravacao
  4152  0028CE  CFDD F0E0          	movff	postdec2,??_disparo_gravacao+1
  4153  0028D2  C0DF  F0E1         	movff	??_disparo_gravacao,??_disparo_gravacao+2
  4154  0028D6  C0E0  F0E2         	movff	??_disparo_gravacao+1,??_disparo_gravacao+3
  4155  0028DA  0100               	movlb	0	; () banked
  4156  0028DC  6BE3               	clrf	(??_disparo_gravacao+4)& (0+255),b
  4157  0028DE  C0E1  F010         	movff	??_disparo_gravacao+2,atoi@s
  4158  0028E2  C0E2  F011         	movff	??_disparo_gravacao+3,atoi@s+1
  4159  0028E6  C0E3  F012         	movff	??_disparo_gravacao+4,atoi@s+2
  4160  0028EA  ECF7  F018         	call	_atoi	;wreg free
  4161  0028EE  C010  F2F5         	movff	?_atoi,disparo_gravacao@v_max
  4162  0028F2  C011  F2F6         	movff	?_atoi+1,disparo_gravacao@v_max+1
  4163                           
  4164                           ;main.c: 373: index_max = i;
  4165  0028F6  C2F9  F2F7         	movff	disparo_gravacao@i,disparo_gravacao@index_max
  4166  0028FA  0102               	movlb	2	; () banked
  4167  0028FC  6BF8               	clrf	(disparo_gravacao@index_max+1)& (0+255),b
  4168  0028FE                     l13746:
  4169                           
  4170                           ; BSR set to: 2
  4171  0028FE  2BF9               	incf	disparo_gravacao@i& (0+255),f,b
  4172                           
  4173                           ; BSR set to: 2
  4174  002900  0E02               	movlw	2
  4175  002902  65F9               	cpfsgt	disparo_gravacao@i& (0+255),b
  4176  002904  D7B9               	goto	l13740
  4177                           
  4178                           ; BSR set to: 2
  4179                           ;main.c: 374: };main.c: 376: };main.c: 378: monta_sd(0, dados_hora[index_max]);
  4180  002906  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4181  00290A  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4182  00290E  0E00               	movlw	0
  4183  002910  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4184  002912  0E06               	movlw	6
  4185  002914  6E0C               	movwf	___wmul@multiplicand^0,c
  4186  002916  EC92  F02C         	call	___wmul	;wreg free
  4187  00291A  0ED5               	movlw	low _dados_hora
  4188  00291C  240A               	addwf	?___wmul^0,w,c
  4189  00291E  6E10               	movwf	monta_sd@dado^0,c
  4190  002920  0E02               	movlw	high _dados_hora
  4191  002922  200B               	addwfc	(?___wmul+1)^0,w,c
  4192  002924  6E11               	movwf	(monta_sd@dado+1)^0,c
  4193  002926  0E00               	movlw	0
  4194  002928  EC03  F00B         	call	_monta_sd
  4195                           
  4196                           ;main.c: 379: monta_sd(1, dados_data[index_max]);
  4197  00292C  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4198  002930  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4199  002934  0E00               	movlw	0
  4200  002936  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4201  002938  0E06               	movlw	6
  4202  00293A  6E0C               	movwf	___wmul@multiplicand^0,c
  4203  00293C  EC92  F02C         	call	___wmul	;wreg free
  4204  002940  0EC3               	movlw	low _dados_data
  4205  002942  240A               	addwf	?___wmul^0,w,c
  4206  002944  6E10               	movwf	monta_sd@dado^0,c
  4207  002946  0E02               	movlw	high _dados_data
  4208  002948  200B               	addwfc	(?___wmul+1)^0,w,c
  4209  00294A  6E11               	movwf	(monta_sd@dado+1)^0,c
  4210  00294C  0E01               	movlw	1
  4211  00294E  EC03  F00B         	call	_monta_sd
  4212                           
  4213                           ;main.c: 380: monta_sd(2, dados_lat[index_max]);
  4214  002952  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4215  002956  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4216  00295A  0E00               	movlw	0
  4217  00295C  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4218  00295E  0E0B               	movlw	11
  4219  002960  6E0C               	movwf	___wmul@multiplicand^0,c
  4220  002962  EC92  F02C         	call	___wmul	;wreg free
  4221  002966  0EA2               	movlw	low _dados_lat
  4222  002968  240A               	addwf	?___wmul^0,w,c
  4223  00296A  6E10               	movwf	monta_sd@dado^0,c
  4224  00296C  0E02               	movlw	high _dados_lat
  4225  00296E  200B               	addwfc	(?___wmul+1)^0,w,c
  4226  002970  6E11               	movwf	(monta_sd@dado+1)^0,c
  4227  002972  0E02               	movlw	2
  4228  002974  EC03  F00B         	call	_monta_sd
  4229                           
  4230                           ;main.c: 381: monta_sd(3, dados_long[index_max]);
  4231  002978  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4232  00297C  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4233  002980  0E00               	movlw	0
  4234  002982  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4235  002984  0E0C               	movlw	12
  4236  002986  6E0C               	movwf	___wmul@multiplicand^0,c
  4237  002988  EC92  F02C         	call	___wmul	;wreg free
  4238  00298C  0E7E               	movlw	low _dados_long
  4239  00298E  240A               	addwf	?___wmul^0,w,c
  4240  002990  6E10               	movwf	monta_sd@dado^0,c
  4241  002992  0E02               	movlw	high _dados_long
  4242  002994  200B               	addwfc	(?___wmul+1)^0,w,c
  4243  002996  6E11               	movwf	(monta_sd@dado+1)^0,c
  4244  002998  0E03               	movlw	3
  4245  00299A  EC03  F00B         	call	_monta_sd
  4246                           
  4247                           ;main.c: 382: itoa(velocidade, dados_vel[index_max], 10);
  4248  00299E  0EE7               	movlw	low disparo_gravacao@velocidade
  4249  0029A0  6E1A               	movwf	itoa@buf^0,c
  4250  0029A2  0E02               	movlw	high disparo_gravacao@velocidade
  4251  0029A4  6E1B               	movwf	(itoa@buf+1)^0,c
  4252  0029A6  90D8               	bcf	status,0,c
  4253  0029A8  0102               	movlb	2	; () banked
  4254  0029AA  35F7               	rlcf	disparo_gravacao@index_max& (0+255),w,b
  4255  0029AC  6ED9               	movwf	fsr2l,c
  4256  0029AE  35F8               	rlcf	(disparo_gravacao@index_max+1)& (0+255),w,b
  4257  0029B0  6EDA               	movwf	fsr2h,c
  4258  0029B2  0E27               	movlw	low _dados_vel
  4259  0029B4  26D9               	addwf	fsr2l,f,c
  4260  0029B6  0E01               	movlw	high _dados_vel
  4261  0029B8  22DA               	addwfc	fsr2h,f,c
  4262  0029BA  CFDE F01C          	movff	postinc2,itoa@val
  4263  0029BE  CFDD F01D          	movff	postdec2,itoa@val+1
  4264  0029C2  0E00               	movlw	0
  4265  0029C4  6E1F               	movwf	(itoa@base+1)^0,c
  4266  0029C6  0E0A               	movlw	10
  4267  0029C8  6E1E               	movwf	itoa@base^0,c
  4268  0029CA  ECEC  F02A         	call	_itoa	;wreg free
  4269                           
  4270                           ;main.c: 383: monta_sd(7, velocidade);
  4271  0029CE  0EE7               	movlw	low disparo_gravacao@velocidade
  4272  0029D0  6E10               	movwf	monta_sd@dado^0,c
  4273  0029D2  0E02               	movlw	high disparo_gravacao@velocidade
  4274  0029D4  6E11               	movwf	(monta_sd@dado+1)^0,c
  4275  0029D6  0E07               	movlw	7
  4276  0029D8  EC03  F00B         	call	_monta_sd
  4277                           
  4278                           ;main.c: 385: dados_vel[0] = 50;
  4279  0029DC  0E00               	movlw	0
  4280  0029DE  0101               	movlb	1	; () banked
  4281  0029E0  6F28               	movwf	(_dados_vel+1)& (0+255),b
  4282  0029E2  0E32               	movlw	50
  4283  0029E4  6F27               	movwf	_dados_vel& (0+255),b
  4284                           
  4285                           ; BSR set to: 1
  4286                           ;main.c: 386: dados_vel[1] = 50;
  4287  0029E6  0E00               	movlw	0
  4288  0029E8  6F2A               	movwf	(_dados_vel+3)& (0+255),b
  4289  0029EA  0E32               	movlw	50
  4290  0029EC  6F29               	movwf	(_dados_vel+2)& (0+255),b
  4291                           
  4292                           ; BSR set to: 1
  4293                           ;main.c: 387: dados_vel[2] = 50;
  4294  0029EE  0E00               	movlw	0
  4295  0029F0  6F2C               	movwf	(_dados_vel+5)& (0+255),b
  4296  0029F2  0E32               	movlw	50
  4297  0029F4  6F2B               	movwf	(_dados_vel+4)& (0+255),b
  4298                           
  4299                           ;main.c: 388: }
  4300  0029F6  D011               	goto	l13768
  4301  0029F8                     l13762:
  4302                           
  4303                           ; BSR set to: 2
  4304                           ;main.c: 389: else;main.c: 390: {;main.c: 391: dados_vel[0] = 50;
  4305  0029F8  0E00               	movlw	0
  4306  0029FA  0101               	movlb	1	; () banked
  4307  0029FC  6F28               	movwf	(_dados_vel+1)& (0+255),b
  4308  0029FE  0E32               	movlw	50
  4309  002A00  6F27               	movwf	_dados_vel& (0+255),b
  4310                           
  4311                           ;main.c: 392: dados_vel[1] = 50;
  4312  002A02  0E00               	movlw	0
  4313  002A04  6F2A               	movwf	(_dados_vel+3)& (0+255),b
  4314  002A06  0E32               	movlw	50
  4315  002A08  6F29               	movwf	(_dados_vel+2)& (0+255),b
  4316                           
  4317                           ;main.c: 393: dados_vel[2] = 50;
  4318  002A0A  0E00               	movlw	0
  4319  002A0C  6F2C               	movwf	(_dados_vel+5)& (0+255),b
  4320  002A0E  0E32               	movlw	50
  4321  002A10  6F2B               	movwf	(_dados_vel+4)& (0+255),b
  4322                           
  4323                           ; BSR set to: 1
  4324                           ;main.c: 394: recebe_dado_gps();
  4325  002A12  EC2E  F02D         	call	_recebe_dado_gps	;wreg free
  4326                           
  4327                           ;main.c: 395: dados_gps_to_sd();
  4328  002A16  ECF3  F026         	call	_dados_gps_to_sd	;wreg free
  4329  002A1A                     l13768:
  4330                           
  4331                           ;main.c: 396: };main.c: 397: grava_sd();
  4332  002A1A  EC97  F02D         	call	_grava_sd	;wreg free
  4333  002A1E                     l13770:
  4334                           
  4335                           ;main.c: 398: };main.c: 401: time_sd = 28000;
  4336  002A1E  0E6D               	movlw	109
  4337  002A20  0101               	movlb	1	; () banked
  4338  002A22  6F6F               	movwf	(_time_sd+1)& (0+255),b
  4339  002A24  0E60               	movlw	96
  4340  002A26  6F6E               	movwf	_time_sd& (0+255),b
  4341                           
  4342                           ; BSR set to: 1
  4343  002A28  0012               	return		;funcret
  4344  002A2A                     __end_of_disparo_gravacao:
  4345                           	callstack 0
  4346                           
  4347 ;; *************** function _verifica_dados_operacionais *****************
  4348 ;; Defined at:
  4349 ;;		line 309 in file "main.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;		None
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;		None
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 3F/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4363 ;;      Params:         0       0       0       0       0       0       0       0       0
  4364 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4365 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4366 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4367 ;;Total ram usage:        6 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:    4
  4370 ;; This function calls:
  4371 ;;		_Speed
  4372 ;;		___awtoft
  4373 ;;		___ftmul
  4374 ;;		___fttol
  4375 ;;		_atoi
  4376 ;;		_latitude
  4377 ;;		_longitude
  4378 ;;		_rawdata
  4379 ;;		_rawhora
  4380 ;;		_strcpy
  4381 ;; This function is called by:
  4382 ;;		_inicializa_tarefas
  4383 ;;		_escalonador
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text14
  4388  002F0C                     __ptext14:
  4389                           	callstack 0
  4390  002F0C                     _verifica_dados_operacionais:
  4391                           	callstack 25
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;main.c: 311: static unsigned char dado[6];;main.c: 312: static unsigned char contador_a
      +                          tual =0;;main.c: 313: static unsigned char contador_anterior =0;;main.c: 314: static uns
      +                          igned long int velocidade_media;;main.c: 315: static unsigned long int velocidade_atual_
      +                          int = 0;;main.c: 316: static unsigned char *velocidade_atual;;main.c: 319: if(contador_a
      +                          tual >=3)
  4395                           
  4396                           ; BSR set to: 1
  4397                           ;incstack = 0
  4398  002F0C  0E02               	movlw	2
  4399  002F0E  6451               	cpfsgt	verifica_dados_operacionais@contador_atual^0,c
  4400  002F10  D004               	goto	l13262
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;main.c: 320: {;main.c: 321: contador_atual = 0;
  4404  002F12  0E00               	movlw	0
  4405  002F14  6E51               	movwf	verifica_dados_operacionais@contador_atual^0,c
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;main.c: 322: contador_anterior = contador_atual;
  4409  002F16  0E00               	movlw	0
  4410  002F18  6FF0               	movwf	verifica_dados_operacionais@contador_anterior& (0+255),b
  4411  002F1A                     l13262:
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;main.c: 323: };main.c: 325: velocidade_atual = Speed();
  4415  002F1A  EC1B  F02E         	call	_Speed	;wreg free
  4416  002F1E  C00A  F166         	movff	?_Speed,verifica_dados_operacionais@velocidade_atual
  4417  002F22  C00B  F167         	movff	?_Speed+1,verifica_dados_operacionais@velocidade_atual+1
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;main.c: 326: velocidade_atual_int = ((atoi(velocidade_atual)*1.852));
  4421  002F26  0E0E               	movlw	14
  4422  002F28  6E1F               	movwf	___ftmul@f2^0,c
  4423  002F2A  0EED               	movlw	237
  4424  002F2C  6E20               	movwf	(___ftmul@f2+1)^0,c
  4425  002F2E  0E3F               	movlw	63
  4426  002F30  6E21               	movwf	(___ftmul@f2+2)^0,c
  4427  002F32  C166  F010         	movff	verifica_dados_operacionais@velocidade_atual,atoi@s
  4428  002F36  C167  F011         	movff	verifica_dados_operacionais@velocidade_atual+1,atoi@s+1
  4429  002F3A  5010               	movf	atoi@s^0,w,c
  4430  002F3C  1011               	iorwf	(atoi@s+1)^0,w,c
  4431  002F3E  A4D8               	btfss	status,2,c
  4432  002F40  0E20               	movlw	32
  4433  002F42  6E12               	movwf	(atoi@s+2)^0,c
  4434  002F44  ECF7  F018         	call	_atoi	;wreg free
  4435  002F48  C010  F018         	movff	?_atoi,___awtoft@c
  4436  002F4C  C011  F019         	movff	?_atoi+1,___awtoft@c+1
  4437  002F50  EC09  F02B         	call	___awtoft	;wreg free
  4438  002F54  C018  F01C         	movff	?___awtoft,___ftmul@f1
  4439  002F58  C019  F01D         	movff	?___awtoft+1,___ftmul@f1+1
  4440  002F5C  C01A  F01E         	movff	?___awtoft+2,___ftmul@f1+2
  4441  002F60  EC63  F01E         	call	___ftmul	;wreg free
  4442  002F64  C01C  F02B         	movff	?___ftmul,___fttol@f1
  4443  002F68  C01D  F02C         	movff	?___ftmul+1,___fttol@f1+1
  4444  002F6C  C01E  F02D         	movff	?___ftmul+2,___fttol@f1+2
  4445  002F70  ECC9  F01F         	call	___fttol	;wreg free
  4446  002F74  C02B  F151         	movff	?___fttol,verifica_dados_operacionais@velocidade_atual_int
  4447  002F78  C02C  F152         	movff	?___fttol+1,verifica_dados_operacionais@velocidade_atual_int+1
  4448  002F7C  C02D  F153         	movff	?___fttol+2,verifica_dados_operacionais@velocidade_atual_int+2
  4449  002F80  C02E  F154         	movff	?___fttol+3,verifica_dados_operacionais@velocidade_atual_int+3
  4450                           
  4451                           ;main.c: 327: if((velocidade_atual_int > dados_vel[2]) && contador_atual<3)
  4452  002F84  0101               	movlb	1	; () banked
  4453  002F86  512B               	movf	(_dados_vel+4)& (0+255),w,b
  4454  002F88  6E3A               	movwf	??_verifica_dados_operacionais^0,c
  4455  002F8A  512C               	movf	(_dados_vel+5)& (0+255),w,b
  4456  002F8C  6E3B               	movwf	(??_verifica_dados_operacionais+1)^0,c
  4457  002F8E  6A3C               	clrf	(??_verifica_dados_operacionais+2)^0,c
  4458  002F90  6A3D               	clrf	(??_verifica_dados_operacionais+3)^0,c
  4459  002F92  5151               	movf	verifica_dados_operacionais@velocidade_atual_int& (0+255),w,b
  4460  002F94  5C3A               	subwf	??_verifica_dados_operacionais^0,w,c
  4461  002F96  5152               	movf	(verifica_dados_operacionais@velocidade_atual_int+1)& (0+255),w,b
  4462  002F98  583B               	subwfb	(??_verifica_dados_operacionais+1)^0,w,c
  4463  002F9A  5153               	movf	(verifica_dados_operacionais@velocidade_atual_int+2)& (0+255),w,b
  4464  002F9C  583C               	subwfb	(??_verifica_dados_operacionais+2)^0,w,c
  4465  002F9E  5154               	movf	(verifica_dados_operacionais@velocidade_atual_int+3)& (0+255),w,b
  4466  002FA0  583D               	subwfb	(??_verifica_dados_operacionais+3)^0,w,c
  4467  002FA2  B0D8               	btfsc	status,0,c
  4468  002FA4  0012               	return	
  4469                           
  4470                           ; BSR set to: 1
  4471  002FA6  0E03               	movlw	3
  4472  002FA8  6051               	cpfslt	verifica_dados_operacionais@contador_atual^0,c
  4473  002FAA  0012               	return	
  4474                           
  4475                           ; BSR set to: 1
  4476                           ;main.c: 328: {;main.c: 329: if(velocidade_atual_int > dados_vel[contador_anterior])
  4477  002FAC  0100               	movlb	0	; () banked
  4478  002FAE  51F0               	movf	verifica_dados_operacionais@contador_anterior& (0+255),w,b
  4479  002FB0  0D02               	mullw	2
  4480  002FB2  0E27               	movlw	low _dados_vel
  4481  002FB4  24F3               	addwf	243,w,c
  4482  002FB6  6ED9               	movwf	fsr2l,c
  4483  002FB8  0E01               	movlw	high _dados_vel
  4484  002FBA  20F4               	addwfc	prodh,w,c
  4485  002FBC  6EDA               	movwf	fsr2h,c
  4486  002FBE  CFDE F03A          	movff	postinc2,??_verifica_dados_operacionais
  4487  002FC2  CFDD F03B          	movff	postdec2,??_verifica_dados_operacionais+1
  4488  002FC6  503A               	movf	??_verifica_dados_operacionais^0,w,c
  4489  002FC8  6E3C               	movwf	(??_verifica_dados_operacionais+2)^0,c
  4490  002FCA  503B               	movf	(??_verifica_dados_operacionais+1)^0,w,c
  4491  002FCC  6E3D               	movwf	(??_verifica_dados_operacionais+3)^0,c
  4492  002FCE  6A3E               	clrf	(??_verifica_dados_operacionais+4)^0,c
  4493  002FD0  6A3F               	clrf	(??_verifica_dados_operacionais+5)^0,c
  4494  002FD2  0101               	movlb	1	; () banked
  4495  002FD4  5151               	movf	verifica_dados_operacionais@velocidade_atual_int& (0+255),w,b
  4496  002FD6  5C3C               	subwf	(??_verifica_dados_operacionais+2)^0,w,c
  4497  002FD8  5152               	movf	(verifica_dados_operacionais@velocidade_atual_int+1)& (0+255),w,b
  4498  002FDA  583D               	subwfb	(??_verifica_dados_operacionais+3)^0,w,c
  4499  002FDC  5153               	movf	(verifica_dados_operacionais@velocidade_atual_int+2)& (0+255),w,b
  4500  002FDE  583E               	subwfb	(??_verifica_dados_operacionais+4)^0,w,c
  4501  002FE0  5154               	movf	(verifica_dados_operacionais@velocidade_atual_int+3)& (0+255),w,b
  4502  002FE2  583F               	subwfb	(??_verifica_dados_operacionais+5)^0,w,c
  4503  002FE4  B0D8               	btfsc	status,0,c
  4504  002FE6  D04C               	goto	l13282
  4505                           
  4506                           ; BSR set to: 1
  4507                           ;main.c: 330: {;main.c: 331: dados_vel[contador_atual] = velocidade_atual_int;
  4508  002FE8  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4509  002FEA  0D02               	mullw	2
  4510  002FEC  0E27               	movlw	low _dados_vel
  4511  002FEE  24F3               	addwf	243,w,c
  4512  002FF0  6ED9               	movwf	fsr2l,c
  4513  002FF2  0E01               	movlw	high _dados_vel
  4514  002FF4  20F4               	addwfc	prodh,w,c
  4515  002FF6  6EDA               	movwf	fsr2h,c
  4516  002FF8  C151  FFDE         	movff	verifica_dados_operacionais@velocidade_atual_int,postinc2
  4517  002FFC  C152  FFDD         	movff	verifica_dados_operacionais@velocidade_atual_int+1,postdec2
  4518                           
  4519                           ; BSR set to: 1
  4520                           ;main.c: 332: strcpy(dados_lat[contador_atual], latitude());
  4521  003000  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4522  003002  0D0B               	mullw	11
  4523  003004  0EA2               	movlw	low _dados_lat
  4524  003006  24F3               	addwf	243,w,c
  4525  003008  6E0C               	movwf	strcpy@to^0,c
  4526  00300A  0E02               	movlw	high _dados_lat
  4527  00300C  20F4               	addwfc	prodh,w,c
  4528  00300E  6E0D               	movwf	(strcpy@to+1)^0,c
  4529  003010  EC16  F02E         	call	_latitude	;wreg free
  4530  003014  C00A  F00E         	movff	?_latitude,strcpy@from
  4531  003018  C00B  F00F         	movff	?_latitude+1,strcpy@from+1
  4532  00301C  ECD2  F02B         	call	_strcpy	;wreg free
  4533                           
  4534                           ;main.c: 333: strcpy(dados_long[contador_atual], longitude());
  4535  003020  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4536  003022  0D0C               	mullw	12
  4537  003024  0E7E               	movlw	low _dados_long
  4538  003026  24F3               	addwf	243,w,c
  4539  003028  6E0C               	movwf	strcpy@to^0,c
  4540  00302A  0E02               	movlw	high _dados_long
  4541  00302C  20F4               	addwfc	prodh,w,c
  4542  00302E  6E0D               	movwf	(strcpy@to+1)^0,c
  4543  003030  EC11  F02E         	call	_longitude	;wreg free
  4544  003034  C00A  F00E         	movff	?_longitude,strcpy@from
  4545  003038  C00B  F00F         	movff	?_longitude+1,strcpy@from+1
  4546  00303C  ECD2  F02B         	call	_strcpy	;wreg free
  4547                           
  4548                           ;main.c: 334: strcpy(dados_hora[contador_atual], rawhora());
  4549  003040  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4550  003042  0D06               	mullw	6
  4551  003044  0ED5               	movlw	low _dados_hora
  4552  003046  24F3               	addwf	243,w,c
  4553  003048  6E0C               	movwf	strcpy@to^0,c
  4554  00304A  0E02               	movlw	high _dados_hora
  4555  00304C  20F4               	addwfc	prodh,w,c
  4556  00304E  6E0D               	movwf	(strcpy@to+1)^0,c
  4557  003050  EC07  F02E         	call	_rawhora	;wreg free
  4558  003054  C00A  F00E         	movff	?_rawhora,strcpy@from
  4559  003058  C00B  F00F         	movff	?_rawhora+1,strcpy@from+1
  4560  00305C  ECD2  F02B         	call	_strcpy	;wreg free
  4561                           
  4562                           ;main.c: 335: strcpy(dados_data[contador_atual], rawdata());
  4563  003060  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4564  003062  0D06               	mullw	6
  4565  003064  0EC3               	movlw	low _dados_data
  4566  003066  24F3               	addwf	243,w,c
  4567  003068  6E0C               	movwf	strcpy@to^0,c
  4568  00306A  0E02               	movlw	high _dados_data
  4569  00306C  20F4               	addwfc	prodh,w,c
  4570  00306E  6E0D               	movwf	(strcpy@to+1)^0,c
  4571  003070  EC0C  F02E         	call	_rawdata	;wreg free
  4572  003074  C00A  F00E         	movff	?_rawdata,strcpy@from
  4573  003078  C00B  F00F         	movff	?_rawdata+1,strcpy@from+1
  4574  00307C  ECD2  F02B         	call	_strcpy	;wreg free
  4575  003080                     l13282:
  4576                           
  4577                           ;main.c: 336: };main.c: 337: contador_anterior = contador_atual;
  4578  003080  C051  F0F0         	movff	verifica_dados_operacionais@contador_atual,verifica_dados_operacionais@contador_a
      +                          nterior
  4579                           
  4580                           ;main.c: 338: contador_atual++;
  4581  003084  2A51               	incf	verifica_dados_operacionais@contador_atual^0,f,c
  4582  003086  0012               	return		;funcret
  4583  003088                     __end_of_verifica_dados_operacionais:
  4584                           	callstack 0
  4585                           
  4586 ;; *************** function _strcpy *****************
  4587 ;; Defined at:
  4588 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcpy.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;  to              2   11[COMRAM] PTR unsigned char 
  4591 ;;		 -> dados_data(18), dados_hora(18), dados_long(36), dados_lat(33), 
  4592 ;;  from            2   13[COMRAM] PTR const unsigned char 
  4593 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  cp              2   15[COMRAM] PTR unsigned char 
  4596 ;;		 -> dados_data(18), dados_hora(18), dados_long(36), dados_lat(33), 
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  2   11[COMRAM] PTR unsigned char 
  4599 ;; Registers used:
  4600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/1
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4606 ;;      Params:         4       0       0       0       0       0       0       0       0
  4607 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4608 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4609 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4610 ;;Total ram usage:        6 bytes
  4611 ;; Hardware stack levels used:    1
  4612 ;; Hardware stack levels required when called:    2
  4613 ;; This function calls:
  4614 ;;		Nothing
  4615 ;; This function is called by:
  4616 ;;		_verifica_dados_operacionais
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text15
  4621  0057A4                     __ptext15:
  4622                           	callstack 0
  4623  0057A4                     _strcpy:
  4624                           	callstack 26
  4625                           
  4626                           ;incstack = 0
  4627  0057A4  C00C  F010         	movff	strcpy@to,strcpy@cp
  4628  0057A8  C00D  F011         	movff	strcpy@to+1,strcpy@cp+1
  4629  0057AC  D004               	goto	l13240
  4630  0057AE                     l13238:
  4631  0057AE  4A10               	infsnz	strcpy@cp^0,f,c
  4632  0057B0  2A11               	incf	(strcpy@cp+1)^0,f,c
  4633  0057B2  4A0E               	infsnz	strcpy@from^0,f,c
  4634  0057B4  2A0F               	incf	(strcpy@from+1)^0,f,c
  4635  0057B6                     l13240:
  4636  0057B6  C00E  FFD9         	movff	strcpy@from,fsr2l
  4637  0057BA  C00F  FFDA         	movff	strcpy@from+1,fsr2h
  4638  0057BE  C010  FFE1         	movff	strcpy@cp,fsr1l
  4639  0057C2  C011  FFE2         	movff	strcpy@cp+1,fsr1h
  4640  0057C6  CFDF FFE7          	movff	indf2,indf1
  4641  0057CA  50E7               	movf	indf1,w,c
  4642  0057CC  B4D8               	btfsc	status,2,c
  4643  0057CE  0012               	return	
  4644  0057D0  D7EE               	goto	l13238
  4645  0057D2                     __end_of_strcpy:
  4646                           	callstack 0
  4647                           
  4648 ;; *************** function _rawhora *****************
  4649 ;; Defined at:
  4650 ;;		line 668 in file "bibliotecas/GPS.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  2    9[COMRAM] PTR unsigned char 
  4657 ;; Registers used:
  4658 ;;		wreg, status,2, status,0
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/1
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4664 ;;      Params:         2       0       0       0       0       0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4667 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4668 ;;Total ram usage:        2 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    2
  4671 ;; This function calls:
  4672 ;;		Nothing
  4673 ;; This function is called by:
  4674 ;;		_verifica_dados_operacionais
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text16
  4679  005C0E                     __ptext16:
  4680                           	callstack 0
  4681  005C0E                     _rawhora:
  4682                           	callstack 26
  4683                           
  4684                           ;GPS.c: 670: return rawTime;
  4685                           
  4686                           ;incstack = 0
  4687  005C0E  0ED1               	movlw	low _rawTime
  4688  005C10  6E0A               	movwf	?_rawhora^0,c
  4689  005C12  0E01               	movlw	high _rawTime
  4690  005C14  6E0B               	movwf	(?_rawhora+1)^0,c
  4691  005C16  0012               	return		;funcret
  4692  005C18                     __end_of_rawhora:
  4693                           	callstack 0
  4694                           
  4695 ;; *************** function _rawdata *****************
  4696 ;; Defined at:
  4697 ;;		line 673 in file "bibliotecas/GPS.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;		None
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;		None
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  2    9[COMRAM] PTR unsigned char 
  4704 ;; Registers used:
  4705 ;;		wreg, status,2, status,0
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/1
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4711 ;;      Params:         2       0       0       0       0       0       0       0       0
  4712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4714 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4715 ;;Total ram usage:        2 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    2
  4718 ;; This function calls:
  4719 ;;		Nothing
  4720 ;; This function is called by:
  4721 ;;		_verifica_dados_operacionais
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text17
  4726  005C18                     __ptext17:
  4727                           	callstack 0
  4728  005C18                     _rawdata:
  4729                           	callstack 26
  4730                           
  4731                           ;GPS.c: 675: return rawDate;
  4732                           
  4733                           ;incstack = 0
  4734  005C18  0EE4               	movlw	low _rawDate
  4735  005C1A  6E0A               	movwf	?_rawdata^0,c
  4736  005C1C  0E01               	movlw	high _rawDate
  4737  005C1E  6E0B               	movwf	(?_rawdata+1)^0,c
  4738  005C20  0012               	return		;funcret
  4739  005C22                     __end_of_rawdata:
  4740                           	callstack 0
  4741                           
  4742 ;; *************** function _longitude *****************
  4743 ;; Defined at:
  4744 ;;		line 663 in file "bibliotecas/GPS.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;		None
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;		None
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  2    9[COMRAM] PTR unsigned char 
  4751 ;; Registers used:
  4752 ;;		wreg, status,2, status,0
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/1
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4758 ;;      Params:         2       0       0       0       0       0       0       0       0
  4759 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4760 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4761 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4762 ;;Total ram usage:        2 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; Hardware stack levels required when called:    2
  4765 ;; This function calls:
  4766 ;;		Nothing
  4767 ;; This function is called by:
  4768 ;;		_verifica_dados_operacionais
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           	psect	text18
  4773  005C22                     __ptext18:
  4774                           	callstack 0
  4775  005C22                     _longitude:
  4776                           	callstack 26
  4777                           
  4778                           ;GPS.c: 665: return rawLongitude;
  4779                           
  4780                           ;incstack = 0
  4781  005C22  0EA5               	movlw	low _rawLongitude
  4782  005C24  6E0A               	movwf	?_longitude^0,c
  4783  005C26  0E01               	movlw	high _rawLongitude
  4784  005C28  6E0B               	movwf	(?_longitude+1)^0,c
  4785  005C2A  0012               	return		;funcret
  4786  005C2C                     __end_of_longitude:
  4787                           	callstack 0
  4788                           
  4789 ;; *************** function _latitude *****************
  4790 ;; Defined at:
  4791 ;;		line 658 in file "bibliotecas/GPS.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;		None
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;		None
  4796 ;; Return value:  Size  Location     Type
  4797 ;;                  2    9[COMRAM] PTR unsigned char 
  4798 ;; Registers used:
  4799 ;;		wreg, status,2, status,0
  4800 ;; Tracked objects:
  4801 ;;		On entry : 3F/1
  4802 ;;		On exit  : 3F/1
  4803 ;;		Unchanged: 3F/0
  4804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4805 ;;      Params:         2       0       0       0       0       0       0       0       0
  4806 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4807 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4808 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4809 ;;Total ram usage:        2 bytes
  4810 ;; Hardware stack levels used:    1
  4811 ;; Hardware stack levels required when called:    2
  4812 ;; This function calls:
  4813 ;;		Nothing
  4814 ;; This function is called by:
  4815 ;;		_verifica_dados_operacionais
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           	psect	text19
  4820  005C2C                     __ptext19:
  4821                           	callstack 0
  4822  005C2C                     _latitude:
  4823                           	callstack 26
  4824                           
  4825                           ; BSR set to: 1
  4826                           ;GPS.c: 660: return rawLatitude;
  4827                           
  4828                           ;incstack = 0
  4829  005C2C  0EBE               	movlw	low _rawLatitude
  4830  005C2E  6E0A               	movwf	?_latitude^0,c
  4831  005C30  0E01               	movlw	high _rawLatitude
  4832  005C32  6E0B               	movwf	(?_latitude+1)^0,c
  4833                           
  4834                           ; BSR set to: 1
  4835  005C34  0012               	return		;funcret
  4836  005C36                     __end_of_latitude:
  4837                           	callstack 0
  4838                           
  4839 ;; *************** function ___fttol *****************
  4840 ;; Defined at:
  4841 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fttol.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  f1              3   42[COMRAM] float 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  lval            4   52[COMRAM] unsigned long 
  4846 ;;  exp1            1   56[COMRAM] unsigned char 
  4847 ;;  sign1           1   51[COMRAM] unsigned char 
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  4   42[COMRAM] long 
  4850 ;; Registers used:
  4851 ;;		wreg, status,2, status,0
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4857 ;;      Params:         4       0       0       0       0       0       0       0       0
  4858 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4859 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4860 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4861 ;;Total ram usage:       15 bytes
  4862 ;; Hardware stack levels used:    1
  4863 ;; Hardware stack levels required when called:    2
  4864 ;; This function calls:
  4865 ;;		Nothing
  4866 ;; This function is called by:
  4867 ;;		_verifica_dados_operacionais
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           	psect	text20
  4872  003F92                     __ptext20:
  4873                           	callstack 0
  4874  003F92                     ___fttol:
  4875                           	callstack 26
  4876                           
  4877                           ; BSR set to: 1
  4878                           ;incstack = 0
  4879  003F92  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  4880  003F96  6A30               	clrf	(??___fttol+1)^0,c
  4881  003F98  6A31               	clrf	(??___fttol+2)^0,c
  4882  003F9A  342C               	rlcf	(___fttol@f1+1)^0,w,c
  4883  003F9C  362F               	rlcf	??___fttol^0,f,c
  4884  003F9E  E301               	bnc	u10461
  4885  003FA0  8030               	bsf	(??___fttol+1)^0,0,c
  4886  003FA2                     u10461:
  4887  003FA2  502F               	movf	??___fttol^0,w,c
  4888  003FA4  6E39               	movwf	___fttol@exp1^0,c
  4889  003FA6  5039               	movf	___fttol@exp1^0,w,c
  4890  003FA8  A4D8               	btfss	status,2,c
  4891  003FAA  D009               	goto	l9560
  4892  003FAC                     u10470:
  4893  003FAC  0E00               	movlw	0
  4894  003FAE  6E2B               	movwf	?___fttol^0,c
  4895  003FB0  0E00               	movlw	0
  4896  003FB2  6E2C               	movwf	(?___fttol+1)^0,c
  4897  003FB4  0E00               	movlw	0
  4898  003FB6  6E2D               	movwf	(?___fttol+2)^0,c
  4899  003FB8  0E00               	movlw	0
  4900  003FBA  6E2E               	movwf	(?___fttol+3)^0,c
  4901  003FBC  0012               	return	
  4902  003FBE                     l9560:
  4903  003FBE  0E17               	movlw	23
  4904  003FC0  6E2F               	movwf	??___fttol^0,c
  4905  003FC2  C02B  F030         	movff	___fttol@f1,??___fttol+1
  4906  003FC6  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  4907  003FCA  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  4908  003FCE  282F               	incf	??___fttol^0,w,c
  4909  003FD0  6E33               	movwf	(??___fttol+4)^0,c
  4910  003FD2  D004               	goto	u10480
  4911  003FD4                     u10485:
  4912  003FD4  90D8               	bcf	status,0,c
  4913  003FD6  3232               	rrcf	(??___fttol+3)^0,f,c
  4914  003FD8  3231               	rrcf	(??___fttol+2)^0,f,c
  4915  003FDA  3230               	rrcf	(??___fttol+1)^0,f,c
  4916  003FDC                     u10480:
  4917  003FDC  2E33               	decfsz	(??___fttol+4)^0,f,c
  4918  003FDE  D7FA               	goto	u10485
  4919  003FE0  5030               	movf	(??___fttol+1)^0,w,c
  4920  003FE2  6E34               	movwf	___fttol@sign1^0,c
  4921  003FE4  8E2C               	bsf	(___fttol@f1+1)^0,7,c
  4922  003FE6  0EFF               	movlw	255
  4923  003FE8  162B               	andwf	___fttol@f1^0,f,c
  4924  003FEA  0EFF               	movlw	255
  4925  003FEC  162C               	andwf	(___fttol@f1+1)^0,f,c
  4926  003FEE  0E00               	movlw	0
  4927  003FF0  162D               	andwf	(___fttol@f1+2)^0,f,c
  4928  003FF2  502B               	movf	___fttol@f1^0,w,c
  4929  003FF4  6E35               	movwf	___fttol@lval^0,c
  4930  003FF6  502C               	movf	(___fttol@f1+1)^0,w,c
  4931  003FF8  6E36               	movwf	(___fttol@lval+1)^0,c
  4932  003FFA  502D               	movf	(___fttol@f1+2)^0,w,c
  4933  003FFC  6E37               	movwf	(___fttol@lval+2)^0,c
  4934  003FFE  6A38               	clrf	(___fttol@lval+3)^0,c
  4935  004000  0E8E               	movlw	142
  4936  004002  5E39               	subwf	___fttol@exp1^0,f,c
  4937  004004  AE39               	btfss	___fttol@exp1^0,7,c
  4938  004006  D00D               	goto	l9582
  4939  004008  5039               	movf	___fttol@exp1^0,w,c
  4940  00400A  0A80               	xorlw	128
  4941  00400C  0F8F               	addlw	143
  4942  00400E  A0D8               	btfss	status,0,c
  4943  004010  D7CD               	goto	u10470
  4944  004012                     l9578:
  4945  004012  90D8               	bcf	status,0,c
  4946  004014  3238               	rrcf	(___fttol@lval+3)^0,f,c
  4947  004016  3237               	rrcf	(___fttol@lval+2)^0,f,c
  4948  004018  3236               	rrcf	(___fttol@lval+1)^0,f,c
  4949  00401A  3235               	rrcf	___fttol@lval^0,f,c
  4950  00401C  3E39               	incfsz	___fttol@exp1^0,f,c
  4951  00401E  D7F9               	goto	l9578
  4952  004020  D00D               	goto	u10520
  4953  004022                     l9582:
  4954  004022  0E17               	movlw	23
  4955  004024  6439               	cpfsgt	___fttol@exp1^0,c
  4956  004026  D007               	goto	l9590
  4957  004028  D7C1               	goto	u10470
  4958  00402A                     l9588:
  4959  00402A  90D8               	bcf	status,0,c
  4960  00402C  3635               	rlcf	___fttol@lval^0,f,c
  4961  00402E  3636               	rlcf	(___fttol@lval+1)^0,f,c
  4962  004030  3637               	rlcf	(___fttol@lval+2)^0,f,c
  4963  004032  3638               	rlcf	(___fttol@lval+3)^0,f,c
  4964  004034  0639               	decf	___fttol@exp1^0,f,c
  4965  004036                     l9590:
  4966  004036  5039               	movf	___fttol@exp1^0,w,c
  4967  004038  A4D8               	btfss	status,2,c
  4968  00403A  D7F7               	goto	l9588
  4969  00403C                     u10520:
  4970  00403C  5034               	movf	___fttol@sign1^0,w,c
  4971  00403E  B4D8               	btfsc	status,2,c
  4972  004040  D008               	goto	l9596
  4973  004042  1E38               	comf	(___fttol@lval+3)^0,f,c
  4974  004044  1E37               	comf	(___fttol@lval+2)^0,f,c
  4975  004046  1E36               	comf	(___fttol@lval+1)^0,f,c
  4976  004048  6C35               	negf	___fttol@lval^0,c
  4977  00404A  0E00               	movlw	0
  4978  00404C  2236               	addwfc	(___fttol@lval+1)^0,f,c
  4979  00404E  2237               	addwfc	(___fttol@lval+2)^0,f,c
  4980  004050  2238               	addwfc	(___fttol@lval+3)^0,f,c
  4981  004052                     l9596:
  4982  004052  C035  F02B         	movff	___fttol@lval,?___fttol
  4983  004056  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  4984  00405A  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  4985  00405E  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  4986  004062  0012               	return		;funcret
  4987  004064                     __end_of___fttol:
  4988                           	callstack 0
  4989                           
  4990 ;; *************** function ___ftmul *****************
  4991 ;; Defined at:
  4992 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftmul.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  f1              3   27[COMRAM] float 
  4995 ;;  f2              3   30[COMRAM] float 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  4998 ;;  sign            1   41[COMRAM] unsigned char 
  4999 ;;  cntr            1   40[COMRAM] unsigned char 
  5000 ;;  exp             1   36[COMRAM] unsigned char 
  5001 ;; Return value:  Size  Location     Type
  5002 ;;                  3   27[COMRAM] float 
  5003 ;; Registers used:
  5004 ;;		wreg, status,2, status,0, cstack
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5010 ;;      Params:         6       0       0       0       0       0       0       0       0
  5011 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5012 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5013 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5014 ;;Total ram usage:       15 bytes
  5015 ;; Hardware stack levels used:    1
  5016 ;; Hardware stack levels required when called:    3
  5017 ;; This function calls:
  5018 ;;		___ftpack
  5019 ;; This function is called by:
  5020 ;;		_verifica_dados_operacionais
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           	psect	text21
  5025  003CC6                     __ptext21:
  5026                           	callstack 0
  5027  003CC6                     ___ftmul:
  5028                           	callstack 25
  5029                           
  5030                           ;incstack = 0
  5031  003CC6  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  5032  003CCA  6A23               	clrf	(??___ftmul+1)^0,c
  5033  003CCC  6A24               	clrf	(??___ftmul+2)^0,c
  5034  003CCE  341D               	rlcf	(___ftmul@f1+1)^0,w,c
  5035  003CD0  3622               	rlcf	??___ftmul^0,f,c
  5036  003CD2  E301               	bnc	u10391
  5037  003CD4  8023               	bsf	(??___ftmul+1)^0,0,c
  5038  003CD6                     u10391:
  5039  003CD6  5022               	movf	??___ftmul^0,w,c
  5040  003CD8  6E25               	movwf	___ftmul@exp^0,c
  5041  003CDA  5025               	movf	___ftmul@exp^0,w,c
  5042  003CDC  A4D8               	btfss	status,2,c
  5043  003CDE  D007               	goto	l9500
  5044  003CE0  0E00               	movlw	0
  5045  003CE2  6E1C               	movwf	?___ftmul^0,c
  5046  003CE4  0E00               	movlw	0
  5047  003CE6  6E1D               	movwf	(?___ftmul+1)^0,c
  5048  003CE8  0E00               	movlw	0
  5049  003CEA  6E1E               	movwf	(?___ftmul+2)^0,c
  5050  003CEC  0012               	return	
  5051  003CEE                     l9500:
  5052  003CEE  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  5053  003CF2  6A23               	clrf	(??___ftmul+1)^0,c
  5054  003CF4  6A24               	clrf	(??___ftmul+2)^0,c
  5055  003CF6  3420               	rlcf	(___ftmul@f2+1)^0,w,c
  5056  003CF8  3622               	rlcf	??___ftmul^0,f,c
  5057  003CFA  E301               	bnc	u10411
  5058  003CFC  8023               	bsf	(??___ftmul+1)^0,0,c
  5059  003CFE                     u10411:
  5060  003CFE  5022               	movf	??___ftmul^0,w,c
  5061  003D00  6E2A               	movwf	___ftmul@sign^0,c
  5062  003D02  502A               	movf	___ftmul@sign^0,w,c
  5063  003D04  A4D8               	btfss	status,2,c
  5064  003D06  D007               	goto	l9506
  5065  003D08  0E00               	movlw	0
  5066  003D0A  6E1C               	movwf	?___ftmul^0,c
  5067  003D0C  0E00               	movlw	0
  5068  003D0E  6E1D               	movwf	(?___ftmul+1)^0,c
  5069  003D10  0E00               	movlw	0
  5070  003D12  6E1E               	movwf	(?___ftmul+2)^0,c
  5071  003D14  0012               	return	
  5072  003D16                     l9506:
  5073  003D16  502A               	movf	___ftmul@sign^0,w,c
  5074  003D18  0F7B               	addlw	123
  5075  003D1A  2625               	addwf	___ftmul@exp^0,f,c
  5076  003D1C  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  5077  003D20  5021               	movf	(___ftmul@f2+2)^0,w,c
  5078  003D22  1A2A               	xorwf	___ftmul@sign^0,f,c
  5079  003D24  0E80               	movlw	128
  5080  003D26  162A               	andwf	___ftmul@sign^0,f,c
  5081  003D28  8E1D               	bsf	(___ftmul@f1+1)^0,7,c
  5082  003D2A  8E20               	bsf	(___ftmul@f2+1)^0,7,c
  5083  003D2C  0EFF               	movlw	255
  5084  003D2E  161F               	andwf	___ftmul@f2^0,f,c
  5085  003D30  0EFF               	movlw	255
  5086  003D32  1620               	andwf	(___ftmul@f2+1)^0,f,c
  5087  003D34  0E00               	movlw	0
  5088  003D36  1621               	andwf	(___ftmul@f2+2)^0,f,c
  5089  003D38  0E00               	movlw	0
  5090  003D3A  6E26               	movwf	___ftmul@f3_as_product^0,c
  5091  003D3C  0E00               	movlw	0
  5092  003D3E  6E27               	movwf	(___ftmul@f3_as_product+1)^0,c
  5093  003D40  0E00               	movlw	0
  5094  003D42  6E28               	movwf	(___ftmul@f3_as_product+2)^0,c
  5095  003D44  0E07               	movlw	7
  5096  003D46  6E29               	movwf	___ftmul@cntr^0,c
  5097  003D48                     l9520:
  5098  003D48  A01C               	btfss	___ftmul@f1^0,0,c
  5099  003D4A  D006               	goto	l9524
  5100  003D4C  501F               	movf	___ftmul@f2^0,w,c
  5101  003D4E  2626               	addwf	___ftmul@f3_as_product^0,f,c
  5102  003D50  5020               	movf	(___ftmul@f2+1)^0,w,c
  5103  003D52  2227               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  5104  003D54  5021               	movf	(___ftmul@f2+2)^0,w,c
  5105  003D56  2228               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  5106  003D58                     l9524:
  5107  003D58  90D8               	bcf	status,0,c
  5108  003D5A  321E               	rrcf	(___ftmul@f1+2)^0,f,c
  5109  003D5C  321D               	rrcf	(___ftmul@f1+1)^0,f,c
  5110  003D5E  321C               	rrcf	___ftmul@f1^0,f,c
  5111  003D60  90D8               	bcf	status,0,c
  5112  003D62  361F               	rlcf	___ftmul@f2^0,f,c
  5113  003D64  3620               	rlcf	(___ftmul@f2+1)^0,f,c
  5114  003D66  3621               	rlcf	(___ftmul@f2+2)^0,f,c
  5115  003D68  2E29               	decfsz	___ftmul@cntr^0,f,c
  5116  003D6A  D7EE               	goto	l9520
  5117  003D6C  0E09               	movlw	9
  5118  003D6E  6E29               	movwf	___ftmul@cntr^0,c
  5119  003D70                     l9530:
  5120  003D70  A01C               	btfss	___ftmul@f1^0,0,c
  5121  003D72  D006               	goto	l9534
  5122  003D74  501F               	movf	___ftmul@f2^0,w,c
  5123  003D76  2626               	addwf	___ftmul@f3_as_product^0,f,c
  5124  003D78  5020               	movf	(___ftmul@f2+1)^0,w,c
  5125  003D7A  2227               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  5126  003D7C  5021               	movf	(___ftmul@f2+2)^0,w,c
  5127  003D7E  2228               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  5128  003D80                     l9534:
  5129  003D80  90D8               	bcf	status,0,c
  5130  003D82  321E               	rrcf	(___ftmul@f1+2)^0,f,c
  5131  003D84  321D               	rrcf	(___ftmul@f1+1)^0,f,c
  5132  003D86  321C               	rrcf	___ftmul@f1^0,f,c
  5133  003D88  90D8               	bcf	status,0,c
  5134  003D8A  3228               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  5135  003D8C  3227               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  5136  003D8E  3226               	rrcf	___ftmul@f3_as_product^0,f,c
  5137  003D90  2E29               	decfsz	___ftmul@cntr^0,f,c
  5138  003D92  D7EE               	goto	l9530
  5139  003D94  C026  F00A         	movff	___ftmul@f3_as_product,___ftpack@arg
  5140  003D98  C027  F00B         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5141  003D9C  C028  F00C         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5142  003DA0  C025  F00D         	movff	___ftmul@exp,___ftpack@exp
  5143  003DA4  C02A  F00E         	movff	___ftmul@sign,___ftpack@sign
  5144  003DA8  EC5A  F021         	call	___ftpack	;wreg free
  5145  003DAC  C00A  F01C         	movff	?___ftpack,?___ftmul
  5146  003DB0  C00B  F01D         	movff	?___ftpack+1,?___ftmul+1
  5147  003DB4  C00C  F01E         	movff	?___ftpack+2,?___ftmul+2
  5148  003DB8  0012               	return		;funcret
  5149  003DBA                     __end_of___ftmul:
  5150                           	callstack 0
  5151                           
  5152 ;; *************** function ___awtoft *****************
  5153 ;; Defined at:
  5154 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awtoft.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;  c               2   23[COMRAM] int 
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;  sign            1   26[COMRAM] unsigned char 
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  3   23[COMRAM] float 
  5161 ;; Registers used:
  5162 ;;		wreg, status,2, status,0, cstack
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5168 ;;      Params:         3       0       0       0       0       0       0       0       0
  5169 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5171 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5172 ;;Total ram usage:        4 bytes
  5173 ;; Hardware stack levels used:    1
  5174 ;; Hardware stack levels required when called:    3
  5175 ;; This function calls:
  5176 ;;		___ftpack
  5177 ;; This function is called by:
  5178 ;;		_verifica_dados_operacionais
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           	psect	text22
  5183  005612                     __ptext22:
  5184                           	callstack 0
  5185  005612                     ___awtoft:
  5186                           	callstack 25
  5187                           
  5188                           ;incstack = 0
  5189  005612  0E00               	movlw	0
  5190  005614  6E1B               	movwf	___awtoft@sign^0,c
  5191  005616  AE19               	btfss	(___awtoft@c+1)^0,7,c
  5192  005618  D006               	goto	l9550
  5193  00561A  6C18               	negf	___awtoft@c^0,c
  5194  00561C  1E19               	comf	(___awtoft@c+1)^0,f,c
  5195  00561E  B0D8               	btfsc	status,0,c
  5196  005620  2A19               	incf	(___awtoft@c+1)^0,f,c
  5197  005622  0E01               	movlw	1
  5198  005624  6E1B               	movwf	___awtoft@sign^0,c
  5199  005626                     l9550:
  5200  005626  C018  F00A         	movff	___awtoft@c,___ftpack@arg
  5201  00562A  C019  F00B         	movff	___awtoft@c+1,___ftpack@arg+1
  5202  00562E  6A0C               	clrf	(___ftpack@arg+2)^0,c
  5203  005630  0E8E               	movlw	142
  5204  005632  6E0D               	movwf	___ftpack@exp^0,c
  5205  005634  C01B  F00E         	movff	___awtoft@sign,___ftpack@sign
  5206  005638  EC5A  F021         	call	___ftpack	;wreg free
  5207  00563C  C00A  F018         	movff	?___ftpack,?___awtoft
  5208  005640  C00B  F019         	movff	?___ftpack+1,?___awtoft+1
  5209  005644  C00C  F01A         	movff	?___ftpack+2,?___awtoft+2
  5210  005648  0012               	return		;funcret
  5211  00564A                     __end_of___awtoft:
  5212                           	callstack 0
  5213                           
  5214 ;; *************** function ___ftpack *****************
  5215 ;; Defined at:
  5216 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\float.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;  arg             3    9[COMRAM] unsigned um
  5219 ;;  exp             1   12[COMRAM] unsigned char 
  5220 ;;  sign            1   13[COMRAM] unsigned char 
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;		None
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  3    9[COMRAM] float 
  5225 ;; Registers used:
  5226 ;;		wreg, status,2, status,0
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5232 ;;      Params:         5       0       0       0       0       0       0       0       0
  5233 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5234 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5235 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5236 ;;Total ram usage:        8 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    2
  5239 ;; This function calls:
  5240 ;;		Nothing
  5241 ;; This function is called by:
  5242 ;;		___awtoft
  5243 ;;		___ftmul
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           	psect	text23
  5248  0042B4                     __ptext23:
  5249                           	callstack 0
  5250  0042B4                     ___ftpack:
  5251                           	callstack 25
  5252                           
  5253                           ;incstack = 0
  5254  0042B4  500D               	movf	___ftpack@exp^0,w,c
  5255  0042B6  B4D8               	btfsc	status,2,c
  5256  0042B8  D005               	goto	u10010
  5257  0042BA  500A               	movf	___ftpack@arg^0,w,c
  5258  0042BC  100B               	iorwf	(___ftpack@arg+1)^0,w,c
  5259  0042BE  100C               	iorwf	(___ftpack@arg+2)^0,w,c
  5260  0042C0  A4D8               	btfss	status,2,c
  5261  0042C2  D00C               	goto	l9280
  5262  0042C4                     u10010:
  5263  0042C4  0E00               	movlw	0
  5264  0042C6  6E0A               	movwf	?___ftpack^0,c
  5265  0042C8  0E00               	movlw	0
  5266  0042CA  6E0B               	movwf	(?___ftpack+1)^0,c
  5267  0042CC  0E00               	movlw	0
  5268  0042CE  6E0C               	movwf	(?___ftpack+2)^0,c
  5269  0042D0  0012               	return	
  5270  0042D2                     l9278:
  5271  0042D2  2A0D               	incf	___ftpack@exp^0,f,c
  5272  0042D4  90D8               	bcf	status,0,c
  5273  0042D6  320C               	rrcf	(___ftpack@arg+2)^0,f,c
  5274  0042D8  320B               	rrcf	(___ftpack@arg+1)^0,f,c
  5275  0042DA  320A               	rrcf	___ftpack@arg^0,f,c
  5276  0042DC                     l9280:
  5277  0042DC  0E00               	movlw	0
  5278  0042DE  140A               	andwf	___ftpack@arg^0,w,c
  5279  0042E0  6E0F               	movwf	??___ftpack^0,c
  5280  0042E2  0E00               	movlw	0
  5281  0042E4  140B               	andwf	(___ftpack@arg+1)^0,w,c
  5282  0042E6  6E10               	movwf	(??___ftpack+1)^0,c
  5283  0042E8  0EFE               	movlw	254
  5284  0042EA  140C               	andwf	(___ftpack@arg+2)^0,w,c
  5285  0042EC  6E11               	movwf	(??___ftpack+2)^0,c
  5286  0042EE  500F               	movf	??___ftpack^0,w,c
  5287  0042F0  1010               	iorwf	(??___ftpack+1)^0,w,c
  5288  0042F2  1011               	iorwf	(??___ftpack+2)^0,w,c
  5289  0042F4  B4D8               	btfsc	status,2,c
  5290  0042F6  D00C               	goto	l9286
  5291  0042F8  D7EC               	goto	l9278
  5292  0042FA                     l9282:
  5293  0042FA  2A0D               	incf	___ftpack@exp^0,f,c
  5294  0042FC  0E01               	movlw	1
  5295  0042FE  260A               	addwf	___ftpack@arg^0,f,c
  5296  004300  0E00               	movlw	0
  5297  004302  220B               	addwfc	(___ftpack@arg+1)^0,f,c
  5298  004304  0E00               	movlw	0
  5299  004306  220C               	addwfc	(___ftpack@arg+2)^0,f,c
  5300  004308  90D8               	bcf	status,0,c
  5301  00430A  320C               	rrcf	(___ftpack@arg+2)^0,f,c
  5302  00430C  320B               	rrcf	(___ftpack@arg+1)^0,f,c
  5303  00430E  320A               	rrcf	___ftpack@arg^0,f,c
  5304  004310                     l9286:
  5305  004310  0E00               	movlw	0
  5306  004312  140A               	andwf	___ftpack@arg^0,w,c
  5307  004314  6E0F               	movwf	??___ftpack^0,c
  5308  004316  0E00               	movlw	0
  5309  004318  140B               	andwf	(___ftpack@arg+1)^0,w,c
  5310  00431A  6E10               	movwf	(??___ftpack+1)^0,c
  5311  00431C  0EFF               	movlw	255
  5312  00431E  140C               	andwf	(___ftpack@arg+2)^0,w,c
  5313  004320  6E11               	movwf	(??___ftpack+2)^0,c
  5314  004322  500F               	movf	??___ftpack^0,w,c
  5315  004324  1010               	iorwf	(??___ftpack+1)^0,w,c
  5316  004326  1011               	iorwf	(??___ftpack+2)^0,w,c
  5317  004328  B4D8               	btfsc	status,2,c
  5318  00432A  D006               	goto	l9290
  5319  00432C  D7E6               	goto	l9282
  5320  00432E                     l9288:
  5321  00432E  060D               	decf	___ftpack@exp^0,f,c
  5322  004330  90D8               	bcf	status,0,c
  5323  004332  360A               	rlcf	___ftpack@arg^0,f,c
  5324  004334  360B               	rlcf	(___ftpack@arg+1)^0,f,c
  5325  004336  360C               	rlcf	(___ftpack@arg+2)^0,f,c
  5326  004338                     l9290:
  5327  004338  BE0B               	btfsc	(___ftpack@arg+1)^0,7,c
  5328  00433A  D003               	goto	u10050
  5329  00433C  0E02               	movlw	2
  5330  00433E  600D               	cpfslt	___ftpack@exp^0,c
  5331  004340  D7F6               	goto	l9288
  5332  004342                     u10050:
  5333  004342  A00D               	btfss	___ftpack@exp^0,0,c
  5334  004344  9E0B               	bcf	(___ftpack@arg+1)^0,7,c
  5335  004346  90D8               	bcf	status,0,c
  5336  004348  320D               	rrcf	___ftpack@exp^0,f,c
  5337  00434A  500D               	movf	___ftpack@exp^0,w,c
  5338  00434C  120C               	iorwf	(___ftpack@arg+2)^0,f,c
  5339  00434E  500E               	movf	___ftpack@sign^0,w,c
  5340  004350  A4D8               	btfss	status,2,c
  5341  004352  8E0C               	bsf	(___ftpack@arg+2)^0,7,c
  5342  004354  C00A  F00A         	movff	___ftpack@arg,?___ftpack
  5343  004358  C00B  F00B         	movff	___ftpack@arg+1,?___ftpack+1
  5344  00435C  C00C  F00C         	movff	___ftpack@arg+2,?___ftpack+2
  5345  004360  0012               	return		;funcret
  5346  004362                     __end_of___ftpack:
  5347                           	callstack 0
  5348                           
  5349 ;; *************** function _Speed *****************
  5350 ;; Defined at:
  5351 ;;		line 685 in file "bibliotecas/GPS.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;		None
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;		None
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  2    9[COMRAM] PTR unsigned char 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2, status,0
  5360 ;; Tracked objects:
  5361 ;;		On entry : 3F/0
  5362 ;;		On exit  : 3F/0
  5363 ;;		Unchanged: 3F/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5365 ;;      Params:         2       0       0       0       0       0       0       0       0
  5366 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5367 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5368 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5369 ;;Total ram usage:        2 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    2
  5372 ;; This function calls:
  5373 ;;		Nothing
  5374 ;; This function is called by:
  5375 ;;		_verifica_dados_operacionais
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           	psect	text24
  5380  005C36                     __ptext24:
  5381                           	callstack 0
  5382  005C36                     _Speed:
  5383                           	callstack 26
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;GPS.c: 687: return rawSpeed;
  5387                           
  5388                           ;incstack = 0
  5389  005C36  0E6A               	movlw	low _rawSpeed
  5390  005C38  6E0A               	movwf	?_Speed^0,c
  5391  005C3A  0E02               	movlw	high _rawSpeed
  5392  005C3C  6E0B               	movwf	(?_Speed+1)^0,c
  5393                           
  5394                           ; BSR set to: 0
  5395  005C3E  0012               	return		;funcret
  5396  005C40                     __end_of_Speed:
  5397                           	callstack 0
  5398                           
  5399 ;; *************** function _mostra_dados_display *****************
  5400 ;; Defined at:
  5401 ;;		line 691 in file "bibliotecas/GPS.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;		None
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;		None
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  1    wreg      void 
  5408 ;; Registers used:
  5409 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5415 ;;      Params:         0       0       0       0       0       0       0       0       0
  5416 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5418 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5419 ;;Total ram usage:        0 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; Hardware stack levels required when called:    5
  5422 ;; This function calls:
  5423 ;;		_escreve_frase_ram_lcd
  5424 ;;		_posicao_cursor_lcd
  5425 ;; This function is called by:
  5426 ;;		_troca_de_tela
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           	psect	text25
  5431  0057D2                     __ptext25:
  5432                           	callstack 0
  5433  0057D2                     _mostra_dados_display:
  5434                           	callstack 23
  5435                           
  5436                           ;GPS.c: 693: posicao_cursor_lcd(1,4);
  5437                           
  5438                           ; BSR set to: 0
  5439                           ;incstack = 0
  5440  0057D2  0E04               	movlw	4
  5441  0057D4  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  5442  0057D6  0E01               	movlw	1
  5443  0057D8  EC55  F027         	call	_posicao_cursor_lcd
  5444                           
  5445                           ;GPS.c: 694: escreve_frase_ram_lcd(rawLatitude);
  5446  0057DC  0EBE               	movlw	low _rawLatitude
  5447  0057DE  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  5448  0057E0  0E01               	movlw	high _rawLatitude
  5449  0057E2  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  5450  0057E4  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
  5451                           
  5452                           ;GPS.c: 695: posicao_cursor_lcd(2,4);
  5453  0057E8  0E04               	movlw	4
  5454  0057EA  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  5455  0057EC  0E02               	movlw	2
  5456  0057EE  EC55  F027         	call	_posicao_cursor_lcd
  5457                           
  5458                           ;GPS.c: 696: escreve_frase_ram_lcd(rawLongitude);
  5459  0057F2  0EA5               	movlw	low _rawLongitude
  5460  0057F4  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  5461  0057F6  0E01               	movlw	high _rawLongitude
  5462  0057F8  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  5463  0057FA  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
  5464  0057FE  0012               	return		;funcret
  5465  005800                     __end_of_mostra_dados_display:
  5466                           	callstack 0
  5467                           
  5468 ;; *************** function _escreve_inteiro_lcd *****************
  5469 ;; Defined at:
  5470 ;;		line 376 in file "bibliotecas/display_lcd.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  valor           4   42[COMRAM] long 
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  texto           7   46[COMRAM] unsigned char [7]
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  1    wreg      void 
  5477 ;; Registers used:
  5478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5484 ;;      Params:         4       0       0       0       0       0       0       0       0
  5485 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5486 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5487 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5488 ;;Total ram usage:       11 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:    5
  5491 ;; This function calls:
  5492 ;;		_escreve_frase_ram_lcd
  5493 ;;		_ltoa
  5494 ;; This function is called by:
  5495 ;;		_troca_de_tela
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text26
  5500  00555E                     __ptext26:
  5501                           	callstack 0
  5502  00555E                     _escreve_inteiro_lcd:
  5503                           	callstack 23
  5504                           
  5505                           ;display_lcd.c: 378: char texto[7] = "000000";
  5506                           
  5507                           ;incstack = 0
  5508  00555E  EE21  F0F3         	lfsr	2,escreve_inteiro_lcd@F3223
  5509  005562  EE10  F02F         	lfsr	1,escreve_inteiro_lcd@texto
  5510  005566  0E06               	movlw	6
  5511  005568                     u15871:
  5512  005568  CFDB FFE3          	movff	plusw2,plusw1
  5513  00556C  06E8               	decf	wreg,f,c
  5514  00556E  E2FC               	bc	u15871
  5515                           
  5516                           ;display_lcd.c: 379: ltoa(texto,valor, 10);
  5517  005570  0E2F               	movlw	low escreve_inteiro_lcd@texto
  5518  005572  6E23               	movwf	ltoa@buf^0,c
  5519  005574  C02B  F024         	movff	escreve_inteiro_lcd@valor,ltoa@val
  5520  005578  C02C  F025         	movff	escreve_inteiro_lcd@valor+1,ltoa@val+1
  5521  00557C  C02D  F026         	movff	escreve_inteiro_lcd@valor+2,ltoa@val+2
  5522  005580  C02E  F027         	movff	escreve_inteiro_lcd@valor+3,ltoa@val+3
  5523  005584  0E00               	movlw	0
  5524  005586  6E29               	movwf	(ltoa@base+1)^0,c
  5525  005588  0E0A               	movlw	10
  5526  00558A  6E28               	movwf	ltoa@base^0,c
  5527  00558C  EC2C  F02A         	call	_ltoa	;wreg free
  5528                           
  5529                           ;display_lcd.c: 380: escreve_frase_ram_lcd(texto);
  5530  005590  0E2F               	movlw	low escreve_inteiro_lcd@texto
  5531  005592  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  5532  005594  6A0E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  5533  005596  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
  5534  00559A  0012               	return		;funcret
  5535  00559C                     __end_of_escreve_inteiro_lcd:
  5536                           	callstack 0
  5537                           
  5538 ;; *************** function _ltoa *****************
  5539 ;; Defined at:
  5540 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ltoa.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;  buf             1   34[COMRAM] PTR unsigned char 
  5543 ;;		 -> escreve_inteiro_lcd@texto(7), 
  5544 ;;  val             4   35[COMRAM] long 
  5545 ;;  base            2   39[COMRAM] int 
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;  cp              1    0        PTR unsigned char 
  5548 ;;		 -> escreve_inteiro_lcd@texto(7), 
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      PTR unsigned char 
  5551 ;; Registers used:
  5552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5558 ;;      Params:         7       0       0       0       0       0       0       0       0
  5559 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5561 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5562 ;;Total ram usage:        8 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:    4
  5565 ;; This function calls:
  5566 ;;		_ultoa
  5567 ;; This function is called by:
  5568 ;;		_escreve_inteiro_lcd
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           	psect	text27
  5573  005458                     __ptext27:
  5574                           	callstack 0
  5575  005458                     _ltoa:
  5576                           	callstack 23
  5577                           
  5578                           ;incstack = 0
  5579  005458  AE27               	btfss	(ltoa@val+3)^0,7,c
  5580  00545A  D00E               	goto	l12724
  5581  00545C  5023               	movf	ltoa@buf^0,w,c
  5582  00545E  6ED9               	movwf	fsr2l,c
  5583  005460  6ADA               	clrf	fsr2h,c
  5584  005462  0E2D               	movlw	45
  5585  005464  6EDF               	movwf	indf2,c
  5586  005466  2A23               	incf	ltoa@buf^0,f,c
  5587  005468  1E27               	comf	(ltoa@val+3)^0,f,c
  5588  00546A  1E26               	comf	(ltoa@val+2)^0,f,c
  5589  00546C  1E25               	comf	(ltoa@val+1)^0,f,c
  5590  00546E  6C24               	negf	ltoa@val^0,c
  5591  005470  0E00               	movlw	0
  5592  005472  2225               	addwfc	(ltoa@val+1)^0,f,c
  5593  005474  2226               	addwfc	(ltoa@val+2)^0,f,c
  5594  005476  2227               	addwfc	(ltoa@val+3)^0,f,c
  5595  005478                     l12724:
  5596  005478  C023  F017         	movff	ltoa@buf,ultoa@buf
  5597  00547C  C024  F018         	movff	ltoa@val,ultoa@val
  5598  005480  C025  F019         	movff	ltoa@val+1,ultoa@val+1
  5599  005484  C026  F01A         	movff	ltoa@val+2,ultoa@val+2
  5600  005488  C027  F01B         	movff	ltoa@val+3,ultoa@val+3
  5601  00548C  C028  F01C         	movff	ltoa@base,ultoa@base
  5602  005490  C029  F01D         	movff	ltoa@base+1,ultoa@base+1
  5603  005494  EC55  F01F         	call	_ultoa	;wreg free
  5604  005498  0012               	return		;funcret
  5605  00549A                     __end_of_ltoa:
  5606                           	callstack 0
  5607                           
  5608 ;; *************** function _ultoa *****************
  5609 ;; Defined at:
  5610 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ltoa.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;  buf             1   22[COMRAM] PTR unsigned char 
  5613 ;;		 -> escreve_inteiro_lcd@texto(7), 
  5614 ;;  val             4   23[COMRAM] unsigned long 
  5615 ;;  base            2   27[COMRAM] int 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  v               4   29[COMRAM] unsigned long 
  5618 ;;  c               1   33[COMRAM] unsigned char 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  1    wreg      PTR unsigned char 
  5621 ;; Registers used:
  5622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5628 ;;      Params:         7       0       0       0       0       0       0       0       0
  5629 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5630 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5631 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5632 ;;Total ram usage:       12 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; Hardware stack levels required when called:    3
  5635 ;; This function calls:
  5636 ;;		___lldiv
  5637 ;;		___llmod
  5638 ;; This function is called by:
  5639 ;;		_ltoa
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text28
  5644  003EAA                     __ptext28:
  5645                           	callstack 0
  5646  003EAA                     _ultoa:
  5647                           	callstack 23
  5648                           
  5649                           ;incstack = 0
  5650  003EAA  C018  F01E         	movff	ultoa@val,ultoa@v
  5651  003EAE  C019  F01F         	movff	ultoa@val+1,ultoa@v+1
  5652  003EB2  C01A  F020         	movff	ultoa@val+2,ultoa@v+2
  5653  003EB6  C01B  F021         	movff	ultoa@val+3,ultoa@v+3
  5654  003EBA                     l12692:
  5655  003EBA  C01E  F00A         	movff	ultoa@v,___lldiv@dividend
  5656  003EBE  C01F  F00B         	movff	ultoa@v+1,___lldiv@dividend+1
  5657  003EC2  C020  F00C         	movff	ultoa@v+2,___lldiv@dividend+2
  5658  003EC6  C021  F00D         	movff	ultoa@v+3,___lldiv@dividend+3
  5659  003ECA  C01C  F00E         	movff	ultoa@base,___lldiv@divisor
  5660  003ECE  C01D  F00F         	movff	ultoa@base+1,___lldiv@divisor+1
  5661  003ED2  0E00               	movlw	0
  5662  003ED4  BE0F               	btfsc	(___lldiv@divisor+1)^0,7,c
  5663  003ED6  0EFF               	movlw	-1
  5664  003ED8  6E10               	movwf	(___lldiv@divisor+2)^0,c
  5665  003EDA  6E11               	movwf	(___lldiv@divisor+3)^0,c
  5666  003EDC  ECF1  F024         	call	___lldiv	;wreg free
  5667  003EE0  C00A  F01E         	movff	?___lldiv,ultoa@v
  5668  003EE4  C00B  F01F         	movff	?___lldiv+1,ultoa@v+1
  5669  003EE8  C00C  F020         	movff	?___lldiv+2,ultoa@v+2
  5670  003EEC  C00D  F021         	movff	?___lldiv+3,ultoa@v+3
  5671  003EF0  2A17               	incf	ultoa@buf^0,f,c
  5672  003EF2  501E               	movf	ultoa@v^0,w,c
  5673  003EF4  101F               	iorwf	(ultoa@v+1)^0,w,c
  5674  003EF6  1020               	iorwf	(ultoa@v+2)^0,w,c
  5675  003EF8  1021               	iorwf	(ultoa@v+3)^0,w,c
  5676  003EFA  A4D8               	btfss	status,2,c
  5677  003EFC  D7DE               	goto	l12692
  5678  003EFE  5017               	movf	ultoa@buf^0,w,c
  5679  003F00  6ED9               	movwf	fsr2l,c
  5680  003F02  6ADA               	clrf	fsr2h,c
  5681  003F04  0E00               	movlw	0
  5682  003F06  6EDF               	movwf	indf2,c
  5683  003F08  0617               	decf	ultoa@buf^0,f,c
  5684  003F0A                     l12702:
  5685  003F0A  C018  F00A         	movff	ultoa@val,___llmod@dividend
  5686  003F0E  C019  F00B         	movff	ultoa@val+1,___llmod@dividend+1
  5687  003F12  C01A  F00C         	movff	ultoa@val+2,___llmod@dividend+2
  5688  003F16  C01B  F00D         	movff	ultoa@val+3,___llmod@dividend+3
  5689  003F1A  C01C  F00E         	movff	ultoa@base,___llmod@divisor
  5690  003F1E  C01D  F00F         	movff	ultoa@base+1,___llmod@divisor+1
  5691  003F22  0E00               	movlw	0
  5692  003F24  BE0F               	btfsc	(___llmod@divisor+1)^0,7,c
  5693  003F26  0EFF               	movlw	-1
  5694  003F28  6E10               	movwf	(___llmod@divisor+2)^0,c
  5695  003F2A  6E11               	movwf	(___llmod@divisor+3)^0,c
  5696  003F2C  ECC0  F026         	call	___llmod	;wreg free
  5697  003F30  500A               	movf	?___llmod^0,w,c
  5698  003F32  6E22               	movwf	ultoa@c^0,c
  5699  003F34  C018  F00A         	movff	ultoa@val,___lldiv@dividend
  5700  003F38  C019  F00B         	movff	ultoa@val+1,___lldiv@dividend+1
  5701  003F3C  C01A  F00C         	movff	ultoa@val+2,___lldiv@dividend+2
  5702  003F40  C01B  F00D         	movff	ultoa@val+3,___lldiv@dividend+3
  5703  003F44  C01C  F00E         	movff	ultoa@base,___lldiv@divisor
  5704  003F48  C01D  F00F         	movff	ultoa@base+1,___lldiv@divisor+1
  5705  003F4C  0E00               	movlw	0
  5706  003F4E  BE0F               	btfsc	(___lldiv@divisor+1)^0,7,c
  5707  003F50  0EFF               	movlw	-1
  5708  003F52  6E10               	movwf	(___lldiv@divisor+2)^0,c
  5709  003F54  6E11               	movwf	(___lldiv@divisor+3)^0,c
  5710  003F56  ECF1  F024         	call	___lldiv	;wreg free
  5711  003F5A  C00A  F018         	movff	?___lldiv,ultoa@val
  5712  003F5E  C00B  F019         	movff	?___lldiv+1,ultoa@val+1
  5713  003F62  C00C  F01A         	movff	?___lldiv+2,ultoa@val+2
  5714  003F66  C00D  F01B         	movff	?___lldiv+3,ultoa@val+3
  5715  003F6A  0E09               	movlw	9
  5716  003F6C  6422               	cpfsgt	ultoa@c^0,c
  5717  003F6E  D002               	goto	l2468
  5718  003F70  0E07               	movlw	7
  5719  003F72  2622               	addwf	ultoa@c^0,f,c
  5720  003F74                     l2468:
  5721  003F74  0E30               	movlw	48
  5722  003F76  2622               	addwf	ultoa@c^0,f,c
  5723  003F78  5017               	movf	ultoa@buf^0,w,c
  5724  003F7A  6ED9               	movwf	fsr2l,c
  5725  003F7C  6ADA               	clrf	fsr2h,c
  5726  003F7E  C022  FFDF         	movff	ultoa@c,indf2
  5727  003F82  0617               	decf	ultoa@buf^0,f,c
  5728  003F84  5018               	movf	ultoa@val^0,w,c
  5729  003F86  1019               	iorwf	(ultoa@val+1)^0,w,c
  5730  003F88  101A               	iorwf	(ultoa@val+2)^0,w,c
  5731  003F8A  101B               	iorwf	(ultoa@val+3)^0,w,c
  5732  003F8C  B4D8               	btfsc	status,2,c
  5733  003F8E  0012               	return	
  5734  003F90  D7BC               	goto	l12702
  5735  003F92                     __end_of_ultoa:
  5736                           	callstack 0
  5737                           
  5738 ;; *************** function _escreve_cmd_lcd *****************
  5739 ;; Defined at:
  5740 ;;		line 162 in file "bibliotecas/display_lcd.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  comando         1    wreg     unsigned char 
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;  comando         1   11[COMRAM] unsigned char 
  5745 ;; Return value:  Size  Location     Type
  5746 ;;                  1    wreg      void 
  5747 ;; Registers used:
  5748 ;;		wreg, status,2, status,0, cstack
  5749 ;; Tracked objects:
  5750 ;;		On entry : 0/0
  5751 ;;		On exit  : 0/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5754 ;;      Params:         0       0       0       0       0       0       0       0       0
  5755 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5756 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5757 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5758 ;;Total ram usage:        1 bytes
  5759 ;; Hardware stack levels used:    1
  5760 ;; Hardware stack levels required when called:    3
  5761 ;; This function calls:
  5762 ;;		_delay
  5763 ;; This function is called by:
  5764 ;;		_init_lcd
  5765 ;;		_mensagem_inicial
  5766 ;;		_troca_de_tela
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770                           	psect	text29
  5771  004850                     __ptext29:
  5772                           	callstack 0
  5773  004850                     _escreve_cmd_lcd:
  5774                           	callstack 26
  5775                           
  5776                           ;incstack = 0
  5777                           ;escreve_cmd_lcd@comando stored from wreg
  5778  004850  6E0C               	movwf	escreve_cmd_lcd@comando^0,c
  5779                           
  5780                           ;display_lcd.c: 165: PORTDbits.RD2 = 0;
  5781  004852  9483               	bcf	131,2,c	;volatile
  5782                           
  5783                           ;display_lcd.c: 166: PORTDbits.RD1 = 0;
  5784  004854  9283               	bcf	131,1,c	;volatile
  5785                           
  5786                           ;display_lcd.c: 167: PORTDbits.RD0 = 0;
  5787  004856  9083               	bcf	131,0,c	;volatile
  5788                           
  5789                           ;display_lcd.c: 170: if(comando&0b00010000){PORTDbits.RD4=1;}
  5790  004858  A80C               	btfss	escreve_cmd_lcd@comando^0,4,c
  5791  00485A  D002               	goto	l191
  5792  00485C  8883               	bsf	131,4,c	;volatile
  5793  00485E  D001               	goto	l13126
  5794  004860                     l191:
  5795                           
  5796                           ;display_lcd.c: 171: else {PORTDbits.RD4=0;}
  5797  004860  9883               	bcf	131,4,c	;volatile
  5798  004862                     l13126:
  5799                           
  5800                           ;display_lcd.c: 172: if(comando&0b00100000){PORTDbits.RD5=1;}
  5801  004862  AA0C               	btfss	escreve_cmd_lcd@comando^0,5,c
  5802  004864  D002               	goto	l193
  5803  004866  8A83               	bsf	131,5,c	;volatile
  5804  004868  D001               	goto	l13130
  5805  00486A                     l193:
  5806                           
  5807                           ;display_lcd.c: 173: else {PORTDbits.RD5=0;}
  5808  00486A  9A83               	bcf	131,5,c	;volatile
  5809  00486C                     l13130:
  5810                           
  5811                           ;display_lcd.c: 174: if(comando&0b01000000){PORTDbits.RD6=1;}
  5812  00486C  AC0C               	btfss	escreve_cmd_lcd@comando^0,6,c
  5813  00486E  D002               	goto	l195
  5814  004870  8C83               	bsf	131,6,c	;volatile
  5815  004872  D001               	goto	l13134
  5816  004874                     l195:
  5817                           
  5818                           ;display_lcd.c: 175: else {PORTDbits.RD6=0;}
  5819  004874  9C83               	bcf	131,6,c	;volatile
  5820  004876                     l13134:
  5821                           
  5822                           ;display_lcd.c: 176: if(comando&0b10000000){PORTDbits.RD7=1;}
  5823  004876  AE0C               	btfss	escreve_cmd_lcd@comando^0,7,c
  5824  004878  D002               	goto	l197
  5825  00487A  8E83               	bsf	131,7,c	;volatile
  5826  00487C  D001               	goto	l198
  5827  00487E                     l197:
  5828                           
  5829                           ;display_lcd.c: 177: else {PORTDbits.RD7=0;}
  5830  00487E  9E83               	bcf	131,7,c	;volatile
  5831  004880                     l198:
  5832                           
  5833                           ;display_lcd.c: 180: PORTDbits.RD0 = 1;
  5834  004880  8083               	bsf	131,0,c	;volatile
  5835                           
  5836                           ;display_lcd.c: 181: delay();
  5837  004882  EC5E  F02D         	call	_delay	;wreg free
  5838                           
  5839                           ;display_lcd.c: 182: PORTDbits.RD0 = 0;
  5840  004886  9083               	bcf	131,0,c	;volatile
  5841                           
  5842                           ;display_lcd.c: 183: delay();
  5843  004888  EC5E  F02D         	call	_delay	;wreg free
  5844                           
  5845                           ;display_lcd.c: 186: if(comando&0b00000001){PORTDbits.RD4=1;}
  5846  00488C  A00C               	btfss	escreve_cmd_lcd@comando^0,0,c
  5847  00488E  D002               	goto	l199
  5848  004890  8883               	bsf	131,4,c	;volatile
  5849  004892  D001               	goto	l200
  5850  004894                     l199:
  5851                           
  5852                           ;display_lcd.c: 187: else {PORTDbits.RD4=0;}
  5853  004894  9883               	bcf	131,4,c	;volatile
  5854  004896                     l200:
  5855                           
  5856                           ;display_lcd.c: 188: if(comando&0b00000010){PORTDbits.RD5=1;}
  5857  004896  A20C               	btfss	escreve_cmd_lcd@comando^0,1,c
  5858  004898  D002               	goto	l201
  5859  00489A  8A83               	bsf	131,5,c	;volatile
  5860  00489C  D001               	goto	l202
  5861  00489E                     l201:
  5862                           
  5863                           ;display_lcd.c: 189: else {PORTDbits.RD5=0;}
  5864  00489E  9A83               	bcf	131,5,c	;volatile
  5865  0048A0                     l202:
  5866                           
  5867                           ;display_lcd.c: 190: if(comando&0b00000100){PORTDbits.RD6=1;}
  5868  0048A0  A40C               	btfss	escreve_cmd_lcd@comando^0,2,c
  5869  0048A2  D002               	goto	l203
  5870  0048A4  8C83               	bsf	131,6,c	;volatile
  5871  0048A6  D001               	goto	l204
  5872  0048A8                     l203:
  5873                           
  5874                           ;display_lcd.c: 191: else {PORTDbits.RD6=0;}
  5875  0048A8  9C83               	bcf	131,6,c	;volatile
  5876  0048AA                     l204:
  5877                           
  5878                           ;display_lcd.c: 192: if(comando&0b00001000){PORTDbits.RD7=1;}
  5879  0048AA  A60C               	btfss	escreve_cmd_lcd@comando^0,3,c
  5880  0048AC  D002               	goto	l205
  5881  0048AE  8E83               	bsf	131,7,c	;volatile
  5882  0048B0  D001               	goto	l206
  5883  0048B2                     l205:
  5884                           
  5885                           ;display_lcd.c: 193: else {PORTDbits.RD7=0;}
  5886  0048B2  9E83               	bcf	131,7,c	;volatile
  5887  0048B4                     l206:
  5888                           
  5889                           ;display_lcd.c: 196: PORTDbits.RD0 = 1;
  5890  0048B4  8083               	bsf	131,0,c	;volatile
  5891                           
  5892                           ;display_lcd.c: 197: delay();
  5893  0048B6  EC5E  F02D         	call	_delay	;wreg free
  5894                           
  5895                           ;display_lcd.c: 198: PORTDbits.RD0 = 0;
  5896  0048BA  9083               	bcf	131,0,c	;volatile
  5897                           
  5898                           ;display_lcd.c: 199: delay();
  5899  0048BC  EC5E  F02D         	call	_delay	;wreg free
  5900                           
  5901                           ;display_lcd.c: 204: if (comando==0x01 || comando==0x02 || comando==0x03)
  5902  0048C0  040C               	decf	escreve_cmd_lcd@comando^0,w,c
  5903  0048C2  B4D8               	btfsc	status,2,c
  5904  0048C4  D008               	goto	u15860
  5905  0048C6  0E02               	movlw	2
  5906  0048C8  180C               	xorwf	escreve_cmd_lcd@comando^0,w,c
  5907  0048CA  B4D8               	btfsc	status,2,c
  5908  0048CC  D004               	goto	u15860
  5909  0048CE  0E03               	movlw	3
  5910  0048D0  180C               	xorwf	escreve_cmd_lcd@comando^0,w,c
  5911  0048D2  A4D8               	btfss	status,2,c
  5912  0048D4  0012               	return	
  5913  0048D6                     u15860:
  5914                           
  5915                           ;display_lcd.c: 205: { delay(); }
  5916  0048D6  EC5E  F02D         	call	_delay	;wreg free
  5917  0048DA  0012               	return		;funcret
  5918  0048DC                     __end_of_escreve_cmd_lcd:
  5919                           	callstack 0
  5920                           
  5921 ;; *************** function _verifica_fence *****************
  5922 ;; Defined at:
  5923 ;;		line 276 in file "main.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;		None
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;		None
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  1    wreg      void 
  5930 ;; Registers used:
  5931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5932 ;; Tracked objects:
  5933 ;;		On entry : 3F/1
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5937 ;;      Params:         0       0       0       0       0       0       0       0       0
  5938 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5939 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5940 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5941 ;;Total ram usage:        1 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; Hardware stack levels required when called:    8
  5944 ;; This function calls:
  5945 ;;		_latitude_to_convert
  5946 ;;		_longitude_to_convert
  5947 ;;		_monta_sd
  5948 ;;		_recebe_dado_gps
  5949 ;;		_verifica_plausibilidade_lat
  5950 ;;		_verifica_plausibilidade_long
  5951 ;; This function is called by:
  5952 ;;		_disparo_gravacao
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text30
  5957  004F08                     __ptext30:
  5958                           	callstack 0
  5959  004F08                     _verifica_fence:
  5960                           	callstack 20
  5961                           
  5962                           ; BSR set to: 1
  5963                           ;main.c: 279: recebe_dado_gps();
  5964                           
  5965                           ;incstack = 0
  5966  004F08  EC2E  F02D         	call	_recebe_dado_gps	;wreg free
  5967                           
  5968                           ;main.c: 280: longitude_to_convert();
  5969  004F0C  EC32  F025         	call	_longitude_to_convert	;wreg free
  5970                           
  5971                           ; BSR set to: 1
  5972                           ;main.c: 281: latitude_to_convert();
  5973  004F10  EC6F  F025         	call	_latitude_to_convert	;wreg free
  5974                           
  5975                           ;main.c: 282: fence_flag[0].point = verifica_plausibilidade_long();
  5976  004F14  EC25  F027         	call	_verifica_plausibilidade_long	;wreg free
  5977  004F18  6E43               	movwf	??_verifica_fence^0,c
  5978  004F1A  0100               	movlb	0	; () banked
  5979  004F1C  51E7               	movf	_fence_flag& (0+255),w,b
  5980  004F1E  1843               	xorwf	??_verifica_fence^0,w,c
  5981  004F20  0BFE               	andlw	-2
  5982  004F22  1843               	xorwf	??_verifica_fence^0,w,c
  5983  004F24  6FE7               	movwf	_fence_flag& (0+255),b
  5984                           
  5985                           ;main.c: 283: fence_flag[1].point = verifica_plausibilidade_lat();
  5986  004F26  ECAC  F025         	call	_verifica_plausibilidade_lat	;wreg free
  5987  004F2A  6E43               	movwf	??_verifica_fence^0,c
  5988  004F2C  0100               	movlb	0	; () banked
  5989  004F2E  51E8               	movf	(_fence_flag+1)& (0+255),w,b
  5990  004F30  1843               	xorwf	??_verifica_fence^0,w,c
  5991  004F32  0BFE               	andlw	-2
  5992  004F34  1843               	xorwf	??_verifica_fence^0,w,c
  5993  004F36  6FE8               	movwf	(_fence_flag+1)& (0+255),b
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;main.c: 288: if(fence_flag[0].point || fence_flag[1].point)
  5997  004F38  B1E7               	btfsc	_fence_flag& (0+255),0,b
  5998  004F3A  D002               	goto	u15900
  5999                           
  6000                           ; BSR set to: 0
  6001  004F3C  A1E8               	btfss	(_fence_flag+1)& (0+255),0,b
  6002  004F3E  D009               	goto	l1573
  6003  004F40                     u15900:
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;main.c: 289: {;main.c: 290: fence_flag[2].point = 1;
  6007  004F40  81E9               	bsf	(_fence_flag+2)& (0+255),0,b
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;main.c: 291: monta_sd(4, "0");
  6011  004F42  0E7A               	movlw	low STR_20
  6012  004F44  6E10               	movwf	monta_sd@dado^0,c
  6013  004F46  0E62               	movlw	high STR_20
  6014  004F48  6E11               	movwf	(monta_sd@dado+1)^0,c
  6015  004F4A  0E04               	movlw	4
  6016  004F4C  EC03  F00B         	call	_monta_sd
  6017                           
  6018                           ;main.c: 292: }
  6019  004F50  0012               	return	
  6020  004F52                     l1573:
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;main.c: 293: else;main.c: 294: {;main.c: 295: fence_flag[2].point = 0;
  6024  004F52  91E9               	bcf	(_fence_flag+2)& (0+255),0,b
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;main.c: 296: monta_sd(4, "1");
  6028  004F54  0E2C               	movlw	low (STR_3+8)
  6029  004F56  6E10               	movwf	monta_sd@dado^0,c
  6030  004F58  0E62               	movlw	high (STR_3+8)
  6031  004F5A  6E11               	movwf	(monta_sd@dado+1)^0,c
  6032  004F5C  0E04               	movlw	4
  6033  004F5E  EC03  F00B         	call	_monta_sd
  6034  004F62  0012               	return		;funcret
  6035  004F64                     __end_of_verifica_fence:
  6036                           	callstack 0
  6037                           
  6038 ;; *************** function _verifica_plausibilidade_long *****************
  6039 ;; Defined at:
  6040 ;;		line 311 in file "bibliotecas/fence.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;		None
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;  posicao         1    9[COMRAM] unsigned char 
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      unsigned char 
  6047 ;; Registers used:
  6048 ;;		wreg, status,2, status,0, cstack
  6049 ;; Tracked objects:
  6050 ;;		On entry : 3F/1
  6051 ;;		On exit  : 3F/1
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6054 ;;      Params:         0       0       0       0       0       0       0       0       0
  6055 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6057 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6058 ;;Total ram usage:        1 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; Hardware stack levels required when called:    3
  6061 ;; This function calls:
  6062 ;;		_posicao_long
  6063 ;; This function is called by:
  6064 ;;		_verifica_fence
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           	psect	text31
  6069  004E4A                     __ptext31:
  6070                           	callstack 0
  6071  004E4A                     _verifica_plausibilidade_long:
  6072                           	callstack 24
  6073                           
  6074                           ; BSR set to: 1
  6075                           ;fence.c: 313: char posicao = posicao_long();
  6076                           
  6077                           ;incstack = 0
  6078  004E4A  EC31  F02E         	call	_posicao_long	;wreg free
  6079  004E4E  6E0A               	movwf	verifica_plausibilidade_long@posicao^0,c
  6080                           
  6081                           ;fence.c: 314: switch(posicao)
  6082  004E50  D027               	goto	l13024
  6083  004E52                     l12974:
  6084                           
  6085                           ; BSR set to: 1
  6086                           ;fence.c: 317: if(;fence.c: 318: (poligono_ext[0].diff_long >= 0 &&;fence.c: 319: poligo
      +                          no_ext[1].diff_long <= 0))
  6087  004E52  BF07               	btfsc	(_poligono_ext+7)& (0+255),7,b
  6088  004E54  D00B               	goto	l12984
  6089                           
  6090                           ; BSR set to: 1
  6091  004E56  BF0F               	btfsc	(_poligono_ext+15)& (0+255),7,b
  6092  004E58  D007               	goto	u15560
  6093  004E5A  510F               	movf	(_poligono_ext+15)& (0+255),w,b
  6094  004E5C  110E               	iorwf	(_poligono_ext+14)& (0+255),w,b
  6095  004E5E  110D               	iorwf	(_poligono_ext+13)& (0+255),w,b
  6096  004E60  E105               	bnz	l12984
  6097  004E62  050C               	decf	(_poligono_ext+12)& (0+255),w,b
  6098  004E64  B0D8               	btfsc	status,0,c
  6099  004E66  D002               	goto	l12984
  6100  004E68                     u15560:
  6101                           
  6102                           ; BSR set to: 1
  6103                           ;fence.c: 320: {;fence.c: 321: return 0;
  6104  004E68  0E00               	movlw	0
  6105  004E6A  0012               	return	
  6106  004E6C                     l12984:
  6107                           
  6108                           ; BSR set to: 1
  6109                           ;fence.c: 323: else if(;fence.c: 324: (poligono_ext[0].diff_long == 0 ||;fence.c: 325: p
      +                          oligono_ext[1].diff_long == 0 ))
  6110  004E6C  5104               	movf	(_poligono_ext+4)& (0+255),w,b
  6111  004E6E  1105               	iorwf	(_poligono_ext+5)& (0+255),w,b
  6112  004E70  1106               	iorwf	(_poligono_ext+6)& (0+255),w,b
  6113  004E72  1107               	iorwf	(_poligono_ext+7)& (0+255),w,b
  6114  004E74  B4D8               	btfsc	status,2,c
  6115  004E76  D7F8               	goto	u15560
  6116                           
  6117                           ; BSR set to: 1
  6118  004E78  510C               	movf	(_poligono_ext+12)& (0+255),w,b
  6119  004E7A  110D               	iorwf	(_poligono_ext+13)& (0+255),w,b
  6120  004E7C  110E               	iorwf	(_poligono_ext+14)& (0+255),w,b
  6121  004E7E  110F               	iorwf	(_poligono_ext+15)& (0+255),w,b
  6122  004E80  B4D8               	btfsc	status,2,c
  6123  004E82  D7F2               	goto	u15560
  6124                           
  6125                           ; BSR set to: 1
  6126                           ;fence.c: 329: else;fence.c: 330: {;fence.c: 331: return 1;
  6127  004E84  0E01               	movlw	1
  6128  004E86  0012               	return	
  6129  004E88                     l12998:
  6130                           
  6131                           ; BSR set to: 1
  6132                           ;fence.c: 336: if(;fence.c: 337: (poligono_ext[0].diff_long <= 0 &&;fence.c: 338: poligo
      +                          no_ext[1].diff_long >= 0 ) )
  6133  004E88  BF07               	btfsc	(_poligono_ext+7)& (0+255),7,b
  6134  004E8A  D007               	goto	u15590
  6135  004E8C  5107               	movf	(_poligono_ext+7)& (0+255),w,b
  6136  004E8E  1106               	iorwf	(_poligono_ext+6)& (0+255),w,b
  6137  004E90  1105               	iorwf	(_poligono_ext+5)& (0+255),w,b
  6138  004E92  E1EC               	bnz	l12984
  6139  004E94  0504               	decf	(_poligono_ext+4)& (0+255),w,b
  6140  004E96  B0D8               	btfsc	status,0,c
  6141  004E98  D7E9               	goto	l12984
  6142  004E9A                     u15590:
  6143                           
  6144                           ; BSR set to: 1
  6145  004E9A  AF0F               	btfss	(_poligono_ext+15)& (0+255),7,b
  6146  004E9C  D7E5               	goto	u15560
  6147  004E9E  D7E6               	goto	l12984
  6148  004EA0                     l13024:
  6149                           
  6150                           ; BSR set to: 1
  6151  004EA0  500A               	movf	verifica_plausibilidade_long@posicao^0,w,c
  6152                           
  6153                           ; Switch size 1, requested type "simple"
  6154                           ; Number of cases is 1, Range of values is 45 to 45
  6155                           ; switch strategies available:
  6156                           ; Name         Instructions Cycles
  6157                           ; simple_byte            4     3 (average)
  6158                           ;	Chosen strategy is simple_byte
  6159  004EA2  0A2D               	xorlw	45	; case 45
  6160  004EA4  B4D8               	btfsc	status,2,c
  6161  004EA6  D7D5               	goto	l12974
  6162  004EA8  D7EF               	goto	l12998
  6163  004EAA                     __end_of_verifica_plausibilidade_long:
  6164                           	callstack 0
  6165                           
  6166 ;; *************** function _posicao_long *****************
  6167 ;; Defined at:
  6168 ;;		line 646 in file "bibliotecas/GPS.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;		None
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;		None
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  1    wreg      unsigned char 
  6175 ;; Registers used:
  6176 ;;		wreg, status,2
  6177 ;; Tracked objects:
  6178 ;;		On entry : 3F/1
  6179 ;;		On exit  : 3F/1
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6182 ;;      Params:         0       0       0       0       0       0       0       0       0
  6183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6185 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6186 ;;Total ram usage:        0 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; Hardware stack levels required when called:    2
  6189 ;; This function calls:
  6190 ;;		Nothing
  6191 ;; This function is called by:
  6192 ;;		_verifica_plausibilidade_long
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           	psect	text32
  6197  005C62                     __ptext32:
  6198                           	callstack 0
  6199  005C62                     _posicao_long:
  6200                           	callstack 24
  6201                           
  6202                           ; BSR set to: 1
  6203                           ;GPS.c: 649: return rawLongitude[0];
  6204                           
  6205                           ; BSR set to: 1
  6206                           ;incstack = 0
  6207  005C62  51A5               	movf	_rawLongitude& (0+255),w,b
  6208                           
  6209                           ; BSR set to: 1
  6210  005C64  0012               	return		;funcret
  6211  005C66                     __end_of_posicao_long:
  6212                           	callstack 0
  6213                           
  6214 ;; *************** function _verifica_plausibilidade_lat *****************
  6215 ;; Defined at:
  6216 ;;		line 365 in file "bibliotecas/fence.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;		None
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;  posicao         1    9[COMRAM] unsigned char 
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  1    wreg      unsigned char 
  6223 ;; Registers used:
  6224 ;;		wreg, status,2, status,0, cstack
  6225 ;; Tracked objects:
  6226 ;;		On entry : 3F/0
  6227 ;;		On exit  : 3F/1
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6230 ;;      Params:         0       0       0       0       0       0       0       0       0
  6231 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6233 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6234 ;;Total ram usage:        1 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; Hardware stack levels required when called:    3
  6237 ;; This function calls:
  6238 ;;		_posicao_lat
  6239 ;; This function is called by:
  6240 ;;		_verifica_fence
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	text33
  6245  004B58                     __ptext33:
  6246                           	callstack 0
  6247  004B58                     _verifica_plausibilidade_lat:
  6248                           	callstack 24
  6249                           
  6250                           ; BSR set to: 0
  6251                           ;fence.c: 367: char posicao = posicao_lat();
  6252                           
  6253                           ; BSR set to: 1
  6254                           ;incstack = 0
  6255  004B58  EC2E  F02E         	call	_posicao_lat	;wreg free
  6256  004B5C  6E0A               	movwf	verifica_plausibilidade_lat@posicao^0,c
  6257                           
  6258                           ;fence.c: 368: switch(posicao)
  6259  004B5E  D031               	goto	l13088
  6260  004B60                     l13028:
  6261                           
  6262                           ; BSR set to: 1
  6263                           ;fence.c: 371: if(;fence.c: 372: ( poligono_ext[0].diff_lat <= 0 &&;fence.c: 373: poligo
      +                          no_ext[1].diff_lat >= 0))
  6264  004B60  BF03               	btfsc	(_poligono_ext+3)& (0+255),7,b
  6265  004B62  D007               	goto	u15630
  6266  004B64  5103               	movf	(_poligono_ext+3)& (0+255),w,b
  6267  004B66  1102               	iorwf	(_poligono_ext+2)& (0+255),w,b
  6268  004B68  1101               	iorwf	(_poligono_ext+1)& (0+255),w,b
  6269  004B6A  E107               	bnz	l13038
  6270  004B6C  0500               	decf	_poligono_ext& (0+255),w,b
  6271  004B6E  B0D8               	btfsc	status,0,c
  6272  004B70  D004               	goto	l13038
  6273  004B72                     u15630:
  6274                           
  6275                           ; BSR set to: 1
  6276  004B72  BF0B               	btfsc	(_poligono_ext+11)& (0+255),7,b
  6277  004B74  D002               	goto	l13038
  6278  004B76                     u15640:
  6279                           
  6280                           ; BSR set to: 1
  6281                           ;fence.c: 374: {;fence.c: 375: return 0;
  6282  004B76  0E00               	movlw	0
  6283  004B78  0012               	return	
  6284  004B7A                     l13038:
  6285                           
  6286                           ; BSR set to: 1
  6287                           ;fence.c: 377: else if(;fence.c: 378: (poligono_ext[0].diff_lat == 0 ||;fence.c: 379: po
      +                          ligono_ext[1].diff_lat == 0))
  6288  004B7A  5100               	movf	_poligono_ext& (0+255),w,b
  6289  004B7C  1101               	iorwf	(_poligono_ext+1)& (0+255),w,b
  6290  004B7E  1102               	iorwf	(_poligono_ext+2)& (0+255),w,b
  6291  004B80  1103               	iorwf	(_poligono_ext+3)& (0+255),w,b
  6292  004B82  B4D8               	btfsc	status,2,c
  6293  004B84  D7F8               	goto	u15640
  6294                           
  6295                           ; BSR set to: 1
  6296  004B86  5108               	movf	(_poligono_ext+8)& (0+255),w,b
  6297  004B88  1109               	iorwf	(_poligono_ext+9)& (0+255),w,b
  6298  004B8A  110A               	iorwf	(_poligono_ext+10)& (0+255),w,b
  6299  004B8C  110B               	iorwf	(_poligono_ext+11)& (0+255),w,b
  6300  004B8E  B4D8               	btfsc	status,2,c
  6301  004B90  D7F2               	goto	u15640
  6302                           
  6303                           ; BSR set to: 1
  6304                           ;fence.c: 384: else;fence.c: 385: {;fence.c: 387: return 1;
  6305  004B92  0E01               	movlw	1
  6306  004B94  0012               	return	
  6307  004B96                     l13052:
  6308                           
  6309                           ; BSR set to: 1
  6310                           ;fence.c: 392: if((poligono_ext[0].diff_lat >= 0 &&;fence.c: 393: poligono_ext[1].diff_l
      +                          at <= 0 ))
  6311  004B96  BF03               	btfsc	(_poligono_ext+3)& (0+255),7,b
  6312  004B98  D009               	goto	l13062
  6313                           
  6314                           ; BSR set to: 1
  6315  004B9A  BF0B               	btfsc	(_poligono_ext+11)& (0+255),7,b
  6316  004B9C  D7EC               	goto	u15640
  6317  004B9E  510B               	movf	(_poligono_ext+11)& (0+255),w,b
  6318  004BA0  110A               	iorwf	(_poligono_ext+10)& (0+255),w,b
  6319  004BA2  1109               	iorwf	(_poligono_ext+9)& (0+255),w,b
  6320  004BA4  E103               	bnz	l13062
  6321  004BA6  0508               	decf	(_poligono_ext+8)& (0+255),w,b
  6322  004BA8  A0D8               	btfss	status,0,c
  6323  004BAA  D7E5               	goto	u15640
  6324  004BAC                     l13062:
  6325                           
  6326                           ; BSR set to: 1
  6327                           ;fence.c: 397: else if(;fence.c: 398: (poligono_ext[0].diff_lat >= 0 ||;fence.c: 399: po
      +                          ligono_ext[1].diff_lat <= 0))
  6328  004BAC  BF03               	btfsc	(_poligono_ext+3)& (0+255),7,b
  6329                           
  6330                           ; BSR set to: 1
  6331  004BAE  BF0B               	btfsc	(_poligono_ext+11)& (0+255),7,b
  6332  004BB0  D7E2               	goto	u15640
  6333  004BB2  510B               	movf	(_poligono_ext+11)& (0+255),w,b
  6334  004BB4  110A               	iorwf	(_poligono_ext+10)& (0+255),w,b
  6335  004BB6  1109               	iorwf	(_poligono_ext+9)& (0+255),w,b
  6336  004BB8  E1E0               	bnz	l13038
  6337  004BBA  0508               	decf	(_poligono_ext+8)& (0+255),w,b
  6338  004BBC  A0D8               	btfss	status,0,c
  6339  004BBE  D7DB               	goto	u15640
  6340  004BC0  D7DC               	goto	l13038
  6341  004BC2                     l13088:
  6342                           
  6343                           ; BSR set to: 1
  6344  004BC2  500A               	movf	verifica_plausibilidade_lat@posicao^0,w,c
  6345                           
  6346                           ; Switch size 1, requested type "simple"
  6347                           ; Number of cases is 1, Range of values is 45 to 45
  6348                           ; switch strategies available:
  6349                           ; Name         Instructions Cycles
  6350                           ; simple_byte            4     3 (average)
  6351                           ;	Chosen strategy is simple_byte
  6352  004BC4  0A2D               	xorlw	45	; case 45
  6353  004BC6  B4D8               	btfsc	status,2,c
  6354  004BC8  D7CB               	goto	l13028
  6355  004BCA  D7E5               	goto	l13052
  6356  004BCC                     __end_of_verifica_plausibilidade_lat:
  6357                           	callstack 0
  6358                           
  6359 ;; *************** function _posicao_lat *****************
  6360 ;; Defined at:
  6361 ;;		line 652 in file "bibliotecas/GPS.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;		None
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;		None
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  1    wreg      unsigned char 
  6368 ;; Registers used:
  6369 ;;		wreg, status,2
  6370 ;; Tracked objects:
  6371 ;;		On entry : 3F/0
  6372 ;;		On exit  : 3F/1
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6375 ;;      Params:         0       0       0       0       0       0       0       0       0
  6376 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6377 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6378 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6379 ;;Total ram usage:        0 bytes
  6380 ;; Hardware stack levels used:    1
  6381 ;; Hardware stack levels required when called:    2
  6382 ;; This function calls:
  6383 ;;		Nothing
  6384 ;; This function is called by:
  6385 ;;		_verifica_plausibilidade_lat
  6386 ;; This function uses a non-reentrant model
  6387 ;;
  6388                           
  6389                           	psect	text34
  6390  005C5C                     __ptext34:
  6391                           	callstack 0
  6392  005C5C                     _posicao_lat:
  6393                           	callstack 24
  6394                           
  6395                           ; BSR set to: 0
  6396                           ;GPS.c: 655: return rawLatitude[0];
  6397                           
  6398                           ; BSR set to: 1
  6399                           ;incstack = 0
  6400  005C5C  0101               	movlb	1	; () banked
  6401  005C5E  51BE               	movf	_rawLatitude& (0+255),w,b
  6402                           
  6403                           ; BSR set to: 1
  6404  005C60  0012               	return		;funcret
  6405  005C62                     __end_of_posicao_lat:
  6406                           	callstack 0
  6407                           
  6408 ;; *************** function _recebe_dado_gps *****************
  6409 ;; Defined at:
  6410 ;;		line 557 in file "main.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;		None
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;  timeout         1   10[COMRAM] unsigned char 
  6415 ;;  flag_recebe     1    9[COMRAM] unsigned char 
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  1    wreg      void 
  6418 ;; Registers used:
  6419 ;;		wreg, status,2, status,0, cstack
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6425 ;;      Params:         0       0       0       0       0       0       0       0       0
  6426 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6428 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6429 ;;Total ram usage:        2 bytes
  6430 ;; Hardware stack levels used:    1
  6431 ;; Hardware stack levels required when called:    3
  6432 ;; This function calls:
  6433 ;;		_verifica_recep_gps
  6434 ;; This function is called by:
  6435 ;;		_verifica_fence
  6436 ;;		_disparo_gravacao
  6437 ;;		_troca_de_tela
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441                           	psect	text35
  6442  005A5C                     __ptext35:
  6443                           	callstack 0
  6444  005A5C                     _recebe_dado_gps:
  6445                           	callstack 25
  6446                           
  6447                           ;main.c: 559: unsigned char flag_recebe = 0;
  6448                           
  6449                           ; BSR set to: 1
  6450                           ;incstack = 0
  6451  005A5C  0E00               	movlw	0
  6452  005A5E  6E0A               	movwf	recebe_dado_gps@flag_recebe^0,c
  6453                           
  6454                           ;main.c: 560: unsigned char timeout = 10;
  6455  005A60  0E0A               	movlw	10
  6456  005A62  6E0B               	movwf	recebe_dado_gps@timeout^0,c
  6457                           
  6458                           ;main.c: 561: while(!flag_recebe && timeout>0)
  6459  005A64  D004               	goto	l12968
  6460  005A66                     l12964:
  6461                           
  6462                           ;main.c: 562: {;main.c: 563: flag_recebe = verifica_recep_gps();
  6463  005A66  EC6B  F02C         	call	_verifica_recep_gps	;wreg free
  6464  005A6A  6E0A               	movwf	recebe_dado_gps@flag_recebe^0,c
  6465                           
  6466                           ; BSR set to: 1
  6467                           ;main.c: 564: timeout--;
  6468  005A6C  060B               	decf	recebe_dado_gps@timeout^0,f,c
  6469  005A6E                     l12968:
  6470  005A6E  500A               	movf	recebe_dado_gps@flag_recebe^0,w,c
  6471  005A70  A4D8               	btfss	status,2,c
  6472  005A72  0012               	return	
  6473  005A74  500B               	movf	recebe_dado_gps@timeout^0,w,c
  6474  005A76  B4D8               	btfsc	status,2,c
  6475  005A78  0012               	return	
  6476  005A7A  D7F5               	goto	l12964
  6477  005A7C                     __end_of_recebe_dado_gps:
  6478                           	callstack 0
  6479                           
  6480 ;; *************** function _verifica_recep_gps *****************
  6481 ;; Defined at:
  6482 ;;		line 720 in file "bibliotecas/GPS.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;		None
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;		None
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  1    wreg      unsigned char 
  6489 ;; Registers used:
  6490 ;;		wreg
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 3F/1
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6496 ;;      Params:         0       0       0       0       0       0       0       0       0
  6497 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6499 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6500 ;;Total ram usage:        0 bytes
  6501 ;; Hardware stack levels used:    1
  6502 ;; Hardware stack levels required when called:    2
  6503 ;; This function calls:
  6504 ;;		Nothing
  6505 ;; This function is called by:
  6506 ;;		_recebe_dado_gps
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           	psect	text36
  6511  0058D6                     __ptext36:
  6512                           	callstack 0
  6513  0058D6                     _verifica_recep_gps:
  6514                           	callstack 25
  6515                           
  6516                           ;GPS.c: 722: if(gps_flag[0].flag && gps_flag[1].flag && gps_flag[2].flag && gps_flag[3].
      +                          flag && gps_flag[4].flag && gps_flag[5].flag)
  6517                           
  6518                           ;incstack = 0
  6519  0058D6  0101               	movlb	1	; () banked
  6520  0058D8  B14B               	btfsc	_gps_flag& (0+255),0,b
  6521                           
  6522                           ; BSR set to: 1
  6523  0058DA  A14C               	btfss	(_gps_flag+1)& (0+255),0,b
  6524  0058DC  D00E               	goto	l12212
  6525                           
  6526                           ; BSR set to: 1
  6527  0058DE  B14D               	btfsc	(_gps_flag+2)& (0+255),0,b
  6528                           
  6529                           ; BSR set to: 1
  6530  0058E0  A14E               	btfss	(_gps_flag+3)& (0+255),0,b
  6531  0058E2  D00B               	goto	l12212
  6532                           
  6533                           ; BSR set to: 1
  6534  0058E4  B14F               	btfsc	(_gps_flag+4)& (0+255),0,b
  6535                           
  6536                           ; BSR set to: 1
  6537  0058E6  A150               	btfss	(_gps_flag+5)& (0+255),0,b
  6538  0058E8  D008               	goto	l12212
  6539                           
  6540                           ; BSR set to: 1
  6541                           ;GPS.c: 723: {;GPS.c: 724: gps_flag[0].flag = 0;
  6542  0058EA  914B               	bcf	_gps_flag& (0+255),0,b
  6543                           
  6544                           ;GPS.c: 725: gps_flag[1].flag = 0;
  6545  0058EC  914C               	bcf	(_gps_flag+1)& (0+255),0,b
  6546                           
  6547                           ;GPS.c: 726: gps_flag[2].flag = 0;
  6548  0058EE  914D               	bcf	(_gps_flag+2)& (0+255),0,b
  6549                           
  6550                           ;GPS.c: 727: gps_flag[3].flag = 0;
  6551  0058F0  914E               	bcf	(_gps_flag+3)& (0+255),0,b
  6552                           
  6553                           ;GPS.c: 728: gps_flag[4].flag = 0;
  6554  0058F2  914F               	bcf	(_gps_flag+4)& (0+255),0,b
  6555                           
  6556                           ;GPS.c: 729: gps_flag[5].flag = 0;
  6557  0058F4  9150               	bcf	(_gps_flag+5)& (0+255),0,b
  6558                           
  6559                           ; BSR set to: 1
  6560                           ;GPS.c: 730: return 1;
  6561  0058F6  0E01               	movlw	1
  6562  0058F8  0012               	return	
  6563  0058FA                     l12212:
  6564                           
  6565                           ; BSR set to: 1
  6566                           ;GPS.c: 732: else;GPS.c: 733: {;GPS.c: 735: return 0;
  6567  0058FA  0E00               	movlw	0
  6568                           
  6569                           ; BSR set to: 1
  6570  0058FC  0012               	return		;funcret
  6571  0058FE                     __end_of_verifica_recep_gps:
  6572                           	callstack 0
  6573                           
  6574 ;; *************** function _longitude_to_convert *****************
  6575 ;; Defined at:
  6576 ;;		line 627 in file "bibliotecas/GPS.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;		None
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;  longitude      11    0[BANK0 ] unsigned char [11]
  6581 ;;  i               1   12[BANK0 ] unsigned char 
  6582 ;;  j               1   11[BANK0 ] unsigned char 
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  1    wreg      void 
  6585 ;; Registers used:
  6586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/1
  6589 ;;		On exit  : 3F/1
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6592 ;;      Params:         0       0       0       0       0       0       0       0       0
  6593 ;;      Locals:         0      13       0       0       0       0       0       0       0
  6594 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6595 ;;      Totals:         1      13       0       0       0       0       0       0       0
  6596 ;;Total ram usage:       14 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; Hardware stack levels required when called:    7
  6599 ;; This function calls:
  6600 ;;		_armazena_ltlo
  6601 ;; This function is called by:
  6602 ;;		_verifica_fence
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606                           	psect	text37
  6607  004A64                     __ptext37:
  6608                           	callstack 0
  6609  004A64                     _longitude_to_convert:
  6610                           	callstack 20
  6611                           
  6612                           ;GPS.c: 629: unsigned char i,j;;GPS.c: 630: unsigned char longitude[11];;GPS.c: 633: j =
      +                           0;
  6613                           
  6614                           ; BSR set to: 1
  6615                           ;incstack = 0
  6616  004A64  0E00               	movlw	0
  6617  004A66  0100               	movlb	0	; () banked
  6618  004A68  6F6B               	movwf	longitude_to_convert@j& (0+255),b
  6619                           
  6620                           ;GPS.c: 634: for(i=0; i<12; i++)
  6621  004A6A  0E00               	movlw	0
  6622  004A6C  6F6C               	movwf	longitude_to_convert@i& (0+255),b
  6623  004A6E                     l12758:
  6624                           
  6625                           ; BSR set to: 0
  6626                           ;GPS.c: 635: {;GPS.c: 636: if(rawLongitude[i] != '\0' && rawLongitude[i] != '-' && rawLo
      +                          ngitude[i]!= '.' && j <10)
  6627  004A6E  0EA5               	movlw	low _rawLongitude
  6628  004A70  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6629  004A72  6ED9               	movwf	fsr2l,c
  6630  004A74  6ADA               	clrf	fsr2h,c
  6631  004A76  0E01               	movlw	high _rawLongitude
  6632  004A78  22DA               	addwfc	fsr2h,f,c
  6633  004A7A  50DF               	movf	indf2,w,c
  6634  004A7C  B4D8               	btfsc	status,2,c
  6635  004A7E  D024               	goto	l12770
  6636                           
  6637                           ; BSR set to: 0
  6638  004A80  0EA5               	movlw	low _rawLongitude
  6639  004A82  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6640  004A84  6ED9               	movwf	fsr2l,c
  6641  004A86  6ADA               	clrf	fsr2h,c
  6642  004A88  0E01               	movlw	high _rawLongitude
  6643  004A8A  22DA               	addwfc	fsr2h,f,c
  6644  004A8C  0E2D               	movlw	45
  6645  004A8E  18DE               	xorwf	postinc2,w,c
  6646  004A90  B4D8               	btfsc	status,2,c
  6647  004A92  D01A               	goto	l12770
  6648                           
  6649                           ; BSR set to: 0
  6650  004A94  0EA5               	movlw	low _rawLongitude
  6651  004A96  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6652  004A98  6ED9               	movwf	fsr2l,c
  6653  004A9A  6ADA               	clrf	fsr2h,c
  6654  004A9C  0E01               	movlw	high _rawLongitude
  6655  004A9E  22DA               	addwfc	fsr2h,f,c
  6656  004AA0  0E2E               	movlw	46
  6657  004AA2  18DE               	xorwf	postinc2,w,c
  6658  004AA4  B4D8               	btfsc	status,2,c
  6659  004AA6  D010               	goto	l12770
  6660                           
  6661                           ; BSR set to: 0
  6662  004AA8  0E0A               	movlw	10
  6663  004AAA  616B               	cpfslt	longitude_to_convert@j& (0+255),b
  6664  004AAC  D00D               	goto	l12770
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;GPS.c: 637: {;GPS.c: 639: longitude[j] = rawLongitude[i];
  6668  004AAE  0EA5               	movlw	low _rawLongitude
  6669  004AB0  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6670  004AB2  6ED9               	movwf	fsr2l,c
  6671  004AB4  6ADA               	clrf	fsr2h,c
  6672  004AB6  0E01               	movlw	high _rawLongitude
  6673  004AB8  22DA               	addwfc	fsr2h,f,c
  6674  004ABA  516B               	movf	longitude_to_convert@j& (0+255),w,b
  6675  004ABC  0F60               	addlw	low longitude_to_convert@longitude
  6676  004ABE  6EE1               	movwf	fsr1l,c
  6677  004AC0  6AE2               	clrf	fsr1h,c
  6678  004AC2  CFDF FFE7          	movff	indf2,indf1
  6679                           
  6680                           ; BSR set to: 0
  6681                           ;GPS.c: 640: j++;
  6682  004AC6  2B6B               	incf	longitude_to_convert@j& (0+255),f,b
  6683  004AC8                     l12770:
  6684                           
  6685                           ; BSR set to: 0
  6686  004AC8  2B6C               	incf	longitude_to_convert@i& (0+255),f,b
  6687                           
  6688                           ; BSR set to: 0
  6689  004ACA  0E0B               	movlw	11
  6690  004ACC  656C               	cpfsgt	longitude_to_convert@i& (0+255),b
  6691  004ACE  D7CF               	goto	l12758
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;GPS.c: 641: };GPS.c: 642: };GPS.c: 643: armazena_ltlo(longitude, 0);
  6695  004AD0  0E60               	movlw	low longitude_to_convert@longitude
  6696  004AD2  6E3E               	movwf	armazena_ltlo@buffer^0,c
  6697  004AD4  0E00               	movlw	0
  6698  004AD6  6E3F               	movwf	armazena_ltlo@index^0,c
  6699  004AD8  EC6E  F024         	call	_armazena_ltlo	;wreg free
  6700                           
  6701                           ; BSR set to: 1
  6702  004ADC  0012               	return		;funcret
  6703  004ADE                     __end_of_longitude_to_convert:
  6704                           	callstack 0
  6705                           
  6706 ;; *************** function _latitude_to_convert *****************
  6707 ;; Defined at:
  6708 ;;		line 602 in file "bibliotecas/GPS.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;		None
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;  latitude        9    0[BANK0 ] unsigned char [9]
  6713 ;;  i               1   10[BANK0 ] unsigned char 
  6714 ;;  j               1    9[BANK0 ] unsigned char 
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  1    wreg      void 
  6717 ;; Registers used:
  6718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6719 ;; Tracked objects:
  6720 ;;		On entry : 3F/1
  6721 ;;		On exit  : 3F/1
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6724 ;;      Params:         0       0       0       0       0       0       0       0       0
  6725 ;;      Locals:         0      11       0       0       0       0       0       0       0
  6726 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6727 ;;      Totals:         1      11       0       0       0       0       0       0       0
  6728 ;;Total ram usage:       12 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; Hardware stack levels required when called:    7
  6731 ;; This function calls:
  6732 ;;		_armazena_ltlo
  6733 ;; This function is called by:
  6734 ;;		_verifica_fence
  6735 ;; This function uses a non-reentrant model
  6736 ;;
  6737                           
  6738                           	psect	text38
  6739  004ADE                     __ptext38:
  6740                           	callstack 0
  6741  004ADE                     _latitude_to_convert:
  6742                           	callstack 20
  6743                           
  6744                           ; BSR set to: 1
  6745                           ;GPS.c: 604: unsigned char i,j;;GPS.c: 605: unsigned char latitude[9];;GPS.c: 608: j = 0
      +                          ;
  6746                           
  6747                           ; BSR set to: 1
  6748                           ;incstack = 0
  6749  004ADE  0E00               	movlw	0
  6750  004AE0  0100               	movlb	0	; () banked
  6751  004AE2  6F69               	movwf	latitude_to_convert@j& (0+255),b
  6752                           
  6753                           ;GPS.c: 609: for(i=0; i<12; i++)
  6754  004AE4  0E00               	movlw	0
  6755  004AE6  6F6A               	movwf	latitude_to_convert@i& (0+255),b
  6756  004AE8                     l12734:
  6757                           
  6758                           ; BSR set to: 0
  6759                           ;GPS.c: 610: {;GPS.c: 611: if(rawLatitude[i] != '\0' && rawLatitude[i] != '-' && rawLati
      +                          tude[i]!= '.' && j <9)
  6760  004AE8  0EBE               	movlw	low _rawLatitude
  6761  004AEA  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6762  004AEC  6ED9               	movwf	fsr2l,c
  6763  004AEE  6ADA               	clrf	fsr2h,c
  6764  004AF0  0E01               	movlw	high _rawLatitude
  6765  004AF2  22DA               	addwfc	fsr2h,f,c
  6766  004AF4  50DF               	movf	indf2,w,c
  6767  004AF6  B4D8               	btfsc	status,2,c
  6768  004AF8  D024               	goto	l12746
  6769                           
  6770                           ; BSR set to: 0
  6771  004AFA  0EBE               	movlw	low _rawLatitude
  6772  004AFC  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6773  004AFE  6ED9               	movwf	fsr2l,c
  6774  004B00  6ADA               	clrf	fsr2h,c
  6775  004B02  0E01               	movlw	high _rawLatitude
  6776  004B04  22DA               	addwfc	fsr2h,f,c
  6777  004B06  0E2D               	movlw	45
  6778  004B08  18DE               	xorwf	postinc2,w,c
  6779  004B0A  B4D8               	btfsc	status,2,c
  6780  004B0C  D01A               	goto	l12746
  6781                           
  6782                           ; BSR set to: 0
  6783  004B0E  0EBE               	movlw	low _rawLatitude
  6784  004B10  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6785  004B12  6ED9               	movwf	fsr2l,c
  6786  004B14  6ADA               	clrf	fsr2h,c
  6787  004B16  0E01               	movlw	high _rawLatitude
  6788  004B18  22DA               	addwfc	fsr2h,f,c
  6789  004B1A  0E2E               	movlw	46
  6790  004B1C  18DE               	xorwf	postinc2,w,c
  6791  004B1E  B4D8               	btfsc	status,2,c
  6792  004B20  D010               	goto	l12746
  6793                           
  6794                           ; BSR set to: 0
  6795  004B22  0E09               	movlw	9
  6796  004B24  6169               	cpfslt	latitude_to_convert@j& (0+255),b
  6797  004B26  D00D               	goto	l12746
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;GPS.c: 612: {;GPS.c: 613: latitude[j] = rawLatitude[i];
  6801  004B28  0EBE               	movlw	low _rawLatitude
  6802  004B2A  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6803  004B2C  6ED9               	movwf	fsr2l,c
  6804  004B2E  6ADA               	clrf	fsr2h,c
  6805  004B30  0E01               	movlw	high _rawLatitude
  6806  004B32  22DA               	addwfc	fsr2h,f,c
  6807  004B34  5169               	movf	latitude_to_convert@j& (0+255),w,b
  6808  004B36  0F60               	addlw	low latitude_to_convert@latitude
  6809  004B38  6EE1               	movwf	fsr1l,c
  6810  004B3A  6AE2               	clrf	fsr1h,c
  6811  004B3C  CFDF FFE7          	movff	indf2,indf1
  6812                           
  6813                           ; BSR set to: 0
  6814                           ;GPS.c: 614: j++;
  6815  004B40  2B69               	incf	latitude_to_convert@j& (0+255),f,b
  6816  004B42                     l12746:
  6817                           
  6818                           ; BSR set to: 0
  6819  004B42  2B6A               	incf	latitude_to_convert@i& (0+255),f,b
  6820                           
  6821                           ; BSR set to: 0
  6822  004B44  0E0B               	movlw	11
  6823  004B46  656A               	cpfsgt	latitude_to_convert@i& (0+255),b
  6824  004B48  D7CF               	goto	l12734
  6825                           
  6826                           ; BSR set to: 0
  6827                           ;GPS.c: 615: };GPS.c: 616: };GPS.c: 617: armazena_ltlo(latitude, 1);
  6828  004B4A  0E60               	movlw	low latitude_to_convert@latitude
  6829  004B4C  6E3E               	movwf	armazena_ltlo@buffer^0,c
  6830  004B4E  0E01               	movlw	1
  6831  004B50  6E3F               	movwf	armazena_ltlo@index^0,c
  6832  004B52  EC6E  F024         	call	_armazena_ltlo	;wreg free
  6833                           
  6834                           ; BSR set to: 1
  6835  004B56  0012               	return		;funcret
  6836  004B58                     __end_of_latitude_to_convert:
  6837                           	callstack 0
  6838                           
  6839 ;; *************** function _armazena_ltlo *****************
  6840 ;; Defined at:
  6841 ;;		line 64 in file "bibliotecas/fence.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;  buffer          1   61[COMRAM] PTR unsigned char 
  6844 ;;		 -> longitude_to_convert@longitude(11), latitude_to_convert@latitude(9), 
  6845 ;;  index           1   62[COMRAM] unsigned char 
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;  i               1   64[COMRAM] unsigned char 
  6848 ;;  j               1   63[COMRAM] unsigned char 
  6849 ;; Return value:  Size  Location     Type
  6850 ;;                  1    wreg      void 
  6851 ;; Registers used:
  6852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6853 ;; Tracked objects:
  6854 ;;		On entry : 3F/0
  6855 ;;		On exit  : 3F/1
  6856 ;;		Unchanged: 0/0
  6857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6858 ;;      Params:         2       0       0       0       0       0       0       0       0
  6859 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6860 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6861 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6862 ;;Total ram usage:        4 bytes
  6863 ;; Hardware stack levels used:    1
  6864 ;; Hardware stack levels required when called:    6
  6865 ;; This function calls:
  6866 ;;		_diferenca
  6867 ;; This function is called by:
  6868 ;;		_latitude_to_convert
  6869 ;;		_longitude_to_convert
  6870 ;; This function uses a non-reentrant model
  6871 ;;
  6872                           
  6873                           	psect	text39
  6874  0048DC                     __ptext39:
  6875                           	callstack 0
  6876  0048DC                     _armazena_ltlo:
  6877                           	callstack 20
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;fence.c: 67: unsigned char i, j;;fence.c: 72: switch(index)
  6881                           
  6882                           ; BSR set to: 1
  6883                           ;incstack = 0
  6884  0048DC  D038               	goto	l12180
  6885  0048DE                     l12142:
  6886                           
  6887                           ; BSR set to: 0
  6888                           ;fence.c: 75: j = 0;
  6889  0048DE  0E00               	movlw	0
  6890  0048E0  6E40               	movwf	armazena_ltlo@j^0,c
  6891                           
  6892                           ;fence.c: 76: for(i=0; i<10; i++)
  6893  0048E2  0E00               	movlw	0
  6894  0048E4  6E41               	movwf	armazena_ltlo@i^0,c
  6895  0048E6                     l12148:
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;fence.c: 77: {;fence.c: 78: if(*buffer != '\0')
  6899  0048E6  503E               	movf	armazena_ltlo@buffer^0,w,c
  6900  0048E8  6ED9               	movwf	fsr2l,c
  6901  0048EA  6ADA               	clrf	fsr2h,c
  6902  0048EC  50DF               	movf	indf2,w,c
  6903  0048EE  B4D8               	btfsc	status,2,c
  6904  0048F0  D00C               	goto	l12154
  6905                           
  6906                           ; BSR set to: 0
  6907                           ;fence.c: 79: {;fence.c: 81: dado[j] = *buffer;
  6908  0048F2  503E               	movf	armazena_ltlo@buffer^0,w,c
  6909  0048F4  6ED9               	movwf	fsr2l,c
  6910  0048F6  6ADA               	clrf	fsr2h,c
  6911  0048F8  0E10               	movlw	low _dado
  6912  0048FA  2440               	addwf	armazena_ltlo@j^0,w,c
  6913  0048FC  6EE1               	movwf	fsr1l,c
  6914  0048FE  6AE2               	clrf	fsr1h,c
  6915  004900  0E01               	movlw	high _dado
  6916  004902  22E2               	addwfc	fsr1h,f,c
  6917  004904  CFDF FFE7          	movff	indf2,indf1
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;fence.c: 82: j++;
  6921  004908  2A40               	incf	armazena_ltlo@j^0,f,c
  6922  00490A                     l12154:
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;fence.c: 83: };fence.c: 85: buffer++;
  6926  00490A  2A3E               	incf	armazena_ltlo@buffer^0,f,c
  6927                           
  6928                           ; BSR set to: 0
  6929  00490C  2A41               	incf	armazena_ltlo@i^0,f,c
  6930                           
  6931                           ; BSR set to: 0
  6932  00490E  0E09               	movlw	9
  6933  004910  6441               	cpfsgt	armazena_ltlo@i^0,c
  6934  004912  D7E9               	goto	l12148
  6935  004914  D021               	goto	l12182
  6936  004916                     l12160:
  6937                           
  6938                           ; BSR set to: 0
  6939                           ;fence.c: 91: j = 0;
  6940  004916  0E00               	movlw	0
  6941  004918  6E40               	movwf	armazena_ltlo@j^0,c
  6942                           
  6943                           ;fence.c: 92: for(i=0; i<11; i++)
  6944  00491A  0E00               	movlw	0
  6945  00491C  6E41               	movwf	armazena_ltlo@i^0,c
  6946  00491E                     l12166:
  6947                           
  6948                           ; BSR set to: 0
  6949                           ;fence.c: 93: {;fence.c: 94: if(*buffer != '\0')
  6950  00491E  503E               	movf	armazena_ltlo@buffer^0,w,c
  6951  004920  6ED9               	movwf	fsr2l,c
  6952  004922  6ADA               	clrf	fsr2h,c
  6953  004924  50DF               	movf	indf2,w,c
  6954  004926  B4D8               	btfsc	status,2,c
  6955  004928  D00C               	goto	l12172
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;fence.c: 95: {;fence.c: 97: dado[j] = *buffer;
  6959  00492A  503E               	movf	armazena_ltlo@buffer^0,w,c
  6960  00492C  6ED9               	movwf	fsr2l,c
  6961  00492E  6ADA               	clrf	fsr2h,c
  6962  004930  0E10               	movlw	low _dado
  6963  004932  2440               	addwf	armazena_ltlo@j^0,w,c
  6964  004934  6EE1               	movwf	fsr1l,c
  6965  004936  6AE2               	clrf	fsr1h,c
  6966  004938  0E01               	movlw	high _dado
  6967  00493A  22E2               	addwfc	fsr1h,f,c
  6968  00493C  CFDF FFE7          	movff	indf2,indf1
  6969                           
  6970                           ; BSR set to: 0
  6971                           ;fence.c: 98: j++;
  6972  004940  2A40               	incf	armazena_ltlo@j^0,f,c
  6973  004942                     l12172:
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;fence.c: 99: };fence.c: 101: buffer++;
  6977  004942  2A3E               	incf	armazena_ltlo@buffer^0,f,c
  6978                           
  6979                           ; BSR set to: 0
  6980  004944  2A41               	incf	armazena_ltlo@i^0,f,c
  6981                           
  6982                           ; BSR set to: 0
  6983  004946  0E0A               	movlw	10
  6984  004948  6441               	cpfsgt	armazena_ltlo@i^0,c
  6985  00494A  D7E9               	goto	l12166
  6986  00494C  D005               	goto	l12182
  6987  00494E                     l12180:
  6988                           
  6989                           ; BSR set to: 0
  6990  00494E  503F               	movf	armazena_ltlo@index^0,w,c
  6991                           
  6992                           ; Switch size 1, requested type "simple"
  6993                           ; Number of cases is 1, Range of values is 1 to 1
  6994                           ; switch strategies available:
  6995                           ; Name         Instructions Cycles
  6996                           ; simple_byte            4     3 (average)
  6997                           ;	Chosen strategy is simple_byte
  6998  004950  0A01               	xorlw	1	; case 1
  6999  004952  B4D8               	btfsc	status,2,c
  7000  004954  D7C4               	goto	l12142
  7001  004956  D7DF               	goto	l12160
  7002  004958                     l12182:
  7003                           
  7004                           ; BSR set to: 0
  7005                           ;fence.c: 108: diferenca(index);
  7006  004958  503F               	movf	armazena_ltlo@index^0,w,c
  7007  00495A  EC32  F020         	call	_diferenca
  7008                           
  7009                           ; BSR set to: 1
  7010  00495E  0012               	return		;funcret
  7011  004960                     __end_of_armazena_ltlo:
  7012                           	callstack 0
  7013                           
  7014 ;; *************** function _diferenca *****************
  7015 ;; Defined at:
  7016 ;;		line 145 in file "bibliotecas/fence.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  index           1    wreg     unsigned char 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;  index           1   52[COMRAM] unsigned char 
  7021 ;;  valor_long      4   57[COMRAM] unsigned long 
  7022 ;;  valor_lat       4   53[COMRAM] unsigned long 
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  1    wreg      void 
  7025 ;; Registers used:
  7026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7027 ;; Tracked objects:
  7028 ;;		On entry : 3F/0
  7029 ;;		On exit  : 3F/1
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7032 ;;      Params:         0       0       0       0       0       0       0       0       0
  7033 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7034 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7035 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7036 ;;Total ram usage:        9 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; Hardware stack levels required when called:    5
  7039 ;; This function calls:
  7040 ;;		_convert_to_int
  7041 ;;		_convert_to_int_point_lat
  7042 ;;		_convert_to_int_point_long
  7043 ;; This function is called by:
  7044 ;;		_armazena_ltlo
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           	psect	text40
  7049  004064                     __ptext40:
  7050                           	callstack 0
  7051  004064                     _diferenca:
  7052                           	callstack 20
  7053                           
  7054                           ; BSR set to: 1
  7055                           ;incstack = 0
  7056                           ;diferenca@index stored from wreg
  7057  004064  6E35               	movwf	diferenca@index^0,c
  7058                           
  7059                           ;fence.c: 147: unsigned long int valor_lat, valor_long;;fence.c: 149: switch(index)
  7060  004066  D062               	goto	l12070
  7061  004068                     l12056:
  7062                           
  7063                           ;fence.c: 152: valor_lat = convert_to_int_point_lat();
  7064  004068  EC0B  F028         	call	_convert_to_int_point_lat	;wreg free
  7065  00406C  C024  F036         	movff	?_convert_to_int_point_lat,diferenca@valor_lat
  7066  004070  C025  F037         	movff	?_convert_to_int_point_lat+1,diferenca@valor_lat+1
  7067  004074  C026  F038         	movff	?_convert_to_int_point_lat+2,diferenca@valor_lat+2
  7068  004078  C027  F039         	movff	?_convert_to_int_point_lat+3,diferenca@valor_lat+3
  7069                           
  7070                           ;fence.c: 153: poligono_ext[0].diff_lat = convert_to_int(fence_diff_lat[0]) - valor_lat;
  7071  00407C  0E55               	movlw	low _fence_diff_lat
  7072  00407E  6E24               	movwf	convert_to_int@p_buff^0,c
  7073  004080  0E61               	movlw	high _fence_diff_lat
  7074  004082  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7075  004084  ECB7  F02C         	call	_convert_to_int	;wreg free
  7076  004088  5036               	movf	diferenca@valor_lat^0,w,c
  7077  00408A  5C24               	subwf	?_convert_to_int^0,w,c
  7078  00408C  0101               	movlb	1	; () banked
  7079  00408E  6F00               	movwf	_poligono_ext& (0+255),b
  7080  004090  5037               	movf	(diferenca@valor_lat+1)^0,w,c
  7081  004092  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7082  004094  6F01               	movwf	(_poligono_ext+1)& (0+255),b
  7083  004096  5038               	movf	(diferenca@valor_lat+2)^0,w,c
  7084  004098  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7085  00409A  6F02               	movwf	(_poligono_ext+2)& (0+255),b
  7086  00409C  5039               	movf	(diferenca@valor_lat+3)^0,w,c
  7087  00409E  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7088  0040A0  6F03               	movwf	(_poligono_ext+3)& (0+255),b
  7089                           
  7090                           ; BSR set to: 1
  7091                           ;fence.c: 154: poligono_ext[1].diff_lat = convert_to_int(fence_diff_lat[2]) - valor_lat;
  7092  0040A2  0E69               	movlw	low (_fence_diff_lat+20)
  7093  0040A4  6E24               	movwf	convert_to_int@p_buff^0,c
  7094  0040A6  0E61               	movlw	high (_fence_diff_lat+20)
  7095  0040A8  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7096  0040AA  ECB7  F02C         	call	_convert_to_int	;wreg free
  7097  0040AE  5036               	movf	diferenca@valor_lat^0,w,c
  7098  0040B0  5C24               	subwf	?_convert_to_int^0,w,c
  7099  0040B2  0101               	movlb	1	; () banked
  7100  0040B4  6F08               	movwf	(_poligono_ext+8)& (0+255),b
  7101  0040B6  5037               	movf	(diferenca@valor_lat+1)^0,w,c
  7102  0040B8  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7103  0040BA  6F09               	movwf	(_poligono_ext+9)& (0+255),b
  7104  0040BC  5038               	movf	(diferenca@valor_lat+2)^0,w,c
  7105  0040BE  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7106  0040C0  6F0A               	movwf	(_poligono_ext+10)& (0+255),b
  7107  0040C2  5039               	movf	(diferenca@valor_lat+3)^0,w,c
  7108  0040C4  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7109  0040C6  6F0B               	movwf	(_poligono_ext+11)& (0+255),b
  7110                           
  7111                           ;fence.c: 157: break;
  7112  0040C8  0012               	return	
  7113  0040CA                     l12062:
  7114                           
  7115                           ;fence.c: 160: valor_long = convert_to_int_point_long();
  7116  0040CA  ECDF  F027         	call	_convert_to_int_point_long	;wreg free
  7117  0040CE  C024  F03A         	movff	?_convert_to_int_point_long,diferenca@valor_long
  7118  0040D2  C025  F03B         	movff	?_convert_to_int_point_long+1,diferenca@valor_long+1
  7119  0040D6  C026  F03C         	movff	?_convert_to_int_point_long+2,diferenca@valor_long+2
  7120  0040DA  C027  F03D         	movff	?_convert_to_int_point_long+3,diferenca@valor_long+3
  7121                           
  7122                           ;fence.c: 161: poligono_ext[0].diff_long = convert_to_int(fence_diff_long[0]) - valor_lo
      +                          ng;
  7123  0040DE  0E29               	movlw	low _fence_diff_long
  7124  0040E0  6E24               	movwf	convert_to_int@p_buff^0,c
  7125  0040E2  0E61               	movlw	high _fence_diff_long
  7126  0040E4  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7127  0040E6  ECB7  F02C         	call	_convert_to_int	;wreg free
  7128  0040EA  503A               	movf	diferenca@valor_long^0,w,c
  7129  0040EC  5C24               	subwf	?_convert_to_int^0,w,c
  7130  0040EE  0101               	movlb	1	; () banked
  7131  0040F0  6F04               	movwf	(_poligono_ext+4)& (0+255),b
  7132  0040F2  503B               	movf	(diferenca@valor_long+1)^0,w,c
  7133  0040F4  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7134  0040F6  6F05               	movwf	(_poligono_ext+5)& (0+255),b
  7135  0040F8  503C               	movf	(diferenca@valor_long+2)^0,w,c
  7136  0040FA  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7137  0040FC  6F06               	movwf	(_poligono_ext+6)& (0+255),b
  7138  0040FE  503D               	movf	(diferenca@valor_long+3)^0,w,c
  7139  004100  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7140  004102  6F07               	movwf	(_poligono_ext+7)& (0+255),b
  7141                           
  7142                           ; BSR set to: 1
  7143                           ;fence.c: 162: poligono_ext[1].diff_long = convert_to_int(fence_diff_long[2]) - valor_lo
      +                          ng;
  7144  004104  0E3F               	movlw	low (_fence_diff_long+22)
  7145  004106  6E24               	movwf	convert_to_int@p_buff^0,c
  7146  004108  0E61               	movlw	high (_fence_diff_long+22)
  7147  00410A  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7148  00410C  ECB7  F02C         	call	_convert_to_int	;wreg free
  7149  004110  503A               	movf	diferenca@valor_long^0,w,c
  7150  004112  5C24               	subwf	?_convert_to_int^0,w,c
  7151  004114  0101               	movlb	1	; () banked
  7152  004116  6F0C               	movwf	(_poligono_ext+12)& (0+255),b
  7153  004118  503B               	movf	(diferenca@valor_long+1)^0,w,c
  7154  00411A  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7155  00411C  6F0D               	movwf	(_poligono_ext+13)& (0+255),b
  7156  00411E  503C               	movf	(diferenca@valor_long+2)^0,w,c
  7157  004120  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7158  004122  6F0E               	movwf	(_poligono_ext+14)& (0+255),b
  7159  004124  503D               	movf	(diferenca@valor_long+3)^0,w,c
  7160  004126  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7161  004128  6F0F               	movwf	(_poligono_ext+15)& (0+255),b
  7162                           
  7163                           ;fence.c: 165: break;
  7164  00412A  0012               	return	
  7165  00412C                     l12070:
  7166  00412C  5035               	movf	diferenca@index^0,w,c
  7167                           
  7168                           ; Switch size 1, requested type "simple"
  7169                           ; Number of cases is 1, Range of values is 1 to 1
  7170                           ; switch strategies available:
  7171                           ; Name         Instructions Cycles
  7172                           ; simple_byte            4     3 (average)
  7173                           ;	Chosen strategy is simple_byte
  7174  00412E  0A01               	xorlw	1	; case 1
  7175  004130  B4D8               	btfsc	status,2,c
  7176  004132  D79A               	goto	l12056
  7177  004134  D7CA               	goto	l12062
  7178  004136                     __end_of_diferenca:
  7179                           	callstack 0
  7180                           
  7181 ;; *************** function _convert_to_int_point_long *****************
  7182 ;; Defined at:
  7183 ;;		line 455 in file "bibliotecas/fence.c"
  7184 ;; Parameters:    Size  Location     Type
  7185 ;;		None
  7186 ;; Auto vars:     Size  Location     Type
  7187 ;;  convert_str_   10   39[COMRAM] unsigned char [10]
  7188 ;;  p               3    0        PTR unsigned char 
  7189 ;;  i               1   50[COMRAM] unsigned char 
  7190 ;;  j               1   49[COMRAM] unsigned char 
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  4   35[COMRAM] unsigned long 
  7193 ;; Registers used:
  7194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7200 ;;      Params:         4       0       0       0       0       0       0       0       0
  7201 ;;      Locals:        12       0       0       0       0       0       0       0       0
  7202 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7203 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7204 ;;Total ram usage:       16 bytes
  7205 ;; Hardware stack levels used:    1
  7206 ;; Hardware stack levels required when called:    4
  7207 ;; This function calls:
  7208 ;;		_atol
  7209 ;; This function is called by:
  7210 ;;		_diferenca
  7211 ;; This function uses a non-reentrant model
  7212 ;;
  7213                           
  7214                           	psect	text41
  7215  004FBE                     __ptext41:
  7216                           	callstack 0
  7217  004FBE                     _convert_to_int_point_long:
  7218                           	callstack 20
  7219                           
  7220                           ;fence.c: 457: unsigned char *p;;;fence.c: 458: unsigned char i, j;;fence.c: 459: unsign
      +                          ed char convert_str_long[10];;fence.c: 462: j = 0;
  7221                           
  7222                           ; BSR set to: 1
  7223                           ;incstack = 0
  7224  004FBE  0E00               	movlw	0
  7225  004FC0  6E32               	movwf	convert_to_int_point_long@j^0,c
  7226                           
  7227                           ;fence.c: 463: for(i=0; i<10;i++)
  7228  004FC2  0E00               	movlw	0
  7229  004FC4  6E33               	movwf	convert_to_int_point_long@i^0,c
  7230  004FC6                     l11576:
  7231                           
  7232                           ;fence.c: 464: {;fence.c: 465: if(dado[i] != '\0')
  7233  004FC6  0E10               	movlw	low _dado
  7234  004FC8  2433               	addwf	convert_to_int_point_long@i^0,w,c
  7235  004FCA  6ED9               	movwf	fsr2l,c
  7236  004FCC  6ADA               	clrf	fsr2h,c
  7237  004FCE  0E01               	movlw	high _dado
  7238  004FD0  22DA               	addwfc	fsr2h,f,c
  7239  004FD2  50DF               	movf	indf2,w,c
  7240  004FD4  B4D8               	btfsc	status,2,c
  7241  004FD6  D00D               	goto	l11582
  7242                           
  7243                           ;fence.c: 466: {;fence.c: 468: convert_str_long[j] = dado[i];
  7244  004FD8  0E10               	movlw	low _dado
  7245  004FDA  2433               	addwf	convert_to_int_point_long@i^0,w,c
  7246  004FDC  6ED9               	movwf	fsr2l,c
  7247  004FDE  6ADA               	clrf	fsr2h,c
  7248  004FE0  0E01               	movlw	high _dado
  7249  004FE2  22DA               	addwfc	fsr2h,f,c
  7250  004FE4  5032               	movf	convert_to_int_point_long@j^0,w,c
  7251  004FE6  0F28               	addlw	low convert_to_int_point_long@convert_str_long
  7252  004FE8  6EE1               	movwf	fsr1l,c
  7253  004FEA  6AE2               	clrf	fsr1h,c
  7254  004FEC  CFDF FFE7          	movff	indf2,indf1
  7255                           
  7256                           ;fence.c: 469: j++;
  7257  004FF0  2A32               	incf	convert_to_int_point_long@j^0,f,c
  7258  004FF2                     l11582:
  7259  004FF2  2A33               	incf	convert_to_int_point_long@i^0,f,c
  7260  004FF4  0E09               	movlw	9
  7261  004FF6  6433               	cpfsgt	convert_to_int_point_long@i^0,c
  7262  004FF8  D7E6               	goto	l11576
  7263                           
  7264                           ;fence.c: 470: };fence.c: 471: };fence.c: 474: return (atol(convert_str_long));
  7265  004FFA  0E28               	movlw	low convert_to_int_point_long@convert_str_long
  7266  004FFC  6E16               	movwf	atol@s^0,c
  7267  004FFE  6A17               	clrf	(atol@s+1)^0,c
  7268  005000  EC39  F01C         	call	_atol	;wreg free
  7269  005004  C016  F024         	movff	?_atol,?_convert_to_int_point_long
  7270  005008  C017  F025         	movff	?_atol+1,?_convert_to_int_point_long+1
  7271  00500C  C018  F026         	movff	?_atol+2,?_convert_to_int_point_long+2
  7272  005010  C019  F027         	movff	?_atol+3,?_convert_to_int_point_long+3
  7273  005014  0012               	return		;funcret
  7274  005016                     __end_of_convert_to_int_point_long:
  7275                           	callstack 0
  7276                           
  7277 ;; *************** function _convert_to_int_point_lat *****************
  7278 ;; Defined at:
  7279 ;;		line 428 in file "bibliotecas/fence.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;		None
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;  convert_str_    9   39[COMRAM] unsigned char [9]
  7284 ;;  temp_str_lat    2    0        PTR PTR unsigned char 
  7285 ;;		 -> NULL(0), 
  7286 ;;  i               1   51[COMRAM] unsigned char 
  7287 ;;  j               1   50[COMRAM] unsigned char 
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  4   35[COMRAM] long 
  7290 ;; Registers used:
  7291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7297 ;;      Params:         4       0       0       0       0       0       0       0       0
  7298 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7300 ;;      Totals:        17       0       0       0       0       0       0       0       0
  7301 ;;Total ram usage:       17 bytes
  7302 ;; Hardware stack levels used:    1
  7303 ;; Hardware stack levels required when called:    4
  7304 ;; This function calls:
  7305 ;;		_atol
  7306 ;; This function is called by:
  7307 ;;		_diferenca
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text42
  7312  005016                     __ptext42:
  7313                           	callstack 0
  7314  005016                     _convert_to_int_point_lat:
  7315                           	callstack 20
  7316                           
  7317                           ;fence.c: 431: unsigned char convert_str_lat[9];;fence.c: 433: unsigned char i, j;;fence
      +                          .c: 435: j= 0;
  7318                           
  7319                           ;incstack = 0
  7320  005016  0E00               	movlw	0
  7321  005018  6E33               	movwf	convert_to_int_point_lat@j^0,c
  7322                           
  7323                           ;fence.c: 436: for(i=0; i<10;i++)
  7324  00501A  0E00               	movlw	0
  7325  00501C  6E34               	movwf	convert_to_int_point_lat@i^0,c
  7326  00501E                     l11550:
  7327                           
  7328                           ;fence.c: 437: {;fence.c: 438: if(dado[i] != '\0')
  7329  00501E  0E10               	movlw	low _dado
  7330  005020  2434               	addwf	convert_to_int_point_lat@i^0,w,c
  7331  005022  6ED9               	movwf	fsr2l,c
  7332  005024  6ADA               	clrf	fsr2h,c
  7333  005026  0E01               	movlw	high _dado
  7334  005028  22DA               	addwfc	fsr2h,f,c
  7335  00502A  50DF               	movf	indf2,w,c
  7336  00502C  B4D8               	btfsc	status,2,c
  7337  00502E  D00D               	goto	l11556
  7338                           
  7339                           ;fence.c: 439: {;fence.c: 441: convert_str_lat[j] = dado[i];
  7340  005030  0E10               	movlw	low _dado
  7341  005032  2434               	addwf	convert_to_int_point_lat@i^0,w,c
  7342  005034  6ED9               	movwf	fsr2l,c
  7343  005036  6ADA               	clrf	fsr2h,c
  7344  005038  0E01               	movlw	high _dado
  7345  00503A  22DA               	addwfc	fsr2h,f,c
  7346  00503C  5033               	movf	convert_to_int_point_lat@j^0,w,c
  7347  00503E  0F28               	addlw	low convert_to_int_point_lat@convert_str_lat
  7348  005040  6EE1               	movwf	fsr1l,c
  7349  005042  6AE2               	clrf	fsr1h,c
  7350  005044  CFDF FFE7          	movff	indf2,indf1
  7351                           
  7352                           ;fence.c: 442: j++;
  7353  005048  2A33               	incf	convert_to_int_point_lat@j^0,f,c
  7354  00504A                     l11556:
  7355  00504A  2A34               	incf	convert_to_int_point_lat@i^0,f,c
  7356  00504C  0E09               	movlw	9
  7357  00504E  6434               	cpfsgt	convert_to_int_point_lat@i^0,c
  7358  005050  D7E6               	goto	l11550
  7359                           
  7360                           ;fence.c: 443: };fence.c: 444: };fence.c: 446: return (atol(convert_str_lat));
  7361  005052  0E28               	movlw	low convert_to_int_point_lat@convert_str_lat
  7362  005054  6E16               	movwf	atol@s^0,c
  7363  005056  6A17               	clrf	(atol@s+1)^0,c
  7364  005058  EC39  F01C         	call	_atol	;wreg free
  7365  00505C  C016  F024         	movff	?_atol,?_convert_to_int_point_lat
  7366  005060  C017  F025         	movff	?_atol+1,?_convert_to_int_point_lat+1
  7367  005064  C018  F026         	movff	?_atol+2,?_convert_to_int_point_lat+2
  7368  005068  C019  F027         	movff	?_atol+3,?_convert_to_int_point_lat+3
  7369  00506C  0012               	return		;funcret
  7370  00506E                     __end_of_convert_to_int_point_lat:
  7371                           	callstack 0
  7372                           
  7373 ;; *************** function _convert_to_int *****************
  7374 ;; Defined at:
  7375 ;;		line 420 in file "bibliotecas/fence.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;  p_buff          2   35[COMRAM] PTR const unsigned char 
  7378 ;;		 -> fence_diff_long(44), fence_diff_lat(40), 
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;		None
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  4   35[COMRAM] long 
  7383 ;; Registers used:
  7384 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7390 ;;      Params:         4       0       0       0       0       0       0       0       0
  7391 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7392 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7393 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7394 ;;Total ram usage:        4 bytes
  7395 ;; Hardware stack levels used:    1
  7396 ;; Hardware stack levels required when called:    4
  7397 ;; This function calls:
  7398 ;;		_atol
  7399 ;; This function is called by:
  7400 ;;		_diferenca
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404                           	psect	text43
  7405  00596E                     __ptext43:
  7406                           	callstack 0
  7407  00596E                     _convert_to_int:
  7408                           	callstack 20
  7409                           
  7410                           ;fence.c: 423: p_buff++;
  7411                           
  7412                           ;incstack = 0
  7413  00596E  4A24               	infsnz	convert_to_int@p_buff^0,f,c
  7414  005970  2A25               	incf	(convert_to_int@p_buff+1)^0,f,c
  7415                           
  7416                           ;fence.c: 424: return atol(p_buff);
  7417  005972  C024  F016         	movff	convert_to_int@p_buff,atol@s
  7418  005976  C025  F017         	movff	convert_to_int@p_buff+1,atol@s+1
  7419  00597A  EC39  F01C         	call	_atol	;wreg free
  7420  00597E  C016  F024         	movff	?_atol,?_convert_to_int
  7421  005982  C017  F025         	movff	?_atol+1,?_convert_to_int+1
  7422  005986  C018  F026         	movff	?_atol+2,?_convert_to_int+2
  7423  00598A  C019  F027         	movff	?_atol+3,?_convert_to_int+3
  7424  00598E  0012               	return		;funcret
  7425  005990                     __end_of_convert_to_int:
  7426                           	callstack 0
  7427                           
  7428 ;; *************** function _atol *****************
  7429 ;; Defined at:
  7430 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\atol.c"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;  s               2   21[COMRAM] PTR const unsigned char 
  7433 ;;		 -> convert_to_int_point_long@convert_str_long(10), convert_to_int_point_lat@convert_str_lat(9), fence_diff_long(44)
      +, fence_diff_lat(40), 
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;  a               4   30[COMRAM] long 
  7436 ;;  c               1   34[COMRAM] unsigned char 
  7437 ;;  sign            1   29[COMRAM] unsigned char 
  7438 ;; Return value:  Size  Location     Type
  7439 ;;                  4   21[COMRAM] long 
  7440 ;; Registers used:
  7441 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 0/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7447 ;;      Params:         4       0       0       0       0       0       0       0       0
  7448 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7449 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7450 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7451 ;;Total ram usage:       14 bytes
  7452 ;; Hardware stack levels used:    1
  7453 ;; Hardware stack levels required when called:    3
  7454 ;; This function calls:
  7455 ;;		___lmul
  7456 ;;		_isdigit
  7457 ;; This function is called by:
  7458 ;;		_convert_to_int
  7459 ;;		_convert_to_int_point_lat
  7460 ;;		_convert_to_int_point_long
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           
  7464                           	psect	text44
  7465  003872                     __ptext44:
  7466                           	callstack 0
  7467  003872                     _atol:
  7468                           	callstack 20
  7469                           
  7470                           ;incstack = 0
  7471  003872  C016  FFF6         	movff	atol@s,tblptrl
  7472  003876  C017  FFF7         	movff	atol@s+1,tblptrh
  7473  00387A  6AF8               	clrf	tblptru,c
  7474  00387C  0E07               	movlw	(high __ramtop+-1)
  7475  00387E  64F7               	cpfsgt	tblptrh,c
  7476  003880  D003               	bra	u12777
  7477  003882  0008               	tblrd		*
  7478  003884  50F5               	movf	tablat,w,c
  7479  003886  D005               	bra	u12770
  7480  003888                     u12777:
  7481  003888  CFF6 FFE1          	movff	tblptrl,fsr1l
  7482  00388C  CFF7 FFE2          	movff	tblptrh,fsr1h
  7483  003890  50E7               	movf	indf1,w,c
  7484  003892                     u12770:
  7485  003892  6E23               	movwf	atol@c^0,c
  7486  003894  4A16               	infsnz	atol@s^0,f,c
  7487  003896  2A17               	incf	(atol@s+1)^0,f,c
  7488  003898  0E20               	movlw	32
  7489  00389A  1823               	xorwf	atol@c^0,w,c
  7490  00389C  B4D8               	btfsc	status,2,c
  7491  00389E  D7E9               	goto	_atol
  7492  0038A0  0E09               	movlw	9
  7493  0038A2  1823               	xorwf	atol@c^0,w,c
  7494  0038A4  B4D8               	btfsc	status,2,c
  7495  0038A6  D7E5               	goto	_atol
  7496  0038A8  0E00               	movlw	0
  7497  0038AA  6E1F               	movwf	atol@a^0,c
  7498  0038AC  0E00               	movlw	0
  7499  0038AE  6E20               	movwf	(atol@a+1)^0,c
  7500  0038B0  0E00               	movlw	0
  7501  0038B2  6E21               	movwf	(atol@a+2)^0,c
  7502  0038B4  0E00               	movlw	0
  7503  0038B6  6E22               	movwf	(atol@a+3)^0,c
  7504  0038B8  0E00               	movlw	0
  7505  0038BA  6E1E               	movwf	atol@sign^0,c
  7506  0038BC  0E2D               	movlw	45
  7507  0038BE  1823               	xorwf	atol@c^0,w,c
  7508  0038C0  A4D8               	btfss	status,2,c
  7509  0038C2  D015               	goto	l11280
  7510  0038C4  2A1E               	incf	atol@sign^0,f,c
  7511  0038C6                     l11276:
  7512  0038C6  C016  FFF6         	movff	atol@s,tblptrl
  7513  0038CA  C017  FFF7         	movff	atol@s+1,tblptrh
  7514  0038CE  6AF8               	clrf	tblptru,c
  7515  0038D0  0E07               	movlw	(high __ramtop+-1)
  7516  0038D2  64F7               	cpfsgt	tblptrh,c
  7517  0038D4  D003               	bra	u12817
  7518  0038D6  0008               	tblrd		*
  7519  0038D8  50F5               	movf	tablat,w,c
  7520  0038DA  D005               	bra	u12810
  7521  0038DC                     u12817:
  7522  0038DC  CFF6 FFE1          	movff	tblptrl,fsr1l
  7523  0038E0  CFF7 FFE2          	movff	tblptrh,fsr1h
  7524  0038E4  50E7               	movf	indf1,w,c
  7525  0038E6                     u12810:
  7526  0038E6  6E23               	movwf	atol@c^0,c
  7527  0038E8  4A16               	infsnz	atol@s^0,f,c
  7528  0038EA  2A17               	incf	(atol@s+1)^0,f,c
  7529  0038EC  D028               	goto	l11292
  7530  0038EE                     l11280:
  7531  0038EE  0E2B               	movlw	43
  7532  0038F0  1823               	xorwf	atol@c^0,w,c
  7533  0038F2  B4D8               	btfsc	status,2,c
  7534  0038F4  D7E8               	goto	l11276
  7535  0038F6  D023               	goto	l11292
  7536  0038F8                     l11286:
  7537  0038F8  C01F  F00A         	movff	atol@a,___lmul@multiplier
  7538  0038FC  C020  F00B         	movff	atol@a+1,___lmul@multiplier+1
  7539  003900  C021  F00C         	movff	atol@a+2,___lmul@multiplier+2
  7540  003904  C022  F00D         	movff	atol@a+3,___lmul@multiplier+3
  7541  003908  0E0A               	movlw	10
  7542  00390A  6E0E               	movwf	___lmul@multiplicand^0,c
  7543  00390C  0E00               	movlw	0
  7544  00390E  6E0F               	movwf	(___lmul@multiplicand+1)^0,c
  7545  003910  0E00               	movlw	0
  7546  003912  6E10               	movwf	(___lmul@multiplicand+2)^0,c
  7547  003914  0E00               	movlw	0
  7548  003916  6E11               	movwf	(___lmul@multiplicand+3)^0,c
  7549  003918  EC63  F028         	call	___lmul	;wreg free
  7550  00391C  C023  F01A         	movff	atol@c,??_atol
  7551  003920  0ED0               	movlw	208
  7552  003922  261A               	addwf	??_atol^0,f,c
  7553  003924  501A               	movf	??_atol^0,w,c
  7554  003926  240A               	addwf	?___lmul^0,w,c
  7555  003928  6E1F               	movwf	atol@a^0,c
  7556  00392A  0E00               	movlw	0
  7557  00392C  200B               	addwfc	(?___lmul+1)^0,w,c
  7558  00392E  6E20               	movwf	(atol@a+1)^0,c
  7559  003930  0E00               	movlw	0
  7560  003932  200C               	addwfc	(?___lmul+2)^0,w,c
  7561  003934  6E21               	movwf	(atol@a+2)^0,c
  7562  003936  0E00               	movlw	0
  7563  003938  200D               	addwfc	(?___lmul+3)^0,w,c
  7564  00393A  6E22               	movwf	(atol@a+3)^0,c
  7565  00393C  D7C4               	goto	l11276
  7566  00393E                     l11292:
  7567  00393E  5023               	movf	atol@c^0,w,c
  7568  003940  EC6D  F02D         	call	_isdigit
  7569  003944  B0D8               	btfsc	status,0,c
  7570  003946  D7D8               	goto	l11286
  7571  003948  501E               	movf	atol@sign^0,w,c
  7572  00394A  B4D8               	btfsc	status,2,c
  7573  00394C  D01A               	goto	l2436
  7574  00394E  C01F  F01A         	movff	atol@a,??_atol
  7575  003952  C020  F01B         	movff	atol@a+1,??_atol+1
  7576  003956  C021  F01C         	movff	atol@a+2,??_atol+2
  7577  00395A  C022  F01D         	movff	atol@a+3,??_atol+3
  7578  00395E  1E1A               	comf	??_atol^0,f,c
  7579  003960  1E1B               	comf	(??_atol+1)^0,f,c
  7580  003962  1E1C               	comf	(??_atol+2)^0,f,c
  7581  003964  1E1D               	comf	(??_atol+3)^0,f,c
  7582  003966  2A1A               	incf	??_atol^0,f,c
  7583  003968  0E00               	movlw	0
  7584  00396A  221B               	addwfc	(??_atol+1)^0,f,c
  7585  00396C  221C               	addwfc	(??_atol+2)^0,f,c
  7586  00396E  221D               	addwfc	(??_atol+3)^0,f,c
  7587  003970  C01A  F016         	movff	??_atol,?_atol
  7588  003974  C01B  F017         	movff	??_atol+1,?_atol+1
  7589  003978  C01C  F018         	movff	??_atol+2,?_atol+2
  7590  00397C  C01D  F019         	movff	??_atol+3,?_atol+3
  7591  003980  0012               	return	
  7592  003982                     l2436:
  7593  003982  C01F  F016         	movff	atol@a,?_atol
  7594  003986  C020  F017         	movff	atol@a+1,?_atol+1
  7595  00398A  C021  F018         	movff	atol@a+2,?_atol+2
  7596  00398E  C022  F019         	movff	atol@a+3,?_atol+3
  7597  003992  0012               	return		;funcret
  7598  003994                     __end_of_atol:
  7599                           	callstack 0
  7600                           
  7601 ;; *************** function _itoa *****************
  7602 ;; Defined at:
  7603 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;  buf             2   25[COMRAM] PTR unsigned char 
  7606 ;;		 -> disparo_gravacao@velocidade(12), escreve_inteiro_uart@valor_final(7), 
  7607 ;;  val             2   27[COMRAM] int 
  7608 ;;  base            2   29[COMRAM] int 
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;  cp              2    0        PTR unsigned char 
  7611 ;;		 -> disparo_gravacao@velocidade(12), escreve_inteiro_uart@valor_final(7), 
  7612 ;; Return value:  Size  Location     Type
  7613 ;;                  2   25[COMRAM] PTR unsigned char 
  7614 ;; Registers used:
  7615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7616 ;; Tracked objects:
  7617 ;;		On entry : 3F/2
  7618 ;;		On exit  : 0/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7621 ;;      Params:         6       0       0       0       0       0       0       0       0
  7622 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7623 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7624 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7625 ;;Total ram usage:        8 bytes
  7626 ;; Hardware stack levels used:    1
  7627 ;; Hardware stack levels required when called:    4
  7628 ;; This function calls:
  7629 ;;		_utoa
  7630 ;; This function is called by:
  7631 ;;		_disparo_gravacao
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           	psect	text45
  7636  0055D8                     __ptext45:
  7637                           	callstack 0
  7638  0055D8                     _itoa:
  7639                           	callstack 24
  7640                           
  7641                           ; BSR set to: 2
  7642                           
  7643                           ;incstack = 0
  7644  0055D8  AE1D               	btfss	(itoa@val+1)^0,7,c
  7645  0055DA  D00C               	goto	l13714
  7646                           
  7647                           ; BSR set to: 2
  7648  0055DC  C01A  FFD9         	movff	itoa@buf,fsr2l
  7649  0055E0  C01B  FFDA         	movff	itoa@buf+1,fsr2h
  7650  0055E4  0E2D               	movlw	45
  7651  0055E6  6EDF               	movwf	indf2,c
  7652                           
  7653                           ; BSR set to: 2
  7654  0055E8  4A1A               	infsnz	itoa@buf^0,f,c
  7655  0055EA  2A1B               	incf	(itoa@buf+1)^0,f,c
  7656                           
  7657                           ; BSR set to: 2
  7658  0055EC  6C1C               	negf	itoa@val^0,c
  7659  0055EE  1E1D               	comf	(itoa@val+1)^0,f,c
  7660  0055F0  B0D8               	btfsc	status,0,c
  7661  0055F2  2A1D               	incf	(itoa@val+1)^0,f,c
  7662  0055F4                     l13714:
  7663                           
  7664                           ; BSR set to: 2
  7665  0055F4  C01A  F011         	movff	itoa@buf,utoa@buf
  7666  0055F8  C01B  F012         	movff	itoa@buf+1,utoa@buf+1
  7667  0055FC  C01C  F013         	movff	itoa@val,utoa@val
  7668  005600  C01D  F014         	movff	itoa@val+1,utoa@val+1
  7669  005604  C01E  F015         	movff	itoa@base,utoa@base
  7670  005608  C01F  F016         	movff	itoa@base+1,utoa@base+1
  7671  00560C  EC5C  F022         	call	_utoa	;wreg free
  7672  005610  0012               	return		;funcret
  7673  005612                     __end_of_itoa:
  7674                           	callstack 0
  7675                           
  7676 ;; *************** function _utoa *****************
  7677 ;; Defined at:
  7678 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;  buf             2   16[COMRAM] PTR unsigned char 
  7681 ;;		 -> disparo_gravacao@velocidade(12), escreve_inteiro_uart@valor_final(7), 
  7682 ;;  val             2   18[COMRAM] unsigned int 
  7683 ;;  base            2   20[COMRAM] int 
  7684 ;; Auto vars:     Size  Location     Type
  7685 ;;  v               2   22[COMRAM] unsigned int 
  7686 ;;  c               1   24[COMRAM] unsigned char 
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  2   16[COMRAM] PTR unsigned char 
  7689 ;; Registers used:
  7690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7691 ;; Tracked objects:
  7692 ;;		On entry : 3F/2
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7696 ;;      Params:         6       0       0       0       0       0       0       0       0
  7697 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7698 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7699 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7700 ;;Total ram usage:        9 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; Hardware stack levels required when called:    3
  7703 ;; This function calls:
  7704 ;;		___lwdiv
  7705 ;;		___lwmod
  7706 ;; This function is called by:
  7707 ;;		_itoa
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           	psect	text46
  7712  0044B8                     __ptext46:
  7713                           	callstack 0
  7714  0044B8                     _utoa:
  7715                           	callstack 24
  7716                           
  7717                           ; BSR set to: 2
  7718                           
  7719                           ;incstack = 0
  7720  0044B8  C013  F017         	movff	utoa@val,utoa@v
  7721  0044BC  C014  F018         	movff	utoa@val+1,utoa@v+1
  7722  0044C0                     l13678:
  7723  0044C0  C017  F00A         	movff	utoa@v,___lwdiv@dividend
  7724  0044C4  C018  F00B         	movff	utoa@v+1,___lwdiv@dividend+1
  7725  0044C8  C015  F00C         	movff	utoa@base,___lwdiv@divisor
  7726  0044CC  C016  F00D         	movff	utoa@base+1,___lwdiv@divisor+1
  7727  0044D0  EC8E  F028         	call	___lwdiv	;wreg free
  7728  0044D4  C00A  F017         	movff	?___lwdiv,utoa@v
  7729  0044D8  C00B  F018         	movff	?___lwdiv+1,utoa@v+1
  7730  0044DC  4A11               	infsnz	utoa@buf^0,f,c
  7731  0044DE  2A12               	incf	(utoa@buf+1)^0,f,c
  7732  0044E0  5017               	movf	utoa@v^0,w,c
  7733  0044E2  1018               	iorwf	(utoa@v+1)^0,w,c
  7734  0044E4  A4D8               	btfss	status,2,c
  7735  0044E6  D7EC               	goto	l13678
  7736  0044E8  C011  FFD9         	movff	utoa@buf,fsr2l
  7737  0044EC  C012  FFDA         	movff	utoa@buf+1,fsr2h
  7738  0044F0  0E00               	movlw	0
  7739  0044F2  6EDF               	movwf	indf2,c
  7740  0044F4  0611               	decf	utoa@buf^0,f,c
  7741  0044F6  A0D8               	btfss	status,0,c
  7742  0044F8  0612               	decf	(utoa@buf+1)^0,f,c
  7743  0044FA                     l13688:
  7744  0044FA  C013  F00A         	movff	utoa@val,___lwmod@dividend
  7745  0044FE  C014  F00B         	movff	utoa@val+1,___lwmod@dividend+1
  7746  004502  C015  F00C         	movff	utoa@base,___lwmod@divisor
  7747  004506  C016  F00D         	movff	utoa@base+1,___lwmod@divisor+1
  7748  00450A  EC4D  F02A         	call	___lwmod	;wreg free
  7749  00450E  500A               	movf	?___lwmod^0,w,c
  7750  004510  6E19               	movwf	utoa@c^0,c
  7751  004512  C013  F00A         	movff	utoa@val,___lwdiv@dividend
  7752  004516  C014  F00B         	movff	utoa@val+1,___lwdiv@dividend+1
  7753  00451A  C015  F00C         	movff	utoa@base,___lwdiv@divisor
  7754  00451E  C016  F00D         	movff	utoa@base+1,___lwdiv@divisor+1
  7755  004522  EC8E  F028         	call	___lwdiv	;wreg free
  7756  004526  C00A  F013         	movff	?___lwdiv,utoa@val
  7757  00452A  C00B  F014         	movff	?___lwdiv+1,utoa@val+1
  7758  00452E  0E09               	movlw	9
  7759  004530  6419               	cpfsgt	utoa@c^0,c
  7760  004532  D002               	goto	l2454
  7761  004534  0E07               	movlw	7
  7762  004536  2619               	addwf	utoa@c^0,f,c
  7763  004538                     l2454:
  7764  004538  0E30               	movlw	48
  7765  00453A  2619               	addwf	utoa@c^0,f,c
  7766  00453C  C011  FFD9         	movff	utoa@buf,fsr2l
  7767  004540  C012  FFDA         	movff	utoa@buf+1,fsr2h
  7768  004544  C019  FFDF         	movff	utoa@c,indf2
  7769  004548  0611               	decf	utoa@buf^0,f,c
  7770  00454A  A0D8               	btfss	status,0,c
  7771  00454C  0612               	decf	(utoa@buf+1)^0,f,c
  7772  00454E  5013               	movf	utoa@val^0,w,c
  7773  004550  1014               	iorwf	(utoa@val+1)^0,w,c
  7774  004552  A4D8               	btfss	status,2,c
  7775  004554  D7D2               	goto	l13688
  7776                           
  7777                           ;	Return value of _utoa is never used
  7778  004556  4A11               	infsnz	utoa@buf^0,f,c
  7779  004558  2A12               	incf	(utoa@buf+1)^0,f,c
  7780  00455A  0012               	return		;funcret
  7781  00455C                     __end_of_utoa:
  7782                           	callstack 0
  7783                           
  7784 ;; *************** function ___lwmod *****************
  7785 ;; Defined at:
  7786 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;  dividend        2    9[COMRAM] unsigned int 
  7789 ;;  divisor         2   11[COMRAM] unsigned int 
  7790 ;; Auto vars:     Size  Location     Type
  7791 ;;  counter         1   13[COMRAM] unsigned char 
  7792 ;; Return value:  Size  Location     Type
  7793 ;;                  2    9[COMRAM] unsigned int 
  7794 ;; Registers used:
  7795 ;;		wreg, status,2, status,0
  7796 ;; Tracked objects:
  7797 ;;		On entry : 0/2
  7798 ;;		On exit  : 0/0
  7799 ;;		Unchanged: 0/0
  7800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7801 ;;      Params:         4       0       0       0       0       0       0       0       0
  7802 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7803 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7804 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7805 ;;Total ram usage:        5 bytes
  7806 ;; Hardware stack levels used:    1
  7807 ;; Hardware stack levels required when called:    2
  7808 ;; This function calls:
  7809 ;;		Nothing
  7810 ;; This function is called by:
  7811 ;;		_utoa
  7812 ;; This function uses a non-reentrant model
  7813 ;;
  7814                           
  7815                           	psect	text47
  7816  00549A                     __ptext47:
  7817                           	callstack 0
  7818  00549A                     ___lwmod:
  7819                           	callstack 24
  7820                           
  7821                           ;incstack = 0
  7822  00549A  500C               	movf	___lwmod@divisor^0,w,c
  7823  00549C  100D               	iorwf	(___lwmod@divisor+1)^0,w,c
  7824  00549E  B4D8               	btfsc	status,2,c
  7825  0054A0  D018               	goto	l2234
  7826  0054A2  0E01               	movlw	1
  7827  0054A4  6E0E               	movwf	___lwmod@counter^0,c
  7828  0054A6  D004               	goto	l12680
  7829  0054A8                     l12678:
  7830  0054A8  90D8               	bcf	status,0,c
  7831  0054AA  360C               	rlcf	___lwmod@divisor^0,f,c
  7832  0054AC  360D               	rlcf	(___lwmod@divisor+1)^0,f,c
  7833  0054AE  2A0E               	incf	___lwmod@counter^0,f,c
  7834  0054B0                     l12680:
  7835  0054B0  AE0D               	btfss	(___lwmod@divisor+1)^0,7,c
  7836  0054B2  D7FA               	goto	l12678
  7837  0054B4                     u15050:
  7838  0054B4  500C               	movf	___lwmod@divisor^0,w,c
  7839  0054B6  5C0A               	subwf	___lwmod@dividend^0,w,c
  7840  0054B8  500D               	movf	(___lwmod@divisor+1)^0,w,c
  7841  0054BA  580B               	subwfb	(___lwmod@dividend+1)^0,w,c
  7842  0054BC  A0D8               	btfss	status,0,c
  7843  0054BE  D004               	goto	l12686
  7844  0054C0  500C               	movf	___lwmod@divisor^0,w,c
  7845  0054C2  5E0A               	subwf	___lwmod@dividend^0,f,c
  7846  0054C4  500D               	movf	(___lwmod@divisor+1)^0,w,c
  7847  0054C6  5A0B               	subwfb	(___lwmod@dividend+1)^0,f,c
  7848  0054C8                     l12686:
  7849  0054C8  90D8               	bcf	status,0,c
  7850  0054CA  320D               	rrcf	(___lwmod@divisor+1)^0,f,c
  7851  0054CC  320C               	rrcf	___lwmod@divisor^0,f,c
  7852  0054CE  2E0E               	decfsz	___lwmod@counter^0,f,c
  7853  0054D0  D7F1               	goto	u15050
  7854  0054D2                     l2234:
  7855  0054D2  C00A  F00A         	movff	___lwmod@dividend,?___lwmod
  7856  0054D6  C00B  F00B         	movff	___lwmod@dividend+1,?___lwmod+1
  7857  0054DA  0012               	return		;funcret
  7858  0054DC                     __end_of___lwmod:
  7859                           	callstack 0
  7860                           
  7861 ;; *************** function ___lwdiv *****************
  7862 ;; Defined at:
  7863 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  7864 ;; Parameters:    Size  Location     Type
  7865 ;;  dividend        2    9[COMRAM] unsigned int 
  7866 ;;  divisor         2   11[COMRAM] unsigned int 
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;  quotient        2   14[COMRAM] unsigned int 
  7869 ;;  counter         1   13[COMRAM] unsigned char 
  7870 ;; Return value:  Size  Location     Type
  7871 ;;                  2    9[COMRAM] unsigned int 
  7872 ;; Registers used:
  7873 ;;		wreg, status,2, status,0
  7874 ;; Tracked objects:
  7875 ;;		On entry : 0/2
  7876 ;;		On exit  : 0/0
  7877 ;;		Unchanged: 0/0
  7878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7879 ;;      Params:         4       0       0       0       0       0       0       0       0
  7880 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7882 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7883 ;;Total ram usage:        7 bytes
  7884 ;; Hardware stack levels used:    1
  7885 ;; Hardware stack levels required when called:    2
  7886 ;; This function calls:
  7887 ;;		Nothing
  7888 ;; This function is called by:
  7889 ;;		_utoa
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893                           	psect	text48
  7894  00511C                     __ptext48:
  7895                           	callstack 0
  7896  00511C                     ___lwdiv:
  7897                           	callstack 24
  7898                           
  7899                           ;incstack = 0
  7900  00511C  0E00               	movlw	0
  7901  00511E  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  7902  005120  0E00               	movlw	0
  7903  005122  6E0F               	movwf	___lwdiv@quotient^0,c
  7904  005124  500C               	movf	___lwdiv@divisor^0,w,c
  7905  005126  100D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7906  005128  B4D8               	btfsc	status,2,c
  7907  00512A  D01C               	goto	l2224
  7908  00512C  0E01               	movlw	1
  7909  00512E  6E0E               	movwf	___lwdiv@counter^0,c
  7910  005130  D004               	goto	l12660
  7911  005132                     l12658:
  7912  005132  90D8               	bcf	status,0,c
  7913  005134  360C               	rlcf	___lwdiv@divisor^0,f,c
  7914  005136  360D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7915  005138  2A0E               	incf	___lwdiv@counter^0,f,c
  7916  00513A                     l12660:
  7917  00513A  AE0D               	btfss	(___lwdiv@divisor+1)^0,7,c
  7918  00513C  D7FA               	goto	l12658
  7919  00513E                     u15020:
  7920  00513E  90D8               	bcf	status,0,c
  7921  005140  360F               	rlcf	___lwdiv@quotient^0,f,c
  7922  005142  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7923  005144  500C               	movf	___lwdiv@divisor^0,w,c
  7924  005146  5C0A               	subwf	___lwdiv@dividend^0,w,c
  7925  005148  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  7926  00514A  580B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7927  00514C  A0D8               	btfss	status,0,c
  7928  00514E  D005               	goto	l12670
  7929  005150  500C               	movf	___lwdiv@divisor^0,w,c
  7930  005152  5E0A               	subwf	___lwdiv@dividend^0,f,c
  7931  005154  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  7932  005156  5A0B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7933  005158  800F               	bsf	___lwdiv@quotient^0,0,c
  7934  00515A                     l12670:
  7935  00515A  90D8               	bcf	status,0,c
  7936  00515C  320D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7937  00515E  320C               	rrcf	___lwdiv@divisor^0,f,c
  7938  005160  2E0E               	decfsz	___lwdiv@counter^0,f,c
  7939  005162  D7ED               	goto	u15020
  7940  005164                     l2224:
  7941  005164  C00F  F00A         	movff	___lwdiv@quotient,?___lwdiv
  7942  005168  C010  F00B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7943  00516C  0012               	return		;funcret
  7944  00516E                     __end_of___lwdiv:
  7945                           	callstack 0
  7946                           
  7947 ;; *************** function _grava_sd *****************
  7948 ;; Defined at:
  7949 ;;		line 538 in file "main.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;		None
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;		None
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      void 
  7956 ;; Registers used:
  7957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/1
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7963 ;;      Params:         0       0       0       0       0       0       0       0       0
  7964 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7965 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7966 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7967 ;;Total ram usage:        0 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:   15
  7970 ;; This function calls:
  7971 ;;		_desliga_SPI
  7972 ;;		_desliga_uart
  7973 ;;		_escrita_sdcard
  7974 ;;		_inicializa_SPI
  7975 ;;		_inicializa_uart
  7976 ;; This function is called by:
  7977 ;;		_disparo_gravacao
  7978 ;; This function uses a non-reentrant model
  7979 ;;
  7980                           
  7981                           	psect	text49
  7982  005B2E                     __ptext49:
  7983                           	callstack 0
  7984  005B2E                     _grava_sd:
  7985                           	callstack 13
  7986                           
  7987                           ;main.c: 540: PORTBbits.RB3 = 0;
  7988                           
  7989                           ;incstack = 0
  7990  005B2E  9681               	bcf	129,3,c	;volatile
  7991                           
  7992                           ;main.c: 541: desliga_uart();
  7993  005B30  ECB8  F02D         	call	_desliga_uart	;wreg free
  7994                           
  7995                           ;main.c: 542: inicializa_SPI();
  7996  005B34  EC3E  F02D         	call	_inicializa_SPI	;wreg free
  7997                           
  7998                           ;main.c: 543: escrita_sdcard();
  7999  005B38  ECFF  F01A         	call	_escrita_sdcard	;wreg free
  8000                           
  8001                           ;main.c: 544: desliga_SPI();
  8002  005B3C  ECDA  F02D         	call	_desliga_SPI	;wreg free
  8003                           
  8004                           ;main.c: 545: inicializa_uart();
  8005  005B40  ECC8  F02C         	call	_inicializa_uart	;wreg free
  8006                           
  8007                           ;main.c: 546: PORTBbits.RB3 = 1;
  8008  005B44  8681               	bsf	129,3,c	;volatile
  8009  005B46  0012               	return		;funcret
  8010  005B48                     __end_of_grava_sd:
  8011                           	callstack 0
  8012                           
  8013 ;; *************** function _inicializa_uart *****************
  8014 ;; Defined at:
  8015 ;;		line 206 in file "bibliotecas/uart.c"
  8016 ;; Parameters:    Size  Location     Type
  8017 ;;		None
  8018 ;; Auto vars:     Size  Location     Type
  8019 ;;		None
  8020 ;; Return value:  Size  Location     Type
  8021 ;;                  1    wreg      void 
  8022 ;; Registers used:
  8023 ;;		wreg, status,2, status,0, cstack
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/1
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8029 ;;      Params:         0       0       0       0       0       0       0       0       0
  8030 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8032 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8033 ;;Total ram usage:        0 bytes
  8034 ;; Hardware stack levels used:    1
  8035 ;; Hardware stack levels required when called:    4
  8036 ;; This function calls:
  8037 ;;		_configura_baudrate_uart
  8038 ;; This function is called by:
  8039 ;;		_main
  8040 ;;		_grava_sd
  8041 ;; This function uses a non-reentrant model
  8042 ;;
  8043                           
  8044                           	psect	text50
  8045  005990                     __ptext50:
  8046                           	callstack 0
  8047  005990                     _inicializa_uart:
  8048                           	callstack 26
  8049                           
  8050                           ;uart.c: 208: TRISCbits.RC6 = 0;
  8051                           
  8052                           ;incstack = 0
  8053  005990  9C94               	bcf	148,6,c	;volatile
  8054                           
  8055                           ;uart.c: 209: TRISCbits.RC7 = 0;
  8056  005992  9E94               	bcf	148,7,c	;volatile
  8057                           
  8058                           ;uart.c: 211: (void)configura_baudrate_uart(9600);
  8059  005994  0E80               	movlw	128
  8060  005996  6E18               	movwf	configura_baudrate_uart@baudrate^0,c
  8061  005998  0E25               	movlw	37
  8062  00599A  6E19               	movwf	(configura_baudrate_uart@baudrate+1)^0,c
  8063  00599C  0E00               	movlw	0
  8064  00599E  6E1A               	movwf	(configura_baudrate_uart@baudrate+2)^0,c
  8065  0059A0  0E00               	movlw	0
  8066  0059A2  6E1B               	movwf	(configura_baudrate_uart@baudrate+3)^0,c
  8067  0059A4  ECDF  F01D         	call	_configura_baudrate_uart	;wreg free
  8068                           
  8069                           ;uart.c: 213: TXSTA = 0x20;
  8070  0059A8  0E20               	movlw	32
  8071  0059AA  6EAC               	movwf	172,c	;volatile
  8072                           
  8073                           ;uart.c: 214: RCSTA = 0x90;
  8074  0059AC  0E90               	movlw	144
  8075  0059AE  6EAB               	movwf	171,c	;volatile
  8076  0059B0  0012               	return		;funcret
  8077  0059B2                     __end_of_inicializa_uart:
  8078                           	callstack 0
  8079                           
  8080 ;; *************** function _configura_baudrate_uart *****************
  8081 ;; Defined at:
  8082 ;;		line 50 in file "bibliotecas/uart.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;  baudrate        4   23[COMRAM] const long 
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;  x               2   35[COMRAM] unsigned int 
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  1    wreg      unsigned char 
  8089 ;; Registers used:
  8090 ;;		wreg, status,2, status,0, cstack
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/1
  8093 ;;		On exit  : 0/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8096 ;;      Params:         4       0       0       0       0       0       0       0       0
  8097 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8098 ;;      Temps:          8       0       0       0       0       0       0       0       0
  8099 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8100 ;;Total ram usage:       14 bytes
  8101 ;; Hardware stack levels used:    1
  8102 ;; Hardware stack levels required when called:    3
  8103 ;; This function calls:
  8104 ;;		___aldiv
  8105 ;; This function is called by:
  8106 ;;		_inicializa_uart
  8107 ;; This function uses a non-reentrant model
  8108 ;;
  8109                           
  8110                           	psect	text51
  8111  003BBE                     __ptext51:
  8112                           	callstack 0
  8113  003BBE                     _configura_baudrate_uart:
  8114                           	callstack 26
  8115                           
  8116                           ;uart.c: 52: unsigned int x;;uart.c: 54: x = (48000000 - baudrate*64)/(baudrate*64);
  8117                           
  8118                           ;incstack = 0
  8119  003BBE  C018  F01C         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  8120  003BC2  C019  F01D         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  8121  003BC6  C01A  F01E         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  8122  003BCA  C01B  F01F         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  8123  003BCE  0E06               	movlw	6
  8124  003BD0                     u14955:
  8125  003BD0  90D8               	bcf	status,0,c
  8126  003BD2  361C               	rlcf	??_configura_baudrate_uart^0,f,c
  8127  003BD4  361D               	rlcf	(??_configura_baudrate_uart+1)^0,f,c
  8128  003BD6  361E               	rlcf	(??_configura_baudrate_uart+2)^0,f,c
  8129  003BD8  361F               	rlcf	(??_configura_baudrate_uart+3)^0,f,c
  8130  003BDA  2EE8               	decfsz	wreg,f,c
  8131  003BDC  D7F9               	goto	u14955
  8132  003BDE  501C               	movf	??_configura_baudrate_uart^0,w,c
  8133  003BE0  0800               	sublw	0
  8134  003BE2  6E0A               	movwf	___aldiv@dividend^0,c
  8135  003BE4  0E6C               	movlw	108
  8136  003BE6  541D               	subfwb	(??_configura_baudrate_uart+1)^0,w,c
  8137  003BE8  6E0B               	movwf	(___aldiv@dividend+1)^0,c
  8138  003BEA  0EDC               	movlw	220
  8139  003BEC  541E               	subfwb	(??_configura_baudrate_uart+2)^0,w,c
  8140  003BEE  6E0C               	movwf	(___aldiv@dividend+2)^0,c
  8141  003BF0  0E02               	movlw	2
  8142  003BF2  541F               	subfwb	(??_configura_baudrate_uart+3)^0,w,c
  8143  003BF4  6E0D               	movwf	(___aldiv@dividend+3)^0,c
  8144  003BF6  C018  F020         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  8145  003BFA  C019  F021         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  8146  003BFE  C01A  F022         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  8147  003C02  C01B  F023         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  8148  003C06  0E06               	movlw	6
  8149  003C08                     u14965:
  8150  003C08  90D8               	bcf	status,0,c
  8151  003C0A  3620               	rlcf	(??_configura_baudrate_uart+4)^0,f,c
  8152  003C0C  3621               	rlcf	(??_configura_baudrate_uart+5)^0,f,c
  8153  003C0E  3622               	rlcf	(??_configura_baudrate_uart+6)^0,f,c
  8154  003C10  3623               	rlcf	(??_configura_baudrate_uart+7)^0,f,c
  8155  003C12  2EE8               	decfsz	wreg,f,c
  8156  003C14  D7F9               	goto	u14965
  8157  003C16  C020  F00E         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  8158  003C1A  C021  F00F         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  8159  003C1E  C022  F010         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  8160  003C22  C023  F011         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  8161  003C26  EC9B  F020         	call	___aldiv	;wreg free
  8162  003C2A  C00A  F024         	movff	?___aldiv,configura_baudrate_uart@x
  8163  003C2E  C00B  F025         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  8164                           
  8165                           ;uart.c: 55: if(x > 255)
  8166  003C32  0425               	decf	(configura_baudrate_uart@x+1)^0,w,c
  8167  003C34  A0D8               	btfss	status,0,c
  8168  003C36  D03B               	goto	l12648
  8169                           
  8170                           ;uart.c: 56: {;uart.c: 57: x = (48000000 - baudrate*16)/(baudrate*16);
  8171  003C38  C018  F01C         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  8172  003C3C  C019  F01D         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  8173  003C40  C01A  F01E         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  8174  003C44  C01B  F01F         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  8175  003C48  0E04               	movlw	4
  8176  003C4A                     u14985:
  8177  003C4A  90D8               	bcf	status,0,c
  8178  003C4C  361C               	rlcf	??_configura_baudrate_uart^0,f,c
  8179  003C4E  361D               	rlcf	(??_configura_baudrate_uart+1)^0,f,c
  8180  003C50  361E               	rlcf	(??_configura_baudrate_uart+2)^0,f,c
  8181  003C52  361F               	rlcf	(??_configura_baudrate_uart+3)^0,f,c
  8182  003C54  2EE8               	decfsz	wreg,f,c
  8183  003C56  D7F9               	goto	u14985
  8184  003C58  501C               	movf	??_configura_baudrate_uart^0,w,c
  8185  003C5A  0800               	sublw	0
  8186  003C5C  6E0A               	movwf	___aldiv@dividend^0,c
  8187  003C5E  0E6C               	movlw	108
  8188  003C60  541D               	subfwb	(??_configura_baudrate_uart+1)^0,w,c
  8189  003C62  6E0B               	movwf	(___aldiv@dividend+1)^0,c
  8190  003C64  0EDC               	movlw	220
  8191  003C66  541E               	subfwb	(??_configura_baudrate_uart+2)^0,w,c
  8192  003C68  6E0C               	movwf	(___aldiv@dividend+2)^0,c
  8193  003C6A  0E02               	movlw	2
  8194  003C6C  541F               	subfwb	(??_configura_baudrate_uart+3)^0,w,c
  8195  003C6E  6E0D               	movwf	(___aldiv@dividend+3)^0,c
  8196  003C70  C018  F020         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  8197  003C74  C019  F021         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  8198  003C78  C01A  F022         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  8199  003C7C  C01B  F023         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  8200  003C80  0E04               	movlw	4
  8201  003C82                     u14995:
  8202  003C82  90D8               	bcf	status,0,c
  8203  003C84  3620               	rlcf	(??_configura_baudrate_uart+4)^0,f,c
  8204  003C86  3621               	rlcf	(??_configura_baudrate_uart+5)^0,f,c
  8205  003C88  3622               	rlcf	(??_configura_baudrate_uart+6)^0,f,c
  8206  003C8A  3623               	rlcf	(??_configura_baudrate_uart+7)^0,f,c
  8207  003C8C  2EE8               	decfsz	wreg,f,c
  8208  003C8E  D7F9               	goto	u14995
  8209  003C90  C020  F00E         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  8210  003C94  C021  F00F         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  8211  003C98  C022  F010         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  8212  003C9C  C023  F011         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  8213  003CA0  EC9B  F020         	call	___aldiv	;wreg free
  8214  003CA4  C00A  F024         	movff	?___aldiv,configura_baudrate_uart@x
  8215  003CA8  C00B  F025         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  8216                           
  8217                           ;uart.c: 58: BRGH = 1;
  8218  003CAC  84AC               	bsf	4012,2,c	;volatile
  8219  003CAE                     l12648:
  8220                           
  8221                           ;uart.c: 59: };uart.c: 60: if(x < 256)
  8222  003CAE  0425               	decf	(configura_baudrate_uart@x+1)^0,w,c
  8223  003CB0  B0D8               	btfsc	status,0,c
  8224  003CB2  0012               	return	
  8225                           
  8226                           ;uart.c: 61: {;uart.c: 62: SPBRG = x;
  8227  003CB4  C024  FFAF         	movff	configura_baudrate_uart@x,4015	;volatile
  8228                           
  8229                           ;uart.c: 63: SYNC = 0;
  8230  003CB8  98AC               	bcf	4012,4,c	;volatile
  8231                           
  8232                           ;uart.c: 64: SPEN = 1;
  8233  003CBA  8EAB               	bsf	4011,7,c	;volatile
  8234                           
  8235                           ;uart.c: 65: TRISCbits.RC7 = 1;
  8236  003CBC  8E94               	bsf	148,7,c	;volatile
  8237                           
  8238                           ;uart.c: 66: TRISCbits.RC6 = 0;
  8239  003CBE  9C94               	bcf	148,6,c	;volatile
  8240                           
  8241                           ;uart.c: 67: CREN = 1;
  8242  003CC0  88AB               	bsf	4011,4,c	;volatile
  8243                           
  8244                           ;uart.c: 68: TXEN = 1;
  8245  003CC2  8AAC               	bsf	4012,5,c	;volatile
  8246                           
  8247                           ;uart.c: 70: return (1);;	Return value of _configura_baudrate_uart is never used
  8248  003CC4  0012               	return		;funcret
  8249  003CC6                     __end_of_configura_baudrate_uart:
  8250                           	callstack 0
  8251                           
  8252 ;; *************** function ___aldiv *****************
  8253 ;; Defined at:
  8254 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\aldiv.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;  dividend        4    9[COMRAM] long 
  8257 ;;  divisor         4   13[COMRAM] long 
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;  quotient        4   19[COMRAM] long 
  8260 ;;  sign            1   18[COMRAM] unsigned char 
  8261 ;;  counter         1   17[COMRAM] unsigned char 
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  4    9[COMRAM] long 
  8264 ;; Registers used:
  8265 ;;		wreg, status,2, status,0
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/1
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8271 ;;      Params:         8       0       0       0       0       0       0       0       0
  8272 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8274 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8275 ;;Total ram usage:       14 bytes
  8276 ;; Hardware stack levels used:    1
  8277 ;; Hardware stack levels required when called:    2
  8278 ;; This function calls:
  8279 ;;		Nothing
  8280 ;; This function is called by:
  8281 ;;		_configura_baudrate_uart
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           	psect	text52
  8286  004136                     __ptext52:
  8287                           	callstack 0
  8288  004136                     ___aldiv:
  8289                           	callstack 26
  8290                           
  8291                           ;incstack = 0
  8292  004136  0E00               	movlw	0
  8293  004138  6E13               	movwf	___aldiv@sign^0,c
  8294  00413A  AE11               	btfss	(___aldiv@divisor+3)^0,7,c
  8295  00413C  D00A               	goto	l12080
  8296  00413E  1E11               	comf	(___aldiv@divisor+3)^0,f,c
  8297  004140  1E10               	comf	(___aldiv@divisor+2)^0,f,c
  8298  004142  1E0F               	comf	(___aldiv@divisor+1)^0,f,c
  8299  004144  6C0E               	negf	___aldiv@divisor^0,c
  8300  004146  0E00               	movlw	0
  8301  004148  220F               	addwfc	(___aldiv@divisor+1)^0,f,c
  8302  00414A  2210               	addwfc	(___aldiv@divisor+2)^0,f,c
  8303  00414C  2211               	addwfc	(___aldiv@divisor+3)^0,f,c
  8304  00414E  0E01               	movlw	1
  8305  004150  6E13               	movwf	___aldiv@sign^0,c
  8306  004152                     l12080:
  8307  004152  AE0D               	btfss	(___aldiv@dividend+3)^0,7,c
  8308  004154  D00A               	goto	l12086
  8309  004156  1E0D               	comf	(___aldiv@dividend+3)^0,f,c
  8310  004158  1E0C               	comf	(___aldiv@dividend+2)^0,f,c
  8311  00415A  1E0B               	comf	(___aldiv@dividend+1)^0,f,c
  8312  00415C  6C0A               	negf	___aldiv@dividend^0,c
  8313  00415E  0E00               	movlw	0
  8314  004160  220B               	addwfc	(___aldiv@dividend+1)^0,f,c
  8315  004162  220C               	addwfc	(___aldiv@dividend+2)^0,f,c
  8316  004164  220D               	addwfc	(___aldiv@dividend+3)^0,f,c
  8317  004166  0E01               	movlw	1
  8318  004168  1A13               	xorwf	___aldiv@sign^0,f,c
  8319  00416A                     l12086:
  8320  00416A  0E00               	movlw	0
  8321  00416C  6E14               	movwf	___aldiv@quotient^0,c
  8322  00416E  0E00               	movlw	0
  8323  004170  6E15               	movwf	(___aldiv@quotient+1)^0,c
  8324  004172  0E00               	movlw	0
  8325  004174  6E16               	movwf	(___aldiv@quotient+2)^0,c
  8326  004176  0E00               	movlw	0
  8327  004178  6E17               	movwf	(___aldiv@quotient+3)^0,c
  8328  00417A  500E               	movf	___aldiv@divisor^0,w,c
  8329  00417C  100F               	iorwf	(___aldiv@divisor+1)^0,w,c
  8330  00417E  1010               	iorwf	(___aldiv@divisor+2)^0,w,c
  8331  004180  1011               	iorwf	(___aldiv@divisor+3)^0,w,c
  8332  004182  B4D8               	btfsc	status,2,c
  8333  004184  D02A               	goto	l12108
  8334  004186  0E01               	movlw	1
  8335  004188  6E12               	movwf	___aldiv@counter^0,c
  8336  00418A  D006               	goto	l12094
  8337  00418C                     l12092:
  8338  00418C  90D8               	bcf	status,0,c
  8339  00418E  360E               	rlcf	___aldiv@divisor^0,f,c
  8340  004190  360F               	rlcf	(___aldiv@divisor+1)^0,f,c
  8341  004192  3610               	rlcf	(___aldiv@divisor+2)^0,f,c
  8342  004194  3611               	rlcf	(___aldiv@divisor+3)^0,f,c
  8343  004196  2A12               	incf	___aldiv@counter^0,f,c
  8344  004198                     l12094:
  8345  004198  AE11               	btfss	(___aldiv@divisor+3)^0,7,c
  8346  00419A  D7F8               	goto	l12092
  8347  00419C                     u14050:
  8348  00419C  90D8               	bcf	status,0,c
  8349  00419E  3614               	rlcf	___aldiv@quotient^0,f,c
  8350  0041A0  3615               	rlcf	(___aldiv@quotient+1)^0,f,c
  8351  0041A2  3616               	rlcf	(___aldiv@quotient+2)^0,f,c
  8352  0041A4  3617               	rlcf	(___aldiv@quotient+3)^0,f,c
  8353  0041A6  500E               	movf	___aldiv@divisor^0,w,c
  8354  0041A8  5C0A               	subwf	___aldiv@dividend^0,w,c
  8355  0041AA  500F               	movf	(___aldiv@divisor+1)^0,w,c
  8356  0041AC  580B               	subwfb	(___aldiv@dividend+1)^0,w,c
  8357  0041AE  5010               	movf	(___aldiv@divisor+2)^0,w,c
  8358  0041B0  580C               	subwfb	(___aldiv@dividend+2)^0,w,c
  8359  0041B2  5011               	movf	(___aldiv@divisor+3)^0,w,c
  8360  0041B4  580D               	subwfb	(___aldiv@dividend+3)^0,w,c
  8361  0041B6  A0D8               	btfss	status,0,c
  8362  0041B8  D009               	goto	l12104
  8363  0041BA  500E               	movf	___aldiv@divisor^0,w,c
  8364  0041BC  5E0A               	subwf	___aldiv@dividend^0,f,c
  8365  0041BE  500F               	movf	(___aldiv@divisor+1)^0,w,c
  8366  0041C0  5A0B               	subwfb	(___aldiv@dividend+1)^0,f,c
  8367  0041C2  5010               	movf	(___aldiv@divisor+2)^0,w,c
  8368  0041C4  5A0C               	subwfb	(___aldiv@dividend+2)^0,f,c
  8369  0041C6  5011               	movf	(___aldiv@divisor+3)^0,w,c
  8370  0041C8  5A0D               	subwfb	(___aldiv@dividend+3)^0,f,c
  8371  0041CA  8014               	bsf	___aldiv@quotient^0,0,c
  8372  0041CC                     l12104:
  8373  0041CC  90D8               	bcf	status,0,c
  8374  0041CE  3211               	rrcf	(___aldiv@divisor+3)^0,f,c
  8375  0041D0  3210               	rrcf	(___aldiv@divisor+2)^0,f,c
  8376  0041D2  320F               	rrcf	(___aldiv@divisor+1)^0,f,c
  8377  0041D4  320E               	rrcf	___aldiv@divisor^0,f,c
  8378  0041D6  2E12               	decfsz	___aldiv@counter^0,f,c
  8379  0041D8  D7E1               	goto	u14050
  8380  0041DA                     l12108:
  8381  0041DA  5013               	movf	___aldiv@sign^0,w,c
  8382  0041DC  B4D8               	btfsc	status,2,c
  8383  0041DE  D008               	goto	l12112
  8384  0041E0  1E17               	comf	(___aldiv@quotient+3)^0,f,c
  8385  0041E2  1E16               	comf	(___aldiv@quotient+2)^0,f,c
  8386  0041E4  1E15               	comf	(___aldiv@quotient+1)^0,f,c
  8387  0041E6  6C14               	negf	___aldiv@quotient^0,c
  8388  0041E8  0E00               	movlw	0
  8389  0041EA  2215               	addwfc	(___aldiv@quotient+1)^0,f,c
  8390  0041EC  2216               	addwfc	(___aldiv@quotient+2)^0,f,c
  8391  0041EE  2217               	addwfc	(___aldiv@quotient+3)^0,f,c
  8392  0041F0                     l12112:
  8393  0041F0  C014  F00A         	movff	___aldiv@quotient,?___aldiv
  8394  0041F4  C015  F00B         	movff	___aldiv@quotient+1,?___aldiv+1
  8395  0041F8  C016  F00C         	movff	___aldiv@quotient+2,?___aldiv+2
  8396  0041FC  C017  F00D         	movff	___aldiv@quotient+3,?___aldiv+3
  8397  004200  0012               	return		;funcret
  8398  004202                     __end_of___aldiv:
  8399                           	callstack 0
  8400                           
  8401 ;; *************** function _inicializa_SPI *****************
  8402 ;; Defined at:
  8403 ;;		line 48 in file "bibliotecas/SPI.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;		None
  8406 ;; Auto vars:     Size  Location     Type
  8407 ;;		None
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  1    wreg      void 
  8410 ;; Registers used:
  8411 ;;		wreg, status,2, status,0
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/1
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8417 ;;      Params:         0       0       0       0       0       0       0       0       0
  8418 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8420 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8421 ;;Total ram usage:        0 bytes
  8422 ;; Hardware stack levels used:    1
  8423 ;; Hardware stack levels required when called:    2
  8424 ;; This function calls:
  8425 ;;		Nothing
  8426 ;; This function is called by:
  8427 ;;		_grava_sd
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           	psect	text53
  8432  005A7C                     __ptext53:
  8433                           	callstack 0
  8434  005A7C                     _inicializa_SPI:
  8435                           	callstack 25
  8436                           
  8437                           ;SPI.c: 50: TRISBbits.RB1 = 0;
  8438                           
  8439                           ;incstack = 0
  8440  005A7C  9293               	bcf	147,1,c	;volatile
  8441                           
  8442                           ;SPI.c: 51: TRISBbits.RB5 = 0;
  8443  005A7E  9A93               	bcf	147,5,c	;volatile
  8444                           
  8445                           ;SPI.c: 52: TRISBbits.RB0 = 1;
  8446  005A80  8093               	bsf	147,0,c	;volatile
  8447                           
  8448                           ;SPI.c: 53: TRISCbits.RC7 = 0;
  8449  005A82  9E94               	bcf	148,7,c	;volatile
  8450                           
  8451                           ;SPI.c: 55: LATBbits.LATB5 = 1;
  8452  005A84  8A8A               	bsf	138,5,c	;volatile
  8453                           
  8454                           ;SPI.c: 56: SSPSTAT &= 0x3F;
  8455  005A86  0E3F               	movlw	63
  8456  005A88  16C7               	andwf	199,f,c	;volatile
  8457                           
  8458                           ;SPI.c: 57: SSPCON1 = 0x00;
  8459  005A8A  0E00               	movlw	0
  8460  005A8C  6EC6               	movwf	198,c	;volatile
  8461                           
  8462                           ;SPI.c: 59: SSPSTATbits.SMP = 0;
  8463  005A8E  9EC7               	bcf	199,7,c	;volatile
  8464                           
  8465                           ;SPI.c: 60: SSPSTATbits.CKE = 1;
  8466  005A90  8CC7               	bsf	199,6,c	;volatile
  8467                           
  8468                           ;SPI.c: 61: SSPCON1bits.CKP = 0;
  8469  005A92  98C6               	bcf	198,4,c	;volatile
  8470                           
  8471                           ;SPI.c: 63: SSPCON1 = 0b00000011;
  8472  005A94  0E03               	movlw	3
  8473  005A96  6EC6               	movwf	198,c	;volatile
  8474                           
  8475                           ;SPI.c: 65: SSPCON1bits.SSPEN = 1;
  8476  005A98  8AC6               	bsf	198,5,c	;volatile
  8477  005A9A  0012               	return		;funcret
  8478  005A9C                     __end_of_inicializa_SPI:
  8479                           	callstack 0
  8480                           
  8481 ;; *************** function _escrita_sdcard *****************
  8482 ;; Defined at:
  8483 ;;		line 208 in file "bibliotecas/SDCard.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;		None
  8486 ;; Auto vars:     Size  Location     Type
  8487 ;;  fix_gps         3    0        PTR unsigned char 
  8488 ;;  bw              2    0        unsigned short 
  8489 ;;  j               1    0        unsigned char 
  8490 ;;  i               1    0        unsigned char 
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  1    wreg      void 
  8493 ;; Registers used:
  8494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/1
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8500 ;;      Params:         0       0       0       0       0       0       0       0       0
  8501 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8503 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8504 ;;Total ram usage:        0 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:   14
  8507 ;; This function calls:
  8508 ;;		_data_nome
  8509 ;;		_f_close
  8510 ;;		_f_lseek
  8511 ;;		_f_mount
  8512 ;;		_f_open
  8513 ;;		_fprintf
  8514 ;;		_gps
  8515 ;;		_hora_nome
  8516 ;;		_strcat
  8517 ;; This function is called by:
  8518 ;;		_grava_sd
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522                           	psect	text54
  8523  0035FE                     __ptext54:
  8524                           	callstack 0
  8525  0035FE                     _escrita_sdcard:
  8526                           	callstack 13
  8527                           
  8528                           ;SDCard.c: 210: unsigned char *fix_gps;;SDCard.c: 211: unsigned char i, j;;SDCard.c: 212
      +                          : static unsigned char f_fix = 0;;SDCard.c: 213: WORD bw;;SDCard.c: 217: f_mount(0,&fs);
  8529                           
  8530                           ;incstack = 0
  8531  0035FE  0E96               	movlw	low _fs
  8532  003600  6E0A               	movwf	f_mount@fs^0,c
  8533  003602  0E03               	movlw	high _fs
  8534  003604  6E0B               	movwf	(f_mount@fs+1)^0,c
  8535  003606  0E00               	movlw	0
  8536  003608  EC9F  F029         	call	_f_mount
  8537                           
  8538                           ;SDCard.c: 218: if(!f_fix)
  8539  00360C  5053               	movf	escrita_sdcard@f_fix^0,w,c
  8540  00360E  A4D8               	btfss	status,2,c
  8541  003610  D023               	goto	l12930
  8542                           
  8543                           ;SDCard.c: 219: {;SDCard.c: 220: gps();
  8544  003612  EC25  F02B         	call	_gps	;wreg free
  8545                           
  8546                           ;SDCard.c: 221: if(data[0] != ' ' && hora[0] != ' ')
  8547  003616  0E20               	movlw	32
  8548  003618  0101               	movlb	1	; () banked
  8549  00361A  19D8               	xorwf	_data& (0+255),w,b
  8550  00361C  B4D8               	btfsc	status,2,c
  8551  00361E  D01C               	goto	l12930
  8552                           
  8553                           ; BSR set to: 1
  8554  003620  0E20               	movlw	32
  8555  003622  19CA               	xorwf	_hora& (0+255),w,b
  8556  003624  B4D8               	btfsc	status,2,c
  8557  003626  D018               	goto	l12930
  8558                           
  8559                           ; BSR set to: 1
  8560                           ;SDCard.c: 222: {;SDCard.c: 223: data_nome(data);
  8561  003628  0ED8               	movlw	low _data
  8562  00362A  6E0A               	movwf	data_nome@p_buff^0,c
  8563  00362C  0E01               	movlw	high _data
  8564  00362E  6E0B               	movwf	(data_nome@p_buff+1)^0,c
  8565  003630  EC56  F02C         	call	_data_nome	;wreg free
  8566                           
  8567                           ;SDCard.c: 224: hora_nome(hora);
  8568  003634  0ECA               	movlw	low _hora
  8569  003636  6E0A               	movwf	hora_nome@p_buff^0,c
  8570  003638  0E01               	movlw	high _hora
  8571  00363A  6E0B               	movwf	(hora_nome@p_buff+1)^0,c
  8572  00363C  EC2C  F02C         	call	_hora_nome	;wreg free
  8573                           
  8574                           ; BSR set to: 1
  8575                           ;SDCard.c: 226: strcat(filename, ".tlm");
  8576  003640  0E56               	movlw	low _filename
  8577  003642  6E0A               	movwf	strcat@to^0,c
  8578  003644  0E02               	movlw	high _filename
  8579  003646  6E0B               	movwf	(strcat@to+1)^0,c
  8580  003648  0E66               	movlw	low STR_11
  8581  00364A  6E0C               	movwf	strcat@from^0,c
  8582  00364C  0E62               	movlw	high STR_11
  8583  00364E  6E0D               	movwf	(strcat@from+1)^0,c
  8584  003650  ECE7  F029         	call	_strcat	;wreg free
  8585                           
  8586                           ; BSR set to: 1
  8587                           ;SDCard.c: 227: f_fix = 1;
  8588  003654  0E01               	movlw	1
  8589  003656  6E53               	movwf	escrita_sdcard@f_fix^0,c
  8590  003658                     l12930:
  8591                           
  8592                           ;SDCard.c: 228: };SDCard.c: 229: };SDCard.c: 231: if(f_fix)
  8593  003658  5053               	movf	escrita_sdcard@f_fix^0,w,c
  8594  00365A  B4D8               	btfsc	status,2,c
  8595  00365C  0012               	return	
  8596                           
  8597                           ;SDCard.c: 232: {;SDCard.c: 233: if (f_open(&fil, filename, 0x02 ) == FR_OK)
  8598  00365E  0E7C               	movlw	low _fil
  8599  003660  0100               	movlb	0	; () banked
  8600  003662  6F98               	movwf	f_open@fp& (0+255),b
  8601  003664  0E01               	movlw	high _fil
  8602  003666  6F99               	movwf	(f_open@fp+1)& (0+255),b
  8603  003668  0E56               	movlw	low _filename
  8604  00366A  6F9A               	movwf	f_open@path& (0+255),b
  8605  00366C  0E02               	movlw	high _filename
  8606  00366E  6F9B               	movwf	(f_open@path+1)& (0+255),b
  8607  003670  0E02               	movlw	2
  8608  003672  6F9C               	movwf	f_open@mode& (0+255),b
  8609  003674  EC66  F009         	call	_f_open	;wreg free
  8610  003678  0900               	iorlw	0
  8611  00367A  A4D8               	btfss	status,2,c
  8612  00367C  D051               	goto	l12944
  8613                           
  8614                           ;SDCard.c: 234: {;SDCard.c: 236: f_lseek(&fil, ((&fil)->fsize));
  8615  00367E  0E7C               	movlw	low _fil
  8616  003680  0100               	movlb	0	; () banked
  8617  003682  6F86               	movwf	f_lseek@fp& (0+255),b
  8618  003684  0E01               	movlw	high _fil
  8619  003686  6F87               	movwf	(f_lseek@fp+1)& (0+255),b
  8620  003688  C186  F088         	movff	_fil+10,f_lseek@ofs
  8621  00368C  C187  F089         	movff	_fil+11,f_lseek@ofs+1
  8622  003690  C188  F08A         	movff	_fil+12,f_lseek@ofs+2
  8623  003694  C189  F08B         	movff	_fil+13,f_lseek@ofs+3
  8624  003698  EC79  F005         	call	_f_lseek	;wreg free
  8625                           
  8626                           ; BSR set to: 0
  8627                           ;SDCard.c: 237: fprintf(&fil, "v%s;lt%s;lo%s;", vel, lt, lo);
  8628  00369C  0E7C               	movlw	low _fil
  8629  00369E  6FB1               	movwf	fprintf@fil& (0+255),b
  8630  0036A0  0E01               	movlw	high _fil
  8631  0036A2  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8632  0036A4  0EA2               	movlw	low STR_12
  8633  0036A6  6FB3               	movwf	fprintf@str& (0+255),b
  8634  0036A8  0E61               	movlw	high STR_12
  8635  0036AA  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8636  0036AC  0EDE               	movlw	low _vel
  8637  0036AE  6FB5               	movwf	(?_fprintf+4)& (0+255),b
  8638  0036B0  0E01               	movlw	high _vel
  8639  0036B2  6FB6               	movwf	(?_fprintf+5)& (0+255),b
  8640  0036B4  0EB2               	movlw	low _lt
  8641  0036B6  6FB7               	movwf	(?_fprintf+6)& (0+255),b
  8642  0036B8  0E01               	movlw	high _lt
  8643  0036BA  6FB8               	movwf	(?_fprintf+7)& (0+255),b
  8644  0036BC  0E98               	movlw	low _lo
  8645  0036BE  6FB9               	movwf	(?_fprintf+8)& (0+255),b
  8646  0036C0  0E01               	movlw	high _lo
  8647  0036C2  6FBA               	movwf	(?_fprintf+9)& (0+255),b
  8648  0036C4  ECBF  F007         	call	_fprintf	;wreg free
  8649                           
  8650                           ; BSR set to: 0
  8651                           ;SDCard.c: 238: fprintf(&fil, "r0;c0;k0;");
  8652  0036C8  0E7C               	movlw	low _fil
  8653  0036CA  6FB1               	movwf	fprintf@fil& (0+255),b
  8654  0036CC  0E01               	movlw	high _fil
  8655  0036CE  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8656  0036D0  0EFC               	movlw	low STR_13
  8657  0036D2  6FB3               	movwf	fprintf@str& (0+255),b
  8658  0036D4  0E61               	movlw	high STR_13
  8659  0036D6  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8660  0036D8  ECBF  F007         	call	_fprintf	;wreg free
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;SDCard.c: 239: fprintf(&fil, "h%s;dN/A;", hora);
  8664  0036DC  0E7C               	movlw	low _fil
  8665  0036DE  6FB1               	movwf	fprintf@fil& (0+255),b
  8666  0036E0  0E01               	movlw	high _fil
  8667  0036E2  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8668  0036E4  0E06               	movlw	low STR_14
  8669  0036E6  6FB3               	movwf	fprintf@str& (0+255),b
  8670  0036E8  0E62               	movlw	high STR_14
  8671  0036EA  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8672  0036EC  0ECA               	movlw	low _hora
  8673  0036EE  6FB5               	movwf	(?_fprintf+4)& (0+255),b
  8674  0036F0  0E01               	movlw	high _hora
  8675  0036F2  6FB6               	movwf	(?_fprintf+5)& (0+255),b
  8676  0036F4  ECBF  F007         	call	_fprintf	;wreg free
  8677                           
  8678                           ; BSR set to: 0
  8679                           ;SDCard.c: 240: fprintf(&fil, "f%c;\n", fence);
  8680  0036F8  0E7C               	movlw	low _fil
  8681  0036FA  6FB1               	movwf	fprintf@fil& (0+255),b
  8682  0036FC  0E01               	movlw	high _fil
  8683  0036FE  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8684  003700  0E56               	movlw	low STR_15
  8685  003702  6FB3               	movwf	fprintf@str& (0+255),b
  8686  003704  0E62               	movlw	high STR_15
  8687  003706  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8688  003708  C0F5  F0B5         	movff	_fence,?_fprintf+4
  8689  00370C  6BB6               	clrf	(?_fprintf+5)& (0+255),b
  8690  00370E  ECBF  F007         	call	_fprintf	;wreg free
  8691                           
  8692                           ;SDCard.c: 243: f_close(&fil);
  8693  003712  0E7C               	movlw	low _fil
  8694  003714  6F69               	movwf	f_close@fp& (0+255),b
  8695  003716  0E01               	movlw	high _fil
  8696  003718  6F6A               	movwf	(f_close@fp+1)& (0+255),b
  8697  00371A  EC16  F02C         	call	_f_close	;wreg free
  8698                           
  8699                           ;SDCard.c: 244: }
  8700  00371E  0012               	return	
  8701  003720                     l12944:
  8702                           
  8703                           ;SDCard.c: 245: else;SDCard.c: 246: {;SDCard.c: 247: f_open(&fil, filename, 0x08 );
  8704  003720  0E7C               	movlw	low _fil
  8705  003722  0100               	movlb	0	; () banked
  8706  003724  6F98               	movwf	f_open@fp& (0+255),b
  8707  003726  0E01               	movlw	high _fil
  8708  003728  6F99               	movwf	(f_open@fp+1)& (0+255),b
  8709  00372A  0E56               	movlw	low _filename
  8710  00372C  6F9A               	movwf	f_open@path& (0+255),b
  8711  00372E  0E02               	movlw	high _filename
  8712  003730  6F9B               	movwf	(f_open@path+1)& (0+255),b
  8713  003732  0E08               	movlw	8
  8714  003734  6F9C               	movwf	f_open@mode& (0+255),b
  8715  003736  EC66  F009         	call	_f_open	;wreg free
  8716                           
  8717                           ;SDCard.c: 248: f_close(&fil);
  8718  00373A  0E7C               	movlw	low _fil
  8719  00373C  0100               	movlb	0	; () banked
  8720  00373E  6F69               	movwf	f_close@fp& (0+255),b
  8721  003740  0E01               	movlw	high _fil
  8722  003742  6F6A               	movwf	(f_close@fp+1)& (0+255),b
  8723  003744  EC16  F02C         	call	_f_close	;wreg free
  8724  003748  0012               	return		;funcret
  8725  00374A                     __end_of_escrita_sdcard:
  8726                           	callstack 0
  8727                           
  8728 ;; *************** function _strcat *****************
  8729 ;; Defined at:
  8730 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcat.c"
  8731 ;; Parameters:    Size  Location     Type
  8732 ;;  to              2    9[COMRAM] PTR unsigned char 
  8733 ;;		 -> filename(20), 
  8734 ;;  from            2   11[COMRAM] PTR const unsigned char 
  8735 ;;		 -> STR_11(5), 
  8736 ;; Auto vars:     Size  Location     Type
  8737 ;;  cp              2   13[COMRAM] PTR unsigned char 
  8738 ;;		 -> filename(20), 
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  2    9[COMRAM] PTR unsigned char 
  8741 ;; Registers used:
  8742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8743 ;; Tracked objects:
  8744 ;;		On entry : 3F/1
  8745 ;;		On exit  : 3F/1
  8746 ;;		Unchanged: 3F/0
  8747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8748 ;;      Params:         4       0       0       0       0       0       0       0       0
  8749 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8751 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8752 ;;Total ram usage:        6 bytes
  8753 ;; Hardware stack levels used:    1
  8754 ;; Hardware stack levels required when called:    2
  8755 ;; This function calls:
  8756 ;;		Nothing
  8757 ;; This function is called by:
  8758 ;;		_escrita_sdcard
  8759 ;; This function uses a non-reentrant model
  8760 ;;
  8761                           
  8762                           	psect	text55
  8763  0053CE                     __ptext55:
  8764                           	callstack 0
  8765  0053CE                     _strcat:
  8766                           	callstack 24
  8767                           
  8768                           ; BSR set to: 1
  8769                           
  8770                           ;incstack = 0
  8771  0053CE  C00A  F00E         	movff	strcat@to,strcat@cp
  8772  0053D2  C00B  F00F         	movff	strcat@to+1,strcat@cp+1
  8773  0053D6  D002               	goto	l12388
  8774  0053D8                     l12386:
  8775                           
  8776                           ; BSR set to: 1
  8777  0053D8  4A0E               	infsnz	strcat@cp^0,f,c
  8778  0053DA  2A0F               	incf	(strcat@cp+1)^0,f,c
  8779  0053DC                     l12388:
  8780                           
  8781                           ; BSR set to: 1
  8782  0053DC  C00E  FFD9         	movff	strcat@cp,fsr2l
  8783  0053E0  C00F  FFDA         	movff	strcat@cp+1,fsr2h
  8784  0053E4  50DF               	movf	indf2,w,c
  8785  0053E6  B4D8               	btfsc	status,2,c
  8786  0053E8  D005               	goto	l12392
  8787  0053EA  D7F6               	goto	l12386
  8788  0053EC                     l12390:
  8789                           
  8790                           ; BSR set to: 1
  8791  0053EC  4A0E               	infsnz	strcat@cp^0,f,c
  8792  0053EE  2A0F               	incf	(strcat@cp+1)^0,f,c
  8793  0053F0  4A0C               	infsnz	strcat@from^0,f,c
  8794  0053F2  2A0D               	incf	(strcat@from+1)^0,f,c
  8795  0053F4                     l12392:
  8796                           
  8797                           ; BSR set to: 1
  8798  0053F4  C00C  FFF6         	movff	strcat@from,tblptrl
  8799  0053F8  C00D  FFF7         	movff	strcat@from+1,tblptrh
  8800  0053FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8801  0053FC  6AF8               	clrf	tblptru,c
  8802  0053FE                     	endif
  8803  0053FE                     	if	0	;tblptru may be non-zero
  8804  0053FE                     	endif
  8805  0053FE  C00E  FFD9         	movff	strcat@cp,fsr2l
  8806  005402  C00F  FFDA         	movff	strcat@cp+1,fsr2h
  8807  005406  0008               	tblrd		*
  8808  005408  CFF5 FFDF          	movff	tablat,indf2
  8809  00540C  50DF               	movf	indf2,w,c
  8810  00540E  B4D8               	btfsc	status,2,c
  8811  005410  0012               	return	
  8812  005412  D7EC               	goto	l12390
  8813  005414                     __end_of_strcat:
  8814                           	callstack 0
  8815                           
  8816 ;; *************** function _hora_nome *****************
  8817 ;; Defined at:
  8818 ;;		line 414 in file "bibliotecas/SDCard.c"
  8819 ;; Parameters:    Size  Location     Type
  8820 ;;  p_buff          2    9[COMRAM] PTR unsigned char 
  8821 ;;		 -> hora(7), 
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;  i               1   11[COMRAM] unsigned char 
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  1    wreg      void 
  8826 ;; Registers used:
  8827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8828 ;; Tracked objects:
  8829 ;;		On entry : 3F/1
  8830 ;;		On exit  : 3F/1
  8831 ;;		Unchanged: 3F/0
  8832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8833 ;;      Params:         2       0       0       0       0       0       0       0       0
  8834 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8835 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8836 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8837 ;;Total ram usage:        3 bytes
  8838 ;; Hardware stack levels used:    1
  8839 ;; Hardware stack levels required when called:    2
  8840 ;; This function calls:
  8841 ;;		Nothing
  8842 ;; This function is called by:
  8843 ;;		_escrita_sdcard
  8844 ;; This function uses a non-reentrant model
  8845 ;;
  8846                           
  8847                           	psect	text56
  8848  005858                     __ptext56:
  8849                           	callstack 0
  8850  005858                     _hora_nome:
  8851                           	callstack 24
  8852                           
  8853                           ; BSR set to: 1
  8854                           ;SDCard.c: 416: unsigned char i;;SDCard.c: 417: for(i=4; i<8;i++)
  8855                           
  8856                           ; BSR set to: 1
  8857                           ;incstack = 0
  8858  005858  0E04               	movlw	4
  8859  00585A  6E0C               	movwf	hora_nome@i^0,c
  8860  00585C                     l12376:
  8861                           
  8862                           ; BSR set to: 1
  8863                           ;SDCard.c: 418: {;SDCard.c: 419: filename[i] = *p_buff;
  8864  00585C  C00A  FFD9         	movff	hora_nome@p_buff,fsr2l
  8865  005860  C00B  FFDA         	movff	hora_nome@p_buff+1,fsr2h
  8866  005864  0E56               	movlw	low _filename
  8867  005866  240C               	addwf	hora_nome@i^0,w,c
  8868  005868  6EE1               	movwf	fsr1l,c
  8869  00586A  6AE2               	clrf	fsr1h,c
  8870  00586C  0E02               	movlw	high _filename
  8871  00586E  22E2               	addwfc	fsr1h,f,c
  8872  005870  CFDF FFE7          	movff	indf2,indf1
  8873                           
  8874                           ; BSR set to: 1
  8875                           ;SDCard.c: 420: p_buff++;
  8876  005874  4A0A               	infsnz	hora_nome@p_buff^0,f,c
  8877  005876  2A0B               	incf	(hora_nome@p_buff+1)^0,f,c
  8878                           
  8879                           ; BSR set to: 1
  8880  005878  2A0C               	incf	hora_nome@i^0,f,c
  8881                           
  8882                           ; BSR set to: 1
  8883  00587A  0E07               	movlw	7
  8884  00587C  640C               	cpfsgt	hora_nome@i^0,c
  8885  00587E  D7EE               	goto	l12376
  8886  005880  0012               	return	
  8887  005882                     __end_of_hora_nome:
  8888                           	callstack 0
  8889                           
  8890 ;; *************** function _gps *****************
  8891 ;; Defined at:
  8892 ;;		line 92 in file "bibliotecas/GPS.c"
  8893 ;; Parameters:    Size  Location     Type
  8894 ;;		None
  8895 ;; Auto vars:     Size  Location     Type
  8896 ;;  flag_fix        2   12[COMRAM] PTR unsigned char 
  8897 ;;		 -> rawFix(2), 
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  1    wreg      void 
  8900 ;; Registers used:
  8901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8902 ;; Tracked objects:
  8903 ;;		On entry : 0/0
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8907 ;;      Params:         0       0       0       0       0       0       0       0       0
  8908 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8909 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8910 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8911 ;;Total ram usage:        3 bytes
  8912 ;; Hardware stack levels used:    1
  8913 ;; Hardware stack levels required when called:    3
  8914 ;; This function calls:
  8915 ;;		_fix
  8916 ;;		_get_fix
  8917 ;;		_get_gpstime
  8918 ;;		_get_latitude
  8919 ;;		_get_longitude
  8920 ;;		_get_rawdate
  8921 ;;		_get_rawspeed
  8922 ;; This function is called by:
  8923 ;;		_escrita_sdcard
  8924 ;;		_main
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text57
  8929  00564A                     __ptext57:
  8930                           	callstack 0
  8931  00564A                     _gps:
  8932                           	callstack 27
  8933                           
  8934                           ;GPS.c: 94: unsigned char *flag_fix;;GPS.c: 95: get_fix();
  8935                           
  8936                           ; BSR set to: 1
  8937                           ;incstack = 0
  8938  00564A  EC8B  F02B         	call	_get_fix	;wreg free
  8939                           
  8940                           ;GPS.c: 96: flag_fix = fix();
  8941  00564E  EC20  F02E         	call	_fix	;wreg free
  8942  005652  C00A  F00D         	movff	?_fix,gps@flag_fix
  8943  005656  C00B  F00E         	movff	?_fix+1,gps@flag_fix+1
  8944                           
  8945                           ;GPS.c: 97: if(flag_fix[0] == '1')
  8946  00565A  C00D  FFD9         	movff	gps@flag_fix,fsr2l
  8947  00565E  C00E  FFDA         	movff	gps@flag_fix+1,fsr2h
  8948  005662  0E31               	movlw	49
  8949  005664  18DE               	xorwf	postinc2,w,c
  8950  005666  A4D8               	btfss	status,2,c
  8951  005668  0012               	return	
  8952                           
  8953                           ;GPS.c: 98: {;GPS.c: 99: get_gpstime();
  8954  00566A  EC41  F02C         	call	_get_gpstime	;wreg free
  8955                           
  8956                           ;GPS.c: 100: get_latitude();
  8957  00566E  EC7B  F029         	call	_get_latitude	;wreg free
  8958                           
  8959                           ;GPS.c: 101: get_longitude();
  8960  005672  EC57  F029         	call	_get_longitude	;wreg free
  8961                           
  8962                           ;GPS.c: 102: get_rawdate();
  8963  005676  EC73  F02B         	call	_get_rawdate	;wreg free
  8964                           
  8965                           ;GPS.c: 103: get_rawspeed();
  8966  00567A  EC5B  F02B         	call	_get_rawspeed	;wreg free
  8967  00567E  0012               	return		;funcret
  8968  005680                     __end_of_gps:
  8969                           	callstack 0
  8970                           
  8971 ;; *************** function _get_rawspeed *****************
  8972 ;; Defined at:
  8973 ;;		line 310 in file "bibliotecas/GPS.c"
  8974 ;; Parameters:    Size  Location     Type
  8975 ;;		None
  8976 ;; Auto vars:     Size  Location     Type
  8977 ;;  index           1   10[COMRAM] unsigned char 
  8978 ;;  index_speed     1    9[COMRAM] unsigned char 
  8979 ;; Return value:  Size  Location     Type
  8980 ;;                  1    wreg      void 
  8981 ;; Registers used:
  8982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8983 ;; Tracked objects:
  8984 ;;		On entry : 3F/1
  8985 ;;		On exit  : 3F/1
  8986 ;;		Unchanged: 3F/0
  8987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8988 ;;      Params:         0       0       0       0       0       0       0       0       0
  8989 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8990 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8991 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8992 ;;Total ram usage:        2 bytes
  8993 ;; Hardware stack levels used:    1
  8994 ;; Hardware stack levels required when called:    2
  8995 ;; This function calls:
  8996 ;;		Nothing
  8997 ;; This function is called by:
  8998 ;;		_gps
  8999 ;; This function uses a non-reentrant model
  9000 ;;
  9001                           
  9002                           	psect	text58
  9003  0056B6                     __ptext58:
  9004                           	callstack 0
  9005  0056B6                     _get_rawspeed:
  9006                           	callstack 27
  9007                           
  9008                           ; BSR set to: 1
  9009                           ;GPS.c: 312: unsigned char index_speed, index;;GPS.c: 314: index_speed = 0;
  9010                           
  9011                           ;incstack = 0
  9012  0056B6  0E00               	movlw	0
  9013  0056B8  6E0A               	movwf	get_rawspeed@index_speed^0,c
  9014                           
  9015                           ;GPS.c: 316: for(index = 39; index<44; index++)
  9016  0056BA  0E27               	movlw	39
  9017  0056BC  6E0B               	movwf	get_rawspeed@index^0,c
  9018  0056BE                     l11702:
  9019                           
  9020                           ; BSR set to: 1
  9021                           ;GPS.c: 317: {;GPS.c: 318: rawSpeed[index_speed] = rmc_buffer[index];
  9022  0056BE  0E50               	movlw	low _rmc_buffer
  9023  0056C0  240B               	addwf	get_rawspeed@index^0,w,c
  9024  0056C2  6ED9               	movwf	fsr2l,c
  9025  0056C4  6ADA               	clrf	fsr2h,c
  9026  0056C6  0E03               	movlw	high _rmc_buffer
  9027  0056C8  22DA               	addwfc	fsr2h,f,c
  9028  0056CA  0E6A               	movlw	low _rawSpeed
  9029  0056CC  240A               	addwf	get_rawspeed@index_speed^0,w,c
  9030  0056CE  6EE1               	movwf	fsr1l,c
  9031  0056D0  6AE2               	clrf	fsr1h,c
  9032  0056D2  0E02               	movlw	high _rawSpeed
  9033  0056D4  22E2               	addwfc	fsr1h,f,c
  9034  0056D6  CFDF FFE7          	movff	indf2,indf1
  9035                           
  9036                           ; BSR set to: 1
  9037                           ;GPS.c: 319: index_speed++;
  9038  0056DA  2A0A               	incf	get_rawspeed@index_speed^0,f,c
  9039                           
  9040                           ; BSR set to: 1
  9041  0056DC  2A0B               	incf	get_rawspeed@index^0,f,c
  9042                           
  9043                           ; BSR set to: 1
  9044  0056DE  0E2B               	movlw	43
  9045  0056E0  640B               	cpfsgt	get_rawspeed@index^0,c
  9046  0056E2  D7ED               	goto	l11702
  9047  0056E4  0012               	return	
  9048  0056E6                     __end_of_get_rawspeed:
  9049                           	callstack 0
  9050                           
  9051 ;; *************** function _get_rawdate *****************
  9052 ;; Defined at:
  9053 ;;		line 295 in file "bibliotecas/GPS.c"
  9054 ;; Parameters:    Size  Location     Type
  9055 ;;		None
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;  index           1   10[COMRAM] unsigned char 
  9058 ;;  index_date      1    9[COMRAM] unsigned char 
  9059 ;; Return value:  Size  Location     Type
  9060 ;;                  1    wreg      void 
  9061 ;; Registers used:
  9062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9063 ;; Tracked objects:
  9064 ;;		On entry : 3F/1
  9065 ;;		On exit  : 3F/1
  9066 ;;		Unchanged: 3F/0
  9067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9068 ;;      Params:         0       0       0       0       0       0       0       0       0
  9069 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9070 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9071 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9072 ;;Total ram usage:        2 bytes
  9073 ;; Hardware stack levels used:    1
  9074 ;; Hardware stack levels required when called:    2
  9075 ;; This function calls:
  9076 ;;		Nothing
  9077 ;; This function is called by:
  9078 ;;		_gps
  9079 ;; This function uses a non-reentrant model
  9080 ;;
  9081                           
  9082                           	psect	text59
  9083  0056E6                     __ptext59:
  9084                           	callstack 0
  9085  0056E6                     _get_rawdate:
  9086                           	callstack 27
  9087                           
  9088                           ; BSR set to: 1
  9089                           ;GPS.c: 297: unsigned char index_date, index;;GPS.c: 299: index_date = 0;
  9090                           
  9091                           ; BSR set to: 1
  9092                           ;incstack = 0
  9093  0056E6  0E00               	movlw	0
  9094  0056E8  6E0A               	movwf	get_rawdate@index_date^0,c
  9095                           
  9096                           ;GPS.c: 301: for(index = 46; index<52; index++)
  9097  0056EA  0E2E               	movlw	46
  9098  0056EC  6E0B               	movwf	get_rawdate@index^0,c
  9099  0056EE                     l11688:
  9100                           
  9101                           ; BSR set to: 1
  9102                           ;GPS.c: 302: {;GPS.c: 303: rawDate[index_date] = rmc_buffer[index];
  9103  0056EE  0E50               	movlw	low _rmc_buffer
  9104  0056F0  240B               	addwf	get_rawdate@index^0,w,c
  9105  0056F2  6ED9               	movwf	fsr2l,c
  9106  0056F4  6ADA               	clrf	fsr2h,c
  9107  0056F6  0E03               	movlw	high _rmc_buffer
  9108  0056F8  22DA               	addwfc	fsr2h,f,c
  9109  0056FA  0EE4               	movlw	low _rawDate
  9110  0056FC  240A               	addwf	get_rawdate@index_date^0,w,c
  9111  0056FE  6EE1               	movwf	fsr1l,c
  9112  005700  6AE2               	clrf	fsr1h,c
  9113  005702  0E01               	movlw	high _rawDate
  9114  005704  22E2               	addwfc	fsr1h,f,c
  9115  005706  CFDF FFE7          	movff	indf2,indf1
  9116                           
  9117                           ; BSR set to: 1
  9118                           ;GPS.c: 304: index_date++;
  9119  00570A  2A0A               	incf	get_rawdate@index_date^0,f,c
  9120                           
  9121                           ; BSR set to: 1
  9122  00570C  2A0B               	incf	get_rawdate@index^0,f,c
  9123                           
  9124                           ; BSR set to: 1
  9125  00570E  0E33               	movlw	51
  9126  005710  640B               	cpfsgt	get_rawdate@index^0,c
  9127  005712  D7ED               	goto	l11688
  9128  005714  0012               	return	
  9129  005716                     __end_of_get_rawdate:
  9130                           	callstack 0
  9131                           
  9132 ;; *************** function _get_longitude *****************
  9133 ;; Defined at:
  9134 ;;		line 273 in file "bibliotecas/GPS.c"
  9135 ;; Parameters:    Size  Location     Type
  9136 ;;		None
  9137 ;; Auto vars:     Size  Location     Type
  9138 ;;  index           1   10[COMRAM] unsigned char 
  9139 ;;  index_long      1    9[COMRAM] unsigned char 
  9140 ;; Return value:  Size  Location     Type
  9141 ;;                  1    wreg      void 
  9142 ;; Registers used:
  9143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9144 ;; Tracked objects:
  9145 ;;		On entry : 3F/1
  9146 ;;		On exit  : 3F/1
  9147 ;;		Unchanged: 0/0
  9148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9149 ;;      Params:         0       0       0       0       0       0       0       0       0
  9150 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9151 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9152 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9153 ;;Total ram usage:        2 bytes
  9154 ;; Hardware stack levels used:    1
  9155 ;; Hardware stack levels required when called:    2
  9156 ;; This function calls:
  9157 ;;		Nothing
  9158 ;; This function is called by:
  9159 ;;		_gps
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           	psect	text60
  9164  0052AE                     __ptext60:
  9165                           	callstack 0
  9166  0052AE                     _get_longitude:
  9167                           	callstack 27
  9168                           
  9169                           ; BSR set to: 1
  9170                           ;GPS.c: 275: unsigned char index_long, index;;GPS.c: 277: index_long = 1;
  9171                           
  9172                           ; BSR set to: 1
  9173                           ;incstack = 0
  9174  0052AE  0E01               	movlw	1
  9175  0052B0  6E0A               	movwf	get_longitude@index_long^0,c
  9176                           
  9177                           ;GPS.c: 279: for(index = 23; index<34; index++)
  9178  0052B2  0E17               	movlw	23
  9179  0052B4  6E0B               	movwf	get_longitude@index^0,c
  9180  0052B6                     l11668:
  9181                           
  9182                           ; BSR set to: 1
  9183                           ;GPS.c: 280: {;GPS.c: 281: rawLongitude[index_long] = gga_buffer[index];
  9184  0052B6  0E00               	movlw	low _gga_buffer
  9185  0052B8  240B               	addwf	get_longitude@index^0,w,c
  9186  0052BA  6ED9               	movwf	fsr2l,c
  9187  0052BC  6ADA               	clrf	fsr2h,c
  9188  0052BE  0E03               	movlw	high _gga_buffer
  9189  0052C0  22DA               	addwfc	fsr2h,f,c
  9190  0052C2  0EA5               	movlw	low _rawLongitude
  9191  0052C4  240A               	addwf	get_longitude@index_long^0,w,c
  9192  0052C6  6EE1               	movwf	fsr1l,c
  9193  0052C8  6AE2               	clrf	fsr1h,c
  9194  0052CA  0E01               	movlw	high _rawLongitude
  9195  0052CC  22E2               	addwfc	fsr1h,f,c
  9196  0052CE  CFDF FFE7          	movff	indf2,indf1
  9197                           
  9198                           ; BSR set to: 1
  9199                           ;GPS.c: 282: index_long++;
  9200  0052D2  2A0A               	incf	get_longitude@index_long^0,f,c
  9201                           
  9202                           ; BSR set to: 1
  9203  0052D4  2A0B               	incf	get_longitude@index^0,f,c
  9204                           
  9205                           ; BSR set to: 1
  9206  0052D6  0E21               	movlw	33
  9207  0052D8  640B               	cpfsgt	get_longitude@index^0,c
  9208  0052DA  D7ED               	goto	l11668
  9209                           
  9210                           ; BSR set to: 1
  9211                           ;GPS.c: 283: };GPS.c: 284: if(gga_buffer[32] == 'E')
  9212  0052DC  0E45               	movlw	69
  9213  0052DE  0103               	movlb	3	; () banked
  9214  0052E0  1920               	xorwf	(_gga_buffer+32)& (0+255),w,b
  9215  0052E2  A4D8               	btfss	status,2,c
  9216  0052E4  D004               	goto	l11680
  9217                           
  9218                           ; BSR set to: 3
  9219                           ;GPS.c: 285: {;GPS.c: 286: rawLongitude[0] = '0';
  9220  0052E6  0E30               	movlw	48
  9221  0052E8  0101               	movlb	1	; () banked
  9222  0052EA  6FA5               	movwf	_rawLongitude& (0+255),b
  9223                           
  9224                           ;GPS.c: 287: }
  9225  0052EC  0012               	return	
  9226  0052EE                     l11680:
  9227                           
  9228                           ; BSR set to: 3
  9229                           ;GPS.c: 288: else;GPS.c: 289: {;GPS.c: 290: rawLongitude[0] = '-';
  9230  0052EE  0E2D               	movlw	45
  9231  0052F0  0101               	movlb	1	; () banked
  9232  0052F2  6FA5               	movwf	_rawLongitude& (0+255),b
  9233                           
  9234                           ; BSR set to: 1
  9235  0052F4  0012               	return		;funcret
  9236  0052F6                     __end_of_get_longitude:
  9237                           	callstack 0
  9238                           
  9239 ;; *************** function _get_latitude *****************
  9240 ;; Defined at:
  9241 ;;		line 249 in file "bibliotecas/GPS.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;		None
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;  time_buffer    15    0        unsigned char [15]
  9246 ;;  index           1   10[COMRAM] unsigned char 
  9247 ;;  index_lat       1    9[COMRAM] unsigned char 
  9248 ;; Return value:  Size  Location     Type
  9249 ;;                  1    wreg      void 
  9250 ;; Registers used:
  9251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9252 ;; Tracked objects:
  9253 ;;		On entry : 0/0
  9254 ;;		On exit  : 3F/1
  9255 ;;		Unchanged: 0/0
  9256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9257 ;;      Params:         0       0       0       0       0       0       0       0       0
  9258 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9259 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9260 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9261 ;;Total ram usage:        2 bytes
  9262 ;; Hardware stack levels used:    1
  9263 ;; Hardware stack levels required when called:    2
  9264 ;; This function calls:
  9265 ;;		Nothing
  9266 ;; This function is called by:
  9267 ;;		_gps
  9268 ;; This function uses a non-reentrant model
  9269 ;;
  9270                           
  9271                           	psect	text61
  9272  0052F6                     __ptext61:
  9273                           	callstack 0
  9274  0052F6                     _get_latitude:
  9275                           	callstack 27
  9276                           
  9277                           ;GPS.c: 251: unsigned char index_lat, index;;GPS.c: 252: unsigned char time_buffer[15];;
      +                          GPS.c: 254: index_lat = 1;
  9278                           
  9279                           ; BSR set to: 1
  9280                           ;incstack = 0
  9281  0052F6  0E01               	movlw	1
  9282  0052F8  6E0A               	movwf	get_latitude@index_lat^0,c
  9283                           
  9284                           ;GPS.c: 256: for(index = 10; index<20; index++)
  9285  0052FA  0E0A               	movlw	10
  9286  0052FC  6E0B               	movwf	get_latitude@index^0,c
  9287  0052FE                     l11648:
  9288                           
  9289                           ;GPS.c: 257: {;GPS.c: 258: rawLatitude[index_lat] = gga_buffer[index];
  9290  0052FE  0E00               	movlw	low _gga_buffer
  9291  005300  240B               	addwf	get_latitude@index^0,w,c
  9292  005302  6ED9               	movwf	fsr2l,c
  9293  005304  6ADA               	clrf	fsr2h,c
  9294  005306  0E03               	movlw	high _gga_buffer
  9295  005308  22DA               	addwfc	fsr2h,f,c
  9296  00530A  0EBE               	movlw	low _rawLatitude
  9297  00530C  240A               	addwf	get_latitude@index_lat^0,w,c
  9298  00530E  6EE1               	movwf	fsr1l,c
  9299  005310  6AE2               	clrf	fsr1h,c
  9300  005312  0E01               	movlw	high _rawLatitude
  9301  005314  22E2               	addwfc	fsr1h,f,c
  9302  005316  CFDF FFE7          	movff	indf2,indf1
  9303                           
  9304                           ;GPS.c: 259: index_lat++;
  9305  00531A  2A0A               	incf	get_latitude@index_lat^0,f,c
  9306  00531C  2A0B               	incf	get_latitude@index^0,f,c
  9307  00531E  0E13               	movlw	19
  9308  005320  640B               	cpfsgt	get_latitude@index^0,c
  9309  005322  D7ED               	goto	l11648
  9310                           
  9311                           ;GPS.c: 260: };GPS.c: 261: if(gga_buffer[21] == 'N')
  9312  005324  0E4E               	movlw	78
  9313  005326  0103               	movlb	3	; () banked
  9314  005328  1915               	xorwf	(_gga_buffer+21)& (0+255),w,b
  9315  00532A  A4D8               	btfss	status,2,c
  9316  00532C  D004               	goto	l11660
  9317                           
  9318                           ; BSR set to: 3
  9319                           ;GPS.c: 262: {;GPS.c: 263: rawLatitude[0] = '0';
  9320  00532E  0E30               	movlw	48
  9321  005330  0101               	movlb	1	; () banked
  9322  005332  6FBE               	movwf	_rawLatitude& (0+255),b
  9323                           
  9324                           ;GPS.c: 264: }
  9325  005334  0012               	return	
  9326  005336                     l11660:
  9327                           
  9328                           ; BSR set to: 3
  9329                           ;GPS.c: 265: else;GPS.c: 266: {;GPS.c: 267: rawLatitude[0] = '-';
  9330  005336  0E2D               	movlw	45
  9331  005338  0101               	movlb	1	; () banked
  9332  00533A  6FBE               	movwf	_rawLatitude& (0+255),b
  9333                           
  9334                           ; BSR set to: 1
  9335  00533C  0012               	return		;funcret
  9336  00533E                     __end_of_get_latitude:
  9337                           	callstack 0
  9338                           
  9339 ;; *************** function _get_gpstime *****************
  9340 ;; Defined at:
  9341 ;;		line 229 in file "bibliotecas/GPS.c"
  9342 ;; Parameters:    Size  Location     Type
  9343 ;;		None
  9344 ;; Auto vars:     Size  Location     Type
  9345 ;;  time_buffer    15    0        unsigned char [15]
  9346 ;;  index           1    9[COMRAM] unsigned char 
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  1    wreg      void 
  9349 ;; Registers used:
  9350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9351 ;; Tracked objects:
  9352 ;;		On entry : 0/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9356 ;;      Params:         0       0       0       0       0       0       0       0       0
  9357 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9359 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9360 ;;Total ram usage:        1 bytes
  9361 ;; Hardware stack levels used:    1
  9362 ;; Hardware stack levels required when called:    2
  9363 ;; This function calls:
  9364 ;;		Nothing
  9365 ;; This function is called by:
  9366 ;;		_gps
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           	psect	text62
  9371  005882                     __ptext62:
  9372                           	callstack 0
  9373  005882                     _get_gpstime:
  9374                           	callstack 27
  9375                           
  9376                           ;GPS.c: 231: unsigned char index;;GPS.c: 232: unsigned char time_buffer[15];;GPS.c: 236:
      +                           for(index = 0; index<6; index++)
  9377                           
  9378                           ; BSR set to: 1
  9379                           ;incstack = 0
  9380  005882  0E00               	movlw	0
  9381  005884  6E0A               	movwf	get_gpstime@index^0,c
  9382  005886                     l11636:
  9383                           
  9384                           ;GPS.c: 237: {;GPS.c: 238: rawTime[index] = gga_buffer[index];
  9385  005886  0E00               	movlw	low _gga_buffer
  9386  005888  240A               	addwf	get_gpstime@index^0,w,c
  9387  00588A  6ED9               	movwf	fsr2l,c
  9388  00588C  6ADA               	clrf	fsr2h,c
  9389  00588E  0E03               	movlw	high _gga_buffer
  9390  005890  22DA               	addwfc	fsr2h,f,c
  9391  005892  0ED1               	movlw	low _rawTime
  9392  005894  240A               	addwf	get_gpstime@index^0,w,c
  9393  005896  6EE1               	movwf	fsr1l,c
  9394  005898  6AE2               	clrf	fsr1h,c
  9395  00589A  0E01               	movlw	high _rawTime
  9396  00589C  22E2               	addwfc	fsr1h,f,c
  9397  00589E  CFDF FFE7          	movff	indf2,indf1
  9398  0058A2  2A0A               	incf	get_gpstime@index^0,f,c
  9399  0058A4  0E05               	movlw	5
  9400  0058A6  640A               	cpfsgt	get_gpstime@index^0,c
  9401  0058A8  D7EE               	goto	l11636
  9402  0058AA  0012               	return	
  9403  0058AC                     __end_of_get_gpstime:
  9404                           	callstack 0
  9405                           
  9406 ;; *************** function _get_fix *****************
  9407 ;; Defined at:
  9408 ;;		line 324 in file "bibliotecas/GPS.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;		None
  9411 ;; Auto vars:     Size  Location     Type
  9412 ;;  index           1   10[COMRAM] unsigned char 
  9413 ;;  index_fix       1    9[COMRAM] unsigned char 
  9414 ;; Return value:  Size  Location     Type
  9415 ;;                  1    wreg      void 
  9416 ;; Registers used:
  9417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9418 ;; Tracked objects:
  9419 ;;		On entry : 0/0
  9420 ;;		On exit  : 0/0
  9421 ;;		Unchanged: 0/0
  9422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9423 ;;      Params:         0       0       0       0       0       0       0       0       0
  9424 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9425 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9426 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9427 ;;Total ram usage:        2 bytes
  9428 ;; Hardware stack levels used:    1
  9429 ;; Hardware stack levels required when called:    2
  9430 ;; This function calls:
  9431 ;;		Nothing
  9432 ;; This function is called by:
  9433 ;;		_gps
  9434 ;; This function uses a non-reentrant model
  9435 ;;
  9436                           
  9437                           	psect	text63
  9438  005716                     __ptext63:
  9439                           	callstack 0
  9440  005716                     _get_fix:
  9441                           	callstack 27
  9442                           
  9443                           ;GPS.c: 326: unsigned char index_fix, index;;GPS.c: 328: index_fix = 0;
  9444                           
  9445                           ;incstack = 0
  9446  005716  0E00               	movlw	0
  9447  005718  6E0A               	movwf	get_fix@index_fix^0,c
  9448                           
  9449                           ;GPS.c: 330: for(index = 37; index<39; index++)
  9450  00571A  0E25               	movlw	37
  9451  00571C  6E0B               	movwf	get_fix@index^0,c
  9452  00571E                     l11618:
  9453                           
  9454                           ;GPS.c: 331: {;GPS.c: 332: rawFix[index_fix] = gga_buffer[index];
  9455  00571E  0E00               	movlw	low _gga_buffer
  9456  005720  240B               	addwf	get_fix@index^0,w,c
  9457  005722  6ED9               	movwf	fsr2l,c
  9458  005724  6ADA               	clrf	fsr2h,c
  9459  005726  0E03               	movlw	high _gga_buffer
  9460  005728  22DA               	addwfc	fsr2h,f,c
  9461  00572A  0EEA               	movlw	low _rawFix
  9462  00572C  240A               	addwf	get_fix@index_fix^0,w,c
  9463  00572E  6EE1               	movwf	fsr1l,c
  9464  005730  6AE2               	clrf	fsr1h,c
  9465  005732  0E01               	movlw	high _rawFix
  9466  005734  22E2               	addwfc	fsr1h,f,c
  9467  005736  CFDF FFE7          	movff	indf2,indf1
  9468                           
  9469                           ;GPS.c: 333: index_fix++;
  9470  00573A  2A0A               	incf	get_fix@index_fix^0,f,c
  9471  00573C  2A0B               	incf	get_fix@index^0,f,c
  9472  00573E  0E26               	movlw	38
  9473  005740  640B               	cpfsgt	get_fix@index^0,c
  9474  005742  D7ED               	goto	l11618
  9475  005744  0012               	return	
  9476  005746                     __end_of_get_fix:
  9477                           	callstack 0
  9478                           
  9479 ;; *************** function _fix *****************
  9480 ;; Defined at:
  9481 ;;		line 679 in file "bibliotecas/GPS.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;		None
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;		None
  9486 ;; Return value:  Size  Location     Type
  9487 ;;                  2    9[COMRAM] PTR unsigned char 
  9488 ;; Registers used:
  9489 ;;		wreg, status,2, status,0
  9490 ;; Tracked objects:
  9491 ;;		On entry : 0/0
  9492 ;;		On exit  : 0/0
  9493 ;;		Unchanged: 0/0
  9494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9495 ;;      Params:         2       0       0       0       0       0       0       0       0
  9496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9498 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9499 ;;Total ram usage:        2 bytes
  9500 ;; Hardware stack levels used:    1
  9501 ;; Hardware stack levels required when called:    2
  9502 ;; This function calls:
  9503 ;;		Nothing
  9504 ;; This function is called by:
  9505 ;;		_gps
  9506 ;;		_disparo_gravacao
  9507 ;;		_troca_de_tela
  9508 ;; This function uses a non-reentrant model
  9509 ;;
  9510                           
  9511                           	psect	text64
  9512  005C40                     __ptext64:
  9513                           	callstack 0
  9514  005C40                     _fix:
  9515                           	callstack 27
  9516                           
  9517                           ;GPS.c: 681: return rawFix;
  9518                           
  9519                           ;incstack = 0
  9520  005C40  0EEA               	movlw	low _rawFix
  9521  005C42  6E0A               	movwf	?_fix^0,c
  9522  005C44  0E01               	movlw	high _rawFix
  9523  005C46  6E0B               	movwf	(?_fix+1)^0,c
  9524  005C48  0012               	return		;funcret
  9525  005C4A                     __end_of_fix:
  9526                           	callstack 0
  9527                           
  9528 ;; *************** function _fprintf *****************
  9529 ;; Defined at:
  9530 ;;		line 1816 in file "bibliotecas/tff.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;  fil             2   81[BANK0 ] PTR struct _FIL
  9533 ;;		 -> fil(28), 
  9534 ;;  str             2   83[BANK0 ] PTR const unsigned char 
  9535 ;;		 -> STR_15(6), STR_14(10), STR_13(10), STR_12(15), 
  9536 ;; Auto vars:     Size  Location     Type
  9537 ;;  s              16   93[BANK0 ] unsigned char [16]
  9538 ;;  val             4  117[BANK0 ] unsigned long 
  9539 ;;  i               2  124[BANK0 ] int 
  9540 ;;  cc              2  122[BANK0 ] int 
  9541 ;;  w               2  113[BANK0 ] int 
  9542 ;;  res             2  109[BANK0 ] int 
  9543 ;;  c               1  126[BANK0 ] unsigned char 
  9544 ;;  arp             1  121[BANK0 ] PTR void [1]
  9545 ;;		 -> ?_fprintf(2), 
  9546 ;;  r               1  116[BANK0 ] unsigned char 
  9547 ;;  f               1  115[BANK0 ] unsigned char 
  9548 ;; Return value:  Size  Location     Type
  9549 ;;                  2   81[BANK0 ] int 
  9550 ;; Registers used:
  9551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9552 ;; Tracked objects:
  9553 ;;		On entry : 3F/0
  9554 ;;		On exit  : 3F/0
  9555 ;;		Unchanged: 0/0
  9556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9557 ;;      Params:         0      10       0       0       0       0       0       0       0
  9558 ;;      Locals:         0      34       0       0       0       0       0       0       0
  9559 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9560 ;;      Totals:         0      46       0       0       0       0       0       0       0
  9561 ;;Total ram usage:       46 bytes
  9562 ;; Hardware stack levels used:    1
  9563 ;; Hardware stack levels required when called:   13
  9564 ;; This function calls:
  9565 ;;		___lldiv
  9566 ;;		___llmod
  9567 ;;		___wmul
  9568 ;;		_fputc
  9569 ;;		_fputs
  9570 ;; This function is called by:
  9571 ;;		_escrita_sdcard
  9572 ;; This function uses a non-reentrant model
  9573 ;;
  9574                           
  9575                           	psect	text65
  9576  000F7E                     __ptext65:
  9577                           	callstack 0
  9578  000F7E                     _fprintf:
  9579                           	callstack 13
  9580                           
  9581                           ; BSR set to: 0
  9582                           ;tff.c: 1822: va_list arp;;tff.c: 1823: UCHAR c, f, r;;tff.c: 1824: ULONG val;;tff.c: 18
      +                          25: char s[16];;tff.c: 1826: int i, w, res, cc;;tff.c: 1829: *arp = __va_start();
  9583                           
  9584                           ;incstack = 0
  9585  000F7E  0EB5               	movlw	low (?_fprintf+4)
  9586  000F80  6FD9               	movwf	fprintf@arp& (0+255),b
  9587                           
  9588                           ; BSR set to: 0
  9589                           ;tff.c: 1831: for (cc = res = 0; cc != -1; res += cc) {
  9590  000F82  0E00               	movlw	0
  9591  000F84  6FCE               	movwf	(fprintf@res+1)& (0+255),b
  9592  000F86  0E00               	movlw	0
  9593  000F88  6FCD               	movwf	fprintf@res& (0+255),b
  9594  000F8A  C0CD  F0DA         	movff	fprintf@res,fprintf@cc
  9595  000F8E  C0CE  F0DB         	movff	fprintf@res+1,fprintf@cc+1
  9596  000F92                     l12478:
  9597                           
  9598                           ; BSR set to: 0
  9599  000F92  29DA               	incf	fprintf@cc& (0+255),w,b
  9600  000F94  E103               	bnz	l12482
  9601  000F96  29DB               	incf	(fprintf@cc+1)& (0+255),w,b
  9602  000F98  B4D8               	btfsc	status,2,c
  9603  000F9A  0012               	return	
  9604  000F9C                     l12482:
  9605                           
  9606                           ; BSR set to: 0
  9607                           ;tff.c: 1832: c = *str++;
  9608  000F9C  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9609  000FA0  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9610  000FA4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9611  000FA4  6AF8               	clrf	tblptru,c
  9612  000FA6                     	endif
  9613  000FA6                     	if	0	;tblptru may be non-zero
  9614  000FA6                     	endif
  9615  000FA6  0008               	tblrd		*
  9616  000FA8  CFF5 F0DE          	movff	tablat,fprintf@c
  9617                           
  9618                           ; BSR set to: 0
  9619  000FAC  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9620  000FAE  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9621                           
  9622                           ; BSR set to: 0
  9623                           ;tff.c: 1833: if (c == 0) break;
  9624  000FB0  51DE               	movf	fprintf@c& (0+255),w,b
  9625  000FB2  B4D8               	btfsc	status,2,c
  9626  000FB4  0012               	return	
  9627                           
  9628                           ; BSR set to: 0
  9629                           ;tff.c: 1834: if (c != '%') {
  9630  000FB6  0E25               	movlw	37
  9631  000FB8  19DE               	xorwf	fprintf@c& (0+255),w,b
  9632  000FBA  B4D8               	btfsc	status,2,c
  9633  000FBC  D017               	goto	l12498
  9634                           
  9635                           ; BSR set to: 0
  9636                           ;tff.c: 1835: cc = fputc(c, fil);
  9637  000FBE  C0DE  F0A4         	movff	fprintf@c,fputc@chr
  9638  000FC2  6BA5               	clrf	(fputc@chr+1)& (0+255),b
  9639  000FC4  C0B1  F0A6         	movff	fprintf@fil,fputc@fil
  9640  000FC8  C0B2  F0A7         	movff	fprintf@fil+1,fputc@fil+1
  9641  000FCC  EC8F  F02A         	call	_fputc	;wreg free
  9642  000FD0  C0A4  F0DA         	movff	?_fputc,fprintf@cc
  9643  000FD4  C0A5  F0DB         	movff	?_fputc+1,fprintf@cc+1
  9644                           
  9645                           ; BSR set to: 0
  9646                           ;tff.c: 1836: if (cc != -1) cc = 1;
  9647  000FD8  29DA               	incf	fprintf@cc& (0+255),w,b
  9648  000FDA  E103               	bnz	u14690
  9649  000FDC  29DB               	incf	(fprintf@cc+1)& (0+255),w,b
  9650  000FDE  B4D8               	btfsc	status,2,c
  9651  000FE0  D170               	goto	l12622
  9652  000FE2                     u14690:
  9653                           
  9654                           ; BSR set to: 0
  9655  000FE2  0E00               	movlw	0
  9656  000FE4  6FDB               	movwf	(fprintf@cc+1)& (0+255),b
  9657  000FE6  0E01               	movlw	1
  9658  000FE8  6FDA               	movwf	fprintf@cc& (0+255),b
  9659  000FEA  D16B               	goto	l12622
  9660  000FEC                     l12498:
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;tff.c: 1838: };tff.c: 1839: w = f = 0;
  9664  000FEC  0E00               	movlw	0
  9665  000FEE  6FD3               	movwf	fprintf@f& (0+255),b
  9666  000FF0  C0D3  F0D1         	movff	fprintf@f,fprintf@w
  9667  000FF4  6BD2               	clrf	(fprintf@w+1)& (0+255),b
  9668                           
  9669                           ; BSR set to: 0
  9670                           ;tff.c: 1840: c = *str++;
  9671  000FF6  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9672  000FFA  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9673  000FFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9674  000FFE  6AF8               	clrf	tblptru,c
  9675  001000                     	endif
  9676  001000                     	if	0	;tblptru may be non-zero
  9677  001000                     	endif
  9678  001000  0008               	tblrd		*
  9679  001002  CFF5 F0DE          	movff	tablat,fprintf@c
  9680                           
  9681                           ; BSR set to: 0
  9682  001006  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9683  001008  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9684                           
  9685                           ; BSR set to: 0
  9686                           ;tff.c: 1841: if (c == '0') {
  9687  00100A  0E30               	movlw	48
  9688  00100C  19DE               	xorwf	fprintf@c& (0+255),w,b
  9689  00100E  A4D8               	btfss	status,2,c
  9690  001010  D023               	goto	l12518
  9691                           
  9692                           ; BSR set to: 0
  9693                           ;tff.c: 1842: f = 1; c = *str++;
  9694  001012  0E01               	movlw	1
  9695  001014  6FD3               	movwf	fprintf@f& (0+255),b
  9696  001016                     l12508:
  9697                           
  9698                           ; BSR set to: 0
  9699  001016  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9700  00101A  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9701  00101E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9702  00101E  6AF8               	clrf	tblptru,c
  9703  001020                     	endif
  9704  001020                     	if	0	;tblptru may be non-zero
  9705  001020                     	endif
  9706  001020  0008               	tblrd		*
  9707  001022  CFF5 F0DE          	movff	tablat,fprintf@c
  9708                           
  9709                           ; BSR set to: 0
  9710  001026  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9711  001028  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9712  00102A  D016               	goto	l12518
  9713  00102C                     l12512:
  9714                           
  9715                           ; BSR set to: 0
  9716                           ;tff.c: 1845: w = w * 10 + (c - '0');
  9717  00102C  C0D1  F00A         	movff	fprintf@w,___wmul@multiplier
  9718  001030  C0D2  F00B         	movff	fprintf@w+1,___wmul@multiplier+1
  9719  001034  0E00               	movlw	0
  9720  001036  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  9721  001038  0E0A               	movlw	10
  9722  00103A  6E0C               	movwf	___wmul@multiplicand^0,c
  9723  00103C  EC92  F02C         	call	___wmul	;wreg free
  9724  001040  0100               	movlb	0	; () banked
  9725  001042  51DE               	movf	fprintf@c& (0+255),w,b
  9726  001044  260A               	addwf	?___wmul^0,f,c
  9727  001046  0E00               	movlw	0
  9728  001048  220B               	addwfc	(?___wmul+1)^0,f,c
  9729  00104A  0ED0               	movlw	208
  9730  00104C  240A               	addwf	?___wmul^0,w,c
  9731  00104E  6FD1               	movwf	fprintf@w& (0+255),b
  9732  001050  0EFF               	movlw	255
  9733  001052  200B               	addwfc	(?___wmul+1)^0,w,c
  9734  001054  6FD2               	movwf	(fprintf@w+1)& (0+255),b
  9735  001056  D7DF               	goto	l12508
  9736  001058                     l12518:
  9737                           
  9738                           ; BSR set to: 0
  9739  001058  0E2F               	movlw	47
  9740  00105A  65DE               	cpfsgt	fprintf@c& (0+255),b
  9741  00105C  D003               	goto	u14720
  9742                           
  9743                           ; BSR set to: 0
  9744  00105E  0E39               	movlw	57
  9745  001060  65DE               	cpfsgt	fprintf@c& (0+255),b
  9746  001062  D7E4               	goto	l12512
  9747  001064                     u14720:
  9748                           
  9749                           ; BSR set to: 0
  9750                           ;tff.c: 1847: };tff.c: 1848: if (c == 'l') {
  9751  001064  0E6C               	movlw	108
  9752  001066  19DE               	xorwf	fprintf@c& (0+255),w,b
  9753  001068  A4D8               	btfss	status,2,c
  9754  00106A  D00B               	goto	l12530
  9755                           
  9756                           ; BSR set to: 0
  9757                           ;tff.c: 1849: f |= 2; c = *str++;
  9758  00106C  83D3               	bsf	fprintf@f& (0+255),1,b
  9759                           
  9760                           ; BSR set to: 0
  9761  00106E  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9762  001072  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9763  001076                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9764  001076  6AF8               	clrf	tblptru,c
  9765  001078                     	endif
  9766  001078                     	if	0	;tblptru may be non-zero
  9767  001078                     	endif
  9768  001078  0008               	tblrd		*
  9769  00107A  CFF5 F0DE          	movff	tablat,fprintf@c
  9770                           
  9771                           ; BSR set to: 0
  9772  00107E  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9773  001080  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9774  001082                     l12530:
  9775                           
  9776                           ; BSR set to: 0
  9777                           ;tff.c: 1850: };tff.c: 1851: if (c == 's') {
  9778  001082  0E73               	movlw	115
  9779  001084  19DE               	xorwf	fprintf@c& (0+255),w,b
  9780  001086  A4D8               	btfss	status,2,c
  9781  001088  D014               	goto	l12536
  9782                           
  9783                           ; BSR set to: 0
  9784                           ;tff.c: 1852: cc = fputs((*(char* *)__va_arg((*(char* **)arp), (char*)0)), fil);
  9785  00108A  51D9               	movf	fprintf@arp& (0+255),w,b
  9786  00108C  6ED9               	movwf	fsr2l,c
  9787  00108E  6ADA               	clrf	fsr2h,c
  9788  001090  CFDE F0AB          	movff	postinc2,fputs@str
  9789  001094  CFDD F0AC          	movff	postdec2,fputs@str+1
  9790  001098  C0B1  F0AD         	movff	fprintf@fil,fputs@fil
  9791  00109C  C0B2  F0AE         	movff	fprintf@fil+1,fputs@fil+1
  9792  0010A0  EC37  F028         	call	_fputs	;wreg free
  9793  0010A4  C0AB  F0DA         	movff	?_fputs,fprintf@cc
  9794  0010A8  C0AC  F0DB         	movff	?_fputs+1,fprintf@cc+1
  9795                           
  9796                           ; BSR set to: 0
  9797  0010AC  0E02               	movlw	2
  9798  0010AE  27D9               	addwf	fprintf@arp& (0+255),f,b
  9799                           
  9800                           ;tff.c: 1853: continue;
  9801  0010B0  D108               	goto	l12622
  9802  0010B2                     l12536:
  9803                           
  9804                           ; BSR set to: 0
  9805                           ;tff.c: 1854: };tff.c: 1855: if (c == 'c') {
  9806  0010B2  0E63               	movlw	99
  9807  0010B4  19DE               	xorwf	fprintf@c& (0+255),w,b
  9808  0010B6  A4D8               	btfss	status,2,c
  9809  0010B8  D01B               	goto	l12546
  9810                           
  9811                           ; BSR set to: 0
  9812                           ;tff.c: 1856: cc = fputc((*(char *)__va_arg((*(char **)arp), (char)0)), fil);
  9813  0010BA  51D9               	movf	fprintf@arp& (0+255),w,b
  9814  0010BC  6ED9               	movwf	fsr2l,c
  9815  0010BE  6ADA               	clrf	fsr2h,c
  9816  0010C0  50DF               	movf	indf2,w,c
  9817  0010C2  6FBB               	movwf	??_fprintf& (0+255),b
  9818  0010C4  51BB               	movf	??_fprintf& (0+255),w,b
  9819  0010C6  6FA4               	movwf	fputc@chr& (0+255),b
  9820  0010C8  6BA5               	clrf	(fputc@chr+1)& (0+255),b
  9821  0010CA  C0B1  F0A6         	movff	fprintf@fil,fputc@fil
  9822  0010CE  C0B2  F0A7         	movff	fprintf@fil+1,fputc@fil+1
  9823  0010D2  EC8F  F02A         	call	_fputc	;wreg free
  9824  0010D6  C0A4  F0DA         	movff	?_fputc,fprintf@cc
  9825  0010DA  C0A5  F0DB         	movff	?_fputc+1,fprintf@cc+1
  9826                           
  9827                           ; BSR set to: 0
  9828  0010DE  0E02               	movlw	2
  9829  0010E0  27D9               	addwf	fprintf@arp& (0+255),f,b
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;tff.c: 1857: if (cc != -1) cc = 1;
  9833  0010E2  29DA               	incf	fprintf@cc& (0+255),w,b
  9834  0010E4  E104               	bnz	u14760
  9835  0010E6  29DB               	incf	(fprintf@cc+1)& (0+255),w,b
  9836  0010E8  A4D8               	btfss	status,2,c
  9837  0010EA  D77B               	goto	u14690
  9838  0010EC  D0EA               	goto	l12622
  9839  0010EE                     u14760:
  9840  0010EE  D779               	goto	u14690
  9841  0010F0                     l12546:
  9842                           
  9843                           ; BSR set to: 0
  9844                           ;tff.c: 1859: };tff.c: 1860: r = 0;
  9845  0010F0  0E00               	movlw	0
  9846  0010F2  6FD4               	movwf	fprintf@r& (0+255),b
  9847                           
  9848                           ; BSR set to: 0
  9849                           ;tff.c: 1861: if (c == 'd') r = 10;
  9850  0010F4  0E64               	movlw	100
  9851  0010F6  19DE               	xorwf	fprintf@c& (0+255),w,b
  9852  0010F8  A4D8               	btfss	status,2,c
  9853  0010FA  D002               	goto	l12552
  9854                           
  9855                           ; BSR set to: 0
  9856  0010FC  0E0A               	movlw	10
  9857  0010FE  6FD4               	movwf	fprintf@r& (0+255),b
  9858  001100                     l12552:
  9859                           
  9860                           ; BSR set to: 0
  9861                           ;tff.c: 1862: if (c == 'u') r = 10;
  9862  001100  0E75               	movlw	117
  9863  001102  19DE               	xorwf	fprintf@c& (0+255),w,b
  9864  001104  A4D8               	btfss	status,2,c
  9865  001106  D002               	goto	l12556
  9866                           
  9867                           ; BSR set to: 0
  9868  001108  0E0A               	movlw	10
  9869  00110A  6FD4               	movwf	fprintf@r& (0+255),b
  9870  00110C                     l12556:
  9871                           
  9872                           ; BSR set to: 0
  9873                           ;tff.c: 1863: if (c == 'X') r = 16;
  9874  00110C  0E58               	movlw	88
  9875  00110E  19DE               	xorwf	fprintf@c& (0+255),w,b
  9876  001110  A4D8               	btfss	status,2,c
  9877  001112  D002               	goto	l1274
  9878                           
  9879                           ; BSR set to: 0
  9880  001114  0E10               	movlw	16
  9881  001116  6FD4               	movwf	fprintf@r& (0+255),b
  9882  001118                     l1274:
  9883                           
  9884                           ; BSR set to: 0
  9885                           ;tff.c: 1864: if (r == 0) break;
  9886  001118  51D4               	movf	fprintf@r& (0+255),w,b
  9887  00111A  B4D8               	btfsc	status,2,c
  9888  00111C  0012               	return	
  9889                           
  9890                           ; BSR set to: 0
  9891                           ;tff.c: 1865: if (f & 2) {
  9892  00111E  A3D3               	btfss	fprintf@f& (0+255),1,b
  9893  001120  D00D               	goto	l12566
  9894                           
  9895                           ; BSR set to: 0
  9896                           ;tff.c: 1866: val = (ULONG)(*(long *)__va_arg((*(long **)arp), (long)0));
  9897  001122  51D9               	movf	fprintf@arp& (0+255),w,b
  9898  001124  6ED9               	movwf	fsr2l,c
  9899  001126  6ADA               	clrf	fsr2h,c
  9900  001128  CFDE F0D5          	movff	postinc2,fprintf@val
  9901  00112C  CFDE F0D6          	movff	postinc2,fprintf@val+1
  9902  001130  CFDE F0D7          	movff	postinc2,fprintf@val+2
  9903  001134  CFDE F0D8          	movff	postinc2,fprintf@val+3
  9904                           
  9905                           ; BSR set to: 0
  9906  001138  0E04               	movlw	4
  9907  00113A  D01F               	goto	L1
  9908  00113C                     l12566:
  9909                           
  9910                           ; BSR set to: 0
  9911                           ;tff.c: 1868: val = (c == 'd') ? (ULONG)(long)(*(int *)__va_arg((*(int **)arp), (int)0))
      +                           : (ULONG)(*(unsigned int *)__va_arg((*(unsigned int **)arp), (unsigned int)0));
  9912  00113C  0E64               	movlw	100
  9913  00113E  19DE               	xorwf	fprintf@c& (0+255),w,b
  9914  001140  B4D8               	btfsc	status,2,c
  9915  001142  D00E               	goto	l12572
  9916                           
  9917                           ; BSR set to: 0
  9918  001144  51D9               	movf	fprintf@arp& (0+255),w,b
  9919  001146  6ED9               	movwf	fsr2l,c
  9920  001148  6ADA               	clrf	fsr2h,c
  9921  00114A  CFDE F0BB          	movff	postinc2,??_fprintf
  9922  00114E  CFDD F0BC          	movff	postdec2,??_fprintf+1
  9923  001152  C0BB  F0D5         	movff	??_fprintf,fprintf@val
  9924  001156  C0BC  F0D6         	movff	??_fprintf+1,fprintf@val+1
  9925  00115A  6BD7               	clrf	(fprintf@val+2)& (0+255),b
  9926  00115C  6BD8               	clrf	(fprintf@val+3)& (0+255),b
  9927  00115E  D00C               	goto	l12574
  9928  001160                     l12572:
  9929                           
  9930                           ; BSR set to: 0
  9931  001160  51D9               	movf	fprintf@arp& (0+255),w,b
  9932  001162  6ED9               	movwf	fsr2l,c
  9933  001164  6ADA               	clrf	fsr2h,c
  9934  001166  CFDE F0D5          	movff	postinc2,fprintf@val
  9935  00116A  CFDD F0D6          	movff	postdec2,fprintf@val+1
  9936  00116E  0E00               	movlw	0
  9937  001170  BFD6               	btfsc	(fprintf@val+1)& (0+255),7,b
  9938  001172  0EFF               	movlw	-1
  9939  001174  6FD7               	movwf	(fprintf@val+2)& (0+255),b
  9940  001176  6FD8               	movwf	(fprintf@val+3)& (0+255),b
  9941  001178                     l12574:
  9942                           
  9943                           ; BSR set to: 0
  9944  001178  0E02               	movlw	2
  9945  00117A                     L1:
  9946  00117A  27D9               	addwf	fprintf@arp& (0+255),f,b
  9947                           
  9948                           ; BSR set to: 0
  9949                           ;tff.c: 1869: };tff.c: 1871: if (c == 'd') {
  9950  00117C  0E64               	movlw	100
  9951  00117E  19DE               	xorwf	fprintf@c& (0+255),w,b
  9952  001180  A4D8               	btfss	status,2,c
  9953  001182  D00E               	goto	l12584
  9954                           
  9955                           ; BSR set to: 0
  9956                           ;tff.c: 1872: if (val >= 0x80000000) {
  9957  001184  0E80               	movlw	128
  9958  001186  5DD8               	subwf	(fprintf@val+3)& (0+255),w,b
  9959  001188  A0D8               	btfss	status,0,c
  9960  00118A  D00A               	goto	l12584
  9961                           
  9962                           ; BSR set to: 0
  9963                           ;tff.c: 1873: val = 0 - val;
  9964  00118C  6DD5               	negf	fprintf@val& (0+255),b
  9965  00118E  1FD6               	comf	(fprintf@val+1)& (0+255),f,b
  9966  001190  B0D8               	btfsc	status,0,c
  9967  001192  2BD6               	incf	(fprintf@val+1)& (0+255),f,b
  9968  001194  1FD7               	comf	(fprintf@val+2)& (0+255),f,b
  9969  001196  B0D8               	btfsc	status,0,c
  9970  001198  2BD7               	incf	(fprintf@val+2)& (0+255),f,b
  9971  00119A  0E00               	movlw	0
  9972  00119C  57D8               	subfwb	(fprintf@val+3)& (0+255),f,b
  9973                           
  9974                           ; BSR set to: 0
  9975                           ;tff.c: 1874: f |= 4;
  9976  00119E  85D3               	bsf	fprintf@f& (0+255),2,b
  9977  0011A0                     l12584:
  9978                           
  9979                           ; BSR set to: 0
  9980                           ;tff.c: 1875: };tff.c: 1876: };tff.c: 1877: i = sizeof(s) - 1; s[i] = 0;
  9981  0011A0  0E00               	movlw	0
  9982  0011A2  6FDD               	movwf	(fprintf@i+1)& (0+255),b
  9983  0011A4  0E0F               	movlw	15
  9984  0011A6  6FDC               	movwf	fprintf@i& (0+255),b
  9985                           
  9986                           ; BSR set to: 0
  9987  0011A8  0E00               	movlw	0
  9988  0011AA  6FCC               	movwf	(fprintf@s+15)& (0+255),b
  9989  0011AC                     l12588:
  9990                           
  9991                           ; BSR set to: 0
  9992                           ;tff.c: 1879: c = (UCHAR)(val % r + '0');
  9993  0011AC  C0D5  F00A         	movff	fprintf@val,___llmod@dividend
  9994  0011B0  C0D6  F00B         	movff	fprintf@val+1,___llmod@dividend+1
  9995  0011B4  C0D7  F00C         	movff	fprintf@val+2,___llmod@dividend+2
  9996  0011B8  C0D8  F00D         	movff	fprintf@val+3,___llmod@dividend+3
  9997  0011BC  51D4               	movf	fprintf@r& (0+255),w,b
  9998  0011BE  6E0E               	movwf	___llmod@divisor^0,c
  9999  0011C0  6A0F               	clrf	(___llmod@divisor+1)^0,c
 10000  0011C2  6A10               	clrf	(___llmod@divisor+2)^0,c
 10001  0011C4  6A11               	clrf	(___llmod@divisor+3)^0,c
 10002  0011C6  ECC0  F026         	call	___llmod	;wreg free
 10003  0011CA  500A               	movf	?___llmod^0,w,c
 10004  0011CC  0F30               	addlw	48
 10005  0011CE  0100               	movlb	0	; () banked
 10006  0011D0  6FDE               	movwf	fprintf@c& (0+255),b
 10007                           
 10008                           ; BSR set to: 0
 10009                           ;tff.c: 1880: if (c > '9') c += 7;
 10010  0011D2  0E39               	movlw	57
 10011  0011D4  65DE               	cpfsgt	fprintf@c& (0+255),b
 10012  0011D6  D002               	goto	l12594
 10013                           
 10014                           ; BSR set to: 0
 10015  0011D8  0E07               	movlw	7
 10016  0011DA  27DE               	addwf	fprintf@c& (0+255),f,b
 10017  0011DC                     l12594:
 10018                           
 10019                           ; BSR set to: 0
 10020                           ;tff.c: 1881: s[--i] = c;
 10021  0011DC  07DC               	decf	fprintf@i& (0+255),f,b
 10022  0011DE  A0D8               	btfss	status,0,c
 10023  0011E0  07DD               	decf	(fprintf@i+1)& (0+255),f,b
 10024  0011E2  51DC               	movf	fprintf@i& (0+255),w,b
 10025  0011E4  0FBD               	addlw	low fprintf@s
 10026  0011E6  6ED9               	movwf	fsr2l,c
 10027  0011E8  6ADA               	clrf	fsr2h,c
 10028  0011EA  C0DE  FFDF         	movff	fprintf@c,indf2
 10029                           
 10030                           ; BSR set to: 0
 10031                           ;tff.c: 1882: val /= r;
 10032  0011EE  C0D5  F00A         	movff	fprintf@val,___lldiv@dividend
 10033  0011F2  C0D6  F00B         	movff	fprintf@val+1,___lldiv@dividend+1
 10034  0011F6  C0D7  F00C         	movff	fprintf@val+2,___lldiv@dividend+2
 10035  0011FA  C0D8  F00D         	movff	fprintf@val+3,___lldiv@dividend+3
 10036  0011FE  51D4               	movf	fprintf@r& (0+255),w,b
 10037  001200  6E0E               	movwf	___lldiv@divisor^0,c
 10038  001202  6A0F               	clrf	(___lldiv@divisor+1)^0,c
 10039  001204  6A10               	clrf	(___lldiv@divisor+2)^0,c
 10040  001206  6A11               	clrf	(___lldiv@divisor+3)^0,c
 10041  001208  ECF1  F024         	call	___lldiv	;wreg free
 10042  00120C  C00A  F0D5         	movff	?___lldiv,fprintf@val
 10043  001210  C00B  F0D6         	movff	?___lldiv+1,fprintf@val+1
 10044  001214  C00C  F0D7         	movff	?___lldiv+2,fprintf@val+2
 10045  001218  C00D  F0D8         	movff	?___lldiv+3,fprintf@val+3
 10046                           
 10047                           ;tff.c: 1883: } while (i && val);
 10048  00121C  0100               	movlb	0	; () banked
 10049  00121E  51DC               	movf	fprintf@i& (0+255),w,b
 10050  001220  11DD               	iorwf	(fprintf@i+1)& (0+255),w,b
 10051  001222  B4D8               	btfsc	status,2,c
 10052  001224  D006               	goto	u14870
 10053                           
 10054                           ; BSR set to: 0
 10055  001226  51D5               	movf	fprintf@val& (0+255),w,b
 10056  001228  11D6               	iorwf	(fprintf@val+1)& (0+255),w,b
 10057  00122A  11D7               	iorwf	(fprintf@val+2)& (0+255),w,b
 10058  00122C  11D8               	iorwf	(fprintf@val+3)& (0+255),w,b
 10059  00122E  A4D8               	btfss	status,2,c
 10060  001230  D7BD               	goto	l12588
 10061  001232                     u14870:
 10062                           
 10063                           ; BSR set to: 0
 10064                           ;tff.c: 1884: if (i && (f & 4)) s[--i] = '-';
 10065  001232  51DC               	movf	fprintf@i& (0+255),w,b
 10066  001234  11DD               	iorwf	(fprintf@i+1)& (0+255),w,b
 10067  001236  A4D8               	btfss	status,2,c
 10068                           
 10069                           ; BSR set to: 0
 10070  001238  A5D3               	btfss	fprintf@f& (0+255),2,b
 10071  00123A  D009               	goto	l12608
 10072                           
 10073                           ; BSR set to: 0
 10074  00123C  07DC               	decf	fprintf@i& (0+255),f,b
 10075  00123E  A0D8               	btfss	status,0,c
 10076  001240  07DD               	decf	(fprintf@i+1)& (0+255),f,b
 10077  001242  51DC               	movf	fprintf@i& (0+255),w,b
 10078  001244  0FBD               	addlw	low fprintf@s
 10079  001246  6ED9               	movwf	fsr2l,c
 10080  001248  6ADA               	clrf	fsr2h,c
 10081  00124A  0E2D               	movlw	45
 10082  00124C  6EDF               	movwf	indf2,c
 10083  00124E                     l12608:
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;tff.c: 1885: w = sizeof(s) - 1 - w;
 10087  00124E  51D1               	movf	fprintf@w& (0+255),w,b
 10088  001250  080F               	sublw	15
 10089  001252  6FD1               	movwf	fprintf@w& (0+255),b
 10090  001254  51D2               	movf	(fprintf@w+1)& (0+255),w,b
 10091  001256  A0D8               	btfss	status,0,c
 10092  001258  2AE8               	incf	wreg,f,c
 10093  00125A  0800               	sublw	0
 10094  00125C  6FD2               	movwf	(fprintf@w+1)& (0+255),b
 10095                           
 10096                           ;tff.c: 1886: while (i && i > w) s[--i] = (f & 1) ? '0' : ' ';
 10097  00125E  D013               	goto	l12616
 10098  001260                     l1291:
 10099                           
 10100                           ; BSR set to: 0
 10101  001260  B1D3               	btfsc	fprintf@f& (0+255),0,b
 10102  001262  D004               	goto	l12612
 10103                           
 10104                           ; BSR set to: 0
 10105  001264  0E00               	movlw	0
 10106  001266  6FD0               	movwf	(_fprintf$2226+1)& (0+255),b
 10107  001268  0E20               	movlw	32
 10108  00126A  D003               	goto	L2
 10109  00126C                     l12612:
 10110                           
 10111                           ; BSR set to: 0
 10112  00126C  0E00               	movlw	0
 10113  00126E  6FD0               	movwf	(_fprintf$2226+1)& (0+255),b
 10114  001270  0E30               	movlw	48
 10115  001272                     L2:
 10116  001272  6FCF               	movwf	_fprintf$2226& (0+255),b
 10117                           
 10118                           ; BSR set to: 0
 10119  001274  07DC               	decf	fprintf@i& (0+255),f,b
 10120  001276  A0D8               	btfss	status,0,c
 10121  001278  07DD               	decf	(fprintf@i+1)& (0+255),f,b
 10122  00127A  51DC               	movf	fprintf@i& (0+255),w,b
 10123  00127C  0FBD               	addlw	low fprintf@s
 10124  00127E  6ED9               	movwf	fsr2l,c
 10125  001280  6ADA               	clrf	fsr2h,c
 10126  001282  C0CF  FFDF         	movff	_fprintf$2226,indf2
 10127  001286                     l12616:
 10128                           
 10129                           ; BSR set to: 0
 10130  001286  51DC               	movf	fprintf@i& (0+255),w,b
 10131  001288  11DD               	iorwf	(fprintf@i+1)& (0+255),w,b
 10132  00128A  B4D8               	btfsc	status,2,c
 10133  00128C  D00A               	goto	u14920
 10134                           
 10135                           ; BSR set to: 0
 10136  00128E  51DC               	movf	fprintf@i& (0+255),w,b
 10137  001290  5DD1               	subwf	fprintf@w& (0+255),w,b
 10138  001292  51D2               	movf	(fprintf@w+1)& (0+255),w,b
 10139  001294  0A80               	xorlw	128
 10140  001296  6FBB               	movwf	??_fprintf& (0+255),b
 10141  001298  51DD               	movf	(fprintf@i+1)& (0+255),w,b
 10142  00129A  0A80               	xorlw	128
 10143  00129C  59BB               	subwfb	??_fprintf& (0+255),w,b
 10144  00129E  A0D8               	btfss	status,0,c
 10145  0012A0  D7DF               	goto	l1291
 10146  0012A2                     u14920:
 10147                           
 10148                           ; BSR set to: 0
 10149                           ;tff.c: 1887: cc = fputs(&s[i], fil);
 10150  0012A2  51DC               	movf	fprintf@i& (0+255),w,b
 10151  0012A4  0FBD               	addlw	low fprintf@s
 10152  0012A6  6FBB               	movwf	??_fprintf& (0+255),b
 10153  0012A8  C0BB  F0AB         	movff	??_fprintf,fputs@str
 10154  0012AC  6BAC               	clrf	(fputs@str+1)& (0+255),b
 10155  0012AE  C0B1  F0AD         	movff	fprintf@fil,fputs@fil
 10156  0012B2  C0B2  F0AE         	movff	fprintf@fil+1,fputs@fil+1
 10157  0012B6  EC37  F028         	call	_fputs	;wreg free
 10158  0012BA  C0AB  F0DA         	movff	?_fputs,fprintf@cc
 10159  0012BE  C0AC  F0DB         	movff	?_fputs+1,fprintf@cc+1
 10160  0012C2                     l12622:
 10161                           
 10162                           ; BSR set to: 0
 10163  0012C2  51DA               	movf	fprintf@cc& (0+255),w,b
 10164  0012C4  27CD               	addwf	fprintf@res& (0+255),f,b
 10165  0012C6  51DB               	movf	(fprintf@cc+1)& (0+255),w,b
 10166  0012C8  23CE               	addwfc	(fprintf@res+1)& (0+255),f,b
 10167  0012CA  D663               	goto	l12478
 10168  0012CC                     __end_of_fprintf:
 10169                           	callstack 0
 10170                           
 10171 ;; *************** function _fputs *****************
 10172 ;; Defined at:
 10173 ;;		line 1796 in file "bibliotecas/tff.c"
 10174 ;; Parameters:    Size  Location     Type
 10175 ;;  str             2   75[BANK0 ] PTR const unsigned char 
 10176 ;;		 -> fprintf@s(16), ?_fprintf(2), lo(13), lt(12), 
 10177 ;;		 -> vel(6), hora(7), 
 10178 ;;  fil             2   77[BANK0 ] PTR struct _FIL
 10179 ;;		 -> fil(28), 
 10180 ;; Auto vars:     Size  Location     Type
 10181 ;;  n               2   79[BANK0 ] int 
 10182 ;; Return value:  Size  Location     Type
 10183 ;;                  2   75[BANK0 ] int 
 10184 ;; Registers used:
 10185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10186 ;; Tracked objects:
 10187 ;;		On entry : 3F/0
 10188 ;;		On exit  : 3F/0
 10189 ;;		Unchanged: 0/0
 10190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10191 ;;      Params:         0       4       0       0       0       0       0       0       0
 10192 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10193 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10194 ;;      Totals:         1       6       0       0       0       0       0       0       0
 10195 ;;Total ram usage:        7 bytes
 10196 ;; Hardware stack levels used:    1
 10197 ;; Hardware stack levels required when called:   12
 10198 ;; This function calls:
 10199 ;;		_fputc
 10200 ;; This function is called by:
 10201 ;;		_fprintf
 10202 ;; This function uses a non-reentrant model
 10203 ;;
 10204                           
 10205                           	psect	text66
 10206  00506E                     __ptext66:
 10207                           	callstack 0
 10208  00506E                     _fputs:
 10209                           	callstack 13
 10210                           
 10211                           ; BSR set to: 0
 10212                           ;tff.c: 1801: int n;;tff.c: 1804: for (n = 0; *str; str++, n++) {
 10213                           
 10214                           ; BSR set to: 0
 10215                           ;incstack = 0
 10216  00506E  0E00               	movlw	0
 10217  005070  6FB0               	movwf	(fputs@n+1)& (0+255),b
 10218  005072  0E00               	movlw	0
 10219  005074  6FAF               	movwf	fputs@n& (0+255),b
 10220  005076  D01B               	goto	l12052
 10221  005078                     l12046:
 10222                           
 10223                           ; BSR set to: 0
 10224                           ;tff.c: 1805: if (fputc(*str, fil) == -1) return -1;
 10225  005078  C0AB  FFD9         	movff	fputs@str,fsr2l
 10226  00507C  C0AC  FFDA         	movff	fputs@str+1,fsr2h
 10227  005080  50DF               	movf	indf2,w,c
 10228  005082  6E4C               	movwf	??_fputs^0,c
 10229  005084  504C               	movf	??_fputs^0,w,c
 10230  005086  6FA4               	movwf	fputc@chr& (0+255),b
 10231  005088  6BA5               	clrf	(fputc@chr+1)& (0+255),b
 10232  00508A  C0AD  F0A6         	movff	fputs@fil,fputc@fil
 10233  00508E  C0AE  F0A7         	movff	fputs@fil+1,fputc@fil+1
 10234  005092  EC8F  F02A         	call	_fputc	;wreg free
 10235  005096  29A4               	incf	?_fputc& (0+255),w,b
 10236  005098  E106               	bnz	l12050
 10237  00509A  29A5               	incf	(?_fputc+1)& (0+255),w,b
 10238  00509C  A4D8               	btfss	status,2,c
 10239  00509E  D003               	goto	l12050
 10240                           
 10241                           ; BSR set to: 0
 10242  0050A0  69AB               	setf	?_fputs& (0+255),b
 10243  0050A2  69AC               	setf	(?_fputs+1)& (0+255),b
 10244  0050A4  0012               	return	
 10245  0050A6                     l12050:
 10246                           
 10247                           ; BSR set to: 0
 10248  0050A6  4BAB               	infsnz	fputs@str& (0+255),f,b
 10249  0050A8  2BAC               	incf	(fputs@str+1)& (0+255),f,b
 10250  0050AA  4BAF               	infsnz	fputs@n& (0+255),f,b
 10251  0050AC  2BB0               	incf	(fputs@n+1)& (0+255),f,b
 10252  0050AE                     l12052:
 10253                           
 10254                           ; BSR set to: 0
 10255  0050AE  C0AB  FFD9         	movff	fputs@str,fsr2l
 10256  0050B2  C0AC  FFDA         	movff	fputs@str+1,fsr2h
 10257  0050B6  50DF               	movf	indf2,w,c
 10258  0050B8  A4D8               	btfss	status,2,c
 10259  0050BA  D7DE               	goto	l12046
 10260                           
 10261                           ; BSR set to: 0
 10262                           ;tff.c: 1806: };tff.c: 1807: return n;
 10263  0050BC  C0AF  F0AB         	movff	fputs@n,?_fputs
 10264  0050C0  C0B0  F0AC         	movff	fputs@n+1,?_fputs+1
 10265                           
 10266                           ; BSR set to: 0
 10267  0050C4  0012               	return		;funcret
 10268  0050C6                     __end_of_fputs:
 10269                           	callstack 0
 10270                           
 10271 ;; *************** function _fputc *****************
 10272 ;; Defined at:
 10273 ;;		line 1769 in file "bibliotecas/tff.c"
 10274 ;; Parameters:    Size  Location     Type
 10275 ;;  chr             2   68[BANK0 ] int 
 10276 ;;  fil             2   70[BANK0 ] PTR struct _FIL
 10277 ;;		 -> fil(28), 
 10278 ;; Auto vars:     Size  Location     Type
 10279 ;;  bw              2   73[BANK0 ] unsigned int 
 10280 ;;  c               1   72[BANK0 ] unsigned char 
 10281 ;; Return value:  Size  Location     Type
 10282 ;;                  2   68[BANK0 ] int 
 10283 ;; Registers used:
 10284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10285 ;; Tracked objects:
 10286 ;;		On entry : 3F/0
 10287 ;;		On exit  : 3F/0
 10288 ;;		Unchanged: 0/0
 10289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10290 ;;      Params:         0       4       0       0       0       0       0       0       0
 10291 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10292 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10293 ;;      Totals:         0       7       0       0       0       0       0       0       0
 10294 ;;Total ram usage:        7 bytes
 10295 ;; Hardware stack levels used:    1
 10296 ;; Hardware stack levels required when called:   11
 10297 ;; This function calls:
 10298 ;;		_f_write
 10299 ;; This function is called by:
 10300 ;;		_fputs
 10301 ;;		_fprintf
 10302 ;; This function uses a non-reentrant model
 10303 ;;
 10304                           
 10305                           	psect	text67
 10306  00551E                     __ptext67:
 10307                           	callstack 0
 10308  00551E                     _fputc:
 10309                           	callstack 13
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;tff.c: 1774: UINT bw;;tff.c: 1775: char c;;tff.c: 1781: if (!fil) {
 10313                           
 10314                           ; BSR set to: 0
 10315                           ;incstack = 0
 10316  00551E  51A6               	movf	fputc@fil& (0+255),w,b
 10317  005520  11A7               	iorwf	(fputc@fil+1)& (0+255),w,b
 10318  005522  A4D8               	btfss	status,2,c
 10319  005524  D005               	goto	l1241
 10320  005526                     u13270:
 10321                           
 10322                           ; BSR set to: 0
 10323                           ;tff.c: 1783: return chr;
 10324  005526  C0A4  F0A4         	movff	fputc@chr,?_fputc
 10325  00552A  C0A5  F0A5         	movff	fputc@chr+1,?_fputc+1
 10326  00552E  0012               	return	
 10327  005530                     l1241:
 10328                           
 10329                           ; BSR set to: 0
 10330                           ;tff.c: 1784: };tff.c: 1785: c = (char)chr;
 10331  005530  C0A4  F0A8         	movff	fputc@chr,fputc@c
 10332                           
 10333                           ; BSR set to: 0
 10334                           ;tff.c: 1786: f_write(fil, &c, 1, &bw);
 10335  005534  C0A6  F086         	movff	fputc@fil,f_write@fp
 10336  005538  C0A7  F087         	movff	fputc@fil+1,f_write@fp+1
 10337  00553C  0EA8               	movlw	low fputc@c
 10338  00553E  6F88               	movwf	f_write@buff& (0+255),b
 10339  005540  0E00               	movlw	0
 10340  005542  6F8A               	movwf	(f_write@btw+1)& (0+255),b
 10341  005544  0E01               	movlw	1
 10342  005546  6F89               	movwf	f_write@btw& (0+255),b
 10343  005548  0EA9               	movlw	low fputc@bw
 10344  00554A  6F8B               	movwf	f_write@bw& (0+255),b
 10345  00554C  EC09  F000         	call	_f_write	;wreg free
 10346                           
 10347                           ; BSR set to: 0
 10348                           ;tff.c: 1787: return bw ? chr : -1;
 10349  005550  51A9               	movf	fputc@bw& (0+255),w,b
 10350  005552  11AA               	iorwf	(fputc@bw+1)& (0+255),w,b
 10351  005554  A4D8               	btfss	status,2,c
 10352  005556  D7E7               	goto	u13270
 10353                           
 10354                           ; BSR set to: 0
 10355  005558  69A4               	setf	?_fputc& (0+255),b
 10356  00555A  69A5               	setf	(?_fputc+1)& (0+255),b
 10357                           
 10358                           ; BSR set to: 0
 10359  00555C  0012               	return		;funcret
 10360  00555E                     __end_of_fputc:
 10361                           	callstack 0
 10362                           
 10363 ;; *************** function _f_write *****************
 10364 ;; Defined at:
 10365 ;;		line 999 in file "bibliotecas/tff.c"
 10366 ;; Parameters:    Size  Location     Type
 10367 ;;  fp              2   38[BANK0 ] PTR struct _FIL
 10368 ;;		 -> fil(28), 
 10369 ;;  buff            1   40[BANK0 ] PTR const void 
 10370 ;;		 -> fputc@c(1), 
 10371 ;;  btw             2   41[BANK0 ] unsigned int 
 10372 ;;  bw              1   43[BANK0 ] PTR unsigned int 
 10373 ;;		 -> fputc@bw(2), 
 10374 ;; Auto vars:     Size  Location     Type
 10375 ;;  sect            4   58[BANK0 ] unsigned long 
 10376 ;;  wcnt            2   66[BANK0 ] unsigned int 
 10377 ;;  clust           2   64[BANK0 ] unsigned short 
 10378 ;;  cc              2   62[BANK0 ] unsigned int 
 10379 ;;  wbuff           1   57[BANK0 ] PTR const unsigned char 
 10380 ;;		 -> fputc@c(1), 
 10381 ;;  res             1   56[BANK0 ] enum E155
 10382 ;; Return value:  Size  Location     Type
 10383 ;;                  1    wreg      enum E155
 10384 ;; Registers used:
 10385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10386 ;; Tracked objects:
 10387 ;;		On entry : 3F/0
 10388 ;;		On exit  : 3F/0
 10389 ;;		Unchanged: 0/0
 10390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10391 ;;      Params:         0       6       0       0       0       0       0       0       0
 10392 ;;      Locals:         0      12       0       0       0       0       0       0       0
 10393 ;;      Temps:          0      12       0       0       0       0       0       0       0
 10394 ;;      Totals:         0      30       0       0       0       0       0       0       0
 10395 ;;Total ram usage:       30 bytes
 10396 ;; Hardware stack levels used:    1
 10397 ;; Hardware stack levels required when called:   10
 10398 ;; This function calls:
 10399 ;;		_clust2sect
 10400 ;;		_create_chain
 10401 ;;		_disk_write
 10402 ;;		_memcpy
 10403 ;;		_move_window
 10404 ;;		_validate
 10405 ;; This function is called by:
 10406 ;;		_fputc
 10407 ;; This function uses a non-reentrant model
 10408 ;;
 10409                           
 10410                           	psect	text68
 10411  000012                     __ptext68:
 10412                           	callstack 0
 10413  000012                     _f_write:
 10414                           	callstack 13
 10415                           
 10416                           ; BSR set to: 0
 10417                           ;tff.c: 1006: FRESULT res;;tff.c: 1007: DWORD sect;;tff.c: 1008: UINT wcnt, cc;;tff.c: 1
      +                          009: CLUST clust;;tff.c: 1010: const BYTE *wbuff = buff;
 10418                           
 10419                           ; BSR set to: 0
 10420                           ;incstack = 0
 10421  000012  C088  F099         	movff	f_write@buff,f_write@wbuff
 10422                           
 10423                           ; BSR set to: 0
 10424                           ;tff.c: 1013: *bw = 0;
 10425  000016  518B               	movf	f_write@bw& (0+255),w,b
 10426  000018  6ED9               	movwf	fsr2l,c
 10427  00001A  6ADA               	clrf	fsr2h,c
 10428  00001C  0E00               	movlw	0
 10429  00001E  6EDE               	movwf	postinc2,c
 10430  000020  0E00               	movlw	0
 10431  000022  6EDD               	movwf	postdec2,c
 10432                           
 10433                           ; BSR set to: 0
 10434                           ;tff.c: 1014: res = validate(fp->fs, fp->id);
 10435  000024  EE20 F004          	lfsr	2,4
 10436  000028  5186               	movf	f_write@fp& (0+255),w,b
 10437  00002A  26D9               	addwf	fsr2l,f,c
 10438  00002C  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10439  00002E  22DA               	addwfc	fsr2h,f,c
 10440  000030  CFDE F010          	movff	postinc2,validate@fs
 10441  000034  CFDD F011          	movff	postdec2,validate@fs+1
 10442  000038  C086  FFD9         	movff	f_write@fp,fsr2l
 10443  00003C  C087  FFDA         	movff	f_write@fp+1,fsr2h
 10444  000040  CFDE F012          	movff	postinc2,validate@id
 10445  000044  CFDD F013          	movff	postdec2,validate@id+1
 10446  000048  ECC3  F029         	call	_validate	;wreg free
 10447  00004C  0100               	movlb	0	; () banked
 10448  00004E  6F98               	movwf	f_write@res& (0+255),b
 10449                           
 10450                           ; BSR set to: 0
 10451                           ;tff.c: 1015: if (res != FR_OK) return res;
 10452  000050  5198               	movf	f_write@res& (0+255),w,b
 10453  000052  A4D8               	btfss	status,2,c
 10454  000054  0012               	return	
 10455                           
 10456                           ; BSR set to: 0
 10457                           ;tff.c: 1016: if (fp->flag & 0x80) return FR_RW_ERROR;
 10458  000056  EE20 F002          	lfsr	2,2
 10459  00005A  5186               	movf	f_write@fp& (0+255),w,b
 10460  00005C  26D9               	addwf	fsr2l,f,c
 10461  00005E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10462  000060  22DA               	addwfc	fsr2h,f,c
 10463  000062  BEDF               	btfsc	indf2,7,c
 10464  000064  0012               	return	
 10465                           
 10466                           ; BSR set to: 0
 10467                           ;tff.c: 1017: if (!(fp->flag & 0x02)) return FR_DENIED;
 10468  000066  EE20 F002          	lfsr	2,2
 10469  00006A  5186               	movf	f_write@fp& (0+255),w,b
 10470  00006C  26D9               	addwf	fsr2l,f,c
 10471  00006E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10472  000070  22DA               	addwfc	fsr2h,f,c
 10473  000072  A2DF               	btfss	indf2,1,c
 10474  000074  0012               	return	
 10475                           
 10476                           ; BSR set to: 0
 10477                           ;tff.c: 1018: if (fp->fsize + btw < fp->fsize) return FR_OK;
 10478  000076  EE20 F00A          	lfsr	2,10
 10479  00007A  5186               	movf	f_write@fp& (0+255),w,b
 10480  00007C  26D9               	addwf	fsr2l,f,c
 10481  00007E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10482  000080  22DA               	addwfc	fsr2h,f,c
 10483  000082  EE10 F00A          	lfsr	1,10
 10484  000086  5186               	movf	f_write@fp& (0+255),w,b
 10485  000088  26E1               	addwf	fsr1l,f,c
 10486  00008A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10487  00008C  22E2               	addwfc	fsr1h,f,c
 10488  00008E  CFE6 F090          	movff	postinc1,??_f_write+4
 10489  000092  CFE6 F091          	movff	postinc1,??_f_write+5
 10490  000096  CFE6 F092          	movff	postinc1,??_f_write+6
 10491  00009A  CFE6 F093          	movff	postinc1,??_f_write+7
 10492  00009E  5189               	movf	f_write@btw& (0+255),w,b
 10493  0000A0  2590               	addwf	(??_f_write+4)& (0+255),w,b
 10494  0000A2  6F94               	movwf	(??_f_write+8)& (0+255),b
 10495  0000A4  518A               	movf	(f_write@btw+1)& (0+255),w,b
 10496  0000A6  2191               	addwfc	(??_f_write+5)& (0+255),w,b
 10497  0000A8  6F95               	movwf	(??_f_write+9)& (0+255),b
 10498  0000AA  0E00               	movlw	0
 10499  0000AC  2192               	addwfc	(??_f_write+6)& (0+255),w,b
 10500  0000AE  6F96               	movwf	(??_f_write+10)& (0+255),b
 10501  0000B0  0E00               	movlw	0
 10502  0000B2  2193               	addwfc	(??_f_write+7)& (0+255),w,b
 10503  0000B4  6F97               	movwf	(??_f_write+11)& (0+255),b
 10504  0000B6  50DE               	movf	postinc2,w,c
 10505  0000B8  5D94               	subwf	(??_f_write+8)& (0+255),w,b
 10506  0000BA  50DE               	movf	postinc2,w,c
 10507  0000BC  5995               	subwfb	(??_f_write+9)& (0+255),w,b
 10508  0000BE  50DE               	movf	postinc2,w,c
 10509  0000C0  5996               	subwfb	(??_f_write+10)& (0+255),w,b
 10510  0000C2  50DE               	movf	postinc2,w,c
 10511  0000C4  5997               	subwfb	(??_f_write+11)& (0+255),w,b
 10512  0000C6  A0D8               	btfss	status,0,c
 10513  0000C8  0012               	return	
 10514  0000CA  D22D               	goto	l11248
 10515  0000CC                     l11172:
 10516                           
 10517                           ; BSR set to: 0
 10518                           ;tff.c: 1022: if ((fp->fptr % 512U) == 0) {
 10519  0000CC  EE20 F006          	lfsr	2,6
 10520  0000D0  5186               	movf	f_write@fp& (0+255),w,b
 10521  0000D2  26D9               	addwf	fsr2l,f,c
 10522  0000D4  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10523  0000D6  22DA               	addwfc	fsr2h,f,c
 10524  0000D8  0EFF               	movlw	255
 10525  0000DA  14DE               	andwf	postinc2,w,c
 10526  0000DC  6F8C               	movwf	??_f_write& (0+255),b
 10527  0000DE  0E01               	movlw	1
 10528  0000E0  14DE               	andwf	postinc2,w,c
 10529  0000E2  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10530  0000E4  0E00               	movlw	0
 10531  0000E6  14DE               	andwf	postinc2,w,c
 10532  0000E8  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10533  0000EA  0E00               	movlw	0
 10534  0000EC  14DE               	andwf	postinc2,w,c
 10535  0000EE  6F8F               	movwf	(??_f_write+3)& (0+255),b
 10536  0000F0  518C               	movf	??_f_write& (0+255),w,b
 10537  0000F2  118D               	iorwf	(??_f_write+1)& (0+255),w,b
 10538  0000F4  118E               	iorwf	(??_f_write+2)& (0+255),w,b
 10539  0000F6  118F               	iorwf	(??_f_write+3)& (0+255),w,b
 10540  0000F8  A4D8               	btfss	status,2,c
 10541  0000FA  D15E               	goto	l11224
 10542                           
 10543                           ; BSR set to: 0
 10544                           ;tff.c: 1023: if (fp->csect >= fp->fs->csize) {
 10545  0000FC  EE20 F004          	lfsr	2,4
 10546  000100  5186               	movf	f_write@fp& (0+255),w,b
 10547  000102  26D9               	addwf	fsr2l,f,c
 10548  000104  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10549  000106  22DA               	addwfc	fsr2h,f,c
 10550  000108  EE10 F01D          	lfsr	1,29
 10551  00010C  50DE               	movf	postinc2,w,c
 10552  00010E  26E1               	addwf	fsr1l,f,c
 10553  000110  50DD               	movf	postdec2,w,c
 10554  000112  22E2               	addwfc	fsr1h,f,c
 10555  000114  EE20 F003          	lfsr	2,3
 10556  000118  5186               	movf	f_write@fp& (0+255),w,b
 10557  00011A  26D9               	addwf	fsr2l,f,c
 10558  00011C  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10559  00011E  22DA               	addwfc	fsr2h,f,c
 10560  000120  50E6               	movf	postinc1,w,c
 10561  000122  5CDE               	subwf	postinc2,w,c
 10562  000124  A0D8               	btfss	status,0,c
 10563  000126  D06B               	goto	l11196
 10564                           
 10565                           ; BSR set to: 0
 10566                           ;tff.c: 1024: if (fp->fptr == 0) {
 10567  000128  EE20 F006          	lfsr	2,6
 10568  00012C  5186               	movf	f_write@fp& (0+255),w,b
 10569  00012E  26D9               	addwf	fsr2l,f,c
 10570  000130  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10571  000132  22DA               	addwfc	fsr2h,f,c
 10572  000134  50DE               	movf	postinc2,w,c
 10573  000136  10DE               	iorwf	postinc2,w,c
 10574  000138  10DE               	iorwf	postinc2,w,c
 10575  00013A  10DE               	iorwf	postinc2,w,c
 10576  00013C  A4D8               	btfss	status,2,c
 10577  00013E  D023               	goto	l11184
 10578                           
 10579                           ; BSR set to: 0
 10580                           ;tff.c: 1025: clust = fp->org_clust;
 10581  000140  EE20 F00E          	lfsr	2,14
 10582  000144  5186               	movf	f_write@fp& (0+255),w,b
 10583  000146  26D9               	addwf	fsr2l,f,c
 10584  000148  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10585  00014A  22DA               	addwfc	fsr2h,f,c
 10586  00014C  CFDE F0A0          	movff	postinc2,f_write@clust
 10587  000150  CFDD F0A1          	movff	postdec2,f_write@clust+1
 10588                           
 10589                           ; BSR set to: 0
 10590                           ;tff.c: 1026: if (clust == 0)
 10591  000154  51A0               	movf	f_write@clust& (0+255),w,b
 10592  000156  11A1               	iorwf	(f_write@clust+1)& (0+255),w,b
 10593  000158  A4D8               	btfss	status,2,c
 10594  00015A  D025               	goto	l11186
 10595                           
 10596                           ; BSR set to: 0
 10597                           ;tff.c: 1027: fp->org_clust = clust = create_chain(0);
 10598  00015C  0E00               	movlw	0
 10599  00015E  6F79               	movwf	(create_chain@clust+1)& (0+255),b
 10600  000160  0E00               	movlw	0
 10601  000162  6F78               	movwf	create_chain@clust& (0+255),b
 10602  000164  ECBB  F016         	call	_create_chain	;wreg free
 10603  000168  C078  F0A0         	movff	?_create_chain,f_write@clust
 10604  00016C  C079  F0A1         	movff	?_create_chain+1,f_write@clust+1
 10605  000170  EE20 F00E          	lfsr	2,14
 10606  000174  5186               	movf	f_write@fp& (0+255),w,b
 10607  000176  26D9               	addwf	fsr2l,f,c
 10608  000178  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10609  00017A  22DA               	addwfc	fsr2h,f,c
 10610  00017C  C0A0  FFDE         	movff	f_write@clust,postinc2
 10611  000180  C0A1  FFDD         	movff	f_write@clust+1,postdec2
 10612  000184  D010               	goto	l11186
 10613  000186                     l11184:
 10614                           
 10615                           ; BSR set to: 0
 10616                           ;tff.c: 1029: clust = create_chain(fp->curr_clust);
 10617  000186  EE20 F010          	lfsr	2,16
 10618  00018A  5186               	movf	f_write@fp& (0+255),w,b
 10619  00018C  26D9               	addwf	fsr2l,f,c
 10620  00018E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10621  000190  22DA               	addwfc	fsr2h,f,c
 10622  000192  CFDE F078          	movff	postinc2,create_chain@clust
 10623  000196  CFDD F079          	movff	postdec2,create_chain@clust+1
 10624  00019A  ECBB  F016         	call	_create_chain	;wreg free
 10625  00019E  C078  F0A0         	movff	?_create_chain,f_write@clust
 10626  0001A2  C079  F0A1         	movff	?_create_chain+1,f_write@clust+1
 10627  0001A6                     l11186:
 10628                           
 10629                           ; BSR set to: 0
 10630                           ;tff.c: 1030: };tff.c: 1031: if (clust == 0) break;
 10631  0001A6  51A0               	movf	f_write@clust& (0+255),w,b
 10632  0001A8  11A1               	iorwf	(f_write@clust+1)& (0+255),w,b
 10633  0001AA  B4D8               	btfsc	status,2,c
 10634  0001AC  D1C0               	goto	u12750
 10635                           
 10636                           ; BSR set to: 0
 10637                           ;tff.c: 1032: if (clust == 1 || clust >= fp->fs->max_clust) goto fw_error;
 10638  0001AE  05A0               	decf	f_write@clust& (0+255),w,b
 10639  0001B0  11A1               	iorwf	(f_write@clust+1)& (0+255),w,b
 10640  0001B2  B4D8               	btfsc	status,2,c
 10641  0001B4  D1EF               	goto	l11258
 10642                           
 10643                           ; BSR set to: 0
 10644  0001B6  EE20 F004          	lfsr	2,4
 10645  0001BA  5186               	movf	f_write@fp& (0+255),w,b
 10646  0001BC  26D9               	addwf	fsr2l,f,c
 10647  0001BE  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10648  0001C0  22DA               	addwfc	fsr2h,f,c
 10649  0001C2  EE10 F016          	lfsr	1,22
 10650  0001C6  50DE               	movf	postinc2,w,c
 10651  0001C8  26E1               	addwf	fsr1l,f,c
 10652  0001CA  50DD               	movf	postdec2,w,c
 10653  0001CC  22E2               	addwfc	fsr1h,f,c
 10654  0001CE  50E6               	movf	postinc1,w,c
 10655  0001D0  5DA0               	subwf	f_write@clust& (0+255),w,b
 10656  0001D2  50E6               	movf	postinc1,w,c
 10657  0001D4  59A1               	subwfb	(f_write@clust+1)& (0+255),w,b
 10658  0001D6  B0D8               	btfsc	status,0,c
 10659  0001D8  D1DD               	goto	l11258
 10660                           
 10661                           ; BSR set to: 0
 10662                           ;tff.c: 1033: fp->curr_clust = clust;
 10663  0001DA  EE20 F010          	lfsr	2,16
 10664  0001DE  5186               	movf	f_write@fp& (0+255),w,b
 10665  0001E0  26D9               	addwf	fsr2l,f,c
 10666  0001E2  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10667  0001E4  22DA               	addwfc	fsr2h,f,c
 10668  0001E6  C0A0  FFDE         	movff	f_write@clust,postinc2
 10669  0001EA  C0A1  FFDD         	movff	f_write@clust+1,postdec2
 10670                           
 10671                           ;tff.c: 1034: fp->csect = 0;
 10672  0001EE  EE20 F003          	lfsr	2,3
 10673  0001F2  5186               	movf	f_write@fp& (0+255),w,b
 10674  0001F4  26D9               	addwf	fsr2l,f,c
 10675  0001F6  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10676  0001F8  22DA               	addwfc	fsr2h,f,c
 10677  0001FA  0E00               	movlw	0
 10678  0001FC  6EDF               	movwf	indf2,c
 10679  0001FE                     l11196:
 10680                           
 10681                           ; BSR set to: 0
 10682                           ;tff.c: 1035: };tff.c: 1036: sect = clust2sect(fp->curr_clust) + fp->csect;
 10683  0001FE  EE20 F010          	lfsr	2,16
 10684  000202  5186               	movf	f_write@fp& (0+255),w,b
 10685  000204  26D9               	addwf	fsr2l,f,c
 10686  000206  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10687  000208  22DA               	addwfc	fsr2h,f,c
 10688  00020A  CFDE F016          	movff	postinc2,clust2sect@clust
 10689  00020E  CFDD F017          	movff	postdec2,clust2sect@clust+1
 10690  000212  EC01  F021         	call	_clust2sect	;wreg free
 10691  000216  0100               	movlb	0	; () banked
 10692  000218  EE20 F003          	lfsr	2,3
 10693  00021C  5186               	movf	f_write@fp& (0+255),w,b
 10694  00021E  26D9               	addwf	fsr2l,f,c
 10695  000220  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10696  000222  22DA               	addwfc	fsr2h,f,c
 10697  000224  50DF               	movf	indf2,w,c
 10698  000226  6F8C               	movwf	??_f_write& (0+255),b
 10699  000228  518C               	movf	??_f_write& (0+255),w,b
 10700  00022A  2416               	addwf	?_clust2sect^0,w,c
 10701  00022C  6F9A               	movwf	f_write@sect& (0+255),b
 10702  00022E  0E00               	movlw	0
 10703  000230  2017               	addwfc	(?_clust2sect+1)^0,w,c
 10704  000232  6F9B               	movwf	(f_write@sect+1)& (0+255),b
 10705  000234  0E00               	movlw	0
 10706  000236  2018               	addwfc	(?_clust2sect+2)^0,w,c
 10707  000238  6F9C               	movwf	(f_write@sect+2)& (0+255),b
 10708  00023A  0E00               	movlw	0
 10709  00023C  2019               	addwfc	(?_clust2sect+3)^0,w,c
 10710  00023E  6F9D               	movwf	(f_write@sect+3)& (0+255),b
 10711                           
 10712                           ; BSR set to: 0
 10713                           ;tff.c: 1037: cc = btw / 512U;
 10714  000240  C089  F08C         	movff	f_write@btw,??_f_write
 10715  000244  C08A  F08D         	movff	f_write@btw+1,??_f_write+1
 10716  000248  0E09               	movlw	9
 10717  00024A  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10718  00024C                     u12665:
 10719  00024C  90D8               	bcf	status,0,c
 10720  00024E  338D               	rrcf	(??_f_write+1)& (0+255),f,b
 10721  000250  338C               	rrcf	??_f_write& (0+255),f,b
 10722  000252  2F8E               	decfsz	(??_f_write+2)& (0+255),f,b
 10723  000254  D7FB               	goto	u12665
 10724  000256  C08C  F09E         	movff	??_f_write,f_write@cc
 10725  00025A  C08D  F09F         	movff	??_f_write+1,f_write@cc+1
 10726                           
 10727                           ; BSR set to: 0
 10728                           ;tff.c: 1038: if (cc) {
 10729  00025E  519E               	movf	f_write@cc& (0+255),w,b
 10730  000260  119F               	iorwf	(f_write@cc+1)& (0+255),w,b
 10731  000262  B4D8               	btfsc	status,2,c
 10732  000264  D06A               	goto	l11214
 10733                           
 10734                           ; BSR set to: 0
 10735                           ;tff.c: 1039: if (fp->csect + cc > fp->fs->csize)
 10736  000266  EE20 F003          	lfsr	2,3
 10737  00026A  5186               	movf	f_write@fp& (0+255),w,b
 10738  00026C  26D9               	addwf	fsr2l,f,c
 10739  00026E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10740  000270  22DA               	addwfc	fsr2h,f,c
 10741  000272  50DF               	movf	indf2,w,c
 10742  000274  6F8C               	movwf	??_f_write& (0+255),b
 10743  000276  518C               	movf	??_f_write& (0+255),w,b
 10744  000278  259E               	addwf	f_write@cc& (0+255),w,b
 10745  00027A  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10746  00027C  0E00               	movlw	0
 10747  00027E  219F               	addwfc	(f_write@cc+1)& (0+255),w,b
 10748  000280  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10749  000282  EE20 F004          	lfsr	2,4
 10750  000286  5186               	movf	f_write@fp& (0+255),w,b
 10751  000288  26D9               	addwf	fsr2l,f,c
 10752  00028A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10753  00028C  22DA               	addwfc	fsr2h,f,c
 10754  00028E  EE10 F01D          	lfsr	1,29
 10755  000292  50DE               	movf	postinc2,w,c
 10756  000294  26E1               	addwf	fsr1l,f,c
 10757  000296  50DD               	movf	postdec2,w,c
 10758  000298  22E2               	addwfc	fsr1h,f,c
 10759  00029A  50E7               	movf	indf1,w,c
 10760  00029C  6F8F               	movwf	(??_f_write+3)& (0+255),b
 10761  00029E  6B90               	clrf	(??_f_write+4)& (0+255),b
 10762  0002A0  518D               	movf	(??_f_write+1)& (0+255),w,b
 10763  0002A2  5D8F               	subwf	(??_f_write+3)& (0+255),w,b
 10764  0002A4  518E               	movf	(??_f_write+2)& (0+255),w,b
 10765  0002A6  5990               	subwfb	(??_f_write+4)& (0+255),w,b
 10766  0002A8  B0D8               	btfsc	status,0,c
 10767  0002AA  D01C               	goto	l11206
 10768                           
 10769                           ; BSR set to: 0
 10770                           ;tff.c: 1040: cc = fp->fs->csize - fp->csect;
 10771  0002AC  EE20 F004          	lfsr	2,4
 10772  0002B0  5186               	movf	f_write@fp& (0+255),w,b
 10773  0002B2  26D9               	addwf	fsr2l,f,c
 10774  0002B4  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10775  0002B6  22DA               	addwfc	fsr2h,f,c
 10776  0002B8  EE10 F01D          	lfsr	1,29
 10777  0002BC  50DE               	movf	postinc2,w,c
 10778  0002BE  26E1               	addwf	fsr1l,f,c
 10779  0002C0  50DD               	movf	postdec2,w,c
 10780  0002C2  22E2               	addwfc	fsr1h,f,c
 10781  0002C4  50E7               	movf	indf1,w,c
 10782  0002C6  6F8C               	movwf	??_f_write& (0+255),b
 10783  0002C8  EE20 F003          	lfsr	2,3
 10784  0002CC  5186               	movf	f_write@fp& (0+255),w,b
 10785  0002CE  26D9               	addwf	fsr2l,f,c
 10786  0002D0  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10787  0002D2  22DA               	addwfc	fsr2h,f,c
 10788  0002D4  50DF               	movf	indf2,w,c
 10789  0002D6  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10790  0002D8  518D               	movf	(??_f_write+1)& (0+255),w,b
 10791  0002DA  5D8C               	subwf	??_f_write& (0+255),w,b
 10792  0002DC  6F9E               	movwf	f_write@cc& (0+255),b
 10793  0002DE  6B9F               	clrf	(f_write@cc+1)& (0+255),b
 10794  0002E0  A0D8               	btfss	status,0,c
 10795  0002E2  079F               	decf	(f_write@cc+1)& (0+255),f,b
 10796  0002E4                     l11206:
 10797                           
 10798                           ; BSR set to: 0
 10799                           ;tff.c: 1041: if (disk_write(0, wbuff, sect, (BYTE)cc) != RES_OK)
 10800  0002E4  C099  F029         	movff	f_write@wbuff,disk_write@buff
 10801  0002E8  6A2A               	clrf	(disk_write@buff+1)^0,c
 10802  0002EA  C09A  F02B         	movff	f_write@sect,disk_write@sector
 10803  0002EE  C09B  F02C         	movff	f_write@sect+1,disk_write@sector+1
 10804  0002F2  C09C  F02D         	movff	f_write@sect+2,disk_write@sector+2
 10805  0002F6  C09D  F02E         	movff	f_write@sect+3,disk_write@sector+3
 10806  0002FA  C09E  F02F         	movff	f_write@cc,disk_write@count
 10807  0002FE  0E00               	movlw	0
 10808  000300  EC31  F029         	call	_disk_write
 10809  000304  0900               	iorlw	0
 10810  000306  A4D8               	btfss	status,2,c
 10811  000308  D145               	goto	l11258
 10812                           
 10813                           ;tff.c: 1043: fp->csect += (BYTE)cc;
 10814  00030A  0100               	movlb	0	; () banked
 10815  00030C  EE20 F003          	lfsr	2,3
 10816  000310  5186               	movf	f_write@fp& (0+255),w,b
 10817  000312  26D9               	addwf	fsr2l,f,c
 10818  000314  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10819  000316  22DA               	addwfc	fsr2h,f,c
 10820  000318  519E               	movf	f_write@cc& (0+255),w,b
 10821  00031A  26DF               	addwf	indf2,f,c
 10822                           
 10823                           ; BSR set to: 0
 10824                           ;tff.c: 1044: wcnt = 512U * cc;
 10825  00031C  C09E  F08C         	movff	f_write@cc,??_f_write
 10826  000320  C09F  F08D         	movff	f_write@cc+1,??_f_write+1
 10827  000324  0E09               	movlw	9
 10828  000326                     u12705:
 10829  000326  90D8               	bcf	status,0,c
 10830  000328  378C               	rlcf	??_f_write& (0+255),f,b
 10831  00032A  378D               	rlcf	(??_f_write+1)& (0+255),f,b
 10832  00032C  2EE8               	decfsz	wreg,f,c
 10833  00032E  D7FB               	goto	u12705
 10834  000330  C08C  F0A2         	movff	??_f_write,f_write@wcnt
 10835  000334  C08D  F0A3         	movff	??_f_write+1,f_write@wcnt+1
 10836                           
 10837                           ;tff.c: 1045: continue;
 10838  000338  D0DC               	goto	l11240
 10839  00033A                     l11214:
 10840                           
 10841                           ; BSR set to: 0
 10842                           ;tff.c: 1046: };tff.c: 1047: if (fp->fptr >= fp->fsize) {
 10843  00033A  EE20 F00A          	lfsr	2,10
 10844  00033E  5186               	movf	f_write@fp& (0+255),w,b
 10845  000340  26D9               	addwf	fsr2l,f,c
 10846  000342  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10847  000344  22DA               	addwfc	fsr2h,f,c
 10848  000346  EE10 F006          	lfsr	1,6
 10849  00034A  5186               	movf	f_write@fp& (0+255),w,b
 10850  00034C  26E1               	addwf	fsr1l,f,c
 10851  00034E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10852  000350  22E2               	addwfc	fsr1h,f,c
 10853  000352  50DE               	movf	postinc2,w,c
 10854  000354  5CE6               	subwf	postinc1,w,c
 10855  000356  50DE               	movf	postinc2,w,c
 10856  000358  58E6               	subwfb	postinc1,w,c
 10857  00035A  50DE               	movf	postinc2,w,c
 10858  00035C  58E6               	subwfb	postinc1,w,c
 10859  00035E  50DE               	movf	postinc2,w,c
 10860  000360  58E6               	subwfb	postinc1,w,c
 10861  000362  A0D8               	btfss	status,0,c
 10862  000364  D022               	goto	l11222
 10863                           
 10864                           ; BSR set to: 0
 10865                           ;tff.c: 1048: if (!move_window(0)) goto fw_error;
 10866  000366  0E00               	movlw	0
 10867  000368  6E35               	movwf	move_window@sector^0,c
 10868  00036A  0E00               	movlw	0
 10869  00036C  6E36               	movwf	(move_window@sector+1)^0,c
 10870  00036E  0E00               	movlw	0
 10871  000370  6E37               	movwf	(move_window@sector+2)^0,c
 10872  000372  0E00               	movlw	0
 10873  000374  6E38               	movwf	(move_window@sector+3)^0,c
 10874  000376  EC15  F015         	call	_move_window	;wreg free
 10875  00037A  0900               	iorlw	0
 10876  00037C  B4D8               	btfsc	status,2,c
 10877  00037E  D10A               	goto	l11258
 10878                           
 10879                           ;tff.c: 1049: fp->fs->winsect = sect;
 10880  000380  0100               	movlb	0	; () banked
 10881  000382  EE20 F004          	lfsr	2,4
 10882  000386  5186               	movf	f_write@fp& (0+255),w,b
 10883  000388  26D9               	addwf	fsr2l,f,c
 10884  00038A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10885  00038C  22DA               	addwfc	fsr2h,f,c
 10886  00038E  EE10 F004          	lfsr	1,4
 10887  000392  50DE               	movf	postinc2,w,c
 10888  000394  26E1               	addwf	fsr1l,f,c
 10889  000396  50DD               	movf	postdec2,w,c
 10890  000398  22E2               	addwfc	fsr1h,f,c
 10891  00039A  C09A  FFE6         	movff	f_write@sect,postinc1
 10892  00039E  C09B  FFE6         	movff	f_write@sect+1,postinc1
 10893  0003A2  C09C  FFE6         	movff	f_write@sect+2,postinc1
 10894  0003A6  C09D  FFE6         	movff	f_write@sect+3,postinc1
 10895  0003AA                     l11222:
 10896                           
 10897                           ; BSR set to: 0
 10898                           ;tff.c: 1050: };tff.c: 1051: fp->csect++;
 10899  0003AA  EE20 F003          	lfsr	2,3
 10900  0003AE  5186               	movf	f_write@fp& (0+255),w,b
 10901  0003B0  26D9               	addwf	fsr2l,f,c
 10902  0003B2  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10903  0003B4  22DA               	addwfc	fsr2h,f,c
 10904  0003B6  2ADF               	incf	indf2,f,c
 10905  0003B8                     l11224:
 10906                           
 10907                           ; BSR set to: 0
 10908                           ;tff.c: 1052: };tff.c: 1053: sect = clust2sect(fp->curr_clust) + fp->csect - 1;
 10909  0003B8  EE20 F010          	lfsr	2,16
 10910  0003BC  5186               	movf	f_write@fp& (0+255),w,b
 10911  0003BE  26D9               	addwf	fsr2l,f,c
 10912  0003C0  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10913  0003C2  22DA               	addwfc	fsr2h,f,c
 10914  0003C4  CFDE F016          	movff	postinc2,clust2sect@clust
 10915  0003C8  CFDD F017          	movff	postdec2,clust2sect@clust+1
 10916  0003CC  EC01  F021         	call	_clust2sect	;wreg free
 10917  0003D0  0100               	movlb	0	; () banked
 10918  0003D2  EE20 F003          	lfsr	2,3
 10919  0003D6  5186               	movf	f_write@fp& (0+255),w,b
 10920  0003D8  26D9               	addwf	fsr2l,f,c
 10921  0003DA  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10922  0003DC  22DA               	addwfc	fsr2h,f,c
 10923  0003DE  50DF               	movf	indf2,w,c
 10924  0003E0  6F8C               	movwf	??_f_write& (0+255),b
 10925  0003E2  518C               	movf	??_f_write& (0+255),w,b
 10926  0003E4  2416               	addwf	?_clust2sect^0,w,c
 10927  0003E6  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10928  0003E8  0E00               	movlw	0
 10929  0003EA  2017               	addwfc	(?_clust2sect+1)^0,w,c
 10930  0003EC  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10931  0003EE  0E00               	movlw	0
 10932  0003F0  2018               	addwfc	(?_clust2sect+2)^0,w,c
 10933  0003F2  6F8F               	movwf	(??_f_write+3)& (0+255),b
 10934  0003F4  0E00               	movlw	0
 10935  0003F6  2019               	addwfc	(?_clust2sect+3)^0,w,c
 10936  0003F8  6F90               	movwf	(??_f_write+4)& (0+255),b
 10937  0003FA  0EFF               	movlw	255
 10938  0003FC  258D               	addwf	(??_f_write+1)& (0+255),w,b
 10939  0003FE  6F9A               	movwf	f_write@sect& (0+255),b
 10940  000400  0EFF               	movlw	255
 10941  000402  218E               	addwfc	(??_f_write+2)& (0+255),w,b
 10942  000404  6F9B               	movwf	(f_write@sect+1)& (0+255),b
 10943  000406  0EFF               	movlw	255
 10944  000408  218F               	addwfc	(??_f_write+3)& (0+255),w,b
 10945  00040A  6F9C               	movwf	(f_write@sect+2)& (0+255),b
 10946  00040C  0EFF               	movlw	255
 10947  00040E  2190               	addwfc	(??_f_write+4)& (0+255),w,b
 10948  000410  6F9D               	movwf	(f_write@sect+3)& (0+255),b
 10949                           
 10950                           ; BSR set to: 0
 10951                           ;tff.c: 1054: if (!move_window(sect)) goto fw_error;
 10952  000412  C09A  F035         	movff	f_write@sect,move_window@sector
 10953  000416  C09B  F036         	movff	f_write@sect+1,move_window@sector+1
 10954  00041A  C09C  F037         	movff	f_write@sect+2,move_window@sector+2
 10955  00041E  C09D  F038         	movff	f_write@sect+3,move_window@sector+3
 10956  000422  EC15  F015         	call	_move_window	;wreg free
 10957  000426  0900               	iorlw	0
 10958  000428  B4D8               	btfsc	status,2,c
 10959  00042A  D0B4               	goto	l11258
 10960                           
 10961                           ;tff.c: 1055: wcnt = 512U - (fp->fptr % 512U);
 10962  00042C  0EFF               	movlw	255
 10963  00042E  0100               	movlb	0	; () banked
 10964  000430  6F8C               	movwf	??_f_write& (0+255),b
 10965  000432  0E01               	movlw	1
 10966  000434  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10967  000436  EE20 F006          	lfsr	2,6
 10968  00043A  5186               	movf	f_write@fp& (0+255),w,b
 10969  00043C  26D9               	addwf	fsr2l,f,c
 10970  00043E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10971  000440  22DA               	addwfc	fsr2h,f,c
 10972  000442  CFDE F08E          	movff	postinc2,??_f_write+2
 10973  000446  CFDD F08F          	movff	postdec2,??_f_write+3
 10974  00044A  518C               	movf	??_f_write& (0+255),w,b
 10975  00044C  178E               	andwf	(??_f_write+2)& (0+255),f,b
 10976  00044E  518D               	movf	(??_f_write+1)& (0+255),w,b
 10977  000450  178F               	andwf	(??_f_write+3)& (0+255),f,b
 10978  000452  518E               	movf	(??_f_write+2)& (0+255),w,b
 10979  000454  0800               	sublw	0
 10980  000456  6FA2               	movwf	f_write@wcnt& (0+255),b
 10981  000458  518F               	movf	(??_f_write+3)& (0+255),w,b
 10982  00045A  A0D8               	btfss	status,0,c
 10983  00045C  2AE8               	incf	wreg,f,c
 10984  00045E  0802               	sublw	2
 10985  000460  6FA3               	movwf	(f_write@wcnt+1)& (0+255),b
 10986                           
 10987                           ; BSR set to: 0
 10988                           ;tff.c: 1056: if (wcnt > btw) wcnt = btw;
 10989  000462  51A2               	movf	f_write@wcnt& (0+255),w,b
 10990  000464  5D89               	subwf	f_write@btw& (0+255),w,b
 10991  000466  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 10992  000468  598A               	subwfb	(f_write@btw+1)& (0+255),w,b
 10993  00046A  B0D8               	btfsc	status,0,c
 10994  00046C  D004               	goto	l11236
 10995                           
 10996                           ; BSR set to: 0
 10997  00046E  C089  F0A2         	movff	f_write@btw,f_write@wcnt
 10998  000472  C08A  F0A3         	movff	f_write@btw+1,f_write@wcnt+1
 10999  000476                     l11236:
 11000                           
 11001                           ; BSR set to: 0
 11002                           ;tff.c: 1057: memcpy(&fp->fs->win[fp->fptr % 512U], wbuff, wcnt);
 11003  000476  0EFF               	movlw	255
 11004  000478  6F8C               	movwf	??_f_write& (0+255),b
 11005  00047A  0E01               	movlw	1
 11006  00047C  6F8D               	movwf	(??_f_write+1)& (0+255),b
 11007  00047E  EE20 F006          	lfsr	2,6
 11008  000482  5186               	movf	f_write@fp& (0+255),w,b
 11009  000484  26D9               	addwf	fsr2l,f,c
 11010  000486  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11011  000488  22DA               	addwfc	fsr2h,f,c
 11012  00048A  CFDE F08E          	movff	postinc2,??_f_write+2
 11013  00048E  CFDD F08F          	movff	postdec2,??_f_write+3
 11014  000492  518C               	movf	??_f_write& (0+255),w,b
 11015  000494  178E               	andwf	(??_f_write+2)& (0+255),f,b
 11016  000496  518D               	movf	(??_f_write+1)& (0+255),w,b
 11017  000498  178F               	andwf	(??_f_write+3)& (0+255),f,b
 11018  00049A  EE20 F004          	lfsr	2,4
 11019  00049E  5186               	movf	f_write@fp& (0+255),w,b
 11020  0004A0  26D9               	addwf	fsr2l,f,c
 11021  0004A2  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11022  0004A4  22DA               	addwfc	fsr2h,f,c
 11023  0004A6  CFDE F090          	movff	postinc2,??_f_write+4
 11024  0004AA  CFDD F091          	movff	postdec2,??_f_write+5
 11025  0004AE  518E               	movf	(??_f_write+2)& (0+255),w,b
 11026  0004B0  2790               	addwf	(??_f_write+4)& (0+255),f,b
 11027  0004B2  518F               	movf	(??_f_write+3)& (0+255),w,b
 11028  0004B4  2391               	addwfc	(??_f_write+5)& (0+255),f,b
 11029  0004B6  0E20               	movlw	32
 11030  0004B8  2590               	addwf	(??_f_write+4)& (0+255),w,b
 11031  0004BA  6E0A               	movwf	memcpy@d1^0,c
 11032  0004BC  0E00               	movlw	0
 11033  0004BE  2191               	addwfc	(??_f_write+5)& (0+255),w,b
 11034  0004C0  6E0B               	movwf	(memcpy@d1+1)^0,c
 11035  0004C2  C099  F00C         	movff	f_write@wbuff,memcpy@s1
 11036  0004C6  6A0D               	clrf	(memcpy@s1+1)^0,c
 11037  0004C8  C0A2  F00E         	movff	f_write@wcnt,memcpy@n
 11038  0004CC  C0A3  F00F         	movff	f_write@wcnt+1,memcpy@n+1
 11039  0004D0  EC0A  F02A         	call	_memcpy	;wreg free
 11040                           
 11041                           ;tff.c: 1058: fp->fs->winflag = 1;
 11042  0004D4  0100               	movlb	0	; () banked
 11043  0004D6  EE20 F004          	lfsr	2,4
 11044  0004DA  5186               	movf	f_write@fp& (0+255),w,b
 11045  0004DC  26D9               	addwf	fsr2l,f,c
 11046  0004DE  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11047  0004E0  22DA               	addwfc	fsr2h,f,c
 11048  0004E2  EE10 F01F          	lfsr	1,31
 11049  0004E6  50DE               	movf	postinc2,w,c
 11050  0004E8  26E1               	addwf	fsr1l,f,c
 11051  0004EA  50DD               	movf	postdec2,w,c
 11052  0004EC  22E2               	addwfc	fsr1h,f,c
 11053  0004EE  0E01               	movlw	1
 11054  0004F0  6EE7               	movwf	indf1,c
 11055  0004F2                     l11240:
 11056                           
 11057                           ; BSR set to: 0
 11058  0004F2  51A2               	movf	f_write@wcnt& (0+255),w,b
 11059  0004F4  2799               	addwf	f_write@wbuff& (0+255),f,b
 11060                           
 11061                           ; BSR set to: 0
 11062  0004F6  EE20 F006          	lfsr	2,6
 11063  0004FA  5186               	movf	f_write@fp& (0+255),w,b
 11064  0004FC  26D9               	addwf	fsr2l,f,c
 11065  0004FE  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11066  000500  22DA               	addwfc	fsr2h,f,c
 11067  000502  51A2               	movf	f_write@wcnt& (0+255),w,b
 11068  000504  26DE               	addwf	postinc2,f,c
 11069  000506  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 11070  000508  22DE               	addwfc	postinc2,f,c
 11071  00050A  0E00               	movlw	0
 11072  00050C  22DE               	addwfc	postinc2,f,c
 11073  00050E  22DE               	addwfc	postinc2,f,c
 11074                           
 11075                           ; BSR set to: 0
 11076  000510  518B               	movf	f_write@bw& (0+255),w,b
 11077  000512  6ED9               	movwf	fsr2l,c
 11078  000514  6ADA               	clrf	fsr2h,c
 11079  000516  51A2               	movf	f_write@wcnt& (0+255),w,b
 11080  000518  26DE               	addwf	postinc2,f,c
 11081  00051A  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 11082  00051C  22DD               	addwfc	postdec2,f,c
 11083                           
 11084                           ; BSR set to: 0
 11085  00051E  51A2               	movf	f_write@wcnt& (0+255),w,b
 11086  000520  5F89               	subwf	f_write@btw& (0+255),f,b
 11087  000522  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 11088  000524  5B8A               	subwfb	(f_write@btw+1)& (0+255),f,b
 11089  000526                     l11248:
 11090                           
 11091                           ; BSR set to: 0
 11092  000526  5189               	movf	f_write@btw& (0+255),w,b
 11093  000528  118A               	iorwf	(f_write@btw+1)& (0+255),w,b
 11094  00052A  A4D8               	btfss	status,2,c
 11095  00052C  D5CF               	goto	l11172
 11096  00052E                     u12750:
 11097                           
 11098                           ; BSR set to: 0
 11099                           ;tff.c: 1059: };tff.c: 1061: if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;
 11100  00052E  EE20 F006          	lfsr	2,6
 11101  000532  5186               	movf	f_write@fp& (0+255),w,b
 11102  000534  26D9               	addwf	fsr2l,f,c
 11103  000536  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11104  000538  22DA               	addwfc	fsr2h,f,c
 11105  00053A  EE10 F00A          	lfsr	1,10
 11106  00053E  5186               	movf	f_write@fp& (0+255),w,b
 11107  000540  26E1               	addwf	fsr1l,f,c
 11108  000542  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11109  000544  22E2               	addwfc	fsr1h,f,c
 11110  000546  50DE               	movf	postinc2,w,c
 11111  000548  5CE6               	subwf	postinc1,w,c
 11112  00054A  50DE               	movf	postinc2,w,c
 11113  00054C  58E6               	subwfb	postinc1,w,c
 11114  00054E  50DE               	movf	postinc2,w,c
 11115  000550  58E6               	subwfb	postinc1,w,c
 11116  000552  50DE               	movf	postinc2,w,c
 11117  000554  58E6               	subwfb	postinc1,w,c
 11118  000556  B0D8               	btfsc	status,0,c
 11119  000558  D014               	goto	l11254
 11120                           
 11121                           ; BSR set to: 0
 11122  00055A  EE20 F006          	lfsr	2,6
 11123  00055E  5186               	movf	f_write@fp& (0+255),w,b
 11124  000560  26D9               	addwf	fsr2l,f,c
 11125  000562  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11126  000564  22DA               	addwfc	fsr2h,f,c
 11127  000566  EE10 F00A          	lfsr	1,10
 11128  00056A  5186               	movf	f_write@fp& (0+255),w,b
 11129  00056C  26E1               	addwf	fsr1l,f,c
 11130  00056E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11131  000570  22E2               	addwfc	fsr1h,f,c
 11132  000572  CFDE FFE6          	movff	postinc2,postinc1
 11133  000576  CFDE FFE6          	movff	postinc2,postinc1
 11134  00057A  CFDE FFE6          	movff	postinc2,postinc1
 11135  00057E  CFDE FFE6          	movff	postinc2,postinc1
 11136  000582                     l11254:
 11137                           
 11138                           ; BSR set to: 0
 11139                           ;tff.c: 1062: fp->flag |= 0x20;
 11140  000582  EE20 F002          	lfsr	2,2
 11141  000586  5186               	movf	f_write@fp& (0+255),w,b
 11142  000588  26D9               	addwf	fsr2l,f,c
 11143  00058A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11144  00058C  22DA               	addwfc	fsr2h,f,c
 11145  00058E  0E00               	movlw	0
 11146  000590  8ADB               	bsf	plusw2,5,c
 11147  000592  0012               	return	
 11148  000594                     l11258:
 11149                           
 11150                           ;tff.c: 1066: fp->flag |= 0x80;
 11151  000594  0100               	movlb	0	; () banked
 11152  000596  EE20 F002          	lfsr	2,2
 11153  00059A  5186               	movf	f_write@fp& (0+255),w,b
 11154  00059C  26D9               	addwf	fsr2l,f,c
 11155  00059E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11156  0005A0  22DA               	addwfc	fsr2h,f,c
 11157  0005A2  0E00               	movlw	0
 11158  0005A4  8EDB               	bsf	plusw2,7,c
 11159                           
 11160                           ; BSR set to: 0
 11161  0005A6  0012               	return		;funcret
 11162  0005A8                     __end_of_f_write:
 11163                           	callstack 0
 11164                           
 11165 ;; *************** function ___llmod *****************
 11166 ;; Defined at:
 11167 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\llmod.c"
 11168 ;; Parameters:    Size  Location     Type
 11169 ;;  dividend        4    9[COMRAM] unsigned long 
 11170 ;;  divisor         4   13[COMRAM] unsigned long 
 11171 ;; Auto vars:     Size  Location     Type
 11172 ;;  counter         1   17[COMRAM] unsigned char 
 11173 ;; Return value:  Size  Location     Type
 11174 ;;                  4    9[COMRAM] unsigned long 
 11175 ;; Registers used:
 11176 ;;		wreg, status,2, status,0
 11177 ;; Tracked objects:
 11178 ;;		On entry : 0/0
 11179 ;;		On exit  : 0/0
 11180 ;;		Unchanged: 0/0
 11181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11182 ;;      Params:         8       0       0       0       0       0       0       0       0
 11183 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11184 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11185 ;;      Totals:         9       0       0       0       0       0       0       0       0
 11186 ;;Total ram usage:        9 bytes
 11187 ;; Hardware stack levels used:    1
 11188 ;; Hardware stack levels required when called:    2
 11189 ;; This function calls:
 11190 ;;		Nothing
 11191 ;; This function is called by:
 11192 ;;		_fprintf
 11193 ;;		_ultoa
 11194 ;; This function uses a non-reentrant model
 11195 ;;
 11196                           
 11197                           	psect	text69
 11198  004D80                     __ptext69:
 11199                           	callstack 0
 11200  004D80                     ___llmod:
 11201                           	callstack 23
 11202                           
 11203                           ; BSR set to: 0
 11204                           ;incstack = 0
 11205  004D80  500E               	movf	___llmod@divisor^0,w,c
 11206  004D82  100F               	iorwf	(___llmod@divisor+1)^0,w,c
 11207  004D84  1010               	iorwf	(___llmod@divisor+2)^0,w,c
 11208  004D86  1011               	iorwf	(___llmod@divisor+3)^0,w,c
 11209  004D88  B4D8               	btfsc	status,2,c
 11210  004D8A  D024               	goto	l2153
 11211  004D8C  0E01               	movlw	1
 11212  004D8E  6E12               	movwf	___llmod@counter^0,c
 11213  004D90  D006               	goto	l12122
 11214  004D92                     l12120:
 11215  004D92  90D8               	bcf	status,0,c
 11216  004D94  360E               	rlcf	___llmod@divisor^0,f,c
 11217  004D96  360F               	rlcf	(___llmod@divisor+1)^0,f,c
 11218  004D98  3610               	rlcf	(___llmod@divisor+2)^0,f,c
 11219  004D9A  3611               	rlcf	(___llmod@divisor+3)^0,f,c
 11220  004D9C  2A12               	incf	___llmod@counter^0,f,c
 11221  004D9E                     l12122:
 11222  004D9E  AE11               	btfss	(___llmod@divisor+3)^0,7,c
 11223  004DA0  D7F8               	goto	l12120
 11224  004DA2                     u14090:
 11225  004DA2  500E               	movf	___llmod@divisor^0,w,c
 11226  004DA4  5C0A               	subwf	___llmod@dividend^0,w,c
 11227  004DA6  500F               	movf	(___llmod@divisor+1)^0,w,c
 11228  004DA8  580B               	subwfb	(___llmod@dividend+1)^0,w,c
 11229  004DAA  5010               	movf	(___llmod@divisor+2)^0,w,c
 11230  004DAC  580C               	subwfb	(___llmod@dividend+2)^0,w,c
 11231  004DAE  5011               	movf	(___llmod@divisor+3)^0,w,c
 11232  004DB0  580D               	subwfb	(___llmod@dividend+3)^0,w,c
 11233  004DB2  A0D8               	btfss	status,0,c
 11234  004DB4  D008               	goto	l12128
 11235  004DB6  500E               	movf	___llmod@divisor^0,w,c
 11236  004DB8  5E0A               	subwf	___llmod@dividend^0,f,c
 11237  004DBA  500F               	movf	(___llmod@divisor+1)^0,w,c
 11238  004DBC  5A0B               	subwfb	(___llmod@dividend+1)^0,f,c
 11239  004DBE  5010               	movf	(___llmod@divisor+2)^0,w,c
 11240  004DC0  5A0C               	subwfb	(___llmod@dividend+2)^0,f,c
 11241  004DC2  5011               	movf	(___llmod@divisor+3)^0,w,c
 11242  004DC4  5A0D               	subwfb	(___llmod@dividend+3)^0,f,c
 11243  004DC6                     l12128:
 11244  004DC6  90D8               	bcf	status,0,c
 11245  004DC8  3211               	rrcf	(___llmod@divisor+3)^0,f,c
 11246  004DCA  3210               	rrcf	(___llmod@divisor+2)^0,f,c
 11247  004DCC  320F               	rrcf	(___llmod@divisor+1)^0,f,c
 11248  004DCE  320E               	rrcf	___llmod@divisor^0,f,c
 11249  004DD0  2E12               	decfsz	___llmod@counter^0,f,c
 11250  004DD2  D7E7               	goto	u14090
 11251  004DD4                     l2153:
 11252  004DD4  C00A  F00A         	movff	___llmod@dividend,?___llmod
 11253  004DD8  C00B  F00B         	movff	___llmod@dividend+1,?___llmod+1
 11254  004DDC  C00C  F00C         	movff	___llmod@dividend+2,?___llmod+2
 11255  004DE0  C00D  F00D         	movff	___llmod@dividend+3,?___llmod+3
 11256  004DE4  0012               	return		;funcret
 11257  004DE6                     __end_of___llmod:
 11258                           	callstack 0
 11259                           
 11260 ;; *************** function _f_open *****************
 11261 ;; Defined at:
 11262 ;;		line 833 in file "bibliotecas/tff.c"
 11263 ;; Parameters:    Size  Location     Type
 11264 ;;  fp              2   56[BANK0 ] PTR struct _FIL
 11265 ;;		 -> fil(28), 
 11266 ;;  path            2   58[BANK0 ] PTR const unsigned char 
 11267 ;;		 -> STR_16(13), filename(20), 
 11268 ;;  mode            1   60[BANK0 ] unsigned char 
 11269 ;; Auto vars:     Size  Location     Type
 11270 ;;  dw              4   79[BANK0 ] unsigned long 
 11271 ;;  rs              2   77[BANK0 ] unsigned short 
 11272 ;;  dj             14   86[BANK0 ] struct _DIR_E
 11273 ;;  fn             12   65[BANK0 ] unsigned char [12]
 11274 ;;  dir             2   84[BANK0 ] PTR unsigned char 
 11275 ;;		 -> NULL(0), fs(544), 
 11276 ;;  res             1   83[BANK0 ] enum E155
 11277 ;; Return value:  Size  Location     Type
 11278 ;;                  1    wreg      enum E3231
 11279 ;; Registers used:
 11280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11281 ;; Tracked objects:
 11282 ;;		On entry : 3F/0
 11283 ;;		On exit  : 0/0
 11284 ;;		Unchanged: 0/0
 11285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11286 ;;      Params:         0       5       0       0       0       0       0       0       0
 11287 ;;      Locals:         0      35       0       0       0       0       0       0       0
 11288 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11289 ;;      Totals:         0      44       0       0       0       0       0       0       0
 11290 ;;Total ram usage:       44 bytes
 11291 ;; Hardware stack levels used:    1
 11292 ;; Hardware stack levels required when called:   11
 11293 ;; This function calls:
 11294 ;;		_auto_mount
 11295 ;;		_get_fattime
 11296 ;;		_memcpy
 11297 ;;		_memset
 11298 ;;		_move_window
 11299 ;;		_remove_chain
 11300 ;;		_reserve_direntry
 11301 ;;		_trace_path
 11302 ;; This function is called by:
 11303 ;;		_escrita_sdcard
 11304 ;; This function uses a non-reentrant model
 11305 ;;
 11306                           
 11307                           	psect	text70
 11308  0012CC                     __ptext70:
 11309                           	callstack 0
 11310  0012CC                     _f_open:
 11311                           	callstack 15
 11312                           
 11313                           ; BSR set to: 0
 11314                           ;tff.c: 839: FRESULT res;;tff.c: 840: DIR_E dj;;tff.c: 841: BYTE *dir;;tff.c: 842: char 
      +                          fn[8+3+1];;tff.c: 845: fp->fs = (0);
 11315                           
 11316                           ;incstack = 0
 11317  0012CC  EE20 F004          	lfsr	2,4
 11318  0012D0  5198               	movf	f_open@fp& (0+255),w,b
 11319  0012D2  26D9               	addwf	fsr2l,f,c
 11320  0012D4  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11321  0012D6  22DA               	addwfc	fsr2h,f,c
 11322  0012D8  0E00               	movlw	0
 11323  0012DA  6EDE               	movwf	postinc2,c
 11324  0012DC  0E00               	movlw	0
 11325  0012DE  6EDD               	movwf	postdec2,c
 11326                           
 11327                           ; BSR set to: 0
 11328                           ;tff.c: 847: mode &= (0x01|0x02|0x08|0x10|0x04);
 11329  0012E0  0E1F               	movlw	31
 11330  0012E2  179C               	andwf	f_open@mode& (0+255),f,b
 11331                           
 11332                           ; BSR set to: 0
 11333                           ;tff.c: 848: res = auto_mount(&path, (BYTE)(mode & (0x02|0x08|0x10|0x04)));
 11334  0012E4  0E9A               	movlw	low f_open@path
 11335  0012E6  6E3D               	movwf	auto_mount@path^0,c
 11336  0012E8  519C               	movf	f_open@mode& (0+255),w,b
 11337  0012EA  0B1E               	andlw	30
 11338  0012EC  6E3E               	movwf	auto_mount@chk_wp^0,c
 11339  0012EE  ECD4  F002         	call	_auto_mount	;wreg free
 11340  0012F2  0100               	movlb	0	; () banked
 11341  0012F4  6FB3               	movwf	f_open@res& (0+255),b
 11342                           
 11343                           ; BSR set to: 0
 11344                           ;tff.c: 853: if (res != FR_OK) return res;
 11345  0012F6  51B3               	movf	f_open@res& (0+255),w,b
 11346  0012F8  B4D8               	btfsc	status,2,c
 11347  0012FA  D002               	goto	l12248
 11348  0012FC                     u14250:
 11349                           
 11350                           ; BSR set to: 0
 11351  0012FC  51B3               	movf	f_open@res& (0+255),w,b
 11352  0012FE  0012               	return	
 11353  001300                     l12248:
 11354                           
 11355                           ; BSR set to: 0
 11356                           ;tff.c: 854: res = trace_path(&dj, fn, path, &dir);
 11357  001300  0EB6               	movlw	low f_open@dj
 11358  001302  6F7E               	movwf	trace_path@dj& (0+255),b
 11359  001304  0EA1               	movlw	low f_open@fn
 11360  001306  6F7F               	movwf	trace_path@fn& (0+255),b
 11361  001308  C09A  F080         	movff	f_open@path,trace_path@path
 11362  00130C  C09B  F081         	movff	f_open@path+1,trace_path@path+1
 11363  001310  0EB4               	movlw	low f_open@dir
 11364  001312  6F82               	movwf	trace_path@dir& (0+255),b
 11365  001314  EC41  F00F         	call	_trace_path	;wreg free
 11366  001318  0100               	movlb	0	; () banked
 11367  00131A  6FB3               	movwf	f_open@res& (0+255),b
 11368                           
 11369                           ; BSR set to: 0
 11370                           ;tff.c: 858: if (mode & (0x08|0x10|0x04)) {
 11371  00131C  C09C  F09D         	movff	f_open@mode,??_f_open
 11372  001320  0E1C               	movlw	28
 11373  001322  179D               	andwf	??_f_open& (0+255),f,b
 11374  001324  B4D8               	btfsc	status,2,c
 11375  001326  D0E0               	goto	l12310
 11376                           
 11377                           ; BSR set to: 0
 11378                           ;tff.c: 859: CLUST rs;;tff.c: 860: DWORD dw;;tff.c: 861: if (res != FR_OK) {
 11379  001328  51B3               	movf	f_open@res& (0+255),w,b
 11380  00132A  B4D8               	btfsc	status,2,c
 11381  00132C  D035               	goto	l1099
 11382                           
 11383                           ; BSR set to: 0
 11384                           ;tff.c: 862: if (res != FR_NO_FILE) return res;
 11385  00132E  0E02               	movlw	2
 11386  001330  19B3               	xorwf	f_open@res& (0+255),w,b
 11387  001332  A4D8               	btfss	status,2,c
 11388  001334  D7E3               	goto	u14250
 11389                           
 11390                           ; BSR set to: 0
 11391                           ;tff.c: 863: res = reserve_direntry(&dj, &dir);
 11392  001336  0EB6               	movlw	low f_open@dj
 11393  001338  6F86               	movwf	reserve_direntry@dj& (0+255),b
 11394  00133A  0EB4               	movlw	low f_open@dir
 11395  00133C  6F87               	movwf	reserve_direntry@dir& (0+255),b
 11396  00133E  EC81  F010         	call	_reserve_direntry	;wreg free
 11397  001342  0100               	movlb	0	; () banked
 11398  001344  6FB3               	movwf	f_open@res& (0+255),b
 11399                           
 11400                           ; BSR set to: 0
 11401                           ;tff.c: 864: if (res != FR_OK) return res;
 11402  001346  51B3               	movf	f_open@res& (0+255),w,b
 11403  001348  A4D8               	btfss	status,2,c
 11404  00134A  D7D8               	goto	u14250
 11405                           
 11406                           ; BSR set to: 0
 11407                           ;tff.c: 865: memset(dir, 0, 32);
 11408  00134C  C0B4  F00A         	movff	f_open@dir,memset@p1
 11409  001350  C0B5  F00B         	movff	f_open@dir+1,memset@p1+1
 11410  001354  0E00               	movlw	0
 11411  001356  6E0D               	movwf	(memset@c+1)^0,c
 11412  001358  0E00               	movlw	0
 11413  00135A  6E0C               	movwf	memset@c^0,c
 11414  00135C  0E00               	movlw	0
 11415  00135E  6E0F               	movwf	(memset@n+1)^0,c
 11416  001360  0E20               	movlw	32
 11417  001362  6E0E               	movwf	memset@n^0,c
 11418  001364  EC00  F02C         	call	_memset	;wreg free
 11419                           
 11420                           ;tff.c: 866: memcpy(&dir[0], fn, 8+3);
 11421  001368  C0B4  F00A         	movff	f_open@dir,memcpy@d1
 11422  00136C  C0B5  F00B         	movff	f_open@dir+1,memcpy@d1+1
 11423  001370  0EA1               	movlw	low f_open@fn
 11424  001372  6E0C               	movwf	memcpy@s1^0,c
 11425  001374  6A0D               	clrf	(memcpy@s1+1)^0,c
 11426  001376  0E00               	movlw	0
 11427  001378  6E0F               	movwf	(memcpy@n+1)^0,c
 11428  00137A  0E0B               	movlw	11
 11429  00137C  6E0E               	movwf	memcpy@n^0,c
 11430  00137E  EC0A  F02A         	call	_memcpy	;wreg free
 11431                           
 11432                           ;tff.c: 867: dir[12] = fn[11];
 11433  001382  0100               	movlb	0	; () banked
 11434  001384  EE20 F00C          	lfsr	2,12
 11435  001388  51B4               	movf	f_open@dir& (0+255),w,b
 11436  00138A  26D9               	addwf	fsr2l,f,c
 11437  00138C  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11438  00138E  22DA               	addwfc	fsr2h,f,c
 11439  001390  C0AC  FFDF         	movff	f_open@fn+11,indf2
 11440                           
 11441                           ; BSR set to: 0
 11442                           ;tff.c: 868: mode |= 0x08;
 11443  001394  879C               	bsf	f_open@mode& (0+255),3,b
 11444                           
 11445                           ;tff.c: 869: }
 11446  001396  D07B               	goto	l12298
 11447  001398                     l1099:
 11448                           
 11449                           ; BSR set to: 0
 11450                           ;tff.c: 870: else {;tff.c: 871: if (mode & 0x04)
 11451  001398  A59C               	btfss	f_open@mode& (0+255),2,b
 11452  00139A  D002               	goto	l12278
 11453                           
 11454                           ; BSR set to: 0
 11455                           ;tff.c: 872: return FR_EXIST;
 11456  00139C  0E07               	movlw	7
 11457  00139E  0012               	return	
 11458  0013A0                     l12278:
 11459                           
 11460                           ; BSR set to: 0
 11461                           ;tff.c: 873: if (!dir || (dir[11] & (0x01|0x10)))
 11462  0013A0  51B4               	movf	f_open@dir& (0+255),w,b
 11463  0013A2  11B5               	iorwf	(f_open@dir+1)& (0+255),w,b
 11464  0013A4  B4D8               	btfsc	status,2,c
 11465  0013A6  D00C               	goto	u14320
 11466                           
 11467                           ; BSR set to: 0
 11468  0013A8  EE20 F00B          	lfsr	2,11
 11469  0013AC  51B4               	movf	f_open@dir& (0+255),w,b
 11470  0013AE  26D9               	addwf	fsr2l,f,c
 11471  0013B0  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11472  0013B2  22DA               	addwfc	fsr2h,f,c
 11473  0013B4  50DF               	movf	indf2,w,c
 11474  0013B6  6F9D               	movwf	??_f_open& (0+255),b
 11475  0013B8  0E11               	movlw	17
 11476  0013BA  179D               	andwf	??_f_open& (0+255),f,b
 11477  0013BC  B4D8               	btfsc	status,2,c
 11478  0013BE  D002               	goto	l1104
 11479  0013C0                     u14320:
 11480                           
 11481                           ; BSR set to: 0
 11482                           ;tff.c: 874: return FR_DENIED;
 11483  0013C0  0E06               	movlw	6
 11484  0013C2  0012               	return	
 11485  0013C4                     l1104:
 11486                           
 11487                           ; BSR set to: 0
 11488                           ;tff.c: 875: if (mode & 0x08) {
 11489  0013C4  A79C               	btfss	f_open@mode& (0+255),3,b
 11490  0013C6  D063               	goto	l12298
 11491                           
 11492                           ; BSR set to: 0
 11493                           ;tff.c: 880: rs = (WORD)(*(WORD*)(BYTE*)(&dir[26]));
 11494  0013C8  EE20 F01A          	lfsr	2,26
 11495  0013CC  51B4               	movf	f_open@dir& (0+255),w,b
 11496  0013CE  26D9               	addwf	fsr2l,f,c
 11497  0013D0  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11498  0013D2  22DA               	addwfc	fsr2h,f,c
 11499  0013D4  CFDE F0AD          	movff	postinc2,f_open@rs
 11500  0013D8  CFDD F0AE          	movff	postdec2,f_open@rs+1
 11501                           
 11502                           ;tff.c: 882: *(WORD*)(BYTE*)(&dir[26])=(WORD)(0);
 11503  0013DC  EE20 F01A          	lfsr	2,26
 11504  0013E0  51B4               	movf	f_open@dir& (0+255),w,b
 11505  0013E2  26D9               	addwf	fsr2l,f,c
 11506  0013E4  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11507  0013E6  22DA               	addwfc	fsr2h,f,c
 11508  0013E8  0E00               	movlw	0
 11509  0013EA  6EDE               	movwf	postinc2,c
 11510  0013EC  0E00               	movlw	0
 11511  0013EE  6EDD               	movwf	postdec2,c
 11512                           
 11513                           ;tff.c: 883: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(0);
 11514  0013F0  EE20 F01C          	lfsr	2,28
 11515  0013F4  51B4               	movf	f_open@dir& (0+255),w,b
 11516  0013F6  26D9               	addwf	fsr2l,f,c
 11517  0013F8  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11518  0013FA  22DA               	addwfc	fsr2h,f,c
 11519  0013FC  6ADE               	clrf	postinc2,c
 11520  0013FE  6ADE               	clrf	postinc2,c
 11521  001400  6ADE               	clrf	postinc2,c
 11522  001402  6ADD               	clrf	postdec2,c
 11523                           
 11524                           ;tff.c: 884: dj.fs->winflag = 1;
 11525  001404  EE20 F01F          	lfsr	2,31
 11526  001408  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11527  00140A  26D9               	addwf	fsr2l,f,c
 11528  00140C  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11529  00140E  22DA               	addwfc	fsr2h,f,c
 11530  001410  0E01               	movlw	1
 11531  001412  6EDF               	movwf	indf2,c
 11532                           
 11533                           ;tff.c: 885: dw = dj.fs->winsect;
 11534  001414  EE20 F004          	lfsr	2,4
 11535  001418  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11536  00141A  26D9               	addwf	fsr2l,f,c
 11537  00141C  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11538  00141E  22DA               	addwfc	fsr2h,f,c
 11539  001420  CFDE F0AF          	movff	postinc2,f_open@dw
 11540  001424  CFDE F0B0          	movff	postinc2,f_open@dw+1
 11541  001428  CFDE F0B1          	movff	postinc2,f_open@dw+2
 11542  00142C  CFDE F0B2          	movff	postinc2,f_open@dw+3
 11543                           
 11544                           ; BSR set to: 0
 11545                           ;tff.c: 886: if (!remove_chain(rs) || !move_window(dw))
 11546  001430  C0AD  F078         	movff	f_open@rs,remove_chain@clust
 11547  001434  C0AE  F079         	movff	f_open@rs+1,remove_chain@clust+1
 11548  001438  ECAE  F022         	call	_remove_chain	;wreg free
 11549  00143C  0900               	iorlw	0
 11550  00143E  B4D8               	btfsc	status,2,c
 11551  001440  D00D               	goto	u14350
 11552  001442  C0AF  F035         	movff	f_open@dw,move_window@sector
 11553  001446  C0B0  F036         	movff	f_open@dw+1,move_window@sector+1
 11554  00144A  C0B1  F037         	movff	f_open@dw+2,move_window@sector+2
 11555  00144E  C0B2  F038         	movff	f_open@dw+3,move_window@sector+3
 11556  001452  EC15  F015         	call	_move_window	;wreg free
 11557  001456  0900               	iorlw	0
 11558  001458  A4D8               	btfss	status,2,c
 11559  00145A  D002               	goto	l12296
 11560  00145C                     u14350:
 11561                           
 11562                           ;tff.c: 887: return FR_RW_ERROR;
 11563  00145C  0E08               	movlw	8
 11564  00145E  0012               	return	
 11565  001460                     l12296:
 11566                           
 11567                           ;tff.c: 888: dj.fs->last_clust = rs - 1;
 11568  001460  0EFF               	movlw	255
 11569  001462  0100               	movlb	0	; () banked
 11570  001464  6F9D               	movwf	??_f_open& (0+255),b
 11571  001466  0EFF               	movlw	255
 11572  001468  6F9E               	movwf	(??_f_open+1)& (0+255),b
 11573  00146A  C0AD  F09F         	movff	f_open@rs,??_f_open+2
 11574  00146E  C0AE  F0A0         	movff	f_open@rs+1,??_f_open+3
 11575  001472  519D               	movf	??_f_open& (0+255),w,b
 11576  001474  279F               	addwf	(??_f_open+2)& (0+255),f,b
 11577  001476  519E               	movf	(??_f_open+1)& (0+255),w,b
 11578  001478  23A0               	addwfc	(??_f_open+3)& (0+255),f,b
 11579  00147A  EE20 F018          	lfsr	2,24
 11580  00147E  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11581  001480  26D9               	addwf	fsr2l,f,c
 11582  001482  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11583  001484  22DA               	addwfc	fsr2h,f,c
 11584  001486  C09F  FFDE         	movff	??_f_open+2,postinc2
 11585  00148A  C0A0  FFDD         	movff	??_f_open+3,postdec2
 11586  00148E                     l12298:
 11587                           
 11588                           ; BSR set to: 0
 11589                           ;tff.c: 889: };tff.c: 890: };tff.c: 891: if (mode & 0x08) {
 11590  00148E  A79C               	btfss	f_open@mode& (0+255),3,b
 11591  001490  D046               	goto	l12330
 11592                           
 11593                           ; BSR set to: 0
 11594                           ;tff.c: 892: dir[11] = 0;
 11595  001492  EE20 F00B          	lfsr	2,11
 11596  001496  51B4               	movf	f_open@dir& (0+255),w,b
 11597  001498  26D9               	addwf	fsr2l,f,c
 11598  00149A  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11599  00149C  22DA               	addwfc	fsr2h,f,c
 11600  00149E  0E00               	movlw	0
 11601  0014A0  6EDF               	movwf	indf2,c
 11602                           
 11603                           ; BSR set to: 0
 11604                           ;tff.c: 893: dw = get_fattime();
 11605  0014A2  EC55  F01A         	call	_get_fattime	;wreg free
 11606  0014A6  C00E  F0AF         	movff	?_get_fattime,f_open@dw
 11607  0014AA  C00F  F0B0         	movff	?_get_fattime+1,f_open@dw+1
 11608  0014AE  C010  F0B1         	movff	?_get_fattime+2,f_open@dw+2
 11609  0014B2  C011  F0B2         	movff	?_get_fattime+3,f_open@dw+3
 11610                           
 11611                           ; BSR set to: 1
 11612                           ;tff.c: 894: *(DWORD*)(BYTE*)(&dir[14])=(DWORD)(dw);
 11613  0014B6  0100               	movlb	0	; () banked
 11614  0014B8  EE20 F00E          	lfsr	2,14
 11615  0014BC  51B4               	movf	f_open@dir& (0+255),w,b
 11616  0014BE  26D9               	addwf	fsr2l,f,c
 11617  0014C0  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11618  0014C2  22DA               	addwfc	fsr2h,f,c
 11619  0014C4  C0AF  FFDE         	movff	f_open@dw,postinc2
 11620  0014C8  C0B0  FFDE         	movff	f_open@dw+1,postinc2
 11621  0014CC  C0B1  FFDE         	movff	f_open@dw+2,postinc2
 11622  0014D0  C0B2  FFDE         	movff	f_open@dw+3,postinc2
 11623                           
 11624                           ; BSR set to: 0
 11625                           ;tff.c: 895: dj.fs->winflag = 1;
 11626  0014D4  EE20 F01F          	lfsr	2,31
 11627  0014D8  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11628  0014DA  26D9               	addwf	fsr2l,f,c
 11629  0014DC  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11630  0014DE  22DA               	addwfc	fsr2h,f,c
 11631  0014E0  0E01               	movlw	1
 11632  0014E2  6EDF               	movwf	indf2,c
 11633                           
 11634                           ; BSR set to: 0
 11635                           ;tff.c: 896: mode |= 0x20;
 11636  0014E4  8B9C               	bsf	f_open@mode& (0+255),5,b
 11637  0014E6  D01B               	goto	l12330
 11638  0014E8                     l12310:
 11639                           
 11640                           ; BSR set to: 0
 11641                           ;tff.c: 900: else {;tff.c: 902: if (res != FR_OK) return res;
 11642  0014E8  51B3               	movf	f_open@res& (0+255),w,b
 11643  0014EA  A4D8               	btfss	status,2,c
 11644  0014EC  D707               	goto	u14250
 11645                           
 11646                           ; BSR set to: 0
 11647                           ;tff.c: 903: if (!dir || (dir[11] & 0x10))
 11648  0014EE  51B4               	movf	f_open@dir& (0+255),w,b
 11649  0014F0  11B5               	iorwf	(f_open@dir+1)& (0+255),w,b
 11650  0014F2  B4D8               	btfsc	status,2,c
 11651  0014F4  D008               	goto	u14390
 11652                           
 11653                           ; BSR set to: 0
 11654  0014F6  EE20 F00B          	lfsr	2,11
 11655  0014FA  51B4               	movf	f_open@dir& (0+255),w,b
 11656  0014FC  26D9               	addwf	fsr2l,f,c
 11657  0014FE  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11658  001500  22DA               	addwfc	fsr2h,f,c
 11659  001502  A8DF               	btfss	indf2,4,c
 11660  001504  D002               	goto	l1114
 11661  001506                     u14390:
 11662                           
 11663                           ; BSR set to: 0
 11664                           ;tff.c: 904: return FR_NO_FILE;
 11665  001506  0E02               	movlw	2
 11666  001508  0012               	return	
 11667  00150A                     l1114:
 11668                           
 11669                           ; BSR set to: 0
 11670                           ;tff.c: 906: if ((mode & 0x02) && (dir[11] & 0x01))
 11671  00150A  A39C               	btfss	f_open@mode& (0+255),1,b
 11672  00150C  D008               	goto	l12330
 11673                           
 11674                           ; BSR set to: 0
 11675  00150E  EE20 F00B          	lfsr	2,11
 11676  001512  51B4               	movf	f_open@dir& (0+255),w,b
 11677  001514  26D9               	addwf	fsr2l,f,c
 11678  001516  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11679  001518  22DA               	addwfc	fsr2h,f,c
 11680  00151A  B0DF               	btfsc	indf2,0,c
 11681  00151C  D751               	goto	u14320
 11682  00151E                     l12330:
 11683                           
 11684                           ; BSR set to: 0
 11685                           ;tff.c: 908: };tff.c: 909: fp->dir_sect = dj.fs->winsect;
 11686  00151E  EE20 F004          	lfsr	2,4
 11687  001522  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11688  001524  26D9               	addwf	fsr2l,f,c
 11689  001526  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11690  001528  22DA               	addwfc	fsr2h,f,c
 11691  00152A  EE10 F016          	lfsr	1,22
 11692  00152E  5198               	movf	f_open@fp& (0+255),w,b
 11693  001530  26E1               	addwf	fsr1l,f,c
 11694  001532  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11695  001534  22E2               	addwfc	fsr1h,f,c
 11696  001536  CFDE FFE6          	movff	postinc2,postinc1
 11697  00153A  CFDE FFE6          	movff	postinc2,postinc1
 11698  00153E  CFDE FFE6          	movff	postinc2,postinc1
 11699  001542  CFDE FFE6          	movff	postinc2,postinc1
 11700                           
 11701                           ; BSR set to: 0
 11702                           ;tff.c: 910: fp->dir_ptr = dir;
 11703  001546  EE20 F01A          	lfsr	2,26
 11704  00154A  5198               	movf	f_open@fp& (0+255),w,b
 11705  00154C  26D9               	addwf	fsr2l,f,c
 11706  00154E  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11707  001550  22DA               	addwfc	fsr2h,f,c
 11708  001552  C0B4  FFDE         	movff	f_open@dir,postinc2
 11709  001556  C0B5  FFDD         	movff	f_open@dir+1,postdec2
 11710                           
 11711                           ; BSR set to: 0
 11712                           ;tff.c: 912: fp->flag = mode;
 11713  00155A  EE20 F002          	lfsr	2,2
 11714  00155E  5198               	movf	f_open@fp& (0+255),w,b
 11715  001560  26D9               	addwf	fsr2l,f,c
 11716  001562  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11717  001564  22DA               	addwfc	fsr2h,f,c
 11718  001566  C09C  FFDF         	movff	f_open@mode,indf2
 11719                           
 11720                           ;tff.c: 913: fp->org_clust =;tff.c: 917: (WORD)(*(WORD*)(BYTE*)(&dir[26]));
 11721  00156A  EE20 F01A          	lfsr	2,26
 11722  00156E  51B4               	movf	f_open@dir& (0+255),w,b
 11723  001570  26D9               	addwf	fsr2l,f,c
 11724  001572  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11725  001574  22DA               	addwfc	fsr2h,f,c
 11726  001576  EE10 F00E          	lfsr	1,14
 11727  00157A  5198               	movf	f_open@fp& (0+255),w,b
 11728  00157C  26E1               	addwf	fsr1l,f,c
 11729  00157E  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11730  001580  22E2               	addwfc	fsr1h,f,c
 11731  001582  CFDE FFE6          	movff	postinc2,postinc1
 11732  001586  CFDD FFE5          	movff	postdec2,postdec1
 11733                           
 11734                           ;tff.c: 918: fp->fsize = (DWORD)(*(DWORD*)(BYTE*)(&dir[28]));
 11735  00158A  EE20 F01C          	lfsr	2,28
 11736  00158E  51B4               	movf	f_open@dir& (0+255),w,b
 11737  001590  26D9               	addwf	fsr2l,f,c
 11738  001592  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11739  001594  22DA               	addwfc	fsr2h,f,c
 11740  001596  EE10 F00A          	lfsr	1,10
 11741  00159A  5198               	movf	f_open@fp& (0+255),w,b
 11742  00159C  26E1               	addwf	fsr1l,f,c
 11743  00159E  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11744  0015A0  22E2               	addwfc	fsr1h,f,c
 11745  0015A2  CFDE FFE6          	movff	postinc2,postinc1
 11746  0015A6  CFDE FFE6          	movff	postinc2,postinc1
 11747  0015AA  CFDE FFE6          	movff	postinc2,postinc1
 11748  0015AE  CFDE FFE6          	movff	postinc2,postinc1
 11749                           
 11750                           ; BSR set to: 0
 11751                           ;tff.c: 919: fp->fptr = 0; fp->csect = 255;
 11752  0015B2  EE20 F006          	lfsr	2,6
 11753  0015B6  5198               	movf	f_open@fp& (0+255),w,b
 11754  0015B8  26D9               	addwf	fsr2l,f,c
 11755  0015BA  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11756  0015BC  22DA               	addwfc	fsr2h,f,c
 11757  0015BE  6ADE               	clrf	postinc2,c
 11758  0015C0  6ADE               	clrf	postinc2,c
 11759  0015C2  6ADE               	clrf	postinc2,c
 11760  0015C4  6ADD               	clrf	postdec2,c
 11761                           
 11762                           ; BSR set to: 0
 11763  0015C6  EE20 F003          	lfsr	2,3
 11764  0015CA  5198               	movf	f_open@fp& (0+255),w,b
 11765  0015CC  26D9               	addwf	fsr2l,f,c
 11766  0015CE  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11767  0015D0  22DA               	addwfc	fsr2h,f,c
 11768  0015D2  0EFF               	movlw	255
 11769  0015D4  6EDF               	movwf	indf2,c
 11770                           
 11771                           ; BSR set to: 0
 11772                           ;tff.c: 920: fp->fs = dj.fs; fp->id = dj.fs->id;
 11773  0015D6  EE20 F004          	lfsr	2,4
 11774  0015DA  5198               	movf	f_open@fp& (0+255),w,b
 11775  0015DC  26D9               	addwf	fsr2l,f,c
 11776  0015DE  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11777  0015E0  22DA               	addwfc	fsr2h,f,c
 11778  0015E2  C0BA  FFDE         	movff	f_open@dj+4,postinc2
 11779  0015E6  C0BB  FFDD         	movff	f_open@dj+5,postdec2
 11780                           
 11781                           ; BSR set to: 0
 11782  0015EA  C0BA  FFD9         	movff	f_open@dj+4,fsr2l
 11783  0015EE  C0BB  FFDA         	movff	f_open@dj+5,fsr2h
 11784  0015F2  C098  FFE1         	movff	f_open@fp,fsr1l
 11785  0015F6  C099  FFE2         	movff	f_open@fp+1,fsr1h
 11786  0015FA  CFDE FFE6          	movff	postinc2,postinc1
 11787  0015FE  CFDD FFE5          	movff	postdec2,postdec1
 11788                           
 11789                           ; BSR set to: 0
 11790                           ;tff.c: 922: return FR_OK;
 11791  001602  0E00               	movlw	0
 11792  001604  0012               	return		;funcret
 11793  001606                     __end_of_f_open:
 11794                           	callstack 0
 11795                           
 11796 ;; *************** function _trace_path *****************
 11797 ;; Defined at:
 11798 ;;		line 502 in file "bibliotecas/tff.c"
 11799 ;; Parameters:    Size  Location     Type
 11800 ;;  dj              1   30[BANK0 ] PTR struct _DIR_E
 11801 ;;		 -> f_open@dj(14), 
 11802 ;;  fn              1   31[BANK0 ] PTR unsigned char 
 11803 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
 11804 ;;  path            2   32[BANK0 ] PTR const unsigned char 
 11805 ;;		 -> STR_16(13), filename(20), 
 11806 ;;  dir             1   34[BANK0 ] PTR PTR unsigned char 
 11807 ;;		 -> f_opendir@dir(2), f_open@dir(2), 
 11808 ;; Auto vars:     Size  Location     Type
 11809 ;;  dptr            2   48[BANK0 ] PTR unsigned char 
 11810 ;;		 -> fs.win(512), NULL(0), fs(544), 
 11811 ;;  clust           2   45[BANK0 ] unsigned short 
 11812 ;;  fs              2   43[BANK0 ] PTR struct _FATFS
 11813 ;;		 -> NULL(0), fs(544), 
 11814 ;;  ds              1   47[BANK0 ] unsigned char 
 11815 ;; Return value:  Size  Location     Type
 11816 ;;                  1    wreg      enum E155
 11817 ;; Registers used:
 11818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11819 ;; Tracked objects:
 11820 ;;		On entry : 3F/0
 11821 ;;		On exit  : 0/0
 11822 ;;		Unchanged: 0/0
 11823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11824 ;;      Params:         0       5       0       0       0       0       0       0       0
 11825 ;;      Locals:         0      11       0       0       0       0       0       0       0
 11826 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11827 ;;      Totals:         0      20       0       0       0       0       0       0       0
 11828 ;;Total ram usage:       20 bytes
 11829 ;; Hardware stack levels used:    1
 11830 ;; Hardware stack levels required when called:   10
 11831 ;; This function calls:
 11832 ;;		_clust2sect
 11833 ;;		_make_dirfile
 11834 ;;		_memcmp
 11835 ;;		_move_window
 11836 ;;		_next_dir_entry
 11837 ;; This function is called by:
 11838 ;;		_f_open
 11839 ;; This function uses a non-reentrant model
 11840 ;;
 11841                           
 11842                           	psect	text71
 11843  001E82                     __ptext71:
 11844                           	callstack 0
 11845  001E82                     _trace_path:
 11846                           	callstack 15
 11847                           
 11848                           ; BSR set to: 0
 11849                           ;tff.c: 512: FATFS *fs = FatFs;
 11850                           
 11851                           ;incstack = 0
 11852  001E82  C04D  F08B         	movff	_FatFs,trace_path@fs
 11853  001E86  C04E  F08C         	movff	_FatFs+1,trace_path@fs+1
 11854                           
 11855                           ; BSR set to: 0
 11856                           ;tff.c: 515: dj->fs = fs;
 11857  001E8A  517E               	movf	trace_path@dj& (0+255),w,b
 11858  001E8C  6ED9               	movwf	fsr2l,c
 11859  001E8E  6ADA               	clrf	fsr2h,c
 11860  001E90  0E04               	movlw	4
 11861  001E92  26D9               	addwf	fsr2l,f,c
 11862  001E94  C08B  FFDE         	movff	trace_path@fs,postinc2
 11863  001E98  C08C  FFDD         	movff	trace_path@fs+1,postdec2
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;tff.c: 516: clust = fs->dirbase;
 11867  001E9C  EE20 F00C          	lfsr	2,12
 11868  001EA0  518B               	movf	trace_path@fs& (0+255),w,b
 11869  001EA2  26D9               	addwf	fsr2l,f,c
 11870  001EA4  518C               	movf	(trace_path@fs+1)& (0+255),w,b
 11871  001EA6  22DA               	addwfc	fsr2h,f,c
 11872  001EA8  CFDE F08D          	movff	postinc2,trace_path@clust
 11873  001EAC  CFDD F08E          	movff	postdec2,trace_path@clust+1
 11874                           
 11875                           ; BSR set to: 0
 11876                           ;tff.c: 523: {;tff.c: 524: dj->clust = dj->sclust = 0;
 11877  001EB0  517E               	movf	trace_path@dj& (0+255),w,b
 11878  001EB2  6ED9               	movwf	fsr2l,c
 11879  001EB4  6ADA               	clrf	fsr2h,c
 11880  001EB6  0E06               	movlw	6
 11881  001EB8  26D9               	addwf	fsr2l,f,c
 11882  001EBA  0E00               	movlw	0
 11883  001EBC  6EDE               	movwf	postinc2,c
 11884  001EBE  0E00               	movlw	0
 11885  001EC0  6EDD               	movwf	postdec2,c
 11886  001EC2  517E               	movf	trace_path@dj& (0+255),w,b
 11887  001EC4  6EE1               	movwf	fsr1l,c
 11888  001EC6  6AE2               	clrf	fsr1h,c
 11889  001EC8  0E08               	movlw	8
 11890  001ECA  26E1               	addwf	fsr1l,f,c
 11891  001ECC  CFDE FFE6          	movff	postinc2,postinc1
 11892  001ED0  CFDD FFE5          	movff	postdec2,postdec1
 11893                           
 11894                           ; BSR set to: 0
 11895                           ;tff.c: 525: dj->sect = clust;
 11896  001ED4  518D               	movf	trace_path@clust& (0+255),w,b
 11897  001ED6  6F83               	movwf	??_trace_path& (0+255),b
 11898  001ED8  518E               	movf	(trace_path@clust+1)& (0+255),w,b
 11899  001EDA  6F84               	movwf	(??_trace_path+1)& (0+255),b
 11900  001EDC  6B85               	clrf	(??_trace_path+2)& (0+255),b
 11901  001EDE  6B86               	clrf	(??_trace_path+3)& (0+255),b
 11902  001EE0  517E               	movf	trace_path@dj& (0+255),w,b
 11903  001EE2  6ED9               	movwf	fsr2l,c
 11904  001EE4  6ADA               	clrf	fsr2h,c
 11905  001EE6  0E0A               	movlw	10
 11906  001EE8  26D9               	addwf	fsr2l,f,c
 11907  001EEA  C083  FFDE         	movff	??_trace_path,postinc2
 11908  001EEE  C084  FFDE         	movff	??_trace_path+1,postinc2
 11909  001EF2  C085  FFDE         	movff	??_trace_path+2,postinc2
 11910  001EF6  C086  FFDE         	movff	??_trace_path+3,postinc2
 11911                           
 11912                           ; BSR set to: 0
 11913                           ;tff.c: 526: };tff.c: 527: dj->index = 0;
 11914  001EFA  517E               	movf	trace_path@dj& (0+255),w,b
 11915  001EFC  6ED9               	movwf	fsr2l,c
 11916  001EFE  6ADA               	clrf	fsr2h,c
 11917  001F00  0E02               	movlw	2
 11918  001F02  26D9               	addwf	fsr2l,f,c
 11919  001F04  0E00               	movlw	0
 11920  001F06  6EDE               	movwf	postinc2,c
 11921  001F08  0E00               	movlw	0
 11922  001F0A  6EDD               	movwf	postdec2,c
 11923                           
 11924                           ; BSR set to: 0
 11925                           ;tff.c: 529: if (*path == '\0') {
 11926  001F0C  C080  FFF6         	movff	trace_path@path,tblptrl
 11927  001F10  C081  FFF7         	movff	trace_path@path+1,tblptrh
 11928  001F14  6AF8               	clrf	tblptru,c
 11929  001F16  0E07               	movlw	(high __ramtop+-1)
 11930  001F18  64F7               	cpfsgt	tblptrh,c
 11931  001F1A  D003               	bra	u13497
 11932  001F1C  0008               	tblrd		*
 11933  001F1E  50F5               	movf	tablat,w,c
 11934  001F20  D005               	bra	u13490
 11935  001F22                     u13497:
 11936  001F22  CFF6 FFE1          	movff	tblptrl,fsr1l
 11937  001F26  CFF7 FFE2          	movff	tblptrh,fsr1h
 11938  001F2A  50E7               	movf	indf1,w,c
 11939  001F2C                     u13490:
 11940  001F2C  0900               	iorlw	0
 11941  001F2E  A4D8               	btfss	status,2,c
 11942  001F30  D00A               	goto	l11760
 11943                           
 11944                           ;tff.c: 530: *dir = (0); return FR_OK;
 11945  001F32  0100               	movlb	0	; () banked
 11946  001F34  5182               	movf	trace_path@dir& (0+255),w,b
 11947  001F36  6ED9               	movwf	fsr2l,c
 11948  001F38  6ADA               	clrf	fsr2h,c
 11949  001F3A  0E00               	movlw	0
 11950  001F3C  6EDE               	movwf	postinc2,c
 11951  001F3E  0E00               	movlw	0
 11952  001F40  6EDD               	movwf	postdec2,c
 11953  001F42                     l11756:
 11954                           
 11955                           ; BSR set to: 0
 11956  001F42  0E00               	movlw	0
 11957  001F44  0012               	return	
 11958  001F46                     l11760:
 11959                           
 11960                           ;tff.c: 534: ds = make_dirfile(&path, fn);
 11961  001F46  0E80               	movlw	low trace_path@path
 11962  001F48  6E12               	movwf	make_dirfile@path^0,c
 11963  001F4A  C07F  F013         	movff	trace_path@fn,make_dirfile@dirname
 11964  001F4E  ECA8  F019         	call	_make_dirfile	;wreg free
 11965  001F52  0100               	movlb	0	; () banked
 11966  001F54  6F8F               	movwf	trace_path@ds& (0+255),b
 11967                           
 11968                           ; BSR set to: 0
 11969                           ;tff.c: 535: if (ds == 1) return FR_INVALID_NAME;
 11970  001F56  058F               	decf	trace_path@ds& (0+255),w,b
 11971  001F58  A4D8               	btfss	status,2,c
 11972  001F5A  D002               	goto	l11768
 11973                           
 11974                           ; BSR set to: 0
 11975  001F5C  0E04               	movlw	4
 11976  001F5E  0012               	return	
 11977  001F60                     l11768:
 11978                           
 11979                           ;tff.c: 537: if (!move_window(dj->sect)) return FR_RW_ERROR;
 11980  001F60  0100               	movlb	0	; () banked
 11981  001F62  517E               	movf	trace_path@dj& (0+255),w,b
 11982  001F64  6ED9               	movwf	fsr2l,c
 11983  001F66  6ADA               	clrf	fsr2h,c
 11984  001F68  0E0A               	movlw	10
 11985  001F6A  26D9               	addwf	fsr2l,f,c
 11986  001F6C  CFDE F035          	movff	postinc2,move_window@sector
 11987  001F70  CFDE F036          	movff	postinc2,move_window@sector+1
 11988  001F74  CFDE F037          	movff	postinc2,move_window@sector+2
 11989  001F78  CFDE F038          	movff	postinc2,move_window@sector+3
 11990  001F7C  EC15  F015         	call	_move_window	;wreg free
 11991  001F80  0900               	iorlw	0
 11992  001F82  A4D8               	btfss	status,2,c
 11993  001F84  D002               	goto	l11774
 11994  001F86  0E08               	movlw	8
 11995  001F88  0012               	return	
 11996  001F8A                     l11774:
 11997                           
 11998                           ;tff.c: 538: dptr = &fs->win[(dj->index & 15) * 32];
 11999  001F8A  0100               	movlb	0	; () banked
 12000  001F8C  517E               	movf	trace_path@dj& (0+255),w,b
 12001  001F8E  6ED9               	movwf	fsr2l,c
 12002  001F90  6ADA               	clrf	fsr2h,c
 12003  001F92  0E02               	movlw	2
 12004  001F94  26D9               	addwf	fsr2l,f,c
 12005  001F96  CFDE F083          	movff	postinc2,??_trace_path
 12006  001F9A  CFDD F084          	movff	postdec2,??_trace_path+1
 12007  001F9E  0E0F               	movlw	15
 12008  001FA0  1783               	andwf	??_trace_path& (0+255),f,b
 12009  001FA2  0E00               	movlw	0
 12010  001FA4  1784               	andwf	(??_trace_path+1)& (0+255),f,b
 12011  001FA6  0E05               	movlw	5
 12012  001FA8                     u13535:
 12013  001FA8  90D8               	bcf	status,0,c
 12014  001FAA  3783               	rlcf	??_trace_path& (0+255),f,b
 12015  001FAC  3784               	rlcf	(??_trace_path+1)& (0+255),f,b
 12016  001FAE  2EE8               	decfsz	wreg,f,c
 12017  001FB0  D7FB               	goto	u13535
 12018  001FB2  C08B  F085         	movff	trace_path@fs,??_trace_path+2
 12019  001FB6  C08C  F086         	movff	trace_path@fs+1,??_trace_path+3
 12020  001FBA  5183               	movf	??_trace_path& (0+255),w,b
 12021  001FBC  2785               	addwf	(??_trace_path+2)& (0+255),f,b
 12022  001FBE  5184               	movf	(??_trace_path+1)& (0+255),w,b
 12023  001FC0  2386               	addwfc	(??_trace_path+3)& (0+255),f,b
 12024  001FC2  0E20               	movlw	32
 12025  001FC4  2585               	addwf	(??_trace_path+2)& (0+255),w,b
 12026  001FC6  6F90               	movwf	trace_path@dptr& (0+255),b
 12027  001FC8  0E00               	movlw	0
 12028  001FCA  2186               	addwfc	(??_trace_path+3)& (0+255),w,b
 12029  001FCC  6F91               	movwf	(trace_path@dptr+1)& (0+255),b
 12030                           
 12031                           ; BSR set to: 0
 12032                           ;tff.c: 539: if (dptr[0] == 0)
 12033  001FCE  C090  FFD9         	movff	trace_path@dptr,fsr2l
 12034  001FD2  C091  FFDA         	movff	trace_path@dptr+1,fsr2h
 12035  001FD6  50DF               	movf	indf2,w,c
 12036  001FD8  A4D8               	btfss	status,2,c
 12037  001FDA  D00D               	goto	l11786
 12038                           
 12039                           ; BSR set to: 0
 12040                           ;tff.c: 540: return !ds ? FR_NO_FILE : FR_NO_PATH;
 12041  001FDC  518F               	movf	trace_path@ds& (0+255),w,b
 12042  001FDE  B4D8               	btfsc	status,2,c
 12043  001FE0  D004               	goto	l11782
 12044                           
 12045                           ; BSR set to: 0
 12046  001FE2  0E00               	movlw	0
 12047  001FE4  6F88               	movwf	(_trace_path$1780+1)& (0+255),b
 12048  001FE6  0E03               	movlw	3
 12049  001FE8  D003               	goto	L3
 12050  001FEA                     l11782:
 12051                           
 12052                           ; BSR set to: 0
 12053  001FEA  0E00               	movlw	0
 12054  001FEC  6F88               	movwf	(_trace_path$1780+1)& (0+255),b
 12055  001FEE  0E02               	movlw	2
 12056  001FF0                     L3:
 12057  001FF0  6F87               	movwf	_trace_path$1780& (0+255),b
 12058                           
 12059                           ; BSR set to: 0
 12060  001FF2  5187               	movf	_trace_path$1780& (0+255),w,b
 12061  001FF4  0012               	return	
 12062  001FF6                     l11786:
 12063                           
 12064                           ; BSR set to: 0
 12065                           ;tff.c: 541: if (dptr[0] != 0xE5;tff.c: 542: && !(dptr[11] & 0x08);tff.c: 543: && !memcm
      +                          p(&dptr[0], fn, 8+3) ) break;
 12066  001FF6  C090  FFD9         	movff	trace_path@dptr,fsr2l
 12067  001FFA  C091  FFDA         	movff	trace_path@dptr+1,fsr2h
 12068  001FFE  0EE5               	movlw	229
 12069  002000  18DE               	xorwf	postinc2,w,c
 12070  002002  B4D8               	btfsc	status,2,c
 12071  002004  D019               	goto	l11794
 12072                           
 12073                           ; BSR set to: 0
 12074  002006  EE20 F00B          	lfsr	2,11
 12075  00200A  5190               	movf	trace_path@dptr& (0+255),w,b
 12076  00200C  26D9               	addwf	fsr2l,f,c
 12077  00200E  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
 12078  002010  22DA               	addwfc	fsr2h,f,c
 12079  002012  B6DF               	btfsc	indf2,3,c
 12080  002014  D011               	goto	l11794
 12081                           
 12082                           ; BSR set to: 0
 12083  002016  C090  F00A         	movff	trace_path@dptr,memcmp@s1
 12084  00201A  C091  F00B         	movff	trace_path@dptr+1,memcmp@s1+1
 12085  00201E  C07F  F00C         	movff	trace_path@fn,memcmp@s2
 12086  002022  6A0D               	clrf	(memcmp@s2+1)^0,c
 12087  002024  0E00               	movlw	0
 12088  002026  6E0F               	movwf	(memcmp@n+1)^0,c
 12089  002028  0E0B               	movlw	11
 12090  00202A  6E0E               	movwf	memcmp@n^0,c
 12091  00202C  EC97  F023         	call	_memcmp	;wreg free
 12092  002030  500A               	movf	?_memcmp^0,w,c
 12093  002032  100B               	iorwf	(?_memcmp+1)^0,w,c
 12094  002034  B4D8               	btfsc	status,2,c
 12095  002036  D015               	goto	l11804
 12096  002038                     l11794:
 12097                           
 12098                           ;tff.c: 544: if (!next_dir_entry(dj))
 12099  002038  C07E  F04C         	movff	trace_path@dj,next_dir_entry@dj
 12100  00203C  EC44  F018         	call	_next_dir_entry	;wreg free
 12101  002040  0900               	iorlw	0
 12102  002042  A4D8               	btfss	status,2,c
 12103  002044  D78D               	goto	l11768
 12104                           
 12105                           ;tff.c: 545: return !ds ? FR_NO_FILE : FR_NO_PATH;
 12106  002046  0100               	movlb	0	; () banked
 12107  002048  518F               	movf	trace_path@ds& (0+255),w,b
 12108  00204A  B4D8               	btfsc	status,2,c
 12109  00204C  D004               	goto	l11800
 12110                           
 12111                           ; BSR set to: 0
 12112  00204E  0E00               	movlw	0
 12113  002050  6F8A               	movwf	(_trace_path$1782+1)& (0+255),b
 12114  002052  0E03               	movlw	3
 12115  002054  D003               	goto	L4
 12116  002056                     l11800:
 12117                           
 12118                           ; BSR set to: 0
 12119  002056  0E00               	movlw	0
 12120  002058  6F8A               	movwf	(_trace_path$1782+1)& (0+255),b
 12121  00205A  0E02               	movlw	2
 12122  00205C                     L4:
 12123  00205C  6F89               	movwf	_trace_path$1782& (0+255),b
 12124                           
 12125                           ; BSR set to: 0
 12126  00205E  5189               	movf	_trace_path$1782& (0+255),w,b
 12127  002060  0012               	return	
 12128  002062                     l11804:
 12129                           
 12130                           ;tff.c: 547: if (!ds) { *dir = dptr; return FR_OK; }
 12131  002062  0100               	movlb	0	; () banked
 12132  002064  518F               	movf	trace_path@ds& (0+255),w,b
 12133  002066  A4D8               	btfss	status,2,c
 12134  002068  D008               	goto	l11812
 12135                           
 12136                           ; BSR set to: 0
 12137  00206A  5182               	movf	trace_path@dir& (0+255),w,b
 12138  00206C  6ED9               	movwf	fsr2l,c
 12139  00206E  6ADA               	clrf	fsr2h,c
 12140  002070  C090  FFDE         	movff	trace_path@dptr,postinc2
 12141  002074  C091  FFDD         	movff	trace_path@dptr+1,postdec2
 12142  002078  D764               	goto	l11756
 12143  00207A                     l11812:
 12144                           
 12145                           ; BSR set to: 0
 12146                           ;tff.c: 548: if (!(dptr[11] & 0x10)) return FR_NO_PATH;
 12147  00207A  EE20 F00B          	lfsr	2,11
 12148  00207E  5190               	movf	trace_path@dptr& (0+255),w,b
 12149  002080  26D9               	addwf	fsr2l,f,c
 12150  002082  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
 12151  002084  22DA               	addwfc	fsr2h,f,c
 12152  002086  B8DF               	btfsc	indf2,4,c
 12153  002088  D002               	goto	l11818
 12154                           
 12155                           ; BSR set to: 0
 12156  00208A  0E03               	movlw	3
 12157  00208C  0012               	return	
 12158  00208E                     l11818:
 12159                           
 12160                           ; BSR set to: 0
 12161                           ;tff.c: 549: clust =;tff.c: 553: (WORD)(*(WORD*)(BYTE*)(&dptr[26]));
 12162  00208E  EE20 F01A          	lfsr	2,26
 12163  002092  5190               	movf	trace_path@dptr& (0+255),w,b
 12164  002094  26D9               	addwf	fsr2l,f,c
 12165  002096  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
 12166  002098  22DA               	addwfc	fsr2h,f,c
 12167  00209A  CFDE F08D          	movff	postinc2,trace_path@clust
 12168  00209E  CFDD F08E          	movff	postdec2,trace_path@clust+1
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;tff.c: 554: dj->clust = dj->sclust = clust;
 12172  0020A2  517E               	movf	trace_path@dj& (0+255),w,b
 12173  0020A4  6ED9               	movwf	fsr2l,c
 12174  0020A6  6ADA               	clrf	fsr2h,c
 12175  0020A8  0E06               	movlw	6
 12176  0020AA  26D9               	addwf	fsr2l,f,c
 12177  0020AC  C08D  FFDE         	movff	trace_path@clust,postinc2
 12178  0020B0  C08E  FFDD         	movff	trace_path@clust+1,postdec2
 12179  0020B4  517E               	movf	trace_path@dj& (0+255),w,b
 12180  0020B6  6EE1               	movwf	fsr1l,c
 12181  0020B8  6AE2               	clrf	fsr1h,c
 12182  0020BA  0E08               	movlw	8
 12183  0020BC  26E1               	addwf	fsr1l,f,c
 12184  0020BE  CFDE FFE6          	movff	postinc2,postinc1
 12185  0020C2  CFDD FFE5          	movff	postdec2,postdec1
 12186                           
 12187                           ; BSR set to: 0
 12188                           ;tff.c: 555: dj->sect = clust2sect(clust);
 12189  0020C6  C08D  F016         	movff	trace_path@clust,clust2sect@clust
 12190  0020CA  C08E  F017         	movff	trace_path@clust+1,clust2sect@clust+1
 12191  0020CE  EC01  F021         	call	_clust2sect	;wreg free
 12192  0020D2  0100               	movlb	0	; () banked
 12193  0020D4  517E               	movf	trace_path@dj& (0+255),w,b
 12194  0020D6  6ED9               	movwf	fsr2l,c
 12195  0020D8  6ADA               	clrf	fsr2h,c
 12196  0020DA  0E0A               	movlw	10
 12197  0020DC  26D9               	addwf	fsr2l,f,c
 12198  0020DE  C016  FFDE         	movff	?_clust2sect,postinc2
 12199  0020E2  C017  FFDE         	movff	?_clust2sect+1,postinc2
 12200  0020E6  C018  FFDE         	movff	?_clust2sect+2,postinc2
 12201  0020EA  C019  FFDE         	movff	?_clust2sect+3,postinc2
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;tff.c: 556: dj->index = 2;
 12205  0020EE  517E               	movf	trace_path@dj& (0+255),w,b
 12206  0020F0  6ED9               	movwf	fsr2l,c
 12207  0020F2  6ADA               	clrf	fsr2h,c
 12208  0020F4  0E02               	movlw	2
 12209  0020F6  26D9               	addwf	fsr2l,f,c
 12210  0020F8  0E02               	movlw	2
 12211  0020FA  6EDE               	movwf	postinc2,c
 12212  0020FC  0E00               	movlw	0
 12213  0020FE  6EDD               	movwf	postdec2,c
 12214                           
 12215                           ;tff.c: 557: }
 12216  002100  D722               	goto	l11760
 12217  002102                     __end_of_trace_path:
 12218                           	callstack 0
 12219                           
 12220 ;; *************** function _make_dirfile *****************
 12221 ;; Defined at:
 12222 ;;		line 439 in file "bibliotecas/tff.c"
 12223 ;; Parameters:    Size  Location     Type
 12224 ;;  path            1   17[COMRAM] PTR PTR const unsigned c
 12225 ;;		 -> trace_path@path(2), 
 12226 ;;  dirname         1   18[COMRAM] PTR unsigned char 
 12227 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
 12228 ;; Auto vars:     Size  Location     Type
 12229 ;;  c               1   27[COMRAM] unsigned char 
 12230 ;;  n               1   26[COMRAM] unsigned char 
 12231 ;;  a               1   25[COMRAM] unsigned char 
 12232 ;;  t               1   24[COMRAM] unsigned char 
 12233 ;;  b               1   23[COMRAM] unsigned char 
 12234 ;; Return value:  Size  Location     Type
 12235 ;;                  1    wreg      unsigned char 
 12236 ;; Registers used:
 12237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12238 ;; Tracked objects:
 12239 ;;		On entry : 0/0
 12240 ;;		On exit  : 0/0
 12241 ;;		Unchanged: 0/0
 12242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12243 ;;      Params:         2       0       0       0       0       0       0       0       0
 12244 ;;      Locals:         7       0       0       0       0       0       0       0       0
 12245 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12246 ;;      Totals:        11       0       0       0       0       0       0       0       0
 12247 ;;Total ram usage:       11 bytes
 12248 ;; Hardware stack levels used:    1
 12249 ;; Hardware stack levels required when called:    3
 12250 ;; This function calls:
 12251 ;;		_memset
 12252 ;; This function is called by:
 12253 ;;		_trace_path
 12254 ;; This function uses a non-reentrant model
 12255 ;;
 12256                           
 12257                           	psect	text72
 12258  003350                     __ptext72:
 12259                           	callstack 0
 12260  003350                     _make_dirfile:
 12261                           	callstack 21
 12262                           
 12263                           ;tff.c: 444: BYTE n, t, c, a, b;;tff.c: 447: memset(dirname, ' ', 8+3);
 12264                           
 12265                           ;incstack = 0
 12266  003350  C013  F00A         	movff	make_dirfile@dirname,memset@p1
 12267  003354  6A0B               	clrf	(memset@p1+1)^0,c
 12268  003356  0E00               	movlw	0
 12269  003358  6E0D               	movwf	(memset@c+1)^0,c
 12270  00335A  0E20               	movlw	32
 12271  00335C  6E0C               	movwf	memset@c^0,c
 12272  00335E  0E00               	movlw	0
 12273  003360  6E0F               	movwf	(memset@n+1)^0,c
 12274  003362  0E0B               	movlw	11
 12275  003364  6E0E               	movwf	memset@n^0,c
 12276  003366  EC00  F02C         	call	_memset	;wreg free
 12277                           
 12278                           ;tff.c: 448: a = 0; b = 0x18;
 12279  00336A  0E00               	movlw	0
 12280  00336C  6E1A               	movwf	make_dirfile@a^0,c
 12281  00336E  0E18               	movlw	24
 12282  003370  6E18               	movwf	make_dirfile@b^0,c
 12283                           
 12284                           ;tff.c: 449: n = 0; t = 8;
 12285  003372  0E00               	movlw	0
 12286  003374  6E1B               	movwf	make_dirfile@n^0,c
 12287  003376  0E08               	movlw	8
 12288  003378  6E19               	movwf	make_dirfile@t^0,c
 12289  00337A                     l11390:
 12290                           
 12291                           ;tff.c: 451: c = *(*path)++;
 12292  00337A  5012               	movf	make_dirfile@path^0,w,c
 12293  00337C  6ED9               	movwf	fsr2l,c
 12294  00337E  6ADA               	clrf	fsr2h,c
 12295  003380  CFDF F014          	movff	indf2,??_make_dirfile
 12296  003384  0E01               	movlw	1
 12297  003386  26DE               	addwf	postinc2,f,c
 12298  003388  CFDF F015          	movff	indf2,??_make_dirfile+1
 12299  00338C  0E00               	movlw	0
 12300  00338E  22DD               	addwfc	postdec2,f,c
 12301  003390  C014  FFF6         	movff	??_make_dirfile,tblptrl
 12302  003394  C015  FFF7         	movff	??_make_dirfile+1,tblptrh
 12303  003398  6AF8               	clrf	tblptru,c
 12304  00339A  0E07               	movlw	(high __ramtop+-1)
 12305  00339C  64F7               	cpfsgt	tblptrh,c
 12306  00339E  D003               	bra	u12947
 12307  0033A0  0008               	tblrd		*
 12308  0033A2  50F5               	movf	tablat,w,c
 12309  0033A4  D005               	bra	u12940
 12310  0033A6                     u12947:
 12311  0033A6  CFF6 FFE1          	movff	tblptrl,fsr1l
 12312  0033AA  CFF7 FFE2          	movff	tblptrh,fsr1h
 12313  0033AE  50E7               	movf	indf1,w,c
 12314  0033B0                     u12940:
 12315  0033B0  6E1C               	movwf	make_dirfile@c^0,c
 12316                           
 12317                           ;tff.c: 452: if (c == '\0' || c == '/') {
 12318  0033B2  501C               	movf	make_dirfile@c^0,w,c
 12319  0033B4  B4D8               	btfsc	status,2,c
 12320  0033B6  D004               	goto	u12960
 12321  0033B8  0E2F               	movlw	47
 12322  0033BA  181C               	xorwf	make_dirfile@c^0,w,c
 12323  0033BC  A4D8               	btfss	status,2,c
 12324  0033BE  D012               	goto	l11410
 12325  0033C0                     u12960:
 12326                           
 12327                           ;tff.c: 453: if (n == 0) break;
 12328  0033C0  501B               	movf	make_dirfile@n^0,w,c
 12329  0033C2  B4D8               	btfsc	status,2,c
 12330  0033C4  D070               	goto	l11498
 12331  0033C6  501A               	movf	make_dirfile@a^0,w,c
 12332  0033C8  1418               	andwf	make_dirfile@b^0,w,c
 12333  0033CA  6E14               	movwf	??_make_dirfile^0,c
 12334  0033CC  5014               	movf	??_make_dirfile^0,w,c
 12335  0033CE  6E16               	movwf	_make_dirfile$1733^0,c
 12336  0033D0  6A17               	clrf	(_make_dirfile$1733+1)^0,c
 12337  0033D2  5013               	movf	make_dirfile@dirname^0,w,c
 12338  0033D4  6ED9               	movwf	fsr2l,c
 12339  0033D6  6ADA               	clrf	fsr2h,c
 12340  0033D8  0E0B               	movlw	11
 12341  0033DA  26D9               	addwf	fsr2l,f,c
 12342  0033DC  C016  FFDF         	movff	_make_dirfile$1733,indf2
 12343                           
 12344                           ;tff.c: 455: return c;
 12345  0033E0  501C               	movf	make_dirfile@c^0,w,c
 12346  0033E2  0012               	return	
 12347  0033E4                     l11410:
 12348                           
 12349                           ;tff.c: 456: };tff.c: 457: if (c <= ' ' || c == 0x7F) break;
 12350  0033E4  0E20               	movlw	32
 12351  0033E6  641C               	cpfsgt	make_dirfile@c^0,c
 12352  0033E8  D05E               	goto	l11498
 12353  0033EA  0E7F               	movlw	127
 12354  0033EC  181C               	xorwf	make_dirfile@c^0,w,c
 12355  0033EE  B4D8               	btfsc	status,2,c
 12356  0033F0  D05A               	goto	l11498
 12357                           
 12358                           ;tff.c: 458: if (c == '.') {
 12359  0033F2  0E2E               	movlw	46
 12360  0033F4  181C               	xorwf	make_dirfile@c^0,w,c
 12361  0033F6  A4D8               	btfss	status,2,c
 12362  0033F8  D00C               	goto	l11440
 12363                           
 12364                           ;tff.c: 459: if (!(a & 1) && n >= 1 && n <= 8) {
 12365  0033FA  B01A               	btfsc	make_dirfile@a^0,0,c
 12366  0033FC  D054               	goto	l11498
 12367  0033FE  501B               	movf	make_dirfile@n^0,w,c
 12368  003400  B4D8               	btfsc	status,2,c
 12369  003402  D051               	goto	l11498
 12370  003404  0E09               	movlw	9
 12371  003406  601B               	cpfslt	make_dirfile@n^0,c
 12372  003408  D04E               	goto	l11498
 12373                           
 12374                           ;tff.c: 460: n = 8; t = 11; continue;
 12375  00340A  0E08               	movlw	8
 12376  00340C  6E1B               	movwf	make_dirfile@n^0,c
 12377  00340E  0E0B               	movlw	11
 12378  003410  D7B3               	goto	L5
 12379  003412                     l11440:
 12380                           
 12381                           ;tff.c: 470: };tff.c: 471: if (c == '"') break;
 12382  003412  0E22               	movlw	34
 12383  003414  181C               	xorwf	make_dirfile@c^0,w,c
 12384  003416  B4D8               	btfsc	status,2,c
 12385  003418  D046               	goto	l11498
 12386                           
 12387                           ;tff.c: 472: if (c <= ')') goto md_l1;
 12388  00341A  0E2A               	movlw	42
 12389  00341C  601C               	cpfslt	make_dirfile@c^0,c
 12390  00341E  D001               	goto	l11448
 12391  003420  D035               	goto	l987
 12392  003422                     l11448:
 12393                           
 12394                           ;tff.c: 473: if (c <= ',') break;
 12395  003422  0E2D               	movlw	45
 12396  003424  601C               	cpfslt	make_dirfile@c^0,c
 12397  003426  D001               	goto	l11452
 12398  003428  D03E               	goto	l11498
 12399  00342A                     l11452:
 12400                           
 12401                           ;tff.c: 474: if (c <= '9') goto md_l1;
 12402  00342A  0E3A               	movlw	58
 12403  00342C  601C               	cpfslt	make_dirfile@c^0,c
 12404  00342E  D001               	goto	l11456
 12405  003430  D02D               	goto	l987
 12406  003432                     l11456:
 12407                           
 12408                           ;tff.c: 475: if (c <= '?') break;
 12409  003432  0E40               	movlw	64
 12410  003434  601C               	cpfslt	make_dirfile@c^0,c
 12411  003436  D001               	goto	l990
 12412  003438  D036               	goto	l11498
 12413  00343A                     l990:
 12414                           
 12415                           ;tff.c: 476: if (!(a & 1)) {
 12416  00343A  B01A               	btfsc	make_dirfile@a^0,0,c
 12417  00343C  D027               	goto	l987
 12418                           
 12419                           ;tff.c: 477: if (c == '|') break;
 12420  00343E  0E7C               	movlw	124
 12421  003440  181C               	xorwf	make_dirfile@c^0,w,c
 12422  003442  B4D8               	btfsc	status,2,c
 12423  003444  D030               	goto	l11498
 12424                           
 12425                           ;tff.c: 478: if (c >= '[' && c <= ']') break;
 12426  003446  0E5A               	movlw	90
 12427  003448  641C               	cpfsgt	make_dirfile@c^0,c
 12428  00344A  D004               	goto	l11470
 12429  00344C  0E5E               	movlw	94
 12430  00344E  601C               	cpfslt	make_dirfile@c^0,c
 12431  003450  D001               	goto	l11470
 12432  003452  D029               	goto	l11498
 12433  003454                     l11470:
 12434  003454  0E40               	movlw	64
 12435  003456  641C               	cpfsgt	make_dirfile@c^0,c
 12436  003458  D00A               	goto	l11480
 12437  00345A  0E5B               	movlw	91
 12438  00345C  601C               	cpfslt	make_dirfile@c^0,c
 12439  00345E  D007               	goto	l11480
 12440                           
 12441                           ;tff.c: 480: (t == 8) ? (b &= 0xF7) : (b &= 0xEF);
 12442  003460  0E08               	movlw	8
 12443  003462  1819               	xorwf	make_dirfile@t^0,w,c
 12444  003464  A4D8               	btfss	status,2,c
 12445  003466  D002               	goto	l11478
 12446  003468  9618               	bcf	make_dirfile@b^0,3,c
 12447  00346A  D001               	goto	l11480
 12448  00346C                     l11478:
 12449  00346C  9818               	bcf	make_dirfile@b^0,4,c
 12450  00346E                     l11480:
 12451                           
 12452                           ;tff.c: 481: if (c >= 'a' && c <= 'z') {
 12453  00346E  0E60               	movlw	96
 12454  003470  641C               	cpfsgt	make_dirfile@c^0,c
 12455  003472  D00C               	goto	l987
 12456  003474  0E7B               	movlw	123
 12457  003476  601C               	cpfslt	make_dirfile@c^0,c
 12458  003478  D009               	goto	l987
 12459                           
 12460                           ;tff.c: 483: if (1) (t == 8) ? (a |= 0x08) : (a |= 0x10);
 12461  00347A  0E20               	movlw	32
 12462  00347C  5E1C               	subwf	make_dirfile@c^0,f,c
 12463  00347E  0E08               	movlw	8
 12464  003480  1819               	xorwf	make_dirfile@t^0,w,c
 12465  003482  A4D8               	btfss	status,2,c
 12466  003484  D002               	goto	l11488
 12467  003486  861A               	bsf	make_dirfile@a^0,3,c
 12468  003488  D001               	goto	l987
 12469  00348A                     l11488:
 12470  00348A  881A               	bsf	make_dirfile@a^0,4,c
 12471  00348C                     l987:
 12472                           
 12473                           ;tff.c: 487: a &= 0xFE;
 12474  00348C  901A               	bcf	make_dirfile@a^0,0,c
 12475                           
 12476                           ;tff.c: 489: if (n >= t) break;
 12477  00348E  5019               	movf	make_dirfile@t^0,w,c
 12478  003490  5C1B               	subwf	make_dirfile@n^0,w,c
 12479  003492  B0D8               	btfsc	status,0,c
 12480  003494  D008               	goto	l11498
 12481                           
 12482                           ;tff.c: 490: dirname[n++] = c;
 12483  003496  5013               	movf	make_dirfile@dirname^0,w,c
 12484  003498  241B               	addwf	make_dirfile@n^0,w,c
 12485  00349A  6ED9               	movwf	fsr2l,c
 12486  00349C  6ADA               	clrf	fsr2h,c
 12487  00349E  C01C  FFDF         	movff	make_dirfile@c,indf2
 12488  0034A2  2A1B               	incf	make_dirfile@n^0,f,c
 12489  0034A4  D76A               	goto	l11390
 12490  0034A6                     l11498:
 12491                           
 12492                           ;tff.c: 492: return 1;
 12493  0034A6  0E01               	movlw	1
 12494  0034A8  0012               	return		;funcret
 12495  0034AA                     __end_of_make_dirfile:
 12496                           	callstack 0
 12497                           
 12498 ;; *************** function _reserve_direntry *****************
 12499 ;; Defined at:
 12500 ;;		line 568 in file "bibliotecas/tff.c"
 12501 ;; Parameters:    Size  Location     Type
 12502 ;;  dj              1   38[BANK0 ] PTR struct _DIR_E
 12503 ;;		 -> f_open@dj(14), 
 12504 ;;  dir             1   39[BANK0 ] PTR PTR unsigned char 
 12505 ;;		 -> f_open@dir(2), 
 12506 ;; Auto vars:     Size  Location     Type
 12507 ;;  sector          4   44[BANK0 ] unsigned long 
 12508 ;;  fs              2   54[BANK0 ] PTR struct _FATFS
 12509 ;;		 -> NULL(0), fs(544), 
 12510 ;;  clust           2   52[BANK0 ] unsigned short 
 12511 ;;  dptr            2   49[BANK0 ] PTR unsigned char 
 12512 ;;		 -> fs.win(512), NULL(0), fs(544), 
 12513 ;;  c               1   51[BANK0 ] unsigned char 
 12514 ;;  n               1   48[BANK0 ] unsigned char 
 12515 ;; Return value:  Size  Location     Type
 12516 ;;                  1    wreg      enum E155
 12517 ;; Registers used:
 12518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12519 ;; Tracked objects:
 12520 ;;		On entry : 3F/0
 12521 ;;		On exit  : 0/0
 12522 ;;		Unchanged: 0/0
 12523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12524 ;;      Params:         0       2       0       0       0       0       0       0       0
 12525 ;;      Locals:         0      12       0       0       0       0       0       0       0
 12526 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12527 ;;      Totals:         0      18       0       0       0       0       0       0       0
 12528 ;;Total ram usage:       18 bytes
 12529 ;; Hardware stack levels used:    1
 12530 ;; Hardware stack levels required when called:   10
 12531 ;; This function calls:
 12532 ;;		_clust2sect
 12533 ;;		_create_chain
 12534 ;;		_disk_write
 12535 ;;		_memset
 12536 ;;		_move_window
 12537 ;;		_next_dir_entry
 12538 ;; This function is called by:
 12539 ;;		_f_open
 12540 ;; This function uses a non-reentrant model
 12541 ;;
 12542                           
 12543                           	psect	text73
 12544  002102                     __ptext73:
 12545                           	callstack 0
 12546  002102                     _reserve_direntry:
 12547                           	callstack 15
 12548                           
 12549                           ; BSR set to: 0
 12550                           ;tff.c: 573: CLUST clust;;tff.c: 574: DWORD sector;;tff.c: 575: BYTE c, n, *dptr;;tff.c:
      +                           576: FATFS *fs = dj->fs;
 12551                           
 12552                           ;incstack = 0
 12553  002102  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12554  002104  6ED9               	movwf	fsr2l,c
 12555  002106  6ADA               	clrf	fsr2h,c
 12556  002108  0E04               	movlw	4
 12557  00210A  26D9               	addwf	fsr2l,f,c
 12558  00210C  CFDE F096          	movff	postinc2,reserve_direntry@fs
 12559  002110  CFDD F097          	movff	postdec2,reserve_direntry@fs+1
 12560                           
 12561                           ;tff.c: 580: clust = dj->sclust;
 12562  002114  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12563  002116  6ED9               	movwf	fsr2l,c
 12564  002118  6ADA               	clrf	fsr2h,c
 12565  00211A  0E06               	movlw	6
 12566  00211C  26D9               	addwf	fsr2l,f,c
 12567  00211E  CFDE F094          	movff	postinc2,reserve_direntry@clust
 12568  002122  CFDD F095          	movff	postdec2,reserve_direntry@clust+1
 12569                           
 12570                           ; BSR set to: 0
 12571                           ;tff.c: 581: if (clust != 0) {
 12572  002126  5194               	movf	reserve_direntry@clust& (0+255),w,b
 12573  002128  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12574  00212A  B4D8               	btfsc	status,2,c
 12575  00212C  D01E               	goto	l11834
 12576                           
 12577                           ; BSR set to: 0
 12578                           ;tff.c: 582: dj->clust = clust;
 12579  00212E  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12580  002130  6ED9               	movwf	fsr2l,c
 12581  002132  6ADA               	clrf	fsr2h,c
 12582  002134  0E08               	movlw	8
 12583  002136  26D9               	addwf	fsr2l,f,c
 12584  002138  C094  FFDE         	movff	reserve_direntry@clust,postinc2
 12585  00213C  C095  FFDD         	movff	reserve_direntry@clust+1,postdec2
 12586                           
 12587                           ; BSR set to: 0
 12588                           ;tff.c: 583: dj->sect = clust2sect(clust);
 12589  002140  C094  F016         	movff	reserve_direntry@clust,clust2sect@clust
 12590  002144  C095  F017         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 12591  002148  EC01  F021         	call	_clust2sect	;wreg free
 12592  00214C  0100               	movlb	0	; () banked
 12593  00214E  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12594  002150  6ED9               	movwf	fsr2l,c
 12595  002152  6ADA               	clrf	fsr2h,c
 12596  002154  0E0A               	movlw	10
 12597  002156  26D9               	addwf	fsr2l,f,c
 12598  002158  C016  FFDE         	movff	?_clust2sect,postinc2
 12599  00215C  C017  FFDE         	movff	?_clust2sect+1,postinc2
 12600  002160  C018  FFDE         	movff	?_clust2sect+2,postinc2
 12601  002164  C019  FFDE         	movff	?_clust2sect+3,postinc2
 12602                           
 12603                           ;tff.c: 584: } else {
 12604  002168  D013               	goto	l11836
 12605  00216A                     l11834:
 12606                           
 12607                           ; BSR set to: 0
 12608                           ;tff.c: 585: dj->sect = fs->dirbase;
 12609  00216A  EE20 F00C          	lfsr	2,12
 12610  00216E  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12611  002170  26D9               	addwf	fsr2l,f,c
 12612  002172  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12613  002174  22DA               	addwfc	fsr2h,f,c
 12614  002176  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12615  002178  6EE1               	movwf	fsr1l,c
 12616  00217A  6AE2               	clrf	fsr1h,c
 12617  00217C  0E0A               	movlw	10
 12618  00217E  26E1               	addwf	fsr1l,f,c
 12619  002180  CFDE FFE6          	movff	postinc2,postinc1
 12620  002184  CFDE FFE6          	movff	postinc2,postinc1
 12621  002188  CFDE FFE6          	movff	postinc2,postinc1
 12622  00218C  CFDE FFE6          	movff	postinc2,postinc1
 12623  002190                     l11836:
 12624                           
 12625                           ; BSR set to: 0
 12626                           ;tff.c: 586: };tff.c: 587: dj->index = 0;
 12627  002190  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12628  002192  6ED9               	movwf	fsr2l,c
 12629  002194  6ADA               	clrf	fsr2h,c
 12630  002196  0E02               	movlw	2
 12631  002198  26D9               	addwf	fsr2l,f,c
 12632  00219A  0E00               	movlw	0
 12633  00219C  6EDE               	movwf	postinc2,c
 12634  00219E  0E00               	movlw	0
 12635  0021A0  6EDD               	movwf	postdec2,c
 12636  0021A2                     l11838:
 12637                           
 12638                           ;tff.c: 590: if (!move_window(dj->sect)) return FR_RW_ERROR;
 12639  0021A2  0100               	movlb	0	; () banked
 12640  0021A4  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12641  0021A6  6ED9               	movwf	fsr2l,c
 12642  0021A8  6ADA               	clrf	fsr2h,c
 12643  0021AA  0E0A               	movlw	10
 12644  0021AC  26D9               	addwf	fsr2l,f,c
 12645  0021AE  CFDE F035          	movff	postinc2,move_window@sector
 12646  0021B2  CFDE F036          	movff	postinc2,move_window@sector+1
 12647  0021B6  CFDE F037          	movff	postinc2,move_window@sector+2
 12648  0021BA  CFDE F038          	movff	postinc2,move_window@sector+3
 12649  0021BE  EC15  F015         	call	_move_window	;wreg free
 12650  0021C2  0900               	iorlw	0
 12651  0021C4  A4D8               	btfss	status,2,c
 12652  0021C6  D002               	goto	l11844
 12653  0021C8                     u13640:
 12654  0021C8  0E08               	movlw	8
 12655  0021CA  0012               	return	
 12656  0021CC                     l11844:
 12657                           
 12658                           ;tff.c: 591: dptr = &fs->win[(dj->index & 15) * 32];
 12659  0021CC  0100               	movlb	0	; () banked
 12660  0021CE  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12661  0021D0  6ED9               	movwf	fsr2l,c
 12662  0021D2  6ADA               	clrf	fsr2h,c
 12663  0021D4  0E02               	movlw	2
 12664  0021D6  26D9               	addwf	fsr2l,f,c
 12665  0021D8  CFDE F088          	movff	postinc2,??_reserve_direntry
 12666  0021DC  CFDD F089          	movff	postdec2,??_reserve_direntry+1
 12667  0021E0  0E0F               	movlw	15
 12668  0021E2  1788               	andwf	??_reserve_direntry& (0+255),f,b
 12669  0021E4  0E00               	movlw	0
 12670  0021E6  1789               	andwf	(??_reserve_direntry+1)& (0+255),f,b
 12671  0021E8  0E05               	movlw	5
 12672  0021EA                     u13655:
 12673  0021EA  90D8               	bcf	status,0,c
 12674  0021EC  3788               	rlcf	??_reserve_direntry& (0+255),f,b
 12675  0021EE  3789               	rlcf	(??_reserve_direntry+1)& (0+255),f,b
 12676  0021F0  2EE8               	decfsz	wreg,f,c
 12677  0021F2  D7FB               	goto	u13655
 12678  0021F4  C096  F08A         	movff	reserve_direntry@fs,??_reserve_direntry+2
 12679  0021F8  C097  F08B         	movff	reserve_direntry@fs+1,??_reserve_direntry+3
 12680  0021FC  5188               	movf	??_reserve_direntry& (0+255),w,b
 12681  0021FE  278A               	addwf	(??_reserve_direntry+2)& (0+255),f,b
 12682  002200  5189               	movf	(??_reserve_direntry+1)& (0+255),w,b
 12683  002202  238B               	addwfc	(??_reserve_direntry+3)& (0+255),f,b
 12684  002204  0E20               	movlw	32
 12685  002206  258A               	addwf	(??_reserve_direntry+2)& (0+255),w,b
 12686  002208  6F91               	movwf	reserve_direntry@dptr& (0+255),b
 12687  00220A  0E00               	movlw	0
 12688  00220C  218B               	addwfc	(??_reserve_direntry+3)& (0+255),w,b
 12689  00220E  6F92               	movwf	(reserve_direntry@dptr+1)& (0+255),b
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;tff.c: 592: c = dptr[0];
 12693  002210  C091  FFD9         	movff	reserve_direntry@dptr,fsr2l
 12694  002214  C092  FFDA         	movff	reserve_direntry@dptr+1,fsr2h
 12695  002218  50DF               	movf	indf2,w,c
 12696  00221A  6F93               	movwf	reserve_direntry@c& (0+255),b
 12697                           
 12698                           ; BSR set to: 0
 12699                           ;tff.c: 593: if (c == 0 || c == 0xE5) {
 12700  00221C  5193               	movf	reserve_direntry@c& (0+255),w,b
 12701  00221E  B4D8               	btfsc	status,2,c
 12702  002220  D004               	goto	u13670
 12703                           
 12704                           ; BSR set to: 0
 12705  002222  0EE5               	movlw	229
 12706  002224  1993               	xorwf	reserve_direntry@c& (0+255),w,b
 12707  002226  A4D8               	btfss	status,2,c
 12708  002228  D009               	goto	l11858
 12709  00222A                     u13670:
 12710                           
 12711                           ; BSR set to: 0
 12712                           ;tff.c: 594: *dir = dptr; return FR_OK;
 12713  00222A  5187               	movf	reserve_direntry@dir& (0+255),w,b
 12714  00222C  6ED9               	movwf	fsr2l,c
 12715  00222E  6ADA               	clrf	fsr2h,c
 12716  002230  C091  FFDE         	movff	reserve_direntry@dptr,postinc2
 12717  002234  C092  FFDD         	movff	reserve_direntry@dptr+1,postdec2
 12718  002238                     l11854:
 12719                           
 12720                           ; BSR set to: 0
 12721  002238  0E00               	movlw	0
 12722  00223A  0012               	return	
 12723  00223C                     l11858:
 12724                           
 12725                           ; BSR set to: 0
 12726                           ;tff.c: 595: };tff.c: 596: } while (next_dir_entry(dj));
 12727  00223C  C086  F04C         	movff	reserve_direntry@dj,next_dir_entry@dj
 12728  002240  EC44  F018         	call	_next_dir_entry	;wreg free
 12729  002244  0900               	iorlw	0
 12730  002246  A4D8               	btfss	status,2,c
 12731  002248  D7AC               	goto	l11838
 12732                           
 12733                           ;tff.c: 600: if (clust == 0 || !(clust = create_chain(dj->clust))) return FR_DENIED;
 12734  00224A  0100               	movlb	0	; () banked
 12735  00224C  5194               	movf	reserve_direntry@clust& (0+255),w,b
 12736  00224E  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12737  002250  B4D8               	btfsc	status,2,c
 12738  002252  D013               	goto	u13700
 12739                           
 12740                           ; BSR set to: 0
 12741  002254  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12742  002256  6ED9               	movwf	fsr2l,c
 12743  002258  6ADA               	clrf	fsr2h,c
 12744  00225A  0E08               	movlw	8
 12745  00225C  26D9               	addwf	fsr2l,f,c
 12746  00225E  CFDE F078          	movff	postinc2,create_chain@clust
 12747  002262  CFDD F079          	movff	postdec2,create_chain@clust+1
 12748  002266  ECBB  F016         	call	_create_chain	;wreg free
 12749  00226A  C078  F094         	movff	?_create_chain,reserve_direntry@clust
 12750  00226E  C079  F095         	movff	?_create_chain+1,reserve_direntry@clust+1
 12751  002272  5194               	movf	reserve_direntry@clust& (0+255),w,b
 12752  002274  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12753  002276  A4D8               	btfss	status,2,c
 12754  002278  D002               	goto	l11868
 12755  00227A                     u13700:
 12756                           
 12757                           ; BSR set to: 0
 12758  00227A  0E06               	movlw	6
 12759  00227C  0012               	return	
 12760  00227E                     l11868:
 12761                           
 12762                           ; BSR set to: 0
 12763                           ;tff.c: 601: if (clust == 1 || !move_window(0)) return FR_RW_ERROR;
 12764  00227E  0594               	decf	reserve_direntry@clust& (0+255),w,b
 12765  002280  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12766  002282  B4D8               	btfsc	status,2,c
 12767  002284  D7A1               	goto	u13640
 12768                           
 12769                           ; BSR set to: 0
 12770  002286  0E00               	movlw	0
 12771  002288  6E35               	movwf	move_window@sector^0,c
 12772  00228A  0E00               	movlw	0
 12773  00228C  6E36               	movwf	(move_window@sector+1)^0,c
 12774  00228E  0E00               	movlw	0
 12775  002290  6E37               	movwf	(move_window@sector+2)^0,c
 12776  002292  0E00               	movlw	0
 12777  002294  6E38               	movwf	(move_window@sector+3)^0,c
 12778  002296  EC15  F015         	call	_move_window	;wreg free
 12779  00229A  0900               	iorlw	0
 12780  00229C  B4D8               	btfsc	status,2,c
 12781  00229E  D794               	goto	u13640
 12782                           
 12783                           ;tff.c: 603: fs->winsect = sector = clust2sect(clust);
 12784  0022A0  C094  F016         	movff	reserve_direntry@clust,clust2sect@clust
 12785  0022A4  C095  F017         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 12786  0022A8  EC01  F021         	call	_clust2sect	;wreg free
 12787  0022AC  C016  F08C         	movff	?_clust2sect,reserve_direntry@sector
 12788  0022B0  C017  F08D         	movff	?_clust2sect+1,reserve_direntry@sector+1
 12789  0022B4  C018  F08E         	movff	?_clust2sect+2,reserve_direntry@sector+2
 12790  0022B8  C019  F08F         	movff	?_clust2sect+3,reserve_direntry@sector+3
 12791  0022BC  0100               	movlb	0	; () banked
 12792  0022BE  EE20 F004          	lfsr	2,4
 12793  0022C2  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12794  0022C4  26D9               	addwf	fsr2l,f,c
 12795  0022C6  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12796  0022C8  22DA               	addwfc	fsr2h,f,c
 12797  0022CA  C08C  FFDE         	movff	reserve_direntry@sector,postinc2
 12798  0022CE  C08D  FFDE         	movff	reserve_direntry@sector+1,postinc2
 12799  0022D2  C08E  FFDE         	movff	reserve_direntry@sector+2,postinc2
 12800  0022D6  C08F  FFDE         	movff	reserve_direntry@sector+3,postinc2
 12801                           
 12802                           ;tff.c: 604: memset(fs->win, 0, 512U);
 12803  0022DA  0E20               	movlw	32
 12804  0022DC  2596               	addwf	reserve_direntry@fs& (0+255),w,b
 12805  0022DE  6E0A               	movwf	memset@p1^0,c
 12806  0022E0  0E00               	movlw	0
 12807  0022E2  2197               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12808  0022E4  6E0B               	movwf	(memset@p1+1)^0,c
 12809  0022E6  0E00               	movlw	0
 12810  0022E8  6E0D               	movwf	(memset@c+1)^0,c
 12811  0022EA  0E00               	movlw	0
 12812  0022EC  6E0C               	movwf	memset@c^0,c
 12813  0022EE  0E02               	movlw	2
 12814  0022F0  6E0F               	movwf	(memset@n+1)^0,c
 12815  0022F2  0E00               	movlw	0
 12816  0022F4  6E0E               	movwf	memset@n^0,c
 12817  0022F6  EC00  F02C         	call	_memset	;wreg free
 12818                           
 12819                           ;tff.c: 605: for (n = fs->csize; n; n--) {
 12820  0022FA  0100               	movlb	0	; () banked
 12821  0022FC  EE20 F01D          	lfsr	2,29
 12822  002300  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12823  002302  26D9               	addwf	fsr2l,f,c
 12824  002304  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12825  002306  22DA               	addwfc	fsr2h,f,c
 12826  002308  50DF               	movf	indf2,w,c
 12827  00230A  6F90               	movwf	reserve_direntry@n& (0+255),b
 12828  00230C  D01E               	goto	l11890
 12829  00230E                     l11880:
 12830                           
 12831                           ; BSR set to: 0
 12832                           ;tff.c: 606: if (disk_write(0, fs->win, sector, 1) != RES_OK)
 12833  00230E  0E20               	movlw	32
 12834  002310  2596               	addwf	reserve_direntry@fs& (0+255),w,b
 12835  002312  6E29               	movwf	disk_write@buff^0,c
 12836  002314  0E00               	movlw	0
 12837  002316  2197               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12838  002318  6E2A               	movwf	(disk_write@buff+1)^0,c
 12839  00231A  C08C  F02B         	movff	reserve_direntry@sector,disk_write@sector
 12840  00231E  C08D  F02C         	movff	reserve_direntry@sector+1,disk_write@sector+1
 12841  002322  C08E  F02D         	movff	reserve_direntry@sector+2,disk_write@sector+2
 12842  002326  C08F  F02E         	movff	reserve_direntry@sector+3,disk_write@sector+3
 12843  00232A  0E01               	movlw	1
 12844  00232C  6E2F               	movwf	disk_write@count^0,c
 12845  00232E  0E00               	movlw	0
 12846  002330  EC31  F029         	call	_disk_write
 12847  002334  0900               	iorlw	0
 12848  002336  A4D8               	btfss	status,2,c
 12849  002338  D747               	goto	u13640
 12850                           
 12851                           ;tff.c: 608: sector++;
 12852  00233A  0E01               	movlw	1
 12853  00233C  0100               	movlb	0	; () banked
 12854  00233E  278C               	addwf	reserve_direntry@sector& (0+255),f,b
 12855  002340  0E00               	movlw	0
 12856  002342  238D               	addwfc	(reserve_direntry@sector+1)& (0+255),f,b
 12857  002344  238E               	addwfc	(reserve_direntry@sector+2)& (0+255),f,b
 12858  002346  238F               	addwfc	(reserve_direntry@sector+3)& (0+255),f,b
 12859                           
 12860                           ; BSR set to: 0
 12861  002348  0790               	decf	reserve_direntry@n& (0+255),f,b
 12862  00234A                     l11890:
 12863                           
 12864                           ; BSR set to: 0
 12865  00234A  5190               	movf	reserve_direntry@n& (0+255),w,b
 12866  00234C  A4D8               	btfss	status,2,c
 12867  00234E  D7DF               	goto	l11880
 12868                           
 12869                           ; BSR set to: 0
 12870                           ;tff.c: 609: };tff.c: 610: fs->winflag = 1;
 12871  002350  EE20 F01F          	lfsr	2,31
 12872  002354  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12873  002356  26D9               	addwf	fsr2l,f,c
 12874  002358  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12875  00235A  22DA               	addwfc	fsr2h,f,c
 12876  00235C  0E01               	movlw	1
 12877  00235E  6EDF               	movwf	indf2,c
 12878                           
 12879                           ;tff.c: 611: *dir = fs->win;
 12880  002360  0E20               	movlw	32
 12881  002362  2596               	addwf	reserve_direntry@fs& (0+255),w,b
 12882  002364  6F88               	movwf	??_reserve_direntry& (0+255),b
 12883  002366  0E00               	movlw	0
 12884  002368  2197               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12885  00236A  6F89               	movwf	(??_reserve_direntry+1)& (0+255),b
 12886  00236C  5187               	movf	reserve_direntry@dir& (0+255),w,b
 12887  00236E  6ED9               	movwf	fsr2l,c
 12888  002370  6ADA               	clrf	fsr2h,c
 12889  002372  C088  FFDE         	movff	??_reserve_direntry,postinc2
 12890  002376  C089  FFDD         	movff	??_reserve_direntry+1,postdec2
 12891  00237A  D75E               	goto	l11854
 12892  00237C                     __end_of_reserve_direntry:
 12893                           	callstack 0
 12894                           
 12895 ;; *************** function _next_dir_entry *****************
 12896 ;; Defined at:
 12897 ;;		line 359 in file "bibliotecas/tff.c"
 12898 ;; Parameters:    Size  Location     Type
 12899 ;;  dj              1   75[COMRAM] PTR struct _DIR_E
 12900 ;;		 -> f_open@dj(14), 
 12901 ;; Auto vars:     Size  Location     Type
 12902 ;;  idx             2   28[BANK0 ] unsigned short 
 12903 ;;  clust           2   26[BANK0 ] unsigned short 
 12904 ;; Return value:  Size  Location     Type
 12905 ;;                  1    wreg      enum E105
 12906 ;; Registers used:
 12907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12908 ;; Tracked objects:
 12909 ;;		On entry : 0/0
 12910 ;;		On exit  : 0/0
 12911 ;;		Unchanged: 0/0
 12912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12913 ;;      Params:         1       0       0       0       0       0       0       0       0
 12914 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12915 ;;      Temps:          0       7       0       0       0       0       0       0       0
 12916 ;;      Totals:         1      11       0       0       0       0       0       0       0
 12917 ;;Total ram usage:       12 bytes
 12918 ;; Hardware stack levels used:    1
 12919 ;; Hardware stack levels required when called:    9
 12920 ;; This function calls:
 12921 ;;		_clust2sect
 12922 ;;		_get_cluster
 12923 ;; This function is called by:
 12924 ;;		_trace_path
 12925 ;;		_reserve_direntry
 12926 ;; This function uses a non-reentrant model
 12927 ;;
 12928                           
 12929                           	psect	text74
 12930  003088                     __ptext74:
 12931                           	callstack 0
 12932  003088                     _next_dir_entry:
 12933                           	callstack 15
 12934                           
 12935                           ;tff.c: 363: CLUST clust;;tff.c: 364: WORD idx;;tff.c: 367: idx = dj->index + 1;
 12936                           
 12937                           ;incstack = 0
 12938  003088  504C               	movf	next_dir_entry@dj^0,w,c
 12939  00308A  6ED9               	movwf	fsr2l,c
 12940  00308C  6ADA               	clrf	fsr2h,c
 12941  00308E  0E02               	movlw	2
 12942  003090  26D9               	addwf	fsr2l,f,c
 12943  003092  CFDE F073          	movff	postinc2,??_next_dir_entry
 12944  003096  CFDD F074          	movff	postdec2,??_next_dir_entry+1
 12945  00309A  0E01               	movlw	1
 12946  00309C  0100               	movlb	0	; () banked
 12947  00309E  2573               	addwf	??_next_dir_entry& (0+255),w,b
 12948  0030A0  6F7C               	movwf	next_dir_entry@idx& (0+255),b
 12949  0030A2  0E00               	movlw	0
 12950  0030A4  2174               	addwfc	(??_next_dir_entry+1)& (0+255),w,b
 12951  0030A6  6F7D               	movwf	(next_dir_entry@idx+1)& (0+255),b
 12952                           
 12953                           ; BSR set to: 0
 12954                           ;tff.c: 368: if ((idx & 15) == 0) {
 12955  0030A8  C07C  F073         	movff	next_dir_entry@idx,??_next_dir_entry
 12956  0030AC  0E0F               	movlw	15
 12957  0030AE  1773               	andwf	??_next_dir_entry& (0+255),f,b
 12958  0030B0  A4D8               	btfss	status,2,c
 12959  0030B2  D092               	goto	l11374
 12960                           
 12961                           ; BSR set to: 0
 12962                           ;tff.c: 369: dj->sect++;
 12963  0030B4  504C               	movf	next_dir_entry@dj^0,w,c
 12964  0030B6  6ED9               	movwf	fsr2l,c
 12965  0030B8  6ADA               	clrf	fsr2h,c
 12966  0030BA  0E0A               	movlw	10
 12967  0030BC  26D9               	addwf	fsr2l,f,c
 12968  0030BE  2ADE               	incf	postinc2,f,c
 12969  0030C0  0E00               	movlw	0
 12970  0030C2  22DE               	addwfc	postinc2,f,c
 12971  0030C4  22DE               	addwfc	postinc2,f,c
 12972  0030C6  22DE               	addwfc	postinc2,f,c
 12973                           
 12974                           ;tff.c: 370: if (dj->clust == 0) {
 12975  0030C8  504C               	movf	next_dir_entry@dj^0,w,c
 12976  0030CA  6ED9               	movwf	fsr2l,c
 12977  0030CC  6ADA               	clrf	fsr2h,c
 12978  0030CE  0E08               	movlw	8
 12979  0030D0  26D9               	addwf	fsr2l,f,c
 12980  0030D2  50DE               	movf	postinc2,w,c
 12981  0030D4  10DE               	iorwf	postinc2,w,c
 12982  0030D6  A4D8               	btfss	status,2,c
 12983  0030D8  D013               	goto	l11358
 12984                           
 12985                           ; BSR set to: 0
 12986                           ;tff.c: 371: if (idx >= dj->fs->n_rootdir) return FALSE;
 12987  0030DA  504C               	movf	next_dir_entry@dj^0,w,c
 12988  0030DC  6ED9               	movwf	fsr2l,c
 12989  0030DE  6ADA               	clrf	fsr2h,c
 12990  0030E0  0E04               	movlw	4
 12991  0030E2  26D9               	addwf	fsr2l,f,c
 12992  0030E4  EE10 F002          	lfsr	1,2
 12993  0030E8  50DE               	movf	postinc2,w,c
 12994  0030EA  26E1               	addwf	fsr1l,f,c
 12995  0030EC  50DD               	movf	postdec2,w,c
 12996  0030EE  22E2               	addwfc	fsr1h,f,c
 12997  0030F0  50E6               	movf	postinc1,w,c
 12998  0030F2  5D7C               	subwf	next_dir_entry@idx& (0+255),w,b
 12999  0030F4  50E6               	movf	postinc1,w,c
 13000  0030F6  597D               	subwfb	(next_dir_entry@idx+1)& (0+255),w,b
 13001  0030F8  A0D8               	btfss	status,0,c
 13002  0030FA  D06E               	goto	l11374
 13003  0030FC                     u12890:
 13004                           
 13005                           ; BSR set to: 0
 13006  0030FC  0E00               	movlw	0
 13007  0030FE  0012               	return	
 13008  003100                     l11358:
 13009                           
 13010                           ; BSR set to: 0
 13011                           ;tff.c: 373: if (((idx / 16) & (dj->fs->csize - 1)) == 0) {
 13012  003100  C07C  F073         	movff	next_dir_entry@idx,??_next_dir_entry
 13013  003104  C07D  F074         	movff	next_dir_entry@idx+1,??_next_dir_entry+1
 13014  003108  0E04               	movlw	4
 13015  00310A  6F75               	movwf	(??_next_dir_entry+2)& (0+255),b
 13016  00310C                     u12905:
 13017  00310C  90D8               	bcf	status,0,c
 13018  00310E  3374               	rrcf	(??_next_dir_entry+1)& (0+255),f,b
 13019  003110  3373               	rrcf	??_next_dir_entry& (0+255),f,b
 13020  003112  2F75               	decfsz	(??_next_dir_entry+2)& (0+255),f,b
 13021  003114  D7FB               	goto	u12905
 13022  003116  0EFF               	movlw	255
 13023  003118  6F76               	movwf	(??_next_dir_entry+3)& (0+255),b
 13024  00311A  0EFF               	movlw	255
 13025  00311C  6F77               	movwf	(??_next_dir_entry+4)& (0+255),b
 13026  00311E  504C               	movf	next_dir_entry@dj^0,w,c
 13027  003120  6ED9               	movwf	fsr2l,c
 13028  003122  6ADA               	clrf	fsr2h,c
 13029  003124  0E04               	movlw	4
 13030  003126  26D9               	addwf	fsr2l,f,c
 13031  003128  EE10 F01D          	lfsr	1,29
 13032  00312C  50DE               	movf	postinc2,w,c
 13033  00312E  26E1               	addwf	fsr1l,f,c
 13034  003130  50DD               	movf	postdec2,w,c
 13035  003132  22E2               	addwfc	fsr1h,f,c
 13036  003134  50E7               	movf	indf1,w,c
 13037  003136  6F78               	movwf	(??_next_dir_entry+5)& (0+255),b
 13038  003138  6B79               	clrf	(??_next_dir_entry+6)& (0+255),b
 13039  00313A  5176               	movf	(??_next_dir_entry+3)& (0+255),w,b
 13040  00313C  2778               	addwf	(??_next_dir_entry+5)& (0+255),f,b
 13041  00313E  5177               	movf	(??_next_dir_entry+4)& (0+255),w,b
 13042  003140  2379               	addwfc	(??_next_dir_entry+6)& (0+255),f,b
 13043  003142  5173               	movf	??_next_dir_entry& (0+255),w,b
 13044  003144  1778               	andwf	(??_next_dir_entry+5)& (0+255),f,b
 13045  003146  5174               	movf	(??_next_dir_entry+1)& (0+255),w,b
 13046  003148  1779               	andwf	(??_next_dir_entry+6)& (0+255),f,b
 13047  00314A  5178               	movf	(??_next_dir_entry+5)& (0+255),w,b
 13048  00314C  1179               	iorwf	(??_next_dir_entry+6)& (0+255),w,b
 13049  00314E  A4D8               	btfss	status,2,c
 13050  003150  D043               	goto	l11374
 13051                           
 13052                           ; BSR set to: 0
 13053                           ;tff.c: 374: clust = get_cluster(dj->clust);
 13054  003152  504C               	movf	next_dir_entry@dj^0,w,c
 13055  003154  6ED9               	movwf	fsr2l,c
 13056  003156  6ADA               	clrf	fsr2h,c
 13057  003158  0E08               	movlw	8
 13058  00315A  26D9               	addwf	fsr2l,f,c
 13059  00315C  CFDE F04A          	movff	postinc2,get_cluster@clust
 13060  003160  CFDD F04B          	movff	postdec2,get_cluster@clust+1
 13061  003164  ECF4  F012         	call	_get_cluster	;wreg free
 13062  003168  C04A  F07A         	movff	?_get_cluster,next_dir_entry@clust
 13063  00316C  C04B  F07B         	movff	?_get_cluster+1,next_dir_entry@clust+1
 13064                           
 13065                           ;tff.c: 375: if (clust < 2 || clust >= dj->fs->max_clust)
 13066  003170  0100               	movlb	0	; () banked
 13067  003172  517B               	movf	(next_dir_entry@clust+1)& (0+255),w,b
 13068  003174  E104               	bnz	u12920
 13069  003176  0E02               	movlw	2
 13070  003178  5D7A               	subwf	next_dir_entry@clust& (0+255),w,b
 13071  00317A  A0D8               	btfss	status,0,c
 13072  00317C  D7BF               	goto	u12890
 13073  00317E                     u12920:
 13074                           
 13075                           ; BSR set to: 0
 13076  00317E  504C               	movf	next_dir_entry@dj^0,w,c
 13077  003180  6ED9               	movwf	fsr2l,c
 13078  003182  6ADA               	clrf	fsr2h,c
 13079  003184  0E04               	movlw	4
 13080  003186  26D9               	addwf	fsr2l,f,c
 13081  003188  EE10 F016          	lfsr	1,22
 13082  00318C  50DE               	movf	postinc2,w,c
 13083  00318E  26E1               	addwf	fsr1l,f,c
 13084  003190  50DD               	movf	postdec2,w,c
 13085  003192  22E2               	addwfc	fsr1h,f,c
 13086  003194  50E6               	movf	postinc1,w,c
 13087  003196  5D7A               	subwf	next_dir_entry@clust& (0+255),w,b
 13088  003198  50E6               	movf	postinc1,w,c
 13089  00319A  597B               	subwfb	(next_dir_entry@clust+1)& (0+255),w,b
 13090  00319C  B0D8               	btfsc	status,0,c
 13091  00319E  D7AE               	goto	u12890
 13092                           
 13093                           ; BSR set to: 0
 13094                           ;tff.c: 377: dj->clust = clust;
 13095  0031A0  504C               	movf	next_dir_entry@dj^0,w,c
 13096  0031A2  6ED9               	movwf	fsr2l,c
 13097  0031A4  6ADA               	clrf	fsr2h,c
 13098  0031A6  0E08               	movlw	8
 13099  0031A8  26D9               	addwf	fsr2l,f,c
 13100  0031AA  C07A  FFDE         	movff	next_dir_entry@clust,postinc2
 13101  0031AE  C07B  FFDD         	movff	next_dir_entry@clust+1,postdec2
 13102                           
 13103                           ; BSR set to: 0
 13104                           ;tff.c: 378: dj->sect = clust2sect(clust);
 13105  0031B2  C07A  F016         	movff	next_dir_entry@clust,clust2sect@clust
 13106  0031B6  C07B  F017         	movff	next_dir_entry@clust+1,clust2sect@clust+1
 13107  0031BA  EC01  F021         	call	_clust2sect	;wreg free
 13108  0031BE  504C               	movf	next_dir_entry@dj^0,w,c
 13109  0031C0  6ED9               	movwf	fsr2l,c
 13110  0031C2  6ADA               	clrf	fsr2h,c
 13111  0031C4  0E0A               	movlw	10
 13112  0031C6  26D9               	addwf	fsr2l,f,c
 13113  0031C8  C016  FFDE         	movff	?_clust2sect,postinc2
 13114  0031CC  C017  FFDE         	movff	?_clust2sect+1,postinc2
 13115  0031D0  C018  FFDE         	movff	?_clust2sect+2,postinc2
 13116  0031D4  C019  FFDE         	movff	?_clust2sect+3,postinc2
 13117  0031D8                     l11374:
 13118                           
 13119                           ;tff.c: 379: };tff.c: 380: };tff.c: 381: };tff.c: 382: dj->index = idx;
 13120  0031D8  504C               	movf	next_dir_entry@dj^0,w,c
 13121  0031DA  6ED9               	movwf	fsr2l,c
 13122  0031DC  6ADA               	clrf	fsr2h,c
 13123  0031DE  0E02               	movlw	2
 13124  0031E0  26D9               	addwf	fsr2l,f,c
 13125  0031E2  C07C  FFDE         	movff	next_dir_entry@idx,postinc2
 13126  0031E6  C07D  FFDD         	movff	next_dir_entry@idx+1,postdec2
 13127                           
 13128                           ;tff.c: 383: return TRUE;
 13129  0031EA  0E01               	movlw	1
 13130  0031EC  0012               	return		;funcret
 13131  0031EE                     __end_of_next_dir_entry:
 13132                           	callstack 0
 13133                           
 13134 ;; *************** function _clust2sect *****************
 13135 ;; Defined at:
 13136 ;;		line 339 in file "bibliotecas/tff.c"
 13137 ;; Parameters:    Size  Location     Type
 13138 ;;  clust           2   21[COMRAM] unsigned short 
 13139 ;; Auto vars:     Size  Location     Type
 13140 ;;  fs              2   30[COMRAM] PTR struct _FATFS
 13141 ;;		 -> NULL(0), fs(544), 
 13142 ;; Return value:  Size  Location     Type
 13143 ;;                  4   21[COMRAM] unsigned long 
 13144 ;; Registers used:
 13145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13146 ;; Tracked objects:
 13147 ;;		On entry : 0/0
 13148 ;;		On exit  : 0/0
 13149 ;;		Unchanged: 0/0
 13150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13151 ;;      Params:         4       0       0       0       0       0       0       0       0
 13152 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13153 ;;      Temps:          5       0       0       0       0       0       0       0       0
 13154 ;;      Totals:        11       0       0       0       0       0       0       0       0
 13155 ;;Total ram usage:       11 bytes
 13156 ;; Hardware stack levels used:    1
 13157 ;; Hardware stack levels required when called:    3
 13158 ;; This function calls:
 13159 ;;		___lmul
 13160 ;; This function is called by:
 13161 ;;		_next_dir_entry
 13162 ;;		_trace_path
 13163 ;;		_reserve_direntry
 13164 ;;		_f_write
 13165 ;;		_f_read
 13166 ;; This function uses a non-reentrant model
 13167 ;;
 13168                           
 13169                           	psect	text75
 13170  004202                     __ptext75:
 13171                           	callstack 0
 13172  004202                     _clust2sect:
 13173                           	callstack 19
 13174                           
 13175                           ;tff.c: 343: FATFS *fs = FatFs;
 13176                           
 13177                           ;incstack = 0
 13178  004202  C04D  F01F         	movff	_FatFs,clust2sect@fs
 13179  004206  C04E  F020         	movff	_FatFs+1,clust2sect@fs+1
 13180                           
 13181                           ;tff.c: 346: clust -= 2;
 13182  00420A  0E02               	movlw	2
 13183  00420C  5E16               	subwf	clust2sect@clust^0,f,c
 13184  00420E  0E00               	movlw	0
 13185  004210  5A17               	subwfb	(clust2sect@clust+1)^0,f,c
 13186                           
 13187                           ;tff.c: 347: if (clust >= (fs->max_clust - 2)) return 0;
 13188  004212  0EFE               	movlw	254
 13189  004214  6E1A               	movwf	??_clust2sect^0,c
 13190  004216  0EFF               	movlw	255
 13191  004218  6E1B               	movwf	(??_clust2sect+1)^0,c
 13192  00421A  EE20 F016          	lfsr	2,22
 13193  00421E  501F               	movf	clust2sect@fs^0,w,c
 13194  004220  26D9               	addwf	fsr2l,f,c
 13195  004222  5020               	movf	(clust2sect@fs+1)^0,w,c
 13196  004224  22DA               	addwfc	fsr2h,f,c
 13197  004226  CFDE F01C          	movff	postinc2,??_clust2sect+2
 13198  00422A  CFDD F01D          	movff	postdec2,??_clust2sect+3
 13199  00422E  501A               	movf	??_clust2sect^0,w,c
 13200  004230  261C               	addwf	(??_clust2sect+2)^0,f,c
 13201  004232  501B               	movf	(??_clust2sect+1)^0,w,c
 13202  004234  221D               	addwfc	(??_clust2sect+3)^0,f,c
 13203  004236  501C               	movf	(??_clust2sect+2)^0,w,c
 13204  004238  5C16               	subwf	clust2sect@clust^0,w,c
 13205  00423A  501D               	movf	(??_clust2sect+3)^0,w,c
 13206  00423C  5817               	subwfb	(clust2sect@clust+1)^0,w,c
 13207  00423E  A0D8               	btfss	status,0,c
 13208  004240  D009               	goto	l10880
 13209  004242  0E00               	movlw	0
 13210  004244  6E16               	movwf	?_clust2sect^0,c
 13211  004246  0E00               	movlw	0
 13212  004248  6E17               	movwf	(?_clust2sect+1)^0,c
 13213  00424A  0E00               	movlw	0
 13214  00424C  6E18               	movwf	(?_clust2sect+2)^0,c
 13215  00424E  0E00               	movlw	0
 13216  004250  6E19               	movwf	(?_clust2sect+3)^0,c
 13217  004252  0012               	return	
 13218  004254                     l10880:
 13219                           
 13220                           ;tff.c: 348: return (DWORD)clust * fs->csize + fs->database;
 13221  004254  EE20 F010          	lfsr	2,16
 13222  004258  501F               	movf	clust2sect@fs^0,w,c
 13223  00425A  26D9               	addwf	fsr2l,f,c
 13224  00425C  5020               	movf	(clust2sect@fs+1)^0,w,c
 13225  00425E  22DA               	addwfc	fsr2h,f,c
 13226  004260  CFDE F01A          	movff	postinc2,??_clust2sect
 13227  004264  CFDE F01B          	movff	postinc2,??_clust2sect+1
 13228  004268  CFDE F01C          	movff	postinc2,??_clust2sect+2
 13229  00426C  CFDE F01D          	movff	postinc2,??_clust2sect+3
 13230  004270  C016  F00A         	movff	clust2sect@clust,___lmul@multiplier
 13231  004274  C017  F00B         	movff	clust2sect@clust+1,___lmul@multiplier+1
 13232  004278  6A0C               	clrf	(___lmul@multiplier+2)^0,c
 13233  00427A  6A0D               	clrf	(___lmul@multiplier+3)^0,c
 13234  00427C  EE20 F01D          	lfsr	2,29
 13235  004280  501F               	movf	clust2sect@fs^0,w,c
 13236  004282  26D9               	addwf	fsr2l,f,c
 13237  004284  5020               	movf	(clust2sect@fs+1)^0,w,c
 13238  004286  22DA               	addwfc	fsr2h,f,c
 13239  004288  50DF               	movf	indf2,w,c
 13240  00428A  6E1E               	movwf	(??_clust2sect+4)^0,c
 13241  00428C  501E               	movf	(??_clust2sect+4)^0,w,c
 13242  00428E  6E0E               	movwf	___lmul@multiplicand^0,c
 13243  004290  6A0F               	clrf	(___lmul@multiplicand+1)^0,c
 13244  004292  6A10               	clrf	(___lmul@multiplicand+2)^0,c
 13245  004294  6A11               	clrf	(___lmul@multiplicand+3)^0,c
 13246  004296  EC63  F028         	call	___lmul	;wreg free
 13247  00429A  501A               	movf	??_clust2sect^0,w,c
 13248  00429C  240A               	addwf	?___lmul^0,w,c
 13249  00429E  6E16               	movwf	?_clust2sect^0,c
 13250  0042A0  501B               	movf	(??_clust2sect+1)^0,w,c
 13251  0042A2  200B               	addwfc	(?___lmul+1)^0,w,c
 13252  0042A4  6E17               	movwf	(?_clust2sect+1)^0,c
 13253  0042A6  501C               	movf	(??_clust2sect+2)^0,w,c
 13254  0042A8  200C               	addwfc	(?___lmul+2)^0,w,c
 13255  0042AA  6E18               	movwf	(?_clust2sect+2)^0,c
 13256  0042AC  501D               	movf	(??_clust2sect+3)^0,w,c
 13257  0042AE  200D               	addwfc	(?___lmul+3)^0,w,c
 13258  0042B0  6E19               	movwf	(?_clust2sect+3)^0,c
 13259  0042B2  0012               	return		;funcret
 13260  0042B4                     __end_of_clust2sect:
 13261                           	callstack 0
 13262                           
 13263 ;; *************** function _remove_chain *****************
 13264 ;; Defined at:
 13265 ;;		line 250 in file "bibliotecas/tff.c"
 13266 ;; Parameters:    Size  Location     Type
 13267 ;;  clust           2   24[BANK0 ] unsigned short 
 13268 ;; Auto vars:     Size  Location     Type
 13269 ;;  fs              2   30[BANK0 ] PTR struct _FATFS
 13270 ;;		 -> NULL(0), fs(544), 
 13271 ;;  nxt             2   28[BANK0 ] unsigned short 
 13272 ;; Return value:  Size  Location     Type
 13273 ;;                  1    wreg      enum E105
 13274 ;; Registers used:
 13275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13276 ;; Tracked objects:
 13277 ;;		On entry : 3F/0
 13278 ;;		On exit  : 0/0
 13279 ;;		Unchanged: 0/0
 13280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13281 ;;      Params:         0       2       0       0       0       0       0       0       0
 13282 ;;      Locals:         0       4       0       0       0       0       0       0       0
 13283 ;;      Temps:          0       2       0       0       0       0       0       0       0
 13284 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13285 ;;Total ram usage:        8 bytes
 13286 ;; Hardware stack levels used:    1
 13287 ;; Hardware stack levels required when called:    9
 13288 ;; This function calls:
 13289 ;;		_get_cluster
 13290 ;;		_put_cluster
 13291 ;; This function is called by:
 13292 ;;		_f_open
 13293 ;; This function uses a non-reentrant model
 13294 ;;
 13295                           
 13296                           	psect	text76
 13297  00455C                     __ptext76:
 13298                           	callstack 0
 13299  00455C                     _remove_chain:
 13300                           	callstack 16
 13301                           
 13302                           ; BSR set to: 0
 13303                           ;tff.c: 254: CLUST nxt;;tff.c: 255: FATFS *fs = FatFs;
 13304                           
 13305                           ;incstack = 0
 13306  00455C  C04D  F07E         	movff	_FatFs,remove_chain@fs
 13307  004560  C04E  F07F         	movff	_FatFs+1,remove_chain@fs+1
 13308                           
 13309                           ;tff.c: 258: while (clust >= 2 && clust < fs->max_clust) {
 13310  004564  D037               	goto	l11732
 13311  004566                     l11712:
 13312                           
 13313                           ; BSR set to: 0
 13314                           ;tff.c: 259: nxt = get_cluster(clust);
 13315  004566  C078  F04A         	movff	remove_chain@clust,get_cluster@clust
 13316  00456A  C079  F04B         	movff	remove_chain@clust+1,get_cluster@clust+1
 13317  00456E  ECF4  F012         	call	_get_cluster	;wreg free
 13318  004572  C04A  F07C         	movff	?_get_cluster,remove_chain@nxt
 13319  004576  C04B  F07D         	movff	?_get_cluster+1,remove_chain@nxt+1
 13320                           
 13321                           ;tff.c: 260: if (nxt == 1) return FALSE;
 13322  00457A  0100               	movlb	0	; () banked
 13323  00457C  057C               	decf	remove_chain@nxt& (0+255),w,b
 13324  00457E  117D               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 13325  004580  A4D8               	btfss	status,2,c
 13326  004582  D002               	goto	l11720
 13327  004584                     u13440:
 13328  004584  0E00               	movlw	0
 13329  004586  0012               	return	
 13330  004588                     l11720:
 13331                           
 13332                           ; BSR set to: 0
 13333                           ;tff.c: 261: if (!put_cluster(clust, 0)) return FALSE;
 13334  004588  C078  F060         	movff	remove_chain@clust,put_cluster@clust
 13335  00458C  C079  F061         	movff	remove_chain@clust+1,put_cluster@clust+1
 13336  004590  0E00               	movlw	0
 13337  004592  6F63               	movwf	(put_cluster@val+1)& (0+255),b
 13338  004594  0E00               	movlw	0
 13339  004596  6F62               	movwf	put_cluster@val& (0+255),b
 13340  004598  ECBE  F011         	call	_put_cluster	;wreg free
 13341  00459C  0900               	iorlw	0
 13342  00459E  B4D8               	btfsc	status,2,c
 13343  0045A0  D7F1               	goto	u13440
 13344                           
 13345                           ;tff.c: 262: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 13346  0045A2  0100               	movlb	0	; () banked
 13347  0045A4  EE20 F01A          	lfsr	2,26
 13348  0045A8  517E               	movf	remove_chain@fs& (0+255),w,b
 13349  0045AA  26D9               	addwf	fsr2l,f,c
 13350  0045AC  517F               	movf	(remove_chain@fs+1)& (0+255),w,b
 13351  0045AE  22DA               	addwfc	fsr2h,f,c
 13352  0045B0  28DE               	incf	postinc2,w,c
 13353  0045B2  E103               	bnz	u13460
 13354  0045B4  28DE               	incf	postinc2,w,c
 13355  0045B6  B4D8               	btfsc	status,2,c
 13356  0045B8  D009               	goto	l11730
 13357  0045BA                     u13460:
 13358                           
 13359                           ; BSR set to: 0
 13360                           ;tff.c: 263: fs->free_clust++;
 13361  0045BA  EE20 F01A          	lfsr	2,26
 13362  0045BE  517E               	movf	remove_chain@fs& (0+255),w,b
 13363  0045C0  26D9               	addwf	fsr2l,f,c
 13364  0045C2  517F               	movf	(remove_chain@fs+1)& (0+255),w,b
 13365  0045C4  22DA               	addwfc	fsr2h,f,c
 13366  0045C6  2ADE               	incf	postinc2,f,c
 13367  0045C8  0E00               	movlw	0
 13368  0045CA  22DD               	addwfc	postdec2,f,c
 13369  0045CC                     l11730:
 13370                           
 13371                           ; BSR set to: 0
 13372                           ;tff.c: 267: };tff.c: 268: clust = nxt;
 13373  0045CC  C07C  F078         	movff	remove_chain@nxt,remove_chain@clust
 13374  0045D0  C07D  F079         	movff	remove_chain@nxt+1,remove_chain@clust+1
 13375  0045D4                     l11732:
 13376                           
 13377                           ; BSR set to: 0
 13378  0045D4  5179               	movf	(remove_chain@clust+1)& (0+255),w,b
 13379  0045D6  E104               	bnz	u13470
 13380  0045D8  0E02               	movlw	2
 13381  0045DA  5D78               	subwf	remove_chain@clust& (0+255),w,b
 13382  0045DC  A0D8               	btfss	status,0,c
 13383  0045DE  D00C               	goto	u13480
 13384  0045E0                     u13470:
 13385                           
 13386                           ; BSR set to: 0
 13387  0045E0  EE20 F016          	lfsr	2,22
 13388  0045E4  517E               	movf	remove_chain@fs& (0+255),w,b
 13389  0045E6  26D9               	addwf	fsr2l,f,c
 13390  0045E8  517F               	movf	(remove_chain@fs+1)& (0+255),w,b
 13391  0045EA  22DA               	addwfc	fsr2h,f,c
 13392  0045EC  50DE               	movf	postinc2,w,c
 13393  0045EE  5D78               	subwf	remove_chain@clust& (0+255),w,b
 13394  0045F0  50DE               	movf	postinc2,w,c
 13395  0045F2  5979               	subwfb	(remove_chain@clust+1)& (0+255),w,b
 13396  0045F4  A0D8               	btfss	status,0,c
 13397  0045F6  D7B7               	goto	l11712
 13398  0045F8                     u13480:
 13399                           
 13400                           ; BSR set to: 0
 13401                           ;tff.c: 269: };tff.c: 270: return TRUE;
 13402  0045F8  0E01               	movlw	1
 13403  0045FA  0012               	return		;funcret
 13404  0045FC                     __end_of_remove_chain:
 13405                           	callstack 0
 13406                           
 13407 ;; *************** function _memcpy *****************
 13408 ;; Defined at:
 13409 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcpy.c"
 13410 ;; Parameters:    Size  Location     Type
 13411 ;;  d1              2    9[COMRAM] PTR void 
 13412 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 13413 ;;  s1              2   11[COMRAM] PTR const void 
 13414 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 13415 ;;		 -> fs(544), 
 13416 ;;  n               2   13[COMRAM] unsigned int 
 13417 ;; Auto vars:     Size  Location     Type
 13418 ;;  s               2   18[COMRAM] PTR const unsigned char 
 13419 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 13420 ;;		 -> fs(544), 
 13421 ;;  d               2   16[COMRAM] PTR unsigned char 
 13422 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 13423 ;;  tmp             1   15[COMRAM] unsigned char 
 13424 ;; Return value:  Size  Location     Type
 13425 ;;                  2    9[COMRAM] PTR void 
 13426 ;; Registers used:
 13427 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13428 ;; Tracked objects:
 13429 ;;		On entry : 0/0
 13430 ;;		On exit  : 0/0
 13431 ;;		Unchanged: 0/0
 13432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13433 ;;      Params:         6       0       0       0       0       0       0       0       0
 13434 ;;      Locals:         5       0       0       0       0       0       0       0       0
 13435 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13436 ;;      Totals:        11       0       0       0       0       0       0       0       0
 13437 ;;Total ram usage:       11 bytes
 13438 ;; Hardware stack levels used:    1
 13439 ;; Hardware stack levels required when called:    2
 13440 ;; This function calls:
 13441 ;;		Nothing
 13442 ;; This function is called by:
 13443 ;;		_f_open
 13444 ;;		_f_write
 13445 ;;		_f_read
 13446 ;; This function uses a non-reentrant model
 13447 ;;
 13448                           
 13449                           	psect	text77
 13450  005414                     __ptext77:
 13451                           	callstack 0
 13452  005414                     _memcpy:
 13453                           	callstack 20
 13454                           
 13455                           ;incstack = 0
 13456  005414  C00C  F013         	movff	memcpy@s1,memcpy@s
 13457  005418  C00D  F014         	movff	memcpy@s1+1,memcpy@s+1
 13458  00541C  C00A  F011         	movff	memcpy@d1,memcpy@d
 13459  005420  C00B  F012         	movff	memcpy@d1+1,memcpy@d+1
 13460  005424  D010               	goto	l10914
 13461  005426                     l10906:
 13462  005426  C013  FFD9         	movff	memcpy@s,fsr2l
 13463  00542A  C014  FFDA         	movff	memcpy@s+1,fsr2h
 13464  00542E  50DF               	movf	indf2,w,c
 13465  005430  6E10               	movwf	memcpy@tmp^0,c
 13466  005432  4A13               	infsnz	memcpy@s^0,f,c
 13467  005434  2A14               	incf	(memcpy@s+1)^0,f,c
 13468  005436  C011  FFD9         	movff	memcpy@d,fsr2l
 13469  00543A  C012  FFDA         	movff	memcpy@d+1,fsr2h
 13470  00543E  C010  FFDF         	movff	memcpy@tmp,indf2
 13471  005442  4A11               	infsnz	memcpy@d^0,f,c
 13472  005444  2A12               	incf	(memcpy@d+1)^0,f,c
 13473  005446                     l10914:
 13474  005446  060E               	decf	memcpy@n^0,f,c
 13475  005448  A0D8               	btfss	status,0,c
 13476  00544A  060F               	decf	(memcpy@n+1)^0,f,c
 13477  00544C  280E               	incf	memcpy@n^0,w,c
 13478  00544E  E1EB               	bnz	l10906
 13479  005450  280F               	incf	(memcpy@n+1)^0,w,c
 13480  005452  B4D8               	btfsc	status,2,c
 13481  005454  0012               	return	
 13482  005456  D7E7               	goto	l10906
 13483  005458                     __end_of_memcpy:
 13484                           	callstack 0
 13485                           
 13486 ;; *************** function _auto_mount *****************
 13487 ;; Defined at:
 13488 ;;		line 652 in file "bibliotecas/tff.c"
 13489 ;; Parameters:    Size  Location     Type
 13490 ;;  path            1   60[COMRAM] PTR PTR const unsigned c
 13491 ;;		 -> f_opendir@path(2), f_open@path(2), 
 13492 ;;  chk_wp          1   61[COMRAM] unsigned char 
 13493 ;; Auto vars:     Size  Location     Type
 13494 ;;  fatsize         4   38[BANK0 ] unsigned long 
 13495 ;;  totalsect       4   30[BANK0 ] unsigned long 
 13496 ;;  bootsect        4   26[BANK0 ] unsigned long 
 13497 ;;  maxclust        4   22[BANK0 ] unsigned long 
 13498 ;;  fs              2   42[BANK0 ] PTR struct _FATFS
 13499 ;;		 -> NULL(0), fs(544), 
 13500 ;;  p               2   34[BANK0 ] PTR const unsigned char 
 13501 ;;		 -> STR_16(13), filename(20), 
 13502 ;;  stat            1   37[BANK0 ] unsigned char 
 13503 ;;  fmt             1   36[BANK0 ] unsigned char 
 13504 ;; Return value:  Size  Location     Type
 13505 ;;                  1    wreg      enum E155
 13506 ;; Registers used:
 13507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13508 ;; Tracked objects:
 13509 ;;		On entry : 3F/0
 13510 ;;		On exit  : 3E/0
 13511 ;;		Unchanged: 0/0
 13512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13513 ;;      Params:         2       0       0       0       0       0       0       0       0
 13514 ;;      Locals:         0      22       0       0       0       0       0       0       0
 13515 ;;      Temps:          0      22       0       0       0       0       0       0       0
 13516 ;;      Totals:         2      44       0       0       0       0       0       0       0
 13517 ;;Total ram usage:       46 bytes
 13518 ;; Hardware stack levels used:    1
 13519 ;; Hardware stack levels required when called:    8
 13520 ;; This function calls:
 13521 ;;		___lldiv
 13522 ;;		___lmul
 13523 ;;		_check_fs
 13524 ;;		_disk_initialize
 13525 ;;		_disk_status
 13526 ;;		_memset
 13527 ;; This function is called by:
 13528 ;;		_f_open
 13529 ;; This function uses a non-reentrant model
 13530 ;;
 13531                           
 13532                           	psect	text78
 13533  0005A8                     __ptext78:
 13534                           	callstack 0
 13535  0005A8                     _auto_mount:
 13536                           	callstack 17
 13537                           
 13538                           ; BSR set to: 0
 13539                           ;tff.c: 657: BYTE fmt;;tff.c: 658: DSTATUS stat;;tff.c: 659: DWORD bootsect, fatsize, to
      +                          talsect, maxclust;;tff.c: 660: const char *p = *path;
 13540                           
 13541                           ;incstack = 0
 13542  0005A8  503D               	movf	auto_mount@path^0,w,c
 13543  0005AA  6ED9               	movwf	fsr2l,c
 13544  0005AC  6ADA               	clrf	fsr2h,c
 13545  0005AE  CFDE F082          	movff	postinc2,auto_mount@p
 13546  0005B2  CFDD F083          	movff	postdec2,auto_mount@p+1
 13547                           
 13548                           ;tff.c: 661: FATFS *fs;;tff.c: 664: while (*p == ' ') p++;
 13549  0005B6  D003               	goto	l11902
 13550  0005B8                     l11900:
 13551  0005B8  0100               	movlb	0	; () banked
 13552  0005BA  4B82               	infsnz	auto_mount@p& (0+255),f,b
 13553  0005BC  2B83               	incf	(auto_mount@p+1)& (0+255),f,b
 13554  0005BE                     l11902:
 13555                           
 13556                           ; BSR set to: 0
 13557  0005BE  C082  FFF6         	movff	auto_mount@p,tblptrl
 13558  0005C2  C083  FFF7         	movff	auto_mount@p+1,tblptrh
 13559  0005C6  6AF8               	clrf	tblptru,c
 13560  0005C8  0E07               	movlw	(high __ramtop+-1)
 13561  0005CA  64F7               	cpfsgt	tblptrh,c
 13562  0005CC  D003               	bra	u13757
 13563  0005CE  0008               	tblrd		*
 13564  0005D0  50F5               	movf	tablat,w,c
 13565  0005D2  D005               	bra	u13750
 13566  0005D4                     u13757:
 13567  0005D4  CFF6 FFE1          	movff	tblptrl,fsr1l
 13568  0005D8  CFF7 FFE2          	movff	tblptrh,fsr1h
 13569  0005DC  50E7               	movf	indf1,w,c
 13570  0005DE                     u13750:
 13571  0005DE  0A20               	xorlw	32
 13572  0005E0  B4D8               	btfsc	status,2,c
 13573  0005E2  D7EA               	goto	l11900
 13574                           
 13575                           ;tff.c: 665: if (*p == '/') p++;
 13576  0005E4  C082  FFF6         	movff	auto_mount@p,tblptrl
 13577  0005E8  C083  FFF7         	movff	auto_mount@p+1,tblptrh
 13578  0005EC  6AF8               	clrf	tblptru,c
 13579  0005EE  0E07               	movlw	(high __ramtop+-1)
 13580  0005F0  64F7               	cpfsgt	tblptrh,c
 13581  0005F2  D003               	bra	u13777
 13582  0005F4  0008               	tblrd		*
 13583  0005F6  50F5               	movf	tablat,w,c
 13584  0005F8  D005               	bra	u13770
 13585  0005FA                     u13777:
 13586  0005FA  CFF6 FFE1          	movff	tblptrl,fsr1l
 13587  0005FE  CFF7 FFE2          	movff	tblptrh,fsr1h
 13588  000602  50E7               	movf	indf1,w,c
 13589  000604                     u13770:
 13590  000604  0A2F               	xorlw	47
 13591  000606  A4D8               	btfss	status,2,c
 13592  000608  D003               	goto	l11908
 13593  00060A  0100               	movlb	0	; () banked
 13594  00060C  4B82               	infsnz	auto_mount@p& (0+255),f,b
 13595  00060E  2B83               	incf	(auto_mount@p+1)& (0+255),f,b
 13596  000610                     l11908:
 13597                           
 13598                           ;tff.c: 666: *path = p;
 13599  000610  503D               	movf	auto_mount@path^0,w,c
 13600  000612  6ED9               	movwf	fsr2l,c
 13601  000614  6ADA               	clrf	fsr2h,c
 13602  000616  C082  FFDE         	movff	auto_mount@p,postinc2
 13603  00061A  C083  FFDD         	movff	auto_mount@p+1,postdec2
 13604                           
 13605                           ;tff.c: 669: fs = FatFs;
 13606  00061E  C04D  F08A         	movff	_FatFs,auto_mount@fs
 13607  000622  C04E  F08B         	movff	_FatFs+1,auto_mount@fs+1
 13608                           
 13609                           ;tff.c: 670: if (!fs) return FR_NOT_ENABLED;
 13610  000626  0100               	movlb	0	; () banked
 13611  000628  518A               	movf	auto_mount@fs& (0+255),w,b
 13612  00062A  118B               	iorwf	(auto_mount@fs+1)& (0+255),w,b
 13613  00062C  A4D8               	btfss	status,2,c
 13614  00062E  D002               	goto	l11918
 13615                           
 13616                           ; BSR set to: 0
 13617  000630  0E0A               	movlw	10
 13618  000632  0012               	return	
 13619  000634                     l11918:
 13620                           
 13621                           ; BSR set to: 0
 13622                           ;tff.c: 672: if (fs->fs_type) {
 13623  000634  EE20 F01C          	lfsr	2,28
 13624  000638  518A               	movf	auto_mount@fs& (0+255),w,b
 13625  00063A  26D9               	addwf	fsr2l,f,c
 13626  00063C  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13627  00063E  22DA               	addwfc	fsr2h,f,c
 13628  000640  50DF               	movf	indf2,w,c
 13629  000642  B4D8               	btfsc	status,2,c
 13630  000644  D00F               	goto	l11936
 13631                           
 13632                           ; BSR set to: 0
 13633                           ;tff.c: 673: stat = disk_status(0);
 13634  000646  0E00               	movlw	0
 13635  000648  ECA3  F02B         	call	_disk_status
 13636  00064C  0100               	movlb	0	; () banked
 13637  00064E  6F85               	movwf	auto_mount@stat& (0+255),b
 13638                           
 13639                           ; BSR set to: 0
 13640                           ;tff.c: 674: if (!(stat & 0x01)) {
 13641  000650  B185               	btfsc	auto_mount@stat& (0+255),0,b
 13642  000652  D008               	goto	l11936
 13643                           
 13644                           ; BSR set to: 0
 13645                           ;tff.c: 676: if (chk_wp && (stat & 0x04))
 13646  000654  503E               	movf	auto_mount@chk_wp^0,w,c
 13647  000656  A4D8               	btfss	status,2,c
 13648                           
 13649                           ; BSR set to: 0
 13650  000658  A585               	btfss	auto_mount@stat& (0+255),2,b
 13651  00065A  D002               	goto	l11932
 13652  00065C                     u13830:
 13653                           
 13654                           ; BSR set to: 0
 13655                           ;tff.c: 677: return FR_WRITE_PROTECTED;
 13656  00065C  0E09               	movlw	9
 13657  00065E  0012               	return	
 13658  000660                     l11932:
 13659                           
 13660                           ; BSR set to: 0
 13661                           ;tff.c: 679: return FR_OK;
 13662  000660  0E00               	movlw	0
 13663  000662  0012               	return	
 13664  000664                     l11936:
 13665                           
 13666                           ; BSR set to: 0
 13667                           ;tff.c: 680: };tff.c: 681: };tff.c: 685: memset(fs, 0, sizeof(FATFS));
 13668  000664  C08A  F00A         	movff	auto_mount@fs,memset@p1
 13669  000668  C08B  F00B         	movff	auto_mount@fs+1,memset@p1+1
 13670  00066C  0E00               	movlw	0
 13671  00066E  6E0D               	movwf	(memset@c+1)^0,c
 13672  000670  0E00               	movlw	0
 13673  000672  6E0C               	movwf	memset@c^0,c
 13674  000674  0E02               	movlw	2
 13675  000676  6E0F               	movwf	(memset@n+1)^0,c
 13676  000678  0E20               	movlw	32
 13677  00067A  6E0E               	movwf	memset@n^0,c
 13678  00067C  EC00  F02C         	call	_memset	;wreg free
 13679                           
 13680                           ;tff.c: 686: stat = disk_initialize(0);
 13681  000680  0E00               	movlw	0
 13682  000682  EC7F  F02C         	call	_disk_initialize
 13683  000686  0100               	movlb	0	; () banked
 13684  000688  6F85               	movwf	auto_mount@stat& (0+255),b
 13685                           
 13686                           ; BSR set to: 0
 13687                           ;tff.c: 687: if (stat & 0x01)
 13688  00068A  A185               	btfss	auto_mount@stat& (0+255),0,b
 13689  00068C  D002               	goto	l11946
 13690                           
 13691                           ; BSR set to: 0
 13692                           ;tff.c: 688: return FR_NOT_READY;
 13693  00068E  0E01               	movlw	1
 13694  000690  0012               	return	
 13695  000692                     l11946:
 13696                           
 13697                           ; BSR set to: 0
 13698                           ;tff.c: 690: if (chk_wp && (stat & 0x04))
 13699  000692  503E               	movf	auto_mount@chk_wp^0,w,c
 13700  000694  B4D8               	btfsc	status,2,c
 13701  000696  D002               	goto	l11954
 13702                           
 13703                           ; BSR set to: 0
 13704  000698  B585               	btfsc	auto_mount@stat& (0+255),2,b
 13705  00069A  D7E0               	goto	u13830
 13706  00069C                     l11954:
 13707                           
 13708                           ; BSR set to: 0
 13709                           ;tff.c: 695: fmt = check_fs(bootsect = 0);
 13710  00069C  0E00               	movlw	0
 13711  00069E  6F7A               	movwf	auto_mount@bootsect& (0+255),b
 13712  0006A0  0E00               	movlw	0
 13713  0006A2  6F7B               	movwf	(auto_mount@bootsect+1)& (0+255),b
 13714  0006A4  0E00               	movlw	0
 13715  0006A6  6F7C               	movwf	(auto_mount@bootsect+2)& (0+255),b
 13716  0006A8  0E00               	movlw	0
 13717  0006AA  6F7D               	movwf	(auto_mount@bootsect+3)& (0+255),b
 13718  0006AC  C07A  F035         	movff	auto_mount@bootsect,check_fs@sect
 13719  0006B0  C07B  F036         	movff	auto_mount@bootsect+1,check_fs@sect+1
 13720  0006B4  C07C  F037         	movff	auto_mount@bootsect+2,check_fs@sect+2
 13721  0006B8  C07D  F038         	movff	auto_mount@bootsect+3,check_fs@sect+3
 13722  0006BC  ECB0  F024         	call	_check_fs	;wreg free
 13723  0006C0  0100               	movlb	0	; () banked
 13724  0006C2  6F84               	movwf	auto_mount@fmt& (0+255),b
 13725                           
 13726                           ; BSR set to: 0
 13727                           ;tff.c: 697: if (fmt == 1) {
 13728  0006C4  0584               	decf	auto_mount@fmt& (0+255),w,b
 13729  0006C6  A4D8               	btfss	status,2,c
 13730  0006C8  D023               	goto	l11964
 13731                           
 13732                           ; BSR set to: 0
 13733                           ;tff.c: 699: if (fs->win[446+4]) {
 13734  0006CA  EE21 F0E2          	lfsr	2,482
 13735  0006CE  518A               	movf	auto_mount@fs& (0+255),w,b
 13736  0006D0  26D9               	addwf	fsr2l,f,c
 13737  0006D2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13738  0006D4  22DA               	addwfc	fsr2h,f,c
 13739  0006D6  50DF               	movf	indf2,w,c
 13740  0006D8  B4D8               	btfsc	status,2,c
 13741  0006DA  D01A               	goto	l11964
 13742                           
 13743                           ; BSR set to: 0
 13744                           ;tff.c: 700: bootsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[446+8]));
 13745  0006DC  EE21 F0E6          	lfsr	2,486
 13746  0006E0  518A               	movf	auto_mount@fs& (0+255),w,b
 13747  0006E2  26D9               	addwf	fsr2l,f,c
 13748  0006E4  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13749  0006E6  22DA               	addwfc	fsr2h,f,c
 13750  0006E8  CFDE F07A          	movff	postinc2,auto_mount@bootsect
 13751  0006EC  CFDE F07B          	movff	postinc2,auto_mount@bootsect+1
 13752  0006F0  CFDE F07C          	movff	postinc2,auto_mount@bootsect+2
 13753  0006F4  CFDE F07D          	movff	postinc2,auto_mount@bootsect+3
 13754                           
 13755                           ; BSR set to: 0
 13756                           ;tff.c: 701: fmt = check_fs(bootsect);
 13757  0006F8  C07A  F035         	movff	auto_mount@bootsect,check_fs@sect
 13758  0006FC  C07B  F036         	movff	auto_mount@bootsect+1,check_fs@sect+1
 13759  000700  C07C  F037         	movff	auto_mount@bootsect+2,check_fs@sect+2
 13760  000704  C07D  F038         	movff	auto_mount@bootsect+3,check_fs@sect+3
 13761  000708  ECB0  F024         	call	_check_fs	;wreg free
 13762  00070C  0100               	movlb	0	; () banked
 13763  00070E  6F84               	movwf	auto_mount@fmt& (0+255),b
 13764  000710                     l11964:
 13765                           
 13766                           ; BSR set to: 0
 13767                           ;tff.c: 702: };tff.c: 703: };tff.c: 704: if (fmt || (WORD)(*(WORD*)(BYTE*)(&fs->win[11])
      +                          ) != 512U)
 13768  000710  5184               	movf	auto_mount@fmt& (0+255),w,b
 13769  000712  A4D8               	btfss	status,2,c
 13770  000714  D00C               	goto	u13900
 13771                           
 13772                           ; BSR set to: 0
 13773  000716  EE20 F02B          	lfsr	2,43
 13774  00071A  518A               	movf	auto_mount@fs& (0+255),w,b
 13775  00071C  26D9               	addwf	fsr2l,f,c
 13776  00071E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13777  000720  22DA               	addwfc	fsr2h,f,c
 13778  000722  50DE               	movf	postinc2,w,c
 13779  000724  E104               	bnz	u13900
 13780  000726  0E02               	movlw	2
 13781  000728  18DE               	xorwf	postinc2,w,c
 13782  00072A  B4D8               	btfsc	status,2,c
 13783  00072C  D002               	goto	l11972
 13784  00072E                     u13900:
 13785                           
 13786                           ; BSR set to: 0
 13787                           ;tff.c: 705: return FR_NO_FILESYSTEM;
 13788  00072E  0E0B               	movlw	11
 13789  000730  0012               	return	
 13790  000732                     l11972:
 13791                           
 13792                           ; BSR set to: 0
 13793                           ;tff.c: 708: fatsize = (WORD)(*(WORD*)(BYTE*)(&fs->win[22]));
 13794  000732  EE20 F036          	lfsr	2,54
 13795  000736  518A               	movf	auto_mount@fs& (0+255),w,b
 13796  000738  26D9               	addwf	fsr2l,f,c
 13797  00073A  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13798  00073C  22DA               	addwfc	fsr2h,f,c
 13799  00073E  CFDE F060          	movff	postinc2,??_auto_mount
 13800  000742  CFDD F061          	movff	postdec2,??_auto_mount+1
 13801  000746  C060  F086         	movff	??_auto_mount,auto_mount@fatsize
 13802  00074A  C061  F087         	movff	??_auto_mount+1,auto_mount@fatsize+1
 13803  00074E  6B88               	clrf	(auto_mount@fatsize+2)& (0+255),b
 13804  000750  6B89               	clrf	(auto_mount@fatsize+3)& (0+255),b
 13805                           
 13806                           ; BSR set to: 0
 13807                           ;tff.c: 709: if (!fatsize) fatsize = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[36]));
 13808  000752  5186               	movf	auto_mount@fatsize& (0+255),w,b
 13809  000754  1187               	iorwf	(auto_mount@fatsize+1)& (0+255),w,b
 13810  000756  1188               	iorwf	(auto_mount@fatsize+2)& (0+255),w,b
 13811  000758  1189               	iorwf	(auto_mount@fatsize+3)& (0+255),w,b
 13812  00075A  A4D8               	btfss	status,2,c
 13813  00075C  D00E               	goto	l1074
 13814                           
 13815                           ; BSR set to: 0
 13816  00075E  EE20 F044          	lfsr	2,68
 13817  000762  518A               	movf	auto_mount@fs& (0+255),w,b
 13818  000764  26D9               	addwf	fsr2l,f,c
 13819  000766  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13820  000768  22DA               	addwfc	fsr2h,f,c
 13821  00076A  CFDE F086          	movff	postinc2,auto_mount@fatsize
 13822  00076E  CFDE F087          	movff	postinc2,auto_mount@fatsize+1
 13823  000772  CFDE F088          	movff	postinc2,auto_mount@fatsize+2
 13824  000776  CFDE F089          	movff	postinc2,auto_mount@fatsize+3
 13825  00077A                     l1074:
 13826                           
 13827                           ; BSR set to: 0
 13828                           ;tff.c: 710: fs->sects_fat = (CLUST)fatsize;
 13829  00077A  EE20 F014          	lfsr	2,20
 13830  00077E  518A               	movf	auto_mount@fs& (0+255),w,b
 13831  000780  26D9               	addwf	fsr2l,f,c
 13832  000782  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13833  000784  22DA               	addwfc	fsr2h,f,c
 13834  000786  C086  FFDE         	movff	auto_mount@fatsize,postinc2
 13835  00078A  C087  FFDD         	movff	auto_mount@fatsize+1,postdec2
 13836                           
 13837                           ; BSR set to: 0
 13838                           ;tff.c: 711: fs->n_fats = fs->win[16];
 13839  00078E  EE20 F030          	lfsr	2,48
 13840  000792  518A               	movf	auto_mount@fs& (0+255),w,b
 13841  000794  26D9               	addwf	fsr2l,f,c
 13842  000796  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13843  000798  22DA               	addwfc	fsr2h,f,c
 13844  00079A  EE10 F01E          	lfsr	1,30
 13845  00079E  518A               	movf	auto_mount@fs& (0+255),w,b
 13846  0007A0  26E1               	addwf	fsr1l,f,c
 13847  0007A2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13848  0007A4  22E2               	addwfc	fsr1h,f,c
 13849  0007A6  CFDF FFE7          	movff	indf2,indf1
 13850                           
 13851                           ; BSR set to: 0
 13852                           ;tff.c: 712: fatsize *= fs->n_fats;
 13853  0007AA  C086  F00A         	movff	auto_mount@fatsize,___lmul@multiplier
 13854  0007AE  C087  F00B         	movff	auto_mount@fatsize+1,___lmul@multiplier+1
 13855  0007B2  C088  F00C         	movff	auto_mount@fatsize+2,___lmul@multiplier+2
 13856  0007B6  C089  F00D         	movff	auto_mount@fatsize+3,___lmul@multiplier+3
 13857  0007BA  EE20 F01E          	lfsr	2,30
 13858  0007BE  518A               	movf	auto_mount@fs& (0+255),w,b
 13859  0007C0  26D9               	addwf	fsr2l,f,c
 13860  0007C2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13861  0007C4  22DA               	addwfc	fsr2h,f,c
 13862  0007C6  50DF               	movf	indf2,w,c
 13863  0007C8  6F60               	movwf	??_auto_mount& (0+255),b
 13864  0007CA  5160               	movf	??_auto_mount& (0+255),w,b
 13865  0007CC  6E0E               	movwf	___lmul@multiplicand^0,c
 13866  0007CE  6A0F               	clrf	(___lmul@multiplicand+1)^0,c
 13867  0007D0  6A10               	clrf	(___lmul@multiplicand+2)^0,c
 13868  0007D2  6A11               	clrf	(___lmul@multiplicand+3)^0,c
 13869  0007D4  EC63  F028         	call	___lmul	;wreg free
 13870  0007D8  C00A  F086         	movff	?___lmul,auto_mount@fatsize
 13871  0007DC  C00B  F087         	movff	?___lmul+1,auto_mount@fatsize+1
 13872  0007E0  C00C  F088         	movff	?___lmul+2,auto_mount@fatsize+2
 13873  0007E4  C00D  F089         	movff	?___lmul+3,auto_mount@fatsize+3
 13874                           
 13875                           ;tff.c: 713: fs->fatbase = bootsect + (WORD)(*(WORD*)(BYTE*)(&fs->win[14]));
 13876  0007E8  0100               	movlb	0	; () banked
 13877  0007EA  EE20 F02E          	lfsr	2,46
 13878  0007EE  518A               	movf	auto_mount@fs& (0+255),w,b
 13879  0007F0  26D9               	addwf	fsr2l,f,c
 13880  0007F2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13881  0007F4  22DA               	addwfc	fsr2h,f,c
 13882  0007F6  CFDE F060          	movff	postinc2,??_auto_mount
 13883  0007FA  CFDD F061          	movff	postdec2,??_auto_mount+1
 13884  0007FE  5160               	movf	??_auto_mount& (0+255),w,b
 13885  000800  257A               	addwf	auto_mount@bootsect& (0+255),w,b
 13886  000802  6F62               	movwf	(??_auto_mount+2)& (0+255),b
 13887  000804  5161               	movf	(??_auto_mount+1)& (0+255),w,b
 13888  000806  217B               	addwfc	(auto_mount@bootsect+1)& (0+255),w,b
 13889  000808  6F63               	movwf	(??_auto_mount+3)& (0+255),b
 13890  00080A  0E00               	movlw	0
 13891  00080C  217C               	addwfc	(auto_mount@bootsect+2)& (0+255),w,b
 13892  00080E  6F64               	movwf	(??_auto_mount+4)& (0+255),b
 13893  000810  0E00               	movlw	0
 13894  000812  217D               	addwfc	(auto_mount@bootsect+3)& (0+255),w,b
 13895  000814  6F65               	movwf	(??_auto_mount+5)& (0+255),b
 13896  000816  EE20 F008          	lfsr	2,8
 13897  00081A  518A               	movf	auto_mount@fs& (0+255),w,b
 13898  00081C  26D9               	addwf	fsr2l,f,c
 13899  00081E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13900  000820  22DA               	addwfc	fsr2h,f,c
 13901  000822  C062  FFDE         	movff	??_auto_mount+2,postinc2
 13902  000826  C063  FFDE         	movff	??_auto_mount+3,postinc2
 13903  00082A  C064  FFDE         	movff	??_auto_mount+4,postinc2
 13904  00082E  C065  FFDE         	movff	??_auto_mount+5,postinc2
 13905                           
 13906                           ; BSR set to: 0
 13907                           ;tff.c: 714: fs->csize = fs->win[13];
 13908  000832  EE20 F02D          	lfsr	2,45
 13909  000836  518A               	movf	auto_mount@fs& (0+255),w,b
 13910  000838  26D9               	addwf	fsr2l,f,c
 13911  00083A  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13912  00083C  22DA               	addwfc	fsr2h,f,c
 13913  00083E  EE10 F01D          	lfsr	1,29
 13914  000842  518A               	movf	auto_mount@fs& (0+255),w,b
 13915  000844  26E1               	addwf	fsr1l,f,c
 13916  000846  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13917  000848  22E2               	addwfc	fsr1h,f,c
 13918  00084A  CFDF FFE7          	movff	indf2,indf1
 13919                           
 13920                           ; BSR set to: 0
 13921                           ;tff.c: 715: fs->n_rootdir = (WORD)(*(WORD*)(BYTE*)(&fs->win[17]));
 13922  00084E  EE20 F031          	lfsr	2,49
 13923  000852  518A               	movf	auto_mount@fs& (0+255),w,b
 13924  000854  26D9               	addwf	fsr2l,f,c
 13925  000856  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13926  000858  22DA               	addwfc	fsr2h,f,c
 13927  00085A  EE10 F002          	lfsr	1,2
 13928  00085E  518A               	movf	auto_mount@fs& (0+255),w,b
 13929  000860  26E1               	addwf	fsr1l,f,c
 13930  000862  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13931  000864  22E2               	addwfc	fsr1h,f,c
 13932  000866  CFDE FFE6          	movff	postinc2,postinc1
 13933  00086A  CFDD FFE5          	movff	postdec2,postdec1
 13934                           
 13935                           ; BSR set to: 0
 13936                           ;tff.c: 716: totalsect = (WORD)(*(WORD*)(BYTE*)(&fs->win[19]));
 13937  00086E  EE20 F033          	lfsr	2,51
 13938  000872  518A               	movf	auto_mount@fs& (0+255),w,b
 13939  000874  26D9               	addwf	fsr2l,f,c
 13940  000876  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13941  000878  22DA               	addwfc	fsr2h,f,c
 13942  00087A  CFDE F060          	movff	postinc2,??_auto_mount
 13943  00087E  CFDD F061          	movff	postdec2,??_auto_mount+1
 13944  000882  C060  F07E         	movff	??_auto_mount,auto_mount@totalsect
 13945  000886  C061  F07F         	movff	??_auto_mount+1,auto_mount@totalsect+1
 13946  00088A  6B80               	clrf	(auto_mount@totalsect+2)& (0+255),b
 13947  00088C  6B81               	clrf	(auto_mount@totalsect+3)& (0+255),b
 13948                           
 13949                           ; BSR set to: 0
 13950                           ;tff.c: 717: if (!totalsect) totalsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[32]));
 13951  00088E  517E               	movf	auto_mount@totalsect& (0+255),w,b
 13952  000890  117F               	iorwf	(auto_mount@totalsect+1)& (0+255),w,b
 13953  000892  1180               	iorwf	(auto_mount@totalsect+2)& (0+255),w,b
 13954  000894  1181               	iorwf	(auto_mount@totalsect+3)& (0+255),w,b
 13955  000896  A4D8               	btfss	status,2,c
 13956  000898  D00E               	goto	l11994
 13957                           
 13958                           ; BSR set to: 0
 13959  00089A  EE20 F040          	lfsr	2,64
 13960  00089E  518A               	movf	auto_mount@fs& (0+255),w,b
 13961  0008A0  26D9               	addwf	fsr2l,f,c
 13962  0008A2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13963  0008A4  22DA               	addwfc	fsr2h,f,c
 13964  0008A6  CFDE F07E          	movff	postinc2,auto_mount@totalsect
 13965  0008AA  CFDE F07F          	movff	postinc2,auto_mount@totalsect+1
 13966  0008AE  CFDE F080          	movff	postinc2,auto_mount@totalsect+2
 13967  0008B2  CFDE F081          	movff	postinc2,auto_mount@totalsect+3
 13968  0008B6                     l11994:
 13969                           
 13970                           ; BSR set to: 0
 13971                           ;tff.c: 718: fs->max_clust = maxclust = (totalsect;tff.c: 719: - (WORD)(*(WORD*)(BYTE*)(
      +                          &fs->win[14])) - fatsize - fs->n_rootdir / 16;tff.c: 720: ) / fs->csize + 2;
 13972  0008B6  EE20 F002          	lfsr	2,2
 13973  0008BA  518A               	movf	auto_mount@fs& (0+255),w,b
 13974  0008BC  26D9               	addwf	fsr2l,f,c
 13975  0008BE  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13976  0008C0  22DA               	addwfc	fsr2h,f,c
 13977  0008C2  CFDE F060          	movff	postinc2,??_auto_mount
 13978  0008C6  CFDD F061          	movff	postdec2,??_auto_mount+1
 13979  0008CA  0E04               	movlw	4
 13980  0008CC  6F62               	movwf	(??_auto_mount+2)& (0+255),b
 13981  0008CE                     u13935:
 13982  0008CE  90D8               	bcf	status,0,c
 13983  0008D0  3361               	rrcf	(??_auto_mount+1)& (0+255),f,b
 13984  0008D2  3360               	rrcf	??_auto_mount& (0+255),f,b
 13985  0008D4  2F62               	decfsz	(??_auto_mount+2)& (0+255),f,b
 13986  0008D6  D7FB               	goto	u13935
 13987  0008D8  5160               	movf	??_auto_mount& (0+255),w,b
 13988  0008DA  6F63               	movwf	(??_auto_mount+3)& (0+255),b
 13989  0008DC  5161               	movf	(??_auto_mount+1)& (0+255),w,b
 13990  0008DE  6F64               	movwf	(??_auto_mount+4)& (0+255),b
 13991  0008E0  6B65               	clrf	(??_auto_mount+5)& (0+255),b
 13992  0008E2  6B66               	clrf	(??_auto_mount+6)& (0+255),b
 13993  0008E4  EE20 F02E          	lfsr	2,46
 13994  0008E8  518A               	movf	auto_mount@fs& (0+255),w,b
 13995  0008EA  26D9               	addwf	fsr2l,f,c
 13996  0008EC  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13997  0008EE  22DA               	addwfc	fsr2h,f,c
 13998  0008F0  CFDE F067          	movff	postinc2,??_auto_mount+7
 13999  0008F4  CFDD F068          	movff	postdec2,??_auto_mount+8
 14000  0008F8  5167               	movf	(??_auto_mount+7)& (0+255),w,b
 14001  0008FA  6F69               	movwf	(??_auto_mount+9)& (0+255),b
 14002  0008FC  5168               	movf	(??_auto_mount+8)& (0+255),w,b
 14003  0008FE  6F6A               	movwf	(??_auto_mount+10)& (0+255),b
 14004  000900  6B6B               	clrf	(??_auto_mount+11)& (0+255),b
 14005  000902  6B6C               	clrf	(??_auto_mount+12)& (0+255),b
 14006  000904  1F69               	comf	(??_auto_mount+9)& (0+255),f,b
 14007  000906  1F6A               	comf	(??_auto_mount+10)& (0+255),f,b
 14008  000908  1F6B               	comf	(??_auto_mount+11)& (0+255),f,b
 14009  00090A  1F6C               	comf	(??_auto_mount+12)& (0+255),f,b
 14010  00090C  2B69               	incf	(??_auto_mount+9)& (0+255),f,b
 14011  00090E  0E00               	movlw	0
 14012  000910  236A               	addwfc	(??_auto_mount+10)& (0+255),f,b
 14013  000912  236B               	addwfc	(??_auto_mount+11)& (0+255),f,b
 14014  000914  236C               	addwfc	(??_auto_mount+12)& (0+255),f,b
 14015  000916  5186               	movf	auto_mount@fatsize& (0+255),w,b
 14016  000918  5D69               	subwf	(??_auto_mount+9)& (0+255),w,b
 14017  00091A  6F6D               	movwf	(??_auto_mount+13)& (0+255),b
 14018  00091C  5187               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 14019  00091E  596A               	subwfb	(??_auto_mount+10)& (0+255),w,b
 14020  000920  6F6E               	movwf	(??_auto_mount+14)& (0+255),b
 14021  000922  5188               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 14022  000924  596B               	subwfb	(??_auto_mount+11)& (0+255),w,b
 14023  000926  6F6F               	movwf	(??_auto_mount+15)& (0+255),b
 14024  000928  5189               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 14025  00092A  596C               	subwfb	(??_auto_mount+12)& (0+255),w,b
 14026  00092C  6F70               	movwf	(??_auto_mount+16)& (0+255),b
 14027  00092E  5163               	movf	(??_auto_mount+3)& (0+255),w,b
 14028  000930  5D6D               	subwf	(??_auto_mount+13)& (0+255),w,b
 14029  000932  6F71               	movwf	(??_auto_mount+17)& (0+255),b
 14030  000934  5164               	movf	(??_auto_mount+4)& (0+255),w,b
 14031  000936  596E               	subwfb	(??_auto_mount+14)& (0+255),w,b
 14032  000938  6F72               	movwf	(??_auto_mount+18)& (0+255),b
 14033  00093A  5165               	movf	(??_auto_mount+5)& (0+255),w,b
 14034  00093C  596F               	subwfb	(??_auto_mount+15)& (0+255),w,b
 14035  00093E  6F73               	movwf	(??_auto_mount+19)& (0+255),b
 14036  000940  5166               	movf	(??_auto_mount+6)& (0+255),w,b
 14037  000942  5970               	subwfb	(??_auto_mount+16)& (0+255),w,b
 14038  000944  6F74               	movwf	(??_auto_mount+20)& (0+255),b
 14039  000946  517E               	movf	auto_mount@totalsect& (0+255),w,b
 14040  000948  2571               	addwf	(??_auto_mount+17)& (0+255),w,b
 14041  00094A  6E0A               	movwf	___lldiv@dividend^0,c
 14042  00094C  517F               	movf	(auto_mount@totalsect+1)& (0+255),w,b
 14043  00094E  2172               	addwfc	(??_auto_mount+18)& (0+255),w,b
 14044  000950  6E0B               	movwf	(___lldiv@dividend+1)^0,c
 14045  000952  5180               	movf	(auto_mount@totalsect+2)& (0+255),w,b
 14046  000954  2173               	addwfc	(??_auto_mount+19)& (0+255),w,b
 14047  000956  6E0C               	movwf	(___lldiv@dividend+2)^0,c
 14048  000958  5181               	movf	(auto_mount@totalsect+3)& (0+255),w,b
 14049  00095A  2174               	addwfc	(??_auto_mount+20)& (0+255),w,b
 14050  00095C  6E0D               	movwf	(___lldiv@dividend+3)^0,c
 14051  00095E  EE20 F01D          	lfsr	2,29
 14052  000962  518A               	movf	auto_mount@fs& (0+255),w,b
 14053  000964  26D9               	addwf	fsr2l,f,c
 14054  000966  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14055  000968  22DA               	addwfc	fsr2h,f,c
 14056  00096A  50DF               	movf	indf2,w,c
 14057  00096C  6F75               	movwf	(??_auto_mount+21)& (0+255),b
 14058  00096E  5175               	movf	(??_auto_mount+21)& (0+255),w,b
 14059  000970  6E0E               	movwf	___lldiv@divisor^0,c
 14060  000972  6A0F               	clrf	(___lldiv@divisor+1)^0,c
 14061  000974  6A10               	clrf	(___lldiv@divisor+2)^0,c
 14062  000976  6A11               	clrf	(___lldiv@divisor+3)^0,c
 14063  000978  ECF1  F024         	call	___lldiv	;wreg free
 14064  00097C  0E02               	movlw	2
 14065  00097E  240A               	addwf	?___lldiv^0,w,c
 14066  000980  0100               	movlb	0	; () banked
 14067  000982  6F76               	movwf	auto_mount@maxclust& (0+255),b
 14068  000984  0E00               	movlw	0
 14069  000986  200B               	addwfc	(?___lldiv+1)^0,w,c
 14070  000988  6F77               	movwf	(auto_mount@maxclust+1)& (0+255),b
 14071  00098A  0E00               	movlw	0
 14072  00098C  200C               	addwfc	(?___lldiv+2)^0,w,c
 14073  00098E  6F78               	movwf	(auto_mount@maxclust+2)& (0+255),b
 14074  000990  0E00               	movlw	0
 14075  000992  200D               	addwfc	(?___lldiv+3)^0,w,c
 14076  000994  6F79               	movwf	(auto_mount@maxclust+3)& (0+255),b
 14077  000996  EE20 F016          	lfsr	2,22
 14078  00099A  518A               	movf	auto_mount@fs& (0+255),w,b
 14079  00099C  26D9               	addwf	fsr2l,f,c
 14080  00099E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14081  0009A0  22DA               	addwfc	fsr2h,f,c
 14082  0009A2  C076  FFDE         	movff	auto_mount@maxclust,postinc2
 14083  0009A6  C077  FFDD         	movff	auto_mount@maxclust+1,postdec2
 14084                           
 14085                           ; BSR set to: 0
 14086                           ;tff.c: 722: fmt = 1;
 14087  0009AA  0E01               	movlw	1
 14088  0009AC  6F84               	movwf	auto_mount@fmt& (0+255),b
 14089                           
 14090                           ; BSR set to: 0
 14091                           ;tff.c: 723: if (maxclust >= 0xFF7) fmt = 2;
 14092  0009AE  5179               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 14093  0009B0  1178               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 14094  0009B2  E106               	bnz	u13940
 14095  0009B4  0EF7               	movlw	247
 14096  0009B6  5D76               	subwf	auto_mount@maxclust& (0+255),w,b
 14097  0009B8  0E0F               	movlw	15
 14098  0009BA  5977               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 14099  0009BC  A0D8               	btfss	status,0,c
 14100  0009BE  D002               	goto	l12002
 14101  0009C0                     u13940:
 14102                           
 14103                           ; BSR set to: 0
 14104  0009C0  0E02               	movlw	2
 14105  0009C2  6F84               	movwf	auto_mount@fmt& (0+255),b
 14106  0009C4                     l12002:
 14107                           
 14108                           ; BSR set to: 0
 14109                           ;tff.c: 724: if (maxclust >= 0xFFF7)
 14110  0009C4  5179               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 14111  0009C6  1178               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 14112  0009C8  E107               	bnz	u13950
 14113  0009CA  0EF7               	movlw	247
 14114  0009CC  5D76               	subwf	auto_mount@maxclust& (0+255),w,b
 14115  0009CE  0EFF               	movlw	255
 14116  0009D0  5977               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 14117  0009D2  B0D8               	btfsc	status,0,c
 14118  0009D4  D6AC               	goto	u13900
 14119  0009D6  D001               	goto	l12008
 14120  0009D8                     u13950:
 14121  0009D8  D6AA               	goto	u13900
 14122  0009DA                     l12008:
 14123                           
 14124                           ; BSR set to: 0
 14125                           ;tff.c: 733: fs->dirbase = fs->fatbase + fatsize;
 14126  0009DA  EE20 F008          	lfsr	2,8
 14127  0009DE  518A               	movf	auto_mount@fs& (0+255),w,b
 14128  0009E0  26D9               	addwf	fsr2l,f,c
 14129  0009E2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14130  0009E4  22DA               	addwfc	fsr2h,f,c
 14131  0009E6  CFDE F060          	movff	postinc2,??_auto_mount
 14132  0009EA  CFDE F061          	movff	postinc2,??_auto_mount+1
 14133  0009EE  CFDE F062          	movff	postinc2,??_auto_mount+2
 14134  0009F2  CFDE F063          	movff	postinc2,??_auto_mount+3
 14135  0009F6  5186               	movf	auto_mount@fatsize& (0+255),w,b
 14136  0009F8  2560               	addwf	??_auto_mount& (0+255),w,b
 14137  0009FA  6F64               	movwf	(??_auto_mount+4)& (0+255),b
 14138  0009FC  5187               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 14139  0009FE  2161               	addwfc	(??_auto_mount+1)& (0+255),w,b
 14140  000A00  6F65               	movwf	(??_auto_mount+5)& (0+255),b
 14141  000A02  5188               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 14142  000A04  2162               	addwfc	(??_auto_mount+2)& (0+255),w,b
 14143  000A06  6F66               	movwf	(??_auto_mount+6)& (0+255),b
 14144  000A08  5189               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 14145  000A0A  2163               	addwfc	(??_auto_mount+3)& (0+255),w,b
 14146  000A0C  6F67               	movwf	(??_auto_mount+7)& (0+255),b
 14147  000A0E  EE20 F00C          	lfsr	2,12
 14148  000A12  518A               	movf	auto_mount@fs& (0+255),w,b
 14149  000A14  26D9               	addwf	fsr2l,f,c
 14150  000A16  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14151  000A18  22DA               	addwfc	fsr2h,f,c
 14152  000A1A  C064  FFDE         	movff	??_auto_mount+4,postinc2
 14153  000A1E  C065  FFDE         	movff	??_auto_mount+5,postinc2
 14154  000A22  C066  FFDE         	movff	??_auto_mount+6,postinc2
 14155  000A26  C067  FFDE         	movff	??_auto_mount+7,postinc2
 14156                           
 14157                           ;tff.c: 734: fs->database = fs->fatbase + fatsize + fs->n_rootdir / 16;
 14158  000A2A  EE20 F008          	lfsr	2,8
 14159  000A2E  518A               	movf	auto_mount@fs& (0+255),w,b
 14160  000A30  26D9               	addwf	fsr2l,f,c
 14161  000A32  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14162  000A34  22DA               	addwfc	fsr2h,f,c
 14163  000A36  CFDE F060          	movff	postinc2,??_auto_mount
 14164  000A3A  CFDE F061          	movff	postinc2,??_auto_mount+1
 14165  000A3E  CFDE F062          	movff	postinc2,??_auto_mount+2
 14166  000A42  CFDE F063          	movff	postinc2,??_auto_mount+3
 14167  000A46  EE20 F002          	lfsr	2,2
 14168  000A4A  518A               	movf	auto_mount@fs& (0+255),w,b
 14169  000A4C  26D9               	addwf	fsr2l,f,c
 14170  000A4E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14171  000A50  22DA               	addwfc	fsr2h,f,c
 14172  000A52  CFDE F064          	movff	postinc2,??_auto_mount+4
 14173  000A56  CFDD F065          	movff	postdec2,??_auto_mount+5
 14174  000A5A  0E04               	movlw	4
 14175  000A5C  6F66               	movwf	(??_auto_mount+6)& (0+255),b
 14176  000A5E                     u13965:
 14177  000A5E  90D8               	bcf	status,0,c
 14178  000A60  3365               	rrcf	(??_auto_mount+5)& (0+255),f,b
 14179  000A62  3364               	rrcf	(??_auto_mount+4)& (0+255),f,b
 14180  000A64  2F66               	decfsz	(??_auto_mount+6)& (0+255),f,b
 14181  000A66  D7FB               	goto	u13965
 14182  000A68  5164               	movf	(??_auto_mount+4)& (0+255),w,b
 14183  000A6A  2560               	addwf	??_auto_mount& (0+255),w,b
 14184  000A6C  6F67               	movwf	(??_auto_mount+7)& (0+255),b
 14185  000A6E  5165               	movf	(??_auto_mount+5)& (0+255),w,b
 14186  000A70  2161               	addwfc	(??_auto_mount+1)& (0+255),w,b
 14187  000A72  6F68               	movwf	(??_auto_mount+8)& (0+255),b
 14188  000A74  0E00               	movlw	0
 14189  000A76  2162               	addwfc	(??_auto_mount+2)& (0+255),w,b
 14190  000A78  6F69               	movwf	(??_auto_mount+9)& (0+255),b
 14191  000A7A  0E00               	movlw	0
 14192  000A7C  2163               	addwfc	(??_auto_mount+3)& (0+255),w,b
 14193  000A7E  6F6A               	movwf	(??_auto_mount+10)& (0+255),b
 14194  000A80  5186               	movf	auto_mount@fatsize& (0+255),w,b
 14195  000A82  2567               	addwf	(??_auto_mount+7)& (0+255),w,b
 14196  000A84  6F6B               	movwf	(??_auto_mount+11)& (0+255),b
 14197  000A86  5187               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 14198  000A88  2168               	addwfc	(??_auto_mount+8)& (0+255),w,b
 14199  000A8A  6F6C               	movwf	(??_auto_mount+12)& (0+255),b
 14200  000A8C  5188               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 14201  000A8E  2169               	addwfc	(??_auto_mount+9)& (0+255),w,b
 14202  000A90  6F6D               	movwf	(??_auto_mount+13)& (0+255),b
 14203  000A92  5189               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 14204  000A94  216A               	addwfc	(??_auto_mount+10)& (0+255),w,b
 14205  000A96  6F6E               	movwf	(??_auto_mount+14)& (0+255),b
 14206  000A98  EE20 F010          	lfsr	2,16
 14207  000A9C  518A               	movf	auto_mount@fs& (0+255),w,b
 14208  000A9E  26D9               	addwf	fsr2l,f,c
 14209  000AA0  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14210  000AA2  22DA               	addwfc	fsr2h,f,c
 14211  000AA4  C06B  FFDE         	movff	??_auto_mount+11,postinc2
 14212  000AA8  C06C  FFDE         	movff	??_auto_mount+12,postinc2
 14213  000AAC  C06D  FFDE         	movff	??_auto_mount+13,postinc2
 14214  000AB0  C06E  FFDE         	movff	??_auto_mount+14,postinc2
 14215                           
 14216                           ;tff.c: 738: fs->free_clust = (CLUST)0xFFFFFFFF;
 14217  000AB4  EE20 F01A          	lfsr	2,26
 14218  000AB8  518A               	movf	auto_mount@fs& (0+255),w,b
 14219  000ABA  26D9               	addwf	fsr2l,f,c
 14220  000ABC  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14221  000ABE  22DA               	addwfc	fsr2h,f,c
 14222  000AC0  0EFF               	movlw	255
 14223  000AC2  6EDE               	movwf	postinc2,c
 14224  000AC4  0EFF               	movlw	255
 14225  000AC6  6EDD               	movwf	postdec2,c
 14226                           
 14227                           ;tff.c: 754: fs->fs_type = fmt;
 14228  000AC8  EE20 F01C          	lfsr	2,28
 14229  000ACC  518A               	movf	auto_mount@fs& (0+255),w,b
 14230  000ACE  26D9               	addwf	fsr2l,f,c
 14231  000AD0  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14232  000AD2  22DA               	addwfc	fsr2h,f,c
 14233  000AD4  C084  FFDF         	movff	auto_mount@fmt,indf2
 14234                           
 14235                           ; BSR set to: 0
 14236                           ;tff.c: 755: fs->id = ++fsid;
 14237  000AD8  0101               	movlb	1	; () banked
 14238  000ADA  4B72               	infsnz	_fsid& (0+255),f,b
 14239  000ADC  2B73               	incf	(_fsid+1)& (0+255),f,b
 14240  000ADE  C08A  FFD9         	movff	auto_mount@fs,fsr2l
 14241  000AE2  C08B  FFDA         	movff	auto_mount@fs+1,fsr2h
 14242  000AE6  C172  FFDE         	movff	_fsid,postinc2
 14243  000AEA  C173  FFDD         	movff	_fsid+1,postdec2
 14244                           
 14245                           ;tff.c: 756: return FR_OK;
 14246  000AEE  0E00               	movlw	0
 14247  000AF0  0012               	return		;funcret
 14248  000AF2                     __end_of_auto_mount:
 14249                           	callstack 0
 14250                           
 14251 ;; *************** function _memset *****************
 14252 ;; Defined at:
 14253 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memset.c"
 14254 ;; Parameters:    Size  Location     Type
 14255 ;;  p1              2    9[COMRAM] PTR void 
 14256 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 14257 ;;  c               2   11[COMRAM] int 
 14258 ;;  n               2   13[COMRAM] unsigned int 
 14259 ;; Auto vars:     Size  Location     Type
 14260 ;;  p               2   15[COMRAM] PTR unsigned char 
 14261 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 14262 ;; Return value:  Size  Location     Type
 14263 ;;                  2    9[COMRAM] PTR void 
 14264 ;; Registers used:
 14265 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14266 ;; Tracked objects:
 14267 ;;		On entry : 0/0
 14268 ;;		On exit  : 0/0
 14269 ;;		Unchanged: 0/0
 14270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14271 ;;      Params:         6       0       0       0       0       0       0       0       0
 14272 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14273 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14274 ;;      Totals:         8       0       0       0       0       0       0       0       0
 14275 ;;Total ram usage:        8 bytes
 14276 ;; Hardware stack levels used:    1
 14277 ;; Hardware stack levels required when called:    2
 14278 ;; This function calls:
 14279 ;;		Nothing
 14280 ;; This function is called by:
 14281 ;;		_make_dirfile
 14282 ;;		_reserve_direntry
 14283 ;;		_auto_mount
 14284 ;;		_f_open
 14285 ;; This function uses a non-reentrant model
 14286 ;;
 14287                           
 14288                           	psect	text79
 14289  005800                     __ptext79:
 14290                           	callstack 0
 14291  005800                     _memset:
 14292                           	callstack 21
 14293                           
 14294                           ;incstack = 0
 14295  005800  C00A  F010         	movff	memset@p1,memset@p
 14296  005804  C00B  F011         	movff	memset@p1+1,memset@p+1
 14297  005808  D008               	goto	l11132
 14298  00580A                     l11128:
 14299  00580A  C010  FFD9         	movff	memset@p,fsr2l
 14300  00580E  C011  FFDA         	movff	memset@p+1,fsr2h
 14301  005812  C00C  FFDF         	movff	memset@c,indf2
 14302  005816  4A10               	infsnz	memset@p^0,f,c
 14303  005818  2A11               	incf	(memset@p+1)^0,f,c
 14304  00581A                     l11132:
 14305  00581A  060E               	decf	memset@n^0,f,c
 14306  00581C  A0D8               	btfss	status,0,c
 14307  00581E  060F               	decf	(memset@n+1)^0,f,c
 14308  005820  280E               	incf	memset@n^0,w,c
 14309  005822  E1F3               	bnz	l11128
 14310  005824  280F               	incf	(memset@n+1)^0,w,c
 14311  005826  B4D8               	btfsc	status,2,c
 14312  005828  0012               	return	
 14313  00582A  D7EF               	goto	l11128
 14314  00582C                     __end_of_memset:
 14315                           	callstack 0
 14316                           
 14317 ;; *************** function _disk_initialize *****************
 14318 ;; Defined at:
 14319 ;;		line 59 in file "bibliotecas/diskio.c"
 14320 ;; Parameters:    Size  Location     Type
 14321 ;;  pdrv            1    wreg     unsigned char 
 14322 ;; Auto vars:     Size  Location     Type
 14323 ;;  pdrv            1   41[COMRAM] unsigned char 
 14324 ;;  result          2    0        int 
 14325 ;;  stat            1   42[COMRAM] unsigned char 
 14326 ;; Return value:  Size  Location     Type
 14327 ;;                  1    wreg      unsigned char 
 14328 ;; Registers used:
 14329 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14330 ;; Tracked objects:
 14331 ;;		On entry : 0/0
 14332 ;;		On exit  : 0/0
 14333 ;;		Unchanged: 0/0
 14334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14335 ;;      Params:         0       0       0       0       0       0       0       0       0
 14336 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14337 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14338 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14339 ;;Total ram usage:        2 bytes
 14340 ;; Hardware stack levels used:    1
 14341 ;; Hardware stack levels required when called:    7
 14342 ;; This function calls:
 14343 ;;		_sdc_disk_initialize
 14344 ;; This function is called by:
 14345 ;;		_auto_mount
 14346 ;; This function uses a non-reentrant model
 14347 ;;
 14348                           
 14349                           	psect	text80
 14350  0058FE                     __ptext80:
 14351                           	callstack 0
 14352  0058FE                     _disk_initialize:
 14353                           	callstack 17
 14354                           
 14355                           ;incstack = 0
 14356                           ;disk_initialize@pdrv stored from wreg
 14357  0058FE  6E2A               	movwf	disk_initialize@pdrv^0,c
 14358                           
 14359                           ;diskio.c: 63: DSTATUS stat;;diskio.c: 64: int result;;diskio.c: 66: switch (pdrv) {
 14360  005900  D005               	goto	l11320
 14361  005902                     l11302:
 14362                           
 14363                           ;diskio.c: 68: stat = sdc_disk_initialize();
 14364  005902  EC8A  F00C         	call	_sdc_disk_initialize	;wreg free
 14365  005906  6E2B               	movwf	disk_initialize@stat^0,c
 14366  005908                     l11304:
 14367                           
 14368                           ;diskio.c: 72: return stat;
 14369  005908  502B               	movf	disk_initialize@stat^0,w,c
 14370  00590A  0012               	return	
 14371  00590C                     l11320:
 14372  00590C  502A               	movf	disk_initialize@pdrv^0,w,c
 14373                           
 14374                           ; Switch size 1, requested type "simple"
 14375                           ; Number of cases is 3, Range of values is 0 to 2
 14376                           ; switch strategies available:
 14377                           ; Name         Instructions Cycles
 14378                           ; simple_byte           10     6 (average)
 14379                           ;	Chosen strategy is simple_byte
 14380  00590E  0A00               	xorlw	0	; case 0
 14381  005910  B4D8               	btfsc	status,2,c
 14382  005912  D7F7               	goto	l11302
 14383  005914  0A01               	xorlw	1	; case 1
 14384  005916  B4D8               	btfsc	status,2,c
 14385  005918  D7F4               	goto	l11302
 14386  00591A  0A03               	xorlw	3	; case 2
 14387  00591C  B4D8               	btfsc	status,2,c
 14388  00591E  D7F4               	goto	l11304
 14389                           
 14390                           ;diskio.c: 88: return 0x01;
 14391  005920  0E01               	movlw	1
 14392  005922  0012               	return		;funcret
 14393  005924                     __end_of_disk_initialize:
 14394                           	callstack 0
 14395                           
 14396 ;; *************** function _sdc_disk_initialize *****************
 14397 ;; Defined at:
 14398 ;;		line 275 in file "bibliotecas/diskio.c"
 14399 ;; Parameters:    Size  Location     Type
 14400 ;;		None
 14401 ;; Auto vars:     Size  Location     Type
 14402 ;;  count2          2   38[COMRAM] int 
 14403 ;;  crc_number      2   34[COMRAM] int 
 14404 ;;  count1          2   32[COMRAM] int 
 14405 ;;  i               2    0        int 
 14406 ;;  buff            1   40[COMRAM] unsigned char 
 14407 ;;  ocr             1   37[COMRAM] unsigned char 
 14408 ;;  buff_i          1   36[COMRAM] unsigned char 
 14409 ;;  stat            1   31[COMRAM] unsigned char 
 14410 ;; Return value:  Size  Location     Type
 14411 ;;                  1    wreg      unsigned char 
 14412 ;; Registers used:
 14413 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14414 ;; Tracked objects:
 14415 ;;		On entry : 0/0
 14416 ;;		On exit  : 0/0
 14417 ;;		Unchanged: 0/0
 14418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14419 ;;      Params:         0       0       0       0       0       0       0       0       0
 14420 ;;      Locals:        12       0       0       0       0       0       0       0       0
 14421 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14422 ;;      Totals:        13       0       0       0       0       0       0       0       0
 14423 ;;Total ram usage:       13 bytes
 14424 ;; Hardware stack levels used:    1
 14425 ;; Hardware stack levels required when called:    6
 14426 ;; This function calls:
 14427 ;;		_command
 14428 ;;		_dummy_clocks
 14429 ;;		_escreve_frase_ram_lcd
 14430 ;;		_posicao_cursor_lcd
 14431 ;;		_proceed
 14432 ;;		_response
 14433 ;;		_sdc_reset
 14434 ;; This function is called by:
 14435 ;;		_disk_initialize
 14436 ;; This function uses a non-reentrant model
 14437 ;;
 14438                           
 14439                           	psect	text81
 14440  001914                     __ptext81:
 14441                           	callstack 0
 14442  001914                     _sdc_disk_initialize:
 14443                           	callstack 17
 14444                           
 14445                           ;incstack = 0
 14446  001914  0E00               	movlw	0
 14447  001916  6E22               	movwf	(sdc_disk_initialize@count1+1)^0,c
 14448  001918  0E00               	movlw	0
 14449  00191A  6E21               	movwf	sdc_disk_initialize@count1^0,c
 14450  00191C  0E00               	movlw	0
 14451  00191E  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14452  001920  0E00               	movlw	0
 14453  001922  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14454                           
 14455                           ;diskio.c: 280: BYTE buff = 0;
 14456  001924  0E00               	movlw	0
 14457  001926  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14458                           
 14459                           ;diskio.c: 281: BYTE buff_i;;diskio.c: 282: int crc_number;;diskio.c: 283: _delay((unsig
      +                          ned long)((1)*(48000000/4000.0)));
 14460  001928  0E10               	movlw	16
 14461  00192A  6E1D               	movwf	??_sdc_disk_initialize^0,c
 14462  00192C  0E94               	movlw	148
 14463  00192E                     u16717:
 14464  00192E  2EE8               	decfsz	wreg,f,c
 14465  001930  D7FE               	bra	u16717
 14466  001932  2E1D               	decfsz	??_sdc_disk_initialize^0,f,c
 14467  001934  D7FC               	bra	u16717
 14468  001936  D000               	nop2	
 14469                           
 14470                           ;diskio.c: 284: dummy_clocks(100);
 14471  001938  0E64               	movlw	100
 14472  00193A  ECCE  F02A         	call	_dummy_clocks
 14473                           
 14474                           ;diskio.c: 287: sdc_reset();
 14475  00193E  ECE0  F023         	call	_sdc_reset	;wreg free
 14476                           
 14477                           ;diskio.c: 288: command(0X48, 0x000001AA, 0x87);
 14478  001942  0EAA               	movlw	170
 14479  001944  6E0F               	movwf	command@arg^0,c
 14480  001946  0E01               	movlw	1
 14481  001948  6E10               	movwf	(command@arg+1)^0,c
 14482  00194A  0E00               	movlw	0
 14483  00194C  6E11               	movwf	(command@arg+2)^0,c
 14484  00194E  0E00               	movlw	0
 14485  001950  6E12               	movwf	(command@arg+3)^0,c
 14486  001952  0E87               	movlw	135
 14487  001954  6E13               	movwf	command@CRC^0,c
 14488  001956  0E48               	movlw	72
 14489  001958  ECB2  F027         	call	_command
 14490                           
 14491                           ;diskio.c: 289: proceed();
 14492  00195C  ECF6  F02D         	call	_proceed	;wreg free
 14493  001960                     l10940:
 14494                           
 14495                           ;diskio.c: 291: buff_i = response();
 14496  001960  ECF0  F02D         	call	_response	;wreg free
 14497  001964  6E25               	movwf	sdc_disk_initialize@buff_i^0,c
 14498                           
 14499                           ;diskio.c: 292: if(buff_i == 1)
 14500  001966  0425               	decf	sdc_disk_initialize@buff_i^0,w,c
 14501  001968  A4D8               	btfss	status,2,c
 14502  00196A  D004               	goto	l10946
 14503                           
 14504                           ;diskio.c: 293: {;diskio.c: 294: crc_number = buff_i<<8;
 14505  00196C  5025               	movf	sdc_disk_initialize@buff_i^0,w,c
 14506  00196E  6E24               	movwf	(sdc_disk_initialize@crc_number+1)^0,c
 14507  001970  6A23               	clrf	sdc_disk_initialize@crc_number^0,c
 14508                           
 14509                           ;diskio.c: 295: }
 14510  001972  D006               	goto	l10950
 14511  001974                     l10946:
 14512                           
 14513                           ;diskio.c: 296: else if(buff_i==0xAA)
 14514  001974  0EAA               	movlw	170
 14515  001976  1825               	xorwf	sdc_disk_initialize@buff_i^0,w,c
 14516  001978  A4D8               	btfss	status,2,c
 14517  00197A  D002               	goto	l10950
 14518                           
 14519                           ;diskio.c: 297: {;diskio.c: 298: crc_number |= buff_i;
 14520  00197C  5025               	movf	sdc_disk_initialize@buff_i^0,w,c
 14521  00197E  1223               	iorwf	sdc_disk_initialize@crc_number^0,f,c
 14522  001980                     l10950:
 14523                           
 14524                           ;diskio.c: 299: };diskio.c: 300: count1++;
 14525  001980  4A21               	infsnz	sdc_disk_initialize@count1^0,f,c
 14526  001982  2A22               	incf	(sdc_disk_initialize@count1+1)^0,f,c
 14527                           
 14528                           ;diskio.c: 301: }while(crc_number != 0x1AA && count1<1000);
 14529  001984  0EAA               	movlw	170
 14530  001986  1823               	xorwf	sdc_disk_initialize@crc_number^0,w,c
 14531  001988  E103               	bnz	u12290
 14532  00198A  0424               	decf	(sdc_disk_initialize@crc_number+1)^0,w,c
 14533  00198C  B4D8               	btfsc	status,2,c
 14534  00198E  D008               	goto	u12300
 14535  001990                     u12290:
 14536  001990  BE22               	btfsc	(sdc_disk_initialize@count1+1)^0,7,c
 14537  001992  D7E6               	goto	l10940
 14538  001994  0EE8               	movlw	232
 14539  001996  5C21               	subwf	sdc_disk_initialize@count1^0,w,c
 14540  001998  0E03               	movlw	3
 14541  00199A  5822               	subwfb	(sdc_disk_initialize@count1+1)^0,w,c
 14542  00199C  A0D8               	btfss	status,0,c
 14543  00199E  D7E0               	goto	l10940
 14544  0019A0                     u12300:
 14545                           
 14546                           ;diskio.c: 306: if (crc_number == 0x1AA)
 14547  0019A0  0EAA               	movlw	170
 14548  0019A2  1823               	xorwf	sdc_disk_initialize@crc_number^0,w,c
 14549  0019A4  E102               	bnz	u12311
 14550  0019A6  0424               	decf	(sdc_disk_initialize@crc_number+1)^0,w,c
 14551  0019A8  A4D8               	btfss	status,2,c
 14552  0019AA                     u12311:
 14553  0019AA  D099               	goto	l11028
 14554  0019AC                     u12310:
 14555                           
 14556                           ;diskio.c: 310: count2 = 0;
 14557                           
 14558                           ;diskio.c: 309: do{
 14559  0019AC  0E00               	movlw	0
 14560  0019AE  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14561  0019B0  0E00               	movlw	0
 14562  0019B2  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14563  0019B4                     
 14564                           ;diskio.c: 319: dummy_clocks(10);
 14565  0019B4  0E0A               	movlw	10
 14566  0019B6  ECCE  F02A         	call	_dummy_clocks
 14567                           
 14568                           ;diskio.c: 320: command(0X77, 0X00000000, 0X00);
 14569  0019BA  0E00               	movlw	0
 14570  0019BC  6E0F               	movwf	command@arg^0,c
 14571  0019BE  0E00               	movlw	0
 14572  0019C0  6E10               	movwf	(command@arg+1)^0,c
 14573  0019C2  0E00               	movlw	0
 14574  0019C4  6E11               	movwf	(command@arg+2)^0,c
 14575  0019C6  0E00               	movlw	0
 14576  0019C8  6E12               	movwf	(command@arg+3)^0,c
 14577  0019CA  0E00               	movlw	0
 14578  0019CC  6E13               	movwf	command@CRC^0,c
 14579  0019CE  0E77               	movlw	119
 14580  0019D0  ECB2  F027         	call	_command
 14581                           
 14582                           ;diskio.c: 323: proceed();
 14583  0019D4  ECF6  F02D         	call	_proceed	;wreg free
 14584  0019D8                     l10970:
 14585                           
 14586                           ;diskio.c: 325: buff = response();
 14587  0019D8  ECF0  F02D         	call	_response	;wreg free
 14588  0019DC  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14589                           
 14590                           ;diskio.c: 326: count2++;
 14591  0019DE  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14592  0019E0  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14593                           
 14594                           ;diskio.c: 327: }while((buff!=0X01)&&(count2<10));
 14595  0019E2  0429               	decf	sdc_disk_initialize@buff^0,w,c
 14596  0019E4  B4D8               	btfsc	status,2,c
 14597  0019E6  D008               	goto	u12330
 14598  0019E8  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14599  0019EA  D7F6               	goto	l10970
 14600  0019EC  5028               	movf	(sdc_disk_initialize@count2+1)^0,w,c
 14601  0019EE  E104               	bnz	u12330
 14602  0019F0  0E0A               	movlw	10
 14603  0019F2  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14604  0019F4  A0D8               	btfss	status,0,c
 14605  0019F6  D7F0               	goto	l10970
 14606  0019F8                     u12330:
 14607                           
 14608                           ;diskio.c: 328: count2 = 0;
 14609  0019F8  0E00               	movlw	0
 14610  0019FA  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14611  0019FC  0E00               	movlw	0
 14612  0019FE  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14613                           
 14614                           ;diskio.c: 332: dummy_clocks(10);
 14615  001A00  0E0A               	movlw	10
 14616  001A02  ECCE  F02A         	call	_dummy_clocks
 14617                           
 14618                           ;diskio.c: 333: command(0X69, 0X40000000 , 0x00);
 14619  001A06  0E00               	movlw	0
 14620  001A08  6E0F               	movwf	command@arg^0,c
 14621  001A0A  0E00               	movlw	0
 14622  001A0C  6E10               	movwf	(command@arg+1)^0,c
 14623  001A0E  0E00               	movlw	0
 14624  001A10  6E11               	movwf	(command@arg+2)^0,c
 14625  001A12  0E40               	movlw	64
 14626  001A14  6E12               	movwf	(command@arg+3)^0,c
 14627  001A16  0E00               	movlw	0
 14628  001A18  6E13               	movwf	command@CRC^0,c
 14629  001A1A  0E69               	movlw	105
 14630  001A1C  ECB2  F027         	call	_command
 14631                           
 14632                           ;diskio.c: 334: proceed();
 14633  001A20  ECF6  F02D         	call	_proceed	;wreg free
 14634                           
 14635                           ;diskio.c: 335: buff = response();
 14636  001A24  ECF0  F02D         	call	_response	;wreg free
 14637  001A28  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14638                           
 14639                           ;diskio.c: 336: count2++;
 14640  001A2A  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14641  001A2C  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14642                           
 14643                           ;diskio.c: 337: }while(buff!=0X00);
 14644  001A2E  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14645  001A30  A4D8               	btfss	status,2,c
 14646  001A32  D7C0               	goto	l10960
 14647                           
 14648                           ;diskio.c: 342: dummy_clocks(10);
 14649  001A34  0E0A               	movlw	10
 14650  001A36  ECCE  F02A         	call	_dummy_clocks
 14651                           
 14652                           ;diskio.c: 343: command(0X7A, 0X00000000, 0XFF);
 14653  001A3A  0E00               	movlw	0
 14654  001A3C  6E0F               	movwf	command@arg^0,c
 14655  001A3E  0E00               	movlw	0
 14656  001A40  6E10               	movwf	(command@arg+1)^0,c
 14657  001A42  0E00               	movlw	0
 14658  001A44  6E11               	movwf	(command@arg+2)^0,c
 14659  001A46  0E00               	movlw	0
 14660  001A48  6E12               	movwf	(command@arg+3)^0,c
 14661  001A4A  0EFF               	movlw	255
 14662  001A4C  6E13               	movwf	command@CRC^0,c
 14663  001A4E  0E7A               	movlw	122
 14664  001A50  ECB2  F027         	call	_command
 14665                           
 14666                           ;diskio.c: 344: proceed();
 14667  001A54  ECF6  F02D         	call	_proceed	;wreg free
 14668  001A58                     l10994:
 14669                           
 14670                           ;diskio.c: 346: buff = response();
 14671  001A58  ECF0  F02D         	call	_response	;wreg free
 14672  001A5C  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14673                           
 14674                           ;diskio.c: 347: ocr = (buff << 1) & 0b10000000;
 14675  001A5E  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14676  001A60  2429               	addwf	sdc_disk_initialize@buff^0,w,c
 14677  001A62  0B80               	andlw	128
 14678  001A64  6E26               	movwf	sdc_disk_initialize@ocr^0,c
 14679                           
 14680                           ;diskio.c: 348: count2++;
 14681  001A66  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14682  001A68  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14683                           
 14684                           ;diskio.c: 349: }while(ocr!=0X00 && ocr != 0x01 && count2<10);
 14685  001A6A  5026               	movf	sdc_disk_initialize@ocr^0,w,c
 14686  001A6C  B4D8               	btfsc	status,2,c
 14687  001A6E  D00B               	goto	u12370
 14688  001A70  0426               	decf	sdc_disk_initialize@ocr^0,w,c
 14689  001A72  B4D8               	btfsc	status,2,c
 14690  001A74  D008               	goto	u12370
 14691  001A76  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14692  001A78  D7EF               	goto	l10994
 14693  001A7A  5028               	movf	(sdc_disk_initialize@count2+1)^0,w,c
 14694  001A7C  E104               	bnz	u12370
 14695  001A7E  0E0A               	movlw	10
 14696  001A80  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14697  001A82  A0D8               	btfss	status,0,c
 14698  001A84  D7E9               	goto	l10994
 14699  001A86                     u12370:
 14700                           
 14701                           ;diskio.c: 350: }while(ocr != 0X00 && ocr !=0x01);
 14702  001A86  5026               	movf	sdc_disk_initialize@ocr^0,w,c
 14703  001A88  B4D8               	btfsc	status,2,c
 14704  001A8A  D003               	goto	u12390
 14705  001A8C  0426               	decf	sdc_disk_initialize@ocr^0,w,c
 14706  001A8E  A4D8               	btfss	status,2,c
 14707  001A90  D78D               	goto	u12310
 14708  001A92                     u12390:
 14709                           
 14710                           ;diskio.c: 355: _delay((unsigned long)((1)*(48000000/4000.0)));
 14711  001A92  0E10               	movlw	16
 14712  001A94  6E1D               	movwf	??_sdc_disk_initialize^0,c
 14713  001A96  0E94               	movlw	148
 14714  001A98                     u16727:
 14715  001A98  2EE8               	decfsz	wreg,f,c
 14716  001A9A  D7FE               	bra	u16727
 14717  001A9C  2E1D               	decfsz	??_sdc_disk_initialize^0,f,c
 14718  001A9E  D7FC               	bra	u16727
 14719  001AA0  D000               	nop2	
 14720                           
 14721                           ;diskio.c: 356: stat = 0X00;
 14722  001AA2  0E00               	movlw	0
 14723  001AA4  6E20               	movwf	sdc_disk_initialize@stat^0,c
 14724                           
 14725                           ;diskio.c: 358: if(!ocr)
 14726  001AA6  5026               	movf	sdc_disk_initialize@ocr^0,w,c
 14727  001AA8  A4D8               	btfss	status,2,c
 14728  001AAA  D0A6               	goto	u12490
 14729                           
 14730                           ;diskio.c: 359: {;diskio.c: 361: dummy_clocks(10);
 14731  001AAC  0E0A               	movlw	10
 14732  001AAE  ECCE  F02A         	call	_dummy_clocks
 14733                           
 14734                           ;diskio.c: 362: command(0x50, 0x00000200,0XFF);
 14735  001AB2  0E00               	movlw	0
 14736  001AB4  6E0F               	movwf	command@arg^0,c
 14737  001AB6  0E02               	movlw	2
 14738  001AB8  6E10               	movwf	(command@arg+1)^0,c
 14739  001ABA  0E00               	movlw	0
 14740  001ABC  6E11               	movwf	(command@arg+2)^0,c
 14741  001ABE  0E00               	movlw	0
 14742  001AC0  6E12               	movwf	(command@arg+3)^0,c
 14743  001AC2  0EFF               	movlw	255
 14744  001AC4  6E13               	movwf	command@CRC^0,c
 14745  001AC6  0E50               	movlw	80
 14746  001AC8  ECB2  F027         	call	_command
 14747                           
 14748                           ;diskio.c: 363: proceed();
 14749  001ACC  ECF6  F02D         	call	_proceed	;wreg free
 14750  001AD0                     
 14751                           ;diskio.c: 367: buff = response();
 14752  001AD0  ECF0  F02D         	call	_response	;wreg free
 14753  001AD4  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14754                           
 14755                           ;diskio.c: 368: }while(buff!=0X00);
 14756  001AD6  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14757  001AD8  B4D8               	btfsc	status,2,c
 14758  001ADA  D08E               	goto	u12490
 14759  001ADC  D7F9               	goto	l11022
 14760  001ADE                     l11028:
 14761                           
 14762                           ;diskio.c: 373: else;diskio.c: 374: {;diskio.c: 376: count2 = 0;
 14763  001ADE  0E00               	movlw	0
 14764  001AE0  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14765  001AE2  0E00               	movlw	0
 14766  001AE4  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14767                           
 14768                           ;diskio.c: 378: dummy_clocks(1);
 14769  001AE6  0E01               	movlw	1
 14770  001AE8  ECCE  F02A         	call	_dummy_clocks
 14771                           
 14772                           ;diskio.c: 379: command(0X69, 0X00000000, 0XFF);
 14773  001AEC  0E00               	movlw	0
 14774  001AEE  6E0F               	movwf	command@arg^0,c
 14775  001AF0  0E00               	movlw	0
 14776  001AF2  6E10               	movwf	(command@arg+1)^0,c
 14777  001AF4  0E00               	movlw	0
 14778  001AF6  6E11               	movwf	(command@arg+2)^0,c
 14779  001AF8  0E00               	movlw	0
 14780  001AFA  6E12               	movwf	(command@arg+3)^0,c
 14781  001AFC  0EFF               	movlw	255
 14782  001AFE  6E13               	movwf	command@CRC^0,c
 14783  001B00  0E69               	movlw	105
 14784  001B02  ECB2  F027         	call	_command
 14785                           
 14786                           ;diskio.c: 380: proceed();
 14787  001B06  ECF6  F02D         	call	_proceed	;wreg free
 14788  001B0A                     l11038:
 14789                           
 14790                           ;diskio.c: 382: buff = response();
 14791  001B0A  ECF0  F02D         	call	_response	;wreg free
 14792  001B0E  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14793                           
 14794                           ;diskio.c: 383: count2++;
 14795  001B10  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14796  001B12  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14797                           
 14798                           ;diskio.c: 384: if(buff==0x00)
 14799  001B14  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14800  001B16  A4D8               	btfss	status,2,c
 14801  001B18  D00B               	goto	l11048
 14802                           
 14803                           ;diskio.c: 385: {;diskio.c: 386: posicao_cursor_lcd(1,0);
 14804  001B1A  0E00               	movlw	0
 14805  001B1C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 14806  001B1E  0E01               	movlw	1
 14807  001B20  EC55  F027         	call	_posicao_cursor_lcd
 14808                           
 14809                           ;diskio.c: 387: escreve_frase_ram_lcd("SD VER. 1");
 14810  001B24  0E24               	movlw	low STR_3
 14811  001B26  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 14812  001B28  0E62               	movlw	high STR_3
 14813  001B2A  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 14814  001B2C  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
 14815  001B30                     l11048:
 14816                           
 14817                           ;diskio.c: 388: };diskio.c: 389: _delay((unsigned long)((1)*(48000000/4000.0)));
 14818  001B30  0E10               	movlw	16
 14819  001B32  6E1D               	movwf	??_sdc_disk_initialize^0,c
 14820  001B34  0E94               	movlw	148
 14821  001B36                     u16737:
 14822  001B36  2EE8               	decfsz	wreg,f,c
 14823  001B38  D7FE               	bra	u16737
 14824  001B3A  2E1D               	decfsz	??_sdc_disk_initialize^0,f,c
 14825  001B3C  D7FC               	bra	u16737
 14826  001B3E  D000               	nop2	
 14827                           
 14828                           ;diskio.c: 390: }while(buff!=0X00 && count2<10000);
 14829  001B40  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14830  001B42  B4D8               	btfsc	status,2,c
 14831  001B44  D008               	goto	u12440
 14832  001B46  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14833  001B48  D7E0               	goto	l11038
 14834  001B4A  0E10               	movlw	16
 14835  001B4C  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14836  001B4E  0E27               	movlw	39
 14837  001B50  5828               	subwfb	(sdc_disk_initialize@count2+1)^0,w,c
 14838  001B52  A0D8               	btfss	status,0,c
 14839  001B54  D7DA               	goto	l11038
 14840  001B56                     u12440:
 14841                           
 14842                           ;diskio.c: 393: if(count2==10)
 14843  001B56  0E0A               	movlw	10
 14844  001B58  1827               	xorwf	sdc_disk_initialize@count2^0,w,c
 14845  001B5A  1028               	iorwf	(sdc_disk_initialize@count2+1)^0,w,c
 14846  001B5C  A4D8               	btfss	status,2,c
 14847  001B5E  D034               	goto	u12480
 14848                           
 14849                           ;diskio.c: 394: {;diskio.c: 395: count2 = 0;
 14850  001B60  0E00               	movlw	0
 14851  001B62  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14852  001B64  0E00               	movlw	0
 14853  001B66  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14854                           
 14855                           ;diskio.c: 396: dummy_clocks(10);
 14856  001B68  0E0A               	movlw	10
 14857  001B6A  ECCE  F02A         	call	_dummy_clocks
 14858                           
 14859                           ;diskio.c: 397: command(0X41, 0X00000000, 0XFF);
 14860  001B6E  0E00               	movlw	0
 14861  001B70  6E0F               	movwf	command@arg^0,c
 14862  001B72  0E00               	movlw	0
 14863  001B74  6E10               	movwf	(command@arg+1)^0,c
 14864  001B76  0E00               	movlw	0
 14865  001B78  6E11               	movwf	(command@arg+2)^0,c
 14866  001B7A  0E00               	movlw	0
 14867  001B7C  6E12               	movwf	(command@arg+3)^0,c
 14868  001B7E  0EFF               	movlw	255
 14869  001B80  6E13               	movwf	command@CRC^0,c
 14870  001B82  0E41               	movlw	65
 14871  001B84  ECB2  F027         	call	_command
 14872                           
 14873                           ;diskio.c: 398: proceed();
 14874  001B88  ECF6  F02D         	call	_proceed	;wreg free
 14875  001B8C                     l11064:
 14876                           
 14877                           ;diskio.c: 400: buff = response();
 14878  001B8C  ECF0  F02D         	call	_response	;wreg free
 14879  001B90  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14880                           
 14881                           ;diskio.c: 401: count2++;
 14882  001B92  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14883  001B94  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14884                           
 14885                           ;diskio.c: 402: if(buff==0x00)
 14886  001B96  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14887  001B98  A4D8               	btfss	status,2,c
 14888  001B9A  D00B               	goto	l11074
 14889                           
 14890                           ;diskio.c: 403: {;diskio.c: 404: posicao_cursor_lcd(1,0);
 14891  001B9C  0E00               	movlw	0
 14892  001B9E  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 14893  001BA0  0E01               	movlw	1
 14894  001BA2  EC55  F027         	call	_posicao_cursor_lcd
 14895                           
 14896                           ;diskio.c: 405: escreve_frase_ram_lcd("MMC Ver. 3");
 14897  001BA6  0EE6               	movlw	low STR_4
 14898  001BA8  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 14899  001BAA  0E61               	movlw	high STR_4
 14900  001BAC  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 14901  001BAE  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
 14902  001BB2                     l11074:
 14903                           
 14904                           ;diskio.c: 406: };diskio.c: 408: }while(buff!=0X00 && count2<10000);
 14905  001BB2  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14906  001BB4  B4D8               	btfsc	status,2,c
 14907  001BB6  D008               	goto	u12480
 14908  001BB8  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14909  001BBA  D7E8               	goto	l11064
 14910  001BBC  0E10               	movlw	16
 14911  001BBE  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14912  001BC0  0E27               	movlw	39
 14913  001BC2  5828               	subwfb	(sdc_disk_initialize@count2+1)^0,w,c
 14914  001BC4  A0D8               	btfss	status,0,c
 14915  001BC6  D7E2               	goto	l11064
 14916  001BC8                     u12480:
 14917                           
 14918                           ;diskio.c: 409: };diskio.c: 412: dummy_clocks(10);
 14919  001BC8  0E0A               	movlw	10
 14920  001BCA  ECCE  F02A         	call	_dummy_clocks
 14921                           
 14922                           ;diskio.c: 413: command(0X50,0X00000200,0XFF);
 14923  001BCE  0E00               	movlw	0
 14924  001BD0  6E0F               	movwf	command@arg^0,c
 14925  001BD2  0E02               	movlw	2
 14926  001BD4  6E10               	movwf	(command@arg+1)^0,c
 14927  001BD6  0E00               	movlw	0
 14928  001BD8  6E11               	movwf	(command@arg+2)^0,c
 14929  001BDA  0E00               	movlw	0
 14930  001BDC  6E12               	movwf	(command@arg+3)^0,c
 14931  001BDE  0EFF               	movlw	255
 14932  001BE0  6E13               	movwf	command@CRC^0,c
 14933  001BE2  0E50               	movlw	80
 14934  001BE4  ECB2  F027         	call	_command
 14935                           
 14936                           ;diskio.c: 414: proceed();
 14937  001BE8  ECF6  F02D         	call	_proceed	;wreg free
 14938  001BEC                     
 14939                           ;diskio.c: 418: buff = response();
 14940  001BEC  ECF0  F02D         	call	_response	;wreg free
 14941  001BF0  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14942                           
 14943                           ;diskio.c: 419: }while(buff!=0X00);
 14944  001BF2  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14945  001BF4  A4D8               	btfss	status,2,c
 14946  001BF6  D7FA               	goto	l11082
 14947  001BF8                     u12490:
 14948                           
 14949                           ;diskio.c: 421: };diskio.c: 425: return stat;
 14950  001BF8  5020               	movf	sdc_disk_initialize@stat^0,w,c
 14951  001BFA  0012               	return		;funcret
 14952  001BFC                     __end_of_sdc_disk_initialize:
 14953                           	callstack 0
 14954                           
 14955 ;; *************** function _sdc_reset *****************
 14956 ;; Defined at:
 14957 ;;		line 238 in file "bibliotecas/diskio.c"
 14958 ;; Parameters:    Size  Location     Type
 14959 ;;		None
 14960 ;; Auto vars:     Size  Location     Type
 14961 ;;  teste          10    0        unsigned char [10]
 14962 ;;  count           2   25[COMRAM] int 
 14963 ;;  count_nosd      2   23[COMRAM] int 
 14964 ;;  i               2    0        int 
 14965 ;;  receive         2    0        unsigned int 
 14966 ;;  buff            1   27[COMRAM] unsigned char 
 14967 ;;  stat            1    0        unsigned char 
 14968 ;; Return value:  Size  Location     Type
 14969 ;;                  1    wreg      void 
 14970 ;; Registers used:
 14971 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14972 ;; Tracked objects:
 14973 ;;		On entry : 0/0
 14974 ;;		On exit  : 0/0
 14975 ;;		Unchanged: 0/0
 14976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14977 ;;      Params:         0       0       0       0       0       0       0       0       0
 14978 ;;      Locals:         7       0       0       0       0       0       0       0       0
 14979 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14980 ;;      Totals:         7       0       0       0       0       0       0       0       0
 14981 ;;Total ram usage:        7 bytes
 14982 ;; Hardware stack levels used:    1
 14983 ;; Hardware stack levels required when called:    5
 14984 ;; This function calls:
 14985 ;;		_command
 14986 ;;		_escreve_frase_ram_lcd
 14987 ;;		_posicao_cursor_lcd
 14988 ;;		_proceed
 14989 ;;		_response
 14990 ;; This function is called by:
 14991 ;;		_sdc_disk_initialize
 14992 ;; This function uses a non-reentrant model
 14993 ;;
 14994                           
 14995                           	psect	text82
 14996  0047C0                     __ptext82:
 14997                           	callstack 0
 14998  0047C0                     _sdc_reset:
 14999                           	callstack 17
 15000                           
 15001                           ;incstack = 0
 15002  0047C0  0E00               	movlw	0
 15003  0047C2  6E1B               	movwf	(sdc_reset@count+1)^0,c
 15004  0047C4  0E00               	movlw	0
 15005  0047C6  6E1A               	movwf	sdc_reset@count^0,c
 15006  0047C8  0E00               	movlw	0
 15007  0047CA  6E19               	movwf	(sdc_reset@count_nosd+1)^0,c
 15008  0047CC  0E00               	movlw	0
 15009  0047CE  6E18               	movwf	sdc_reset@count_nosd^0,c
 15010  0047D0                     l10770:
 15011                           
 15012                           ;diskio.c: 248: command(0x40, 0X00000000, 0X95);
 15013  0047D0  0E00               	movlw	0
 15014  0047D2  6E0F               	movwf	command@arg^0,c
 15015  0047D4  0E00               	movlw	0
 15016  0047D6  6E10               	movwf	(command@arg+1)^0,c
 15017  0047D8  0E00               	movlw	0
 15018  0047DA  6E11               	movwf	(command@arg+2)^0,c
 15019  0047DC  0E00               	movlw	0
 15020  0047DE  6E12               	movwf	(command@arg+3)^0,c
 15021  0047E0  0E95               	movlw	149
 15022  0047E2  6E13               	movwf	command@CRC^0,c
 15023  0047E4  0E40               	movlw	64
 15024  0047E6  ECB2  F027         	call	_command
 15025                           
 15026                           ;diskio.c: 249: proceed();
 15027  0047EA  ECF6  F02D         	call	_proceed	;wreg free
 15028  0047EE                     l10774:
 15029                           
 15030                           ;diskio.c: 251: buff = response();
 15031  0047EE  ECF0  F02D         	call	_response	;wreg free
 15032  0047F2  6E1C               	movwf	sdc_reset@buff^0,c
 15033                           
 15034                           ;diskio.c: 252: count++;
 15035  0047F4  4A1A               	infsnz	sdc_reset@count^0,f,c
 15036  0047F6  2A1B               	incf	(sdc_reset@count+1)^0,f,c
 15037                           
 15038                           ;diskio.c: 253: }while(buff!=0X01 && count<10);
 15039  0047F8  041C               	decf	sdc_reset@buff^0,w,c
 15040  0047FA  B4D8               	btfsc	status,2,c
 15041  0047FC  D008               	goto	u12020
 15042  0047FE  BE1B               	btfsc	(sdc_reset@count+1)^0,7,c
 15043  004800  D7F6               	goto	l10774
 15044  004802  501B               	movf	(sdc_reset@count+1)^0,w,c
 15045  004804  E104               	bnz	u12020
 15046  004806  0E0A               	movlw	10
 15047  004808  5C1A               	subwf	sdc_reset@count^0,w,c
 15048  00480A  A0D8               	btfss	status,0,c
 15049  00480C  D7F0               	goto	l10774
 15050  00480E                     u12020:
 15051                           
 15052                           ;diskio.c: 254: count = 0;
 15053  00480E  0E00               	movlw	0
 15054  004810  6E1B               	movwf	(sdc_reset@count+1)^0,c
 15055  004812  0E00               	movlw	0
 15056  004814  6E1A               	movwf	sdc_reset@count^0,c
 15057                           
 15058                           ;diskio.c: 255: if(buff != 0x01)
 15059  004816  041C               	decf	sdc_reset@buff^0,w,c
 15060  004818  B4D8               	btfsc	status,2,c
 15061  00481A  D016               	goto	l10792
 15062                           
 15063                           ;diskio.c: 256: {;diskio.c: 257: posicao_cursor_lcd(1,0);
 15064  00481C  0E00               	movlw	0
 15065  00481E  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 15066  004820  0E01               	movlw	1
 15067  004822  EC55  F027         	call	_posicao_cursor_lcd
 15068                           
 15069                           ;diskio.c: 258: escreve_frase_ram_lcd("Sem Cartao");
 15070  004826  0EF1               	movlw	low STR_1
 15071  004828  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 15072  00482A  0E61               	movlw	high STR_1
 15073  00482C  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 15074  00482E  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
 15075                           
 15076                           ;diskio.c: 259: posicao_cursor_lcd(2,0);
 15077  004832  0E00               	movlw	0
 15078  004834  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 15079  004836  0E02               	movlw	2
 15080  004838  EC55  F027         	call	_posicao_cursor_lcd
 15081                           
 15082                           ;diskio.c: 260: escreve_frase_ram_lcd("Insira o Cartao");
 15083  00483C  0E92               	movlw	low STR_2
 15084  00483E  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 15085  004840  0E61               	movlw	high STR_2
 15086  004842  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 15087  004844  ECB7  F028         	call	_escreve_frase_ram_lcd	;wreg free
 15088  004848                     l10792:
 15089                           
 15090                           ;diskio.c: 261: };diskio.c: 263: }while(buff!=0X01);
 15091  004848  041C               	decf	sdc_reset@buff^0,w,c
 15092  00484A  B4D8               	btfsc	status,2,c
 15093  00484C  0012               	return	
 15094  00484E  D7C0               	goto	l10770
 15095  004850                     __end_of_sdc_reset:
 15096                           	callstack 0
 15097                           
 15098 ;; *************** function _posicao_cursor_lcd *****************
 15099 ;; Defined at:
 15100 ;;		line 271 in file "bibliotecas/display_lcd.c"
 15101 ;; Parameters:    Size  Location     Type
 15102 ;;  linha           1    wreg     unsigned char 
 15103 ;;  coluna          1   12[COMRAM] unsigned char 
 15104 ;; Auto vars:     Size  Location     Type
 15105 ;;  linha           1   13[COMRAM] unsigned char 
 15106 ;;  endereco        1   14[COMRAM] unsigned char 
 15107 ;; Return value:  Size  Location     Type
 15108 ;;                  1    wreg      void 
 15109 ;; Registers used:
 15110 ;;		wreg, status,2, status,0, cstack
 15111 ;; Tracked objects:
 15112 ;;		On entry : 0/0
 15113 ;;		On exit  : 0/0
 15114 ;;		Unchanged: 0/0
 15115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15116 ;;      Params:         1       0       0       0       0       0       0       0       0
 15117 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15118 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15119 ;;      Totals:         3       0       0       0       0       0       0       0       0
 15120 ;;Total ram usage:        3 bytes
 15121 ;; Hardware stack levels used:    1
 15122 ;; Hardware stack levels required when called:    4
 15123 ;; This function calls:
 15124 ;;		_endereco_cursor_lcd
 15125 ;; This function is called by:
 15126 ;;		_sdc_reset
 15127 ;;		_sdc_disk_initialize
 15128 ;;		_mostra_dados_display
 15129 ;;		_mensagem_inicial
 15130 ;;		_troca_de_tela
 15131 ;; This function uses a non-reentrant model
 15132 ;;
 15133                           
 15134                           	psect	text83
 15135  004EAA                     __ptext83:
 15136                           	callstack 0
 15137  004EAA                     _posicao_cursor_lcd:
 15138                           	callstack 25
 15139                           
 15140                           ;incstack = 0
 15141                           ;posicao_cursor_lcd@linha stored from wreg
 15142  004EAA  6E0E               	movwf	posicao_cursor_lcd@linha^0,c
 15143                           
 15144                           ;display_lcd.c: 275: if(coluna <= 0x10U)
 15145  004EAC  0E11               	movlw	17
 15146  004EAE  600D               	cpfslt	posicao_cursor_lcd@coluna^0,c
 15147  004EB0  0012               	return	
 15148  004EB2  D01B               	goto	l10634
 15149  004EB4                     l232:
 15150                           
 15151                           ;display_lcd.c: 282: endereco = 0x00U + coluna;
 15152  004EB4  C00D  F00F         	movff	posicao_cursor_lcd@coluna,posicao_cursor_lcd@endereco
 15153                           
 15154                           ;display_lcd.c: 283: endereco_cursor_lcd(endereco);
 15155  004EB8  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15156  004EBA  EC56  F026         	call	_endereco_cursor_lcd
 15157                           
 15158                           ;display_lcd.c: 284: break;
 15159  004EBE  D022               	goto	l10636
 15160  004EC0                     l10618:
 15161                           
 15162                           ;display_lcd.c: 287: endereco = 0x40U + coluna;
 15163  004EC0  500D               	movf	posicao_cursor_lcd@coluna^0,w,c
 15164  004EC2  0F40               	addlw	64
 15165  004EC4  6E0F               	movwf	posicao_cursor_lcd@endereco^0,c
 15166                           
 15167                           ;display_lcd.c: 288: endereco_cursor_lcd(endereco);
 15168  004EC6  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15169  004EC8  EC56  F026         	call	_endereco_cursor_lcd
 15170                           
 15171                           ;display_lcd.c: 289: break;
 15172  004ECC  D01B               	goto	l10636
 15173  004ECE                     l10622:
 15174                           
 15175                           ;display_lcd.c: 292: endereco = 0x14U + coluna;
 15176  004ECE  500D               	movf	posicao_cursor_lcd@coluna^0,w,c
 15177  004ED0  0F14               	addlw	20
 15178  004ED2  6E0F               	movwf	posicao_cursor_lcd@endereco^0,c
 15179                           
 15180                           ;display_lcd.c: 293: endereco_cursor_lcd(endereco);
 15181  004ED4  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15182  004ED6  EC56  F026         	call	_endereco_cursor_lcd
 15183                           
 15184                           ;display_lcd.c: 294: break;
 15185  004EDA  D014               	goto	l10636
 15186  004EDC                     l10626:
 15187                           
 15188                           ;display_lcd.c: 297: endereco = 0x54U + coluna;
 15189  004EDC  500D               	movf	posicao_cursor_lcd@coluna^0,w,c
 15190  004EDE  0F54               	addlw	84
 15191  004EE0  6E0F               	movwf	posicao_cursor_lcd@endereco^0,c
 15192                           
 15193                           ;display_lcd.c: 298: endereco_cursor_lcd(endereco);
 15194  004EE2  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15195  004EE4  EC56  F026         	call	_endereco_cursor_lcd
 15196                           
 15197                           ;display_lcd.c: 303: break;
 15198                           
 15199                           ;display_lcd.c: 299: break;
 15200  004EE8  D00D               	goto	l10636
 15201  004EEA                     l10634:
 15202  004EEA  500E               	movf	posicao_cursor_lcd@linha^0,w,c
 15203                           
 15204                           ; Switch size 1, requested type "simple"
 15205                           ; Number of cases is 4, Range of values is 1 to 4
 15206                           ; switch strategies available:
 15207                           ; Name         Instructions Cycles
 15208                           ; simple_byte           13     7 (average)
 15209                           ;	Chosen strategy is simple_byte
 15210  004EEC  0A01               	xorlw	1	; case 1
 15211  004EEE  B4D8               	btfsc	status,2,c
 15212  004EF0  D7E1               	goto	l232
 15213  004EF2  0A03               	xorlw	3	; case 2
 15214  004EF4  B4D8               	btfsc	status,2,c
 15215  004EF6  D7E4               	goto	l10618
 15216  004EF8  0A01               	xorlw	1	; case 3
 15217  004EFA  B4D8               	btfsc	status,2,c
 15218  004EFC  D7E8               	goto	l10622
 15219  004EFE  0A07               	xorlw	7	; case 4
 15220  004F00  B4D8               	btfsc	status,2,c
 15221  004F02  D7EC               	goto	l10626
 15222  004F04                     l10636:
 15223                           
 15224                           ;display_lcd.c: 306: coluna++;
 15225  004F04  2A0D               	incf	posicao_cursor_lcd@coluna^0,f,c
 15226                           
 15227                           ;display_lcd.c: 307: }
 15228  004F06  0012               	return	
 15229  004F08                     __end_of_posicao_cursor_lcd:
 15230                           	callstack 0
 15231                           
 15232 ;; *************** function _endereco_cursor_lcd *****************
 15233 ;; Defined at:
 15234 ;;		line 218 in file "bibliotecas/display_lcd.c"
 15235 ;; Parameters:    Size  Location     Type
 15236 ;;  endereco        1    wreg     unsigned char 
 15237 ;; Auto vars:     Size  Location     Type
 15238 ;;  endereco        1   11[COMRAM] unsigned char 
 15239 ;; Return value:  Size  Location     Type
 15240 ;;                  1    wreg      void 
 15241 ;; Registers used:
 15242 ;;		wreg, status,2, status,0, cstack
 15243 ;; Tracked objects:
 15244 ;;		On entry : 0/0
 15245 ;;		On exit  : 0/0
 15246 ;;		Unchanged: 0/0
 15247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15248 ;;      Params:         0       0       0       0       0       0       0       0       0
 15249 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15250 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15251 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15252 ;;Total ram usage:        1 bytes
 15253 ;; Hardware stack levels used:    1
 15254 ;; Hardware stack levels required when called:    3
 15255 ;; This function calls:
 15256 ;;		_delay
 15257 ;; This function is called by:
 15258 ;;		_posicao_cursor_lcd
 15259 ;; This function uses a non-reentrant model
 15260 ;;
 15261                           
 15262                           	psect	text84
 15263  004CAC                     __ptext84:
 15264                           	callstack 0
 15265  004CAC                     _endereco_cursor_lcd:
 15266                           	callstack 25
 15267                           
 15268                           ;incstack = 0
 15269                           ;endereco_cursor_lcd@endereco stored from wreg
 15270  004CAC  6E0C               	movwf	endereco_cursor_lcd@endereco^0,c
 15271                           
 15272                           ;display_lcd.c: 221: PORTDbits.RD2 = 0;
 15273  004CAE  9483               	bcf	131,2,c	;volatile
 15274                           
 15275                           ;display_lcd.c: 222: PORTDbits.RD1 = 0;
 15276  004CB0  9283               	bcf	131,1,c	;volatile
 15277                           
 15278                           ;display_lcd.c: 223: PORTDbits.RD0 = 0;
 15279  004CB2  9083               	bcf	131,0,c	;volatile
 15280                           
 15281                           ;display_lcd.c: 226: PORTDbits.RD7 = 1;
 15282  004CB4  8E83               	bsf	131,7,c	;volatile
 15283                           
 15284                           ;display_lcd.c: 227: if(endereco&0b00010000){PORTDbits.RD4=1;}
 15285  004CB6  A80C               	btfss	endereco_cursor_lcd@endereco^0,4,c
 15286  004CB8  D002               	goto	l213
 15287  004CBA  8883               	bsf	131,4,c	;volatile
 15288  004CBC  D001               	goto	l10472
 15289  004CBE                     l213:
 15290                           
 15291                           ;display_lcd.c: 228: else {PORTDbits.RD4=0;}
 15292  004CBE  9883               	bcf	131,4,c	;volatile
 15293  004CC0                     l10472:
 15294                           
 15295                           ;display_lcd.c: 229: if(endereco&0b00100000){PORTDbits.RD5=1;}
 15296  004CC0  AA0C               	btfss	endereco_cursor_lcd@endereco^0,5,c
 15297  004CC2  D002               	goto	l215
 15298  004CC4  8A83               	bsf	131,5,c	;volatile
 15299  004CC6  D001               	goto	l10476
 15300  004CC8                     l215:
 15301                           
 15302                           ;display_lcd.c: 230: else {PORTDbits.RD5=0;}
 15303  004CC8  9A83               	bcf	131,5,c	;volatile
 15304  004CCA                     l10476:
 15305                           
 15306                           ;display_lcd.c: 231: if(endereco&0b01000000){PORTDbits.RD6=1;}
 15307  004CCA  AC0C               	btfss	endereco_cursor_lcd@endereco^0,6,c
 15308  004CCC  D002               	goto	l217
 15309  004CCE  8C83               	bsf	131,6,c	;volatile
 15310  004CD0  D001               	goto	l218
 15311  004CD2                     l217:
 15312                           
 15313                           ;display_lcd.c: 232: else {PORTDbits.RD6=0;}
 15314  004CD2  9C83               	bcf	131,6,c	;volatile
 15315  004CD4                     l218:
 15316                           
 15317                           ;display_lcd.c: 235: PORTDbits.RD0 = 1;
 15318  004CD4  8083               	bsf	131,0,c	;volatile
 15319                           
 15320                           ;display_lcd.c: 236: delay();
 15321  004CD6  EC5E  F02D         	call	_delay	;wreg free
 15322                           
 15323                           ;display_lcd.c: 237: PORTDbits.RD0 = 0;
 15324  004CDA  9083               	bcf	131,0,c	;volatile
 15325                           
 15326                           ;display_lcd.c: 238: delay();
 15327  004CDC  EC5E  F02D         	call	_delay	;wreg free
 15328                           
 15329                           ;display_lcd.c: 241: if(endereco&0b00000001){PORTDbits.RD4=1;}
 15330  004CE0  A00C               	btfss	endereco_cursor_lcd@endereco^0,0,c
 15331  004CE2  D002               	goto	l219
 15332  004CE4  8883               	bsf	131,4,c	;volatile
 15333  004CE6  D001               	goto	l220
 15334  004CE8                     l219:
 15335                           
 15336                           ;display_lcd.c: 242: else {PORTDbits.RD4=0;}
 15337  004CE8  9883               	bcf	131,4,c	;volatile
 15338  004CEA                     l220:
 15339                           
 15340                           ;display_lcd.c: 243: if(endereco&0b00000010){PORTDbits.RD5=1;}
 15341  004CEA  A20C               	btfss	endereco_cursor_lcd@endereco^0,1,c
 15342  004CEC  D002               	goto	l221
 15343  004CEE  8A83               	bsf	131,5,c	;volatile
 15344  004CF0  D001               	goto	l222
 15345  004CF2                     l221:
 15346                           
 15347                           ;display_lcd.c: 244: else {PORTDbits.RD5=0;}
 15348  004CF2  9A83               	bcf	131,5,c	;volatile
 15349  004CF4                     l222:
 15350                           
 15351                           ;display_lcd.c: 245: if(endereco&0b00000100){PORTDbits.RD6=1;}
 15352  004CF4  A40C               	btfss	endereco_cursor_lcd@endereco^0,2,c
 15353  004CF6  D002               	goto	l223
 15354  004CF8  8C83               	bsf	131,6,c	;volatile
 15355  004CFA  D001               	goto	l224
 15356  004CFC                     l223:
 15357                           
 15358                           ;display_lcd.c: 246: else {PORTDbits.RD6=0;}
 15359  004CFC  9C83               	bcf	131,6,c	;volatile
 15360  004CFE                     l224:
 15361                           
 15362                           ;display_lcd.c: 247: if(endereco&0b00001000){PORTDbits.RD7=1;}
 15363  004CFE  A60C               	btfss	endereco_cursor_lcd@endereco^0,3,c
 15364  004D00  D002               	goto	l225
 15365  004D02  8E83               	bsf	131,7,c	;volatile
 15366  004D04  D001               	goto	l226
 15367  004D06                     l225:
 15368                           
 15369                           ;display_lcd.c: 248: else {PORTDbits.RD7=0;}
 15370  004D06  9E83               	bcf	131,7,c	;volatile
 15371  004D08                     l226:
 15372                           
 15373                           ;display_lcd.c: 251: PORTDbits.RD0 = 1;
 15374  004D08  8083               	bsf	131,0,c	;volatile
 15375                           
 15376                           ;display_lcd.c: 252: delay();
 15377  004D0A  EC5E  F02D         	call	_delay	;wreg free
 15378                           
 15379                           ;display_lcd.c: 253: PORTDbits.RD0 = 0;
 15380  004D0E  9083               	bcf	131,0,c	;volatile
 15381                           
 15382                           ;display_lcd.c: 254: delay();
 15383  004D10  EC5E  F02D         	call	_delay	;wreg free
 15384  004D14  0012               	return		;funcret
 15385  004D16                     __end_of_endereco_cursor_lcd:
 15386                           	callstack 0
 15387                           
 15388 ;; *************** function _escreve_frase_ram_lcd *****************
 15389 ;; Defined at:
 15390 ;;		line 445 in file "bibliotecas/display_lcd.c"
 15391 ;; Parameters:    Size  Location     Type
 15392 ;;  buffer          2   12[COMRAM] PTR unsigned char 
 15393 ;;		 -> STR_33(8), STR_32(9), STR_31(4), STR_30(4), 
 15394 ;;		 -> STR_29(5), STR_28(2), STR_27(5), STR_26(7), 
 15395 ;;		 -> STR_25(7), STR_24(2), STR_23(5), STR_22(7), 
 15396 ;;		 -> STR_19(11), mensagem_inicial@msg_dois(17), mensagem_inicial@msg_linha_um(17), STR_10(9), 
 15397 ;;		 -> STR_9(10), STR_8(10), STR_7(14), STR_6(21), 
 15398 ;;		 -> STR_5(15), rawLongitude(13), rawLatitude(12), escreve_inteiro_lcd@texto(7), 
 15399 ;;		 -> STR_4(11), STR_3(10), STR_2(16), STR_1(11), 
 15400 ;; Auto vars:     Size  Location     Type
 15401 ;;		None
 15402 ;; Return value:  Size  Location     Type
 15403 ;;                  1    wreg      void 
 15404 ;; Registers used:
 15405 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15406 ;; Tracked objects:
 15407 ;;		On entry : 0/0
 15408 ;;		On exit  : 0/0
 15409 ;;		Unchanged: 0/0
 15410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15411 ;;      Params:         2       0       0       0       0       0       0       0       0
 15412 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15413 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15414 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15415 ;;Total ram usage:        2 bytes
 15416 ;; Hardware stack levels used:    1
 15417 ;; Hardware stack levels required when called:    4
 15418 ;; This function calls:
 15419 ;;		_escreve_caractere_lcd
 15420 ;; This function is called by:
 15421 ;;		_sdc_reset
 15422 ;;		_sdc_disk_initialize
 15423 ;;		_escreve_inteiro_lcd
 15424 ;;		_mostra_dados_display
 15425 ;;		_mensagem_inicial
 15426 ;;		_troca_de_tela
 15427 ;; This function uses a non-reentrant model
 15428 ;;
 15429                           
 15430                           	psect	text85
 15431  00516E                     __ptext85:
 15432                           	callstack 0
 15433  00516E                     _escreve_frase_ram_lcd:
 15434                           	callstack 25
 15435                           
 15436                           ;display_lcd.c: 447: while(*buffer)
 15437                           
 15438                           ;incstack = 0
 15439  00516E  D014               	goto	l10646
 15440  005170                     l10642:
 15441                           
 15442                           ;display_lcd.c: 448: {;display_lcd.c: 449: escreve_caractere_lcd(*buffer);
 15443  005170  C00D  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 15444  005174  C00E  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 15445  005178  6AF8               	clrf	tblptru,c
 15446  00517A  0E07               	movlw	(high __ramtop+-1)
 15447  00517C  64F7               	cpfsgt	tblptrh,c
 15448  00517E  D003               	bra	u11797
 15449  005180  0008               	tblrd		*
 15450  005182  50F5               	movf	tablat,w,c
 15451  005184  D005               	bra	u11790
 15452  005186                     u11797:
 15453  005186  CFF6 FFE1          	movff	tblptrl,fsr1l
 15454  00518A  CFF7 FFE2          	movff	tblptrh,fsr1h
 15455  00518E  50E7               	movf	indf1,w,c
 15456  005190                     u11790:
 15457  005190  ECE6  F025         	call	_escreve_caractere_lcd
 15458                           
 15459                           ;display_lcd.c: 450: buffer++;
 15460  005194  4A0D               	infsnz	escreve_frase_ram_lcd@buffer^0,f,c
 15461  005196  2A0E               	incf	(escreve_frase_ram_lcd@buffer+1)^0,f,c
 15462  005198                     l10646:
 15463  005198  C00D  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 15464  00519C  C00E  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 15465  0051A0  6AF8               	clrf	tblptru,c
 15466  0051A2  0E07               	movlw	(high __ramtop+-1)
 15467  0051A4  64F7               	cpfsgt	tblptrh,c
 15468  0051A6  D003               	bra	u11807
 15469  0051A8  0008               	tblrd		*
 15470  0051AA  50F5               	movf	tablat,w,c
 15471  0051AC  D005               	bra	u11800
 15472  0051AE                     u11807:
 15473  0051AE  CFF6 FFE1          	movff	tblptrl,fsr1l
 15474  0051B2  CFF7 FFE2          	movff	tblptrh,fsr1h
 15475  0051B6  50E7               	movf	indf1,w,c
 15476  0051B8                     u11800:
 15477  0051B8  0900               	iorlw	0
 15478  0051BA  B4D8               	btfsc	status,2,c
 15479  0051BC  0012               	return	
 15480  0051BE  D7D8               	goto	l10642
 15481  0051C0                     __end_of_escreve_frase_ram_lcd:
 15482                           	callstack 0
 15483                           
 15484 ;; *************** function _escreve_caractere_lcd *****************
 15485 ;; Defined at:
 15486 ;;		line 323 in file "bibliotecas/display_lcd.c"
 15487 ;; Parameters:    Size  Location     Type
 15488 ;;  data            1    wreg     unsigned char 
 15489 ;; Auto vars:     Size  Location     Type
 15490 ;;  data            1   11[COMRAM] unsigned char 
 15491 ;; Return value:  Size  Location     Type
 15492 ;;                  1    wreg      void 
 15493 ;; Registers used:
 15494 ;;		wreg, status,2, status,0, cstack
 15495 ;; Tracked objects:
 15496 ;;		On entry : 0/0
 15497 ;;		On exit  : 0/0
 15498 ;;		Unchanged: 0/0
 15499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15500 ;;      Params:         0       0       0       0       0       0       0       0       0
 15501 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15502 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15503 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15504 ;;Total ram usage:        1 bytes
 15505 ;; Hardware stack levels used:    1
 15506 ;; Hardware stack levels required when called:    3
 15507 ;; This function calls:
 15508 ;;		_delay
 15509 ;; This function is called by:
 15510 ;;		_escreve_frase_ram_lcd
 15511 ;;		_troca_de_tela
 15512 ;; This function uses a non-reentrant model
 15513 ;;
 15514                           
 15515                           	psect	text86
 15516  004BCC                     __ptext86:
 15517                           	callstack 0
 15518  004BCC                     _escreve_caractere_lcd:
 15519                           	callstack 25
 15520                           
 15521                           ;incstack = 0
 15522                           ;escreve_caractere_lcd@data stored from wreg
 15523  004BCC  6E0C               	movwf	escreve_caractere_lcd@data^0,c
 15524                           
 15525                           ;display_lcd.c: 326: PORTDbits.RD2 = 0;
 15526  004BCE  9483               	bcf	131,2,c	;volatile
 15527                           
 15528                           ;display_lcd.c: 327: PORTDbits.RD1 = 1;
 15529  004BD0  8283               	bsf	131,1,c	;volatile
 15530                           
 15531                           ;display_lcd.c: 328: PORTDbits.RD0 = 0;
 15532  004BD2  9083               	bcf	131,0,c	;volatile
 15533                           
 15534                           ;display_lcd.c: 331: if(data&0b00010000){PORTDbits.RD4=1;}
 15535  004BD4  A80C               	btfss	escreve_caractere_lcd@data^0,4,c
 15536  004BD6  D002               	goto	l242
 15537  004BD8  8883               	bsf	131,4,c	;volatile
 15538  004BDA  D001               	goto	l10504
 15539  004BDC                     l242:
 15540                           
 15541                           ;display_lcd.c: 332: else {PORTDbits.RD4=0;}
 15542  004BDC  9883               	bcf	131,4,c	;volatile
 15543  004BDE                     l10504:
 15544                           
 15545                           ;display_lcd.c: 333: if(data&0b00100000){PORTDbits.RD5=1;}
 15546  004BDE  AA0C               	btfss	escreve_caractere_lcd@data^0,5,c
 15547  004BE0  D002               	goto	l244
 15548  004BE2  8A83               	bsf	131,5,c	;volatile
 15549  004BE4  D001               	goto	l10508
 15550  004BE6                     l244:
 15551                           
 15552                           ;display_lcd.c: 334: else {PORTDbits.RD5=0;}
 15553  004BE6  9A83               	bcf	131,5,c	;volatile
 15554  004BE8                     l10508:
 15555                           
 15556                           ;display_lcd.c: 335: if(data&0b01000000){PORTDbits.RD6=1;}
 15557  004BE8  AC0C               	btfss	escreve_caractere_lcd@data^0,6,c
 15558  004BEA  D002               	goto	l246
 15559  004BEC  8C83               	bsf	131,6,c	;volatile
 15560  004BEE  D001               	goto	l10512
 15561  004BF0                     l246:
 15562                           
 15563                           ;display_lcd.c: 336: else {PORTDbits.RD6=0;}
 15564  004BF0  9C83               	bcf	131,6,c	;volatile
 15565  004BF2                     l10512:
 15566                           
 15567                           ;display_lcd.c: 337: if(data&0b10000000){PORTDbits.RD7=1;}
 15568  004BF2  AE0C               	btfss	escreve_caractere_lcd@data^0,7,c
 15569  004BF4  D002               	goto	l248
 15570  004BF6  8E83               	bsf	131,7,c	;volatile
 15571  004BF8  D001               	goto	l249
 15572  004BFA                     l248:
 15573                           
 15574                           ;display_lcd.c: 338: else {PORTDbits.RD7=0;}
 15575  004BFA  9E83               	bcf	131,7,c	;volatile
 15576  004BFC                     l249:
 15577                           
 15578                           ;display_lcd.c: 341: PORTDbits.RD0 = 1;
 15579  004BFC  8083               	bsf	131,0,c	;volatile
 15580                           
 15581                           ;display_lcd.c: 342: delay();
 15582  004BFE  EC5E  F02D         	call	_delay	;wreg free
 15583                           
 15584                           ;display_lcd.c: 343: PORTDbits.RD0 = 0;
 15585  004C02  9083               	bcf	131,0,c	;volatile
 15586                           
 15587                           ;display_lcd.c: 344: delay();
 15588  004C04  EC5E  F02D         	call	_delay	;wreg free
 15589                           
 15590                           ;display_lcd.c: 348: if(data&0b00000001){PORTDbits.RD4=1;}
 15591  004C08  A00C               	btfss	escreve_caractere_lcd@data^0,0,c
 15592  004C0A  D002               	goto	l250
 15593  004C0C  8883               	bsf	131,4,c	;volatile
 15594  004C0E  D001               	goto	l251
 15595  004C10                     l250:
 15596                           
 15597                           ;display_lcd.c: 349: else {PORTDbits.RD4=0;}
 15598  004C10  9883               	bcf	131,4,c	;volatile
 15599  004C12                     l251:
 15600                           
 15601                           ;display_lcd.c: 350: if(data&0b00000010){PORTDbits.RD5=1;}
 15602  004C12  A20C               	btfss	escreve_caractere_lcd@data^0,1,c
 15603  004C14  D002               	goto	l252
 15604  004C16  8A83               	bsf	131,5,c	;volatile
 15605  004C18  D001               	goto	l253
 15606  004C1A                     l252:
 15607                           
 15608                           ;display_lcd.c: 351: else {PORTDbits.RD5=0;}
 15609  004C1A  9A83               	bcf	131,5,c	;volatile
 15610  004C1C                     l253:
 15611                           
 15612                           ;display_lcd.c: 352: if(data&0b00000100){PORTDbits.RD6=1;}
 15613  004C1C  A40C               	btfss	escreve_caractere_lcd@data^0,2,c
 15614  004C1E  D002               	goto	l254
 15615  004C20  8C83               	bsf	131,6,c	;volatile
 15616  004C22  D001               	goto	l255
 15617  004C24                     l254:
 15618                           
 15619                           ;display_lcd.c: 353: else {PORTDbits.RD6=0;}
 15620  004C24  9C83               	bcf	131,6,c	;volatile
 15621  004C26                     l255:
 15622                           
 15623                           ;display_lcd.c: 354: if(data&0b00001000){PORTDbits.RD7=1;}
 15624  004C26  A60C               	btfss	escreve_caractere_lcd@data^0,3,c
 15625  004C28  D002               	goto	l256
 15626  004C2A  8E83               	bsf	131,7,c	;volatile
 15627  004C2C  D001               	goto	l257
 15628  004C2E                     l256:
 15629                           
 15630                           ;display_lcd.c: 355: else {PORTDbits.RD7=0;}
 15631  004C2E  9E83               	bcf	131,7,c	;volatile
 15632  004C30                     l257:
 15633                           
 15634                           ;display_lcd.c: 358: PORTDbits.RD0 = 1;
 15635  004C30  8083               	bsf	131,0,c	;volatile
 15636                           
 15637                           ;display_lcd.c: 359: delay();
 15638  004C32  EC5E  F02D         	call	_delay	;wreg free
 15639                           
 15640                           ;display_lcd.c: 360: PORTDbits.RD0 = 0;
 15641  004C36  9083               	bcf	131,0,c	;volatile
 15642                           
 15643                           ;display_lcd.c: 361: delay();
 15644  004C38  EC5E  F02D         	call	_delay	;wreg free
 15645  004C3C  0012               	return		;funcret
 15646  004C3E                     __end_of_escreve_caractere_lcd:
 15647                           	callstack 0
 15648                           
 15649 ;; *************** function _delay *****************
 15650 ;; Defined at:
 15651 ;;		line 45 in file "bibliotecas/display_lcd.c"
 15652 ;; Parameters:    Size  Location     Type
 15653 ;;		None
 15654 ;; Auto vars:     Size  Location     Type
 15655 ;;  contador_int    1   10[COMRAM] unsigned char 
 15656 ;;  contador_ext    1    9[COMRAM] unsigned char 
 15657 ;; Return value:  Size  Location     Type
 15658 ;;                  1    wreg      void 
 15659 ;; Registers used:
 15660 ;;		wreg, status,2, status,0
 15661 ;; Tracked objects:
 15662 ;;		On entry : 0/0
 15663 ;;		On exit  : 0/0
 15664 ;;		Unchanged: 0/0
 15665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15666 ;;      Params:         0       0       0       0       0       0       0       0       0
 15667 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15668 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15669 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15670 ;;Total ram usage:        2 bytes
 15671 ;; Hardware stack levels used:    1
 15672 ;; Hardware stack levels required when called:    2
 15673 ;; This function calls:
 15674 ;;		Nothing
 15675 ;; This function is called by:
 15676 ;;		_init_lcd
 15677 ;;		_escreve_cmd_lcd
 15678 ;;		_endereco_cursor_lcd
 15679 ;;		_escreve_caractere_lcd
 15680 ;; This function uses a non-reentrant model
 15681 ;;
 15682                           
 15683                           	psect	text87
 15684  005ABC                     __ptext87:
 15685                           	callstack 0
 15686  005ABC                     _delay:
 15687                           	callstack 25
 15688                           
 15689                           ;display_lcd.c: 47: unsigned char contador_ext, contador_int;;display_lcd.c: 49: for(con
      +                          tador_ext = 0; contador_ext<100; contador_ext++)
 15690                           
 15691                           ;incstack = 0
 15692  005ABC  0E00               	movlw	0
 15693  005ABE  6E0A               	movwf	delay@contador_ext^0,c
 15694  005AC0                     l181:
 15695                           
 15696                           ;display_lcd.c: 50: {;display_lcd.c: 51: __nop();
 15697  005AC0  F000               	nop	
 15698                           
 15699                           ;display_lcd.c: 52: for(contador_int = 0; contador_int<50; contador_int++)
 15700  005AC2  0E00               	movlw	0
 15701  005AC4  6E0B               	movwf	delay@contador_int^0,c
 15702  005AC6                     l183:
 15703                           
 15704                           ;display_lcd.c: 53: {;display_lcd.c: 54: __nop();
 15705  005AC6  F000               	nop	
 15706  005AC8  2A0B               	incf	delay@contador_int^0,f,c
 15707  005ACA  0E31               	movlw	49
 15708  005ACC  640B               	cpfsgt	delay@contador_int^0,c
 15709  005ACE  D7FB               	goto	l183
 15710  005AD0  2A0A               	incf	delay@contador_ext^0,f,c
 15711  005AD2  0E63               	movlw	99
 15712  005AD4  640A               	cpfsgt	delay@contador_ext^0,c
 15713  005AD6  D7F4               	goto	l181
 15714  005AD8  0012               	return	
 15715  005ADA                     __end_of_delay:
 15716                           	callstack 0
 15717                           
 15718 ;; *************** function _check_fs *****************
 15719 ;; Defined at:
 15720 ;;		line 624 in file "bibliotecas/tff.c"
 15721 ;; Parameters:    Size  Location     Type
 15722 ;;  sect            4   52[COMRAM] unsigned long 
 15723 ;; Auto vars:     Size  Location     Type
 15724 ;;  fs              2   58[COMRAM] PTR struct _FATFS
 15725 ;;		 -> NULL(0), fs(544), 
 15726 ;; Return value:  Size  Location     Type
 15727 ;;                  1    wreg      unsigned char 
 15728 ;; Registers used:
 15729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15730 ;; Tracked objects:
 15731 ;;		On entry : 3F/0
 15732 ;;		On exit  : 0/0
 15733 ;;		Unchanged: 0/0
 15734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15735 ;;      Params:         4       0       0       0       0       0       0       0       0
 15736 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15737 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15738 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15739 ;;Total ram usage:        8 bytes
 15740 ;; Hardware stack levels used:    1
 15741 ;; Hardware stack levels required when called:    7
 15742 ;; This function calls:
 15743 ;;		_disk_read
 15744 ;;		_memcmp
 15745 ;; This function is called by:
 15746 ;;		_auto_mount
 15747 ;; This function uses a non-reentrant model
 15748 ;;
 15749                           
 15750                           	psect	text88
 15751  004960                     __ptext88:
 15752                           	callstack 0
 15753  004960                     _check_fs:
 15754                           	callstack 17
 15755                           
 15756                           ; BSR set to: 0
 15757                           ;tff.c: 628: FATFS *fs = FatFs;
 15758                           
 15759                           ;incstack = 0
 15760  004960  C04D  F03B         	movff	_FatFs,check_fs@fs
 15761  004964  C04E  F03C         	movff	_FatFs+1,check_fs@fs+1
 15762                           
 15763                           ; BSR set to: 0
 15764                           ;tff.c: 630: if (disk_read(0, fs->win, sect, 1) != RES_OK)
 15765  004968  0E20               	movlw	32
 15766  00496A  243B               	addwf	check_fs@fs^0,w,c
 15767  00496C  6E29               	movwf	disk_read@buff^0,c
 15768  00496E  0E00               	movlw	0
 15769  004970  203C               	addwfc	(check_fs@fs+1)^0,w,c
 15770  004972  6E2A               	movwf	(disk_read@buff+1)^0,c
 15771  004974  C035  F02B         	movff	check_fs@sect,disk_read@sector
 15772  004978  C036  F02C         	movff	check_fs@sect+1,disk_read@sector+1
 15773  00497C  C037  F02D         	movff	check_fs@sect+2,disk_read@sector+2
 15774  004980  C038  F02E         	movff	check_fs@sect+3,disk_read@sector+3
 15775  004984  0E01               	movlw	1
 15776  004986  6E2F               	movwf	disk_read@count^0,c
 15777  004988  0E00               	movlw	0
 15778  00498A  EC1F  F026         	call	_disk_read
 15779  00498E  0900               	iorlw	0
 15780  004990  B4D8               	btfsc	status,2,c
 15781  004992  D002               	goto	l11510
 15782  004994                     u13200:
 15783  004994                     l11506:
 15784                           
 15785                           ;tff.c: 631: return 2;
 15786  004994  0E02               	movlw	2
 15787  004996  0012               	return	
 15788  004998                     l11510:
 15789                           
 15790                           ;tff.c: 632: if ((WORD)(*(WORD*)(BYTE*)(&fs->win[510])) != 0xAA55)
 15791  004998  EE22 F01E          	lfsr	2,542
 15792  00499C  503B               	movf	check_fs@fs^0,w,c
 15793  00499E  26D9               	addwf	fsr2l,f,c
 15794  0049A0  503C               	movf	(check_fs@fs+1)^0,w,c
 15795  0049A2  22DA               	addwfc	fsr2h,f,c
 15796  0049A4  0E55               	movlw	85
 15797  0049A6  18DE               	xorwf	postinc2,w,c
 15798  0049A8  E1F5               	bnz	l11506
 15799  0049AA  0EAA               	movlw	170
 15800  0049AC  18DE               	xorwf	postinc2,w,c
 15801  0049AE  A4D8               	btfss	status,2,c
 15802  0049B0  D7F1               	goto	u13200
 15803                           
 15804                           ;tff.c: 635: if (!memcmp(&fs->win[54], "FAT", 3))
 15805  0049B2  0E56               	movlw	86
 15806  0049B4  243B               	addwf	check_fs@fs^0,w,c
 15807  0049B6  6E0A               	movwf	memcmp@s1^0,c
 15808  0049B8  0E00               	movlw	0
 15809  0049BA  203C               	addwfc	(check_fs@fs+1)^0,w,c
 15810  0049BC  6E0B               	movwf	(memcmp@s1+1)^0,c
 15811  0049BE  0E73               	movlw	low STR_17
 15812  0049C0  6E0C               	movwf	memcmp@s2^0,c
 15813  0049C2  0E62               	movlw	high STR_17
 15814  0049C4  6E0D               	movwf	(memcmp@s2+1)^0,c
 15815  0049C6  0E00               	movlw	0
 15816  0049C8  6E0F               	movwf	(memcmp@n+1)^0,c
 15817  0049CA  0E03               	movlw	3
 15818  0049CC  6E0E               	movwf	memcmp@n^0,c
 15819  0049CE  EC97  F023         	call	_memcmp	;wreg free
 15820  0049D2  500A               	movf	?_memcmp^0,w,c
 15821  0049D4  100B               	iorwf	(?_memcmp+1)^0,w,c
 15822  0049D6  A4D8               	btfss	status,2,c
 15823  0049D8  D002               	goto	l11522
 15824                           
 15825                           ;tff.c: 636: return 0;
 15826  0049DA  0E00               	movlw	0
 15827  0049DC  0012               	return	
 15828  0049DE                     l11522:
 15829                           
 15830                           ;tff.c: 641: return 1;
 15831  0049DE  0E01               	movlw	1
 15832  0049E0  0012               	return		;funcret
 15833  0049E2                     __end_of_check_fs:
 15834                           	callstack 0
 15835                           
 15836 ;; *************** function _memcmp *****************
 15837 ;; Defined at:
 15838 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcmp.c"
 15839 ;; Parameters:    Size  Location     Type
 15840 ;;  s1              2    9[COMRAM] PTR const void 
 15841 ;;		 -> fs.win(512), NULL(0), fs(544), 
 15842 ;;  s2              2   11[COMRAM] PTR const void 
 15843 ;;		 -> f_opendir@fn(12), f_open@fn(12), STR_17(4), 
 15844 ;;  n               2   13[COMRAM] unsigned int 
 15845 ;; Auto vars:     Size  Location     Type
 15846 ;;		None
 15847 ;; Return value:  Size  Location     Type
 15848 ;;                  2    9[COMRAM] int 
 15849 ;; Registers used:
 15850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15851 ;; Tracked objects:
 15852 ;;		On entry : 0/0
 15853 ;;		On exit  : 0/0
 15854 ;;		Unchanged: 0/0
 15855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15856 ;;      Params:         6       0       0       0       0       0       0       0       0
 15857 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15858 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15859 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15860 ;;Total ram usage:        8 bytes
 15861 ;; Hardware stack levels used:    1
 15862 ;; Hardware stack levels required when called:    2
 15863 ;; This function calls:
 15864 ;;		Nothing
 15865 ;; This function is called by:
 15866 ;;		_trace_path
 15867 ;;		_check_fs
 15868 ;; This function uses a non-reentrant model
 15869 ;;
 15870                           
 15871                           	psect	text89
 15872  00472E                     __ptext89:
 15873                           	callstack 0
 15874  00472E                     _memcmp:
 15875                           	callstack 22
 15876                           
 15877                           ;incstack = 0
 15878  00472E  D03B               	goto	l11144
 15879  004730                     l11136:
 15880  004730  C00A  FFD9         	movff	memcmp@s1,fsr2l
 15881  004734  C00B  FFDA         	movff	memcmp@s1+1,fsr2h
 15882  004738  50DF               	movf	indf2,w,c
 15883  00473A  6E10               	movwf	??_memcmp^0,c
 15884  00473C  C00C  FFF6         	movff	memcmp@s2,tblptrl
 15885  004740  C00D  FFF7         	movff	memcmp@s2+1,tblptrh
 15886  004744  6AF8               	clrf	tblptru,c
 15887  004746  0E07               	movlw	(high __ramtop+-1)
 15888  004748  64F7               	cpfsgt	tblptrh,c
 15889  00474A  D003               	bra	u12517
 15890  00474C  0008               	tblrd		*
 15891  00474E  50F5               	movf	tablat,w,c
 15892  004750  D005               	bra	u12510
 15893  004752                     u12517:
 15894  004752  CFF6 FFE1          	movff	tblptrl,fsr1l
 15895  004756  CFF7 FFE2          	movff	tblptrh,fsr1h
 15896  00475A  50E7               	movf	indf1,w,c
 15897  00475C                     u12510:
 15898  00475C  1810               	xorwf	??_memcmp^0,w,c
 15899  00475E  B4D8               	btfsc	status,2,c
 15900  004760  D01E               	goto	l11142
 15901  004762  C00A  FFD9         	movff	memcmp@s1,fsr2l
 15902  004766  C00B  FFDA         	movff	memcmp@s1+1,fsr2h
 15903  00476A  50DF               	movf	indf2,w,c
 15904  00476C  6E10               	movwf	??_memcmp^0,c
 15905  00476E  C00C  FFF6         	movff	memcmp@s2,tblptrl
 15906  004772  C00D  FFF7         	movff	memcmp@s2+1,tblptrh
 15907  004776  6AF8               	clrf	tblptru,c
 15908  004778  0E07               	movlw	(high __ramtop+-1)
 15909  00477A  64F7               	cpfsgt	tblptrh,c
 15910  00477C  D003               	bra	u12537
 15911  00477E  0008               	tblrd		*
 15912  004780  50F5               	movf	tablat,w,c
 15913  004782  D005               	bra	u12530
 15914  004784                     u12537:
 15915  004784  CFF6 FFE1          	movff	tblptrl,fsr1l
 15916  004788  CFF7 FFE2          	movff	tblptrh,fsr1h
 15917  00478C  50E7               	movf	indf1,w,c
 15918  00478E                     u12530:
 15919  00478E  6E11               	movwf	(??_memcmp+1)^0,c
 15920  004790  5011               	movf	(??_memcmp+1)^0,w,c
 15921  004792  5C10               	subwf	??_memcmp^0,w,c
 15922  004794  6E0A               	movwf	?_memcmp^0,c
 15923  004796  6A0B               	clrf	(?_memcmp+1)^0,c
 15924  004798  A0D8               	btfss	status,0,c
 15925  00479A  060B               	decf	(?_memcmp+1)^0,f,c
 15926  00479C  0012               	return	
 15927  00479E                     l11142:
 15928  00479E  4A0A               	infsnz	memcmp@s1^0,f,c
 15929  0047A0  2A0B               	incf	(memcmp@s1+1)^0,f,c
 15930  0047A2  4A0C               	infsnz	memcmp@s2^0,f,c
 15931  0047A4  2A0D               	incf	(memcmp@s2+1)^0,f,c
 15932  0047A6                     l11144:
 15933  0047A6  060E               	decf	memcmp@n^0,f,c
 15934  0047A8  A0D8               	btfss	status,0,c
 15935  0047AA  060F               	decf	(memcmp@n+1)^0,f,c
 15936  0047AC  280E               	incf	memcmp@n^0,w,c
 15937  0047AE  E1C0               	bnz	l11136
 15938  0047B0  280F               	incf	(memcmp@n+1)^0,w,c
 15939  0047B2  A4D8               	btfss	status,2,c
 15940  0047B4  D7BD               	goto	l11136
 15941  0047B6  0E00               	movlw	0
 15942  0047B8  6E0B               	movwf	(?_memcmp+1)^0,c
 15943  0047BA  0E00               	movlw	0
 15944  0047BC  6E0A               	movwf	?_memcmp^0,c
 15945  0047BE  0012               	return		;funcret
 15946  0047C0                     __end_of_memcmp:
 15947                           	callstack 0
 15948                           
 15949 ;; *************** function ___lmul *****************
 15950 ;; Defined at:
 15951 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul32.c"
 15952 ;; Parameters:    Size  Location     Type
 15953 ;;  multiplier      4    9[COMRAM] unsigned long 
 15954 ;;  multiplicand    4   13[COMRAM] unsigned long 
 15955 ;; Auto vars:     Size  Location     Type
 15956 ;;  product         4   17[COMRAM] unsigned long 
 15957 ;; Return value:  Size  Location     Type
 15958 ;;                  4    9[COMRAM] unsigned long 
 15959 ;; Registers used:
 15960 ;;		wreg, status,2, status,0
 15961 ;; Tracked objects:
 15962 ;;		On entry : 0/0
 15963 ;;		On exit  : 0/0
 15964 ;;		Unchanged: 0/0
 15965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15966 ;;      Params:         8       0       0       0       0       0       0       0       0
 15967 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15968 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15969 ;;      Totals:        12       0       0       0       0       0       0       0       0
 15970 ;;Total ram usage:       12 bytes
 15971 ;; Hardware stack levels used:    1
 15972 ;; Hardware stack levels required when called:    2
 15973 ;; This function calls:
 15974 ;;		Nothing
 15975 ;; This function is called by:
 15976 ;;		_clust2sect
 15977 ;;		_auto_mount
 15978 ;;		_atol
 15979 ;; This function uses a non-reentrant model
 15980 ;;
 15981                           
 15982                           	psect	text90
 15983  0050C6                     __ptext90:
 15984                           	callstack 0
 15985  0050C6                     ___lmul:
 15986                           	callstack 20
 15987                           
 15988                           ;incstack = 0
 15989  0050C6  0E00               	movlw	0
 15990  0050C8  6E12               	movwf	___lmul@product^0,c
 15991  0050CA  0E00               	movlw	0
 15992  0050CC  6E13               	movwf	(___lmul@product+1)^0,c
 15993  0050CE  0E00               	movlw	0
 15994  0050D0  6E14               	movwf	(___lmul@product+2)^0,c
 15995  0050D2  0E00               	movlw	0
 15996  0050D4  6E15               	movwf	(___lmul@product+3)^0,c
 15997  0050D6                     l10760:
 15998  0050D6  A00A               	btfss	___lmul@multiplier^0,0,c
 15999  0050D8  D008               	goto	l10764
 16000  0050DA  500E               	movf	___lmul@multiplicand^0,w,c
 16001  0050DC  2612               	addwf	___lmul@product^0,f,c
 16002  0050DE  500F               	movf	(___lmul@multiplicand+1)^0,w,c
 16003  0050E0  2213               	addwfc	(___lmul@product+1)^0,f,c
 16004  0050E2  5010               	movf	(___lmul@multiplicand+2)^0,w,c
 16005  0050E4  2214               	addwfc	(___lmul@product+2)^0,f,c
 16006  0050E6  5011               	movf	(___lmul@multiplicand+3)^0,w,c
 16007  0050E8  2215               	addwfc	(___lmul@product+3)^0,f,c
 16008  0050EA                     l10764:
 16009  0050EA  90D8               	bcf	status,0,c
 16010  0050EC  360E               	rlcf	___lmul@multiplicand^0,f,c
 16011  0050EE  360F               	rlcf	(___lmul@multiplicand+1)^0,f,c
 16012  0050F0  3610               	rlcf	(___lmul@multiplicand+2)^0,f,c
 16013  0050F2  3611               	rlcf	(___lmul@multiplicand+3)^0,f,c
 16014  0050F4  90D8               	bcf	status,0,c
 16015  0050F6  320D               	rrcf	(___lmul@multiplier+3)^0,f,c
 16016  0050F8  320C               	rrcf	(___lmul@multiplier+2)^0,f,c
 16017  0050FA  320B               	rrcf	(___lmul@multiplier+1)^0,f,c
 16018  0050FC  320A               	rrcf	___lmul@multiplier^0,f,c
 16019  0050FE  500A               	movf	___lmul@multiplier^0,w,c
 16020  005100  100B               	iorwf	(___lmul@multiplier+1)^0,w,c
 16021  005102  100C               	iorwf	(___lmul@multiplier+2)^0,w,c
 16022  005104  100D               	iorwf	(___lmul@multiplier+3)^0,w,c
 16023  005106  A4D8               	btfss	status,2,c
 16024  005108  D7E6               	goto	l10760
 16025  00510A  C012  F00A         	movff	___lmul@product,?___lmul
 16026  00510E  C013  F00B         	movff	___lmul@product+1,?___lmul+1
 16027  005112  C014  F00C         	movff	___lmul@product+2,?___lmul+2
 16028  005116  C015  F00D         	movff	___lmul@product+3,?___lmul+3
 16029  00511A  0012               	return		;funcret
 16030  00511C                     __end_of___lmul:
 16031                           	callstack 0
 16032                           
 16033 ;; *************** function _f_mount *****************
 16034 ;; Defined at:
 16035 ;;		line 794 in file "bibliotecas/tff.c"
 16036 ;; Parameters:    Size  Location     Type
 16037 ;;  drv             1    wreg     unsigned char 
 16038 ;;  fs              2    9[COMRAM] PTR struct _FATFS
 16039 ;;		 -> fs(544), 
 16040 ;; Auto vars:     Size  Location     Type
 16041 ;;  drv             1   11[COMRAM] unsigned char 
 16042 ;; Return value:  Size  Location     Type
 16043 ;;                  1    wreg      enum E3231
 16044 ;; Registers used:
 16045 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16046 ;; Tracked objects:
 16047 ;;		On entry : 0/1
 16048 ;;		On exit  : 0/0
 16049 ;;		Unchanged: 0/0
 16050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16051 ;;      Params:         2       0       0       0       0       0       0       0       0
 16052 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16053 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16054 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16055 ;;Total ram usage:        3 bytes
 16056 ;; Hardware stack levels used:    1
 16057 ;; Hardware stack levels required when called:    2
 16058 ;; This function calls:
 16059 ;;		Nothing
 16060 ;; This function is called by:
 16061 ;;		_escrita_sdcard
 16062 ;; This function uses a non-reentrant model
 16063 ;;
 16064                           
 16065                           	psect	text91
 16066  00533E                     __ptext91:
 16067                           	callstack 0
 16068  00533E                     _f_mount:
 16069                           	callstack 24
 16070                           
 16071                           ;incstack = 0
 16072                           ;f_mount@drv stored from wreg
 16073  00533E  6E0C               	movwf	f_mount@drv^0,c
 16074                           
 16075                           ;tff.c: 799: if (drv) return FR_INVALID_DRIVE;
 16076  005340  500C               	movf	f_mount@drv^0,w,c
 16077  005342  B4D8               	btfsc	status,2,c
 16078  005344  D002               	goto	l12222
 16079  005346  0E05               	movlw	5
 16080  005348  0012               	return	
 16081  00534A                     l12222:
 16082                           
 16083                           ;tff.c: 801: if (FatFs) FatFs->fs_type = 0;
 16084  00534A  504D               	movf	_FatFs^0,w,c
 16085  00534C  104E               	iorwf	(_FatFs+1)^0,w,c
 16086  00534E  B4D8               	btfsc	status,2,c
 16087  005350  D008               	goto	l12226
 16088  005352  EE20 F01C          	lfsr	2,28
 16089  005356  504D               	movf	_FatFs^0,w,c
 16090  005358  26D9               	addwf	fsr2l,f,c
 16091  00535A  504E               	movf	(_FatFs+1)^0,w,c
 16092  00535C  22DA               	addwfc	fsr2h,f,c
 16093  00535E  0E00               	movlw	0
 16094  005360  6EDF               	movwf	indf2,c
 16095  005362                     l12226:
 16096                           
 16097                           ;tff.c: 803: FatFs = fs;
 16098  005362  C00A  F04D         	movff	f_mount@fs,_FatFs
 16099  005366  C00B  F04E         	movff	f_mount@fs+1,_FatFs+1
 16100                           
 16101                           ;tff.c: 804: if (fs) fs->fs_type = 0;
 16102  00536A  500A               	movf	f_mount@fs^0,w,c
 16103  00536C  100B               	iorwf	(f_mount@fs+1)^0,w,c
 16104  00536E  B4D8               	btfsc	status,2,c
 16105  005370  D008               	goto	l12232
 16106  005372  EE20 F01C          	lfsr	2,28
 16107  005376  500A               	movf	f_mount@fs^0,w,c
 16108  005378  26D9               	addwf	fsr2l,f,c
 16109  00537A  500B               	movf	(f_mount@fs+1)^0,w,c
 16110  00537C  22DA               	addwfc	fsr2h,f,c
 16111  00537E  0E00               	movlw	0
 16112  005380  6EDF               	movwf	indf2,c
 16113  005382                     l12232:
 16114                           
 16115                           ;tff.c: 806: return FR_OK;
 16116  005382  0E00               	movlw	0
 16117  005384  0012               	return		;funcret
 16118  005386                     __end_of_f_mount:
 16119                           	callstack 0
 16120                           
 16121 ;; *************** function _f_lseek *****************
 16122 ;; Defined at:
 16123 ;;		line 1140 in file "bibliotecas/tff.c"
 16124 ;; Parameters:    Size  Location     Type
 16125 ;;  fp              2   38[BANK0 ] PTR struct _FIL
 16126 ;;		 -> fil(28), 
 16127 ;;  ofs             4   40[BANK0 ] unsigned long 
 16128 ;; Auto vars:     Size  Location     Type
 16129 ;;  csize           4   65[BANK0 ] unsigned long 
 16130 ;;  ifptr           4   61[BANK0 ] unsigned long 
 16131 ;;  clust           2   69[BANK0 ] unsigned short 
 16132 ;;  res             1   60[BANK0 ] enum E155
 16133 ;; Return value:  Size  Location     Type
 16134 ;;                  1    wreg      enum E3231
 16135 ;; Registers used:
 16136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16137 ;; Tracked objects:
 16138 ;;		On entry : 3F/0
 16139 ;;		On exit  : 3F/0
 16140 ;;		Unchanged: 0/0
 16141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16142 ;;      Params:         0       6       0       0       0       0       0       0       0
 16143 ;;      Locals:         0      11       0       0       0       0       0       0       0
 16144 ;;      Temps:          0      16       0       0       0       0       0       0       0
 16145 ;;      Totals:         0      33       0       0       0       0       0       0       0
 16146 ;;Total ram usage:       33 bytes
 16147 ;; Hardware stack levels used:    1
 16148 ;; Hardware stack levels required when called:   10
 16149 ;; This function calls:
 16150 ;;		___lldiv
 16151 ;;		_create_chain
 16152 ;;		_get_cluster
 16153 ;;		_validate
 16154 ;; This function is called by:
 16155 ;;		_escrita_sdcard
 16156 ;; This function uses a non-reentrant model
 16157 ;;
 16158                           
 16159                           	psect	text92
 16160  000AF2                     __ptext92:
 16161                           	callstack 0
 16162  000AF2                     _f_lseek:
 16163                           	callstack 16
 16164                           
 16165                           ; BSR set to: 0
 16166                           ;tff.c: 1145: FRESULT res;;tff.c: 1146: CLUST clust;;tff.c: 1147: DWORD csize, ifptr;;tf
      +                          f.c: 1150: res = validate(fp->fs, fp->id);
 16167                           
 16168                           ;incstack = 0
 16169  000AF2  EE20 F004          	lfsr	2,4
 16170  000AF6  5186               	movf	f_lseek@fp& (0+255),w,b
 16171  000AF8  26D9               	addwf	fsr2l,f,c
 16172  000AFA  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16173  000AFC  22DA               	addwfc	fsr2h,f,c
 16174  000AFE  CFDE F010          	movff	postinc2,validate@fs
 16175  000B02  CFDD F011          	movff	postdec2,validate@fs+1
 16176  000B06  C086  FFD9         	movff	f_lseek@fp,fsr2l
 16177  000B0A  C087  FFDA         	movff	f_lseek@fp+1,fsr2h
 16178  000B0E  CFDE F012          	movff	postinc2,validate@id
 16179  000B12  CFDD F013          	movff	postdec2,validate@id+1
 16180  000B16  ECC3  F029         	call	_validate	;wreg free
 16181  000B1A  0100               	movlb	0	; () banked
 16182  000B1C  6F9C               	movwf	f_lseek@res& (0+255),b
 16183                           
 16184                           ; BSR set to: 0
 16185                           ;tff.c: 1151: if (res != FR_OK) return res;
 16186  000B1E  519C               	movf	f_lseek@res& (0+255),w,b
 16187  000B20  A4D8               	btfss	status,2,c
 16188  000B22  0012               	return	
 16189                           
 16190                           ; BSR set to: 0
 16191                           ;tff.c: 1152: if (fp->flag & 0x80) return FR_RW_ERROR;
 16192  000B24  EE20 F002          	lfsr	2,2
 16193  000B28  5186               	movf	f_lseek@fp& (0+255),w,b
 16194  000B2A  26D9               	addwf	fsr2l,f,c
 16195  000B2C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16196  000B2E  22DA               	addwfc	fsr2h,f,c
 16197  000B30  BEDF               	btfsc	indf2,7,c
 16198  000B32  0012               	return	
 16199                           
 16200                           ; BSR set to: 0
 16201                           ;tff.c: 1153: if (ofs > fp->fsize;tff.c: 1155: && !(fp->flag & 0x02);tff.c: 1157: ) ofs 
      +                          = fp->fsize;
 16202  000B34  EE20 F00A          	lfsr	2,10
 16203  000B38  5186               	movf	f_lseek@fp& (0+255),w,b
 16204  000B3A  26D9               	addwf	fsr2l,f,c
 16205  000B3C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16206  000B3E  22DA               	addwfc	fsr2h,f,c
 16207  000B40  5188               	movf	f_lseek@ofs& (0+255),w,b
 16208  000B42  5CDE               	subwf	postinc2,w,c
 16209  000B44  5189               	movf	(f_lseek@ofs+1)& (0+255),w,b
 16210  000B46  58DE               	subwfb	postinc2,w,c
 16211  000B48  518A               	movf	(f_lseek@ofs+2)& (0+255),w,b
 16212  000B4A  58DE               	subwfb	postinc2,w,c
 16213  000B4C  518B               	movf	(f_lseek@ofs+3)& (0+255),w,b
 16214  000B4E  58DE               	subwfb	postinc2,w,c
 16215  000B50  B0D8               	btfsc	status,0,c
 16216  000B52  D016               	goto	l1188
 16217                           
 16218                           ; BSR set to: 0
 16219  000B54  EE20 F002          	lfsr	2,2
 16220  000B58  5186               	movf	f_lseek@fp& (0+255),w,b
 16221  000B5A  26D9               	addwf	fsr2l,f,c
 16222  000B5C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16223  000B5E  22DA               	addwfc	fsr2h,f,c
 16224  000B60  B2DF               	btfsc	indf2,1,c
 16225  000B62  D00E               	goto	l1188
 16226                           
 16227                           ; BSR set to: 0
 16228  000B64  EE20 F00A          	lfsr	2,10
 16229  000B68  5186               	movf	f_lseek@fp& (0+255),w,b
 16230  000B6A  26D9               	addwf	fsr2l,f,c
 16231  000B6C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16232  000B6E  22DA               	addwfc	fsr2h,f,c
 16233  000B70  CFDE F088          	movff	postinc2,f_lseek@ofs
 16234  000B74  CFDE F089          	movff	postinc2,f_lseek@ofs+1
 16235  000B78  CFDE F08A          	movff	postinc2,f_lseek@ofs+2
 16236  000B7C  CFDE F08B          	movff	postinc2,f_lseek@ofs+3
 16237  000B80                     l1188:
 16238                           
 16239                           ; BSR set to: 0
 16240                           ;tff.c: 1159: ifptr = fp->fptr;
 16241  000B80  EE20 F006          	lfsr	2,6
 16242  000B84  5186               	movf	f_lseek@fp& (0+255),w,b
 16243  000B86  26D9               	addwf	fsr2l,f,c
 16244  000B88  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16245  000B8A  22DA               	addwfc	fsr2h,f,c
 16246  000B8C  CFDE F09D          	movff	postinc2,f_lseek@ifptr
 16247  000B90  CFDE F09E          	movff	postinc2,f_lseek@ifptr+1
 16248  000B94  CFDE F09F          	movff	postinc2,f_lseek@ifptr+2
 16249  000B98  CFDE F0A0          	movff	postinc2,f_lseek@ifptr+3
 16250                           
 16251                           ;tff.c: 1160: fp->fptr = 0; fp->csect = 255;
 16252  000B9C  EE20 F006          	lfsr	2,6
 16253  000BA0  5186               	movf	f_lseek@fp& (0+255),w,b
 16254  000BA2  26D9               	addwf	fsr2l,f,c
 16255  000BA4  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16256  000BA6  22DA               	addwfc	fsr2h,f,c
 16257  000BA8  6ADE               	clrf	postinc2,c
 16258  000BAA  6ADE               	clrf	postinc2,c
 16259  000BAC  6ADE               	clrf	postinc2,c
 16260  000BAE  6ADD               	clrf	postdec2,c
 16261  000BB0  EE20 F003          	lfsr	2,3
 16262  000BB4  5186               	movf	f_lseek@fp& (0+255),w,b
 16263  000BB6  26D9               	addwf	fsr2l,f,c
 16264  000BB8  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16265  000BBA  22DA               	addwfc	fsr2h,f,c
 16266  000BBC  0EFF               	movlw	255
 16267  000BBE  6EDF               	movwf	indf2,c
 16268                           
 16269                           ; BSR set to: 0
 16270                           ;tff.c: 1161: if (ofs > 0) {
 16271  000BC0  5188               	movf	f_lseek@ofs& (0+255),w,b
 16272  000BC2  1189               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
 16273  000BC4  118A               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
 16274  000BC6  118B               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
 16275  000BC8  B4D8               	btfsc	status,2,c
 16276  000BCA  D19D               	goto	l12462
 16277                           
 16278                           ; BSR set to: 0
 16279                           ;tff.c: 1162: csize = (DWORD)fp->fs->csize * 512U;
 16280  000BCC  EE20 F004          	lfsr	2,4
 16281  000BD0  5186               	movf	f_lseek@fp& (0+255),w,b
 16282  000BD2  26D9               	addwf	fsr2l,f,c
 16283  000BD4  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16284  000BD6  22DA               	addwfc	fsr2h,f,c
 16285  000BD8  EE10 F01D          	lfsr	1,29
 16286  000BDC  50DE               	movf	postinc2,w,c
 16287  000BDE  26E1               	addwf	fsr1l,f,c
 16288  000BE0  50DD               	movf	postdec2,w,c
 16289  000BE2  22E2               	addwfc	fsr1h,f,c
 16290  000BE4  50E7               	movf	indf1,w,c
 16291  000BE6  6F8C               	movwf	??_f_lseek& (0+255),b
 16292  000BE8  C08C  F08D         	movff	??_f_lseek,??_f_lseek+1
 16293  000BEC  6B8E               	clrf	(??_f_lseek+2)& (0+255),b
 16294  000BEE  6B8F               	clrf	(??_f_lseek+3)& (0+255),b
 16295  000BF0  6B90               	clrf	(??_f_lseek+4)& (0+255),b
 16296  000BF2  0E09               	movlw	9
 16297  000BF4                     u14525:
 16298  000BF4  90D8               	bcf	status,0,c
 16299  000BF6  378D               	rlcf	(??_f_lseek+1)& (0+255),f,b
 16300  000BF8  378E               	rlcf	(??_f_lseek+2)& (0+255),f,b
 16301  000BFA  378F               	rlcf	(??_f_lseek+3)& (0+255),f,b
 16302  000BFC  3790               	rlcf	(??_f_lseek+4)& (0+255),f,b
 16303  000BFE  2EE8               	decfsz	wreg,f,c
 16304  000C00  D7F9               	goto	u14525
 16305  000C02  C08D  F0A1         	movff	??_f_lseek+1,f_lseek@csize
 16306  000C06  C08E  F0A2         	movff	??_f_lseek+2,f_lseek@csize+1
 16307  000C0A  C08F  F0A3         	movff	??_f_lseek+3,f_lseek@csize+2
 16308  000C0E  C090  F0A4         	movff	??_f_lseek+4,f_lseek@csize+3
 16309                           
 16310                           ; BSR set to: 0
 16311                           ;tff.c: 1163: if (ifptr > 0 &&;tff.c: 1164: (ofs - 1) / csize >= (ifptr - 1) / csize) {
 16312  000C12  519D               	movf	f_lseek@ifptr& (0+255),w,b
 16313  000C14  119E               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
 16314  000C16  119F               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
 16315  000C18  11A0               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
 16316  000C1A  B4D8               	btfsc	status,2,c
 16317  000C1C  D093               	goto	l12420
 16318                           
 16319                           ; BSR set to: 0
 16320  000C1E  0EFF               	movlw	255
 16321  000C20  2588               	addwf	f_lseek@ofs& (0+255),w,b
 16322  000C22  6E0A               	movwf	___lldiv@dividend^0,c
 16323  000C24  0EFF               	movlw	255
 16324  000C26  2189               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
 16325  000C28  6E0B               	movwf	(___lldiv@dividend+1)^0,c
 16326  000C2A  0EFF               	movlw	255
 16327  000C2C  218A               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
 16328  000C2E  6E0C               	movwf	(___lldiv@dividend+2)^0,c
 16329  000C30  0EFF               	movlw	255
 16330  000C32  218B               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
 16331  000C34  6E0D               	movwf	(___lldiv@dividend+3)^0,c
 16332  000C36  C0A1  F00E         	movff	f_lseek@csize,___lldiv@divisor
 16333  000C3A  C0A2  F00F         	movff	f_lseek@csize+1,___lldiv@divisor+1
 16334  000C3E  C0A3  F010         	movff	f_lseek@csize+2,___lldiv@divisor+2
 16335  000C42  C0A4  F011         	movff	f_lseek@csize+3,___lldiv@divisor+3
 16336  000C46  ECF1  F024         	call	___lldiv	;wreg free
 16337  000C4A  C00A  F08C         	movff	?___lldiv,??_f_lseek
 16338  000C4E  C00B  F08D         	movff	?___lldiv+1,??_f_lseek+1
 16339  000C52  C00C  F08E         	movff	?___lldiv+2,??_f_lseek+2
 16340  000C56  C00D  F08F         	movff	?___lldiv+3,??_f_lseek+3
 16341  000C5A  0EFF               	movlw	255
 16342  000C5C  0100               	movlb	0	; () banked
 16343  000C5E  259D               	addwf	f_lseek@ifptr& (0+255),w,b
 16344  000C60  6E0A               	movwf	___lldiv@dividend^0,c
 16345  000C62  0EFF               	movlw	255
 16346  000C64  219E               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 16347  000C66  6E0B               	movwf	(___lldiv@dividend+1)^0,c
 16348  000C68  0EFF               	movlw	255
 16349  000C6A  219F               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 16350  000C6C  6E0C               	movwf	(___lldiv@dividend+2)^0,c
 16351  000C6E  0EFF               	movlw	255
 16352  000C70  21A0               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 16353  000C72  6E0D               	movwf	(___lldiv@dividend+3)^0,c
 16354  000C74  C0A1  F00E         	movff	f_lseek@csize,___lldiv@divisor
 16355  000C78  C0A2  F00F         	movff	f_lseek@csize+1,___lldiv@divisor+1
 16356  000C7C  C0A3  F010         	movff	f_lseek@csize+2,___lldiv@divisor+2
 16357  000C80  C0A4  F011         	movff	f_lseek@csize+3,___lldiv@divisor+3
 16358  000C84  ECF1  F024         	call	___lldiv	;wreg free
 16359  000C88  500A               	movf	?___lldiv^0,w,c
 16360  000C8A  0100               	movlb	0	; () banked
 16361  000C8C  5D8C               	subwf	??_f_lseek& (0+255),w,b
 16362  000C8E  500B               	movf	(?___lldiv+1)^0,w,c
 16363  000C90  598D               	subwfb	(??_f_lseek+1)& (0+255),w,b
 16364  000C92  500C               	movf	(?___lldiv+2)^0,w,c
 16365  000C94  598E               	subwfb	(??_f_lseek+2)& (0+255),w,b
 16366  000C96  500D               	movf	(?___lldiv+3)^0,w,c
 16367  000C98  598F               	subwfb	(??_f_lseek+3)& (0+255),w,b
 16368  000C9A  A0D8               	btfss	status,0,c
 16369  000C9C  D053               	goto	l12420
 16370                           
 16371                           ; BSR set to: 0
 16372                           ;tff.c: 1165: fp->fptr = (ifptr - 1) & ~(csize - 1);
 16373  000C9E  0EFF               	movlw	255
 16374  000CA0  25A1               	addwf	f_lseek@csize& (0+255),w,b
 16375  000CA2  6F8C               	movwf	??_f_lseek& (0+255),b
 16376  000CA4  0EFF               	movlw	255
 16377  000CA6  21A2               	addwfc	(f_lseek@csize+1)& (0+255),w,b
 16378  000CA8  6F8D               	movwf	(??_f_lseek+1)& (0+255),b
 16379  000CAA  0EFF               	movlw	255
 16380  000CAC  21A3               	addwfc	(f_lseek@csize+2)& (0+255),w,b
 16381  000CAE  6F8E               	movwf	(??_f_lseek+2)& (0+255),b
 16382  000CB0  0EFF               	movlw	255
 16383  000CB2  21A4               	addwfc	(f_lseek@csize+3)& (0+255),w,b
 16384  000CB4  6F8F               	movwf	(??_f_lseek+3)& (0+255),b
 16385  000CB6  1D8C               	comf	??_f_lseek& (0+255),w,b
 16386  000CB8  6F90               	movwf	(??_f_lseek+4)& (0+255),b
 16387  000CBA  1D8D               	comf	(??_f_lseek+1)& (0+255),w,b
 16388  000CBC  6F91               	movwf	(??_f_lseek+5)& (0+255),b
 16389  000CBE  1D8E               	comf	(??_f_lseek+2)& (0+255),w,b
 16390  000CC0  6F92               	movwf	(??_f_lseek+6)& (0+255),b
 16391  000CC2  1D8F               	comf	(??_f_lseek+3)& (0+255),w,b
 16392  000CC4  6F93               	movwf	(??_f_lseek+7)& (0+255),b
 16393  000CC6  0EFF               	movlw	255
 16394  000CC8  259D               	addwf	f_lseek@ifptr& (0+255),w,b
 16395  000CCA  6F94               	movwf	(??_f_lseek+8)& (0+255),b
 16396  000CCC  0EFF               	movlw	255
 16397  000CCE  219E               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 16398  000CD0  6F95               	movwf	(??_f_lseek+9)& (0+255),b
 16399  000CD2  0EFF               	movlw	255
 16400  000CD4  219F               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 16401  000CD6  6F96               	movwf	(??_f_lseek+10)& (0+255),b
 16402  000CD8  0EFF               	movlw	255
 16403  000CDA  21A0               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 16404  000CDC  6F97               	movwf	(??_f_lseek+11)& (0+255),b
 16405  000CDE  5190               	movf	(??_f_lseek+4)& (0+255),w,b
 16406  000CE0  1594               	andwf	(??_f_lseek+8)& (0+255),w,b
 16407  000CE2  6F98               	movwf	(??_f_lseek+12)& (0+255),b
 16408  000CE4  5191               	movf	(??_f_lseek+5)& (0+255),w,b
 16409  000CE6  1595               	andwf	(??_f_lseek+9)& (0+255),w,b
 16410  000CE8  6F99               	movwf	(??_f_lseek+13)& (0+255),b
 16411  000CEA  5192               	movf	(??_f_lseek+6)& (0+255),w,b
 16412  000CEC  1596               	andwf	(??_f_lseek+10)& (0+255),w,b
 16413  000CEE  6F9A               	movwf	(??_f_lseek+14)& (0+255),b
 16414  000CF0  5193               	movf	(??_f_lseek+7)& (0+255),w,b
 16415  000CF2  1597               	andwf	(??_f_lseek+11)& (0+255),w,b
 16416  000CF4  6F9B               	movwf	(??_f_lseek+15)& (0+255),b
 16417  000CF6  EE20 F006          	lfsr	2,6
 16418  000CFA  5186               	movf	f_lseek@fp& (0+255),w,b
 16419  000CFC  26D9               	addwf	fsr2l,f,c
 16420  000CFE  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16421  000D00  22DA               	addwfc	fsr2h,f,c
 16422  000D02  C098  FFDE         	movff	??_f_lseek+12,postinc2
 16423  000D06  C099  FFDE         	movff	??_f_lseek+13,postinc2
 16424  000D0A  C09A  FFDE         	movff	??_f_lseek+14,postinc2
 16425  000D0E  C09B  FFDE         	movff	??_f_lseek+15,postinc2
 16426                           
 16427                           ;tff.c: 1166: ofs -= fp->fptr;
 16428  000D12  EE20 F006          	lfsr	2,6
 16429  000D16  5186               	movf	f_lseek@fp& (0+255),w,b
 16430  000D18  26D9               	addwf	fsr2l,f,c
 16431  000D1A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16432  000D1C  22DA               	addwfc	fsr2h,f,c
 16433  000D1E  50DE               	movf	postinc2,w,c
 16434  000D20  5F88               	subwf	f_lseek@ofs& (0+255),f,b
 16435  000D22  50DE               	movf	postinc2,w,c
 16436  000D24  5B89               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 16437  000D26  50DE               	movf	postinc2,w,c
 16438  000D28  5B8A               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 16439  000D2A  50DD               	movf	postdec2,w,c
 16440  000D2C  5B8B               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 16441                           
 16442                           ;tff.c: 1167: clust = fp->curr_clust;
 16443  000D2E  EE20 F010          	lfsr	2,16
 16444  000D32  5186               	movf	f_lseek@fp& (0+255),w,b
 16445  000D34  26D9               	addwf	fsr2l,f,c
 16446  000D36  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16447  000D38  22DA               	addwfc	fsr2h,f,c
 16448  000D3A  CFDE F0A5          	movff	postinc2,f_lseek@clust
 16449  000D3E  CFDD F0A6          	movff	postdec2,f_lseek@clust+1
 16450                           
 16451                           ;tff.c: 1168: } else {
 16452  000D42  D030               	goto	l12432
 16453  000D44                     l12420:
 16454                           
 16455                           ; BSR set to: 0
 16456                           ;tff.c: 1169: clust = fp->org_clust;
 16457  000D44  EE20 F00E          	lfsr	2,14
 16458  000D48  5186               	movf	f_lseek@fp& (0+255),w,b
 16459  000D4A  26D9               	addwf	fsr2l,f,c
 16460  000D4C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16461  000D4E  22DA               	addwfc	fsr2h,f,c
 16462  000D50  CFDE F0A5          	movff	postinc2,f_lseek@clust
 16463  000D54  CFDD F0A6          	movff	postdec2,f_lseek@clust+1
 16464                           
 16465                           ; BSR set to: 0
 16466                           ;tff.c: 1171: if (clust == 0) {
 16467  000D58  51A5               	movf	f_lseek@clust& (0+255),w,b
 16468  000D5A  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16469  000D5C  A4D8               	btfss	status,2,c
 16470  000D5E  D018               	goto	l1192
 16471                           
 16472                           ; BSR set to: 0
 16473                           ;tff.c: 1172: clust = create_chain(0);
 16474  000D60  0E00               	movlw	0
 16475  000D62  6F79               	movwf	(create_chain@clust+1)& (0+255),b
 16476  000D64  0E00               	movlw	0
 16477  000D66  6F78               	movwf	create_chain@clust& (0+255),b
 16478  000D68  ECBB  F016         	call	_create_chain	;wreg free
 16479  000D6C  C078  F0A5         	movff	?_create_chain,f_lseek@clust
 16480  000D70  C079  F0A6         	movff	?_create_chain+1,f_lseek@clust+1
 16481                           
 16482                           ; BSR set to: 0
 16483                           ;tff.c: 1173: if (clust == 1) goto fk_error;
 16484  000D74  05A5               	decf	f_lseek@clust& (0+255),w,b
 16485  000D76  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16486  000D78  B4D8               	btfsc	status,2,c
 16487  000D7A  D0F8               	goto	l12470
 16488                           
 16489                           ; BSR set to: 0
 16490                           ;tff.c: 1174: fp->org_clust = clust;
 16491  000D7C  EE20 F00E          	lfsr	2,14
 16492  000D80  5186               	movf	f_lseek@fp& (0+255),w,b
 16493  000D82  26D9               	addwf	fsr2l,f,c
 16494  000D84  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16495  000D86  22DA               	addwfc	fsr2h,f,c
 16496  000D88  C0A5  FFDE         	movff	f_lseek@clust,postinc2
 16497  000D8C  C0A6  FFDD         	movff	f_lseek@clust+1,postdec2
 16498  000D90                     l1192:
 16499                           
 16500                           ; BSR set to: 0
 16501                           ;tff.c: 1175: };tff.c: 1177: fp->curr_clust = clust;
 16502  000D90  EE20 F010          	lfsr	2,16
 16503  000D94  5186               	movf	f_lseek@fp& (0+255),w,b
 16504  000D96  26D9               	addwf	fsr2l,f,c
 16505  000D98  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16506  000D9A  22DA               	addwfc	fsr2h,f,c
 16507  000D9C  C0A5  FFDE         	movff	f_lseek@clust,postinc2
 16508  000DA0  C0A6  FFDD         	movff	f_lseek@clust+1,postdec2
 16509  000DA4                     l12432:
 16510                           
 16511                           ; BSR set to: 0
 16512                           ;tff.c: 1178: };tff.c: 1179: if (clust != 0) {
 16513  000DA4  51A5               	movf	f_lseek@clust& (0+255),w,b
 16514  000DA6  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16515  000DA8  A4D8               	btfss	status,2,c
 16516  000DAA  D063               	goto	l12454
 16517  000DAC  D0AC               	goto	l12462
 16518  000DAE                     l12436:
 16519                           
 16520                           ; BSR set to: 0
 16521                           ;tff.c: 1182: if (fp->flag & 0x02) {
 16522  000DAE  EE20 F002          	lfsr	2,2
 16523  000DB2  5186               	movf	f_lseek@fp& (0+255),w,b
 16524  000DB4  26D9               	addwf	fsr2l,f,c
 16525  000DB6  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16526  000DB8  22DA               	addwfc	fsr2h,f,c
 16527  000DBA  A2DF               	btfss	indf2,1,c
 16528  000DBC  D017               	goto	l12444
 16529                           
 16530                           ; BSR set to: 0
 16531                           ;tff.c: 1183: clust = create_chain(clust);
 16532  000DBE  C0A5  F078         	movff	f_lseek@clust,create_chain@clust
 16533  000DC2  C0A6  F079         	movff	f_lseek@clust+1,create_chain@clust+1
 16534  000DC6  ECBB  F016         	call	_create_chain	;wreg free
 16535  000DCA  C078  F0A5         	movff	?_create_chain,f_lseek@clust
 16536  000DCE  C079  F0A6         	movff	?_create_chain+1,f_lseek@clust+1
 16537                           
 16538                           ; BSR set to: 0
 16539                           ;tff.c: 1184: if (clust == 0) {
 16540  000DD2  51A5               	movf	f_lseek@clust& (0+255),w,b
 16541  000DD4  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16542  000DD6  A4D8               	btfss	status,2,c
 16543  000DD8  D013               	goto	l12446
 16544                           
 16545                           ; BSR set to: 0
 16546                           ;tff.c: 1185: ofs = csize; break;
 16547  000DDA  C0A1  F088         	movff	f_lseek@csize,f_lseek@ofs
 16548  000DDE  C0A2  F089         	movff	f_lseek@csize+1,f_lseek@ofs+1
 16549  000DE2  C0A3  F08A         	movff	f_lseek@csize+2,f_lseek@ofs+2
 16550  000DE6  C0A4  F08B         	movff	f_lseek@csize+3,f_lseek@ofs+3
 16551  000DEA  D04D               	goto	u14620
 16552  000DEC                     l12444:
 16553                           
 16554                           ; BSR set to: 0
 16555                           ;tff.c: 1189: clust = get_cluster(clust);
 16556  000DEC  C0A5  F04A         	movff	f_lseek@clust,get_cluster@clust
 16557  000DF0  C0A6  F04B         	movff	f_lseek@clust+1,get_cluster@clust+1
 16558  000DF4  ECF4  F012         	call	_get_cluster	;wreg free
 16559  000DF8  C04A  F0A5         	movff	?_get_cluster,f_lseek@clust
 16560  000DFC  C04B  F0A6         	movff	?_get_cluster+1,f_lseek@clust+1
 16561  000E00                     l12446:
 16562                           
 16563                           ;tff.c: 1190: if (clust < 2 || clust >= fp->fs->max_clust) goto fk_error;
 16564  000E00  0100               	movlb	0	; () banked
 16565  000E02  51A6               	movf	(f_lseek@clust+1)& (0+255),w,b
 16566  000E04  E104               	bnz	u14600
 16567  000E06  0E02               	movlw	2
 16568  000E08  5DA5               	subwf	f_lseek@clust& (0+255),w,b
 16569  000E0A  A0D8               	btfss	status,0,c
 16570  000E0C  D0AF               	goto	l12470
 16571  000E0E                     u14600:
 16572                           
 16573                           ; BSR set to: 0
 16574  000E0E  EE20 F004          	lfsr	2,4
 16575  000E12  5186               	movf	f_lseek@fp& (0+255),w,b
 16576  000E14  26D9               	addwf	fsr2l,f,c
 16577  000E16  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16578  000E18  22DA               	addwfc	fsr2h,f,c
 16579  000E1A  EE10 F016          	lfsr	1,22
 16580  000E1E  50DE               	movf	postinc2,w,c
 16581  000E20  26E1               	addwf	fsr1l,f,c
 16582  000E22  50DD               	movf	postdec2,w,c
 16583  000E24  22E2               	addwfc	fsr1h,f,c
 16584  000E26  50E6               	movf	postinc1,w,c
 16585  000E28  5DA5               	subwf	f_lseek@clust& (0+255),w,b
 16586  000E2A  50E6               	movf	postinc1,w,c
 16587  000E2C  59A6               	subwfb	(f_lseek@clust+1)& (0+255),w,b
 16588  000E2E  B0D8               	btfsc	status,0,c
 16589  000E30  D09D               	goto	l12470
 16590                           
 16591                           ; BSR set to: 0
 16592                           ;tff.c: 1191: fp->curr_clust = clust;
 16593  000E32  EE20 F010          	lfsr	2,16
 16594  000E36  5186               	movf	f_lseek@fp& (0+255),w,b
 16595  000E38  26D9               	addwf	fsr2l,f,c
 16596  000E3A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16597  000E3C  22DA               	addwfc	fsr2h,f,c
 16598  000E3E  C0A5  FFDE         	movff	f_lseek@clust,postinc2
 16599  000E42  C0A6  FFDD         	movff	f_lseek@clust+1,postdec2
 16600                           
 16601                           ;tff.c: 1192: fp->fptr += csize;
 16602  000E46  EE20 F006          	lfsr	2,6
 16603  000E4A  5186               	movf	f_lseek@fp& (0+255),w,b
 16604  000E4C  26D9               	addwf	fsr2l,f,c
 16605  000E4E  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16606  000E50  22DA               	addwfc	fsr2h,f,c
 16607  000E52  51A1               	movf	f_lseek@csize& (0+255),w,b
 16608  000E54  26DE               	addwf	postinc2,f,c
 16609  000E56  51A2               	movf	(f_lseek@csize+1)& (0+255),w,b
 16610  000E58  22DE               	addwfc	postinc2,f,c
 16611  000E5A  51A3               	movf	(f_lseek@csize+2)& (0+255),w,b
 16612  000E5C  22DE               	addwfc	postinc2,f,c
 16613  000E5E  51A4               	movf	(f_lseek@csize+3)& (0+255),w,b
 16614  000E60  22DE               	addwfc	postinc2,f,c
 16615                           
 16616                           ; BSR set to: 0
 16617                           ;tff.c: 1193: ofs -= csize;
 16618  000E62  51A1               	movf	f_lseek@csize& (0+255),w,b
 16619  000E64  5F88               	subwf	f_lseek@ofs& (0+255),f,b
 16620  000E66  51A2               	movf	(f_lseek@csize+1)& (0+255),w,b
 16621  000E68  5B89               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 16622  000E6A  51A3               	movf	(f_lseek@csize+2)& (0+255),w,b
 16623  000E6C  5B8A               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 16624  000E6E  51A4               	movf	(f_lseek@csize+3)& (0+255),w,b
 16625  000E70  5B8B               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 16626  000E72                     l12454:
 16627                           
 16628                           ; BSR set to: 0
 16629  000E72  5188               	movf	f_lseek@ofs& (0+255),w,b
 16630  000E74  5DA1               	subwf	f_lseek@csize& (0+255),w,b
 16631  000E76  5189               	movf	(f_lseek@ofs+1)& (0+255),w,b
 16632  000E78  59A2               	subwfb	(f_lseek@csize+1)& (0+255),w,b
 16633  000E7A  518A               	movf	(f_lseek@ofs+2)& (0+255),w,b
 16634  000E7C  59A3               	subwfb	(f_lseek@csize+2)& (0+255),w,b
 16635  000E7E  518B               	movf	(f_lseek@ofs+3)& (0+255),w,b
 16636  000E80  59A4               	subwfb	(f_lseek@csize+3)& (0+255),w,b
 16637  000E82  A0D8               	btfss	status,0,c
 16638  000E84  D794               	goto	l12436
 16639  000E86                     u14620:
 16640                           
 16641                           ; BSR set to: 0
 16642                           ;tff.c: 1194: };tff.c: 1195: fp->fptr += ofs;
 16643  000E86  EE20 F006          	lfsr	2,6
 16644  000E8A  5186               	movf	f_lseek@fp& (0+255),w,b
 16645  000E8C  26D9               	addwf	fsr2l,f,c
 16646  000E8E  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16647  000E90  22DA               	addwfc	fsr2h,f,c
 16648  000E92  5188               	movf	f_lseek@ofs& (0+255),w,b
 16649  000E94  26DE               	addwf	postinc2,f,c
 16650  000E96  5189               	movf	(f_lseek@ofs+1)& (0+255),w,b
 16651  000E98  22DE               	addwfc	postinc2,f,c
 16652  000E9A  518A               	movf	(f_lseek@ofs+2)& (0+255),w,b
 16653  000E9C  22DE               	addwfc	postinc2,f,c
 16654  000E9E  518B               	movf	(f_lseek@ofs+3)& (0+255),w,b
 16655  000EA0  22DE               	addwfc	postinc2,f,c
 16656                           
 16657                           ;tff.c: 1196: fp->csect = (BYTE)(ofs / 512U);
 16658  000EA2  EE20 F003          	lfsr	2,3
 16659  000EA6  5186               	movf	f_lseek@fp& (0+255),w,b
 16660  000EA8  26D9               	addwf	fsr2l,f,c
 16661  000EAA  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16662  000EAC  22DA               	addwfc	fsr2h,f,c
 16663  000EAE  C088  F08C         	movff	f_lseek@ofs,??_f_lseek
 16664  000EB2  C089  F08D         	movff	f_lseek@ofs+1,??_f_lseek+1
 16665  000EB6  C08A  F08E         	movff	f_lseek@ofs+2,??_f_lseek+2
 16666  000EBA  C08B  F08F         	movff	f_lseek@ofs+3,??_f_lseek+3
 16667  000EBE  0E0A               	movlw	10
 16668  000EC0  D005               	goto	u14630
 16669  000EC2                     u14635:
 16670  000EC2  90D8               	bcf	status,0,c
 16671  000EC4  338F               	rrcf	(??_f_lseek+3)& (0+255),f,b
 16672  000EC6  338E               	rrcf	(??_f_lseek+2)& (0+255),f,b
 16673  000EC8  338D               	rrcf	(??_f_lseek+1)& (0+255),f,b
 16674  000ECA  338C               	rrcf	??_f_lseek& (0+255),f,b
 16675  000ECC                     u14630:
 16676  000ECC  2EE8               	decfsz	wreg,f,c
 16677  000ECE  D7F9               	goto	u14635
 16678  000ED0  518C               	movf	??_f_lseek& (0+255),w,b
 16679  000ED2  6EDF               	movwf	indf2,c
 16680                           
 16681                           ; BSR set to: 0
 16682                           ;tff.c: 1197: if (ofs % 512U) fp->csect++;
 16683  000ED4  0EFF               	movlw	255
 16684  000ED6  1588               	andwf	f_lseek@ofs& (0+255),w,b
 16685  000ED8  6F8C               	movwf	??_f_lseek& (0+255),b
 16686  000EDA  0E01               	movlw	1
 16687  000EDC  1589               	andwf	(f_lseek@ofs+1)& (0+255),w,b
 16688  000EDE  6F8D               	movwf	(??_f_lseek+1)& (0+255),b
 16689  000EE0  0E00               	movlw	0
 16690  000EE2  158A               	andwf	(f_lseek@ofs+2)& (0+255),w,b
 16691  000EE4  6F8E               	movwf	(??_f_lseek+2)& (0+255),b
 16692  000EE6  0E00               	movlw	0
 16693  000EE8  158B               	andwf	(f_lseek@ofs+3)& (0+255),w,b
 16694  000EEA  6F8F               	movwf	(??_f_lseek+3)& (0+255),b
 16695  000EEC  518C               	movf	??_f_lseek& (0+255),w,b
 16696  000EEE  118D               	iorwf	(??_f_lseek+1)& (0+255),w,b
 16697  000EF0  118E               	iorwf	(??_f_lseek+2)& (0+255),w,b
 16698  000EF2  118F               	iorwf	(??_f_lseek+3)& (0+255),w,b
 16699  000EF4  B4D8               	btfsc	status,2,c
 16700  000EF6  D007               	goto	l12462
 16701                           
 16702                           ; BSR set to: 0
 16703  000EF8  EE20 F003          	lfsr	2,3
 16704  000EFC  5186               	movf	f_lseek@fp& (0+255),w,b
 16705  000EFE  26D9               	addwf	fsr2l,f,c
 16706  000F00  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16707  000F02  22DA               	addwfc	fsr2h,f,c
 16708  000F04  2ADF               	incf	indf2,f,c
 16709  000F06                     l12462:
 16710                           
 16711                           ; BSR set to: 0
 16712                           ;tff.c: 1198: };tff.c: 1199: };tff.c: 1202: if (fp->fptr > fp->fsize) {
 16713  000F06  EE20 F006          	lfsr	2,6
 16714  000F0A  5186               	movf	f_lseek@fp& (0+255),w,b
 16715  000F0C  26D9               	addwf	fsr2l,f,c
 16716  000F0E  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16717  000F10  22DA               	addwfc	fsr2h,f,c
 16718  000F12  EE10 F00A          	lfsr	1,10
 16719  000F16  5186               	movf	f_lseek@fp& (0+255),w,b
 16720  000F18  26E1               	addwf	fsr1l,f,c
 16721  000F1A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16722  000F1C  22E2               	addwfc	fsr1h,f,c
 16723  000F1E  50DE               	movf	postinc2,w,c
 16724  000F20  5CE6               	subwf	postinc1,w,c
 16725  000F22  50DE               	movf	postinc2,w,c
 16726  000F24  58E6               	subwfb	postinc1,w,c
 16727  000F26  50DE               	movf	postinc2,w,c
 16728  000F28  58E6               	subwfb	postinc1,w,c
 16729  000F2A  50DE               	movf	postinc2,w,c
 16730  000F2C  58E6               	subwfb	postinc1,w,c
 16731  000F2E  B0D8               	btfsc	status,0,c
 16732  000F30  0012               	return	
 16733                           
 16734                           ; BSR set to: 0
 16735                           ;tff.c: 1203: fp->fsize = fp->fptr;
 16736  000F32  EE20 F006          	lfsr	2,6
 16737  000F36  5186               	movf	f_lseek@fp& (0+255),w,b
 16738  000F38  26D9               	addwf	fsr2l,f,c
 16739  000F3A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16740  000F3C  22DA               	addwfc	fsr2h,f,c
 16741  000F3E  EE10 F00A          	lfsr	1,10
 16742  000F42  5186               	movf	f_lseek@fp& (0+255),w,b
 16743  000F44  26E1               	addwf	fsr1l,f,c
 16744  000F46  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16745  000F48  22E2               	addwfc	fsr1h,f,c
 16746  000F4A  CFDE FFE6          	movff	postinc2,postinc1
 16747  000F4E  CFDE FFE6          	movff	postinc2,postinc1
 16748  000F52  CFDE FFE6          	movff	postinc2,postinc1
 16749  000F56  CFDE FFE6          	movff	postinc2,postinc1
 16750                           
 16751                           ; BSR set to: 0
 16752                           ;tff.c: 1204: fp->flag |= 0x20;
 16753  000F5A  EE20 F002          	lfsr	2,2
 16754  000F5E  5186               	movf	f_lseek@fp& (0+255),w,b
 16755  000F60  26D9               	addwf	fsr2l,f,c
 16756  000F62  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16757  000F64  22DA               	addwfc	fsr2h,f,c
 16758  000F66  0E00               	movlw	0
 16759  000F68  8ADB               	bsf	plusw2,5,c
 16760  000F6A  0012               	return	
 16761  000F6C                     l12470:
 16762                           
 16763                           ; BSR set to: 0
 16764                           ;tff.c: 1211: fp->flag |= 0x80;
 16765  000F6C  EE20 F002          	lfsr	2,2
 16766  000F70  5186               	movf	f_lseek@fp& (0+255),w,b
 16767  000F72  26D9               	addwf	fsr2l,f,c
 16768  000F74  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16769  000F76  22DA               	addwfc	fsr2h,f,c
 16770  000F78  0E00               	movlw	0
 16771  000F7A  8EDB               	bsf	plusw2,7,c
 16772                           
 16773                           ; BSR set to: 0
 16774  000F7C  0012               	return		;funcret
 16775  000F7E                     __end_of_f_lseek:
 16776                           	callstack 0
 16777                           
 16778 ;; *************** function _create_chain *****************
 16779 ;; Defined at:
 16780 ;;		line 283 in file "bibliotecas/tff.c"
 16781 ;; Parameters:    Size  Location     Type
 16782 ;;  clust           2   24[BANK0 ] unsigned short 
 16783 ;; Auto vars:     Size  Location     Type
 16784 ;;  ncl             2   36[BANK0 ] unsigned short 
 16785 ;;  scl             2   34[BANK0 ] unsigned short 
 16786 ;;  cstat           2   32[BANK0 ] unsigned short 
 16787 ;;  fs              2   30[BANK0 ] PTR struct _FATFS
 16788 ;;		 -> NULL(0), fs(544), 
 16789 ;;  mcl             2   28[BANK0 ] unsigned short 
 16790 ;; Return value:  Size  Location     Type
 16791 ;;                  2   24[BANK0 ] unsigned short 
 16792 ;; Registers used:
 16793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16794 ;; Tracked objects:
 16795 ;;		On entry : 3F/0
 16796 ;;		On exit  : 3F/0
 16797 ;;		Unchanged: 0/0
 16798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16799 ;;      Params:         0       2       0       0       0       0       0       0       0
 16800 ;;      Locals:         0      10       0       0       0       0       0       0       0
 16801 ;;      Temps:          0       2       0       0       0       0       0       0       0
 16802 ;;      Totals:         0      14       0       0       0       0       0       0       0
 16803 ;;Total ram usage:       14 bytes
 16804 ;; Hardware stack levels used:    1
 16805 ;; Hardware stack levels required when called:    9
 16806 ;; This function calls:
 16807 ;;		_get_cluster
 16808 ;;		_put_cluster
 16809 ;; This function is called by:
 16810 ;;		_reserve_direntry
 16811 ;;		_f_write
 16812 ;;		_f_lseek
 16813 ;; This function uses a non-reentrant model
 16814 ;;
 16815                           
 16816                           	psect	text93
 16817  002D76                     __ptext93:
 16818                           	callstack 0
 16819  002D76                     _create_chain:
 16820                           	callstack 13
 16821                           
 16822                           ; BSR set to: 0
 16823                           ;tff.c: 287: CLUST cstat, ncl, scl, mcl;;tff.c: 288: FATFS *fs = FatFs;
 16824                           
 16825                           ; BSR set to: 0
 16826                           ;incstack = 0
 16827  002D76  C04D  F07E         	movff	_FatFs,create_chain@fs
 16828  002D7A  C04E  F07F         	movff	_FatFs+1,create_chain@fs+1
 16829                           
 16830                           ; BSR set to: 0
 16831                           ;tff.c: 291: mcl = fs->max_clust;
 16832  002D7E  EE20 F016          	lfsr	2,22
 16833  002D82  517E               	movf	create_chain@fs& (0+255),w,b
 16834  002D84  26D9               	addwf	fsr2l,f,c
 16835  002D86  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 16836  002D88  22DA               	addwfc	fsr2h,f,c
 16837  002D8A  CFDE F07C          	movff	postinc2,create_chain@mcl
 16838  002D8E  CFDD F07D          	movff	postdec2,create_chain@mcl+1
 16839                           
 16840                           ; BSR set to: 0
 16841                           ;tff.c: 292: if (clust == 0) {
 16842  002D92  5178               	movf	create_chain@clust& (0+255),w,b
 16843  002D94  1179               	iorwf	(create_chain@clust+1)& (0+255),w,b
 16844  002D96  A4D8               	btfss	status,2,c
 16845  002D98  D01B               	goto	l10808
 16846                           
 16847                           ; BSR set to: 0
 16848                           ;tff.c: 293: scl = fs->last_clust;
 16849  002D9A  EE20 F018          	lfsr	2,24
 16850  002D9E  517E               	movf	create_chain@fs& (0+255),w,b
 16851  002DA0  26D9               	addwf	fsr2l,f,c
 16852  002DA2  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 16853  002DA4  22DA               	addwfc	fsr2h,f,c
 16854  002DA6  CFDE F082          	movff	postinc2,create_chain@scl
 16855  002DAA  CFDD F083          	movff	postdec2,create_chain@scl+1
 16856                           
 16857                           ; BSR set to: 0
 16858                           ;tff.c: 294: if (scl < 2 || scl >= mcl) scl = 1;
 16859  002DAE  5183               	movf	(create_chain@scl+1)& (0+255),w,b
 16860  002DB0  E104               	bnz	u12060
 16861  002DB2  0E02               	movlw	2
 16862  002DB4  5D82               	subwf	create_chain@scl& (0+255),w,b
 16863  002DB6  A0D8               	btfss	status,0,c
 16864  002DB8  D006               	goto	u12070
 16865  002DBA                     u12060:
 16866                           
 16867                           ; BSR set to: 0
 16868  002DBA  517C               	movf	create_chain@mcl& (0+255),w,b
 16869  002DBC  5D82               	subwf	create_chain@scl& (0+255),w,b
 16870  002DBE  517D               	movf	(create_chain@mcl+1)& (0+255),w,b
 16871  002DC0  5983               	subwfb	(create_chain@scl+1)& (0+255),w,b
 16872  002DC2  A0D8               	btfss	status,0,c
 16873  002DC4  D02B               	goto	l913
 16874  002DC6                     u12070:
 16875                           
 16876                           ; BSR set to: 0
 16877  002DC6  0E00               	movlw	0
 16878  002DC8  6F83               	movwf	(create_chain@scl+1)& (0+255),b
 16879  002DCA  0E01               	movlw	1
 16880  002DCC  6F82               	movwf	create_chain@scl& (0+255),b
 16881  002DCE  D026               	goto	l913
 16882  002DD0                     l10808:
 16883                           
 16884                           ; BSR set to: 0
 16885                           ;tff.c: 296: else {;tff.c: 297: cstat = get_cluster(clust);
 16886  002DD0  C078  F04A         	movff	create_chain@clust,get_cluster@clust
 16887  002DD4  C079  F04B         	movff	create_chain@clust+1,get_cluster@clust+1
 16888  002DD8  ECF4  F012         	call	_get_cluster	;wreg free
 16889  002DDC  C04A  F080         	movff	?_get_cluster,create_chain@cstat
 16890  002DE0  C04B  F081         	movff	?_get_cluster+1,create_chain@cstat+1
 16891                           
 16892                           ;tff.c: 298: if (cstat < 2) return 1;
 16893  002DE4  0100               	movlb	0	; () banked
 16894  002DE6  5181               	movf	(create_chain@cstat+1)& (0+255),w,b
 16895  002DE8  E10A               	bnz	l10816
 16896  002DEA  0E02               	movlw	2
 16897  002DEC  5D80               	subwf	create_chain@cstat& (0+255),w,b
 16898  002DEE  B0D8               	btfsc	status,0,c
 16899  002DF0  D006               	goto	l10816
 16900  002DF2                     u12080:
 16901  002DF2  0E00               	movlw	0
 16902  002DF4  0100               	movlb	0	; () banked
 16903  002DF6  6F79               	movwf	(?_create_chain+1)& (0+255),b
 16904  002DF8  0E01               	movlw	1
 16905  002DFA  6F78               	movwf	?_create_chain& (0+255),b
 16906  002DFC  0012               	return	
 16907  002DFE                     l10816:
 16908                           
 16909                           ; BSR set to: 0
 16910                           ;tff.c: 299: if (cstat < mcl) return cstat;
 16911  002DFE  517C               	movf	create_chain@mcl& (0+255),w,b
 16912  002E00  5D80               	subwf	create_chain@cstat& (0+255),w,b
 16913  002E02  517D               	movf	(create_chain@mcl+1)& (0+255),w,b
 16914  002E04  5981               	subwfb	(create_chain@cstat+1)& (0+255),w,b
 16915  002E06  B0D8               	btfsc	status,0,c
 16916  002E08  D005               	goto	l916
 16917                           
 16918                           ; BSR set to: 0
 16919  002E0A  C080  F078         	movff	create_chain@cstat,?_create_chain
 16920  002E0E  C081  F079         	movff	create_chain@cstat+1,?_create_chain+1
 16921  002E12  0012               	return	
 16922  002E14                     l916:
 16923                           
 16924                           ; BSR set to: 0
 16925                           ;tff.c: 300: scl = clust;
 16926  002E14  C078  F082         	movff	create_chain@clust,create_chain@scl
 16927  002E18  C079  F083         	movff	create_chain@clust+1,create_chain@scl+1
 16928  002E1C                     l913:
 16929                           
 16930                           ; BSR set to: 0
 16931                           ;tff.c: 301: };tff.c: 303: ncl = scl;
 16932  002E1C  C082  F084         	movff	create_chain@scl,create_chain@ncl
 16933  002E20  C083  F085         	movff	create_chain@scl+1,create_chain@ncl+1
 16934  002E24                     l10820:
 16935                           
 16936                           ; BSR set to: 0
 16937                           ;tff.c: 305: ncl++;
 16938  002E24  4B84               	infsnz	create_chain@ncl& (0+255),f,b
 16939  002E26  2B85               	incf	(create_chain@ncl+1)& (0+255),f,b
 16940                           
 16941                           ; BSR set to: 0
 16942                           ;tff.c: 306: if (ncl >= mcl) {
 16943  002E28  517C               	movf	create_chain@mcl& (0+255),w,b
 16944  002E2A  5D84               	subwf	create_chain@ncl& (0+255),w,b
 16945  002E2C  517D               	movf	(create_chain@mcl+1)& (0+255),w,b
 16946  002E2E  5985               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 16947  002E30  A0D8               	btfss	status,0,c
 16948  002E32  D00F               	goto	l10832
 16949                           
 16950                           ; BSR set to: 0
 16951                           ;tff.c: 307: ncl = 2;
 16952  002E34  0E00               	movlw	0
 16953  002E36  6F85               	movwf	(create_chain@ncl+1)& (0+255),b
 16954  002E38  0E02               	movlw	2
 16955  002E3A  6F84               	movwf	create_chain@ncl& (0+255),b
 16956                           
 16957                           ; BSR set to: 0
 16958                           ;tff.c: 308: if (ncl > scl) return 0;
 16959  002E3C  5183               	movf	(create_chain@scl+1)& (0+255),w,b
 16960  002E3E  E109               	bnz	l10832
 16961  002E40  0E02               	movlw	2
 16962  002E42  5D82               	subwf	create_chain@scl& (0+255),w,b
 16963  002E44  B0D8               	btfsc	status,0,c
 16964  002E46  D005               	goto	l10832
 16965  002E48                     u12110:
 16966                           
 16967                           ; BSR set to: 0
 16968  002E48  0E00               	movlw	0
 16969  002E4A  6F79               	movwf	(?_create_chain+1)& (0+255),b
 16970  002E4C  0E00               	movlw	0
 16971  002E4E  6F78               	movwf	?_create_chain& (0+255),b
 16972  002E50  0012               	return	
 16973  002E52                     l10832:
 16974                           
 16975                           ; BSR set to: 0
 16976                           ;tff.c: 309: };tff.c: 310: cstat = get_cluster(ncl);
 16977  002E52  C084  F04A         	movff	create_chain@ncl,get_cluster@clust
 16978  002E56  C085  F04B         	movff	create_chain@ncl+1,get_cluster@clust+1
 16979  002E5A  ECF4  F012         	call	_get_cluster	;wreg free
 16980  002E5E  C04A  F080         	movff	?_get_cluster,create_chain@cstat
 16981  002E62  C04B  F081         	movff	?_get_cluster+1,create_chain@cstat+1
 16982                           
 16983                           ;tff.c: 311: if (cstat == 0) break;
 16984  002E66  0100               	movlb	0	; () banked
 16985  002E68  5180               	movf	create_chain@cstat& (0+255),w,b
 16986  002E6A  1181               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 16987  002E6C  B4D8               	btfsc	status,2,c
 16988  002E6E  D00C               	goto	l10850
 16989                           
 16990                           ; BSR set to: 0
 16991                           ;tff.c: 312: if (cstat == 1) return 1;
 16992  002E70  0580               	decf	create_chain@cstat& (0+255),w,b
 16993  002E72  1181               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 16994  002E74  B4D8               	btfsc	status,2,c
 16995  002E76  D7BD               	goto	u12080
 16996                           
 16997                           ; BSR set to: 0
 16998                           ;tff.c: 313: if (ncl == scl) return 0;
 16999  002E78  5182               	movf	create_chain@scl& (0+255),w,b
 17000  002E7A  1984               	xorwf	create_chain@ncl& (0+255),w,b
 17001  002E7C  E1D3               	bnz	l10820
 17002  002E7E  5183               	movf	(create_chain@scl+1)& (0+255),w,b
 17003  002E80  1985               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 17004  002E82  B4D8               	btfsc	status,2,c
 17005  002E84  D7E1               	goto	u12110
 17006  002E86  D7CE               	goto	l10820
 17007  002E88                     l10850:
 17008                           
 17009                           ; BSR set to: 0
 17010                           ;tff.c: 316: if (!put_cluster(ncl, (CLUST)0x0FFFFFFF)) return 1;
 17011  002E88  C084  F060         	movff	create_chain@ncl,put_cluster@clust
 17012  002E8C  C085  F061         	movff	create_chain@ncl+1,put_cluster@clust+1
 17013  002E90  0EFF               	movlw	255
 17014  002E92  6F63               	movwf	(put_cluster@val+1)& (0+255),b
 17015  002E94  6962               	setf	put_cluster@val& (0+255),b
 17016  002E96  ECBE  F011         	call	_put_cluster	;wreg free
 17017  002E9A  0900               	iorlw	0
 17018  002E9C  B4D8               	btfsc	status,2,c
 17019  002E9E  D7A9               	goto	u12080
 17020                           
 17021                           ;tff.c: 317: if (clust != 0 && !put_cluster(clust, ncl)) return 1;
 17022  002EA0  0100               	movlb	0	; () banked
 17023  002EA2  5178               	movf	create_chain@clust& (0+255),w,b
 17024  002EA4  1179               	iorwf	(create_chain@clust+1)& (0+255),w,b
 17025  002EA6  B4D8               	btfsc	status,2,c
 17026  002EA8  D00D               	goto	l10864
 17027                           
 17028                           ; BSR set to: 0
 17029  002EAA  C078  F060         	movff	create_chain@clust,put_cluster@clust
 17030  002EAE  C079  F061         	movff	create_chain@clust+1,put_cluster@clust+1
 17031  002EB2  C084  F062         	movff	create_chain@ncl,put_cluster@val
 17032  002EB6  C085  F063         	movff	create_chain@ncl+1,put_cluster@val+1
 17033  002EBA  ECBE  F011         	call	_put_cluster	;wreg free
 17034  002EBE  0900               	iorlw	0
 17035  002EC0  B4D8               	btfsc	status,2,c
 17036  002EC2  D797               	goto	u12080
 17037  002EC4                     l10864:
 17038                           
 17039                           ;tff.c: 319: fs->last_clust = ncl;
 17040  002EC4  0100               	movlb	0	; () banked
 17041  002EC6  EE20 F018          	lfsr	2,24
 17042  002ECA  517E               	movf	create_chain@fs& (0+255),w,b
 17043  002ECC  26D9               	addwf	fsr2l,f,c
 17044  002ECE  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 17045  002ED0  22DA               	addwfc	fsr2h,f,c
 17046  002ED2  C084  FFDE         	movff	create_chain@ncl,postinc2
 17047  002ED6  C085  FFDD         	movff	create_chain@ncl+1,postdec2
 17048                           
 17049                           ;tff.c: 320: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 17050  002EDA  EE20 F01A          	lfsr	2,26
 17051  002EDE  517E               	movf	create_chain@fs& (0+255),w,b
 17052  002EE0  26D9               	addwf	fsr2l,f,c
 17053  002EE2  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 17054  002EE4  22DA               	addwfc	fsr2h,f,c
 17055  002EE6  28DE               	incf	postinc2,w,c
 17056  002EE8  E103               	bnz	u12180
 17057  002EEA  28DE               	incf	postinc2,w,c
 17058  002EEC  B4D8               	btfsc	status,2,c
 17059  002EEE  D009               	goto	l10868
 17060  002EF0                     u12180:
 17061                           
 17062                           ; BSR set to: 0
 17063                           ;tff.c: 321: fs->free_clust--;
 17064  002EF0  EE20 F01A          	lfsr	2,26
 17065  002EF4  517E               	movf	create_chain@fs& (0+255),w,b
 17066  002EF6  26D9               	addwf	fsr2l,f,c
 17067  002EF8  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 17068  002EFA  22DA               	addwfc	fsr2h,f,c
 17069  002EFC  06DE               	decf	postinc2,f,c
 17070  002EFE  0E00               	movlw	0
 17071  002F00  5ADD               	subwfb	postdec2,f,c
 17072  002F02                     l10868:
 17073                           
 17074                           ; BSR set to: 0
 17075                           ;tff.c: 325: };tff.c: 327: return ncl;
 17076  002F02  C084  F078         	movff	create_chain@ncl,?_create_chain
 17077  002F06  C085  F079         	movff	create_chain@ncl+1,?_create_chain+1
 17078                           
 17079                           ; BSR set to: 0
 17080  002F0A  0012               	return		;funcret
 17081  002F0C                     __end_of_create_chain:
 17082                           	callstack 0
 17083                           
 17084 ;; *************** function _put_cluster *****************
 17085 ;; Defined at:
 17086 ;;		line 198 in file "bibliotecas/tff.c"
 17087 ;; Parameters:    Size  Location     Type
 17088 ;;  clust           2    0[BANK0 ] unsigned short 
 17089 ;;  val             2    2[BANK0 ] unsigned short 
 17090 ;; Auto vars:     Size  Location     Type
 17091 ;;  fatsect         4   14[BANK0 ] unsigned long 
 17092 ;;  fs              2   22[BANK0 ] PTR struct _FATFS
 17093 ;;		 -> NULL(0), fs(544), 
 17094 ;;  p               2   20[BANK0 ] PTR unsigned char 
 17095 ;;		 -> fs.win(512), NULL(0), fs(544), 
 17096 ;;  bc              2   18[BANK0 ] unsigned short 
 17097 ;; Return value:  Size  Location     Type
 17098 ;;                  1    wreg      enum E105
 17099 ;; Registers used:
 17100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17101 ;; Tracked objects:
 17102 ;;		On entry : 3F/0
 17103 ;;		On exit  : 0/0
 17104 ;;		Unchanged: 0/0
 17105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17106 ;;      Params:         0       4       0       0       0       0       0       0       0
 17107 ;;      Locals:         0      14       0       0       0       0       0       0       0
 17108 ;;      Temps:          0       6       0       0       0       0       0       0       0
 17109 ;;      Totals:         0      24       0       0       0       0       0       0       0
 17110 ;;Total ram usage:       24 bytes
 17111 ;; Hardware stack levels used:    1
 17112 ;; Hardware stack levels required when called:    8
 17113 ;; This function calls:
 17114 ;;		___wmul
 17115 ;;		_move_window
 17116 ;; This function is called by:
 17117 ;;		_remove_chain
 17118 ;;		_create_chain
 17119 ;; This function uses a non-reentrant model
 17120 ;;
 17121                           
 17122                           	psect	text94
 17123  00237C                     __ptext94:
 17124                           	callstack 0
 17125  00237C                     _put_cluster:
 17126                           	callstack 13
 17127                           
 17128                           ; BSR set to: 0
 17129                           ;tff.c: 203: WORD bc;;tff.c: 204: BYTE *p;;tff.c: 205: DWORD fatsect;;tff.c: 206: FATFS 
      +                          *fs = FatFs;
 17130                           
 17131                           ; BSR set to: 0
 17132                           ;incstack = 0
 17133  00237C  C04D  F076         	movff	_FatFs,put_cluster@fs
 17134  002380  C04E  F077         	movff	_FatFs+1,put_cluster@fs+1
 17135                           
 17136                           ; BSR set to: 0
 17137                           ;tff.c: 209: fatsect = fs->fatbase;
 17138  002384  EE20 F008          	lfsr	2,8
 17139  002388  5176               	movf	put_cluster@fs& (0+255),w,b
 17140  00238A  26D9               	addwf	fsr2l,f,c
 17141  00238C  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17142  00238E  22DA               	addwfc	fsr2h,f,c
 17143  002390  CFDE F06E          	movff	postinc2,put_cluster@fatsect
 17144  002394  CFDE F06F          	movff	postinc2,put_cluster@fatsect+1
 17145  002398  CFDE F070          	movff	postinc2,put_cluster@fatsect+2
 17146  00239C  CFDE F071          	movff	postinc2,put_cluster@fatsect+3
 17147                           
 17148                           ;tff.c: 210: switch (fs->fs_type) {
 17149  0023A0  D10B               	goto	l10750
 17150  0023A2                     l10698:
 17151                           
 17152                           ; BSR set to: 0
 17153                           ;tff.c: 212: bc = (WORD)clust * 3 / 2;
 17154  0023A2  C060  F00A         	movff	put_cluster@clust,___wmul@multiplier
 17155  0023A6  C061  F00B         	movff	put_cluster@clust+1,___wmul@multiplier+1
 17156  0023AA  0E00               	movlw	0
 17157  0023AC  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 17158  0023AE  0E03               	movlw	3
 17159  0023B0  6E0C               	movwf	___wmul@multiplicand^0,c
 17160  0023B2  EC92  F02C         	call	___wmul	;wreg free
 17161  0023B6  90D8               	bcf	status,0,c
 17162  0023B8  300B               	rrcf	(?___wmul+1)^0,w,c
 17163  0023BA  0100               	movlb	0	; () banked
 17164  0023BC  6F64               	movwf	??_put_cluster& (0+255),b
 17165  0023BE  300A               	rrcf	?___wmul^0,w,c
 17166  0023C0  6F72               	movwf	put_cluster@bc& (0+255),b
 17167  0023C2  C064  F073         	movff	??_put_cluster,put_cluster@bc+1
 17168                           
 17169                           ; BSR set to: 0
 17170                           ;tff.c: 213: if (!move_window(fatsect + bc / 512U)) return FALSE;
 17171  0023C6  C072  F064         	movff	put_cluster@bc,??_put_cluster
 17172  0023CA  C073  F065         	movff	put_cluster@bc+1,??_put_cluster+1
 17173  0023CE  0E09               	movlw	9
 17174  0023D0  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17175  0023D2                     u11915:
 17176  0023D2  90D8               	bcf	status,0,c
 17177  0023D4  3365               	rrcf	(??_put_cluster+1)& (0+255),f,b
 17178  0023D6  3364               	rrcf	??_put_cluster& (0+255),f,b
 17179  0023D8  2F66               	decfsz	(??_put_cluster+2)& (0+255),f,b
 17180  0023DA  D7FB               	goto	u11915
 17181  0023DC  5164               	movf	??_put_cluster& (0+255),w,b
 17182  0023DE  256E               	addwf	put_cluster@fatsect& (0+255),w,b
 17183  0023E0  6E35               	movwf	move_window@sector^0,c
 17184  0023E2  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17185  0023E4  216F               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 17186  0023E6  6E36               	movwf	(move_window@sector+1)^0,c
 17187  0023E8  0E00               	movlw	0
 17188  0023EA  2170               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 17189  0023EC  6E37               	movwf	(move_window@sector+2)^0,c
 17190  0023EE  0E00               	movlw	0
 17191  0023F0  2171               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 17192  0023F2  6E38               	movwf	(move_window@sector+3)^0,c
 17193  0023F4  EC15  F015         	call	_move_window	;wreg free
 17194  0023F8  0900               	iorlw	0
 17195  0023FA  A4D8               	btfss	status,2,c
 17196  0023FC  D002               	goto	l10706
 17197  0023FE                     u11920:
 17198  0023FE  0E00               	movlw	0
 17199  002400  0012               	return	
 17200  002402                     l10706:
 17201                           
 17202                           ;tff.c: 214: p = &fs->win[bc % 512U];
 17203  002402  0EFF               	movlw	255
 17204  002404  0100               	movlb	0	; () banked
 17205  002406  6F64               	movwf	??_put_cluster& (0+255),b
 17206  002408  0E01               	movlw	1
 17207  00240A  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17208  00240C  C072  F066         	movff	put_cluster@bc,??_put_cluster+2
 17209  002410  C073  F067         	movff	put_cluster@bc+1,??_put_cluster+3
 17210  002414  5164               	movf	??_put_cluster& (0+255),w,b
 17211  002416  1766               	andwf	(??_put_cluster+2)& (0+255),f,b
 17212  002418  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17213  00241A  1767               	andwf	(??_put_cluster+3)& (0+255),f,b
 17214  00241C  C076  F068         	movff	put_cluster@fs,??_put_cluster+4
 17215  002420  C077  F069         	movff	put_cluster@fs+1,??_put_cluster+5
 17216  002424  5166               	movf	(??_put_cluster+2)& (0+255),w,b
 17217  002426  2768               	addwf	(??_put_cluster+4)& (0+255),f,b
 17218  002428  5167               	movf	(??_put_cluster+3)& (0+255),w,b
 17219  00242A  2369               	addwfc	(??_put_cluster+5)& (0+255),f,b
 17220  00242C  0E20               	movlw	32
 17221  00242E  2568               	addwf	(??_put_cluster+4)& (0+255),w,b
 17222  002430  6F74               	movwf	put_cluster@p& (0+255),b
 17223  002432  0E00               	movlw	0
 17224  002434  2169               	addwfc	(??_put_cluster+5)& (0+255),w,b
 17225  002436  6F75               	movwf	(put_cluster@p+1)& (0+255),b
 17226                           
 17227                           ; BSR set to: 0
 17228                           ;tff.c: 215: *p = (clust & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 17229  002438  B160               	btfsc	put_cluster@clust& (0+255),0,b
 17230  00243A  D004               	goto	l10712
 17231                           
 17232                           ; BSR set to: 0
 17233  00243C  C062  F06A         	movff	put_cluster@val,_put_cluster$1623
 17234  002440  6B6B               	clrf	(_put_cluster$1623+1)& (0+255),b
 17235  002442  D01A               	goto	l10714
 17236  002444                     l10712:
 17237                           
 17238                           ; BSR set to: 0
 17239  002444  5162               	movf	put_cluster@val& (0+255),w,b
 17240  002446  6F64               	movwf	??_put_cluster& (0+255),b
 17241  002448  6B65               	clrf	(??_put_cluster+1)& (0+255),b
 17242  00244A  3B64               	swapf	??_put_cluster& (0+255),f,b
 17243  00244C  3B65               	swapf	(??_put_cluster+1)& (0+255),f,b
 17244  00244E  0EF0               	movlw	240
 17245  002450  1765               	andwf	(??_put_cluster+1)& (0+255),f,b
 17246  002452  5164               	movf	??_put_cluster& (0+255),w,b
 17247  002454  0B0F               	andlw	15
 17248  002456  1365               	iorwf	(??_put_cluster+1)& (0+255),f,b
 17249  002458  0EF0               	movlw	240
 17250  00245A  1764               	andwf	??_put_cluster& (0+255),f,b
 17251  00245C  C074  FFD9         	movff	put_cluster@p,fsr2l
 17252  002460  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17253  002464  50DF               	movf	indf2,w,c
 17254  002466  0B0F               	andlw	15
 17255  002468  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17256  00246A  6B67               	clrf	(??_put_cluster+3)& (0+255),b
 17257  00246C  5164               	movf	??_put_cluster& (0+255),w,b
 17258  00246E  1166               	iorwf	(??_put_cluster+2)& (0+255),w,b
 17259  002470  6F6A               	movwf	_put_cluster$1623& (0+255),b
 17260  002472  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17261  002474  1167               	iorwf	(??_put_cluster+3)& (0+255),w,b
 17262  002476  6F6B               	movwf	(_put_cluster$1623+1)& (0+255),b
 17263  002478                     l10714:
 17264                           
 17265                           ; BSR set to: 0
 17266  002478  C074  FFD9         	movff	put_cluster@p,fsr2l
 17267  00247C  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17268  002480  C06A  FFDF         	movff	_put_cluster$1623,indf2
 17269                           
 17270                           ; BSR set to: 0
 17271                           ;tff.c: 216: bc++;
 17272  002484  4B72               	infsnz	put_cluster@bc& (0+255),f,b
 17273  002486  2B73               	incf	(put_cluster@bc+1)& (0+255),f,b
 17274                           
 17275                           ; BSR set to: 0
 17276                           ;tff.c: 217: fs->winflag = 1;
 17277  002488  EE20 F01F          	lfsr	2,31
 17278  00248C  5176               	movf	put_cluster@fs& (0+255),w,b
 17279  00248E  26D9               	addwf	fsr2l,f,c
 17280  002490  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17281  002492  22DA               	addwfc	fsr2h,f,c
 17282  002494  0E01               	movlw	1
 17283  002496  6EDF               	movwf	indf2,c
 17284                           
 17285                           ; BSR set to: 0
 17286                           ;tff.c: 218: if (!move_window(fatsect + bc / 512U)) return FALSE;
 17287  002498  C072  F064         	movff	put_cluster@bc,??_put_cluster
 17288  00249C  C073  F065         	movff	put_cluster@bc+1,??_put_cluster+1
 17289  0024A0  0E09               	movlw	9
 17290  0024A2  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17291  0024A4                     u11945:
 17292  0024A4  90D8               	bcf	status,0,c
 17293  0024A6  3365               	rrcf	(??_put_cluster+1)& (0+255),f,b
 17294  0024A8  3364               	rrcf	??_put_cluster& (0+255),f,b
 17295  0024AA  2F66               	decfsz	(??_put_cluster+2)& (0+255),f,b
 17296  0024AC  D7FB               	goto	u11945
 17297  0024AE  5164               	movf	??_put_cluster& (0+255),w,b
 17298  0024B0  256E               	addwf	put_cluster@fatsect& (0+255),w,b
 17299  0024B2  6E35               	movwf	move_window@sector^0,c
 17300  0024B4  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17301  0024B6  216F               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 17302  0024B8  6E36               	movwf	(move_window@sector+1)^0,c
 17303  0024BA  0E00               	movlw	0
 17304  0024BC  2170               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 17305  0024BE  6E37               	movwf	(move_window@sector+2)^0,c
 17306  0024C0  0E00               	movlw	0
 17307  0024C2  2171               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 17308  0024C4  6E38               	movwf	(move_window@sector+3)^0,c
 17309  0024C6  EC15  F015         	call	_move_window	;wreg free
 17310  0024CA  0900               	iorlw	0
 17311  0024CC  B4D8               	btfsc	status,2,c
 17312  0024CE  D797               	goto	u11920
 17313                           
 17314                           ;tff.c: 219: p = &fs->win[bc % 512U];
 17315  0024D0  0EFF               	movlw	255
 17316  0024D2  0100               	movlb	0	; () banked
 17317  0024D4  6F64               	movwf	??_put_cluster& (0+255),b
 17318  0024D6  0E01               	movlw	1
 17319  0024D8  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17320  0024DA  C072  F066         	movff	put_cluster@bc,??_put_cluster+2
 17321  0024DE  C073  F067         	movff	put_cluster@bc+1,??_put_cluster+3
 17322  0024E2  5164               	movf	??_put_cluster& (0+255),w,b
 17323  0024E4  1766               	andwf	(??_put_cluster+2)& (0+255),f,b
 17324  0024E6  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17325  0024E8  1767               	andwf	(??_put_cluster+3)& (0+255),f,b
 17326  0024EA  C076  F068         	movff	put_cluster@fs,??_put_cluster+4
 17327  0024EE  C077  F069         	movff	put_cluster@fs+1,??_put_cluster+5
 17328  0024F2  5166               	movf	(??_put_cluster+2)& (0+255),w,b
 17329  0024F4  2768               	addwf	(??_put_cluster+4)& (0+255),f,b
 17330  0024F6  5167               	movf	(??_put_cluster+3)& (0+255),w,b
 17331  0024F8  2369               	addwfc	(??_put_cluster+5)& (0+255),f,b
 17332  0024FA  0E20               	movlw	32
 17333  0024FC  2568               	addwf	(??_put_cluster+4)& (0+255),w,b
 17334  0024FE  6F74               	movwf	put_cluster@p& (0+255),b
 17335  002500  0E00               	movlw	0
 17336  002502  2169               	addwfc	(??_put_cluster+5)& (0+255),w,b
 17337  002504  6F75               	movwf	(put_cluster@p+1)& (0+255),b
 17338                           
 17339                           ; BSR set to: 0
 17340                           ;tff.c: 220: *p = (clust & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x
      +                          0F));
 17341  002506  B160               	btfsc	put_cluster@clust& (0+255),0,b
 17342  002508  D00E               	goto	l10732
 17343                           
 17344                           ; BSR set to: 0
 17345  00250A  C063  F064         	movff	put_cluster@val+1,??_put_cluster
 17346  00250E  0E0F               	movlw	15
 17347  002510  1764               	andwf	??_put_cluster& (0+255),f,b
 17348  002512  C074  FFD9         	movff	put_cluster@p,fsr2l
 17349  002516  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17350  00251A  50DF               	movf	indf2,w,c
 17351  00251C  0BF0               	andlw	240
 17352  00251E  1164               	iorwf	??_put_cluster& (0+255),w,b
 17353  002520  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17354  002522  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17355  002524  D00C               	goto	L6
 17356  002526                     l10732:
 17357                           
 17358                           ; BSR set to: 0
 17359  002526  C062  F064         	movff	put_cluster@val,??_put_cluster
 17360  00252A  C063  F065         	movff	put_cluster@val+1,??_put_cluster+1
 17361  00252E  0E04               	movlw	4
 17362  002530  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17363  002532                     u11975:
 17364  002532  90D8               	bcf	status,0,c
 17365  002534  3365               	rrcf	(??_put_cluster+1)& (0+255),f,b
 17366  002536  3364               	rrcf	??_put_cluster& (0+255),f,b
 17367  002538  2F66               	decfsz	(??_put_cluster+2)& (0+255),f,b
 17368  00253A  D7FB               	goto	u11975
 17369  00253C  5164               	movf	??_put_cluster& (0+255),w,b
 17370  00253E                     L6:
 17371  00253E  6F6C               	movwf	_put_cluster$1624& (0+255),b
 17372  002540  6B6D               	clrf	(_put_cluster$1624+1)& (0+255),b
 17373                           
 17374                           ; BSR set to: 0
 17375  002542  C074  FFD9         	movff	put_cluster@p,fsr2l
 17376  002546  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17377  00254A  C06C  FFDF         	movff	_put_cluster$1624,indf2
 17378                           
 17379                           ;tff.c: 221: break;
 17380  00254E  D042               	goto	l10752
 17381  002550                     l10736:
 17382                           
 17383                           ; BSR set to: 0
 17384                           ;tff.c: 224: if (!move_window(fatsect + clust / 256)) return FALSE;
 17385  002550  5161               	movf	(put_cluster@clust+1)& (0+255),w,b
 17386  002552  256E               	addwf	put_cluster@fatsect& (0+255),w,b
 17387  002554  6E35               	movwf	move_window@sector^0,c
 17388  002556  0E00               	movlw	0
 17389  002558  216F               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 17390  00255A  6E36               	movwf	(move_window@sector+1)^0,c
 17391  00255C  0E00               	movlw	0
 17392  00255E  2170               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 17393  002560  6E37               	movwf	(move_window@sector+2)^0,c
 17394  002562  0E00               	movlw	0
 17395  002564  2171               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 17396  002566  6E38               	movwf	(move_window@sector+3)^0,c
 17397  002568  EC15  F015         	call	_move_window	;wreg free
 17398  00256C  0900               	iorlw	0
 17399  00256E  B4D8               	btfsc	status,2,c
 17400  002570  D746               	goto	u11920
 17401                           
 17402                           ;tff.c: 225: *(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U])=(WORD)((WORD)val);
 17403  002572  0EFF               	movlw	255
 17404  002574  0100               	movlb	0	; () banked
 17405  002576  6F64               	movwf	??_put_cluster& (0+255),b
 17406  002578  0E01               	movlw	1
 17407  00257A  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17408  00257C  C060  F066         	movff	put_cluster@clust,??_put_cluster+2
 17409  002580  C061  F067         	movff	put_cluster@clust+1,??_put_cluster+3
 17410  002584  90D8               	bcf	status,0,c
 17411  002586  3766               	rlcf	(??_put_cluster+2)& (0+255),f,b
 17412  002588  3767               	rlcf	(??_put_cluster+3)& (0+255),f,b
 17413  00258A  5164               	movf	??_put_cluster& (0+255),w,b
 17414  00258C  1766               	andwf	(??_put_cluster+2)& (0+255),f,b
 17415  00258E  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17416  002590  1767               	andwf	(??_put_cluster+3)& (0+255),f,b
 17417  002592  C076  F068         	movff	put_cluster@fs,??_put_cluster+4
 17418  002596  C077  F069         	movff	put_cluster@fs+1,??_put_cluster+5
 17419  00259A  5166               	movf	(??_put_cluster+2)& (0+255),w,b
 17420  00259C  2768               	addwf	(??_put_cluster+4)& (0+255),f,b
 17421  00259E  5167               	movf	(??_put_cluster+3)& (0+255),w,b
 17422  0025A0  2369               	addwfc	(??_put_cluster+5)& (0+255),f,b
 17423  0025A2  0E20               	movlw	32
 17424  0025A4  2568               	addwf	(??_put_cluster+4)& (0+255),w,b
 17425  0025A6  6ED9               	movwf	fsr2l,c
 17426  0025A8  0E00               	movlw	0
 17427  0025AA  2169               	addwfc	(??_put_cluster+5)& (0+255),w,b
 17428  0025AC  6EDA               	movwf	fsr2h,c
 17429  0025AE  C062  FFDE         	movff	put_cluster@val,postinc2
 17430  0025B2  C063  FFDD         	movff	put_cluster@val+1,postdec2
 17431                           
 17432                           ;tff.c: 226: break;
 17433  0025B6  D00E               	goto	l10752
 17434  0025B8                     l10750:
 17435                           
 17436                           ; BSR set to: 0
 17437  0025B8  EE20 F01C          	lfsr	2,28
 17438  0025BC  5176               	movf	put_cluster@fs& (0+255),w,b
 17439  0025BE  26D9               	addwf	fsr2l,f,c
 17440  0025C0  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17441  0025C2  22DA               	addwfc	fsr2h,f,c
 17442  0025C4  50DF               	movf	indf2,w,c
 17443                           
 17444                           ; Switch size 1, requested type "simple"
 17445                           ; Number of cases is 2, Range of values is 1 to 2
 17446                           ; switch strategies available:
 17447                           ; Name         Instructions Cycles
 17448                           ; simple_byte            7     4 (average)
 17449                           ;	Chosen strategy is simple_byte
 17450  0025C6  0A01               	xorlw	1	; case 1
 17451  0025C8  B4D8               	btfsc	status,2,c
 17452  0025CA  D6EB               	goto	l10698
 17453  0025CC  0A03               	xorlw	3	; case 2
 17454  0025CE  B4D8               	btfsc	status,2,c
 17455  0025D0  D7BF               	goto	l10736
 17456  0025D2  D715               	goto	u11920
 17457  0025D4                     l10752:
 17458                           
 17459                           ; BSR set to: 0
 17460                           ;tff.c: 236: fs->winflag = 1;
 17461  0025D4  EE20 F01F          	lfsr	2,31
 17462  0025D8  5176               	movf	put_cluster@fs& (0+255),w,b
 17463  0025DA  26D9               	addwf	fsr2l,f,c
 17464  0025DC  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17465  0025DE  22DA               	addwfc	fsr2h,f,c
 17466  0025E0  0E01               	movlw	1
 17467  0025E2  6EDF               	movwf	indf2,c
 17468                           
 17469                           ; BSR set to: 0
 17470                           ;tff.c: 237: return TRUE;
 17471  0025E4  0E01               	movlw	1
 17472  0025E6  0012               	return		;funcret
 17473  0025E8                     __end_of_put_cluster:
 17474                           	callstack 0
 17475                           
 17476 ;; *************** function _get_cluster *****************
 17477 ;; Defined at:
 17478 ;;		line 155 in file "bibliotecas/tff.c"
 17479 ;; Parameters:    Size  Location     Type
 17480 ;;  clust           2   73[COMRAM] unsigned short 
 17481 ;; Auto vars:     Size  Location     Type
 17482 ;;  fatsect         4   11[BANK0 ] unsigned long 
 17483 ;;  fs              2   17[BANK0 ] PTR struct _FATFS
 17484 ;;		 -> NULL(0), fs(544), 
 17485 ;;  bc              2   15[BANK0 ] unsigned short 
 17486 ;;  wc              2    9[BANK0 ] unsigned short 
 17487 ;; Return value:  Size  Location     Type
 17488 ;;                  2   73[COMRAM] unsigned short 
 17489 ;; Registers used:
 17490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17491 ;; Tracked objects:
 17492 ;;		On entry : 3F/0
 17493 ;;		On exit  : 0/0
 17494 ;;		Unchanged: 0/0
 17495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17496 ;;      Params:         2       0       0       0       0       0       0       0       0
 17497 ;;      Locals:         0      10       0       0       0       0       0       0       0
 17498 ;;      Temps:          0       9       0       0       0       0       0       0       0
 17499 ;;      Totals:         2      19       0       0       0       0       0       0       0
 17500 ;;Total ram usage:       21 bytes
 17501 ;; Hardware stack levels used:    1
 17502 ;; Hardware stack levels required when called:    8
 17503 ;; This function calls:
 17504 ;;		___wmul
 17505 ;;		_move_window
 17506 ;; This function is called by:
 17507 ;;		_remove_chain
 17508 ;;		_create_chain
 17509 ;;		_next_dir_entry
 17510 ;;		_f_lseek
 17511 ;;		_f_read
 17512 ;; This function uses a non-reentrant model
 17513 ;;
 17514                           
 17515                           	psect	text95
 17516  0025E8                     __ptext95:
 17517                           	callstack 0
 17518  0025E8                     _get_cluster:
 17519                           	callstack 13
 17520                           
 17521                           ; BSR set to: 0
 17522                           ;tff.c: 159: WORD wc, bc;;tff.c: 160: DWORD fatsect;;tff.c: 161: FATFS *fs = FatFs;
 17523                           
 17524                           ;incstack = 0
 17525  0025E8  C04D  F071         	movff	_FatFs,get_cluster@fs
 17526  0025EC  C04E  F072         	movff	_FatFs+1,get_cluster@fs+1
 17527                           
 17528                           ;tff.c: 164: if (clust >= 2 && clust < fs->max_clust) {
 17529  0025F0  504B               	movf	(get_cluster@clust+1)^0,w,c
 17530  0025F2  E104               	bnz	u11820
 17531  0025F4  0E02               	movlw	2
 17532  0025F6  5C4A               	subwf	get_cluster@clust^0,w,c
 17533  0025F8  A0D8               	btfss	status,0,c
 17534  0025FA  D105               	goto	l10690
 17535  0025FC                     u11820:
 17536                           
 17537                           ; BSR set to: 0
 17538  0025FC  EE20 F016          	lfsr	2,22
 17539  002600  5171               	movf	get_cluster@fs& (0+255),w,b
 17540  002602  26D9               	addwf	fsr2l,f,c
 17541  002604  5172               	movf	(get_cluster@fs+1)& (0+255),w,b
 17542  002606  22DA               	addwfc	fsr2h,f,c
 17543  002608  50DE               	movf	postinc2,w,c
 17544  00260A  5C4A               	subwf	get_cluster@clust^0,w,c
 17545  00260C  50DE               	movf	postinc2,w,c
 17546  00260E  584B               	subwfb	(get_cluster@clust+1)^0,w,c
 17547  002610  B0D8               	btfsc	status,0,c
 17548  002612  D0F9               	goto	l10690
 17549                           
 17550                           ; BSR set to: 0
 17551                           ;tff.c: 165: fatsect = fs->fatbase;
 17552  002614  EE20 F008          	lfsr	2,8
 17553  002618  5171               	movf	get_cluster@fs& (0+255),w,b
 17554  00261A  26D9               	addwf	fsr2l,f,c
 17555  00261C  5172               	movf	(get_cluster@fs+1)& (0+255),w,b
 17556  00261E  22DA               	addwfc	fsr2h,f,c
 17557  002620  CFDE F06B          	movff	postinc2,get_cluster@fatsect
 17558  002624  CFDE F06C          	movff	postinc2,get_cluster@fatsect+1
 17559  002628  CFDE F06D          	movff	postinc2,get_cluster@fatsect+2
 17560  00262C  CFDE F06E          	movff	postinc2,get_cluster@fatsect+3
 17561                           
 17562                           ;tff.c: 166: switch (fs->fs_type) {
 17563  002630  D0DD               	goto	l10688
 17564  002632                     l10654:
 17565                           
 17566                           ; BSR set to: 0
 17567                           ;tff.c: 168: bc = (WORD)clust * 3 / 2;
 17568  002632  C04A  F00A         	movff	get_cluster@clust,___wmul@multiplier
 17569  002636  C04B  F00B         	movff	get_cluster@clust+1,___wmul@multiplier+1
 17570  00263A  0E00               	movlw	0
 17571  00263C  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 17572  00263E  0E03               	movlw	3
 17573  002640  6E0C               	movwf	___wmul@multiplicand^0,c
 17574  002642  EC92  F02C         	call	___wmul	;wreg free
 17575  002646  90D8               	bcf	status,0,c
 17576  002648  300B               	rrcf	(?___wmul+1)^0,w,c
 17577  00264A  0100               	movlb	0	; () banked
 17578  00264C  6F60               	movwf	??_get_cluster& (0+255),b
 17579  00264E  300A               	rrcf	?___wmul^0,w,c
 17580  002650  6F6F               	movwf	get_cluster@bc& (0+255),b
 17581  002652  C060  F070         	movff	??_get_cluster,get_cluster@bc+1
 17582                           
 17583                           ; BSR set to: 0
 17584                           ;tff.c: 169: if (!move_window(fatsect + bc / 512U)) break;
 17585  002656  C06F  F060         	movff	get_cluster@bc,??_get_cluster
 17586  00265A  C070  F061         	movff	get_cluster@bc+1,??_get_cluster+1
 17587  00265E  0E09               	movlw	9
 17588  002660  6F62               	movwf	(??_get_cluster+2)& (0+255),b
 17589  002662                     u11845:
 17590  002662  90D8               	bcf	status,0,c
 17591  002664  3361               	rrcf	(??_get_cluster+1)& (0+255),f,b
 17592  002666  3360               	rrcf	??_get_cluster& (0+255),f,b
 17593  002668  2F62               	decfsz	(??_get_cluster+2)& (0+255),f,b
 17594  00266A  D7FB               	goto	u11845
 17595  00266C  5160               	movf	??_get_cluster& (0+255),w,b
 17596  00266E  256B               	addwf	get_cluster@fatsect& (0+255),w,b
 17597  002670  6E35               	movwf	move_window@sector^0,c
 17598  002672  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17599  002674  216C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 17600  002676  6E36               	movwf	(move_window@sector+1)^0,c
 17601  002678  0E00               	movlw	0
 17602  00267A  216D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 17603  00267C  6E37               	movwf	(move_window@sector+2)^0,c
 17604  00267E  0E00               	movlw	0
 17605  002680  216E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 17606  002682  6E38               	movwf	(move_window@sector+3)^0,c
 17607  002684  EC15  F015         	call	_move_window	;wreg free
 17608  002688  0900               	iorlw	0
 17609  00268A  B4D8               	btfsc	status,2,c
 17610  00268C  D0BC               	goto	l10690
 17611                           
 17612                           ;tff.c: 170: wc = fs->win[bc % 512U]; bc++;
 17613  00268E  0EFF               	movlw	255
 17614  002690  0100               	movlb	0	; () banked
 17615  002692  6F60               	movwf	??_get_cluster& (0+255),b
 17616  002694  0E01               	movlw	1
 17617  002696  6F61               	movwf	(??_get_cluster+1)& (0+255),b
 17618  002698  C06F  F062         	movff	get_cluster@bc,??_get_cluster+2
 17619  00269C  C070  F063         	movff	get_cluster@bc+1,??_get_cluster+3
 17620  0026A0  5160               	movf	??_get_cluster& (0+255),w,b
 17621  0026A2  1762               	andwf	(??_get_cluster+2)& (0+255),f,b
 17622  0026A4  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17623  0026A6  1763               	andwf	(??_get_cluster+3)& (0+255),f,b
 17624  0026A8  C071  F064         	movff	get_cluster@fs,??_get_cluster+4
 17625  0026AC  C072  F065         	movff	get_cluster@fs+1,??_get_cluster+5
 17626  0026B0  5162               	movf	(??_get_cluster+2)& (0+255),w,b
 17627  0026B2  2764               	addwf	(??_get_cluster+4)& (0+255),f,b
 17628  0026B4  5163               	movf	(??_get_cluster+3)& (0+255),w,b
 17629  0026B6  2365               	addwfc	(??_get_cluster+5)& (0+255),f,b
 17630  0026B8  0E20               	movlw	32
 17631  0026BA  2564               	addwf	(??_get_cluster+4)& (0+255),w,b
 17632  0026BC  6ED9               	movwf	fsr2l,c
 17633  0026BE  0E00               	movlw	0
 17634  0026C0  2165               	addwfc	(??_get_cluster+5)& (0+255),w,b
 17635  0026C2  6EDA               	movwf	fsr2h,c
 17636  0026C4  50DF               	movf	indf2,w,c
 17637  0026C6  6F66               	movwf	(??_get_cluster+6)& (0+255),b
 17638  0026C8  5166               	movf	(??_get_cluster+6)& (0+255),w,b
 17639  0026CA  6F69               	movwf	get_cluster@wc& (0+255),b
 17640  0026CC  6B6A               	clrf	(get_cluster@wc+1)& (0+255),b
 17641                           
 17642                           ; BSR set to: 0
 17643  0026CE  4B6F               	infsnz	get_cluster@bc& (0+255),f,b
 17644  0026D0  2B70               	incf	(get_cluster@bc+1)& (0+255),f,b
 17645                           
 17646                           ; BSR set to: 0
 17647                           ;tff.c: 171: if (!move_window(fatsect + bc / 512U)) break;
 17648  0026D2  C06F  F060         	movff	get_cluster@bc,??_get_cluster
 17649  0026D6  C070  F061         	movff	get_cluster@bc+1,??_get_cluster+1
 17650  0026DA  0E09               	movlw	9
 17651  0026DC  6F62               	movwf	(??_get_cluster+2)& (0+255),b
 17652  0026DE                     u11865:
 17653  0026DE  90D8               	bcf	status,0,c
 17654  0026E0  3361               	rrcf	(??_get_cluster+1)& (0+255),f,b
 17655  0026E2  3360               	rrcf	??_get_cluster& (0+255),f,b
 17656  0026E4  2F62               	decfsz	(??_get_cluster+2)& (0+255),f,b
 17657  0026E6  D7FB               	goto	u11865
 17658  0026E8  5160               	movf	??_get_cluster& (0+255),w,b
 17659  0026EA  256B               	addwf	get_cluster@fatsect& (0+255),w,b
 17660  0026EC  6E35               	movwf	move_window@sector^0,c
 17661  0026EE  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17662  0026F0  216C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 17663  0026F2  6E36               	movwf	(move_window@sector+1)^0,c
 17664  0026F4  0E00               	movlw	0
 17665  0026F6  216D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 17666  0026F8  6E37               	movwf	(move_window@sector+2)^0,c
 17667  0026FA  0E00               	movlw	0
 17668  0026FC  216E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 17669  0026FE  6E38               	movwf	(move_window@sector+3)^0,c
 17670  002700  EC15  F015         	call	_move_window	;wreg free
 17671  002704  0900               	iorlw	0
 17672  002706  B4D8               	btfsc	status,2,c
 17673  002708  D07E               	goto	l10690
 17674                           
 17675                           ;tff.c: 172: wc |= (WORD)fs->win[bc % 512U] << 8;
 17676  00270A  0EFF               	movlw	255
 17677  00270C  0100               	movlb	0	; () banked
 17678  00270E  6F60               	movwf	??_get_cluster& (0+255),b
 17679  002710  0E01               	movlw	1
 17680  002712  6F61               	movwf	(??_get_cluster+1)& (0+255),b
 17681  002714  C06F  F062         	movff	get_cluster@bc,??_get_cluster+2
 17682  002718  C070  F063         	movff	get_cluster@bc+1,??_get_cluster+3
 17683  00271C  5160               	movf	??_get_cluster& (0+255),w,b
 17684  00271E  1762               	andwf	(??_get_cluster+2)& (0+255),f,b
 17685  002720  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17686  002722  1763               	andwf	(??_get_cluster+3)& (0+255),f,b
 17687  002724  C071  F064         	movff	get_cluster@fs,??_get_cluster+4
 17688  002728  C072  F065         	movff	get_cluster@fs+1,??_get_cluster+5
 17689  00272C  5162               	movf	(??_get_cluster+2)& (0+255),w,b
 17690  00272E  2764               	addwf	(??_get_cluster+4)& (0+255),f,b
 17691  002730  5163               	movf	(??_get_cluster+3)& (0+255),w,b
 17692  002732  2365               	addwfc	(??_get_cluster+5)& (0+255),f,b
 17693  002734  0E20               	movlw	32
 17694  002736  2564               	addwf	(??_get_cluster+4)& (0+255),w,b
 17695  002738  6ED9               	movwf	fsr2l,c
 17696  00273A  0E00               	movlw	0
 17697  00273C  2165               	addwfc	(??_get_cluster+5)& (0+255),w,b
 17698  00273E  6EDA               	movwf	fsr2h,c
 17699  002740  50DF               	movf	indf2,w,c
 17700  002742  6F66               	movwf	(??_get_cluster+6)& (0+255),b
 17701  002744  5166               	movf	(??_get_cluster+6)& (0+255),w,b
 17702  002746  6F68               	movwf	(??_get_cluster+8)& (0+255),b
 17703  002748  6B67               	clrf	(??_get_cluster+7)& (0+255),b
 17704  00274A  5167               	movf	(??_get_cluster+7)& (0+255),w,b
 17705  00274C  1369               	iorwf	get_cluster@wc& (0+255),f,b
 17706  00274E  5168               	movf	(??_get_cluster+8)& (0+255),w,b
 17707  002750  136A               	iorwf	(get_cluster@wc+1)& (0+255),f,b
 17708                           
 17709                           ; BSR set to: 0
 17710                           ;tff.c: 173: return (clust & 1) ? (wc >> 4) : (wc & 0xFFF);
 17711  002752  B04A               	btfsc	get_cluster@clust^0,0,c
 17712  002754  D007               	goto	l10674
 17713                           
 17714                           ; BSR set to: 0
 17715  002756  0EFF               	movlw	255
 17716  002758  1569               	andwf	get_cluster@wc& (0+255),w,b
 17717  00275A  6E4A               	movwf	?_get_cluster^0,c
 17718  00275C  0E0F               	movlw	15
 17719  00275E  156A               	andwf	(get_cluster@wc+1)& (0+255),w,b
 17720  002760  6E4B               	movwf	(?_get_cluster+1)^0,c
 17721  002762  0012               	return	
 17722  002764                     l10674:
 17723                           
 17724                           ; BSR set to: 0
 17725  002764  C069  F060         	movff	get_cluster@wc,??_get_cluster
 17726  002768  C06A  F061         	movff	get_cluster@wc+1,??_get_cluster+1
 17727  00276C  0E04               	movlw	4
 17728  00276E  6F62               	movwf	(??_get_cluster+2)& (0+255),b
 17729  002770                     u11895:
 17730  002770  90D8               	bcf	status,0,c
 17731  002772  3361               	rrcf	(??_get_cluster+1)& (0+255),f,b
 17732  002774  3360               	rrcf	??_get_cluster& (0+255),f,b
 17733  002776  2F62               	decfsz	(??_get_cluster+2)& (0+255),f,b
 17734  002778  D7FB               	goto	u11895
 17735  00277A  C060  F04A         	movff	??_get_cluster,?_get_cluster
 17736  00277E  C061  F04B         	movff	??_get_cluster+1,?_get_cluster+1
 17737  002782  0012               	return	
 17738  002784                     l10678:
 17739                           
 17740                           ; BSR set to: 0
 17741                           ;tff.c: 176: if (!move_window(fatsect + clust / 256)) break;
 17742  002784  504B               	movf	(get_cluster@clust+1)^0,w,c
 17743  002786  256B               	addwf	get_cluster@fatsect& (0+255),w,b
 17744  002788  6E35               	movwf	move_window@sector^0,c
 17745  00278A  0E00               	movlw	0
 17746  00278C  216C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 17747  00278E  6E36               	movwf	(move_window@sector+1)^0,c
 17748  002790  0E00               	movlw	0
 17749  002792  216D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 17750  002794  6E37               	movwf	(move_window@sector+2)^0,c
 17751  002796  0E00               	movlw	0
 17752  002798  216E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 17753  00279A  6E38               	movwf	(move_window@sector+3)^0,c
 17754  00279C  EC15  F015         	call	_move_window	;wreg free
 17755  0027A0  0900               	iorlw	0
 17756  0027A2  B4D8               	btfsc	status,2,c
 17757  0027A4  D030               	goto	l10690
 17758                           
 17759                           ;tff.c: 177: return (WORD)(*(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U]));
 17760  0027A6  0EFF               	movlw	255
 17761  0027A8  0100               	movlb	0	; () banked
 17762  0027AA  6F60               	movwf	??_get_cluster& (0+255),b
 17763  0027AC  0E01               	movlw	1
 17764  0027AE  6F61               	movwf	(??_get_cluster+1)& (0+255),b
 17765  0027B0  C04A  F062         	movff	get_cluster@clust,??_get_cluster+2
 17766  0027B4  C04B  F063         	movff	get_cluster@clust+1,??_get_cluster+3
 17767  0027B8  90D8               	bcf	status,0,c
 17768  0027BA  3762               	rlcf	(??_get_cluster+2)& (0+255),f,b
 17769  0027BC  3763               	rlcf	(??_get_cluster+3)& (0+255),f,b
 17770  0027BE  5160               	movf	??_get_cluster& (0+255),w,b
 17771  0027C0  1762               	andwf	(??_get_cluster+2)& (0+255),f,b
 17772  0027C2  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17773  0027C4  1763               	andwf	(??_get_cluster+3)& (0+255),f,b
 17774  0027C6  C071  F064         	movff	get_cluster@fs,??_get_cluster+4
 17775  0027CA  C072  F065         	movff	get_cluster@fs+1,??_get_cluster+5
 17776  0027CE  5162               	movf	(??_get_cluster+2)& (0+255),w,b
 17777  0027D0  2764               	addwf	(??_get_cluster+4)& (0+255),f,b
 17778  0027D2  5163               	movf	(??_get_cluster+3)& (0+255),w,b
 17779  0027D4  2365               	addwfc	(??_get_cluster+5)& (0+255),f,b
 17780  0027D6  0E20               	movlw	32
 17781  0027D8  2564               	addwf	(??_get_cluster+4)& (0+255),w,b
 17782  0027DA  6ED9               	movwf	fsr2l,c
 17783  0027DC  0E00               	movlw	0
 17784  0027DE  2165               	addwfc	(??_get_cluster+5)& (0+255),w,b
 17785  0027E0  6EDA               	movwf	fsr2h,c
 17786  0027E2  CFDE F04A          	movff	postinc2,?_get_cluster
 17787  0027E6  CFDD F04B          	movff	postdec2,?_get_cluster+1
 17788  0027EA  0012               	return	
 17789  0027EC                     l10688:
 17790                           
 17791                           ; BSR set to: 0
 17792  0027EC  EE20 F01C          	lfsr	2,28
 17793  0027F0  5171               	movf	get_cluster@fs& (0+255),w,b
 17794  0027F2  26D9               	addwf	fsr2l,f,c
 17795  0027F4  5172               	movf	(get_cluster@fs+1)& (0+255),w,b
 17796  0027F6  22DA               	addwfc	fsr2h,f,c
 17797  0027F8  50DF               	movf	indf2,w,c
 17798                           
 17799                           ; Switch size 1, requested type "simple"
 17800                           ; Number of cases is 2, Range of values is 1 to 2
 17801                           ; switch strategies available:
 17802                           ; Name         Instructions Cycles
 17803                           ; simple_byte            7     4 (average)
 17804                           ;	Chosen strategy is simple_byte
 17805  0027FA  0A01               	xorlw	1	; case 1
 17806  0027FC  B4D8               	btfsc	status,2,c
 17807  0027FE  D719               	goto	l10654
 17808  002800  0A03               	xorlw	3	; case 2
 17809  002802  B4D8               	btfsc	status,2,c
 17810  002804  D7BF               	goto	l10678
 17811  002806                     l10690:
 17812                           
 17813                           ;tff.c: 184: };tff.c: 186: return 1;
 17814  002806  0E00               	movlw	0
 17815  002808  6E4B               	movwf	(?_get_cluster+1)^0,c
 17816  00280A  0E01               	movlw	1
 17817  00280C  6E4A               	movwf	?_get_cluster^0,c
 17818  00280E  0012               	return		;funcret
 17819  002810                     __end_of_get_cluster:
 17820                           	callstack 0
 17821                           
 17822 ;; *************** function ___lldiv *****************
 17823 ;; Defined at:
 17824 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
 17825 ;; Parameters:    Size  Location     Type
 17826 ;;  dividend        4    9[COMRAM] unsigned long 
 17827 ;;  divisor         4   13[COMRAM] unsigned long 
 17828 ;; Auto vars:     Size  Location     Type
 17829 ;;  quotient        4   17[COMRAM] unsigned long 
 17830 ;;  counter         1   21[COMRAM] unsigned char 
 17831 ;; Return value:  Size  Location     Type
 17832 ;;                  4    9[COMRAM] unsigned long 
 17833 ;; Registers used:
 17834 ;;		wreg, status,2, status,0
 17835 ;; Tracked objects:
 17836 ;;		On entry : 0/0
 17837 ;;		On exit  : 0/0
 17838 ;;		Unchanged: 0/0
 17839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17840 ;;      Params:         8       0       0       0       0       0       0       0       0
 17841 ;;      Locals:         5       0       0       0       0       0       0       0       0
 17842 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17843 ;;      Totals:        13       0       0       0       0       0       0       0       0
 17844 ;;Total ram usage:       13 bytes
 17845 ;; Hardware stack levels used:    1
 17846 ;; Hardware stack levels required when called:    2
 17847 ;; This function calls:
 17848 ;;		Nothing
 17849 ;; This function is called by:
 17850 ;;		_auto_mount
 17851 ;;		_f_lseek
 17852 ;;		_fprintf
 17853 ;;		_ultoa
 17854 ;; This function uses a non-reentrant model
 17855 ;;
 17856                           
 17857                           	psect	text96
 17858  0049E2                     __ptext96:
 17859                           	callstack 0
 17860  0049E2                     ___lldiv:
 17861                           	callstack 23
 17862                           
 17863                           ;incstack = 0
 17864  0049E2  0E00               	movlw	0
 17865  0049E4  6E12               	movwf	___lldiv@quotient^0,c
 17866  0049E6  0E00               	movlw	0
 17867  0049E8  6E13               	movwf	(___lldiv@quotient+1)^0,c
 17868  0049EA  0E00               	movlw	0
 17869  0049EC  6E14               	movwf	(___lldiv@quotient+2)^0,c
 17870  0049EE  0E00               	movlw	0
 17871  0049F0  6E15               	movwf	(___lldiv@quotient+3)^0,c
 17872  0049F2  500E               	movf	___lldiv@divisor^0,w,c
 17873  0049F4  100F               	iorwf	(___lldiv@divisor+1)^0,w,c
 17874  0049F6  1010               	iorwf	(___lldiv@divisor+2)^0,w,c
 17875  0049F8  1011               	iorwf	(___lldiv@divisor+3)^0,w,c
 17876  0049FA  B4D8               	btfsc	status,2,c
 17877  0049FC  D02A               	goto	l1772
 17878  0049FE  0E01               	movlw	1
 17879  004A00  6E16               	movwf	___lldiv@counter^0,c
 17880  004A02  D006               	goto	l11598
 17881  004A04                     l11596:
 17882  004A04  90D8               	bcf	status,0,c
 17883  004A06  360E               	rlcf	___lldiv@divisor^0,f,c
 17884  004A08  360F               	rlcf	(___lldiv@divisor+1)^0,f,c
 17885  004A0A  3610               	rlcf	(___lldiv@divisor+2)^0,f,c
 17886  004A0C  3611               	rlcf	(___lldiv@divisor+3)^0,f,c
 17887  004A0E  2A16               	incf	___lldiv@counter^0,f,c
 17888  004A10                     l11598:
 17889  004A10  AE11               	btfss	(___lldiv@divisor+3)^0,7,c
 17890  004A12  D7F8               	goto	l11596
 17891  004A14                     u13340:
 17892  004A14  90D8               	bcf	status,0,c
 17893  004A16  3612               	rlcf	___lldiv@quotient^0,f,c
 17894  004A18  3613               	rlcf	(___lldiv@quotient+1)^0,f,c
 17895  004A1A  3614               	rlcf	(___lldiv@quotient+2)^0,f,c
 17896  004A1C  3615               	rlcf	(___lldiv@quotient+3)^0,f,c
 17897  004A1E  500E               	movf	___lldiv@divisor^0,w,c
 17898  004A20  5C0A               	subwf	___lldiv@dividend^0,w,c
 17899  004A22  500F               	movf	(___lldiv@divisor+1)^0,w,c
 17900  004A24  580B               	subwfb	(___lldiv@dividend+1)^0,w,c
 17901  004A26  5010               	movf	(___lldiv@divisor+2)^0,w,c
 17902  004A28  580C               	subwfb	(___lldiv@dividend+2)^0,w,c
 17903  004A2A  5011               	movf	(___lldiv@divisor+3)^0,w,c
 17904  004A2C  580D               	subwfb	(___lldiv@dividend+3)^0,w,c
 17905  004A2E  A0D8               	btfss	status,0,c
 17906  004A30  D009               	goto	l11608
 17907  004A32  500E               	movf	___lldiv@divisor^0,w,c
 17908  004A34  5E0A               	subwf	___lldiv@dividend^0,f,c
 17909  004A36  500F               	movf	(___lldiv@divisor+1)^0,w,c
 17910  004A38  5A0B               	subwfb	(___lldiv@dividend+1)^0,f,c
 17911  004A3A  5010               	movf	(___lldiv@divisor+2)^0,w,c
 17912  004A3C  5A0C               	subwfb	(___lldiv@dividend+2)^0,f,c
 17913  004A3E  5011               	movf	(___lldiv@divisor+3)^0,w,c
 17914  004A40  5A0D               	subwfb	(___lldiv@dividend+3)^0,f,c
 17915  004A42  8012               	bsf	___lldiv@quotient^0,0,c
 17916  004A44                     l11608:
 17917  004A44  90D8               	bcf	status,0,c
 17918  004A46  3211               	rrcf	(___lldiv@divisor+3)^0,f,c
 17919  004A48  3210               	rrcf	(___lldiv@divisor+2)^0,f,c
 17920  004A4A  320F               	rrcf	(___lldiv@divisor+1)^0,f,c
 17921  004A4C  320E               	rrcf	___lldiv@divisor^0,f,c
 17922  004A4E  2E16               	decfsz	___lldiv@counter^0,f,c
 17923  004A50  D7E1               	goto	u13340
 17924  004A52                     l1772:
 17925  004A52  C012  F00A         	movff	___lldiv@quotient,?___lldiv
 17926  004A56  C013  F00B         	movff	___lldiv@quotient+1,?___lldiv+1
 17927  004A5A  C014  F00C         	movff	___lldiv@quotient+2,?___lldiv+2
 17928  004A5E  C015  F00D         	movff	___lldiv@quotient+3,?___lldiv+3
 17929  004A62  0012               	return		;funcret
 17930  004A64                     __end_of___lldiv:
 17931                           	callstack 0
 17932                           
 17933 ;; *************** function _f_close *****************
 17934 ;; Defined at:
 17935 ;;		line 1116 in file "bibliotecas/tff.c"
 17936 ;; Parameters:    Size  Location     Type
 17937 ;;  fp              2    9[BANK0 ] PTR struct _FIL
 17938 ;;		 -> fil(28), 
 17939 ;; Auto vars:     Size  Location     Type
 17940 ;;  res             1   75[COMRAM] enum E155
 17941 ;; Return value:  Size  Location     Type
 17942 ;;                  1    wreg      enum E3231
 17943 ;; Registers used:
 17944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17945 ;; Tracked objects:
 17946 ;;		On entry : 3F/0
 17947 ;;		On exit  : 0/0
 17948 ;;		Unchanged: 0/0
 17949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17950 ;;      Params:         0       2       0       0       0       0       0       0       0
 17951 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17952 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17953 ;;      Totals:         1       2       0       0       0       0       0       0       0
 17954 ;;Total ram usage:        3 bytes
 17955 ;; Hardware stack levels used:    1
 17956 ;; Hardware stack levels required when called:   10
 17957 ;; This function calls:
 17958 ;;		_f_sync
 17959 ;; This function is called by:
 17960 ;;		_escrita_sdcard
 17961 ;; This function uses a non-reentrant model
 17962 ;;
 17963                           
 17964                           	psect	text97
 17965  00582C                     __ptext97:
 17966                           	callstack 0
 17967  00582C                     _f_close:
 17968                           	callstack 16
 17969                           
 17970                           ; BSR set to: 0
 17971                           ;tff.c: 1120: FRESULT res;;tff.c: 1124: res = f_sync(fp);
 17972                           
 17973                           ;incstack = 0
 17974  00582C  C069  F060         	movff	f_close@fp,f_sync@fp
 17975  005830  C06A  F061         	movff	f_close@fp+1,f_sync@fp+1
 17976  005834  ECA5  F01B         	call	_f_sync	;wreg free
 17977  005838  6E4C               	movwf	f_close@res^0,c
 17978                           
 17979                           ;tff.c: 1128: if (res == FR_OK) fp->fs = (0);
 17980  00583A  504C               	movf	f_close@res^0,w,c
 17981  00583C  A4D8               	btfss	status,2,c
 17982  00583E  0012               	return	
 17983  005840  0100               	movlb	0	; () banked
 17984  005842  EE20 F004          	lfsr	2,4
 17985  005846  5169               	movf	f_close@fp& (0+255),w,b
 17986  005848  26D9               	addwf	fsr2l,f,c
 17987  00584A  516A               	movf	(f_close@fp+1)& (0+255),w,b
 17988  00584C  22DA               	addwfc	fsr2h,f,c
 17989  00584E  0E00               	movlw	0
 17990  005850  6EDE               	movwf	postinc2,c
 17991  005852  0E00               	movlw	0
 17992  005854  6EDD               	movwf	postdec2,c
 17993  005856  0012               	return		;funcret
 17994  005858                     __end_of_f_close:
 17995                           	callstack 0
 17996                           
 17997 ;; *************** function _f_sync *****************
 17998 ;; Defined at:
 17999 ;;		line 1077 in file "bibliotecas/tff.c"
 18000 ;; Parameters:    Size  Location     Type
 18001 ;;  fp              2    0[BANK0 ] PTR struct _FIL
 18002 ;;		 -> fil(28), 
 18003 ;; Auto vars:     Size  Location     Type
 18004 ;;  tim             4    2[BANK0 ] unsigned long 
 18005 ;;  dir             2    7[BANK0 ] PTR unsigned char 
 18006 ;;		 -> NULL(0), fs(544), 
 18007 ;;  res             1    6[BANK0 ] enum E155
 18008 ;; Return value:  Size  Location     Type
 18009 ;;                  1    wreg      enum E155
 18010 ;; Registers used:
 18011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18012 ;; Tracked objects:
 18013 ;;		On entry : 3F/0
 18014 ;;		On exit  : 0/0
 18015 ;;		Unchanged: 0/0
 18016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18017 ;;      Params:         0       2       0       0       0       0       0       0       0
 18018 ;;      Locals:         0       7       0       0       0       0       0       0       0
 18019 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18020 ;;      Totals:         0       9       0       0       0       0       0       0       0
 18021 ;;Total ram usage:        9 bytes
 18022 ;; Hardware stack levels used:    1
 18023 ;; Hardware stack levels required when called:    9
 18024 ;; This function calls:
 18025 ;;		_get_fattime
 18026 ;;		_move_window
 18027 ;;		_sync
 18028 ;;		_validate
 18029 ;; This function is called by:
 18030 ;;		_f_close
 18031 ;; This function uses a non-reentrant model
 18032 ;;
 18033                           
 18034                           	psect	text98
 18035  00374A                     __ptext98:
 18036                           	callstack 0
 18037  00374A                     _f_sync:
 18038                           	callstack 16
 18039                           
 18040                           ; BSR set to: 0
 18041                           ;tff.c: 1081: FRESULT res;;tff.c: 1082: DWORD tim;;tff.c: 1083: BYTE *dir;;tff.c: 1086: 
      +                          res = validate(fp->fs, fp->id);
 18042                           
 18043                           ;incstack = 0
 18044  00374A  EE20 F004          	lfsr	2,4
 18045  00374E  5160               	movf	f_sync@fp& (0+255),w,b
 18046  003750  26D9               	addwf	fsr2l,f,c
 18047  003752  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18048  003754  22DA               	addwfc	fsr2h,f,c
 18049  003756  CFDE F010          	movff	postinc2,validate@fs
 18050  00375A  CFDD F011          	movff	postdec2,validate@fs+1
 18051  00375E  C060  FFD9         	movff	f_sync@fp,fsr2l
 18052  003762  C061  FFDA         	movff	f_sync@fp+1,fsr2h
 18053  003766  CFDE F012          	movff	postinc2,validate@id
 18054  00376A  CFDD F013          	movff	postdec2,validate@id+1
 18055  00376E  ECC3  F029         	call	_validate	;wreg free
 18056  003772  0100               	movlb	0	; () banked
 18057  003774  6F66               	movwf	f_sync@res& (0+255),b
 18058                           
 18059                           ; BSR set to: 0
 18060                           ;tff.c: 1087: if (res == FR_OK) {
 18061  003776  5166               	movf	f_sync@res& (0+255),w,b
 18062  003778  A4D8               	btfss	status,2,c
 18063  00377A  D079               	goto	l12040
 18064                           
 18065                           ; BSR set to: 0
 18066                           ;tff.c: 1088: if (fp->flag & 0x20) {
 18067  00377C  EE20 F002          	lfsr	2,2
 18068  003780  5160               	movf	f_sync@fp& (0+255),w,b
 18069  003782  26D9               	addwf	fsr2l,f,c
 18070  003784  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18071  003786  22DA               	addwfc	fsr2h,f,c
 18072  003788  AADF               	btfss	indf2,5,c
 18073  00378A  D071               	goto	l12040
 18074                           
 18075                           ; BSR set to: 0
 18076                           ;tff.c: 1090: if (!move_window(fp->dir_sect))
 18077  00378C  EE20 F016          	lfsr	2,22
 18078  003790  5160               	movf	f_sync@fp& (0+255),w,b
 18079  003792  26D9               	addwf	fsr2l,f,c
 18080  003794  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18081  003796  22DA               	addwfc	fsr2h,f,c
 18082  003798  CFDE F035          	movff	postinc2,move_window@sector
 18083  00379C  CFDE F036          	movff	postinc2,move_window@sector+1
 18084  0037A0  CFDE F037          	movff	postinc2,move_window@sector+2
 18085  0037A4  CFDE F038          	movff	postinc2,move_window@sector+3
 18086  0037A8  EC15  F015         	call	_move_window	;wreg free
 18087  0037AC  0900               	iorlw	0
 18088  0037AE  A4D8               	btfss	status,2,c
 18089  0037B0  D002               	goto	l12026
 18090                           
 18091                           ;tff.c: 1091: return FR_RW_ERROR;
 18092  0037B2  0E08               	movlw	8
 18093  0037B4  0012               	return	
 18094  0037B6                     l12026:
 18095                           
 18096                           ;tff.c: 1092: dir = fp->dir_ptr;
 18097  0037B6  0100               	movlb	0	; () banked
 18098  0037B8  EE20 F01A          	lfsr	2,26
 18099  0037BC  5160               	movf	f_sync@fp& (0+255),w,b
 18100  0037BE  26D9               	addwf	fsr2l,f,c
 18101  0037C0  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18102  0037C2  22DA               	addwfc	fsr2h,f,c
 18103  0037C4  CFDE F067          	movff	postinc2,f_sync@dir
 18104  0037C8  CFDD F068          	movff	postdec2,f_sync@dir+1
 18105                           
 18106                           ;tff.c: 1093: dir[11] |= 0x20;
 18107  0037CC  EE20 F00B          	lfsr	2,11
 18108  0037D0  5167               	movf	f_sync@dir& (0+255),w,b
 18109  0037D2  26D9               	addwf	fsr2l,f,c
 18110  0037D4  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18111  0037D6  22DA               	addwfc	fsr2h,f,c
 18112  0037D8  0E00               	movlw	0
 18113  0037DA  8ADB               	bsf	plusw2,5,c
 18114                           
 18115                           ; BSR set to: 0
 18116                           ;tff.c: 1094: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(fp->fsize);
 18117  0037DC  EE20 F00A          	lfsr	2,10
 18118  0037E0  5160               	movf	f_sync@fp& (0+255),w,b
 18119  0037E2  26D9               	addwf	fsr2l,f,c
 18120  0037E4  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18121  0037E6  22DA               	addwfc	fsr2h,f,c
 18122  0037E8  EE10 F01C          	lfsr	1,28
 18123  0037EC  5167               	movf	f_sync@dir& (0+255),w,b
 18124  0037EE  26E1               	addwf	fsr1l,f,c
 18125  0037F0  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18126  0037F2  22E2               	addwfc	fsr1h,f,c
 18127  0037F4  CFDE FFE6          	movff	postinc2,postinc1
 18128  0037F8  CFDE FFE6          	movff	postinc2,postinc1
 18129  0037FC  CFDE FFE6          	movff	postinc2,postinc1
 18130  003800  CFDE FFE6          	movff	postinc2,postinc1
 18131                           
 18132                           ; BSR set to: 0
 18133                           ;tff.c: 1095: *(WORD*)(BYTE*)(&dir[26])=(WORD)(fp->org_clust);
 18134  003804  EE20 F00E          	lfsr	2,14
 18135  003808  5160               	movf	f_sync@fp& (0+255),w,b
 18136  00380A  26D9               	addwf	fsr2l,f,c
 18137  00380C  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18138  00380E  22DA               	addwfc	fsr2h,f,c
 18139  003810  EE10 F01A          	lfsr	1,26
 18140  003814  5167               	movf	f_sync@dir& (0+255),w,b
 18141  003816  26E1               	addwf	fsr1l,f,c
 18142  003818  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18143  00381A  22E2               	addwfc	fsr1h,f,c
 18144  00381C  CFDE FFE6          	movff	postinc2,postinc1
 18145  003820  CFDD FFE5          	movff	postdec2,postdec1
 18146                           
 18147                           ; BSR set to: 0
 18148                           ;tff.c: 1099: tim = get_fattime();
 18149  003824  EC55  F01A         	call	_get_fattime	;wreg free
 18150  003828  C00E  F062         	movff	?_get_fattime,f_sync@tim
 18151  00382C  C00F  F063         	movff	?_get_fattime+1,f_sync@tim+1
 18152  003830  C010  F064         	movff	?_get_fattime+2,f_sync@tim+2
 18153  003834  C011  F065         	movff	?_get_fattime+3,f_sync@tim+3
 18154                           
 18155                           ; BSR set to: 1
 18156                           ;tff.c: 1100: *(DWORD*)(BYTE*)(&dir[22])=(DWORD)(tim);
 18157  003838  0100               	movlb	0	; () banked
 18158  00383A  EE20 F016          	lfsr	2,22
 18159  00383E  5167               	movf	f_sync@dir& (0+255),w,b
 18160  003840  26D9               	addwf	fsr2l,f,c
 18161  003842  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18162  003844  22DA               	addwfc	fsr2h,f,c
 18163  003846  C062  FFDE         	movff	f_sync@tim,postinc2
 18164  00384A  C063  FFDE         	movff	f_sync@tim+1,postinc2
 18165  00384E  C064  FFDE         	movff	f_sync@tim+2,postinc2
 18166  003852  C065  FFDE         	movff	f_sync@tim+3,postinc2
 18167                           
 18168                           ; BSR set to: 0
 18169                           ;tff.c: 1101: fp->flag &= (BYTE)~0x20;
 18170  003856  EE20 F002          	lfsr	2,2
 18171  00385A  5160               	movf	f_sync@fp& (0+255),w,b
 18172  00385C  26D9               	addwf	fsr2l,f,c
 18173  00385E  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18174  003860  22DA               	addwfc	fsr2h,f,c
 18175  003862  0EDF               	movlw	223
 18176  003864  16DF               	andwf	indf2,f,c
 18177                           
 18178                           ; BSR set to: 0
 18179                           ;tff.c: 1102: res = sync();
 18180  003866  ECE0  F028         	call	_sync	;wreg free
 18181  00386A  0100               	movlb	0	; () banked
 18182  00386C  6F66               	movwf	f_sync@res& (0+255),b
 18183  00386E                     l12040:
 18184                           
 18185                           ; BSR set to: 0
 18186                           ;tff.c: 1103: };tff.c: 1104: };tff.c: 1105: return res;
 18187  00386E  5166               	movf	f_sync@res& (0+255),w,b
 18188  003870  0012               	return		;funcret
 18189  003872                     __end_of_f_sync:
 18190                           	callstack 0
 18191                           
 18192 ;; *************** function _validate *****************
 18193 ;; Defined at:
 18194 ;;		line 767 in file "bibliotecas/tff.c"
 18195 ;; Parameters:    Size  Location     Type
 18196 ;;  fs              2   15[COMRAM] PTR const struct _FATFS
 18197 ;;		 -> NULL(0), fs(544), 
 18198 ;;  id              2   17[COMRAM] unsigned short 
 18199 ;; Auto vars:     Size  Location     Type
 18200 ;;		None
 18201 ;; Return value:  Size  Location     Type
 18202 ;;                  1    wreg      enum E155
 18203 ;; Registers used:
 18204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18205 ;; Tracked objects:
 18206 ;;		On entry : 3F/0
 18207 ;;		On exit  : 0/0
 18208 ;;		Unchanged: 0/0
 18209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18210 ;;      Params:         4       0       0       0       0       0       0       0       0
 18211 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18212 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18213 ;;      Totals:         6       0       0       0       0       0       0       0       0
 18214 ;;Total ram usage:        6 bytes
 18215 ;; Hardware stack levels used:    1
 18216 ;; Hardware stack levels required when called:    4
 18217 ;; This function calls:
 18218 ;;		_disk_status
 18219 ;; This function is called by:
 18220 ;;		_f_write
 18221 ;;		_f_sync
 18222 ;;		_f_lseek
 18223 ;;		_f_read
 18224 ;; This function uses a non-reentrant model
 18225 ;;
 18226                           
 18227                           	psect	text99
 18228  005386                     __ptext99:
 18229                           	callstack 0
 18230  005386                     _validate:
 18231                           	callstack 18
 18232                           
 18233                           ; BSR set to: 0
 18234                           ;tff.c: 772: if (!fs || !fs->fs_type || fs->id != id)
 18235                           
 18236                           ;incstack = 0
 18237  005386  5010               	movf	validate@fs^0,w,c
 18238  005388  1011               	iorwf	(validate@fs+1)^0,w,c
 18239  00538A  B4D8               	btfsc	status,2,c
 18240  00538C  D014               	goto	u12220
 18241                           
 18242                           ; BSR set to: 0
 18243  00538E  EE20 F01C          	lfsr	2,28
 18244  005392  5010               	movf	validate@fs^0,w,c
 18245  005394  26D9               	addwf	fsr2l,f,c
 18246  005396  5011               	movf	(validate@fs+1)^0,w,c
 18247  005398  22DA               	addwfc	fsr2h,f,c
 18248  00539A  50DF               	movf	indf2,w,c
 18249  00539C  B4D8               	btfsc	status,2,c
 18250  00539E  D00B               	goto	u12220
 18251                           
 18252                           ; BSR set to: 0
 18253  0053A0  C010  FFD9         	movff	validate@fs,fsr2l
 18254  0053A4  C011  FFDA         	movff	validate@fs+1,fsr2h
 18255  0053A8  5012               	movf	validate@id^0,w,c
 18256  0053AA  18DE               	xorwf	postinc2,w,c
 18257  0053AC  E104               	bnz	u12220
 18258  0053AE  5013               	movf	(validate@id+1)^0,w,c
 18259  0053B0  18DE               	xorwf	postinc2,w,c
 18260  0053B2  B4D8               	btfsc	status,2,c
 18261  0053B4  D002               	goto	l10894
 18262  0053B6                     u12220:
 18263                           
 18264                           ; BSR set to: 0
 18265                           ;tff.c: 773: return FR_INVALID_OBJECT;
 18266  0053B6  0E0C               	movlw	12
 18267  0053B8  0012               	return	
 18268  0053BA                     l10894:
 18269                           
 18270                           ; BSR set to: 0
 18271                           ;tff.c: 774: if (disk_status(0) & 0x01)
 18272  0053BA  0E00               	movlw	0
 18273  0053BC  ECA3  F02B         	call	_disk_status
 18274  0053C0  6E14               	movwf	??_validate^0,c
 18275  0053C2  A014               	btfss	??_validate^0,0,c
 18276  0053C4  D002               	goto	l10900
 18277                           
 18278                           ;tff.c: 775: return FR_NOT_READY;
 18279  0053C6  0E01               	movlw	1
 18280  0053C8  0012               	return	
 18281  0053CA                     l10900:
 18282                           
 18283                           ;tff.c: 777: return FR_OK;
 18284  0053CA  0E00               	movlw	0
 18285  0053CC  0012               	return		;funcret
 18286  0053CE                     __end_of_validate:
 18287                           	callstack 0
 18288                           
 18289 ;; *************** function _disk_status *****************
 18290 ;; Defined at:
 18291 ;;		line 27 in file "bibliotecas/diskio.c"
 18292 ;; Parameters:    Size  Location     Type
 18293 ;;  pdrv            1    wreg     unsigned char 
 18294 ;; Auto vars:     Size  Location     Type
 18295 ;;  pdrv            1   13[COMRAM] unsigned char 
 18296 ;;  result          2    0        int 
 18297 ;;  stat            1   14[COMRAM] unsigned char 
 18298 ;; Return value:  Size  Location     Type
 18299 ;;                  1    wreg      unsigned char 
 18300 ;; Registers used:
 18301 ;;		wreg, status,2, status,0, cstack
 18302 ;; Tracked objects:
 18303 ;;		On entry : 3F/0
 18304 ;;		On exit  : 0/0
 18305 ;;		Unchanged: 0/0
 18306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18307 ;;      Params:         0       0       0       0       0       0       0       0       0
 18308 ;;      Locals:         4       0       0       0       0       0       0       0       0
 18309 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18310 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18311 ;;Total ram usage:        4 bytes
 18312 ;; Hardware stack levels used:    1
 18313 ;; Hardware stack levels required when called:    3
 18314 ;; This function calls:
 18315 ;;		_sdc_disk_status
 18316 ;; This function is called by:
 18317 ;;		_auto_mount
 18318 ;;		_validate
 18319 ;; This function uses a non-reentrant model
 18320 ;;
 18321                           
 18322                           	psect	text100
 18323  005746                     __ptext100:
 18324                           	callstack 0
 18325  005746                     _disk_status:
 18326                           	callstack 18
 18327                           
 18328                           ;incstack = 0
 18329                           ;disk_status@pdrv stored from wreg
 18330  005746  6E0E               	movwf	disk_status@pdrv^0,c
 18331                           
 18332                           ;diskio.c: 31: DSTATUS stat;;diskio.c: 32: int result;;diskio.c: 34: switch (pdrv) {
 18333  005748  D00A               	goto	l10604
 18334  00574A                     l10586:
 18335                           
 18336                           ;diskio.c: 36: stat = sdc_disk_status(pdrv);
 18337  00574A  500E               	movf	disk_status@pdrv^0,w,c
 18338  00574C  ECCA  F02D         	call	_sdc_disk_status
 18339  005750  6E0F               	movwf	disk_status@stat^0,c
 18340  005752                     l10588:
 18341                           
 18342                           ;diskio.c: 39: return stat;
 18343  005752  500F               	movf	disk_status@stat^0,w,c
 18344  005754  0012               	return	
 18345  005756                     l10592:
 18346  005756  500E               	movf	disk_status@pdrv^0,w,c
 18347  005758  ECCA  F02D         	call	_sdc_disk_status
 18348  00575C  D7FA               	goto	l10588
 18349  00575E                     l10604:
 18350  00575E  500E               	movf	disk_status@pdrv^0,w,c
 18351                           
 18352                           ; Switch size 1, requested type "simple"
 18353                           ; Number of cases is 3, Range of values is 0 to 2
 18354                           ; switch strategies available:
 18355                           ; Name         Instructions Cycles
 18356                           ; simple_byte           10     6 (average)
 18357                           ;	Chosen strategy is simple_byte
 18358  005760  0A00               	xorlw	0	; case 0
 18359  005762  B4D8               	btfsc	status,2,c
 18360  005764  D7F2               	goto	l10586
 18361  005766  0A01               	xorlw	1	; case 1
 18362  005768  B4D8               	btfsc	status,2,c
 18363  00576A  D7F5               	goto	l10592
 18364  00576C  0A03               	xorlw	3	; case 2
 18365  00576E  B4D8               	btfsc	status,2,c
 18366  005770  D7F0               	goto	l10588
 18367                           
 18368                           ;diskio.c: 50: return 0x01;
 18369  005772  0E01               	movlw	1
 18370  005774  0012               	return		;funcret
 18371  005776                     __end_of_disk_status:
 18372                           	callstack 0
 18373                           
 18374 ;; *************** function _sdc_disk_status *****************
 18375 ;; Defined at:
 18376 ;;		line 588 in file "bibliotecas/diskio.c"
 18377 ;; Parameters:    Size  Location     Type
 18378 ;;  pdrv            1    wreg     unsigned char 
 18379 ;; Auto vars:     Size  Location     Type
 18380 ;;  pdrv            1   10[COMRAM] unsigned char 
 18381 ;;  stat            1    0        unsigned char 
 18382 ;;  cont            1    0        unsigned char 
 18383 ;;  buff            1    0        unsigned char 
 18384 ;; Return value:  Size  Location     Type
 18385 ;;                  1    wreg      unsigned char 
 18386 ;; Registers used:
 18387 ;;		wreg, status,2
 18388 ;; Tracked objects:
 18389 ;;		On entry : 0/0
 18390 ;;		On exit  : 0/0
 18391 ;;		Unchanged: 0/0
 18392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18393 ;;      Params:         0       0       0       0       0       0       0       0       0
 18394 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18395 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18396 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18397 ;;Total ram usage:        2 bytes
 18398 ;; Hardware stack levels used:    1
 18399 ;; Hardware stack levels required when called:    2
 18400 ;; This function calls:
 18401 ;;		Nothing
 18402 ;; This function is called by:
 18403 ;;		_disk_status
 18404 ;; This function uses a non-reentrant model
 18405 ;;
 18406                           
 18407                           	psect	text101
 18408  005B94                     __ptext101:
 18409                           	callstack 0
 18410  005B94                     _sdc_disk_status:
 18411                           	callstack 18
 18412                           
 18413                           ;incstack = 0
 18414                           ;sdc_disk_status@pdrv stored from wreg
 18415  005B94  6E0B               	movwf	sdc_disk_status@pdrv^0,c
 18416                           
 18417                           ;diskio.c: 591: unsigned char buff, cont;;diskio.c: 593: if (pdrv != 0) return 0x01;
 18418  005B96  500B               	movf	sdc_disk_status@pdrv^0,w,c
 18419  005B98  B4D8               	btfsc	status,2,c
 18420  005B9A  D002               	goto	l10462
 18421  005B9C  0E01               	movlw	1
 18422  005B9E  0012               	return	
 18423  005BA0                     l10462:
 18424                           
 18425                           ;diskio.c: 595: return FR_OK;
 18426  005BA0  0E00               	movlw	0
 18427  005BA2  0012               	return		;funcret
 18428  005BA4                     __end_of_sdc_disk_status:
 18429                           	callstack 0
 18430                           
 18431 ;; *************** function _sync *****************
 18432 ;; Defined at:
 18433 ;;		line 119 in file "bibliotecas/tff.c"
 18434 ;; Parameters:    Size  Location     Type
 18435 ;;		None
 18436 ;; Auto vars:     Size  Location     Type
 18437 ;;  fs              2   73[COMRAM] PTR struct _FATFS
 18438 ;;		 -> NULL(0), fs(544), 
 18439 ;; Return value:  Size  Location     Type
 18440 ;;                  1    wreg      enum E155
 18441 ;; Registers used:
 18442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18443 ;; Tracked objects:
 18444 ;;		On entry : 3F/0
 18445 ;;		On exit  : 0/0
 18446 ;;		Unchanged: 0/0
 18447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18448 ;;      Params:         0       0       0       0       0       0       0       0       0
 18449 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18450 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18451 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18452 ;;Total ram usage:        2 bytes
 18453 ;; Hardware stack levels used:    1
 18454 ;; Hardware stack levels required when called:    8
 18455 ;; This function calls:
 18456 ;;		_disk_ioctl
 18457 ;;		_move_window
 18458 ;; This function is called by:
 18459 ;;		_f_sync
 18460 ;; This function uses a non-reentrant model
 18461 ;;
 18462                           
 18463                           	psect	text102
 18464  0051C0                     __ptext102:
 18465                           	callstack 0
 18466  0051C0                     _sync:
 18467                           	callstack 16
 18468                           
 18469                           ; BSR set to: 0
 18470                           ;tff.c: 121: FATFS *fs = FatFs;
 18471                           
 18472                           ;incstack = 0
 18473  0051C0  C04D  F04A         	movff	_FatFs,sync@fs
 18474  0051C4  C04E  F04B         	movff	_FatFs+1,sync@fs+1
 18475                           
 18476                           ; BSR set to: 0
 18477                           ;tff.c: 124: fs->winflag = 1;
 18478  0051C8  EE20 F01F          	lfsr	2,31
 18479  0051CC  504A               	movf	sync@fs^0,w,c
 18480  0051CE  26D9               	addwf	fsr2l,f,c
 18481  0051D0  504B               	movf	(sync@fs+1)^0,w,c
 18482  0051D2  22DA               	addwfc	fsr2h,f,c
 18483  0051D4  0E01               	movlw	1
 18484  0051D6  6EDF               	movwf	indf2,c
 18485                           
 18486                           ; BSR set to: 0
 18487                           ;tff.c: 125: if (!move_window(0)) return FR_RW_ERROR;
 18488  0051D8  0E00               	movlw	0
 18489  0051DA  6E35               	movwf	move_window@sector^0,c
 18490  0051DC  0E00               	movlw	0
 18491  0051DE  6E36               	movwf	(move_window@sector+1)^0,c
 18492  0051E0  0E00               	movlw	0
 18493  0051E2  6E37               	movwf	(move_window@sector+2)^0,c
 18494  0051E4  0E00               	movlw	0
 18495  0051E6  6E38               	movwf	(move_window@sector+3)^0,c
 18496  0051E8  EC15  F015         	call	_move_window	;wreg free
 18497  0051EC  0900               	iorlw	0
 18498  0051EE  A4D8               	btfss	status,2,c
 18499  0051F0  D002               	goto	l11336
 18500  0051F2                     u12850:
 18501  0051F2  0E08               	movlw	8
 18502  0051F4  0012               	return	
 18503  0051F6                     l11336:
 18504                           
 18505                           ;tff.c: 141: if (disk_ioctl(0, 0, (0)) != RES_OK)
 18506  0051F6  0E00               	movlw	0
 18507  0051F8  6E0A               	movwf	disk_ioctl@cmd^0,c
 18508  0051FA  0E00               	movlw	0
 18509  0051FC  6E0B               	movwf	disk_ioctl@buff^0,c
 18510  0051FE  0E00               	movlw	0
 18511  005200  6E0C               	movwf	(disk_ioctl@buff+1)^0,c
 18512  005202  0E00               	movlw	0
 18513  005204  EC4E  F02D         	call	_disk_ioctl
 18514  005208  0900               	iorlw	0
 18515  00520A  A4D8               	btfss	status,2,c
 18516  00520C  D7F2               	goto	u12850
 18517                           
 18518                           ;tff.c: 143: return FR_OK;
 18519  00520E  0E00               	movlw	0
 18520  005210  0012               	return		;funcret
 18521  005212                     __end_of_sync:
 18522                           	callstack 0
 18523                           
 18524 ;; *************** function _move_window *****************
 18525 ;; Defined at:
 18526 ;;		line 77 in file "bibliotecas/tff.c"
 18527 ;; Parameters:    Size  Location     Type
 18528 ;;  sector          4   52[COMRAM] unsigned long 
 18529 ;; Auto vars:     Size  Location     Type
 18530 ;;  n               1   66[COMRAM] unsigned char 
 18531 ;;  wsect           4   67[COMRAM] unsigned long 
 18532 ;;  fs              2   71[COMRAM] PTR struct _FATFS
 18533 ;;		 -> NULL(0), fs(544), 
 18534 ;; Return value:  Size  Location     Type
 18535 ;;                  1    wreg      enum E105
 18536 ;; Registers used:
 18537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18538 ;; Tracked objects:
 18539 ;;		On entry : 0/0
 18540 ;;		On exit  : 0/0
 18541 ;;		Unchanged: 0/0
 18542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18543 ;;      Params:         4       0       0       0       0       0       0       0       0
 18544 ;;      Locals:         7       0       0       0       0       0       0       0       0
 18545 ;;      Temps:         10       0       0       0       0       0       0       0       0
 18546 ;;      Totals:        21       0       0       0       0       0       0       0       0
 18547 ;;Total ram usage:       21 bytes
 18548 ;; Hardware stack levels used:    1
 18549 ;; Hardware stack levels required when called:    7
 18550 ;; This function calls:
 18551 ;;		_disk_read
 18552 ;;		_disk_write
 18553 ;; This function is called by:
 18554 ;;		_sync
 18555 ;;		_get_cluster
 18556 ;;		_put_cluster
 18557 ;;		_trace_path
 18558 ;;		_reserve_direntry
 18559 ;;		_f_open
 18560 ;;		_f_write
 18561 ;;		_f_sync
 18562 ;;		_f_read
 18563 ;; This function uses a non-reentrant model
 18564 ;;
 18565                           
 18566                           	psect	text103
 18567  002A2A                     __ptext103:
 18568                           	callstack 0
 18569  002A2A                     _move_window:
 18570                           	callstack 15
 18571                           
 18572                           ;tff.c: 81: DWORD wsect;;tff.c: 82: FATFS *fs = FatFs;
 18573                           
 18574                           ;incstack = 0
 18575  002A2A  C04D  F048         	movff	_FatFs,move_window@fs
 18576  002A2E  C04E  F049         	movff	_FatFs+1,move_window@fs+1
 18577                           
 18578                           ;tff.c: 85: wsect = fs->winsect;
 18579  002A32  EE20 F004          	lfsr	2,4
 18580  002A36  5048               	movf	move_window@fs^0,w,c
 18581  002A38  26D9               	addwf	fsr2l,f,c
 18582  002A3A  5049               	movf	(move_window@fs+1)^0,w,c
 18583  002A3C  22DA               	addwfc	fsr2h,f,c
 18584  002A3E  CFDE F044          	movff	postinc2,move_window@wsect
 18585  002A42  CFDE F045          	movff	postinc2,move_window@wsect+1
 18586  002A46  CFDE F046          	movff	postinc2,move_window@wsect+2
 18587  002A4A  CFDE F047          	movff	postinc2,move_window@wsect+3
 18588                           
 18589                           ;tff.c: 86: if (wsect != sector) {
 18590  002A4E  5035               	movf	move_window@sector^0,w,c
 18591  002A50  1844               	xorwf	move_window@wsect^0,w,c
 18592  002A52  E10A               	bnz	u11710
 18593  002A54  5036               	movf	(move_window@sector+1)^0,w,c
 18594  002A56  1845               	xorwf	(move_window@wsect+1)^0,w,c
 18595  002A58  E107               	bnz	u11710
 18596  002A5A  5037               	movf	(move_window@sector+2)^0,w,c
 18597  002A5C  1846               	xorwf	(move_window@wsect+2)^0,w,c
 18598  002A5E  E104               	bnz	u11710
 18599  002A60  5038               	movf	(move_window@sector+3)^0,w,c
 18600  002A62  1847               	xorwf	(move_window@wsect+3)^0,w,c
 18601  002A64  B4D8               	btfsc	status,2,c
 18602  002A66  D0B4               	goto	l10574
 18603  002A68                     u11710:
 18604                           
 18605                           ;tff.c: 88: BYTE n;;tff.c: 89: if (fs->winflag) {
 18606  002A68  EE20 F01F          	lfsr	2,31
 18607  002A6C  5048               	movf	move_window@fs^0,w,c
 18608  002A6E  26D9               	addwf	fsr2l,f,c
 18609  002A70  5049               	movf	(move_window@fs+1)^0,w,c
 18610  002A72  22DA               	addwfc	fsr2h,f,c
 18611  002A74  50DF               	movf	indf2,w,c
 18612  002A76  B4D8               	btfsc	status,2,c
 18613  002A78  D081               	goto	l10564
 18614                           
 18615                           ;tff.c: 90: if (disk_write(0, fs->win, wsect, 1) != RES_OK)
 18616  002A7A  0E20               	movlw	32
 18617  002A7C  2448               	addwf	move_window@fs^0,w,c
 18618  002A7E  6E29               	movwf	disk_write@buff^0,c
 18619  002A80  0E00               	movlw	0
 18620  002A82  2049               	addwfc	(move_window@fs+1)^0,w,c
 18621  002A84  6E2A               	movwf	(disk_write@buff+1)^0,c
 18622  002A86  C044  F02B         	movff	move_window@wsect,disk_write@sector
 18623  002A8A  C045  F02C         	movff	move_window@wsect+1,disk_write@sector+1
 18624  002A8E  C046  F02D         	movff	move_window@wsect+2,disk_write@sector+2
 18625  002A92  C047  F02E         	movff	move_window@wsect+3,disk_write@sector+3
 18626  002A96  0E01               	movlw	1
 18627  002A98  6E2F               	movwf	disk_write@count^0,c
 18628  002A9A  0E00               	movlw	0
 18629  002A9C  EC31  F029         	call	_disk_write
 18630  002AA0  0900               	iorlw	0
 18631  002AA2  B4D8               	btfsc	status,2,c
 18632  002AA4  D002               	goto	l10548
 18633  002AA6                     u11730:
 18634                           
 18635                           ;tff.c: 91: return FALSE;
 18636  002AA6  0E00               	movlw	0
 18637  002AA8  0012               	return	
 18638  002AAA                     l10548:
 18639                           
 18640                           ;tff.c: 92: fs->winflag = 0;
 18641  002AAA  EE20 F01F          	lfsr	2,31
 18642  002AAE  5048               	movf	move_window@fs^0,w,c
 18643  002AB0  26D9               	addwf	fsr2l,f,c
 18644  002AB2  5049               	movf	(move_window@fs+1)^0,w,c
 18645  002AB4  22DA               	addwfc	fsr2h,f,c
 18646  002AB6  0E00               	movlw	0
 18647  002AB8  6EDF               	movwf	indf2,c
 18648                           
 18649                           ;tff.c: 93: if (wsect < (fs->fatbase + fs->sects_fat)) {
 18650  002ABA  EE20 F008          	lfsr	2,8
 18651  002ABE  5048               	movf	move_window@fs^0,w,c
 18652  002AC0  26D9               	addwf	fsr2l,f,c
 18653  002AC2  5049               	movf	(move_window@fs+1)^0,w,c
 18654  002AC4  22DA               	addwfc	fsr2h,f,c
 18655  002AC6  CFDE F039          	movff	postinc2,??_move_window
 18656  002ACA  CFDE F03A          	movff	postinc2,??_move_window+1
 18657  002ACE  CFDE F03B          	movff	postinc2,??_move_window+2
 18658  002AD2  CFDE F03C          	movff	postinc2,??_move_window+3
 18659  002AD6  EE20 F014          	lfsr	2,20
 18660  002ADA  5048               	movf	move_window@fs^0,w,c
 18661  002ADC  26D9               	addwf	fsr2l,f,c
 18662  002ADE  5049               	movf	(move_window@fs+1)^0,w,c
 18663  002AE0  22DA               	addwfc	fsr2h,f,c
 18664  002AE2  CFDE F03D          	movff	postinc2,??_move_window+4
 18665  002AE6  CFDD F03E          	movff	postdec2,??_move_window+5
 18666  002AEA  503D               	movf	(??_move_window+4)^0,w,c
 18667  002AEC  2439               	addwf	??_move_window^0,w,c
 18668  002AEE  6E3F               	movwf	(??_move_window+6)^0,c
 18669  002AF0  503E               	movf	(??_move_window+5)^0,w,c
 18670  002AF2  203A               	addwfc	(??_move_window+1)^0,w,c
 18671  002AF4  6E40               	movwf	(??_move_window+7)^0,c
 18672  002AF6  0E00               	movlw	0
 18673  002AF8  203B               	addwfc	(??_move_window+2)^0,w,c
 18674  002AFA  6E41               	movwf	(??_move_window+8)^0,c
 18675  002AFC  0E00               	movlw	0
 18676  002AFE  203C               	addwfc	(??_move_window+3)^0,w,c
 18677  002B00  6E42               	movwf	(??_move_window+9)^0,c
 18678  002B02  503F               	movf	(??_move_window+6)^0,w,c
 18679  002B04  5C44               	subwf	move_window@wsect^0,w,c
 18680  002B06  5040               	movf	(??_move_window+7)^0,w,c
 18681  002B08  5845               	subwfb	(move_window@wsect+1)^0,w,c
 18682  002B0A  5041               	movf	(??_move_window+8)^0,w,c
 18683  002B0C  5846               	subwfb	(move_window@wsect+2)^0,w,c
 18684  002B0E  5042               	movf	(??_move_window+9)^0,w,c
 18685  002B10  5847               	subwfb	(move_window@wsect+3)^0,w,c
 18686  002B12  B0D8               	btfsc	status,0,c
 18687  002B14  D033               	goto	l10564
 18688                           
 18689                           ;tff.c: 94: for (n = fs->n_fats; n >= 2; n--) {
 18690  002B16  EE20 F01E          	lfsr	2,30
 18691  002B1A  5048               	movf	move_window@fs^0,w,c
 18692  002B1C  26D9               	addwf	fsr2l,f,c
 18693  002B1E  5049               	movf	(move_window@fs+1)^0,w,c
 18694  002B20  22DA               	addwfc	fsr2h,f,c
 18695  002B22  50DF               	movf	indf2,w,c
 18696  002B24  6E43               	movwf	move_window@n^0,c
 18697  002B26                     l10552:
 18698  002B26  0E02               	movlw	2
 18699  002B28  6043               	cpfslt	move_window@n^0,c
 18700  002B2A  D001               	goto	l10556
 18701  002B2C  D027               	goto	l10564
 18702  002B2E                     l10556:
 18703                           
 18704                           ;tff.c: 95: wsect += fs->sects_fat;
 18705  002B2E  EE20 F014          	lfsr	2,20
 18706  002B32  5048               	movf	move_window@fs^0,w,c
 18707  002B34  26D9               	addwf	fsr2l,f,c
 18708  002B36  5049               	movf	(move_window@fs+1)^0,w,c
 18709  002B38  22DA               	addwfc	fsr2h,f,c
 18710  002B3A  CFDE F039          	movff	postinc2,??_move_window
 18711  002B3E  CFDD F03A          	movff	postdec2,??_move_window+1
 18712  002B42  5039               	movf	??_move_window^0,w,c
 18713  002B44  2644               	addwf	move_window@wsect^0,f,c
 18714  002B46  503A               	movf	(??_move_window+1)^0,w,c
 18715  002B48  2245               	addwfc	(move_window@wsect+1)^0,f,c
 18716  002B4A  0E00               	movlw	0
 18717  002B4C  2246               	addwfc	(move_window@wsect+2)^0,f,c
 18718  002B4E  0E00               	movlw	0
 18719  002B50  2247               	addwfc	(move_window@wsect+3)^0,f,c
 18720                           
 18721                           ;tff.c: 96: disk_write(0, fs->win, wsect, 1);
 18722  002B52  0E20               	movlw	32
 18723  002B54  2448               	addwf	move_window@fs^0,w,c
 18724  002B56  6E29               	movwf	disk_write@buff^0,c
 18725  002B58  0E00               	movlw	0
 18726  002B5A  2049               	addwfc	(move_window@fs+1)^0,w,c
 18727  002B5C  6E2A               	movwf	(disk_write@buff+1)^0,c
 18728  002B5E  C044  F02B         	movff	move_window@wsect,disk_write@sector
 18729  002B62  C045  F02C         	movff	move_window@wsect+1,disk_write@sector+1
 18730  002B66  C046  F02D         	movff	move_window@wsect+2,disk_write@sector+2
 18731  002B6A  C047  F02E         	movff	move_window@wsect+3,disk_write@sector+3
 18732  002B6E  0E01               	movlw	1
 18733  002B70  6E2F               	movwf	disk_write@count^0,c
 18734  002B72  0E00               	movlw	0
 18735  002B74  EC31  F029         	call	_disk_write
 18736  002B78  0643               	decf	move_window@n^0,f,c
 18737  002B7A  D7D5               	goto	l10552
 18738  002B7C                     l10564:
 18739                           
 18740                           ;tff.c: 97: };tff.c: 98: };tff.c: 99: };tff.c: 101: if (sector) {
 18741  002B7C  5035               	movf	move_window@sector^0,w,c
 18742  002B7E  1036               	iorwf	(move_window@sector+1)^0,w,c
 18743  002B80  1037               	iorwf	(move_window@sector+2)^0,w,c
 18744  002B82  1038               	iorwf	(move_window@sector+3)^0,w,c
 18745  002B84  B4D8               	btfsc	status,2,c
 18746  002B86  D024               	goto	l10574
 18747                           
 18748                           ;tff.c: 102: if (disk_read(0, fs->win, sector, 1) != RES_OK)
 18749  002B88  0E20               	movlw	32
 18750  002B8A  2448               	addwf	move_window@fs^0,w,c
 18751  002B8C  6E29               	movwf	disk_read@buff^0,c
 18752  002B8E  0E00               	movlw	0
 18753  002B90  2049               	addwfc	(move_window@fs+1)^0,w,c
 18754  002B92  6E2A               	movwf	(disk_read@buff+1)^0,c
 18755  002B94  C035  F02B         	movff	move_window@sector,disk_read@sector
 18756  002B98  C036  F02C         	movff	move_window@sector+1,disk_read@sector+1
 18757  002B9C  C037  F02D         	movff	move_window@sector+2,disk_read@sector+2
 18758  002BA0  C038  F02E         	movff	move_window@sector+3,disk_read@sector+3
 18759  002BA4  0E01               	movlw	1
 18760  002BA6  6E2F               	movwf	disk_read@count^0,c
 18761  002BA8  0E00               	movlw	0
 18762  002BAA  EC1F  F026         	call	_disk_read
 18763  002BAE  0900               	iorlw	0
 18764  002BB0  A4D8               	btfss	status,2,c
 18765  002BB2  D779               	goto	u11730
 18766                           
 18767                           ;tff.c: 104: fs->winsect = sector;
 18768  002BB4  EE20 F004          	lfsr	2,4
 18769  002BB8  5048               	movf	move_window@fs^0,w,c
 18770  002BBA  26D9               	addwf	fsr2l,f,c
 18771  002BBC  5049               	movf	(move_window@fs+1)^0,w,c
 18772  002BBE  22DA               	addwfc	fsr2h,f,c
 18773  002BC0  C035  FFDE         	movff	move_window@sector,postinc2
 18774  002BC4  C036  FFDE         	movff	move_window@sector+1,postinc2
 18775  002BC8  C037  FFDE         	movff	move_window@sector+2,postinc2
 18776  002BCC  C038  FFDE         	movff	move_window@sector+3,postinc2
 18777  002BD0                     l10574:
 18778                           
 18779                           ;tff.c: 105: };tff.c: 106: };tff.c: 107: return TRUE;
 18780  002BD0  0E01               	movlw	1
 18781  002BD2  0012               	return		;funcret
 18782  002BD4                     __end_of_move_window:
 18783                           	callstack 0
 18784                           
 18785 ;; *************** function _disk_write *****************
 18786 ;; Defined at:
 18787 ;;		line 150 in file "bibliotecas/diskio.c"
 18788 ;; Parameters:    Size  Location     Type
 18789 ;;  pdrv            1    wreg     unsigned char 
 18790 ;;  buff            2   40[COMRAM] PTR const unsigned char 
 18791 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 18792 ;;  sector          4   42[COMRAM] unsigned long 
 18793 ;;  count           1   46[COMRAM] unsigned char 
 18794 ;; Auto vars:     Size  Location     Type
 18795 ;;  pdrv            1   48[COMRAM] unsigned char 
 18796 ;;  result          2   49[COMRAM] int 
 18797 ;;  res             1   51[COMRAM] enum E25
 18798 ;; Return value:  Size  Location     Type
 18799 ;;                  1    wreg      enum E25
 18800 ;; Registers used:
 18801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18802 ;; Tracked objects:
 18803 ;;		On entry : 0/0
 18804 ;;		On exit  : 0/0
 18805 ;;		Unchanged: 0/0
 18806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18807 ;;      Params:         7       0       0       0       0       0       0       0       0
 18808 ;;      Locals:         4       0       0       0       0       0       0       0       0
 18809 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18810 ;;      Totals:        12       0       0       0       0       0       0       0       0
 18811 ;;Total ram usage:       12 bytes
 18812 ;; Hardware stack levels used:    1
 18813 ;; Hardware stack levels required when called:    6
 18814 ;; This function calls:
 18815 ;;		_sdc_disk_write
 18816 ;; This function is called by:
 18817 ;;		_move_window
 18818 ;;		_reserve_direntry
 18819 ;;		_f_write
 18820 ;; This function uses a non-reentrant model
 18821 ;;
 18822                           
 18823                           	psect	text104
 18824  005262                     __ptext104:
 18825                           	callstack 0
 18826  005262                     _disk_write:
 18827                           	callstack 15
 18828                           
 18829                           ;incstack = 0
 18830                           ;disk_write@pdrv stored from wreg
 18831  005262  6E31               	movwf	disk_write@pdrv^0,c
 18832                           
 18833                           ;diskio.c: 157: DRESULT res;;diskio.c: 158: int result;;diskio.c: 160: switch (pdrv) {
 18834  005264  D018               	goto	l10428
 18835  005266                     l10406:
 18836                           
 18837                           ;diskio.c: 163: result = sdc_disk_write(buff, sector, count);
 18838  005266  C029  F016         	movff	disk_write@buff,sdc_disk_write@p_buff
 18839  00526A  C02A  F017         	movff	disk_write@buff+1,sdc_disk_write@p_buff+1
 18840  00526E  C02B  F018         	movff	disk_write@sector,sdc_disk_write@sector
 18841  005272  C02C  F019         	movff	disk_write@sector+1,sdc_disk_write@sector+1
 18842  005276  C02D  F01A         	movff	disk_write@sector+2,sdc_disk_write@sector+2
 18843  00527A  C02E  F01B         	movff	disk_write@sector+3,sdc_disk_write@sector+3
 18844  00527E  C02F  F01C         	movff	disk_write@count,sdc_disk_write@count
 18845  005282  ECEA  F015         	call	_sdc_disk_write	;wreg free
 18846  005286  6E30               	movwf	??_disk_write^0,c
 18847  005288  5030               	movf	??_disk_write^0,w,c
 18848  00528A  6E32               	movwf	disk_write@result^0,c
 18849  00528C  6A33               	clrf	(disk_write@result+1)^0,c
 18850                           
 18851                           ;diskio.c: 165: res = result;
 18852  00528E  C032  F034         	movff	disk_write@result,disk_write@res
 18853  005292                     l10410:
 18854                           
 18855                           ;diskio.c: 168: return res;
 18856  005292  5034               	movf	disk_write@res^0,w,c
 18857  005294  0012               	return	
 18858  005296                     l10428:
 18859  005296  5031               	movf	disk_write@pdrv^0,w,c
 18860                           
 18861                           ; Switch size 1, requested type "simple"
 18862                           ; Number of cases is 3, Range of values is 0 to 2
 18863                           ; switch strategies available:
 18864                           ; Name         Instructions Cycles
 18865                           ; simple_byte           10     6 (average)
 18866                           ;	Chosen strategy is simple_byte
 18867  005298  0A00               	xorlw	0	; case 0
 18868  00529A  B4D8               	btfsc	status,2,c
 18869  00529C  D7E4               	goto	l10406
 18870  00529E  0A01               	xorlw	1	; case 1
 18871  0052A0  B4D8               	btfsc	status,2,c
 18872  0052A2  D7E1               	goto	l10406
 18873  0052A4  0A03               	xorlw	3	; case 2
 18874  0052A6  B4D8               	btfsc	status,2,c
 18875  0052A8  D7F4               	goto	l10410
 18876                           
 18877                           ;diskio.c: 189: return RES_PARERR;
 18878  0052AA  0E04               	movlw	4
 18879  0052AC  0012               	return		;funcret
 18880  0052AE                     __end_of_disk_write:
 18881                           	callstack 0
 18882                           
 18883 ;; *************** function _sdc_disk_write *****************
 18884 ;; Defined at:
 18885 ;;		line 509 in file "bibliotecas/diskio.c"
 18886 ;; Parameters:    Size  Location     Type
 18887 ;;  p_buff          2   21[COMRAM] PTR const unsigned char 
 18888 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 18889 ;;  sector          4   23[COMRAM] unsigned long 
 18890 ;;  count           1   27[COMRAM] unsigned char 
 18891 ;; Auto vars:     Size  Location     Type
 18892 ;;  j               2   37[COMRAM] int 
 18893 ;;  count1          2   34[COMRAM] int 
 18894 ;;  i               2    0        int 
 18895 ;;  buff            1   39[COMRAM] unsigned char 
 18896 ;;  res             1   36[COMRAM] enum E25
 18897 ;; Return value:  Size  Location     Type
 18898 ;;                  1    wreg      enum E25
 18899 ;; Registers used:
 18900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18901 ;; Tracked objects:
 18902 ;;		On entry : 0/0
 18903 ;;		On exit  : 0/0
 18904 ;;		Unchanged: 0/0
 18905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18906 ;;      Params:         7       0       0       0       0       0       0       0       0
 18907 ;;      Locals:         8       0       0       0       0       0       0       0       0
 18908 ;;      Temps:          4       0       0       0       0       0       0       0       0
 18909 ;;      Totals:        19       0       0       0       0       0       0       0       0
 18910 ;;Total ram usage:       19 bytes
 18911 ;; Hardware stack levels used:    1
 18912 ;; Hardware stack levels required when called:    5
 18913 ;; This function calls:
 18914 ;;		_command
 18915 ;;		_dummy_clocks
 18916 ;;		_escreve_SPI
 18917 ;;		_leitura_SPI
 18918 ;;		_proceed
 18919 ;;		_response
 18920 ;; This function is called by:
 18921 ;;		_disk_write
 18922 ;; This function uses a non-reentrant model
 18923 ;;
 18924                           
 18925                           	psect	text105
 18926  002BD4                     __ptext105:
 18927                           	callstack 0
 18928  002BD4                     _sdc_disk_write:
 18929                           	callstack 15
 18930                           
 18931                           ;incstack = 0
 18932  002BD4  0E00               	movlw	0
 18933  002BD6  6E24               	movwf	(sdc_disk_write@count1+1)^0,c
 18934  002BD8  0E00               	movlw	0
 18935  002BDA  6E23               	movwf	sdc_disk_write@count1^0,c
 18936                           
 18937                           ;diskio.c: 515: if(count>1)
 18938  002BDC  0E01               	movlw	1
 18939  002BDE  641C               	cpfsgt	sdc_disk_write@count^0,c
 18940  002BE0  D065               	goto	l144
 18941                           
 18942                           ;diskio.c: 516: {;diskio.c: 517: LATCbits.LATC7 = 0;
 18943  002BE2  9E8B               	bcf	139,7,c	;volatile
 18944                           
 18945                           ;diskio.c: 518: LATBbits.LATB5 = 0;
 18946  002BE4  9A8A               	bcf	138,5,c	;volatile
 18947                           
 18948                           ;diskio.c: 519: dummy_clocks(10);
 18949  002BE6  0E0A               	movlw	10
 18950  002BE8  ECCE  F02A         	call	_dummy_clocks
 18951                           
 18952                           ;diskio.c: 520: command(0X57, count, 0XFF);
 18953  002BEC  501C               	movf	sdc_disk_write@count^0,w,c
 18954  002BEE  6E0F               	movwf	command@arg^0,c
 18955  002BF0  6A10               	clrf	(command@arg+1)^0,c
 18956  002BF2  6A11               	clrf	(command@arg+2)^0,c
 18957  002BF4  6A12               	clrf	(command@arg+3)^0,c
 18958  002BF6  0EFF               	movlw	255
 18959  002BF8  6E13               	movwf	command@CRC^0,c
 18960  002BFA  0E57               	movlw	87
 18961  002BFC  ECB2  F027         	call	_command
 18962                           
 18963                           ;diskio.c: 521: proceed();
 18964  002C00  ECF6  F02D         	call	_proceed	;wreg free
 18965  002C04                     l10294:
 18966                           
 18967                           ;diskio.c: 523: buff = response();
 18968  002C04  ECF0  F02D         	call	_response	;wreg free
 18969  002C08  6E28               	movwf	sdc_disk_write@buff^0,c
 18970                           
 18971                           ;diskio.c: 524: }while(buff!=0X00);
 18972  002C0A  5028               	movf	sdc_disk_write@buff^0,w,c
 18973  002C0C  A4D8               	btfss	status,2,c
 18974  002C0E  D7FA               	goto	l10294
 18975                           
 18976                           ;diskio.c: 526: dummy_clocks(10);
 18977  002C10  0E0A               	movlw	10
 18978  002C12  ECCE  F02A         	call	_dummy_clocks
 18979                           
 18980                           ;diskio.c: 527: command(0X59, sector*512, 0XFF);
 18981  002C16  C018  F01D         	movff	sdc_disk_write@sector,??_sdc_disk_write
 18982  002C1A  C019  F01E         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 18983  002C1E  C01A  F01F         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 18984  002C22  C01B  F020         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 18985  002C26  0E09               	movlw	9
 18986  002C28                     u11465:
 18987  002C28  90D8               	bcf	status,0,c
 18988  002C2A  361D               	rlcf	??_sdc_disk_write^0,f,c
 18989  002C2C  361E               	rlcf	(??_sdc_disk_write+1)^0,f,c
 18990  002C2E  361F               	rlcf	(??_sdc_disk_write+2)^0,f,c
 18991  002C30  3620               	rlcf	(??_sdc_disk_write+3)^0,f,c
 18992  002C32  2EE8               	decfsz	wreg,f,c
 18993  002C34  D7F9               	goto	u11465
 18994  002C36  C01D  F00F         	movff	??_sdc_disk_write,command@arg
 18995  002C3A  C01E  F010         	movff	??_sdc_disk_write+1,command@arg+1
 18996  002C3E  C01F  F011         	movff	??_sdc_disk_write+2,command@arg+2
 18997  002C42  C020  F012         	movff	??_sdc_disk_write+3,command@arg+3
 18998  002C46  0EFF               	movlw	255
 18999  002C48  6E13               	movwf	command@CRC^0,c
 19000  002C4A  0E59               	movlw	89
 19001  002C4C  ECB2  F027         	call	_command
 19002                           
 19003                           ;diskio.c: 528: proceed();
 19004  002C50  ECF6  F02D         	call	_proceed	;wreg free
 19005  002C54                     l10302:
 19006                           
 19007                           ;diskio.c: 530: buff = response();
 19008  002C54  ECF0  F02D         	call	_response	;wreg free
 19009  002C58  6E28               	movwf	sdc_disk_write@buff^0,c
 19010                           
 19011                           ;diskio.c: 531: }while(buff!=0X00);
 19012  002C5A  5028               	movf	sdc_disk_write@buff^0,w,c
 19013  002C5C  A4D8               	btfss	status,2,c
 19014  002C5E  D7FA               	goto	l10302
 19015                           
 19016                           ;diskio.c: 533: dummy_clocks(1);
 19017  002C60  0E01               	movlw	1
 19018  002C62  ECCE  F02A         	call	_dummy_clocks
 19019                           
 19020                           ;diskio.c: 534: escreve_SPI(0XFC);
 19021  002C66  0EFC               	movlw	252
 19022  002C68  ECD2  F02D         	call	_escreve_SPI
 19023                           
 19024                           ;diskio.c: 535: for(j=0;j<512;j++)
 19025  002C6C  0E00               	movlw	0
 19026  002C6E  6E27               	movwf	(sdc_disk_write@j+1)^0,c
 19027  002C70  0E00               	movlw	0
 19028  002C72  6E26               	movwf	sdc_disk_write@j^0,c
 19029  002C74                     l10316:
 19030                           
 19031                           ;diskio.c: 536: {;diskio.c: 537: escreve_SPI(*p_buff);
 19032  002C74  C016  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 19033  002C78  C017  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 19034  002C7C  50DF               	movf	indf2,w,c
 19035  002C7E  ECD2  F02D         	call	_escreve_SPI
 19036                           
 19037                           ;diskio.c: 538: p_buff++;
 19038  002C82  4A16               	infsnz	sdc_disk_write@p_buff^0,f,c
 19039  002C84  2A17               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 19040  002C86  4A26               	infsnz	sdc_disk_write@j^0,f,c
 19041  002C88  2A27               	incf	(sdc_disk_write@j+1)^0,f,c
 19042  002C8A  BE27               	btfsc	(sdc_disk_write@j+1)^0,7,c
 19043  002C8C  D7F3               	goto	l10316
 19044  002C8E  0E02               	movlw	2
 19045  002C90  5C27               	subwf	(sdc_disk_write@j+1)^0,w,c
 19046  002C92  A0D8               	btfss	status,0,c
 19047  002C94  D7EF               	goto	l10316
 19048                           
 19049                           ;diskio.c: 539: };diskio.c: 540: leitura_SPI();
 19050  002C96  ECFC  F02D         	call	_leitura_SPI	;wreg free
 19051                           
 19052                           ;diskio.c: 541: leitura_SPI();
 19053  002C9A  ECFC  F02D         	call	_leitura_SPI	;wreg free
 19054                           
 19055                           ;diskio.c: 543: dummy_clocks(1);
 19056  002C9E  0E01               	movlw	1
 19057  002CA0  ECCE  F02A         	call	_dummy_clocks
 19058                           
 19059                           ;diskio.c: 544: escreve_SPI(0XFD);
 19060  002CA4  0EFD               	movlw	253
 19061  002CA6  ECD2  F02D         	call	_escreve_SPI
 19062                           
 19063                           ;diskio.c: 546: }
 19064  002CAA  D063               	goto	u11520
 19065  002CAC                     l144:
 19066                           
 19067                           ;diskio.c: 547: else;diskio.c: 548: {;diskio.c: 549: LATCbits.LATC7 = 0;
 19068  002CAC  9E8B               	bcf	139,7,c	;volatile
 19069                           
 19070                           ;diskio.c: 550: LATBbits.LATB5 = 0;
 19071  002CAE  9A8A               	bcf	138,5,c	;volatile
 19072                           
 19073                           ;diskio.c: 551: dummy_clocks(10);
 19074  002CB0  0E0A               	movlw	10
 19075  002CB2  ECCE  F02A         	call	_dummy_clocks
 19076                           
 19077                           ;diskio.c: 552: command(0X58, sector*512, 0X00);
 19078  002CB6  C018  F01D         	movff	sdc_disk_write@sector,??_sdc_disk_write
 19079  002CBA  C019  F01E         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 19080  002CBE  C01A  F01F         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 19081  002CC2  C01B  F020         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 19082  002CC6  0E09               	movlw	9
 19083  002CC8                     u11495:
 19084  002CC8  90D8               	bcf	status,0,c
 19085  002CCA  361D               	rlcf	??_sdc_disk_write^0,f,c
 19086  002CCC  361E               	rlcf	(??_sdc_disk_write+1)^0,f,c
 19087  002CCE  361F               	rlcf	(??_sdc_disk_write+2)^0,f,c
 19088  002CD0  3620               	rlcf	(??_sdc_disk_write+3)^0,f,c
 19089  002CD2  2EE8               	decfsz	wreg,f,c
 19090  002CD4  D7F9               	goto	u11495
 19091  002CD6  C01D  F00F         	movff	??_sdc_disk_write,command@arg
 19092  002CDA  C01E  F010         	movff	??_sdc_disk_write+1,command@arg+1
 19093  002CDE  C01F  F011         	movff	??_sdc_disk_write+2,command@arg+2
 19094  002CE2  C020  F012         	movff	??_sdc_disk_write+3,command@arg+3
 19095  002CE6  0E00               	movlw	0
 19096  002CE8  6E13               	movwf	command@CRC^0,c
 19097  002CEA  0E58               	movlw	88
 19098  002CEC  ECB2  F027         	call	_command
 19099                           
 19100                           ;diskio.c: 553: proceed();
 19101  002CF0  ECF6  F02D         	call	_proceed	;wreg free
 19102  002CF4                     l10334:
 19103                           
 19104                           ;diskio.c: 555: buff = response();
 19105  002CF4  ECF0  F02D         	call	_response	;wreg free
 19106  002CF8  6E28               	movwf	sdc_disk_write@buff^0,c
 19107                           
 19108                           ;diskio.c: 556: }while(buff!=0X00);
 19109  002CFA  5028               	movf	sdc_disk_write@buff^0,w,c
 19110  002CFC  A4D8               	btfss	status,2,c
 19111  002CFE  D7FA               	goto	l10334
 19112                           
 19113                           ;diskio.c: 558: LATBbits.LATB5 = 0;
 19114  002D00  9A8A               	bcf	138,5,c	;volatile
 19115                           
 19116                           ;diskio.c: 559: LATCbits.LATC7 = 0;
 19117  002D02  9E8B               	bcf	139,7,c	;volatile
 19118                           
 19119                           ;diskio.c: 560: dummy_clocks(1);
 19120  002D04  0E01               	movlw	1
 19121  002D06  ECCE  F02A         	call	_dummy_clocks
 19122                           
 19123                           ;diskio.c: 561: escreve_SPI(0XFE);
 19124  002D0A  0EFE               	movlw	254
 19125  002D0C  ECD2  F02D         	call	_escreve_SPI
 19126                           
 19127                           ;diskio.c: 562: for(j=0;j<512;j++)
 19128  002D10  0E00               	movlw	0
 19129  002D12  6E27               	movwf	(sdc_disk_write@j+1)^0,c
 19130  002D14  0E00               	movlw	0
 19131  002D16  6E26               	movwf	sdc_disk_write@j^0,c
 19132  002D18                     l10348:
 19133                           
 19134                           ;diskio.c: 563: {;diskio.c: 564: escreve_SPI(*p_buff);
 19135  002D18  C016  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 19136  002D1C  C017  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 19137  002D20  50DF               	movf	indf2,w,c
 19138  002D22  ECD2  F02D         	call	_escreve_SPI
 19139                           
 19140                           ;diskio.c: 565: p_buff++;
 19141  002D26  4A16               	infsnz	sdc_disk_write@p_buff^0,f,c
 19142  002D28  2A17               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 19143  002D2A  4A26               	infsnz	sdc_disk_write@j^0,f,c
 19144  002D2C  2A27               	incf	(sdc_disk_write@j+1)^0,f,c
 19145  002D2E  BE27               	btfsc	(sdc_disk_write@j+1)^0,7,c
 19146  002D30  D7F3               	goto	l10348
 19147  002D32  0E02               	movlw	2
 19148  002D34  5C27               	subwf	(sdc_disk_write@j+1)^0,w,c
 19149  002D36  A0D8               	btfss	status,0,c
 19150  002D38  D7EF               	goto	l10348
 19151                           
 19152                           ;diskio.c: 566: };diskio.c: 567: leitura_SPI();
 19153  002D3A  ECFC  F02D         	call	_leitura_SPI	;wreg free
 19154                           
 19155                           ;diskio.c: 568: leitura_SPI();
 19156  002D3E  ECFC  F02D         	call	_leitura_SPI	;wreg free
 19157                           
 19158                           ;diskio.c: 570: dummy_clocks(10);
 19159  002D42  0E0A               	movlw	10
 19160  002D44  ECCE  F02A         	call	_dummy_clocks
 19161                           
 19162                           ;diskio.c: 571: command(0X4D,0X00000000,0X00);
 19163  002D48  0E00               	movlw	0
 19164  002D4A  6E0F               	movwf	command@arg^0,c
 19165  002D4C  0E00               	movlw	0
 19166  002D4E  6E10               	movwf	(command@arg+1)^0,c
 19167  002D50  0E00               	movlw	0
 19168  002D52  6E11               	movwf	(command@arg+2)^0,c
 19169  002D54  0E00               	movlw	0
 19170  002D56  6E12               	movwf	(command@arg+3)^0,c
 19171  002D58  0E00               	movlw	0
 19172  002D5A  6E13               	movwf	command@CRC^0,c
 19173  002D5C  0E4D               	movlw	77
 19174  002D5E  ECB2  F027         	call	_command
 19175                           
 19176                           ;diskio.c: 572: proceed();
 19177  002D62  ECF6  F02D         	call	_proceed	;wreg free
 19178  002D66                     l10364:
 19179                           
 19180                           ;diskio.c: 574: buff = response();
 19181  002D66  ECF0  F02D         	call	_response	;wreg free
 19182  002D6A  6E28               	movwf	sdc_disk_write@buff^0,c
 19183                           
 19184                           ;diskio.c: 575: }while(buff!=0X00 );
 19185  002D6C  5028               	movf	sdc_disk_write@buff^0,w,c
 19186  002D6E  A4D8               	btfss	status,2,c
 19187  002D70  D7FA               	goto	l10364
 19188  002D72                     u11520:
 19189                           
 19190                           ;diskio.c: 576: };diskio.c: 577: return res;
 19191  002D72  5025               	movf	sdc_disk_write@res^0,w,c
 19192  002D74  0012               	return		;funcret
 19193  002D76                     __end_of_sdc_disk_write:
 19194                           	callstack 0
 19195                           
 19196 ;; *************** function _disk_read *****************
 19197 ;; Defined at:
 19198 ;;		line 97 in file "bibliotecas/diskio.c"
 19199 ;; Parameters:    Size  Location     Type
 19200 ;;  pdrv            1    wreg     unsigned char 
 19201 ;;  buff            2   40[COMRAM] PTR unsigned char 
 19202 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 19203 ;;  sector          4   42[COMRAM] unsigned long 
 19204 ;;  count           1   46[COMRAM] unsigned char 
 19205 ;; Auto vars:     Size  Location     Type
 19206 ;;  pdrv            1   48[COMRAM] unsigned char 
 19207 ;;  result          2   49[COMRAM] int 
 19208 ;;  res             1   51[COMRAM] enum E25
 19209 ;; Return value:  Size  Location     Type
 19210 ;;                  1    wreg      enum E25
 19211 ;; Registers used:
 19212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19213 ;; Tracked objects:
 19214 ;;		On entry : 0/0
 19215 ;;		On exit  : 0/0
 19216 ;;		Unchanged: 0/0
 19217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19218 ;;      Params:         7       0       0       0       0       0       0       0       0
 19219 ;;      Locals:         4       0       0       0       0       0       0       0       0
 19220 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19221 ;;      Totals:        12       0       0       0       0       0       0       0       0
 19222 ;;Total ram usage:       12 bytes
 19223 ;; Hardware stack levels used:    1
 19224 ;; Hardware stack levels required when called:    6
 19225 ;; This function calls:
 19226 ;;		_sdc_disk_read
 19227 ;; This function is called by:
 19228 ;;		_move_window
 19229 ;;		_check_fs
 19230 ;;		_f_read
 19231 ;; This function uses a non-reentrant model
 19232 ;;
 19233                           
 19234                           	psect	text106
 19235  004C3E                     __ptext106:
 19236                           	callstack 0
 19237  004C3E                     _disk_read:
 19238                           	callstack 15
 19239                           
 19240                           ;incstack = 0
 19241                           ;disk_read@pdrv stored from wreg
 19242  004C3E  6E31               	movwf	disk_read@pdrv^0,c
 19243                           
 19244                           ;diskio.c: 104: DRESULT res;;diskio.c: 105: int result;;diskio.c: 107: switch (pdrv) {
 19245  004C40  D029               	goto	l10398
 19246  004C42                     l10374:
 19247                           
 19248                           ;diskio.c: 111: result = sdc_disk_read(buff, sector, count);
 19249  004C42  C029  F016         	movff	disk_read@buff,sdc_disk_read@p_buff
 19250  004C46  C02A  F017         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 19251  004C4A  C02B  F018         	movff	disk_read@sector,sdc_disk_read@sector
 19252  004C4E  C02C  F019         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 19253  004C52  C02D  F01A         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 19254  004C56  C02E  F01B         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 19255  004C5A  C02F  F01C         	movff	disk_read@count,sdc_disk_read@count
 19256  004C5E  ECCA  F01C         	call	_sdc_disk_read	;wreg free
 19257  004C62  6E30               	movwf	??_disk_read^0,c
 19258  004C64  5030               	movf	??_disk_read^0,w,c
 19259  004C66  6E32               	movwf	disk_read@result^0,c
 19260  004C68  6A33               	clrf	(disk_read@result+1)^0,c
 19261                           
 19262                           ;diskio.c: 115: res = result;
 19263  004C6A  C032  F034         	movff	disk_read@result,disk_read@res
 19264  004C6E                     l10378:
 19265                           
 19266                           ;diskio.c: 117: return res;
 19267  004C6E  5034               	movf	disk_read@res^0,w,c
 19268  004C70  0012               	return	
 19269  004C72                     l10382:
 19270                           
 19271                           ;diskio.c: 122: result = sdc_disk_read(buff, sector, count);
 19272  004C72  C029  F016         	movff	disk_read@buff,sdc_disk_read@p_buff
 19273  004C76  C02A  F017         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 19274  004C7A  C02B  F018         	movff	disk_read@sector,sdc_disk_read@sector
 19275  004C7E  C02C  F019         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 19276  004C82  C02D  F01A         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 19277  004C86  C02E  F01B         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 19278  004C8A  C02F  F01C         	movff	disk_read@count,sdc_disk_read@count
 19279  004C8E  ECCA  F01C         	call	_sdc_disk_read	;wreg free
 19280  004C92  D7E7               	goto	L7
 19281  004C94                     l10398:
 19282  004C94  5031               	movf	disk_read@pdrv^0,w,c
 19283                           
 19284                           ; Switch size 1, requested type "simple"
 19285                           ; Number of cases is 3, Range of values is 0 to 2
 19286                           ; switch strategies available:
 19287                           ; Name         Instructions Cycles
 19288                           ; simple_byte           10     6 (average)
 19289                           ;	Chosen strategy is simple_byte
 19290  004C96  0A00               	xorlw	0	; case 0
 19291  004C98  B4D8               	btfsc	status,2,c
 19292  004C9A  D7D3               	goto	l10374
 19293  004C9C  0A01               	xorlw	1	; case 1
 19294  004C9E  B4D8               	btfsc	status,2,c
 19295  004CA0  D7E8               	goto	l10382
 19296  004CA2  0A03               	xorlw	3	; case 2
 19297  004CA4  B4D8               	btfsc	status,2,c
 19298  004CA6  D7E3               	goto	l10378
 19299                           
 19300                           ;diskio.c: 141: return RES_PARERR;
 19301  004CA8  0E04               	movlw	4
 19302  004CAA  0012               	return		;funcret
 19303  004CAC                     __end_of_disk_read:
 19304                           	callstack 0
 19305                           
 19306 ;; *************** function _sdc_disk_read *****************
 19307 ;; Defined at:
 19308 ;;		line 439 in file "bibliotecas/diskio.c"
 19309 ;; Parameters:    Size  Location     Type
 19310 ;;  p_buff          2   21[COMRAM] PTR unsigned char 
 19311 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 19312 ;;  sector          4   23[COMRAM] unsigned long 
 19313 ;;  count           1   27[COMRAM] unsigned char 
 19314 ;; Auto vars:     Size  Location     Type
 19315 ;;  start_add       4   33[COMRAM] unsigned long 
 19316 ;;  length          2   37[COMRAM] int 
 19317 ;;  count1          2    0        int 
 19318 ;;  i               2    0        int 
 19319 ;;  buff            1   39[COMRAM] unsigned char 
 19320 ;;  ptr             1    0        unsigned char 
 19321 ;;  res             1    0        enum E25
 19322 ;; Return value:  Size  Location     Type
 19323 ;;                  1    wreg      enum E25
 19324 ;; Registers used:
 19325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19326 ;; Tracked objects:
 19327 ;;		On entry : 0/0
 19328 ;;		On exit  : 0/0
 19329 ;;		Unchanged: 0/0
 19330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19331 ;;      Params:         7       0       0       0       0       0       0       0       0
 19332 ;;      Locals:         8       0       0       0       0       0       0       0       0
 19333 ;;      Temps:          4       0       0       0       0       0       0       0       0
 19334 ;;      Totals:        19       0       0       0       0       0       0       0       0
 19335 ;;Total ram usage:       19 bytes
 19336 ;; Hardware stack levels used:    1
 19337 ;; Hardware stack levels required when called:    5
 19338 ;; This function calls:
 19339 ;;		_command
 19340 ;;		_dummy_clocks
 19341 ;;		_proceed
 19342 ;;		_response
 19343 ;; This function is called by:
 19344 ;;		_disk_read
 19345 ;; This function uses a non-reentrant model
 19346 ;;
 19347                           
 19348                           	psect	text107
 19349  003994                     __ptext107:
 19350                           	callstack 0
 19351  003994                     _sdc_disk_read:
 19352                           	callstack 15
 19353                           
 19354                           ;diskio.c: 448: unsigned long int start_add;;diskio.c: 449: int length,i, count1;;diskio
      +                          .c: 450: dummy_clocks(10);
 19355                           
 19356                           ;incstack = 0
 19357  003994  0E0A               	movlw	10
 19358  003996  ECCE  F02A         	call	_dummy_clocks
 19359                           
 19360                           ;diskio.c: 452: start_add = sector*512;
 19361  00399A  C018  F01D         	movff	sdc_disk_read@sector,??_sdc_disk_read
 19362  00399E  C019  F01E         	movff	sdc_disk_read@sector+1,??_sdc_disk_read+1
 19363  0039A2  C01A  F01F         	movff	sdc_disk_read@sector+2,??_sdc_disk_read+2
 19364  0039A6  C01B  F020         	movff	sdc_disk_read@sector+3,??_sdc_disk_read+3
 19365  0039AA  0E09               	movlw	9
 19366  0039AC                     u11375:
 19367  0039AC  90D8               	bcf	status,0,c
 19368  0039AE  361D               	rlcf	??_sdc_disk_read^0,f,c
 19369  0039B0  361E               	rlcf	(??_sdc_disk_read+1)^0,f,c
 19370  0039B2  361F               	rlcf	(??_sdc_disk_read+2)^0,f,c
 19371  0039B4  3620               	rlcf	(??_sdc_disk_read+3)^0,f,c
 19372  0039B6  2EE8               	decfsz	wreg,f,c
 19373  0039B8  D7F9               	goto	u11375
 19374  0039BA  C01D  F022         	movff	??_sdc_disk_read,sdc_disk_read@start_add
 19375  0039BE  C01E  F023         	movff	??_sdc_disk_read+1,sdc_disk_read@start_add+1
 19376  0039C2  C01F  F024         	movff	??_sdc_disk_read+2,sdc_disk_read@start_add+2
 19377  0039C6  C020  F025         	movff	??_sdc_disk_read+3,sdc_disk_read@start_add+3
 19378                           
 19379                           ;diskio.c: 455: if(sector != 1)
 19380  0039CA  0418               	decf	sdc_disk_read@sector^0,w,c
 19381  0039CC  1019               	iorwf	(sdc_disk_read@sector+1)^0,w,c
 19382  0039CE  101A               	iorwf	(sdc_disk_read@sector+2)^0,w,c
 19383  0039D0  101B               	iorwf	(sdc_disk_read@sector+3)^0,w,c
 19384  0039D2  B4D8               	btfsc	status,2,c
 19385  0039D4  D01B               	goto	l10244
 19386                           
 19387                           ;diskio.c: 456: {;diskio.c: 457: dummy_clocks(10);
 19388  0039D6  0E0A               	movlw	10
 19389  0039D8  ECCE  F02A         	call	_dummy_clocks
 19390                           
 19391                           ;diskio.c: 458: command(0X52,start_add ,0X00);
 19392  0039DC  C022  F00F         	movff	sdc_disk_read@start_add,command@arg
 19393  0039E0  C023  F010         	movff	sdc_disk_read@start_add+1,command@arg+1
 19394  0039E4  C024  F011         	movff	sdc_disk_read@start_add+2,command@arg+2
 19395  0039E8  C025  F012         	movff	sdc_disk_read@start_add+3,command@arg+3
 19396  0039EC  0E00               	movlw	0
 19397  0039EE  6E13               	movwf	command@CRC^0,c
 19398  0039F0  0E52               	movlw	82
 19399  0039F2  ECB2  F027         	call	_command
 19400                           
 19401                           ;diskio.c: 459: proceed();
 19402  0039F6  ECF6  F02D         	call	_proceed	;wreg free
 19403  0039FA                     l10238:
 19404                           
 19405                           ;diskio.c: 461: buff = response();
 19406  0039FA  ECF0  F02D         	call	_response	;wreg free
 19407  0039FE  6E28               	movwf	sdc_disk_read@buff^0,c
 19408                           
 19409                           ;diskio.c: 462: }while(buff!=0X00);
 19410  003A00  5028               	movf	sdc_disk_read@buff^0,w,c
 19411  003A02  A4D8               	btfss	status,2,c
 19412  003A04  D7FA               	goto	l10238
 19413  003A06                     u11390:
 19414                           
 19415                           ;diskio.c: 463: proceed();
 19416  003A06  ECF6  F02D         	call	_proceed	;wreg free
 19417                           
 19418                           ;diskio.c: 464: }
 19419  003A0A  D01C               	goto	l10256
 19420  003A0C                     l10244:
 19421                           
 19422                           ;diskio.c: 465: else;diskio.c: 466: {;diskio.c: 467: dummy_clocks(10);
 19423  003A0C  0E0A               	movlw	10
 19424  003A0E  ECCE  F02A         	call	_dummy_clocks
 19425                           
 19426                           ;diskio.c: 468: command(0X51,sector ,0X00);
 19427  003A12  C018  F00F         	movff	sdc_disk_read@sector,command@arg
 19428  003A16  C019  F010         	movff	sdc_disk_read@sector+1,command@arg+1
 19429  003A1A  C01A  F011         	movff	sdc_disk_read@sector+2,command@arg+2
 19430  003A1E  C01B  F012         	movff	sdc_disk_read@sector+3,command@arg+3
 19431  003A22  0E00               	movlw	0
 19432  003A24  6E13               	movwf	command@CRC^0,c
 19433  003A26  0E51               	movlw	81
 19434  003A28  ECB2  F027         	call	_command
 19435                           
 19436                           ;diskio.c: 469: proceed();
 19437  003A2C  ECF6  F02D         	call	_proceed	;wreg free
 19438  003A30                     l10248:
 19439                           
 19440                           ;diskio.c: 471: buff = response();
 19441  003A30  ECF0  F02D         	call	_response	;wreg free
 19442  003A34  6E28               	movwf	sdc_disk_read@buff^0,c
 19443                           
 19444                           ;diskio.c: 472: }while(buff!=0X00);
 19445  003A36  5028               	movf	sdc_disk_read@buff^0,w,c
 19446  003A38  B4D8               	btfsc	status,2,c
 19447  003A3A  D7E5               	goto	u11390
 19448  003A3C  D7F9               	goto	l10248
 19449  003A3E                     l10254:
 19450                           
 19451                           ;diskio.c: 479: {;diskio.c: 480: buff = response();
 19452  003A3E  ECF0  F02D         	call	_response	;wreg free
 19453  003A42  6E28               	movwf	sdc_disk_read@buff^0,c
 19454  003A44                     l10256:
 19455  003A44  0EFE               	movlw	254
 19456  003A46  1828               	xorwf	sdc_disk_read@buff^0,w,c
 19457  003A48  A4D8               	btfss	status,2,c
 19458  003A4A  D7F9               	goto	l10254
 19459                           
 19460                           ;diskio.c: 481: };diskio.c: 483: length = 0;
 19461  003A4C  0E00               	movlw	0
 19462  003A4E  6E27               	movwf	(sdc_disk_read@length+1)^0,c
 19463  003A50  0E00               	movlw	0
 19464  003A52  6E26               	movwf	sdc_disk_read@length^0,c
 19465                           
 19466                           ;diskio.c: 484: while ( length < 512 )
 19467  003A54  D00B               	goto	l10264
 19468  003A56                     l10260:
 19469                           
 19470                           ;diskio.c: 485: {;diskio.c: 486: p_buff[length] = response();
 19471  003A56  5026               	movf	sdc_disk_read@length^0,w,c
 19472  003A58  2416               	addwf	sdc_disk_read@p_buff^0,w,c
 19473  003A5A  6ED9               	movwf	fsr2l,c
 19474  003A5C  5027               	movf	(sdc_disk_read@length+1)^0,w,c
 19475  003A5E  2017               	addwfc	(sdc_disk_read@p_buff+1)^0,w,c
 19476  003A60  6EDA               	movwf	fsr2h,c
 19477  003A62  ECF0  F02D         	call	_response	;wreg free
 19478  003A66  6EDF               	movwf	indf2,c
 19479                           
 19480                           ;diskio.c: 487: length++;
 19481  003A68  4A26               	infsnz	sdc_disk_read@length^0,f,c
 19482  003A6A  2A27               	incf	(sdc_disk_read@length+1)^0,f,c
 19483  003A6C                     l10264:
 19484  003A6C  BE27               	btfsc	(sdc_disk_read@length+1)^0,7,c
 19485  003A6E  D7F3               	goto	l10260
 19486  003A70  0E02               	movlw	2
 19487  003A72  5C27               	subwf	(sdc_disk_read@length+1)^0,w,c
 19488  003A74  A0D8               	btfss	status,0,c
 19489  003A76  D7EF               	goto	l10260
 19490                           
 19491                           ;diskio.c: 491: dummy_clocks(10);
 19492  003A78  0E0A               	movlw	10
 19493  003A7A  ECCE  F02A         	call	_dummy_clocks
 19494                           
 19495                           ;diskio.c: 493: command(0X4C,0X00000000,0X00);
 19496  003A7E  0E00               	movlw	0
 19497  003A80  6E0F               	movwf	command@arg^0,c
 19498  003A82  0E00               	movlw	0
 19499  003A84  6E10               	movwf	(command@arg+1)^0,c
 19500  003A86  0E00               	movlw	0
 19501  003A88  6E11               	movwf	(command@arg+2)^0,c
 19502  003A8A  0E00               	movlw	0
 19503  003A8C  6E12               	movwf	(command@arg+3)^0,c
 19504  003A8E  0E00               	movlw	0
 19505  003A90  6E13               	movwf	command@CRC^0,c
 19506  003A92  0E4C               	movlw	76
 19507  003A94  ECB2  F027         	call	_command
 19508                           
 19509                           ;diskio.c: 494: proceed();
 19510  003A98  ECF6  F02D         	call	_proceed	;wreg free
 19511  003A9C                     l10274:
 19512                           
 19513                           ;diskio.c: 496: buff = response();
 19514  003A9C  ECF0  F02D         	call	_response	;wreg free
 19515  003AA0  6E28               	movwf	sdc_disk_read@buff^0,c
 19516                           
 19517                           ;diskio.c: 497: }while(buff!=0xFF);
 19518  003AA2  2828               	incf	sdc_disk_read@buff^0,w,c
 19519  003AA4  A4D8               	btfss	status,2,c
 19520  003AA6  D7FA               	goto	l10274
 19521                           
 19522                           ;diskio.c: 500: return RES_OK;
 19523  003AA8  0E00               	movlw	0
 19524  003AAA  0012               	return		;funcret
 19525  003AAC                     __end_of_sdc_disk_read:
 19526                           	callstack 0
 19527                           
 19528 ;; *************** function _response *****************
 19529 ;; Defined at:
 19530 ;;		line 61 in file "bibliotecas/SDCard.c"
 19531 ;; Parameters:    Size  Location     Type
 19532 ;;		None
 19533 ;; Auto vars:     Size  Location     Type
 19534 ;;  buff            1    9[COMRAM] unsigned char 
 19535 ;; Return value:  Size  Location     Type
 19536 ;;                  1    wreg      unsigned char 
 19537 ;; Registers used:
 19538 ;;		wreg, status,2, cstack
 19539 ;; Tracked objects:
 19540 ;;		On entry : 0/0
 19541 ;;		On exit  : 0/0
 19542 ;;		Unchanged: 0/0
 19543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19544 ;;      Params:         0       0       0       0       0       0       0       0       0
 19545 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19546 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19547 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19548 ;;Total ram usage:        1 bytes
 19549 ;; Hardware stack levels used:    1
 19550 ;; Hardware stack levels required when called:    3
 19551 ;; This function calls:
 19552 ;;		_leitura_SPI
 19553 ;; This function is called by:
 19554 ;;		_sdc_reset
 19555 ;;		_sdc_disk_initialize
 19556 ;;		_sdc_disk_read
 19557 ;;		_sdc_disk_write
 19558 ;; This function uses a non-reentrant model
 19559 ;;
 19560                           
 19561                           	psect	text108
 19562  005BE0                     __ptext108:
 19563                           	callstack 0
 19564  005BE0                     _response:
 19565                           	callstack 16
 19566                           
 19567                           ;SDCard.c: 63: unsigned char buff;;SDCard.c: 64: LATBbits.LATB5 = 0;
 19568                           
 19569                           ;incstack = 0
 19570  005BE0  9A8A               	bcf	138,5,c	;volatile
 19571                           
 19572                           ;SDCard.c: 65: buff= leitura_SPI();
 19573  005BE2  ECFC  F02D         	call	_leitura_SPI	;wreg free
 19574  005BE6  6E0A               	movwf	response@buff^0,c
 19575                           
 19576                           ;SDCard.c: 66: return buff;
 19577  005BE8  500A               	movf	response@buff^0,w,c
 19578  005BEA  0012               	return		;funcret
 19579  005BEC                     __end_of_response:
 19580                           	callstack 0
 19581                           
 19582 ;; *************** function _proceed *****************
 19583 ;; Defined at:
 19584 ;;		line 94 in file "bibliotecas/SDCard.c"
 19585 ;; Parameters:    Size  Location     Type
 19586 ;;		None
 19587 ;; Auto vars:     Size  Location     Type
 19588 ;;		None
 19589 ;; Return value:  Size  Location     Type
 19590 ;;                  1    wreg      void 
 19591 ;; Registers used:
 19592 ;;		wreg, cstack
 19593 ;; Tracked objects:
 19594 ;;		On entry : 0/0
 19595 ;;		On exit  : 0/0
 19596 ;;		Unchanged: 0/0
 19597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19598 ;;      Params:         0       0       0       0       0       0       0       0       0
 19599 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19600 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19601 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19602 ;;Total ram usage:        0 bytes
 19603 ;; Hardware stack levels used:    1
 19604 ;; Hardware stack levels required when called:    3
 19605 ;; This function calls:
 19606 ;;		_escreve_SPI
 19607 ;; This function is called by:
 19608 ;;		_sdc_reset
 19609 ;;		_sdc_disk_initialize
 19610 ;;		_sdc_disk_read
 19611 ;;		_sdc_disk_write
 19612 ;; This function uses a non-reentrant model
 19613 ;;
 19614                           
 19615                           	psect	text109
 19616  005BEC                     __ptext109:
 19617                           	callstack 0
 19618  005BEC                     _proceed:
 19619                           	callstack 16
 19620                           
 19621                           ;SDCard.c: 96: LATBbits.LATB5 = 0;
 19622                           
 19623                           ;incstack = 0
 19624  005BEC  9A8A               	bcf	138,5,c	;volatile
 19625                           
 19626                           ;SDCard.c: 97: escreve_SPI(0xFF);
 19627  005BEE  0EFF               	movlw	255
 19628  005BF0  ECD2  F02D         	call	_escreve_SPI
 19629                           
 19630                           ;SDCard.c: 98: LATBbits.LATB5 = 1;
 19631  005BF4  8A8A               	bsf	138,5,c	;volatile
 19632  005BF6  0012               	return		;funcret
 19633  005BF8                     __end_of_proceed:
 19634                           	callstack 0
 19635                           
 19636 ;; *************** function _command *****************
 19637 ;; Defined at:
 19638 ;;		line 127 in file "bibliotecas/SDCard.c"
 19639 ;; Parameters:    Size  Location     Type
 19640 ;;  CMD             1    wreg     unsigned char 
 19641 ;;  arg             4   14[COMRAM] unsigned long 
 19642 ;;  CRC             1   18[COMRAM] unsigned char 
 19643 ;; Auto vars:     Size  Location     Type
 19644 ;;  CMD             1   19[COMRAM] unsigned char 
 19645 ;;  argument        1   20[COMRAM] unsigned char 
 19646 ;; Return value:  Size  Location     Type
 19647 ;;                  1    wreg      void 
 19648 ;; Registers used:
 19649 ;;		wreg, status,2, status,0, cstack
 19650 ;; Tracked objects:
 19651 ;;		On entry : 0/0
 19652 ;;		On exit  : 0/0
 19653 ;;		Unchanged: 0/0
 19654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19655 ;;      Params:         5       0       0       0       0       0       0       0       0
 19656 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19657 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19658 ;;      Totals:         7       0       0       0       0       0       0       0       0
 19659 ;;Total ram usage:        7 bytes
 19660 ;; Hardware stack levels used:    1
 19661 ;; Hardware stack levels required when called:    4
 19662 ;; This function calls:
 19663 ;;		_dummy_clocks
 19664 ;;		_escreve_SPI
 19665 ;;		_wait_ready
 19666 ;; This function is called by:
 19667 ;;		_sdc_reset
 19668 ;;		_sdc_disk_initialize
 19669 ;;		_sdc_disk_read
 19670 ;;		_sdc_disk_write
 19671 ;; This function uses a non-reentrant model
 19672 ;;
 19673                           
 19674                           	psect	text110
 19675  004F64                     __ptext110:
 19676                           	callstack 0
 19677  004F64                     _command:
 19678                           	callstack 15
 19679                           
 19680                           ;incstack = 0
 19681                           ;command@CMD stored from wreg
 19682  004F64  6E14               	movwf	command@CMD^0,c
 19683                           
 19684                           ;SDCard.c: 129: unsigned char argument;;SDCard.c: 131: if (wait_ready() != 0xFF)
 19685  004F66  EC40  F02B         	call	_wait_ready	;wreg free
 19686  004F6A  0AFF               	xorlw	255
 19687  004F6C  A4D8               	btfss	status,2,c
 19688  004F6E  D004               	goto	l702
 19689  004F70  D008               	goto	u11360
 19690  004F72                     l10188:
 19691                           
 19692                           ;SDCard.c: 134: {;SDCard.c: 135: dummy_clocks(10);
 19693  004F72  0E0A               	movlw	10
 19694  004F74  ECCE  F02A         	call	_dummy_clocks
 19695  004F78                     l702:
 19696  004F78  EC40  F02B         	call	_wait_ready	;wreg free
 19697  004F7C  0AFF               	xorlw	255
 19698  004F7E  A4D8               	btfss	status,2,c
 19699  004F80  D7F8               	goto	l10188
 19700  004F82                     u11360:
 19701                           
 19702                           ;SDCard.c: 136: };SDCard.c: 137: };SDCard.c: 138: escreve_SPI(0xFF);
 19703  004F82  0EFF               	movlw	255
 19704  004F84  ECD2  F02D         	call	_escreve_SPI
 19705                           
 19706                           ;SDCard.c: 139: escreve_SPI(CMD);
 19707  004F88  5014               	movf	command@CMD^0,w,c
 19708  004F8A  ECD2  F02D         	call	_escreve_SPI
 19709                           
 19710                           ;SDCard.c: 140: argument = arg>>24;
 19711  004F8E  C012  F015         	movff	command@arg+3,command@argument
 19712                           
 19713                           ;SDCard.c: 141: escreve_SPI(argument);
 19714  004F92  5015               	movf	command@argument^0,w,c
 19715  004F94  ECD2  F02D         	call	_escreve_SPI
 19716                           
 19717                           ;SDCard.c: 142: argument = arg>>16;
 19718  004F98  C011  F015         	movff	command@arg+2,command@argument
 19719                           
 19720                           ;SDCard.c: 143: escreve_SPI(argument);
 19721  004F9C  5015               	movf	command@argument^0,w,c
 19722  004F9E  ECD2  F02D         	call	_escreve_SPI
 19723                           
 19724                           ;SDCard.c: 144: argument = arg>>8;
 19725  004FA2  C010  F015         	movff	command@arg+1,command@argument
 19726                           
 19727                           ;SDCard.c: 145: escreve_SPI(argument);
 19728  004FA6  5015               	movf	command@argument^0,w,c
 19729  004FA8  ECD2  F02D         	call	_escreve_SPI
 19730                           
 19731                           ;SDCard.c: 146: argument = arg;
 19732  004FAC  C00F  F015         	movff	command@arg,command@argument
 19733                           
 19734                           ;SDCard.c: 147: escreve_SPI(argument);
 19735  004FB0  5015               	movf	command@argument^0,w,c
 19736  004FB2  ECD2  F02D         	call	_escreve_SPI
 19737                           
 19738                           ;SDCard.c: 148: escreve_SPI(CRC);
 19739  004FB6  5013               	movf	command@CRC^0,w,c
 19740  004FB8  ECD2  F02D         	call	_escreve_SPI
 19741  004FBC  0012               	return		;funcret
 19742  004FBE                     __end_of_command:
 19743                           	callstack 0
 19744                           
 19745 ;; *************** function _wait_ready *****************
 19746 ;; Defined at:
 19747 ;;		line 107 in file "bibliotecas/SDCard.c"
 19748 ;; Parameters:    Size  Location     Type
 19749 ;;		None
 19750 ;; Auto vars:     Size  Location     Type
 19751 ;;  msg            10    0        unsigned char [10]
 19752 ;;  timeout         4    9[COMRAM] unsigned long 
 19753 ;;  res             1   13[COMRAM] unsigned char 
 19754 ;; Return value:  Size  Location     Type
 19755 ;;                  1    wreg      unsigned char 
 19756 ;; Registers used:
 19757 ;;		wreg, status,2, status,0, cstack
 19758 ;; Tracked objects:
 19759 ;;		On entry : 0/0
 19760 ;;		On exit  : 0/0
 19761 ;;		Unchanged: 0/0
 19762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19763 ;;      Params:         0       0       0       0       0       0       0       0       0
 19764 ;;      Locals:         5       0       0       0       0       0       0       0       0
 19765 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19766 ;;      Totals:         5       0       0       0       0       0       0       0       0
 19767 ;;Total ram usage:        5 bytes
 19768 ;; Hardware stack levels used:    1
 19769 ;; Hardware stack levels required when called:    3
 19770 ;; This function calls:
 19771 ;;		_leitura_SPI
 19772 ;; This function is called by:
 19773 ;;		_command
 19774 ;; This function uses a non-reentrant model
 19775 ;;
 19776                           
 19777                           	psect	text111
 19778  005680                     __ptext111:
 19779                           	callstack 0
 19780  005680                     _wait_ready:
 19781                           	callstack 15
 19782                           
 19783                           ;SDCard.c: 109: BYTE res;;SDCard.c: 110: DWORD timeout = 0x7FFF;
 19784                           
 19785                           ;incstack = 0
 19786  005680  0EFF               	movlw	255
 19787  005682  6E0A               	movwf	wait_ready@timeout^0,c
 19788  005684  0E7F               	movlw	127
 19789  005686  6E0B               	movwf	(wait_ready@timeout+1)^0,c
 19790  005688  0E00               	movlw	0
 19791  00568A  6E0C               	movwf	(wait_ready@timeout+2)^0,c
 19792  00568C  0E00               	movlw	0
 19793  00568E  6E0D               	movwf	(wait_ready@timeout+3)^0,c
 19794  005690                     l10174:
 19795                           
 19796                           ;SDCard.c: 114: res = leitura_SPI();
 19797  005690  ECFC  F02D         	call	_leitura_SPI	;wreg free
 19798  005694  6E0E               	movwf	wait_ready@res^0,c
 19799                           
 19800                           ;SDCard.c: 115: }while ((res != 0xFF) && (--timeout));
 19801  005696  280E               	incf	wait_ready@res^0,w,c
 19802  005698  B4D8               	btfsc	status,2,c
 19803  00569A  D00B               	goto	u11340
 19804  00569C  060A               	decf	wait_ready@timeout^0,f,c
 19805  00569E  0E00               	movlw	0
 19806  0056A0  5A0B               	subwfb	(wait_ready@timeout+1)^0,f,c
 19807  0056A2  5A0C               	subwfb	(wait_ready@timeout+2)^0,f,c
 19808  0056A4  5A0D               	subwfb	(wait_ready@timeout+3)^0,f,c
 19809  0056A6  500A               	movf	wait_ready@timeout^0,w,c
 19810  0056A8  100B               	iorwf	(wait_ready@timeout+1)^0,w,c
 19811  0056AA  100C               	iorwf	(wait_ready@timeout+2)^0,w,c
 19812  0056AC  100D               	iorwf	(wait_ready@timeout+3)^0,w,c
 19813  0056AE  A4D8               	btfss	status,2,c
 19814  0056B0  D7EF               	goto	l10174
 19815  0056B2                     u11340:
 19816                           
 19817                           ;SDCard.c: 117: return res;
 19818  0056B2  500E               	movf	wait_ready@res^0,w,c
 19819  0056B4  0012               	return		;funcret
 19820  0056B6                     __end_of_wait_ready:
 19821                           	callstack 0
 19822                           
 19823 ;; *************** function _escreve_SPI *****************
 19824 ;; Defined at:
 19825 ;;		line 105 in file "bibliotecas/SPI.c"
 19826 ;; Parameters:    Size  Location     Type
 19827 ;;  dado            1    wreg     unsigned char 
 19828 ;; Auto vars:     Size  Location     Type
 19829 ;;  dado            1   10[COMRAM] unsigned char 
 19830 ;;  TempVar         1    0        unsigned char 
 19831 ;; Return value:  Size  Location     Type
 19832 ;;                  1    wreg      void 
 19833 ;; Registers used:
 19834 ;;		wreg
 19835 ;; Tracked objects:
 19836 ;;		On entry : 0/0
 19837 ;;		On exit  : 0/0
 19838 ;;		Unchanged: 0/0
 19839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19840 ;;      Params:         0       0       0       0       0       0       0       0       0
 19841 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19842 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19843 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19844 ;;Total ram usage:        2 bytes
 19845 ;; Hardware stack levels used:    1
 19846 ;; Hardware stack levels required when called:    2
 19847 ;; This function calls:
 19848 ;;		Nothing
 19849 ;; This function is called by:
 19850 ;;		_sdc_disk_write
 19851 ;;		_proceed
 19852 ;;		_command
 19853 ;; This function uses a non-reentrant model
 19854 ;;
 19855                           
 19856                           	psect	text112
 19857  005BA4                     __ptext112:
 19858                           	callstack 0
 19859  005BA4                     _escreve_SPI:
 19860                           	callstack 16
 19861                           
 19862                           ;incstack = 0
 19863                           ;escreve_SPI@dado stored from wreg
 19864  005BA4  6E0B               	movwf	escreve_SPI@dado^0,c
 19865  005BA6  50C9               	movf	201,w,c	;volatile
 19866                           
 19867                           ;SPI.c: 109: PIR1bits.SSPIF = 0;
 19868  005BA8  969E               	bcf	158,3,c	;volatile
 19869                           
 19870                           ;SPI.c: 111: SSPBUF = dado;
 19871  005BAA  C00B  FFC9         	movff	escreve_SPI@dado,4041	;volatile
 19872  005BAE                     l806:
 19873  005BAE  B69E               	btfsc	158,3,c	;volatile
 19874  005BB0  0012               	return	
 19875  005BB2  D7FD               	goto	l806
 19876  005BB4                     __end_of_escreve_SPI:
 19877                           	callstack 0
 19878                           
 19879 ;; *************** function _dummy_clocks *****************
 19880 ;; Defined at:
 19881 ;;		line 76 in file "bibliotecas/SDCard.c"
 19882 ;; Parameters:    Size  Location     Type
 19883 ;;  n               1    wreg     unsigned char 
 19884 ;; Auto vars:     Size  Location     Type
 19885 ;;  n               1   11[COMRAM] unsigned char 
 19886 ;;  i               2   12[COMRAM] unsigned int 
 19887 ;; Return value:  Size  Location     Type
 19888 ;;                  1    wreg      void 
 19889 ;; Registers used:
 19890 ;;		wreg, status,2, status,0, cstack
 19891 ;; Tracked objects:
 19892 ;;		On entry : 0/0
 19893 ;;		On exit  : 0/0
 19894 ;;		Unchanged: 0/0
 19895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19896 ;;      Params:         0       0       0       0       0       0       0       0       0
 19897 ;;      Locals:         3       0       0       0       0       0       0       0       0
 19898 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19899 ;;      Totals:         5       0       0       0       0       0       0       0       0
 19900 ;;Total ram usage:        5 bytes
 19901 ;; Hardware stack levels used:    1
 19902 ;; Hardware stack levels required when called:    3
 19903 ;; This function calls:
 19904 ;;		_leitura_SPI
 19905 ;; This function is called by:
 19906 ;;		_sdc_disk_initialize
 19907 ;;		_sdc_disk_read
 19908 ;;		_sdc_disk_write
 19909 ;;		_command
 19910 ;; This function uses a non-reentrant model
 19911 ;;
 19912                           
 19913                           	psect	text113
 19914  00559C                     __ptext113:
 19915                           	callstack 0
 19916  00559C                     _dummy_clocks:
 19917                           	callstack 16
 19918                           
 19919                           ;incstack = 0
 19920                           ;dummy_clocks@n stored from wreg
 19921  00559C  6E0C               	movwf	dummy_clocks@n^0,c
 19922                           
 19923                           ;SDCard.c: 78: unsigned int i;;SDCard.c: 79: _delay((unsigned long)((1)*(48000000/4000.0
      +                          )));
 19924  00559E  0E10               	movlw	16
 19925  0055A0  6E0A               	movwf	??_dummy_clocks^0,c
 19926  0055A2  0E94               	movlw	148
 19927  0055A4                     u16747:
 19928  0055A4  2EE8               	decfsz	wreg,f,c
 19929  0055A6  D7FE               	bra	u16747
 19930  0055A8  2E0A               	decfsz	??_dummy_clocks^0,f,c
 19931  0055AA  D7FC               	bra	u16747
 19932  0055AC  D000               	nop2	
 19933                           
 19934                           ;SDCard.c: 80: for(i=0;i<n;i++)
 19935  0055AE  0E00               	movlw	0
 19936  0055B0  6E0E               	movwf	(dummy_clocks@i+1)^0,c
 19937  0055B2  0E00               	movlw	0
 19938  0055B4  6E0D               	movwf	dummy_clocks@i^0,c
 19939  0055B6  D006               	goto	l10166
 19940  0055B8                     l686:
 19941                           
 19942                           ;SDCard.c: 81: {;SDCard.c: 82: LATBbits.LATB5 = 1;
 19943  0055B8  8A8A               	bsf	138,5,c	;volatile
 19944                           
 19945                           ;SDCard.c: 83: leitura_SPI();
 19946  0055BA  ECFC  F02D         	call	_leitura_SPI	;wreg free
 19947                           
 19948                           ;SDCard.c: 84: LATBbits.LATB5 = 0;
 19949  0055BE  9A8A               	bcf	138,5,c	;volatile
 19950  0055C0  4A0D               	infsnz	dummy_clocks@i^0,f,c
 19951  0055C2  2A0E               	incf	(dummy_clocks@i+1)^0,f,c
 19952  0055C4                     l10166:
 19953  0055C4  500C               	movf	dummy_clocks@n^0,w,c
 19954  0055C6  6E0A               	movwf	??_dummy_clocks^0,c
 19955  0055C8  6A0B               	clrf	(??_dummy_clocks+1)^0,c
 19956  0055CA  500A               	movf	??_dummy_clocks^0,w,c
 19957  0055CC  5C0D               	subwf	dummy_clocks@i^0,w,c
 19958  0055CE  500B               	movf	(??_dummy_clocks+1)^0,w,c
 19959  0055D0  580E               	subwfb	(dummy_clocks@i+1)^0,w,c
 19960  0055D2  B0D8               	btfsc	status,0,c
 19961  0055D4  0012               	return	
 19962  0055D6  D7F0               	goto	l686
 19963  0055D8                     __end_of_dummy_clocks:
 19964                           	callstack 0
 19965                           
 19966 ;; *************** function _leitura_SPI *****************
 19967 ;; Defined at:
 19968 ;;		line 90 in file "bibliotecas/SPI.c"
 19969 ;; Parameters:    Size  Location     Type
 19970 ;;		None
 19971 ;; Auto vars:     Size  Location     Type
 19972 ;;		None
 19973 ;; Return value:  Size  Location     Type
 19974 ;;                  1    wreg      unsigned char 
 19975 ;; Registers used:
 19976 ;;		wreg, status,2
 19977 ;; Tracked objects:
 19978 ;;		On entry : 0/0
 19979 ;;		On exit  : 0/0
 19980 ;;		Unchanged: 0/0
 19981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19982 ;;      Params:         0       0       0       0       0       0       0       0       0
 19983 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19984 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19985 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19986 ;;Total ram usage:        0 bytes
 19987 ;; Hardware stack levels used:    1
 19988 ;; Hardware stack levels required when called:    2
 19989 ;; This function calls:
 19990 ;;		Nothing
 19991 ;; This function is called by:
 19992 ;;		_sdc_disk_write
 19993 ;;		_response
 19994 ;;		_dummy_clocks
 19995 ;;		_wait_ready
 19996 ;; This function uses a non-reentrant model
 19997 ;;
 19998                           
 19999                           	psect	text114
 20000  005BF8                     __ptext114:
 20001                           	callstack 0
 20002  005BF8                     _leitura_SPI:
 20003                           	callstack 16
 20004                           
 20005                           ;SPI.c: 92: SSPBUF = 0xFF;
 20006                           
 20007                           ;incstack = 0
 20008  005BF8  68C9               	setf	201,c	;volatile
 20009                           
 20010                           ;SPI.c: 93: SSPSTATbits.BF = 0;
 20011  005BFA  90C7               	bcf	199,0,c	;volatile
 20012  005BFC                     l800:
 20013  005BFC  A0C7               	btfss	199,0,c	;volatile
 20014  005BFE  D7FE               	goto	l800
 20015                           
 20016                           ;SPI.c: 95: return (SSPBUF);
 20017  005C00  50C9               	movf	201,w,c	;volatile
 20018  005C02  0012               	return		;funcret
 20019  005C04                     __end_of_leitura_SPI:
 20020                           	callstack 0
 20021                           
 20022 ;; *************** function _disk_ioctl *****************
 20023 ;; Defined at:
 20024 ;;		line 198 in file "bibliotecas/diskio.c"
 20025 ;; Parameters:    Size  Location     Type
 20026 ;;  pdrv            1    wreg     unsigned char 
 20027 ;;  cmd             1    9[COMRAM] unsigned char 
 20028 ;;  buff            2   10[COMRAM] PTR void 
 20029 ;;		 -> NULL(0), 
 20030 ;; Auto vars:     Size  Location     Type
 20031 ;;  pdrv            1   12[COMRAM] unsigned char 
 20032 ;;  result          2    0        int 
 20033 ;;  res             1   13[COMRAM] enum E25
 20034 ;; Return value:  Size  Location     Type
 20035 ;;                  1    wreg      enum E25
 20036 ;; Registers used:
 20037 ;;		wreg, status,2, status,0
 20038 ;; Tracked objects:
 20039 ;;		On entry : 0/0
 20040 ;;		On exit  : 0/0
 20041 ;;		Unchanged: 0/0
 20042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20043 ;;      Params:         3       0       0       0       0       0       0       0       0
 20044 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20045 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20046 ;;      Totals:         5       0       0       0       0       0       0       0       0
 20047 ;;Total ram usage:        5 bytes
 20048 ;; Hardware stack levels used:    1
 20049 ;; Hardware stack levels required when called:    2
 20050 ;; This function calls:
 20051 ;;		Nothing
 20052 ;; This function is called by:
 20053 ;;		_sync
 20054 ;; This function uses a non-reentrant model
 20055 ;;
 20056                           
 20057                           	psect	text115
 20058  005A9C                     __ptext115:
 20059                           	callstack 0
 20060  005A9C                     _disk_ioctl:
 20061                           	callstack 21
 20062                           
 20063                           ;incstack = 0
 20064                           ;disk_ioctl@pdrv stored from wreg
 20065  005A9C  6E0D               	movwf	disk_ioctl@pdrv^0,c
 20066                           
 20067                           ;diskio.c: 204: DRESULT res;;diskio.c: 205: int result;;diskio.c: 207: switch (pdrv) {
 20068  005A9E  D002               	goto	l11096
 20069  005AA0                     l68:
 20070                           
 20071                           ;diskio.c: 212: return res;
 20072  005AA0  500E               	movf	disk_ioctl@res^0,w,c
 20073  005AA2  0012               	return	
 20074  005AA4                     l11096:
 20075  005AA4  500D               	movf	disk_ioctl@pdrv^0,w,c
 20076                           
 20077                           ; Switch size 1, requested type "simple"
 20078                           ; Number of cases is 3, Range of values is 0 to 2
 20079                           ; switch strategies available:
 20080                           ; Name         Instructions Cycles
 20081                           ; simple_byte           10     6 (average)
 20082                           ;	Chosen strategy is simple_byte
 20083  005AA6  0A00               	xorlw	0	; case 0
 20084  005AA8  B4D8               	btfsc	status,2,c
 20085  005AAA  D7FA               	goto	l68
 20086  005AAC  0A01               	xorlw	1	; case 1
 20087  005AAE  B4D8               	btfsc	status,2,c
 20088  005AB0  D7F7               	goto	l68
 20089  005AB2  0A03               	xorlw	3	; case 2
 20090  005AB4  B4D8               	btfsc	status,2,c
 20091  005AB6  D7F4               	goto	l68
 20092                           
 20093                           ;diskio.c: 227: return RES_PARERR;
 20094  005AB8  0E04               	movlw	4
 20095  005ABA  0012               	return		;funcret
 20096  005ABC                     __end_of_disk_ioctl:
 20097                           	callstack 0
 20098                           
 20099 ;; *************** function _get_fattime *****************
 20100 ;; Defined at:
 20101 ;;		line 810 in file "bibliotecas/tff.c"
 20102 ;; Parameters:    Size  Location     Type
 20103 ;;		None
 20104 ;; Auto vars:     Size  Location     Type
 20105 ;;  f_time         10   55[COMRAM] struct .
 20106 ;; Return value:  Size  Location     Type
 20107 ;;                  4   13[COMRAM] unsigned long 
 20108 ;; Registers used:
 20109 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20110 ;; Tracked objects:
 20111 ;;		On entry : 3F/0
 20112 ;;		On exit  : 3F/1
 20113 ;;		Unchanged: 0/0
 20114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20115 ;;      Params:         4       0       0       0       0       0       0       0       0
 20116 ;;      Locals:        10       0       0       0       0       0       0       0       0
 20117 ;;      Temps:         38       0       0       0       0       0       0       0       0
 20118 ;;      Totals:        52       0       0       0       0       0       0       0       0
 20119 ;;Total ram usage:       52 bytes
 20120 ;; Hardware stack levels used:    1
 20121 ;; Hardware stack levels required when called:    3
 20122 ;; This function calls:
 20123 ;;		_gps_ano
 20124 ;;		_gps_dia
 20125 ;;		_gps_hora
 20126 ;;		_gps_mes
 20127 ;;		_gps_minutos
 20128 ;;		_gps_segundos
 20129 ;; This function is called by:
 20130 ;;		_f_open
 20131 ;;		_f_sync
 20132 ;; This function uses a non-reentrant model
 20133 ;;
 20134                           
 20135                           	psect	text116
 20136  0034AA                     __ptext116:
 20137                           	callstack 0
 20138  0034AA                     _get_fattime:
 20139                           	callstack 22
 20140                           
 20141                           ; BSR set to: 0
 20142                           ;tff.c: 812: fat_time f_time;;tff.c: 814: f_time.hora = gps_hora() - 3;
 20143                           
 20144                           ;incstack = 0
 20145  0034AA  ECA5  F02C         	call	_gps_hora	;wreg free
 20146  0034AE  0EFD               	movlw	253
 20147  0034B0  240A               	addwf	?_gps_hora^0,w,c
 20148  0034B2  6E38               	movwf	get_fattime@f_time^0,c
 20149  0034B4  0EFF               	movlw	255
 20150  0034B6  200B               	addwfc	(?_gps_hora+1)^0,w,c
 20151  0034B8  6E39               	movwf	(get_fattime@f_time+1)^0,c
 20152                           
 20153                           ;tff.c: 815: f_time.min = gps_minutos();
 20154  0034BA  ECEA  F02C         	call	_gps_minutos	;wreg free
 20155  0034BE  C00A  F03A         	movff	?_gps_minutos,get_fattime@f_time+2
 20156  0034C2  C00B  F03B         	movff	?_gps_minutos+1,get_fattime@f_time+3
 20157                           
 20158                           ;tff.c: 816: f_time.seg = gps_segundos();
 20159  0034C6  ECD9  F02C         	call	_gps_segundos	;wreg free
 20160  0034CA  C00A  F03C         	movff	?_gps_segundos,get_fattime@f_time+4
 20161  0034CE  C00B  F03D         	movff	?_gps_segundos+1,get_fattime@f_time+5
 20162                           
 20163                           ;tff.c: 817: f_time.ano = gps_ano() + 2000;
 20164  0034D2  EC1D  F02D         	call	_gps_ano	;wreg free
 20165  0034D6  0ED0               	movlw	208
 20166  0034D8  240A               	addwf	?_gps_ano^0,w,c
 20167  0034DA  6E40               	movwf	(get_fattime@f_time+8)^0,c
 20168  0034DC  0E07               	movlw	7
 20169  0034DE  200B               	addwfc	(?_gps_ano+1)^0,w,c
 20170  0034E0  6E41               	movwf	(get_fattime@f_time+9)^0,c
 20171                           
 20172                           ;tff.c: 818: f_time.mes = gps_mes();
 20173  0034E2  ECFB  F02C         	call	_gps_mes	;wreg free
 20174  0034E6  500A               	movf	?_gps_mes^0,w,c
 20175  0034E8  6E3F               	movwf	(get_fattime@f_time+7)^0,c
 20176                           
 20177                           ;tff.c: 819: f_time.dia = gps_dia();
 20178  0034EA  EC0C  F02D         	call	_gps_dia	;wreg free
 20179  0034EE  500A               	movf	?_gps_dia^0,w,c
 20180  0034F0  6E3E               	movwf	(get_fattime@f_time+6)^0,c
 20181                           
 20182                           ; BSR set to: 1
 20183                           ;tff.c: 821: return (DWORD)(f_time.ano - 60) << 25 |;tff.c: 822: (DWORD)(f_time.mes) << 
      +                          21 |;tff.c: 823: (DWORD)(f_time.dia) << 16 |;tff.c: 824: (DWORD)(f_time.hora) << 11 |;tf
      +                          f.c: 825: (DWORD)(f_time.min) << 5 |;tff.c: 826: (DWORD)(f_time.seg) >> 1;
 20184  0034F2  90D8               	bcf	status,0,c
 20185  0034F4  303D               	rrcf	(get_fattime@f_time+5)^0,w,c
 20186  0034F6  6E13               	movwf	(??_get_fattime+1)^0,c
 20187  0034F8  303C               	rrcf	(get_fattime@f_time+4)^0,w,c
 20188  0034FA  6E12               	movwf	??_get_fattime^0,c
 20189  0034FC  503A               	movf	(get_fattime@f_time+2)^0,w,c
 20190  0034FE  6E14               	movwf	(??_get_fattime+2)^0,c
 20191  003500  503B               	movf	(get_fattime@f_time+3)^0,w,c
 20192  003502  6E15               	movwf	(??_get_fattime+3)^0,c
 20193  003504  6A16               	clrf	(??_get_fattime+4)^0,c
 20194  003506  6A17               	clrf	(??_get_fattime+5)^0,c
 20195  003508  0E05               	movlw	5
 20196  00350A                     u13235:
 20197  00350A  90D8               	bcf	status,0,c
 20198  00350C  3614               	rlcf	(??_get_fattime+2)^0,f,c
 20199  00350E  3615               	rlcf	(??_get_fattime+3)^0,f,c
 20200  003510  3616               	rlcf	(??_get_fattime+4)^0,f,c
 20201  003512  3617               	rlcf	(??_get_fattime+5)^0,f,c
 20202  003514  2EE8               	decfsz	wreg,f,c
 20203  003516  D7F9               	goto	u13235
 20204  003518  5038               	movf	get_fattime@f_time^0,w,c
 20205  00351A  6E18               	movwf	(??_get_fattime+6)^0,c
 20206  00351C  5039               	movf	(get_fattime@f_time+1)^0,w,c
 20207  00351E  6E19               	movwf	(??_get_fattime+7)^0,c
 20208  003520  6A1A               	clrf	(??_get_fattime+8)^0,c
 20209  003522  6A1B               	clrf	(??_get_fattime+9)^0,c
 20210  003524  0E0B               	movlw	11
 20211  003526                     u13245:
 20212  003526  90D8               	bcf	status,0,c
 20213  003528  3618               	rlcf	(??_get_fattime+6)^0,f,c
 20214  00352A  3619               	rlcf	(??_get_fattime+7)^0,f,c
 20215  00352C  361A               	rlcf	(??_get_fattime+8)^0,f,c
 20216  00352E  361B               	rlcf	(??_get_fattime+9)^0,f,c
 20217  003530  2EE8               	decfsz	wreg,f,c
 20218  003532  D7F9               	goto	u13245
 20219  003534  C03E  F01C         	movff	get_fattime@f_time+6,??_get_fattime+10
 20220  003538  6A1D               	clrf	(??_get_fattime+11)^0,c
 20221  00353A  6A1E               	clrf	(??_get_fattime+12)^0,c
 20222  00353C  6A1F               	clrf	(??_get_fattime+13)^0,c
 20223  00353E  C01D  F01F         	movff	??_get_fattime+11,??_get_fattime+13
 20224  003542  C01C  F01E         	movff	??_get_fattime+10,??_get_fattime+12
 20225  003546  6A1D               	clrf	(??_get_fattime+11)^0,c
 20226  003548  6A1C               	clrf	(??_get_fattime+10)^0,c
 20227  00354A  C03F  F020         	movff	get_fattime@f_time+7,??_get_fattime+14
 20228  00354E  6A21               	clrf	(??_get_fattime+15)^0,c
 20229  003550  6A22               	clrf	(??_get_fattime+16)^0,c
 20230  003552  6A23               	clrf	(??_get_fattime+17)^0,c
 20231  003554  0E15               	movlw	21
 20232  003556                     u13255:
 20233  003556  90D8               	bcf	status,0,c
 20234  003558  3620               	rlcf	(??_get_fattime+14)^0,f,c
 20235  00355A  3621               	rlcf	(??_get_fattime+15)^0,f,c
 20236  00355C  3622               	rlcf	(??_get_fattime+16)^0,f,c
 20237  00355E  3623               	rlcf	(??_get_fattime+17)^0,f,c
 20238  003560  2EE8               	decfsz	wreg,f,c
 20239  003562  D7F9               	goto	u13255
 20240  003564  0EC4               	movlw	196
 20241  003566  2440               	addwf	(get_fattime@f_time+8)^0,w,c
 20242  003568  6E24               	movwf	(??_get_fattime+18)^0,c
 20243  00356A  0EFF               	movlw	255
 20244  00356C  2041               	addwfc	(get_fattime@f_time+9)^0,w,c
 20245  00356E  6E25               	movwf	(??_get_fattime+19)^0,c
 20246  003570  6A26               	clrf	(??_get_fattime+20)^0,c
 20247  003572  6A27               	clrf	(??_get_fattime+21)^0,c
 20248  003574  0E19               	movlw	25
 20249  003576                     u13265:
 20250  003576  90D8               	bcf	status,0,c
 20251  003578  3624               	rlcf	(??_get_fattime+18)^0,f,c
 20252  00357A  3625               	rlcf	(??_get_fattime+19)^0,f,c
 20253  00357C  3626               	rlcf	(??_get_fattime+20)^0,f,c
 20254  00357E  3627               	rlcf	(??_get_fattime+21)^0,f,c
 20255  003580  2EE8               	decfsz	wreg,f,c
 20256  003582  D7F9               	goto	u13265
 20257  003584  5020               	movf	(??_get_fattime+14)^0,w,c
 20258  003586  1024               	iorwf	(??_get_fattime+18)^0,w,c
 20259  003588  6E28               	movwf	(??_get_fattime+22)^0,c
 20260  00358A  5021               	movf	(??_get_fattime+15)^0,w,c
 20261  00358C  1025               	iorwf	(??_get_fattime+19)^0,w,c
 20262  00358E  6E29               	movwf	(??_get_fattime+23)^0,c
 20263  003590  5022               	movf	(??_get_fattime+16)^0,w,c
 20264  003592  1026               	iorwf	(??_get_fattime+20)^0,w,c
 20265  003594  6E2A               	movwf	(??_get_fattime+24)^0,c
 20266  003596  5023               	movf	(??_get_fattime+17)^0,w,c
 20267  003598  1027               	iorwf	(??_get_fattime+21)^0,w,c
 20268  00359A  6E2B               	movwf	(??_get_fattime+25)^0,c
 20269  00359C  501C               	movf	(??_get_fattime+10)^0,w,c
 20270  00359E  1028               	iorwf	(??_get_fattime+22)^0,w,c
 20271  0035A0  6E2C               	movwf	(??_get_fattime+26)^0,c
 20272  0035A2  501D               	movf	(??_get_fattime+11)^0,w,c
 20273  0035A4  1029               	iorwf	(??_get_fattime+23)^0,w,c
 20274  0035A6  6E2D               	movwf	(??_get_fattime+27)^0,c
 20275  0035A8  501E               	movf	(??_get_fattime+12)^0,w,c
 20276  0035AA  102A               	iorwf	(??_get_fattime+24)^0,w,c
 20277  0035AC  6E2E               	movwf	(??_get_fattime+28)^0,c
 20278  0035AE  501F               	movf	(??_get_fattime+13)^0,w,c
 20279  0035B0  102B               	iorwf	(??_get_fattime+25)^0,w,c
 20280  0035B2  6E2F               	movwf	(??_get_fattime+29)^0,c
 20281  0035B4  5018               	movf	(??_get_fattime+6)^0,w,c
 20282  0035B6  102C               	iorwf	(??_get_fattime+26)^0,w,c
 20283  0035B8  6E30               	movwf	(??_get_fattime+30)^0,c
 20284  0035BA  5019               	movf	(??_get_fattime+7)^0,w,c
 20285  0035BC  102D               	iorwf	(??_get_fattime+27)^0,w,c
 20286  0035BE  6E31               	movwf	(??_get_fattime+31)^0,c
 20287  0035C0  501A               	movf	(??_get_fattime+8)^0,w,c
 20288  0035C2  102E               	iorwf	(??_get_fattime+28)^0,w,c
 20289  0035C4  6E32               	movwf	(??_get_fattime+32)^0,c
 20290  0035C6  501B               	movf	(??_get_fattime+9)^0,w,c
 20291  0035C8  102F               	iorwf	(??_get_fattime+29)^0,w,c
 20292  0035CA  6E33               	movwf	(??_get_fattime+33)^0,c
 20293  0035CC  5014               	movf	(??_get_fattime+2)^0,w,c
 20294  0035CE  1030               	iorwf	(??_get_fattime+30)^0,w,c
 20295  0035D0  6E34               	movwf	(??_get_fattime+34)^0,c
 20296  0035D2  5015               	movf	(??_get_fattime+3)^0,w,c
 20297  0035D4  1031               	iorwf	(??_get_fattime+31)^0,w,c
 20298  0035D6  6E35               	movwf	(??_get_fattime+35)^0,c
 20299  0035D8  5016               	movf	(??_get_fattime+4)^0,w,c
 20300  0035DA  1032               	iorwf	(??_get_fattime+32)^0,w,c
 20301  0035DC  6E36               	movwf	(??_get_fattime+36)^0,c
 20302  0035DE  5017               	movf	(??_get_fattime+5)^0,w,c
 20303  0035E0  1033               	iorwf	(??_get_fattime+33)^0,w,c
 20304  0035E2  6E37               	movwf	(??_get_fattime+37)^0,c
 20305  0035E4  5012               	movf	??_get_fattime^0,w,c
 20306  0035E6  1034               	iorwf	(??_get_fattime+34)^0,w,c
 20307  0035E8  6E0E               	movwf	?_get_fattime^0,c
 20308  0035EA  5013               	movf	(??_get_fattime+1)^0,w,c
 20309  0035EC  1035               	iorwf	(??_get_fattime+35)^0,w,c
 20310  0035EE  6E0F               	movwf	(?_get_fattime+1)^0,c
 20311  0035F0  0E00               	movlw	0
 20312  0035F2  1036               	iorwf	(??_get_fattime+36)^0,w,c
 20313  0035F4  6E10               	movwf	(?_get_fattime+2)^0,c
 20314  0035F6  0E00               	movlw	0
 20315  0035F8  1037               	iorwf	(??_get_fattime+37)^0,w,c
 20316  0035FA  6E11               	movwf	(?_get_fattime+3)^0,c
 20317                           
 20318                           ; BSR set to: 1
 20319  0035FC  0012               	return		;funcret
 20320  0035FE                     __end_of_get_fattime:
 20321                           	callstack 0
 20322                           
 20323 ;; *************** function _gps_segundos *****************
 20324 ;; Defined at:
 20325 ;;		line 530 in file "bibliotecas/GPS.c"
 20326 ;; Parameters:    Size  Location     Type
 20327 ;;		None
 20328 ;; Auto vars:     Size  Location     Type
 20329 ;;		None
 20330 ;; Return value:  Size  Location     Type
 20331 ;;                  2    9[COMRAM] unsigned int 
 20332 ;; Registers used:
 20333 ;;		wreg, status,2, status,0, prodl, prodh
 20334 ;; Tracked objects:
 20335 ;;		On entry : 3F/1
 20336 ;;		On exit  : 3F/1
 20337 ;;		Unchanged: 0/0
 20338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20339 ;;      Params:         2       0       0       0       0       0       0       0       0
 20340 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20341 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20342 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20343 ;;Total ram usage:        4 bytes
 20344 ;; Hardware stack levels used:    1
 20345 ;; Hardware stack levels required when called:    2
 20346 ;; This function calls:
 20347 ;;		Nothing
 20348 ;; This function is called by:
 20349 ;;		_get_fattime
 20350 ;; This function uses a non-reentrant model
 20351 ;;
 20352                           
 20353                           	psect	text117
 20354  0059B2                     __ptext117:
 20355                           	callstack 0
 20356  0059B2                     _gps_segundos:
 20357                           	callstack 22
 20358                           
 20359                           ; BSR set to: 1
 20360                           ;GPS.c: 532: return ((rawTime[4] - '0') * 10 + (rawTime[5] - '0'));
 20361                           
 20362                           ; BSR set to: 1
 20363                           ;incstack = 0
 20364  0059B2  51D5               	movf	(_rawTime+4)& (0+255),w,b
 20365  0059B4  0D0A               	mullw	10
 20366  0059B6  CFF3 F00C          	movff	prodl,??_gps_segundos
 20367  0059BA  CFF4 F00D          	movff	prodh,??_gps_segundos+1
 20368  0059BE  51D6               	movf	(_rawTime+5)& (0+255),w,b
 20369  0059C0  260C               	addwf	??_gps_segundos^0,f,c
 20370  0059C2  0E00               	movlw	0
 20371  0059C4  220D               	addwfc	(??_gps_segundos+1)^0,f,c
 20372  0059C6  0EF0               	movlw	240
 20373  0059C8  240C               	addwf	??_gps_segundos^0,w,c
 20374  0059CA  6E0A               	movwf	?_gps_segundos^0,c
 20375  0059CC  0EFD               	movlw	253
 20376  0059CE  200D               	addwfc	(??_gps_segundos+1)^0,w,c
 20377  0059D0  6E0B               	movwf	(?_gps_segundos+1)^0,c
 20378                           
 20379                           ; BSR set to: 1
 20380  0059D2  0012               	return		;funcret
 20381  0059D4                     __end_of_gps_segundos:
 20382                           	callstack 0
 20383                           
 20384 ;; *************** function _gps_minutos *****************
 20385 ;; Defined at:
 20386 ;;		line 541 in file "bibliotecas/GPS.c"
 20387 ;; Parameters:    Size  Location     Type
 20388 ;;		None
 20389 ;; Auto vars:     Size  Location     Type
 20390 ;;		None
 20391 ;; Return value:  Size  Location     Type
 20392 ;;                  2    9[COMRAM] unsigned int 
 20393 ;; Registers used:
 20394 ;;		wreg, status,2, status,0, prodl, prodh
 20395 ;; Tracked objects:
 20396 ;;		On entry : 3F/1
 20397 ;;		On exit  : 3F/1
 20398 ;;		Unchanged: 0/0
 20399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20400 ;;      Params:         2       0       0       0       0       0       0       0       0
 20401 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20402 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20403 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20404 ;;Total ram usage:        4 bytes
 20405 ;; Hardware stack levels used:    1
 20406 ;; Hardware stack levels required when called:    2
 20407 ;; This function calls:
 20408 ;;		Nothing
 20409 ;; This function is called by:
 20410 ;;		_get_fattime
 20411 ;; This function uses a non-reentrant model
 20412 ;;
 20413                           
 20414                           	psect	text118
 20415  0059D4                     __ptext118:
 20416                           	callstack 0
 20417  0059D4                     _gps_minutos:
 20418                           	callstack 22
 20419                           
 20420                           ; BSR set to: 1
 20421                           ;GPS.c: 543: return ((rawTime[2] - '0') * 10 + (rawTime[3] - '0'));
 20422                           
 20423                           ; BSR set to: 1
 20424                           ;incstack = 0
 20425  0059D4  51D3               	movf	(_rawTime+2)& (0+255),w,b
 20426  0059D6  0D0A               	mullw	10
 20427  0059D8  CFF3 F00C          	movff	prodl,??_gps_minutos
 20428  0059DC  CFF4 F00D          	movff	prodh,??_gps_minutos+1
 20429  0059E0  51D4               	movf	(_rawTime+3)& (0+255),w,b
 20430  0059E2  260C               	addwf	??_gps_minutos^0,f,c
 20431  0059E4  0E00               	movlw	0
 20432  0059E6  220D               	addwfc	(??_gps_minutos+1)^0,f,c
 20433  0059E8  0EF0               	movlw	240
 20434  0059EA  240C               	addwf	??_gps_minutos^0,w,c
 20435  0059EC  6E0A               	movwf	?_gps_minutos^0,c
 20436  0059EE  0EFD               	movlw	253
 20437  0059F0  200D               	addwfc	(??_gps_minutos+1)^0,w,c
 20438  0059F2  6E0B               	movwf	(?_gps_minutos+1)^0,c
 20439                           
 20440                           ; BSR set to: 1
 20441  0059F4  0012               	return		;funcret
 20442  0059F6                     __end_of_gps_minutos:
 20443                           	callstack 0
 20444                           
 20445 ;; *************** function _gps_mes *****************
 20446 ;; Defined at:
 20447 ;;		line 578 in file "bibliotecas/GPS.c"
 20448 ;; Parameters:    Size  Location     Type
 20449 ;;		None
 20450 ;; Auto vars:     Size  Location     Type
 20451 ;;		None
 20452 ;; Return value:  Size  Location     Type
 20453 ;;                  2    9[COMRAM] unsigned int 
 20454 ;; Registers used:
 20455 ;;		wreg, status,2, status,0, prodl, prodh
 20456 ;; Tracked objects:
 20457 ;;		On entry : 3F/1
 20458 ;;		On exit  : 3F/1
 20459 ;;		Unchanged: 0/0
 20460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20461 ;;      Params:         2       0       0       0       0       0       0       0       0
 20462 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20463 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20464 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20465 ;;Total ram usage:        4 bytes
 20466 ;; Hardware stack levels used:    1
 20467 ;; Hardware stack levels required when called:    2
 20468 ;; This function calls:
 20469 ;;		Nothing
 20470 ;; This function is called by:
 20471 ;;		_get_fattime
 20472 ;; This function uses a non-reentrant model
 20473 ;;
 20474                           
 20475                           	psect	text119
 20476  0059F6                     __ptext119:
 20477                           	callstack 0
 20478  0059F6                     _gps_mes:
 20479                           	callstack 22
 20480                           
 20481                           ; BSR set to: 1
 20482                           ;GPS.c: 580: return ((rawDate[2] - '0') * 10 + (rawDate[3] - '0'));
 20483                           
 20484                           ; BSR set to: 1
 20485                           ;incstack = 0
 20486  0059F6  51E6               	movf	(_rawDate+2)& (0+255),w,b
 20487  0059F8  0D0A               	mullw	10
 20488  0059FA  CFF3 F00C          	movff	prodl,??_gps_mes
 20489  0059FE  CFF4 F00D          	movff	prodh,??_gps_mes+1
 20490  005A02  51E7               	movf	(_rawDate+3)& (0+255),w,b
 20491  005A04  260C               	addwf	??_gps_mes^0,f,c
 20492  005A06  0E00               	movlw	0
 20493  005A08  220D               	addwfc	(??_gps_mes+1)^0,f,c
 20494  005A0A  0EF0               	movlw	240
 20495  005A0C  240C               	addwf	??_gps_mes^0,w,c
 20496  005A0E  6E0A               	movwf	?_gps_mes^0,c
 20497  005A10  0EFD               	movlw	253
 20498  005A12  200D               	addwfc	(??_gps_mes+1)^0,w,c
 20499  005A14  6E0B               	movwf	(?_gps_mes+1)^0,c
 20500                           
 20501                           ; BSR set to: 1
 20502  005A16  0012               	return		;funcret
 20503  005A18                     __end_of_gps_mes:
 20504                           	callstack 0
 20505                           
 20506 ;; *************** function _gps_hora *****************
 20507 ;; Defined at:
 20508 ;;		line 553 in file "bibliotecas/GPS.c"
 20509 ;; Parameters:    Size  Location     Type
 20510 ;;		None
 20511 ;; Auto vars:     Size  Location     Type
 20512 ;;		None
 20513 ;; Return value:  Size  Location     Type
 20514 ;;                  2    9[COMRAM] unsigned int 
 20515 ;; Registers used:
 20516 ;;		wreg, status,2, status,0, prodl, prodh
 20517 ;; Tracked objects:
 20518 ;;		On entry : 3F/0
 20519 ;;		On exit  : 3F/1
 20520 ;;		Unchanged: 0/0
 20521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20522 ;;      Params:         2       0       0       0       0       0       0       0       0
 20523 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20524 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20525 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20526 ;;Total ram usage:        4 bytes
 20527 ;; Hardware stack levels used:    1
 20528 ;; Hardware stack levels required when called:    2
 20529 ;; This function calls:
 20530 ;;		Nothing
 20531 ;; This function is called by:
 20532 ;;		_get_fattime
 20533 ;; This function uses a non-reentrant model
 20534 ;;
 20535                           
 20536                           	psect	text120
 20537  00594A                     __ptext120:
 20538                           	callstack 0
 20539  00594A                     _gps_hora:
 20540                           	callstack 22
 20541                           
 20542                           ; BSR set to: 0
 20543                           ;GPS.c: 555: return (((rawTime[0] - '0') * 10 + (rawTime[1] - '0')));
 20544                           
 20545                           ; BSR set to: 1
 20546                           ;incstack = 0
 20547  00594A  0101               	movlb	1	; () banked
 20548  00594C  51D1               	movf	_rawTime& (0+255),w,b
 20549  00594E  0D0A               	mullw	10
 20550  005950  CFF3 F00C          	movff	prodl,??_gps_hora
 20551  005954  CFF4 F00D          	movff	prodh,??_gps_hora+1
 20552  005958  51D2               	movf	(_rawTime+1)& (0+255),w,b
 20553  00595A  260C               	addwf	??_gps_hora^0,f,c
 20554  00595C  0E00               	movlw	0
 20555  00595E  220D               	addwfc	(??_gps_hora+1)^0,f,c
 20556  005960  0EF0               	movlw	240
 20557  005962  240C               	addwf	??_gps_hora^0,w,c
 20558  005964  6E0A               	movwf	?_gps_hora^0,c
 20559  005966  0EFD               	movlw	253
 20560  005968  200D               	addwfc	(??_gps_hora+1)^0,w,c
 20561  00596A  6E0B               	movwf	(?_gps_hora+1)^0,c
 20562                           
 20563                           ; BSR set to: 1
 20564  00596C  0012               	return		;funcret
 20565  00596E                     __end_of_gps_hora:
 20566                           	callstack 0
 20567                           
 20568 ;; *************** function _gps_dia *****************
 20569 ;; Defined at:
 20570 ;;		line 565 in file "bibliotecas/GPS.c"
 20571 ;; Parameters:    Size  Location     Type
 20572 ;;		None
 20573 ;; Auto vars:     Size  Location     Type
 20574 ;;		None
 20575 ;; Return value:  Size  Location     Type
 20576 ;;                  2    9[COMRAM] unsigned int 
 20577 ;; Registers used:
 20578 ;;		wreg, status,2, status,0, prodl, prodh
 20579 ;; Tracked objects:
 20580 ;;		On entry : 3F/1
 20581 ;;		On exit  : 3F/1
 20582 ;;		Unchanged: 0/0
 20583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20584 ;;      Params:         2       0       0       0       0       0       0       0       0
 20585 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20586 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20587 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20588 ;;Total ram usage:        4 bytes
 20589 ;; Hardware stack levels used:    1
 20590 ;; Hardware stack levels required when called:    2
 20591 ;; This function calls:
 20592 ;;		Nothing
 20593 ;; This function is called by:
 20594 ;;		_get_fattime
 20595 ;; This function uses a non-reentrant model
 20596 ;;
 20597                           
 20598                           	psect	text121
 20599  005A18                     __ptext121:
 20600                           	callstack 0
 20601  005A18                     _gps_dia:
 20602                           	callstack 22
 20603                           
 20604                           ; BSR set to: 1
 20605                           ;GPS.c: 567: return ((rawDate[0] - '0') * 10 + (rawDate[1] - '0'));
 20606                           
 20607                           ; BSR set to: 1
 20608                           ;incstack = 0
 20609  005A18  51E4               	movf	_rawDate& (0+255),w,b
 20610  005A1A  0D0A               	mullw	10
 20611  005A1C  CFF3 F00C          	movff	prodl,??_gps_dia
 20612  005A20  CFF4 F00D          	movff	prodh,??_gps_dia+1
 20613  005A24  51E5               	movf	(_rawDate+1)& (0+255),w,b
 20614  005A26  260C               	addwf	??_gps_dia^0,f,c
 20615  005A28  0E00               	movlw	0
 20616  005A2A  220D               	addwfc	(??_gps_dia+1)^0,f,c
 20617  005A2C  0EF0               	movlw	240
 20618  005A2E  240C               	addwf	??_gps_dia^0,w,c
 20619  005A30  6E0A               	movwf	?_gps_dia^0,c
 20620  005A32  0EFD               	movlw	253
 20621  005A34  200D               	addwfc	(??_gps_dia+1)^0,w,c
 20622  005A36  6E0B               	movwf	(?_gps_dia+1)^0,c
 20623                           
 20624                           ; BSR set to: 1
 20625  005A38  0012               	return		;funcret
 20626  005A3A                     __end_of_gps_dia:
 20627                           	callstack 0
 20628                           
 20629 ;; *************** function _gps_ano *****************
 20630 ;; Defined at:
 20631 ;;		line 590 in file "bibliotecas/GPS.c"
 20632 ;; Parameters:    Size  Location     Type
 20633 ;;		None
 20634 ;; Auto vars:     Size  Location     Type
 20635 ;;		None
 20636 ;; Return value:  Size  Location     Type
 20637 ;;                  2    9[COMRAM] unsigned int 
 20638 ;; Registers used:
 20639 ;;		wreg, status,2, status,0, prodl, prodh
 20640 ;; Tracked objects:
 20641 ;;		On entry : 3F/1
 20642 ;;		On exit  : 3F/1
 20643 ;;		Unchanged: 0/0
 20644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20645 ;;      Params:         2       0       0       0       0       0       0       0       0
 20646 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20647 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20648 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20649 ;;Total ram usage:        4 bytes
 20650 ;; Hardware stack levels used:    1
 20651 ;; Hardware stack levels required when called:    2
 20652 ;; This function calls:
 20653 ;;		Nothing
 20654 ;; This function is called by:
 20655 ;;		_get_fattime
 20656 ;; This function uses a non-reentrant model
 20657 ;;
 20658                           
 20659                           	psect	text122
 20660  005A3A                     __ptext122:
 20661                           	callstack 0
 20662  005A3A                     _gps_ano:
 20663                           	callstack 22
 20664                           
 20665                           ; BSR set to: 1
 20666                           ;GPS.c: 592: return ((rawDate[4] - '0') * 10 + (rawDate[5] - '0'));
 20667                           
 20668                           ; BSR set to: 1
 20669                           ;incstack = 0
 20670  005A3A  51E8               	movf	(_rawDate+4)& (0+255),w,b
 20671  005A3C  0D0A               	mullw	10
 20672  005A3E  CFF3 F00C          	movff	prodl,??_gps_ano
 20673  005A42  CFF4 F00D          	movff	prodh,??_gps_ano+1
 20674  005A46  51E9               	movf	(_rawDate+5)& (0+255),w,b
 20675  005A48  260C               	addwf	??_gps_ano^0,f,c
 20676  005A4A  0E00               	movlw	0
 20677  005A4C  220D               	addwfc	(??_gps_ano+1)^0,f,c
 20678  005A4E  0EF0               	movlw	240
 20679  005A50  240C               	addwf	??_gps_ano^0,w,c
 20680  005A52  6E0A               	movwf	?_gps_ano^0,c
 20681  005A54  0EFD               	movlw	253
 20682  005A56  200D               	addwfc	(??_gps_ano+1)^0,w,c
 20683  005A58  6E0B               	movwf	(?_gps_ano+1)^0,c
 20684                           
 20685                           ; BSR set to: 1
 20686  005A5A  0012               	return		;funcret
 20687  005A5C                     __end_of_gps_ano:
 20688                           	callstack 0
 20689                           
 20690 ;; *************** function _data_nome *****************
 20691 ;; Defined at:
 20692 ;;		line 396 in file "bibliotecas/SDCard.c"
 20693 ;; Parameters:    Size  Location     Type
 20694 ;;  p_buff          2    9[COMRAM] PTR unsigned char 
 20695 ;;		 -> data(6), 
 20696 ;; Auto vars:     Size  Location     Type
 20697 ;;  i               1   11[COMRAM] unsigned char 
 20698 ;; Return value:  Size  Location     Type
 20699 ;;                  1    wreg      void 
 20700 ;; Registers used:
 20701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20702 ;; Tracked objects:
 20703 ;;		On entry : 3F/1
 20704 ;;		On exit  : 3F/1
 20705 ;;		Unchanged: 3F/0
 20706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20707 ;;      Params:         2       0       0       0       0       0       0       0       0
 20708 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20709 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20710 ;;      Totals:         3       0       0       0       0       0       0       0       0
 20711 ;;Total ram usage:        3 bytes
 20712 ;; Hardware stack levels used:    1
 20713 ;; Hardware stack levels required when called:    2
 20714 ;; This function calls:
 20715 ;;		Nothing
 20716 ;; This function is called by:
 20717 ;;		_escrita_sdcard
 20718 ;; This function uses a non-reentrant model
 20719 ;;
 20720                           
 20721                           	psect	text123
 20722  0058AC                     __ptext123:
 20723                           	callstack 0
 20724  0058AC                     _data_nome:
 20725                           	callstack 24
 20726                           
 20727                           ; BSR set to: 1
 20728                           ;SDCard.c: 398: unsigned char i;;SDCard.c: 399: for(i=0; i<4;i++)
 20729                           
 20730                           ; BSR set to: 1
 20731                           ;incstack = 0
 20732  0058AC  0E00               	movlw	0
 20733  0058AE  6E0C               	movwf	data_nome@i^0,c
 20734  0058B0                     l12362:
 20735                           
 20736                           ; BSR set to: 1
 20737                           ;SDCard.c: 400: {;SDCard.c: 401: filename[i] = *p_buff;
 20738  0058B0  C00A  FFD9         	movff	data_nome@p_buff,fsr2l
 20739  0058B4  C00B  FFDA         	movff	data_nome@p_buff+1,fsr2h
 20740  0058B8  0E56               	movlw	low _filename
 20741  0058BA  240C               	addwf	data_nome@i^0,w,c
 20742  0058BC  6EE1               	movwf	fsr1l,c
 20743  0058BE  6AE2               	clrf	fsr1h,c
 20744  0058C0  0E02               	movlw	high _filename
 20745  0058C2  22E2               	addwfc	fsr1h,f,c
 20746  0058C4  CFDF FFE7          	movff	indf2,indf1
 20747                           
 20748                           ; BSR set to: 1
 20749                           ;SDCard.c: 402: p_buff++;
 20750  0058C8  4A0A               	infsnz	data_nome@p_buff^0,f,c
 20751  0058CA  2A0B               	incf	(data_nome@p_buff+1)^0,f,c
 20752                           
 20753                           ; BSR set to: 1
 20754  0058CC  2A0C               	incf	data_nome@i^0,f,c
 20755                           
 20756                           ; BSR set to: 1
 20757  0058CE  0E03               	movlw	3
 20758  0058D0  640C               	cpfsgt	data_nome@i^0,c
 20759  0058D2  D7EE               	goto	l12362
 20760  0058D4  0012               	return	
 20761  0058D6                     __end_of_data_nome:
 20762                           	callstack 0
 20763                           
 20764 ;; *************** function _desliga_uart *****************
 20765 ;; Defined at:
 20766 ;;		line 223 in file "bibliotecas/uart.c"
 20767 ;; Parameters:    Size  Location     Type
 20768 ;;		None
 20769 ;; Auto vars:     Size  Location     Type
 20770 ;;		None
 20771 ;; Return value:  Size  Location     Type
 20772 ;;                  1    wreg      void 
 20773 ;; Registers used:
 20774 ;;		wreg, status,2
 20775 ;; Tracked objects:
 20776 ;;		On entry : 0/1
 20777 ;;		On exit  : 0/0
 20778 ;;		Unchanged: 0/0
 20779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20780 ;;      Params:         0       0       0       0       0       0       0       0       0
 20781 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20782 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20783 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20784 ;;Total ram usage:        0 bytes
 20785 ;; Hardware stack levels used:    1
 20786 ;; Hardware stack levels required when called:    2
 20787 ;; This function calls:
 20788 ;;		Nothing
 20789 ;; This function is called by:
 20790 ;;		_grava_sd
 20791 ;; This function uses a non-reentrant model
 20792 ;;
 20793                           
 20794                           	psect	text124
 20795  005B70                     __ptext124:
 20796                           	callstack 0
 20797  005B70                     _desliga_uart:
 20798                           	callstack 25
 20799                           
 20800                           ;uart.c: 226: TRISCbits.RC6 = 1;
 20801                           
 20802                           ; BSR set to: 1
 20803                           ;incstack = 0
 20804  005B70  8C94               	bsf	148,6,c	;volatile
 20805                           
 20806                           ;uart.c: 227: TRISCbits.RC7 = 1;
 20807  005B72  8E94               	bsf	148,7,c	;volatile
 20808                           
 20809                           ;uart.c: 230: TXSTA = 0x00;
 20810  005B74  0E00               	movlw	0
 20811  005B76  6EAC               	movwf	172,c	;volatile
 20812                           
 20813                           ;uart.c: 232: RCSTA = 0x00;
 20814  005B78  0E00               	movlw	0
 20815  005B7A  6EAB               	movwf	171,c	;volatile
 20816                           
 20817                           ;uart.c: 233: RCREG = 0x00;
 20818  005B7C  0E00               	movlw	0
 20819  005B7E  6EAE               	movwf	174,c	;volatile
 20820  005B80  0012               	return		;funcret
 20821  005B82                     __end_of_desliga_uart:
 20822                           	callstack 0
 20823                           
 20824 ;; *************** function _desliga_SPI *****************
 20825 ;; Defined at:
 20826 ;;		line 75 in file "bibliotecas/SPI.c"
 20827 ;; Parameters:    Size  Location     Type
 20828 ;;		None
 20829 ;; Auto vars:     Size  Location     Type
 20830 ;;		None
 20831 ;; Return value:  Size  Location     Type
 20832 ;;                  1    wreg      void 
 20833 ;; Registers used:
 20834 ;;		wreg, status,2
 20835 ;; Tracked objects:
 20836 ;;		On entry : 0/1
 20837 ;;		On exit  : 0/0
 20838 ;;		Unchanged: 0/0
 20839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20840 ;;      Params:         0       0       0       0       0       0       0       0       0
 20841 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20842 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20843 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20844 ;;Total ram usage:        0 bytes
 20845 ;; Hardware stack levels used:    1
 20846 ;; Hardware stack levels required when called:    2
 20847 ;; This function calls:
 20848 ;;		Nothing
 20849 ;; This function is called by:
 20850 ;;		_grava_sd
 20851 ;; This function uses a non-reentrant model
 20852 ;;
 20853                           
 20854                           	psect	text125
 20855  005BB4                     __ptext125:
 20856                           	callstack 0
 20857  005BB4                     _desliga_SPI:
 20858                           	callstack 25
 20859                           
 20860                           ;SPI.c: 77: SSPSTAT = 0x00;
 20861                           
 20862                           ;incstack = 0
 20863  005BB4  0E00               	movlw	0
 20864  005BB6  6EC7               	movwf	199,c	;volatile
 20865                           
 20866                           ;SPI.c: 78: SSPCON1 = 0x00;
 20867  005BB8  0E00               	movlw	0
 20868  005BBA  6EC6               	movwf	198,c	;volatile
 20869                           
 20870                           ;SPI.c: 79: SSPCON1bits.SSPEN = 0;
 20871  005BBC  9AC6               	bcf	198,5,c	;volatile
 20872                           
 20873                           ;SPI.c: 80: SSPBUF = 0x00;
 20874  005BBE  0E00               	movlw	0
 20875  005BC0  6EC9               	movwf	201,c	;volatile
 20876  005BC2  0012               	return		;funcret
 20877  005BC4                     __end_of_desliga_SPI:
 20878                           	callstack 0
 20879                           
 20880 ;; *************** function _dados_gps_to_sd *****************
 20881 ;; Defined at:
 20882 ;;		line 702 in file "bibliotecas/GPS.c"
 20883 ;; Parameters:    Size  Location     Type
 20884 ;;		None
 20885 ;; Auto vars:     Size  Location     Type
 20886 ;;		None
 20887 ;; Return value:  Size  Location     Type
 20888 ;;                  1    wreg      void 
 20889 ;; Registers used:
 20890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20891 ;; Tracked objects:
 20892 ;;		On entry : 0/1
 20893 ;;		On exit  : 0/0
 20894 ;;		Unchanged: 0/0
 20895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20896 ;;      Params:         0       0       0       0       0       0       0       0       0
 20897 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20898 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20899 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20900 ;;Total ram usage:        0 bytes
 20901 ;; Hardware stack levels used:    1
 20902 ;; Hardware stack levels required when called:    4
 20903 ;; This function calls:
 20904 ;;		_monta_sd
 20905 ;; This function is called by:
 20906 ;;		_disparo_gravacao
 20907 ;; This function uses a non-reentrant model
 20908 ;;
 20909                           
 20910                           	psect	text126
 20911  004DE6                     __ptext126:
 20912                           	callstack 0
 20913  004DE6                     _dados_gps_to_sd:
 20914                           	callstack 24
 20915                           
 20916                           ;GPS.c: 705: monta_sd(0, rawTime);
 20917                           
 20918                           ;incstack = 0
 20919  004DE6  0ED1               	movlw	low _rawTime
 20920  004DE8  6E10               	movwf	monta_sd@dado^0,c
 20921  004DEA  0E01               	movlw	high _rawTime
 20922  004DEC  6E11               	movwf	(monta_sd@dado+1)^0,c
 20923  004DEE  0E00               	movlw	0
 20924  004DF0  EC03  F00B         	call	_monta_sd
 20925                           
 20926                           ;GPS.c: 706: monta_sd(1, rawDate);
 20927  004DF4  0EE4               	movlw	low _rawDate
 20928  004DF6  6E10               	movwf	monta_sd@dado^0,c
 20929  004DF8  0E01               	movlw	high _rawDate
 20930  004DFA  6E11               	movwf	(monta_sd@dado+1)^0,c
 20931  004DFC  0E01               	movlw	1
 20932  004DFE  EC03  F00B         	call	_monta_sd
 20933                           
 20934                           ;GPS.c: 707: monta_sd(2, rawLatitude);
 20935  004E02  0EBE               	movlw	low _rawLatitude
 20936  004E04  6E10               	movwf	monta_sd@dado^0,c
 20937  004E06  0E01               	movlw	high _rawLatitude
 20938  004E08  6E11               	movwf	(monta_sd@dado+1)^0,c
 20939  004E0A  0E02               	movlw	2
 20940  004E0C  EC03  F00B         	call	_monta_sd
 20941                           
 20942                           ;GPS.c: 708: monta_sd(3, rawLongitude);
 20943  004E10  0EA5               	movlw	low _rawLongitude
 20944  004E12  6E10               	movwf	monta_sd@dado^0,c
 20945  004E14  0E01               	movlw	high _rawLongitude
 20946  004E16  6E11               	movwf	(monta_sd@dado+1)^0,c
 20947  004E18  0E03               	movlw	3
 20948  004E1A  EC03  F00B         	call	_monta_sd
 20949                           
 20950                           ;GPS.c: 709: monta_sd(5, rawTime);
 20951  004E1E  0ED1               	movlw	low _rawTime
 20952  004E20  6E10               	movwf	monta_sd@dado^0,c
 20953  004E22  0E01               	movlw	high _rawTime
 20954  004E24  6E11               	movwf	(monta_sd@dado+1)^0,c
 20955  004E26  0E05               	movlw	5
 20956  004E28  EC03  F00B         	call	_monta_sd
 20957                           
 20958                           ;GPS.c: 710: monta_sd(6, rawDate);
 20959  004E2C  0EE4               	movlw	low _rawDate
 20960  004E2E  6E10               	movwf	monta_sd@dado^0,c
 20961  004E30  0E01               	movlw	high _rawDate
 20962  004E32  6E11               	movwf	(monta_sd@dado+1)^0,c
 20963  004E34  0E06               	movlw	6
 20964  004E36  EC03  F00B         	call	_monta_sd
 20965                           
 20966                           ;GPS.c: 711: monta_sd(7, rawSpeed);
 20967  004E3A  0E6A               	movlw	low _rawSpeed
 20968  004E3C  6E10               	movwf	monta_sd@dado^0,c
 20969  004E3E  0E02               	movlw	high _rawSpeed
 20970  004E40  6E11               	movwf	(monta_sd@dado+1)^0,c
 20971  004E42  0E07               	movlw	7
 20972  004E44  EC03  F00B         	call	_monta_sd
 20973  004E48  0012               	return		;funcret
 20974  004E4A                     __end_of_dados_gps_to_sd:
 20975                           	callstack 0
 20976                           
 20977 ;; *************** function _monta_sd *****************
 20978 ;; Defined at:
 20979 ;;		line 305 in file "bibliotecas/SDCard.c"
 20980 ;; Parameters:    Size  Location     Type
 20981 ;;  index           1    wreg     unsigned char 
 20982 ;;  dado            2   15[COMRAM] PTR unsigned char 
 20983 ;;		 -> disparo_gravacao@velocidade(12), dados_data(18), dados_hora(18), dados_long(36), 
 20984 ;;		 -> dados_lat(33), STR_21(2), STR_20(2), rawSpeed(20), 
 20985 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
 20986 ;; Auto vars:     Size  Location     Type
 20987 ;;  index           1   18[COMRAM] unsigned char 
 20988 ;;  i               1   19[COMRAM] unsigned char 
 20989 ;;  size            1    0        unsigned char 
 20990 ;; Return value:  Size  Location     Type
 20991 ;;                  1    wreg      void 
 20992 ;; Registers used:
 20993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20994 ;; Tracked objects:
 20995 ;;		On entry : 0/2
 20996 ;;		On exit  : 0/0
 20997 ;;		Unchanged: 0/0
 20998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20999 ;;      Params:         2       0       0       0       0       0       0       0       0
 21000 ;;      Locals:         3       0       0       0       0       0       0       0       0
 21001 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21002 ;;      Totals:         5       0       0       0       0       0       0       0       0
 21003 ;;Total ram usage:        5 bytes
 21004 ;; Hardware stack levels used:    1
 21005 ;; Hardware stack levels required when called:    3
 21006 ;; This function calls:
 21007 ;;		_strlen
 21008 ;; This function is called by:
 21009 ;;		_dados_gps_to_sd
 21010 ;;		_verifica_fence
 21011 ;;		_disparo_gravacao
 21012 ;; This function uses a non-reentrant model
 21013 ;;
 21014                           
 21015                           	psect	text127
 21016  001606                     __ptext127:
 21017                           	callstack 0
 21018  001606                     _monta_sd:
 21019                           	callstack 24
 21020                           
 21021                           ;incstack = 0
 21022                           ;monta_sd@index stored from wreg
 21023  001606  6E13               	movwf	monta_sd@index^0,c
 21024  001608  C010  F00A         	movff	monta_sd@dado,strlen@s
 21025  00160C  C011  F00B         	movff	monta_sd@dado+1,strlen@s+1
 21026  001610  EC6E  F02A         	call	_strlen	;wreg free
 21027                           
 21028                           ;SDCard.c: 309: switch(index)
 21029  001614  D165               	goto	l12892
 21030  001616                     l12778:
 21031                           
 21032                           ;SDCard.c: 312: for(i=0; i<7;i++)
 21033  001616  0E00               	movlw	0
 21034  001618  6E14               	movwf	monta_sd@i^0,c
 21035  00161A                     l12784:
 21036                           
 21037                           ;SDCard.c: 313: {;SDCard.c: 314: if(*dado != '\0')
 21038  00161A  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21039  00161E  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21040  001622  6AF8               	clrf	tblptru,c
 21041  001624  0E07               	movlw	(high __ramtop+-1)
 21042  001626  64F7               	cpfsgt	tblptrh,c
 21043  001628  D003               	bra	u15217
 21044  00162A  0008               	tblrd		*
 21045  00162C  50F5               	movf	tablat,w,c
 21046  00162E  D005               	bra	u15210
 21047  001630                     u15217:
 21048  001630  CFF6 FFE1          	movff	tblptrl,fsr1l
 21049  001634  CFF7 FFE2          	movff	tblptrh,fsr1h
 21050  001638  50E7               	movf	indf1,w,c
 21051  00163A                     u15210:
 21052  00163A  0900               	iorlw	0
 21053  00163C  B4D8               	btfsc	status,2,c
 21054  00163E  D017               	goto	l12788
 21055                           
 21056                           ;SDCard.c: 315: {;SDCard.c: 316: hora[i] = *dado;
 21057  001640  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21058  001644  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21059  001648  6AF8               	clrf	tblptru,c
 21060  00164A  0ECA               	movlw	low _hora
 21061  00164C  2414               	addwf	monta_sd@i^0,w,c
 21062  00164E  6ED9               	movwf	fsr2l,c
 21063  001650  6ADA               	clrf	fsr2h,c
 21064  001652  0E01               	movlw	high _hora
 21065  001654  22DA               	addwfc	fsr2h,f,c
 21066  001656  0E07               	movlw	(high __ramtop+-1)
 21067  001658  64F7               	cpfsgt	tblptrh,c
 21068  00165A  D003               	bra	u15237
 21069  00165C  0008               	tblrd		*
 21070  00165E  50F5               	movf	tablat,w,c
 21071  001660  D005               	bra	u15230
 21072  001662                     u15237:
 21073  001662  CFF6 FFE1          	movff	tblptrl,fsr1l
 21074  001666  CFF7 FFE2          	movff	tblptrh,fsr1h
 21075  00166A  50E7               	movf	indf1,w,c
 21076  00166C                     u15230:
 21077  00166C  6EDF               	movwf	indf2,c
 21078  00166E                     l12788:
 21079                           
 21080                           ;SDCard.c: 317: };SDCard.c: 318: dado++;
 21081  00166E  4A10               	infsnz	monta_sd@dado^0,f,c
 21082  001670  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21083  001672  2A14               	incf	monta_sd@i^0,f,c
 21084  001674  0E06               	movlw	6
 21085  001676  6414               	cpfsgt	monta_sd@i^0,c
 21086  001678  D7D0               	goto	l12784
 21087  00167A  0012               	return	
 21088  00167C                     l12794:
 21089                           
 21090                           ;SDCard.c: 323: for(i=0; i<6;i++)
 21091  00167C  0E00               	movlw	0
 21092  00167E  6E14               	movwf	monta_sd@i^0,c
 21093  001680                     l12800:
 21094                           
 21095                           ;SDCard.c: 324: {;SDCard.c: 325: if(*dado != '\0')
 21096  001680  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21097  001684  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21098  001688  6AF8               	clrf	tblptru,c
 21099  00168A  0E07               	movlw	(high __ramtop+-1)
 21100  00168C  64F7               	cpfsgt	tblptrh,c
 21101  00168E  D003               	bra	u15257
 21102  001690  0008               	tblrd		*
 21103  001692  50F5               	movf	tablat,w,c
 21104  001694  D005               	bra	u15250
 21105  001696                     u15257:
 21106  001696  CFF6 FFE1          	movff	tblptrl,fsr1l
 21107  00169A  CFF7 FFE2          	movff	tblptrh,fsr1h
 21108  00169E  50E7               	movf	indf1,w,c
 21109  0016A0                     u15250:
 21110  0016A0  0900               	iorlw	0
 21111  0016A2  B4D8               	btfsc	status,2,c
 21112  0016A4  D017               	goto	l12804
 21113                           
 21114                           ;SDCard.c: 326: {;SDCard.c: 327: data[i] = *dado;
 21115  0016A6  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21116  0016AA  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21117  0016AE  6AF8               	clrf	tblptru,c
 21118  0016B0  0ED8               	movlw	low _data
 21119  0016B2  2414               	addwf	monta_sd@i^0,w,c
 21120  0016B4  6ED9               	movwf	fsr2l,c
 21121  0016B6  6ADA               	clrf	fsr2h,c
 21122  0016B8  0E01               	movlw	high _data
 21123  0016BA  22DA               	addwfc	fsr2h,f,c
 21124  0016BC  0E07               	movlw	(high __ramtop+-1)
 21125  0016BE  64F7               	cpfsgt	tblptrh,c
 21126  0016C0  D003               	bra	u15277
 21127  0016C2  0008               	tblrd		*
 21128  0016C4  50F5               	movf	tablat,w,c
 21129  0016C6  D005               	bra	u15270
 21130  0016C8                     u15277:
 21131  0016C8  CFF6 FFE1          	movff	tblptrl,fsr1l
 21132  0016CC  CFF7 FFE2          	movff	tblptrh,fsr1h
 21133  0016D0  50E7               	movf	indf1,w,c
 21134  0016D2                     u15270:
 21135  0016D2  6EDF               	movwf	indf2,c
 21136  0016D4                     l12804:
 21137                           
 21138                           ;SDCard.c: 328: };SDCard.c: 329: dado++;
 21139  0016D4  4A10               	infsnz	monta_sd@dado^0,f,c
 21140  0016D6  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21141  0016D8  2A14               	incf	monta_sd@i^0,f,c
 21142  0016DA  0E05               	movlw	5
 21143  0016DC  6414               	cpfsgt	monta_sd@i^0,c
 21144  0016DE  D7D0               	goto	l12800
 21145  0016E0  0012               	return	
 21146  0016E2                     l12810:
 21147                           
 21148                           ;SDCard.c: 334: for(i=0; i<11;i++)
 21149  0016E2  0E00               	movlw	0
 21150  0016E4  6E14               	movwf	monta_sd@i^0,c
 21151  0016E6                     l12816:
 21152                           
 21153                           ;SDCard.c: 335: {;SDCard.c: 336: if(*dado != '\0')
 21154  0016E6  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21155  0016EA  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21156  0016EE  6AF8               	clrf	tblptru,c
 21157  0016F0  0E07               	movlw	(high __ramtop+-1)
 21158  0016F2  64F7               	cpfsgt	tblptrh,c
 21159  0016F4  D003               	bra	u15297
 21160  0016F6  0008               	tblrd		*
 21161  0016F8  50F5               	movf	tablat,w,c
 21162  0016FA  D005               	bra	u15290
 21163  0016FC                     u15297:
 21164  0016FC  CFF6 FFE1          	movff	tblptrl,fsr1l
 21165  001700  CFF7 FFE2          	movff	tblptrh,fsr1h
 21166  001704  50E7               	movf	indf1,w,c
 21167  001706                     u15290:
 21168  001706  0900               	iorlw	0
 21169  001708  B4D8               	btfsc	status,2,c
 21170  00170A  D017               	goto	l12820
 21171                           
 21172                           ;SDCard.c: 337: {;SDCard.c: 338: lt[i] = *dado;
 21173  00170C  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21174  001710  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21175  001714  6AF8               	clrf	tblptru,c
 21176  001716  0EB2               	movlw	low _lt
 21177  001718  2414               	addwf	monta_sd@i^0,w,c
 21178  00171A  6ED9               	movwf	fsr2l,c
 21179  00171C  6ADA               	clrf	fsr2h,c
 21180  00171E  0E01               	movlw	high _lt
 21181  001720  22DA               	addwfc	fsr2h,f,c
 21182  001722  0E07               	movlw	(high __ramtop+-1)
 21183  001724  64F7               	cpfsgt	tblptrh,c
 21184  001726  D003               	bra	u15317
 21185  001728  0008               	tblrd		*
 21186  00172A  50F5               	movf	tablat,w,c
 21187  00172C  D005               	bra	u15310
 21188  00172E                     u15317:
 21189  00172E  CFF6 FFE1          	movff	tblptrl,fsr1l
 21190  001732  CFF7 FFE2          	movff	tblptrh,fsr1h
 21191  001736  50E7               	movf	indf1,w,c
 21192  001738                     u15310:
 21193  001738  6EDF               	movwf	indf2,c
 21194  00173A                     l12820:
 21195                           
 21196                           ;SDCard.c: 339: };SDCard.c: 340: dado++;
 21197  00173A  4A10               	infsnz	monta_sd@dado^0,f,c
 21198  00173C  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21199  00173E  2A14               	incf	monta_sd@i^0,f,c
 21200  001740  0E0A               	movlw	10
 21201  001742  6414               	cpfsgt	monta_sd@i^0,c
 21202  001744  D7D0               	goto	l12816
 21203  001746  0012               	return	
 21204  001748                     l12826:
 21205                           
 21206                           ;SDCard.c: 345: for(i=0; i<12;i++)
 21207  001748  0E00               	movlw	0
 21208  00174A  6E14               	movwf	monta_sd@i^0,c
 21209  00174C                     l12832:
 21210                           
 21211                           ;SDCard.c: 346: {;SDCard.c: 347: if(*dado != '\0')
 21212  00174C  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21213  001750  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21214  001754  6AF8               	clrf	tblptru,c
 21215  001756  0E07               	movlw	(high __ramtop+-1)
 21216  001758  64F7               	cpfsgt	tblptrh,c
 21217  00175A  D003               	bra	u15337
 21218  00175C  0008               	tblrd		*
 21219  00175E  50F5               	movf	tablat,w,c
 21220  001760  D005               	bra	u15330
 21221  001762                     u15337:
 21222  001762  CFF6 FFE1          	movff	tblptrl,fsr1l
 21223  001766  CFF7 FFE2          	movff	tblptrh,fsr1h
 21224  00176A  50E7               	movf	indf1,w,c
 21225  00176C                     u15330:
 21226  00176C  0900               	iorlw	0
 21227  00176E  B4D8               	btfsc	status,2,c
 21228  001770  D017               	goto	l12836
 21229                           
 21230                           ;SDCard.c: 348: {;SDCard.c: 349: lo[i] = *dado;
 21231  001772  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21232  001776  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21233  00177A  6AF8               	clrf	tblptru,c
 21234  00177C  0E98               	movlw	low _lo
 21235  00177E  2414               	addwf	monta_sd@i^0,w,c
 21236  001780  6ED9               	movwf	fsr2l,c
 21237  001782  6ADA               	clrf	fsr2h,c
 21238  001784  0E01               	movlw	high _lo
 21239  001786  22DA               	addwfc	fsr2h,f,c
 21240  001788  0E07               	movlw	(high __ramtop+-1)
 21241  00178A  64F7               	cpfsgt	tblptrh,c
 21242  00178C  D003               	bra	u15357
 21243  00178E  0008               	tblrd		*
 21244  001790  50F5               	movf	tablat,w,c
 21245  001792  D005               	bra	u15350
 21246  001794                     u15357:
 21247  001794  CFF6 FFE1          	movff	tblptrl,fsr1l
 21248  001798  CFF7 FFE2          	movff	tblptrh,fsr1h
 21249  00179C  50E7               	movf	indf1,w,c
 21250  00179E                     u15350:
 21251  00179E  6EDF               	movwf	indf2,c
 21252  0017A0                     l12836:
 21253                           
 21254                           ;SDCard.c: 350: };SDCard.c: 351: dado++;
 21255  0017A0  4A10               	infsnz	monta_sd@dado^0,f,c
 21256  0017A2  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21257  0017A4  2A14               	incf	monta_sd@i^0,f,c
 21258  0017A6  0E0B               	movlw	11
 21259  0017A8  6414               	cpfsgt	monta_sd@i^0,c
 21260  0017AA  D7D0               	goto	l12832
 21261  0017AC  0012               	return	
 21262  0017AE                     l12842:
 21263                           
 21264                           ;SDCard.c: 357: fence = *dado;
 21265  0017AE  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21266  0017B2  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21267  0017B6  6AF8               	clrf	tblptru,c
 21268  0017B8  0E07               	movlw	(high __ramtop+-1)
 21269  0017BA  64F7               	cpfsgt	tblptrh,c
 21270  0017BC  D003               	bra	u15377
 21271  0017BE  0008               	tblrd		*
 21272  0017C0  50F5               	movf	tablat,w,c
 21273  0017C2  D005               	bra	u15370
 21274  0017C4                     u15377:
 21275  0017C4  CFF6 FFE1          	movff	tblptrl,fsr1l
 21276  0017C8  CFF7 FFE2          	movff	tblptrh,fsr1h
 21277  0017CC  50E7               	movf	indf1,w,c
 21278  0017CE                     u15370:
 21279  0017CE  0100               	movlb	0	; () banked
 21280  0017D0  6FF5               	movwf	_fence& (0+255),b
 21281                           
 21282                           ;SDCard.c: 358: break;
 21283  0017D2  0012               	return	
 21284  0017D4                     l12844:
 21285                           
 21286                           ;SDCard.c: 361: for(i=0; i<4;i++)
 21287  0017D4  0E00               	movlw	0
 21288  0017D6  6E14               	movwf	monta_sd@i^0,c
 21289  0017D8                     l12850:
 21290                           
 21291                           ;SDCard.c: 362: {;SDCard.c: 363: string_dado.hora_name[i] = *dado;
 21292  0017D8  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21293  0017DC  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21294  0017E0  6AF8               	clrf	tblptru,c
 21295  0017E2  0E14               	movlw	low (_string_dado+20)
 21296  0017E4  2414               	addwf	monta_sd@i^0,w,c
 21297  0017E6  6ED9               	movwf	fsr2l,c
 21298  0017E8  6ADA               	clrf	fsr2h,c
 21299  0017EA  0E02               	movlw	high (_string_dado+20)
 21300  0017EC  22DA               	addwfc	fsr2h,f,c
 21301  0017EE  0E07               	movlw	(high __ramtop+-1)
 21302  0017F0  64F7               	cpfsgt	tblptrh,c
 21303  0017F2  D003               	bra	u15387
 21304  0017F4  0008               	tblrd		*
 21305  0017F6  50F5               	movf	tablat,w,c
 21306  0017F8  D005               	bra	u15380
 21307  0017FA                     u15387:
 21308  0017FA  CFF6 FFE1          	movff	tblptrl,fsr1l
 21309  0017FE  CFF7 FFE2          	movff	tblptrh,fsr1h
 21310  001802  50E7               	movf	indf1,w,c
 21311  001804                     u15380:
 21312  001804  6EDF               	movwf	indf2,c
 21313                           
 21314                           ;SDCard.c: 364: dado++;
 21315  001806  4A10               	infsnz	monta_sd@dado^0,f,c
 21316  001808  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21317  00180A  2A14               	incf	monta_sd@i^0,f,c
 21318  00180C  0E03               	movlw	3
 21319  00180E  6414               	cpfsgt	monta_sd@i^0,c
 21320  001810  D7E3               	goto	l12850
 21321  001812  0012               	return	
 21322  001814                     l12858:
 21323                           
 21324                           ;SDCard.c: 370: for(i=0; i<4;i++)
 21325  001814  0E00               	movlw	0
 21326  001816  6E14               	movwf	monta_sd@i^0,c
 21327  001818                     l12864:
 21328                           
 21329                           ;SDCard.c: 371: {;SDCard.c: 372: string_dado.data_name[i] = *dado;
 21330  001818  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21331  00181C  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21332  001820  6AF8               	clrf	tblptru,c
 21333  001822  0E12               	movlw	low (_string_dado+18)
 21334  001824  2414               	addwf	monta_sd@i^0,w,c
 21335  001826  6ED9               	movwf	fsr2l,c
 21336  001828  6ADA               	clrf	fsr2h,c
 21337  00182A  0E02               	movlw	high (_string_dado+18)
 21338  00182C  22DA               	addwfc	fsr2h,f,c
 21339  00182E  0E07               	movlw	(high __ramtop+-1)
 21340  001830  64F7               	cpfsgt	tblptrh,c
 21341  001832  D003               	bra	u15407
 21342  001834  0008               	tblrd		*
 21343  001836  50F5               	movf	tablat,w,c
 21344  001838  D005               	bra	u15400
 21345  00183A                     u15407:
 21346  00183A  CFF6 FFE1          	movff	tblptrl,fsr1l
 21347  00183E  CFF7 FFE2          	movff	tblptrh,fsr1h
 21348  001842  50E7               	movf	indf1,w,c
 21349  001844                     u15400:
 21350  001844  6EDF               	movwf	indf2,c
 21351                           
 21352                           ;SDCard.c: 373: dado++;
 21353  001846  4A10               	infsnz	monta_sd@dado^0,f,c
 21354  001848  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21355  00184A  2A14               	incf	monta_sd@i^0,f,c
 21356  00184C  0E03               	movlw	3
 21357  00184E  6414               	cpfsgt	monta_sd@i^0,c
 21358  001850  D7E3               	goto	l12864
 21359  001852  0012               	return	
 21360  001854                     l12872:
 21361                           
 21362                           ;SDCard.c: 378: for(i=0; i<6;i++)
 21363  001854  0E00               	movlw	0
 21364  001856  6E14               	movwf	monta_sd@i^0,c
 21365  001858                     l12878:
 21366                           
 21367                           ;SDCard.c: 379: {;SDCard.c: 380: if(*dado != ' ' && *dado != '\0')
 21368  001858  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21369  00185C  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21370  001860  6AF8               	clrf	tblptru,c
 21371  001862  0E07               	movlw	(high __ramtop+-1)
 21372  001864  64F7               	cpfsgt	tblptrh,c
 21373  001866  D003               	bra	u15427
 21374  001868  0008               	tblrd		*
 21375  00186A  50F5               	movf	tablat,w,c
 21376  00186C  D005               	bra	u15420
 21377  00186E                     u15427:
 21378  00186E  CFF6 FFE1          	movff	tblptrl,fsr1l
 21379  001872  CFF7 FFE2          	movff	tblptrh,fsr1h
 21380  001876  50E7               	movf	indf1,w,c
 21381  001878                     u15420:
 21382  001878  0A20               	xorlw	32
 21383  00187A  B4D8               	btfsc	status,2,c
 21384  00187C  D02A               	goto	l12884
 21385  00187E  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21386  001882  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21387  001886  6AF8               	clrf	tblptru,c
 21388  001888  0E07               	movlw	(high __ramtop+-1)
 21389  00188A  64F7               	cpfsgt	tblptrh,c
 21390  00188C  D003               	bra	u15447
 21391  00188E  0008               	tblrd		*
 21392  001890  50F5               	movf	tablat,w,c
 21393  001892  D005               	bra	u15440
 21394  001894                     u15447:
 21395  001894  CFF6 FFE1          	movff	tblptrl,fsr1l
 21396  001898  CFF7 FFE2          	movff	tblptrh,fsr1h
 21397  00189C  50E7               	movf	indf1,w,c
 21398  00189E                     u15440:
 21399  00189E  0900               	iorlw	0
 21400  0018A0  B4D8               	btfsc	status,2,c
 21401  0018A2  D017               	goto	l12884
 21402                           
 21403                           ;SDCard.c: 381: {;SDCard.c: 382: vel[i] = *dado;
 21404  0018A4  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21405  0018A8  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21406  0018AC  6AF8               	clrf	tblptru,c
 21407  0018AE  0EDE               	movlw	low _vel
 21408  0018B0  2414               	addwf	monta_sd@i^0,w,c
 21409  0018B2  6ED9               	movwf	fsr2l,c
 21410  0018B4  6ADA               	clrf	fsr2h,c
 21411  0018B6  0E01               	movlw	high _vel
 21412  0018B8  22DA               	addwfc	fsr2h,f,c
 21413  0018BA  0E07               	movlw	(high __ramtop+-1)
 21414  0018BC  64F7               	cpfsgt	tblptrh,c
 21415  0018BE  D003               	bra	u15467
 21416  0018C0  0008               	tblrd		*
 21417  0018C2  50F5               	movf	tablat,w,c
 21418  0018C4  D005               	bra	u15460
 21419  0018C6                     u15467:
 21420  0018C6  CFF6 FFE1          	movff	tblptrl,fsr1l
 21421  0018CA  CFF7 FFE2          	movff	tblptrh,fsr1h
 21422  0018CE  50E7               	movf	indf1,w,c
 21423  0018D0                     u15460:
 21424  0018D0  6EDF               	movwf	indf2,c
 21425  0018D2                     l12884:
 21426                           
 21427                           ;SDCard.c: 383: };SDCard.c: 385: dado++;
 21428  0018D2  4A10               	infsnz	monta_sd@dado^0,f,c
 21429  0018D4  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21430  0018D6  2A14               	incf	monta_sd@i^0,f,c
 21431  0018D8  0E05               	movlw	5
 21432  0018DA  6414               	cpfsgt	monta_sd@i^0,c
 21433  0018DC  D7BD               	goto	l12878
 21434  0018DE  0012               	return	
 21435  0018E0                     l12892:
 21436  0018E0  5013               	movf	monta_sd@index^0,w,c
 21437                           
 21438                           ; Switch size 1, requested type "simple"
 21439                           ; Number of cases is 8, Range of values is 0 to 7
 21440                           ; switch strategies available:
 21441                           ; Name         Instructions Cycles
 21442                           ; simple_byte           25    13 (average)
 21443                           ;	Chosen strategy is simple_byte
 21444  0018E2  0A00               	xorlw	0	; case 0
 21445  0018E4  B4D8               	btfsc	status,2,c
 21446  0018E6  D697               	goto	l12778
 21447  0018E8  0A01               	xorlw	1	; case 1
 21448  0018EA  B4D8               	btfsc	status,2,c
 21449  0018EC  D6C7               	goto	l12794
 21450  0018EE  0A03               	xorlw	3	; case 2
 21451  0018F0  B4D8               	btfsc	status,2,c
 21452  0018F2  D6F7               	goto	l12810
 21453  0018F4  0A01               	xorlw	1	; case 3
 21454  0018F6  B4D8               	btfsc	status,2,c
 21455  0018F8  D727               	goto	l12826
 21456  0018FA  0A07               	xorlw	7	; case 4
 21457  0018FC  B4D8               	btfsc	status,2,c
 21458  0018FE  D757               	goto	l12842
 21459  001900  0A01               	xorlw	1	; case 5
 21460  001902  B4D8               	btfsc	status,2,c
 21461  001904  D767               	goto	l12844
 21462  001906  0A03               	xorlw	3	; case 6
 21463  001908  B4D8               	btfsc	status,2,c
 21464  00190A  D784               	goto	l12858
 21465  00190C  0A01               	xorlw	1	; case 7
 21466  00190E  A4D8               	btfss	status,2,c
 21467  001910  0012               	return	
 21468  001912  D7A0               	goto	l12872
 21469  001914                     __end_of_monta_sd:
 21470                           	callstack 0
 21471                           
 21472 ;; *************** function _strlen *****************
 21473 ;; Defined at:
 21474 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strlen.c"
 21475 ;; Parameters:    Size  Location     Type
 21476 ;;  s               2    9[COMRAM] PTR const unsigned char 
 21477 ;;		 -> disparo_gravacao@velocidade(12), dados_data(18), dados_hora(18), dados_long(36), 
 21478 ;;		 -> dados_lat(33), STR_21(2), STR_20(2), rawSpeed(20), 
 21479 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
 21480 ;; Auto vars:     Size  Location     Type
 21481 ;;  cp              2   11[COMRAM] PTR const unsigned char 
 21482 ;;		 -> disparo_gravacao@velocidade(12), dados_data(18), dados_hora(18), dados_long(36), 
 21483 ;;		 -> dados_lat(33), STR_21(2), STR_20(2), rawSpeed(20), 
 21484 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
 21485 ;; Return value:  Size  Location     Type
 21486 ;;                  2    9[COMRAM] unsigned int 
 21487 ;; Registers used:
 21488 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 21489 ;; Tracked objects:
 21490 ;;		On entry : 0/2
 21491 ;;		On exit  : 0/0
 21492 ;;		Unchanged: 0/0
 21493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21494 ;;      Params:         2       0       0       0       0       0       0       0       0
 21495 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21496 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21497 ;;      Totals:         4       0       0       0       0       0       0       0       0
 21498 ;;Total ram usage:        4 bytes
 21499 ;; Hardware stack levels used:    1
 21500 ;; Hardware stack levels required when called:    2
 21501 ;; This function calls:
 21502 ;;		Nothing
 21503 ;; This function is called by:
 21504 ;;		_monta_sd
 21505 ;; This function uses a non-reentrant model
 21506 ;;
 21507                           
 21508                           	psect	text128
 21509  0054DC                     __ptext128:
 21510                           	callstack 0
 21511  0054DC                     _strlen:
 21512                           	callstack 24
 21513                           
 21514                           ;incstack = 0
 21515  0054DC  C00A  F00C         	movff	strlen@s,strlen@cp
 21516  0054E0  C00B  F00D         	movff	strlen@s+1,strlen@cp+1
 21517  0054E4  D002               	goto	l12634
 21518  0054E6                     l12632:
 21519  0054E6  4A0C               	infsnz	strlen@cp^0,f,c
 21520  0054E8  2A0D               	incf	(strlen@cp+1)^0,f,c
 21521  0054EA                     l12634:
 21522  0054EA  C00C  FFF6         	movff	strlen@cp,tblptrl
 21523  0054EE  C00D  FFF7         	movff	strlen@cp+1,tblptrh
 21524  0054F2  6AF8               	clrf	tblptru,c
 21525  0054F4  0E07               	movlw	(high __ramtop+-1)
 21526  0054F6  64F7               	cpfsgt	tblptrh,c
 21527  0054F8  D003               	bra	u14937
 21528  0054FA  0008               	tblrd		*
 21529  0054FC  50F5               	movf	tablat,w,c
 21530  0054FE  D005               	bra	u14930
 21531  005500                     u14937:
 21532  005500  CFF6 FFE1          	movff	tblptrl,fsr1l
 21533  005504  CFF7 FFE2          	movff	tblptrh,fsr1h
 21534  005508  50E7               	movf	indf1,w,c
 21535  00550A                     u14930:
 21536  00550A  0900               	iorlw	0
 21537  00550C  A4D8               	btfss	status,2,c
 21538  00550E  D7EB               	goto	l12632
 21539  005510  500A               	movf	strlen@s^0,w,c
 21540  005512  5C0C               	subwf	strlen@cp^0,w,c
 21541  005514  6E0A               	movwf	?_strlen^0,c
 21542  005516  500B               	movf	(strlen@s+1)^0,w,c
 21543  005518  580D               	subwfb	(strlen@cp+1)^0,w,c
 21544  00551A  6E0B               	movwf	(?_strlen+1)^0,c
 21545  00551C  0012               	return		;funcret
 21546  00551E                     __end_of_strlen:
 21547                           	callstack 0
 21548                           
 21549 ;; *************** function _atoi *****************
 21550 ;; Defined at:
 21551 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\atoi.c"
 21552 ;; Parameters:    Size  Location     Type
 21553 ;;  s               3   15[COMRAM] PTR const unsigned char 
 21554 ;;		 -> ROM(32767), NULL(0), rawSpeed(20), 
 21555 ;; Auto vars:     Size  Location     Type
 21556 ;;  a               2   21[COMRAM] int 
 21557 ;;  sign            1   20[COMRAM] unsigned char 
 21558 ;; Return value:  Size  Location     Type
 21559 ;;                  2   15[COMRAM] int 
 21560 ;; Registers used:
 21561 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21562 ;; Tracked objects:
 21563 ;;		On entry : 3F/0
 21564 ;;		On exit  : 0/0
 21565 ;;		Unchanged: 0/0
 21566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21567 ;;      Params:         3       0       0       0       0       0       0       0       0
 21568 ;;      Locals:         3       0       0       0       0       0       0       0       0
 21569 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21570 ;;      Totals:         8       0       0       0       0       0       0       0       0
 21571 ;;Total ram usage:        8 bytes
 21572 ;; Hardware stack levels used:    1
 21573 ;; Hardware stack levels required when called:    3
 21574 ;; This function calls:
 21575 ;;		___wmul
 21576 ;;		_isdigit
 21577 ;; This function is called by:
 21578 ;;		_verifica_dados_operacionais
 21579 ;;		_disparo_gravacao
 21580 ;; This function uses a non-reentrant model
 21581 ;;
 21582                           
 21583                           	psect	text129
 21584  0031EE                     __ptext129:
 21585                           	callstack 0
 21586  0031EE                     _atoi:
 21587                           	callstack 25
 21588                           
 21589                           ; BSR set to: 0
 21590                           
 21591                           ;incstack = 0
 21592  0031EE  D006               	goto	l13210
 21593  0031F0                     l13208:
 21594  0031F0  0E01               	movlw	1
 21595  0031F2  2610               	addwf	atoi@s^0,f,c
 21596  0031F4  0E00               	movlw	0
 21597  0031F6  2211               	addwfc	(atoi@s+1)^0,f,c
 21598  0031F8  0E00               	movlw	0
 21599  0031FA  2212               	addwfc	(atoi@s+2)^0,f,c
 21600  0031FC                     l13210:
 21601  0031FC  C010  FFF6         	movff	atoi@s,tblptrl
 21602  003200  C011  FFF7         	movff	atoi@s+1,tblptrh
 21603  003204  C012  FFF8         	movff	atoi@s+2,tblptru
 21604  003208  BAF8               	btfsc	tblptru,5,c
 21605  00320A  D003               	bra	u15917
 21606  00320C  0008               	tblrd		*
 21607  00320E  50F5               	movf	tablat,w,c
 21608  003210  D005               	bra	u15910
 21609  003212                     u15917:
 21610  003212  CFF6 FFE1          	movff	tblptrl,fsr1l
 21611  003216  CFF7 FFE2          	movff	tblptrh,fsr1h
 21612  00321A  50E7               	movf	indf1,w,c
 21613  00321C                     u15910:
 21614  00321C  0A20               	xorlw	32
 21615  00321E  B4D8               	btfsc	status,2,c
 21616  003220  D7E7               	goto	l13208
 21617  003222  C010  FFF6         	movff	atoi@s,tblptrl
 21618  003226  C011  FFF7         	movff	atoi@s+1,tblptrh
 21619  00322A  C012  FFF8         	movff	atoi@s+2,tblptru
 21620  00322E  BAF8               	btfsc	tblptru,5,c
 21621  003230  D003               	bra	u15937
 21622  003232  0008               	tblrd		*
 21623  003234  50F5               	movf	tablat,w,c
 21624  003236  D005               	bra	u15930
 21625  003238                     u15937:
 21626  003238  CFF6 FFE1          	movff	tblptrl,fsr1l
 21627  00323C  CFF7 FFE2          	movff	tblptrh,fsr1h
 21628  003240  50E7               	movf	indf1,w,c
 21629  003242                     u15930:
 21630  003242  0A09               	xorlw	9
 21631  003244  B4D8               	btfsc	status,2,c
 21632  003246  D7D4               	goto	l13208
 21633  003248  0E00               	movlw	0
 21634  00324A  6E17               	movwf	(atoi@a+1)^0,c
 21635  00324C  0E00               	movlw	0
 21636  00324E  6E16               	movwf	atoi@a^0,c
 21637  003250  0E00               	movlw	0
 21638  003252  6E15               	movwf	atoi@sign^0,c
 21639  003254  C010  FFF6         	movff	atoi@s,tblptrl
 21640  003258  C011  FFF7         	movff	atoi@s+1,tblptrh
 21641  00325C  C012  FFF8         	movff	atoi@s+2,tblptru
 21642  003260  BAF8               	btfsc	tblptru,5,c
 21643  003262  D003               	bra	u15957
 21644  003264  0008               	tblrd		*
 21645  003266  50F5               	movf	tablat,w,c
 21646  003268  D005               	bra	u15950
 21647  00326A                     u15957:
 21648  00326A  CFF6 FFE1          	movff	tblptrl,fsr1l
 21649  00326E  CFF7 FFE2          	movff	tblptrh,fsr1h
 21650  003272  50E7               	movf	indf1,w,c
 21651  003274                     u15950:
 21652  003274  0A2D               	xorlw	45
 21653  003276  A4D8               	btfss	status,2,c
 21654  003278  D008               	goto	l13222
 21655  00327A  2A15               	incf	atoi@sign^0,f,c
 21656  00327C                     l13220:
 21657  00327C  0E01               	movlw	1
 21658  00327E  2610               	addwf	atoi@s^0,f,c
 21659  003280  0E00               	movlw	0
 21660  003282  2211               	addwfc	(atoi@s+1)^0,f,c
 21661  003284  0E00               	movlw	0
 21662  003286  2212               	addwfc	(atoi@s+2)^0,f,c
 21663  003288  D03A               	goto	l13230
 21664  00328A                     l13222:
 21665  00328A  C010  FFF6         	movff	atoi@s,tblptrl
 21666  00328E  C011  FFF7         	movff	atoi@s+1,tblptrh
 21667  003292  C012  FFF8         	movff	atoi@s+2,tblptru
 21668  003296  BAF8               	btfsc	tblptru,5,c
 21669  003298  D003               	bra	u15977
 21670  00329A  0008               	tblrd		*
 21671  00329C  50F5               	movf	tablat,w,c
 21672  00329E  D005               	bra	u15970
 21673  0032A0                     u15977:
 21674  0032A0  CFF6 FFE1          	movff	tblptrl,fsr1l
 21675  0032A4  CFF7 FFE2          	movff	tblptrh,fsr1h
 21676  0032A8  50E7               	movf	indf1,w,c
 21677  0032AA                     u15970:
 21678  0032AA  0A2B               	xorlw	43
 21679  0032AC  B4D8               	btfsc	status,2,c
 21680  0032AE  D7E6               	goto	l13220
 21681  0032B0  D026               	goto	l13230
 21682  0032B2                     l13226:
 21683  0032B2  C016  F00A         	movff	atoi@a,___wmul@multiplier
 21684  0032B6  C017  F00B         	movff	atoi@a+1,___wmul@multiplier+1
 21685  0032BA  0E00               	movlw	0
 21686  0032BC  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 21687  0032BE  0E0A               	movlw	10
 21688  0032C0  6E0C               	movwf	___wmul@multiplicand^0,c
 21689  0032C2  EC92  F02C         	call	___wmul	;wreg free
 21690  0032C6  C010  FFF6         	movff	atoi@s,tblptrl
 21691  0032CA  C011  FFF7         	movff	atoi@s+1,tblptrh
 21692  0032CE  C012  FFF8         	movff	atoi@s+2,tblptru
 21693  0032D2  BAF8               	btfsc	tblptru,5,c
 21694  0032D4  D003               	bra	u15997
 21695  0032D6  0008               	tblrd		*
 21696  0032D8  50F5               	movf	tablat,w,c
 21697  0032DA  D005               	bra	u15990
 21698  0032DC                     u15997:
 21699  0032DC  CFF6 FFE1          	movff	tblptrl,fsr1l
 21700  0032E0  CFF7 FFE2          	movff	tblptrh,fsr1h
 21701  0032E4  50E7               	movf	indf1,w,c
 21702  0032E6                     u15990:
 21703  0032E6  6E13               	movwf	??_atoi^0,c
 21704  0032E8  5013               	movf	??_atoi^0,w,c
 21705  0032EA  260A               	addwf	?___wmul^0,f,c
 21706  0032EC  0E00               	movlw	0
 21707  0032EE  220B               	addwfc	(?___wmul+1)^0,f,c
 21708  0032F0  0ED0               	movlw	208
 21709  0032F2  240A               	addwf	?___wmul^0,w,c
 21710  0032F4  6E16               	movwf	atoi@a^0,c
 21711  0032F6  0EFF               	movlw	255
 21712  0032F8  200B               	addwfc	(?___wmul+1)^0,w,c
 21713  0032FA  6E17               	movwf	(atoi@a+1)^0,c
 21714  0032FC  D7BF               	goto	l13220
 21715  0032FE                     l13230:
 21716  0032FE  C010  FFF6         	movff	atoi@s,tblptrl
 21717  003302  C011  FFF7         	movff	atoi@s+1,tblptrh
 21718  003306  C012  FFF8         	movff	atoi@s+2,tblptru
 21719  00330A  BAF8               	btfsc	tblptru,5,c
 21720  00330C  D003               	bra	u16007
 21721  00330E  0008               	tblrd		*
 21722  003310  50F5               	movf	tablat,w,c
 21723  003312  D005               	bra	u16000
 21724  003314                     u16007:
 21725  003314  CFF6 FFE1          	movff	tblptrl,fsr1l
 21726  003318  CFF7 FFE2          	movff	tblptrh,fsr1h
 21727  00331C  50E7               	movf	indf1,w,c
 21728  00331E                     u16000:
 21729  00331E  EC6D  F02D         	call	_isdigit
 21730  003322  B0D8               	btfsc	status,0,c
 21731  003324  D7C6               	goto	l13226
 21732  003326  5015               	movf	atoi@sign^0,w,c
 21733  003328  B4D8               	btfsc	status,2,c
 21734  00332A  D00D               	goto	l2422
 21735  00332C  C016  F013         	movff	atoi@a,??_atoi
 21736  003330  C017  F014         	movff	atoi@a+1,??_atoi+1
 21737  003334  1E13               	comf	??_atoi^0,f,c
 21738  003336  1E14               	comf	(??_atoi+1)^0,f,c
 21739  003338  4A13               	infsnz	??_atoi^0,f,c
 21740  00333A  2A14               	incf	(??_atoi+1)^0,f,c
 21741  00333C  C013  F010         	movff	??_atoi,?_atoi
 21742  003340  C014  F011         	movff	??_atoi+1,?_atoi+1
 21743  003344  0012               	return	
 21744  003346                     l2422:
 21745  003346  C016  F010         	movff	atoi@a,?_atoi
 21746  00334A  C017  F011         	movff	atoi@a+1,?_atoi+1
 21747  00334E  0012               	return		;funcret
 21748  003350                     __end_of_atoi:
 21749                           	callstack 0
 21750                           
 21751 ;; *************** function _isdigit *****************
 21752 ;; Defined at:
 21753 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 21754 ;; Parameters:    Size  Location     Type
 21755 ;;  c               1    wreg     unsigned char 
 21756 ;; Auto vars:     Size  Location     Type
 21757 ;;  c               1   11[COMRAM] unsigned char 
 21758 ;; Return value:  Size  Location     Type
 21759 ;;		None               void
 21760 ;; Registers used:
 21761 ;;		wreg, status,2, status,0
 21762 ;; Tracked objects:
 21763 ;;		On entry : 0/0
 21764 ;;		On exit  : 0/0
 21765 ;;		Unchanged: 0/0
 21766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21767 ;;      Params:         0       0       0       0       0       0       0       0       0
 21768 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21769 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21770 ;;      Totals:         3       0       0       0       0       0       0       0       0
 21771 ;;Total ram usage:        3 bytes
 21772 ;; Hardware stack levels used:    1
 21773 ;; Hardware stack levels required when called:    2
 21774 ;; This function calls:
 21775 ;;		Nothing
 21776 ;; This function is called by:
 21777 ;;		_atoi
 21778 ;;		_atol
 21779 ;; This function uses a non-reentrant model
 21780 ;;
 21781                           
 21782                           	psect	text130
 21783  005ADA                     __ptext130:
 21784                           	callstack 0
 21785  005ADA                     _isdigit:
 21786                           	callstack 25
 21787                           
 21788                           ;incstack = 0
 21789                           ;isdigit@c stored from wreg
 21790  005ADA  6E0C               	movwf	isdigit@c^0,c
 21791  005ADC  0E00               	movlw	0
 21792  005ADE  6E0B               	movwf	_isdigit$3275^0,c
 21793  005AE0  0E3A               	movlw	58
 21794  005AE2  600C               	cpfslt	isdigit@c^0,c
 21795  005AE4  D005               	goto	l10924
 21796  005AE6  0E2F               	movlw	47
 21797  005AE8  640C               	cpfsgt	isdigit@c^0,c
 21798  005AEA  D002               	goto	l10924
 21799  005AEC  0E01               	movlw	1
 21800  005AEE  6E0B               	movwf	_isdigit$3275^0,c
 21801  005AF0                     l10924:
 21802  005AF0  C00B  F00A         	movff	_isdigit$3275,??_isdigit
 21803  005AF4  300A               	rrcf	??_isdigit^0,w,c
 21804  005AF6  0012               	return		;funcret
 21805  005AF8                     __end_of_isdigit:
 21806                           	callstack 0
 21807                           
 21808 ;; *************** function ___wmul *****************
 21809 ;; Defined at:
 21810 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 21811 ;; Parameters:    Size  Location     Type
 21812 ;;  multiplier      2    9[COMRAM] unsigned int 
 21813 ;;  multiplicand    2   11[COMRAM] unsigned int 
 21814 ;; Auto vars:     Size  Location     Type
 21815 ;;  product         2   13[COMRAM] unsigned int 
 21816 ;; Return value:  Size  Location     Type
 21817 ;;                  2    9[COMRAM] unsigned int 
 21818 ;; Registers used:
 21819 ;;		wreg, status,2, status,0, prodl, prodh
 21820 ;; Tracked objects:
 21821 ;;		On entry : 0/2
 21822 ;;		On exit  : 0/0
 21823 ;;		Unchanged: 0/0
 21824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21825 ;;      Params:         4       0       0       0       0       0       0       0       0
 21826 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21827 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21828 ;;      Totals:         6       0       0       0       0       0       0       0       0
 21829 ;;Total ram usage:        6 bytes
 21830 ;; Hardware stack levels used:    1
 21831 ;; Hardware stack levels required when called:    2
 21832 ;; This function calls:
 21833 ;;		Nothing
 21834 ;; This function is called by:
 21835 ;;		_get_cluster
 21836 ;;		_put_cluster
 21837 ;;		_fprintf
 21838 ;;		_atoi
 21839 ;;		_disparo_gravacao
 21840 ;; This function uses a non-reentrant model
 21841 ;;
 21842                           
 21843                           	psect	text131
 21844  005924                     __ptext131:
 21845                           	callstack 0
 21846  005924                     ___wmul:
 21847                           	callstack 25
 21848                           
 21849                           ;incstack = 0
 21850  005924  500A               	movf	___wmul@multiplier^0,w,c
 21851  005926  020C               	mulwf	___wmul@multiplicand^0,c
 21852  005928  CFF3 F00E          	movff	prodl,___wmul@product
 21853  00592C  CFF4 F00F          	movff	prodh,___wmul@product+1
 21854  005930  500A               	movf	___wmul@multiplier^0,w,c
 21855  005932  020D               	mulwf	(___wmul@multiplicand+1)^0,c
 21856  005934  50F3               	movf	243,w,c
 21857  005936  260F               	addwf	(___wmul@product+1)^0,f,c
 21858  005938  500B               	movf	(___wmul@multiplier+1)^0,w,c
 21859  00593A  020C               	mulwf	___wmul@multiplicand^0,c
 21860  00593C  50F3               	movf	243,w,c
 21861  00593E  260F               	addwf	(___wmul@product+1)^0,f,c
 21862  005940  C00E  F00A         	movff	___wmul@product,?___wmul
 21863  005944  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
 21864  005948  0012               	return		;funcret
 21865  00594A                     __end_of___wmul:
 21866                           	callstack 0
 21867                           
 21868 ;; *************** function _isr *****************
 21869 ;; Defined at:
 21870 ;;		line 113 in file "main.c"
 21871 ;; Parameters:    Size  Location     Type
 21872 ;;		None
 21873 ;; Auto vars:     Size  Location     Type
 21874 ;;  cont            1    8[COMRAM] unsigned char 
 21875 ;; Return value:  Size  Location     Type
 21876 ;;                  1    wreg      void 
 21877 ;; Registers used:
 21878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21879 ;; Tracked objects:
 21880 ;;		On entry : 0/0
 21881 ;;		On exit  : 0/0
 21882 ;;		Unchanged: 0/0
 21883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21884 ;;      Params:         0       0       0       0       0       0       0       0       0
 21885 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21886 ;;      Temps:          6       0       0       0       0       0       0       0       0
 21887 ;;      Totals:         7       0       0       0       0       0       0       0       0
 21888 ;;Total ram usage:        7 bytes
 21889 ;; Hardware stack levels used:    1
 21890 ;; Hardware stack levels required when called:    1
 21891 ;; This function calls:
 21892 ;;		_recebe_dado_uart
 21893 ;;		_tratamento_uart
 21894 ;;		i2_write_timer_zero
 21895 ;; This function is called by:
 21896 ;;		Interrupt level 2
 21897 ;; This function uses a non-reentrant model
 21898 ;;
 21899                           
 21900                           	psect	intcode
 21901  000008                     __pintcode:
 21902                           	callstack 0
 21903  000008                     _isr:
 21904                           	callstack 13
 21905                           
 21906                           ;incstack = 0
 21907  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 21908  00000A  EDDD  F01E         	call	int_func,f	;refresh shadow registers
 21909                           
 21910                           	psect	intcode_body
 21911  003DBA                     __pintcode_body:
 21912                           	callstack 13
 21913  003DBA                     int_func:
 21914                           	callstack 13
 21915  003DBA  0006               	pop		; remove dummy address from shadow register refresh
 21916  003DBC  CFD9 F005          	movff	fsr2l,??_isr+2
 21917  003DC0  CFDA F006          	movff	fsr2h,??_isr+3
 21918  003DC4  CFF3 F007          	movff	prodl,??_isr+4
 21919  003DC8  CFF4 F008          	movff	prodh,??_isr+5
 21920                           
 21921                           ;main.c: 115: unsigned char cont;;main.c: 118: if (PIE1bits.RCIE && PIR1bits.RCIF)
 21922  003DCC  BA9D               	btfsc	157,5,c	;volatile
 21923  003DCE  AA9E               	btfss	158,5,c	;volatile
 21924  003DD0  D015               	goto	i2l10084
 21925                           
 21926                           ;main.c: 119: {;main.c: 120: PIR1bits.RCIF = 0;
 21927  003DD2  9A9E               	bcf	158,5,c	;volatile
 21928                           
 21929                           ;main.c: 121: data_uart_recebe = recebe_dado_uart();
 21930  003DD4  ECC1  F02D         	call	_recebe_dado_uart	;wreg free
 21931  003DD8  0100               	movlb	0	; () banked
 21932  003DDA  6FF3               	movwf	_data_uart_recebe& (0+255),b
 21933                           
 21934                           ; BSR set to: 0
 21935                           ;main.c: 122: tratamento_uart(data_uart_recebe);
 21936  003DDC  51F3               	movf	_data_uart_recebe& (0+255),w,b
 21937  003DDE  EC56  F01D         	call	_tratamento_uart
 21938                           
 21939                           ;main.c: 123: PORTBbits.RB2 = !PORTBbits.RB2;
 21940  003DE2  B481               	btfsc	129,2,c	;volatile
 21941  003DE4  D003               	goto	i2u1117_40
 21942  003DE6  6A03               	clrf	??_isr^0,c
 21943  003DE8  2A03               	incf	??_isr^0,f,c
 21944  003DEA  D001               	goto	i2u1118_48
 21945  003DEC                     i2u1117_40:
 21946  003DEC  6A03               	clrf	??_isr^0,c
 21947  003DEE                     i2u1118_48:
 21948  003DEE  4603               	rlncf	??_isr^0,f,c
 21949  003DF0  4603               	rlncf	??_isr^0,f,c
 21950  003DF2  5081               	movf	129,w,c	;volatile
 21951  003DF4  1803               	xorwf	??_isr^0,w,c
 21952  003DF6  0BFB               	andlw	-5
 21953  003DF8  1803               	xorwf	??_isr^0,w,c
 21954  003DFA  6E81               	movwf	129,c	;volatile
 21955  003DFC                     i2l10084:
 21956                           
 21957                           ;main.c: 124: };main.c: 127: unsigned char cont;;main.c: 129: if (TMR0IF && T0IF)
 21958  003DFC  B4F2               	btfsc	4082,2,c	;volatile
 21959  003DFE  A4F2               	btfss	4082,2,c	;volatile
 21960  003E00  D046               	goto	i2l10122
 21961                           
 21962                           ;main.c: 130: {;main.c: 131: INTCONbits.TMR0IF = 0;
 21963  003E02  94F2               	bcf	242,2,c	;volatile
 21964                           
 21965                           ;main.c: 132: sinaliza_int_timer = 1;
 21966  003E04  0E01               	movlw	1
 21967  003E06  0100               	movlb	0	; () banked
 21968  003E08  6FF2               	movwf	_sinaliza_int_timer& (0+255),b
 21969                           
 21970                           ;main.c: 134: for(cont= 0; cont<3;cont++)
 21971  003E0A  0E00               	movlw	0
 21972  003E0C  6E09               	movwf	isr@cont^0,c
 21973  003E0E                     i2l10096:
 21974                           
 21975                           ;main.c: 135: {;main.c: 136: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
 21976  003E0E  5009               	movf	isr@cont^0,w,c
 21977  003E10  0D02               	mullw	2
 21978  003E12  0E2D               	movlw	low _tempo_tarefa
 21979  003E14  24F3               	addwf	243,w,c
 21980  003E16  6ED9               	movwf	fsr2l,c
 21981  003E18  0E01               	movlw	high _tempo_tarefa
 21982  003E1A  20F4               	addwfc	prodh,w,c
 21983  003E1C  6EDA               	movwf	fsr2h,c
 21984  003E1E  50DE               	movf	postinc2,w,c
 21985  003E20  10DE               	iorwf	postinc2,w,c
 21986  003E22  B4D8               	btfsc	status,2,c
 21987  003E24  D00B               	goto	i2l10100
 21988  003E26  5009               	movf	isr@cont^0,w,c
 21989  003E28  0D02               	mullw	2
 21990  003E2A  0E2D               	movlw	low _tempo_tarefa
 21991  003E2C  24F3               	addwf	243,w,c
 21992  003E2E  6ED9               	movwf	fsr2l,c
 21993  003E30  0E01               	movlw	high _tempo_tarefa
 21994  003E32  20F4               	addwfc	prodh,w,c
 21995  003E34  6EDA               	movwf	fsr2h,c
 21996  003E36  06DE               	decf	postinc2,f,c
 21997  003E38  0E00               	movlw	0
 21998  003E3A  5ADD               	subwfb	postdec2,f,c
 21999  003E3C                     i2l10100:
 22000  003E3C  2A09               	incf	isr@cont^0,f,c
 22001  003E3E  0E02               	movlw	2
 22002  003E40  6409               	cpfsgt	isr@cont^0,c
 22003  003E42  D7E5               	goto	i2l10096
 22004                           
 22005                           ;main.c: 138: };main.c: 139: if(time_sd > 0) time_sd--;
 22006  003E44  0101               	movlb	1	; () banked
 22007  003E46  516E               	movf	_time_sd& (0+255),w,b
 22008  003E48  116F               	iorwf	(_time_sd+1)& (0+255),w,b
 22009  003E4A  B4D8               	btfsc	status,2,c
 22010  003E4C  D003               	goto	i2l10108
 22011                           
 22012                           ; BSR set to: 1
 22013  003E4E  076E               	decf	_time_sd& (0+255),f,b
 22014  003E50  A0D8               	btfss	status,0,c
 22015  003E52  076F               	decf	(_time_sd+1)& (0+255),f,b
 22016  003E54                     i2l10108:
 22017                           
 22018                           ; BSR set to: 1
 22019                           ;main.c: 140: if(time_atualizacao > 0) time_atualizacao--;
 22020  003E54  0100               	movlb	0	; () banked
 22021  003E56  51EA               	movf	_time_atualizacao& (0+255),w,b
 22022  003E58  11EB               	iorwf	(_time_atualizacao+1)& (0+255),w,b
 22023  003E5A  B4D8               	btfsc	status,2,c
 22024  003E5C  D003               	goto	i2l10112
 22025                           
 22026                           ; BSR set to: 0
 22027  003E5E  07EA               	decf	_time_atualizacao& (0+255),f,b
 22028  003E60  A0D8               	btfss	status,0,c
 22029  003E62  07EB               	decf	(_time_atualizacao+1)& (0+255),f,b
 22030  003E64                     i2l10112:
 22031                           
 22032                           ; BSR set to: 0
 22033                           ;main.c: 142: if(tarefa_em_execucao == 1)
 22034  003E64  0452               	decf	_tarefa_em_execucao^0,w,c	;volatile
 22035  003E66  A4D8               	btfss	status,2,c
 22036  003E68  D00C               	goto	i2l10120
 22037                           
 22038                           ; BSR set to: 0
 22039                           ;main.c: 143: {;main.c: 144: timeout_tarefa--;
 22040  003E6A  0101               	movlb	1	; () banked
 22041  003E6C  0770               	decf	_timeout_tarefa& (0+255),f,b
 22042  003E6E  A0D8               	btfss	status,0,c
 22043  003E70  0771               	decf	(_timeout_tarefa+1)& (0+255),f,b
 22044                           
 22045                           ; BSR set to: 1
 22046                           ;main.c: 145: if(!timeout_tarefa)
 22047  003E72  5170               	movf	_timeout_tarefa& (0+255),w,b
 22048  003E74  1171               	iorwf	(_timeout_tarefa+1)& (0+255),w,b
 22049  003E76  A4D8               	btfss	status,2,c
 22050  003E78  D004               	goto	i2l10120
 22051                           
 22052                           ; BSR set to: 1
 22053                           ;main.c: 146: {;main.c: 148: PCLATH = 0;
 22054  003E7A  0E00               	movlw	0
 22055  003E7C  6EFA               	movwf	250,c	;volatile
 22056                           
 22057                           ;main.c: 149: PCL = 0;
 22058  003E7E  0E00               	movlw	0
 22059  003E80  6EF9               	movwf	249,c	;volatile
 22060  003E82                     i2l10120:
 22061                           
 22062                           ;main.c: 150: };main.c: 151: };main.c: 155: write_timer_zero(0x45);
 22063  003E82  0E00               	movlw	0
 22064  003E84  6E02               	movwf	(i2write_timer_zero@timer0+1)^0,c
 22065  003E86  0E45               	movlw	69
 22066  003E88  6E01               	movwf	i2write_timer_zero@timer0^0,c
 22067  003E8A  EC25  F02E         	call	i2_write_timer_zero	;wreg free
 22068  003E8E                     i2l10122:
 22069                           
 22070                           ;main.c: 156: };main.c: 158: if (INT0IF && INT0IE)
 22071  003E8E  B2F2               	btfsc	4082,1,c	;volatile
 22072  003E90  A8F2               	btfss	4082,4,c	;volatile
 22073  003E92  D001               	goto	i2l1545
 22074                           
 22075                           ;main.c: 159: {;main.c: 160: INT0IF = 0;
 22076  003E94  92F2               	bcf	4082,1,c	;volatile
 22077  003E96                     i2l1545:
 22078  003E96  C008  FFF4         	movff	??_isr+5,prodh
 22079  003E9A  C007  FFF3         	movff	??_isr+4,prodl
 22080  003E9E  C006  FFDA         	movff	??_isr+3,fsr2h
 22081  003EA2  C005  FFD9         	movff	??_isr+2,fsr2l
 22082  003EA6  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 22083  003EA8  0011               	retfie		f
 22084  003EAA                     __end_of_isr:
 22085                           	callstack 0
 22086                           
 22087 ;; *************** function i2_write_timer_zero *****************
 22088 ;; Defined at:
 22089 ;;		line 134 in file "bibliotecas/hardware.c"
 22090 ;; Parameters:    Size  Location     Type
 22091 ;;  timer0          2    0[COMRAM] unsigned int 
 22092 ;; Auto vars:     Size  Location     Type
 22093 ;;		None
 22094 ;; Return value:  Size  Location     Type
 22095 ;;                  1    wreg      void 
 22096 ;; Registers used:
 22097 ;;		None
 22098 ;; Tracked objects:
 22099 ;;		On entry : 3E/0
 22100 ;;		On exit  : 3E/0
 22101 ;;		Unchanged: 3E/0
 22102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22103 ;;      Params:         2       0       0       0       0       0       0       0       0
 22104 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22105 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22106 ;;      Totals:         2       0       0       0       0       0       0       0       0
 22107 ;;Total ram usage:        2 bytes
 22108 ;; Hardware stack levels used:    1
 22109 ;; This function calls:
 22110 ;;		Nothing
 22111 ;; This function is called by:
 22112 ;;		_isr
 22113 ;; This function uses a non-reentrant model
 22114 ;;
 22115                           
 22116                           	psect	text133
 22117  005C4A                     __ptext133:
 22118                           	callstack 0
 22119  005C4A                     i2_write_timer_zero:
 22120                           	callstack 13
 22121                           
 22122                           ;hardware.c: 142: TMR0 = timer0;
 22123                           
 22124                           ;incstack = 0
 22125  005C4A  C001  FFD6         	movff	i2write_timer_zero@timer0,4054	;volatile
 22126  005C4E  C002  FFD7         	movff	i2write_timer_zero@timer0+1,4055	;volatile
 22127  005C52  0012               	return		;funcret
 22128  005C54                     __end_ofi2_write_timer_zero:
 22129                           	callstack 0
 22130                           
 22131 ;; *************** function _tratamento_uart *****************
 22132 ;; Defined at:
 22133 ;;		line 347 in file "bibliotecas/GPS.c"
 22134 ;; Parameters:    Size  Location     Type
 22135 ;;  received_cha    1    wreg     unsigned char 
 22136 ;; Auto vars:     Size  Location     Type
 22137 ;;  received_cha    1    0[COMRAM] unsigned char 
 22138 ;; Return value:  Size  Location     Type
 22139 ;;                  1    wreg      void 
 22140 ;; Registers used:
 22141 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22142 ;; Tracked objects:
 22143 ;;		On entry : 3F/0
 22144 ;;		On exit  : 3E/0
 22145 ;;		Unchanged: 0/0
 22146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22147 ;;      Params:         0       0       0       0       0       0       0       0       0
 22148 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22149 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22150 ;;      Totals:         1       0       0       0       0       0       0       0       0
 22151 ;;Total ram usage:        1 bytes
 22152 ;; Hardware stack levels used:    1
 22153 ;; This function calls:
 22154 ;;		Nothing
 22155 ;; This function is called by:
 22156 ;;		_isr
 22157 ;; This function uses a non-reentrant model
 22158 ;;
 22159                           
 22160                           	psect	text134
 22161  003AAC                     __ptext134:
 22162                           	callstack 0
 22163  003AAC                     _tratamento_uart:
 22164                           	callstack 13
 22165                           
 22166                           ;incstack = 0
 22167                           ;tratamento_uart@received_char stored from wreg
 22168  003AAC  6E01               	movwf	tratamento_uart@received_char^0,c
 22169                           
 22170                           ;GPS.c: 349: if(received_char =='$'){
 22171  003AAE  0E24               	movlw	36
 22172  003AB0  1801               	xorwf	tratamento_uart@received_char^0,w,c
 22173  003AB2  A4D8               	btfss	status,2,c
 22174  003AB4  D011               	goto	i2l9872
 22175                           
 22176                           ;GPS.c: 350: gga_index = 0;
 22177  003AB6  0E00               	movlw	0
 22178  003AB8  0100               	movlb	0	; () banked
 22179  003ABA  6FEF               	movwf	(_gga_index+1)& (0+255),b	;volatile
 22180  003ABC  0E00               	movlw	0
 22181  003ABE  6FEE               	movwf	_gga_index& (0+255),b	;volatile
 22182                           
 22183                           ;GPS.c: 351: rmc_index = 0;
 22184  003AC0  0E00               	movlw	0
 22185  003AC2  6FED               	movwf	(_rmc_index+1)& (0+255),b	;volatile
 22186  003AC4  0E00               	movlw	0
 22187  003AC6  6FEC               	movwf	_rmc_index& (0+255),b	;volatile
 22188                           
 22189                           ;GPS.c: 352: is_it_gga_string = 0;
 22190  003AC8  0E00               	movlw	0
 22191  003ACA  6E55               	movwf	_is_it_gga_string^0,c	;volatile
 22192                           
 22193                           ;GPS.c: 353: is_it_rmc_string = 0;
 22194  003ACC  0E00               	movlw	0
 22195  003ACE  6E54               	movwf	_is_it_rmc_string^0,c	;volatile
 22196                           
 22197                           ;GPS.c: 354: comma_counter_gga = 0;
 22198  003AD0  0E00               	movlw	0
 22199  003AD2  6FF9               	movwf	_comma_counter_gga& (0+255),b
 22200                           
 22201                           ;GPS.c: 355: comma_counter_rmc = 0;
 22202  003AD4  0E00               	movlw	0
 22203  003AD6  6FF8               	movwf	_comma_counter_rmc& (0+255),b
 22204  003AD8                     i2l9872:
 22205                           
 22206                           ;GPS.c: 356: };GPS.c: 358: if(is_it_gga_string == 1)
 22207  003AD8  0455               	decf	_is_it_gga_string^0,w,c	;volatile
 22208  003ADA  A4D8               	btfss	status,2,c
 22209  003ADC  D01A               	goto	i2l9882
 22210                           
 22211                           ;GPS.c: 359: {;GPS.c: 360: if(received_char == ',' )
 22212  003ADE  0E2C               	movlw	44
 22213  003AE0  1801               	xorwf	tratamento_uart@received_char^0,w,c
 22214  003AE2  A4D8               	btfss	status,2,c
 22215  003AE4  D00A               	goto	i2l9880
 22216                           
 22217                           ;GPS.c: 361: {;GPS.c: 362: gga_pointers[comma_counter_gga++] = gga_index;
 22218  003AE6  0E16               	movlw	low _gga_pointers
 22219  003AE8  0100               	movlb	0	; () banked
 22220  003AEA  25F9               	addwf	_comma_counter_gga& (0+255),w,b
 22221  003AEC  6ED9               	movwf	fsr2l,c
 22222  003AEE  6ADA               	clrf	fsr2h,c
 22223  003AF0  0E02               	movlw	high _gga_pointers
 22224  003AF2  22DA               	addwfc	fsr2h,f,c
 22225  003AF4  C0EE  FFDF         	movff	_gga_index,indf2	;volatile
 22226                           
 22227                           ; BSR set to: 0
 22228  003AF8  2BF9               	incf	_comma_counter_gga& (0+255),f,b
 22229  003AFA                     i2l9880:
 22230                           
 22231                           ;GPS.c: 363: };GPS.c: 364: gga_buffer[gga_index++] = received_char;
 22232  003AFA  0E00               	movlw	low _gga_buffer
 22233  003AFC  0100               	movlb	0	; () banked
 22234  003AFE  25EE               	addwf	_gga_index& (0+255),w,b	;volatile
 22235  003B00  6ED9               	movwf	fsr2l,c
 22236  003B02  0E03               	movlw	high _gga_buffer
 22237  003B04  21EF               	addwfc	(_gga_index+1)& (0+255),w,b	;volatile
 22238  003B06  6EDA               	movwf	fsr2h,c
 22239  003B08  C001  FFDF         	movff	tratamento_uart@received_char,indf2
 22240  003B0C  4BEE               	infsnz	_gga_index& (0+255),f,b	;volatile
 22241  003B0E  2BEF               	incf	(_gga_index+1)& (0+255),f,b	;volatile
 22242                           
 22243                           ;GPS.c: 365: }
 22244  003B10  D01C               	goto	i2l9890
 22245  003B12                     i2l9882:
 22246                           
 22247                           ;GPS.c: 366: else if(gga_code[0] == 'G' && gga_code[1] == 'G' && gga_code[2] == 'A'){
 22248  003B12  0E47               	movlw	71
 22249  003B14  0101               	movlb	1	; () banked
 22250  003B16  195C               	xorwf	_gga_code& (0+255),w,b
 22251  003B18  A4D8               	btfss	status,2,c
 22252  003B1A  D011               	goto	i2l439
 22253                           
 22254                           ; BSR set to: 1
 22255  003B1C  0E47               	movlw	71
 22256  003B1E  195D               	xorwf	(_gga_code+1)& (0+255),w,b
 22257  003B20  A4D8               	btfss	status,2,c
 22258  003B22  D00D               	goto	i2l439
 22259                           
 22260                           ; BSR set to: 1
 22261  003B24  0E41               	movlw	65
 22262  003B26  195E               	xorwf	(_gga_code+2)& (0+255),w,b
 22263  003B28  A4D8               	btfss	status,2,c
 22264  003B2A  D009               	goto	i2l439
 22265                           
 22266                           ; BSR set to: 1
 22267                           ;GPS.c: 367: is_it_gga_string = 1;
 22268  003B2C  0E01               	movlw	1
 22269  003B2E  6E55               	movwf	_is_it_gga_string^0,c	;volatile
 22270                           
 22271                           ;GPS.c: 368: gga_code[0] = 0;
 22272  003B30  0E00               	movlw	0
 22273  003B32  6F5C               	movwf	_gga_code& (0+255),b
 22274                           
 22275                           ;GPS.c: 369: gga_code[1] = 0;
 22276  003B34  0E00               	movlw	0
 22277  003B36  6F5D               	movwf	(_gga_code+1)& (0+255),b
 22278                           
 22279                           ;GPS.c: 370: gga_code[2] = 0;
 22280  003B38  0E00               	movlw	0
 22281  003B3A  6F5E               	movwf	(_gga_code+2)& (0+255),b
 22282                           
 22283                           ;GPS.c: 371: }
 22284  003B3C  D006               	goto	i2l9890
 22285  003B3E                     i2l439:
 22286                           
 22287                           ; BSR set to: 1
 22288                           ;GPS.c: 372: else{;GPS.c: 373: gga_code[0] = gga_code[1];
 22289  003B3E  C15D  F15C         	movff	_gga_code+1,_gga_code
 22290                           
 22291                           ;GPS.c: 374: gga_code[1] = gga_code[2];
 22292  003B42  C15E  F15D         	movff	_gga_code+2,_gga_code+1
 22293                           
 22294                           ;GPS.c: 375: gga_code[2] = received_char;
 22295  003B46  C001  F15E         	movff	tratamento_uart@received_char,_gga_code+2
 22296  003B4A                     i2l9890:
 22297                           
 22298                           ;GPS.c: 376: };GPS.c: 378: if(is_it_rmc_string == 1)
 22299  003B4A  0454               	decf	_is_it_rmc_string^0,w,c	;volatile
 22300  003B4C  A4D8               	btfss	status,2,c
 22301  003B4E  D01A               	goto	i2l9900
 22302                           
 22303                           ;GPS.c: 379: {;GPS.c: 380: if(received_char == ',' )
 22304  003B50  0E2C               	movlw	44
 22305  003B52  1801               	xorwf	tratamento_uart@received_char^0,w,c
 22306  003B54  A4D8               	btfss	status,2,c
 22307  003B56  D00A               	goto	i2l9898
 22308                           
 22309                           ;GPS.c: 381: {;GPS.c: 382: rmc_pointers[comma_counter_rmc++] = rmc_index;
 22310  003B58  0E2A               	movlw	low _rmc_pointers
 22311  003B5A  0100               	movlb	0	; () banked
 22312  003B5C  25F8               	addwf	_comma_counter_rmc& (0+255),w,b
 22313  003B5E  6ED9               	movwf	fsr2l,c
 22314  003B60  6ADA               	clrf	fsr2h,c
 22315  003B62  0E02               	movlw	high _rmc_pointers
 22316  003B64  22DA               	addwfc	fsr2h,f,c
 22317  003B66  C0EC  FFDF         	movff	_rmc_index,indf2	;volatile
 22318                           
 22319                           ; BSR set to: 0
 22320  003B6A  2BF8               	incf	_comma_counter_rmc& (0+255),f,b
 22321  003B6C                     i2l9898:
 22322                           
 22323                           ;GPS.c: 383: };GPS.c: 384: rmc_buffer[rmc_index++] = received_char;
 22324  003B6C  0E50               	movlw	low _rmc_buffer
 22325  003B6E  0100               	movlb	0	; () banked
 22326  003B70  25EC               	addwf	_rmc_index& (0+255),w,b	;volatile
 22327  003B72  6ED9               	movwf	fsr2l,c
 22328  003B74  0E03               	movlw	high _rmc_buffer
 22329  003B76  21ED               	addwfc	(_rmc_index+1)& (0+255),w,b	;volatile
 22330  003B78  6EDA               	movwf	fsr2h,c
 22331  003B7A  C001  FFDF         	movff	tratamento_uart@received_char,indf2
 22332  003B7E  4BEC               	infsnz	_rmc_index& (0+255),f,b	;volatile
 22333  003B80  2BED               	incf	(_rmc_index+1)& (0+255),f,b	;volatile
 22334                           
 22335                           ;GPS.c: 385: }
 22336  003B82  0012               	return	
 22337  003B84                     i2l9900:
 22338                           
 22339                           ;GPS.c: 386: else if(rmc_code[0] == 'R' && rmc_code[1] == 'M' && rmc_code[2] == 'C'){
 22340  003B84  0E52               	movlw	82
 22341  003B86  0101               	movlb	1	; () banked
 22342  003B88  1959               	xorwf	_rmc_code& (0+255),w,b
 22343  003B8A  A4D8               	btfss	status,2,c
 22344  003B8C  D011               	goto	i2l444
 22345                           
 22346                           ; BSR set to: 1
 22347  003B8E  0E4D               	movlw	77
 22348  003B90  195A               	xorwf	(_rmc_code+1)& (0+255),w,b
 22349  003B92  A4D8               	btfss	status,2,c
 22350  003B94  D00D               	goto	i2l444
 22351                           
 22352                           ; BSR set to: 1
 22353  003B96  0E43               	movlw	67
 22354  003B98  195B               	xorwf	(_rmc_code+2)& (0+255),w,b
 22355  003B9A  A4D8               	btfss	status,2,c
 22356  003B9C  D009               	goto	i2l444
 22357                           
 22358                           ; BSR set to: 1
 22359                           ;GPS.c: 387: is_it_rmc_string = 1;
 22360  003B9E  0E01               	movlw	1
 22361  003BA0  6E54               	movwf	_is_it_rmc_string^0,c	;volatile
 22362                           
 22363                           ;GPS.c: 388: rmc_code[0] = 0;
 22364  003BA2  0E00               	movlw	0
 22365  003BA4  6F59               	movwf	_rmc_code& (0+255),b
 22366                           
 22367                           ;GPS.c: 389: rmc_code[1] = 0;
 22368  003BA6  0E00               	movlw	0
 22369  003BA8  6F5A               	movwf	(_rmc_code+1)& (0+255),b
 22370                           
 22371                           ;GPS.c: 390: rmc_code[2] = 0;
 22372  003BAA  0E00               	movlw	0
 22373  003BAC  6F5B               	movwf	(_rmc_code+2)& (0+255),b
 22374                           
 22375                           ;GPS.c: 391: }
 22376  003BAE  0012               	return	
 22377  003BB0                     i2l444:
 22378                           
 22379                           ; BSR set to: 1
 22380                           ;GPS.c: 392: else{;GPS.c: 393: rmc_code[0] = rmc_code[1];
 22381  003BB0  C15A  F159         	movff	_rmc_code+1,_rmc_code
 22382                           
 22383                           ;GPS.c: 394: rmc_code[1] = rmc_code[2];
 22384  003BB4  C15B  F15A         	movff	_rmc_code+2,_rmc_code+1
 22385                           
 22386                           ;GPS.c: 395: rmc_code[2] = received_char;
 22387  003BB8  C001  F15B         	movff	tratamento_uart@received_char,_rmc_code+2
 22388  003BBC  0012               	return		;funcret
 22389  003BBE                     __end_of_tratamento_uart:
 22390                           	callstack 0
 22391                           
 22392 ;; *************** function _recebe_dado_uart *****************
 22393 ;; Defined at:
 22394 ;;		line 138 in file "bibliotecas/uart.c"
 22395 ;; Parameters:    Size  Location     Type
 22396 ;;		None
 22397 ;; Auto vars:     Size  Location     Type
 22398 ;;		None
 22399 ;; Return value:  Size  Location     Type
 22400 ;;                  1    wreg      unsigned char 
 22401 ;; Registers used:
 22402 ;;		wreg, status,2
 22403 ;; Tracked objects:
 22404 ;;		On entry : 0/0
 22405 ;;		On exit  : 0/0
 22406 ;;		Unchanged: 0/0
 22407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22408 ;;      Params:         0       0       0       0       0       0       0       0       0
 22409 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22410 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22411 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22412 ;;Total ram usage:        0 bytes
 22413 ;; Hardware stack levels used:    1
 22414 ;; This function calls:
 22415 ;;		Nothing
 22416 ;; This function is called by:
 22417 ;;		_isr
 22418 ;; This function uses a non-reentrant model
 22419 ;;
 22420                           
 22421                           	psect	text135
 22422  005B82                     __ptext135:
 22423                           	callstack 0
 22424  005B82                     _recebe_dado_uart:
 22425                           	callstack 13
 22426                           
 22427                           ;uart.c: 140: while(RCIF==0);
 22428                           
 22429                           ;incstack = 0
 22430  005B82  AA9E               	btfss	3998,5,c	;volatile
 22431  005B84  D7FE               	goto	_recebe_dado_uart
 22432                           
 22433                           ;uart.c: 141: if(RCSTAbits.OERR)
 22434  005B86  A2AB               	btfss	171,1,c	;volatile
 22435  005B88  D003               	goto	i2l10010
 22436                           
 22437                           ;uart.c: 142: {;uart.c: 143: CREN = 0;
 22438  005B8A  98AB               	bcf	4011,4,c	;volatile
 22439                           
 22440                           ;uart.c: 144: __nop();
 22441  005B8C  F000               	nop	
 22442                           
 22443                           ;uart.c: 145: CREN=1;
 22444  005B8E  88AB               	bsf	4011,4,c	;volatile
 22445  005B90                     i2l10010:
 22446                           
 22447                           ;uart.c: 146: };uart.c: 147: return(RCREG);
 22448  005B90  50AE               	movf	174,w,c	;volatile
 22449  005B92  0012               	return		;funcret
 22450  005B94                     __end_of_recebe_dado_uart:
 22451                           	callstack 0
 22452                           
 22453                           	psect	text136
 22454  000000                     __ptext136:
 22455                           	callstack 0
 22456                           
 22457                           	psect	rparam
 22458  0000                     
 22459                           	psect	temp
 22460  000056                     btemp:
 22461                           	callstack 0
 22462  000056                     	ds	1
 22463  0000                     int$flags	set	btemp
 22464  0000                     wtemp8	set	btemp+1
 22465  0000                     ttemp5	set	btemp+1
 22466  0000                     ttemp6	set	btemp+4
 22467  0000                     ttemp7	set	btemp+8
 22468                           
 22469                           	psect	idloc
 22470                           
 22471                           ;Config register IDLOC0 @ 0x200000
 22472                           ;	unspecified, using default values
 22473  200000                     	org	2097152
 22474  200000  FF                 	db	255
 22475                           
 22476                           ;Config register IDLOC1 @ 0x200001
 22477                           ;	unspecified, using default values
 22478  200001                     	org	2097153
 22479  200001  FF                 	db	255
 22480                           
 22481                           ;Config register IDLOC2 @ 0x200002
 22482                           ;	unspecified, using default values
 22483  200002                     	org	2097154
 22484  200002  FF                 	db	255
 22485                           
 22486                           ;Config register IDLOC3 @ 0x200003
 22487                           ;	unspecified, using default values
 22488  200003                     	org	2097155
 22489  200003  FF                 	db	255
 22490                           
 22491                           ;Config register IDLOC4 @ 0x200004
 22492                           ;	unspecified, using default values
 22493  200004                     	org	2097156
 22494  200004  FF                 	db	255
 22495                           
 22496                           ;Config register IDLOC5 @ 0x200005
 22497                           ;	unspecified, using default values
 22498  200005                     	org	2097157
 22499  200005  FF                 	db	255
 22500                           
 22501                           ;Config register IDLOC6 @ 0x200006
 22502                           ;	unspecified, using default values
 22503  200006                     	org	2097158
 22504  200006  FF                 	db	255
 22505                           
 22506                           ;Config register IDLOC7 @ 0x200007
 22507                           ;	unspecified, using default values
 22508  200007                     	org	2097159
 22509  200007  FF                 	db	255
 22510                           
 22511                           	psect	config
 22512                           
 22513                           ;Config register CONFIG1L @ 0x300000
 22514                           ;	unspecified, using default values
 22515                           ;	PLL Prescaler Selection bits
 22516                           ;	PLLDIV = 0x0, unprogrammed default
 22517                           ;	System Clock Postscaler Selection bits
 22518                           ;	CPUDIV = 0x0, unprogrammed default
 22519                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 22520                           ;	USBDIV = 0x0, unprogrammed default
 22521  300000                     	org	3145728
 22522  300000  00                 	db	0
 22523                           
 22524                           ;Config register CONFIG1H @ 0x300001
 22525                           ;	unspecified, using default values
 22526                           ;	Oscillator Selection bits
 22527                           ;	FOSC = 0x5, unprogrammed default
 22528                           ;	Fail-Safe Clock Monitor Enable bit
 22529                           ;	FCMEN = 0x0, unprogrammed default
 22530                           ;	Internal/External Oscillator Switchover bit
 22531                           ;	IESO = 0x0, unprogrammed default
 22532  300001                     	org	3145729
 22533  300001  05                 	db	5
 22534                           
 22535                           ;Config register CONFIG2L @ 0x300002
 22536                           ;	unspecified, using default values
 22537                           ;	Power-up Timer Enable bit
 22538                           ;	PWRT = 0x1, unprogrammed default
 22539                           ;	Brown-out Reset Enable bits
 22540                           ;	BOR = 0x3, unprogrammed default
 22541                           ;	Brown-out Reset Voltage bits
 22542                           ;	BORV = 0x3, unprogrammed default
 22543                           ;	USB Voltage Regulator Enable bit
 22544                           ;	VREGEN = 0x0, unprogrammed default
 22545  300002                     	org	3145730
 22546  300002  1F                 	db	31
 22547                           
 22548                           ;Config register CONFIG2H @ 0x300003
 22549                           ;	unspecified, using default values
 22550                           ;	Watchdog Timer Enable bit
 22551                           ;	WDT = 0x1, unprogrammed default
 22552                           ;	Watchdog Timer Postscale Select bits
 22553                           ;	WDTPS = 0xF, unprogrammed default
 22554  300003                     	org	3145731
 22555  300003  1F                 	db	31
 22556                           
 22557                           ; Padding undefined space
 22558  300004                     	org	3145732
 22559  300004  FF                 	db	255
 22560                           
 22561                           ;Config register CONFIG3H @ 0x300005
 22562                           ;	unspecified, using default values
 22563                           ;	CCP2 MUX bit
 22564                           ;	CCP2MX = 0x1, unprogrammed default
 22565                           ;	PORTB A/D Enable bit
 22566                           ;	PBADEN = 0x1, unprogrammed default
 22567                           ;	Low-Power Timer 1 Oscillator Enable bit
 22568                           ;	LPT1OSC = 0x0, unprogrammed default
 22569                           ;	MCLR Pin Enable bit
 22570                           ;	MCLRE = 0x1, unprogrammed default
 22571  300005                     	org	3145733
 22572  300005  83                 	db	131
 22573                           
 22574                           ;Config register CONFIG4L @ 0x300006
 22575                           ;	unspecified, using default values
 22576                           ;	Stack Full/Underflow Reset Enable bit
 22577                           ;	STVREN = 0x1, unprogrammed default
 22578                           ;	Single-Supply ICSP Enable bit
 22579                           ;	LVP = 0x1, unprogrammed default
 22580                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 22581                           ;	ICPRT = 0x0, unprogrammed default
 22582                           ;	Extended Instruction Set Enable bit
 22583                           ;	XINST = 0x0, unprogrammed default
 22584                           ;	Background Debugger Enable bit
 22585                           ;	DEBUG = 0x1, unprogrammed default
 22586  300006                     	org	3145734
 22587  300006  85                 	db	133
 22588                           
 22589                           ; Padding undefined space
 22590  300007                     	org	3145735
 22591  300007  FF                 	db	255
 22592                           
 22593                           ;Config register CONFIG5L @ 0x300008
 22594                           ;	unspecified, using default values
 22595                           ;	Code Protection bit
 22596                           ;	CP0 = 0x1, unprogrammed default
 22597                           ;	Code Protection bit
 22598                           ;	CP1 = 0x1, unprogrammed default
 22599                           ;	Code Protection bit
 22600                           ;	CP2 = 0x1, unprogrammed default
 22601                           ;	Code Protection bit
 22602                           ;	CP3 = 0x1, unprogrammed default
 22603  300008                     	org	3145736
 22604  300008  0F                 	db	15
 22605                           
 22606                           ;Config register CONFIG5H @ 0x300009
 22607                           ;	unspecified, using default values
 22608                           ;	Boot Block Code Protection bit
 22609                           ;	CPB = 0x1, unprogrammed default
 22610                           ;	Data EEPROM Code Protection bit
 22611                           ;	CPD = 0x1, unprogrammed default
 22612  300009                     	org	3145737
 22613  300009  C0                 	db	192
 22614                           
 22615                           ;Config register CONFIG6L @ 0x30000A
 22616                           ;	unspecified, using default values
 22617                           ;	Write Protection bit
 22618                           ;	WRT0 = 0x1, unprogrammed default
 22619                           ;	Write Protection bit
 22620                           ;	WRT1 = 0x1, unprogrammed default
 22621                           ;	Write Protection bit
 22622                           ;	WRT2 = 0x1, unprogrammed default
 22623                           ;	Write Protection bit
 22624                           ;	WRT3 = 0x1, unprogrammed default
 22625  30000A                     	org	3145738
 22626  30000A  0F                 	db	15
 22627                           
 22628                           ;Config register CONFIG6H @ 0x30000B
 22629                           ;	unspecified, using default values
 22630                           ;	Configuration Register Write Protection bit
 22631                           ;	WRTC = 0x1, unprogrammed default
 22632                           ;	Boot Block Write Protection bit
 22633                           ;	WRTB = 0x1, unprogrammed default
 22634                           ;	Data EEPROM Write Protection bit
 22635                           ;	WRTD = 0x1, unprogrammed default
 22636  30000B                     	org	3145739
 22637  30000B  E0                 	db	224
 22638                           
 22639                           ;Config register CONFIG7L @ 0x30000C
 22640                           ;	unspecified, using default values
 22641                           ;	Table Read Protection bit
 22642                           ;	EBTR0 = 0x1, unprogrammed default
 22643                           ;	Table Read Protection bit
 22644                           ;	EBTR1 = 0x1, unprogrammed default
 22645                           ;	Table Read Protection bit
 22646                           ;	EBTR2 = 0x1, unprogrammed default
 22647                           ;	Table Read Protection bit
 22648                           ;	EBTR3 = 0x1, unprogrammed default
 22649  30000C                     	org	3145740
 22650  30000C  0F                 	db	15
 22651                           
 22652                           ;Config register CONFIG7H @ 0x30000D
 22653                           ;	unspecified, using default values
 22654                           ;	Boot Block Table Read Protection bit
 22655                           ;	EBTRB = 0x1, unprogrammed default
 22656  30000D                     	org	3145741
 22657  30000D  40                 	db	64
 22658                           tosu	equ	0xFFF
 22659                           tosh	equ	0xFFE
 22660                           tosl	equ	0xFFD
 22661                           stkptr	equ	0xFFC
 22662                           pclatu	equ	0xFFB
 22663                           pclath	equ	0xFFA
 22664                           pcl	equ	0xFF9
 22665                           tblptru	equ	0xFF8
 22666                           tblptrh	equ	0xFF7
 22667                           tblptrl	equ	0xFF6
 22668                           tablat	equ	0xFF5
 22669                           prodh	equ	0xFF4
 22670                           prodl	equ	0xFF3
 22671                           indf0	equ	0xFEF
 22672                           postinc0	equ	0xFEE
 22673                           postdec0	equ	0xFED
 22674                           preinc0	equ	0xFEC
 22675                           plusw0	equ	0xFEB
 22676                           fsr0h	equ	0xFEA
 22677                           fsr0l	equ	0xFE9
 22678                           wreg	equ	0xFE8
 22679                           indf1	equ	0xFE7
 22680                           postinc1	equ	0xFE6
 22681                           postdec1	equ	0xFE5
 22682                           preinc1	equ	0xFE4
 22683                           plusw1	equ	0xFE3
 22684                           fsr1h	equ	0xFE2
 22685                           fsr1l	equ	0xFE1
 22686                           bsr	equ	0xFE0
 22687                           indf2	equ	0xFDF
 22688                           postinc2	equ	0xFDE
 22689                           postdec2	equ	0xFDD
 22690                           preinc2	equ	0xFDC
 22691                           plusw2	equ	0xFDB
 22692                           fsr2h	equ	0xFDA
 22693                           fsr2l	equ	0xFD9
 22694                           status	equ	0xFD8

Data Sizes:
    Strings     257
    Constant    118
    Data        120
    BSS         1089
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     76      85
    BANK0           160    135     160
    BANK1           256      0     250
    BANK2           256     19     250
    BANK3           256      0     150
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    escalonador$3668	PTR FTN()void  size(2) Largest target is 1
		 -> troca_de_tela(), disparo_gravacao(), verifica_dados_operacionais(), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    temp_buff_long	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    point_buff_gps_long	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    point_buff_gps_lat	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    teste	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 36
		 -> disparo_gravacao@velocidade(BANK2[12]), dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), 
		 -> dados_lat(BANK2[33]), STR_21(CODE[2]), STR_20(CODE[2]), rawSpeed(BANK2[20]), 
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 36
		 -> disparo_gravacao@velocidade(BANK2[12]), dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), 
		 -> dados_lat(BANK2[33]), STR_21(CODE[2]), STR_20(CODE[2]), rawSpeed(BANK2[20]), 
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 13
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 36
		 -> dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), dados_lat(BANK2[33]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 36
		 -> dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), dados_lat(BANK2[33]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    memset@p1	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memset@p	PTR unsigned char  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memcpy@d1	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcmp@s2	PTR const void  size(2) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), STR_17(CODE[4]), 

    memcmp@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    ultoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    sp__ultoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    ltoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    ltoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 44
		 -> convert_to_int_point_long@convert_str_long(COMRAM[10]), convert_to_int_point_lat@convert_str_lat(COMRAM[9]), fence_diff_long(CODE[44]), fence_diff_lat(CODE[40]), 

    atoi@s	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), NULL(NULL[0]), rawSpeed(BANK2[20]), 

    temp_buff_lat	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    convert_to_int_point_lat@temp_str_lat	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    convert_to_int@p_buff	PTR const unsigned char  size(2) Largest target is 44
		 -> fence_diff_long(CODE[44]), fence_diff_lat(CODE[40]), 

    armazena_ltlo@buffer	PTR unsigned char  size(1) Largest target is 11
		 -> longitude_to_convert@longitude(BANK0[11]), latitude_to_convert@latitude(BANK0[9]), 

    troca_de_tela@fix_signal	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    disparo_gravacao@velocidade	PTR unsigned char [6] size(2) Largest target is 0

    disparo_gravacao@fix_gps	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 36
		 -> dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), dados_lat(BANK2[33]), 

    verifica_dados_operacionais@velocidade_atual	PTR unsigned char  size(2) Largest target is 20
		 -> NULL(NULL[0]), rawSpeed(BANK2[20]), 

    p_tarefas	PTR FTN()void [3] size(2) Largest target is 1
		 -> troca_de_tela(), disparo_gravacao(), verifica_dados_operacionais(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    fprintf@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fprintf@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_15(CODE[6]), STR_14(CODE[10]), STR_13(CODE[10]), STR_12(CODE[15]), 

    fprintf@arp	PTR void [1] size(1) Largest target is 2
		 -> ?_fprintf(BANK0[2]), 

    fputs@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fputs@str	PTR const unsigned char  size(2) Largest target is 16
		 -> fprintf@s(BANK0[16]), ?_fprintf(BANK0[2]), lo(BANK1[13]), lt(BANK1[12]), 
		 -> vel(BANK1[6]), hora(BANK1[7]), 

    fputc@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    sp__fgets	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_readdir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_opendir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@bw	PTR unsigned int  size(1) Largest target is 2
		 -> fputc@bw(BANK0[2]), 

    f_write@buff	PTR const void  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_write@wbuff	PTR const unsigned char  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_read@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__memcpy	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    f_open@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[13]), filename(BANK2[20]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> fs(BIGRAM[544]), 

    validate@fs	PTR const struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> f_opendir@path(COMRAM[2]), f_open@path(BANK0[2]), 

    auto_mount@p	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[13]), filename(BANK2[20]), 

    check_fs@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_open@dir(BANK0[2]), 

    reserve_direntry@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    reserve_direntry@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@fn	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    trace_path@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_opendir@dir(COMRAM[2]), f_open@dir(BANK0[2]), 

    trace_path@path	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[13]), filename(BANK2[20]), 

    trace_path@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    trace_path@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> trace_path@path(BANK0[2]), 

    sp__memset	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@dirname	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    S1466_DIR_E$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    clust2sect@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    create_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    remove_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@p	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    get_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sync@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    FatFs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    move_window@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    hora_nome@p_buff	PTR unsigned char  size(2) Largest target is 7
		 -> hora(BANK1[7]), 

    data_nome@p_buff	PTR unsigned char  size(2) Largest target is 6
		 -> data(BANK1[6]), 

    monta_sd@dado	PTR unsigned char  size(2) Largest target is 36
		 -> disparo_gravacao@velocidade(BANK2[12]), dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), 
		 -> dados_lat(BANK2[33]), STR_21(CODE[2]), STR_20(CODE[2]), rawSpeed(BANK2[20]), 
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    sp__leitura_sdcard	PTR unsigned char  size(2) Largest target is 20
		 -> dado_arquivo(BANK2[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    S795_FIL$dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    S795_FIL$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__Speed	PTR unsigned char  size(2) Largest target is 20
		 -> rawSpeed(BANK2[20]), 

    sp__rawdata	PTR unsigned char  size(2) Largest target is 6
		 -> rawDate(BANK1[6]), 

    sp__rawhora	PTR unsigned char  size(2) Largest target is 7
		 -> rawTime(BANK1[7]), 

    sp__longitude	PTR unsigned char  size(2) Largest target is 13
		 -> rawLongitude(BANK1[13]), 

    sp__latitude	PTR unsigned char  size(2) Largest target is 12
		 -> rawLatitude(BANK1[12]), 

    sp__fix	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    gps@flag_fix	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    escreve_frase_ram_lcd@buffer	PTR unsigned char  size(2) Largest target is 21
		 -> STR_33(CODE[8]), STR_32(CODE[9]), STR_31(CODE[4]), STR_30(CODE[4]), 
		 -> STR_29(CODE[5]), STR_28(CODE[2]), STR_27(CODE[5]), STR_26(CODE[7]), 
		 -> STR_25(CODE[7]), STR_24(CODE[2]), STR_23(CODE[5]), STR_22(CODE[7]), 
		 -> STR_19(CODE[11]), mensagem_inicial@msg_dois(COMRAM[17]), mensagem_inicial@msg_linha_um(COMRAM[17]), STR_10(CODE[9]), 
		 -> STR_9(CODE[10]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[21]), 
		 -> STR_5(CODE[15]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), escreve_inteiro_lcd@texto(COMRAM[7]), 
		 -> STR_4(CODE[11]), STR_3(CODE[10]), STR_2(CODE[16]), STR_1(CODE[11]), 

    sp__ltoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    sdc_disk_write@p_buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    sdc_disk_read@p_buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    data_buff	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 


Critical Paths under _main in COMRAM

    _mensagem_inicial->_posicao_cursor_lcd
    _init_lcd->_escreve_cmd_lcd
    _config_timer_zero->_write_timer_zero
    _verifica_dados_operacionais->___fttol
    _strcpy->_latitude
    _strcpy->_longitude
    _strcpy->_rawdata
    _strcpy->_rawhora
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->_atoi
    _troca_de_tela->_escreve_inteiro_lcd
    _mostra_dados_display->_posicao_cursor_lcd
    _escreve_inteiro_lcd->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _escreve_cmd_lcd->_delay
    _verifica_fence->_latitude_to_convert
    _verifica_fence->_longitude_to_convert
    _longitude_to_convert->_armazena_ltlo
    _latitude_to_convert->_armazena_ltlo
    _armazena_ltlo->_diferenca
    _diferenca->_convert_to_int_point_lat
    _convert_to_int_point_long->_atol
    _convert_to_int_point_lat->_atol
    _convert_to_int->_atol
    _atol->___lmul
    _itoa->_utoa
    _utoa->___lwdiv
    _inicializa_uart->_configura_baudrate_uart
    _configura_baudrate_uart->___aldiv
    _escrita_sdcard->_f_close
    _gps->_fix
    _gps->_get_fix
    _gps->_get_latitude
    _gps->_get_longitude
    _gps->_get_rawdate
    _gps->_get_rawspeed
    _fprintf->_fputs
    _trace_path->_next_dir_entry
    _make_dirfile->_memset
    _reserve_direntry->_next_dir_entry
    _next_dir_entry->_get_cluster
    _clust2sect->___lmul
    _remove_chain->_get_cluster
    _auto_mount->_check_fs
    _disk_initialize->_sdc_disk_initialize
    _sdc_disk_initialize->_sdc_reset
    _sdc_reset->_command
    _posicao_cursor_lcd->_endereco_cursor_lcd
    _endereco_cursor_lcd->_delay
    _escreve_frase_ram_lcd->_escreve_caractere_lcd
    _escreve_caractere_lcd->_delay
    _check_fs->_disk_read
    _f_lseek->_get_cluster
    _create_chain->_get_cluster
    _put_cluster->_move_window
    _get_cluster->_move_window
    _f_sync->_sync
    _validate->_disk_status
    _disk_status->_sdc_disk_status
    _sync->_move_window
    _move_window->_disk_read
    _move_window->_disk_write
    _disk_write->_sdc_disk_write
    _sdc_disk_write->_command
    _disk_read->_sdc_disk_read
    _sdc_disk_read->_command
    _proceed->_escreve_SPI
    _command->_dummy_clocks
    _command->_wait_ready
    _get_fattime->_gps_ano
    _get_fattime->_gps_dia
    _get_fattime->_gps_hora
    _get_fattime->_gps_mes
    _get_fattime->_gps_minutos
    _get_fattime->_gps_segundos
    _dados_gps_to_sd->_monta_sd
    _monta_sd->___wmul
    _atoi->___wmul

Critical Paths under _isr in COMRAM

    _isr->i2_write_timer_zero

Critical Paths under _main in BANK0

    _main->_escalonador
    _escalonador->_disparo_gravacao
    _verifica_fence->_longitude_to_convert
    _escrita_sdcard->_fprintf
    _fprintf->_fputs
    _fputs->_fputc
    _fputc->_f_write
    _f_write->_create_chain
    _f_open->_reserve_direntry
    _trace_path->_next_dir_entry
    _reserve_direntry->_create_chain
    _next_dir_entry->_get_cluster
    _remove_chain->_put_cluster
    _f_lseek->_create_chain
    _create_chain->_put_cluster
    _f_close->_f_sync

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _escalonador->_disparo_gravacao

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  497897
                        _escalonador
                                _gps
                 _inicializa_tarefas
                    _inicializa_uart
                      _init_hardware
                           _init_lcd
                   _mensagem_inicial
 ---------------------------------------------------------------------------------
 (1) _mensagem_inicial                                    36    36      0    6943
                                             15 COMRAM    36    36      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             1     1      0     613
                                             12 COMRAM     1     1      0
                              _delay
                    _escreve_cmd_lcd
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     148
                  _config_timer_dois
                  _config_timer_zero
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     148
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     2     0      2     148
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _config_timer_dois                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0  488231
                                            132 BANK0      3     3      0
                   _disparo_gravacao *
                      _troca_de_tela *
        _verifica_dados_operacionais *
 ---------------------------------------------------------------------------------
 (2) _verifica_dados_operacionais                          6     6      0   10450
                                             57 COMRAM     6     6      0
                              _Speed
                           ___awtoft
                            ___ftmul
                            ___fttol
                               _atoi
                           _latitude
                          _longitude
                            _rawdata
                            _rawhora
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     829
                                             11 COMRAM     6     2      4
                           _latitude (ARG)
                          _longitude (ARG)
                            _rawdata (ARG)
                            _rawhora (ARG)
 ---------------------------------------------------------------------------------
 (3) _rawhora                                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _rawdata                                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _longitude                                            2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _latitude                                             2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     517
                                             42 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3498
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3059
                                             23 COMRAM     4     1      3
                           ___ftpack
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2766
                                              9 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _Speed                                                2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _troca_de_tela                                        3     3      0   20307
                                             53 COMRAM     3     3      0
              _escreve_caractere_lcd
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                                _fix
               _mostra_dados_display
                 _posicao_cursor_lcd
                    _recebe_dado_gps
 ---------------------------------------------------------------------------------
 (3) _mostra_dados_display                                 0     0      0    6386
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_inteiro_lcd                                 11     7      4    6532
                                             42 COMRAM    11     7      4
              _escreve_frase_ram_lcd
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                 8     1      7    3063
                                             34 COMRAM     8     1      7
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               12     5      7    2560
                                             22 COMRAM    12     5      7
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) _escreve_cmd_lcd                                      1     1      0     477
                                             11 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _disparo_gravacao                                    24    24      0  457168
                                            127 BANK0      5     5      0
                                              0 BANK2     19    19      0
                             ___wmul
                               _atoi
                    _dados_gps_to_sd
                                _fix
                           _grava_sd
                               _itoa
                           _monta_sd
                    _recebe_dado_gps
                     _verifica_fence
 ---------------------------------------------------------------------------------
 (3) _verifica_fence                                       1     1      0   16353
                                             66 COMRAM     1     1      0
                _latitude_to_convert
               _longitude_to_convert
                           _monta_sd
                    _recebe_dado_gps
        _verifica_plausibilidade_lat
       _verifica_plausibilidade_long
 ---------------------------------------------------------------------------------
 (4) _verifica_plausibilidade_long                         1     1      0      34
                                              9 COMRAM     1     1      0
                       _posicao_long
 ---------------------------------------------------------------------------------
 (5) _posicao_long                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _verifica_plausibilidade_lat                          1     1      0      34
                                              9 COMRAM     1     1      0
                        _posicao_lat
 ---------------------------------------------------------------------------------
 (5) _posicao_lat                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _recebe_dado_gps                                      2     2      0      74
                                              9 COMRAM     2     2      0
                 _verifica_recep_gps
 ---------------------------------------------------------------------------------
 (4) _verifica_recep_gps                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _longitude_to_convert                                14    14      0    6759
                                             65 COMRAM     1     1      0
                                              0 BANK0     13    13      0
                      _armazena_ltlo
 ---------------------------------------------------------------------------------
 (4) _latitude_to_convert                                 12    12      0    6759
                                             65 COMRAM     1     1      0
                                              0 BANK0     11    11      0
                      _armazena_ltlo
 ---------------------------------------------------------------------------------
 (5) _armazena_ltlo                                        4     2      2    6419
                                             61 COMRAM     4     2      2
                          _diferenca
 ---------------------------------------------------------------------------------
 (6) _diferenca                                            9     9      0    5657
                                             52 COMRAM     9     9      0
                     _convert_to_int
           _convert_to_int_point_lat
          _convert_to_int_point_long
 ---------------------------------------------------------------------------------
 (7) _convert_to_int_point_long                           19    15      4    1782
                                             35 COMRAM    16    12      4
                               _atol
 ---------------------------------------------------------------------------------
 (7) _convert_to_int_point_lat                            17    13      4    1785
                                             35 COMRAM    17    13      4
                               _atol
 ---------------------------------------------------------------------------------
 (7) _convert_to_int                                       4     0      4    1929
                                             35 COMRAM     4     0      4
                               _atol
 ---------------------------------------------------------------------------------
 (8) _atol                                                14    10      4    1535
                                             21 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    3934
                                             25 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    3065
                                             16 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     972
                                              9 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4    1161
                                              9 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _grava_sd                                             0     0      0  426316
                        _desliga_SPI
                       _desliga_uart
                     _escrita_sdcard
                     _inicializa_SPI
                    _inicializa_uart
 ---------------------------------------------------------------------------------
 (1) _inicializa_uart                                      0     0      0    1118
            _configura_baudrate_uart
 ---------------------------------------------------------------------------------
 (2) _configura_baudrate_uart                             14    10      4    1118
                                             23 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     805
                                              9 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) _inicializa_SPI                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _escrita_sdcard                                       7     7      0  425198
                          _data_nome
                            _f_close
                            _f_lseek
                            _f_mount
                             _f_open
                            _fprintf
                                _gps
                          _hora_nome
                             _strcat
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4     323
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _hora_nome                                            3     1      2     223
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _gps                                                  3     3      0     844
                                             11 COMRAM     3     3      0
                                _fix
                            _get_fix
                        _get_gpstime
                       _get_latitude
                      _get_longitude
                        _get_rawdate
                       _get_rawspeed
 ---------------------------------------------------------------------------------
 (2) _get_rawspeed                                         2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_rawdate                                          2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_longitude                                        2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_latitude                                        17    17      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_gpstime                                         16    16      0     130
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_fix                                              2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fix                                                  2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _fprintf                                             46    36     10  131436
                                             81 BANK0     46    36     10
                            ___lldiv
                            ___llmod
                             ___wmul
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4   62687
                                             75 COMRAM     1     1      0
                                             75 BANK0      6     2      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                7     3      4   62194
                                             68 BANK0      7     3      4
                            _f_write
 ---------------------------------------------------------------------------------
 (8) _f_write                                             30    24      6   61382
                                             38 BANK0     30    24      6
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memcpy
                        _move_window
                           _validate
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     592
                                              9 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) _f_open                                              44    39      5  205014
                                             56 BANK0     44    39      5
                         _auto_mount
                        _get_fattime
                             _memcpy
                             _memset
                        _move_window
                       _remove_chain
                   _reserve_direntry
                         _trace_path
 ---------------------------------------------------------------------------------
 (6) _trace_path                                          20    15      5   39801
                                             30 BANK0     20    15      5
                         _clust2sect
                       _make_dirfile
                             _memcmp
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (7) _make_dirfile                                        11     9      2    2753
                                             17 COMRAM    11     9      2
                             _memset
 ---------------------------------------------------------------------------------
 (6) _reserve_direntry                                    18    16      2   78208
                                             38 BANK0     18    16      2
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memset
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (7) _next_dir_entry                                      12    11      1   19144
                                             75 COMRAM     1     0      1
                                             19 BANK0     11    11      0
                         _clust2sect
                        _get_cluster
 ---------------------------------------------------------------------------------
 (9) _clust2sect                                          11     7      4    1615
                                             21 COMRAM    11     7      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _remove_chain                                         8     6      2   34118
                                             24 BANK0      8     6      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (9) _memcpy                                              11     5      6     970
                                              9 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _auto_mount                                          46    44      2   33202
                                             60 COMRAM     2     0      2
                                              0 BANK0     44    44      0
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                             _memset
 ---------------------------------------------------------------------------------
 (8) _memset                                               8     2      6    1217
                                              9 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (7) _disk_initialize                                      4     4      0   21014
                                             41 COMRAM     2     2      0
                _sdc_disk_initialize
 ---------------------------------------------------------------------------------
 (8) _sdc_disk_initialize                                 13    13      0   20884
                                             28 COMRAM    13    13      0
                            _command
                       _dummy_clocks
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
                          _sdc_reset
 ---------------------------------------------------------------------------------
 (9) _sdc_reset                                           20    20      0   10008
                                             21 COMRAM     7     7      0
                            _command
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (2) _posicao_cursor_lcd                                   3     2      1    3537
                                             12 COMRAM     3     2      1
                _endereco_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _endereco_cursor_lcd                                  1     1      0     353
                                             11 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _escreve_frase_ram_lcd                                2     0      2    2849
                                             12 COMRAM     2     0      2
              _escreve_caractere_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_caractere_lcd                                1     1      0     384
                                             11 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _check_fs                                             8     4      4    6616
                                             52 COMRAM     8     4      4
                          _disk_read
                             _memcmp
 ---------------------------------------------------------------------------------
 (7) _memcmp                                               8     2      6     701
                                              9 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (9) ___lmul                                              12     4      8     696
                                              9 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _f_mount                                              3     1      2     354
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _f_lseek                                             33    27      6   56356
                                             38 BANK0     33    27      6
                            ___lldiv
                       _create_chain
                        _get_cluster
                           _validate
 ---------------------------------------------------------------------------------
 (9) _create_chain                                        14    12      2   35181
                                             24 BANK0     14    12      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (10) _put_cluster                                        24    20      4   17025
                                              0 BANK0     24    20      4
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (10) _get_cluster                                        21    19      2   16715
                                             73 COMRAM     2     0      2
                                              0 BANK0     19    19      0
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    1261
                                              9 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _f_close                                              3     1      2   30425
                                             75 COMRAM     1     1      0
                                              9 BANK0      2     0      2
                             _f_sync
 ---------------------------------------------------------------------------------
 (6) _f_sync                                               9     7      2   30002
                                              0 BANK0      9     7      2
                        _get_fattime
                        _move_window
                               _sync
                           _validate
 ---------------------------------------------------------------------------------
 (9) _validate                                             6     2      4    1178
                                             15 COMRAM     6     2      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (10) _disk_status                                         4     4      0     226
                                             11 COMRAM     4     4      0
                    _sdc_disk_status
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_status                                     4     4      0      34
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _sync                                                 2     2      0   14103
                                             73 COMRAM     2     2      0
                         _disk_ioctl
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _move_window                                         21    17      4   13765
                                             52 COMRAM    21    17      4
                          _disk_read
                         _disk_write
 ---------------------------------------------------------------------------------
 (10) _disk_write                                         12     5      7    6087
                                             40 COMRAM    12     5      7
                     _sdc_disk_write
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_write                                     19    12      7    4623
                                             21 COMRAM    19    12      7
                            _command
                       _dummy_clocks
                        _escreve_SPI
                        _leitura_SPI
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (10) _disk_read                                          12     5      7    5608
                                             40 COMRAM    12     5      7
                      _sdc_disk_read
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_read                                      24    17      7    4459
                                             21 COMRAM    19    12      7
                            _command
                       _dummy_clocks
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (12) _response                                            1     1      0      34
                                              9 COMRAM     1     1      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (12) _proceed                                             0     0      0      34
                        _escreve_SPI
 ---------------------------------------------------------------------------------
 (12) _command                                             7     2      5    3412
                                             14 COMRAM     7     2      5
                       _dummy_clocks
                        _escreve_SPI
                         _wait_ready
 ---------------------------------------------------------------------------------
 (13) _wait_ready                                         15    15      0      99
                                              9 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (13) _escreve_SPI                                         2     2      0      34
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _dummy_clocks                                        5     5      0      68
                                              9 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (13) _leitura_SPI                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _disk_ioctl                                           7     4      3     304
                                              9 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (6) _get_fattime                                         52    48      4     389
                                             13 COMRAM    52    48      4
                            _gps_ano
                            _gps_dia
                           _gps_hora
                            _gps_mes
                        _gps_minutos
                       _gps_segundos
 ---------------------------------------------------------------------------------
 (7) _gps_segundos                                         4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_minutos                                          4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_mes                                              4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_hora                                             4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_dia                                              4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_ano                                              4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _data_nome                                            3     1      2     223
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _desliga_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _desliga_SPI                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _dados_gps_to_sd                                      0     0      0    2693
                           _monta_sd
 ---------------------------------------------------------------------------------
 (4) _monta_sd                                             5     3      2    2693
                                             15 COMRAM     5     3      2
                             ___wmul (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     220
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     5      3    2547
                                             15 COMRAM     8     5      3
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              9 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1754
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _isr                                                 7     7      0     292
                                              2 COMRAM     7     7      0
                   _recebe_dado_uart
                    _tratamento_uart
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (18) i2_write_timer_zero                                  2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _tratamento_uart                                     1     1      0     154
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) _recebe_dado_uart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _escalonador
     _disparo_gravacao *
       ___wmul
       _atoi
         ___wmul
         _isdigit
       _dados_gps_to_sd
         _monta_sd
           ___wmul (ARG)
           _strlen (ARG)
       _fix
       _grava_sd
         _desliga_SPI
         _desliga_uart
         _escrita_sdcard
           _data_nome
           _f_close
             _f_sync
               _get_fattime
                 _gps_ano
                 _gps_dia
                 _gps_hora
                 _gps_mes
                 _gps_minutos
                 _gps_segundos
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _sync
                 _disk_ioctl
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _validate
                 _disk_status
                   _sdc_disk_status
           _f_lseek
             ___lldiv
             _create_chain
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _put_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
             _validate
               _disk_status
                 _sdc_disk_status
           _f_mount
           _f_open
             _auto_mount
               ___lldiv
               ___lmul
               _check_fs
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _memcmp
               _disk_initialize
                 _sdc_disk_initialize
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
                   _sdc_reset
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _disk_status
                 _sdc_disk_status
               _memset
             _get_fattime
               _gps_ano
               _gps_dia
               _gps_hora
               _gps_mes
               _gps_minutos
               _gps_segundos
             _memcpy
             _memset
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
             _remove_chain
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _put_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
             _reserve_direntry
               _clust2sect
                 ___lmul
               _create_chain
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                 _put_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _memset
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _next_dir_entry
                 _clust2sect
                   ___lmul
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
             _trace_path
               _clust2sect
                 ___lmul
               _make_dirfile
                 _memset
               _memcmp
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _next_dir_entry
                 _clust2sect
                   ___lmul
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
           _fprintf
             ___lldiv
             ___llmod
             ___wmul
             _fputc
               _f_write
                 _clust2sect
                   ___lmul
                 _create_chain
                   _get_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                   _put_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _memcpy
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                 _validate
                   _disk_status
                     _sdc_disk_status
             _fputs
               _fputc
                 _f_write
                   _clust2sect
                     ___lmul
                   _create_chain
                     _get_cluster
                       ___wmul
                       _move_window
                         _disk_read
                           _sdc_disk_read
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                         _disk_write
                           _sdc_disk_write
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                     _put_cluster
                       ___wmul
                       _move_window
                         _disk_read
                           _sdc_disk_read
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                         _disk_write
                           _sdc_disk_write
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _memcpy
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                   _validate
                     _disk_status
                       _sdc_disk_status
           _gps
             _fix
             _get_fix
             _get_gpstime
             _get_latitude
             _get_longitude
             _get_rawdate
             _get_rawspeed
           _hora_nome
           _strcat
         _inicializa_SPI
         _inicializa_uart
           _configura_baudrate_uart
             ___aldiv
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _monta_sd
         ___wmul (ARG)
         _strlen (ARG)
       _recebe_dado_gps
         _verifica_recep_gps
       _verifica_fence
         _latitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _longitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _monta_sd
           ___wmul (ARG)
           _strlen (ARG)
         _recebe_dado_gps
           _verifica_recep_gps
         _verifica_plausibilidade_lat
           _posicao_lat
         _verifica_plausibilidade_long
           _posicao_long
     _troca_de_tela *
       _escreve_caractere_lcd
         _delay
       _escreve_cmd_lcd
         _delay
       _escreve_frase_ram_lcd
         _escreve_caractere_lcd
           _delay
       _escreve_inteiro_lcd
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fix
       _mostra_dados_display
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
         _posicao_cursor_lcd
           _endereco_cursor_lcd
             _delay
       _posicao_cursor_lcd
         _endereco_cursor_lcd
           _delay
       _recebe_dado_gps
         _verifica_recep_gps
     _verifica_dados_operacionais *
       _Speed
       ___awtoft
         ___ftpack
         _atoi (ARG)
           ___wmul
           _isdigit
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _atoi (ARG)
             ___wmul
             _isdigit
         ___ftpack (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___fttol
         ___awtoft (ARG)
           ___ftpack
           _atoi (ARG)
             ___wmul
             _isdigit
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _atoi (ARG)
               ___wmul
               _isdigit
           ___ftpack (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         _atoi (ARG)
           ___wmul
           _isdigit
       _atoi
         ___wmul
         _isdigit
       _latitude
       _longitude
       _rawdata
       _rawhora
       _strcpy
         _latitude (ARG)
         _longitude (ARG)
         _rawdata (ARG)
         _rawhora (ARG)
   _gps
     _fix
     _get_fix
     _get_gpstime
     _get_latitude
     _get_longitude
     _get_rawdate
     _get_rawspeed
   _inicializa_tarefas
   _inicializa_uart
     _configura_baudrate_uart
       ___aldiv
   _init_hardware
     _config_timer_dois
     _config_timer_zero
       _write_timer_zero
     _init_interrupt
     _init_oscilador
     _init_ports
   _init_lcd
     _delay
     _escreve_cmd_lcd
       _delay
   _mensagem_inicial
     _escreve_cmd_lcd
       _delay
     _escreve_frase_ram_lcd
       _escreve_caractere_lcd
         _delay
     _posicao_cursor_lcd
       _endereco_cursor_lcd
         _delay

 _isr (ROOT)
   _recebe_dado_uart
   _tratamento_uart
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     220      21       26.6%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      96      11       58.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     13      FA       9       97.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     87      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4C      55       1       90.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     37F      20        0.0%
DATA                 0      0     59F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon May 23 16:19:41 2022

                              next_dir_entry@idx 007C                                     ?_get_rawdate 0001  
                       __end_of_mensagem_inicial 472E                              next_dir_entry@clust 007A  
                                 ?_get_longitude 0001                                    ?_get_rawspeed 0001  
                                    _SSPSTATbits 000FC7                                 ??_init_interrupt 000A  
                                             l68 5AA0                     __size_of_escreve_inteiro_lcd 003E  
                                             _fs 0396                                               _lo 0198  
                                             _lt 01B2                              ___wmul@multiplicand 000C  
                                    _put_cluster 237C                                 disk_write@sector 002B  
                                   ?_escalonador 0001                                   create_chain@fs 007E  
                               disk_write@result 0032                                 ?_inicializa_uart 0001  
                                            l200 4896                                              l201 489E  
                                            l202 48A0                                              l203 48A8  
                                            l220 4CEA                                              l204 48AA  
                                            l221 4CF2                                              l213 4CBE  
                                            l205 48B2                                              l222 4CF4  
                                            l206 48B4                                              l223 4CFC  
                                            l215 4CC8                           __size_of_troca_de_tela 0286  
                                            l144 2CAC                                              l224 4CFE  
                                            l232 4EB4                                              l225 4D06  
                                            l217 4CD2                                              l250 4C10  
                                            l242 4BDC                                              l226 4D08  
                                            l218 4CD4                                              l251 4C12  
                                            l219 4CE8                                              l252 4C1A  
                                            l244 4BE6                                              l181 5AC0  
                                            l253 4C1C                                              l254 4C24  
                                            l246 4BF0                                              l183 5AC6  
                                            l255 4C26                                              l191 4860  
                                            l256 4C2E                                              l248 4BFA  
                                            l257 4C30                                              l249 4BFC  
                                            l193 486A                                              l195 4874  
                                            l197 487E                                              l702 4F78  
                                            l198 4880                                              l199 4894  
                                            l800 5BFC                                              l806 5BAE  
                                            l913 2E1C                                              l916 2E14  
                                            l686 55B8                                              l990 343A  
                                            l987 348C                                              _PCL 000FF9  
                                            _PR2 000FCB                                              _E_W 00FA  
                            _latitude_to_convert 4ADE                                              _fil 017C  
                               ??_init_oscilador 000A                                              _fix 5C40  
                                            _n_s 00FB                                              _gps 564A  
                                            _isr 0008                                ??_tratamento_uart 0001  
                                            _vel 01DE                    __size_of_longitude_to_convert 007A  
                                   disk_read@res 0034                                              prod 000FF3  
                                 ??_create_chain 007A                                              tosl 000FFD  
                                            wreg 000FE8                                     get_fix@index 000B  
                                ?_verifica_fence 0001                        __size_of_write_timer_zero 000A  
                                create_chain@mcl 007C                                  create_chain@ncl 0084  
                                create_chain@scl 0082                          ??_escreve_frase_ram_lcd 000F  
                                           l1104 13C4                                             l1114 150A  
                                           l1241 5530                                             l1074 077A  
                                           l1192 0D90                                             l2224 5164  
                                           l2153 4DD4                                             l1274 1118  
                                           l2234 54D2                                             l1099 1398  
                                           l1291 1260                                             l1188 0B80  
                                           l2422 3346                                             l2436 3982  
                                           l1573 4F52                                             l2454 4538  
                                           l1772 4A52                                             l2468 3F74  
                                           ?_fix 000A                                             ?_gps 0001  
                                           ?_isr 0001                                             l9500 3CEE  
                                           l9280 42DC                                             l9520 3D48  
                                           l9290 4338                                             l9282 42FA  
                                           l9530 3D70                                             l9506 3D16  
                                           l9524 3D58                                             l9286 4310  
                                           l9278 42D2                                             l9550 5626  
                                           l9534 3D80                                             l9288 432E  
                                           l9560 3FBE                                             l9590 4036  
                                           l9582 4022                                             l9578 4012  
                          _escreve_caractere_lcd 4BCC                                             l9596 4052  
                                           l9588 402A                                             STR_1 61F1  
                                           STR_2 6192                                             STR_3 6224  
                                           STR_4 61E6                                             STR_5 61B1  
                                           STR_6 617D                                             STR_7 61C0  
                                           STR_8 621A                                             STR_9 6210  
                                 timer_dois@flag 00F7                                             _BRGH 007D62  
                                           _CREN 007D5C                                             _T0IF 007F92  
                                   ?_escreve_SPI 0001                                             _LATB 000F8A  
                                           _PIE1 000F9D                                             _RCIF 007CF5  
                                           _TMR0 000FD6                                             _TMR2 000FCC  
                                           _SPEN 007D5F                                             _TXEN 007D65  
                                           _SYNC 007D64                                     trace_path@dj 007E  
                                   trace_path@fn 007F                                     trace_path@ds 008F  
                                   trace_path@fs 008B                                    ?_make_dirfile 0012  
                                           _Term 00FC                                             _dado 0110  
                                           _data 01D8                                             _atoi 31EE  
                                           _atol 3872                                             _main 5776  
                                           _fsid 0172                                             _hora 01CA  
                                   ___ftpack@arg 000A                                             _itoa 55D8  
                                   ___ftpack@exp 000D                                             _ltoa 5458  
                        __end_of_fence_diff_long 6155                                             fsr1h 000FE2  
                                           fsr2h 000FDA                                             indf1 000FE7  
                                           indf2 000FDF                                             fsr1l 000FE1  
                                           fsr2l 000FD9                                             btemp 0056  
                                           _utoa 44B8                                             _sync 51C0  
                                  disk_ioctl@cmd 000A                                    disk_read@buff 0029  
                                  disk_ioctl@res 000E                                   ??_get_latitude 000A  
                                  disk_read@pdrv 0031                             ?_latitude_to_convert 0001  
                                           prodh 000FF4                                             prodl 000FF3  
                   tratamento_uart@received_char 0001                            get_latitude@index_lat 000A  
                                           start 000E                                      gps@flag_fix 000D  
                              disparo_gravacao@i 02F9                                     ___ftmul@cntr 0029  
                      sdc_disk_initialize@buff_i 0025                                     ___param_bank 000000  
                                   ___ftmul@sign 002A                        sdc_disk_initialize@count1 0021  
                      sdc_disk_initialize@count2 0027                                      _string_dado 0200  
                                 ??_get_rawspeed 000A                              diferenca@valor_long 003A  
                                   ___fttol@exp1 0039                                            ??_fix 000C  
                                          ??_gps 000C                                     ___fttol@lval 0035  
                                          ??_isr 0003                          __size_of_escrita_sdcard 014C  
               __size_of_configura_baudrate_uart 0108                         __size_of_recebe_dado_gps 0020  
                     ??_convert_to_int_point_lat 0028                                            l10302 2C54  
                                          l11022 1AD0                                            l10410 5292  
                                          l12002 09C4                                            l10260 3A56  
                                          l10244 3A0C                                            l10316 2C74  
                                          l11028 1ADE                                            l11132 581A  
                                          l10166 55C4                                            l10174 5690  
                                          l10254 3A3E                                            l10238 39FA  
                                          l10334 2CF4                                            l10406 5266  
                                          l11142 479E                                            l11038 1B0A  
                                          l11302 5902                                            l11222 03AA  
                                          l11206 02E4                                            l11214 033A  
                                          l10264 3A6C                                            l10248 3A30  
                                          l10256 3A44                                            l12040 386E  
                                          l11136 4730                                            l11144 47A6  
                                          l10512 4BF2                                            l10504 4BDE  
                                          l11064 1B8C                                            l11048 1B30  
                                          l11304 5908                                            l11320 590C  
                                          l11128 580A                                            l12008 09DA  
                                          l12120 4D92                                            l11240 04F2  
                                          l11224 03B8                                            l12112 41F0  
                                          l12104 41CC                                            l10274 3A9C  
                                          l12026 37B6                                            l11082 1BEC  
                                          l11074 1BB2                                            l11410 33E4  
                                          l12122 4D9E                                            l12050 50A6  
                                          l10188 4F72                                            l10364 2D66  
                                          l10348 2D18                                            l10428 5296  
                                          l10604 575E                                            l10508 4BE8  
                                          l11236 0476                                            l11172 00CC  
                                          l12052 50AE                                            l12108 41DA  
                                          l12212 58FA                                            l10382 4C72  
                                          l10374 4C42                                            l10294 2C04  
                                          l10462 5BA0                                            l12222 534A  
                                          l11510 4998                                            l10622 4ECE  
                                          l12310 14E8                                            l11254 0582  
                                          l12046 5078                                            l12062 40CA  
                                          l12070 412C                                            l12142 48DE  
                                          l11096 5AA4                                            l10552 2B26  
                                          l11336 51F6                                            l10712 2444  
                                          l12232 5382                                            l10472 4CC0  
                                          l11440 3412                                            l12128 4DC6  
                                          l11184 0186                                            l11248 0526  
                                          l12080 4152                                            l11280 38EE  
                                          l12056 4068                                            l12160 4916  
                                          l13024 4EA0                                            l13210 31FC  
                                          l10378 4C6E                                            l10714 2478  
                                          l10706 2402                                            l12226 5362  
                                          l11522 49DE                                            l11506 4994  
                                          l10642 5170                                            l10626 4EDC  
                                          l10618 4EC0                                            l10634 4EEA  
                                          l12330 151E                                            l11258 0594  
                                          l11186 01A6                                            l12154 490A  
                                          l13130 486C                                            l13220 327C  
                                          l10556 2B2E                                            l10548 2AAA  
                                          l10564 2B7C                                            l10900 53CA  
                                          l10732 2526                                            l10820 2E24  
                                          l12420 0D44                                            l10476 4CCA  
                                          l10636 4F04                                            l11452 342A  
                                          l11196 01FE                                            l12092 418C  
                                          l11292 393E                                            l11276 38C6  
                                          l12172 4942                                            l12148 48E6  
                                          l12180 494E                                            l13052 4B96  
                                          l13028 4B60                                            l13230 32FE  
                                          l13222 328A                                            l10398 4C94  
                                          l10574 2BD0                                            l10654 2632  
                                          l10750 25B8                                            l10646 5198  
                                          l11358 3100                                            l11374 31D8  
                                          l11470 3454                                            l11390 337A  
                                          l11702 56BE                                            l12094 4198  
                                          l12086 416A                                            l11286 38F8  
                                          l11550 501E                                            l12166 491E  
                                          l12182 4958                                            l13062 4BAC  
                                          l13038 4B7A                                            l13134 4876  
                                          l13126 4862                                            l13208 31F0  
                                          l10592 5756                                            l11608 4A44  
                                          l10736 2550                                            l10752 25D4  
                                          l10832 2E52                                            l10816 2DFE  
                                          l10808 2DD0                                            l12432 0DA4  
                                          l10760 50D6                                            l11720 4588  
                                          l11712 4566                                            l11480 346E  
                                          l11456 3432                                            l11448 3422  
                                          l11800 2056                                            l12248 1300  
                                          l12512 102C                                            l13240 57B6  
                                          l13226 32B2                                            l12362 58B0  
                                          l10586 574A                                            l10674 2764  
                                          l10690 2806                                            l10850 2E88  
                                          l10770 47D0                                            l10906 5426  
                                          l10914 5446                                            l11730 45CC  
                                          l12530 1082                                            l11618 571E  
                                          l10924 5AF0                                            l10588 5752  
                                          l12444 0DEC                                            l12436 0DAE  
                                          l10764 50EA                                            l10940 1960  
                                          l11900 05B8                                            l11732 45D4  
                                          l11812 207A                                            l11804 2062  
                                          l12612 126C                                            l12508 1016  
                                          l11636 5886                                            l11660 5336  
                                          l11556 504A                                            l13404 1D8C  
                                          l13412 1DC6                                            l10678 2784  
                                          l12446 0E00                                            l12454 0E72  
                                          l12470 0F6C                                            l12462 0F06  
                                          l10774 47EE                                            l10950 1980  
                                          l11902 05BE                                            l11478 346C  
                                          l12278 13A0                                            l12518 1058  
                                          l12622 12C2                                            l12390 53EC  
                                          l11582 4FF2                                            l12702 3F0A  
                                          l13238 57AE                                            l13262 2F1A  
                                          l13414 1DCA                                            l12632 54E6  
                                          l12800 1680                                            l10688 27EC  
                                          l10864 2EC4                                            l10792 4848  
                                          l10960 19B4                                            l10880 4254  
                                          l11488 348A                                            l11760 1F46  
                                          l12296 1460                                            l12616 1286  
                                          l12608 124E                                            l12552 1100  
                                          l12536 10B2                                            l11648 52FE  
                                          l11680 52EE                                            l12376 585C  
                                          l12392 53F4                                            l11576 4FC6  
                                          l13088 4BC2                                            l13352 1C2A  
                                          l12634 54EA                                            l12810 16E2  
                                          l10698 23A2                                            l10970 19D8  
                                          l10946 1974                                            l11834 216A  
                                          l11498 34A6                                            l11818 208E  
                                          l12298 148E                                            l12546 10F0  
                                          l12482 0F9C                                            l12386 53D8  
                                          l13282 3080                                            l13426 1DF2  
                                          l12820 173A                                            l12804 16D4  
                                          l11596 4A04                                            l10868 2F02  
                                          l11932 0660                                            l11908 0610  
                                          l11844 21CC                                            l11836 2190  
                                          l11756 1F42                                            l12572 1160  
                                          l12556 110C                                            l11668 52B6  
                                          l12388 53DC                                            l12660 513A  
                                          l12724 5478                                            l13444 1E38  
                                          l10894 53BA                                            l11598 4A10  
                                          l11918 0634                                            l11854 2238  
                                          l11838 21A2                                            l11782 1FEA  
                                          l11774 1F8A                                            l12574 1178  
                                          l12566 113C                                            l12478 0F92  
                                          l12670 515A                                            l12734 4AE8  
                                          l13446 1E3C                                            l13390 1D14  
                                          l13366 1CA2                                            l13374 1CD0  
                                          l12832 174C                                            l12816 16E6  
                                          l11936 0664                                            l11880 230E  
                                          l11768 1F60                                            l12584 11A0  
                                          l11688 56EE                                            l12648 3CAE  
                                          l12680 54B0                                            l13456 1E7C  
                                          l12850 17D8                                            l12842 17AE  
                                          l12826 1748                                            l10994 1A58  
                                          l11954 069C                                            l11946 0692  
                                          l11890 234A                                            l11858 223C  
                                          l11794 2038                                            l11786 1FF6  
                                          l12594 11DC                                            l12498 0FEC  
                                          l12930 3658                                            l12658 5132  
                                          l13714 55F4                                            l12746 4B42  
                                          l12770 4AC8                                            l12844 17D4  
                                          l12836 17A0                                            l11972 0732  
                                          l11964 0710                                            l11868 227E  
                                          l12588 11AC                                            l12692 3EBA  
                                          l13740 2878                                            l12686 54C8  
                                          l12678 54A8                                            l12758 4A6E  
                                          l13806 44AE                                            l13830 579E  
                                          l12872 1854                                            l12864 1818  
                                          l12784 161A                                            l12944 3720  
                                          l13824 578E                                            l12858 1814  
                                          l12794 167C                                            l12778 1616  
                                          l11994 08B6                                            l13746 28FE  
                                          l13762 29F8                                            l13770 2A1E  
                                          l12884 18D2                                            l12788 166E  
                                          l12892 18E0                                            l12964 5A66  
                                          l12878 1858                                            l13678 44C0  
                                          l12974 4E52                                            l13688 44FA  
                                          l12968 5A6E                                            l12984 4E6C  
                                          l13768 2A1A                                            l13794 4412  
                                          l12998 4E88                                  __end_of___aldiv 4202  
                                          ?_atoi 0010                                            ?_atol 0016  
                                          ?_main 0001                                            ?_itoa 001A  
                                          STR_10 6237                                            ?_ltoa 0023  
                                          STR_11 6266                                            STR_20 627A  
                                          STR_12 61A2                                            STR_21 622C  
                                          STR_13 61FC                                            STR_30 626F  
                                          STR_22 624F                                            STR_14 6206  
                                          STR_31 626B                                            STR_23 6261  
                                          STR_15 6256                                            STR_24 627C  
                                          STR_32 622E                                            STR_16 61CE  
                                          STR_17 6273                                            STR_25 6248  
                                          STR_33 6240                                            STR_26 624F  
                                          STR_18 6277                                            STR_27 6261  
                                          STR_19 61DB                                            STR_28 627C  
                                          STR_29 625C                                     ?_leitura_SPI 0001  
                                          u10010 42C4                                  __end_of___lldiv 4A64  
                                          ?_utoa 0011                                            u10050 4342  
                                          ?_sync 0001                                            u10411 3CFE  
                                          u12020 480E                                  __end_of___ftmul 3DBA  
                                          u12110 2E48                                            u10520 403C  
                                          _T0CON 000FD5                                            u11340 56B2  
                                          u12220 53B6                                            u12060 2DBA  
                                          u12300 19A0                                            u10461 3FA2  
                                          u12070 2DC6                                            u12310 19AC  
                                          u10470 3FAC                                            u12311 19AA  
                                          u10391 3CD6                                            u11360 4F82  
                                          u11520 2D72                                            u12080 2DF2  
                                          u13200 4994                                            u10480 3FDC  
                                __end_of___llmod 4DE6                                            u12330 19F8  
                                          u12180 2EF0                                            u10485 3FD4  
                                __end_of___fttol 4064                                            u11390 3A06  
                                          u11710 2A68                                            u12510 475C  
                                          u11375 39AC                                            u11800 51B8  
                                          u12440 1B56                                            _T2CON 000FCA  
                                          u11465 2C28                                            u11730 2AA6  
                                          u12530 478E                                            u12370 1A86  
                                          u12290 1990                                            u14050 419C  
                                          u13235 350A                                            u13340 4A14  
                                          u11820 25FC                                            u15020 513E  
                                          u13245 3526                                            u12517 4752  
                                          u12390 1A92                                            u13270 5526  
                                          u13255 3556                                            u11495 2CC8  
                                          u11807 51AE                                            u16000 331E  
                                          u11920 23FE                                            u12480 1BC8  
                                          u13440 4584                                            u14320 13C0  
                                          u13265 3576                                            u12537 4784  
                                          u12705 0326                                            u15210 163A  
                                          u12490 1BF8                                            u14250 12FC  
                                          u14090 4DA2                                            u15050 54B4  
                                          u12810 38E6                                            u11915 23D2  
                                          u13460 45BA                                            u13700 227A  
                                          u11845 2662                                            u15310 1738  
                                          u15230 166C                                            u11790 5190  
                                          u13470 45E0                                            u14350 145C  
                                          u12750 052E                                            u16007 3314  
                                          u13535 1FA8                                            u15400 1844  
                                          u14600 0E0E                                            u13480 45F8  
                                          u12920 317E                                            u13640 21C8  
                                          u15217 1630                                            u11865 26DE  
                                          u11945 24A4                                            u12905 310C  
                                          u12665 024C                                            u12817 38DC  
                                          u15330 176C                                            u15250 16A0  
                                          u12850 51F2                                            u13490 1F2C  
                                          u12770 3892                                            u16210 1D40  
                                          u15420 1878                                            u14620 0E86  
                                          u13900 072E                                            u12940 33B0  
                                          u16220 1D7C                                            u16140 1C06  
                                          u15317 172E                                            u15237 1662  
                                          u14525 0BF4                                            u11797 5186  
                                          u15350 179E                                            u15270 16D2  
                                          u14630 0ECC                                            u13830 065C  
                                          u13750 05DE                                            u13670 222A  
                                          u14390 1506                                            u15407 183A  
                                          u11895 2770                                            u11975 2532  
                                          u13655 21EA                                            u15440 189E  
                                          u12960 33C0                                            u14720 1064  
                                          u16240 1DD6                                            u15337 1762  
                                          u15257 1696                                            u13497 1F22  
                                          u12777 3888                                            u15370 17CE  
                                          u15290 1706                                            u13770 0604  
                                          u12890 30FC                                            u16218 1D42  
                                          u16170 1C56                                            u15427 186E  
                                          u14635 0EC2                                            u12947 33A6  
                                          u15460 18D0                                            u15380 1804  
                                          u13940 09C0                                            u16228 1D7E  
                                          u16180 1C92                                            u16500 46AC  
                                          u15357 1794                                            u15277 16C8  
                                          u13757 05D4                                            u13950 09D8  
                                          u15630 4B72                                            u16510 46C8  
                                          u15447 1894                                            u13935 08CE  
                                          u14920 12A2                                            u14760 10EE  
                                          u15640 4B76                                            u15560 4E68  
                                          u15377 17C4                                            u15297 16FC  
                                          u13777 05FA                                            u14930 550A  
                                          u14690 0FE2                                            u16178 1C58  
                                          u15467 18C6                                            u15387 17FA  
                                          u15900 4F40                                            u16188 1C94  
                                          u13965 0A5E                                            u15910 321C  
                                          u14870 1232                                            u15590 4E9A  
                                          u14937 5500                                            u15930 3242  
                                          u14955 3BD0                                            u16707 4656  
                                          u15860 48D6                                            u15917 3212  
                                          u16717 192E                                            u14965 3C08  
                                          u15950 3274                                            u16590 2874  
                                          u16727 1A98                                            u15871 5568  
                                          u16648 446E                                            u15937 3238  
                                          u16737 1B36                                            u14985 3C4A  
                                          u16649 4480                                            u15970 32AA  
                                          u16747 55A4                                            u14995 3C82  
                                __end_of___lwdiv 516E                                            u15957 326A  
                                          u16677 4704                                            u15990 32E6  
                                          u16687 461E                                            u15977 32A0  
                                          u16697 463A                                            u15997 32DC  
                                __end_of___lwmod 54DC                                            i2l444 3BB0  
                                          i2l439 3B3E                                            _RCREG 000FAE  
                                   ?_gps_minutos 000A                                            _RCSTA 000FAB  
                                          _SPBRG 000FAF                                            _TRISA 000F92  
                                          _TRISB 000F93                                            _TRISC 000F94  
                                          _TRISD 000F95                                            _TRISE 000F96  
                                __end_of_f_close 5858                                    trace_path@dir 0082  
                                          _TXSTA 000FAC                                            _FatFs 004D  
                                __end_of_f_lseek 0F7E                              ___lmul@multiplicand 000E  
                     __size_of_config_timer_dois 000E                                  __end_of_f_mount 5386  
                                ??_armazena_ltlo 0040                                  __end_of_f_write 05A8  
                     __size_of_config_timer_zero 001A                                            _Speed 5C36  
                                  get_cluster@bc 006F                                  __end_of_get_fix 5746  
                                  get_cluster@fs 0071                                    get_cluster@wc 0069  
                                __end_of_command 4FBE                                    ___awtoft@sign 001B  
                                          _delay 5ABC                                  clust2sect@clust 0016  
                                          _fence 00F5                                  __end_of_gps_dia 5A3A  
                                __end_of_gps_ano 5A5C                                  __end_of_gps_mes 5A18  
                                __end_of_fprintf 12CC                                            _fputc 551E  
                                          _fputs 506E                                  __end_of_isdigit 5AF8  
                       __size_of_escreve_cmd_lcd 008C                                    ___ftpack@sign 000E  
                                          atoi@a 0016                                            _teste 0174  
                                          atol@a 001F                                            atol@c 0023  
                                          atoi@s 0010                                            atol@s 0016  
                                          _ultoa 3EAA                                  __end_of_rawdata 5C22  
                                 ??_make_dirfile 0014                                  __end_of_rawhora 5C18  
                                 disk_ioctl@buff 000B                                            pclath 000FFA  
                                 disk_read@count 002F                                            tablat 000FF5  
                                 disk_ioctl@pdrv 000D                                 ?_dados_gps_to_sd 0001  
                                __end_of_proceed 5BF8                                            plusw1 000FE3  
                                          plusw2 000FDB                                            ttemp5 0057  
                                          ttemp6 005A                                            ttemp7 005E  
                                          utoa@c 0019                            longitude_to_convert@i 006C  
                          longitude_to_convert@j 006B                                            utoa@v 0017  
                                          status 000FD8                                    _troca_de_tela 1BFC  
                                          wtemp8 0057                            ??_latitude_to_convert 0042  
                                  disk_write@res 0034                                  __initialization 4362  
                                ??_get_longitude 000A                              disk_initialize@pdrv 002A  
                            disk_initialize@stat 002B                                     __end_of_atoi 3350  
                                   __end_of_atol 3994                                     __end_of_main 57A4  
                                   clust2sect@fs 001F                                     __end_of_itoa 5612  
                                   __end_of_ltoa 549A     verifica_dados_operacionais@contador_anterior 00F0  
                                   __end_of_utoa 455C                                     __end_of_sync 5212  
                             _inicializa_tarefas 5212                                  escalonador@cont 00E6  
                        get_rawspeed@index_speed 000A                                 get_gpstime@index 000A  
        convert_to_int_point_lat@convert_str_lat 0028                              reserve_direntry@dir 0087  
                              create_chain@clust 0078                                      auto_mount@p 0082  
                              create_chain@cstat 0080                                    sdc_reset@buff 001C  
                                         ??_atoi 0013                                           ??_atol 001A  
                                         ??_main 004D                                    ___fttol@sign1 0034  
                                         ??_itoa 0020                                           ??_ltoa 002A  
                                         ??_utoa 0017                                           ??_sync 004A  
                                  __activetblptr 000003                              ?_inicializa_tarefas 0001  
                           __end_of_desliga_uart 5B82                      ??_convert_to_int_point_long 0028  
                                         ?_Speed 000A                                   _next_dir_entry 3088  
                           __size_of_desliga_SPI 0010                                get_fattime@f_time 0038  
                               ??_sdc_disk_write 001D                                           ?_delay 0001  
                         ?_escreve_caractere_lcd 0001                                           _ADCON1 000FC1  
                                         ?_fputc 00A4                                 ___llmod@dividend 000A  
                                         ?_fputs 00AB                                   _convert_to_int 596E  
                             auto_mount@bootsect 007A                                 __end_of___awtoft 564A  
                               __end_of___ftpack 4362                                           ?_ultoa 0017  
                                         _INT0IE 007F94                                           _INT0IF 007F91  
                                  ?_dummy_clocks 0001                                   armazena_ltlo@i 0041  
                                 armazena_ltlo@j 0040                                           i2l1545 3E96  
                                         _PCLATH 000FFA                                           _INTCON 000FF2  
                                         i2l9900 3B84                                           i2l9880 3AFA  
                                         i2l9872 3AD8                                           i2l9890 3B4A  
                                         i2l9882 3B12                                           i2l9898 3B6C  
                      convert_to_int_point_lat@i 0034                        convert_to_int_point_lat@j 0033  
                        __size_of_inicializa_SPI 0020                                   ?_troca_de_tela 0001  
                                         _TMR0IF 007F92                               auto_mount@maxclust 0076  
                       __end_of_recebe_dado_uart 5B94                                           _SPPCFG 000F63  
                                         _SPPCON 000F65                                    ?_gps_segundos 000A  
                               _is_it_gga_string 0055                                           _SSPBUF 000FC9  
                       __size_of_sdc_disk_status 0010                                 __end_of_check_fs 49E2  
                           ??_inicializa_tarefas 000A                                ?_disparo_gravacao 0001  
                                 trace_path@dptr 0090                                   trace_path@path 0080  
                         reserve_direntry@sector 008C                         __size_of_disk_initialize 0026  
                             get_longitude@index 000B                       __end_of_posicao_cursor_lcd 4F08  
                             ??_disparo_gravacao 00DF                                   auto_mount@path 003D  
                                   ?_move_window 0035                             __end_of_create_chain 2F0C  
                                   _dado_arquivo 0242                           __size_of_init_hardware 0016  
                                 auto_mount@stat 0085                             __size_of_get_fattime 0154  
                                   put_cluster@p 0074                     ?_verifica_dados_operacionais 0001  
                           __size_of_get_cluster 0228                                           ___lmul 50C6  
                                      ??___aldiv 0012                             __size_of_disk_status 0030  
                                         ___wmul 5924                                        ??___lldiv 0012  
                                      ??___ftmul 0022                                           _f_open 12CC  
                                      ??___llmod 0012                                        ??___fttol 002F  
                                      ??___lwdiv 000E                                 __end_of_grava_sd 5B48  
                           __size_of_get_gpstime 002A                                           _f_sync 374A  
                                      ??___lwmod 000E                                           _buffer 0236  
                           __size_of_get_rawdate 0030                                 __end_of_latitude 5C36  
                               __end_of_gps_hora 596E                                           _estado 00F4  
                                         _memcmp 472E                                           _memcpy 5414  
                               __end_of_init_lcd 469A                                           _memset 5800  
                                      ??_f_close 004C                                           _rawFix 01EA  
                                         clear_0 43BC                                           clear_1 43CE  
                                         clear_2 43DA                                           clear_3 43E6  
                                         clear_4 43F2                                           clear_5 43FE  
                                      ??_f_lseek 008C                                        ??_f_mount 000C  
                       configura_baudrate_uart@x 0024                                        ??_f_write 008C  
                                      ??_get_fix 000A                                           _strcat 53CE  
                            _sdc_disk_initialize 1914                                        ??_command 0014  
                                         _strcpy 57A4                                           _strlen 54DC  
                          ___ftmul@f3_as_product 0026                                 put_cluster@clust 0060  
                                      ??_gps_dia 000C                                           fputc@c 00A8  
                             get_cluster@fatsect 006B                                 __end_of_monta_sd 1914  
                                      ??_gps_ano 000C                         __end_of_reserve_direntry 237C  
                                      ??_gps_mes 000C                                 __end_of_validate 53CE  
                         __end_of_next_dir_entry 31EE                                        ??_fprintf 00BB  
                                         fputs@n 00AF                                        ??_isdigit 000A  
                           __size_of_escalonador 00AA                             __end_of_get_latitude 533E  
                               __end_of_response 5BEC                                ??_recebe_dado_gps 000A  
                                      ??_rawdata 000C                                     __mediumconst 6106  
                                disk_read@sector 002B                                        ??_rawhora 000C  
                                disk_read@result 0032                                           tblptrh 000FF7  
                                         tblptrl 000FF6                                           tblptru 000FF8  
                         __end_of_convert_to_int 5990                                        ??_proceed 000C  
                               _write_timer_zero 5C04                                           ultoa@c 0022  
                                   ?_posicao_lat 0001                                           ultoa@v 001E  
                                         sync@fs 004A                        escreve_caractere_lcd@data 000C  
                                 ??_dummy_clocks 000A                             __end_of_get_rawspeed 56E6  
                            _escreve_inteiro_lcd 555E                                  sdc_disk_write@j 0026  
                                 ??_gps_segundos 000C                                       __accesstop 0060  
                        __end_of__initialization 4404                             ?_sdc_disk_initialize 0001  
                                 disk_write@buff 0029                                   disk_write@pdrv 0031  
                           __size_of_escreve_SPI 0010                                    ___rparam_used 000001  
                              ??_escreve_cmd_lcd 000C                     ?_verifica_plausibilidade_lat 0001  
                      _convert_to_int_point_long 4FBE                                       ___awtoft@c 0018  
                                     ___ftmul@f1 001C                                       ___ftmul@f2 001F  
                                     ___fttol@f1 002B                                   __pcstackCOMRAM 0001  
                                  __end_of_Speed 5C40                                  _tratamento_uart 3AAC  
                    __end_of_endereco_cursor_lcd 4D16                                     __pidataBANK0 5C66  
                                   __pidataBANK1 5BC4                                     __pidataBANK2 4D16  
                              ?_mensagem_inicial 0001                          _configura_baudrate_uart 3BBE  
                                  __end_of_delay 5ADA                                   _escrita_sdcard 35FE  
                                hora_nome@p_buff 000A                                    __end_of_fputc 555E  
                                  __end_of_fputs 50C6                             ?_escreve_inteiro_lcd 002B  
                  ??_verifica_dados_operacionais 003A                 __end_of_convert_to_int_point_lat 506E  
                             __size_of_data_nome 002A                                    __end_of_ultoa 3F92  
                                 diferenca@index 0035                               ??_mensagem_inicial 0010  
                           __end_of_make_dirfile 34AA                                     ?_put_cluster 0060  
                  __size_of_mostra_dados_display 002E                               __size_of_diferenca 00D2  
                              reserve_direntry@c 0093                                reserve_direntry@n 0090  
                               ??_verifica_fence 0043                          get_longitude@index_long 000A  
                             _tarefa_em_execucao 0052                       __end_ofi2_write_timer_zero 5C54  
                                ?_next_dir_entry 004C                                 get_rawdate@index 000B  
                         __size_of_sdc_disk_read 0118                  configura_baudrate_uart@baudrate 0018  
                           reserve_direntry@dptr 0091                             __size_of_leitura_SPI 000C  
                                  _init_hardware 5B48                                     auto_mount@fs 008A  
                             __size_of_disk_read 006E                                          ??_Speed 000C  
                                ?_convert_to_int 0024                       __end_of_verifica_recep_gps 58FE  
                           __size_of_gps_minutos 0022                                          ??_delay 000A  
                                 sdc_reset@count 001A                                       _dados_data 02C3  
                                        ??_fputc 004C                                          ??_fputs 004C  
                                     _dados_hora 02D5                                       _dados_long 027E  
                                ??_troca_de_tela 0036                                 _is_it_rmc_string 0054  
                                        ??_ultoa 001E                     mensagem_inicial@msg_linha_um 0012  
                                     __pbssBANK0 00E7                                       __pbssBANK1 0100  
                                     __pbssBANK2 0200                                       __pbssBANK3 0300  
                 __size_of_escreve_frase_ram_lcd 0052                    __end_of_escreve_frase_ram_lcd 51C0  
                          ??_sdc_disk_initialize 001D              verifica_plausibilidade_long@posicao 000A  
                             __size_of_hora_nome 002A                     __end_of_longitude_to_convert 4ADE  
                      escreve_inteiro_uart@F3215 01EC                                       _gga_buffer 0300  
                  ??_verifica_plausibilidade_lat 000A                           __end_of_escrita_sdcard 374A  
                             __size_of_sdc_reset 0090                               troca_de_tela@state 0050  
                                        ?___lmul 000A                                ??_sdc_disk_status 000A  
                                  make_dirfile@a 001A                                    make_dirfile@b 0018  
                                  make_dirfile@c 001C                                    make_dirfile@n 001B  
                                  make_dirfile@t 0019                                          ?___wmul 000A  
                          mensagem_inicial@F3687 6118                            mensagem_inicial@F3689 6107  
                          ??_escreve_inteiro_lcd 002F                                          ?_f_open 0098  
                                     _fence_flag 00E7                                          ?_f_sync 0060  
                             __size_of_longitude 000A                                ??_disk_initialize 002A  
                          __size_of_desliga_uart 0012                                          ?_memcmp 000A  
                                        ?_memcpy 000A                                          ?_memset 000A  
                                 ___lmul@product 0012                                        ?___awtoft 0018  
                                      ?___ftpack 000A                                          ?_strcat 000A  
                                        ?_strcpy 000C                                          ?_strlen 000A  
                                   _gga_pointers 0216                                          i2l10010 5B90  
                                        i2l10100 3E3C                                          i2l10120 3E82  
                                        i2l10112 3E64                                          i2l10122 3E8E  
                                        i2l10108 3E54                                          i2l10084 3DFC  
                                        i2l10096 3E0E                                          _INTCON2 000FF1  
                                        _INTCON3 000FF0                                   ?_init_hardware 0001  
                                      ?_check_fs 0035                                       _disk_ioctl 5A9C  
                                     _disk_write 5262                                   remove_chain@fs 007E  
           __size_of_verifica_dados_operacionais 017C                                          _SSPCON1 000FC6  
                       __size_of_inicializa_uart 0022                                          _SSPSTAT 000FC7  
                                     _clust2sect 4202                                   _inicializa_SPI 5A7C  
                                trace_path@clust 008D                                __end_of_data_nome 58D6  
                                      ?_grava_sd 0001                                        ?_latitude 000A  
                                  ?_remove_chain 0078                            __size_of_create_chain 0196  
                                      ?_gps_hora 000A                                        ?_init_lcd 0001  
                        __end_of_tratamento_uart 3BBE                                __end_of_diferenca 4136  
                                  _sdc_disk_read 3994                                     _desliga_uart 5B70  
                                     _auto_mount 05A8                                          __Hparam 0000  
                      ??_configura_baudrate_uart 001C                                          __Lparam 0000  
                                      ?_monta_sd 0010                                        ?_validate 0010  
                                ?_escrita_sdcard 0001                                __end_of_disk_read 4CAC  
                                  put_cluster@bc 0072                                        ?_response 0001  
                                  put_cluster@fs 0076                                          ___aldiv 4136  
                                     f_close@res 004C                                  __size_of___lmul 0056  
                                        ___lldiv 49E2                                  __size_of___wmul 0026  
                                        ___ftmul 3CC6                                          ___llmod 4D80  
                                        ___fttol 3F92                             __size_of_move_window 01AA  
                                     check_fs@fs 003B                                          ___lwdiv 511C  
                                        ___lwmod 549A                                  __size_of_f_open 033A  
                                __size_of_f_sync 0128                             __end_of_dummy_clocks 55D8  
                          __size_of_get_latitude 0048                                          _f_close 582C  
                                        __pcinit 4362                                  __size_of_memcmp 0092  
                                __size_of_memcpy 0044                                       ??___awtoft 001B  
                                     ??___ftpack 000F                                  __size_of_memset 002C  
                                        _f_lseek 0AF2                                       _init_ports 5AF8  
                                        __ramtop 0800                                          _f_mount 533E  
                                        __ptext0 5776                                          __ptext1 469A  
                                        __ptext2 45FC                                          __ptext3 5B48  
                                        __ptext4 5AF8                                          __ptext5 5C54  
                                        __ptext6 5B5E                                          __ptext7 5B14  
                                        __ptext8 5C04                                          __ptext9 5BD2  
                           __end_of_gps_segundos 59D4                                          _f_write 0012  
                                        _get_fix 5716                                          _command 4F64  
                                      _T0CONbits 000FD5                              auto_mount@totalsect 007E  
                                __size_of_strcat 0046                                  __size_of_strcpy 002E  
                                __size_of_strlen 0042                                       data_nome@i 000C  
                    endereco_cursor_lcd@endereco 000C                                __end_of_hora_nome 5882  
                                        _gps_dia 5A18                                          _gps_ano 5A3A  
                                        _gps_mes 59F6                                          _fprintf 0F7E  
                                   __size_of_fix 000A                                     __size_of_gps 0036  
                                        _rawDate 01E4                                          _isdigit 5ADA  
                                   __size_of_isr 3EA2             __size_of_verifica_plausibilidade_lat 0074  
                        ??_escreve_caractere_lcd 000C                                       ??_check_fs 0039  
                          __size_of_get_rawspeed 0030                                          _rawTime 01D1  
                               ___aldiv@dividend 000A                                          _rawdata 5C18  
                                        _rawhora 5C0E                                          _time_sd 016E  
                                   _create_chain 2D76                                          _proceed 5BEC  
                        __size_of_init_interrupt 0012                               _point_buff_gps_lat 016A  
                              __end_of_sdc_reset 4850                           __end_of_inicializa_SPI 5A9C  
                          __end_of_armazena_ltlo 4960                      __end_of_latitude_to_convert 4B58  
                                     f_lseek@ofs 0088                                   __pintcode_body 3DBA  
                                     f_lseek@res 009C                             end_of_initialization 4404  
                              __end_of_longitude 5C2C             __end_of_verifica_plausibilidade_long 4EAA  
          __size_of_verifica_plausibilidade_long 0060                     _verifica_plausibilidade_long 4E4A  
              __size_of_convert_to_int_point_lat 0058                             __size_of_posicao_lat 0006  
                                     f_open@mode 009C                                       f_open@path 009A  
                      ?_convert_to_int_point_lat 0024                                   ??_remove_chain 007A  
                                        isr@cont 0009                                          memcmp@n 000E  
                                     ??_grava_sd 004D                            get_rawdate@index_date 000A  
                                        memcpy@d 0011                                          memcpy@n 000E  
                                        memcpy@s 0013                          __size_of_init_oscilador 0008  
                                        fputc@bw 00A9                                          itoa@buf 001A  
                                     ??_latitude 000C                                          memset@c 000C  
                                        itoa@val 001C                                          memset@n 000E  
                                     ??_gps_hora 000C                                          memset@p 0010  
                                     ??_init_lcd 000D                                          int_func 3DBA  
                                     _rmc_buffer 0350                                ?_recebe_dado_uart 0001  
                                disk_status@pdrv 000E                                        i2u1117_40 3DEC  
                                      i2u1118_48 3DEE                                  disk_status@stat 000F  
                                 ?_sdc_disk_read 0016                                          ltoa@buf 0023  
                                        ltoa@val 0024                           write_timer_zero@timer0 000A  
                                ___lldiv@divisor 000E                                    _rawSatellites 015F  
                                     f_mount@drv 000C                               ??_recebe_dado_uart 0001  
                                   _get_latitude 52F6                                  ___lldiv@counter 0016  
                                     ??_monta_sd 0012                                       ??_validate 0014  
                          __size_of_make_dirfile 015A                         __size_of_dados_gps_to_sd 0064  
                                 _fence_diff_lat 6155                                       ??_response 000A  
                                      _RCSTAbits 000FAB                         __end_of_write_timer_zero 5C0E  
                               ___aldiv@quotient 0014                                          postdec1 000FE5  
                                        postdec2 000FDD                                          postinc0 000FEE  
                                        postinc1 000FE6                                          postinc2 000FDE  
                                _recebe_dado_gps 5A5C                            __end_of_get_longitude 52F6  
                                        utoa@buf 0011                                    ?_posicao_long 0001  
                                        utoa@val 0013                                       _wait_ready 5680  
                                   _get_rawspeed 56B6                                          strlen@s 000A  
                  longitude_to_convert@longitude 0060               __size_of_convert_to_int_point_long 0058  
                                      _PORTBbits 000F81                        __size_of_disparo_gravacao 021A  
                                      _PORTDbits 000F83                                        _PORTEbits 000F84  
                                ??_init_hardware 000C                                       _trace_path 1E82  
                             _posicao_cursor_lcd 4EAA                                    ??_desliga_SPI 000A  
                           __size_of_put_cluster 026C                  __end_of_configura_baudrate_uart 3CC6  
                                    ?_disk_ioctl 000A                             _longitude_to_convert 4A64  
                              ?_reserve_direntry 0086                                       f_write@btw 0089  
                                     f_write@res 0098                                        _TRISBbits 000F93  
                                    ?_disk_write 0029                                        _TRISCbits 000F94  
                                      _TRISDbits 000F95                                 next_dir_entry@dj 004C  
      verifica_dados_operacionais@contador_atual 0051                                  _escreve_cmd_lcd 4850  
                             ??_reserve_direntry 0088                              ?_posicao_cursor_lcd 000D  
                                ?_inicializa_SPI 0001                                  disk_write@count 002F  
                               get_fix@index_fix 000A                                      ?_clust2sect 0016  
                               _put_cluster$1623 006A                                 _put_cluster$1624 006C  
                                     command@CMD 0014                                       command@CRC 0013  
                                     command@arg 000F                                     _make_dirfile 3350  
                  ?_verifica_plausibilidade_long 0001                                    ??_get_fattime 0012  
                               ?_tratamento_uart 0001                                ??_inicializa_uart 0026  
                    __size_of_inicializa_tarefas 0050                                    ??_get_cluster 0060  
                         __end_of_fence_diff_lat 617D                                    ??_disk_status 000C  
                                    ?_auto_mount 003D                                    ??_get_gpstime 000A  
                              _make_dirfile$1733 0016                                      ___ftmul@exp 0025  
                                  ??_get_rawdate 000A                                  command@argument 0015  
                             diferenca@valor_lat 0036                             ??_posicao_cursor_lcd 000E  
                                 ??_posicao_long 000A                                   __end_of___lmul 511C  
                                 _temp_buff_long 0164                                 ??_next_dir_entry 0073  
                                 __end_of___wmul 594A                                   __end_of_f_open 1606  
                                  ??_escalonador 00E4                                      ?_init_ports 0001  
                                 __end_of_f_sync 3872                                 ??_convert_to_int 0028  
                                 __end_of_memcmp 47C0                                   __end_of_memcpy 5458  
                                 __end_of_memset 582C                __end_of_convert_to_int_point_long 5016  
                          ?_longitude_to_convert 0001                                   __end_of_strcat 5414  
                                 __end_of_strcpy 57D2                                   __end_of_strlen 551E  
                               _time_atualizacao 00EA                              start_initialization 4362  
                                    __end_of_fix 5C4A                                      __end_of_gps 5680  
                                    __end_of_isr 3EAA                        __size_of_mensagem_inicial 0094  
                      disparo_gravacao@index_max 02F7                               reserve_direntry@dj 0086  
                             reserve_direntry@fs 0096                              __end_of_desliga_SPI 5BC4  
                                  ??_escreve_SPI 000A                     __end_of_mostra_dados_display 5800  
                                _sdc_disk_status 5B94                                  ??_sdc_disk_read 001D  
                              auto_mount@fatsize 0086                               i2_write_timer_zero 5C4A  
                                ___llmod@divisor 000E                                  data_nome@p_buff 000A  
                                _disk_initialize 58FE                                  ___llmod@counter 0012  
                        __end_of_recebe_dado_gps 5A7C                               _verifica_recep_gps 58D6  
                          reserve_direntry@clust 0094                          __size_of_sdc_disk_write 01A2  
                               _data_uart_recebe 00F3                                wait_ready@timeout 000A  
                          __size_of_dummy_clocks 003C                                    auto_mount@fmt 0084  
                            __size_of_disk_ioctl 0020                              ?i2_write_timer_zero 0001  
                                     hora_nome@i 000C                              __size_of_disk_write 004C  
                                       ??___lmul 0012                            __size_of_gps_segundos 0022  
                                     fprintf@fil 00B1                                       fprintf@arp 00D9  
                                       ??___wmul 000E                                       fprintf@res 00CD  
                                     fprintf@val 00D5                                       fprintf@str 00B3  
                            __end_of_get_fattime 35FE                                         ??_f_open 009D  
                            ?_verifica_recep_gps 0001                                         ??_f_sync 004C  
                                    ?_wait_ready 0001                                      __pdataBANK0 00FF  
                                    __pdataBANK1 01EC                                      __pdataBANK2 027E  
                            __end_of_get_cluster 2810                  verifica_dados_operacionais@dado 0121  
                                       ??_memcmp 0010                              __end_of_disk_status 5776  
                                       ??_memcpy 0010                              __size_of_clust2sect 00B2  
                                       ??_memset 0010                              __end_of_get_gpstime 58AC  
                         sdc_disk_read@start_add 0022                             __end_of_remove_chain 45FC  
                              ??_dados_gps_to_sd 0015                              __end_of_get_rawdate 5716  
                        sdc_disk_initialize@buff 0029                                    ??_leitura_SPI 000A  
                        __end_of_escreve_cmd_lcd 48DC                                         ??_strcat 000E  
                                       ??_strcpy 0010                                         ??_strlen 000C  
                        sdc_disk_initialize@stat 0020                                      ?_trace_path 007E  
                                  ??_gps_minutos 000C                                     _fprintf$2226 00CF  
                   __size_of_endereco_cursor_lcd 006A                                __size_of___awtoft 0038  
                              __size_of___ftpack 00AE                                      __pbssBIGRAM 0396  
                                  monta_sd@index 0013                                      __pbssCOMRAM 004D  
                                _trace_path$1780 0087                                  _trace_path$1782 0089  
                                  __pcstackBANK0 0060                                    __pcstackBANK2 02E7  
                                 _init_interrupt 5B5E                              __size_of_auto_mount 054A  
                           ??i2_write_timer_zero 0003                              __end_of_escalonador 44B8  
                    __end_of_sdc_disk_initialize 1BFC                                __size_of_check_fs 0082  
                                   _isdigit$3275 000B                                     check_fs@sect 0035  
                                    _char_number 00FE                             ??_verifica_recep_gps 000A  
                                   _dummy_clocks 559C                                   _init_oscilador 5C54  
                          __end_of_troca_de_tela 1E82                                 ??_escrita_sdcard 004D  
                                      _dados_lat 02A2                              __size_of_init_ports 001C  
                                      _dados_vel 0127                                     _gps_segundos 59B2  
                          _escreve_frase_ram_lcd 516E                                __size_of_grava_sd 001A  
                                      _data_buff 017A                                        _data_hoje 00F6  
                    __end_of_escreve_inteiro_lcd 559C                                        _data_nome 58AC  
                            __end_of_escreve_SPI 5BB4                                __size_of_latitude 000A  
                              __size_of_gps_hora 0024                                __size_of_init_lcd 009E  
                               ___lwdiv@dividend 000A                                delay@contador_int 000B  
                              delay@contador_ext 000A                                        _gga_index 00EE  
                 ??_verifica_plausibilidade_long 000A              __end_of_verifica_dados_operacionais 3088  
                    _verifica_dados_operacionais 2F0C                                        _diferenca 4064  
                                      __pintcode 0008                                    __pmediumconst 6106  
                                       ?___aldiv 000A                             latitude_to_convert@i 006A  
                           latitude_to_convert@j 0069                                        __ptext100 5746  
                                      __ptext101 5B94                                        __ptext110 4F64  
                                      __ptext102 51C0                                        __ptext111 5680  
                                      __ptext103 2A2A                                        __ptext120 594A  
                                      __ptext112 5BA4                                        __ptext104 5262  
                                      __ptext121 5A18                                        __ptext113 559C  
                                      __ptext105 2BD4                          troca_de_tela@fix_signal 0037  
                                      __ptext130 5ADA                                        __ptext122 5A3A  
                                      __ptext114 5BF8                                        __ptext106 4C3E  
                                      __ptext131 5924                                        __ptext123 58AC  
                                      __ptext115 5A9C                                        __ptext107 3994  
                                      __ptext124 5B70                                        __ptext116 34AA  
                                      __ptext108 5BE0                                        __ptext133 5C4A  
                                      __ptext125 5BB4                                        __ptext117 59B2  
                                      __ptext109 5BEC                                        __ptext134 3AAC  
                                      __ptext126 4DE6                                        __ptext118 59D4  
                                      __ptext135 5B82                                        __ptext127 1606  
                                      __ptext119 59F6                                        __ptext136 0000  
                                      __ptext128 54DC                                        __ptext129 31EE  
                              __size_of_monta_sd 030E                                         ?___lldiv 000A  
                                       ?___ftmul 001C                                         ?___llmod 000A  
                              __size_of_validate 0048                                         ?___fttol 002B  
                                       ?___lwdiv 000A                                         ?___lwmod 000A  
                              __size_of_response 000C                                         ?_f_close 0069  
                                      _disk_read 4C3E                               _sinaliza_int_timer 00F2  
                                       ?_f_lseek 0086                                         ?_f_mount 000A  
                               _disparo_gravacao 2810                                         ?_f_write 0086  
                         ??_longitude_to_convert 0042                                         ?_get_fix 0001  
                                       ?_command 000F                           __end_of_init_interrupt 5B70  
                                       ?_gps_dia 000A                                         ?_gps_ano 000A  
                                       ?_gps_mes 000A                                         ?_fprintf 00B1  
                                       ?_isdigit 0001                                      _desliga_SPI 5BB4  
                            sdc_disk_read@p_buff 0016                          troca_de_tela@last_state 004F  
                            sdc_disk_read@length 0026                                         ?_rawdata 000A  
                            sdc_disk_read@sector 0018                                         ?_rawhora 000A  
                        __end_of_sdc_disk_status 5BA4                   __size_of_escreve_caractere_lcd 0072  
                                 __size_of_Speed 000A                    __end_of_escreve_caractere_lcd 4C3E  
                                       ?_proceed 0001                                        f_close@fp 0069  
                            __end_of_leitura_SPI 5C04                                        _hora_nome 5858  
                               ___lwdiv@quotient 000F                                   __size_of_delay 001E  
                        __end_of_disk_initialize 5924                           __end_of_init_oscilador 5C5C  
                            __end_of_gps_minutos 59F6                                   __size_of_fputc 0040  
                                 __size_of_fputs 0058                              make_dirfile@dirname 0013  
                                     validate@id 0012                                       validate@fs 0010  
                           __end_of_posicao_long 5C66                                        _p_tarefas 0139  
                                 __size_of_ultoa 00E8                          __size_of_verifica_fence 005C  
                                      _rawCourse 013F                                 make_dirfile@path 0012  
                                       _GPGGA_ok 0176                                        _sdc_reset 47C0  
                            __size_of_wait_ready 0036                                  ___aldiv@divisor 000E  
                    latitude_to_convert@latitude 0060                                  ___aldiv@counter 0012  
                                 ___wmul@product 000E                                         _LATBbits 000F8A  
                                      f_lseek@fp 0086                                         _LATCbits 000F8B  
            __end_of_verifica_plausibilidade_lat 4BCC                      _verifica_plausibilidade_lat 4B58  
                                       _GPRMC_ok 0178                                        f_open@dir 00B4  
                                      f_open@res 00B3                                        _longitude 5C22  
                                       _PIE1bits 000F9D                                      _get_fattime 34AA  
                                   _rawLongitude 01A5                                 ?_recebe_dado_gps 0001  
                                     ?_data_nome 000A                              __size_of_trace_path 0280  
                                      _rmc_index 00EC                                      _get_cluster 25E8  
                                    _disk_status 5746                                    ??_move_window 0039  
                                      f_mount@fs 000A                                         _PIR1bits 000F9E  
                                    _get_gpstime 5882                                       ?_diferenca 0001  
                                  move_window@fs 0048                                      _get_rawdate 56E6  
             verifica_plausibilidade_lat@posicao 000A      verifica_dados_operacionais@velocidade_atual 0166  
    verifica_dados_operacionais@velocidade_media 0155                                ?_write_timer_zero 000A  
                                remove_chain@nxt 007C                                        f_sync@dir 0067  
                                      f_sync@res 0066                                        f_sync@tim 0062  
                       posicao_cursor_lcd@coluna 000D                                       ?_disk_read 0029  
                             ??_write_timer_zero 000C                                        f_write@cc 009E  
                     posicao_cursor_lcd@endereco 000F                                        f_write@bw 008B  
                                      f_write@fp 0086                             _mostra_dados_display 57D2  
                      __size_of_recebe_dado_uart 0012                                      _escalonador 440E  
                              ___wmul@multiplier 000A                                 ?_escreve_cmd_lcd 0001  
                    escreve_frase_ram_lcd@buffer 000D                                 ??_inicializa_SPI 000A  
                                ?_init_interrupt 0001                                     ??_disk_ioctl 000D  
                                   ??_disk_write 0030                              armazena_ltlo@buffer 003E  
                                   f_lseek@clust 00A5                                  _inicializa_uart 5990  
                                   f_lseek@csize 00A1                                     f_lseek@ifptr 009D  
                               _mensagem_inicial 469A                                    ??_posicao_lat 000A  
                                     ?_hora_nome 000A                                    _temp_buff_lat 0162  
                                ?_init_oscilador 0001                                     ??_clust2sect 001A  
                              ___lmul@multiplier 000A                                        copy_data0 4376  
                                      copy_data1 4396                           recebe_dado_gps@timeout 000B  
                                    _escreve_SPI 5BA4                                    _flag_anomalia 00F1  
                                     ?_sdc_reset 0001                              sdc_reset@count_nosd 0018  
                       ?_configura_baudrate_uart 0018                           ?_escreve_frase_ram_lcd 000D  
                                     ?_longitude 000A                                 auto_mount@chk_wp 003E  
                              move_window@sector 0035                                   _sdc_disk_write 2BD4  
                      __size_of_reserve_direntry 027A                     __size_of_latitude_to_convert 007A  
                       escreve_inteiro_lcd@F3223 01F3                                     ??_auto_mount 0060  
                                       __Hrparam 0000                                        memcpy@tmp 0010  
                                       __Lrparam 0000                                        fprintf@cc 00DA  
                             __end_of_disk_ioctl 5ABC                            __size_of_remove_chain 00A0  
                                 put_cluster@val 0062                                 get_cluster@clust 004A  
                             __end_of_disk_write 52AE                                     _SentenceType 00FD  
                               __size_of___aldiv 00CC                           sdc_disk_initialize@ocr 0026  
                         __size_of_armazena_ltlo 0084                                     monta_sd@dado 0010  
                               __size_of___lldiv 0082                                 __size_of___ftmul 00F4  
                               __size_of___llmod 0066                                 __size_of___fttol 00D2  
                                  ??_put_cluster 0064                                 __size_of___lwdiv 0052  
                               __size_of___lwmod 0042                            ?_mostra_dados_display 0001  
                                   ??_init_ports 000A                              __end_of_move_window 2BD4  
                                       ___awtoft 5612                                         ___ftpack 42B4  
                             __end_of_clust2sect 42B4                         escreve_inteiro_lcd@valor 002B  
                               __size_of_f_close 002C                         escreve_inteiro_lcd@texto 002F  
                               __size_of_f_lseek 048C                                 __size_of_f_mount 0048  
                                    _leitura_SPI 5BF8                       disparo_gravacao@velocidade 02E7  
                               __size_of_f_write 0596                                 __size_of_get_fix 0030  
                                    _gps_minutos 59D4                                 __size_of_command 005A  
                          __end_of_init_hardware 5B5E                                         _check_fs 4960  
                                     strcat@from 000C                                 __size_of_gps_dia 0022  
                               __size_of_gps_ano 0022                                 __size_of_gps_mes 0022  
                               __size_of_fprintf 034E                                 __size_of_isdigit 001E  
                                       _gga_code 015C                                  ___lwdiv@divisor 000C  
                               ?_sdc_disk_status 0001                                    _time_recovery 016C  
                       _convert_to_int_point_lat 5016                                 __size_of_rawdata 000A  
                                ___lwdiv@counter 000E                               __end_of_auto_mount 0AF2  
                                       __ptext10 5212                                 __size_of_rawhora 000A  
                                       __ptext11 440E                                         __ptext20 3F92  
                                       __ptext12 1BFC                                         __ptext21 3CC6  
                                       __ptext13 2810                                         __ptext30 4F08  
                                       __ptext22 5612                                         __ptext14 2F0C  
                                       __ptext31 4E4A                                         __ptext23 42B4  
                                       __ptext15 57A4                                         __ptext40 4064  
                                       __ptext32 5C62                                         __ptext24 5C36  
                                       __ptext16 5C0E                                         __ptext41 4FBE  
                                       __ptext33 4B58                                         __ptext25 57D2  
                                       __ptext17 5C18                                         __ptext50 5990  
                                       __ptext42 5016                                         __ptext34 5C5C  
                                       __ptext26 555E                                         __ptext18 5C22  
                                       __ptext51 3BBE                                         __ptext43 596E  
                                       __ptext35 5A5C                                         __ptext27 5458  
                                       __ptext19 5C2C                                         __ptext60 52AE  
                                       __ptext52 4136                                         __ptext44 3872  
                                       __ptext36 58D6                                         __ptext28 3EAA  
                                       __ptext61 52F6                                         __ptext53 5A7C  
                                       __ptext45 55D8                                         __ptext37 4A64  
                                       __ptext29 4850                                         __ptext70 12CC  
                                       __ptext62 5882                                         __ptext54 35FE  
                                       __ptext46 44B8                                         __ptext38 4ADE  
                                       __ptext71 1E82                                         __ptext63 5716  
                                       __ptext55 53CE                                         __ptext47 549A  
                                       __ptext39 48DC                                         __ptext80 58FE  
                                       __ptext72 3350                                         __ptext64 5C40  
                                       __ptext56 5858                                         __ptext48 511C  
                                       __ptext81 1914                                         __ptext73 2102  
                                       __ptext65 0F7E                                         __ptext57 564A  
                                       __ptext49 5B2E                                         __ptext90 50C6  
                                       __ptext82 47C0                                         __ptext74 3088  
                                       __ptext66 506E                                         __ptext58 56B6  
                                       __ptext91 533E                                         __ptext83 4EAA  
                                       __ptext75 4202                                         __ptext67 551E  
                                       __ptext59 56E6                                         __ptext92 0AF2  
                                       __ptext84 4CAC                                         __ptext76 455C  
                                       __ptext68 0012                                         __ptext93 2D76  
                                       __ptext85 516E                                         __ptext77 5414  
                                       __ptext69 4D80                                         __ptext94 237C  
                                       __ptext86 4BCC                                         __ptext78 05A8  
                                       __ptext95 25E8                                         __ptext87 5ABC  
                                       __ptext79 5800                                         __ptext96 49E2  
                                       __ptext88 4960                                         __ptext97 582C  
                                       __ptext89 472E                                         __ptext98 374A  
                                       __ptext99 5386                                 __size_of_proceed 000C  
                                       _filename 0256                                      _rawAltitude 011A  
                               ?_disk_initialize 0001                                   _timeout_tarefa 0170  
                                   _rmc_pointers 022A                               sdc_disk_read@count 001C  
                         __size_of_get_longitude 0048                                       strcpy@from 000E  
                            escrita_sdcard@f_fix 0053                       __end_of_inicializa_tarefas 5262  
                       i2write_timer_zero@timer0 0001                                         _grava_sd 5B2E  
                         __end_of_sdc_disk_write 2D76                                        monta_sd@i 0014  
                                       _gps_flag 014B                                         _latitude 5C2C  
                                       _gps_hora 594A                                      _rawLatitude 01BE  
                                       _init_lcd 45FC                                    __size_of_atoi 0162  
                                  __size_of_atol 0122                                    __size_of_main 002E  
                                   _remove_chain 455C                                    __size_of_itoa 003A  
                                  __size_of_ltoa 0042                              __end_of_posicao_lat 5C62  
                                  __size_of_utoa 00A4                                    __size_of_sync 0052  
                            _endereco_cursor_lcd 4CAC                               __end_of_init_ports 5B14  
                                       _rawSpeed 026A                                      ??_data_nome 000C  
                              _comma_counter_gga 00F9                                    dummy_clocks@i 000D  
                                       f_open@dj 00B6                                    dummy_clocks@n 000C  
                                       f_open@fn 00A1                                         f_open@fp 0098  
                                       f_open@dw 00AF                                         f_open@rs 00AD  
                              _comma_counter_rmc 00F8                                  _dados_gps_to_sd 4DE6  
                                       _rmc_code 0159                                         _monta_sd 1606  
                                       _validate 5386                                      ??_diferenca 0035  
                                       _sentence 0145                                     move_window@n 0043  
                                       _response 5BE0                                         f_sync@fp 0060  
                            _point_buff_gps_long 0168                      __size_of_posicao_cursor_lcd 005E  
                                       int$flags 0056                          posicao_cursor_lcd@linha 000E  
                                       atoi@sign 0015                         __size_of_tratamento_uart 0112  
                                       atol@sign 001E                                     ??_wait_ready 000A  
                                    ??_disk_read 0030                               armazena_ltlo@index 003F  
                        __end_of_inicializa_uart 59B2                             convert_to_int@p_buff 0024  
                                   ??_trace_path 0083                             ?_endereco_cursor_lcd 0001  
                             put_cluster@fatsect 006E                                       _INTCONbits 000FF2  
                          __size_of_posicao_long 0004                       ?_convert_to_int_point_long 0024  
                                       memcmp@s1 000A                                         memcmp@s2 000C  
                               move_window@wsect 0044                                         memcpy@d1 000A  
                                       memcpy@s1 000C                              __end_of_put_cluster 25E8  
                                       fprintf@c 00DE                                         fprintf@f 00D3  
                                       fprintf@i 00DC                                         fprintf@r 00D4  
                                       fprintf@s 00BD                                         fprintf@w 00D1  
                                       fputc@chr 00A4                                         itoa@base 001E  
                                       fputc@fil 00A6                                         isdigit@c 000C  
                                       memset@p1 000A                                      ??_hora_nome 000C  
                                      ultoa@base 001C                                _config_timer_dois 5BD2  
                                   _tempo_backup 0133                                         fputs@fil 00AD  
                                       fputs@str 00AB                                _config_timer_zero 5B14  
                                 _verifica_fence 4F08                                    _armazena_ltlo 48DC  
                                   _poligono_ext 0100                                    wait_ready@res 000E  
                                       intlevel2 0000                               ?_config_timer_dois 0001  
                       mensagem_inicial@msg_dois 0023                                      ??_sdc_reset 0016  
                                       ltoa@base 0028                               ?_config_timer_zero 0001  
                                   _tempo_tarefa 012D                                  ?_sdc_disk_write 0016  
verifica_dados_operacionais@velocidade_atual_int 0151                                 ___lwmod@dividend 000A  
                             __end_of_wait_ready 56B6                         __end_of_disparo_gravacao 2A2A  
                               ___lldiv@dividend 000A                                sdc_disk_read@buff 0028  
                          __end_of_sdc_disk_read 3AAC                                      ??_longitude 000C  
                            sdc_disk_status@pdrv 000B                                get_rawspeed@index 000B  
                                  ?_desliga_uart 0001                       recebe_dado_gps@flag_recebe 000A  
                            ??_config_timer_dois 000A                                       _OSCCONbits 000FD3  
                             __end_of_trace_path 2102                              ??_config_timer_zero 000C  
                                    _move_window 2A2A                                  _fence_diff_long 6129  
                              get_latitude@index 000B                           ??_mostra_dados_display 0010  
                                   _posicao_long 5C62                                    _get_longitude 52AE  
                           sdc_disk_write@count1 0023                             sdc_disk_write@p_buff 0016  
                               _recebe_dado_uart 5B82                                         utoa@base 0015  
                                       ultoa@buf 0017                             sdc_disk_write@sector 0018  
                          ??_endereco_cursor_lcd 000C                                         ultoa@val 0018  
                                   response@buff 000A                                         strcat@cp 000E  
                                       strcat@to 000A                                     ?_desliga_SPI 0001  
                               ___lldiv@quotient 0012                       convert_to_int_point_long@i 0033  
                     convert_to_int_point_long@j 0032                                  ___lwmod@divisor 000C  
                                       strcpy@cp 0010                                         strlen@cp 000C  
                                       strcpy@to 000C                                  ___lwmod@counter 000E  
                              remove_chain@clust 0078                        __end_of_config_timer_dois 5BE0  
                                   ___aldiv@sign 0013                                    ?_create_chain 0078  
                      __end_of_config_timer_zero 5B2E                           __end_of_verifica_fence 4F64  
                    __size_ofi2_write_timer_zero 000A                                      _SSPCON1bits 000FC6  
                        __size_of_next_dir_entry 0166                                      _posicao_lat 5C5C  
                         escreve_cmd_lcd@comando 000C                                   ?_armazena_ltlo 003E  
                            sdc_disk_write@count 001C                      __size_of_verifica_recep_gps 0028  
                        __size_of_convert_to_int 0022                    sdc_disk_initialize@crc_number 0023  
      convert_to_int_point_long@convert_str_long 0028                          __end_of_dados_gps_to_sd 4E4A  
                             sdc_disk_write@buff 0028                     __size_of_sdc_disk_initialize 02E8  
                                   f_write@clust 00A0                                   ??_desliga_uart 000A  
                             leitura_sdcard@size 00FF                                     f_write@wbuff 0099  
                                   ?_get_fattime 000E                                 _reserve_direntry 2102  
                        disparo_gravacao@fix_gps 02F3                                      f_write@buff 0088  
                              sdc_disk_write@res 0025                                    ?_get_latitude 0001  
                                   ?_get_cluster 004A                                      f_write@sect 009A  
                                    f_write@wcnt 00A2                                     ?_disk_status 0001  
                  __end_ofmensagem_inicial@F3687 6129                    __end_ofmensagem_inicial@F3689 6118  
                                escreve_SPI@dado 000B                                     ?_get_gpstime 0001  
                          disparo_gravacao@v_max 02F5  
